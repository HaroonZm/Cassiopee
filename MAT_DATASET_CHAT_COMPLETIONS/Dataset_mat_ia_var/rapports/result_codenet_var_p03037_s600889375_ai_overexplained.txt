================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:00:28
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    # Demande à l'utilisateur de saisir une seule ligne contenant deux entiers séparés par un espace
    # La fonction input() lit cette ligne depuis l'entrée standard (le clavier)
    # split() sépare la ligne en morceaux à chaque espace et retourne une liste de chaînes de caractères
    # map(int, ...) applique la fonction int à chaque élément de la liste ce qui convertit chaque chaîne de caractères en un nombre entier
    # Enfin, l'expression affecte ces deux entiers aux variables n et m
    n, m = map(int, input().split())

    # Initialise la variable left à 1
    # Cette variable représentera la borne gauche actuelle de l'intervalle d'intérêt, initialement le plus petit possible (1)
    left = 1

    # Initialise la variable right à n
    # Cette variable représentera la borne droite actuelle de l'intervalle d'intérêt, initialement le plus grand possible (n)
    right = n

    # Démarre une boucle qui s'exécutera exactement m fois
    # L'underscore '_' est une convention pour indiquer que nous n'utilisons pas la variable de boucle
    for _ in range(m):
        # À chaque itération, demande à l'utilisateur de saisir une ligne avec deux entiers séparés par un espace
        # Ces deux entiers sont left_i et right_i, représentant une contrainte sur la plage possible
        left_i, right_i = map(int, input().split())

        # Met à jour la valeur de left pour qu'elle soit la plus à droite possible entre sa valeur actuelle et left_i
        # max() retourne le plus grand des deux arguments
        # Ceci garantit que left représente la limite la plus restrictive à gauche imposée jusqu'à présent
        left = max(left, left_i)

        # Met à jour la valeur de right pour qu'elle soit la plus à gauche possible entre sa valeur actuelle et right_i
        # min() retourne le plus petit des deux arguments
        # Ceci garantit que right représente la limite la plus restrictive à droite imposée jusqu'à présent
        right = min(right, right_i)
    
    # Calcule la longueur de la plage valide résultante en soustrayant left à right puis en ajoutant 1
    # Cela correspond au nombre d'entiers sur l'intervalle fermé [left, right]
    # Si right < left, alors il n'y a aucun entier valide, donc on utilise max(0, ...) pour éviter une valeur négative
    result = max(0, right - left + 1)

    # Affiche le résultat à l'utilisateur
    print(result)

# Appelle la fonction principale main() pour démarrer l'exécution du programme
main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.2743290662765503
    2. '\n' → logprob: -1.7743290662765503
    3. '   ' → logprob: -3.52432918548584
    4. '(' → logprob: -4.39932918548584
    5. ' 
' → logprob: -5.14932918548584
    6. '    
' → logprob: -5.27432918548584
    7. ' ' → logprob: -5.52432918548584
    8. ''' → logprob: -5.64932918548584
    9. '    ' → logprob: -6.39932918548584
    10. '```' → logprob: -6.39932918548584

Token 4: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5843620896339417
    2. '   ' → logprob: -1.4593620300292969
    3. 'pass' → logprob: -2.209362030029297
    4. 'return' → logprob: -2.834362030029297
    5. '#' (adapté à ' #') → logprob: -4.209362030029297
    6. 'p' → logprob: -5.209362030029297
    7. '```' → logprob: -5.709362030029297
    8. 'r' → logprob: -5.709362030029297
    9. '\' → logprob: -5.959362030029297
    10. 'a' → logprob: -6.084362030029297

Token 5: ' Dem' (ID: 9458)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9502391219139099
    2. '   ' → logprob: -1.0752391815185547
    3. '#' → logprob: -1.8252391815185547
    4. ' pass' → logprob: -3.2002391815185547
    5. '    ' → logprob: -3.3252391815185547
    6. ' #' → logprob: -4.075239181518555
    7. '  ' → logprob: -5.200239181518555
    8. 'pass' → logprob: -5.325239181518555
    9. 'print' → logprob: -6.575239181518555
    10. '     ' → logprob: -6.825239181518555

Token 6: 'ande' (ID: 4102)
  Prédit: 'onstr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'onstr' → logprob: -0.16637742519378662
    2. 'o' → logprob: -2.416377544403076
    3. 'on' → logprob: -3.416377544403076
    4. 'and' → logprob: -4.041377544403076
    5. 'a' → logprob: -4.541377544403076
    6. '   ' → logprob: -6.916377544403076
    7. ' on' → logprob: -7.541377544403076
    8. '```' → logprob: -7.666377544403076
    9. 'ands' → logprob: -8.666377067565918
    10. 'p' → logprob: -9.166377067565918

Token 7: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09948462247848511
    2. '_' → logprob: -2.84948468208313
    3. '   ' → logprob: -4.599484443664551
    4. ' de' → logprob: -5.099484443664551
    5. ' a' → logprob: -5.599484443664551
    6. 's' → logprob: -6.099484443664551
    7. '(' → logprob: -6.349484443664551
    8. ' =' → logprob: -6.474484443664551
    9. '    ' → logprob: -6.474484443664551
    10. ''' → logprob: -6.599484443664551

Token 8: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0227776188403368
    2. '   ' → logprob: -4.647777557373047
    3. ' l' → logprob: -5.022777557373047
    4. 'user' → logprob: -6.272777557373047
    5. 'util' → logprob: -6.522777557373047
    6. 'v' → logprob: -8.147777557373047
    7. 'u' → logprob: -8.147777557373047
    8. ' user' → logprob: -8.272777557373047
    9. 's' → logprob: -8.647777557373047
    10. 't' → logprob: -8.647777557373047

Token 9: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.16746485233306885
    2. 'util' → logprob: -2.6674647331237793
    3. 'u' → logprob: -2.7924647331237793
    4. 'a' → logprob: -4.667464733123779
    5. ' utilisateur' → logprob: -5.167464733123779
    6. ''' → logprob: -5.792464733123779
    7. '’utilisateur' → logprob: -5.792464733123779
    8. ''util' → logprob: -6.917464733123779
    9. '   ' → logprob: -7.542464733123779
    10. '_util' → logprob: -8.792465209960938

Token 10: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.4295259714126587
    2. ''' → logprob: -1.6795259714126587
    3. ' d' → logprob: -1.6795259714126587
    4. '   ' → logprob: -1.8045259714126587
    5. ' ' → logprob: -2.054525852203369
    6. '"' → logprob: -3.304525852203369
    7. '  ' → logprob: -4.179525852203369
    8. '    ' → logprob: -4.429525852203369
    9. 'u' → logprob: -5.554525852203369
    10. ' )' → logprob: -5.804525852203369

Token 11: ' saisir' (ID: 152120)
  Prédit: ' saisir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' saisir' → logprob: -0.7481078505516052
    2. 's' → logprob: -0.9981078505516052
    3. ' input' → logprob: -2.37310791015625
    4. 'r' → logprob: -3.99810791015625
    5. 'input' → logprob: -4.24810791015625
    6. ' entrer' → logprob: -4.49810791015625
    7. ' ' → logprob: -5.49810791015625
    8. ' s' → logprob: -6.37310791015625
    9. ' rentrer' → logprob: -6.37310791015625
    10. 'print' → logprob: -6.49810791015625

Token 12: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.044564519077539444
    2. '   ' → logprob: -4.044564723968506
    3. ''' → logprob: -4.544564723968506
    4. '  ' → logprob: -5.919564723968506
    5. '_' → logprob: -6.294564723968506
    6. ' un' → logprob: -6.419564723968506
    7. 'l' → logprob: -6.419564723968506
    8. '    ' → logprob: -6.544564723968506
    9. ' a' → logprob: -6.919564723968506
    10. ' )' → logprob: -7.044564723968506

Token 13: ' seule' (ID: 41983)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03217547386884689
    2. ' chaîne' → logprob: -3.5321755409240723
    3. ' phrase' → logprob: -6.907175540924072
    4. ' chaine' → logprob: -7.157175540924072
    5. ' valeur' → logprob: -9.157175064086914
    6. '   ' → logprob: -9.282175064086914
    7. ' string' → logprob: -9.407175064086914
    8. 'chaine' → logprob: -9.782175064086914
    9. ' ligne' → logprob: -9.907175064086914
    10. '  ' → logprob: -10.032175064086914

Token 14: ' ligne' (ID: 19583)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05088333785533905
    2. ' ligne' → logprob: -3.8008832931518555
    3. ' chaîne' → logprob: -4.4258832931518555
    4. '   ' → logprob: -5.5508832931518555
    5. ' phrase' → logprob: -5.9258832931518555
    6. 'l' → logprob: -6.3008832931518555
    7. ' valeur' → logprob: -6.6758832931518555
    8. ' chaine' → logprob: -6.8008832931518555
    9. ' lettre' → logprob: -7.1758832931518555
    10. 'ligne' → logprob: -7.5508832931518555

Token 15: ' contenant' (ID: 131049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003465009620413184
    2. '\' → logprob: -6.628465175628662
    3. ' ' → logprob: -7.253465175628662
    4. ''' → logprob: -8.628464698791504
    5. 'n' → logprob: -8.878464698791504
    6. '       ' → logprob: -9.128464698791504
    7. '\n' → logprob: -9.128464698791504
    8. 'u' → logprob: -9.378464698791504
    9. '```' → logprob: -9.503464698791504
    10. '    ' → logprob: -9.503464698791504

Token 16: ' deux' (ID: 10301)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8020220398902893
    2. ' le' → logprob: -1.6770219802856445
    3. 'le' → logprob: -1.8020219802856445
    4. ' la' → logprob: -3.0520219802856445
    5. 'du' → logprob: -3.5520219802856445
    6. ' du' → logprob: -3.5520219802856445
    7. 'l' → logprob: -3.8020219802856445
    8. 's' → logprob: -4.5520219802856445
    9. 'texte' → logprob: -4.5520219802856445
    10. ' un' → logprob: -5.0520219802856445

Token 17: ' ent' (ID: 1121)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1464267075061798
    2. '_' → logprob: -3.1464266777038574
    3. 'es' → logprob: -3.8964266777038574
    4. ' espaces' → logprob: -4.146426677703857
    5. ' mots' → logprob: -4.646426677703857
    6. 'm' → logprob: -4.646426677703857
    7. '   ' → logprob: -5.146426677703857
    8. ''' → logprob: -5.646426677703857
    9. 's' → logprob: -5.771426677703857
    10. 'e' → logprob: -5.896426677703857

Token 18: 'iers' (ID: 11012)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.08212511241436005
    2. 'iers' → logprob: -3.457125186920166
    3. 's' → logprob: -3.582125186920166
    4. 'rs' → logprob: -4.707125186920166
    5. 't' → logprob: -5.582125186920166
    6. 'rés' → logprob: -6.082125186920166
    7. 'ré' → logprob: -6.707125186920166
    8. '```' → logprob: -6.832125186920166
    9. 'rès' → logprob: -7.957125186920166
    10. 'rée' → logprob: -8.207124710083008

Token 19: ' sépar' (ID: 97160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.051727037876844406
    2. ' ' → logprob: -3.801727056503296
    3. ',' → logprob: -4.676726818084717
    4. 'a' → logprob: -5.676726818084717
    5. 'n' → logprob: -5.926726818084717
    6. ''' → logprob: -6.051726818084717
    7. '\' → logprob: -6.051726818084717
    8. 's' → logprob: -6.676726818084717
    9. '    
' → logprob: -6.676726818084717
    10. '    ' → logprob: -7.301726818084717

Token 20: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.0013085714308544993
    2. 'é' → logprob: -6.751308441162109
    3. 'es' → logprob: -9.12630844116211
    4. 'ées' → logprob: -10.87630844116211
    5. 'ès' → logprob: -12.25130844116211
    6. 'ée' → logprob: -12.50130844116211
    7. '```' → logprob: -14.25130844116211
    8. 's' → logprob: -14.62630844116211
    9. 'ÉS' → logprob: -15.25130844116211
    10. 'er' → logprob: -16.12630844116211

Token 21: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.5572025179862976
    2. 'par' → logprob: -1.1822025775909424
    3. 'es' → logprob: -2.3072025775909424
    4. 'e' → logprob: -4.307202339172363
    5. ' by' → logprob: -6.307202339172363
    6. '_par' → logprob: -6.432202339172363
    7. ' ' → logprob: -7.057202339172363
    8. 'by' → logprob: -7.807202339172363
    9. 'és' → logprob: -8.057202339172363
    10. '```' → logprob: -8.057202339172363

Token 22: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.5497695803642273
    2. ' un' → logprob: -1.674769639968872
    3. ''un' → logprob: -2.299769639968872
    4. ''' → logprob: -2.424769639968872
    5. ' ' → logprob: -3.549769639968872
    6. 'space' → logprob: -5.424769401550293
    7. 'une' → logprob: -5.424769401550293
    8. ''espace' → logprob: -6.424769401550293
    9. ' ' → logprob: -6.799769401550293
    10. ''une' → logprob: -7.049769401550293

Token 23: ' espace' (ID: 66004)
  Prédit: ' espace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espace' → logprob: -0.43375691771507263
    2. ''espace' → logprob: -1.308756947517395
    3. 'e' → logprob: -3.1837568283081055
    4. 'es' → logprob: -3.8087568283081055
    5. ''esp' → logprob: -5.5587568283081055
    6. ' ' → logprob: -5.6837568283081055
    7. '’espace' → logprob: -5.8087568283081055
    8. ''' → logprob: -5.9337568283081055
    9. 'space' → logprob: -6.1837568283081055
    10. 'esp' → logprob: -6.4337568283081055

Token 24: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.037939805537462234
    2. '\n' → logprob: -3.5379397869110107
    3. 'n' → logprob: -6.28794002532959
    4. '\' → logprob: -6.41294002532959
    5. '    
' → logprob: -6.41294002532959
    6. '```' → logprob: -7.28794002532959
    7. ' ' → logprob: -7.78794002532959
    8. '`' → logprob: -8.28794002532959
    9. '   
' → logprob: -8.53794002532959
    10. 'input' → logprob: -8.78794002532959

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04427696019411087
    2. '    
' → logprob: -4.169277191162109
    3. 'n' → logprob: -4.669277191162109
    4. ' 
' → logprob: -5.294277191162109
    5. ' ' → logprob: -5.794277191162109
    6. '\n' → logprob: -6.294277191162109
    7. '   
' → logprob: -6.419277191162109
    8. 's' → logprob: -7.169277191162109
    9. 'input' → logprob: -7.544277191162109
    10. '    ' → logprob: -7.544277191162109

Token 26: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09697131812572479
    2. 'n' → logprob: -3.721971273422241
    3. 'user' → logprob: -3.721971273422241
    4. 'input' → logprob: -3.971971273422241
    5. 'x' → logprob: -4.59697151184082
    6. 's' → logprob: -5.97197151184082
    7. 'ent' → logprob: -6.47197151184082
    8. ' ' → logprob: -6.47197151184082
    9. ' user' → logprob: -6.59697151184082
    10. 'line' → logprob: -6.72197151184082

Token 27: ' La' (ID: 3038)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.046741008758545
    2. '   ' → logprob: -1.171741008758545
    3. 'line' → logprob: -2.296741008758545
    4. 'user' → logprob: -2.421741008758545
    5. ' line' → logprob: -3.421741008758545
    6. ' input' → logprob: -3.671741008758545
    7. 'ent' → logprob: -3.921741008758545
    8. 'inputs' → logprob: -4.171741008758545
    9. 'ligne' → logprob: -4.171741008758545
    10. ' user' → logprob: -4.546741008758545

Token 28: ' fonction' (ID: 17610)
  Prédit: ' ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.775071382522583
    2. 's' → logprob: -1.025071382522583
    3. 'ligne' → logprob: -2.525071382522583
    4. 'l' → logprob: -2.650071382522583
    5. ' suite' → logprob: -5.525071144104004
    6. ' sais' → logprob: -5.650071144104004
    7. '   ' → logprob: -5.775071144104004
    8. ' ' → logprob: -6.025071144104004
    9. ' line' → logprob: -6.150071144104004
    10. 'a' → logprob: -6.400071144104004

Token 29: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.49309125542640686
    2. 'input' → logprob: -1.6180912256240845
    3. ' return' → logprob: -2.368091344833374
    4. 'return' → logprob: -3.868091344833374
    5. 's' → logprob: -4.118091106414795
    6. ' s' → logprob: -4.618091106414795
    7. ' split' → logprob: -4.743091106414795
    8. '   ' → logprob: -4.743091106414795
    9. ' retourne' → logprob: -4.743091106414795
    10. 'split' → logprob: -4.868091106414795

Token 30: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03845304623246193
    2. '()' → logprob: -3.7884531021118164
    3. '('' → logprob: -4.663453102111816
    4. 's' → logprob: -6.288453102111816
    5. '("' → logprob: -6.663453102111816
    6. ' =' → logprob: -8.163453102111816
    7. ')' → logprob: -8.413453102111816
    8. ' (' → logprob: -8.413453102111816
    9. '("")' → logprob: -8.538453102111816
    10. ',' → logprob: -8.663453102111816

Token 31: ' lit' (ID: 11980)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.111153244972229
    2. 's' → logprob: -1.611153244972229
    3. ' s' → logprob: -2.3611531257629395
    4. ' )' → logprob: -2.8611531257629395
    5. ' est' → logprob: -3.1111531257629395
    6. ')' → logprob: -3.2361531257629395
    7. ' =' → logprob: -3.6111531257629395
    8. 'user' → logprob: -3.7361531257629395
    9. '   ' → logprob: -3.9861531257629395
    10. ' continue' → logprob: -4.4861531257629395

Token 32: ' cette' (ID: 7696)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.23833416402339935
    2. ' ' → logprob: -2.1133341789245605
    3. ' la' → logprob: -2.9883341789245605
    4. ' l' → logprob: -4.2383341789245605
    5. '   ' → logprob: -4.6133341789245605
    6. 'une' → logprob: -5.4883341789245605
    7. '    ' → logprob: -6.2383341789245605
    8. ' un' → logprob: -6.2383341789245605
    9. ' )' → logprob: -6.9883341789245605
    10. 's' → logprob: -7.1133341789245605

Token 33: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.2889083921909332
    2. ' ' → logprob: -1.5389083623886108
    3. ' chaîne' → logprob: -3.6639084815979004
    4. ' valeur' → logprob: -5.6639084815979
    5. 'ligne' → logprob: -6.5389084815979
    6. ' chaine' → logprob: -6.9139084815979
    7. ' entrée' → logprob: -7.2889084815979
    8. ' )' → logprob: -7.4139084815979
    9. ' line' → logprob: -7.5389084815979
    10. 'chaine' → logprob: -7.9139084815979

Token 34: ' depuis' (ID: 16277)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022382817696779966
    2. ' ' → logprob: -7.2522382736206055
    3. '    ' → logprob: -7.6272382736206055
    4. ',' → logprob: -8.377238273620605
    5. 's' → logprob: -8.877238273620605
    6. 'user' → logprob: -9.252238273620605
    7. '  ' → logprob: -9.252238273620605
    8. '    
' → logprob: -9.377238273620605
    9. '       ' → logprob: -9.877238273620605
    10. 'n' → logprob: -9.877238273620605

Token 35: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3761472702026367
    2. ' l' → logprob: -1.2511472702026367
    3. ' input' → logprob: -4.876147270202637
    4. ' standard' → logprob: -5.251147270202637
    5. ' stdin' → logprob: -5.751147270202637
    6. 'le' → logprob: -6.001147270202637
    7. ' le' → logprob: -6.501147270202637
    8. 'input' → logprob: -6.626147270202637
    9. ' la' → logprob: -6.876147270202637
    10. ' clavier' → logprob: -7.001147270202637

Token 36: ''entrée' (ID: 115820)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3699667751789093
    2. 'a' → logprob: -1.744966745376587
    3. ''entrée' → logprob: -2.619966745376587
    4. ''utilisateur' → logprob: -3.369966745376587
    5. 'e' → logprob: -4.494966983795166
    6. 'u' → logprob: -5.244966983795166
    7. 'input' → logprob: -5.619966983795166
    8. ''a' → logprob: -5.619966983795166
    9. ''ent' → logprob: -7.619966983795166
    10. '')' → logprob: -7.619966983795166

Token 37: ' standard' (ID: 7024)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2765232026576996
    2. ',' → logprob: -2.1515231132507324
    3. ')' → logprob: -3.5265231132507324
    4. 's' → logprob: -3.7765231132507324
    5. ' ' → logprob: -4.401523113250732
    6. ' )' → logprob: -4.776523113250732
    7. ' ,' → logprob: -5.026523113250732
    8. '    ' → logprob: -5.026523113250732
    9. 'x' → logprob: -5.401523113250732
    10. 'e' → logprob: -5.401523113250732

Token 38: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003039035713300109
    2. 'n' → logprob: -7.2530388832092285
    3. '    
' → logprob: -7.3780388832092285
    4. ' ' → logprob: -7.6280388832092285
    5. 'input' → logprob: -8.628039360046387
    6. '    ' → logprob: -8.753039360046387
    7. '  ' → logprob: -9.003039360046387
    8. 'user' → logprob: -9.128039360046387
    9. '\n' → logprob: -9.503039360046387
    10. 's' → logprob: -9.628039360046387

Token 39: 'le' (ID: 282)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021297095343470573
    2. ' )' → logprob: -4.521296977996826
    3. ' la' → logprob: -5.396296977996826
    4. ' une' → logprob: -6.271296977996826
    5. 'input' → logprob: -7.396296977996826
    6. '   ' → logprob: -7.646296977996826
    7. '')' → logprob: -7.896296977996826
    8. 'la' → logprob: -8.146297454833984
    9. 'une' → logprob: -8.146297454833984
    10. '):' → logprob: -8.521297454833984

Token 40: ' clavier' (ID: 187878)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26071587204933167
    2. ' )' → logprob: -2.385715961456299
    3. ' user' → logprob: -3.760715961456299
    4. ' ' → logprob: -4.010715961456299
    5. ' utilisateur' → logprob: -4.010715961456299
    6. ''utilisateur' → logprob: -4.510715961456299
    7. '')' → logprob: -4.635715961456299
    8. ' input' → logprob: -4.885715961456299
    9. ''' → logprob: -5.010715961456299
    10. 'user' → logprob: -5.385715961456299

Token 41: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001861880300566554
    2. '):' → logprob: -6.876862049102783
    3. ' )' → logprob: -7.501862049102783
    4. '`)' → logprob: -9.376861572265625
    5. '   ' → logprob: -10.001861572265625
    6. '")' → logprob: -10.626861572265625
    7. ')
' → logprob: -11.001861572265625
    8. '')' → logprob: -11.001861572265625
    9. 'e' → logprob: -11.251861572265625
    10. ')`' → logprob: -11.251861572265625

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016528061823919415
    2. 'n' → logprob: -7.251652717590332
    3. ' ' → logprob: -8.251652717590332
    4. '    
' → logprob: -8.751652717590332
    5. 'input' → logprob: -9.251652717590332
    6. '  ' → logprob: -9.751652717590332
    7. '```' → logprob: -9.751652717590332
    8. 'a' → logprob: -9.876652717590332
    9. '    ' → logprob: -9.876652717590332
    10. 's' → logprob: -10.501652717590332

Token 43: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03542439267039299
    2. 'n' → logprob: -4.53542423248291
    3. 's' → logprob: -5.41042423248291
    4. ' ' → logprob: -5.53542423248291
    5. '    ' → logprob: -5.78542423248291
    6. 'x' → logprob: -5.91042423248291
    7. '    
' → logprob: -6.16042423248291
    8. 'user' → logprob: -6.66042423248291
    9. 'input' → logprob: -7.03542423248291
    10. 'a' → logprob: -7.16042423248291

Token 44: ' split' (ID: 12648)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025695381686091423
    2. 'input' → logprob: -5.275695323944092
    3. 's' → logprob: -5.775695323944092
    4. 'line' → logprob: -6.025695323944092
    5. 'user' → logprob: -6.150695323944092
    6. ' ' → logprob: -6.150695323944092
    7. 'n' → logprob: -6.275695323944092
    8. 'ligne' → logprob: -6.400695323944092
    9. ' line' → logprob: -6.525695323944092
    10. 'ent' → logprob: -7.025695323944092

Token 45: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.013167881406843662
    2. '(' → logprob: -4.388167858123779
    3. '('' → logprob: -7.513167858123779
    4. ' ()' → logprob: -10.513168334960938
    5. '().' → logprob: -10.888168334960938
    6. '("' → logprob: -11.013168334960938
    7. '())' → logprob: -11.638168334960938
    8. '()]' → logprob: -12.138168334960938
    9. '()

' → logprob: -12.388168334960938
    10. '("("' → logprob: -12.388168334960938

Token 46: ' sé' (ID: 7462)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1008392870426178
    2. '(' → logprob: -2.475839376449585
    3. '('' → logprob: -4.850839138031006
    4. ')' → logprob: -6.100839138031006
    5. ' ()' → logprob: -7.850839138031006
    6. '("' → logprob: -8.475839614868164
    7. 'split' → logprob: -8.850839614868164
    8. ' )' → logprob: -9.225839614868164
    9. '(
' → logprob: -9.350839614868164
    10. ' (' → logprob: -9.350839614868164

Token 47: 'pare' (ID: 6900)
  Prédit: 'pare'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pare' → logprob: -0.00028290803311392665
    2. 'par' → logprob: -8.625283241271973
    3. 'parent' → logprob: -10.000283241271973
    4. 'parer' → logprob: -10.250283241271973
    5. 'para' → logprob: -12.125283241271973
    6. 'p' → logprob: -12.500283241271973
    7. 'pares' → logprob: -12.625283241271973
    8. 'pa' → logprob: -12.750283241271973
    9. 'paration' → logprob: -13.125283241271973
    10. 'paren' → logprob: -13.125283241271973

Token 48: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6761780977249146
    2. '('' → logprob: -0.8011780977249146
    3. '(' → logprob: -3.676177978515625
    4. ' la' → logprob: -5.426177978515625
    5. ' ' → logprob: -5.676177978515625
    6. ''' → logprob: -6.176177978515625
    7. 'the' → logprob: -6.301177978515625
    8. ' )' → logprob: -7.051177978515625
    9. '("' → logprob: -7.176177978515625
    10. ')' → logprob: -7.301177978515625

Token 49: ' ligne' (ID: 19583)
  Prédit: ' chaîne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.6147590279579163
    2. 'chaine' → logprob: -1.2397589683532715
    3. ' ' → logprob: -2.7397589683532715
    4. 'ligne' → logprob: -3.3647589683532715
    5. ' chaine' → logprob: -3.8647589683532715
    6. ' ligne' → logprob: -3.9897589683532715
    7. 'l' → logprob: -5.2397589683532715
    8. 'cha' → logprob: -5.4897589683532715
    9. ' string' → logprob: -5.6147589683532715
    10. 'string' → logprob: -5.6147589683532715

Token 50: ' en' (ID: 469)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7960634827613831
    2. '(' → logprob: -1.2960634231567383
    3. '[' → logprob: -2.6710634231567383
    4. ')' → logprob: -3.0460634231567383
    5. '   ' → logprob: -3.6710634231567383
    6. ' ' → logprob: -3.7960634231567383
    7. ' )' → logprob: -3.9210634231567383
    8. 'par' → logprob: -4.171063423156738
    9. '('' → logprob: -4.421063423156738
    10. ' par' → logprob: -4.921063423156738

Token 51: ' morceaux' (ID: 133321)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.8012248873710632
    2. 'une' → logprob: -1.926224946975708
    3. ' des' → logprob: -2.176224946975708
    4. ' tokens' → logprob: -2.551224946975708
    5. 'tokens' → logprob: -3.051224946975708
    6. ' espaces' → logprob: -3.301224946975708
    7. ' un' → logprob: -3.426224946975708
    8. 'un' → logprob: -3.801224946975708
    9. 'des' → logprob: -4.301224708557129
    10. '```' → logprob: -4.426224708557129

Token 52: ' à' (ID: 1221)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2538905143737793
    2. '   ' → logprob: -1.3788905143737793
    3. 'tokens' → logprob: -1.7538905143737793
    4. 's' → logprob: -2.6288905143737793
    5. '    
' → logprob: -3.0038905143737793
    6. 'n' → logprob: -3.8788905143737793
    7. ',' → logprob: -4.003890514373779
    8. ')' → logprob: -4.253890514373779
    9. ' ' → logprob: -4.503890514373779
    10. 'input' → logprob: -4.628890514373779

Token 53: ' chaque' (ID: 21194)
  Prédit: ' partir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' partir' → logprob: -0.2542175352573395
    2. ' l' → logprob: -3.0042176246643066
    3. ' chaque' → logprob: -3.0042176246643066
    4. 'l' → logprob: -3.6292176246643066
    5. 'au' → logprob: -4.254217624664307
    6. ' ' → logprob: -4.629217624664307
    7. 'a' → logprob: -4.754217624664307
    8. 's' → logprob: -4.879217624664307
    9. 'part' → logprob: -5.004217624664307
    10. '```' → logprob: -5.004217624664307

Token 54: ' espace' (ID: 66004)
  Prédit: ' espace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espace' → logprob: -0.2828838527202606
    2. ''espace' → logprob: -1.532883882522583
    3. 'es' → logprob: -4.407883644104004
    4. ''esp' → logprob: -4.782883644104004
    5. ' espaces' → logprob: -5.532883644104004
    6. ''' → logprob: -6.532883644104004
    7. ' ' → logprob: -6.657883644104004
    8. '’espace' → logprob: -6.782883644104004
    9. 'space' → logprob: -7.407883644104004
    10. 'esp' → logprob: -7.532883644104004

Token 55: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13532881438732147
    2. 'n' → logprob: -3.635328769683838
    3. 's' → logprob: -3.885328769683838
    4. '    
' → logprob: -4.010328769683838
    5. 'user' → logprob: -5.010328769683838
    6. 'tokens' → logprob: -5.010328769683838
    7. 'r' → logprob: -5.135328769683838
    8. ')' → logprob: -5.260328769683838
    9. ' ' → logprob: -5.760328769683838
    10. '[' → logprob: -5.760328769683838

Token 56: ' retourne' (ID: 178818)
  Prédit: ' retourne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' retourne' → logprob: -1.1670112609863281
    2. 'return' → logprob: -1.4170112609863281
    3. ' return' → logprob: -1.5420112609863281
    4. ' stock' → logprob: -2.917011260986328
    5. ' returns' → logprob: -3.292011260986328
    6. ' crée' → logprob: -3.667011260986328
    7. ' ren' → logprob: -3.667011260986328
    8. ' les' → logprob: -3.792011260986328
    9. ' récup' → logprob: -4.167011260986328
    10. 'ren' → logprob: -4.542011260986328

Token 57: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.23920874297618866
    2. '[' → logprob: -2.614208698272705
    3. 'une' → logprob: -2.614208698272705
    4. ' un' → logprob: -3.239208698272705
    5. '['' → logprob: -4.614208698272705
    6. ' ['' → logprob: -5.739208698272705
    7. 'un' → logprob: -5.864208698272705
    8. '[]' → logprob: -5.864208698272705
    9. ' [' → logprob: -6.614208698272705
    10. ' la' → logprob: -6.739208698272705

Token 58: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.5384534597396851
    2. 'list' → logprob: -1.163453459739685
    3. ' liste' → logprob: -2.4134535789489746
    4. ' list' → logprob: -5.163453578948975
    5. 's' → logprob: -5.538453578948975
    6. 'l' → logprob: -6.163453578948975
    7. '[' → logprob: -6.788453578948975
    8. ' ' → logprob: -7.788453578948975
    9. 'li' → logprob: -8.788453102111816
    10. '[]' → logprob: -8.913453102111816

Token 59: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17367075383663177
    2. '[' → logprob: -2.423670768737793
    3. 'n' → logprob: -3.423670768737793
    4. '    
' → logprob: -3.923670768737793
    5. '    ' → logprob: -6.298670768737793
    6. 's' → logprob: -6.423670768737793
    7. '_' → logprob: -6.548670768737793
    8. 'tokens' → logprob: -6.548670768737793
    9. ',' → logprob: -6.798670768737793
    10. 'e' → logprob: -6.923670768737793

Token 60: ' chaînes' (ID: 179904)
  Prédit: 'strings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strings' → logprob: -0.4913601577281952
    2. ' chaînes' → logprob: -1.6163601875305176
    3. 'str' → logprob: -1.8663601875305176
    4. 'cha' → logprob: -4.866360187530518
    5. 's' → logprob: -4.866360187530518
    6. 'chain' → logprob: -5.366360187530518
    7. 'chaine' → logprob: -5.616360187530518
    8. ' strings' → logprob: -5.616360187530518
    9. 'm' → logprob: -5.741360187530518
    10. 'tokens' → logprob: -5.991360187530518

Token 61: ' de' (ID: 334)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0985134840011597
    2. '   ' → logprob: -1.0985134840011597
    3. '[' → logprob: -1.3485134840011597
    4. '    
' → logprob: -4.598513603210449
    5. 's' → logprob: -4.723513603210449
    6. 'r' → logprob: -4.848513603210449
    7. ',' → logprob: -4.973513603210449
    8. '_' → logprob: -5.348513603210449
    9. ' ' → logprob: -5.348513603210449
    10. 'e' → logprob: -5.848513603210449

Token 62: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.02344893291592598
    2. ' caractères' → logprob: -3.773448944091797
    3. ' caracteres' → logprob: -9.523448944091797
    4. ' caract' → logprob: -9.523448944091797
    5. ' caractère' → logprob: -10.773448944091797
    6. ' car' → logprob: -11.148448944091797
    7. 'texte' → logprob: -12.273448944091797
    8. 'c' → logprob: -12.398448944091797
    9. 'char' → logprob: -12.523448944091797
    10. '	car' → logprob: -13.398448944091797

Token 63: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33040863275527954
    2. 'n' → logprob: -1.4554085731506348
    3. '    
' → logprob: -4.705408573150635
    4. 'r' → logprob: -4.830408573150635
    5. '[' → logprob: -5.330408573150635
    6. 's' → logprob: -5.830408573150635
    7. '```' → logprob: -6.080408573150635
    8. 'a' → logprob: -6.205408573150635
    9. '
' → logprob: -6.580408573150635
    10. 'x' → logprob: -6.580408573150635

Token 64: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10860411077737808
    2. 'n' → logprob: -2.4836041927337646
    3. 'r' → logprob: -5.6086039543151855
    4. '```' → logprob: -5.9836039543151855
    5. 'tokens' → logprob: -6.1086039543151855
    6. '    
' → logprob: -6.7336039543151855
    7. 's' → logprob: -6.8586039543151855
    8. '    ' → logprob: -6.9836039543151855
    9. 'x' → logprob: -6.9836039543151855
    10. '[' → logprob: -7.3586039543151855

Token 65: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24042190611362457
    2. 'n' → logprob: -2.115422010421753
    3. 'x' → logprob: -2.990422010421753
    4. 'a' → logprob: -4.490421772003174
    5. 't' → logprob: -5.490421772003174
    6. 'user' → logprob: -5.615421772003174
    7. 'v' → logprob: -5.740421772003174
    8. 'tokens' → logprob: -5.990421772003174
    9. '    ' → logprob: -6.365421772003174
    10. 'i' → logprob: -6.365421772003174

Token 66: ' map' (ID: 4014)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2721447944641113
    2. 'n' → logprob: -1.7721447944641113
    3. 'ent' → logprob: -2.2721447944641113
    4. 'x' → logprob: -2.5221447944641113
    5. 'a' → logprob: -2.6471447944641113
    6. 'l' → logprob: -2.7721447944641113
    7. ' parts' → logprob: -3.5221447944641113
    8. ' ent' → logprob: -3.8971447944641113
    9. 'numbers' → logprob: -3.8971447944641113
    10. 'tokens' → logprob: -4.022144794464111

Token 67: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0707816481590271
    2. '(int' → logprob: -2.695781707763672
    3. '(lambda' → logprob: -7.320781707763672
    4. '(str' → logprob: -8.945781707763672
    5. '(
' → logprob: -10.195781707763672
    6. '(float' → logprob: -11.945781707763672
    7. 'int' → logprob: -12.445781707763672
    8. '[int' → logprob: -13.945781707763672
    9. '(

' → logprob: -14.320781707763672
    10. '(list' → logprob: -14.445781707763672

Token 68: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03424524515867233
    2. ')' → logprob: -3.409245252609253
    3. ' ,' → logprob: -8.034245491027832
    4. '   ' → logprob: -9.284245491027832
    5. ',)' → logprob: -9.909245491027832
    6. ',input' → logprob: -10.159245491027832
    7. '(' → logprob: -10.659245491027832
    8. ' )' → logprob: -10.784245491027832
    9. ',
' → logprob: -11.784245491027832
    10. '),' → logprob: -12.034245491027832

Token 69: ' ...)' (ID: 100545)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6350418329238892
    2. 'input' → logprob: -0.8850418329238892
    3. ')' → logprob: -3.0100417137145996
    4. ' )' → logprob: -5.1350417137146
    5. 'split' → logprob: -6.8850417137146
    6. ' split' → logprob: -8.385042190551758
    7. 'user' → logprob: -9.135042190551758
    8. ' user' → logprob: -9.260042190551758
    9. 'spl' → logprob: -9.510042190551758
    10. 's' → logprob: -9.635042190551758

Token 70: ' applique' (ID: 180579)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23322616517543793
    2. ')' → logprob: -1.6082261800765991
    3. '()' → logprob: -6.358226299285889
    4. '(
' → logprob: -6.358226299285889
    5. '(input' → logprob: -6.858226299285889
    6. ' )' → logprob: -7.483226299285889
    7. ',' → logprob: -8.60822582244873
    8. 'def' → logprob: -8.73322582244873
    9. '(s' → logprob: -8.73322582244873
    10. '(convert' → logprob: -8.73322582244873

Token 71: ' la' (ID: 557)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.7786237001419067
    2. '(int' → logprob: -1.1536237001419067
    3. 'int' → logprob: -1.5286237001419067
    4. '(lambda' → logprob: -5.653623580932617
    5. '=int' → logprob: -6.528623580932617
    6. ' la' → logprob: -7.278623580932617
    7. '(' → logprob: -7.653623580932617
    8. '[int' → logprob: -7.778623580932617
    9. '<int' → logprob: -7.903623580932617
    10. ')' → logprob: -8.153623580932617

Token 72: ' fonction' (ID: 17610)
  Prédit: ' fonction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fonction' → logprob: -0.7683001756668091
    2. 'fonction' → logprob: -1.143300175666809
    3. ' int' → logprob: -2.1433000564575195
    4. 'int' → logprob: -2.6433000564575195
    5. ' function' → logprob: -4.2683000564575195
    6. ' conversion' → logprob: -5.1433000564575195
    7. ' lambda' → logprob: -6.0183000564575195
    8. ' split' → logprob: -6.3933000564575195
    9. 'fon' → logprob: -7.1433000564575195
    10. ' fon' → logprob: -7.5183000564575195

Token 73: ' int' (ID: 677)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.5277555584907532
    2. '(' → logprob: -0.9027555584907532
    3. 'int' → logprob: -6.1527557373046875
    4. ' int' → logprob: -7.0277557373046875
    5. '(lambda' → logprob: -7.0277557373046875
    6. '(str' → logprob: -8.152755737304688
    7. '=int' → logprob: -9.027755737304688
    8. '(
' → logprob: -9.402755737304688
    9. '()' → logprob: -9.777755737304688
    10. ')' → logprob: -10.152755737304688

Token 74: ' à' (ID: 1221)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07071755826473236
    2. '()' → logprob: -2.8207175731658936
    3. '(lambda' → logprob: -6.0707173347473145
    4. ')' → logprob: -6.4457173347473145
    5. '(aux' → logprob: -6.5707173347473145
    6. '(
' → logprob: -7.6957173347473145
    7. ' à' → logprob: -7.9457173347473145
    8. '(...)' → logprob: -8.320717811584473
    9. '```' → logprob: -8.320717811584473
    10. 'sur' → logprob: -8.445717811584473

Token 75: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.07783825695514679
    2. ' chacune' → logprob: -3.327838182449341
    3. ' each' → logprob: -3.702838182449341
    4. ' chacun' → logprob: -5.57783842086792
    5. ' la' → logprob: -5.82783842086792
    6. 'cha' → logprob: -6.07783842086792
    7. 'each' → logprob: -6.82783842086792
    8. 'l' → logprob: -7.07783842086792
    9. 'la' → logprob: -7.45283842086792
    10. 'Chaque' → logprob: -7.57783842086792

Token 76: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.001384997507557273
    2. ' élément' → logprob: -6.62638521194458
    3. 'él' → logprob: -10.626384735107422
    4. 'é' → logprob: -11.501384735107422
    5. 'element' → logprob: -11.751384735107422
    6. 'm' → logprob: -12.876384735107422
    7. 'chaine' → logprob: -13.001384735107422
    8. ' él' → logprob: -13.126384735107422
    9. ')' → logprob: -13.251384735107422
    10. ' morceau' → logprob: -13.376384735107422

Token 77: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.29329177737236023
    2. '(' → logprob: -1.5432918071746826
    3. '   ' → logprob: -4.2932915687561035
    4. '(
' → logprob: -5.4182915687561035
    5. ' de' → logprob: -5.5432915687561035
    6. ' )' → logprob: -5.6682915687561035
    7. '()' → logprob: -6.1682915687561035
    8. ' des' → logprob: -6.1682915687561035
    9. 'def' → logprob: -6.6682915687561035
    10. 's' → logprob: -6.9182915687561035

Token 78: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.16354550421237946
    2. ' la' → logprob: -2.038545608520508
    3. 'l' → logprob: -4.038545608520508
    4. ' cette' → logprob: -6.163545608520508
    5. ' l' → logprob: -7.288545608520508
    6. 'split' → logprob: -9.663545608520508
    7. ' input' → logprob: -10.288545608520508
    8. 's' → logprob: -10.413545608520508
    9. 'input' → logprob: -10.538545608520508
    10. 'c' → logprob: -10.788545608520508

Token 79: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.5903917551040649
    2. 'liste' → logprob: -0.8403917551040649
    3. 'input' → logprob: -5.590391635894775
    4. ' input' → logprob: -5.715391635894775
    5. 'list' → logprob: -5.965391635894775
    6. ' ligne' → logprob: -6.465391635894775
    7. 'split' → logprob: -7.215391635894775
    8. 'entrée' → logprob: -7.215391635894775
    9. 'ligne' → logprob: -7.715391635894775
    10. 'l' → logprob: -8.215392112731934

Token 80: ' ce' (ID: 2357)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0350661277770996
    2. '   ' → logprob: -1.7850661277770996
    3. 'a' → logprob: -2.4100661277770996
    4. ')' → logprob: -2.5350661277770996
    5. '    
' → logprob: -2.5350661277770996
    6. 'x' → logprob: -2.7850661277770996
    7. ',' → logprob: -3.4100661277770996
    8. '(' → logprob: -3.7850661277770996
    9. 'r' → logprob: -3.7850661277770996
    10. ' 
' → logprob: -4.1600661277771

Token 81: ' qui' (ID: 2780)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.545184850692749
    2. ' ' → logprob: -1.795184850692749
    3. 's' → logprob: -2.670184850692749
    4. 'tte' → logprob: -3.170184850692749
    5. ' qui' → logprob: -3.670184850692749
    6. 'pend' → logprob: -4.045185089111328
    7. 'st' → logprob: -4.170185089111328
    8. 'ci' → logprob: -4.420185089111328
    9. 'u' → logprob: -4.545185089111328
    10. 'rt' → logprob: -5.170185089111328

Token 82: ' convert' (ID: 8452)
  Prédit: ' convert'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convert' → logprob: -0.7787927985191345
    2. ' transforme' → logprob: -1.0287928581237793
    3. 'convert' → logprob: -2.4037928581237793
    4. ' permet' → logprob: -2.5287928581237793
    5. 'transform' → logprob: -5.403792858123779
    6. ' crée' → logprob: -6.153792858123779
    7. ' converts' → logprob: -6.528792858123779
    8. ' les' → logprob: -6.653792858123779
    9. 'per' → logprob: -6.778792858123779
    10. ' donne' → logprob: -7.278792858123779

Token 83: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.02605712227523327
    2. 't' → logprob: -3.901057004928589
    3. 'i' → logprob: -6.151057243347168
    4. ' it' → logprob: -6.776057243347168
    5. '   ' → logprob: -6.901057243347168
    6. ' ' → logprob: -8.276057243347168
    7. '  ' → logprob: -8.901057243347168
    8. '       ' → logprob: -9.026057243347168
    9. '```' → logprob: -9.151057243347168
    10. '     ' → logprob: -9.651057243347168

Token 84: ' chaque' (ID: 21194)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13726234436035156
    2. ')' → logprob: -3.1372623443603516
    3. ' ' → logprob: -3.8872623443603516
    4. ' les' → logprob: -4.137262344360352
    5. ' la' → logprob: -4.387262344360352
    6. ' (' → logprob: -5.012262344360352
    7. 'l' → logprob: -5.512262344360352
    8. ',' → logprob: -5.762262344360352
    9. '   ' → logprob: -5.887262344360352
    10. ' )' → logprob: -5.887262344360352

Token 85: ' chaîne' (ID: 89288)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.5595431327819824
    2. ' ' → logprob: -1.3095431327819824
    3. ')' → logprob: -2.4345431327819824
    4. ' )' → logprob: -3.4345431327819824
    5. ' élément' → logprob: -4.059543132781982
    6. '_' → logprob: -5.684543132781982
    7. ',' → logprob: -6.309543132781982
    8. 'm' → logprob: -6.309543132781982
    9. ' ,' → logprob: -6.809543132781982
    10. 'element' → logprob: -6.809543132781982

Token 86: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8219568729400635
    2. '(' → logprob: -1.5719568729400635
    3. ')' → logprob: -1.8219568729400635
    4. 's' → logprob: -2.5719568729400635
    5. ' des' → logprob: -3.9469568729400635
    6. ' (' → logprob: -3.9469568729400635
    7. ' ' → logprob: -4.196956634521484
    8. '[' → logprob: -4.571956634521484
    9. ' _' → logprob: -4.571956634521484
    10. ' )' → logprob: -4.571956634521484

Token 87: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.32901278138160706
    2. 'c' → logprob: -1.5790127515792847
    3. ' caractères' → logprob: -2.704012870788574
    4. ' caract' → logprob: -6.079012870788574
    5. ' c' → logprob: -6.704012870788574
    6. ' car' → logprob: -6.954012870788574
    7. ' ' → logprob: -7.329012870788574
    8. 's' → logprob: -7.704012870788574
    9. ' caracteres' → logprob: -7.829012870788574
    10. ''' → logprob: -8.079012870788574

Token 88: ' en' (ID: 469)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16608242690563202
    2. ' )' → logprob: -2.4160823822021484
    3. ' en' → logprob: -3.4160823822021484
    4. ',' → logprob: -5.166082382202148
    5. '   ' → logprob: -5.541082382202148
    6. 's' → logprob: -5.541082382202148
    7. 'en' → logprob: -5.666082382202148
    8. ' par' → logprob: -6.416082382202148
    9. ' ' → logprob: -6.541082382202148
    10. '),' → logprob: -6.916082382202148

Token 89: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.5255933403968811
    2. ' ent' → logprob: -2.0255932807922363
    3. ' des' → logprob: -2.4005932807922363
    4. ' int' → logprob: -2.6505932807922363
    5. ' nombre' → logprob: -3.1505932807922363
    6. ' entier' → logprob: -3.1505932807922363
    7. ' nombres' → logprob: -4.650593280792236
    8. ' ' → logprob: -5.150593280792236
    9. 'ent' → logprob: -5.525593280792236
    10. ' une' → logprob: -5.900593280792236

Token 90: ' nombre' (ID: 9733)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.5042214393615723
    2. ' entier' → logprob: -1.2542214393615723
    3. ' ' → logprob: -3.7542214393615723
    4. 'e' → logprob: -3.7542214393615723
    5. ' ent' → logprob: -3.8792214393615723
    6. 's' → logprob: -4.129221439361572
    7. 'es' → logprob: -4.379221439361572
    8. 'int' → logprob: -5.879221439361572
    9. ' int' → logprob: -6.129221439361572
    10. ' espace' → logprob: -6.254221439361572

Token 91: ' entier' (ID: 80473)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5939115285873413
    2. 'n' → logprob: -2.218911647796631
    3. '    
' → logprob: -2.718911647796631
    4. ')' → logprob: -2.718911647796631
    5. ',' → logprob: -2.843911647796631
    6. 'a' → logprob: -3.093911647796631
    7. 'r' → logprob: -3.718911647796631
    8. 'x' → logprob: -4.593911647796631
    9. '(' → logprob: -4.718911647796631
    10. '   
' → logprob: -4.718911647796631

Token 92: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8544619679450989
    2. '   ' → logprob: -1.354461908340454
    3. '    
' → logprob: -2.229461908340454
    4. 'a' → logprob: -2.729461908340454
    5. 'x' → logprob: -3.229461908340454
    6. '
' → logprob: -3.229461908340454
    7. '\n' → logprob: -4.104462146759033
    8. '   
' → logprob: -4.729462146759033
    9. 'r' → logprob: -4.854462146759033
    10. '  
' → logprob: -4.854462146759033

Token 93: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4410853981971741
    2. 'n' → logprob: -1.4410853385925293
    3. 'a' → logprob: -2.9410853385925293
    4. 'x' → logprob: -3.4410853385925293
    5. 'r' → logprob: -4.316085338592529
    6. '    
' → logprob: -4.441085338592529
    7. '\n' → logprob: -6.441085338592529
    8. '\' → logprob: -6.941085338592529
    9. '
' → logprob: -6.941085338592529
    10. ',' → logprob: -7.566085338592529

Token 94: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6571613550186157
    2. 'a' → logprob: -1.5321613550186157
    3. 'x' → logprob: -1.7821613550186157
    4. 'n' → logprob: -2.907161235809326
    5. ' x' → logprob: -4.407161235809326
    6. ' a' → logprob: -4.657161235809326
    7. '    
' → logprob: -4.657161235809326
    8. 'r' → logprob: -6.032161235809326
    9. 'b' → logprob: -6.657161235809326
    10. 'A' → logprob: -6.657161235809326

Token 95: ' Enfin' (ID: 85274)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.09478625655174255
    2. ' a' → logprob: -2.8447861671447754
    3. 'x' → logprob: -3.7197861671447754
    4. ' x' → logprob: -5.469786167144775
    5. '   ' → logprob: -5.969786167144775
    6. 'n' → logprob: -7.594786167144775
    7. 'ent' → logprob: -7.969786167144775
    8. ' n' → logprob: -9.969786643981934
    9. 'A' → logprob: -10.219786643981934
    10. ' ent' → logprob: -10.469786643981934

Token 96: ',' (ID: 11)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.32661521434783936
    2. ' a' → logprob: -2.201615333557129
    3. 'n' → logprob: -2.451615333557129
    4. 'x' → logprob: -4.201615333557129
    5. ',' → logprob: -4.326615333557129
    6. ' n' → logprob: -4.451615333557129
    7. '   ' → logprob: -5.076615333557129
    8. ' x' → logprob: -5.451615333557129
    9. 'l' → logprob: -6.076615333557129
    10. 's' → logprob: -6.076615333557129

Token 97: ' l' (ID: 305)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5992638468742371
    2. ' a' → logprob: -0.8492638468742371
    3. ' x' → logprob: -4.474263668060303
    4. 'x' → logprob: -4.724263668060303
    5. '   ' → logprob: -7.349263668060303
    6. ' n' → logprob: -7.474263668060303
    7. ' A' → logprob: -7.724263668060303
    8. 'n' → logprob: -7.974263668060303
    9. 'A' → logprob: -8.349264144897461
    10. '	a' → logprob: -9.599264144897461

Token 98: ''ex' (ID: 23472)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5659354329109192
    2. 'e' → logprob: -1.1909353733062744
    3. '   ' → logprob: -3.5659353733062744
    4. 'es' → logprob: -3.8159353733062744
    5. ' a' → logprob: -4.0659356117248535
    6. 'ine' → logprob: -4.0659356117248535
    7. 's' → logprob: -4.3159356117248535
    8. 'i' → logprob: -5.0659356117248535
    9. 'n' → logprob: -5.3159356117248535
    10. 'o' → logprob: -5.5659356117248535

Token 99: 'pression' (ID: 4521)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5115601420402527
    2. 'p' → logprob: -1.1365602016448975
    3. 'emple' → logprob: -3.7615602016448975
    4. 'trait' → logprob: -4.511559963226318
    5. 't' → logprob: -4.636559963226318
    6. 'a' → logprob: -4.761559963226318
    7. 'é' → logprob: -5.386559963226318
    8. 'i' → logprob: -6.011559963226318
    9. 'em' → logprob: -6.136559963226318
    10. 'o' → logprob: -6.636559963226318

Token 100: ' affect' (ID: 7902)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.12780289351940155
    2. ' a' → logprob: -2.502802848815918
    3. 'x' → logprob: -3.627802848815918
    4. ' x' → logprob: -5.627802848815918
    5. '   ' → logprob: -6.377802848815918
    6. 'ent' → logprob: -6.502802848815918
    7. 'n' → logprob: -6.627802848815918
    8. 'A' → logprob: -7.377802848815918
    9. 'nombre' → logprob: -7.627802848815918
    10. 'result' → logprob: -8.002802848815918

Token 101: 'e' (ID: 68)
  Prédit: 'ue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.5878807902336121
    2. 'e' → logprob: -0.8378807902336121
    3. 'u' → logprob: -4.462880611419678
    4. 'uer' → logprob: -9.212881088256836
    5. 'ation' → logprob: -9.337881088256836
    6. 'é' → logprob: -10.212881088256836
    7. 'a' → logprob: -10.712881088256836
    8. 'er' → logprob: -11.087881088256836
    9. 'ué' → logprob: -11.462881088256836
    10. 'uation' → logprob: -11.462881088256836

Token 102: ' ces' (ID: 10532)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7297712564468384
    2. ' a' → logprob: -1.3547712564468384
    3. ' deux' → logprob: -3.604771137237549
    4. '   ' → logprob: -3.729771137237549
    5. ' les' → logprob: -3.729771137237549
    6. '    ' → logprob: -3.854771137237549
    7. ' i' → logprob: -3.854771137237549
    8. ' la' → logprob: -3.979771137237549
    9. 'a' → logprob: -4.229771137237549
    10. ' n' → logprob: -4.354771137237549

Token 103: ' deux' (ID: 10301)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.1138008832931519
    2. ' nombres' → logprob: -1.3638008832931519
    3. ' deux' → logprob: -1.7388008832931519
    4. ' x' → logprob: -2.7388010025024414
    5. ' n' → logprob: -2.9888010025024414
    6. 'a' → logprob: -3.4888010025024414
    7. ' ' → logprob: -3.6138010025024414
    8. ' ent' → logprob: -4.238801002502441
    9. 'n' → logprob: -4.363801002502441
    10. ' valeurs' → logprob: -4.988801002502441

Token 104: ' ent' (ID: 1121)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.3296533226966858
    2. ' ent' → logprob: -1.704653263092041
    3. 'n' → logprob: -3.329653263092041
    4. 'ent' → logprob: -3.829653263092041
    5. ' valeurs' → logprob: -4.454653263092041
    6. ' n' → logprob: -5.204653263092041
    7. ' nombre' → logprob: -5.454653263092041
    8. ' a' → logprob: -5.454653263092041
    9. ' entier' → logprob: -5.579653263092041
    10. 'nombre' → logprob: -5.954653263092041

Token 105: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.02084152027964592
    2. 'i' → logprob: -3.895841598510742
    3. 'ières' → logprob: -8.770841598510742
    4. 'ers' → logprob: -9.770841598510742
    5. 'ier' → logprob: -10.145841598510742
    6. '```' → logprob: -11.270841598510742
    7. 'ière' → logprob: -11.895841598510742
    8. 'ié' → logprob: -12.020841598510742
    9. ' i' → logprob: -12.395841598510742
    10. '   ' → logprob: -12.770841598510742

Token 106: ' aux' (ID: 5850)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.35822737216949463
    2. ' a' → logprob: -1.2332273721694946
    3. ' x' → logprob: -5.233227252960205
    4. 'x' → logprob: -5.733227252960205
    5. ' n' → logprob: -8.108227729797363
    6. 'n' → logprob: -8.108227729797363
    7. '   ' → logprob: -8.733227729797363
    8. ' à' → logprob: -8.983227729797363
    9. ',' → logprob: -9.358227729797363
    10. 'A' → logprob: -10.733227729797363

Token 107: ' variables' (ID: 13955)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2797274589538574
    2. 'a' → logprob: -1.5297274589538574
    3. ' variables' → logprob: -4.029727458953857
    4. ' x' → logprob: -5.529727458953857
    5. 'x' → logprob: -7.029727458953857
    6. ' n' → logprob: -7.529727458953857
    7. ' nombres' → logprob: -7.529727458953857
    8. ' i' → logprob: -7.529727458953857
    9. ' nombre' → logprob: -7.654727458953857
    10. ' variable' → logprob: -7.654727458953857

Token 108: ' n' (ID: 297)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3859196603298187
    2. 'a' → logprob: -1.2609196901321411
    3. ' x' → logprob: -3.6359195709228516
    4. 'x' → logprob: -4.635919570922852
    5. ' n' → logprob: -8.385919570922852
    6. 'n' → logprob: -8.760919570922852
    7. '   ' → logprob: -8.885919570922852
    8. 'i' → logprob: -10.260919570922852
    9. ' i' → logprob: -10.260919570922852
    10. ' `' → logprob: -10.510919570922852

Token 109: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22742076218128204
    2. '1' → logprob: -1.8524208068847656
    3. ' ,' → logprob: -3.2274208068847656
    4. ' =' → logprob: -5.977420806884766
    5. 's' → logprob: -6.352420806884766
    6. ' ' → logprob: -7.477420806884766
    7. '   ' → logprob: -8.102420806884766
    8. ',n' → logprob: -8.477420806884766
    9. 'ombres' → logprob: -8.852420806884766
    10. 'a' → logprob: -8.977420806884766

Token 110: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.08756019175052643
    2. 'm' → logprob: -2.5875601768493652
    3. ' k' → logprob: -5.087560176849365
    4. 'k' → logprob: -6.962560176849365
    5. ' p' → logprob: -7.587560176849365
    6. ' ' → logprob: -7.962560176849365
    7. ' x' → logprob: -9.462560653686523
    8. ' t' → logprob: -9.462560653686523
    9. ' r' → logprob: -9.587560653686523
    10. ' a' → logprob: -9.712560653686523

Token 111: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07917794585227966
    2. '   ' → logprob: -2.7041778564453125
    3. '
' → logprob: -5.0791778564453125
    4. '    
' → logprob: -6.2041778564453125
    5. ' n' → logprob: -8.079177856445312
    6. '	n' → logprob: -8.954177856445312
    7. ' 
' → logprob: -9.079177856445312
    8. '   
' → logprob: -9.329177856445312
    9. '  
' → logprob: -9.579177856445312
    10. '\n' → logprob: -9.704177856445312

Token 112: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.039221569895744324
    2. '   ' → logprob: -3.2892215251922607
    3. '    
' → logprob: -7.53922176361084
    4. ' n' → logprob: -7.66422176361084
    5. '
' → logprob: -10.66422176361084
    6. '	n' → logprob: -10.66422176361084
    7. ' 
' → logprob: -10.91422176361084
    8. '\n' → logprob: -11.03922176361084
    9. '  
' → logprob: -11.16422176361084
    10. '(n' → logprob: -11.16422176361084

Token 113: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.0022488650865852833
    2. '   ' → logprob: -6.627248764038086
    3. ' n' → logprob: -7.377248764038086
    4. '    
' → logprob: -8.502248764038086
    5. '\n' → logprob: -10.252248764038086
    6. ' 
' → logprob: -10.252248764038086
    7. '  
' → logprob: -12.252248764038086
    8. ' ' → logprob: -12.502248764038086
    9. '   
' → logprob: -12.502248764038086
    10. '
' → logprob: -12.877248764038086

Token 114: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.076218025758862e-05
    2. ' ,' → logprob: -9.625070571899414
    3. ',m' → logprob: -12.500070571899414
    4. ',
' → logprob: -14.750070571899414
    5. 'm' → logprob: -15.375070571899414
    6. ',n' → logprob: -16.375070571899414
    7. '‌,' → logprob: -16.750070571899414
    8. ' ' → logprob: -17.125070571899414
    9. 's' → logprob: -17.500070571899414
    10. ',

' → logprob: -18.000070571899414

Token 115: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.05507207661867142
    2. 'm' → logprob: -2.930072069168091
    3. ' ' → logprob: -8.680071830749512
    4. ' ' → logprob: -11.180071830749512
    5. '    ' → logprob: -13.430071830749512
    6. '	m' → logprob: -13.680071830749512
    7. '<|end|>' → logprob: -14.180071830749512
    8. ' ‌' → logprob: -14.680071830749512
    9. ' м' → logprob: -14.805071830749512
    10. '  ' → logprob: -14.930071830749512

Token 116: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04308505728840828
    2. '=' → logprob: -3.1680850982666016
    3. ',' → logprob: -9.418085098266602
    4. ' ' → logprob: -13.668085098266602
    5. ' ,' → logprob: -13.918085098266602
    6. ')' → logprob: -14.543085098266602
    7. ' =
' → logprob: -14.793085098266602
    8. '=input' → logprob: -15.293085098266602
    9. 's' → logprob: -15.543085098266602
    10. '<|end|>' → logprob: -15.543085098266602

Token 117: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.5759442448616028
    2. 'map' → logprob: -0.8259442448616028
    3. 'input' → logprob: -12.700943946838379
    4. ' input' → logprob: -14.200943946838379
    5. 'list' → logprob: -15.075943946838379
    6. 'm' → logprob: -15.325943946838379
    7. '	map' → logprob: -15.450943946838379
    8. 'int' → logprob: -16.075944900512695
    9. ' list' → logprob: -16.325944900512695
    10. ' ' → logprob: -16.450944900512695

Token 118: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2014496773481369
    2. '(int' → logprob: -1.7014496326446533
    3. '(
' → logprob: -11.576449394226074
    4. '(str' → logprob: -11.951449394226074
    5. ' (' → logprob: -12.201449394226074
    6. '<int' → logprob: -12.326449394226074
    7. '(lambda' → logprob: -12.701449394226074
    8. '(

' → logprob: -13.326449394226074
    9. '(input' → logprob: -13.326449394226074
    10. 'int' → logprob: -13.951449394226074

Token 119: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.059753283858299255
    2. '(' → logprob: -3.434753179550171
    3. 'input' → logprob: -4.30975341796875
    4. ')' → logprob: -5.18475341796875
    5. ',input' → logprob: -5.68475341796875
    6. ',' → logprob: -6.55975341796875
    7. ' (' → logprob: -6.68475341796875
    8. '   ' → logprob: -8.18475341796875
    9. ' input' → logprob: -8.18475341796875
    10. ' ,' → logprob: -10.68475341796875

Token 120: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5231731534004211
    2. ' input' → logprob: -0.8981731534004211
    3. ')' → logprob: -10.898173332214355
    4. '   ' → logprob: -11.273173332214355
    5. '(input' → logprob: -11.398173332214355
    6. ' ' → logprob: -12.773173332214355
    7. '	input' → logprob: -13.648173332214355
    8. '=input' → logprob: -14.148173332214355
    9. ',input' → logprob: -14.523173332214355
    10. ' )' → logprob: -14.523173332214355

Token 121: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7470746636390686
    2. '())' → logprob: -0.9970746636390686
    3. '().' → logprob: -1.8720746040344238
    4. ')' → logprob: -5.997074604034424
    5. '(' → logprob: -8.622075080871582
    6. ' ())' → logprob: -9.247075080871582
    7. '()))' → logprob: -9.247075080871582
    8. '());' → logprob: -9.372075080871582
    9. '()`' → logprob: -9.497075080871582
    10. '`()' → logprob: -9.497075080871582

Token 122: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0011724866926670074
    2. 'strip' → logprob: -6.7511725425720215
    3. ' split' → logprob: -13.501172065734863
    4. 'rstrip' → logprob: -14.376172065734863
    5. '(split' → logprob: -16.37617301940918
    6. ')' → logprob: -16.37617301940918
    7. 'spl' → logprob: -16.62617301940918
    8. '().' → logprob: -19.25117301940918
    9. '.split' → logprob: -19.37617301940918
    10. 's' → logprob: -19.75117301940918

Token 123: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.004469758365303278
    2. '()' → logprob: -5.754469871520996
    3. '()))' → logprob: -6.879469871520996
    4. ')' → logprob: -8.379469871520996
    5. '(' → logprob: -11.379469871520996
    6. ' ())' → logprob: -11.879469871520996
    7. '())
' → logprob: -12.004469871520996
    8. '))' → logprob: -12.004469871520996
    9. '('' → logprob: -14.379469871520996
    10. '()))
' → logprob: -15.379469871520996

Token 124: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6251351833343506
    2. '   ' → logprob: -1.1251351833343506
    3. '<|end|>' → logprob: -3.3751351833343506
    4. '  
' → logprob: -3.5001351833343506
    5. '    
' → logprob: -3.6251351833343506
    6. ' ' → logprob: -4.12513542175293
    7. ' 
' → logprob: -4.37513542175293
    8. ':' → logprob: -5.25013542175293
    9. ')' → logprob: -5.50013542175293
    10. '   
' → logprob: -6.25013542175293

Token 125: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.1557765007019043
    2. 'result' → logprob: -3.0307765007019043
    3. 'for' → logprob: -4.030776500701904
    4. 'r' → logprob: -4.030776500701904
    5. '   ' → logprob: -4.280776500701904
    6. 'if' → logprob: -4.530776500701904
    7. 'i' → logprob: -4.530776500701904
    8. ' ' → logprob: -4.780776500701904
    9. 'n' → logprob: -5.405776500701904
    10. 's' → logprob: -5.780776500701904

Token 126: ' Initialise' (ID: 179601)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.078575849533081
    2. 'result' → logprob: -1.078575849533081
    3. ' for' → logprob: -2.453575849533081
    4. ' result' → logprob: -2.703575849533081
    5. '#' → logprob: -3.328575849533081
    6. 'if' → logprob: -3.328575849533081
    7. 's' → logprob: -3.453575849533081
    8. ' if' → logprob: -4.07857608795166
    9. 'r' → logprob: -4.82857608795166
    10. ' #' → logprob: -5.45357608795166

Token 127: ' la' (ID: 557)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.4110706150531769
    2. ' une' → logprob: -2.4110705852508545
    3. ' a' → logprob: -2.6610705852508545
    4. ' n' → logprob: -3.5360705852508545
    5. ' la' → logprob: -3.5360705852508545
    6. 'a' → logprob: -3.6610705852508545
    7. ' l' → logprob: -3.9110705852508545
    8. ' result' → logprob: -4.286070823669434
    9. ' les' → logprob: -4.661070823669434
    10. 'n' → logprob: -5.036070823669434

Token 128: ' variable' (ID: 11076)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.547532081604004
    2. 'result' → logprob: -1.547532081604004
    3. 'dp' → logprob: -1.672532081604004
    4. 'liste' → logprob: -2.172532081604004
    5. 'mat' → logprob: -3.172532081604004
    6. 'matrix' → logprob: -3.422532081604004
    7. ' somme' → logprob: -3.797532081604004
    8. ' result' → logprob: -3.922532081604004
    9. ' liste' → logprob: -4.422532081604004
    10. 'sum' → logprob: -4.547532081604004

Token 129: ' left' (ID: 3561)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.5767287611961365
    2. 'result' → logprob: -1.3267288208007812
    3. 's' → logprob: -3.3267288208007812
    4. ' sum' → logprob: -3.5767288208007812
    5. ' total' → logprob: -3.7017288208007812
    6. 'sum' → logprob: -3.8267288208007812
    7. 'count' → logprob: -4.576728820800781
    8. ' count' → logprob: -4.701728820800781
    9. 'total' → logprob: -4.951728820800781
    10. ' s' → logprob: -4.951728820800781

Token 130: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7459092140197754
    2. ' =' → logprob: -0.9959092140197754
    3. '=' → logprob: -1.8709092140197754
    4. ' ' → logprob: -8.495908737182617
    5. '_pointer' → logprob: -8.495908737182617
    6. '_bound' → logprob: -8.620908737182617
    7. ' ,' → logprob: -8.870908737182617
    8. ')' → logprob: -8.995908737182617
    9. 'over' → logprob: -9.120908737182617
    10. '_index' → logprob: -9.495908737182617

Token 131: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7549553513526917
    2. ' ' → logprob: -0.7549553513526917
    3. ' n' → logprob: -3.504955291748047
    4. 'n' → logprob: -4.629955291748047
    5. ' m' → logprob: -4.879955291748047
    6. '1' → logprob: -5.004955291748047
    7. 'm' → logprob: -5.254955291748047
    8. ' -' → logprob: -8.754955291748047
    9. '2' → logprob: -9.817455291748047
    10. '-' → logprob: -10.067455291748047

Token 132: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08311589807271957
    2. 'n' → logprob: -3.083115816116333
    3. '1' → logprob: -4.208116054534912
    4. 'm' → logprob: -4.333116054534912
    5. ' ' → logprob: -5.708116054534912
    6. 'max' → logprob: -7.208116054534912
    7. '-' → logprob: -7.333116054534912
    8. ' n' → logprob: -8.083115577697754
    9. 'min' → logprob: -8.208115577697754
    10. ' m' → logprob: -9.458115577697754

Token 133: '
' (ID: 198)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.729157567024231
    2. ' ' → logprob: -1.479157567024231
    3. '   ' → logprob: -2.2291574478149414
    4. ' left' → logprob: -2.8541574478149414
    5. '<|end|>' → logprob: -2.9791574478149414
    6. ',' → logprob: -3.9791574478149414
    7. '	left' → logprob: -4.104157447814941
    8. '  ' → logprob: -4.729157447814941
    9. '    
' → logprob: -5.104157447814941
    10. '
' → logprob: -5.104157447814941

Token 134: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1424036026000977
    2. '   ' → logprob: -1.1424036026000977
    3. '<|end|>' → logprob: -1.1424036026000977
    4. 'left' → logprob: -4.267403602600098
    5. '  ' → logprob: -4.767403602600098
    6. ')' → logprob: -5.392403602600098
    7. ',' → logprob: -5.392403602600098
    8. '    ' → logprob: -6.142403602600098
    9. ' left' → logprob: -6.517403602600098
    10. ' 
' → logprob: -6.642403602600098

Token 135: ' #' (ID: 1069)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.2274765968322754
    2. ' left' → logprob: -1.7274765968322754
    3. '   ' → logprob: -3.8524765968322754
    4. ' ' → logprob: -5.852476596832275
    5. '	left' → logprob: -7.977476596832275
    6. '1' → logprob: -8.102476119995117
    7. 'n' → logprob: -8.477476119995117
    8. '  ' → logprob: -8.727476119995117
    9. '    ' → logprob: -8.852476119995117
    10. ' 
' → logprob: -8.977476119995117

Token 136: ' Cette' (ID: 27383)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.21225178241729736
    2. ' left' → logprob: -1.8372517824172974
    3. '   ' → logprob: -3.462251663208008
    4. '	left' → logprob: -8.462251663208008
    5. ' ' → logprob: -9.212251663208008
    6. ' lef' → logprob: -9.587251663208008
    7. '  ' → logprob: -9.712251663208008
    8. '```' → logprob: -9.962251663208008
    9. 'l' → logprob: -10.212251663208008
    10. '
' → logprob: -10.462251663208008

Token 137: ' variable' (ID: 11076)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.4006347060203552
    2. ' left' → logprob: -1.275634765625
    3. ' is' → logprob: -4.275634765625
    4. ' variable' → logprob: -5.150634765625
    5. ' ' → logprob: -5.400634765625
    6. 'space' → logprob: -5.525634765625
    7. ' gauche' → logprob: -5.900634765625
    8. 'n' → logprob: -6.025634765625
    9. '_left' → logprob: -6.025634765625
    10. 'variable' → logprob: -6.525634765625

Token 138: ' représent' (ID: 42664)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.270086407661438
    2. '_' → logprob: -1.395086407661438
    3. '_left' → logprob: -1.770086407661438
    4. ',' → logprob: -2.1450862884521484
    5. '=' → logprob: -2.6450862884521484
    6. ' ' → logprob: -2.8950862884521484
    7. 'left' → logprob: -4.020086288452148
    8. ' represents' → logprob: -4.770086288452148
    9. ' left' → logprob: -5.020086288452148
    10. ')' → logprob: -5.395086288452148

Token 139: 'era' (ID: 2060)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.00015693542081862688
    2. 'er' → logprob: -9.125157356262207
    3. 'ent' → logprob: -11.000157356262207
    4. ' e' → logprob: -11.250157356262207
    5. 'a' → logprob: -11.375157356262207
    6. 'ant' → logprob: -12.750157356262207
    7. 'era' → logprob: -13.250157356262207
    8. '   ' → logprob: -14.750157356262207
    9. ' ' → logprob: -15.125157356262207
    10. '	e' → logprob: -15.375157356262207

Token 140: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.681074857711792
    2. ' l' → logprob: -1.431074857711792
    3. ' ' → logprob: -2.056074857711792
    4. ' le' → logprob: -3.681074857711792
    5. 'left' → logprob: -3.806074857711792
    6. ' the' → logprob: -4.181075096130371
    7. '1' → logprob: -4.431075096130371
    8. ' left' → logprob: -4.806075096130371
    9. '<|end|>' → logprob: -4.931075096130371
    10. ' une' → logprob: -5.431075096130371

Token 141: ' borne' (ID: 111819)
  Prédit: ' borne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' borne' → logprob: -1.0565825700759888
    2. ' gauche' → logprob: -1.8065825700759888
    3. ' plus' → logprob: -2.056582450866699
    4. 'left' → logprob: -2.931582450866699
    5. ' partie' → logprob: -3.431582450866699
    6. ' position' → logprob: -3.681582450866699
    7. ' limite' → logprob: -3.931582450866699
    8. 'lower' → logprob: -3.931582450866699
    9. 'borne' → logprob: -3.931582450866699
    10. 'plus' → logprob: -4.056582450866699

Token 142: ' gauche' (ID: 58367)
  Prédit: '_left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.9597241878509521
    2. '_' → logprob: -1.4597241878509521
    3. 'left' → logprob: -2.334724187850952
    4. ' =' → logprob: -2.584724187850952
    5. ' ' → logprob: -3.209724187850952
    6. ' left' → logprob: -3.209724187850952
    7. '_lower' → logprob: -4.084724426269531
    8. '<|end|>' → logprob: -4.084724426269531
    9. '  ' → logprob: -4.334724426269531
    10. ' gauche' → logprob: -4.334724426269531

Token 143: ' actuelle' (ID: 104951)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 144: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1808040142059326
    2. '   ' → logprob: -1.1808040142059326
    3. '<|end|>' → logprob: -1.1808040142059326
    4. 'left' → logprob: -3.3058040142059326
    5. ' left' → logprob: -4.305804252624512
    6. ',' → logprob: -4.430804252624512
    7. '  ' → logprob: -5.305804252624512
    8. '    ' → logprob: -6.180804252624512
    9. '<|end|>' → logprob: -6.555804252624512
    10. '	left' → logprob: -6.805804252624512

Token 145: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.47649678587913513
    2. '<|end|>' → logprob: -1.3514968156814575
    3. ' la' → logprob: -3.101496696472168
    4. 'l' → logprob: -3.351496696472168
    5. ' ' → logprob: -3.601496696472168
    6. 'range' → logprob: -6.226496696472168
    7. 'the' → logprob: -6.851496696472168
    8. '1' → logprob: -6.851496696472168
    9. 'n' → logprob: -6.976496696472168
    10. ' the' → logprob: -7.226496696472168

Token 146: ''' (ID: 6)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.44764211773872375
    2. ' interval' → logprob: -1.4476420879364014
    3. ''' → logprob: -2.8226420879364014
    4. 'a' → logprob: -3.4476420879364014
    5. ''espace' → logprob: -4.4476423263549805
    6. 'range' → logprob: -4.9476423263549805
    7. ' intervalo' → logprob: -5.4476423263549805
    8. 'e' → logprob: -6.1976423263549805
    9. ' range' → logprob: -6.1976423263549805
    10. '_interval' → logprob: -6.9476423263549805

Token 147: 'interval' (ID: 37558)
  Prédit: 'interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.026056304574012756
    2. ' interval' → logprob: -3.7760562896728516
    3. ''' → logprob: -6.776056289672852
    4. 'a' → logprob: -8.026056289672852
    5. ' intervalo' → logprob: -8.651056289672852
    6. 'range' → logprob: -8.901056289672852
    7. ''espace' → logprob: -9.026056289672852
    8. 'é' → logprob: -9.026056289672852
    9. 'e' → logprob: -9.526056289672852
    10. ' espace' → logprob: -9.651056289672852

Token 148: 'le' (ID: 282)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0023764846846461296
    2. ')' → logprob: -7.002376556396484
    3. ']' → logprob: -8.752376556396484
    4. ',' → logprob: -8.752376556396484
    5. 'le' → logprob: -8.752376556396484
    6. '_' → logprob: -9.252376556396484
    7. ' e' → logprob: -9.252376556396484
    8. '[' → logprob: -9.377376556396484
    9. 'space' → logprob: -9.377376556396484
    10. ' ' → logprob: -9.502376556396484

Token 149: ' d' (ID: 272)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 150: ''intérêt' (ID: 152139)
  Prédit: ' recherche'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' recherche' → logprob: -0.597690761089325
    2. 'e' → logprob: -1.3476908206939697
    3. 'es' → logprob: -3.7226908206939697
    4. 'search' → logprob: -3.8476908206939697
    5. 'éc' → logprob: -3.9726908206939697
    6. 's' → logprob: -4.222690582275391
    7. 'é' → logprob: -4.722690582275391
    8. ' search' → logprob: -4.722690582275391
    9. ' recherches' → logprob: -4.972690582275391
    10. 'indices' → logprob: -4.972690582275391

Token 151: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4269482493400574
    2. 'left' → logprob: -1.6769483089447021
    3. '    
' → logprob: -2.801948308944702
    4. '
' → logprob: -3.176948308944702
    5. ' 
' → logprob: -4.176948070526123
    6. '	left' → logprob: -4.301948070526123
    7. ' left' → logprob: -4.551948070526123
    8. ' ' → logprob: -4.926948070526123
    9. '   
' → logprob: -5.426948070526123
    10. '  
' → logprob: -6.551948070526123

Token 152: ' initial' (ID: 4871)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05877678096294403
    2. '<|end|>' → logprob: -3.55877685546875
    3. '    ' → logprob: -4.55877685546875
    4. '   ' → logprob: -4.80877685546875
    5. ' 
' → logprob: -5.93377685546875
    6. '  ' → logprob: -6.18377685546875
    7. ')' → logprob: -6.55877685546875
    8. 'n' → logprob: -7.43377685546875
    9. '<|end|>' → logprob: -7.55877685546875
    10. '    
' → logprob: -7.80877685546875

Token 153: 'ement' (ID: 962)
  Prédit: 'isée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'isée' → logprob: -1.1261521577835083
    2. 'e' → logprob: -1.2511521577835083
    3. 'isé' → logprob: -1.8761521577835083
    4. '=' → logprob: -2.0011520385742188
    5. '   ' → logprob: -4.001152038574219
    6. ' =' → logprob: -4.251152038574219
    7. '_value' → logprob: -4.376152038574219
    8. '_' → logprob: -4.626152038574219
    9. ' ' → logprob: -5.001152038574219
    10. 'ise' → logprob: -5.251152038574219

Token 154: ' le' (ID: 505)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5900024771690369
    2. ' ' → logprob: -1.2150025367736816
    3. '<|end|>' → logprob: -1.9650025367736816
    4. '=' → logprob: -6.465002536773682
    5. '```' → logprob: -6.715002536773682
    6. ')' → logprob: -6.715002536773682
    7. '  ' → logprob: -6.965002536773682
    8. '<|end|>' → logprob: -7.340002536773682
    9. ',' → logprob: -7.590002536773682
    10. ' =' → logprob: -7.715002536773682

Token 155: ' plus' (ID: 2932)
  Prédit: ' début'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' début' → logprob: -1.0685784816741943
    2. ' plus' → logprob: -1.6935784816741943
    3. '1' → logprob: -2.3185784816741943
    4. 'dé' → logprob: -2.4435784816741943
    5. ' premier' → logprob: -2.8185784816741943
    6. 'minimum' → logprob: -3.0685784816741943
    7. 'plus' → logprob: -3.4435784816741943
    8. ' même' → logprob: -3.4435784816741943
    9. 'prem' → logprob: -3.9435784816741943
    10. '```' → logprob: -4.193578720092773

Token 156: ' petit' (ID: 20577)
  Prédit: 'bas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bas' → logprob: -0.8889138698577881
    2. '<|end|>' → logprob: -1.763913869857788
    3. ' bas' → logprob: -2.263913869857788
    4. ' petit' → logprob: -2.513913869857788
    5. '1' → logprob: -2.763913869857788
    6. ' faible' → logprob: -3.513913869857788
    7. 'pet' → logprob: -3.888913869857788
    8. 'small' → logprob: -4.638914108276367
    9. '  ' → logprob: -4.763914108276367
    10. '```' → logprob: -4.763914108276367

Token 157: ' possible' (ID: 4149)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9253714084625244
    2. ' ' → logprob: -0.9253714084625244
    3. '<|end|>' → logprob: -2.1753714084625244
    4. 'space' → logprob: -3.4253714084625244
    5. ')' → logprob: -4.300371170043945
    6. '  ' → logprob: -4.675371170043945
    7. ' space' → logprob: -5.050371170043945
    8. ' )' → logprob: -5.175371170043945
    9. ' _' → logprob: -5.425371170043945
    10. ' espace' → logprob: -5.675371170043945

Token 158: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19195477664470673
    2. 'left' → logprob: -2.1919548511505127
    3. ' left' → logprob: -4.066954612731934
    4. ' ' → logprob: -4.441954612731934
    5. '<|end|>' → logprob: -4.691954612731934
    6. '    
' → logprob: -4.816954612731934
    7. '	left' → logprob: -5.441954612731934
    8. '
' → logprob: -5.941954612731934
    9. ' 
' → logprob: -6.441954612731934
    10. '  ' → logprob: -6.441954612731934

Token 159: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6259373426437378
    2. ')' → logprob: -1.3759373426437378
    3. ' ' → logprob: -1.7509373426437378
    4. ' )' → logprob: -3.2509374618530273
    5. '```' → logprob: -10.500937461853027
    6. '<|end|>' → logprob: -10.500937461853027
    7. ' )
' → logprob: -10.625937461853027
    8. ' ' → logprob: -10.625937461853027
    9. '  ' → logprob: -10.875937461853027
    10. '   ' → logprob: -10.875937461853027

Token 160: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009794592624530196
    2. ')
' → logprob: -7.000979423522949
    3. ' )' → logprob: -10.12597942352295
    4. '   ' → logprob: -10.75097942352295
    5. ')

' → logprob: -13.37597942352295
    6. ' ' → logprob: -13.62597942352295
    7. '<|end|>' → logprob: -13.62597942352295
    8. '
' → logprob: -14.50097942352295
    9. '```' → logprob: -15.00097942352295
    10. ' )
' → logprob: -15.00097942352295

Token 161: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.102845698595047
    2. '   ' → logprob: -2.8528456687927246
    3. '    
' → logprob: -4.227845668792725
    4. ' 
' → logprob: -4.727845668792725
    5. '<|end|>' → logprob: -5.477845668792725
    6. '  
' → logprob: -5.727845668792725
    7. ' ' → logprob: -6.352845668792725
    8. 'n' → logprob: -6.602845668792725
    9. '\n' → logprob: -6.727845668792725
    10. 'left' → logprob: -6.727845668792725

Token 162: ' left' (ID: 3561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3855334520339966
    2. '   ' → logprob: -1.8855334520339966
    3. 'left' (adapté à ' left') → logprob: -2.260533332824707
    4. ' ' → logprob: -3.635533332824707
    5. '    
' → logprob: -4.135533332824707
    6. ' 
' → logprob: -5.260533332824707
    7. ',' → logprob: -6.135533332824707
    8. 'n' → logprob: -6.260533332824707
    9. '   
' → logprob: -6.385533332824707
    10. 'l' → logprob: -6.510533332824707

Token 163: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03809370473027229
    2. '=' → logprob: -3.2880938053131104
    3. ',' → logprob: -10.288093566894531
    4. ' ' → logprob: -11.663093566894531
    5. ' =
' → logprob: -12.413093566894531
    6. ')' → logprob: -12.788093566894531
    7. ' ,' → logprob: -13.913093566894531
    8. '   ' → logprob: -14.663093566894531
    9. '<|end|>' → logprob: -15.038093566894531
    10. ' +=' → logprob: -15.163093566894531

Token 164: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2811560332775116
    2. '1' → logprob: -1.406156063079834
    3. '0' → logprob: -13.156155586242676
    4. ' ' → logprob: -13.156155586242676
    5. '   ' → logprob: -14.281155586242676
    6. '  ' → logprob: -14.781155586242676
    7. '```' → logprob: -15.718655586242676
    8. ' n' → logprob: -16.343656539916992
    9. '=' → logprob: -16.718656539916992
    10. 'n' → logprob: -16.906156539916992

Token 165: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9146995327901095e-05
    2. ' ' → logprob: -10.875019073486328
    3. '0' → logprob: -16.125019073486328
    4. '   ' → logprob: -17.125019073486328
    5. '```' → logprob: -19.250019073486328
    6. '  ' → logprob: -19.750019073486328
    7. '۱' → logprob: -20.125019073486328
    8. '`' → logprob: -20.375019073486328
    9. '' → logprob: -20.375019073486328
    10. '2' → logprob: -20.687519073486328

Token 166: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11239944398403168
    2. '   ' → logprob: -2.7373993396759033
    3. '<|end|>' → logprob: -3.3623993396759033
    4. '    
' → logprob: -5.362399578094482
    5. '<|end|>' → logprob: -7.612399578094482
    6. '  
' → logprob: -7.612399578094482
    7. ')' → logprob: -8.112399101257324
    8. ' 
' → logprob: -8.487399101257324
    9. ' ' → logprob: -8.862399101257324
    10. '\n' → logprob: -8.862399101257324

Token 167: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4734545052051544
    2. '<|end|>' → logprob: -1.223454475402832
    3. ',' → logprob: -3.348454475402832
    4. '
' → logprob: -3.723454475402832
    5. ' ' → logprob: -4.848454475402832
    6. '    
' → logprob: -5.223454475402832
    7. '<|end|>' → logprob: -6.098454475402832
    8. '  ' → logprob: -6.598454475402832
    9. ')' → logprob: -6.723454475402832
    10. ' 
' → logprob: -6.848454475402832

Token 168: ' #' (ID: 1069)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.4129352271556854
    2. '   ' → logprob: -1.1629352569580078
    3. '#' (adapté à ' #') → logprob: -5.287935256958008
    4. ',' → logprob: -5.287935256958008
    5. '
' → logprob: -5.787935256958008
    6. ' right' → logprob: -6.037935256958008
    7. ' ' → logprob: -6.162935256958008
    8. ',
' → logprob: -6.412935256958008
    9. 'n' → logprob: -6.537935256958008
    10. '    
' → logprob: -6.662935256958008

Token 169: ' Initialise' (ID: 179601)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.014903073199093342
    2. '#' → logprob: -4.8899030685424805
    3. ' right' → logprob: -5.2649030685424805
    4. '   ' → logprob: -6.2649030685424805
    5. ' #' → logprob: -10.13990306854248
    6. 'for' → logprob: -10.26490306854248
    7. 'while' → logprob: -10.76490306854248
    8. 'left' → logprob: -11.01490306854248
    9. 'max' → logprob: -11.76490306854248
    10. '```' → logprob: -11.82740306854248

Token 170: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14721369743347168
    2. 'right' → logprob: -2.8972136974334717
    3. ' right' → logprob: -3.3972136974334717
    4. '   ' → logprob: -4.647213935852051
    5. ' ' → logprob: -4.772213935852051
    6. '<|end|>' → logprob: -4.897213935852051
    7. ' the' → logprob: -5.522213935852051
    8. ' =' → logprob: -5.522213935852051
    9. '  ' → logprob: -5.772213935852051
    10. '    ' → logprob: -6.272213935852051

Token 171: ' variable' (ID: 11076)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.3140241503715515
    2. ' right' → logprob: -1.3140242099761963
    3. ' ' → logprob: -8.189023971557617
    4. 'r' → logprob: -9.439023971557617
    5. 'space' → logprob: -9.564023971557617
    6. '```' → logprob: -9.939023971557617
    7. ')' → logprob: -10.314023971557617
    8. ' ' → logprob: -10.314023971557617
    9. '   ' → logprob: -10.564023971557617
    10. '	right' → logprob: -10.814023971557617

Token 172: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.3544582724571228
    2. 'right' → logprob: -1.2294583320617676
    3. '   ' → logprob: -5.229458332061768
    4. '    ' → logprob: -8.85445785522461
    5. ' ' → logprob: -9.60445785522461
    6. '	right' → logprob: -9.72945785522461
    7. ' rig' → logprob: -10.10445785522461
    8. '  ' → logprob: -10.35445785522461
    9. ' rights' → logprob: -10.72945785522461
    10. '
' → logprob: -10.72945785522461

Token 173: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02889060229063034
    2. '=' → logprob: -3.653890609741211
    3. '   ' → logprob: -7.028890609741211
    4. ' à' → logprob: -7.153890609741211
    5. ' to' → logprob: -7.278890609741211
    6. ' ' → logprob: -8.528890609741211
    7. '    ' → logprob: -11.528890609741211
    8. 'to' → logprob: -11.903890609741211
    9. ',' → logprob: -12.403890609741211
    10. '  ' → logprob: -12.903890609741211

Token 174: ' n' (ID: 297)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.3825254738330841
    2. ' n' → logprob: -1.3825254440307617
    3. 'm' → logprob: -3.0075254440307617
    4. 'n' → logprob: -4.632525444030762
    5. ' ' → logprob: -5.007525444030762
    6. '10' → logprob: -7.257525444030762
    7. '100' → logprob: -9.132525444030762
    8. ' ' → logprob: -9.632525444030762
    9. '1' → logprob: -10.820025444030762
    10. '2' → logprob: -10.945025444030762

Token 175: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 176: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025817241985350847
    2. '<|end|>' → logprob: -6.127581596374512
    3. ' ' → logprob: -9.502581596374512
    4. '    
' → logprob: -9.627581596374512
    5. ')' → logprob: -9.627581596374512
    6. '
' → logprob: -9.752581596374512
    7. '    ' → logprob: -9.877581596374512
    8. '  ' → logprob: -10.127581596374512
    9. ',' → logprob: -11.752581596374512
    10. 'n' → logprob: -11.877581596374512

Token 177: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014405242167413235
    2. '
' → logprob: -5.014405250549316
    3. '<|end|>' → logprob: -5.264405250549316
    4. '    
' → logprob: -7.014405250549316
    5. ' ' → logprob: -7.639405250549316
    6. '  ' → logprob: -8.014405250549316
    7. 'right' → logprob: -8.639405250549316
    8. '    ' → logprob: -8.639405250549316
    9. ' 
' → logprob: -9.139405250549316
    10. '<|end|>' → logprob: -9.889405250549316

Token 178: ' Cette' (ID: 27383)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.27655187249183655
    2. ' right' → logprob: -2.1515519618988037
    3. '   ' → logprob: -2.4015519618988037
    4. '
' → logprob: -3.5265519618988037
    5. '	right' → logprob: -5.901551723480225
    6. '    
' → logprob: -7.651551723480225
    7. 'r' → logprob: -7.651551723480225
    8. '<|end|>' → logprob: -7.651551723480225
    9. ' 
' → logprob: -7.901551723480225
    10. ' ' → logprob: -8.151552200317383

Token 179: ' variable' (ID: 11076)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6517500281333923
    2. ' right' → logprob: -1.151750087738037
    3. 'right' → logprob: -2.151750087738037
    4. ' variable' → logprob: -3.401750087738037
    5. '_' → logprob: -6.026750087738037
    6. ' space' → logprob: -6.526750087738037
    7. '<|end|>' → logprob: -6.776750087738037
    8. 'space' → logprob: -7.026750087738037
    9. '   ' → logprob: -7.151750087738037
    10. 'variable' → logprob: -7.401750087738037

Token 180: ' représent' (ID: 42664)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14936569333076477
    2. '=' → logprob: -3.0243656635284424
    3. '   ' → logprob: -3.1493656635284424
    4. ' ' → logprob: -4.0243659019470215
    5. '<|end|>' → logprob: -4.2743659019470215
    6. ' represents' → logprob: -5.2743659019470215
    7. '    ' → logprob: -5.7743659019470215
    8. ')' → logprob: -6.3993659019470215
    9. '<|end|>' → logprob: -6.7743659019470215
    10. '  ' → logprob: -6.7743659019470215

Token 181: 'era' (ID: 2060)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.663162350654602
    2. 'à' → logprob: -1.038162350654602
    3. 'a' → logprob: -2.7881622314453125
    4. 'ent' → logprob: -3.7881622314453125
    5. 'ra' → logprob: -4.1631622314453125
    6. 'era' → logprob: -4.4131622314453125
    7. ' a' → logprob: -5.1631622314453125
    8. '=' → logprob: -6.0381622314453125
    9. 'er' → logprob: -6.2881622314453125
    10. 'to' → logprob: -6.4131622314453125

Token 182: ' la' (ID: 557)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.654380738735199
    2. ' ' → logprob: -1.1543807983398438
    3. 'n' → logprob: -2.0293807983398438
    4. ' la' → logprob: -4.279380798339844
    5. '  ' → logprob: -5.154380798339844
    6. ' l' → logprob: -5.904380798339844
    7. ' the' → logprob: -6.154380798339844
    8. '<|end|>' → logprob: -6.529380798339844
    9. '    ' → logprob: -7.029380798339844
    10. '   ' → logprob: -7.154380798339844

Token 183: ' borne' (ID: 111819)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1409097909927368
    2. ' right' → logprob: -1.1409097909927368
    3. ' space' → logprob: -2.0159096717834473
    4. ' n' → logprob: -2.1409096717834473
    5. 'n' → logprob: -2.6409096717834473
    6. 'right' → logprob: -4.390909671783447
    7. 'space' → logprob: -4.765909671783447
    8. ' espace' → logprob: -5.390909671783447
    9. ' m' → logprob: -5.765909671783447
    10. '  ' → logprob: -6.765909671783447

Token 184: ' droite' (ID: 61428)
  Prédit: ' droite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' droite' → logprob: -0.6453111171722412
    2. ' ' → logprob: -1.6453111171722412
    3. ' actuelle' → logprob: -1.7703111171722412
    4. ' right' → logprob: -3.020311117172241
    5. 'right' → logprob: -3.770311117172241
    6. ' current' → logprob: -5.14531135559082
    7. '_' → logprob: -5.39531135559082
    8. '   ' → logprob: -5.64531135559082
    9. ' ' → logprob: -5.64531135559082
    10. ',' → logprob: -5.89531135559082

Token 185: ' actuelle' (ID: 104951)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7455554008483887
    2. '<|end|>' → logprob: -0.9955554008483887
    3. ' ' → logprob: -2.7455554008483887
    4. ' actuelle' → logprob: -3.3705554008483887
    5. '<|end|>' → logprob: -4.120555400848389
    6. ' current' → logprob: -4.495555400848389
    7. '  ' → logprob: -4.745555400848389
    8. 'current' → logprob: -5.120555400848389
    9. '    ' → logprob: -5.620555400848389
    10. ',' → logprob: -5.995555400848389

Token 186: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05148475989699364
    2. ' ' → logprob: -4.30148458480835
    3. ' de' → logprob: -4.42648458480835
    4. ' à' → logprob: -5.30148458480835
    5. '<|end|>' → logprob: -5.55148458480835
    6. ' =' → logprob: -5.80148458480835
    7. '  ' → logprob: -5.92648458480835
    8. '    ' → logprob: -6.30148458480835
    9. ',' → logprob: -6.30148458480835
    10. ' of' → logprob: -6.42648458480835

Token 187: ' l' (ID: 305)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.13244451582431793
    2. 'n' → logprob: -2.1324446201324463
    3. ' right' → logprob: -6.007444381713867
    4. 'right' → logprob: -6.132444381713867
    5. ' ' → logprob: -7.507444381713867
    6. ' m' → logprob: -9.757444381713867
    7. ' l' → logprob: -9.757444381713867
    8. 'l' → logprob: -10.007444381713867
    9. 'm' → logprob: -10.882444381713867
    10. ' droite' → logprob: -11.132444381713867

Token 188: ''' (ID: 6)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3719600439071655
    2. ' n' → logprob: -1.4969600439071655
    3. 'interval' → logprob: -1.8719600439071655
    4. 'n' → logprob: -2.246960163116455
    5. ' interval' → logprob: -2.621960163116455
    6. 'space' → logprob: -2.871960163116455
    7. '   ' → logprob: -3.121960163116455
    8. '_' → logprob: -4.121960163116455
    9. ' ' → logprob: -4.996960163116455
    10. ''espace' → logprob: -4.996960163116455

Token 189: 'interval' (ID: 37558)
  Prédit: 'interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.3194149136543274
    2. ' interval' → logprob: -1.3194148540496826
    3. ' n' → logprob: -5.569415092468262
    4. 'n' → logprob: -6.944415092468262
    5. ' ' → logprob: -7.569415092468262
    6. 'inter' → logprob: -8.194415092468262
    7. ' espace' → logprob: -9.444415092468262
    8. 'int' → logprob: -9.444415092468262
    9. ' intervalo' → logprob: -9.694415092468262
    10. 'range' → logprob: -10.069415092468262

Token 190: 'le' (ID: 282)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0004353181866463274
    2. 're' → logprob: -8.250434875488281
    3. ' e' → logprob: -9.750434875488281
    4. '   ' → logprob: -10.250434875488281
    5. 'ère' → logprob: -10.750434875488281
    6. 'aire' → logprob: -10.875434875488281
    7. 'ètre' → logprob: -11.500434875488281
    8. 'ale' → logprob: -12.000434875488281
    9. 'ière' → logprob: -12.375434875488281
    10. ' ' → logprob: -12.500434875488281

Token 191: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20957307517528534
    2. ' ' → logprob: -2.2095730304718018
    3. ' =' → logprob: -3.0845730304718018
    4. '    ' → logprob: -4.709573268890381
    5. ' d' → logprob: -5.084573268890381
    6. '  ' → logprob: -5.584573268890381
    7. ',' → logprob: -6.084573268890381
    8. '<|end|>' → logprob: -6.459573268890381
    9. ' de' → logprob: -6.709573268890381
    10. '=' → logprob: -6.709573268890381

Token 192: ''intérêt' (ID: 152139)
  Prédit: ''intérêt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''intérêt' → logprob: -0.16425767540931702
    2. ''' → logprob: -1.9142576456069946
    3. ''int' → logprob: -6.164257526397705
    4. '’intérêt' → logprob: -7.289257526397705
    5. '_' → logprob: -8.414258003234863
    6. ''inter' → logprob: -8.664258003234863
    7. ''_' → logprob: -8.664258003234863
    8. ''inté' → logprob: -8.914258003234863
    9. 'e' → logprob: -9.414258003234863
    10. '   ' → logprob: -9.539258003234863

Token 193: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0021131434477865696
    2. 'right' → logprob: -7.627113342285156
    3. ' =' → logprob: -7.627113342285156
    4. ' ' → logprob: -8.377113342285156
    5. ' right' → logprob: -8.502113342285156
    6. '<|end|>' → logprob: -8.502113342285156
    7. '=' → logprob: -8.627113342285156
    8. '  ' → logprob: -9.252113342285156
    9. ',' → logprob: -9.502113342285156
    10. '    ' → logprob: -10.127113342285156

Token 194: ' initial' (ID: 4871)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9899609684944153
    2. ' n' → logprob: -1.1149609088897705
    3. 'n' → logprob: -1.2399609088897705
    4. ' 
' → logprob: -5.73996114730835
    5. ' ' → logprob: -5.98996114730835
    6. '  ' → logprob: -6.48996114730835
    7. '    ' → logprob: -7.36496114730835
    8. '    
' → logprob: -7.36496114730835
    9. '	n' → logprob: -7.61496114730835
    10. '   
' → logprob: -7.98996114730835

Token 195: 'ement' (ID: 962)
  Prédit: 'isé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'isé' → logprob: -1.1352331638336182
    2. 'isant' → logprob: -1.5102331638336182
    3. 'e' → logprob: -1.6352331638336182
    4. 'isée' → logprob: -2.010233163833618
    5. 'iser' → logprob: -2.885233163833618
    6. 'ise' → logprob: -3.385233163833618
    7. '#' → logprob: -4.135232925415039
    8. '=' → logprob: -4.760232925415039
    9. '   ' → logprob: -5.510232925415039
    10. 'isateur' → logprob: -6.135232925415039

Token 196: ' le' (ID: 505)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.714057445526123
    2. 'n' → logprob: -1.464057445526123
    3. ' ' → logprob: -1.714057445526123
    4. '<|end|>' → logprob: -2.464057445526123
    5. '    ' → logprob: -6.089057445526123
    6. '<|end|>' → logprob: -6.214057445526123
    7. ' ,' → logprob: -6.464057445526123
    8. '   ' → logprob: -6.464057445526123
    9. '  ' → logprob: -6.464057445526123
    10. ',' → logprob: -6.589057445526123

Token 197: ' plus' (ID: 2932)
  Prédit: ' plus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.09267833083868027
    2. 'plus' → logprob: -3.2176783084869385
    3. 'n' → logprob: -3.5926783084869385
    4. ' n' → logprob: -4.592678546905518
    5. ' largest' → logprob: -5.342678546905518
    6. ' biggest' → logprob: -6.092678546905518
    7. ' meilleur' → logprob: -7.342678546905518
    8. ' bigger' → logprob: -7.467678546905518
    9. ' maximum' → logprob: -7.842678546905518
    10. 'largest' → logprob: -7.842678546905518

Token 198: ' grand' (ID: 6363)
  Prédit: ' grand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grand' → logprob: -0.10748208314180374
    2. 'grand' → logprob: -2.4824821949005127
    3. ' large' → logprob: -4.482481956481934
    4. ' n' → logprob: -5.982481956481934
    5. 'large' → logprob: -7.232481956481934
    6. ' possible' → logprob: -7.232481956481934
    7. ' m' → logprob: -7.482481956481934
    8. ' haut' → logprob: -7.982481956481934
    9. ' droit' → logprob: -8.607481956481934
    10. 'n' → logprob: -8.607481956481934

Token 199: ' possible' (ID: 4149)
  Prédit: ' possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.5872945785522461
    2. '<|end|>' → logprob: -1.087294578552246
    3. 'possible' → logprob: -3.087294578552246
    4. ')' → logprob: -3.837294578552246
    5. '<|end|>' → logprob: -4.837294578552246
    6. '   ' → logprob: -4.962294578552246
    7. ' )' → logprob: -4.962294578552246
    8. ' ' → logprob: -5.087294578552246
    9. '  ' → logprob: -6.212294578552246
    10. ' de' → logprob: -6.462294578552246

Token 200: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0063920458778738976
    2. 'right' → logprob: -6.506392002105713
    3. ' =' → logprob: -6.631392002105713
    4. '=' → logprob: -6.631392002105713
    5. ' right' → logprob: -7.381392002105713
    6. ',' → logprob: -7.381392002105713
    7. ')' → logprob: -8.631392478942871
    8. ' ' → logprob: -8.881392478942871
    9. '    ' → logprob: -9.131392478942871
    10. '    
' → logprob: -9.631392478942871

Token 201: 'n' (ID: 77)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22787657380104065
    2. ' )' → logprob: -1.7278765439987183
    3. 'n' → logprob: -4.102876663208008
    4. ' n' → logprob: -5.102876663208008
    5. ')n' → logprob: -5.727876663208008
    6. ' ' → logprob: -9.227876663208008
    7. ' )
' → logprob: -9.977876663208008
    8. ' ' → logprob: -10.227876663208008
    9. ',' → logprob: -10.977876663208008
    10. ')
' → logprob: -11.102876663208008

Token 202: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000827017764095217
    2. '+' → logprob: -7.875826835632324
    3. '   ' → logprob: -8.375826835632324
    4. ' )' → logprob: -9.000826835632324
    5. ')
' → logprob: -10.000826835632324
    6. ' +' → logprob: -10.875826835632324
    7. '')' → logprob: -12.500826835632324
    8. '```' → logprob: -12.500826835632324
    9. '+)' → logprob: -13.250826835632324
    10. ' ' → logprob: -13.375826835632324

Token 203: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07806672900915146
    2. '
' → logprob: -2.828066825866699
    3. '    
' → logprob: -4.828066825866699
    4. 'right' → logprob: -5.078066825866699
    5. ' right' → logprob: -8.3280668258667
    6. '   
' → logprob: -8.4530668258667
    7. ' ' → logprob: -8.5780668258667
    8. '  
' → logprob: -8.5780668258667
    9. '	right' → logprob: -8.5780668258667
    10. ' 
' → logprob: -8.8280668258667

Token 204: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.24254947900772095
    2. ' right' → logprob: -2.117549419403076
    3. '   ' → logprob: -2.367549419403076
    4. '
' → logprob: -7.242549419403076
    5. '	right' → logprob: -7.492549419403076
    6. '    
' → logprob: -10.117549896240234
    7. '[right' → logprob: -12.117549896240234
    8. '```' → logprob: -12.367549896240234
    9. ',right' → logprob: -12.367549896240234
    10. '  ' → logprob: -13.117549896240234

Token 205: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023252932354807854
    2. '=' → logprob: -3.7732529640197754
    3. ' ' → logprob: -12.648252487182617
    4. ' =
' → logprob: -13.148252487182617
    5. ')' → logprob: -13.898252487182617
    6. ',' → logprob: -14.273252487182617
    7. '   ' → logprob: -14.898252487182617
    8. '    ' → logprob: -16.648252487182617
    9. ' ,' → logprob: -16.773252487182617
    10. ' ' → logprob: -17.273252487182617

Token 206: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.020544691011309624
    2. 'n' → logprob: -3.8955447673797607
    3. '	n' → logprob: -13.39554500579834
    4. ' ' → logprob: -14.27054500579834
    5. ' ' → logprob: -14.64554500579834
    6. ' 
' → logprob: -15.89554500579834
    7. '   ' → logprob: -17.020544052124023
    8. ')n' → logprob: -17.520544052124023
    9. '_n' → logprob: -18.020544052124023
    10. ' m' → logprob: -18.145544052124023

Token 207: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6377461552619934
    2. '<|end|>' → logprob: -1.2627460956573486
    3. '
' → logprob: -1.8877460956573486
    4. '    
' → logprob: -3.5127460956573486
    5. '  
' → logprob: -6.387746334075928
    6. '```' → logprob: -6.762746334075928
    7. '<|end|>' → logprob: -6.762746334075928
    8. ')' → logprob: -6.887746334075928
    9. ' 
' → logprob: -7.887746334075928
    10. ' ' → logprob: -8.01274585723877

Token 208: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13344214856624603
    2. '
' → logprob: -2.8834421634674072
    3. '    
' → logprob: -3.5084421634674072
    4. '<|end|>' → logprob: -4.383441925048828
    5. '\n' → logprob: -4.758441925048828
    6. ' ' → logprob: -5.508441925048828
    7. '```' → logprob: -5.883441925048828
    8. '  
' → logprob: -5.883441925048828
    9. ' 
' → logprob: -6.633441925048828
    10. '  ' → logprob: -6.633441925048828

Token 209: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1281326562166214
    2. '
' → logprob: -2.7531325817108154
    3. '    
' → logprob: -4.2531328201293945
    4. 'for' → logprob: -4.3781328201293945
    5. 'while' → logprob: -4.8781328201293945
    6. '<|end|>' → logprob: -5.3781328201293945
    7. ' for' → logprob: -5.5031328201293945
    8. ' while' → logprob: -6.0031328201293945
    9. ' 
' → logprob: -6.0031328201293945
    10. ' ' → logprob: -6.1281328201293945

Token 210: ' D' (ID: 415)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3919258713722229
    2. 'while' → logprob: -1.1419258117675781
    3. '#' → logprob: -6.516925811767578
    4. ' for' → logprob: -6.641925811767578
    5. ' while' → logprob: -6.641925811767578
    6. 'result' → logprob: -7.266925811767578
    7. 'answer' → logprob: -10.141925811767578
    8. '   ' → logprob: -10.766925811767578
    9. 'results' → logprob: -10.766925811767578
    10. 'mid' → logprob: -10.766925811767578

Token 211: 'ém' (ID: 4135)
  Prédit: 'ef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ef' → logprob: -0.2044401466846466
    2. 'e' → logprob: -2.454440116882324
    3. '   ' → logprob: -3.079440116882324
    4. '#' → logprob: -3.579440116882324
    5. ' while' → logprob: -5.079440116882324
    6. ' #' → logprob: -5.454440116882324
    7. 'while' → logprob: -5.579440116882324
    8. ' ' → logprob: -6.079440116882324
    9. 'é' → logprob: -6.454440116882324
    10. 'éf' → logprob: -7.204440116882324

Token 212: 'arre' (ID: 55489)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.3507603406906128
    2. 'é' → logprob: -1.4757603406906128
    3. '   ' → logprob: -3.8507604598999023
    4. 'ef' → logprob: -4.225760459899902
    5. 'éf' → logprob: -4.475760459899902
    6. '#' → logprob: -4.850760459899902
    7. 'u' → logprob: -4.975760459899902
    8. 'ebut' → logprob: -6.225760459899902
    9. 'em' → logprob: -7.850760459899902
    10. 'éc' → logprob: -7.850760459899902

Token 213: ' une' (ID: 2463)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.9485742449760437
    2. ' une' → logprob: -0.9485742449760437
    3. ' a' → logprob: -2.0735743045806885
    4. ' la' → logprob: -3.1985743045806885
    5. ' while' → logprob: -3.1985743045806885
    6. ' l' → logprob: -5.073574066162109
    7. 'le' → logprob: -6.448574066162109
    8. '   ' → logprob: -6.448574066162109
    9. 'a' → logprob: -6.573574066162109
    10. 'une' → logprob: -6.823574066162109

Token 214: ' boucle' (ID: 174211)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.23198001086711884
    2. 'while' → logprob: -1.6069799661636353
    3. ' for' → logprob: -5.981979846954346
    4. 'for' → logprob: -6.231979846954346
    5. '   ' → logprob: -6.981979846954346
    6. ' boucle' → logprob: -8.481980323791504
    7. ' #' → logprob: -8.731980323791504
    8. '#' → logprob: -8.856980323791504
    9. 'import' → logprob: -9.106980323791504
    10. '
' → logprob: -9.231980323791504

Token 215: ' qui' (ID: 2780)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.23062117397785187
    2. '   ' → logprob: -1.9806212186813354
    3. 'while' → logprob: -2.855621099472046
    4. ' for' → logprob: -4.730621337890625
    5. 'for' → logprob: -6.730621337890625
    6. '    
' → logprob: -8.980621337890625
    7. '    ' → logprob: -9.480621337890625
    8. '	while' → logprob: -9.605621337890625
    9. '```' → logprob: -9.730621337890625
    10. '
' → logprob: -10.605621337890625

Token 216: ' s' (ID: 265)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.07936163246631622
    2. 'while' → logprob: -2.8293616771698
    3. '   ' → logprob: -4.829361438751221
    4. ' for' → logprob: -5.079361438751221
    5. 'for' → logprob: -6.954361438751221
    6. ' continue' → logprob: -7.204361438751221
    7. '    ' → logprob: -7.829361438751221
    8. ' ' → logprob: -8.454361915588379
    9. ' ' → logprob: -8.579361915588379
    10. '	while' → logprob: -9.579361915588379

Token 217: ''ex' (ID: 23472)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.9598366618156433
    2. 'uite' → logprob: -1.334836721420288
    3. 'e' → logprob: -1.709836721420288
    4. 'ure' → logprob: -3.334836721420288
    5. ''arr' → logprob: -4.084836483001709
    6. 'ur' → logprob: -4.209836483001709
    7. 'uit' → logprob: -4.334836483001709
    8. 'earch' → logprob: -4.709836483001709
    9. 'uis' → logprob: -4.959836483001709
    10. ' while' → logprob: -4.959836483001709

Token 218: 'écut' (ID: 96392)
  Prédit: 'ecute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ecute' → logprob: -0.5925570130348206
    2. 'ec' → logprob: -1.7175569534301758
    3. 'éc' → logprob: -1.8425569534301758
    4. 'e' → logprob: -2.967556953430176
    5. 'plore' → logprob: -3.967556953430176
    6. 'ecut' → logprob: -4.467556953430176
    7. 'iste' → logprob: -4.467556953430176
    8. 'é' → logprob: -5.842556953430176
    9. 'écut' → logprob: -6.217556953430176
    10. 'p' → logprob: -6.467556953430176

Token 219: 'era' (ID: 2060)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.20265355706214905
    2. 'era' → logprob: -1.7026535272598267
    3. 'ue' → logprob: -6.952653408050537
    4. 'a' → logprob: -8.827653884887695
    5. 'er' → logprob: -9.577653884887695
    6. 'uera' → logprob: -10.952653884887695
    7. '   ' → logprob: -11.702653884887695
    8. '```' → logprob: -11.702653884887695
    9. 'u' → logprob: -12.077653884887695
    10. 'ra' → logprob: -12.452653884887695

Token 220: ' exactement' (ID: 108701)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.4178380072116852
    2. ' tant' → logprob: -1.1678379774093628
    3. 'while' → logprob: -4.042838096618652
    4. 'tant' → logprob: -4.542838096618652
    5. ' n' → logprob: -7.667838096618652
    6. ' until' → logprob: -7.792838096618652
    7. ' m' → logprob: -7.792838096618652
    8. ' for' → logprob: -7.917838096618652
    9. ' jusqu' → logprob: -8.667838096618652
    10. '   ' → logprob: -8.667838096618652

Token 221: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.08893914520740509
    2. 'm' → logprob: -2.7139391899108887
    3. ' n' → logprob: -4.463939189910889
    4. ' while' → logprob: -6.213939189910889
    5. ' for' → logprob: -6.213939189910889
    6. 'n' → logprob: -6.338939189910889
    7. '   ' → logprob: -8.21393871307373
    8. ' ' → logprob: -8.21393871307373
    9. ' until' → logprob: -8.46393871307373
    10. 'for' → logprob: -8.58893871307373

Token 222: ' fois' (ID: 14697)
  Prédit: ' times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' times' → logprob: -0.7412301898002625
    2. ' fois' → logprob: -0.7412301898002625
    3. 'fois' → logprob: -3.8662302494049072
    4. 'times' → logprob: -4.116230010986328
    5. ' veces' → logprob: -6.241230010986328
    6. ' ' → logprob: -6.491230010986328
    7. ' ' → logprob: -6.491230010986328
    8. '<|end|>' → logprob: -6.616230010986328
    9. ':' → logprob: -6.991230010986328
    10. ' kertaa' → logprob: -8.116230010986328

Token 223: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7999956011772156
    2. 'for' → logprob: -0.9249956011772156
    3. '   ' → logprob: -2.0499956607818604
    4. '
' → logprob: -3.9249956607818604
    5. '    
' → logprob: -5.549995422363281
    6. '	for' → logprob: -7.049995422363281
    7. ' 
' → logprob: -8.299995422363281
    8. ':' → logprob: -8.799995422363281
    9. '\n' → logprob: -9.174995422363281
    10. '```' → logprob: -9.299995422363281

Token 224: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26396089792251587
    2. ' for' → logprob: -1.638960838317871
    3. 'for' → logprob: -3.388960838317871
    4. '<|end|>' → logprob: -6.013960838317871
    5. '    
' → logprob: -7.138960838317871
    6. '	for' → logprob: -8.388960838317871
    7. '
' → logprob: -8.513960838317871
    8. '```' → logprob: -9.013960838317871
    9. ' 
' → logprob: -9.763960838317871
    10. ':' → logprob: -10.013960838317871

Token 225: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6516991853713989
    2. ' for' → logprob: -0.7766991853713989
    3. '   ' → logprob: -4.026699066162109
    4. '
' → logprob: -7.901699066162109
    5. ' 
' → logprob: -8.27669906616211
    6. '    
' → logprob: -8.52669906616211
    7. '	for' → logprob: -8.90169906616211
    8. '\n' → logprob: -10.15169906616211
    9. '    ' → logprob: -11.27669906616211
    10. ' ' → logprob: -11.40169906616211

Token 226: ' L' (ID: 451)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5953560471534729
    2. 'for' → logprob: -0.8453560471534729
    3. '   ' → logprob: -3.970355987548828
    4. '	for' → logprob: -8.470355987548828
    5. ' 
' → logprob: -10.095355987548828
    6. '    
' → logprob: -10.095355987548828
    7. '
' → logprob: -10.720355987548828
    8. '    ' → logprob: -11.595355987548828
    9. ' ' → logprob: -11.845355987548828
    10. ' while' → logprob: -12.345355987548828

Token 227: ''' (ID: 6)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.798990786075592
    2. 'for' → logprob: -0.798990786075592
    3. 'or' → logprob: -2.2989907264709473
    4. ' or' → logprob: -9.673991203308105
    5. ' ' → logprob: -12.673991203308105
    6. 'r' → logprob: -13.423991203308105
    7. 'o' → logprob: -14.048991203308105
    8. '#' → logprob: -14.548991203308105
    9. 'oor' → logprob: -14.548991203308105
    10. 'range' → logprob: -14.548991203308105

Token 228: 'underscore' (ID: 131817)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.042000096291303635
    2. 'or' → logprob: -3.7920000553131104
    3. ' for' → logprob: -4.0420002937316895
    4. 'range' → logprob: -7.4170002937316895
    5. '_' → logprob: -9.166999816894531
    6. 'r' → logprob: -9.416999816894531
    7. '
' → logprob: -10.291999816894531
    8. 'n' → logprob: -10.666999816894531
    9. ' or' → logprob: -10.791999816894531
    10. ' range' → logprob: -11.041999816894531

Token 229: ' '_'' (ID: 86115)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.6587916612625122
    2. '_' → logprob: -1.2837916612625122
    3. ' for' → logprob: -2.1587915420532227
    4. ' ' → logprob: -3.2837915420532227
    5. '<|end|>' → logprob: -3.6587915420532227
    6. 'for' → logprob: -4.408791542053223
    7. ' is' → logprob: -4.908791542053223
    8. ' ,' → logprob: -6.033791542053223
    9. '<|end|>' → logprob: -6.408791542053223
    10. ',' → logprob: -7.283791542053223

Token 230: ' est' (ID: 893)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 231: ' une' (ID: 2463)
  Prédit: ' utilisé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisé' → logprob: -0.07763796299695969
    2. ' utilisée' → logprob: -3.9526379108428955
    3. ' used' → logprob: -4.077638149261475
    4. '_' → logprob: -4.202638149261475
    5. ' souvent' → logprob: -4.452638149261475
    6. ' une' → logprob: -5.077638149261475
    7. ' un' → logprob: -6.077638149261475
    8. 'util' → logprob: -7.327638149261475
    9. ' traditionnel' → logprob: -7.577638149261475
    10. ' utilisés' → logprob: -8.077637672424316

Token 232: ' convention' (ID: 39395)
  Prédit: ' variable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' variable' → logprob: -0.2245350480079651
    2. 'variable' → logprob: -2.3495349884033203
    3. '_' → logprob: -2.8495349884033203
    4. ' placeholder' → logprob: -3.8495349884033203
    5. ' convention' → logprob: -4.59953498840332
    6. 'placeholder' → logprob: -4.84953498840332
    7. ' conventional' → logprob: -6.09953498840332
    8. 'con' → logprob: -6.34953498840332
    9. 'for' → logprob: -6.84953498840332
    10. ' for' → logprob: -6.97453498840332

Token 233: ' pour' (ID: 1930)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.014982939697802067
    2. 'for' → logprob: -4.389983177185059
    3. '_' → logprob: -6.514983177185059
    4. ' used' → logprob: -7.514983177185059
    5. ' pour' → logprob: -8.889983177185059
    6. ' to' → logprob: -9.264983177185059
    7. ' _' → logprob: -9.514983177185059
    8. ' utilisée' → logprob: -10.639983177185059
    9. ' ' → logprob: -11.014983177185059
    10. ',' → logprob: -11.389983177185059

Token 234: ' ind' (ID: 1383)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.006112108938395977
    2. ' _' → logprob: -5.756112098693848
    3. 'ind' → logprob: -7.131112098693848
    4. 'for' → logprob: -7.506112098693848
    5. ' for' → logprob: -7.631112098693848
    6. ' ' → logprob: -8.006112098693848
    7. ' variable' → logprob: -8.381112098693848
    8. 'variable' → logprob: -10.006112098693848
    9. ' indicate' → logprob: -10.131112098693848
    10. ' la' → logprob: -10.256112098693848

Token 235: 'iquer' (ID: 63028)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.5730628371238708
    2. 'iquer' → logprob: -1.1980628967285156
    3. 'er' → logprob: -3.6980628967285156
    4. 'iqué' → logprob: -3.8230628967285156
    5. 'ique' → logprob: -4.073062896728516
    6. 'icate' → logprob: -4.448062896728516
    7. 'ic' → logprob: -4.573062896728516
    8. 'icating' → logprob: -4.823062896728516
    9. 'ifferent' → logprob: -4.948062896728516
    10. 'ependent' → logprob: -4.948062896728516

Token 236: ' que' (ID: 661)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00998650211840868
    2. ' ' → logprob: -5.759986400604248
    3. ' that' → logprob: -5.759986400604248
    4. ' que' → logprob: -6.384986400604248
    5. '<|end|>' → logprob: -7.259986400604248
    6. ' ' → logprob: -8.759986877441406
    7. ',' → logprob: -8.759986877441406
    8. ' _' → logprob: -8.759986877441406
    9. ' for' → logprob: -8.759986877441406
    10. ' qu' → logprob: -9.509986877441406

Token 237: ' nous' (ID: 6176)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.033034611493349075
    2. ' ' → logprob: -3.908034563064575
    3. ' _' → logprob: -4.908034801483154
    4. ' on' → logprob: -6.783034801483154
    5. ' the' → logprob: -7.033034801483154
    6. ' for' → logprob: -7.283034801483154
    7. 'on' → logprob: -7.408034801483154
    8. ' we' → logprob: -7.533034801483154
    9. 'for' → logprob: -8.533034324645996
    10. 'the' → logprob: -8.658034324645996

Token 238: ' n' (ID: 297)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6265457272529602
    2. ' ' → logprob: -1.7515456676483154
    3. '<|end|>' → logprob: -2.6265456676483154
    4. ' don't' → logprob: -2.8765456676483154
    5. ' n' → logprob: -3.0015456676483154
    6. 'n' → logprob: -3.3765456676483154
    7. ' for' → logprob: -3.8765456676483154
    8. 'for' → logprob: -4.2515459060668945
    9. ' _' → logprob: -5.0015459060668945
    10. ' not' → logprob: -5.1265459060668945

Token 239: ''util' (ID: 37761)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8857759833335876
    2. ''' → logprob: -1.2607760429382324
    3. ''util' → logprob: -2.7607760429382324
    4. ''avons' → logprob: -3.1357760429382324
    5. ' for' → logprob: -3.2607760429382324
    6. '_' → logprob: -3.7607760429382324
    7. 'n' → logprob: -3.8857760429382324
    8. ' ' → logprob: -4.760776042938232
    9. ''ai' → logprob: -4.885776042938232
    10. ' n' → logprob: -5.135776042938232

Token 240: 'isons' (ID: 47841)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.5218282341957092
    2. 's' → logprob: -1.1468281745910645
    3. 'sé' → logprob: -2.8968281745910645
    4. 'ser' → logprob: -3.6468281745910645
    5. 'isé' → logprob: -6.2718281745910645
    6. 'sons' → logprob: -6.3968281745910645
    7. 'ses' → logprob: -7.0218281745910645
    8. 'isés' → logprob: -7.3968281745910645
    9. 't' → logprob: -7.7718281745910645
    10. 'isées' → logprob: -7.8968281745910645

Token 241: ' pas' (ID: 2173)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04958082363009453
    2. ' ' → logprob: -3.5495808124542236
    3. ' pas' → logprob: -4.299581050872803
    4. ' _' → logprob: -6.299581050872803
    5. ' the' → logprob: -6.674581050872803
    6. ' la' → logprob: -6.799581050872803
    7. 'the' → logprob: -7.549581050872803
    8. ' ' → logprob: -8.549580574035645
    9. ' variable' → logprob: -9.174580574035645
    10. 's' → logprob: -9.174580574035645

Token 242: ' la' (ID: 557)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.32808712124824524
    2. ' the' → logprob: -1.7030870914459229
    3. ' la' → logprob: -3.078087091445923
    4. ' _' → logprob: -3.953087091445923
    5. ' ' → logprob: -4.828087329864502
    6. ' le' → logprob: -5.078087329864502
    7. ' a' → logprob: -5.328087329864502
    8. ' variable' → logprob: -5.328087329864502
    9. 'the' → logprob: -6.453087329864502
    10. ' l' → logprob: -6.453087329864502

Token 243: ' variable' (ID: 11076)
  Prédit: ' variable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' variable' → logprob: -0.725398063659668
    2. 'variable' → logprob: -0.725398063659668
    3. '_' → logprob: -3.475398063659668
    4. 'for' → logprob: -8.100398063659668
    5. '_variable' → logprob: -8.725398063659668
    6. ' for' → logprob: -9.100398063659668
    7. 'range' → logprob: -9.850398063659668
    8. 'var' → logprob: -9.975398063659668
    9. ' _' → logprob: -10.225398063659668
    10. 'vari' → logprob: -11.225398063659668

Token 244: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3551004230976105
    2. ' de' → logprob: -2.105100393295288
    3. ' for' → logprob: -2.230100393295288
    4. ' _' → logprob: -3.105100393295288
    5. ' i' → logprob: -4.980100631713867
    6. 'for' → logprob: -5.355100631713867
    7. ',' → logprob: -6.230100631713867
    8. '<|end|>' → logprob: -6.730100631713867
    9. 'de' → logprob: -6.855100631713867
    10. ' ' → logprob: -7.105100631713867

Token 245: ' boucle' (ID: 174211)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.005821668077260256
    2. ' boucle' → logprob: -5.505821704864502
    3. 'loop' → logprob: -7.255821704864502
    4. 'bou' → logprob: -8.005821228027344
    5. ' loop' → logprob: -8.630821228027344
    6. 'iteration' → logprob: -9.255821228027344
    7. '_loop' → logprob: -9.630821228027344
    8. 'for' → logprob: -9.630821228027344
    9. 'range' → logprob: -9.755821228027344
    10. 'i' → logprob: -10.505821228027344

Token 246: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1707140952348709
    2. 'for' → logprob: -2.0457141399383545
    3. '<|end|>' → logprob: -5.295713901519775
    4. '
' → logprob: -5.420713901519775
    5. ' in' → logprob: -5.670713901519775
    6. '  
' → logprob: -5.795713901519775
    7. ' 
' → logprob: -5.920713901519775
    8. ' ' → logprob: -5.920713901519775
    9. '\n' → logprob: -6.670713901519775
    10. ',' → logprob: -6.920713901519775

Token 247: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.42642247676849365
    2. 'for' → logprob: -1.3014224767684937
    3. '
' → logprob: -3.051422595977783
    4. '   ' → logprob: -4.426422595977783
    5. ' 
' → logprob: -4.801422595977783
    6. '\n' → logprob: -5.926422595977783
    7. '<|end|>' → logprob: -6.551422595977783
    8. '    
' → logprob: -6.801422595977783
    9. '  
' → logprob: -6.926422595977783
    10. '\' → logprob: -7.676422595977783

Token 248: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1131134033203125
    2. ' for' → logprob: -2.2381134033203125
    3. '_' → logprob: -8.863113403320312
    4. '_for' → logprob: -9.613113403320312
    5. '
' → logprob: -10.363113403320312
    6. ' _' → logprob: -10.863113403320312
    7. '   ' → logprob: -10.988113403320312
    8. '_
' → logprob: -12.238113403320312
    9. '	for' → logprob: -12.363113403320312
    10. ' 
' → logprob: -13.738113403320312

Token 249: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6931517124176025
    2. ' _' → logprob: -0.6931517124176025
    3. ' ' → logprob: -13.068151473999023
    4. ' ' → logprob: -13.068151473999023
    5. ' i' → logprob: -15.318151473999023
    6. ' ‌' → logprob: -17.068151473999023
    7. ' _
' → logprob: -17.443151473999023
    8. '_i' → logprob: -18.943151473999023
    9. ' in' → logprob: -19.068151473999023
    10. '‌' → logprob: -19.443151473999023

Token 250: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003105345880612731
    2. 'in' → logprob: -6.003105163574219
    3. ' ' → logprob: -7.378105163574219
    4. ' i' → logprob: -13.253105163574219
    5. 'range' → logprob: -14.378105163574219
    6. ' ,' → logprob: -14.878105163574219
    7. '_' → logprob: -14.878105163574219
    8. ',' → logprob: -14.878105163574219
    9. ' ' → logprob: -15.003105163574219
    10. ' range' → logprob: -15.753105163574219

Token 251: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.31326213479042053
    2. ' range' → logprob: -1.3132621049880981
    3. '(range' → logprob: -15.438261985778809
    4. '	range' → logprob: -15.438261985778809
    5. 'rang' → logprob: -16.938262939453125
    6. 'Range' → logprob: -17.563262939453125
    7. '_range' → logprob: -17.938262939453125
    8. '.range' → logprob: -18.938262939453125
    9. 'ra' → logprob: -19.688262939453125
    10. 'r' → logprob: -20.188262939453125

Token 252: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.006773868575692177
    2. '(' → logprob: -5.006773948669434
    3. ' (' → logprob: -9.756773948669434
    4. '(
' → logprob: -15.256773948669434
    5. ' m' → logprob: -15.631773948669434
    6. 'm' → logprob: -16.381772994995117
    7. ',' → logprob: -18.506772994995117
    8. '(M' → logprob: -19.006772994995117
    9. ',m' → logprob: -19.131772994995117
    10. '1' → logprob: -19.506772994995117

Token 253: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0013217884115874767
    2. '):
' → logprob: -6.876321792602539
    3. ':' → logprob: -8.751321792602539
    4. ' ):' → logprob: -9.251321792602539
    5. ')' → logprob: -10.751321792602539
    6. '():' → logprob: -11.751321792602539
    7. '   ' → logprob: -12.876321792602539
    8. '):
' → logprob: -14.251321792602539
    9. '):

' → logprob: -15.001321792602539
    10. ' :' → logprob: -15.501321792602539

Token 254: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2380576878786087
    2. ':' → logprob: -1.7380577325820923
    3. '   ' → logprob: -4.363057613372803
    4. '<|end|>' → logprob: -4.738057613372803
    5. ',' → logprob: -5.238057613372803
    6. '():' → logprob: -5.738057613372803
    7. ' :' → logprob: -6.738057613372803
    8. ' ' → logprob: -7.113057613372803
    9. '(' → logprob: -7.738057613372803
    10. '    ' → logprob: -7.863057613372803

Token 255: ' #' (ID: 1069)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.28327473998069763
    2. '   ' → logprob: -2.2832746505737305
    3. 'a' → logprob: -2.7832746505737305
    4. 'x' → logprob: -3.5332746505737305
    5. ' l' → logprob: -3.5332746505737305
    6. '       ' → logprob: -5.1582746505737305
    7. ' a' → logprob: -5.6582746505737305
    8. 'L' → logprob: -5.6582746505737305
    9. 'q' → logprob: -6.4082746505737305
    10. ' x' → logprob: -6.6582746505737305

Token 256: ' À' (ID: 27643)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3221213221549988
    2. 'a' → logprob: -2.4471213817596436
    3. ' l' → logprob: -2.5721213817596436
    4. 'x' → logprob: -3.3221213817596436
    5. ' a' → logprob: -4.4471211433410645
    6. 'query' → logprob: -4.6971211433410645
    7. 'L' → logprob: -5.0721211433410645
    8. 'li' → logprob: -5.0721211433410645
    9. 'line' → logprob: -5.3221211433410645
    10. ' query' → logprob: -5.3221211433410645

Token 257: ' chaque' (ID: 21194)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4763528108596802
    2. ' ' → logprob: -1.7263528108596802
    3. ' input' → logprob: -2.3513526916503906
    4. 'input' → logprob: -2.6013526916503906
    5. '_' → logprob: -2.7263526916503906
    6. 'left' → logprob: -2.7263526916503906
    7. '=' → logprob: -3.3513526916503906
    8. ' =' → logprob: -3.3513526916503906
    9. '   ' → logprob: -3.6013526916503906
    10. ' left' → logprob: -3.8513526916503906

Token 258: ' it' (ID: 480)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.9878240823745728
    2. 'line' → logprob: -1.9878240823745728
    3. 'ligne' → logprob: -1.9878240823745728
    4. ' ligne' → logprob: -2.737823963165283
    5. '   ' → logprob: -2.987823963165283
    6. ' ' → logprob: -3.112823963165283
    7. 'input' → logprob: -3.362823963165283
    8. 'instruction' → logprob: -3.487823963165283
    9. ' input' → logprob: -3.862823963165283
    10. ':' → logprob: -4.612823963165283

Token 259: 'ération' (ID: 24977)
  Prédit: 'ération'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ération' → logprob: -0.007182637695223093
    2. 'er' → logprob: -5.257182598114014
    3. 'é' → logprob: -6.757182598114014
    4. 'ér' → logprob: -8.507183074951172
    5. 'érieur' → logprob: -9.382183074951172
    6. 'ère' → logprob: -9.382183074951172
    7. 'éré' → logprob: -9.382183074951172
    8. 'e' → logprob: -9.507183074951172
    9. '   ' → logprob: -10.007183074951172
    10. 'érêt' → logprob: -10.132183074951172

Token 260: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.306739866733551
    2. '       ' → logprob: -1.5567398071289062
    3. ' ,' → logprob: -3.0567398071289062
    4. '   ' → logprob: -6.806739807128906
    5. '        ' → logprob: -6.806739807128906
    6. '        
' → logprob: -7.181739807128906
    7. '    ' → logprob: -7.431739807128906
    8. ':' → logprob: -7.431739807128906
    9. ' ' → logprob: -8.306739807128906
    10. '      ' → logprob: -8.556739807128906

Token 261: ' demande' (ID: 26737)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7408789992332458
    2. ' l' → logprob: -0.8658789992332458
    3. 'a' → logprob: -3.2408790588378906
    4. 'x' → logprob: -3.7408790588378906
    5. ' a' → logprob: -3.9908790588378906
    6. ' x' → logprob: -4.365879058837891
    7. '   ' → logprob: -6.615879058837891
    8. 'li' → logprob: -6.865879058837891
    9. ' ' → logprob: -7.365879058837891
    10. ' li' → logprob: -7.490879058837891

Token 262: ' à' (ID: 1221)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -1.0270179510116577
    2. '       ' → logprob: -1.2770179510116577
    3. '   ' → logprob: -2.4020180702209473
    4. 'l' → logprob: -3.0270180702209473
    5. ' ' → logprob: -3.1520180702209473
    6. '    ' → logprob: -3.5270180702209473
    7. ' la' → logprob: -3.6520180702209473
    8. ' un' → logprob: -4.027018070220947
    9. '_' → logprob: -4.277018070220947
    10. ' l' → logprob: -4.527018070220947

Token 263: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7737597227096558
    2. 'input' → logprob: -1.6487597227096558
    3. ' input' → logprob: -2.2737598419189453
    4. ' l' → logprob: -2.5237598419189453
    5. ' user' → logprob: -2.5237598419189453
    6. 'user' → logprob: -3.6487598419189453
    7. '   ' → logprob: -3.7737598419189453
    8. ' ' → logprob: -3.8987598419189453
    9. '=input' → logprob: -5.898759841918945
    10. ' la' → logprob: -6.273759841918945

Token 264: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.7054328918457031
    2. 'user' → logprob: -0.8304328918457031
    3. ' user' → logprob: -3.455432891845703
    4. 'input' → logprob: -4.455432891845703
    5. 'util' → logprob: -4.580432891845703
    6. 'us' → logprob: -5.580432891845703
    7. ' utilisateur' → logprob: -5.705432891845703
    8. '’utilisateur' → logprob: -5.955432891845703
    9. ''user' → logprob: -6.830432891845703
    10. '_user' → logprob: -6.830432891845703

Token 265: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.08183286339044571
    2. ' d' → logprob: -3.8318328857421875
    3. '<|end|>' → logprob: -4.0818328857421875
    4. 'de' → logprob: -4.9568328857421875
    5. '  ' → logprob: -5.2068328857421875
    6. ' ' → logprob: -5.2068328857421875
    7. ')' → logprob: -5.8318328857421875
    8. '    ' → logprob: -5.9568328857421875
    9. ' une' → logprob: -5.9568328857421875
    10. '   ' → logprob: -6.2068328857421875

Token 266: ' saisir' (ID: 152120)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6068772077560425
    2. ' input' → logprob: -1.1068772077560425
    3. ' saisir' → logprob: -3.231877326965332
    4. 'l' → logprob: -3.981877326965332
    5. 'map' → logprob: -4.231877326965332
    6. ' ' → logprob: -4.356877326965332
    7. '   ' → logprob: -4.856877326965332
    8. ' map' → logprob: -4.856877326965332
    9. ',' → logprob: -5.481877326965332
    10. 'split' → logprob: -5.856877326965332

Token 267: ' une' (ID: 2463)
  Prédit: ' deux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deux' → logprob: -1.0213316679000854
    2. ' une' → logprob: -1.1463316679000854
    3. ' two' → logprob: -2.146331787109375
    4. ' un' → logprob: -3.521331787109375
    5. 'a' → logprob: -3.771331787109375
    6. '   ' → logprob: -4.021331787109375
    7. 'two' → logprob: -4.146331787109375
    8. ' ' → logprob: -4.146331787109375
    9. ' a' → logprob: -4.271331787109375
    10. 'l' → logprob: -4.521331787109375

Token 268: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.8883420825004578
    2. 'interval' → logprob: -2.1383421421051025
    3. 'line' → logprob: -2.2633421421051025
    4. 'nou' → logprob: -2.7633421421051025
    5. 'new' → logprob: -3.0133421421051025
    6. ' new' → logprob: -3.5133421421051025
    7. ' nouvelle' → logprob: -3.5133421421051025
    8. ' ligne' → logprob: -3.7633421421051025
    9. ' line' → logprob: -3.7633421421051025
    10. 'ent' → logprob: -3.7633421421051025

Token 269: ' avec' (ID: 3937)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4379149079322815
    2. '()' → logprob: -1.6879148483276367
    3. ',' → logprob: -3.5629148483276367
    4. '   ' → logprob: -3.6879148483276367
    5. '        
' → logprob: -3.9379148483276367
    6. '<|end|>' → logprob: -4.187914848327637
    7. ')' → logprob: -4.812914848327637
    8. ' =' → logprob: -4.812914848327637
    9. 'split' → logprob: -4.937914848327637
    10. '().' → logprob: -5.312914848327637

Token 270: ' deux' (ID: 10301)
  Prédit: ' two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' two' → logprob: -0.6029019951820374
    2. ' deux' → logprob: -0.9779019951820374
    3. 'two' → logprob: -2.7279019355773926
    4. 'de' → logprob: -4.727901935577393
    5. '   ' → logprob: -6.602901935577393
    6. 'left' → logprob: -8.10290241241455
    7. ',' → logprob: -8.85290241241455
    8. '2' → logprob: -9.10290241241455
    9. ' left' → logprob: -9.22790241241455
    10. ' ' → logprob: -9.60290241241455

Token 271: ' ent' (ID: 1121)
  Prédit: ' integers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' integers' → logprob: -0.5531232357025146
    2. ' ent' → logprob: -1.4281232357025146
    3. 'ent' → logprob: -2.1781232357025146
    4. ' ' → logprob: -3.5531232357025146
    5. ' espaces' → logprob: -4.428123474121094
    6. '_' → logprob: -4.553123474121094
    7. '_ent' → logprob: -4.928123474121094
    8. 'inte' → logprob: -5.303123474121094
    9. ' nombres' → logprob: -6.428123474121094
    10. 'int' → logprob: -7.178123474121094

Token 272: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -2.4034345187828876e-05
    2. 'ers' → logprob: -11.50002384185791
    3. 't' → logprob: -12.25002384185791
    4. 'i' → logprob: -12.75002384185791
    5. 'ier' → logprob: -13.37502384185791
    6. 'tiers' → logprob: -13.75002384185791
    7. 'ières' → logprob: -14.12502384185791
    8. 'ints' → logprob: -14.12502384185791
    9. 'eurs' → logprob: -14.25002384185791
    10. 'gers' → logprob: -15.12502384185791

Token 273: ' sépar' (ID: 97160)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7397633790969849
    2. 'a' → logprob: -1.1147633790969849
    3. 'l' → logprob: -1.9897633790969849
    4. 'x' → logprob: -3.9897632598876953
    5. ' l' → logprob: -4.364763259887695
    6. ' a' → logprob: -4.489763259887695
    7. ' ,' → logprob: -5.614763259887695
    8. 'L' → logprob: -6.239763259887695
    9. ' x' → logprob: -6.489763259887695
    10. ',l' → logprob: -6.489763259887695

Token 274: 'és' (ID: 1756)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.14381319284439087
    2. 'e' → logprob: -3.143813133239746
    3. 'és' → logprob: -3.268813133239746
    4. 'par' → logprob: -4.018813133239746
    5. 'é' → logprob: -4.143813133239746
    6. 'es' → logprob: -4.893813133239746
    7. 's' → logprob: -5.643813133239746
    8. 'ed' → logprob: -6.643813133239746
    9. ' by' → logprob: -7.643813133239746
    10. 'a' → logprob: -7.643813133239746

Token 275: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.11633075028657913
    2. 'par' → logprob: -2.241330862045288
    3. 'by' → logprob: -6.741330623626709
    4. ' by' → logprob: -6.866330623626709
    5. 'e' → logprob: -8.116331100463867
    6. ' ' → logprob: -8.866331100463867
    7. 'es' → logprob: -9.116331100463867
    8. 'b' → logprob: -9.366331100463867
    9. ',' → logprob: -9.491331100463867
    10. 'space' → logprob: -9.491331100463867

Token 276: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.4291670322418213
    2. ' un' → logprob: -1.5541670322418213
    3. 'space' → logprob: -1.8041670322418213
    4. ' espace' → logprob: -2.0541670322418213
    5. ' space' → logprob: -2.8041670322418213
    6. ''' → logprob: -3.3041670322418213
    7. 'a' → logprob: -3.4291670322418213
    8. ' a' → logprob: -3.6791670322418213
    9. ' une' → logprob: -3.6791670322418213
    10. 'un' → logprob: -3.6791670322418213

Token 277: ' espace' (ID: 66004)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.32365185022354126
    2. ' espace' → logprob: -1.3236517906188965
    3. 'esp' → logprob: -5.1986517906188965
    4. ''espace' → logprob: -5.9486517906188965
    5. 'space' → logprob: -6.4486517906188965
    6. '’espace' → logprob: -8.323652267456055
    7. ' espaces' → logprob: -8.948652267456055
    8. ' space' → logprob: -9.573652267456055
    9. ' ' → logprob: -9.573652267456055
    10. ''' → logprob: -11.073652267456055

Token 278: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20529302954673767
    2. 'a' → logprob: -2.5802929401397705
    3. ',' → logprob: -2.9552929401397705
    4. ' a' → logprob: -4.33029317855835
    5. 'left' → logprob: -4.83029317855835
    6. ' x' → logprob: -5.58029317855835
    7. 'start' → logprob: -5.58029317855835
    8. 'x' → logprob: -5.58029317855835
    9. 's' → logprob: -5.70529317855835
    10. '   ' → logprob: -5.70529317855835

Token 279: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6409986615180969
    2. 'a' → logprob: -1.6409986019134521
    3. ',' → logprob: -2.390998601913452
    4. ' a' → logprob: -2.640998601913452
    5. 'x' → logprob: -3.390998601913452
    6. ' x' → logprob: -4.265998840332031
    7. '   ' → logprob: -4.390998840332031
    8. ' ,' → logprob: -4.765998840332031
    9. ' l' → logprob: -5.015998840332031
    10. 'l' → logprob: -5.015998840332031

Token 280: ' #' (ID: 1069)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.2710209786891937
    2. 'a' → logprob: -2.1460208892822266
    3. ' l' → logprob: -2.2710208892822266
    4. ' a' → logprob: -4.771020889282227
    5. 'x' → logprob: -5.271020889282227
    6. '   ' → logprob: -7.021020889282227
    7. 'L' → logprob: -7.021020889282227
    8. ' L' → logprob: -7.521020889282227
    9. 'li' → logprob: -8.021020889282227
    10. ' x' → logprob: -8.146020889282227

Token 281: ' Ces' (ID: 35720)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.38206374645233154
    2. 'a' → logprob: -1.6320637464523315
    3. ' l' → logprob: -2.507063865661621
    4. ' a' → logprob: -4.257063865661621
    5. 'x' → logprob: -4.382063865661621
    6. 'L' → logprob: -5.382063865661621
    7. 'low' → logprob: -6.132063865661621
    8. ' L' → logprob: -6.632063865661621
    9. '   ' → logprob: -6.882063865661621
    10. ' x' → logprob: -7.132063865661621

Token 282: ' deux' (ID: 10301)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.9226868748664856
    2. 'l' → logprob: -1.5476868152618408
    3. 'a' → logprob: -1.6726868152618408
    4. ' a' → logprob: -2.047686815261841
    5. 'x' → logprob: -3.422686815261841
    6. ' x' → logprob: -3.797686815261841
    7. ',' → logprob: -5.92268705368042
    8. ' ' → logprob: -6.04768705368042
    9. ' left' → logprob: -6.67268705368042
    10. 'left' → logprob: -6.79768705368042

Token 283: ' ent' (ID: 1121)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9723432660102844
    2. 'l' → logprob: -0.9723432660102844
    3. 'x' → logprob: -2.3473432064056396
    4. ' a' → logprob: -2.9723432064056396
    5. ',' → logprob: -3.3473432064056396
    6. ' l' → logprob: -3.7223432064056396
    7. ' x' → logprob: -4.597343444824219
    8. ' integers' → logprob: -5.347343444824219
    9. ' ,' → logprob: -5.472343444824219
    10. ' ' → logprob: -6.222343444824219

Token 284: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0003765727742575109
    2. 'ers' → logprob: -8.62537670135498
    3. 'n' → logprob: -9.37537670135498
    4. 'ier' → logprob: -9.75037670135498
    5. 'ints' → logprob: -11.25037670135498
    6. ',' → logprob: -12.12537670135498
    7. 's' → logprob: -12.12537670135498
    8. 'ières' → logprob: -12.37537670135498
    9. '   ' → logprob: -12.75037670135498
    10. 'ents' → logprob: -12.87537670135498

Token 285: ' sont' (ID: 5242)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6195785403251648
    2. ',' → logprob: -0.9945785403251648
    3. '=' → logprob: -3.7445785999298096
    4. 'left' → logprob: -3.8695785999298096
    5. 'l' → logprob: -4.1195783615112305
    6. ' left' → logprob: -4.2445783615112305
    7. 'a' → logprob: -5.8695783615112305
    8. ' ,' → logprob: -6.2445783615112305
    9. ' a' → logprob: -6.2445783615112305
    10. 's' → logprob: -6.4945783615112305

Token 286: ' left' (ID: 3561)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.796376645565033
    2. ' l' → logprob: -0.921376645565033
    3. 'a' → logprob: -2.2963767051696777
    4. ' a' → logprob: -3.2963767051696777
    5. 'li' → logprob: -6.421376705169678
    6. '   ' → logprob: -6.421376705169678
    7. ',' → logprob: -6.546376705169678
    8. 'x' → logprob: -6.796376705169678
    9. ' L' → logprob: -6.921376705169678
    10. 'left' → logprob: -6.921376705169678

Token 287: '_i' (ID: 10853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6723195910453796
    2. '_update' → logprob: -1.7973196506500244
    3. '_query' → logprob: -1.7973196506500244
    4. '_new' → logprob: -3.2973196506500244
    5. '_interval' → logprob: -3.5473196506500244
    6. '_inter' → logprob: -4.547319412231445
    7. '2' → logprob: -4.797319412231445
    8. '_c' → logprob: -5.047319412231445
    9. '_i' → logprob: -5.172319412231445
    10. '_,' → logprob: -5.297319412231445

Token 288: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008531087078154087
    2. ' ,' → logprob: -7.500853061676025
    3. '_,' → logprob: -9.000853538513184
    4. '_new' → logprob: -9.750853538513184
    5. ',new' → logprob: -10.250853538513184
    6. 'new' → logprob: -11.375853538513184
    7. ',_' → logprob: -11.875853538513184
    8. '_update' → logprob: -12.000853538513184
    9. ',current' → logprob: -12.125853538513184
    10. '_current' → logprob: -12.500853538513184

Token 289: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.47409120202064514
    2. 'right' → logprob: -0.9740911722183228
    3. ',' → logprob: -12.849091529846191
    4. '	right' → logprob: -12.849091529846191
    5. ',right' → logprob: -12.849091529846191
    6. 'r' → logprob: -12.974091529846191
    7. 'space' → logprob: -14.224091529846191
    8. ' ' → logprob: -14.349091529846191
    9. '```' → logprob: -14.724091529846191
    10. ' r' → logprob: -15.099091529846191

Token 290: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0028841642197221518
    2. '_' → logprob: -6.002884387969971
    3. ',' → logprob: -8.252883911132812
    4. ' _' → logprob: -10.627883911132812
    5. '_,' → logprob: -10.877883911132812
    6. ',_' → logprob: -11.002883911132812
    7. '_j' → logprob: -11.127883911132812
    8. '_s' → logprob: -11.377883911132812
    9. 'i' → logprob: -11.752883911132812
    10. ')' → logprob: -12.127883911132812

Token 291: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11474942415952682
    2. ',' → logprob: -2.6147494316101074
    3. ' =' → logprob: -3.9897494316101074
    4. '=' → logprob: -5.239749431610107
    5. 'left' → logprob: -5.364749431610107
    6. ' left' → logprob: -6.239749431610107
    7. '	' → logprob: -6.364749431610107
    8. '   ' → logprob: -6.739749431610107
    9. ' ,' → logprob: -7.614749431610107
    10. ',left' → logprob: -8.48974895477295

Token 292: ' représentant' (ID: 136122)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.04363993555307388
    2. 'left' → logprob: -3.168639898300171
    3. ' ' → logprob: -8.04364013671875
    4. ',' → logprob: -9.41864013671875
    5. '       ' → logprob: -9.91864013671875
    6. '	left' → logprob: -10.16864013671875
    7. '    ' → logprob: -11.04364013671875
    8. ' ,' → logprob: -11.04364013671875
    9. '      ' → logprob: -11.41864013671875
    10. '  ' → logprob: -11.41864013671875

Token 293: ' une' (ID: 2463)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.8224426507949829
    2. ' la' → logprob: -1.447442650794983
    3. ' une' → logprob: -2.0724425315856934
    4. 'les' → logprob: -3.0724425315856934
    5. ' ' → logprob: -3.4474425315856934
    6. ' the' → logprob: -4.197442531585693
    7. ' des' → logprob: -4.322442531585693
    8. ',' → logprob: -4.447442531585693
    9. ' l' → logprob: -4.447442531585693
    10. ' deux' → logprob: -4.697442531585693

Token 294: ' contr' (ID: 6030)
  Prédit: ' interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' interval' → logprob: -0.6139693856239319
    2. ' borne' → logprob: -1.988969326019287
    3. 'interval' → logprob: -2.113969326019287
    4. ' restriction' → logprob: -2.863969326019287
    5. 'restriction' → logprob: -3.738969326019287
    6. ' nouvelle' → logprob: -3.738969326019287
    7. ' born' → logprob: -4.613969326019287
    8. ' ' → logprob: -4.863969326019287
    9. ' portion' → logprob: -4.988969326019287
    10. ' new' → logprob: -4.988969326019287

Token 295: 'ainte' (ID: 48434)
  Prédit: 'ainte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ainte' → logprob: -0.13707008957862854
    2. 'a' → logprob: -2.3870701789855957
    3. 'aint' → logprob: -3.6370701789855957
    4. 'ai' → logprob: -5.512070178985596
    5. '   ' → logprob: -6.262070178985596
    6. 'ait' → logprob: -6.637070178985596
    7. 'ain' → logprob: -6.637070178985596
    8. 'aine' → logprob: -8.137069702148438
    9. 'aise' → logprob: -8.887069702148438
    10. '```' → logprob: -9.262069702148438

Token 296: ' sur' (ID: 1512)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09158463776111603
    2. ',' → logprob: -2.5915846824645996
    3. 'left' → logprob: -5.7165846824646
    4. '   ' → logprob: -6.2165846824646
    5. ' ' → logprob: -6.7165846824646
    6. ' ,' → logprob: -6.9665846824646
    7. ' left' → logprob: -7.0915846824646
    8. ')' → logprob: -7.3415846824646
    9. '        
' → logprob: -7.3415846824646
    10. '<|end|>' → logprob: -7.5915846824646

Token 297: ' la' (ID: 557)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.7115640044212341
    2. ' la' → logprob: -1.211564064025879
    3. ' the' → logprob: -3.086564064025879
    4. 'left' → logprob: -3.086564064025879
    5. ' left' → logprob: -3.586564064025879
    6. ' les' → logprob: -3.711564064025879
    7. '<|end|>' → logprob: -4.086564064025879
    8. ' ' → logprob: -4.211564064025879
    9. ',' → logprob: -5.461564064025879
    10. ' ,' → logprob: -5.586564064025879

Token 298: ' plage' (ID: 78241)
  Prédit: ' interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' interval' → logprob: -0.5208176970481873
    2. 'interval' → logprob: -1.645817756652832
    3. ' left' → logprob: -2.270817756652832
    4. 'left' → logprob: -2.770817756652832
    5. ' current' → logprob: -3.645817756652832
    6. 'inter' → logprob: -5.645817756652832
    7. 'space' → logprob: -5.770817756652832
    8. 'current' → logprob: -6.395817756652832
    9. ' espace' → logprob: -6.520817756652832
    10. ' interv' → logprob: -6.645817756652832

Token 299: ' possible' (ID: 4149)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -1.1425598859786987
    2. '       ' → logprob: -1.2675598859786987
    3. ' left' → logprob: -1.2675598859786987
    4. '_left' → logprob: -3.0175600051879883
    5. '   ' → logprob: -3.3925600051879883
    6. ',' → logprob: -4.142560005187988
    7. '_' → logprob: -5.142560005187988
    8. '	left' → logprob: -5.642560005187988
    9. '[left' → logprob: -6.392560005187988
    10. ' ,' → logprob: -6.767560005187988

Token 300: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05853305757045746
    2. ',' → logprob: -3.433532953262329
    3. 'left' → logprob: -4.433533191680908
    4. ' left' → logprob: -5.308533191680908
    5. '   ' → logprob: -5.933533191680908
    6. ' ' → logprob: -7.058533191680908
    7. '<|end|>' → logprob: -7.308533191680908
    8. ')' → logprob: -7.558533191680908
    9. '        
' → logprob: -7.558533191680908
    10. '	left' → logprob: -7.808533191680908

Token 301: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019718319177627563
    2. ' left' → logprob: -4.769718170166016
    3. 'left' → logprob: -4.894718170166016
    4. '   ' → logprob: -6.269718170166016
    5. ',' → logprob: -6.894718170166016
    6. '	left' → logprob: -8.769718170166016
    7. '        
' → logprob: -9.394718170166016
    8. '	' → logprob: -9.519718170166016
    9. ' ' → logprob: -9.644718170166016
    10. ',left' → logprob: -9.769718170166016

Token 302: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.11103270947933197
    2. 'left' (adapté à ' left') → logprob: -2.611032724380493
    3. '       ' → logprob: -3.486032724380493
    4. '   ' → logprob: -7.611032485961914
    5. '	left' → logprob: -8.611032485961914
    6. ' ' → logprob: -9.361032485961914
    7. ',' → logprob: -9.611032485961914
    8. ',left' → logprob: -9.736032485961914
    9. '[left' → logprob: -10.611032485961914
    10. '    ' → logprob: -11.361032485961914

Token 303: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -6.885492621222511e-05
    2. ',' → logprob: -10.250068664550781
    3. '_input' → logprob: -11.375068664550781
    4. '_,' → logprob: -11.375068664550781
    5. 'i' → logprob: -12.375068664550781
    6. '_' → logprob: -12.750068664550781
    7. '_new' → logprob: -14.000068664550781
    8. '_inter' → logprob: -14.750068664550781
    9. '_current' → logprob: -15.000068664550781
    10. '_in' → logprob: -15.500068664550781

Token 304: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.869639476761222e-05
    2. ',right' → logprob: -10.375039100646973
    3. ' ,' → logprob: -11.875039100646973
    4. ',
' → logprob: -16.000038146972656
    5. ',left' → logprob: -16.250038146972656
    6. ',m' → logprob: -16.625038146972656
    7. '‌,' → logprob: -17.625038146972656
    8. '_,' → logprob: -17.750038146972656
    9. 'right' → logprob: -18.000038146972656
    10. ',r' → logprob: -18.625038146972656

Token 305: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.1269347220659256
    2. 'right' → logprob: -2.126934766769409
    3. '	right' → logprob: -12.251935005187988
    4. ' ' → logprob: -13.876935005187988
    5. '_right' → logprob: -15.376935005187988
    6. ',right' → logprob: -15.876935005187988
    7. '<|end|>' → logprob: -16.126934051513672
    8. ' rights' → logprob: -16.751934051513672
    9. 'Right' → logprob: -16.876934051513672
    10. ' ' → logprob: -16.876934051513672

Token 306: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0015096203424036503
    2. '_' → logprob: -6.501509666442871
    3. ' _' → logprob: -12.626509666442871
    4. 'i' → logprob: -13.251509666442871
    5. ')' → logprob: -14.626509666442871
    6. '_=' → logprob: -14.751509666442871
    7. '=' → logprob: -14.876509666442871
    8. '<|end|>' → logprob: -15.251509666442871
    9. '_j' → logprob: -15.876509666442871
    10. ')_' → logprob: -16.126508712768555

Token 307: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407814860343933
    2. ' =' → logprob: -0.9740781784057617
    3. ',' → logprob: -14.474078178405762
    4. ' ' → logprob: -14.849078178405762
    5. ' ' → logprob: -16.599077224731445
    6. '=input' → logprob: -16.849077224731445
    7. '   ' → logprob: -17.599077224731445
    8. '＝' → logprob: -17.724077224731445
    9. ')' → logprob: -17.724077224731445
    10. '=

' → logprob: -17.974077224731445

Token 308: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0019308974733576179
    2. 'map' → logprob: -6.2519307136535645
    3. '	map' → logprob: -13.251931190490723
    4. ' ' → logprob: -15.001931190490723
    5. ' ' → logprob: -16.251930236816406
    6. '(map' → logprob: -16.376930236816406
    7. ' mapa' → logprob: -16.751930236816406
    8. '.map' → logprob: -17.501930236816406
    9. ' list' → logprob: -17.626930236816406
    10. '_map' → logprob: -18.251930236816406

Token 309: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -6.360996485454962e-05
    2. '<int' → logprob: -10.0000638961792
    3. '(' → logprob: -11.8750638961792
    4. '[int' → logprob: -12.2500638961792
    5. 'int' → logprob: -12.7500638961792
    6. '=int' → logprob: -13.6250638961792
    7. ']int' → logprob: -14.1250638961792
    8. '<|end|>' → logprob: -14.2500638961792
    9. ',int' → logprob: -15.1250638961792
    10. ' int' → logprob: -15.6250638961792

Token 310: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002800602465867996
    2. ',input' → logprob: -6.502800464630127
    3. '(input' → logprob: -7.502800464630127
    4. '(),' → logprob: -7.627800464630127
    5. '(' → logprob: -8.752800941467285
    6. ' ,' → logprob: -9.377800941467285
    7. ')' → logprob: -12.377800941467285
    8. 'input' → logprob: -12.377800941467285
    9. '   ' → logprob: -12.627800941467285
    10. ' (' → logprob: -13.252800941467285

Token 311: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3869353234767914
    2. 'input' → logprob: -1.1369353532791138
    3. '(input' → logprob: -10.011935234069824
    4. '=input' → logprob: -12.261935234069824
    5. ')' → logprob: -12.636935234069824
    6. '	input' → logprob: -12.886935234069824
    7. '_input' → logprob: -13.261935234069824
    8. ',input' → logprob: -13.386935234069824
    9. '<input' → logprob: -13.511935234069824
    10. '<|end|>' → logprob: -13.511935234069824

Token 312: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.56102097814437e-05
    2. '()' → logprob: -10.000045776367188
    3. ' ().' → logprob: -16.125045776367188
    4. ')' → logprob: -17.750045776367188
    5. '.' → logprob: -17.875045776367188
    6. '()).' → logprob: -18.125045776367188
    7. ').' → logprob: -18.625045776367188
    8. '(' → logprob: -18.625045776367188
    9. '()
' → logprob: -19.250045776367188
    10. '().__' → logprob: -19.500045776367188

Token 313: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.173704271830502e-06
    2. ' split' → logprob: -12.87500286102295
    3. 'strip' → logprob: -15.50000286102295
    4. 'spl' → logprob: -16.500003814697266
    5. '.split' → logprob: -16.750003814697266
    6. '(split' → logprob: -17.375003814697266
    7. ')' → logprob: -17.500003814697266
    8. ').' → logprob: -18.375003814697266
    9. '().' → logprob: -18.625003814697266
    10. 'rstrip' → logprob: -18.875003814697266

Token 314: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.01695013977587223
    2. ')' → logprob: -4.2669501304626465
    3. '()' → logprob: -5.8919501304626465
    4. '())
' → logprob: -11.641950607299805
    5. '()))' → logprob: -12.266950607299805
    6. ' ())' → logprob: -12.766950607299805
    7. '))' → logprob: -13.141950607299805
    8. '(' → logprob: -13.641950607299805
    9. ' )' → logprob: -14.766950607299805
    10. '();)' → logprob: -15.266950607299805

Token 315: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017050117254257202
    2. '<|end|>' → logprob: -4.767050266265869
    3. '   ' → logprob: -6.017050266265869
    4. '        
' → logprob: -6.267050266265869
    5. ' ' → logprob: -6.392050266265869
    6. '    ' → logprob: -7.017050266265869
    7. '        ' → logprob: -8.017049789428711
    8. '    
' → logprob: -8.392049789428711
    9. '  
' → logprob: -8.892049789428711
    10. '      ' → logprob: -9.017049789428711

Token 316: ' #' (ID: 1069)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.2439287304878235
    2. '       ' → logprob: -1.7439286708831787
    3. ' left' → logprob: -3.9939286708831787
    4. 'if' → logprob: -4.618928909301758
    5. '   ' → logprob: -4.993928909301758
    6. '
' → logprob: -5.243928909301758
    7. ' if' → logprob: -7.743928909301758
    8. '        
' → logprob: -8.118928909301758
    9. '	left' → logprob: -8.993928909301758
    10. '```' → logprob: -9.243928909301758

Token 317: ' Met' (ID: 7227)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.12530559301376343
    2. 'if' → logprob: -2.875305652618408
    3. ' left' → logprob: -3.250305652618408
    4. '   ' → logprob: -4.000305652618408
    5. ' if' → logprob: -6.250305652618408
    6. '#' → logprob: -6.625305652618408
    7. '       ' → logprob: -7.250305652618408
    8. '
' → logprob: -8.50030517578125
    9. '	left' → logprob: -10.12530517578125
    10. ' ' → logprob: -11.12530517578125

Token 318: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7855998277664185
    2. '       ' → logprob: -1.1605998277664185
    3. ' à' → logprob: -2.160599708557129
    4. '=' → logprob: -3.535599708557129
    5. 'if' → logprob: -3.535599708557129
    6. 'space' → logprob: -4.285599708557129
    7. 'à' → logprob: -4.785599708557129
    8. 'left' → logprob: -5.035599708557129
    9. '    ' → logprob: -5.035599708557129
    10. 'ra' → logprob: -5.910599708557129

Token 319: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.002762079471722245
    2. ' jour' → logprob: -6.252762317657471
    3. 'day' → logprob: -8.127761840820312
    4. 'jours' → logprob: -8.627761840820312
    5. 'j' → logprob: -8.752761840820312
    6. '_j' → logprob: -9.377761840820312
    7. '```' → logprob: -10.002761840820312
    8. 'journ' → logprob: -10.377761840820312
    9. '   ' → logprob: -11.377761840820312
    10. 'jou' → logprob: -11.627761840820312

Token 320: ' la' (ID: 557)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -1.0151063203811646
    2. '       ' → logprob: -1.2651063203811646
    3. 'left' → logprob: -1.3901063203811646
    4. '   ' → logprob: -2.390106201171875
    5. '    ' → logprob: -5.765106201171875
    6. ' if' → logprob: -5.890106201171875
    7. ' ' → logprob: -6.515106201171875
    8. '	left' → logprob: -6.515106201171875
    9. ' la' → logprob: -7.015106201171875
    10. '           ' → logprob: -7.140106201171875

Token 321: ' valeur' (ID: 41664)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.011126694269478321
    2. ' left' → logprob: -4.511126518249512
    3. ' gauche' → logprob: -10.511126518249512
    4. '   ' → logprob: -11.261126518249512
    5. 'max' → logprob: -11.261126518249512
    6. 'right' → logprob: -12.011126518249512
    7. 'g' → logprob: -12.261126518249512
    8. '	left' → logprob: -12.636126518249512
    9. '_left' → logprob: -13.011126518249512
    10. '
' → logprob: -13.136126518249512

Token 322: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7302817702293396
    2. 'left' → logprob: -1.8552818298339844
    3. '   ' → logprob: -2.1052818298339844
    4. ' left' → logprob: -2.1052818298339844
    5. '_' → logprob: -2.7302818298339844
    6. '_left' → logprob: -4.855281829833984
    7. '=' → logprob: -4.980281829833984
    8. 'max' → logprob: -5.230281829833984
    9. ' ' → logprob: -5.355281829833984
    10. '    ' → logprob: -5.480281829833984

Token 323: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.10026253759860992
    2. ' left' → logprob: -2.3502626419067383
    3. '	left' → logprob: -10.850262641906738
    4. '   ' → logprob: -11.225262641906738
    5. 'max' → logprob: -11.850262641906738
    6. '_left' → logprob: -12.225262641906738
    7. ' ' → logprob: -13.225262641906738
    8. 'right' → logprob: -13.475262641906738
    9. '[left' → logprob: -13.725262641906738
    10. '```' → logprob: -13.725262641906738

Token 324: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16038568317890167
    2. '=' → logprob: -1.9103857278823853
    3. '=max' → logprob: -8.785386085510254
    4. 'max' → logprob: -12.410386085510254
    5. ',' → logprob: -13.660386085510254
    6. '   ' → logprob: -13.910386085510254
    7. '       ' → logprob: -14.410386085510254
    8. '    ' → logprob: -14.535386085510254
    9. ' max' → logprob: -15.035386085510254
    10. '	' → logprob: -15.660386085510254

Token 325: ' qu' (ID: 474)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.4742085635662079
    2. 'max' → logprob: -0.9742085933685303
    3. 'left' → logprob: -9.97420883178711
    4. ' left' → logprob: -10.22420883178711
    5. '=max' → logprob: -10.22420883178711
    6. ' maxim' → logprob: -12.34920883178711
    7. ' maximum' → logprob: -12.59920883178711
    8. '	max' → logprob: -13.47420883178711
    9. '(max' → logprob: -14.47420883178711
    10. ' maximal' → logprob: -14.72420883178711

Token 326: ''elle' (ID: 36421)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6689456105232239
    2. '=max' → logprob: -1.543945550918579
    3. ' max' → logprob: -1.918945550918579
    4. '       ' → logprob: -3.418945550918579
    5. ' =' → logprob: -3.668945550918579
    6. '=' → logprob: -3.668945550918579
    7. ' soit' → logprob: -4.293945789337158
    8. 'left' → logprob: -4.418945789337158
    9. '   ' → logprob: -4.918945789337158
    10. ' qu' → logprob: -5.668945789337158

Token 327: ' soit' (ID: 17293)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2171630859375
    2. '=max' → logprob: -1.7171630859375
    3. ' =' → logprob: -4.3421630859375
    4. 'max' → logprob: -5.9671630859375
    5. ' max' → logprob: -11.2171630859375
    6. '<|end|>' → logprob: -11.2171630859375
    7. 'maximize' → logprob: -11.8421630859375
    8. ' soit' → logprob: -12.5921630859375
    9. ' maximale' → logprob: -12.9671630859375
    10. 's' → logprob: -12.9671630859375

Token 328: ' la' (ID: 557)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.12701085209846497
    2. 'max' → logprob: -2.1270108222961426
    3. '=max' → logprob: -10.1270112991333
    4. '	max' → logprob: -11.1270112991333
    5. ' maximum' → logprob: -11.5020112991333
    6. ' maximal' → logprob: -12.3770112991333
    7. '(max' → logprob: -12.5020112991333
    8. ' le' → logprob: -12.8770112991333
    9. ' the' → logprob: -13.6270112991333
    10. ' maxim' → logprob: -13.7520112991333

Token 329: ' plus' (ID: 2932)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.2523980438709259
    2. ' max' → logprob: -1.5023980140686035
    3. ' maximum' → logprob: -7.8773980140686035
    4. 'maximum' → logprob: -10.502398490905762
    5. '(max' → logprob: -11.252398490905762
    6. 'm' → logprob: -11.752398490905762
    7. '	max' → logprob: -11.877398490905762
    8. ' maximale' → logprob: -12.002398490905762
    9. '_max' → logprob: -12.002398490905762
    10. ' maxi' → logprob: -12.252398490905762

Token 330: ' à' (ID: 1221)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.5097827315330505
    2. 'grand' → logprob: -1.7597827911376953
    3. ' grande' → logprob: -2.3847827911376953
    4. 'max' → logprob: -2.7597827911376953
    5. 'é' → logprob: -3.2597827911376953
    6. 'large' → logprob: -4.634782791137695
    7. ' élevée' → logprob: -4.884782791137695
    8. ' grand' → logprob: -5.384782791137695
    9. '_gr' → logprob: -6.384782791137695
    10. ' large' → logprob: -6.634782791137695

Token 331: ' droite' (ID: 61428)
  Prédit: 'dro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dro' → logprob: -0.5800366401672363
    2. 'g' → logprob: -1.3300366401672363
    3. ' droite' → logprob: -2.3300366401672363
    4. '```' → logprob: -2.8300366401672363
    5. ' gauche' → logprob: -4.830036640167236
    6. 'grand' → logprob: -5.955036640167236
    7. 'right' → logprob: -6.080036640167236
    8. ' ' → logprob: -6.580036640167236
    9. 'gr' → logprob: -6.580036640167236
    10. '   ' → logprob: -6.705036640167236

Token 332: ' possible' (ID: 4149)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.8392370939254761
    2. ' max' → logprob: -1.214237093925476
    3. ' possible' → logprob: -2.7142372131347656
    4. ',' → logprob: -3.0892372131347656
    5. '       ' → logprob: -3.4642372131347656
    6. '=max' → logprob: -3.7142372131347656
    7. '(max' → logprob: -3.8392372131347656
    8. '   ' → logprob: -3.8392372131347656
    9. 'possible' → logprob: -4.464237213134766
    10. ' entre' → logprob: -4.589237213134766

Token 333: ' entre' (ID: 3853)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2816409468650818
    2. ',' → logprob: -2.5316410064697266
    3. '   ' → logprob: -3.2816410064697266
    4. ' =' → logprob: -3.4066410064697266
    5. 'left' → logprob: -3.5316410064697266
    6. ' if' → logprob: -3.7816410064697266
    7. ' left' → logprob: -4.156641006469727
    8. '=' → logprob: -4.406641006469727
    9. 'if' → logprob: -6.531641006469727
    10. ' (' → logprob: -6.531641006469727

Token 334: ' sa' (ID: 880)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.5231859087944031
    2. ' left' → logprob: -0.8981859087944031
    3. '	left' → logprob: -10.773185729980469
    4. ' la' → logprob: -11.148185729980469
    5. '(left' → logprob: -11.148185729980469
    6. 'la' → logprob: -13.523185729980469
    7. ':left' → logprob: -13.523185729980469
    8. '[left' → logprob: -13.523185729980469
    9. '   ' → logprob: -13.648185729980469
    10. '_left' → logprob: -13.648185729980469

Token 335: ' valeur' (ID: 41664)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.25375285744667053
    2. 'left' → logprob: -1.5037528276443481
    3. ' gauche' → logprob: -6.753752708435059
    4. ' ' → logprob: -8.878752708435059
    5. ' current' → logprob: -9.003752708435059
    6. '_left' → logprob: -9.628752708435059
    7. '(left' → logprob: -9.878752708435059
    8. ' ,' → logprob: -10.003752708435059
    9. ',' → logprob: -10.003752708435059
    10. '	left' → logprob: -10.253752708435059

Token 336: ' actuelle' (ID: 104951)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03163290396332741
    2. ' ,' → logprob: -4.281632900238037
    3. ' et' → logprob: -5.281632900238037
    4. 'et' → logprob: -5.531632900238037
    5. '   ' → logprob: -6.031632900238037
    6. ' and' → logprob: -6.156632900238037
    7. ' ' → logprob: -6.781632900238037
    8. '<|end|>' → logprob: -7.156632900238037
    9. 'left' → logprob: -7.406632900238037
    10. 'max' → logprob: -8.906633377075195

Token 337: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.039668966084718704
    2. ' and' → logprob: -4.164669036865234
    3. ' et' → logprob: -4.289669036865234
    4. ' ,' → logprob: -4.789669036865234
    5. 'et' → logprob: -7.289669036865234
    6. '   ' → logprob: -8.414669036865234
    7. '       ' → logprob: -8.914669036865234
    8. ')' → logprob: -9.414669036865234
    9. 'and' → logprob: -9.414669036865234
    10. ' ' → logprob: -10.289669036865234

Token 338: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.062034789472818375
    2. 'left' → logprob: -2.812034845352173
    3. ' ' → logprob: -10.937034606933594
    4. '	left' → logprob: -11.062034606933594
    5. ' la' → logprob: -11.187034606933594
    6. '(left' → logprob: -12.437034606933594
    7. ' ' → logprob: -12.812034606933594
    8. '_left' → logprob: -13.062034606933594
    9. ' lef' → logprob: -13.562034606933594
    10. ' gauche' → logprob: -13.562034606933594

Token 339: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.00012606535165105015
    2. '_' → logprob: -9.375125885009766
    3. ')' → logprob: -11.125125885009766
    4. ',' → logprob: -11.375125885009766
    5. '   ' → logprob: -12.125125885009766
    6. '=' → logprob: -12.750125885009766
    7. ' =' → logprob: -13.125125885009766
    8. 'i' → logprob: -13.875125885009766
    9. ' _' → logprob: -13.875125885009766
    10. ' ' → logprob: -14.500125885009766

Token 340: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17383135855197906
    2. '=' → logprob: -2.4238314628601074
    3. '       ' → logprob: -3.1738314628601074
    4. ',' → logprob: -3.9238314628601074
    5. '=max' → logprob: -5.173831462860107
    6. '   ' → logprob: -6.923831462860107
    7. 'left' → logprob: -7.048831462860107
    8. 'max' → logprob: -7.298831462860107
    9. ')' → logprob: -7.923831462860107
    10. ' if' → logprob: -8.29883098602295

Token 341: '       ' (ID: 309)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3858645260334015
    2. '=' → logprob: -1.635864496231079
    3. '       ' → logprob: -2.260864496231079
    4. '   ' → logprob: -4.010864734649658
    5. 'left' → logprob: -7.135864734649658
    6. '    
' → logprob: -7.385864734649658
    7. ',' → logprob: -8.0108642578125
    8. '        
' → logprob: -8.1358642578125
    9. '=
' → logprob: -8.3858642578125
    10. ' =
' → logprob: -8.5108642578125

Token 342: ' #' (ID: 1069)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.6389238238334656
    2. ' left' → logprob: -1.2639238834381104
    3. '       ' → logprob: -1.7639238834381104
    4. '   ' → logprob: -4.263923645019531
    5. '
' → logprob: -7.138923645019531
    6. '[left' → logprob: -7.138923645019531
    7. '	left' → logprob: -7.138923645019531
    8. ' if' → logprob: -7.513923645019531
    9. '    
' → logprob: -8.013923645019531
    10. '        
' → logprob: -8.763923645019531

Token 343: ' max' (ID: 2999)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.7045893669128418
    2. '       ' → logprob: -0.8295893669128418
    3. 'left' → logprob: -2.704589366912842
    4. '   ' → logprob: -6.829589366912842
    5. ' if' → logprob: -6.954589366912842
    6. '	left' → logprob: -8.70458984375
    7. 'if' → logprob: -9.57958984375
    8. '           ' → logprob: -9.95458984375
    9. ' ' → logprob: -10.07958984375
    10. '        
' → logprob: -10.32958984375

Token 344: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6976629495620728
    2. '(left' → logprob: -0.6976629495620728
    3. '(right' → logprob: -6.322662830352783
    4. ')' → logprob: -6.947662830352783
    5. '(
' → logprob: -7.197662830352783
    6. '(max' → logprob: -7.697662830352783
    7. '()' → logprob: -7.822662830352783
    8. '(

' → logprob: -9.447663307189941
    9. 'left' → logprob: -10.072663307189941
    10. '   ' → logprob: -11.822663307189941

Token 345: ' retourne' (ID: 178818)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.30681276321411133
    2. '(left' → logprob: -1.4318127632141113
    3. ')' → logprob: -3.9318127632141113
    4. '(
' → logprob: -5.306812763214111
    5. '(right' → logprob: -7.931812763214111
    6. '(max' → logprob: -8.806812286376953
    7. ',' → logprob: -9.806812286376953
    8. 'left' → logprob: -10.306812286376953
    9. '       ' → logprob: -10.431812286376953
    10. ' (' → logprob: -10.556812286376953

Token 346: ' le' (ID: 505)
  Prédit: '(left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.9498592019081116
    2. 'left' → logprob: -1.0748591423034668
    3. '(' → logprob: -1.9498591423034668
    4. ' left' → logprob: -2.699859142303467
    5. '(max' → logprob: -3.824859142303467
    6. 'max' → logprob: -3.949859142303467
    7. ' the' → logprob: -4.949859142303467
    8. ')' → logprob: -5.199859142303467
    9. 'the' → logprob: -5.699859142303467
    10. ' la' → logprob: -6.324859142303467

Token 347: ' plus' (ID: 2932)
  Prédit: ' maximum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximum' → logprob: -0.6545798778533936
    2. 'maximum' → logprob: -1.7795798778533936
    3. 'left' → logprob: -2.1545798778533936
    4. 'max' → logprob: -2.5295798778533936
    5. ' left' → logprob: -3.1545798778533936
    6. '(max' → logprob: -3.9045798778533936
    7. ' max' → logprob: -3.9045798778533936
    8. '(left' → logprob: -4.529580116271973
    9. ' plus' → logprob: -4.654580116271973
    10. 'largest' → logprob: -6.154580116271973

Token 348: ' grand' (ID: 6363)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.5104534029960632
    2. 'right' → logprob: -1.260453462600708
    3. '(left' → logprob: -3.260453462600708
    4. '(' → logprob: -3.885453462600708
    5. 'max' → logprob: -4.385453224182129
    6. ')' → logprob: -4.510453224182129
    7. 'large' → logprob: -4.760453224182129
    8. '(right' → logprob: -5.010453224182129
    9. '```' → logprob: -5.635453224182129
    10. 'grand' → logprob: -5.760453224182129

Token 349: ' des' (ID: 731)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4322998523712158
    2. '(left' → logprob: -1.0572998523712158
    3. ')' → logprob: -7.057299613952637
    4. '(max' → logprob: -7.307299613952637
    5. ' (' → logprob: -7.682299613952637
    6. ' entre' → logprob: -8.182299613952637
    7. '(right' → logprob: -8.182299613952637
    8. '('' → logprob: -8.432299613952637
    9. '(
' → logprob: -9.182299613952637
    10. ' between' → logprob: -9.182299613952637

Token 350: ' deux' (ID: 10301)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.08072073757648468
    2. ' left' → logprob: -2.5807206630706787
    3. '(left' → logprob: -6.705720901489258
    4. ' two' → logprob: -8.455720901489258
    5. '[left' → logprob: -8.955720901489258
    6. 'two' → logprob: -9.580720901489258
    7. 'right' → logprob: -9.580720901489258
    8. '   ' → logprob: -10.330720901489258
    9. '	left' → logprob: -10.955720901489258
    10. ',left' → logprob: -11.330720901489258

Token 351: ' arguments' (ID: 11917)
  Prédit: '(left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.14340263605117798
    2. '(' → logprob: -2.018402576446533
    3. '(
' → logprob: -8.393403053283691
    4. ')' → logprob: -8.893403053283691
    5. 'left' → logprob: -9.018403053283691
    6. '(right' → logprob: -9.268403053283691
    7. ' (' → logprob: -9.393403053283691
    8. '   ' → logprob: -10.768403053283691
    9. ' left' → logprob: -11.393403053283691
    10. ',' → logprob: -11.768403053283691

Token 352: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0214719772338867
    2. '(left' → logprob: -1.0214719772338867
    3. '       ' → logprob: -1.7714719772338867
    4. ')' → logprob: -2.6464719772338867
    5. ',' → logprob: -4.021471977233887
    6. '(
' → logprob: -4.396471977233887
    7. '   ' → logprob: -5.271471977233887
    8. 'left' → logprob: -7.146471977233887
    9. ' (' → logprob: -7.271471977233887
    10. '           ' → logprob: -7.271471977233887

Token 353: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16297464072704315
    2. ' left' → logprob: -2.4129745960235596
    3. 'left' → logprob: -3.4129745960235596
    4. '   ' → logprob: -4.162974834442139
    5. ')' → logprob: -4.662974834442139
    6. ',' → logprob: -7.037974834442139
    7. '    ' → logprob: -7.537974834442139
    8. ' )' → logprob: -8.78797435760498
    9. ' ' → logprob: -8.91297435760498
    10. '<|end|>' → logprob: -8.91297435760498

Token 354: ' #' (ID: 1069)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.4341691732406616
    2. '       ' → logprob: -1.4341691732406616
    3. 'left' → logprob: -2.184169292449951
    4. '   ' → logprob: -6.809169292449951
    5. '	left' → logprob: -9.184168815612793
    6. ' ' → logprob: -11.059168815612793
    7. '           ' → logprob: -11.184168815612793
    8. '    ' → logprob: -11.184168815612793
    9. '      ' → logprob: -11.934168815612793
    10. '(left' → logprob: -12.059168815612793

Token 355: ' Ceci' (ID: 144699)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.42033544182777405
    2. 'left' → logprob: -1.4203354120254517
    3. '       ' → logprob: -2.295335531234741
    4. '   ' → logprob: -7.420335292816162
    5. '	left' → logprob: -9.54533576965332
    6. '           ' → logprob: -10.29533576965332
    7. '
' → logprob: -10.54533576965332
    8. ' ' → logprob: -10.67033576965332
    9. ' ' → logprob: -11.54533576965332
    10. '        ' → logprob: -12.17033576965332

Token 356: ' garantit' (ID: 182078)
  Prédit: ' permet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permet' → logprob: -0.2554984390735626
    2. ' continue' → logprob: -2.6304984092712402
    3. '       ' → logprob: -3.2554984092712402
    4. ' met' → logprob: -3.8804984092712402
    5. '   ' → logprob: -4.38049840927124
    6. ' =' → logprob: -4.75549840927124
    7. ' garantit' → logprob: -4.88049840927124
    8. ' max' → logprob: -5.38049840927124
    9. ' maximise' → logprob: -5.63049840927124
    10. ' ajuste' → logprob: -5.63049840927124

Token 357: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.01633956842124462
    2. '   ' → logprob: -4.6413397789001465
    3. ' that' → logprob: -5.6413397789001465
    4. '       ' → logprob: -6.2663397789001465
    5. '    ' → logprob: -7.7663397789001465
    6. 'that' → logprob: -9.141339302062988
    7. ' une' → logprob: -9.516339302062988
    8. ' de' → logprob: -9.516339302062988
    9. ' la' → logprob: -9.641339302062988
    10. ' ' → logprob: -9.641339302062988

Token 358: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.14286696910858154
    2. 'left' → logprob: -2.017867088317871
    3. '   ' → logprob: -9.017867088317871
    4. ' the' → logprob: -10.142867088317871
    5. '	left' → logprob: -11.642867088317871
    6. '       ' → logprob: -12.017867088317871
    7. ' la' → logprob: -12.517867088317871
    8. ' ' → logprob: -13.017867088317871
    9. '    ' → logprob: -13.267867088317871
    10. '_left' → logprob: -13.642867088317871

Token 359: ' représente' (ID: 88912)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01892964169383049
    2. '=' → logprob: -4.018929481506348
    3. '   ' → logprob: -8.018929481506348
    4. '<|end|>' → logprob: -8.893929481506348
    5. ',' → logprob: -9.893929481506348
    6. ')' → logprob: -9.893929481506348
    7. '=max' → logprob: -10.268929481506348
    8. '    ' → logprob: -10.643929481506348
    9. '_i' → logprob: -11.018929481506348
    10. ' ' → logprob: -11.331429481506348

Token 360: ' la' (ID: 557)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.9087346792221069
    2. ' la' → logprob: -0.9087346792221069
    3. ' l' → logprob: -2.0337347984313965
    4. 'the' → logprob: -3.7837347984313965
    5. ' une' → logprob: -4.9087347984313965
    6. ' le' → logprob: -5.0337347984313965
    7. 'l' → logprob: -5.1587347984313965
    8. 'le' → logprob: -5.2837347984313965
    9. 'max' → logprob: -5.2837347984313965
    10. 'la' → logprob: -6.0337347984313965

Token 361: ' limite' (ID: 48939)
  Prédit: ' plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.8127570748329163
    2. 'borne' → logprob: -1.8127570152282715
    3. 'plus' → logprob: -2.6877570152282715
    4. ' borne' → logprob: -2.8127570152282715
    5. 'left' → logprob: -2.9377570152282715
    6. 'max' → logprob: -3.6877570152282715
    7. 'maximum' → logprob: -3.6877570152282715
    8. ' maximum' → logprob: -3.8127570152282715
    9. ' limite' → logprob: -3.9377570152282715
    10. ' left' → logprob: -4.5627570152282715

Token 362: ' la' (ID: 557)
  Prédit: ' maximale'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximale' → logprob: -0.7236092686653137
    2. ' de' → logprob: -2.098609209060669
    3. ' droite' → logprob: -2.223609209060669
    4. ' gauche' → logprob: -2.848609209060669
    5. ' max' → logprob: -2.848609209060669
    6. '   ' → logprob: -2.973609209060669
    7. 'max' → logprob: -3.848609209060669
    8. ' supérieure' → logprob: -4.473609447479248
    9. ' la' → logprob: -4.598609447479248
    10. ' ' → logprob: -4.723609447479248

Token 363: ' plus' (ID: 2932)
  Prédit: ' plus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.6904988288879395
    2. ' droite' → logprob: -0.9404988288879395
    3. ' gauche' → logprob: -3.1904988288879395
    4. 'g' → logprob: -3.3154988288879395
    5. 'plus' → logprob: -4.8154988288879395
    6. '   ' → logprob: -4.8154988288879395
    7. 'dro' → logprob: -5.6904988288879395
    8. 'arge' → logprob: -6.4404988288879395
    9. '  ' → logprob: -6.9404988288879395
    10. ' dro' → logprob: -6.9404988288879395

Token 364: ' restrictive' (ID: 114838)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -1.1350977420806885
    2. 'à' → logprob: -1.3850977420806885
    3. 'g' → logprob: -2.2600977420806885
    4. 'dro' → logprob: -2.5100977420806885
    5. 'é' → logprob: -2.7600977420806885
    6. ' droite' → logprob: -3.5100977420806885
    7. 'strict' → logprob: -3.8850977420806885
    8. 'import' → logprob: -3.8850977420806885
    9. ' élevée' → logprob: -3.8850977420806885
    10. 'large' → logprob: -3.8850977420806885

Token 365: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1847282648086548
    2. ' between' → logprob: -1.9347282648086548
    3. ' de' → logprob: -2.1847281455993652
    4. ',' → logprob: -2.5597281455993652
    5. ' left' → logprob: -2.6847281455993652
    6. '=' → logprob: -2.9347281455993652
    7. ' =' → logprob: -3.3097281455993652
    8. ' (' → logprob: -3.4347281455993652
    9. '(' → logprob: -3.5597281455993652
    10. ' entre' → logprob: -3.5597281455993652

Token 366: ' gauche' (ID: 58367)
  Prédit: ' gauche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gauche' → logprob: -0.6911429762840271
    2. 'g' → logprob: -0.8161429762840271
    3. ' droite' → logprob: -3.566143035888672
    4. 'dro' → logprob: -3.941143035888672
    5. 'la' → logprob: -5.691143035888672
    6. 'l' → logprob: -5.941143035888672
    7. ' jour' → logprob: -7.441143035888672
    8. 'le' → logprob: -7.691143035888672
    9. ' l' → logprob: -7.816143035888672
    10. ' la' → logprob: -7.816143035888672

Token 367: ' impos' (ID: 12130)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3967439532279968
    2. '=' → logprob: -1.7717440128326416
    3. '   ' → logprob: -2.3967440128326416
    4. 'left' → logprob: -3.6467440128326416
    5. '       ' → logprob: -4.0217437744140625
    6. ' left' → logprob: -4.0217437744140625
    7. ',' → logprob: -5.7717437744140625
    8. ')' → logprob: -8.021743774414062
    9. '(left' → logprob: -8.521743774414062
    10. '    
' → logprob: -8.896743774414062

Token 368: 'ée' (ID: 2894)
  Prédit: 'inte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inte' → logprob: -0.45891350507736206
    2. 'ée' → logprob: -2.458913564682007
    3. 'ant' → logprob: -3.333913564682007
    4. 'ite' → logprob: -3.333913564682007
    5. 'urée' → logprob: -3.333913564682007
    6. 'ante' → logprob: -3.458913564682007
    7. 'ivée' → logprob: -3.833913564682007
    8. 'e' → logprob: -3.833913564682007
    9. 'agée' → logprob: -4.083913326263428
    10. 'quée' → logprob: -4.333913326263428

Token 369: ' jusqu' (ID: 21961)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5068954825401306
    2. '=' → logprob: -1.7568955421447754
    3. '   ' → logprob: -2.2568955421447754
    4. '       ' → logprob: -3.2568955421447754
    5. ' =' → logprob: -3.5068955421447754
    6. ')' → logprob: -3.8818955421447754
    7. ' de' → logprob: -5.006895542144775
    8. ' par' → logprob: -5.256895542144775
    9. ' ,' → logprob: -5.381895542144775
    10. ' by' → logprob: -5.506895542144775

Token 370: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.01399766281247139
    2. ''ici' → logprob: -5.263997554779053
    3. '’à' → logprob: -5.513997554779053
    4. 'à' → logprob: -5.763997554779053
    5. ''au' → logprob: -7.013997554779053
    6. 'au' → logprob: -8.513998031616211
    7. '   ' → logprob: -8.638998031616211
    8. ''' → logprob: -9.388998031616211
    9. '’ici' → logprob: -9.513998031616211
    10. ' à' → logprob: -10.263998031616211

Token 371: ' présent' (ID: 24129)
  Prédit: 'prés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prés' → logprob: -0.8474206924438477
    2. ' présent' → logprob: -1.4724206924438477
    3. 'present' → logprob: -1.8474206924438477
    4. 'maint' → logprob: -2.8474206924438477
    5. 'now' → logprob: -2.9724206924438477
    6. ' maintenant' → logprob: -3.4724206924438477
    7. 'ce' → logprob: -4.097420692443848
    8. 'c' → logprob: -5.347420692443848
    9. 'au' → logprob: -5.597420692443848
    10. ' present' → logprob: -5.722420692443848

Token 372: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20571081340312958
    2. ' left' → logprob: -2.0807108879089355
    3. 'left' → logprob: -3.2057108879089355
    4. '   ' → logprob: -4.0807108879089355
    5. ' =' → logprob: -6.9557108879089355
    6. '=' → logprob: -7.4557108879089355
    7. ',' → logprob: -7.7057108879089355
    8. '(left' → logprob: -7.7057108879089355
    9. ')' → logprob: -7.8307108879089355
    10. '        
' → logprob: -8.955710411071777

Token 373: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017633793875575066
    2. ' left' → logprob: -4.39263391494751
    3. 'left' → logprob: -5.89263391494751
    4. '   ' → logprob: -6.14263391494751
    5. '           ' → logprob: -10.017633438110352
    6. '        
' → logprob: -10.392633438110352
    7. ')' → logprob: -10.767633438110352
    8. ',' → logprob: -11.267633438110352
    9. '[left' → logprob: -11.392633438110352
    10. '	left' → logprob: -11.517633438110352

Token 374: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.7006111741065979
    2. '       ' → logprob: -1.3256111145019531
    3. ' left' → logprob: -1.4506111145019531
    4. '   ' → logprob: -5.700611114501953
    5. '	left' → logprob: -8.950611114501953
    6. '           ' → logprob: -10.075611114501953
    7. ' ' → logprob: -11.200611114501953
    8. '.left' → logprob: -11.450611114501953
    9. '[left' → logprob: -11.450611114501953
    10. '        
' → logprob: -11.575611114501953

Token 375: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018151935189962387
    2. '=' → logprob: -4.018151760101318
    3. '=max' → logprob: -13.768152236938477
    4. ',' → logprob: -14.393152236938477
    5. ' ' → logprob: -15.268152236938477
    6. '   ' → logprob: -16.768152236938477
    7. ' =
' → logprob: -16.893152236938477
    8. ')' → logprob: -17.143152236938477
    9. ' ' → logprob: -17.643152236938477
    10. '  ' → logprob: -18.143152236938477

Token 376: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.011048054322600365
    2. 'max' → logprob: -4.511047840118408
    3. '(max' → logprob: -16.13604736328125
    4. '	max' → logprob: -16.88604736328125
    5. ' maximum' → logprob: -17.88604736328125
    6. '   ' → logprob: -18.01104736328125
    7. '=max' → logprob: -18.01104736328125
    8. ',max' → logprob: -18.26104736328125
    9. '_max' → logprob: -18.51104736328125
    10. ' min' → logprob: -18.51104736328125

Token 377: '(left' (ID: 32958)
  Prédit: '(left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -1.5213274309644476e-05
    2. '(' → logprob: -11.125015258789062
    3. 'left' → logprob: -15.375015258789062
    4. ' (' → logprob: -16.125015258789062
    5. ',left' → logprob: -17.250015258789062
    6. '(right' → logprob: -17.375015258789062
    7. '(
' → logprob: -17.625015258789062
    8. '[left' → logprob: -17.875015258789062
    9. ' left' → logprob: -19.125015258789062
    10. '(lhs' → logprob: -19.875015258789062

Token 378: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011844364780699834
    2. ',left' → logprob: -9.500118255615234
    3. ' ,' → logprob: -10.125118255615234
    4. 'left' → logprob: -12.750118255615234
    5. ',
' → logprob: -15.500118255615234
    6. ',right' → logprob: -15.875118255615234
    7. ' left' → logprob: -17.000118255615234
    8. '[left' → logprob: -17.000118255615234
    9. ',

' → logprob: -17.375118255615234
    10. '(left' → logprob: -17.625118255615234

Token 379: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.1128481850028038
    2. 'left' → logprob: -2.2378482818603516
    3. '	left' → logprob: -11.612848281860352
    4. '_left' → logprob: -11.987848281860352
    5. ' lef' → logprob: -12.487848281860352
    6. 'Left' → logprob: -13.612848281860352
    7. '[left' → logprob: -13.612848281860352
    8. '    ' → logprob: -13.737848281860352
    9. '(left' → logprob: -14.112848281860352
    10. ')' → logprob: -14.487848281860352

Token 380: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -7.896309739408025e-07
    2. ')' → logprob: -14.250000953674316
    3. ')_' → logprob: -17.0
    4. ' _' → logprob: -17.375
    5. 'i' → logprob: -17.375
    6. '_' → logprob: -17.875
    7. '_)' → logprob: -18.375
    8. ' )' → logprob: -19.625
    9. '_j' → logprob: -19.875
    10. '​' → logprob: -20.0

Token 381: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0025012213736772537
    2. ')
' → logprob: -6.002501010894775
    3. ')

' → logprob: -11.252501487731934
    4. '       ' → logprob: -11.752501487731934
    5. '   ' → logprob: -12.752501487731934
    6. ' )' → logprob: -13.627501487731934
    7. ')
' → logprob: -14.752501487731934
    8. '),' → logprob: -16.627500534057617
    9. ' ' → logprob: -17.377500534057617
    10. ' )
' → logprob: -17.627500534057617

Token 382: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2389807403087616
    2. 'right' → logprob: -1.738980770111084
    3. '   ' → logprob: -3.613980770111084
    4. ' right' → logprob: -5.363980770111084
    5. '
' → logprob: -6.238980770111084
    6. '    
' → logprob: -7.113980770111084
    7. '<|end|>' → logprob: -7.363980770111084
    8. '        
' → logprob: -8.238980293273926
    9. '```' → logprob: -8.363980293273926
    10. '  
' → logprob: -8.363980293273926

Token 383: ' #' (ID: 1069)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.04232454672455788
    2. '       ' → logprob: -3.4173245429992676
    3. ' right' → logprob: -5.042324542999268
    4. '   ' → logprob: -6.167324542999268
    5. '        
' → logprob: -10.917325019836426
    6. '	right' → logprob: -10.917325019836426
    7. '    
' → logprob: -11.542325019836426
    8. '
' → logprob: -11.792325019836426
    9. '```' → logprob: -11.917325019836426
    10. '    ' → logprob: -12.417325019836426

Token 384: ' Met' (ID: 7227)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0057119159027934074
    2. ' right' → logprob: -5.255712032318115
    3. '       ' → logprob: -7.755712032318115
    4. '   ' → logprob: -10.130711555480957
    5. '
' → logprob: -12.505711555480957
    6. '	right' → logprob: -13.005711555480957
    7. '```' → logprob: -13.630711555480957
    8. '           ' → logprob: -14.380711555480957
    9. 'left' → logprob: -14.755711555480957
    10. '     ' → logprob: -15.255711555480957

Token 385: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.025446826592087746
    2. '=' → logprob: -4.400446891784668
    3. 'à' → logprob: -4.775446891784668
    4. ' =' → logprob: -6.150446891784668
    5. ' to' → logprob: -7.400446891784668
    6. '   ' → logprob: -7.650446891784668
    7. 'to' → logprob: -7.775446891784668
    8. 'def' → logprob: -9.025446891784668
    9. 'a' → logprob: -9.400446891784668
    10. ' ' → logprob: -9.650446891784668

Token 386: ' jour' (ID: 8379)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.6933302879333496
    2. 'max' → logprob: -0.6933302879333496
    3. 'right' → logprob: -9.193330764770508
    4. 'left' → logprob: -10.568330764770508
    5. '=max' → logprob: -11.318330764770508
    6. 'update' → logprob: -11.443330764770508
    7. '=min' → logprob: -11.693330764770508
    8. ' min' → logprob: -12.068330764770508
    9. ' jour' → logprob: -12.193330764770508
    10. ' max' → logprob: -12.193330764770508

Token 387: ' la' (ID: 557)
  Prédit: ' right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.2535107731819153
    2. 'right' → logprob: -1.5035107135772705
    3. '(right' → logprob: -6.75351095199585
    4. '	right' → logprob: -9.253510475158691
    5. ' ' → logprob: -9.628510475158691
    6. '(' → logprob: -9.753510475158691
    7. '(
' → logprob: -10.003510475158691
    8. '   ' → logprob: -10.378510475158691
    9. '    ' → logprob: -11.003510475158691
    10. '_right' → logprob: -11.253510475158691

Token 388: ' valeur' (ID: 41664)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.005075790919363499
    2. ' right' → logprob: -5.380075931549072
    3. 'min' → logprob: -7.755075931549072
    4. ' min' → logprob: -10.755075454711914
    5. 'left' → logprob: -12.380075454711914
    6. '   ' → logprob: -15.130075454711914
    7. '
' → logprob: -15.255075454711914
    8. ' ' → logprob: -15.380075454711914
    9. 'r' → logprob: -15.380075454711914
    10. '	right' → logprob: -16.130075454711914

Token 389: ' de' (ID: 334)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.5018641352653503
    2. ' de' → logprob: -1.6268641948699951
    3. '=' → logprob: -2.251864194869995
    4. ' right' → logprob: -2.751864194869995
    5. '   ' → logprob: -5.126863956451416
    6. ' =' → logprob: -5.251863956451416
    7. 'de' → logprob: -5.251863956451416
    8. '[right' → logprob: -5.626863956451416
    9. '(right' → logprob: -5.876863956451416
    10. '	right' → logprob: -6.126863956451416

Token 390: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.09066114574670792
    2. ' right' → logprob: -2.46566104888916
    3. 'min' → logprob: -6.96566104888916
    4. ' min' → logprob: -7.84066104888916
    5. 'max' → logprob: -7.96566104888916
    6. ' max' → logprob: -10.46566104888916
    7. '(right' → logprob: -12.84066104888916
    8. '	right' → logprob: -13.59066104888916
    9. ' ' → logprob: -13.96566104888916
    10. '[right' → logprob: -14.71566104888916

Token 391: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04361163452267647
    2. '=' → logprob: -3.168611526489258
    3. ',' → logprob: -7.418611526489258
    4. '<|end|>' → logprob: -11.793611526489258
    5. ' ,' → logprob: -13.043611526489258
    6. 'right' → logprob: -14.293611526489258
    7. ')' → logprob: -14.418611526489258
    8. ' ' → logprob: -14.793611526489258
    9. '   ' → logprob: -15.043611526489258
    10. ' =
' → logprob: -15.543611526489258

Token 392: ' qu' (ID: 474)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.313264399766922
    2. ' min' → logprob: -1.3132643699645996
    3. '(min' → logprob: -13.563264846801758
    4. '=min' → logprob: -13.813264846801758
    5. 'max' → logprob: -15.688264846801758
    6. '	min' → logprob: -16.063264846801758
    7. '_min' → logprob: -16.938264846801758
    8. '=' → logprob: -17.688264846801758
    9. '[min' → logprob: -17.813264846801758
    10. ',min' → logprob: -18.313264846801758

Token 393: ''elle' (ID: 36421)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.6647231578826904
    2. '=max' → logprob: -1.7897231578826904
    3. ''être' → logprob: -2.5397231578826904
    4. 'max' → logprob: -2.5397231578826904
    5. '(right' → logprob: -3.9147231578826904
    6. ')' → logprob: -4.0397233963012695
    7. '_' → logprob: -4.1647233963012695
    8. '   ' → logprob: -4.2897233963012695
    9. 'e' → logprob: -4.5397233963012695
    10. ''' → logprob: -4.7897233963012695

Token 394: ' soit' (ID: 17293)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.062068402767181396
    2. ' =' → logprob: -2.812068462371826
    3. '=min' → logprob: -9.562067985534668
    4. '=max' → logprob: -10.687067985534668
    5. 'min' → logprob: -12.812067985534668
    6. '=
' → logprob: -12.937067985534668
    7. 'max' → logprob: -13.812067985534668
    8. ' be' → logprob: -14.687067985534668
    9. '=int' → logprob: -15.937067985534668
    10. ' ' → logprob: -16.062068939208984

Token 395: ' la' (ID: 557)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.018151817843317986
    2. ' min' → logprob: -4.018151760101318
    3. '=min' → logprob: -13.768152236938477
    4. '(min' → logprob: -14.768152236938477
    5. '	min' → logprob: -15.268152236938477
    6. '[min' → logprob: -16.393152236938477
    7. '_min' → logprob: -17.018152236938477
    8. ',min' → logprob: -18.143152236938477
    9. '.min' → logprob: -18.393152236938477
    10. 'minimum' → logprob: -18.518152236938477

Token 396: ' plus' (ID: 2932)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0031777136027812958
    2. ' min' → logprob: -5.753177642822266
    3. '	min' → logprob: -17.253177642822266
    4. 'minimum' → logprob: -17.378177642822266
    5. '(min' → logprob: -17.878177642822266
    6. '=min' → logprob: -18.128177642822266
    7. 'mini' → logprob: -18.878177642822266
    8. ' minimum' → logprob: -19.003177642822266
    9. '_min' → logprob: -19.003177642822266
    10. '[min' → logprob: -19.128177642822266

Token 397: ' à' (ID: 1221)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5872138738632202
    2. 'à' → logprob: -1.3372138738632202
    3. 'left' → logprob: -2.0872139930725098
    4. 'right' → logprob: -3.4622139930725098
    5. '<' → logprob: -4.96221399307251
    6. ' à' → logprob: -5.21221399307251
    7. '```' → logprob: -5.83721399307251
    8. 'g' → logprob: -6.08721399307251
    9. ' droite' → logprob: -6.58721399307251
    10. ' gauche' → logprob: -7.08721399307251

Token 398: ' gauche' (ID: 58367)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.3974037170410156
    2. 'left' → logprob: -1.2724037170410156
    3. 'min' → logprob: -3.1474037170410156
    4. '```' → logprob: -6.272403717041016
    5. 'right' → logprob: -7.147403717041016
    6. 'dro' → logprob: -7.397403717041016
    7. ' gauche' → logprob: -7.897403717041016
    8. 'pet' → logprob: -8.147403717041016
    9. 'low' → logprob: -8.397403717041016
    10. 'small' → logprob: -8.772403717041016

Token 399: ' possible' (ID: 4149)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13889382779598236
    2. '(right' → logprob: -3.0138938426971436
    3. '<|end|>' → logprob: -3.5138938426971436
    4. ' right' → logprob: -4.1388936042785645
    5. 'right' → logprob: -4.5138936042785645
    6. ',right' → logprob: -4.7638936042785645
    7. '       ' → logprob: -4.8888936042785645
    8. ' ,' → logprob: -5.2638936042785645
    9. '   ' → logprob: -7.5138936042785645
    10. '(' → logprob: -7.6388936042785645

Token 400: ' entre' (ID: 3853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004793464671820402
    2. '       ' → logprob: -5.504793643951416
    3. ' ,' → logprob: -8.504793167114258
    4. ',right' → logprob: -8.504793167114258
    5. 'right' → logprob: -8.879793167114258
    6. '<|end|>' → logprob: -9.504793167114258
    7. '=' → logprob: -10.004793167114258
    8. ' right' → logprob: -11.004793167114258
    9. '(right' → logprob: -12.004793167114258
    10. ',
' → logprob: -12.004793167114258

Token 401: ' sa' (ID: 880)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.3159734904766083
    2. ' right' → logprob: -1.3159735202789307
    3. '(right' → logprob: -5.940973281860352
    4. '[right' → logprob: -10.315973281860352
    5. '	right' → logprob: -10.565973281860352
    6. '   ' → logprob: -12.065973281860352
    7. ',right' → logprob: -12.190973281860352
    8. '```' → logprob: -13.315973281860352
    9. '_right' → logprob: -13.565973281860352
    10. ' ' → logprob: -14.190973281860352

Token 402: ' valeur' (ID: 41664)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0032549542374908924
    2. ' right' → logprob: -5.8782548904418945
    3. 'current' → logprob: -8.628254890441895
    4. 'value' → logprob: -8.628254890441895
    5. '(right' → logprob: -10.253254890441895
    6. '[right' → logprob: -10.253254890441895
    7. ' current' → logprob: -11.753254890441895
    8. '	right' → logprob: -12.503254890441895
    9. ' value' → logprob: -12.878254890441895
    10. ',right' → logprob: -13.003254890441895

Token 403: ' actuelle' (ID: 104951)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.22987517714500427
    2. '(right' → logprob: -2.229875087738037
    3. ',' → logprob: -2.979875087738037
    4. ' right' → logprob: -4.104875087738037
    5. '[right' → logprob: -4.729875087738037
    6. 'current' → logprob: -4.979875087738037
    7. '   ' → logprob: -5.229875087738037
    8. ',right' → logprob: -6.229875087738037
    9. '<|end|>' → logprob: -6.479875087738037
    10. '(current' → logprob: -6.729875087738037

Token 404: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007161272224038839
    2. ',right' → logprob: -8.250716209411621
    3. 'right' → logprob: -8.625716209411621
    4. ' ,' → logprob: -8.750716209411621
    5. ' and' → logprob: -9.625716209411621
    6. ' right' → logprob: -10.875716209411621
    7. ',
' → logprob: -11.625716209411621
    8. '[right' → logprob: -11.875716209411621
    9. '<|end|>' → logprob: -12.000716209411621
    10. 'and' → logprob: -12.625716209411621

Token 405: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.17976592481136322
    2. 'right' → logprob: -1.8047659397125244
    3. '(right' → logprob: -11.304765701293945
    4. '	right' → logprob: -13.179765701293945
    5. ' max' → logprob: -13.429765701293945
    6. '[right' → logprob: -13.429765701293945
    7. '   ' → logprob: -14.179765701293945
    8. 'max' → logprob: -14.179765701293945
    9. ',right' → logprob: -14.554765701293945
    10. ' ' → logprob: -14.929765701293945

Token 406: '_i' (ID: 10853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0324561633169651
    2. '_i' → logprob: -3.532456159591675
    3. ',i' → logprob: -6.282456398010254
    4. '_,' → logprob: -8.157456398010254
    5. '<|end|>' → logprob: -8.532456398010254
    6. ')' → logprob: -8.657456398010254
    7. ' ,' → logprob: -9.657456398010254
    8. '_' → logprob: -9.782456398010254
    9. ',_' → logprob: -11.032456398010254
    10. ',
' → logprob: -11.532456398010254

Token 407: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01943121664226055
    2. 'right' → logprob: -4.269431114196777
    3. '=' → logprob: -5.769431114196777
    4. ' right' → logprob: -6.519431114196777
    5. '   ' → logprob: -8.644431114196777
    6. ' =' → logprob: -8.894431114196777
    7. '<|end|>' → logprob: -9.019431114196777
    8. ',' → logprob: -10.519431114196777
    9. ',right' → logprob: -10.519431114196777
    10. '           ' → logprob: -10.644431114196777

Token 408: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031046945601701736
    2. 'right' → logprob: -3.7810468673706055
    3. ' right' → logprob: -5.2810468673706055
    4. ',' → logprob: -6.5310468673706055
    5. '=' → logprob: -8.031046867370605
    6. ' =' → logprob: -8.656046867370605
    7. '<|end|>' → logprob: -8.906046867370605
    8. ',right' → logprob: -9.031046867370605
    9. '[right' → logprob: -9.281046867370605
    10. '   ' → logprob: -9.656046867370605

Token 409: ' #' (ID: 1069)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.4197285771369934
    2. ' right' → logprob: -1.4197285175323486
    3. '       ' → logprob: -2.2947285175323486
    4. '	right' → logprob: -10.16972827911377
    5. ',right' → logprob: -10.41972827911377
    6. '=' → logprob: -10.66972827911377
    7. '[right' → logprob: -10.79472827911377
    8. ',' → logprob: -11.41972827911377
    9. '.right' → logprob: -11.54472827911377
    10. '        ' → logprob: -11.54472827911377

Token 410: ' min' (ID: 1349)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0065459092147648335
    2. ' right' → logprob: -5.5065460205078125
    3. '       ' → logprob: -6.0065460205078125
    4. '   ' → logprob: -14.131546020507812
    5. '	right' → logprob: -14.131546020507812
    6. '
' → logprob: -15.006546020507812
    7. '           ' → logprob: -17.006546020507812
    8. '```' → logprob: -17.006546020507812
    9. '      ' → logprob: -17.756546020507812
    10. '(right' → logprob: -18.131546020507812

Token 411: '()' (ID: 416)
  Prédit: '(right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(right' → logprob: -0.0087110111489892
    2. '(' → logprob: -4.758710861206055
    3. '(
' → logprob: -9.883710861206055
    4. 'right' → logprob: -10.883710861206055
    5. ')' → logprob: -11.508710861206055
    6. ',right' → logprob: -12.508710861206055
    7. ' right' → logprob: -12.758710861206055
    8. ' (' → logprob: -13.258710861206055
    9. '(left' → logprob: -13.258710861206055
    10. '	right' → logprob: -13.258710861206055

Token 412: ' retourne' (ID: 178818)
  Prédit: '(right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(right' → logprob: -0.010642516426742077
    2. '(' → logprob: -4.6356425285339355
    3. 'right' → logprob: -8.385642051696777
    4. ')' → logprob: -9.010642051696777
    5. ',right' → logprob: -9.010642051696777
    6. '=' → logprob: -9.135642051696777
    7. '[right' → logprob: -9.385642051696777
    8. '(
' → logprob: -9.510642051696777
    9. '   ' → logprob: -10.760642051696777
    10. ' right' → logprob: -10.885642051696777

Token 413: ' le' (ID: 505)
  Prédit: '(right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(right' → logprob: -0.001921014511026442
    2. '(' → logprob: -7.0019211769104
    3. '(min' → logprob: -7.3769211769104
    4. 'right' → logprob: -8.876920700073242
    5. ' right' → logprob: -9.126920700073242
    6. '(the' → logprob: -10.376920700073242
    7. ' the' → logprob: -10.626920700073242
    8. 'the' → logprob: -11.001920700073242
    9. '(
' → logprob: -11.376920700073242
    10. ')' → logprob: -11.376920700073242

Token 414: ' plus' (ID: 2932)
  Prédit: '(right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(right' → logprob: -0.10644862800836563
    2. 'right' → logprob: -2.4814486503601074
    3. '(min' → logprob: -4.981448650360107
    4. '[right' → logprob: -5.481448650360107
    5. 'min' → logprob: -5.856448650360107
    6. ' right' → logprob: -6.606448650360107
    7. 'most' → logprob: -7.606448650360107
    8. 'plus' → logprob: -7.981448650360107
    9. '(rhs' → logprob: -8.98144817352295
    10. ' smallest' → logprob: -8.98144817352295

Token 415: ' petit' (ID: 20577)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.694972038269043
    2. '(right' → logprob: -0.819972038269043
    3. 'left' → logprob: -3.194972038269043
    4. '(left' → logprob: -5.069972038269043
    5. '[right' → logprob: -5.194972038269043
    6. ' right' → logprob: -5.694972038269043
    7. '_right' → logprob: -6.569972038269043
    8. 'min' → logprob: -7.194972038269043
    9. '	right' → logprob: -7.694972038269043
    10. '(' → logprob: -8.069972038269043

Token 416: ' des' (ID: 731)
  Prédit: '(right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(right' → logprob: -0.0005140714929439127
    2. '(' → logprob: -7.625514030456543
    3. 'right' → logprob: -11.750514030456543
    4. '[right' → logprob: -12.125514030456543
    5. ' (' → logprob: -12.500514030456543
    6. '(
' → logprob: -12.625514030456543
    7. ',right' → logprob: -13.000514030456543
    8. '(rhs' → logprob: -13.625514030456543
    9. '(left' → logprob: -14.000514030456543
    10. ' right' → logprob: -14.625514030456543

Token 417: ' deux' (ID: 10301)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.057174090296030045
    2. '(right' → logprob: -3.1821742057800293
    3. ' right' → logprob: -4.307174205780029
    4. '[right' → logprob: -7.557174205780029
    5. '	right' → logprob: -10.182173728942871
    6. ',right' → logprob: -10.807173728942871
    7. ')' → logprob: -12.307173728942871
    8. '   ' → logprob: -12.557173728942871
    9. '```' → logprob: -12.682173728942871
    10. ':right' → logprob: -13.182173728942871

Token 418: ' arguments' (ID: 11917)
  Prédit: '(right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(right' → logprob: -0.001160100451670587
    2. '(' → logprob: -6.876160144805908
    3. 'right' → logprob: -9.37615966796875
    4. '[right' → logprob: -11.00115966796875
    5. ' (' → logprob: -11.50115966796875
    6. '(
' → logprob: -12.00115966796875
    7. ',right' → logprob: -12.37615966796875
    8. ',' → logprob: -13.75115966796875
    9. '	right' → logprob: -14.00115966796875
    10. ' right' → logprob: -14.25115966796875

Token 419: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031770214438438416
    2. 'right' → logprob: -4.4067702293396
    3. '(right' → logprob: -4.5317702293396
    4. ')' → logprob: -5.7817702293396
    5. ' right' → logprob: -6.2817702293396
    6. '(
' → logprob: -6.2817702293396
    7. '   ' → logprob: -7.7817702293396
    8. ',' → logprob: -8.281769752502441
    9. '	right' → logprob: -8.781769752502441
    10. '[right' → logprob: -8.781769752502441

Token 420: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1394524872303009
    2. 'right' → logprob: -2.5144524574279785
    3. ' right' → logprob: -3.0144524574279785
    4. '   ' → logprob: -9.639452934265137
    5. ')' → logprob: -10.389452934265137
    6. '	right' → logprob: -10.764452934265137
    7. '(right' → logprob: -11.014452934265137
    8. '        
' → logprob: -11.389452934265137
    9. '           ' → logprob: -11.764452934265137
    10. '[right' → logprob: -12.264452934265137

Token 421: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10349016636610031
    2. ' right' → logprob: -2.603490114212036
    3. 'right' → logprob: -3.728490114212036
    4. ')' → logprob: -9.353489875793457
    5. '   ' → logprob: -9.603489875793457
    6. '	right' → logprob: -10.353489875793457
    7. '        
' → logprob: -11.103489875793457
    8. '           ' → logprob: -11.603489875793457
    9. '
' → logprob: -11.728489875793457
    10. ',' → logprob: -11.728489875793457

Token 422: ' Ceci' (ID: 144699)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.13921934366226196
    2. '       ' → logprob: -2.389219284057617
    3. ' right' → logprob: -3.264219284057617
    4. '   ' → logprob: -10.639219284057617
    5. '	right' → logprob: -11.764219284057617
    6. '```' → logprob: -14.514219284057617
    7. '           ' → logprob: -14.764219284057617
    8. '      ' → logprob: -14.889219284057617
    9. ' ' → logprob: -15.014219284057617
    10. '     ' → logprob: -15.389219284057617

Token 423: ' garantit' (ID: 182078)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1093238890171051
    2. '=' → logprob: -2.7343239784240723
    3. '       ' → logprob: -3.8593239784240723
    4. ' right' → logprob: -4.734323978424072
    5. '   ' → logprob: -5.109323978424072
    6. 'right' → logprob: -5.984323978424072
    7. ' ' → logprob: -9.859323501586914
    8. '	right' → logprob: -9.984323501586914
    9. '  ' → logprob: -11.484323501586914
    10. '    ' → logprob: -11.484323501586914

Token 424: ' que' (ID: 661)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11984650790691376
    2. ' that' → logprob: -2.9948465824127197
    3. ' que' → logprob: -2.9948465824127197
    4. '   ' → logprob: -4.744846343994141
    5. ' right' → logprob: -5.744846343994141
    6. 'right' → logprob: -7.494846343994141
    7. ' ' → logprob: -8.86984634399414
    8. '    ' → logprob: -9.86984634399414
    9. ' ' → logprob: -10.24484634399414
    10. '```' → logprob: -10.49484634399414

Token 425: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.06196891888976097
    2. 'right' → logprob: -2.8119688034057617
    3. '	right' → logprob: -14.186968803405762
    4. '   ' → logprob: -16.061969757080078
    5. '_right' → logprob: -16.561969757080078
    6. '(right' → logprob: -16.561969757080078
    7. '```' → logprob: -16.936969757080078
    8. ' ' → logprob: -17.061969757080078
    9. '[right' → logprob: -17.061969757080078
    10. 'left' → logprob: -17.561969757080078

Token 426: ' représente' (ID: 88912)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03364696726202965
    2. '=' → logprob: -3.408647060394287
    3. '   ' → logprob: -14.283646583557129
    4. '<|end|>' → logprob: -15.533646583557129
    5. ' ' → logprob: -15.783646583557129
    6. '=min' → logprob: -15.908646583557129
    7. ' is' → logprob: -17.408647537231445
    8. ')' → logprob: -17.658647537231445
    9. '       ' → logprob: -17.908647537231445
    10. 's' → logprob: -18.533647537231445

Token 427: ' la' (ID: 557)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.4929187595844269
    2. ' the' → logprob: -0.9929187297821045
    3. ' la' → logprob: -5.117918968200684
    4. ' right' → logprob: -5.117918968200684
    5. 'min' → logprob: -5.367918968200684
    6. 'the' → logprob: -6.617918968200684
    7. '<|end|>' → logprob: -8.367918968200684
    8. 'right' → logprob: -8.867918968200684
    9. ' max' → logprob: -9.242918968200684
    10. ' minimum' → logprob: -9.742918968200684

Token 428: ' limite' (ID: 48939)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.2523261606693268
    2. ' min' → logprob: -1.5023261308670044
    3. 'right' → logprob: -8.002326011657715
    4. ' right' → logprob: -10.127326011657715
    5. 'max' → logprob: -11.752326011657715
    6. 'minimum' → logprob: -11.877326011657715
    7. ' minimum' → logprob: -12.627326011657715
    8. '	min' → logprob: -13.002326011657715
    9. 'left' → logprob: -14.377326011657715
    10. '_min' → logprob: -15.377326011657715

Token 429: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.0050035519525408745
    2. ' the' → logprob: -6.255003452301025
    3. ' possible' → logprob: -6.255003452301025
    4. ' right' → logprob: -8.130003929138184
    5. '<|end|>' → logprob: -8.255003929138184
    6. ' droite' → logprob: -8.630003929138184
    7. ' plus' → logprob: -9.255003929138184
    8. '   ' → logprob: -9.380003929138184
    9. ' gauche' → logprob: -10.255003929138184
    10. 'the' → logprob: -10.505003929138184

Token 430: ' plus' (ID: 2932)
  Prédit: ' right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.6917693614959717
    2. 'right' → logprob: -0.9417693614959717
    3. ' min' → logprob: -2.9417693614959717
    4. 'min' → logprob: -3.5667693614959717
    5. ' plus' → logprob: -4.066769599914551
    6. ' droite' → logprob: -6.066769599914551
    7. ' possible' → logprob: -6.191769599914551
    8. ' minimum' → logprob: -6.316769599914551
    9. 'plus' → logprob: -6.941769599914551
    10. 'minimum' → logprob: -7.691769599914551

Token 431: ' restrictive' (ID: 114838)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.1425876021385193
    2. ' right' → logprob: -2.767587661743164
    3. 'left' → logprob: -3.767587661743164
    4. 'restrict' → logprob: -4.142587661743164
    5. ' restrictive' → logprob: -4.767587661743164
    6. 'tight' → logprob: -4.892587661743164
    7. 'strict' → logprob: -5.142587661743164
    8. ' droite' → logprob: -6.142587661743164
    9. ' tight' → logprob: -6.392587661743164
    10. 'min' → logprob: -6.517587661743164

Token 432: ' à' (ID: 1221)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.06799651682376862
    2. '<|end|>' → logprob: -3.6929965019226074
    3. ' à' → logprob: -3.9429965019226074
    4. ' right' → logprob: -4.442996501922607
    5. ' de' → logprob: -6.067996501922607
    6. '   ' → logprob: -6.067996501922607
    7. ' ' → logprob: -6.692996501922607
    8. 'possible' → logprob: -7.317996501922607
    9. ' to' → logprob: -7.442996501922607
    10. ' entre' → logprob: -8.067996978759766

Token 433: ' droite' (ID: 61428)
  Prédit: ' right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.44221729040145874
    2. 'right' → logprob: -1.0672173500061035
    3. ' droite' → logprob: -4.3172173500061035
    4. ' gauche' → logprob: -10.567216873168945
    5. '	right' → logprob: -11.317216873168945
    6. 'left' → logprob: -11.567216873168945
    7. ' droit' → logprob: -11.942216873168945
    8. ' ' → logprob: -11.942216873168945
    9. ' direita' → logprob: -12.192216873168945
    10. '_right' → logprob: -12.442216873168945

Token 434: ' impos' (ID: 12130)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35732021927833557
    2. '=' → logprob: -1.3573201894760132
    3. ',' → logprob: -3.2323203086853027
    4. '   ' → logprob: -6.732320308685303
    5. '       ' → logprob: -6.857320308685303
    6. 'right' → logprob: -7.107320308685303
    7. ')' → logprob: -8.857319831848145
    8. ' right' → logprob: -8.857319831848145
    9. '<|end|>' → logprob: -9.107319831848145
    10. ',right' → logprob: -9.732319831848145

Token 435: 'ée' (ID: 2894)
  Prédit: 'unt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'unt' → logprob: -0.7246711254119873
    2. 'int' → logprob: -2.7246711254119873
    3. 'ont' → logprob: -2.8496711254119873
    4. 'aus' → logprob: -2.8496711254119873
    5. 'ent' → logprob: -2.9746711254119873
    6. 'un' → logprob: -3.0996711254119873
    7. '   ' → logprob: -3.8496711254119873
    8. 'u' → logprob: -4.599671363830566
    9. 'à' → logprob: -4.724671363830566
    10. '       ' → logprob: -4.724671363830566

Token 436: ' jusqu' (ID: 21961)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6777891516685486
    2. ',' → logprob: -1.1777892112731934
    3. '   ' → logprob: -2.4277892112731934
    4. ' right' → logprob: -2.8027892112731934
    5. 'right' → logprob: -3.9277892112731934
    6. ')' → logprob: -4.927789211273193
    7. '(right' → logprob: -5.927789211273193
    8. '=' → logprob: -6.427789211273193
    9. ',right' → logprob: -6.677789211273193
    10. ' =' → logprob: -6.802789211273193

Token 437: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.29126888513565063
    2. 'à' → logprob: -2.041268825531006
    3. '(right' → logprob: -3.166268825531006
    4. 'au' → logprob: -4.416268825531006
    5. '’à' → logprob: -4.416268825531006
    6. '()' → logprob: -4.791268825531006
    7. 'right' → logprob: -4.791268825531006
    8. '_' → logprob: -4.791268825531006
    9. 'to' → logprob: -5.041268825531006
    10. '_to' → logprob: -5.416268825531006

Token 438: ' présent' (ID: 24129)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.016066161915659904
    2. ' right' → logprob: -4.141066074371338
    3. 'left' → logprob: -12.141066551208496
    4. 'l' → logprob: -12.516066551208496
    5. 'last' → logprob: -12.516066551208496
    6. 'la' → logprob: -13.016066551208496
    7. '   ' → logprob: -13.141066551208496
    8. ' droite' → logprob: -13.266066551208496
    9. ' l' → logprob: -13.516066551208496
    10. 'now' → logprob: -13.516066551208496

Token 439: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0070084016770124435
    2. 'right' → logprob: -5.2570085525512695
    3. ' right' → logprob: -7.3820085525512695
    4. '
' → logprob: -7.7570085525512695
    5. '   ' → logprob: -8.13200855255127
    6. '        
' → logprob: -8.88200855255127
    7. ')' → logprob: -9.25700855255127
    8. ')
' → logprob: -10.00700855255127
    9. '<|end|>' → logprob: -10.25700855255127
    10. '```' → logprob: -10.38200855255127

Token 440: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023842109367251396
    2. 'right' → logprob: -6.252384185791016
    3. ' right' → logprob: -7.877384185791016
    4. '   ' → logprob: -9.627384185791016
    5. '```' → logprob: -12.752384185791016
    6. '	right' → logprob: -13.377384185791016
    7. '
' → logprob: -13.627384185791016
    8. '[right' → logprob: -13.627384185791016
    9. '           ' → logprob: -13.627384185791016
    10. '        
' → logprob: -14.752384185791016

Token 441: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.28170084953308105
    2. '       ' → logprob: -1.531700849533081
    3. ' right' → logprob: -3.531700849533081
    4. '   ' → logprob: -10.40670108795166
    5. '	right' → logprob: -10.40670108795166
    6. '```' → logprob: -11.90670108795166
    7. '[right' → logprob: -12.65670108795166
    8. '           ' → logprob: -13.28170108795166
    9. ',right' → logprob: -13.28170108795166
    10. '(right' → logprob: -13.65670108795166

Token 442: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759470462799072
    2. ' =' → logprob: -0.8259470462799072
    3. ',' → logprob: -12.575946807861328
    4. ')' → logprob: -13.200946807861328
    5. '=min' → logprob: -13.575946807861328
    6. '   ' → logprob: -15.075946807861328
    7. ' =
' → logprob: -15.450946807861328
    8. '<|end|>' → logprob: -16.325946807861328
    9. ')=' → logprob: -16.575946807861328
    10. '=
' → logprob: -16.700946807861328

Token 443: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.003178071230649948
    2. 'min' → logprob: -5.753178119659424
    3. ' max' → logprob: -15.503177642822266
    4. '	min' → logprob: -16.378177642822266
    5. '(min' → logprob: -16.753177642822266
    6. '=min' → logprob: -17.003177642822266
    7. '.min' → logprob: -17.628177642822266
    8. '_min' → logprob: -18.378177642822266
    9. '[min' → logprob: -18.378177642822266
    10. ' minimum' → logprob: -18.628177642822266

Token 444: '(right' (ID: 52104)
  Prédit: '(right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(right' → logprob: -3.4121114822482923e-06
    2. '(' → logprob: -12.750003814697266
    3. 'right' → logprob: -15.625003814697266
    4. '[right' → logprob: -16.375003814697266
    5. '(rhs' → logprob: -16.875003814697266
    6. ' (' → logprob: -17.500003814697266
    7. '(left' → logprob: -17.625003814697266
    8. ',right' → logprob: -17.875003814697266
    9. '(
' → logprob: -18.000003814697266
    10. ' right' → logprob: -19.500003814697266

Token 445: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0027040657587349415
    2. ',right' → logprob: -6.12770414352417
    3. ' ,' → logprob: -7.62770414352417
    4. '(right' → logprob: -11.002703666687012
    5. 'right' → logprob: -11.752703666687012
    6. ',
' → logprob: -12.502703666687012
    7. '[right' → logprob: -13.377703666687012
    8. ' right' → logprob: -13.877703666687012
    9. ')' → logprob: -14.752703666687012
    10. '   ' → logprob: -15.627703666687012

Token 446: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.3868720829486847
    2. ' right' → logprob: -1.1368720531463623
    3. '(right' → logprob: -14.636872291564941
    4. '	right' → logprob: -15.636872291564941
    5. '[right' → logprob: -15.636872291564941
    6. '   ' → logprob: -15.761872291564941
    7. ' ' → logprob: -17.261871337890625
    8. 'Right' → logprob: -18.011871337890625
    9. '       ' → logprob: -18.136871337890625
    10. ',right' → logprob: -18.261871337890625

Token 447: '_i' (ID: 10853)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.252282977104187
    2. '_i' → logprob: -1.502282977104187
    3. ',' → logprob: -9.627283096313477
    4. ')
' → logprob: -9.752283096313477
    5. '_' → logprob: -10.127283096313477
    6. 'i' → logprob: -10.127283096313477
    7. '<|end|>' → logprob: -10.127283096313477
    8. ')_' → logprob: -10.627283096313477
    9. '[i' → logprob: -11.377283096313477
    10. '[' → logprob: -12.127283096313477

Token 448: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008899023523554206
    2. ')
' → logprob: -7.625889778137207
    3. '<|end|>' → logprob: -7.875889778137207
    4. ' )' → logprob: -11.500889778137207
    5. '   ' → logprob: -12.750889778137207
    6. '       ' → logprob: -12.875889778137207
    7. ')

' → logprob: -13.000889778137207
    8. '
' → logprob: -14.000889778137207
    9. '```' → logprob: -14.000889778137207
    10. '<|end|>' → logprob: -14.750889778137207

Token 449: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7840002179145813
    2. '   ' → logprob: -0.9090002179145813
    3. '    
' → logprob: -3.0340001583099365
    4. '<|end|>' → logprob: -3.0340001583099365
    5. '```' → logprob: -3.2840001583099365
    6. '  
' → logprob: -5.784000396728516
    7. '[' → logprob: -6.909000396728516
    8. '

' → logprob: -7.159000396728516
    9. '<|end|>' → logprob: -8.284000396728516
    10. 'if' → logprob: -8.409000396728516

Token 450: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06421179324388504
    2. '    
' → logprob: -3.314211845397949
    3. '
' → logprob: -3.689211845397949
    4. '```' → logprob: -8.31421184539795
    5. '   
' → logprob: -9.06421184539795
    6. 'if' → logprob: -9.06421184539795
    7. '  
' → logprob: -9.18921184539795
    8. '<|end|>' → logprob: -9.43921184539795
    9. '    
    
' → logprob: -9.81421184539795
    10. '        
' → logprob: -10.43921184539795

Token 451: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08301538974046707
    2. 'if' → logprob: -3.2080154418945312
    3. '
' → logprob: -3.9580154418945312
    4. ' if' → logprob: -4.708015441894531
    5. '    
' → logprob: -5.083015441894531
    6. 'print' → logprob: -5.583015441894531
    7. '```' → logprob: -7.583015441894531
    8. '  
' → logprob: -8.833015441894531
    9. 'result' → logprob: -9.208015441894531
    10. '   
' → logprob: -9.333015441894531

Token 452: ' Cal' (ID: 4453)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9105125665664673
    2. 'print' → logprob: -0.9105125665664673
    3. 'result' → logprob: -2.7855124473571777
    4. ' if' → logprob: -2.9105124473571777
    5. '   ' → logprob: -3.5355124473571777
    6. ' print' → logprob: -4.035512447357178
    7. 'interval' → logprob: -4.660512447357178
    8. ' result' → logprob: -5.160512447357178
    9. '#' → logprob: -5.160512447357178
    10. 'intersection' → logprob: -5.660512447357178

Token 453: 'cule' (ID: 45017)
  Prédit: 'cule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cule' → logprob: -0.15310494601726532
    2. 'cul' → logprob: -2.0281050205230713
    3. 'c' → logprob: -4.778104782104492
    4. 'culate' → logprob: -6.653104782104492
    5. '#' → logprob: -8.153104782104492
    6. 'cules' → logprob: -8.778104782104492
    7. '
' → logprob: -9.528104782104492
    8. '

' → logprob: -9.903104782104492
    9. '```' → logprob: -10.153104782104492
    10. '   ' → logprob: -11.028104782104492

Token 454: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15861251950263977
    2. 'result' → logprob: -2.7836124897003174
    3. 'print' → logprob: -3.2836124897003174
    4. '(' → logprob: -4.2836127281188965
    5. 'max' → logprob: -4.2836127281188965
    6. ' la' → logprob: -5.1586127281188965
    7. '(max' → logprob: -5.2836127281188965
    8. ' result' → logprob: -6.6586127281188965
    9. 'area' → logprob: -7.4086127281188965
    10. 'the' → logprob: -7.5336127281188965

Token 455: ' longueur' (ID: 104613)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.26394397020339966
    2. 'max' → logprob: -2.138943910598755
    3. 'tail' → logprob: -2.638943910598755
    4. '#' → logprob: -4.013944149017334
    5. 'result' → logprob: -4.763944149017334
    6. 'diff' → logprob: -5.638944149017334
    7. 'length' → logprob: -5.888944149017334
    8. 'long' → logprob: -5.888944149017334
    9. 'size' → logprob: -6.263944149017334
    10. ' print' → logprob: -7.013944149017334

Token 456: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.5768427848815918
    2. ' =' → logprob: -1.5768427848815918
    3. '=' → logprob: -1.9518427848815918
    4. '   ' → logprob: -2.076842784881592
    5. 'max' → logprob: -2.326842784881592
    6. '_' → logprob: -2.951842784881592
    7. '()' → logprob: -2.951842784881592
    8. '(max' → logprob: -3.076842784881592
    9. '_max' → logprob: -3.951842784881592
    10. '    ' → logprob: -4.326842784881592

Token 457: ' la' (ID: 557)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.274370014667511
    2. ' max' → logprob: -1.5243699550628662
    3. 'right' → logprob: -4.649370193481445
    4. '(max' → logprob: -5.399370193481445
    5. ' right' → logprob: -5.649370193481445
    6. ' la' → logprob: -6.399370193481445
    7. 'l' → logprob: -6.774370193481445
    8. ' l' → logprob: -6.774370193481445
    9. 'la' → logprob: -7.899370193481445
    10. '(right' → logprob: -10.024370193481445

Token 458: ' plage' (ID: 78241)
  Prédit: 'pl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pl' → logprob: -0.5051242709159851
    2. 'max' → logprob: -1.3801243305206299
    3. 'interval' → logprob: -2.88012433052063
    4. ' plage' → logprob: -3.50512433052063
    5. 'possible' → logprob: -4.505124092102051
    6. ' max' → logprob: -4.880124092102051
    7. 'intersection' → logprob: -4.880124092102051
    8. ' valid' → logprob: -5.005124092102051
    9. 'range' → logprob: -5.255124092102051
    10. 'valid' → logprob: -5.255124092102051

Token 459: ' valide' (ID: 137323)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.819485068321228
    2. 'possible' → logprob: -1.319485068321228
    3. 'result' → logprob: -1.944485068321228
    4. 'max' → logprob: -3.0694851875305176
    5. 'answer' → logprob: -3.3194851875305176
    6. 'print' → logprob: -4.069485187530518
    7. 'valid' → logprob: -4.569485187530518
    8. ' possible' → logprob: -4.944485187530518
    9. 'available' → logprob: -5.444485187530518
    10. ' =' → logprob: -5.444485187530518

Token 460: ' résult' (ID: 31657)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.187685489654541
    2. 'length' → logprob: -1.687685489654541
    3. '   ' → logprob: -1.812685489654541
    4. '
' → logprob: -1.812685489654541
    5. 'result' → logprob: -2.062685489654541
    6. 'size' → logprob: -4.062685489654541
    7. 'max' → logprob: -5.062685489654541
    8. 'return' → logprob: -5.312685489654541
    9. 'if' → logprob: -5.437685489654541
    10. '    
' → logprob: -5.437685489654541

Token 461: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.005691045895218849
    2. 'ant' → logprob: -5.255691051483154
    3. '   ' → logprob: -7.880691051483154
    4. 'ée' → logprob: -10.380690574645996
    5. 'e' → logprob: -10.630690574645996
    6. 'ur' → logprob: -12.630690574645996
    7. 'ure' → logprob: -12.880690574645996
    8. 'ue' → logprob: -12.880690574645996
    9. 'ane' → logprob: -13.005690574645996
    10. 'ente' → logprob: -13.380690574645996

Token 462: ' en' (ID: 469)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.43764111399650574
    2. '   ' → logprob: -1.9376411437988281
    3. 'result' → logprob: -1.9376411437988281
    4. 'print' → logprob: -3.562641143798828
    5. 'size' → logprob: -4.437641143798828
    6. '
' → logprob: -4.812641143798828
    7. 'valid' → logprob: -5.062641143798828
    8. ' length' → logprob: -6.187641143798828
    9. 'if' → logprob: -6.312641143798828
    10. '    
' → logprob: -6.437641143798828

Token 463: ' sou' (ID: 4069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.060698091983795166
    2. ' max' → logprob: -3.1856980323791504
    3. 'right' → logprob: -4.06069803237915
    4. ' right' → logprob: -8.810698509216309
    5. '(max' → logprob: -9.435698509216309
    6. '=max' → logprob: -10.185698509216309
    7. 'print' → logprob: -10.810698509216309
    8. 'r' → logprob: -12.560698509216309
    9. '   ' → logprob: -12.685698509216309
    10. ' ' → logprob: -12.685698509216309

Token 464: 'str' (ID: 689)
  Prédit: 'stract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stract' → logprob: -0.14910653233528137
    2. 'right' → logprob: -2.399106502532959
    3. 'tr' → logprob: -4.399106502532959
    4. 'straction' → logprob: -4.524106502532959
    5. 'str' → logprob: -4.774106502532959
    6. 'tra' → logprob: -5.024106502532959
    7. 'stra' → logprob: -5.274106502532959
    8. 'tract' → logprob: -6.524106502532959
    9. 'st' → logprob: -7.024106502532959
    10. '(right' → logprob: -7.649106502532959

Token 465: 'ayant' (ID: 130896)
  Prédit: 'ayant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ayant' → logprob: -0.37940406799316406
    2. 'a' → logprob: -1.754404067993164
    3. 'acting' → logprob: -3.129404067993164
    4. 'tra' → logprob: -3.504404067993164
    5. 'ant' → logprob: -3.879404067993164
    6. 'act' → logprob: -4.004404067993164
    7. 'tr' → logprob: -5.254404067993164
    8. '   ' → logprob: -5.379404067993164
    9. 'ah' → logprob: -6.129404067993164
    10. 'ait' → logprob: -6.379404067993164

Token 466: ' left' (ID: 3561)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.4552188217639923
    2. 'left' → logprob: -1.33021879196167
    3. ' right' → logprob: -2.45521879196167
    4. ' left' → logprob: -4.20521879196167
    5. '(left' → logprob: -8.705219268798828
    6. '(right' → logprob: -8.830219268798828
    7. '	right' → logprob: -9.455219268798828
    8. '   ' → logprob: -9.830219268798828
    9. '	left' → logprob: -11.080219268798828
    10. '_right' → logprob: -11.955219268798828

Token 467: ' à' (ID: 1221)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.16072386503219604
    2. ' -' → logprob: -2.410723924636841
    3. ' from' → logprob: -3.535723924636841
    4. '<|end|>' → logprob: -4.660723686218262
    5. ',' → logprob: -5.035723686218262
    6. '-' → logprob: -5.160723686218262
    7. ' ' → logprob: -5.535723686218262
    8. ' and' → logprob: -6.410723686218262
    9. '  ' → logprob: -7.660723686218262
    10. '   ' → logprob: -7.660723686218262

Token 468: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.20141489803791046
    2. ' right' → logprob: -1.701414942741394
    3. '	right' → logprob: -14.201415061950684
    4. '[right' → logprob: -15.201415061950684
    5. '(right' → logprob: -15.326415061950684
    6. 'r' → logprob: -16.201414108276367
    7. '   ' → logprob: -16.326414108276367
    8. ',right' → logprob: -16.826414108276367
    9. ' droite' → logprob: -17.201414108276367
    10. ' droit' → logprob: -17.201414108276367

Token 469: ' puis' (ID: 18766)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1351071149110794
    2. '+' → logprob: -2.6351070404052734
    3. 'length' → logprob: -3.7601070404052734
    4. 'print' → logprob: -4.635107040405273
    5. ' +' → logprob: -4.885107040405273
    6. 'result' → logprob: -5.260107040405273
    7. '    
' → logprob: -5.885107040405273
    8. '
' → logprob: -6.135107040405273
    9. 'distance' → logprob: -7.385107040405273
    10. 'size' → logprob: -7.510107040405273

Token 470: ' en' (ID: 469)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.586519181728363
    2. ' +' → logprob: -1.3365192413330078
    3. '1' → logprob: -1.7115192413330078
    4. 'plus' → logprob: -9.086519241333008
    5. ' plus' → logprob: -9.211519241333008
    6. ' ' → logprob: -9.586519241333008
    7. '   ' → logprob: -10.336519241333008
    8. '```' → logprob: -10.961519241333008
    9. 'max' → logprob: -11.211519241333008
    10. '+
' → logprob: -11.711519241333008

Token 471: ' ajout' (ID: 64605)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.538031280040741
    2. ' +' → logprob: -0.913031280040741
    3. ' plus' → logprob: -4.538031101226807
    4. '1' → logprob: -6.038031101226807
    5. 'plus' → logprob: -7.038031101226807
    6. ' ajout' → logprob: -8.038031578063965
    7. ' ' → logprob: -9.038031578063965
    8. ' adding' → logprob: -9.038031578063965
    9. 'adding' → logprob: -9.663031578063965
    10. 's' → logprob: -10.163031578063965

Token 472: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.47832897305488586
    2. '1' → logprob: -0.9783289432525635
    3. '   ' → logprob: -6.478329181671143
    4. '-ant' → logprob: -6.978329181671143
    5. 'ent' → logprob: -7.353329181671143
    6. '=' → logprob: -7.853329181671143
    7. '+' → logprob: -7.978329181671143
    8. '#' → logprob: -9.228328704833984
    9. '-' → logprob: -9.353328704833984
    10. 'ing' → logprob: -10.603328704833984

Token 473: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.029755238443613052
    2. ' ' → logprob: -3.5297553539276123
    3. '(' → logprob: -13.279755592346191
    4. ' one' → logprob: -14.029755592346191
    5. ' +' → logprob: -14.154755592346191
    6. '```' → logprob: -14.779755592346191
    7. ' plus' → logprob: -15.029755592346191
    8. '+' → logprob: -15.404755592346191
    9. '   ' → logprob: -16.279754638671875
    10. '`' → logprob: -16.404754638671875

Token 474: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003373694489710033
    2. ' ' → logprob: -8.000337600708008
    3. '```' → logprob: -13.750337600708008
    4. 'un' → logprob: -15.375337600708008
    5. '+' → logprob: -15.875337600708008
    6. ' un' → logprob: -16.000337600708008
    7. ' one' → logprob: -16.625337600708008
    8. 'une' → logprob: -16.750337600708008
    9. ' +' → logprob: -16.875337600708008
    10. 'one' → logprob: -16.875337600708008

Token 475: '
' (ID: 198)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.4503003656864166
    2. '   ' → logprob: -1.2003003358840942
    3. 'result' → logprob: -3.075300455093384
    4. 'size' → logprob: -5.200300216674805
    5. 'print' → logprob: -5.950300216674805
    6. ' length' → logprob: -5.950300216674805
    7. 'valid' → logprob: -6.075300216674805
    8. 'distance' → logprob: -7.575300216674805
    9. 'return' → logprob: -8.325300216674805
    10. 'answer' → logprob: -8.575300216674805

Token 476: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15268579125404358
    2. 'length' → logprob: -2.6526858806610107
    3. 'result' → logprob: -2.9026858806610107
    4. 'print' → logprob: -4.527685642242432
    5. '    
' → logprob: -6.652685642242432
    6. 'size' → logprob: -7.027685642242432
    7. ' length' → logprob: -7.152685642242432
    8. 'valid' → logprob: -7.527685642242432
    9. 'return' → logprob: -8.15268611907959
    10. 'distance' → logprob: -8.27768611907959

Token 477: ' #' (ID: 1069)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.405254065990448
    2. 'result' → logprob: -1.2802541255950928
    3. ' length' → logprob: -4.030253887176514
    4. 'print' → logprob: -4.530253887176514
    5. 'size' → logprob: -4.780253887176514
    6. '   ' → logprob: -5.155253887176514
    7. 'valid' → logprob: -5.405253887176514
    8. ' result' → logprob: -5.780253887176514
    9. 'if' → logprob: -6.155253887176514
    10. ' if' → logprob: -7.655253887176514

Token 478: ' Cela' (ID: 44403)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.253692090511322
    2. 'print' → logprob: -2.253692150115967
    3. 'result' → logprob: -2.253692150115967
    4. ' length' → logprob: -4.878692150115967
    5. '   ' → logprob: -6.128692150115967
    6. 'valid' → logprob: -6.503692150115967
    7. 'answer' → logprob: -7.253692150115967
    8. ' result' → logprob: -7.753692150115967
    9. 'size' → logprob: -7.878692150115967
    10. ' print' → logprob: -8.003691673278809

Token 479: ' correspond' (ID: 11095)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.731669008731842
    2. '=' → logprob: -1.2316689491271973
    3. ' if' → logprob: -2.3566689491271973
    4. 'if' → logprob: -2.4816689491271973
    5. 'print' → logprob: -4.356668949127197
    6. 'result' → logprob: -4.731668949127197
    7. '#' → logprob: -5.356668949127197
    8. ':' → logprob: -6.106668949127197
    9. ' result' → logprob: -6.231668949127197
    10. ' permet' → logprob: -6.231668949127197

Token 480: ' au' (ID: 2791)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.0724632665514946
    2. ' to' → logprob: -3.572463274002075
    3. ' au' → logprob: -3.947463274002075
    4. 'au' → logprob: -5.197463035583496
    5. 'à' → logprob: -5.572463035583496
    6. ' a' → logprob: -5.822463035583496
    7. '<|end|>' → logprob: -5.822463035583496
    8. 'to' → logprob: -5.947463035583496
    9. ' =' → logprob: -6.697463035583496
    10. ' ' → logprob: -7.322463035583496

Token 481: ' nombre' (ID: 9733)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.05855823680758476
    2. ' max' → logprob: -3.433558225631714
    3. 'right' → logprob: -4.558558464050293
    4. 'nombre' → logprob: -4.558558464050293
    5. ' nombre' → logprob: -5.933558464050293
    6. 'maximum' → logprob: -8.058558464050293
    7. ' maximum' → logprob: -8.683558464050293
    8. 'print' → logprob: -9.308558464050293
    9. '(max' → logprob: -9.433558464050293
    10. 'length' → logprob: -9.433558464050293

Token 482: ' d' (ID: 272)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.9081472158432007
    2. ' de' → logprob: -1.0331472158432007
    3. ' d' → logprob: -2.1581473350524902
    4. 'max' → logprob: -2.2831473350524902
    5. ' maximale' → logprob: -4.90814733505249
    6. '(max' → logprob: -5.40814733505249
    7. ' maximal' → logprob: -5.65814733505249
    8. ' des' → logprob: -5.65814733505249
    9. ' of' → logprob: -7.28314733505249
    10. '=max' → logprob: -7.53314733505249

Token 483: ''ent' (ID: 53422)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.6043272614479065
    2. ' éléments' → logprob: -1.1043272018432617
    3. ' espaces' → logprob: -3.3543272018432617
    4. '_' → logprob: -3.9793272018432617
    5. 'right' → logprob: -4.479327201843262
    6. ' droits' → logprob: -4.979327201843262
    7. ' elements' → logprob: -5.104327201843262
    8. '```' → logprob: -5.354327201843262
    9. 'elements' → logprob: -5.479327201843262
    10. 'é' → logprob: -5.604327201843262

Token 484: 'iers' (ID: 11012)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5353982448577881
    2. 'iers' → logprob: -0.9103982448577881
    3. 'ités' → logprob: -5.910398483276367
    4. 'ter' → logprob: -6.035398483276367
    5. 'éments' → logprob: -6.160398483276367
    6. 'ters' → logprob: -7.535398483276367
    7. 'ers' → logprob: -7.910398483276367
    8. 'ements' → logprob: -8.035398483276367
    9. 'érieurs' → logprob: -8.160398483276367
    10. '```' → logprob: -8.410398483276367

Token 485: ' sur' (ID: 1512)
  Prédit: ' valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' valid' → logprob: -0.6185082793235779
    2. 'right' → logprob: -1.4935083389282227
    3. 'valid' → logprob: -2.3685083389282227
    4. ' right' → logprob: -3.4935083389282227
    5. ' possible' → logprob: -3.4935083389282227
    6. 'possible' → logprob: -3.7435083389282227
    7. 'val' → logprob: -4.618508338928223
    8. ' valide' → logprob: -4.743508338928223
    9. '(right' → logprob: -4.868508338928223
    10. 'dans' → logprob: -5.368508338928223

Token 486: ' l' (ID: 305)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.8364607691764832
    2. ' laquelle' → logprob: -0.9614607691764832
    3. ' which' → logprob: -2.711460828781128
    4. 'right' → logprob: -3.086460828781128
    5. ' l' → logprob: -3.336460828781128
    6. ' right' → logprob: -5.086460590362549
    7. 'l' → logprob: -5.336460590362549
    8. '```' → logprob: -5.336460590362549
    9. ' lequel' → logprob: -5.461460590362549
    10. 'which' → logprob: -5.961460590362549

Token 487: ''' (ID: 6)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.6103425025939941
    2. ''espace' → logprob: -1.8603425025939941
    3. 'e' → logprob: -2.110342502593994
    4. 'right' → logprob: -2.735342502593994
    5. '_interval' → logprob: -2.985342502593994
    6. ''' → logprob: -3.735342502593994
    7. ' interval' → logprob: -4.610342502593994
    8. 'a' → logprob: -5.485342502593994
    9. 'range' → logprob: -5.860342502593994
    10. ''ensemble' → logprob: -5.985342502593994

Token 488: 'interval' (ID: 37558)
  Prédit: 'interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.21755464375019073
    2. 'right' → logprob: -1.7175546884536743
    3. 'range' → logprob: -5.217554569244385
    4. 'segment' → logprob: -5.967554569244385
    5. ' interval' → logprob: -6.717554569244385
    6. 'line' → logprob: -6.717554569244385
    7. ' right' → logprob: -7.342554569244385
    8. 'e' → logprob: -7.342554569244385
    9. 'dro' → logprob: -7.592554569244385
    10. '```' → logprob: -7.717554569244385

Token 489: 'le' (ID: 282)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.000726252153981477
    2. 'al' → logprob: -8.000726699829102
    3. ' val' → logprob: -8.750726699829102
    4. 'vale' → logprob: -10.000726699829102
    5. '   ' → logprob: -10.125726699829102
    6. 'v' → logprob: -10.500726699829102
    7. 'right' → logprob: -10.875726699829102
    8. '#' → logprob: -11.375726699829102
    9. 'vall' → logprob: -11.500726699829102
    10. '```' → logprob: -11.500726699829102

Token 490: ' fermé' (ID: 163729)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -1.0508008003234863
    2. 'result' → logprob: -1.5508008003234863
    3. 'max' → logprob: -1.9258008003234863
    4. 'print' → logprob: -2.3008008003234863
    5. ' if' → logprob: -3.3008008003234863
    6. 'if' → logprob: -3.4258008003234863
    7. 'size' → logprob: -3.4258008003234863
    8. ' max' → logprob: -3.8008008003234863
    9. ' result' → logprob: -4.050800800323486
    10. ' length' → logprob: -4.300800800323486

Token 491: ' [' (ID: 723)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.13788640499115
    2. 'length' → logprob: -1.26288640499115
    3. 'result' → logprob: -1.38788640499115
    4. '   ' → logprob: -2.5128865242004395
    5. ' print' → logprob: -4.0128865242004395
    6. 'size' → logprob: -4.1378865242004395
    7. ' result' → logprob: -4.5128865242004395
    8. ' length' → logprob: -5.0128865242004395
    9. 'valid' → logprob: -5.6378865242004395
    10. 'if' → logprob: -6.1378865242004395

Token 492: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.12362872064113617
    2. ' left' → logprob: -2.248628616333008
    3. 'right' → logprob: -4.623628616333008
    4. ' right' → logprob: -6.998628616333008
    5. '	left' → logprob: -12.623628616333008
    6. ',' → logprob: -12.748628616333008
    7. ' ' → logprob: -12.873628616333008
    8. '   ' → logprob: -12.998628616333008
    9. ',left' → logprob: -13.373628616333008
    10. '_left' → logprob: -13.623628616333008

Token 493: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002681304467841983
    2. ' ,' → logprob: -8.62526798248291
    3. ',right' → logprob: -9.37526798248291
    4. ',
' → logprob: -13.75026798248291
    5. ';' → logprob: -14.12526798248291
    6. 'right' → logprob: -14.37526798248291
    7. '...' → logprob: -14.75026798248291
    8. '   ' → logprob: -15.00026798248291
    9. ' ' → logprob: -15.75026798248291
    10. ',end' → logprob: -16.625268936157227

Token 494: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.5231446027755737
    2. ' right' → logprob: -0.8981446027755737
    3. '	right' → logprob: -11.898144721984863
    4. ',right' → logprob: -11.898144721984863
    5. '   ' → logprob: -12.773144721984863
    6. ' ' → logprob: -13.398144721984863
    7. '[right' → logprob: -14.398144721984863
    8. ',' → logprob: -14.398144721984863
    9. '(right' → logprob: -14.898144721984863
    10. 'Right' → logprob: -15.023144721984863

Token 495: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011892212554812431
    2. ')' → logprob: -4.761892318725586
    3. '])' → logprob: -5.886892318725586
    4. ']
' → logprob: -8.261892318725586
    5. '   ' → logprob: -9.511892318725586
    6. ']+' → logprob: -10.011892318725586
    7. ' ]' → logprob: -10.386892318725586
    8. '+' → logprob: -10.636892318725586
    9. 'if' → logprob: -10.761892318725586
    10. '])
' → logprob: -11.511892318725586

Token 496: '   ' (ID: 271)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.4541305899620056
    2. '   ' → logprob: -1.3291306495666504
    3. 'result' → logprob: -2.5791306495666504
    4. 'print' → logprob: -4.45413064956665
    5. 'size' → logprob: -4.82913064956665
    6. 'valid' → logprob: -6.95413064956665
    7. 'return' → logprob: -7.32913064956665
    8. 'answer' → logprob: -7.45413064956665
    9. '```' → logprob: -7.45413064956665
    10. ' length' → logprob: -7.57913064956665

Token 497: ' #' (ID: 1069)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.8056156039237976
    2. 'print' → logprob: -1.3056156635284424
    3. '   ' → logprob: -1.9306156635284424
    4. 'result' → logprob: -2.0556156635284424
    5. 'if' → logprob: -5.805615425109863
    6. 'size' → logprob: -5.805615425109863
    7. 'return' → logprob: -7.430615425109863
    8. 'valid' → logprob: -7.930615425109863
    9. 'answer' → logprob: -7.930615425109863
    10. 'count' → logprob: -8.055615425109863

Token 498: ' Si' (ID: 7832)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.34159308671951294
    2. 'result' → logprob: -1.9665930271148682
    3. 'length' → logprob: -1.9665930271148682
    4. '   ' → logprob: -5.466593265533447
    5. 'if' → logprob: -6.091593265533447
    6. ' print' → logprob: -6.841593265533447
    7. 'answer' → logprob: -7.716593265533447
    8. ' length' → logprob: -7.966593265533447
    9. 'valid' → logprob: -7.966593265533447
    10. 'size' → logprob: -8.341592788696289

Token 499: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.40958723425865173
    2. ' left' → logprob: -1.7845872640609741
    3. 'right' → logprob: -2.0345871448516846
    4. 'left' → logprob: -3.2845871448516846
    5. '	right' → logprob: -12.284586906433105
    6. ' lef' → logprob: -12.784586906433105
    7. '	left' → logprob: -13.159586906433105
    8. ' ' → logprob: -13.284586906433105
    9. ' le' → logprob: -13.659586906433105
    10. '(left' → logprob: -14.222086906433105

Token 500: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.017361212521791458
    2. '<' → logprob: -4.142361164093018
    3. ' >=' → logprob: -7.267361164093018
    4. ' -' → logprob: -7.517361164093018
    5. '-' → logprob: -10.267361640930176
    6. '>=' → logprob: -10.767361640930176
    7. '   ' → logprob: -11.267361640930176
    8. ' ' → logprob: -12.142361640930176
    9. '<|end|>' → logprob: -13.642361640930176
    10. '<int' → logprob: -13.892361640930176

Token 501: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.5759574770927429
    2. ' left' → logprob: -0.8259574770927429
    3. '   ' → logprob: -11.450957298278809
    4. '	left' → logprob: -11.950957298278809
    5. '[left' → logprob: -15.200957298278809
    6. '_left' → logprob: -15.325957298278809
    7. ' ' → logprob: -15.325957298278809
    8. '(left' → logprob: -16.200958251953125
    9. '.left' → logprob: -17.075958251953125
    10. ' lef' → logprob: -17.075958251953125

Token 502: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3566438555717468
    2. '+' → logprob: -1.8566439151763916
    3. ' else' → logprob: -2.1066439151763916
    4. 'else' → logprob: -4.7316436767578125
    5. '   ' → logprob: -5.3566436767578125
    6. ' +' → logprob: -5.7316436767578125
    7. ',' → logprob: -6.1066436767578125
    8. ':
' → logprob: -6.2316436767578125
    9. ' and' → logprob: -7.6066436767578125
    10. ' :' → logprob: -8.481643676757812

Token 503: ' alors' (ID: 17971)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1047663688659668
    2. 'print' → logprob: -1.1047663688659668
    3. '0' → logprob: -1.7297663688659668
    4. ' print' → logprob: -1.8547663688659668
    5. '       ' → logprob: -6.604766368865967
    6. ' ' → logprob: -6.604766368865967
    7. '    ' → logprob: -7.354766368865967
    8. '
' → logprob: -9.604766845703125
    9. '	print' → logprob: -10.354766845703125
    10. ' return' → logprob: -10.729766845703125

Token 504: ' il' (ID: 1793)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008818424306809902
    2. 'print' → logprob: -4.883818626403809
    3. ' ' → logprob: -7.133818626403809
    4. '   ' → logprob: -8.008818626403809
    5. ' print' → logprob: -9.508818626403809
    6. '    
' → logprob: -13.133818626403809
    7. '
' → logprob: -13.508818626403809
    8. '```' → logprob: -14.008818626403809
    9. '    ' → logprob: -14.258818626403809
    10. 'return' → logprob: -14.383818626403809

Token 505: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.05962369590997696
    2. 'n' → logprob: -2.9346237182617188
    3. '   ' → logprob: -5.684623718261719
    4. '#' → logprob: -7.684623718261719
    5. 's' → logprob: -7.934623718261719
    6. '```' → logprob: -9.059623718261719
    7. ' =' → logprob: -9.309623718261719
    8. ' y' → logprob: -9.684623718261719
    9. '=' → logprob: -9.684623718261719
    10. ' #' → logprob: -10.309623718261719

Token 506: ''y' (ID: 27913)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6858965158462524
    2. 'y' → logprob: -0.8108965158462524
    3. ' n' → logprob: -3.560896396636963
    4. ''y' → logprob: -4.060896396636963
    5. ' y' → logprob: -5.310896396636963
    6. '   ' → logprob: -7.060896396636963
    7. '_y' → logprob: -9.310896873474121
    8. 'a' → logprob: -9.435896873474121
    9. 'est' → logprob: -9.810896873474121
    10. '’y' → logprob: -10.060896873474121

Token 507: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11383112519979477
    2. ' a' → logprob: -2.238831043243408
    3. 's' → logprob: -7.488831043243408
    4. '```' → logprob: -8.863831520080566
    5. 'is' → logprob: -9.863831520080566
    6. ''a' → logprob: -10.238831520080566
    7. ' has' → logprob: -10.488831520080566
    8. 'est' → logprob: -10.738831520080566
    9. 'has' → logprob: -11.113831520080566
    10. ' pas' → logprob: -11.113831520080566

Token 508: ' aucun' (ID: 41678)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.08127701282501221
    2. ' aucun' → logprob: -3.3312768936157227
    3. ' aucune' → logprob: -3.8312768936157227
    4. 'pas' → logprob: -4.581276893615723
    5. ' plus' → logprob: -5.081276893615723
    6. ' rien' → logprob: -6.331276893615723
    7. ' no' → logprob: -6.831276893615723
    8. 'auc' → logprob: -8.206276893615723
    9. 'plus' → logprob: -8.206276893615723
    10. ' ' → logprob: -8.331276893615723

Token 509: ' entier' (ID: 80473)
  Prédit: ' espace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' espace' → logprob: -0.1877841204404831
    2. 'es' → logprob: -1.9377840757369995
    3. 'interval' → logprob: -4.812784194946289
    4. 'space' → logprob: -5.312784194946289
    5. ' interval' → logprob: -6.187784194946289
    6. 'esp' → logprob: -6.312784194946289
    7. 'valid' → logprob: -6.437784194946289
    8. ' valid' → logprob: -6.687784194946289
    9. 'possible' → logprob: -7.062784194946289
    10. '
' → logprob: -7.312784194946289

Token 510: ' valide' (ID: 137323)
  Prédit: ' valide'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valide' → logprob: -1.0605121850967407
    2. 'possible' → logprob: -1.6855121850967407
    3. 'valid' → logprob: -1.8105121850967407
    4. ' valid' → logprob: -2.060512065887451
    5. ' possible' → logprob: -2.935512065887451
    6. 'val' → logprob: -3.810512065887451
    7. ' valable' → logprob: -3.810512065887451
    8. ' à' → logprob: -4.185512065887451
    9. 'dans' → logprob: -4.310512065887451
    10. ' viable' → logprob: -4.560512065887451

Token 511: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031362153589725494
    2. '
' → logprob: -4.281362056732178
    3. '    
' → logprob: -5.156362056732178
    4. ',' → logprob: -5.281362056732178
    5. 'print' → logprob: -5.281362056732178
    6. '       ' → logprob: -8.406362533569336
    7. ' print' → logprob: -9.281362533569336
    8. 'result' → logprob: -9.406362533569336
    9. '        
' → logprob: -9.406362533569336
    10. '  
' → logprob: -9.406362533569336

Token 512: ' donc' (ID: 14206)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.059282563626766205
    2. 'print' → logprob: -3.8092825412750244
    3. '       ' → logprob: -3.8092825412750244
    4. ' print' → logprob: -4.4342827796936035
    5. '
' → logprob: -7.9342827796936035
    6. '    ' → logprob: -8.184282302856445
    7. 'result' → logprob: -8.434282302856445
    8. '0' → logprob: -8.684282302856445
    9. '    
' → logprob: -8.809282302856445
    10. ' result' → logprob: -9.434282302856445

Token 513: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08338648825883865
    2. '0' → logprob: -2.5833864212036133
    3. ' print' → logprob: -5.458386421203613
    4. '   ' → logprob: -8.833386421203613
    5. ' ' → logprob: -10.583386421203613
    6. 'result' → logprob: -10.833386421203613
    7. 'pr' → logprob: -10.833386421203613
    8. '
' → logprob: -12.208386421203613
    9. 'prin' → logprob: -12.833386421203613
    10. '    
' → logprob: -13.708386421203613

Token 514: ' utilise' (ID: 70283)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2159283459186554
    2. ' print' → logprob: -1.715928316116333
    3. '   ' → logprob: -4.465928554534912
    4. ' affiche' → logprob: -7.090928554534912
    5. '_print' → logprob: -7.465928554534912
    6. ' n' → logprob: -8.465928077697754
    7. ' imprime' → logprob: -8.590928077697754
    8. '.print' → logprob: -8.965928077697754
    9. 'aff' → logprob: -8.965928077697754
    10. ' ' → logprob: -9.090928077697754

Token 515: ' max' (ID: 2999)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16110973060131073
    2. 'max' → logprob: -1.9111096858978271
    3. ' max' → logprob: -7.286109924316406
    4. 'print' → logprob: -9.661109924316406
    5. '   ' → logprob: -9.786109924316406
    6. ' ' → logprob: -10.286109924316406
    7. '
' → logprob: -10.911109924316406
    8. '```' → logprob: -11.286109924316406
    9. '`' → logprob: -12.036109924316406
    10. '    
' → logprob: -12.161109924316406

Token 516: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.750436007976532e-05
    2. '(max' → logprob: -10.62503719329834
    3. '(right' → logprob: -11.50003719329834
    4. '0' → logprob: -14.00003719329834
    5. 'right' → logprob: -14.12503719329834
    6. ' (' → logprob: -14.50003719329834
    7. '(
' → logprob: -14.87503719329834
    8. 'max' → logprob: -15.62503719329834
    9. '```' → logprob: -16.250038146972656
    10. '((' → logprob: -16.250038146972656

Token 517: '0' (ID: 15)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18173347413539886
    2. '0' → logprob: -1.80673348903656
    3. ')' → logprob: -6.55673360824585
    4. '(right' → logprob: -8.056733131408691
    5. 'right' → logprob: -8.556733131408691
    6. ' ' → logprob: -10.681733131408691
    7. ')(' → logprob: -12.306733131408691
    8. '),' → logprob: -12.431733131408691
    9. '```' → logprob: -12.431733131408691
    10. ' (' → logprob: -12.806733131408691

Token 518: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1715819239616394
    2. '(' → logprob: -2.171581983566284
    3. '(right' → logprob: -3.171581983566284
    4. ',right' → logprob: -7.421581745147705
    5. ')' → logprob: -7.671581745147705
    6. 'right' → logprob: -8.171582221984863
    7. '(left' → logprob: -8.921582221984863
    8. '0' → logprob: -9.171582221984863
    9. ' ,' → logprob: -9.296582221984863
    10. ' ' → logprob: -11.046582221984863

Token 519: ' ...)' (ID: 100545)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.47408658266067505
    2. ' right' → logprob: -0.974086582660675
    3. '(right' → logprob: -12.72408676147461
    4. ' ' → logprob: -13.22408676147461
    5. ')' → logprob: -13.59908676147461
    6. '	right' → logprob: -13.72408676147461
    7. '   ' → logprob: -14.34908676147461
    8. '```' → logprob: -14.84908676147461
    9. '[right' → logprob: -14.97408676147461
    10. '
' → logprob: -14.97408676147461

Token 520: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9273210763931274
    2. 'print' → logprob: -0.9273210763931274
    3. 'result' → logprob: -1.8023210763931274
    4. 'length' → logprob: -3.427320957183838
    5. '
' → logprob: -5.677320957183838
    6. ' print' → logprob: -6.302320957183838
    7. ' result' → logprob: -6.552320957183838
    8. 'answer' → logprob: -7.052320957183838
    9. '```' → logprob: -7.177320957183838
    10. 'max' → logprob: -7.802320957183838

Token 521: ' éviter' (ID: 64013)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.09256445616483688
    2. 'print' → logprob: -2.842564344406128
    3. ' max' → logprob: -4.092564582824707
    4. ' garantir' → logprob: -5.467564582824707
    5. '0' → logprob: -5.717564582824707
    6. ')' → logprob: -6.717564582824707
    7. '```' → logprob: -6.717564582824707
    8. ' print' → logprob: -7.842564582824707
    9. ' assurer' → logprob: -8.092564582824707
    10. 'contin' → logprob: -8.342564582824707

Token 522: ' une' (ID: 2463)
  Prédit: 'negative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'negative' → logprob: -0.4349310100078583
    2. ' negative' → logprob: -1.4349310398101807
    3. '-' → logprob: -3.4349310398101807
    4. '   ' → logprob: -4.184930801391602
    5. '-negative' → logprob: -4.309930801391602
    6. ' une' → logprob: -4.434930801391602
    7. '0' → logprob: -5.684930801391602
    8. 'max' → logprob: -5.684930801391602
    9. 'print' → logprob: -5.684930801391602
    10. 'neg' → logprob: -5.809930801391602

Token 523: ' valeur' (ID: 41664)
  Prédit: 'negative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'negative' → logprob: -0.11378016322851181
    2. ' negative' → logprob: -2.4887802600860596
    3. ' nég' → logprob: -3.9887802600860596
    4. 'neg' → logprob: -6.6137800216674805
    5. 'n' → logprob: -6.8637800216674805
    6. 'result' → logprob: -7.2387800216674805
    7. ' valeur' → logprob: -7.8637800216674805
    8. 'value' → logprob: -7.8637800216674805
    9. ' negatif' → logprob: -8.23878002166748
    10. 'val' → logprob: -8.36378002166748

Token 524: ' nég' (ID: 55805)
  Prédit: ' negative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' negative' → logprob: -1.375011682510376
    2. 'negative' → logprob: -1.500011682510376
    3. ' nég' → logprob: -1.625011682510376
    4. ' negativa' → logprob: -2.625011682510376
    5. '   ' → logprob: -2.875011682510376
    6. 'max' → logprob: -3.250011682510376
    7. '-' → logprob: -3.250011682510376
    8. ' max' → logprob: -3.500011682510376
    9. '0' → logprob: -3.750011682510376
    10. 'neg' → logprob: -4.250011444091797

Token 525: 'ative' (ID: 1799)
  Prédit: 'ative'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ative' → logprob: -0.1349543333053589
    2. 'érée' → logprob: -3.2599544525146484
    3. '1' → logprob: -3.3849544525146484
    4. 'érale' → logprob: -4.509954452514648
    5. 'def' → logprob: -5.009954452514648
    6. 'ale' → logprob: -5.259954452514648
    7. 'at' → logprob: -5.384954452514648
    8. 'ér' → logprob: -5.384954452514648
    9. 'ée' → logprob: -5.759954452514648
    10. 'ère' → logprob: -5.884954452514648

Token 526: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09177595376968384
    2. 'print' → logprob: -2.466775894165039
    3. 'result' → logprob: -6.716775894165039
    4. '
' → logprob: -6.716775894165039
    5. '    
' → logprob: -8.591775894165039
    6. ' print' → logprob: -9.216775894165039
    7. 'return' → logprob: -9.466775894165039
    8. '```' → logprob: -11.216775894165039
    9. '       ' → logprob: -11.466775894165039
    10. 'length' → logprob: -13.091775894165039

Token 527: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20271237194538116
    2. 'print' → logprob: -1.7027124166488647
    3. '```' → logprob: -7.577712535858154
    4. ' print' → logprob: -7.827712535858154
    5. 'result' → logprob: -8.577712059020996
    6. '    
' → logprob: -9.327712059020996
    7. '       ' → logprob: -10.327712059020996
    8. '
' → logprob: -10.577712059020996
    9. 'return' → logprob: -11.202712059020996
    10. '``' → logprob: -11.577712059020996

Token 528: ' result' (ID: 1534)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.010042804293334484
    2. '   ' → logprob: -5.385042667388916
    3. ' print' → logprob: -5.635042667388916
    4. 'result' (adapté à ' result') → logprob: -6.510042667388916
    5. 'length' → logprob: -8.260043144226074
    6. 'valid' → logprob: -11.010043144226074
    7. '```' → logprob: -11.260043144226074
    8. '
' → logprob: -11.510043144226074
    9. 'answer' → logprob: -11.635043144226074
    10. ' result' → logprob: -11.635043144226074

Token 529: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00760698551312089
    2. '=' → logprob: -4.8826069831848145
    3. '   ' → logprob: -14.882607460021973
    4. ' ' → logprob: -15.132607460021973
    5. ' =
' → logprob: -16.632606506347656
    6. '	' → logprob: -17.507606506347656
    7. 's' → logprob: -17.632606506347656
    8. '_' → logprob: -17.757606506347656
    9. ')' → logprob: -17.757606506347656
    10. '=max' → logprob: -17.757606506347656

Token 530: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.3132631778717041
    2. 'max' → logprob: -1.313263177871704
    3. '0' → logprob: -14.313262939453125
    4. ' ' → logprob: -15.063262939453125
    5. '	max' → logprob: -15.688262939453125
    6. '(max' → logprob: -15.813262939453125
    7. '=max' → logprob: -16.813262939453125
    8. ' ' → logprob: -17.063262939453125
    9. '   ' → logprob: -17.188262939453125
    10. '[max' → logprob: -18.063262939453125

Token 531: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.704273118884885e-07
    2. ' (' → logprob: -14.375000953674316
    3. '0' → logprob: -17.75
    4. 'result' → logprob: -19.0
    5. '(
' → logprob: -19.625
    6. '```' → logprob: -20.625
    7. '(result' → logprob: -21.0
    8. '((' → logprob: -22.125
    9. ' ' → logprob: -22.25
    10. '(max' → logprob: -22.25

Token 532: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0802738870552275e-05
    2. '(' → logprob: -11.62501049041748
    3. ' ' → logprob: -13.25001049041748
    4. ')' → logprob: -18.625011444091797
    5. 'right' → logprob: -19.875011444091797
    6. '   ' → logprob: -20.375011444091797
    7. '```' → logprob: -20.375011444091797
    8. '  ' → logprob: -21.125011444091797
    9. '[' → logprob: -21.375011444091797
    10. ',' → logprob: -21.625011444091797

Token 533: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005141906440258026
    2. ',right' → logprob: -7.750514030456543
    3. ' ,' → logprob: -10.375514030456543
    4. '(right' → logprob: -10.500514030456543
    5. 'right' → logprob: -10.875514030456543
    6. ',
' → logprob: -12.500514030456543
    7. ' right' → logprob: -14.250514030456543
    8. '),' → logprob: -14.875514030456543
    9. '   ' → logprob: -15.000514030456543
    10. '(' → logprob: -15.375514030456543

Token 534: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.10022488981485367
    2. ' right' → logprob: -2.3502249717712402
    3. '   ' → logprob: -11.100224494934082
    4. '(right' → logprob: -13.475224494934082
    5. '	right' → logprob: -13.975224494934082
    6. ' ' → logprob: -14.725224494934082
    7. '  ' → logprob: -15.975224494934082
    8. '[right' → logprob: -16.1002254486084
    9. 'Right' → logprob: -16.9752254486084
    10. 'r' → logprob: -17.1002254486084

Token 535: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.02326248399913311
    2. '-' → logprob: -3.7732625007629395
    3. ')' → logprob: -11.773262023925781
    4. ' ' → logprob: -12.273262023925781
    5. '-left' → logprob: -12.773262023925781
    6. '   ' → logprob: -13.648262023925781
    7. ' -
' → logprob: -15.898262023925781
    8. '  ' → logprob: -16.14826202392578
    9. ' ' → logprob: -16.14826202392578
    10. ',' → logprob: -16.27326202392578

Token 536: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.023245712742209435
    2. ' left' → logprob: -3.7732458114624023
    3. '   ' → logprob: -15.648245811462402
    4. '	left' → logprob: -16.523244857788086
    5. ' ' → logprob: -17.648244857788086
    6. '(left' → logprob: -18.148244857788086
    7. '_left' → logprob: -18.648244857788086
    8. '[left' → logprob: -18.898244857788086
    9. ' lef' → logprob: -19.023244857788086
    10. 'right' → logprob: -19.773244857788086

Token 537: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.31333690881729126
    2. '+' → logprob: -1.3133368492126465
    3. ')' → logprob: -9.563337326049805
    4. ')+' → logprob: -12.813337326049805
    5. '   ' → logprob: -13.688337326049805
    6. ' )' → logprob: -14.938337326049805
    7. ' ' → logprob: -15.313337326049805
    8. ' +
' → logprob: -15.688337326049805
    9. '+)' → logprob: -16.188337326049805
    10. '+
' → logprob: -16.563337326049805

Token 538: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005929154809564352
    2. ' ' → logprob: -5.130928993225098
    3. ')' → logprob: -15.005928993225098
    4. '   ' → logprob: -16.005929946899414
    5. '```' → logprob: -16.255929946899414
    6. '  ' → logprob: -18.880929946899414
    7. '<|end|>' → logprob: -19.505929946899414
    8. '
' → logprob: -19.880929946899414
    9. ' ' → logprob: -20.318429946899414
    10. '0' → logprob: -20.443429946899414

Token 539: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.8087270038668066e-05
    2. ' ' → logprob: -10.500027656555176
    3. '```' → logprob: -14.625027656555176
    4. ')' → logprob: -17.125028610229492
    5. '   ' → logprob: -17.250028610229492
    6. '<|end|>' → logprob: -18.875028610229492
    7. '[' → logprob: -20.000028610229492
    8. '  ' → logprob: -20.187528610229492
    9. '`' → logprob: -20.250028610229492
    10. '
' → logprob: -20.812528610229492

Token 540: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.292907877039397e-06
    2. ' )' → logprob: -13.00000286102295
    3. ')
' → logprob: -14.25000286102295
    4. '   ' → logprob: -15.25000286102295
    5. ')`' → logprob: -19.000003814697266
    6. ')return' → logprob: -19.250003814697266
    7. ')

' → logprob: -19.375003814697266
    8. ')#' → logprob: -19.500003814697266
    9. ' ' → logprob: -19.750003814697266
    10. '}' → logprob: -19.875003814697266

Token 541: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07586051523685455
    2. '
' → logprob: -2.7008605003356934
    3. '    
' → logprob: -5.200860500335693
    4. '```' → logprob: -9.075860977172852
    5. 'print' → logprob: -9.325860977172852
    6. '  
' → logprob: -9.575860977172852
    7. '<|end|>' → logprob: -9.950860977172852
    8. 'return' → logprob: -10.450860977172852
    9. '\n' → logprob: -11.325860977172852
    10. ' 
' → logprob: -12.200860977172852

Token 542: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006761318072676659
    2. '   ' → logprob: -5.00676155090332
    3. ' print' → logprob: -10.00676155090332
    4. '```' → logprob: -15.00676155090332
    5. '
' → logprob: -15.38176155090332
    6. 'return' → logprob: -15.75676155090332
    7. '    
' → logprob: -15.88176155090332
    8. '	print' → logprob: -17.88176155090332
    9. ' ' → logprob: -18.50676155090332
    10. '  ' → logprob: -18.88176155090332

Token 543: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.2948405128554441e-05
    2. ' print' → logprob: -11.50001335144043
    3. '   ' → logprob: -12.87501335144043
    4. 'pr' → logprob: -16.62501335144043
    5. 'prin' → logprob: -17.00001335144043
    6. 'return' → logprob: -17.62501335144043
    7. '```' → logprob: -19.12501335144043
    8. 'prit' → logprob: -20.25001335144043
    9. '#print' → logprob: -20.37501335144043
    10. 'pri' → logprob: -21.12501335144043

Token 544: 'iche' (ID: 7509)
  Prédit: 'iche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -0.0476452074944973
    2. 'icher' → logprob: -3.172645092010498
    3. '#' → logprob: -6.547645092010498
    4. 'f' → logprob: -6.547645092010498
    5. '   ' → logprob: -6.797645092010498
    6. 'ichage' → logprob: -8.047645568847656
    7. 'fic' → logprob: -8.672645568847656
    8. 'ic' → logprob: -9.922645568847656
    9. '```' → logprob: -10.297645568847656
    10. 'ich' → logprob: -10.672645568847656

Token 545: ' le' (ID: 505)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.25276103615760803
    2. '(' → logprob: -1.5027610063552856
    3. 'result' → logprob: -7.127760887145996
    4. '("' → logprob: -11.877760887145996
    5. '('' → logprob: -12.002760887145996
    6. ' result' → logprob: -12.127760887145996
    7. '   ' → logprob: -12.627760887145996
    8. ' (' → logprob: -13.252760887145996
    9. '()' → logprob: -13.252760887145996
    10. '(
' → logprob: -13.627760887145996

Token 546: ' résultat' (ID: 62556)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.00046284322161227465
    2. ' result' → logprob: -8.000462532043457
    3. '(result' → logprob: -9.000462532043457
    4. '(' → logprob: -12.875462532043457
    5. 'r' → logprob: -14.375462532043457
    6. 'res' → logprob: -15.250462532043457
    7. ' résultat' → logprob: -15.375462532043457
    8. ' resultat' → logprob: -15.500462532043457
    9. 'rés' → logprob: -16.250463485717773
    10. 'resultado' → logprob: -17.375463485717773

Token 547: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020100923255085945
    2. 'print' → logprob: -4.270101070404053
    3. ' print' → logprob: -5.395101070404053
    4. '
' → logprob: -6.645101070404053
    5. '    
' → logprob: -9.895100593566895
    6. '```' → logprob: -10.895100593566895
    7. '(print' → logprob: -13.145100593566895
    8. '	print' → logprob: -13.395100593566895
    9. '  
' → logprob: -13.770100593566895
    10. '    ' → logprob: -13.770100593566895

Token 548: ' l' (ID: 305)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004148680251091719
    2. 'la' → logprob: -6.504148483276367
    3. 'l' → logprob: -6.629148483276367
    4. ')' → logprob: -7.754148483276367
    5. '   ' → logprob: -8.129148483276367
    6. ' print' → logprob: -8.129148483276367
    7. ' ' → logprob: -9.629148483276367
    8. ' la' → logprob: -10.129148483276367
    9. 'result' → logprob: -10.879148483276367
    10. '```' → logprob: -11.004148483276367

Token 549: ''utilisateur' (ID: 140803)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1704418957233429
    2. ''écran' → logprob: -2.5454418659210205
    3. 'stdout' → logprob: -3.7954418659210205
    4. 'standard' → logprob: -4.0454421043396
    5. ''utilisateur' → logprob: -4.1704421043396
    6. 'print' → logprob: -4.2954421043396
    7. 'e' → logprob: -6.2954421043396
    8. '   ' → logprob: -6.5454421043396
    9. ''aide' → logprob: -7.4204421043396
    10. 'é' → logprob: -7.5454421043396

Token 550: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014374573715031147
    2. 'print' → logprob: -4.264374732971191
    3. ' print' → logprob: -8.514374732971191
    4. '
' → logprob: -12.514374732971191
    5. '```' → logprob: -12.514374732971191
    6. '    
' → logprob: -13.139374732971191
    7. '	print' → logprob: -14.014374732971191
    8. '(print' → logprob: -15.639374732971191
    9. '       ' → logprob: -16.389373779296875
    10. '(' → logprob: -17.389373779296875

Token 551: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07075154781341553
    2. 'print' → logprob: -3.070751667022705
    3. ' print' → logprob: -3.820751667022705
    4. '    
' → logprob: -12.820751190185547
    5. '
' → logprob: -12.945751190185547
    6. '```' → logprob: -13.195751190185547
    7. '	print' → logprob: -13.570751190185547
    8. '    ' → logprob: -15.320751190185547
    9. '       ' → logprob: -15.945751190185547
    10. '(print' → logprob: -16.320751190185547

Token 552: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.023444391787052155
    2. ' print' → logprob: -3.773444414138794
    3. '   ' → logprob: -8.523444175720215
    4. '```' → logprob: -15.523444175720215
    5. '	print' → logprob: -19.27344512939453
    6. '`' → logprob: -21.14844512939453
    7. 'pr' → logprob: -21.52344512939453
    8. '.print' → logprob: -21.64844512939453
    9. '  ' → logprob: -21.64844512939453
    10. ' ' → logprob: -22.14844512939453

Token 553: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.20142288506031036
    2. '(' → logprob: -1.701422929763794
    3. '()' → logprob: -12.576422691345215
    4. 'result' → logprob: -13.201422691345215
    5. ' (' → logprob: -13.951422691345215
    6. '(
' → logprob: -14.076422691345215
    7. '('' → logprob: -14.076422691345215
    8. '(res' → logprob: -14.326422691345215
    9. '(resultado' → logprob: -15.326422691345215
    10. '(results' → logprob: -15.451422691345215

Token 554: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -14.875000953674316
    3. ')`' → logprob: -17.5
    4. '()' → logprob: -18.0
    5. ')
' → logprob: -18.25
    6. '())' → logprob: -19.375
    7. '))' → logprob: -20.25
    8. '   ' → logprob: -20.75
    9. '`)' → logprob: -20.75
    10. '(' → logprob: -21.0

Token 555: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 556: ' App' (ID: 2583)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0003124632057733834
    2. 'main' → logprob: -8.250312805175781
    3. ' if' → logprob: -10.000312805175781
    4. '__' → logprob: -12.875312805175781
    5. 'i' → logprob: -13.375312805175781
    6. '```' → logprob: -14.500312805175781
    7. '_' → logprob: -14.875312805175781
    8. ' main' → logprob: -15.250312805175781
    9. '#' → logprob: -15.625312805175781
    10. 'If' → logprob: -16.00031280517578

Token 557: 'elle' (ID: 3486)
  Prédit: 'el'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.0019678890239447355
    2. 'le' → logprob: -6.626967906951904
    3. 'eler' → logprob: -7.626967906951904
    4. 'elé' → logprob: -9.376967430114746
    5. 'elle' → logprob: -10.001967430114746
    6. 'ele' → logprob: -11.251967430114746
    7. 'ell' → logprob: -12.376967430114746
    8. '#' → logprob: -13.126967430114746
    9. 'elf' → logprob: -13.876967430114746
    10. 'elif' → logprob: -14.376967430114746

Token 558: ' la' (ID: 557)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.17397862672805786
    2. 'main' → logprob: -1.923978567123413
    3. '(main' → logprob: -4.298978805541992
    4. '(' → logprob: -9.798978805541992
    5. '	main' → logprob: -11.048978805541992
    6. '()' → logprob: -13.173978805541992
    7. '_main' → logprob: -13.798978805541992
    8. 'def' → logprob: -14.298978805541992
    9. 'if' → logprob: -14.423978805541992
    10. '(
' → logprob: -14.548978805541992

Token 559: ' fonction' (ID: 17610)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.10094499588012695
    2. ' main' → logprob: -2.350944995880127
    3. 'if' → logprob: -7.350944995880127
    4. 'def' → logprob: -9.350944519042969
    5. '(main' → logprob: -12.725944519042969
    6. '_main' → logprob: -12.850944519042969
    7. '__' → logprob: -13.850944519042969
    8. ' if' → logprob: -14.100944519042969
    9. '	main' → logprob: -14.100944519042969
    10. '```' → logprob: -15.100944519042969

Token 560: ' principale' (ID: 68926)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0005676874425262213
    2. 'if' → logprob: -7.50056791305542
    3. '(main' → logprob: -11.500567436218262
    4. ' main' → logprob: -12.375567436218262
    5. '()
' → logprob: -16.250568389892578
    6. '()' → logprob: -16.750568389892578
    7. '_main' → logprob: -17.125568389892578
    8. '	main' → logprob: -17.250568389892578
    9. '(
' → logprob: -17.500568389892578
    10. '```' → logprob: -17.875568389892578

Token 561: ' main' (ID: 2758)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.00572197837755084
    2. 'main' → logprob: -5.5057220458984375
    3. 'if' → logprob: -6.7557220458984375
    4. '

' → logprob: -7.8807220458984375
    5. '(main' → logprob: -10.255722045898438
    6. '
' → logprob: -10.380722045898438
    7. ' 
' → logprob: -11.255722045898438
    8. '  
' → logprob: -11.380722045898438
    9. '(
' → logprob: -12.880722045898438
    10. '()
' → logprob: -13.380722045898438

Token 562: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.38825249671936035
    2. '()
' → logprob: -1.1382524967193604
    3. '()

' → logprob: -7.263252258300781
    4. '
' → logprob: -8.513252258300781
    5. 'if' → logprob: -8.638252258300781
    6. '(
' → logprob: -9.013252258300781
    7. '(' → logprob: -9.763252258300781
    8. '()\' → logprob: -10.263252258300781
    9. 'def' → logprob: -10.763252258300781
    10. '()
' → logprob: -10.888252258300781

Token 563: ' pour' (ID: 1930)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.00027492138906382024
    2. 'main' → logprob: -8.750274658203125
    3. '

' → logprob: -9.875274658203125
    4. '  
' → logprob: -10.875274658203125
    5. '
' → logprob: -11.000274658203125
    6. 'if' → logprob: -11.500274658203125
    7. ' 
' → logprob: -11.625274658203125
    8. '(main' → logprob: -12.125274658203125
    9. '    
' → logprob: -13.375274658203125
    10. '()
' → logprob: -13.750274658203125

Token 564: ' dém' (ID: 34947)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.02539883181452751
    2. ' main' → logprob: -3.7753987312316895
    3. ' lancer' → logprob: -7.0253987312316895
    4. 'run' → logprob: -7.7753987312316895
    5. 'execut' → logprob: -8.400399208068848
    6. 'ex' → logprob: -8.525399208068848
    7. 'if' → logprob: -9.025399208068848
    8. 'execute' → logprob: -9.400399208068848
    9. 'l' → logprob: -9.650399208068848
    10. ' run' → logprob: -10.150399208068848

Token 565: 'arrer' (ID: 85856)
  Prédit: 'arrer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arrer' → logprob: -0.0004982246900908649
    2. 'arer' → logprob: -8.000497817993164
    3. 'arr' → logprob: -8.875497817993164
    4. 'ar' → logprob: -11.125497817993164
    5. 'orrer' → logprob: -13.125497817993164
    6. 'arrera' → logprob: -13.375497817993164
    7. 'urr' → logprob: -14.250497817993164
    8. '```' → logprob: -14.375497817993164
    9. 'arrage' → logprob: -14.625497817993164
    10. '#' → logprob: -14.875497817993164

Token 566: ' l' (ID: 305)
  Prédit: '()
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.2679181694984436
    2. '()' → logprob: -2.392918109893799
    3. '
' → logprob: -3.017918109893799
    4. 'main' → logprob: -3.017918109893799
    5. 'if' → logprob: -3.767918109893799
    6. '()

' → logprob: -4.517918109893799
    7. '(
' → logprob: -4.892918109893799
    8. '(main' → logprob: -6.517918109893799
    9. '```' → logprob: -6.767918109893799
    10. '\' → logprob: -7.142918109893799

Token 567: ''ex' (ID: 23472)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -1.4879885911941528
    2. 'ain' → logprob: -1.9879885911941528
    3. ''ex' → logprob: -2.1129884719848633
    4. 'programme' → logprob: -2.1129884719848633
    5. 'program' → logprob: -2.2379884719848633
    6. 'main' → logprob: -2.9879884719848633
    7. '```' → logprob: -3.2379884719848633
    8. ' program' → logprob: -3.2379884719848633
    9. 'le' → logprob: -3.3629884719848633
    10. ' programme' → logprob: -3.3629884719848633

Token 568: 'écution' (ID: 122423)
  Prédit: 'ecution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ecution' → logprob: -0.25603926181793213
    2. 'écution' → logprob: -1.5060392618179321
    3. 'ecute' → logprob: -6.006039142608643
    4. 'éc' → logprob: -7.256039142608643
    5. 'é' → logprob: -8.0060396194458
    6. 'ec' → logprob: -8.3810396194458
    7. 'emple' → logprob: -8.8810396194458
    8. 'if' → logprob: -9.2560396194458
    9. 'ecutable' → logprob: -10.2560396194458
    10. 'ecut' → logprob: -10.6310396194458

Token 569: ' du' (ID: 1462)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.006917364429682493
    2. 'if' → logprob: -5.631917476654053
    3. 'main' → logprob: -6.256917476654053
    4. '

' → logprob: -6.756917476654053
    5. '(main' → logprob: -9.506916999816895
    6. '  
' → logprob: -9.881916999816895
    7. ' 
' → logprob: -10.381916999816895
    8. '
' → logprob: -10.506916999816895
    9. '```' → logprob: -11.006916999816895
    10. '()
' → logprob: -11.756916999816895

Token 570: ' programme' (ID: 18190)
  Prédit: 'programme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'programme' → logprob: -0.31339171528816223
    2. 'program' → logprob: -1.8133916854858398
    3. ' programme' → logprob: -2.31339168548584
    4. ' program' → logprob: -5.68839168548584
    5. 'script' → logprob: -6.31339168548584
    6. ' script' → logprob: -6.81339168548584
    7. 'code' → logprob: -7.68839168548584
    8. ' code' → logprob: -9.06339168548584
    9. '_program' → logprob: -9.56339168548584
    10. 'programma' → logprob: -11.06339168548584

Token 571: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.006476622074842453
    2. 'if' → logprob: -5.256476402282715
    3. 'main' → logprob: -6.881476402282715
    4. '

' → logprob: -9.131476402282715
    5. '  
' → logprob: -10.131476402282715
    6. ' 
' → logprob: -10.756476402282715
    7. '(main' → logprob: -11.006476402282715
    8. '\n' → logprob: -11.881476402282715
    9. '```' → logprob: -12.006476402282715
    10. '    
' → logprob: -12.381476402282715

Token 572: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0031821096781641245
    2. 'if' → logprob: -5.7531819343566895
    3. ' main' → logprob: -13.003182411193848
    4. '(main' → logprob: -13.753182411193848
    5. '
' → logprob: -14.003182411193848
    6. '```' → logprob: -15.628182411193848
    7. '	main' → logprob: -16.50318145751953
    8. '.main' → logprob: -17.87818145751953
    9. '_main' → logprob: -18.12818145751953
    10. ' if' → logprob: -19.50318145751953

Token 573: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 571
Tokens correctement prédits (1ère position, stricte): 144
Tokens correctement prédits (1ère position, avec adaptation): 151
Tokens correctement prédits (top 10): 333
Précision stricte (1ère position): 25.22%
Précision adaptée (1ère position): 26.44%
Précision (top 10): 58.32%
================================================================================
