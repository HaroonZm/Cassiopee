================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:13
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import heapq

def read_ints():
    return map(int, raw_input().split())

def parse_input():
    n, m, s, t = read_ints()
    src = [tuple(map(int, raw_input().split())) for _ in range(m)]
    return n, m, s, t, src

def create_adjacency_list(n, m, src):
    def empty_list():
        return [[] for _ in range(n + 1)]
    def add_edges(nl, src):
        for u, v, a, b in src:
            add_single_edge(nl, u, v, a, b)
            add_single_edge(nl, v, u, a, b)
    def add_single_edge(nl, u, v, a, b):
        nl[u].append((v, a, b))
    nl = empty_list()
    add_edges(nl, src)
    return nl

def initialize_distances(n, index):
    d = [float("inf")] * (n + 1)
    d[index] = 0
    return d

def dijkstra(nl, start, use_weight):
    d = initialize_distances(len(nl) - 1, start)
    Q = []
    heapq.heappush(Q, (0, start))
    def should_update(u, v, cost, weight):
        return d[v] > cost + weight
    while Q:
        cost, u = heapq.heappop(Q)
        process_neighbors(nl, d, u, cost, use_weight, should_update, Q)
    return d

def process_neighbors(nl, d, u, cost, use_weight, should_update, Q):
    for v, yen, snuuk in nl[u]:
        weight = yen if use_weight == "yen" else snuuk
        if should_update(u, v, cost, weight):
            d[v] = cost + weight
            heapq.heappush(Q, (d[v], v))

def accumulate_min_costs(n, d_y, d_s):
    val = float("inf")
    A = []
    for i in xrange(n, 0, -1):
        tmp = d_y[i] + d_s[i]
        val = min(val, tmp)
        A.append(val)
    return A

def print_results(A):
    for i in reversed(A):
        print 10 ** 15 - i

def main():
    n, m, s, t, src = parse_input()
    nl = create_adjacency_list(n, m, src)
    d_y = dijkstra(nl, s, use_weight="yen")
    d_s = dijkstra(nl, t, use_weight="snuuk")
    A = accumulate_min_costs(n, d_y, d_s)
    print_results(A)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' heap' (ID: 37237)
  → Token d'amorce (pas de prédiction)

Token 2: 'q' (ID: 80)
  → Token d'amorce (pas de prédiction)

Token 3: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -5.6100132496794686e-05
    2. '.\' → logprob: -11.125056266784668
    3. '(' → logprob: -11.625056266784668
    4. '.
' → logprob: -11.750056266784668
    5. '.​' → logprob: -12.000056266784668
    6. '."""' → logprob: -12.750056266784668
    7. '```' → logprob: -12.875056266784668
    8. '\' → logprob: -13.125056266784668
    9. '.

' → logprob: -13.250056266784668
    10. ' .' → logprob: -13.250056266784668

Token 4: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0015583087224513292
    2. '(' → logprob: -6.626558303833008
    3. '\' → logprob: -9.751558303833008
    4. '```' → logprob: -10.126558303833008
    5. '[' → logprob: -10.376558303833008
    6. '.
' → logprob: -11.501558303833008
    7. '.heap' → logprob: -11.751558303833008
    8. 'import' → logprob: -11.751558303833008
    9. 'def' → logprob: -11.876558303833008
    10. ',' → logprob: -12.001558303833008

Token 5: ' read' (ID: 1729)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0016153192846104503
    2. ' heap' → logprob: -6.626615524291992
    3. ' ' → logprob: -9.501615524291992
    4. '_heap' → logprob: -9.501615524291992
    5. '_' → logprob: -10.626615524291992
    6. ' priority' → logprob: -11.126615524291992
    7. ' heaps' → logprob: -11.126615524291992
    8. ' a' → logprob: -11.501615524291992
    9. ' h' → logprob: -11.626615524291992
    10. '  ' → logprob: -11.751615524291992

Token 6: '_int' (ID: 12285)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04396042600274086
    2. '_' → logprob: -3.1689603328704834
    3. ' (' → logprob: -8.043960571289062
    4. '_line' → logprob: -9.043960571289062
    5. '_data' → logprob: -10.168960571289062
    6. '):' → logprob: -10.293960571289062
    7. '_file' → logprob: -10.293960571289062
    8. 's' → logprob: -10.418960571289062
    9. ')' → logprob: -10.793960571289062
    10. ':' → logprob: -10.918960571289062

Token 7: 's' (ID: 82)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04329444468021393
    2. 's' → logprob: -3.7932944297790527
    3. '():' → logprob: -4.543294429779053
    4. '(s' → logprob: -5.543294429779053
    5. ':' → logprob: -6.043294429779053
    6. '```' → logprob: -6.793294429779053
    7. '):' → logprob: -7.793294429779053
    8. '("("' → logprob: -8.168294906616211
    9. '**' → logprob: -9.168294906616211
    10. 'from' → logprob: -9.918294906616211

Token 8: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005666146171279252
    2. '```' → logprob: -8.500566482543945
    3. '("("' → logprob: -9.000566482543945
    4. '():' → logprob: -9.875566482543945
    5. '<|end|>' → logprob: -11.000566482543945
    6. ' (' → logprob: -11.125566482543945
    7. '(user' → logprob: -11.250566482543945
    8. '('' → logprob: -11.250566482543945
    9. ':' → logprob: -11.500566482543945
    10. '(()' → logprob: -11.500566482543945

Token 9: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.2310328334569931
    2. '   ' → logprob: -1.7310328483581543
    3. '()' → logprob: -4.856032848358154
    4. '```' → logprob: -5.231032848358154
    5. ' return' → logprob: -5.606032848358154
    6. ':' → logprob: -5.606032848358154
    7. '[]' → logprob: -6.481032848358154
    8. '():
' → logprob: -6.481032848358154
    9. ':return' → logprob: -7.106032848358154
    10. '(' → logprob: -7.106032848358154

Token 10: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.39837247133255005
    2. '   ' → logprob: -1.2733724117279053
    3. ' return' → logprob: -3.0233724117279053
    4. '	return' → logprob: -10.898372650146484
    5. '[]' → logprob: -11.148372650146484
    6. ' ' → logprob: -11.898372650146484
    7. 'int' → logprob: -12.398372650146484
    8. 'data' → logprob: -12.398372650146484
    9. '    ' → logprob: -12.773372650146484
    10. '```' → logprob: -12.898372650146484

Token 11: ' map' (ID: 4014)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.02289426140487194
    2. 'list' → logprob: -4.272894382476807
    3. ' map' → logprob: -5.522894382476807
    4. ' []' → logprob: -5.647894382476807
    5. '[]' → logprob: -7.647894382476807
    6. ' ' → logprob: -7.772894382476807
    7. ' [' → logprob: -8.772893905639648
    8. 'map' → logprob: -9.772893905639648
    9. '[' → logprob: -10.147893905639648
    10. '[list' → logprob: -11.647893905639648

Token 12: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0004458044422790408
    2. '(' → logprob: -7.75044584274292
    3. '<int' → logprob: -11.500445365905762
    4. 'int' → logprob: -12.625445365905762
    5. '[int' → logprob: -14.000445365905762
    6. ',int' → logprob: -15.625445365905762
    7. '=int' → logprob: -15.625445365905762
    8. '(lambda' → logprob: -16.500446319580078
    9. '(
' → logprob: -16.625446319580078
    10. '```' → logprob: -16.625446319580078

Token 13: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.304425984621048
    2. '(' → logprob: -1.6794259548187256
    3. ')' → logprob: -3.3044259548187256
    4. '(read' → logprob: -4.804426193237305
    5. '(line' → logprob: -4.929426193237305
    6. '(open' → logprob: -5.304426193237305
    7. '(file' → logprob: -5.804426193237305
    8. '.readline' → logprob: -6.179426193237305
    9. '(user' → logprob: -6.304426193237305
    10. '(stdin' → logprob: -6.429426193237305

Token 14: ' raw' (ID: 11428)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.002645098604261875
    2. ' input' → logprob: -6.002645015716553
    3. ')' → logprob: -8.752645492553711
    4. '(input' → logprob: -12.252645492553711
    5. ',input' → logprob: -13.002645492553711
    6. 'open' → logprob: -13.627645492553711
    7. '	input' → logprob: -13.877645492553711
    8. '=input' → logprob: -14.752645492553711
    9. '_input' → logprob: -15.502645492553711
    10. '   ' → logprob: -15.627645492553711

Token 15: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0028602739330381155
    2. '_' → logprob: -5.877860069274902
    3. '_in' → logprob: -11.002860069274902
    4. 'input' → logprob: -11.377860069274902
    5. ')' → logprob: -11.377860069274902
    6. '_inputs' → logprob: -12.377860069274902
    7. '(' → logprob: -12.877860069274902
    8. ')_' → logprob: -13.377860069274902
    9. 'Input' → logprob: -13.377860069274902
    10. '(_' → logprob: -13.502860069274902

Token 16: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.17187120020389557
    2. '()' → logprob: -2.0468711853027344
    3. '('' → logprob: -4.296871185302734
    4. '(' → logprob: -4.421871185302734
    5. ')' → logprob: -6.546871185302734
    6. '()))' → logprob: -7.921871185302734
    7. '(()' → logprob: -8.421871185302734
    8. ' ())' → logprob: -8.671871185302734
    9. '().' → logprob: -8.796871185302734
    10. '();)' → logprob: -9.171871185302734

Token 17: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.03809542581439018
    2. 'strip' → logprob: -3.288095474243164
    3. 'rstrip' → logprob: -10.163095474243164
    4. ')' → logprob: -11.663095474243164
    5. ' split' → logprob: -12.163095474243164
    6. '(split' → logprob: -14.413095474243164
    7. 'read' → logprob: -14.538095474243164
    8. ' strip' → logprob: -14.663095474243164
    9. 'spl' → logprob: -16.913095474243164
    10. 's' → logprob: -17.288095474243164

Token 18: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.16924500465393066
    2. ')' → logprob: -1.9192450046539307
    3. '))' → logprob: -5.419244766235352
    4. '()))' → logprob: -5.544244766235352
    5. '()' → logprob: -7.419244766235352
    6. ' ())' → logprob: -11.169244766235352
    7. '(' → logprob: -11.419244766235352
    8. ')))' → logprob: -12.044244766235352
    9. ' )' → logprob: -13.544244766235352
    10. '`)' → logprob: -13.669244766235352

Token 19: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006402950268238783
    2. 'd' → logprob: -5.756402969360352
    3. '\' → logprob: -6.881402969360352
    4. 'de' → logprob: -7.131402969360352
    5. '#' → logprob: -8.256402969360352
    6. '```' → logprob: -8.506402969360352
    7. '' → logprob: -8.756402969360352
    8. '
' → logprob: -8.756402969360352
    9. 'a' → logprob: -9.381402969360352
    10. 'n' → logprob: -9.506402969360352

Token 20: ' parse' (ID: 8420)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.3237788677215576
    2. ' solve' → logprob: -2.0737788677215576
    3. ' process' → logprob: -3.1987788677215576
    4. ' find' → logprob: -3.3237788677215576
    5. ' heap' → logprob: -4.198779106140137
    6. ' add' → logprob: -4.323779106140137
    7. ' heaps' → logprob: -5.073779106140137
    8. ' calculate' → logprob: -5.573779106140137
    9. ' build' → logprob: -5.573779106140137
    10. 'solve' → logprob: -5.573779106140137

Token 21: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03228258714079857
    2. '(' → logprob: -3.657282590866089
    3. '_input' → logprob: -6.15728235244751
    4. '_line' → logprob: -6.65728235244751
    5. '_data' → logprob: -7.53228235244751
    6. '_json' → logprob: -7.90728235244751
    7. '_(' → logprob: -8.907282829284668
    8. '_parameters' → logprob: -9.032282829284668
    9. '_tokens' → logprob: -9.157282829284668
    10. '_list' → logprob: -9.407282829284668

Token 22: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.031028684228658676
    2. '(' → logprob: -3.5310287475585938
    3. '()' → logprob: -7.156028747558594
    4. '(line' → logprob: -9.281028747558594
    5. '("("' → logprob: -9.406028747558594
    6. '(()' → logprob: -10.281028747558594
    7. '_line' → logprob: -10.281028747558594
    8. '):' → logprob: -10.656028747558594
    9. '():
' → logprob: -10.906028747558594
    10. '_' → logprob: -10.906028747558594

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2278176248073578
    2. '<|end|>' → logprob: -1.9778176546096802
    3. '()' → logprob: -3.2278175354003906
    4. '<|end|>' → logprob: -5.102817535400391
    5. '    
' → logprob: -5.477817535400391
    6. '(' → logprob: -5.727817535400391
    7. '```' → logprob: -6.727817535400391
    8. '...' → logprob: -6.852817535400391
    9. '(raw' → logprob: -7.102817535400391
    10. '\n' → logprob: -7.477817535400391

Token 24: ' n' (ID: 297)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -1.302415370941162
    2. '   ' → logprob: -1.677415370941162
    3. 'lines' → logprob: -2.052415370941162
    4. 'return' → logprob: -2.302415370941162
    5. 'ints' → logprob: -2.427415370941162
    6. 'graph' → logprob: -3.052415370941162
    7. ' lines' → logprob: -3.427415370941162
    8. 'nums' → logprob: -3.427415370941162
    9. 'heap' → logprob: -3.552415370941162
    10. 'n' (adapté à ' n') → logprob: -4.052415370941162

Token 25: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12410994619131088
    2. ' =' → logprob: -2.499109983444214
    3. ' ,' → logprob: -3.499109983444214
    4. '=' → logprob: -5.624109745025635
    5. ' ' → logprob: -7.749109745025635
    6. '=int' → logprob: -9.124110221862793
    7. '   ' → logprob: -9.499110221862793
    8. ')' → logprob: -10.499110221862793
    9. ',int' → logprob: -11.124110221862793
    10. '  ' → logprob: -11.374110221862793

Token 26: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5333094000816345
    2. 'k' → logprob: -1.7833094596862793
    3. ' m' → logprob: -1.7833094596862793
    4. ' k' → logprob: -2.6583094596862793
    5. 'raw' → logprob: -6.658309459686279
    6. 'q' → logprob: -7.033309459686279
    7. 'heap' → logprob: -7.533309459686279
    8. 's' → logprob: -7.783309459686279
    9. ' raw' → logprob: -7.783309459686279
    10. ' ' → logprob: -7.783309459686279

Token 27: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026443688198924065
    2. '=' → logprob: -3.6514437198638916
    3. ',' → logprob: -9.526443481445312
    4. ' ' → logprob: -10.276443481445312
    5. ')' → logprob: -11.026443481445312
    6. '<|end|>' → logprob: -11.401443481445312
    7. ')=' → logprob: -13.151443481445312
    8. '  ' → logprob: -13.151443481445312
    9. ' =
' → logprob: -13.401443481445312
    10. '   ' → logprob: -13.776443481445312

Token 28: ' s' (ID: 265)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.7568064332008362
    2. ' k' → logprob: -1.1318063735961914
    3. ' s' → logprob: -3.1318063735961914
    4. 's' → logprob: -3.3818063735961914
    5. ' p' → logprob: -4.006806373596191
    6. 'q' → logprob: -4.006806373596191
    7. 'p' → logprob: -4.006806373596191
    8. 'w' → logprob: -4.256806373596191
    9. ' w' → logprob: -4.756806373596191
    10. ' q' → logprob: -5.131806373596191

Token 29: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05022895336151123
    2. '=' → logprob: -3.050229072570801
    3. ',' → logprob: -6.425229072570801
    4. ' ' → logprob: -11.4252290725708
    5. '  ' → logprob: -12.9252290725708
    6. '   ' → logprob: -13.3002290725708
    7. ')' → logprob: -13.5502290725708
    8. ' ,' → logprob: -13.6752290725708
    9. ' =
' → logprob: -14.9252290725708
    10. '```' → logprob: -14.9252290725708

Token 30: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.04286889359354973
    2. 'd' → logprob: -4.7928690910339355
    3. 'p' → logprob: -5.1678690910339355
    4. ' t' → logprob: -5.1678690910339355
    5. 'e' → logprob: -5.4178690910339355
    6. 'q' → logprob: -5.7928690910339355
    7. 'k' → logprob: -6.0428690910339355
    8. 'c' → logprob: -6.2928690910339355
    9. 'f' → logprob: -6.4178690910339355
    10. 'l' → logprob: -6.5428690910339355

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2811630368232727
    2. '=' → logprob: -1.406162977218628
    3. ',' → logprob: -11.531163215637207
    4. ' ' → logprob: -13.531163215637207
    5. '  ' → logprob: -14.656163215637207
    6. '   ' → logprob: -14.906163215637207
    7. ')' → logprob: -15.406163215637207
    8. '    ' → logprob: -16.65616226196289
    9. '=input' → logprob: -16.78116226196289
    10. ' =)' → logprob: -16.84366226196289

Token 32: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.0006788347964175045
    2. 'read' → logprob: -7.625679016113281
    3. ' map' → logprob: -8.625679016113281
    4. ' raw' → logprob: -11.875679016113281
    5. ' ' → logprob: -13.500679016113281
    6. '	read' → logprob: -13.875679016113281
    7. '  ' → logprob: -14.000679016113281
    8. 'map' → logprob: -14.750679016113281
    9. ' list' → logprob: -15.000679016113281
    10. '   ' → logprob: -16.12567901611328

Token 33: '_int' (ID: 12285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07180245220661163
    2. '_int' → logprob: -2.8218023777008057
    3. '(' → logprob: -5.821802616119385
    4. 'Ints' → logprob: -6.571802616119385
    5. 'int' → logprob: -6.696802616119385
    6. '_)' → logprob: -6.946802616119385
    7. ')' → logprob: -7.196802616119385
    8. 'ints' → logprob: -7.321802616119385
    9. '(_' → logprob: -7.821802616119385
    10. '(int' → logprob: -8.696802139282227

Token 34: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0016314979875460267
    2. '_s' → logprob: -6.501631259918213
    3. '()' → logprob: -9.876631736755371
    4. ''s' → logprob: -10.751631736755371
    5. ')s' → logprob: -11.876631736755371
    6. 'ints' → logprob: -11.876631736755371
    7. '```' → logprob: -11.876631736755371
    8. '_' → logprob: -12.001631736755371
    9. '(s' → logprob: -12.126631736755371
    10. ')' → logprob: -12.876631736755371

Token 35: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.2855416066013277e-05
    2. '()
' → logprob: -11.125032424926758
    3. '(' → logprob: -11.375032424926758
    4. '()

' → logprob: -13.500032424926758
    5. '()]' → logprob: -13.625032424926758
    6. '())' → logprob: -13.625032424926758
    7. '()`' → logprob: -13.875032424926758
    8. ')' → logprob: -14.875032424926758
    9. ' ()' → logprob: -15.000032424926758
    10. '();' → logprob: -15.625032424926758

Token 36: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 37: ' src' (ID: 4537)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.49877700209617615
    2. '
' → logprob: -1.7487770318984985
    3. ' graph' → logprob: -2.498776912689209
    4. 'edges' → logprob: -2.748776912689209
    5. ' edges' → logprob: -2.873776912689209
    6. '	graph' → logprob: -5.873776912689209
    7. '_graph' → logprob: -6.373776912689209
    8. '    
' → logprob: -6.498776912689209
    9. '   ' → logprob: -6.623776912689209
    10. 'return' → logprob: -6.748776912689209

Token 38: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.041434355080127716
    2. '=' → logprob: -3.7914342880249023
    3. ' =' → logprob: -4.166434288024902
    4. 't' → logprob: -6.666434288024902
    5. 's' → logprob: -7.041434288024902
    6. ' ,' → logprob: -8.291434288024902
    7. ' ' → logprob: -10.791434288024902
    8. '   ' → logprob: -11.166434288024902
    9. ',t' → logprob: -11.416434288024902
    10. '_,' → logprob: -11.541434288024902

Token 39: ' [' (ID: 723)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6982393860816956
    2. ' s' → logprob: -0.6982393860816956
    3. '0' → logprob: -5.448239326477051
    4. ' ' → logprob: -7.823239326477051
    5. 'raw' → logprob: -9.32323932647705
    6. '[]' → logprob: -9.57323932647705
    7. ' []' → logprob: -9.82323932647705
    8. ' raw' → logprob: -10.32323932647705
    9. '   ' → logprob: -10.57323932647705
    10. '(s' → logprob: -11.19823932647705

Token 40: 'tuple' (ID: 52834)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4715888798236847
    2. ']' → logprob: -1.4715888500213623
    3. 'int' → logprob: -2.9715888500213623
    4. 'False' → logprob: -3.3465888500213623
    5. '[]' → logprob: -4.221589088439941
    6. 's' → logprob: -4.221589088439941
    7. 'None' → logprob: -4.596589088439941
    8. '-' → logprob: -5.596589088439941
    9. 'float' → logprob: -5.721589088439941
    10. '()]' → logprob: -5.721589088439941

Token 41: '(map' (ID: 16946)
  Prédit: '(read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(read' → logprob: -0.03627214953303337
    2. '(raw' → logprob: -4.036272048950195
    3. '()]' → logprob: -4.286272048950195
    4. 'read' → logprob: -5.786272048950195
    5. '(map' → logprob: -7.786272048950195
    6. '(' → logprob: -7.911272048950195
    7. '()' → logprob: -8.661272048950195
    8. ']' → logprob: -9.786272048950195
    9. '(parse' → logprob: -11.161272048950195
    10. '())' → logprob: -11.161272048950195

Token 42: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0003951648832298815
    2. ')' → logprob: -9.000394821166992
    3. '(str' → logprob: -9.375394821166992
    4. '(' → logprob: -9.625394821166992
    5. '<int' → logprob: -10.000394821166992
    6. ',int' → logprob: -10.625394821166992
    7. '<|end|>' → logprob: -11.250394821166992
    8. '(eval' → logprob: -11.375394821166992
    9. '(tuple' → logprob: -12.125394821166992
    10. 'int' → logprob: -12.250394821166992

Token 43: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.053782351315021515
    2. '(raw' → logprob: -3.0537824630737305
    3. '(),' → logprob: -6.5537824630737305
    4. 'raw' → logprob: -6.9287824630737305
    5. ',input' → logprob: -7.3037824630737305
    6. '(' → logprob: -7.6787824630737305
    7. '(read' → logprob: -8.05378246307373
    8. ' raw' → logprob: -8.42878246307373
    9. '),' → logprob: -8.55378246307373
    10. ' ,' → logprob: -8.67878246307373

Token 44: ' raw' (ID: 11428)
  Prédit: 'raw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raw' → logprob: -0.07131216675043106
    2. ' raw' → logprob: -2.821312189102173
    3. 'read' → logprob: -5.446311950683594
    4. 'input' → logprob: -6.071311950683594
    5. '))' → logprob: -7.696311950683594
    6. ')' → logprob: -7.821311950683594
    7. '...' → logprob: -7.946311950683594
    8. '(raw' → logprob: -7.946311950683594
    9. 'src' → logprob: -8.321311950683594
    10. ' input' → logprob: -9.071311950683594

Token 45: '_input' (ID: 12507)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4874207973480225
    2. '_input' → logprob: -1.6124207973480225
    3. '_' → logprob: -1.7374207973480225
    4. 's' → logprob: -2.1124207973480225
    5. '_tokens' → logprob: -2.9874207973480225
    6. '_)' → logprob: -3.2374207973480225
    7. ')_' → logprob: -3.4874207973480225
    8. ',' → logprob: -3.7374207973480225
    9. '))' → logprob: -3.8624207973480225
    10. '_.' → logprob: -3.9874207973480225

Token 46: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00013238313840702176
    2. '()' → logprob: -9.50013256072998
    3. '()))' → logprob: -10.25013256072998
    4. '())))' → logprob: -11.37513256072998
    5. '())' → logprob: -12.75013256072998
    6. ')' → logprob: -13.25013256072998
    7. '().__' → logprob: -13.37513256072998
    8. '()[' → logprob: -14.12513256072998
    9. '()).' → logprob: -14.25013256072998
    10. '()));' → logprob: -14.62513256072998

Token 47: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0023480537347495556
    2. 'strip' → logprob: -6.127347946166992
    3. 'read' → logprob: -8.877347946166992
    4. 'rstrip' → logprob: -10.877347946166992
    5. ' split' → logprob: -13.377347946166992
    6. ')' → logprob: -13.627347946166992
    7. '().' → logprob: -14.127347946166992
    8. 'decode' → logprob: -15.252347946166992
    9. '(split' → logprob: -15.627347946166992
    10. 'spl' → logprob: -16.127347946166992

Token 48: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.41698870062828064
    2. '))' → logprob: -1.166988730430603
    3. ')))' → logprob: -4.416988849639893
    4. '()' → logprob: -4.791988849639893
    5. '())' → logprob: -5.416988849639893
    6. '())))' → logprob: -5.791988849639893
    7. ')' → logprob: -6.416988849639893
    8. '()))
' → logprob: -10.291988372802734
    9. '(' → logprob: -10.416988372802734
    10. '()));' → logprob: -10.791988372802734

Token 49: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33552610874176025
    2. ')]' → logprob: -1.9605261087417603
    3. '())' → logprob: -3.0855259895324707
    4. '()' → logprob: -3.5855259895324707
    5. '   ' → logprob: -3.7105259895324707
    6. '()]' → logprob: -4.085525989532471
    7. '(' → logprob: -4.710525989532471
    8. '),' → logprob: -4.835525989532471
    9. ']' → logprob: -5.835525989532471
    10. ')],' → logprob: -5.960525989532471

Token 50: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.39731365442276
    2. 'range' → logprob: -1.6473135948181152
    3. ' xrange' → logprob: -2.3973135948181152
    4. '_' → logprob: -3.1473135948181152
    5. 'x' → logprob: -7.397313594818115
    6. '(range' → logprob: -8.147314071655273
    7. ' _' → logprob: -8.522314071655273
    8. '_range' → logprob: -9.022314071655273
    9. '	range' → logprob: -9.147314071655273
    10. '_x' → logprob: -10.772314071655273

Token 51: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.196842223405838
    2. 'in' → logprob: -2.3218421936035156
    3. 'range' → logprob: -2.6968421936035156
    4. ' range' → logprob: -4.696842193603516
    5. ' xrange' → logprob: -5.946842193603516
    6. ' ' → logprob: -7.696842193603516
    7. 'x' → logprob: -7.821842193603516
    8. '(range' → logprob: -8.321842193603516
    9. 'i' → logprob: -9.446842193603516
    10. '(' → logprob: -9.696842193603516

Token 52: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00043794067460112274
    2. 'x' → logprob: -8.37543773651123
    3. ' range' → logprob: -9.00043773651123
    4. ' xrange' → logprob: -9.50043773651123
    5. '	range' → logprob: -12.25043773651123
    6. '(range' → logprob: -13.12543773651123
    7. '   ' → logprob: -14.12543773651123
    8. 'rang' → logprob: -14.62543773651123
    9. '[' → logprob: -15.12543773651123
    10. '  ' → logprob: -15.75043773651123

Token 53: '(m' (ID: 2145)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.02093234658241272
    2. '(m' → logprob: -4.020932197570801
    3. '(' → logprob: -5.895932197570801
    4. '(s' → logprob: -10.5209321975708
    5. ' (' → logprob: -14.8959321975708
    6. '(
' → logprob: -15.2709321975708
    7. 'm' → logprob: -15.8959321975708
    8. 'n' → logprob: -16.145933151245117
    9. '(int' → logprob: -17.520933151245117
    10. ')n' → logprob: -17.520933151245117

Token 54: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00028624574770219624
    2. ')' → logprob: -8.375286102294922
    3. ']' → logprob: -11.000286102294922
    4. ')])' → logprob: -11.000286102294922
    5. ' )' → logprob: -11.875286102294922
    6. '   ' → logprob: -11.875286102294922
    7. ')],' → logprob: -13.250286102294922
    8. '])]' → logprob: -13.625286102294922
    9. '))' → logprob: -13.750286102294922
    10. '')]' → logprob: -14.000286102294922

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024043815210461617
    2. '<|end|>' → logprob: -4.274044036865234
    3. ')' → logprob: -5.024044036865234
    4. '    
' → logprob: -6.524044036865234
    5. '
' → logprob: -7.899044036865234
    6. '[' → logprob: -8.399044036865234
    7. '<|end|>' → logprob: -8.649044036865234
    8. 'def' → logprob: -8.774044036865234
    9. '```' → logprob: -9.024044036865234
    10. ',' → logprob: -9.149044036865234

Token 56: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6065267324447632
    2. 'return' (adapté à ' return') → logprob: -1.6065267324447632
    3. ')' → logprob: -1.9815267324447632
    4. 'dist' → logprob: -3.4815268516540527
    5. 'dst' → logprob: -4.106526851654053
    6. 'graph' → logprob: -4.356526851654053
    7. 'dest' → logprob: -4.481526851654053
    8. 'def' → logprob: -5.356526851654053
    9. ' return' → logprob: -5.481526851654053
    10. '
' → logprob: -5.481526851654053

Token 57: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5232846140861511
    2. ' n' → logprob: -0.8982846140861511
    3. '(n' → logprob: -9.023284912109375
    4. ' (' → logprob: -10.773284912109375
    5. '   ' → logprob: -11.898284912109375
    6. ' ' → logprob: -12.023284912109375
    7. '	n' → logprob: -12.898284912109375
    8. '(' → logprob: -13.148284912109375
    9. 's' → logprob: -14.148284912109375
    10. '  ' → logprob: -14.273284912109375

Token 58: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019567059352993965
    2. ',m' → logprob: -6.501956939697266
    3. ',s' → logprob: -8.751956939697266
    4. '<|end|>' → logprob: -8.751956939697266
    5. ',n' → logprob: -9.751956939697266
    6. ',t' → logprob: -9.876956939697266
    7. ' ,' → logprob: -11.501956939697266
    8. ',
' → logprob: -12.626956939697266
    9. 's' → logprob: -13.376956939697266
    10. '<|end|>' → logprob: -13.626956939697266

Token 59: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.061973292380571365
    2. ' m' → logprob: -2.8119733333587646
    3. 's' → logprob: -13.186973571777344
    4. 'src' → logprob: -13.561973571777344
    5. ' ' → logprob: -13.686973571777344
    6. '   ' → logprob: -14.311973571777344
    7. '  ' → logprob: -15.811973571777344
    8. '    ' → logprob: -15.811973571777344
    9. 'ms' → logprob: -16.374473571777344
    10. ' src' → logprob: -16.436973571777344

Token 60: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005664614494889975
    2. ' ,' → logprob: -5.880664825439453
    3. ',s' → logprob: -6.630664825439453
    4. 's' → logprob: -7.005664825439453
    5. '<|end|>' → logprob: -7.880664825439453
    6. ' s' → logprob: -9.380664825439453
    7. ',
' → logprob: -9.755664825439453
    8. ' ' → logprob: -10.380664825439453
    9. '   ' → logprob: -10.755664825439453
    10. ',n' → logprob: -10.880664825439453

Token 61: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02975616231560707
    2. ' s' → logprob: -3.5297560691833496
    3. 'src' → logprob: -12.154756546020508
    4. ' ' → logprob: -15.904756546020508
    5. ' src' → logprob: -16.404756546020508
    6. '_s' → logprob: -16.529756546020508
    7. '	s' → logprob: -16.904756546020508
    8. '(s' → logprob: -17.154756546020508
    9. '   ' → logprob: -17.592256546020508
    10. 'source' → logprob: -17.842256546020508

Token 62: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0067780157551169395
    2. ',t' → logprob: -5.131778240203857
    3. 't' → logprob: -7.756778240203857
    4. ' ,' → logprob: -8.0067777633667
    5. ' t' → logprob: -10.5067777633667
    6. '<|end|>' → logprob: -10.8817777633667
    7. ',
' → logprob: -11.8817777633667
    8. ',n' → logprob: -12.0067777633667
    9. '   ' → logprob: -12.0067777633667
    10. ',s' → logprob: -12.1317777633667

Token 63: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.1602262556552887
    2. ' t' → logprob: -1.9102262258529663
    3. ' ' → logprob: -13.410225868225098
    4. '   ' → logprob: -15.410225868225098
    5. '	t' → logprob: -15.535225868225098
    6. '`t' → logprob: -16.785226821899414
    7. 's' → logprob: -16.910226821899414
    8. '  ' → logprob: -17.035226821899414
    9. '<|end|>' → logprob: -17.035226821899414
    10. '```' → logprob: -17.910226821899414

Token 64: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 65: ' src' (ID: 4537)
  Prédit: 'src'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'src' → logprob: -0.026313649490475655
    2. ' src' → logprob: -3.651313543319702
    3. '[src' → logprob: -12.401313781738281
    4. 's' → logprob: -13.276313781738281
    5. '   ' → logprob: -13.651313781738281
    6. '	src' → logprob: -13.776313781738281
    7. '_src' → logprob: -13.901313781738281
    8. 'heap' → logprob: -14.026313781738281
    9. ' ' → logprob: -14.276313781738281
    10. 'source' → logprob: -14.651313781738281

Token 66: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.46679607033729553
    2. 'def' → logprob: -1.3417960405349731
    3. '<|end|>' → logprob: -2.7167961597442627
    4. '#' → logprob: -3.9667961597442627
    5. '```' → logprob: -4.591795921325684
    6. '

' → logprob: -5.466795921325684
    7. '\' → logprob: -5.591795921325684
    8. ':' → logprob: -6.466795921325684
    9. '[' → logprob: -6.966795921325684
    10. '\n' → logprob: -6.966795921325684

Token 67: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08867015689611435
    2. '<|end|>' → logprob: -2.963670253753662
    3. '
' → logprob: -3.588670253753662
    4. '#' → logprob: -6.338670253753662
    5. '<|end|>' → logprob: -6.588670253753662
    6. '```' → logprob: -6.838670253753662
    7. '

' → logprob: -8.088669776916504
    8. '\' → logprob: -8.213669776916504
    9. '[' → logprob: -8.463669776916504
    10. '.' → logprob: -9.338669776916504

Token 68: ' create' (ID: 2501)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.16797278821468353
    2. ' shortest' → logprob: -2.1679728031158447
    3. 'd' → logprob: -3.9179728031158447
    4. ' main' → logprob: -4.792972564697266
    5. ' solve' → logprob: -5.167972564697266
    6. 'short' → logprob: -6.542972564697266
    7. ' find' → logprob: -7.167972564697266
    8. 'solve' → logprob: -7.542972564697266
    9. ' build' → logprob: -7.667972564697266
    10. '_short' → logprob: -7.792972564697266

Token 69: '_ad' (ID: 23782)
  Prédit: '_graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_graph' → logprob: -0.2486526221036911
    2. '_heap' → logprob: -1.7486525774002075
    3. '_' → logprob: -3.498652696609497
    4. '_p' → logprob: -4.498652458190918
    5. '_queue' → logprob: -6.123652458190918
    6. '_priority' → logprob: -6.498652458190918
    7. '_adj' → logprob: -8.873652458190918
    8. '_edge' → logprob: -8.998652458190918
    9. '_edges' → logprob: -9.123652458190918
    10. '_min' → logprob: -9.873652458190918

Token 70: 'jac' (ID: 77250)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.005935193970799446
    2. 'jac' → logprob: -5.130935192108154
    3. 'd' → logprob: -13.630935668945312
    4. 'jc' → logprob: -13.755935668945312
    5. '_j' → logprob: -13.880935668945312
    6. 'js' → logprob: -14.380935668945312
    7. 'acency' → logprob: -14.380935668945312
    8. 'ja' → logprob: -14.630935668945312
    9. 'J' → logprob: -15.255935668945312
    10. 'dj' → logprob: -15.380935668945312

Token 71: 'ency' (ID: 2799)
  Prédit: 'ency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ency' → logprob: -0.0003610872954595834
    2. '```' → logprob: -8.875361442565918
    3. 'acency' → logprob: -9.250361442565918
    4. 'ent' → logprob: -10.375361442565918
    5. 'y' → logprob: -10.750361442565918
    6. 'list' → logprob: -11.000361442565918
    7. 'cy' → logprob: -11.125361442565918
    8. '_list' → logprob: -11.625361442565918
    9. '   ' → logprob: -11.625361442565918
    10. 'eny' → logprob: -12.750361442565918

Token 72: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0002142650482710451
    2. '_matrix' → logprob: -9.500214576721191
    3. '_' → logprob: -9.625214576721191
    4. 'list' → logprob: -10.000214576721191
    5. '_lists' → logprob: -11.000214576721191
    6. '(' → logprob: -12.250214576721191
    7. 'List' → logprob: -12.375214576721191
    8. 's' → logprob: -15.125214576721191
    9. '_map' → logprob: -15.250214576721191
    10. '_dict' → logprob: -15.250214576721191

Token 73: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6334996223449707
    2. '(n' → logprob: -0.7584996223449707
    3. ' (' → logprob: -8.008499145507812
    4. '():' → logprob: -8.133499145507812
    5. '(size' → logprob: -9.633499145507812
    6. '(num' → logprob: -10.008499145507812
    7. '((' → logprob: -10.383499145507812
    8. '("("' → logprob: -10.508499145507812
    9. '(s' → logprob: -11.258499145507812
    10. '(node' → logprob: -11.508499145507812

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001571399043314159
    2. '):' → logprob: -6.501571178436279
    3. ',m' → logprob: -9.751571655273438
    4. ' ,' → logprob: -12.626571655273438
    5. ':' → logprob: -13.251571655273438
    6. '):
' → logprob: -13.376571655273438
    7. ')' → logprob: -13.876571655273438
    8. ',n' → logprob: -13.876571655273438
    9. ' ):' → logprob: -14.626571655273438
    10. ',size' → logprob: -14.751571655273438

Token 75: ' m' (ID: 284)
  Prédit: 'src'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'src' → logprob: -0.16090625524520874
    2. ' src' → logprob: -2.0359063148498535
    3. 'm' → logprob: -4.6609063148498535
    4. ' m' → logprob: -4.9109063148498535
    5. ' edges' → logprob: -7.9109063148498535
    6. 's' → logprob: -8.035905838012695
    7. ' s' → logprob: -8.785905838012695
    8. 'edges' → logprob: -9.160905838012695
    9. '   ' → logprob: -9.535905838012695
    10. ')' → logprob: -10.035905838012695

Token 76: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005334078334271908
    2. '):' → logprob: -5.25533390045166
    3. ' ,' → logprob: -9.63033390045166
    4. ')' → logprob: -11.25533390045166
    5. ',s' → logprob: -11.88033390045166
    6. ' ):' → logprob: -12.38033390045166
    7. ',n' → logprob: -12.75533390045166
    8. '):
' → logprob: -13.38033390045166
    9. '),' → logprob: -14.00533390045166
    10. '   ' → logprob: -14.25533390045166

Token 77: ' src' (ID: 4537)
  Prédit: 'src'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'src' → logprob: -0.18707506358623505
    2. ' src' → logprob: -2.187075138092041
    3. ' edges' → logprob: -3.437075138092041
    4. 'edges' → logprob: -3.687075138092041
    5. 's' → logprob: -7.187075138092041
    6. ' s' → logprob: -9.062074661254883
    7. 'edge' → logprob: -9.937074661254883
    8. ' edge' → logprob: -10.062074661254883
    9. ' data' → logprob: -10.187074661254883
    10. '	src' → logprob: -10.437074661254883

Token 78: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0010698467958718538
    2. '):
' → logprob: -7.126070022583008
    3. ',' → logprob: -8.751070022583008
    4. ')' → logprob: -9.501070022583008
    5. ' ):' → logprob: -11.126070022583008
    6. '):
' → logprob: -11.626070022583008
    7. '   ' → logprob: -12.626070022583008
    8. ':' → logprob: -13.126070022583008
    9. '):

' → logprob: -14.001070022583008
    10. ']:' → logprob: -14.626070022583008

Token 79: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.061966899782419205
    2. ':' → logprob: -3.686966896057129
    3. ' adjacency' → logprob: -3.686966896057129
    4. ':
' → logprob: -6.436966896057129
    5. 'adj' → logprob: -6.811966896057129
    6. '    ' → logprob: -6.811966896057129
    7. '```' → logprob: -7.186966896057129
    8. ' =' → logprob: -7.311966896057129
    9. '):' → logprob: -7.436966896057129
    10. '[' → logprob: -7.436966896057129

Token 80: ' def' (ID: 1056)
  Prédit: ' adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' adj' → logprob: -0.43650421500205994
    2. ' graph' → logprob: -2.1865041255950928
    3. 'adj' → logprob: -2.3115041255950928
    4. '   ' → logprob: -2.6865041255950928
    5. 'graph' → logprob: -3.3115041255950928
    6. ' adjacency' → logprob: -3.3115041255950928
    7. ' g' → logprob: -7.686504364013672
    8. 'g' → logprob: -8.686504364013672
    9. ' ad' → logprob: -8.936504364013672
    10. ' edges' → logprob: -9.311504364013672

Token 81: ' empty' (ID: 8213)
  Prédit: ' adjacency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' adjacency' → logprob: -0.2107740044593811
    2. ' add' → logprob: -2.2107739448547363
    3. ' adj' → logprob: -3.3357739448547363
    4. ' create' → logprob: -5.085773944854736
    5. '):' → logprob: -5.460773944854736
    6. ' graph' → logprob: -5.585773944854736
    7. 'adj' → logprob: -5.835773944854736
    8. ')' → logprob: -5.835773944854736
    9. ' build' → logprob: -6.210773944854736
    10. 'd' → logprob: -6.460773944854736

Token 82: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.05880048871040344
    2. '_' → logprob: -4.18380069732666
    3. '(n' → logprob: -4.93380069732666
    4. '=[]' → logprob: -4.93380069732666
    5. 'List' → logprob: -5.18380069732666
    6. ' =' → logprob: -5.68380069732666
    7. 'list' → logprob: -6.05880069732666
    8. '[]' → logprob: -6.05880069732666
    9. '_lists' → logprob: -6.30880069732666
    10. '(' → logprob: -6.30880069732666

Token 83: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.03204871714115143
    2. 's' → logprob: -3.7820487022399902
    3. '():
' → logprob: -5.28204870223999
    4. '(size' → logprob: -6.40704870223999
    5. '()' → logprob: -7.03204870223999
    6. '(n' → logprob: -7.15704870223999
    7. '=' → logprob: -9.657049179077148
    8. ' ():' → logprob: -9.657049179077148
    9. '=[]' → logprob: -9.907049179077148
    10. '(' → logprob: -10.157049179077148

Token 84: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13572418689727783
    2. '[]' → logprob: -3.1357240676879883
    3. '():' → logprob: -3.3857240676879883
    4. '():
' → logprob: -4.010724067687988
    5. '       ' → logprob: -4.010724067687988
    6. ':' → logprob: -5.135724067687988
    7. ' ' → logprob: -5.885724067687988
    8. '    ' → logprob: -7.260724067687988
    9. ' return' → logprob: -7.385724067687988
    10. ' []' → logprob: -7.510724067687988

Token 85: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.29348230361938477
    2. 'return' (adapté à ' return') → logprob: -1.5434823036193848
    3. '   ' → logprob: -3.6684823036193848
    4. '[]' → logprob: -4.293482303619385
    5. '    ' → logprob: -7.668482303619385
    6. ' []' → logprob: -8.168481826782227
    7. ' ' → logprob: -8.168481826782227
    8. '	return' → logprob: -8.793481826782227
    9. '       ' → logprob: -9.043481826782227
    10. '<|end|>' → logprob: -10.043481826782227

Token 86: ' [[]' (ID: 182908)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.020563259720802307
    2. ' []' → logprob: -3.8955633640289307
    3. '[]}' → logprob: -11.895563125610352
    4. '[' → logprob: -12.020563125610352
    5. 'list' → logprob: -12.895563125610352
    6. '[]
' → logprob: -13.020563125610352
    7. '0' → logprob: -13.770563125610352
    8. '[]>' → logprob: -13.895563125610352
    9. '[]

' → logprob: -14.645563125610352
    10. ' ' → logprob: -15.020563125610352

Token 87: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006848338525742292
    2. ')' → logprob: -5.756848335266113
    3. ' for' → logprob: -6.756848335266113
    4. ']()' → logprob: -6.881848335266113
    5. 'for' → logprob: -7.131848335266113
    6. ')]' → logprob: -8.381848335266113
    7. '()]' → logprob: -8.881848335266113
    8. ',' → logprob: -9.256848335266113
    9. ' ]' → logprob: -9.506848335266113
    10. '][]' → logprob: -10.131848335266113

Token 88: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03226492926478386
    2. ' _' → logprob: -3.5322649478912354
    3. ' in' → logprob: -6.157264709472656
    4. ' range' → logprob: -8.907264709472656
    5. 'in' → logprob: -9.032264709472656
    6. 'range' → logprob: -9.282264709472656
    7. '_in' → logprob: -11.407264709472656
    8. '_range' → logprob: -11.407264709472656
    9. '_i' → logprob: -11.907264709472656
    10. ' ' → logprob: -12.032264709472656

Token 89: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015717566711828113
    2. ' range' → logprob: -6.7515716552734375
    3. '(range' → logprob: -8.126571655273438
    4. 'in' → logprob: -9.876571655273438
    5. 'ran' → logprob: -11.001571655273438
    6. ' xrange' → logprob: -11.876571655273438
    7. '	range' → logprob: -12.126571655273438
    8. 'n' → logprob: -12.251571655273438
    9. 'x' → logprob: -12.251571655273438
    10. ' in' → logprob: -12.376571655273438

Token 90: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011082365177571774
    2. ' range' → logprob: -4.511082172393799
    3. '(range' → logprob: -10.636082649230957
    4. ' xrange' → logprob: -12.136082649230957
    5. 'x' → logprob: -12.886082649230957
    6. '	range' → logprob: -13.386082649230957
    7. 'rang' → logprob: -14.636082649230957
    8. ' ' → logprob: -15.636082649230957
    9. '   ' → logprob: -15.886082649230957
    10. ')' → logprob: -16.26108169555664

Token 91: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0006413076189346611
    2. '(' → logprob: -7.375641345977783
    3. ' (' → logprob: -11.750640869140625
    4. 'n' → logprob: -12.000640869140625
    5. ')n' → logprob: -15.125640869140625
    6. ' n' → logprob: -15.875640869140625
    7. '](' → logprob: -16.000640869140625
    8. '(
' → logprob: -16.375640869140625
    9. '((' → logprob: -16.625640869140625
    10. ']' → logprob: -16.750640869140625

Token 92: ' +' (ID: 659)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -2.451116051815916e-05
    2. ']' → logprob: -10.750024795532227
    3. ')' → logprob: -13.750024795532227
    4. ')]
' → logprob: -14.500024795532227
    5. ')])' → logprob: -15.125024795532227
    6. '])]' → logprob: -15.125024795532227
    7. '])' → logprob: -15.625024795532227
    8. '   ' → logprob: -15.750024795532227
    9. '}]' → logprob: -16.250024795532227
    10. ')],' → logprob: -16.625024795532227

Token 93: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002214488573372364
    2. ' ' → logprob: -6.127214431762695
    3. '2' → logprob: -10.627214431762695
    4. '   ' → logprob: -13.252214431762695
    5. ')' → logprob: -13.377214431762695
    6. '0' → logprob: -14.127214431762695
    7. '    ' → logprob: -15.689714431762695
    8. '```' → logprob: -15.689714431762695
    9. ' )' → logprob: -15.877214431762695
    10. '  ' → logprob: -16.064714431762695

Token 94: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014895245840307325
    2. ' ' → logprob: -9.37514877319336
    3. '0' → logprob: -9.75014877319336
    4. '2' → logprob: -12.25014877319336
    5. '3' → logprob: -15.37514877319336
    6. '7' → logprob: -15.75014877319336
    7. '   ' → logprob: -15.75014877319336
    8. '5' → logprob: -16.43764877319336
    9. '  ' → logprob: -16.56264877319336
    10. 'm' → logprob: -16.62514877319336

Token 95: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.009180535562336445
    2. ']' → logprob: -4.759180545806885
    3. ')' → logprob: -7.759180545806885
    4. '])' → logprob: -9.884180068969727
    5. ')])' → logprob: -10.009180068969727
    6. '   ' → logprob: -10.759180068969727
    7. '])]' → logprob: -10.884180068969727
    8. ')],' → logprob: -13.759180068969727
    9. ')]
' → logprob: -15.009180068969727
    10. ' ]' → logprob: -15.009180068969727

Token 96: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22174833714962006
    2. '
' → logprob: -1.7217483520507812
    3. '<|end|>' → logprob: -4.471748352050781
    4. ')' → logprob: -5.846748352050781
    5. '    
' → logprob: -6.096748352050781
    6. 'n' → logprob: -6.846748352050781
    7. '<|end|>' → logprob: -7.846748352050781
    8. '' → logprob: -8.096748352050781
    9. ' ' → logprob: -8.096748352050781
    10. '  
' → logprob: -8.096748352050781

Token 97: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13437940180301666
    2. '
' → logprob: -2.6343793869018555
    3. '    
' → logprob: -3.6343793869018555
    4. '<|end|>' → logprob: -5.3843793869018555
    5. ' ' → logprob: -5.6343793869018555
    6. 'n' → logprob: -5.8843793869018555
    7. ')' → logprob: -5.8843793869018555
    8. 'return' → logprob: -6.0093793869018555
    9. '  
' → logprob: -6.1343793869018555
    10. '' → logprob: -6.5093793869018555

Token 98: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.2870178520679474
    2. 'add' → logprob: -2.912017822265625
    3. ' create' → logprob: -3.162017822265625
    4. ' build' → logprob: -3.662017822265625
    5. ' adj' → logprob: -4.537017822265625
    6. ' adjacency' → logprob: -4.537017822265625
    7. 'adj' → logprob: -4.662017822265625
    8. ' initialize' → logprob: -4.787017822265625
    9. ' get' → logprob: -4.787017822265625
    10. ' d' → logprob: -4.912017822265625

Token 99: '_edges' (ID: 68870)
  Prédit: '_edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.04447160288691521
    2. '_' → logprob: -3.294471502304077
    3. '_edges' → logprob: -5.294471740722656
    4. '(' → logprob: -7.794471740722656
    5. '_neighbor' → logprob: -8.169471740722656
    6. '_node' → logprob: -8.669471740722656
    7. '_to' → logprob: -9.419471740722656
    8. '_connection' → logprob: -9.669471740722656
    9. '(_' → logprob: -9.919471740722656
    10. '_neighbors' → logprob: -10.294471740722656

Token 100: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28009194135665894
    2. '():' → logprob: -1.9050920009613037
    3. '(u' → logprob: -3.5300920009613037
    4. '(node' → logprob: -4.030091762542725
    5. '(edges' → logprob: -4.405091762542725
    6. '(from' → logprob: -4.780091762542725
    7. '(graph' → logprob: -4.905091762542725
    8. '(src' → logprob: -5.655091762542725
    9. '(adj' → logprob: -5.780091762542725
    10. ' (' → logprob: -6.030091762542725

Token 101: 'l' (ID: 75)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0034957698080688715
    2. '):' → logprob: -5.753495693206787
    3. ' ,' → logprob: -9.253496170043945
    4. ',n' → logprob: -9.753496170043945
    5. ',m' → logprob: -10.003496170043945
    6. '):
' → logprob: -10.503496170043945
    7. ')' → logprob: -10.628496170043945
    8. ',
' → logprob: -10.878496170043945
    9. ',s' → logprob: -12.503496170043945
    10. ',p' → logprob: -13.128496170043945

Token 102: ',' (ID: 11)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.08453936129808426
    2. ',' → logprob: -3.0845394134521484
    3. '):' → logprob: -4.709539413452148
    4. ')' → logprob: -5.084539413452148
    5. ')]' → logprob: -5.459539413452148
    6. '):
' → logprob: -5.584539413452148
    7. ')(' → logprob: -5.959539413452148
    8. 'ists' → logprob: -6.709539413452148
    9. '   ' → logprob: -7.209539413452148
    10. 's' → logprob: -7.459539413452148

Token 103: ' src' (ID: 4537)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.9854596853256226
    2. ' edges' → logprob: -1.2354596853256226
    3. 'u' → logprob: -1.8604596853256226
    4. 'edges' → logprob: -2.610459804534912
    5. ' i' → logprob: -3.485459804534912
    6. 'i' → logprob: -4.360459804534912
    7. ' e' → logprob: -4.360459804534912
    8. 'e' → logprob: -4.985459804534912
    9. 'src' → logprob: -5.110459804534912
    10. ' edge' → logprob: -5.235459804534912

Token 104: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.052850376814603806
    2. ',' → logprob: -3.0528504848480225
    3. '):
' → logprob: -5.552850246429443
    4. ')' → logprob: -8.677850723266602
    5. '):
' → logprob: -9.927850723266602
    6. '   ' → logprob: -10.302850723266602
    7. '[' → logprob: -10.552850723266602
    8. ',n' → logprob: -10.927850723266602
    9. 's' → logprob: -11.177850723266602
    10. ' ):' → logprob: -11.177850723266602

Token 105: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27510783076286316
    2. '<|end|>' → logprob: -2.6501078605651855
    3. '    ' → logprob: -2.9001078605651855
    4. '(n' → logprob: -3.9001078605651855
    5. ':' → logprob: -3.9001078605651855
    6. '   ' → logprob: -4.2751078605651855
    7. '):' → logprob: -4.5251078605651855
    8. ')' → logprob: -4.6501078605651855
    9. '        ' → logprob: -4.9001078605651855
    10. '[' → logprob: -5.1501078605651855

Token 106: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.23133262991905212
    2. 'for' (adapté à ' for') → logprob: -1.7313326597213745
    3. '       ' → logprob: -3.731332540512085
    4. '   ' → logprob: -5.856332778930664
    5. 'nl' → logprob: -6.356332778930664
    6. ' nl' → logprob: -7.231332778930664
    7. 'n' → logprob: -9.981332778930664
    8. '           ' → logprob: -9.981332778930664
    9. '	for' → logprob: -10.731332778930664
    10. '    ' → logprob: -10.981332778930664

Token 107: ' u' (ID: 337)
  Prédit: ' u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.5572715401649475
    2. 'u' → logprob: -0.9322715401649475
    3. '(u' → logprob: -5.057271480560303
    4. ' i' → logprob: -5.557271480560303
    5. 'i' → logprob: -5.557271480560303
    6. 'x' → logprob: -5.807271480560303
    7. ' x' → logprob: -6.432271480560303
    8. ' (' → logprob: -6.432271480560303
    9. '_,' → logprob: -6.432271480560303
    10. ' v' → logprob: -6.557271480560303

Token 108: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009595814626663923
    2. ' ,' → logprob: -7.250959396362305
    3. ',v' → logprob: -9.000959396362305
    4. ' in' → logprob: -9.250959396362305
    5. ',u' → logprob: -10.750959396362305
    6. ',user' → logprob: -12.875959396362305
    7. ',n' → logprob: -14.625959396362305
    8. 's' → logprob: -14.625959396362305
    9. '‌,' → logprob: -14.750959396362305
    10. ',s' → logprob: -14.750959396362305

Token 109: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.008650857023894787
    2. ' v' → logprob: -4.758650779724121
    3. 'w' → logprob: -10.633650779724121
    4. ' ' → logprob: -13.133650779724121
    5. '  ' → logprob: -13.633650779724121
    6. 'd' → logprob: -13.758650779724121
    7. '	v' → logprob: -13.758650779724121
    8. ' w' → logprob: -13.883650779724121
    9. 'vj' → logprob: -14.383650779724121
    10. '   ' → logprob: -14.633650779724121

Token 110: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003715662460308522
    2. ' ,' → logprob: -8.125371932983398
    3. ',w' → logprob: -10.000371932983398
    4. 'w' → logprob: -11.250371932983398
    5. ' in' → logprob: -11.500371932983398
    6. ',v' → logprob: -12.375371932983398
    7. ',u' → logprob: -14.750371932983398
    8. 'weight' → logprob: -14.875371932983398
    9. ',_' → logprob: -15.125371932983398
    10. 'in' → logprob: -15.625371932983398

Token 111: ' a' (ID: 261)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.35161879658699036
    2. ' w' → logprob: -1.226618766784668
    3. 'c' → logprob: -6.851618766784668
    4. 'l' → logprob: -7.726618766784668
    5. 'd' → logprob: -7.851618766784668
    6. ' c' → logprob: -7.851618766784668
    7. ' d' → logprob: -8.851618766784668
    8. ',' → logprob: -8.851618766784668
    9. ' ' → logprob: -9.101618766784668
    10. ' l' → logprob: -9.226618766784668

Token 112: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019924717023968697
    2. 'b' → logprob: -4.394924640655518
    3. 'w' → logprob: -7.019924640655518
    4. ',b' → logprob: -7.144924640655518
    5. 's' → logprob: -7.394924640655518
    6. 'nd' → logprob: -7.644924640655518
    7. 'dd' → logprob: -7.644924640655518
    8. 'c' → logprob: -7.769924640655518
    9. 'cost' → logprob: -8.019925117492676
    10. ' ,' → logprob: -8.019925117492676

Token 113: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.11366802453994751
    2. 'l' → logprob: -3.3636679649353027
    3. 'w' → logprob: -3.4886679649353027
    4. 'c' → logprob: -3.8636679649353027
    5. 'd' → logprob: -4.738667964935303
    6. 'p' → logprob: -5.363667964935303
    7. 'f' → logprob: -6.363667964935303
    8. 'x' → logprob: -6.738667964935303
    9. 'z' → logprob: -6.738667964935303
    10. 'k' → logprob: -6.988667964935303

Token 114: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00747719407081604
    2. 'in' → logprob: -5.007477283477783
    3. ',' → logprob: -7.257477283477783
    4. ' ,' → logprob: -10.257476806640625
    5. ' ' → logprob: -11.257476806640625
    6. '   ' → logprob: -12.882476806640625
    7. ':' → logprob: -13.382476806640625
    8. '  ' → logprob: -13.507476806640625
    9. '	in' → logprob: -14.632476806640625
    10. '    ' → logprob: -14.757476806640625

Token 115: ' src' (ID: 4537)
  Prédit: 'src'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'src' → logprob: -0.576059103012085
    2. ' src' → logprob: -0.826059103012085
    3. ' ' → logprob: -10.326059341430664
    4. '(src' → logprob: -10.451059341430664
    5. '[src' → logprob: -10.576059341430664
    6. '	src' → logprob: -11.826059341430664
    7. 's' → logprob: -11.951059341430664
    8. '_src' → logprob: -12.201059341430664
    9. ',' → logprob: -12.826059341430664
    10. '<src' → logprob: -13.701059341430664

Token 116: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004126842133700848
    2. ':
' → logprob: -5.629127025604248
    3. '):' → logprob: -8.12912654876709
    4. ' :' → logprob: -9.00412654876709
    5. ',' → logprob: -9.75412654876709
    6. '):
' → logprob: -10.75412654876709
    7. '       ' → logprob: -11.75412654876709
    8. '   ' → logprob: -11.75412654876709
    9. ':
' → logprob: -12.37912654876709
    10. ' :
' → logprob: -12.87912654876709

Token 117: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7216839790344238
    2. ':' → logprob: -0.8466839790344238
    3. '       ' → logprob: -3.096683979034424
    4. '<|end|>' → logprob: -4.096683979034424
    5. ',' → logprob: -4.596683979034424
    6. '):' → logprob: -5.971683979034424
    7. '               ' → logprob: -6.096683979034424
    8. '<|end|>' → logprob: -6.346683979034424
    9. '   ' → logprob: -7.096683979034424
    10. ':
' → logprob: -7.221683979034424

Token 118: ' add' (ID: 1147)
  Prédit: ' nl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nl' → logprob: -0.05311697721481323
    2. 'nl' → logprob: -3.803117036819458
    3. '           ' → logprob: -3.928117036819458
    4. '               ' → logprob: -4.803116798400879
    5. ' if' → logprob: -7.553116798400879
    6. '       ' → logprob: -8.053116798400879
    7. '```' → logprob: -9.053116798400879
    8. 'n' → logprob: -9.428116798400879
    9. '
' → logprob: -9.678116798400879
    10. '   ' → logprob: -10.053116798400879

Token 119: '_single' (ID: 46053)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.04436134546995163
    2. '(n' → logprob: -4.419361114501953
    3. 'edges' → logprob: -4.544361114501953
    4. '_edge' → logprob: -5.419361114501953
    5. 's' → logprob: -5.794361114501953
    6. '=' → logprob: -6.294361114501953
    7. 'def' → logprob: -6.419361114501953
    8. 'ed' → logprob: -6.544361114501953
    9. 'edge' → logprob: -7.044361114501953
    10. ' =' → logprob: -7.044361114501953

Token 120: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.06848655641078949
    2. '(n' → logprob: -3.568486452102661
    3. '_edges' → logprob: -3.693486452102661
    4. '_' → logprob: -5.06848669052124
    5. '(' → logprob: -6.31848669052124
    6. '(_' → logprob: -6.69348669052124
    7. 'edge' → logprob: -7.31848669052124
    8. ' _' → logprob: -7.69348669052124
    9. 'Edge' → logprob: -7.81848669052124
    10. '_node' → logprob: -8.318486213684082

Token 121: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.04357248917222023
    2. '(' → logprob: -3.543572425842285
    3. ' (' → logprob: -4.293572425842285
    4. '(
' → logprob: -10.543572425842285
    5. ')' → logprob: -11.293572425842285
    6. '((' → logprob: -11.918572425842285
    7. '(u' → logprob: -12.543572425842285
    8. ',' → logprob: -12.543572425842285
    9. '(s' → logprob: -13.043572425842285
    10. ')(' → logprob: -13.168572425842285

Token 122: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0017714503919705749
    2. ',' → logprob: -7.001771450042725
    3. 'L' → logprob: -7.626771450042725
    4. 'nl' → logprob: -10.001771926879883
    5. ')' → logprob: -10.126771926879883
    6. ' l' → logprob: -10.376771926879883
    7. '   ' → logprob: -10.626771926879883
    8. '       ' → logprob: -10.876771926879883
    9. '<|end|>' → logprob: -11.001771926879883
    10. ' ' → logprob: -11.189271926879883

Token 123: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14840815961360931
    2. '[u' → logprob: -2.0234081745147705
    3. ',u' → logprob: -5.773407936096191
    4. ' ,' → logprob: -6.148407936096191
    5. '[' → logprob: -8.773407936096191
    6. '(u' → logprob: -9.023407936096191
    7. '   ' → logprob: -10.398407936096191
    8. 'u' → logprob: -10.523407936096191
    9. '[v' → logprob: -10.523407936096191
    10. ',[' → logprob: -10.898407936096191

Token 124: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.4289989173412323
    2. ' u' → logprob: -1.0539989471435547
    3. ')' → logprob: -8.803998947143555
    4. '[u' → logprob: -9.928998947143555
    5. '	u' → logprob: -10.928998947143555
    6. 'v' → logprob: -11.178998947143555
    7. '<|end|>' → logprob: -11.303998947143555
    8. ',' → logprob: -11.678998947143555
    9. ',u' → logprob: -11.678998947143555
    10. '(u' → logprob: -12.241498947143555

Token 125: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006241570226848125
    2. ' ,' → logprob: -7.500624179840088
    3. ',v' → logprob: -9.62562370300293
    4. ')' → logprob: -13.12562370300293
    5. 'v' → logprob: -14.37562370300293
    6. '   ' → logprob: -14.62562370300293
    7. '<|end|>' → logprob: -14.75062370300293
    8. ' ' → logprob: -15.12562370300293
    9. 'b' → logprob: -15.87562370300293
    10. ',
' → logprob: -16.00062370300293

Token 126: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.2813112437725067
    2. ' v' → logprob: -1.406311273574829
    3. ')' → logprob: -10.15631103515625
    4. ' ' → logprob: -10.53131103515625
    5. 'b' → logprob: -10.90631103515625
    6. ')v' → logprob: -11.15631103515625
    7. ',' → logprob: -11.53131103515625
    8. '<|end|>' → logprob: -11.65631103515625
    9. '	v' → logprob: -12.34381103515625
    10. ',v' → logprob: -12.40631103515625

Token 127: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007804421475157142
    2. ')' → logprob: -7.2507805824279785
    3. ' ,' → logprob: -9.62578010559082
    4. ',a' → logprob: -14.25078010559082
    5. ' )' → logprob: -14.37578010559082
    6. ',b' → logprob: -14.37578010559082
    7. '),' → logprob: -14.50078010559082
    8. ',)' → logprob: -14.75078010559082
    9. '   ' → logprob: -15.00078010559082
    10. ',
' → logprob: -15.00078010559082

Token 128: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.31339728832244873
    2. ' a' → logprob: -1.3133972883224487
    3. 'b' → logprob: -10.438397407531738
    4. '(a' → logprob: -10.813397407531738
    5. ')a' → logprob: -11.063397407531738
    6. ' (' → logprob: -11.188397407531738
    7. ' ' → logprob: -11.563397407531738
    8. ' b' → logprob: -11.563397407531738
    9. ')' → logprob: -11.938397407531738
    10. '[a' → logprob: -12.375897407531738

Token 129: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03432495519518852
    2. ')' → logprob: -3.409324884414673
    3. ' ,' → logprob: -7.784325122833252
    4. ',b' → logprob: -9.034324645996094
    5. ' )' → logprob: -9.659324645996094
    6. ',
' → logprob: -10.534324645996094
    7. '   ' → logprob: -10.909324645996094
    8. ')
' → logprob: -12.034324645996094
    9. ',)' → logprob: -12.284324645996094
    10. ' ' → logprob: -12.534324645996094

Token 130: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.4742775559425354
    2. 'b' → logprob: -0.9742775559425354
    3. ')' → logprob: -9.72427749633789
    4. ' )' → logprob: -10.09927749633789
    5. ' ' → logprob: -10.34927749633789
    6. ' 
' → logprob: -10.47427749633789
    7. ')b' → logprob: -10.97427749633789
    8. ' ' → logprob: -11.97427749633789
    9. '0' → logprob: -13.59927749633789
    10. '    ' → logprob: -13.78677749633789

Token 131: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019443416967988014
    2. ')
' → logprob: -6.251944541931152
    3. '           ' → logprob: -11.626944541931152
    4. '       ' → logprob: -13.251944541931152
    5. ')

' → logprob: -13.251944541931152
    6. '   ' → logprob: -13.501944541931152
    7. ' )' → logprob: -14.126944541931152
    8. ')
' → logprob: -16.001943588256836
    9. ',' → logprob: -16.126943588256836
    10. '               ' → logprob: -16.126943588256836

Token 132: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14708466827869415
    2. '<|end|>' → logprob: -2.5220847129821777
    3. '   ' → logprob: -3.7720847129821777
    4. '    
' → logprob: -4.272084712982178
    5. ')' → logprob: -5.272084712982178
    6. '\n' → logprob: -5.647084712982178
    7. 'def' → logprob: -5.897084712982178
    8. ' 
' → logprob: -6.022084712982178
    9. '  
' → logprob: -6.147084712982178
    10. '       ' → logprob: -7.522084712982178

Token 133: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.393839567899704
    2. 'add' (adapté à ' add') → logprob: -1.1438395977020264
    3. '           ' → logprob: -5.018839359283447
    4. '.add' → logprob: -9.268839836120605
    5. '	add' → logprob: -10.018839836120605
    6. '       ' → logprob: -10.018839836120605
    7. ')add' → logprob: -10.018839836120605
    8. '   ' → logprob: -10.268839836120605
    9. '(add' → logprob: -11.143839836120605
    10. '_add' → logprob: -11.518839836120605

Token 134: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -0.0009557669400237501
    2. '_' → logprob: -7.000955581665039
    3. '_s' → logprob: -10.875955581665039
    4. '_SINGLE' → logprob: -12.125955581665039
    5. 's' → logprob: -13.000955581665039
    6. 'Single' → logprob: -13.375955581665039
    7. '_
' → logprob: -13.375955581665039
    8. '_(' → logprob: -13.375955581665039
    9. '_simple' → logprob: -13.625955581665039
    10. 'single' → logprob: -13.750955581665039

Token 135: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.007071967236697674
    2. '_' → logprob: -5.5070719718933105
    3. '_edges' → logprob: -6.0070719718933105
    4. '_line' → logprob: -8.632071495056152
    5. ' _' → logprob: -9.507071495056152
    6. '_ed' → logprob: -10.507071495056152
    7. '_space' → logprob: -10.632071495056152
    8. '_answer' → logprob: -10.757071495056152
    9. '_s' → logprob: -10.882071495056152
    10. '_single' → logprob: -10.882071495056152

Token 136: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0006317823426797986
    2. '(' → logprob: -7.375631809234619
    3. ' (' → logprob: -12.250631332397461
    4. '<|end|>' → logprob: -16.50063133239746
    5. '(s' → logprob: -16.62563133239746
    6. '(
' → logprob: -16.87563133239746
    7. '(nx' → logprob: -17.12563133239746
    8. '(nn' → logprob: -17.25063133239746
    9. '(noun' → logprob: -17.37563133239746
    10. '(None' → logprob: -17.37563133239746

Token 137: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -3.1424973713001236e-05
    2. 'nl' → logprob: -11.625031471252441
    3. 'L' → logprob: -11.875031471252441
    4. 'л' → logprob: -12.875031471252441
    5. ' l' → logprob: -13.000031471252441
    6. '_l' → logprob: -13.000031471252441
    7. ',' → logprob: -13.125031471252441
    8. '```' → logprob: -13.875031471252441
    9. ')' → logprob: -14.625031471252441
    10. ',l' → logprob: -14.750031471252441

Token 138: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022576642222702503
    2. '(n' → logprob: -6.502257823944092
    3. ',n' → logprob: -7.877257823944092
    4. ' ,' → logprob: -8.252257347106934
    5. ')' → logprob: -10.127257347106934
    6. ',
' → logprob: -10.377257347106934
    7. '(' → logprob: -10.877257347106934
    8. ' (' → logprob: -12.127257347106934
    9. '[' → logprob: -12.502257347106934
    10. '[n' → logprob: -12.627257347106934

Token 139: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.11707508563995361
    2. ' v' → logprob: -2.367074966430664
    3. 'u' → logprob: -4.242074966430664
    4. ' u' → logprob: -6.117074966430664
    5. '<|end|>' → logprob: -9.992074966430664
    6. ')v' → logprob: -10.242074966430664
    7. 'n' → logprob: -11.242074966430664
    8. ')' → logprob: -11.367074966430664
    9. 's' → logprob: -11.867074966430664
    10. ' ' → logprob: -11.992074966430664

Token 140: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.925185440806672e-05
    2. ' ,' → logprob: -9.250099182128906
    3. ')' → logprob: -13.625099182128906
    4. ',n' → logprob: -13.750099182128906
    5. ',
' → logprob: -16.000099182128906
    6. '[' → logprob: -16.000099182128906
    7. '‌,' → logprob: -16.125099182128906
    8. '<|end|>' → logprob: -16.125099182128906
    9. '),' → logprob: -16.625099182128906
    10. ',u' → logprob: -16.875099182128906

Token 141: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0889677181839943
    2. ' u' → logprob: -2.463967800140381
    3. ' ' → logprob: -12.088967323303223
    4. ',' → logprob: -12.338967323303223
    5. '<|end|>' → logprob: -12.338967323303223
    6. ',u' → logprob: -12.463967323303223
    7. 's' → logprob: -12.713967323303223
    8. '	u' → logprob: -12.713967323303223
    9. '[u' → logprob: -13.838967323303223
    10. '
' → logprob: -13.963967323303223

Token 142: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011847536079585552
    2. ' ,' → logprob: -6.751184940338135
    3. ')' → logprob: -11.626184463500977
    4. '`,' → logprob: -13.251184463500977
    5. '),' → logprob: -14.501184463500977
    6. '   ' → logprob: -14.626184463500977
    7. ',a' → logprob: -15.001184463500977
    8. '‌,' → logprob: -15.001184463500977
    9. '```' → logprob: -15.126184463500977
    10. ',
' → logprob: -15.376184463500977

Token 143: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11283624917268753
    2. ' a' → logprob: -2.2378363609313965
    3. ' ' → logprob: -12.737835884094238
    4. '    ' → logprob: -13.362835884094238
    5. '	a' → logprob: -13.612835884094238
    6. ')' → logprob: -13.737835884094238
    7. ')a' → logprob: -13.737835884094238
    8. '   ' → logprob: -13.987835884094238
    9. '1' → logprob: -14.050335884094238
    10. '0' → logprob: -14.050335884094238

Token 144: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010124455438926816
    2. ' ,' → logprob: -7.126012325286865
    3. ',b' → logprob: -8.751012802124023
    4. ')' → logprob: -10.626012802124023
    5. '',' → logprob: -12.001012802124023
    6. '`,' → logprob: -12.126012802124023
    7. '   ' → logprob: -12.501012802124023
    8. ',
' → logprob: -12.876012802124023
    9. 'b' → logprob: -13.376012802124023
    10. '```' → logprob: -13.501012802124023

Token 145: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6326112747192383
    2. ' b' → logprob: -0.7576112747192383
    3. ' ' → logprob: -12.382611274719238
    4. ')b' → logprob: -13.382611274719238
    5. ' 
' → logprob: -13.882611274719238
    6. ')' → logprob: -14.007611274719238
    7. '
' → logprob: -14.132611274719238
    8. '1' → logprob: -14.257611274719238
    9. '<|end|>' → logprob: -14.257611274719238
    10. ',b' → logprob: -14.757611274719238

Token 146: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014184661209583282
    2. ')
' → logprob: -4.264184474945068
    3. '       ' → logprob: -11.639184951782227
    4. '           ' → logprob: -12.514184951782227
    5. '   ' → logprob: -12.764184951782227
    6. ')

' → logprob: -12.889184951782227
    7. ')
' → logprob: -14.389184951782227
    8. ' )' → logprob: -14.514184951782227
    9. ')\' → logprob: -14.889184951782227
    10. 'def' → logprob: -14.889184951782227

Token 147: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.061889469623565674
    2. '   ' → logprob: -3.061889410018921
    3. '<|end|>' → logprob: -5.4368896484375
    4. '    
' → logprob: -5.6868896484375
    5. 'def' → logprob: -6.3118896484375
    6. ' 
' → logprob: -6.3118896484375
    7. '  
' → logprob: -7.5618896484375
    8. '\n' → logprob: -7.6868896484375
    9. '       ' → logprob: -9.0618896484375
    10. '' → logprob: -9.0618896484375

Token 148: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4372546374797821
    2. 'def' (adapté à ' def') → logprob: -1.5622546672821045
    3. '   ' → logprob: -2.0622546672821045
    4. '    
' → logprob: -5.062254428863525
    5. ' 
' → logprob: -6.062254428863525
    6. ' def' → logprob: -6.187254428863525
    7. '  
' → logprob: -6.562254428863525
    8. '

' → logprob: -7.062254428863525
    9. ':' → logprob: -7.187254428863525
    10. '\n' → logprob: -7.312254428863525

Token 149: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.25240570306777954
    2. 'add' → logprob: -1.5024056434631348
    3. '_add' → logprob: -9.127406120300293
    4. ' create' → logprob: -9.502406120300293
    5. 'def' → logprob: -10.127406120300293
    6. ' ' → logprob: -10.252406120300293
    7. 'create' → logprob: -10.627406120300293
    8. ' single' → logprob: -10.689906120300293
    9. 'd' → logprob: -10.877406120300293
    10. '	add' → logprob: -11.189906120300293

Token 150: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -0.002039629500359297
    2. '_' → logprob: -6.252039432525635
    3. '_edges' → logprob: -10.377039909362793
    4. '_
' → logprob: -10.877039909362793
    5. '_s' → logprob: -11.502039909362793
    6. 'single' → logprob: -12.127039909362793
    7. ' _' → logprob: -12.377039909362793
    8. 'Single' → logprob: -12.627039909362793
    9. '_SINGLE' → logprob: -12.627039909362793
    10. '_multiple' → logprob: -12.752039909362793

Token 151: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.1476130336523056
    2. '_' → logprob: -2.022613048553467
    3. '_token' → logprob: -5.772613048553467
    4. '_edges' → logprob: -7.647613048553467
    5. '_line' → logprob: -8.147612571716309
    6. ' _' → logprob: -8.147612571716309
    7. '_space' → logprob: -8.272612571716309
    8. '_single' → logprob: -8.772612571716309
    9. '_char' → logprob: -9.522612571716309
    10. '_ed' → logprob: -10.022612571716309

Token 152: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0699547752737999
    2. '(' → logprob: -2.6949548721313477
    3. '(
' → logprob: -12.569954872131348
    4. '(nn' → logprob: -12.694954872131348
    5. '(nx' → logprob: -12.694954872131348
    6. ' (' → logprob: -13.319954872131348
    7. '(node' → logprob: -13.569954872131348
    8. '(np' → logprob: -13.944954872131348
    9. '(ns' → logprob: -14.194954872131348
    10. '(nd' → logprob: -14.194954872131348

Token 153: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.006100255064666271
    2. '_list' → logprob: -5.256100177764893
    3. '_l' → logprob: -8.25610065460205
    4. 'list' → logprob: -8.38110065460205
    5. 'L' → logprob: -8.63110065460205
    6. ',' → logprob: -9.75610065460205
    7. ')' → logprob: -10.63110065460205
    8. 'nl' → logprob: -10.88110065460205
    9. '```' → logprob: -11.38110065460205
    10. '_lists' → logprob: -11.50610065460205

Token 154: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017874970217235386
    2. ' ,' → logprob: -9.125178337097168
    3. ',n' → logprob: -9.875178337097168
    4. ',node' → logprob: -11.875178337097168
    5. ',u' → logprob: -12.750178337097168
    6. ')' → logprob: -13.000178337097168
    7. 'n' → logprob: -14.250178337097168
    8. ',index' → logprob: -14.625178337097168
    9. ' ' → logprob: -14.750178337097168
    10. '[],' → logprob: -14.875178337097168

Token 155: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.05042029172182083
    2. ' u' → logprob: -3.4254202842712402
    3. 'i' → logprob: -5.17542028427124
    4. 'idx' → logprob: -5.55042028427124
    5. 'index' → logprob: -5.92542028427124
    6. 'node' → logprob: -6.17542028427124
    7. ' idx' → logprob: -7.30042028427124
    8. ')' → logprob: -8.175420761108398
    9. 'x' → logprob: -8.425420761108398
    10. ' node' → logprob: -8.425420761108398

Token 156: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010413920972496271
    2. ' ,' → logprob: -9.250103950500488
    3. ',v' → logprob: -12.125103950500488
    4. ',u' → logprob: -14.000103950500488
    5. '   ' → logprob: -14.250103950500488
    6. ',n' → logprob: -15.000103950500488
    7. ',
' → logprob: -15.875103950500488
    8. '‌,' → logprob: -16.125104904174805
    9. ' ' → logprob: -16.500104904174805
    10. ')' → logprob: -16.750104904174805

Token 157: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.02549540437757969
    2. ' v' → logprob: -3.7754952907562256
    3. 'u' → logprob: -6.150495529174805
    4. ' u' → logprob: -9.150495529174805
    5. ' ' → logprob: -12.650495529174805
    6. '	v' → logprob: -13.150495529174805
    7. '   ' → logprob: -14.150495529174805
    8. 't' → logprob: -14.775495529174805
    9. '[' → logprob: -14.775495529174805
    10. 'vi' → logprob: -15.275495529174805

Token 158: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.204720582696609e-05
    2. ' ,' → logprob: -9.875052452087402
    3. ',a' → logprob: -15.500052452087402
    4. '   ' → logprob: -16.375051498413086
    5. '‌,' → logprob: -16.375051498413086
    6. ',
' → logprob: -16.750051498413086
    7. '):' → logprob: -17.375051498413086
    8. '[],' → logprob: -18.000051498413086
    9. ',u' → logprob: -18.000051498413086
    10. '_,' → logprob: -18.125051498413086

Token 159: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0430758073925972
    2. ' a' → logprob: -3.1680757999420166
    3. 'cost' → logprob: -11.043075561523438
    4. 'w' → logprob: -11.168075561523438
    5. 'weight' → logprob: -11.418075561523438
    6. ' ' → logprob: -12.043075561523438
    7. ' cost' → logprob: -12.605575561523438
    8. '   ' → logprob: -12.730575561523438
    9. ' w' → logprob: -12.793075561523438
    10. '    ' → logprob: -12.855575561523438

Token 160: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011239065788686275
    2. ' ,' → logprob: -6.876123905181885
    3. ',b' → logprob: -9.501124382019043
    4. '):' → logprob: -12.376124382019043
    5. ',a' → logprob: -12.501124382019043
    6. ',
' → logprob: -13.001124382019043
    7. '   ' → logprob: -13.376124382019043
    8. ',n' → logprob: -14.501124382019043
    9. ',v' → logprob: -14.626124382019043
    10. '):
' → logprob: -14.751124382019043

Token 161: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.02976854331791401
    2. ' b' → logprob: -3.529768466949463
    3. '
' → logprob: -11.654768943786621
    4. ' ' → logprob: -12.904768943786621
    5. ' 
' → logprob: -13.779768943786621
    6. '):
' → logprob: -13.904768943786621
    7. '   ' → logprob: -13.904768943786621
    8. ')' → logprob: -14.404768943786621
    9. '    ' → logprob: -14.654768943786621
    10. ')b' → logprob: -14.779768943786621

Token 162: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008768046391196549
    2. '):
' → logprob: -8.000876426696777
    3. ',' → logprob: -8.125876426696777
    4. ' ):' → logprob: -8.750876426696777
    5. ')' → logprob: -9.750876426696777
    6. '   ' → logprob: -11.125876426696777
    7. ':' → logprob: -11.875876426696777
    8. '):
' → logprob: -12.875876426696777
    9. '):

' → logprob: -13.875876426696777
    10. ' ' → logprob: -14.000876426696777

Token 163: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0239800363779068
    2. '   ' → logprob: -5.648980140686035
    3. ' 
' → logprob: -5.648980140686035
    4. '        
' → logprob: -5.773980140686035
    5. 'nl' → logprob: -6.148980140686035
    6. '[n' → logprob: -6.273980140686035
    7. 'n' → logprob: -6.398980140686035
    8. ' ' → logprob: -6.398980140686035
    9. '    
' → logprob: -6.648980140686035
    10. ' nl' → logprob: -6.648980140686035

Token 164: ' nl' (ID: 44724)
  Prédit: ' nl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nl' → logprob: -0.3970699608325958
    2. 'nl' (adapté à ' nl') → logprob: -1.1470699310302734
    3. '   ' → logprob: -4.647069931030273
    4. '       ' → logprob: -7.897069931030273
    5. '    ' → logprob: -10.397069931030273
    6. 'n' → logprob: -10.647069931030273
    7. '           ' → logprob: -10.772069931030273
    8. '	n' → logprob: -11.022069931030273
    9. '.nl' → logprob: -11.272069931030273
    10. ' ' → logprob: -11.397069931030273

Token 165: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -8.180258191714529e-06
    2. '[' → logprob: -12.250008583068848
    3. 'u' → logprob: -13.000008583068848
    4. '[v' → logprob: -14.625008583068848
    5. '[n' → logprob: -15.125008583068848
    6. '[a' → logprob: -16.00000762939453
    7. '[
' → logprob: -17.12500762939453
    8. ' [' → logprob: -17.25000762939453
    9. '	u' → logprob: -17.50000762939453
    10. '
' → logprob: -18.00000762939453

Token 166: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -5.490809417096898e-05
    2. ']' → logprob: -9.875055313110352
    3. '.append' → logprob: -13.000055313110352
    4. ' ].' → logprob: -14.250055313110352
    5. ').' → logprob: -15.875055313110352
    6. 'append' → logprob: -16.00005531311035
    7. '.' → logprob: -16.25005531311035
    8. '],' → logprob: -17.00005531311035
    9. ']).' → logprob: -17.25005531311035
    10. '   ' → logprob: -17.37505531311035

Token 167: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -3.128163257315464e-07
    2. ' append' → logprob: -15.5
    3. '.append' → logprob: -16.125
    4. 'app' → logprob: -18.625
    5. '_append' → logprob: -19.625
    6. 'appen' → logprob: -20.375
    7. '	append' → logprob: -21.375
    8. 'Append' → logprob: -21.625
    9. ' ' → logprob: -23.875
    10. 'insert' → logprob: -24.125

Token 168: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0015036711702123284
    2. '(' → logprob: -6.5015034675598145
    3. '([' → logprob: -14.376503944396973
    4. '(v' → logprob: -14.376503944396973
    5. '(((' → logprob: -16.251502990722656
    6. ' ((' → logprob: -16.876502990722656
    7. '   ' → logprob: -17.501502990722656
    8. '(
' → logprob: -18.251502990722656
    9. ' (' → logprob: -18.751502990722656
    10. '(('' → logprob: -18.751502990722656

Token 169: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0011736786691471934
    2. ' v' → logprob: -6.751173496246338
    3. 'b' → logprob: -13.251173973083496
    4. '   ' → logprob: -14.126173973083496
    5. ' ' → logprob: -15.376173973083496
    6. '
' → logprob: -15.501173973083496
    7. ')v' → logprob: -16.37617301940918
    8. '    ' → logprob: -16.50117301940918
    9. '  ' → logprob: -16.62617301940918
    10. '	v' → logprob: -16.62617301940918

Token 170: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009645707905292511
    2. ' ,' → logprob: -4.759645938873291
    3. ',a' → logprob: -6.884645938873291
    4. '   ' → logprob: -12.759645462036133
    5. 'a' → logprob: -13.259645462036133
    6. ',b' → logprob: -14.009645462036133
    7. ' a' → logprob: -14.509645462036133
    8. ' ' → logprob: -14.759645462036133
    9. ',
' → logprob: -14.884645462036133
    10. '  ' → logprob: -16.009645462036133

Token 171: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5232598781585693
    2. 'a' → logprob: -0.8982598781585693
    3. ' ' → logprob: -9.273260116577148
    4. ' 
' → logprob: -12.148260116577148
    5. ''a' → logprob: -12.523260116577148
    6. ' ' → logprob: -12.523260116577148
    7. 'b' → logprob: -12.523260116577148
    8. ' b' → logprob: -12.648260116577148
    9. '	a' → logprob: -12.773260116577148
    10. ')' → logprob: -12.898260116577148

Token 172: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002540943678468466
    2. ',b' → logprob: -6.5025410652160645
    3. ' ,' → logprob: -6.8775410652160645
    4. 'b' → logprob: -12.502540588378906
    5. ',
' → logprob: -13.627540588378906
    6. ' b' → logprob: -13.877540588378906
    7. ' ' → logprob: -14.377540588378906
    8. ')' → logprob: -14.502540588378906
    9. '),' → logprob: -16.627540588378906
    10. '))' → logprob: -16.752540588378906

Token 173: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.3869141936302185
    2. 'b' → logprob: -1.1369142532348633
    3. ' ' → logprob: -10.886914253234863
    4. ' 
' → logprob: -12.011914253234863
    5. ')' → logprob: -12.261914253234863
    6. ' )' → logprob: -12.386914253234863
    7. ')b' → logprob: -12.636914253234863
    8. ' ' → logprob: -13.261914253234863
    9. ',b' → logprob: -14.511914253234863
    10. ',' → logprob: -14.636914253234863

Token 174: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00035060103982686996
    2. ')' → logprob: -8.875350952148438
    3. '))
' → logprob: -8.875350952148438
    4. ' ))' → logprob: -9.750350952148438
    5. ',' → logprob: -12.125350952148438
    6. '))

' → logprob: -12.750350952148438
    7. ')))' → logprob: -13.750350952148438
    8. '));' → logprob: -14.000350952148438
    9. '),' → logprob: -14.375350952148438
    10. '   ' → logprob: -14.500350952148438

Token 175: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 176: ' nl' (ID: 44724)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38419991731643677
    2. '
' → logprob: -1.259199857711792
    3. '<|end|>' → logprob: -4.009200096130371
    4. '    
' → logprob: -5.009200096130371
    5. '' → logprob: -6.634200096130371
    6. '  
' → logprob: -6.759200096130371
    7. 'newline' → logprob: -6.884200096130371
    8. ' ' → logprob: -7.009200096130371
    9. 'return' → logprob: -7.134200096130371
    10. '  ' → logprob: -7.384200096130371

Token 177: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16341491043567657
    2. '=' → logprob: -1.9134149551391602
    3. ',' → logprob: -6.16341495513916
    4. '(' → logprob: -7.78841495513916
    5. ')' → logprob: -8.28841495513916
    6. '[' → logprob: -9.53841495513916
    7. '=[]' → logprob: -9.53841495513916
    8. '()' → logprob: -10.16341495513916
    9. ' ' → logprob: -10.53841495513916
    10. '<|end|>' → logprob: -10.66341495513916

Token 178: ' empty' (ID: 8213)
  Prédit: 'empty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'empty' → logprob: -0.6936017274856567
    2. ' empty' → logprob: -0.6936017274856567
    3. '[]' → logprob: -8.193601608276367
    4. ' []' → logprob: -9.068601608276367
    5. ' [[]' → logprob: -10.568601608276367
    6. '(empty' → logprob: -11.068601608276367
    7. '[' → logprob: -11.818601608276367
    8. '_empty' → logprob: -12.443601608276367
    9. ' ' → logprob: -12.818601608276367
    10. '.empty' → logprob: -12.943601608276367

Token 179: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0003191386058460921
    2. '_' → logprob: -8.250319480895996
    3. ' _' → logprob: -10.250319480895996
    4. '_l' → logprob: -12.500319480895996
    5. '_line' → logprob: -12.500319480895996
    6. '_lst' → logprob: -12.875319480895996
    7. '_li' → logprob: -13.000319480895996
    8. '(_' → logprob: -13.375319480895996
    9. '_n' → logprob: -13.875319480895996
    10. '_lista' → logprob: -14.000319480895996

Token 180: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.009769308380782604
    2. '()
' → logprob: -4.634769439697266
    3. '()\' → logprob: -12.384769439697266
    4. '()

' → logprob: -13.134769439697266
    5. '()
' → logprob: -13.384769439697266
    6. ')' → logprob: -13.509769439697266
    7. '(' → logprob: -13.884769439697266
    8. '())' → logprob: -14.134769439697266
    9. '   ' → logprob: -14.259769439697266
    10. ' ()' → logprob: -14.384769439697266

Token 181: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30475854873657227
    2. 'add' → logprob: -1.5547585487365723
    3. ' add' → logprob: -3.4297585487365723
    4. '
' → logprob: -4.054758548736572
    5. '	add' → logprob: -7.179758548736572
    6. '    
' → logprob: -7.804758548736572
    7. '(add' → logprob: -8.804758071899414
    8. ')add' → logprob: -9.054758071899414
    9. '<|end|>' → logprob: -9.804758071899414
    10. '  
' → logprob: -10.054758071899414

Token 182: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.5242586731910706
    2. 'add' (adapté à ' add') → logprob: -0.8992586731910706
    3. '   ' → logprob: -7.149258613586426
    4. '
' → logprob: -8.649258613586426
    5. '	add' → logprob: -9.274258613586426
    6. ')add' → logprob: -10.399258613586426
    7. '.add' → logprob: -10.899258613586426
    8. '    
' → logprob: -11.649258613586426
    9. '(add' → logprob: -11.774258613586426
    10. ' 
' → logprob: -12.274258613586426

Token 183: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -4.5252596464706585e-05
    2. '_ed' → logprob: -10.250044822692871
    3. '_edge' → logprob: -12.250044822692871
    4. 'edges' → logprob: -12.875044822692871
    5. '_' → logprob: -14.125044822692871
    6. '```' → logprob: -15.250044822692871
    7. 'es' → logprob: -15.625044822692871
    8. 'ed' → logprob: -15.875044822692871
    9. '_nodes' → logprob: -16.375045776367188
    10. ' _' → logprob: -16.500045776367188

Token 184: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.006728395354002714
    2. '(' → logprob: -5.006728172302246
    3. ' (' → logprob: -11.381728172302246
    4. '(
' → logprob: -13.756728172302246
    5. '(

' → logprob: -15.631728172302246
    6. '(noun' → logprob: -16.506729125976562
    7. '(nd' → logprob: -16.756729125976562
    8. ' ' → logprob: -17.006729125976562
    9. '```' → logprob: -17.131729125976562
    10. '(nn' → logprob: -17.881729125976562

Token 185: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00208947341889143
    2. ',' → logprob: -6.252089500427246
    3. 'nl' → logprob: -9.877089500427246
    4. 'L' → logprob: -10.252089500427246
    5. ')' → logprob: -11.002089500427246
    6. '   ' → logprob: -11.877089500427246
    7. '```' → logprob: -12.127089500427246
    8. 'л' → logprob: -12.127089500427246
    9. ',l' → logprob: -12.252089500427246
    10. ' ,' → logprob: -12.877089500427246

Token 186: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.274932143744081e-05
    2. ' ,' → logprob: -10.250042915344238
    3. ',n' → logprob: -12.000042915344238
    4. ')' → logprob: -14.250042915344238
    5. '(n' → logprob: -15.875042915344238
    6. '(src' → logprob: -16.250041961669922
    7. ',
' → logprob: -17.250041961669922
    8. 'src' → logprob: -17.250041961669922
    9. '   ' → logprob: -17.500041961669922
    10. '```' → logprob: -17.500041961669922

Token 187: ' src' (ID: 4537)
  Prédit: 'src'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'src' → logprob: -0.008618239313364029
    2. ' src' → logprob: -4.758618354797363
    3. 'source' → logprob: -13.258618354797363
    4. '(src' → logprob: -14.258618354797363
    5. '[src' → logprob: -14.633618354797363
    6. ' ' → logprob: -15.508618354797363
    7. '	src' → logprob: -15.508618354797363
    8. '   ' → logprob: -15.508618354797363
    9. ' source' → logprob: -16.508617401123047
    10. '_src' → logprob: -16.508617401123047

Token 188: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2104748785495758
    2. '   ' → logprob: -1.7104748487472534
    3. ')
' → logprob: -4.710474967956543
    4. ')return' → logprob: -11.335474967956543
    5. 'return' → logprob: -12.585474967956543
    6. ' )' → logprob: -13.585474967956543
    7. ')
' → logprob: -13.710474967956543
    8. ',' → logprob: -14.335474967956543
    9. ')

' → logprob: -15.085474967956543
    10. '
' → logprob: -15.460474967956543

Token 189: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00021748353901784867
    2. 'return' → logprob: -8.62521743774414
    3. ' return' → logprob: -11.00021743774414
    4. '<|end|>' → logprob: -11.37521743774414
    5. '	return' → logprob: -12.37521743774414
    6. '    
' → logprob: -12.62521743774414
    7. '
' → logprob: -13.87521743774414
    8. ')' → logprob: -15.12521743774414
    9. '<|end|>' → logprob: -15.62521743774414
    10. '       ' → logprob: -15.75021743774414

Token 190: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011288892477750778
    2. 'return' (adapté à ' return') → logprob: -4.511289119720459
    3. ' return' → logprob: -8.3862886428833
    4. '	return' → logprob: -11.7612886428833
    5. '    
' → logprob: -12.7612886428833
    6. '
' → logprob: -14.6362886428833
    7. ' ' → logprob: -14.7612886428833
    8. '  ' → logprob: -15.1362886428833
    9. ':return' → logprob: -15.2612886428833
    10. '<|end|>' → logprob: -15.2612886428833

Token 191: ' nl' (ID: 44724)
  Prédit: 'nl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nl' → logprob: -0.014164221473038197
    2. ' nl' → logprob: -4.264164447784424
    3. 'n' → logprob: -14.264163970947266
    4. 'nel' → logprob: -17.014163970947266
    5. 'nal' → logprob: -17.264163970947266
    6. 'nol' → logprob: -17.639163970947266
    7. 'nil' → logprob: -18.014163970947266
    8. '(n' → logprob: -18.264163970947266
    9. '.nl' → logprob: -18.514163970947266
    10. 'Nl' → logprob: -19.264163970947266

Token 192: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 193: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.017007920891046524
    2. '
' → logprob: -4.267007827758789
    3. '<|end|>' → logprob: -6.017007827758789
    4. '

' → logprob: -8.392007827758789
    5. '
' → logprob: -9.892007827758789
    6. '```' → logprob: -10.767007827758789
    7. '    
' → logprob: -10.892007827758789
    8. 'import' → logprob: -10.892007827758789
    9. '<|end|>' → logprob: -10.892007827758789
    10. '  
' → logprob: -11.017007827758789

Token 194: ' initialize' (ID: 18400)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.049541909247636795
    2. ' shortest' → logprob: -3.67454195022583
    3. 'd' → logprob: -4.04954195022583
    4. ' solve' → logprob: -6.17454195022583
    5. ' find' → logprob: -6.54954195022583
    6. ' ' → logprob: -8.174541473388672
    7. '```' → logprob: -8.674541473388672
    8. 'short' → logprob: -8.862041473388672
    9. 'solve' → logprob: -9.174541473388672
    10. '  ' → logprob: -9.549541473388672

Token 195: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.08181924372911453
    2. '_distance' → logprob: -3.2068192958831787
    3. '(n' → logprob: -4.2068190574646
    4. '_' → logprob: -4.7068190574646
    5. '(' → logprob: -4.9568190574646
    6. '_cost' → logprob: -6.8318190574646
    7. 'dist' → logprob: -6.9568190574646
    8. '_heap' → logprob: -6.9568190574646
    9. '_d' → logprob: -7.0818190574646
    10. '_arrays' → logprob: -7.9568190574646

Token 196: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.43976786732673645
    2. 'ance' → logprob: -1.064767837524414
    3. '()' → logprob: -4.939767837524414
    4. '(' → logprob: -6.314767837524414
    5. '(n' → logprob: -7.189767837524414
    6. '[]' → logprob: -8.189767837524414
    7. 's' → logprob: -8.314767837524414
    8. '```' → logprob: -8.314767837524414
    9. '():' → logprob: -9.314767837524414
    10. '_array' → logprob: -9.814767837524414

Token 197: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.04204525053501129
    2. '():' → logprob: -3.2920453548431396
    3. '(' → logprob: -5.6670451164245605
    4. '():
' → logprob: -8.167045593261719
    5. ' (' → logprob: -9.042045593261719
    6. ' ():' → logprob: -10.042045593261719
    7. '(num' → logprob: -10.167045593261719
    8. '()' → logprob: -11.292045593261719
    9. '(size' → logprob: -11.667045593261719
    10. '(s' → logprob: -11.667045593261719

Token 198: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16126587986946106
    2. ',' → logprob: -2.1612658500671387
    3. '):
' → logprob: -3.4112658500671387
    4. ')' → logprob: -7.911265850067139
    5. ' ):' → logprob: -8.536266326904297
    6. '):
' → logprob: -9.411266326904297
    7. 's' → logprob: -10.661266326904297
    8. '):

' → logprob: -10.911266326904297
    9. ',s' → logprob: -11.286266326904297
    10. ':' → logprob: -11.661266326904297

Token 199: ' index' (ID: 3472)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8753747344017029
    2. '2' → logprob: -1.6253747940063477
    3. 's' → logprob: -2.3753747940063477
    4. 't' → logprob: -2.7503747940063477
    5. ' ' → logprob: -3.6253747940063477
    6. 'max' → logprob: -3.6253747940063477
    7. ' s' → logprob: -3.8753747940063477
    8. 'm' → logprob: -4.250374794006348
    9. ' t' → logprob: -4.250374794006348
    10. 'INF' → logprob: -4.250374794006348

Token 200: '):
' (ID: 1883)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6547819972038269
    2. '):' → logprob: -0.7797819972038269
    3. '):
' → logprob: -4.779781818389893
    4. 'es' → logprob: -5.154781818389893
    5. ',' → logprob: -5.404781818389893
    6. ')' → logprob: -6.029781818389893
    7. ' ):' → logprob: -9.02978229522705
    8. '_s' → logprob: -9.40478229522705
    9. '=' → logprob: -9.52978229522705
    10. 'e' → logprob: -9.65478229522705

Token 201: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0035353288985788822
    2. ' return' → logprob: -6.628535270690918
    3. '[' → logprob: -6.878535270690918
    4. 'return' → logprob: -7.253535270690918
    5. ' ' → logprob: -9.753535270690918
    6. ' [' → logprob: -9.878535270690918
    7. '[]' → logprob: -10.128535270690918
    8. '  ' → logprob: -10.253535270690918
    9. ':' → logprob: -10.503535270690918
    10. 'INF' → logprob: -10.628535270690918

Token 202: ' d' (ID: 272)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.22367709875106812
    2. 'return' → logprob: -1.848677158355713
    3. '   ' → logprob: -3.348677158355713
    4. 'dist' → logprob: -5.848677158355713
    5. ' return' → logprob: -6.848677158355713
    6. 'float' → logprob: -7.223677158355713
    7. ' [' → logprob: -7.348677158355713
    8. 'INF' → logprob: -7.598677158355713
    9. '[int' → logprob: -7.723677158355713
    10. '[n' → logprob: -7.723677158355713

Token 203: ' =' (ID: 314)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.07319831103086472
    2. 'ists' → logprob: -3.1981983184814453
    3. ' =' → logprob: -3.5731983184814453
    4. 'istance' → logprob: -6.823198318481445
    5. 'is' → logprob: -7.698198318481445
    6. 'ef' → logprob: -10.073198318481445
    7. '=' → logprob: -10.698198318481445
    8. 'ista' → logprob: -11.198198318481445
    9. '   ' → logprob: -11.573198318481445
    10. 'i' → logprob: -11.573198318481445

Token 204: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3939368724822998
    2. '[[' → logprob: -1.1439368724822998
    3. ' [' → logprob: -6.018937110900879
    4. '[int' → logprob: -6.518937110900879
    5. ' [[' → logprob: -6.768937110900879
    6. '[n' → logprob: -6.893937110900879
    7. '[{' → logprob: -7.893937110900879
    8. '[-' → logprob: -8.643937110900879
    9. '{' → logprob: -8.768937110900879
    10. '[(' → logprob: -9.018937110900879

Token 205: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.07291874289512634
    2. '[' → logprob: -3.447918653488159
    3. '(float' → logprob: -3.822918653488159
    4. '(' → logprob: -5.197918891906738
    5. ' float' → logprob: -5.447918891906738
    6. '10' → logprob: -5.697918891906738
    7. '1' → logprob: -7.572918891906738
    8. '[]' → logprob: -7.697918891906738
    9. ' [' → logprob: -7.697918891906738
    10. '[(' → logprob: -8.072918891906738

Token 206: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -6.146429223008454e-05
    2. '("' → logprob: -10.75006103515625
    3. '(' → logprob: -11.12506103515625
    4. ''in' → logprob: -11.25006103515625
    5. ''' → logprob: -11.50006103515625
    6. '('-' → logprob: -14.12506103515625
    7. '(in' → logprob: -14.62506103515625
    8. 'inf' → logprob: -15.37506103515625
    9. ']' → logprob: -15.50006103515625
    10. '(
' → logprob: -16.25006103515625

Token 207: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -1.4736459888808895e-05
    2. '"' → logprob: -11.875014305114746
    3. 'in' → logprob: -12.750014305114746
    4. ''' → logprob: -12.875014305114746
    5. ''in' → logprob: -14.250014305114746
    6. '-inf' → logprob: -15.000014305114746
    7. '_inf' → logprob: -15.000014305114746
    8. 'Inf' → logprob: -15.250014305114746
    9. 'info' → logprob: -16.000015258789062
    10. '")' → logprob: -16.000015258789062

Token 208: '")]' (ID: 71224)
  Prédit: '")]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")]' → logprob: -0.023086605593562126
    2. '")' → logprob: -4.1480865478515625
    3. ')' → logprob: -5.6480865478515625
    4. ')]' → logprob: -6.3980865478515625
    5. ']' → logprob: -6.5230865478515625
    6. '"),' → logprob: -8.273086547851562
    7. '"' → logprob: -10.398086547851562
    8. '')]' → logprob: -10.523086547851562
    9. '")]
' → logprob: -10.898086547851562
    10. ' "' → logprob: -11.773086547851562

Token 209: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5053299069404602
    2. ']' → logprob: -1.0053298473358154
    3. 'for' → logprob: -3.7553298473358154
    4. ']*' → logprob: -5.2553300857543945
    5. ']*(' → logprob: -6.7553300857543945
    6. ' ]' → logprob: -7.8803300857543945
    7. ',' → logprob: -8.130330085754395
    8. '	for' → logprob: -9.630330085754395
    9. '   ' → logprob: -9.630330085754395
    10. ' ' → logprob: -10.005330085754395

Token 210: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.4295526146888733
    2. ' (' → logprob: -1.0545525550842285
    3. '(' → logprob: -7.3045525550842285
    4. 'n' → logprob: -9.179553031921387
    5. ' n' → logprob: -10.179553031921387
    6. ' ' → logprob: -11.304553031921387
    7. '((' → logprob: -11.429553031921387
    8. '(
' → logprob: -12.554553031921387
    9. '
' → logprob: -12.679553031921387
    10. ' ((' → logprob: -13.804553031921387

Token 211: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12716569006443024
    2. ' n' → logprob: -2.1271657943725586
    3. '(n' → logprob: -8.877165794372559
    4. '   ' → logprob: -10.002165794372559
    5. ' (' → logprob: -11.127165794372559
    6. ' ' → logprob: -11.377165794372559
    7. '	n' → logprob: -12.127165794372559
    8. '
' → logprob: -12.252165794372559
    9. ')n' → logprob: -12.502165794372559
    10. '    ' → logprob: -12.752165794372559

Token 212: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05490981787443161
    2. ' +' → logprob: -2.9299097061157227
    3. ')' → logprob: -11.429909706115723
    4. '+
' → logprob: -11.929909706115723
    5. ' +
' → logprob: -12.429909706115723
    6. '<|end|>' → logprob: -13.554909706115723
    7. '[' → logprob: -13.679909706115723
    8. '1' → logprob: -14.054909706115723
    9. ' ' → logprob: -14.304909706115723
    10. '+)' → logprob: -14.929909706115723

Token 213: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008626751601696014
    2. ' ' → logprob: -4.758626937866211
    3. '   ' → logprob: -12.633626937866211
    4. '```' → logprob: -12.758626937866211
    5. ')' → logprob: -12.883626937866211
    6. 'index' → logprob: -14.633626937866211
    7. '
' → logprob: -15.071126937866211
    8. '  ' → logprob: -15.383626937866211
    9. '[' → logprob: -15.446126937866211
    10. ' )' → logprob: -15.633626937866211

Token 214: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.6789137084269896e-05
    2. ' ' → logprob: -10.25003719329834
    3. '```' → logprob: -14.75003719329834
    4. '
' → logprob: -15.31253719329834
    5. '   ' → logprob: -15.75003719329834
    6. ')' → logprob: -16.250036239624023
    7. '2' → logprob: -16.750036239624023
    8. '

' → logprob: -17.062536239624023
    9. '0' → logprob: -17.187536239624023
    10. '[' → logprob: -17.750036239624023

Token 215: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00025430647656321526
    2. ')
' → logprob: -8.50025463104248
    3. ' )' → logprob: -10.00025463104248
    4. ')

' → logprob: -13.37525463104248
    5. '<|end|>' → logprob: -13.50025463104248
    6. '   ' → logprob: -13.87525463104248
    7. ',' → logprob: -14.87525463104248
    8. '),' → logprob: -15.37525463104248
    9. ' ' → logprob: -15.62525463104248
    10. 'def' → logprob: -16.125253677368164

Token 216: '   ' (ID: 271)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2778575122356415
    2. ' d' → logprob: -1.6528575420379639
    3. '   ' → logprob: -3.152857542037964
    4. '<|end|>' → logprob: -5.152857303619385
    5. '	d' → logprob: -6.902857303619385
    6. ' ' → logprob: -7.777857303619385
    7. '<|end|>' → logprob: -7.902857303619385
    8. '
' → logprob: -8.277857780456543
    9. '[' → logprob: -9.527857780456543
    10. '_d' → logprob: -9.652857780456543

Token 217: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.0004723795282188803
    2. ' d' → logprob: -8.125472068786621
    3. '   ' → logprob: -8.875472068786621
    4. 'return' → logprob: -11.375472068786621
    5. ' ' → logprob: -11.500472068786621
    6. 'for' → logprob: -12.625472068786621
    7. '	d' → logprob: -13.125472068786621
    8. '  ' → logprob: -13.250472068786621
    9. 'if' → logprob: -13.250472068786621
    10. '
' → logprob: -13.250472068786621

Token 218: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -0.033844850957393646
    2. '[' → logprob: -3.4088449478149414
    3. '[s' → logprob: -9.533844947814941
    4. '[Index' → logprob: -10.283844947814941
    5. '<|end|>' → logprob: -11.158844947814941
    6. '[i' → logprob: -11.408844947814941
    7. '[
' → logprob: -11.658844947814941
    8. '[idx' → logprob: -12.158844947814941
    9. '[in' → logprob: -12.283844947814941
    10. '[ind' → logprob: -12.283844947814941

Token 219: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007055217283777893
    2. ')' → logprob: -7.375705718994141
    3. ')]' → logprob: -10.50070571899414
    4. ' ]' → logprob: -10.87570571899414
    5. ']=' → logprob: -11.00070571899414
    6. '[' → logprob: -11.37570571899414
    7. '])' → logprob: -13.00070571899414
    8. '=' → logprob: -14.62570571899414
    9. '   ' → logprob: -15.00070571899414
    10. ']
' → logprob: -15.37570571899414

Token 220: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4744807481765747
    2. '=' → logprob: -0.9744807481765747
    3. '[' → logprob: -8.599480628967285
    4. ']' → logprob: -9.349480628967285
    5. ' =
' → logprob: -9.474480628967285
    6. ' ' → logprob: -10.599480628967285
    7. '<|end|>' → logprob: -11.724480628967285
    8. ')' → logprob: -12.099480628967285
    9. ']=' → logprob: -12.224480628967285
    10. '=
' → logprob: -13.349480628967285

Token 221: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023083435371518135
    2. ' ' → logprob: -8.37523078918457
    3. '   ' → logprob: -16.12523078918457
    4. '[' → logprob: -17.18773078918457
    5. '00' → logprob: -17.18773078918457
    6. '  ' → logprob: -17.62523078918457
    7. ' ' → logprob: -17.81273078918457
    8. '1' → logprob: -18.00023078918457
    9. '000' → logprob: -18.06273078918457
    10. '۰' → logprob: -18.31273078918457

Token 222: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.466968650580384e-05
    2. ' ' → logprob: -9.875054359436035
    3. '(' → logprob: -13.500054359436035
    4. '[' → logprob: -14.250054359436035
    5. '00' → logprob: -15.625054359436035
    6. 's' → logprob: -15.937554359436035
    7. '1' → logprob: -16.37505531311035
    8. '   ' → logprob: -16.37505531311035
    9. '000' → logprob: -16.37505531311035
    10. '  ' → logprob: -16.68755531311035

Token 223: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005253921262919903
    2. '
' → logprob: -8.37552547454834
    3. '<|end|>' → logprob: -8.50052547454834
    4. '	return' → logprob: -10.12552547454834
    5. '    
' → logprob: -10.62552547454834
    6. 'return' → logprob: -11.75052547454834
    7. ' return' → logprob: -12.00052547454834
    8. ' ' → logprob: -13.12552547454834
    9. '<|end|>' → logprob: -13.12552547454834
    10. ',' → logprob: -13.12552547454834

Token 224: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00028064317302778363
    2. '	return' → logprob: -8.500280380249023
    3. ' return' → logprob: -10.125280380249023
    4. 'return' → logprob: -10.750280380249023
    5. '
' → logprob: -12.000280380249023
    6. '    
' → logprob: -12.250280380249023
    7. '<|end|>' → logprob: -12.875280380249023
    8. '   ' → logprob: -14.625280380249023
    9. ' ' → logprob: -15.250280380249023
    10. '[' → logprob: -15.875280380249023

Token 225: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.051543284207582474
    2. '   ' → logprob: -3.4265432357788086
    3. ' return' → logprob: -4.051543235778809
    4. '	return' → logprob: -8.051543235778809
    5. ' ' → logprob: -11.801543235778809
    6. 'def' → logprob: -12.551543235778809
    7. '  ' → logprob: -13.051543235778809
    8. '
' → logprob: -13.551543235778809
    9. 'eturn' → logprob: -13.551543235778809
    10. '_return' → logprob: -13.676543235778809

Token 226: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3132619559764862
    2. ' d' → logprob: -1.3132619857788086
    3. '	d' → logprob: -16.438261032104492
    4. ' ' → logprob: -16.688261032104492
    5. ' ' → logprob: -17.688261032104492
    6. '_d' → logprob: -18.063261032104492
    7. '   ' → logprob: -18.063261032104492
    8. '[' → logprob: -18.563261032104492
    9. '(d' → logprob: -18.938261032104492
    10. '[d' → logprob: -19.063261032104492

Token 227: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0021230189595371485
    2. '
' → logprob: -6.75212287902832
    3. '<|end|>' → logprob: -7.00212287902832
    4. 'import' → logprob: -11.12712287902832
    5. '```' → logprob: -11.37712287902832
    6. '<|end|>' → logprob: -12.62712287902832
    7. '#' → logprob: -13.37712287902832
    8. '    
' → logprob: -13.62712287902832
    9. '[' → logprob: -13.75212287902832
    10. '  
' → logprob: -13.75212287902832

Token 228: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007105344440788031
    2. '<|end|>' → logprob: -5.007105350494385
    3. '
' → logprob: -8.382104873657227
    4. '<|end|>' → logprob: -9.382104873657227
    5. '

' → logprob: -10.882104873657227
    6. ')' → logprob: -11.132104873657227
    7. '```' → logprob: -11.632104873657227
    8. 'import' → logprob: -12.007104873657227
    9. '#' → logprob: -12.632104873657227
    10. ' def' → logprob: -12.632104873657227

Token 229: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.20649589598178864
    2. 'd' → logprob: -1.8314958810806274
    3. 'def' → logprob: -4.831495761871338
    4. ' shortest' → logprob: -5.456495761871338
    5. ' find' → logprob: -5.706495761871338
    6. ' def' → logprob: -5.706495761871338
    7. ' solve' → logprob: -5.956495761871338
    8. 'solve' → logprob: -6.956495761871338
    9. 'short' → logprob: -7.456495761871338
    10. ' modified' → logprob: -7.956495761871338

Token 230: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.0392739400267601
    2. 'ijk' → logprob: -3.289273977279663
    3. 'ij' → logprob: -7.039273738861084
    4. 'jik' → logprob: -8.039274215698242
    5. 'ef' → logprob: -11.914274215698242
    6. 'ijks' → logprob: -11.914274215698242
    7. 'i' → logprob: -12.289274215698242
    8. 'ijkl' → logprob: -12.289274215698242
    9. 'jk' → logprob: -12.914274215698242
    10. 'ijs' → logprob: -13.164274215698242

Token 231: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4321925938129425
    2. '(n' → logprob: -1.0571925640106201
    3. '(graph' → logprob: -6.057192802429199
    4. '(s' → logprob: -8.0571928024292
    5. '(node' → logprob: -8.4321928024292
    6. '():' → logprob: -9.6821928024292
    7. '(_' → logprob: -9.9321928024292
    8. '(def' → logprob: -10.0571928024292
    9. '(nx' → logprob: -10.1821928024292
    10. '_' → logprob: -10.3071928024292

Token 232: 'l' (ID: 75)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020413640595506877
    2. ',n' → logprob: -9.000204086303711
    3. ' ,' → logprob: -9.500204086303711
    4. ',s' → logprob: -13.750204086303711
    5. '   ' → logprob: -14.125204086303711
    6. '(n' → logprob: -14.500204086303711
    7. ',
' → logprob: -14.500204086303711
    8. ',m' → logprob: -14.750204086303711
    9. '_,' → logprob: -15.000204086303711
    10. '):' → logprob: -15.125204086303711

Token 233: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010270876373397186
    2. ' ,' → logprob: -9.875102996826172
    3. ',n' → logprob: -10.875102996826172
    4. '   ' → logprob: -11.000102996826172
    5. '[n' → logprob: -12.250102996826172
    6. '[],' → logprob: -12.500102996826172
    7. ',s' → logprob: -13.375102996826172
    8. 'def' → logprob: -13.625102996826172
    9. '[s' → logprob: -13.750102996826172
    10. '[' → logprob: -14.250102996826172

Token 234: ' start' (ID: 1604)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0542453527450562
    2. 'start' → logprob: -1.1792453527450562
    3. ' start' → logprob: -1.6792453527450562
    4. ' s' → logprob: -2.1792454719543457
    5. 'dist' → logprob: -4.179245471954346
    6. 'src' → logprob: -4.304245471954346
    7. 'source' → logprob: -5.179245471954346
    8. ' source' → logprob: -5.429245471954346
    9. ' dist' → logprob: -6.054245471954346
    10. ' src' → logprob: -6.679245471954346

Token 235: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.469590491382405e-05
    2. '):' → logprob: -9.75007438659668
    3. ' ,' → logprob: -11.37507438659668
    4. ',start' → logprob: -12.62507438659668
    5. '):
' → logprob: -14.75007438659668
    6. '   ' → logprob: -15.00007438659668
    7. ',
' → logprob: -15.50007438659668
    8. ',n' → logprob: -16.00007438659668
    9. '_,' → logprob: -16.12507438659668
    10. ',node' → logprob: -16.75007438659668

Token 236: ' use' (ID: 1199)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.8054162263870239
    2. 'cost' → logprob: -2.1804161071777344
    3. ' dist' → logprob: -2.8054161071777344
    4. 'd' → logprob: -2.9304161071777344
    5. ' s' → logprob: -3.0554161071777344
    6. 'b' → logprob: -3.1804161071777344
    7. ' cost' → logprob: -3.3054161071777344
    8. 's' → logprob: -3.6804161071777344
    9. ' d' → logprob: -3.8054161071777344
    10. ' distances' → logprob: -3.8054161071777344

Token 237: '_weight' (ID: 34711)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.8142281770706177
    2. '_b' → logprob: -0.9392281770706177
    3. '_dist' → logprob: -3.189228057861328
    4. '_time' → logprob: -3.689228057861328
    5. '_cost' → logprob: -3.814228057861328
    6. '_d' → logprob: -4.064228057861328
    7. '_first' → logprob: -4.939228057861328
    8. '_' → logprob: -5.064228057861328
    9. '_distance' → logprob: -5.189228057861328
    10. '_attr' → logprob: -5.439228057861328

Token 238: '):
' (ID: 1883)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -1.11593496799469
    2. '):' → logprob: -1.36593496799469
    3. 's' → logprob: -2.3659348487854004
    4. '1' → logprob: -2.3659348487854004
    5. 'a' → logprob: -2.4909348487854004
    6. '):
' → logprob: -2.7409348487854004
    7. '_b' → logprob: -3.4909348487854004
    8. '=True' → logprob: -4.1159348487854
    9. '0' → logprob: -4.7409348487854
    10. '=' → logprob: -4.9909348487854

Token 239: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0174860842525959
    2. ':' → logprob: -4.517486095428467
    3. 'd' → logprob: -6.892486095428467
    4. ')' → logprob: -7.267486095428467
    5. '):' → logprob: -7.517486095428467
    6. '    
' → logprob: -7.642486095428467
    7. ' :' → logprob: -7.892486095428467
    8. '    ' → logprob: -7.892486095428467
    9. '(' → logprob: -8.142485618591309
    10. ',' → logprob: -8.142485618591309

Token 240: ' d' (ID: 272)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.683647632598877
    2. 'dist' → logprob: -1.808647632598877
    3. '   ' → logprob: -2.058647632598877
    4. ' import' → logprob: -2.433647632598877
    5. 'd' (adapté à ' d') → logprob: -2.808647632598877
    6. ' dist' → logprob: -3.433647632598877
    7. ' d' → logprob: -3.808647632598877
    8. ' ' → logprob: -7.433647632598877
    9. ' distances' → logprob: -8.808647155761719
    10. 'n' → logprob: -9.058647155761719

Token 241: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007988804951310158
    2. '=' → logprob: -4.882988929748535
    3. ',' → logprob: -8.007988929748535
    4. 'ist' → logprob: -10.382988929748535
    5. 'istance' → logprob: -11.632988929748535
    6. '   ' → logprob: -12.132988929748535
    7. ' ' → logprob: -13.132988929748535
    8. '  ' → logprob: -14.632988929748535
    9. ' =
' → logprob: -15.257988929748535
    10. '[' → logprob: -15.382988929748535

Token 242: ' initialize' (ID: 18400)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14437437057495117
    2. ' [' → logprob: -2.019374370574951
    3. 'initialize' → logprob: -6.519374370574951
    4. '   ' → logprob: -9.89437484741211
    5. ' initialize' → logprob: -10.14437484741211
    6. '[in' → logprob: -10.39437484741211
    7. '[int' → logprob: -10.39437484741211
    8. '{' → logprob: -10.89437484741211
    9. '[start' → logprob: -11.64437484741211
    10. '[n' → logprob: -12.01937484741211

Token 243: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -2.451116051815916e-05
    2. 'dist' → logprob: -10.625024795532227
    3. '(dist' → logprob: -16.750024795532227
    4. '_d' → logprob: -17.375024795532227
    5. 'Distances' → logprob: -17.750024795532227
    6. '_DIST' → logprob: -17.875024795532227
    7. ' distances' → logprob: -18.250024795532227
    8. '_distance' → logprob: -18.375024795532227
    9. '	dist' → logprob: -18.375024795532227
    10. 'ist' → logprob: -18.625024795532227

Token 244: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.025674929842352867
    2. 'dist' → logprob: -3.900674819946289
    3. '_dist' → logprob: -5.525674819946289
    4. '(dist' → logprob: -7.525674819946289
    5. '   ' → logprob: -8.400674819946289
    6. 'd' → logprob: -8.400674819946289
    7. 'ations' → logprob: -10.400674819946289
    8. 'n' → logprob: -10.650674819946289
    9. 'ance' → logprob: -10.775674819946289
    10. 'aces' → logprob: -11.025674819946289

Token 245: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.0076819853857159615
    2. '(n' → logprob: -4.882681846618652
    3. 'len' → logprob: -9.757681846618652
    4. '(' → logprob: -11.382681846618652
    5. '=len' → logprob: -12.757681846618652
    6. '(
' → logprob: -13.507681846618652
    7. ' (' → logprob: -13.882681846618652
    8. ' len' → logprob: -14.382681846618652
    9. 'n' → logprob: -15.632681846618652
    10. '[len' → logprob: -15.882681846618652

Token 246: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.981667537620524e-06
    2. '(' → logprob: -13.375001907348633
    3. '(d' → logprob: -15.500001907348633
    4. ' (' → logprob: -17.000001907348633
    5. ')' → logprob: -17.375001907348633
    6. '(nx' → logprob: -17.500001907348633
    7. 'nl' → logprob: -17.750001907348633
    8. '(
' → logprob: -17.875001907348633
    9. ')n' → logprob: -17.875001907348633
    10. '(nd' → logprob: -17.875001907348633

Token 247: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -3.8889261304575484e-06
    2. '[l' → logprob: -13.625003814697266
    3. '_l' → logprob: -14.750003814697266
    4. '```' → logprob: -14.750003814697266
    5. '(l' → logprob: -15.125003814697266
    6. ',l' → logprob: -15.250003814697266
    7. '	l' → logprob: -15.375003814697266
    8. ''l' → logprob: -15.375003814697266
    9. '[' → logprob: -15.500003814697266
    10. ')' → logprob: -15.875003814697266

Token 248: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11359353363513947
    2. ')-' → logprob: -2.988593578338623
    3. '),' → logprob: -3.488593578338623
    4. '[' → logprob: -4.113593578338623
    5. '-' → logprob: -5.363593578338623
    6. ' -' → logprob: -5.613593578338623
    7. ',' → logprob: -6.988593578338623
    8. '[start' → logprob: -8.863593101501465
    9. '[n' → logprob: -8.988593101501465
    10. '   ' → logprob: -9.113593101501465

Token 249: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0221681147813797
    2. '[start' → logprob: -4.772168159484863
    3. '[' → logprob: -5.147168159484863
    4. '),' → logprob: -5.897168159484863
    5. '-' → logprob: -6.647168159484863
    6. ',start' → logprob: -6.772168159484863
    7. ' ,' → logprob: -7.147168159484863
    8. ')' → logprob: -7.272168159484863
    9. ' -' → logprob: -7.397168159484863
    10. '(start' → logprob: -8.772168159484863

Token 250: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.1557283111615106e-05
    2. ' ' → logprob: -10.125041961669922
    3. '```' → logprob: -14.125041961669922
    4. '2' → logprob: -15.500041961669922
    5. '   ' → logprob: -15.625041961669922
    6. '
' → logprob: -16.500041961669922
    7. ')' → logprob: -16.625041961669922
    8. ',' → logprob: -17.500041961669922
    9. '۱' → logprob: -17.937541961669922
    10. '``' → logprob: -18.437541961669922

Token 251: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -12.125007629394531
    3. '2' → logprob: -13.000007629394531
    4. '```' → logprob: -15.250007629394531
    5. '   ' → logprob: -16.12500762939453
    6. '
' → logprob: -17.25000762939453
    7. ')' → logprob: -18.31250762939453
    8. '

' → logprob: -19.12500762939453
    9. '۱' → logprob: -19.37500762939453
    10. '``' → logprob: -19.43750762939453

Token 252: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011331788846291602
    2. ')' → logprob: -9.875113487243652
    3. ',start' → logprob: -10.250113487243652
    4. ' ,' → logprob: -10.625113487243652
    5. ',)' → logprob: -13.875113487243652
    6. ',
' → logprob: -13.875113487243652
    7. '[start' → logprob: -16.375112533569336
    8. ' )' → logprob: -17.500112533569336
    9. '‌,' → logprob: -17.625112533569336
    10. ',

' → logprob: -17.625112533569336

Token 253: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.07889264822006226
    2. ' start' → logprob: -2.578892707824707
    3. ')' → logprob: -13.453892707824707
    4. ' ' → logprob: -14.703892707824707
    5. '   ' → logprob: -15.078892707824707
    6. '[start' → logprob: -15.203892707824707
    7. '	start' → logprob: -16.07889175415039
    8. '(start' → logprob: -16.45389175415039
    9. 'star' → logprob: -16.45389175415039
    10. '0' → logprob: -16.45389175415039

Token 254: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005622077151201665
    2. ')
' → logprob: -7.5005621910095215
    3. ' )' → logprob: -12.00056266784668
    4. '   ' → logprob: -12.87556266784668
    5. ')
' → logprob: -16.12556266784668
    6. '
' → logprob: -16.62556266784668
    7. ')d' → logprob: -16.62556266784668
    8. ' ' → logprob: -16.75056266784668
    9. ')

' → logprob: -17.12556266784668
    10. ' )
' → logprob: -17.62556266784668

Token 255: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03418096527457237
    2. 'heap' → logprob: -3.9091808795928955
    3. 'pq' → logprob: -4.659181118011475
    4. ' heap' → logprob: -5.784181118011475
    5. '
' → logprob: -8.409180641174316
    6. ' pq' → logprob: -8.784180641174316
    7. 'hq' → logprob: -8.784180641174316
    8. '    
' → logprob: -9.034180641174316
    9. 'import' → logprob: -9.534180641174316
    10. 'priority' → logprob: -9.784180641174316

Token 256: ' Q' (ID: 1486)
  Prédit: 'pq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pq' → logprob: -0.683844804763794
    2. 'heap' → logprob: -0.933844804763794
    3. 'hq' → logprob: -2.433844804763794
    4. '   ' → logprob: -4.933844566345215
    5. 'q' → logprob: -5.683844566345215
    6. 'h' → logprob: -6.183844566345215
    7. 'queue' → logprob: -6.683844566345215
    8. 'import' → logprob: -7.808844566345215
    9. 'visited' → logprob: -8.933844566345215
    10. ' heap' → logprob: -9.433844566345215

Token 257: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602475792169571
    2. '=' → logprob: -1.910247564315796
    3. '=[]' → logprob: -11.160247802734375
    4. '.' → logprob: -12.660247802734375
    5. ' ' → logprob: -13.035247802734375
    6. '=[]
' → logprob: -13.660247802734375
    7. ',' → logprob: -14.535247802734375
    8. '.append' → logprob: -15.035247802734375
    9. '   ' → logprob: -15.160247802734375
    10. ')' → logprob: -15.410247802734375

Token 258: ' []
' (ID: 8911)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.028823664411902428
    2. '[]' → logprob: -4.2788238525390625
    3. ' [(' → logprob: -4.2788238525390625
    4. ' []' → logprob: -7.2788238525390625
    5. '[]
' → logprob: -12.903823852539062
    6. '[' → logprob: -13.403823852539062
    7. '([(' → logprob: -16.528823852539062
    8. ' []
' → logprob: -16.778823852539062
    9. '[((' → logprob: -17.028823852539062
    10. ' [' → logprob: -17.278823852539062

Token 259: '   ' (ID: 271)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.38439303636550903
    2. '   ' → logprob: -1.5093929767608643
    3. ' heap' → logprob: -2.3843929767608643
    4. '(heap' → logprob: -5.759393215179443
    5. 'he' → logprob: -6.509393215179443
    6. ' he' → logprob: -8.634392738342285
    7. '<|end|>' → logprob: -8.884392738342285
    8. ',' → logprob: -8.884392738342285
    9. '    
' → logprob: -9.134392738342285
    10. '.heap' → logprob: -9.384392738342285

Token 260: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.10918109863996506
    2. ' heap' → logprob: -2.3591811656951904
    3. '   ' → logprob: -4.734180927276611
    4. 'he' → logprob: -9.73418140411377
    5. 'import' → logprob: -9.98418140411377
    6. '
' → logprob: -10.85918140411377
    7. '(heap' → logprob: -12.48418140411377
    8. '```' → logprob: -12.60918140411377
    9. ' he' → logprob: -12.73418140411377
    10. '    
' → logprob: -13.10918140411377

Token 261: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -5.3596853831550106e-05
    2. '.he' → logprob: -10.000053405761719
    3. '```' → logprob: -12.500053405761719
    4. '.push' → logprob: -13.875053405761719
    5. '.heap' → logprob: -14.375053405761719
    6. 'push' → logprob: -14.500053405761719
    7. '.' → logprob: -14.500053405761719
    8. 'Q' → logprob: -15.000053405761719
    9. '.q' → logprob: -15.500053405761719
    10. '
' → logprob: -15.875053405761719

Token 262: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.0006361891864798963
    2. '.heap' → logprob: -7.625636100769043
    3. '.' → logprob: -8.875636100769043
    4. '.push' → logprob: -12.000636100769043
    5. ' .' → logprob: -14.250636100769043
    6. '.h' → logprob: -14.875636100769043
    7. '.put' → logprob: -15.000636100769043
    8. '.q' → logprob: -15.875636100769043
    9. '.append' → logprob: -16.00063705444336
    10. '​.' → logprob: -16.50063705444336

Token 263: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -5.5577775128767826e-06
    2. 'pp' → logprob: -12.375005722045898
    3. 'ap' → logprob: -13.750005722045898
    4. 'push' → logprob: -16.5000057220459
    5. 'q' → logprob: -16.8750057220459
    6. '```' → logprob: -17.5000057220459
    7. 'a' → logprob: -18.2500057220459
    8. '[' → logprob: -19.2500057220459
    9. 'p' → logprob: -19.3750057220459
    10. '(app' → logprob: -19.5000057220459

Token 264: 'ush' (ID: 1776)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.39504265785217285
    2. 'app' → logprob: -1.7700426578521729
    3. 'p' → logprob: -2.145042657852173
    4. 'push' → logprob: -3.895042657852173
    5. 'q' → logprob: -4.520042419433594
    6. 'pp' → logprob: -5.145042419433594
    7. 'ush' → logprob: -6.645042419433594
    8. 'qp' → logprob: -8.770042419433594
    9. 'sp' → logprob: -9.270042419433594
    10. 'op' → logprob: -9.645042419433594

Token 265: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -0.0001105762057704851
    2. '(' → logprob: -9.125110626220703
    3. ' (' → logprob: -13.500110626220703
    4. '((' → logprob: -15.750110626220703
    5. '(Qt' → logprob: -17.750110626220703
    6. ' ' → logprob: -17.875110626220703
    7. ',Q' → logprob: -17.875110626220703
    8. '```' → logprob: -18.250110626220703
    9. ')' → logprob: -18.750110626220703
    10. '(Py' → logprob: -19.000110626220703

Token 266: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16649329662322998
    2. ',' → logprob: -1.91649329662323
    3. '((' → logprob: -5.5414934158325195
    4. ' (' → logprob: -6.2914934158325195
    5. ' ,' → logprob: -8.79149341583252
    6. ')' → logprob: -8.79149341583252
    7. ',(' → logprob: -9.41649341583252
    8. '(Q' → logprob: -10.04149341583252
    9. ' ' → logprob: -10.41649341583252
    10. '(start' → logprob: -12.41649341583252

Token 267: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004421097692102194
    2. ' (' → logprob: -5.504421234130859
    3. '(start' → logprob: -8.00442123413086
    4. '0' → logprob: -12.00442123413086
    5. '(s' → logprob: -13.37942123413086
    6. ' ' → logprob: -14.87942123413086
    7. '(Start' → logprob: -16.00442123413086
    8. ')' → logprob: -16.25442123413086
    9. '((' → logprob: -16.75442123413086
    10. '   ' → logprob: -16.75442123413086

Token 268: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.500004768371582
    3. 'd' → logprob: -13.875004768371582
    4. '(' → logprob: -15.375004768371582
    5. '   ' → logprob: -17.0000057220459
    6. '۰' → logprob: -19.2500057220459
    7. '```' → logprob: -19.3750057220459
    8. ',' → logprob: -19.5000057220459
    9. ')' → logprob: -19.7500057220459
    10. '
' → logprob: -20.2500057220459

Token 269: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003122247871942818
    2. ',start' → logprob: -8.375311851501465
    3. ' ,' → logprob: -9.500311851501465
    4. ')' → logprob: -12.375311851501465
    5. '[start' → logprob: -14.000311851501465
    6. ',
' → logprob: -14.875311851501465
    7. 'start' → logprob: -15.500311851501465
    8. ',end' → logprob: -15.750311851501465
    9. ',)' → logprob: -16.00031280517578
    10. '<|end|>' → logprob: -16.00031280517578

Token 270: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.01815052703022957
    2. ' start' → logprob: -4.018150329589844
    3. '[start' → logprob: -14.393150329589844
    4. '(start' → logprob: -17.393150329589844
    5. ')' → logprob: -17.768150329589844
    6. ' ' → logprob: -18.393150329589844
    7. '=start' → logprob: -18.518150329589844
    8. ':start' → logprob: -18.643150329589844
    9. ',start' → logprob: -18.768150329589844
    10. '	start' → logprob: -18.893150329589844

Token 271: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0036543605383485556
    2. ')' → logprob: -5.628654479980469
    3. '))
' → logprob: -9.878654479980469
    4. ' ))' → logprob: -13.503654479980469
    5. ')))' → logprob: -14.503654479980469
    6. '   ' → logprob: -15.378654479980469
    7. ')
' → logprob: -15.503654479980469
    8. '));' → logprob: -15.503654479980469
    9. '))

' → logprob: -15.878654479980469
    10. '),' → logprob: -16.50365447998047

Token 272: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20943927764892578
    2. ' while' → logprob: -1.8344392776489258
    3. 'while' → logprob: -3.834439277648926
    4. '    
' → logprob: -5.709439277648926
    5. ')' → logprob: -6.084439277648926
    6. '	while' → logprob: -6.834439277648926
    7. '
' → logprob: -7.709439277648926
    8. ' 
' → logprob: -8.834439277648926
    9. ',' → logprob: -9.459439277648926
    10. '  
' → logprob: -9.709439277648926

Token 273: ' def' (ID: 1056)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.01472444087266922
    2. ' while' → logprob: -4.264724254608154
    3. '   ' → logprob: -7.514724254608154
    4. '	while' → logprob: -11.764724731445312
    5. '
' → logprob: -11.889724731445312
    6. '    
' → logprob: -14.264724731445312
    7. '```' → logprob: -15.639724731445312
    8. ' 
' → logprob: -15.889724731445312
    9. 'While' → logprob: -16.014724731445312
    10. '  
' → logprob: -17.514724731445312

Token 274: ' should' (ID: 1757)
  Prédit: ' relax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' relax' → logprob: -0.1306941956281662
    2. ' process' → logprob: -2.8806941509246826
    3. ' visit' → logprob: -3.5056941509246826
    4. 'rel' → logprob: -4.755694389343262
    5. ' pop' → logprob: -5.505694389343262
    6. ' push' → logprob: -5.630694389343262
    7. ' extract' → logprob: -5.630694389343262
    8. 'pop' → logprob: -6.005694389343262
    9. 'process' → logprob: -6.130694389343262
    10. ' while' → logprob: -6.380694389343262

Token 275: '_update' (ID: 19528)
  Prédit: '_continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_continue' → logprob: -0.34280112385749817
    2. '_pop' → logprob: -1.7178010940551758
    3. '_visit' → logprob: -3.217801094055176
    4. '_stop' → logprob: -3.842801094055176
    5. '_update' → logprob: -3.967801094055176
    6. '_pro' → logprob: -5.217801094055176
    7. 'continue' → logprob: -5.467801094055176
    8. '_push' → logprob: -5.467801094055176
    9. '_rel' → logprob: -5.717801094055176
    10. '_use' → logprob: -5.842801094055176

Token 276: '(u' (ID: 17057)
  Prédit: '(dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -0.6819661855697632
    2. '(u' → logprob: -1.5569661855697632
    3. '(curr' → logprob: -2.4319663047790527
    4. '(current' → logprob: -2.4319663047790527
    5. '(d' → logprob: -3.1819663047790527
    6. '(cur' → logprob: -4.056966304779053
    7. '(prev' → logprob: -4.181966304779053
    8. '(distance' → logprob: -4.306966304779053
    9. '(node' → logprob: -5.181966304779053
    10. '(' → logprob: -5.306966304779053

Token 277: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017016702622640878
    2. ' ,' → logprob: -9.37516975402832
    3. ',u' → logprob: -10.37516975402832
    4. '):' → logprob: -11.50016975402832
    5. 'cost' → logprob: -11.50016975402832
    6. ',v' → logprob: -11.87516975402832
    7. ',
' → logprob: -12.25016975402832
    8. 'u' → logprob: -12.87516975402832
    9. 'dist' → logprob: -13.00016975402832
    10. '   ' → logprob: -13.12516975402832

Token 278: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.2778121829032898
    2. 'w' → logprob: -1.6528122425079346
    3. 'dist' → logprob: -4.2778120040893555
    4. 'new' → logprob: -4.6528120040893555
    5. 'weight' → logprob: -4.9028120040893555
    6. 'cost' → logprob: -4.9028120040893555
    7. 'd' → logprob: -5.6528120040893555
    8. ' v' → logprob: -6.1528120040893555
    9. 'alt' → logprob: -6.4028120040893555
    10. ' w' → logprob: -6.7778120040893555

Token 279: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015026038512587547
    2. '):' → logprob: -4.265026092529297
    3. ' ,' → logprob: -7.765026092529297
    4. '):
' → logprob: -7.890026092529297
    5. ' ):' → logprob: -11.390026092529297
    6. ',
' → logprob: -11.515026092529297
    7. ')' → logprob: -11.640026092529297
    8. '   ' → logprob: -11.765026092529297
    9. ',u' → logprob: -12.952526092529297
    10. ' ' → logprob: -12.952526092529297

Token 280: ' cost' (ID: 3097)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.4941016435623169
    2. 'weight' → logprob: -1.869101643562317
    3. 'a' → logprob: -2.1191015243530273
    4. ' w' → logprob: -3.3691015243530273
    5. 'cost' → logprob: -3.3691015243530273
    6. ' weight' → logprob: -3.9941015243530273
    7. ' cost' → logprob: -5.119101524353027
    8. ' a' → logprob: -5.744101524353027
    9. 'edge' → logprob: -5.744101524353027
    10. 'dist' → logprob: -5.744101524353027

Token 281: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01563003845512867
    2. ',' → logprob: -4.26563024520874
    3. '):
' → logprob: -6.76563024520874
    4. ')' → logprob: -8.765629768371582
    5. ' ):' → logprob: -9.140629768371582
    6. '):
' → logprob: -11.765629768371582
    7. ')):' → logprob: -11.765629768371582
    8. '   ' → logprob: -11.890629768371582
    9. '_' → logprob: -12.390629768371582
    10. ' ,' → logprob: -12.390629768371582

Token 282: ' weight' (ID: 6049)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weight' → logprob: -1.0036057233810425
    2. 'use' → logprob: -1.1286057233810425
    3. ' weight' → logprob: -2.253605842590332
    4. 'w' → logprob: -3.253605842590332
    5. ' use' → logprob: -3.503605842590332
    6. 'nl' → logprob: -3.628605842590332
    7. 'd' → logprob: -3.753605842590332
    8. 'dist' → logprob: -4.378605842590332
    9. 'Q' → logprob: -5.003605842590332
    10. 'index' → logprob: -5.253605842590332

Token 283: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.021529188379645348
    2. '):
' → logprob: -3.896529197692871
    3. ',' → logprob: -7.271529197692871
    4. ')' → logprob: -9.521529197692871
    5. '):
' → logprob: -9.771529197692871
    6. ')):' → logprob: -9.771529197692871
    7. ' ):' → logprob: -10.021529197692871
    8. '   ' → logprob: -11.396529197692871
    9. '):

' → logprob: -11.646529197692871
    10. '_' → logprob: -12.021529197692871

Token 284: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2835182547569275
    2. '    ' → logprob: -2.9085183143615723
    3. ' 
' → logprob: -2.9085183143615723
    4. '   ' → logprob: -3.0335183143615723
    5. ' return' → logprob: -3.7835183143615723
    6. ' ' → logprob: -3.9085183143615723
    7. '<|end|>' → logprob: -3.9085183143615723
    8. ':' → logprob: -4.658518314361572
    9. ':return' → logprob: -5.908518314361572
    10. ')' → logprob: -6.158518314361572

Token 285: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5458276271820068
    2. 'return' (adapté à ' return') → logprob: -0.9208276271820068
    3. '   ' → logprob: -4.295827865600586
    4. '       ' → logprob: -5.670827865600586
    5. ' if' → logprob: -5.670827865600586
    6. 'if' → logprob: -6.545827865600586
    7. '    ' → logprob: -8.045827865600586
    8. '           ' → logprob: -9.795827865600586
    9. '
' → logprob: -10.545827865600586
    10. '	return' → logprob: -10.920827865600586

Token 286: ' d' (ID: 272)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -1.0264393091201782
    2. ' cost' → logprob: -1.4014393091201782
    3. 'd' → logprob: -1.5264393091201782
    4. ' d' → logprob: -1.9014393091201782
    5. ' weight' → logprob: -4.276439189910889
    6. 'weight' → logprob: -4.526439189910889
    7. '(cost' → logprob: -6.401439189910889
    8. '(d' → logprob: -7.401439189910889
    9. ' (' → logprob: -8.151439666748047
    10. 'use' → logprob: -8.151439666748047

Token 287: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.020610328763723373
    2. '[u' → logprob: -3.8956103324890137
    3. 'v' → logprob: -9.895609855651855
    4. '[' → logprob: -11.395609855651855
    5. '<v' → logprob: -14.020609855651855
    6. '[d' → logprob: -14.145609855651855
    7. 'u' → logprob: -14.270609855651855
    8. ' v' → logprob: -14.270609855651855
    9. '[c' → logprob: -14.270609855651855
    10. ' [' → logprob: -14.270609855651855

Token 288: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5720033049583435
    2. '[u' → logprob: -0.9470033049583435
    3. ']>' → logprob: -3.4470033645629883
    4. '[' → logprob: -4.697003364562988
    5. '>' → logprob: -5.822003364562988
    6. ']+' → logprob: -6.822003364562988
    7. '[v' → logprob: -7.197003364562988
    8. 'u' → logprob: -7.447003364562988
    9. ' ]' → logprob: -7.697003364562988
    10. ' >' → logprob: -8.197003364562988

Token 289: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5545184016227722
    2. '>' → logprob: -0.9295184016227722
    3. '[u' → logprob: -3.804518461227417
    4. '[' → logprob: -4.929518222808838
    5. 'u' → logprob: -8.179518699645996
    6. '+' → logprob: -8.679518699645996
    7. '>[' → logprob: -9.179518699645996
    8. 'cost' → logprob: -9.179518699645996
    9. '[v' → logprob: -9.429518699645996
    10. ' +' → logprob: -9.429518699645996

Token 290: ' cost' (ID: 3097)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.01264914870262146
    2. 'cost' → logprob: -4.387649059295654
    3. ' d' → logprob: -9.262649536132812
    4. ' cost' → logprob: -11.137649536132812
    5. '   ' → logprob: -11.637649536132812
    6. '	d' → logprob: -11.762649536132812
    7. 'u' → logprob: -12.012649536132812
    8. '(cost' → logprob: -12.762649536132812
    9. 'c' → logprob: -14.137649536132812
    10. '    ' → logprob: -14.762649536132812

Token 291: ' +' (ID: 659)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03224276751279831
    2. 'and' → logprob: -3.782242774963379
    3. '<|end|>' → logprob: -5.282242774963379
    4. ' +' → logprob: -6.407242774963379
    5. '+' → logprob: -6.532242774963379
    6. '   ' → logprob: -8.157242774963379
    7. '
' → logprob: -8.907242774963379
    8. '<|end|>' → logprob: -9.407242774963379
    9. ' ' → logprob: -9.532242774963379
    10. '       ' → logprob: -10.032242774963379

Token 292: ' weight' (ID: 6049)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weight' → logprob: -0.00415248004719615
    2. ' weight' → logprob: -5.504152297973633
    3. 'use' → logprob: -10.004152297973633
    4. '(weight' → logprob: -11.004152297973633
    5. '   ' → logprob: -12.879152297973633
    6. 'nl' → logprob: -13.129152297973633
    7. 'get' → logprob: -13.129152297973633
    8. 'cost' → logprob: -13.379152297973633
    9. 'weig' → logprob: -14.004152297973633
    10. 'w' → logprob: -14.504152297973633

Token 293: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 294: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 295: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03416414186358452
    2. ' for' → logprob: -4.034163951873779
    3. '<|end|>' → logprob: -5.284163951873779
    4. 'for' → logprob: -5.409163951873779
    5. ' while' → logprob: -6.159163951873779
    6. ' ' → logprob: -6.534163951873779
    7. '    
' → logprob: -7.409163951873779
    8. 'while' (adapté à ' while') → logprob: -7.659163951873779
    9. ')' → logprob: -7.909163951873779
    10. ',' → logprob: -8.409164428710938

Token 296: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.2018124759197235
    2. ' Q' → logprob: -1.701812505722046
    3. ' len' → logprob: -8.451812744140625
    4. 'len' → logprob: -9.076812744140625
    5. ' ' → logprob: -10.451812744140625
    6. '	Q' → logprob: -10.451812744140625
    7. '   ' → logprob: -12.701812744140625
    8. '(Q' → logprob: -12.701812744140625
    9. ' ' → logprob: -13.826812744140625
    10. ' not' → logprob: -13.951812744140625

Token 297: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006921819876879454
    2. ':
' → logprob: -7.375692367553711
    3. '):' → logprob: -10.125692367553711
    4. '[' → logprob: -11.125692367553711
    5. ',' → logprob: -13.125692367553711
    6. '>:' → logprob: -13.125692367553711
    7. ' and' → logprob: -13.250692367553711
    8. 'and' → logprob: -14.000692367553711
    9. '.pop' → logprob: -14.000692367553711
    10. ':**' → logprob: -14.250692367553711

Token 298: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010477369651198387
    2. ',' → logprob: -4.635477542877197
    3. ' (' → logprob: -8.635477066040039
    4. ' ,' → logprob: -9.135477066040039
    5. '   ' → logprob: -9.385477066040039
    6. '(u' → logprob: -9.385477066040039
    7. ' u' → logprob: -9.760477066040039
    8. '(' → logprob: -10.385477066040039
    9. ',u' → logprob: -10.385477066040039
    10. 'u' → logprob: -10.760477066040039

Token 299: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.008024048991501331
    2. ' cost' → logprob: -5.008024215698242
    3. 'cur' → logprob: -7.758024215698242
    4. '   ' → logprob: -8.383024215698242
    5. 'c' → logprob: -8.508024215698242
    6. 'dist' → logprob: -9.008024215698242
    7. '(cost' → logprob: -9.133024215698242
    8. 'curr' → logprob: -9.383024215698242
    9. 'current' → logprob: -9.508024215698242
    10. '       ' → logprob: -11.258024215698242

Token 300: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.696889623621246e-06
    2. ' ,' → logprob: -13.37500286102295
    3. ',u' → logprob: -14.37500286102295
    4. ',current' → logprob: -15.12500286102295
    5. '_,' → logprob: -15.75000286102295
    6. ',
' → logprob: -16.125001907348633
    7. 'u' → logprob: -18.000001907348633
    8. ',c' → logprob: -18.250001907348633
    9. ',node' → logprob: -18.250001907348633
    10. ',v' → logprob: -18.250001907348633

Token 301: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.002660435391589999
    2. ' u' → logprob: -6.002660274505615
    3. 'v' → logprob: -9.252660751342773
    4. 'node' → logprob: -10.127660751342773
    5. '   ' → logprob: -10.627660751342773
    6. 'cur' → logprob: -11.502660751342773
    7. ' ' → logprob: -12.627660751342773
    8. '```' → logprob: -13.002660751342773
    9. '    
' → logprob: -13.127660751342773
    10. ' node' → logprob: -13.377660751342773

Token 302: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759410262107849
    2. ' =' → logprob: -0.8259410262107849
    3. '   ' → logprob: -13.57594108581543
    4. ',' → logprob: -16.32594108581543
    5. ' ' → logprob: -16.32594108581543
    6. ')' → logprob: -16.70094108581543
    7. '=u' → logprob: -17.07594108581543
    8. '	' → logprob: -18.07594108581543
    9. ')=' → logprob: -18.07594108581543
    10. '=
' → logprob: -18.57594108581543

Token 303: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.1602243334054947
    2. ' heap' → logprob: -1.9102243185043335
    3. 'he' → logprob: -15.910223960876465
    4. '(heap' → logprob: -17.03522491455078
    5. '.heap' → logprob: -17.16022491455078
    6. '_heap' → logprob: -17.91022491455078
    7. '   ' → logprob: -18.91022491455078
    8. ' he' → logprob: -19.16022491455078
    9. 'Heap' → logprob: -19.66022491455078
    10. 'queue' → logprob: -19.91022491455078

Token 304: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.375
    3. 'Q' → logprob: -17.375
    4. 'pop' → logprob: -17.875
    5. 'p' → logprob: -18.25
    6. 'app' → logprob: -18.75
    7. 'op' → logprob: -19.875
    8. '
' → logprob: -20.125
    9. 'he' → logprob: -20.125
    10. 'ql' → logprob: -20.375

Token 305: '.he' (ID: 67786)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0033793572802096605
    2. 'app' → logprob: -6.1283793449401855
    3. '.he' → logprob: -7.0033793449401855
    4. 'op' → logprob: -8.628379821777344
    5. 'pop' → logprob: -9.503379821777344
    6. 'he' → logprob: -11.378379821777344
    7. '[' → logprob: -11.628379821777344
    8. '.pop' → logprob: -13.003379821777344
    9. '```' → logprob: -13.253379821777344
    10. 'pp' → logprob: -13.253379821777344

Token 306: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.00010723850573413074
    2. 'pp' → logprob: -9.500106811523438
    3. 'q' → logprob: -10.625106811523438
    4. 'ap' → logprob: -12.625106811523438
    5. '[' → logprob: -12.750106811523438
    6. 'pop' → logprob: -14.500106811523438
    7. '```' → logprob: -15.250106811523438
    8. 'appe' → logprob: -15.375106811523438
    9. 'p' → logprob: -15.500106811523438
    10. 'qp' → logprob: -15.750106811523438

Token 307: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.0512111559510231
    2. 'ush' → logprob: -3.05121111869812
    3. 'q' → logprob: -6.176211357116699
    4. 'p' → logprob: -8.4262113571167
    5. 'app' → logprob: -8.6762113571167
    6. 'pop' → logprob: -9.3012113571167
    7. '[' → logprob: -11.4262113571167
    8. 'u' → logprob: -11.6762113571167
    9. 'ap' → logprob: -12.0512113571167
    10. 'st' → logprob: -12.1762113571167

Token 308: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -2.1008713702030946e-06
    2. '(' → logprob: -13.250001907348633
    3. 'Q' → logprob: -15.875001907348633
    4. '(
' → logprob: -16.000001907348633
    5. ',Q' → logprob: -17.500001907348633
    6. ' (' → logprob: -17.875001907348633
    7. '   ' → logprob: -18.250001907348633
    8. '	Q' → logprob: -19.875001907348633
    9. ' Q' → logprob: -20.125001907348633
    10. ',' → logprob: -20.250001907348633

Token 309: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028076060116291046
    2. ')
' → logprob: -5.8778076171875
    3. ')
' → logprob: -13.6278076171875
    4. ')

' → logprob: -14.3778076171875
    5. ' )' → logprob: -14.8778076171875
    6. '   ' → logprob: -14.8778076171875
    7. '       ' → logprob: -16.2528076171875
    8. '),' → logprob: -16.3778076171875
    9. '):
' → logprob: -17.3778076171875
    10. ')`' → logprob: -17.5028076171875

Token 310: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003471897915005684
    2. '<|end|>' → logprob: -5.878471851348877
    3. '        
' → logprob: -8.128472328186035
    4. '
' → logprob: -9.378472328186035
    5. '   ' → logprob: -9.378472328186035
    6. ' 
' → logprob: -10.253472328186035
    7. ',' → logprob: -10.253472328186035
    8. ' if' → logprob: -10.628472328186035
    9. ':' → logprob: -10.753472328186035
    10. '  
' → logprob: -10.878472328186035

Token 311: ' process' (ID: 2273)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0171927213668823
    2. '       ' → logprob: -1.1421927213668823
    3. ' if' → logprob: -1.1421927213668823
    4. '   ' → logprob: -9.267192840576172
    5. '
' → logprob: -10.767192840576172
    6. '        
' → logprob: -11.017192840576172
    7. '	if' → logprob: -11.767192840576172
    8. ' 
' → logprob: -12.142192840576172
    9. '           ' → logprob: -13.267192840576172
    10. ' ' → logprob: -13.767192840576172

Token 312: '_neighbors' (ID: 142549)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8551251888275146
    2. ' u' → logprob: -1.1051251888275146
    3. ' =' → logprob: -2.3551251888275146
    4. ' if' → logprob: -3.4801251888275146
    5. 'ed' → logprob: -3.6051251888275146
    6. 's' → logprob: -3.8551251888275146
    7. '=' → logprob: -3.9801251888275146
    8. 'u' → logprob: -4.105125427246094
    9. ' ' → logprob: -4.980125427246094
    10. '(u' → logprob: -5.355125427246094

Token 313: '(n' (ID: 2406)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.6998990178108215
    2. '(' → logprob: -1.5748989582061768
    3. ':' → logprob: -1.9498989582061768
    4. '   ' → logprob: -2.5748989582061768
    5. ' =' → logprob: -3.1998989582061768
    6. ':
' → logprob: -5.199899196624756
    7. '=' → logprob: -5.199899196624756
    8. 'for' → logprob: -5.199899196624756
    9. '       ' → logprob: -5.199899196624756
    10. ' for' → logprob: -5.324899196624756

Token 314: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.07829846441745758
    2. 'L' → logprob: -3.203298568725586
    3. ',' → logprob: -3.703298568725586
    4. 'u' → logprob: -5.328298568725586
    5. ')' → logprob: -5.828298568725586
    6. '[u' → logprob: -7.078298568725586
    7. '(u' → logprob: -8.453298568725586
    8. 'Q' → logprob: -8.578298568725586
    9. '),' → logprob: -8.703298568725586
    10. ',u' → logprob: -8.828298568725586

Token 315: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000654654751997441
    2. '[u' → logprob: -7.500654697418213
    3. ',u' → logprob: -9.500654220581055
    4. ' ,' → logprob: -10.625654220581055
    5. '[' → logprob: -13.875654220581055
    6. ',
' → logprob: -14.125654220581055
    7. '   ' → logprob: -14.625654220581055
    8. 'u' → logprob: -15.000654220581055
    9. ')' → logprob: -17.125654220581055
    10. ' u' → logprob: -17.875654220581055

Token 316: ' d' (ID: 272)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.02652054652571678
    2. ' u' → logprob: -3.6515204906463623
    3. '   ' → logprob: -9.026520729064941
    4. ' cost' → logprob: -11.151520729064941
    5. 'cost' → logprob: -11.151520729064941
    6. 'd' → logprob: -11.401520729064941
    7. '[u' → logprob: -11.401520729064941
    8. 'Q' → logprob: -11.901520729064941
    9. ' ' → logprob: -12.026520729064941
    10. 'def' → logprob: -12.151520729064941

Token 317: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03941468521952629
    2. '[u' → logprob: -3.289414644241333
    3. ',u' → logprob: -6.664414882659912
    4. ' ,' → logprob: -10.164414405822754
    5. 'u' → logprob: -10.289414405822754
    6. '[' → logprob: -11.164414405822754
    7. '   ' → logprob: -11.914414405822754
    8. ',
' → logprob: -13.164414405822754
    9. ',[' → logprob: -15.289414405822754
    10. ' u' → logprob: -15.414414405822754

Token 318: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.11055465042591095
    2. ' u' → logprob: -2.3605546951293945
    3. 'Q' → logprob: -4.9855546951293945
    4. 'cost' → logprob: -6.7355546951293945
    5. ' cost' → logprob: -6.9855546951293945
    6. ' Q' → logprob: -7.2355546951293945
    7. '   ' → logprob: -7.8605546951293945
    8. ',' → logprob: -9.985554695129395
    9. ')' → logprob: -9.985554695129395
    10. '    ' → logprob: -10.360554695129395

Token 319: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05590389668941498
    2. ')' → logprob: -2.930903911590576
    3. '):' → logprob: -7.305903911590576
    4. '   ' → logprob: -8.180903434753418
    5. '):
' → logprob: -11.055903434753418
    6. '       ' → logprob: -11.430903434753418
    7. ' ,' → logprob: -11.555903434753418
    8. ',
' → logprob: -11.680903434753418
    9. ' )' → logprob: -11.805903434753418
    10. ',)' → logprob: -11.930903434753418

Token 320: ' cost' (ID: 3097)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.8904840350151062
    2. 'cost' → logprob: -0.8904840350151062
    3. ' cost' → logprob: -2.640484094619751
    4. ' Q' → logprob: -3.015484094619751
    5. 'use' → logprob: -3.015484094619751
    6. ' use' → logprob: -5.515483856201172
    7. 'should' → logprob: -5.765483856201172
    8. 'weight' → logprob: -6.640483856201172
    9. '   ' → logprob: -7.765483856201172
    10. ' should' → logprob: -8.390483856201172

Token 321: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14994406700134277
    2. ',' → logprob: -2.0249440670013428
    3. '   ' → logprob: -6.024944305419922
    4. ')
' → logprob: -6.024944305419922
    5. '       ' → logprob: -6.149944305419922
    6. '):
' → logprob: -9.524944305419922
    7. '):' → logprob: -9.649944305419922
    8. ' )' → logprob: -9.774944305419922
    9. ',
' → logprob: -10.024944305419922
    10. '    ' → logprob: -12.024944305419922

Token 322: ' use' (ID: 1199)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.06517456471920013
    2. ' use' → logprob: -2.8151745796203613
    3. 'Q' → logprob: -7.065174579620361
    4. 'should' → logprob: -7.440174579620361
    5. 'lambda' → logprob: -7.565174579620361
    6. ' Q' → logprob: -7.690174579620361
    7. '   ' → logprob: -8.190174102783203
    8. 'weight' → logprob: -8.315174102783203
    9. ' lambda' → logprob: -8.940174102783203
    10. ' should' → logprob: -10.190174102783203

Token 323: '_weight' (ID: 34711)
  Prédit: '_weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -1.981667537620524e-06
    2. 'weight' → logprob: -14.625001907348633
    3. '_weights' → logprob: -14.625001907348633
    4. '_we' → logprob: -14.875001907348633
    5. '_' → logprob: -15.250001907348633
    6. '_w' → logprob: -15.625001907348633
    7. '_cost' → logprob: -16.000001907348633
    8. '_WEIGHT' → logprob: -17.625001907348633
    9. ')_' → logprob: -17.875001907348633
    10. ' _' → logprob: -17.875001907348633

Token 324: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008107413537800312
    2. ',' → logprob: -5.1331071853637695
    3. '):' → logprob: -6.6331071853637695
    4. ')
' → logprob: -7.6331071853637695
    5. '   ' → logprob: -8.50810718536377
    6. '       ' → logprob: -9.63310718536377
    7. ' )' → logprob: -9.75810718536377
    8. '):
' → logprob: -10.13310718536377
    9. ',)' → logprob: -13.63310718536377
    10. ')

' → logprob: -13.63310718536377

Token 325: ' should' (ID: 1757)
  Prédit: 'should'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'should' → logprob: -0.31672006845474243
    2. 'Q' → logprob: -1.3167200088500977
    3. ' Q' → logprob: -6.566720008850098
    4. ' should' → logprob: -6.816720008850098
    5. 'lambda' → logprob: -7.191720008850098
    6. 'heap' → logprob: -10.191720008850098
    7. 'weight' → logprob: -10.191720008850098
    8. 'd' → logprob: -10.691720008850098
    9. ')' → logprob: -10.816720008850098
    10. ' lambda' → logprob: -11.191720008850098

Token 326: '_update' (ID: 19528)
  Prédit: '_update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_update' → logprob: -2.856408536899835e-05
    2. ')' → logprob: -11.500028610229492
    3. '_' → logprob: -12.125028610229492
    4. ',' → logprob: -13.250028610229492
    5. '_process' → logprob: -13.500028610229492
    6. '_continue' → logprob: -14.000028610229492
    7. '_updates' → logprob: -14.000028610229492
    8. '_updated' → logprob: -14.125028610229492
    9. ')_' → logprob: -14.250028610229492
    10. '_Update' → logprob: -14.375028610229492

Token 327: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.274932143744081e-05
    2. ',' → logprob: -11.125042915344238
    3. ' )' → logprob: -11.375042915344238
    4. ')
' → logprob: -11.500042915344238
    5. '   ' → logprob: -12.375042915344238
    6. '       ' → logprob: -13.500042915344238
    7. ',)' → logprob: -15.375042915344238
    8. ' ' → logprob: -16.000041961669922
    9. ')

' → logprob: -16.125041961669922
    10. ');' → logprob: -16.625041961669922

Token 328: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.05828489735722542
    2. 'heap' → logprob: -3.0582849979400635
    3. ' Q' → logprob: -5.058284759521484
    4. 'v' → logprob: -6.058284759521484
    5. ' heap' → logprob: -7.433284759521484
    6. 'lambda' → logprob: -8.308284759521484
    7. 'he' → logprob: -10.183284759521484
    8. 'weight' → logprob: -10.433284759521484
    9. ' lambda' → logprob: -11.183284759521484
    10. ' v' → logprob: -11.933284759521484

Token 329: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.047134305234067e-05
    2. '   ' → logprob: -11.375030517578125
    3. ')
' → logprob: -11.375030517578125
    4. ' )' → logprob: -12.375030517578125
    5. '       ' → logprob: -13.125030517578125
    6. ',' → logprob: -13.875030517578125
    7. ')

' → logprob: -16.250030517578125
    8. ' ' → logprob: -17.000030517578125
    9. '))' → logprob: -17.250030517578125
    10. ',)' → logprob: -17.625030517578125

Token 330: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.024231284856796265
    2. '
' → logprob: -4.524231433868408
    3. '<|end|>' → logprob: -5.274231433868408
    4. '   ' → logprob: -5.399231433868408
    5. '    
' → logprob: -6.649231433868408
    6. '       ' → logprob: -6.774231433868408
    7. '  
' → logprob: -8.02423095703125
    8. '        
' → logprob: -8.52423095703125
    9. ' def' → logprob: -8.52423095703125
    10. ' 
' → logprob: -9.27423095703125

Token 331: ' return' (ID: 622)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0066733392886817455
    2. '
' → logprob: -5.381673336029053
    3. '<|end|>' → logprob: -6.881673336029053
    4. '    
' → logprob: -8.006673812866211
    5. '   ' → logprob: -8.506673812866211
    6. '       ' → logprob: -9.006673812866211
    7. '        
' → logprob: -9.256673812866211
    8. '  
' → logprob: -9.381673812866211
    9. ' 
' → logprob: -9.381673812866211
    10. ' def' → logprob: -10.131673812866211

Token 332: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.4740825295448303
    2. 'd' → logprob: -0.9740825295448303
    3. '(d' → logprob: -12.724082946777344
    4. '[d' → logprob: -14.349082946777344
    5. '	d' → logprob: -14.599082946777344
    6. '[' → logprob: -14.974082946777344
    7. ' ' → logprob: -15.349082946777344
    8. ')d' → logprob: -15.724082946777344
    9. 'def' → logprob: -15.974082946777344
    10. '_d' → logprob: -15.974082946777344

Token 333: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05576128885149956
    2. '
' → logprob: -2.9307613372802734
    3. '<|end|>' → logprob: -7.180761337280273
    4. '    
' → logprob: -10.305761337280273
    5. '  
' → logprob: -10.680761337280273
    6. '

' → logprob: -11.430761337280273
    7. ' def' → logprob: -11.555761337280273
    8. '        
' → logprob: -11.555761337280273
    9. '   ' → logprob: -11.930761337280273
    10. ' 
' → logprob: -12.055761337280273

Token 334: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0626499131321907
    2. '   ' → logprob: -3.437649965286255
    3. '<|end|>' → logprob: -4.062649726867676
    4. ' def' → logprob: -5.312649726867676
    5. '       ' → logprob: -5.812649726867676
    6. ' 
' → logprob: -7.187649726867676
    7. ':' → logprob: -7.437649726867676
    8. '    ' → logprob: -7.687649726867676
    9. '    
' → logprob: -7.937649726867676
    10. ':def' → logprob: -8.062649726867676

Token 335: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.10048248618841171
    2. ' process' → logprob: -2.35048246383667
    3. 'def' → logprob: -8.225482940673828
    4. ' def' → logprob: -11.850482940673828
    5. 'proces' → logprob: -14.725482940673828
    6. '	process' → logprob: -15.725482940673828
    7. '_process' → logprob: -16.725482940673828
    8. ' proces' → logprob: -17.350482940673828
    9. '(process' → logprob: -17.350482940673828
    10. 'Process' → logprob: -17.350482940673828

Token 336: '_neighbors' (ID: 142549)
  Prédit: '_neighbors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_neighbors' → logprob: -2.3795937522663735e-05
    2. '_' → logprob: -11.12502384185791
    3. 'neighbors' → logprob: -12.50002384185791
    4. '_neighbor' → logprob: -13.00002384185791
    5. '_n' → logprob: -13.87502384185791
    6. '_ne' → logprob: -14.00002384185791
    7. '```' → logprob: -14.87502384185791
    8. '__' → logprob: -16.000022888183594
    9. 'def' → logprob: -16.000022888183594
    10. ' _' → logprob: -16.000022888183594

Token 337: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.572941179503687e-05
    2. '(' → logprob: -10.000045776367188
    3. ' (' → logprob: -15.500045776367188
    4. '(
' → logprob: -17.625045776367188
    5. '(nn' → logprob: -19.500045776367188
    6. '(nx' → logprob: -19.500045776367188
    7. '(noun' → logprob: -19.750045776367188
    8. '(

' → logprob: -19.875045776367188
    9. '(N' → logprob: -20.125045776367188
    10. '(
' → logprob: -20.625045776367188

Token 338: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3636309504508972
    2. ',' → logprob: -1.238631010055542
    3. ',l' → logprob: -4.863630771636963
    4. 'L' → logprob: -4.988630771636963
    5. ',n' → logprob: -8.738631248474121
    6. ' ,' → logprob: -8.988631248474121
    7. '   ' → logprob: -9.738631248474121
    8. ',
' → logprob: -9.988631248474121
    9. ',L' → logprob: -11.238631248474121
    10. 'nl' → logprob: -11.238631248474121

Token 339: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.961759259458631e-06
    2. ' ,' → logprob: -12.500004768371582
    3. ',d' → logprob: -13.875004768371582
    4. ',n' → logprob: -16.5000057220459
    5. ',
' → logprob: -18.0000057220459
    6. 'd' → logprob: -18.0000057220459
    7. '   ' → logprob: -18.1250057220459
    8. 'def' → logprob: -18.2500057220459
    9. ' ' → logprob: -19.0000057220459
    10. ',u' → logprob: -19.0000057220459

Token 340: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.12698175013065338
    2. ' d' → logprob: -2.126981735229492
    3. 'dist' → logprob: -10.376981735229492
    4. ' dist' → logprob: -11.251981735229492
    5. '   ' → logprob: -12.126981735229492
    6. ' distances' → logprob: -14.251981735229492
    7. 'distance' → logprob: -14.564481735229492
    8. '	d' → logprob: -14.814481735229492
    9. ' ' → logprob: -14.876981735229492
    10. '```' → logprob: -15.189481735229492

Token 341: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.8889261304575484e-06
    2. ',u' → logprob: -13.000003814697266
    3. ' ,' → logprob: -13.375003814697266
    4. 'u' → logprob: -17.500003814697266
    5. '[u' → logprob: -19.000003814697266
    6. ',
' → logprob: -19.000003814697266
    7. ',n' → logprob: -19.250003814697266
    8. '[],' → logprob: -19.500003814697266
    9. '_,' → logprob: -20.000003814697266
    10. '   ' → logprob: -20.000003814697266

Token 342: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0009202735964208841
    2. ' u' → logprob: -7.000920295715332
    3. '   ' → logprob: -11.750920295715332
    4. '	u' → logprob: -15.250920295715332
    5. 'node' → logprob: -15.750920295715332
    6. '    ' → logprob: -15.750920295715332
    7. ' ' → logprob: -16.625919342041016
    8. '[u' → logprob: -16.875919342041016
    9. '  ' → logprob: -17.125919342041016
    10. '    
' → logprob: -17.250919342041016

Token 343: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.5776860184123507e-06
    2. ' ,' → logprob: -13.00000286102295
    3. ',
' → logprob: -15.50000286102295
    4. ',u' → logprob: -17.375001907348633
    5. '   ' → logprob: -17.500001907348633
    6. ',n' → logprob: -19.000001907348633
    7. '_,' → logprob: -19.125001907348633
    8. 's' → logprob: -19.125001907348633
    9. '‌,' → logprob: -19.250001907348633
    10. ',
' → logprob: -19.625001907348633

Token 344: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.2188587188720703
    2. 'use' → logprob: -1.7188587188720703
    3. ' cost' → logprob: -4.34385871887207
    4. ' use' → logprob: -5.59385871887207
    5. 'u' → logprob: -7.96885871887207
    6. 'weight' → logprob: -8.84385871887207
    7. 'd' → logprob: -10.96885871887207
    8. ' u' → logprob: -11.21885871887207
    9. 'Q' → logprob: -11.46885871887207
    10. 'process' → logprob: -11.71885871887207

Token 345: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.034592388459714e-06
    2. ' ,' → logprob: -12.125005722045898
    3. ',
' → logprob: -15.250005722045898
    4. '   ' → logprob: -15.500005722045898
    5. '):' → logprob: -18.0000057220459
    6. '_,' → logprob: -18.0000057220459
    7. ',u' → logprob: -18.3750057220459
    8. ',n' → logprob: -18.7500057220459
    9. '),' → logprob: -18.8750057220459
    10. '):
' → logprob: -19.1250057220459

Token 346: ' use' (ID: 1199)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.038108162581920624
    2. ' use' → logprob: -3.2881081104278564
    3. '   ' → logprob: -10.038107872009277
    4. 'weight' → logprob: -11.788107872009277
    5. ' ' → logprob: -12.663107872009277
    6. '	use' → logprob: -13.163107872009277
    7. '    ' → logprob: -13.413107872009277
    8. '  ' → logprob: -13.788107872009277
    9. ',use' → logprob: -13.913107872009277
    10. ' weight' → logprob: -14.038107872009277

Token 347: '_weight' (ID: 34711)
  Prédit: '_weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -3.4121114822482923e-06
    2. 'weight' → logprob: -13.375003814697266
    3. '_weights' → logprob: -13.500003814697266
    4. '_cost' → logprob: -16.125003814697266
    5. '_' → logprob: -16.375003814697266
    6. '_w' → logprob: -16.750003814697266
    7. '_WEIGHT' → logprob: -17.250003814697266
    8. ' _' → logprob: -17.750003814697266
    9. '```' → logprob: -18.000003814697266
    10. '_we' → logprob: -18.125003814697266

Token 348: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.554343366995454e-05
    2. '):' → logprob: -9.875085830688477
    3. '):
' → logprob: -10.875085830688477
    4. '   ' → logprob: -11.500085830688477
    5. ',
' → logprob: -13.125085830688477
    6. ' ,' → logprob: -13.125085830688477
    7. '):
' → logprob: -15.875085830688477
    8. ',u' → logprob: -15.875085830688477
    9. '       ' → logprob: -16.125085830688477
    10. 'def' → logprob: -16.375085830688477

Token 349: ' should' (ID: 1757)
  Prédit: 'should'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'should' → logprob: -0.000493937055580318
    2. ' should' → logprob: -7.625494003295898
    3. '   ' → logprob: -13.000494003295898
    4. 'process' → logprob: -13.625494003295898
    5. 'Q' → logprob: -13.750494003295898
    6. 'neighbors' → logprob: -15.125494003295898
    7. 'def' → logprob: -15.500494003295898
    8. '_should' → logprob: -16.0004940032959
    9. 'neighbor' → logprob: -16.1254940032959
    10. ' ' → logprob: -16.2504940032959

Token 350: '_update' (ID: 19528)
  Prédit: '_update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_update' → logprob: -7.76759916334413e-05
    2. 'def' → logprob: -9.750077247619629
    3. '_' → logprob: -12.000077247619629
    4. '_process' → logprob: -12.750077247619629
    5. 'update' → logprob: -13.125077247619629
    6. '_Update' → logprob: -13.250077247619629
    7. 'Update' → logprob: -14.000077247619629
    8. '_up' → logprob: -14.750077247619629
    9. '_UPDATE' → logprob: -14.750077247619629
    10. '_continue' → logprob: -14.750077247619629

Token 351: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0564331205387134e-05
    2. ' ,' → logprob: -12.50001049041748
    3. ',u' → logprob: -13.00001049041748
    4. ',
' → logprob: -13.37501049041748
    5. '):' → logprob: -13.50001049041748
    6. ',n' → logprob: -13.75001049041748
    7. 'u' → logprob: -16.250011444091797
    8. ',v' → logprob: -16.500011444091797
    9. ',

' → logprob: -16.750011444091797
    10. ',
' → logprob: -17.000011444091797

Token 352: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.002205451251938939
    2. ' Q' → logprob: -6.1272053718566895
    3. 'queue' → logprob: -11.377205848693848
    4. 'q' → logprob: -12.502205848693848
    5. '   ' → logprob: -13.252205848693848
    6. ' ' → logprob: -13.877205848693848
    7. ' queue' → logprob: -14.627205848693848
    8. '	Q' → logprob: -14.877205848693848
    9. ')' → logprob: -15.127205848693848
    10. '```' → logprob: -15.377205848693848

Token 353: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07893507182598114
    2. '):
' → logprob: -2.578935146331787
    3. '):
' → logprob: -10.203934669494629
    4. ')' → logprob: -12.078934669494629
    5. '   ' → logprob: -13.578934669494629
    6. '):

' → logprob: -14.328934669494629
    7. ':' → logprob: -14.953934669494629
    8. ' ):' → logprob: -15.578934669494629
    9. ',' → logprob: -15.828934669494629
    10. ' ' → logprob: -17.453935623168945

Token 354: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03850134089589119
    2. ' for' → logprob: -3.663501262664795
    3. 'for' → logprob: -4.413501262664795
    4. '    
' → logprob: -11.788501739501953
    5. '	for' → logprob: -12.288501739501953
    6. '   ' → logprob: -13.913501739501953
    7. '
' → logprob: -14.538501739501953
    8. '       ' → logprob: -15.413501739501953
    9. ',' → logprob: -16.288501739501953
    10. '```' → logprob: -16.413501739501953

Token 355: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6270043849945068
    2. 'for' (adapté à ' for') → logprob: -0.8770043849945068
    3. ' for' → logprob: -3.002004384994507
    4. '	for' → logprob: -10.002004623413086
    5. '    
' → logprob: -10.627004623413086
    6. '   ' → logprob: -11.252004623413086
    7. '```' → logprob: -11.877004623413086
    8. '
' → logprob: -13.502004623413086
    9. 'neighbors' → logprob: -13.627004623413086
    10. '       ' → logprob: -14.127004623413086

Token 356: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00706451153382659
    2. '(v' → logprob: -5.007064342498779
    3. ' v' → logprob: -8.007064819335938
    4. ' (' → logprob: -12.257064819335938
    5. 'w' → logprob: -12.507064819335938
    6. 'vv' → logprob: -13.757064819335938
    7. '(' → logprob: -13.882064819335938
    8. '   ' → logprob: -13.882064819335938
    9. 'vertex' → logprob: -14.132064819335938
    10. 'edge' → logprob: -14.632064819335938

Token 357: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011749001714633778
    2. ' ,' → logprob: -9.750117301940918
    3. ',u' → logprob: -9.875117301940918
    4. ',v' → logprob: -12.625117301940918
    5. ',w' → logprob: -13.500117301940918
    6. '‌,' → logprob: -14.625117301940918
    7. ' in' → logprob: -14.875117301940918
    8. 'u' → logprob: -15.125117301940918
    9. ',
' → logprob: -15.125117301940918
    10. ',a' → logprob: -15.750117301940918

Token 358: ' yen' (ID: 34890)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2993728220462799
    2. '*a' → logprob: -2.049372911453247
    3. '*' → logprob: -2.674372911453247
    4. ' a' → logprob: -3.799372911453247
    5. ' *' → logprob: -4.799372673034668
    6. 'w' → logprob: -4.924372673034668
    7. '*w' → logprob: -4.924372673034668
    8. '_a' → logprob: -5.174372673034668
    9. 'weight' → logprob: -6.299372673034668
    10. '_weight' → logprob: -6.299372673034668

Token 359: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008660659193992615
    2. '_cost' → logprob: -5.383660793304443
    3. 'cost' → logprob: -6.133660793304443
    4. ' ,' → logprob: -7.258660793304443
    5. '_weight' → logprob: -7.758660793304443
    6. '_amount' → logprob: -8.633660316467285
    7. '_price' → logprob: -8.758660316467285
    8. '_,' → logprob: -9.258660316467285
    9. 'weight' → logprob: -10.008660316467285
    10. 'price' → logprob: -10.258660316467285

Token 360: ' sn' (ID: 3967)
  Prédit: 'sn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sn' → logprob: -0.25373879075050354
    2. 's' → logprob: -2.5037388801574707
    3. 'time' → logprob: -2.7537388801574707
    4. 'sen' → logprob: -5.003738880157471
    5. 'flight' → logprob: -5.628738880157471
    6. 'ton' → logprob: -5.628738880157471
    7. 'man' → logprob: -5.878738880157471
    8. 'x' → logprob: -6.128738880157471
    9. 't' → logprob: -6.253738880157471
    10. 'r' → logprob: -6.253738880157471

Token 361: 'u' (ID: 84)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2005525678396225
    2. 'ip' → logprob: -3.700552463531494
    3. 'uk' → logprob: -3.825552463531494
    4. 'u' → logprob: -4.200552463531494
    5. 'uke' → logprob: -4.200552463531494
    6. 'e' → logprob: -4.325552463531494
    7. 'p' → logprob: -4.700552463531494
    8. 'sp' → logprob: -4.825552463531494
    9. 'eep' → logprob: -5.075552463531494
    10. 'ack' → logprob: -5.075552463531494

Token 362: 'uk' (ID: 1160)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.21172140538692474
    2. 'm' → logprob: -3.211721420288086
    3. 'b' → logprob: -3.336721420288086
    4. 'c' → logprob: -3.336721420288086
    5. 'p' → logprob: -4.211721420288086
    6. 'r' → logprob: -4.336721420288086
    7. 't' → logprob: -5.836721420288086
    8. ',' → logprob: -5.961721420288086
    9. 'ki' → logprob: -5.961721420288086
    10. 'kk' → logprob: -5.961721420288086

Token 363: ' in' (ID: 306)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9136749505996704
    2. 'a' → logprob: -1.5386749505996704
    3. 'o' → logprob: -1.7886749505996704
    4. 'e' → logprob: -1.9136749505996704
    5. 'ei' → logprob: -4.038674831390381
    6. 'oi' → logprob: -4.163674831390381
    7. 'er' → logprob: -4.663674831390381
    8. 'ai' → logprob: -5.538674831390381
    9. 'im' → logprob: -6.288674831390381
    10. 'su' → logprob: -6.538674831390381

Token 364: ' nl' (ID: 44724)
  Prédit: 'nl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nl' → logprob: -0.14353834092617035
    2. ' nl' → logprob: -2.018538236618042
    3. ' (' → logprob: -8.018538475036621
    4. '(n' → logprob: -8.268538475036621
    5. '(' → logprob: -9.643538475036621
    6. '
' → logprob: -10.018538475036621
    7. '[n' → logprob: -11.456038475036621
    8. 'd' → logprob: -11.581038475036621
    9. 'n' → logprob: -11.581038475036621
    10. '(
' → logprob: -11.893538475036621

Token 365: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.2113979209971149e-05
    2. 'u' → logprob: -12.250012397766113
    3. '[' → logprob: -12.625012397766113
    4. '   ' → logprob: -13.500012397766113
    5. ',u' → logprob: -13.875012397766113
    6. ',' → logprob: -14.000012397766113
    7. ' [' → logprob: -15.000012397766113
    8. '
' → logprob: -15.875012397766113
    9. ' u' → logprob: -16.125011444091797
    10. '[v' → logprob: -16.375011444091797

Token 366: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.011710075661540031
    2. ']:
' → logprob: -5.136710166931152
    3. '):' → logprob: -5.386710166931152
    4. ':' → logprob: -7.261710166931152
    5. ']' → logprob: -8.136710166931152
    6. '):
' → logprob: -9.761710166931152
    7. ']):' → logprob: -9.886710166931152
    8. ']:
' → logprob: -10.261710166931152
    9. '       ' → logprob: -10.761710166931152
    10. '   ' → logprob: -11.511710166931152

Token 367: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00047094907495193183
    2. '        
' → logprob: -9.125471115112305
    3. ' if' → logprob: -9.125471115112305
    4. '        ' → logprob: -10.000471115112305
    5. '<|end|>' → logprob: -10.000471115112305
    6. ',' → logprob: -10.250471115112305
    7. '
' → logprob: -10.250471115112305
    8. '    ' → logprob: -10.500471115112305
    9. ' 
' → logprob: -11.125471115112305
    10. '      ' → logprob: -11.750471115112305

Token 368: ' weight' (ID: 6049)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weight' (adapté à ' weight') → logprob: -0.4251241981983185
    2. ' weight' → logprob: -2.175124168395996
    3. 'w' → logprob: -2.675124168395996
    4. '       ' → logprob: -2.800124168395996
    5. ' w' → logprob: -2.925124168395996
    6. '           ' → logprob: -3.675124168395996
    7. ' if' → logprob: -4.425124168395996
    8. 'if' → logprob: -4.800124168395996
    9. 'wt' → logprob: -6.425124168395996
    10. ' new' → logprob: -7.550124168395996

Token 369: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407805919647217
    2. ' =' → logprob: -0.9740780591964722
    3. ' ' → logprob: -15.224078178405762
    4. '=user' → logprob: -15.224078178405762
    5. ',' → logprob: -15.974078178405762
    6. '=

' → logprob: -16.724077224731445
    7. '=
' → logprob: -16.724077224731445
    8. '＝' → logprob: -16.849077224731445
    9. '=int' → logprob: -17.099077224731445
    10. '<|end|>' → logprob: -17.224077224731445

Token 370: ' yen' (ID: 34890)
  Prédit: 'yen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yen' → logprob: -0.053767550736665726
    2. ' yen' → logprob: -3.178767442703247
    3. 's' → logprob: -4.928767681121826
    4. 'y' → logprob: -6.928767681121826
    5. ' ' → logprob: -8.303767204284668
    6. 'use' → logprob: -8.303767204284668
    7. '   ' → logprob: -8.366267204284668
    8. '(' → logprob: -8.741267204284668
    9. 'sn' → logprob: -8.928767204284668
    10. ' (' → logprob: -8.928767204284668

Token 371: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.03369607403874397
    2. 'if' → logprob: -3.408696174621582
    3. '*' → logprob: -10.283696174621582
    4. ' *' → logprob: -12.033696174621582
    5. ' ' → logprob: -12.533696174621582
    6. '[' → logprob: -12.783696174621582
    7. '   ' → logprob: -13.783696174621582
    8. '
' → logprob: -14.158696174621582
    9. '	if' → logprob: -14.783696174621582
    10. '  ' → logprob: -15.158696174621582

Token 372: ' use' (ID: 1199)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.04860281944274902
    2. ' use' → logprob: -3.048602819442749
    3. '   ' → logprob: -11.798603057861328
    4. '(use' → logprob: -12.673603057861328
    5. '	use' → logprob: -13.673603057861328
    6. ' ' → logprob: -13.923603057861328
    7. '  ' → logprob: -14.173603057861328
    8. 'not' → logprob: -14.548603057861328
    9. ' not' → logprob: -14.923603057861328
    10. 'u' → logprob: -15.048603057861328

Token 373: '_weight' (ID: 34711)
  Prédit: '_weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.0003685861302074045
    2. 'weight' → logprob: -8.250368118286133
    3. '_cost' → logprob: -9.750368118286133
    4. '_we' → logprob: -10.625368118286133
    5. '_use' → logprob: -12.375368118286133
    6. '_w' → logprob: -12.375368118286133
    7. '_' → logprob: -12.875368118286133
    8. ' _' → logprob: -12.875368118286133
    9. 'we' → logprob: -13.500368118286133
    10. '_weights' → logprob: -13.875368118286133

Token 374: ' ==' (ID: 951)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.0379888080060482
    2. '==' → logprob: -3.6629889011383057
    3. 'else' → logprob: -4.662988662719727
    4. ' ==' → logprob: -6.162988662719727
    5. '    ' → logprob: -10.287988662719727
    6. ' ' → logprob: -11.162988662719727
    7. '        ' → logprob: -11.412988662719727
    8. '   ' → logprob: -12.537988662719727
    9. '       ' → logprob: -12.912988662719727
    10. '	else' → logprob: -13.037988662719727

Token 375: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2349357157945633
    2. ''' → logprob: -2.359935760498047
    3. ''y' → logprob: -2.484935760498047
    4. '0' → logprob: -3.734935760498047
    5. 'True' → logprob: -6.359935760498047
    6. '1' → logprob: -6.484935760498047
    7. ' "' → logprob: -6.609935760498047
    8. ' ' → logprob: -6.984935760498047
    9. ' '' → logprob: -8.109935760498047
    10. '"A' → logprob: -8.234935760498047

Token 376: 'yen' (ID: 31069)
  Prédit: 'yen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yen' → logprob: -0.13209182024002075
    2. '"' → logprob: -2.257091760635376
    3. 'y' → logprob: -5.007091999053955
    4. ''' → logprob: -5.507091999053955
    5. 'Y' → logprob: -6.257091999053955
    6. '1' → logprob: -6.257091999053955
    7. ''y' → logprob: -6.507091999053955
    8. 'a' → logprob: -7.132091999053955
    9. '0' → logprob: -7.132091999053955
    10. ' yen' → logprob: -8.257091522216797

Token 377: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.01552441157400608
    2. ' else' → logprob: -4.890524387359619
    3. ' "' → logprob: -5.015524387359619
    4. 'else' → logprob: -6.890524387359619
    5. '```' → logprob: -10.015524864196777
    6. '   ' → logprob: -10.140524864196777
    7. 'yen' → logprob: -10.140524864196777
    8. ' yen' → logprob: -10.515524864196777
    9. ')' → logprob: -10.890524864196777
    10. ')"' → logprob: -11.015524864196777

Token 378: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.0028099864721298218
    2. 'else' → logprob: -5.877810001373291
    3. ' ' → logprob: -12.877809524536133
    4. '	else' → logprob: -14.002809524536133
    5. '        ' → logprob: -14.127809524536133
    6. '    ' → logprob: -14.502809524536133
    7. '       ' → logprob: -15.502809524536133
    8. '   ' → logprob: -15.877809524536133
    9. '     ' → logprob: -16.877809524536133
    10. ' elif' → logprob: -17.127809524536133

Token 379: ' sn' (ID: 3967)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04876074567437172
    2. ' sn' → logprob: -3.0487606525421143
    3. 'sn' → logprob: -9.798760414123535
    4. ' s' → logprob: -10.298760414123535
    5. ' ' → logprob: -10.423760414123535
    6. '   ' → logprob: -10.923760414123535
    7. '	s' → logprob: -11.298760414123535
    8. ' sna' → logprob: -12.173760414123535
    9. '  ' → logprob: -12.673760414123535
    10. 'S' → logprob: -13.048760414123535

Token 380: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.00028135839966125786
    2. 'e' → logprob: -8.87528133392334
    3. 'ukk' → logprob: -10.00028133392334
    4. 'a' → logprob: -10.25028133392334
    5. 'uu' → logprob: -11.00028133392334
    6. 'uk' → logprob: -11.68778133392334
    7. 'ook' → logprob: -12.75028133392334
    8. 'ukkit' → logprob: -12.93778133392334
    9. '	u' → logprob: -13.00028133392334
    10. 'n' → logprob: -13.31278133392334

Token 381: 'uk' (ID: 1160)
  Prédit: 'uk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uk' → logprob: -0.05704754218459129
    2. 'k' → logprob: -3.5570476055145264
    3. 'u' → logprob: -3.6820476055145264
    4. 'ok' → logprob: -8.807047843933105
    5. 'ku' → logprob: -8.869547843933105
    6. 'kk' → logprob: -9.057047843933105
    7. 'ukk' → logprob: -9.432047843933105
    8. '```' → logprob: -9.557047843933105
    9. '   ' → logprob: -9.744547843933105
    10. 'ук' → logprob: -9.807047843933105

Token 382: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00319993169978261
    2. '
' → logprob: -6.378200054168701
    3. '<|end|>' → logprob: -7.253200054168701
    4. '        
' → logprob: -7.378200054168701
    5. '  
' → logprob: -10.003199577331543
    6. ' ' → logprob: -11.128199577331543
    7. ' if' → logprob: -11.378199577331543
    8. '      ' → logprob: -11.503199577331543
    9. '       
' → logprob: -11.503199577331543
    10. ' 
' → logprob: -11.503199577331543

Token 383: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04537024721503258
    2. '
' → logprob: -3.42037034034729
    3. '        
' → logprob: -4.795370101928711
    4. '  
' → logprob: -6.545370101928711
    5. '<|end|>' → logprob: -6.795370101928711
    6. ' if' → logprob: -8.170370101928711
    7. ' 
' → logprob: -8.670370101928711
    8. ',' → logprob: -8.920370101928711
    9. '    
' → logprob: -10.045370101928711
    10. '            
' → logprob: -10.170370101928711

Token 384: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.47503823041915894
    2. ' if' → logprob: -1.2250382900238037
    3. '       ' → logprob: -2.4750382900238037
    4. '           ' → logprob: -8.725038528442383
    5. '   ' → logprob: -10.475038528442383
    6. '
' → logprob: -10.975038528442383
    7. '               ' → logprob: -12.350038528442383
    8. '        
' → logprob: -12.600038528442383
    9. '        ' → logprob: -13.100038528442383
    10. '	if' → logprob: -13.100038528442383

Token 385: ' should' (ID: 1757)
  Prédit: 'should'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'should' → logprob: -0.10022759437561035
    2. ' should' → logprob: -2.3502275943756104
    3. '   ' → logprob: -11.225227355957031
    4. 'd' → logprob: -12.725227355957031
    5. '_should' → logprob: -13.725227355957031
    6. ' d' → logprob: -14.100227355957031
    7. ' ' → logprob: -14.350227355957031
    8. '.should' → logprob: -14.475227355957031
    9. '       ' → logprob: -14.725227355957031
    10. '           ' → logprob: -15.350227355957031

Token 386: '_update' (ID: 19528)
  Prédit: '_update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_update' → logprob: -3.1782583391759545e-05
    2. 'update' → logprob: -10.375031471252441
    3. 'Update' → logprob: -15.875031471252441
    4. '(u' → logprob: -16.375032424926758
    5. '_UPDATE' → logprob: -16.875032424926758
    6. ' update' → logprob: -17.000032424926758
    7. '(update' → logprob: -17.250032424926758
    8. 'd' → logprob: -17.875032424926758
    9. 'p' → logprob: -18.125032424926758
    10. '   ' → logprob: -18.375032424926758

Token 387: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.0016534021124243736
    2. '(v' → logprob: -6.62665319442749
    3. '(' → logprob: -8.126653671264648
    4. ' (' → logprob: -10.501653671264648
    5. '[u' → logprob: -13.501653671264648
    6. '(d' → logprob: -13.876653671264648
    7. 'u' → logprob: -14.001653671264648
    8. '(
' → logprob: -14.876653671264648
    9. '(n' → logprob: -15.251653671264648
    10. ' u' → logprob: -15.626653671264648

Token 388: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007804421475157142
    2. ',v' → logprob: -7.7507805824279785
    3. ' ,' → logprob: -8.00078010559082
    4. ',
' → logprob: -11.37578010559082
    5. 'v' → logprob: -13.25078010559082
    6. ' v' → logprob: -15.12578010559082
    7. ',

' → logprob: -15.62578010559082
    8. ')' → logprob: -15.62578010559082
    9. '
' → logprob: -16.25078010559082
    10. ' ' → logprob: -16.37578010559082

Token 389: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00317783304490149
    2. ' v' → logprob: -5.753177642822266
    3. '   ' → logprob: -16.628177642822266
    4. '	v' → logprob: -17.878177642822266
    5. '[v' → logprob: -18.628177642822266
    6. ' ' → logprob: -18.628177642822266
    7. '    ' → logprob: -18.753177642822266
    8. ')v' → logprob: -19.378177642822266
    9. '  ' → logprob: -19.628177642822266
    10. '
' → logprob: -19.628177642822266

Token 390: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013305948814377189
    2. ' ,' → logprob: -6.626330375671387
    3. ',
' → logprob: -13.001330375671387
    4. 'cost' → logprob: -14.876330375671387
    5. 'weight' → logprob: -15.251330375671387
    6. ')' → logprob: -15.376330375671387
    7. ' cost' → logprob: -15.376330375671387
    8. ',

' → logprob: -15.501330375671387
    9. '_,' → logprob: -15.626330375671387
    10. '),' → logprob: -15.876330375671387

Token 391: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0067156096920371056
    2. ' cost' → logprob: -5.006715774536133
    3. '(cost' → logprob: -15.881715774536133
    4. '   ' → logprob: -17.256715774536133
    5. '_cost' → logprob: -18.881715774536133
    6. '.cost' → logprob: -19.256715774536133
    7. ' ' → logprob: -19.256715774536133
    8. '
' → logprob: -19.506715774536133
    9. 'Cost' → logprob: -19.506715774536133
    10. '  ' → logprob: -19.881715774536133

Token 392: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.183501293184236e-05
    2. ' ,' → logprob: -9.87507152557373
    3. ',
' → logprob: -11.50007152557373
    4. ',

' → logprob: -12.25007152557373
    5. ')' → logprob: -13.12507152557373
    6. '),' → logprob: -14.37507152557373
    7. 'weight' → logprob: -14.50007152557373
    8. '+' → logprob: -14.62507152557373
    9. '   ' → logprob: -15.12507152557373
    10. '```' → logprob: -15.37507152557373

Token 393: ' weight' (ID: 6049)
  Prédit: ' weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' weight' → logprob: -0.1602250337600708
    2. 'weight' → logprob: -1.9102250337600708
    3. '(weight' → logprob: -14.535224914550781
    4. ')' → logprob: -16.03522491455078
    5. ' ' → logprob: -16.03522491455078
    6. '_weight' → logprob: -17.16022491455078
    7. '   ' → logprob: -17.16022491455078
    8. ' ' → logprob: -17.16022491455078
    9. 'Weight' → logprob: -17.53522491455078
    10. '
' → logprob: -17.53522491455078

Token 394: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20222681760787964
    2. '):
' → logprob: -1.7022268772125244
    3. ' ):' → logprob: -7.452226638793945
    4. ' ):
' → logprob: -8.827226638793945
    5. ':' → logprob: -10.202226638793945
    6. '):
' → logprob: -10.952226638793945
    7. '       ' → logprob: -11.202226638793945
    8. ')' → logprob: -11.827226638793945
    9. '           ' → logprob: -12.327226638793945
    10. '):

' → logprob: -12.702226638793945

Token 395: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002370893256738782
    2. 'd' → logprob: -6.627370834350586
    3. ' d' → logprob: -7.127370834350586
    4. '               ' → logprob: -9.377370834350586
    5. '       ' → logprob: -9.877370834350586
    6. '          ' → logprob: -10.252370834350586
    7. ':
' → logprob: -10.752370834350586
    8. ')' → logprob: -11.502370834350586
    9. '):
' → logprob: -11.752370834350586
    10. ':' → logprob: -12.252370834350586

Token 396: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.21311208605766296
    2. 'd' (adapté à ' d') → logprob: -1.7131121158599854
    3. '           ' → logprob: -4.588111877441406
    4. '               ' → logprob: -6.588111877441406
    5. '   ' → logprob: -10.463111877441406
    6. '       ' → logprob: -10.588111877441406
    7. ' ' → logprob: -12.213111877441406
    8. '                   ' → logprob: -12.713111877441406
    9. '	d' → logprob: -12.838111877441406
    10. '```' → logprob: -12.963111877441406

Token 397: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -4.36574100604048e-06
    2. 'v' → logprob: -12.375004768371582
    3. '[' → logprob: -17.125003814697266
    4. '```' → logprob: -17.625003814697266
    5. '[u' → logprob: -17.750003814697266
    6. '<v' → logprob: -18.750003814697266
    7. '
' → logprob: -19.000003814697266
    8. '[val' → logprob: -19.125003814697266
    9. '	v' → logprob: -19.500003814697266
    10. ' v' → logprob: -20.750003814697266

Token 398: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8058151006698608
    2. '=' → logprob: -1.1808151006698608
    3. ')' → logprob: -1.9308151006698608
    4. ']' → logprob: -2.3058152198791504
    5. ']=' → logprob: -7.30581521987915
    6. ' )' → logprob: -7.80581521987915
    7. ')=' → logprob: -8.680814743041992
    8. '])' → logprob: -9.555814743041992
    9. ' ]' → logprob: -9.680814743041992
    10. ' ' → logprob: -10.305814743041992

Token 399: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326204538345337
    2. ' =' → logprob: -1.3132619857788086
    3. ' ' → logprob: -16.688262939453125
    4. '.=' → logprob: -17.063262939453125
    5. '[' → logprob: -17.313262939453125
    6. '   ' → logprob: -17.563262939453125
    7. ',' → logprob: -18.188262939453125
    8. '=
' → logprob: -18.188262939453125
    9. '＝' → logprob: -18.313262939453125
    10. ')' → logprob: -18.938262939453125

Token 400: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.04300045222043991
    2. 'cost' → logprob: -3.1680004596710205
    3. '(cost' → logprob: -14.543000221252441
    4. '_cost' → logprob: -15.418000221252441
    5. ' kost' → logprob: -15.918000221252441
    6. ' ' → logprob: -15.918000221252441
    7. 'Cost' → logprob: -16.293001174926758
    8. ' weight' → logprob: -16.418001174926758
    9. '    ' → logprob: -17.043001174926758
    10. 'weight' → logprob: -17.293001174926758

Token 401: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.011049231514334679
    2. '+' → logprob: -4.511049270629883
    3. ' ' → logprob: -13.886049270629883
    4. ' +
' → logprob: -15.511049270629883
    5. ' ' → logprob: -16.636049270629883
    6. ' plus' → logprob: -16.761049270629883
    7. '           ' → logprob: -17.136049270629883
    8. '            ' → logprob: -17.511049270629883
    9. '    ' → logprob: -17.761049270629883
    10. ',' → logprob: -18.011049270629883

Token 402: ' weight' (ID: 6049)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weight' → logprob: -0.2519293427467346
    2. ' weight' → logprob: -1.5019292831420898
    3. '(weight' → logprob: -15.87692928314209
    4. 'weig' → logprob: -17.501930236816406
    5. '_weight' → logprob: -17.876930236816406
    6. '   ' → logprob: -18.626930236816406
    7. 'Weight' → logprob: -18.626930236816406
    8. ' gewicht' → logprob: -18.751930236816406
    9. '1' → logprob: -18.876930236816406
    10. ' ' → logprob: -19.001930236816406

Token 403: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005175051279366016
    2. 'heap' → logprob: -5.7551751136779785
    3. ' heap' → logprob: -6.2551751136779785
    4. '(heap' → logprob: -10.50517463684082
    5. ',' → logprob: -10.75517463684082
    6. '
' → logprob: -12.25517463684082
    7. '            
' → logprob: -12.38017463684082
    8. '```' → logprob: -12.88017463684082
    9. '_heap' → logprob: -13.00517463684082
    10. '<|end|>' → logprob: -13.13017463684082

Token 404: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.020084213465452194
    2. 'heap' → logprob: -4.145084381103516
    3. ' heap' → logprob: -5.520084381103516
    4. '(heap' → logprob: -11.395084381103516
    5. '		' → logprob: -11.770084381103516
    6. ',' → logprob: -12.145084381103516
    7. '
' → logprob: -12.520084381103516
    8. '            
' → logprob: -13.145084381103516
    9. '                   ' → logprob: -13.770084381103516
    10. '               ' → logprob: -13.895084381103516

Token 405: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.000205566844670102
    2. ' heap' → logprob: -8.500205993652344
    3. '           ' → logprob: -13.125205993652344
    4. 'he' → logprob: -18.625205993652344
    5. '   ' → logprob: -19.250205993652344
    6. '(heap' → logprob: -20.000205993652344
    7. '.heap' → logprob: -20.375205993652344
    8. '_heap' → logprob: -20.375205993652344
    9. '```' → logprob: -21.250205993652344
    10. 'Heap' → logprob: -21.375205993652344

Token 406: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: 0.0
    2. 'p' → logprob: -17.0
    3. 'push' → logprob: -18.0
    4. '```' → logprob: -18.125
    5. 'Q' → logprob: -18.875
    6. '.push' → logprob: -19.75
    7. '[' → logprob: -19.75
    8. 'h' → logprob: -19.875
    9. 'queue' → logprob: -20.375
    10. '.q' → logprob: -20.75

Token 407: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -2.339278580620885e-06
    2. '.' → logprob: -13.625001907348633
    3. '.heap' → logprob: -13.875001907348633
    4. 'he' → logprob: -16.250001907348633
    5. '.h' → logprob: -17.625001907348633
    6. '.push' → logprob: -18.000001907348633
    7. '.He' → logprob: -19.375001907348633
    8. ' he' → logprob: -19.500001907348633
    9. '.ht' → logprob: -20.625001907348633
    10. '.hu' → logprob: -20.750001907348633

Token 408: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.00019769940990954638
    2. 'ap' → logprob: -9.125197410583496
    3. 'pp' → logprob: -9.375197410583496
    4. 'push' → logprob: -13.000197410583496
    5. 'q' → logprob: -14.375197410583496
    6. '```' → logprob: -15.375197410583496
    7. 'p' → logprob: -15.500197410583496
    8. 'a' → logprob: -15.500197410583496
    9. '[' → logprob: -15.875197410583496
    10. 'appen' → logprob: -16.125198364257812

Token 409: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.00023798657639417797
    2. 'push' → logprob: -8.375238418579102
    3. 'sh' → logprob: -12.250238418579102
    4. 'p' → logprob: -13.500238418579102
    5. '   ' → logprob: -15.125238418579102
    6. 'pp' → logprob: -15.250238418579102
    7. '```' → logprob: -15.250238418579102
    8. 'app' → logprob: -16.1252384185791
    9. 'u' → logprob: -16.7502384185791
    10. 'q' → logprob: -16.7502384185791

Token 410: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -6.988221684878226e-06
    2. '(' → logprob: -11.875006675720215
    3. 'Q' → logprob: -18.75000762939453
    4. ',Q' → logprob: -19.00000762939453
    5. '(Qt' → logprob: -20.00000762939453
    6. '<|end|>' → logprob: -20.25000762939453
    7. '(K' → logprob: -20.37500762939453
    8. '```' → logprob: -20.37500762939453
    9. '(
' → logprob: -20.62500762939453
    10. ' (' → logprob: -20.75000762939453

Token 411: ',' (ID: 11)
  Prédit: '(Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -0.10935263335704803
    2. '(' → logprob: -2.3593525886535645
    3. ',' → logprob: -4.9843525886535645
    4. '((' → logprob: -6.2343525886535645
    5. ' (' → logprob: -8.359353065490723
    6. ',Q' → logprob: -10.609353065490723
    7. ',(' → logprob: -10.984353065490723
    8. ')' → logprob: -11.234353065490723
    9. '(
' → logprob: -12.609353065490723
    10. ')(' → logprob: -13.484353065490723

Token 412: ' (' (ID: 350)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.14949002861976624
    2. ' (' → logprob: -2.1494901180267334
    3. '(cost' → logprob: -3.8994901180267334
    4. '(' → logprob: -6.649489879608154
    5. '((' → logprob: -7.399489879608154
    6. '(c' → logprob: -8.899490356445312
    7. '(distance' → logprob: -12.774490356445312
    8. ' ' → logprob: -13.149490356445312
    9. '(dist' → logprob: -13.149490356445312
    10. '(dp' → logprob: -13.774490356445312

Token 413: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2270783632993698
    2. 'cost' → logprob: -1.6020783185958862
    3. ' cost' → logprob: -6.977078437805176
    4. ' d' → logprob: -7.477078437805176
    5. '(cost' → logprob: -8.852078437805176
    6. '   ' → logprob: -11.602078437805176
    7. '    ' → logprob: -12.977078437805176
    8. '(d' → logprob: -13.227078437805176
    9. ' ' → logprob: -13.602078437805176
    10. '```' → logprob: -13.602078437805176

Token 414: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.00023214559769257903
    2. 'v' → logprob: -8.375231742858887
    3. '[' → logprob: -13.875231742858887
    4. ',v' → logprob: -15.500231742858887
    5. '<v' → logprob: -16.375232696533203
    6. ')v' → logprob: -16.625232696533203
    7. ' v' → logprob: -16.875232696533203
    8. '```' → logprob: -17.000232696533203
    9. '[
' → logprob: -17.125232696533203
    10. '	v' → logprob: -17.125232696533203

Token 415: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003291480534244329
    2. '],' → logprob: -8.87532901763916
    3. '[v' → logprob: -8.87532901763916
    4. ',v' → logprob: -10.37532901763916
    5. 'v' → logprob: -11.25032901763916
    6. ' ,' → logprob: -12.62532901763916
    7. '),' → logprob: -13.37532901763916
    8. '[' → logprob: -15.50032901763916
    9. ']' → logprob: -15.75032901763916
    10. ' v' → logprob: -16.875329971313477

Token 416: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.001170225441455841
    2. ' v' → logprob: -6.7511701583862305
    3. ')v' → logprob: -18.501171112060547
    4. '	v' → logprob: -18.751171112060547
    5. '[v' → logprob: -19.751171112060547
    6. 'vq' → logprob: -20.626171112060547
    7. '```' → logprob: -21.376171112060547
    8. '   ' → logprob: -21.376171112060547
    9. '$v' → logprob: -21.376171112060547
    10. ')' → logprob: -21.501171112060547

Token 417: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00010485442908247933
    2. '))
' → logprob: -9.250104904174805
    3. ')' → logprob: -11.750104904174805
    4. ' ))' → logprob: -15.125104904174805
    5. '))

' → logprob: -15.250104904174805
    6. ')))' → logprob: -15.750104904174805
    7. '       ' → logprob: -17.500104904174805
    8. '));' → logprob: -17.500104904174805
    9. '   ' → logprob: -17.625104904174805
    10. '<|end|>' → logprob: -18.125104904174805

Token 418: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005898337811231613
    2. '<|end|>' → logprob: -5.380898475646973
    3. '```' → logprob: -8.130898475646973
    4. 'n' → logprob: -8.255898475646973
    5. '
' → logprob: -8.505898475646973
    6. '#' → logprob: -8.755898475646973
    7. '<|end|>' → logprob: -8.755898475646973
    8. 'import' → logprob: -9.505898475646973
    9. '\' → logprob: -10.505898475646973
    10. 'ndef' → logprob: -11.005898475646973

Token 419: ' accumulate' (ID: 74226)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.2864682972431183
    2. ' main' → logprob: -1.411468267440796
    3. 'def' → logprob: -5.911468505859375
    4. 'solve' → logprob: -6.161468505859375
    5. ' solve' → logprob: -8.286468505859375
    6. ' def' → logprob: -8.911468505859375
    7. 'find' → logprob: -11.161468505859375
    8. 'process' → logprob: -11.536468505859375
    9. ' find' → logprob: -11.536468505859375
    10. 'calculate' → logprob: -11.661468505859375

Token 420: '_min' (ID: 15950)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.6753794550895691
    2. '_dist' → logprob: -1.4253795146942139
    3. '(' → logprob: -3.425379514694214
    4. '_times' → logprob: -3.675379514694214
    5. '_weights' → logprob: -3.800379514694214
    6. '_s' → logprob: -3.925379514694214
    7. '(s' → logprob: -3.925379514694214
    8. '_results' → logprob: -4.050379276275635
    9. '_paths' → logprob: -4.175379276275635
    10. '_' → logprob: -4.425379276275635

Token 421: '_cost' (ID: 36820)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.6764335036277771
    2. '_cost' → logprob: -1.0514335632324219
    3. 'imum' → logprob: -3.551433563232422
    4. '_' → logprob: -4.051433563232422
    5. '_weights' → logprob: -4.051433563232422
    6. 'def' → logprob: -4.926433563232422
    7. '_paths' → logprob: -4.926433563232422
    8. '_d' → logprob: -5.051433563232422
    9. 's' → logprob: -5.051433563232422
    10. '_s' → logprob: -5.051433563232422

Token 422: 's' (ID: 82)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.39068499207496643
    2. '(s' → logprob: -1.390684962272644
    3. '(' → logprob: -2.8906850814819336
    4. '(def' → logprob: -5.765685081481934
    5. 's' → logprob: -5.890685081481934
    6. '(d' → logprob: -6.015685081481934
    7. '(t' → logprob: -6.390685081481934
    8. 'def' → logprob: -6.390685081481934
    9. '(start' → logprob: -6.765685081481934
    10. '((' → logprob: -7.265685081481934

Token 423: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.08178837597370148
    2. '(' → logprob: -3.3317883014678955
    3. '(d' → logprob: -4.081788539886475
    4. '(s' → logprob: -4.331788539886475
    5. ' (' → logprob: -4.456788539886475
    6. '(def' → logprob: -7.706788539886475
    7. '():' → logprob: -8.456788063049316
    8. '(
' → logprob: -8.956788063049316
    9. 'def' → logprob: -9.831788063049316
    10. '(start' → logprob: -10.456788063049316

Token 424: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000846671755425632
    2. ',
' → logprob: -8.250846862792969
    3. ' ,' → logprob: -9.000846862792969
    4. '):' → logprob: -9.250846862792969
    5. '):
' → logprob: -9.375846862792969
    6. ',d' → logprob: -9.625846862792969
    7. ',n' → logprob: -10.250846862792969
    8. 's' → logprob: -10.250846862792969
    9. '_,' → logprob: -10.375846862792969
    10. 'l' → logprob: -10.875846862792969

Token 425: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5768036842346191
    2. ' d' → logprob: -1.9518036842346191
    3. 'dist' → logprob: -2.326803684234619
    4. 's' → logprob: -3.076803684234619
    5. ' dist' → logprob: -3.326803684234619
    6. 'yen' → logprob: -3.326803684234619
    7. ' s' → logprob: -4.326803684234619
    8. 'nl' → logprob: -4.576803684234619
    9. 'cost' → logprob: -4.701803684234619
    10. ' yen' → logprob: -4.701803684234619

Token 426: '_y' (ID: 9410)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.28785276412963867
    2. ',' → logprob: -2.2878527641296387
    3. '_s' → logprob: -3.0378527641296387
    4. 's' → logprob: -3.6628527641296387
    5. '_' → logprob: -4.287852764129639
    6. '0' → logprob: -4.537852764129639
    7. 'yen' → logprob: -4.537852764129639
    8. '_y' → logprob: -4.662852764129639
    9. 'ist' → logprob: -5.162852764129639
    10. 'y' → logprob: -5.287852764129639

Token 427: ',' (ID: 11)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.0024748241994529963
    2. 'ens' → logprob: -6.877474784851074
    3. '```' → logprob: -7.502474784851074
    4. 'yen' → logprob: -8.752474784851074
    5. '=' → logprob: -9.877474784851074
    6. ',' → logprob: -10.189974784851074
    7. 'es' → logprob: -10.189974784851074
    8. 'ek' → logprob: -10.502474784851074
    9. 'ok' → logprob: -10.752474784851074
    10. '

' → logprob: -10.752474784851074

Token 428: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.02651032991707325
    2. ' d' → logprob: -3.651510238647461
    3. 's' → logprob: -9.401510238647461
    4. ' ' → logprob: -10.526510238647461
    5. 't' → logprob: -10.776510238647461
    6. '   ' → logprob: -11.276510238647461
    7. ' s' → logprob: -11.339010238647461
    8. '  ' → logprob: -11.589010238647461
    9. 'ds' → logprob: -12.589010238647461
    10. 'a' → logprob: -12.714010238647461

Token 429: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.023758063092827797
    2. 's' → logprob: -5.1487579345703125
    3. '_x' → logprob: -6.0237579345703125
    4. '_sn' → logprob: -6.1487579345703125
    5. '_a' → logprob: -6.1487579345703125
    6. '_k' → logprob: -6.2737579345703125
    7. '_t' → logprob: -6.5237579345703125
    8. '_p' → logprob: -6.6487579345703125
    9. '_b' → logprob: -7.1487579345703125
    10. '_r' → logprob: -7.5237579345703125

Token 430: '):
' (ID: 1883)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7461455464363098
    2. ',' → logprob: -1.246145486831665
    3. 'nu' → logprob: -1.621145486831665
    4. 'u' → logprob: -5.121145725250244
    5. 'nk' → logprob: -5.246145725250244
    6. 't' → logprob: -6.121145725250244
    7. 'k' → logprob: -6.246145725250244
    8. 'um' → logprob: -6.246145725250244
    9. '```' → logprob: -6.371145725250244
    10. 'un' → logprob: -6.496145725250244

Token 431: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01115228608250618
    2. ':' → logprob: -5.011152267456055
    3. ':
' → logprob: -5.636152267456055
    4. '[' → logprob: -8.386152267456055
    5. 'def' → logprob: -8.511152267456055
    6. ',' → logprob: -8.761152267456055
    7. '):
' → logprob: -9.886152267456055
    8. 's' → logprob: -10.761152267456055
    9. '[i' → logprob: -10.761152267456055
    10. '    
' → logprob: -10.886152267456055

Token 432: ' val' (ID: 1459)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.349250078201294
    2. 'result' → logprob: -1.599250078201294
    3. 'ans' → logprob: -1.724250078201294
    4. 'min' → logprob: -2.349250078201294
    5. 'acc' → logprob: -2.599250078201294
    6. '   ' → logprob: -2.849250078201294
    7. 'cost' → logprob: -3.349250078201294
    8. 'return' → logprob: -3.599250078201294
    9. 'total' → logprob: -4.349249839782715
    10. 'dp' → logprob: -4.724249839782715

Token 433: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.22443704307079315
    2. ' =' → logprob: -2.0994369983673096
    3. 'ues' → logprob: -2.5994369983673096
    4. '=' → logprob: -6.224437236785889
    5. 'ue' → logprob: -6.599437236785889
    6. 'id' → logprob: -8.22443675994873
    7. 'u' → logprob: -8.84943675994873
    8. '   ' → logprob: -9.22443675994873
    9. 'ids' → logprob: -9.97443675994873
    10. '=[]
' → logprob: -10.22443675994873

Token 434: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.06032625213265419
    2. '0' → logprob: -3.685326337814331
    3. '[' → logprob: -3.685326337814331
    4. '[]
' → logprob: -6.560326099395752
    5. 'min' → logprob: -6.685326099395752
    6. '10' → logprob: -6.685326099395752
    7. ' float' → logprob: -7.060326099395752
    8. 'max' → logprob: -7.185326099395752
    9. '[min' → logprob: -7.560326099395752
    10. 'int' → logprob: -7.810326099395752

Token 435: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.07953966408967972
    2. '('' → logprob: -2.5795397758483887
    3. '("-' → logprob: -8.45453929901123
    4. '(' → logprob: -8.57953929901123
    5. '"' → logprob: -9.07953929901123
    6. ''s' → logprob: -10.57953929901123
    7. '("+' → logprob: -10.57953929901123
    8. '('-' → logprob: -10.70453929901123
    9. 'inf' → logprob: -10.70453929901123
    10. '"in' → logprob: -11.70453929901123

Token 436: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.00015836587408557534
    2. ''' → logprob: -10.000158309936523
    3. '"' → logprob: -10.375158309936523
    4. 'max' → logprob: -11.125158309936523
    5. '100' → logprob: -11.500158309936523
    6. ''s' → logprob: -12.500158309936523
    7. 'in' → logprob: -12.625158309936523
    8. '1' → logprob: -12.750158309936523
    9. '128' → logprob: -12.875158309936523
    10. '64' → logprob: -12.875158309936523

Token 437: '")
' (ID: 1896)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.03958531841635704
    2. ')' → logprob: -3.2895853519439697
    3. ')
' → logprob: -6.539585113525391
    4. ' )
' → logprob: -9.66458511352539
    5. '")
' → logprob: -11.41458511352539
    6. ')

' → logprob: -11.53958511352539
    7. '   ' → logprob: -12.78958511352539
    8. ' )' → logprob: -13.03958511352539
    9. '")' → logprob: -13.41458511352539
    10. ')`
' → logprob: -13.53958511352539

Token 438: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006093903793953359
    2. 'res' → logprob: -7.750609397888184
    3. 'result' → logprob: -9.125609397888184
    4. 'output' → logprob: -11.250609397888184
    5. 'for' → logprob: -11.500609397888184
    6. '
' → logprob: -11.625609397888184
    7. ',' → logprob: -12.125609397888184
    8. '	ans' → logprob: -12.625609397888184
    9. '	res' → logprob: -12.750609397888184
    10. 'ans' → logprob: -12.750609397888184

Token 439: ' A' (ID: 355)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.7025922536849976
    2. 'res' → logprob: -1.0775922536849976
    3. 'result' → logprob: -2.952592372894287
    4. 'cost' → logprob: -3.827592372894287
    5. 'ret' → logprob: -3.952592372894287
    6. '   ' → logprob: -4.202592372894287
    7. 'answer' → logprob: -4.702592372894287
    8. 'for' → logprob: -4.702592372894287
    9. 'min' → logprob: -4.827592372894287
    10. 'results' → logprob: -5.077592372894287

Token 440: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6335002183914185
    2. '=' → logprob: -0.7585002183914185
    3. '=[]
' → logprob: -8.258500099182129
    4. 'rr' → logprob: -8.633500099182129
    5. '=[]' → logprob: -8.758500099182129
    6. '=[' → logprob: -9.508500099182129
    7. ' ' → logprob: -9.508500099182129
    8. 'r' → logprob: -10.758500099182129
    9. 'ns' → logprob: -10.758500099182129
    10. '   ' → logprob: -11.258500099182129

Token 441: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10361086577177048
    2. '[]' → logprob: -2.6036107540130615
    3. '[n' → logprob: -4.478610992431641
    4. '[]
' → logprob: -4.603610992431641
    5. ' [' → logprob: -6.103610992431641
    6. '[int' → logprob: -8.85361099243164
    7. '[len' → logprob: -8.97861099243164
    8. '[size' → logprob: -9.22861099243164
    9. '[s' → logprob: -9.72861099243164
    10. '[new' → logprob: -10.22861099243164

Token 442: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44223782420158386
    2. 'for' → logprob: -1.0672378540039062
    3. ' for' → logprob: -4.317237854003906
    4. '	for' → logprob: -10.317237854003906
    5. 'def' → logprob: -10.442237854003906
    6. '
' → logprob: -10.567237854003906
    7. ' ' → logprob: -11.317237854003906
    8. '```' → logprob: -12.192237854003906
    9. '    
' → logprob: -13.942237854003906
    10. '  ' → logprob: -14.067237854003906

Token 443: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0021325370762497187
    2. '   ' → logprob: -6.252132415771484
    3. ' for' → logprob: -8.502132415771484
    4. '
' → logprob: -14.252132415771484
    5. '	for' → logprob: -15.627132415771484
    6. ' ' → logprob: -16.627132415771484
    7. '```' → logprob: -16.877132415771484
    8. '  ' → logprob: -18.377132415771484
    9. '    
' → logprob: -19.002132415771484
    10. '``' → logprob: -20.002132415771484

Token 444: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006097415927797556
    2. ' i' → logprob: -5.256097316741943
    3. 'x' → logprob: -8.506097793579102
    4. 'u' → logprob: -8.756097793579102
    5. 'v' → logprob: -8.881097793579102
    6. 'k' → logprob: -9.506097793579102
    7. '_' → logprob: -9.756097793579102
    8. '_i' → logprob: -9.881097793579102
    9. 't' → logprob: -10.631097793579102
    10. 'j' → logprob: -10.881097793579102

Token 445: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08934084326028824
    2. 'in' → logprob: -2.464340925216675
    3. ',' → logprob: -8.839341163635254
    4. 'n' → logprob: -9.089341163635254
    5. ' ' → logprob: -9.339341163635254
    6. '_' → logprob: -11.214341163635254
    7. 'range' → logprob: -11.714341163635254
    8. '   ' → logprob: -12.464341163635254
    9. 's' → logprob: -12.464341163635254
    10. '	in' → logprob: -12.714341163635254

Token 446: ' xrange' (ID: 92050)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0006776464288122952
    2. ' range' → logprob: -8.000678062438965
    3. 're' → logprob: -8.125678062438965
    4. 'x' → logprob: -10.375678062438965
    5. ' xrange' → logprob: -12.000678062438965
    6. '   ' → logprob: -12.375678062438965
    7. 'reverse' → logprob: -13.625678062438965
    8. 'r' → logprob: -14.000678062438965
    9. ' reversed' → logprob: -14.250678062438965
    10. 'rang' → logprob: -14.500678062438965

Token 447: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.38717854022979736
    2. '(' → logprob: -1.1371785402297974
    3. '(len' → logprob: -8.512178421020508
    4. 'n' → logprob: -10.137178421020508
    5. '1' → logprob: -10.262178421020508
    6. ' (' → logprob: -11.387178421020508
    7. '((' → logprob: -12.512178421020508
    8. '(s' → logprob: -12.512178421020508
    9. ' n' → logprob: -12.637178421020508
    10. ' ' → logprob: -13.137178421020508

Token 448: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023744672536849976
    2. '+' → logprob: -4.273744583129883
    3. '-' → logprob: -5.523744583129883
    4. ' ,' → logprob: -6.023744583129883
    5. ' +' → logprob: -6.398744583129883
    6. ' -' → logprob: -6.773744583129883
    7. '):
' → logprob: -9.023744583129883
    8. '   ' → logprob: -9.648744583129883
    9. '0' → logprob: -10.398744583129883
    10. ' ' → logprob: -10.398744583129883

Token 449: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.14975976943969727
    2. '0' → logprob: -2.0247597694396973
    3. ' ' → logprob: -5.649759769439697
    4. ' -' → logprob: -5.649759769439697
    5. '
' → logprob: -12.024759292602539
    6. '1' → logprob: -12.274759292602539
    7. '   ' → logprob: -12.649759292602539
    8. '  ' → logprob: -12.899759292602539
    9. ' 
' → logprob: -13.774759292602539
    10. 's' → logprob: -14.149759292602539

Token 450: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.11372845619916916
    2. '0' → logprob: -2.2387285232543945
    3. ' ' → logprob: -7.7387285232543945
    4. ' -' → logprob: -7.7387285232543945
    5. '1' → logprob: -10.738728523254395
    6. '
' → logprob: -12.113728523254395
    7. '   ' → logprob: -13.113728523254395
    8. '  ' → logprob: -13.988728523254395
    9. '2' → logprob: -14.238728523254395
    10. ' 
' → logprob: -14.926228523254395

Token 451: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3577341139316559
    2. '-' → logprob: -1.2327340841293335
    3. ' -' → logprob: -5.232734203338623
    4. '   ' → logprob: -5.982734203338623
    5. ',-' → logprob: -7.607734203338623
    6. '0' → logprob: -7.732734203338623
    7. ' ,' → logprob: -8.107733726501465
    8. '-,' → logprob: -9.357733726501465
    9. '	' → logprob: -11.357733726501465
    10. '  ' → logprob: -11.607733726501465

Token 452: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0067204674705863
    2. ' -' → logprob: -5.006720542907715
    3. '   ' → logprob: -13.506720542907715
    4. ' ' → logprob: -14.006720542907715
    5. '  ' → logprob: -14.381720542907715
    6. '```' → logprob: -14.631720542907715
    7. ',' → logprob: -15.131720542907715
    8. ')' → logprob: -15.256720542907715
    9. ',-' → logprob: -15.381720542907715
    10. '-
' → logprob: -15.631720542907715

Token 453: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.47528502345085144
    2. '1' → logprob: -0.9752850532531738
    3. ' -' → logprob: -6.725285053253174
    4. ' ' → logprob: -13.100284576416016
    5. '   ' → logprob: -13.600284576416016
    6. ')' → logprob: -13.725284576416016
    7. '```' → logprob: -14.475284576416016
    8. '
' → logprob: -14.600284576416016
    9. '−' → logprob: -14.725284576416016
    10. '-
' → logprob: -14.850284576416016

Token 454: '):
' (ID: 1883)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.17470112442970276
    2. '):' → logprob: -2.29970121383667
    3. '):
' → logprob: -2.92470121383667
    4. ' -' → logprob: -5.92470121383667
    5. ',' → logprob: -6.04970121383667
    6. ',-' → logprob: -7.04970121383667
    7. '   ' → logprob: -8.299700736999512
    8. '):-' → logprob: -9.924700736999512
    9. ')' → logprob: -10.424700736999512
    10. ' ):' → logprob: -11.049700736999512

Token 455: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028844285756349564
    2. '   ' → logprob: -4.153844356536865
    3. ':' → logprob: -4.528844356536865
    4. ',' → logprob: -7.028844356536865
    5. '):
' → logprob: -8.403843879699707
    6. '):' → logprob: -8.778843879699707
    7. '	' → logprob: -8.903843879699707
    8. ':
' → logprob: -9.528843879699707
    9. '      ' → logprob: -9.778843879699707
    10. ' ' → logprob: -9.903843879699707

Token 456: ' tmp' (ID: 8919)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.7190255522727966
    2. ' val' → logprob: -0.8440255522727966
    3. '   ' → logprob: -2.5940256118774414
    4. ' if' → logprob: -5.594025611877441
    5. 'if' → logprob: -5.844025611877441
    6. '       ' → logprob: -7.094025611877441
    7. '	val' → logprob: -7.969025611877441
    8. '
' → logprob: -9.719025611877441
    9. 'cost' → logprob: -9.844025611877441
    10. ' cost' → logprob: -9.969025611877441

Token 457: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5760145783424377
    2. '=' → logprob: -0.8260145783424377
    3. '   ' → logprob: -9.701014518737793
    4. '=min' → logprob: -12.576014518737793
    5. '=
' → logprob: -13.076014518737793
    6. ' ' → logprob: -13.326014518737793
    7. '    ' → logprob: -13.326014518737793
    8. 'val' → logprob: -13.826014518737793
    9. ',' → logprob: -14.326014518737793
    10. '  ' → logprob: -14.451014518737793

Token 458: ' d' (ID: 272)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.33733582496643066
    2. 'd' → logprob: -1.3373358249664307
    3. ' min' → logprob: -3.8373358249664307
    4. ' d' → logprob: -6.337335586547852
    5. 'val' → logprob: -8.837335586547852
    6. '   ' → logprob: -8.962335586547852
    7. 'max' → logprob: -9.712335586547852
    8. 'float' → logprob: -10.337335586547852
    9. ' ' → logprob: -10.962335586547852
    10. '	min' → logprob: -11.212335586547852

Token 459: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.0013720262795686722
    2. '_s' → logprob: -6.87637186050415
    3. 'y' → logprob: -8.126372337341309
    4. 's' → logprob: -11.001372337341309
    5. '_i' → logprob: -11.126372337341309
    6. '[i' → logprob: -11.751372337341309
    7. 'i' → logprob: -13.876372337341309
    8. '_u' → logprob: -14.876372337341309
    9. '[y' → logprob: -15.251372337341309
    10. '   ' → logprob: -15.376372337341309

Token 460: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00010962257510982454
    2. '[' → logprob: -10.000109672546387
    3. '[min' → logprob: -10.875109672546387
    4. '[u' → logprob: -12.125109672546387
    5. '[s' → logprob: -12.250109672546387
    6. 'i' → logprob: -12.250109672546387
    7. ' [' → logprob: -12.375109672546387
    8. '
' → logprob: -12.625109672546387
    9. '[y' → logprob: -12.750109672546387
    10. '[v' → logprob: -12.750109672546387

Token 461: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.19210894405841827
    2. '+' → logprob: -2.3171088695526123
    3. ']+' → logprob: -2.8171088695526123
    4. ' +' → logprob: -4.192109107971191
    5. ')' → logprob: -7.692109107971191
    6. '[' → logprob: -8.817109107971191
    7. '   ' → logprob: -8.817109107971191
    8. '+d' → logprob: -8.942109107971191
    9. ']
' → logprob: -9.567109107971191
    10. ',' → logprob: -9.567109107971191

Token 462: ' +' (ID: 659)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3018283247947693
    2. 'if' → logprob: -1.426828384399414
    3. '+' → logprob: -5.051828384399414
    4. ',' → logprob: -5.801828384399414
    5. '       ' → logprob: -6.301828384399414
    6. ' +' → logprob: -6.426828384399414
    7. 'd' → logprob: -6.426828384399414
    8. '   ' → logprob: -6.426828384399414
    9. ' =' → logprob: -6.676828384399414
    10. '
' → logprob: -6.926828384399414

Token 463: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.16023093461990356
    2. ' d' → logprob: -1.9102308750152588
    3. '   ' → logprob: -12.66023063659668
    4. ' ' → logprob: -13.66023063659668
    5. '	d' → logprob: -14.28523063659668
    6. '
' → logprob: -14.53523063659668
    7. '  ' → logprob: -14.91023063659668
    8. '       ' → logprob: -15.28523063659668
    9. '(d' → logprob: -15.91023063659668
    10. '    ' → logprob: -15.91023063659668

Token 464: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0006293982733041048
    2. 's' → logprob: -7.375629425048828
    3. '[s' → logprob: -14.250629425048828
    4. '_' → logprob: -14.625629425048828
    5. '```' → logprob: -14.625629425048828
    6. ' s' → logprob: -15.375629425048828
    7. '[' → logprob: -15.500629425048828
    8. '[i' → logprob: -15.750629425048828
    9. '_i' → logprob: -16.000629425048828
    10. '[_' → logprob: -16.375629425048828

Token 465: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00025156480842269957
    2. '[' → logprob: -8.375251770019531
    3. '[
' → logprob: -11.750251770019531
    4. '[min' → logprob: -12.500251770019531
    5. 'if' → logprob: -13.000251770019531
    6. '
' → logprob: -13.250251770019531
    7. 'i' → logprob: -13.375251770019531
    8. '   ' → logprob: -14.250251770019531
    9. '<|end|>' → logprob: -14.375251770019531
    10. 'min' → logprob: -15.125251770019531

Token 466: ']
' (ID: 1592)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3092648983001709
    2. ')
' → logprob: -1.809264898300171
    3. ')' → logprob: -2.559264898300171
    4. '<|end|>' → logprob: -4.18426513671875
    5. '       ' → logprob: -5.43426513671875
    6. ']
' → logprob: -6.80926513671875
    7. '   ' → logprob: -6.93426513671875
    8. ']' → logprob: -7.18426513671875
    9. '
' → logprob: -7.80926513671875
    10. 'if' → logprob: -7.80926513671875

Token 467: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021236150059849024
    2. ' if' → logprob: -7.002123832702637
    3. 'if' → logprob: -7.127123832702637
    4. '   ' → logprob: -8.002123832702637
    5. '
' → logprob: -10.002123832702637
    6. ',' → logprob: -11.127123832702637
    7. '	' → logprob: -13.002123832702637
    8. ' ' → logprob: -13.002123832702637
    9. '<|end|>' → logprob: -13.002123832702637
    10. '	if' → logprob: -13.627123832702637

Token 468: ' val' (ID: 1459)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.25916045904159546
    2. 'if' → logprob: -2.0091605186462402
    3. ' val' → logprob: -2.7591605186462402
    4. '   ' → logprob: -4.13416051864624
    5. 'val' (adapté à ' val') → logprob: -4.25916051864624
    6. '       ' → logprob: -7.38416051864624
    7. '
' → logprob: -10.009160041809082
    8. '    ' → logprob: -11.134160041809082
    9. '           ' → logprob: -12.134160041809082
    10. '_val' → logprob: -12.259160041809082

Token 469: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31339311599731445
    2. ' =' → logprob: -1.3133931159973145
    3. '   ' → logprob: -9.688392639160156
    4. '=min' → logprob: -9.688392639160156
    5. 'min' → logprob: -12.313392639160156
    6. '    ' → logprob: -13.813392639160156
    7. '>' → logprob: -14.188392639160156
    8. '	' → logprob: -15.313392639160156
    9. ',' → logprob: -15.938392639160156
    10. '  ' → logprob: -16.563392639160156

Token 470: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.16030018031597137
    2. ' min' → logprob: -1.9103001356124878
    3. 'tmp' → logprob: -9.660300254821777
    4. ' tmp' → logprob: -11.535300254821777
    5. '	min' → logprob: -14.035300254821777
    6. '[min' → logprob: -14.660300254821777
    7. '(min' → logprob: -14.910300254821777
    8. ' ' → logprob: -15.035300254821777
    9. '   ' → logprob: -15.285300254821777
    10. 'mini' → logprob: -16.41029930114746

Token 471: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.0018403483554720879
    2. '(tmp' → logprob: -6.501840114593506
    3. '(' → logprob: -8.001840591430664
    4. 'val' → logprob: -13.501840591430664
    5. '(
' → logprob: -13.751840591430664
    6. '(temp' → logprob: -15.751840591430664
    7. ' val' → logprob: -15.876840591430664
    8. ' (' → logprob: -16.126840591430664
    9. '[val' → logprob: -16.126840591430664
    10. 'tmp' → logprob: -16.626840591430664

Token 472: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.025640076026320457
    2. ',val' → logprob: -3.7756400108337402
    3. ' ,' → logprob: -6.90064001083374
    4. ',tmp' → logprob: -6.90064001083374
    5. 'val' → logprob: -8.400640487670898
    6. ',
' → logprob: -10.025640487670898
    7. '(val' → logprob: -10.275640487670898
    8. 'tmp' → logprob: -10.525640487670898
    9. '(tmp' → logprob: -10.900640487670898
    10. ' val' → logprob: -11.150640487670898

Token 473: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.38688066601753235
    2. ' tmp' → logprob: -1.13688063621521
    3. '(tmp' → logprob: -12.386880874633789
    4. '/tmp' → logprob: -13.261880874633789
    5. '	tmp' → logprob: -13.386880874633789
    6. ' ' → logprob: -14.636880874633789
    7. '   ' → logprob: -14.636880874633789
    8. '[tmp' → logprob: -14.886880874633789
    9. '$tmp' → logprob: -15.511880874633789
    10. '       ' → logprob: -15.761880874633789

Token 474: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.008991175331175327
    2. ')' → logprob: -4.758991241455078
    3. '       ' → logprob: -8.008991241455078
    4. ')
' → logprob: -10.758991241455078
    5. '   ' → logprob: -10.883991241455078
    6. ' )
' → logprob: -12.758991241455078
    7. ')

' → logprob: -14.258991241455078
    8. ' ' → logprob: -15.383991241455078
    9. '	' → logprob: -17.133991241455078
    10. '
' → logprob: -17.258991241455078

Token 475: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029787518084049225
    2. '   ' → logprob: -3.529787540435791
    3. 'A' → logprob: -11.404787063598633
    4. ' A' → logprob: -11.654787063598633
    5. '```' → logprob: -11.904787063598633
    6. '
' → logprob: -13.029787063598633
    7. ' ' → logprob: -13.029787063598633
    8. '[' → logprob: -14.154787063598633
    9. '           ' → logprob: -14.154787063598633
    10. '        
' → logprob: -14.404787063598633

Token 476: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.00823676586151123
    2. ' A' → logprob: -5.008236885070801
    3. '   ' → logprob: -6.508236885070801
    4. '       ' → logprob: -11.6332368850708
    5. '
' → logprob: -11.7582368850708
    6. ' ' → logprob: -12.0082368850708
    7. '	A' → logprob: -13.2582368850708
    8. '  ' → logprob: -14.0082368850708
    9. 'print' → logprob: -14.5082368850708
    10. 'a' → logprob: -14.7582368850708

Token 477: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0010035126470029354
    2. '.' → logprob: -7.001003742218018
    3. '.insert' → logprob: -9.50100326538086
    4. '.ap' → logprob: -11.37600326538086
    5. '.app' → logprob: -12.25100326538086
    6. '.a' → logprob: -14.12600326538086
    7. ' .' → logprob: -16.62600326538086
    8. 'append' → logprob: -17.25100326538086
    9. '=' → logprob: -18.12600326538086
    10. '.extend' → logprob: -19.12600326538086

Token 478: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -5.347765181795694e-05
    2. 'val' → logprob: -10.250053405761719
    3. '(' → logprob: -11.000053405761719
    4. ' val' → logprob: -14.125053405761719
    5. '(str' → logprob: -15.375053405761719
    6. '(
' → logprob: -15.875053405761719
    7. '[val' → logprob: -16.62505340576172
    8. ' (' → logprob: -17.25005340576172
    9. ',val' → logprob: -17.25005340576172
    10. '((' → logprob: -17.37505340576172

Token 479: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20155349373817444
    2. ')
' → logprob: -1.701553463935852
    3. '   ' → logprob: -9.076553344726562
    4. ')
' → logprob: -11.076553344726562
    5. ')

' → logprob: -12.076553344726562
    6. '       ' → logprob: -13.826553344726562
    7. ')`
' → logprob: -14.451553344726562
    8. '[::-' → logprob: -14.451553344726562
    9. ')\
' → logprob: -14.576553344726562
    10. ' ' → logprob: -14.701553344726562

Token 480: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6550947427749634
    2. '   ' → logprob: -0.9050947427749634
    3. '    
' → logprob: -2.780094623565674
    4. '\n' → logprob: -5.030094623565674
    5. ' 
' → logprob: -5.780094623565674
    6. '[::-' → logprob: -6.280094623565674
    7. '  
' → logprob: -7.030094623565674
    8. ' ' → logprob: -8.030095100402832
    9. 'A' → logprob: -8.280095100402832
    10. '        
' → logprob: -8.405095100402832

Token 481: ' return' (ID: 622)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5826736092567444
    2. 'A' → logprob: -1.5826735496520996
    3. '   ' → logprob: -2.8326735496520996
    4. ' A' → logprob: -2.9576735496520996
    5. '    
' → logprob: -3.2076735496520996
    6. '\n' → logprob: -3.7076735496520996
    7. ' ' → logprob: -4.0826735496521
    8. ' return' → logprob: -4.4576735496521
    9. '  
' → logprob: -4.5826735496521
    10. ' 
' → logprob: -4.5826735496521

Token 482: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.008461152203381062
    2. ' A' → logprob: -5.008460998535156
    3. 'list' → logprob: -6.383460998535156
    4. ' list' → logprob: -10.133460998535156
    5. '[A' → logprob: -11.383460998535156
    6. 're' → logprob: -13.758460998535156
    7. ' ' → logprob: -14.008460998535156
    8. '	A' → logprob: -14.133460998535156
    9. '   ' → logprob: -15.508460998535156
    10. '[' → logprob: -15.508460998535156

Token 483: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15356779098510742
    2. '
' → logprob: -2.0285677909851074
    3. '<|end|>' → logprob: -5.028567790985107
    4. '```' → logprob: -6.778567790985107
    5. '\n' → logprob: -7.403567790985107
    6. '   ' → logprob: -7.403567790985107
    7. '\' → logprob: -7.778567790985107
    8. 'A' → logprob: -8.153568267822266
    9. '  
' → logprob: -8.278568267822266
    10. '    
' → logprob: -8.903568267822266

Token 484: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.48921629786491394
    2. 'def' → logprob: -1.1142163276672363
    3. 'A' → logprob: -3.3642163276672363
    4. '[' → logprob: -4.989216327667236
    5. '[::-' → logprob: -5.614216327667236
    6. '\n' → logprob: -5.864216327667236
    7. '<|end|>' → logprob: -5.989216327667236
    8. '```' → logprob: -6.114216327667236
    9. '[
' → logprob: -6.239216327667236
    10. '\' → logprob: -6.864216327667236

Token 485: ' print' (ID: 2123)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.1804799735546112
    2. ' main' → logprob: -1.8054800033569336
    3. 'solve' → logprob: -7.555480003356934
    4. ' solve' → logprob: -9.305480003356934
    5. 'calculate' → logprob: -10.430480003356934
    6. 'print' → logprob: -10.555480003356934
    7. 'compute' → logprob: -11.305480003356934
    8. 'process' → logprob: -11.680480003356934
    9. 'find' → logprob: -12.305480003356934
    10. 'max' → logprob: -12.555480003356934

Token 486: '_results' (ID: 31049)
  Prédit: '_results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_results' → logprob: -0.9028553366661072
    2. '_' → logprob: -1.652855396270752
    3. '(' → logprob: -2.277855396270752
    4. '()' → logprob: -2.527855396270752
    5. '("_' → logprob: -2.902855396270752
    6. '_result' → logprob: -3.027855396270752
    7. '_cost' → logprob: -3.527855396270752
    8. '_remaining' → logprob: -3.527855396270752
    9. '_min' → logprob: -4.027855396270752
    10. '_values' → logprob: -4.652855396270752

Token 487: '(A' (ID: 10706)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.6380723714828491
    2. '():' → logprob: -0.8880723714828491
    3. '(n' → logprob: -2.8880724906921387
    4. '(A' → logprob: -6.013072490692139
    5. '()' → logprob: -6.638072490692139
    6. '(' → logprob: -7.263072490692139
    7. '(
' → logprob: -10.01307201385498
    8. '():
' → logprob: -10.88807201385498
    9. ' ():' → logprob: -11.26307201385498
    10. '(N' → logprob: -12.13807201385498

Token 488: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.16042721271514893
    2. '):' → logprob: -1.910427212715149
    3. '):
' → logprob: -8.53542709350586
    4. ')' → logprob: -12.53542709350586
    5. '   ' → logprob: -13.41042709350586
    6. '):

' → logprob: -14.41042709350586
    7. '():
' → logprob: -15.03542709350586
    8. ' ):
' → logprob: -15.41042709350586
    9. ',' → logprob: -16.16042709350586
    10. ':' → logprob: -16.28542709350586

Token 489: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.040103789418935776
    2. '   ' → logprob: -3.2901036739349365
    3. ' for' → logprob: -6.290103912353516
    4. 'n' → logprob: -8.915103912353516
    5. '
' → logprob: -9.665103912353516
    6. '	for' → logprob: -12.915103912353516
    7. '```' → logprob: -12.915103912353516
    8. 'A' → logprob: -13.915103912353516
    9. '``' → logprob: -14.790103912353516
    10. '    
' → logprob: -14.915103912353516

Token 490: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.08194665610790253
    2. 'max' → logprob: -3.581946611404419
    3. 'prev' → logprob: -3.956946611404419
    4. 'val' → logprob: -4.331946849822998
    5. 'cur' → logprob: -5.956946849822998
    6. 'M' → logprob: -6.081946849822998
    7. 'MAX' → logprob: -6.456946849822998
    8. '
' → logprob: -6.581946849822998
    9. 'm' → logprob: -6.706946849822998
    10. 'min' → logprob: -6.956946849822998

Token 491: ' i' (ID: 575)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.31671595573425293
    2. 'a' → logprob: -1.816715955734253
    3. 'i' → logprob: -2.816715955734253
    4. 'ans' → logprob: -3.566715955734253
    5. 'v' → logprob: -4.941716194152832
    6. 'val' → logprob: -5.816716194152832
    7. ' x' → logprob: -5.941716194152832
    8. 'cost' → logprob: -6.316716194152832
    9. 'res' → logprob: -6.566716194152832
    10. 'amount' → logprob: -6.691716194152832

Token 492: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09443184733390808
    2. 'in' → logprob: -2.5944318771362305
    3. 'n' → logprob: -4.3444318771362305
    4. ',' → logprob: -6.3444318771362305
    5. ' ' → logprob: -7.5944318771362305
    6. '  ' → logprob: -9.46943187713623
    7. '   ' → logprob: -9.84443187713623
    8. ' n' → logprob: -10.46943187713623
    9. ',n' → logprob: -11.84443187713623
    10. '_' → logprob: -12.21943187713623

Token 493: ' reversed' (ID: 57184)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.33354902267456055
    2. 'range' → logprob: -1.5835490226745605
    3. 'x' → logprob: -2.8335490226745605
    4. 'A' → logprob: -3.9585490226745605
    5. ' xrange' → logprob: -8.583549499511719
    6. 'reverse' → logprob: -8.958549499511719
    7. ' reversed' → logprob: -9.333549499511719
    8. '   ' → logprob: -11.083549499511719
    9. '[::-' → logprob: -11.083549499511719
    10. '[' → logprob: -11.833549499511719

Token 494: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.3144093155860901
    2. '(range' → logprob: -1.3144092559814453
    3. 'range' → logprob: -7.189409255981445
    4. '(x' → logprob: -8.439409255981445
    5. '(' → logprob: -8.814409255981445
    6. '(
' → logprob: -11.939409255981445
    7. 'A' → logprob: -12.064409255981445
    8. '(list' → logprob: -12.064409255981445
    9. '((' → logprob: -13.064409255981445
    10. ' range' → logprob: -13.189409255981445

Token 495: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007052560802549124
    2. '):
' → logprob: -5.007052421569824
    3. ')' → logprob: -8.382052421569824
    4. ':' → logprob: -10.007052421569824
    5. '():' → logprob: -10.132052421569824
    6. '):
' → logprob: -11.507052421569824
    7. '   ' → logprob: -12.007052421569824
    8. '()' → logprob: -13.757052421569824
    9. '():
' → logprob: -13.757052421569824
    10. ' ):' → logprob: -13.882052421569824

Token 496: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2340528666973114
    2. 'print' → logprob: -1.7340528964996338
    3. ' print' → logprob: -3.609052896499634
    4. '       ' → logprob: -5.734052658081055
    5. '    
' → logprob: -6.859052658081055
    6. '
' → logprob: -8.234052658081055
    7. '    ' → logprob: -9.109052658081055
    8. '  ' → logprob: -9.609052658081055
    9. '	print' → logprob: -9.859052658081055
    10. '        
' → logprob: -10.109052658081055

Token 497: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0004071971052326262
    2. ' print' → logprob: -8.125407218933105
    3. '   ' → logprob: -9.125407218933105
    4. '
' → logprob: -13.750407218933105
    5. '	print' → logprob: -14.500407218933105
    6. '    
' → logprob: -15.125407218933105
    7. 'prin' → logprob: -16.50040626525879
    8. 'pr' → logprob: -16.75040626525879
    9. '```' → logprob: -17.25040626525879
    10. 'printf' → logprob: -17.37540626525879

Token 498: ' ' (ID: 220)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04026833921670914
    2. '10' → logprob: -3.4152684211730957
    3. '(i' → logprob: -6.040268421173096
    4. '100' → logprob: -6.415268421173096
    5. ' i' → logprob: -6.415268421173096
    6. 'int' → logprob: -7.415268421173096
    7. '(' → logprob: -8.915267944335938
    8. ' ' → logprob: -9.165267944335938
    9. '(int' → logprob: -10.790267944335938
    10. '999' → logprob: -11.040267944335938

Token 499: '10' (ID: 702)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2895689010620117
    2. '10' → logprob: -1.6645689010620117
    3. '100' → logprob: -2.9145689010620117
    4. '(i' → logprob: -5.664568901062012
    5. 'int' → logprob: -6.414568901062012
    6. '(' → logprob: -6.414568901062012
    7. '999' → logprob: -8.289568901062012
    8. '201' → logprob: -8.414568901062012
    9. ' i' → logprob: -8.914568901062012
    10. 'max' → logprob: -9.664568901062012

Token 500: ' **' (ID: 6240)
  Prédit: '14'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '14' → logprob: -1.1075921058654785
    2. '000' → logprob: -1.4825921058654785
    3. '18' → logprob: -1.6075921058654785
    4. '0' → logprob: -2.8575921058654785
    5. '13' → logprob: -3.4825921058654785
    6. '12' → logprob: -3.6075921058654785
    7. '9' → logprob: -3.7325921058654785
    8. 'i' → logprob: -3.9825921058654785
    9. '00' → logprob: -4.3575921058654785
    10. '15' → logprob: -4.4825921058654785

Token 501: ' ' (ID: 220)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '15' → logprob: -2.7133641196996905e-05
    2. '9' → logprob: -11.62502670288086
    3. '16' → logprob: -11.87502670288086
    4. '**' → logprob: -11.87502670288086
    5. '
' → logprob: -14.00002670288086
    6. '\
' → logprob: -14.62502670288086
    7. '```' → logprob: -14.87502670288086
    8. '10' → logprob: -14.87502670288086
    9. '

' → logprob: -15.12502670288086
    10. '7' → logprob: -15.50002670288086

Token 502: '15' (ID: 1055)
  Prédit: '15'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.0010450744302943349
    2. '9' → logprob: -6.876045227050781
    3. '10' → logprob: -13.001045227050781
    4. '**' → logprob: -13.751045227050781
    5. '5' → logprob: -13.876045227050781
    6. '1' → logprob: -14.001045227050781
    7. '16' → logprob: -14.126045227050781
    8. '7' → logprob: -14.126045227050781
    9. '

' → logprob: -14.626045227050781
    10. '8' → logprob: -14.751045227050781

Token 503: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.28277578949928284
    2. ' -' → logprob: -1.4077757596969604
    3. '-i' → logprob: -6.78277587890625
    4. ' ' → logprob: -8.40777587890625
    5. '-
' → logprob: -8.90777587890625
    6. '+' → logprob: -10.40777587890625
    7. '   ' → logprob: -10.53277587890625
    8. '    ' → logprob: -11.28277587890625
    9. ' i' → logprob: -11.53277587890625
    10. ' -
' → logprob: -11.65777587890625

Token 504: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0001234428636962548
    2. ' i' → logprob: -9.000123023986816
    3. '   ' → logprob: -18.500123977661133
    4. ' ' → logprob: -19.750123977661133
    5. '10' → logprob: -19.750123977661133
    6. '	i' → logprob: -20.375123977661133
    7. '(i' → logprob: -20.375123977661133
    8. '  ' → logprob: -21.500123977661133
    9. '_i' → logprob: -22.375123977661133
    10. '    ' → logprob: -22.875123977661133

Token 505: '

' (ID: 279)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7449633479118347
    2. 'def' → logprob: -1.3699634075164795
    3. '<|end|>' → logprob: -1.7449634075164795
    4. '
' → logprob: -2.3699634075164795
    5. '```' → logprob: -6.6199631690979
    6. '  
' → logprob: -8.369963645935059
    7. '

' → logprob: -8.494963645935059
    8. 'n' → logprob: -8.494963645935059
    9. '\' → logprob: -8.494963645935059
    10. '\n' → logprob: -8.619963645935059

Token 506: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 507: ' main' (ID: 2758)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1664360612630844
    2. ' def' → logprob: -2.541435956954956
    3. 'if' → logprob: -2.666435956954956
    4. ' if' → logprob: -6.541436195373535
    5. '__' → logprob: -6.666436195373535
    6. 'main' → logprob: -7.041436195373535
    7. ' main' → logprob: -7.541436195373535
    8. ' __' → logprob: -7.666436195373535
    9. '```' → logprob: -8.666436195373535
    10. '
' → logprob: -8.791436195373535

Token 508: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.1398757123970427e-05
    2. '():
' → logprob: -12.000011444091797
    3. ' ():' → logprob: -12.375011444091797
    4. '()' → logprob: -14.375011444091797
    5. '(' → logprob: -15.375011444091797
    6. ':' → logprob: -16.125011444091797
    7. '():
' → logprob: -17.125011444091797
    8. 'def' → logprob: -18.875011444091797
    9. '(:' → logprob: -19.375011444091797
    10. '():

' → logprob: -19.500011444091797

Token 509: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3181834816932678
    2. 'n' → logprob: -1.318183422088623
    3. ' n' → logprob: -5.318183422088623
    4. '	n' → logprob: -11.818183898925781
    5. '(n' → logprob: -15.068183898925781
    6. '  ' → logprob: -16.31818389892578
    7. '_n' → logprob: -16.56818389892578
    8. '
' → logprob: -16.56818389892578
    9. ',n' → logprob: -16.56818389892578
    10. ' ' → logprob: -16.94318389892578

Token 510: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -3.309382373117842e-05
    2. '   ' → logprob: -10.750033378601074
    3. ' n' → logprob: -11.375033378601074
    4. '	n' → logprob: -17.625032424926758
    5. '
' → logprob: -17.875032424926758
    6. '(n' → logprob: -18.625032424926758
    7. '```' → logprob: -19.500032424926758
    8. 'def' → logprob: -19.500032424926758
    9. '    
' → logprob: -19.875032424926758
    10. '_n' → logprob: -20.250032424926758

Token 511: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004170873435214162
    2. ',m' → logprob: -7.875417232513428
    3. '=' → logprob: -11.12541675567627
    4. ' ,' → logprob: -11.25041675567627
    5. 'm' → logprob: -12.12541675567627
    6. ' =' → logprob: -13.62541675567627
    7. '   ' → logprob: -13.87541675567627
    8. ',n' → logprob: -15.12541675567627
    9. ',
' → logprob: -15.25041675567627
    10. 'def' → logprob: -16.125417709350586

Token 512: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.16023103892803192
    2. 'm' → logprob: -1.9102309942245483
    3. '<|end|>' → logprob: -12.28523063659668
    4. ' ' → logprob: -13.66023063659668
    5. ',m' → logprob: -15.28523063659668
    6. ',' → logprob: -15.53523063659668
    7. '    ' → logprob: -15.66023063659668
    8. ' 
' → logprob: -15.91023063659668
    9. ' ' → logprob: -16.41023063659668
    10. '_m' → logprob: -16.53523063659668

Token 513: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.8889261304575484e-06
    2. ' ,' → logprob: -13.875003814697266
    3. ',s' → logprob: -14.000003814697266
    4. '=' → logprob: -14.250003814697266
    5. ',m' → logprob: -14.875003814697266
    6. 'm' → logprob: -15.125003814697266
    7. '<|end|>' → logprob: -15.250003814697266
    8. 's' → logprob: -15.375003814697266
    9. '‌,' → logprob: -16.375003814697266
    10. ' =' → logprob: -16.375003814697266

Token 514: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08894404023885727
    2. ' s' → logprob: -2.4639439582824707
    3. ' ' → logprob: -13.588944435119629
    4. '    ' → logprob: -13.963944435119629
    5. 't' → logprob: -14.338944435119629
    6. '   ' → logprob: -14.338944435119629
    7. '  ' → logprob: -15.338944435119629
    8. '<|end|>' → logprob: -15.463944435119629
    9. '_s' → logprob: -15.963944435119629
    10. '=' → logprob: -15.963944435119629

Token 515: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3544423381972592e-05
    2. '=' → logprob: -11.62501335144043
    3. ' =' → logprob: -13.12501335144043
    4. ' ,' → logprob: -14.12501335144043
    5. '<|end|>' → logprob: -14.37501335144043
    6. ',s' → logprob: -15.25001335144043
    7. '   ' → logprob: -15.87501335144043
    8. ',m' → logprob: -16.00001335144043
    9. '‌,' → logprob: -16.12501335144043
    10. ',user' → logprob: -16.75001335144043

Token 516: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2254229038953781
    2. ' t' → logprob: -1.6004228591918945
    3. ' ' → logprob: -12.225422859191895
    4. '   ' → logprob: -12.850422859191895
    5. '    ' → logprob: -13.975422859191895
    6. '  ' → logprob: -14.225422859191895
    7. '	t' → logprob: -14.975422859191895
    8. '
' → logprob: -15.225422859191895
    9. '<|end|>' → logprob: -15.850422859191895
    10. ' 
' → logprob: -16.10042381286621

Token 517: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25510168075561523
    2. ' =' → logprob: -1.5051016807556152
    3. ',' → logprob: -5.755101680755615
    4. '=create' → logprob: -15.630102157592773
    5. '=s' → logprob: -16.005102157592773
    6. '=n' → logprob: -16.005102157592773
    7. '   ' → logprob: -16.755102157592773
    8. ' ' → logprob: -16.880102157592773
    9. ',n' → logprob: -17.130102157592773
    10. '=user' → logprob: -17.255102157592773

Token 518: ' src' (ID: 4537)
  Prédit: 'src'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'src' → logprob: -0.00026264708139933646
    2. ' src' → logprob: -8.250262260437012
    3. 'sr' → logprob: -14.625262260437012
    4. 'source' → logprob: -15.125262260437012
    5. '[src' → logprob: -15.250262260437012
    6. '_src' → logprob: -16.250263214111328
    7. '	src' → logprob: -16.375263214111328
    8. '(src' → logprob: -16.750263214111328
    9. '   ' → logprob: -17.000263214111328
    10. '<src' → logprob: -17.375263214111328

Token 519: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740789234638214
    2. ' =' → logprob: -0.974078893661499
    3. '   ' → logprob: -13.724079132080078
    4. ',' → logprob: -14.599079132080078
    5. ')' → logprob: -14.849079132080078
    6. ' ' → logprob: -17.474079132080078
    7. '_' → logprob: -18.099079132080078
    8. '＝' → logprob: -18.349079132080078
    9. '  ' → logprob: -18.349079132080078
    10. '=create' → logprob: -18.349079132080078

Token 520: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.10020678490400314
    2. ' parse' → logprob: -2.3502068519592285
    3. '   ' → logprob: -17.10020637512207
    4. '	parse' → logprob: -18.35020637512207
    5. '(parse' → logprob: -18.47520637512207
    6. '=parse' → logprob: -18.72520637512207
    7. '_parse' → logprob: -19.60020637512207
    8. '.parse' → logprob: -20.60020637512207
    9. 'par' → logprob: -21.35020637512207
    10. 'parser' → logprob: -21.85020637512207

Token 521: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -1.1160349458805285e-05
    2. 'input' → logprob: -11.500011444091797
    3. 'Input' → logprob: -14.625011444091797
    4. '_' → logprob: -16.000011444091797
    5. '(input' → logprob: -16.000011444091797
    6. '_inputs' → logprob: -16.125011444091797
    7. '(' → logprob: -16.625011444091797
    8. '(_' → logprob: -17.000011444091797
    9. '_in' → logprob: -17.250011444091797
    10. '_Input' → logprob: -18.000011444091797

Token 522: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.014188424684107304
    2. '()
' → logprob: -4.264188289642334
    3. '   ' → logprob: -10.764188766479492
    4. '()
' → logprob: -13.264188766479492
    5. '()

' → logprob: -14.139188766479492
    6. '();' → logprob: -14.764188766479492
    7. '()\' → logprob: -15.014188766479492
    8. '()`' → logprob: -15.264188766479492
    9. '(' → logprob: -16.514188766479492
    10. '())' → logprob: -16.639188766479492

Token 523: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20654495060443878
    2. 'nl' → logprob: -2.206544876098633
    3. ' nl' → logprob: -2.581544876098633
    4. '
' → logprob: -8.581544876098633
    5. '```' → logprob: -8.581544876098633
    6. '    
' → logprob: -9.081544876098633
    7. 'n' → logprob: -9.331544876098633
    8. '	n' → logprob: -9.456544876098633
    9. ',n' → logprob: -10.206544876098633
    10. '[n' → logprob: -10.206544876098633

Token 524: ' nl' (ID: 44724)
  Prédit: 'nl'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nl' (adapté à ' nl') → logprob: -0.003054599976167083
    2. ' nl' → logprob: -5.878054618835449
    3. '   ' → logprob: -8.37805461883545
    4. 'n' → logprob: -11.75305461883545
    5. 'adj' → logprob: -12.62805461883545
    6. '```' → logprob: -12.62805461883545
    7. ' ' → logprob: -13.75305461883545
    8. '  ' → logprob: -14.37805461883545
    9. 'nal' → logprob: -14.94055461883545
    10. '
' → logprob: -14.94055461883545

Token 525: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868733048439026
    2. ' =' → logprob: -1.1368732452392578
    3. ',' → logprob: -13.386873245239258
    4. '=create' → logprob: -14.636873245239258
    5. '   ' → logprob: -16.386873245239258
    6. '=
' → logprob: -16.636873245239258
    7. ' =
' → logprob: -16.761873245239258
    8. '＝' → logprob: -16.886873245239258
    9. '=

' → logprob: -17.136873245239258
    10. ' ' → logprob: -17.136873245239258

Token 526: ' create' (ID: 2501)
  Prédit: 'create'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'create' → logprob: -0.00862036645412445
    2. ' create' → logprob: -4.758620262145996
    3. '(create' → logprob: -12.133620262145996
    4. '.create' → logprob: -15.508620262145996
    5. '=create' → logprob: -15.508620262145996
    6. '_create' → logprob: -17.258621215820312
    7. 'reate' → logprob: -17.383621215820312
    8. '   ' → logprob: -17.383621215820312
    9. '	create' → logprob: -17.383621215820312
    10. ' ' → logprob: -18.633621215820312

Token 527: '_ad' (ID: 23782)
  Prédit: '_ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ad' → logprob: -1.6166903151315637e-05
    2. '_adj' → logprob: -11.625016212463379
    3. '(n' → logprob: -12.500016212463379
    4. 'adj' → logprob: -13.000016212463379
    5. '_n' → logprob: -14.750016212463379
    6. '_' → logprob: -15.250016212463379
    7. 'n' → logprob: -15.625016212463379
    8. '_add' → logprob: -16.500015258789062
    9. ' adjacency' → logprob: -16.875015258789062
    10. '_a' → logprob: -17.250015258789062

Token 528: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -1.3663626305060461e-05
    2. 'j' → logprob: -11.25001335144043
    3. 'jc' → logprob: -15.00001335144043
    4. 'acency' → logprob: -16.00001335144043
    5. 'jl' → logprob: -17.00001335144043
    6. '_j' → logprob: -17.12501335144043
    7. ' jac' → logprob: -17.50001335144043
    8. 'Jac' → logprob: -17.62501335144043
    9. 'nj' → logprob: -18.75001335144043
    10. 'jn' → logprob: -19.12501335144043

Token 529: 'ency' (ID: 2799)
  Prédit: 'ency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ency' → logprob: -0.0011730826226994395
    2. 'y' → logprob: -7.37617301940918
    3. '_list' → logprob: -8.62617301940918
    4. 'n' → logprob: -8.75117301940918
    5. 'cy' → logprob: -9.12617301940918
    6. 'acency' → logprob: -10.87617301940918
    7. '(n' → logprob: -11.12617301940918
    8. 'list' → logprob: -11.25117301940918
    9. 'eny' → logprob: -11.62617301940918
    10. 'h' → logprob: -11.62617301940918

Token 530: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.2664456789934775e-06
    2. 'list' → logprob: -13.875000953674316
    3. '_lists' → logprob: -16.250001907348633
    4. 'List' → logprob: -17.000001907348633
    5. '```' → logprob: -17.000001907348633
    6. '_lst' → logprob: -17.250001907348633
    7. '_lista' → logprob: -17.625001907348633
    8. '_' → logprob: -18.000001907348633
    9. '_l' → logprob: -18.125001907348633
    10. '[_' → logprob: -18.250001907348633

Token 531: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.236549335066229e-05
    2. '(' → logprob: -11.125021934509277
    3. ' (' → logprob: -11.875021934509277
    4. '(
' → logprob: -15.000021934509277
    5. 'n' → logprob: -16.250022888183594
    6. '(len' → logprob: -17.625022888183594
    7. ',' → logprob: -18.000022888183594
    8. ',n' → logprob: -18.375022888183594
    9. '```' → logprob: -19.000022888183594
    10. '
' → logprob: -19.000022888183594

Token 532: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001319063303526491
    2. ',m' → logprob: -9.000131607055664
    3. ' ,' → logprob: -12.000131607055664
    4. 'm' → logprob: -13.125131607055664
    5. ',n' → logprob: -16.125131607055664
    6. ',
' → logprob: -16.625131607055664
    7. '   ' → logprob: -17.875131607055664
    8. '‌,' → logprob: -18.250131607055664
    9. '(m' → logprob: -18.875131607055664
    10. ')' → logprob: -18.875131607055664

Token 533: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0004309076175559312
    2. ' m' → logprob: -7.750431060791016
    3. '   ' → logprob: -15.875431060791016
    4. ',' → logprob: -18.000431060791016
    5. ')' → logprob: -18.125431060791016
    6. ' ' → logprob: -18.250431060791016
    7. '```' → logprob: -18.500431060791016
    8. ')m' → logprob: -18.875431060791016
    9. '	m' → logprob: -19.000431060791016
    10. 'src' → logprob: -19.125431060791016

Token 534: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.1008713702030946e-06
    2. ' ,' → logprob: -13.125001907348633
    3. ',n' → logprob: -17.000001907348633
    4. '   ' → logprob: -17.750001907348633
    5. ',
' → logprob: -19.000001907348633
    6. ')' → logprob: -19.875001907348633
    7. ',s' → logprob: -21.000001907348633
    8. '  ' → logprob: -21.375001907348633
    9. 'n' → logprob: -21.875001907348633
    10. '_,' → logprob: -22.250001907348633

Token 535: ' src' (ID: 4537)
  Prédit: 'src'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'src' → logprob: -9.662937372922897e-05
    2. ' src' → logprob: -9.250096321105957
    3. '[src' → logprob: -16.000097274780273
    4. '   ' → logprob: -16.625097274780273
    5. ' ' → logprob: -17.000097274780273
    6. 'source' → logprob: -17.250097274780273
    7. '(src' → logprob: -17.500097274780273
    8. '	src' → logprob: -17.625097274780273
    9. 's' → logprob: -17.875097274780273
    10. '<src' → logprob: -18.500097274780273

Token 536: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47580915689468384
    2. '   ' → logprob: -0.9758091568946838
    3. ')
' → logprob: -6.975809097290039
    4. '
' → logprob: -7.725809097290039
    5. ',' → logprob: -8.225809097290039
    6. '  ' → logprob: -10.725809097290039
    7. 'def' → logprob: -10.850809097290039
    8. '    
' → logprob: -11.600809097290039
    9. '<|end|>' → logprob: -11.975809097290039
    10. 'n' → logprob: -12.225809097290039

Token 537: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027252456173300743
    2. 'd' → logprob: -3.777252435684204
    3. ' d' → logprob: -5.527252674102783
    4. ' ' → logprob: -11.777252197265625
    5. '	d' → logprob: -12.277252197265625
    6. '```' → logprob: -12.652252197265625
    7. '  ' → logprob: -12.902252197265625
    8. '_d' → logprob: -13.777252197265625
    9. 'def' → logprob: -14.527252197265625
    10. '#' → logprob: -14.777252197265625

Token 538: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.0024893339723348618
    2. '   ' → logprob: -6.1274895668029785
    3. ' d' → logprob: -8.25248908996582
    4. 'dy' → logprob: -10.25248908996582
    5. ' ' → logprob: -13.00248908996582
    6. '	d' → logprob: -13.37748908996582
    7. '  ' → logprob: -13.75248908996582
    8. 'dist' → logprob: -13.75248908996582
    9. '#' → logprob: -14.87748908996582
    10. 'distance' → logprob: -14.87748908996582

Token 539: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -2.463036435074173e-05
    2. '_' → logprob: -11.500024795532227
    3. '_s' → logprob: -11.625024795532227
    4. 'y' → logprob: -12.500024795532227
    5. '_t' → logprob: -13.875024795532227
    6. 'yen' → logprob: -15.000024795532227
    7. ' =' → logprob: -15.750024795532227
    8. '_x' → logprob: -16.500024795532227
    9. '_d' → logprob: -16.625024795532227
    10. '_Y' → logprob: -16.875024795532227

Token 540: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868822157382965
    2. ' =' → logprob: -1.1368821859359741
    3. '_' → logprob: -12.636881828308105
    4. '=y' → logprob: -13.386881828308105
    5. '=[' → logprob: -13.886881828308105
    6. 'ield' → logprob: -13.886881828308105
    7. '＝' → logprob: -14.011881828308105
    8. '=s' → logprob: -14.886881828308105
    9. '=[]' → logprob: -15.136881828308105
    10. '_=' → logprob: -15.136881828308105

Token 541: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.005237075500190258
    2. ' d' → logprob: -5.255237102508545
    3. '   ' → logprob: -12.755236625671387
    4. '	d' → logprob: -15.380236625671387
    5. '  ' → logprob: -16.505237579345703
    6. ' ' → logprob: -17.005237579345703
    7. '(d' → logprob: -17.380237579345703
    8. '    ' → logprob: -17.755237579345703
    9. ')d' → logprob: -18.317737579345703
    10. '[d' → logprob: -18.380237579345703

Token 542: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -1.1472419600977446e-06
    2. 'ijk' → logprob: -14.625000953674316
    3. 'ij' → logprob: -14.750000953674316
    4. 'jik' → logprob: -16.375001907348633
    5. '```' → logprob: -17.375001907348633
    6. '_y' → logprob: -18.000001907348633
    7. 'y' → logprob: -18.000001907348633
    8. 'ijks' → logprob: -18.000001907348633
    9. 'ijkl' → logprob: -18.000001907348633
    10. '=' → logprob: -18.500001907348633

Token 543: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.45848218582978e-06
    2. '(' → logprob: -13.00000286102295
    3. '(
' → logprob: -16.750001907348633
    4. ' (' → logprob: -17.250001907348633
    5. 'nl' → logprob: -18.000001907348633
    6. ',n' → logprob: -18.625001907348633
    7. ' nl' → logprob: -19.000001907348633
    8. '[n' → logprob: -19.250001907348633
    9. '.nl' → logprob: -19.250001907348633
    10. 'n' → logprob: -19.375001907348633

Token 544: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -6.313314952421933e-05
    2. ',' → logprob: -11.000062942504883
    3. ',l' → logprob: -12.000062942504883
    4. '```' → logprob: -12.000062942504883
    5. '1' → logprob: -12.125062942504883
    6. '
' → logprob: -12.750062942504883
    7. ''l' → logprob: -12.937562942504883
    8. '	l' → logprob: -13.000062942504883
    9. '[l' → logprob: -13.062562942504883
    10. ';l' → logprob: -13.500062942504883

Token 545: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011164903844473884
    2. ',t' → logprob: -10.12511157989502
    3. ' ,' → logprob: -10.50011157989502
    4. ',n' → logprob: -11.00011157989502
    5. 't' → logprob: -11.37511157989502
    6. ',"' → logprob: -12.75011157989502
    7. '1' → logprob: -12.87511157989502
    8. '=' → logprob: -13.00011157989502
    9. ',s' → logprob: -13.00011157989502
    10. 's' → logprob: -13.75011157989502

Token 546: ' s' (ID: 265)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3876279294490814
    2. 's' → logprob: -1.1376279592514038
    3. 't' → logprob: -7.262628078460693
    4. ' s' → logprob: -10.512627601623535
    5. ' ' → logprob: -11.512627601623535
    6. '0' → logprob: -11.887627601623535
    7. 'n' → logprob: -12.762627601623535
    8. 'start' → logprob: -12.762627601623535
    9. '   ' → logprob: -13.512627601623535
    10. 'y' → logprob: -13.762627601623535

Token 547: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.1186566047836095e-05
    2. ')' → logprob: -11.000031471252441
    3. ' ,' → logprob: -11.875031471252441
    4. ',"' → logprob: -12.125031471252441
    5. '   ' → logprob: -13.625031471252441
    6. '  ' → logprob: -16.000030517578125
    7. ' ' → logprob: -16.125030517578125
    8. '[' → logprob: -16.250030517578125
    9. '"use' → logprob: -16.250030517578125
    10. '),' → logprob: -16.250030517578125

Token 548: ' use' (ID: 1199)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0007213685312308371
    2. ' "' → logprob: -8.125720977783203
    3. ''' → logprob: -8.625720977783203
    4. ''y' → logprob: -8.750720977783203
    5. '"use' → logprob: -9.500720977783203
    6. '   ' → logprob: -12.750720977783203
    7. '"user' → logprob: -13.000720977783203
    8. ''ny' → logprob: -14.125720977783203
    9. '("' → logprob: -14.375720977783203
    10. ''"' → logprob: -14.500720977783203

Token 549: '_weight' (ID: 34711)
  Prédit: '_weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.011130588129162788
    2. '"' → logprob: -5.3861308097839355
    3. '="' → logprob: -5.3861308097839355
    4. '="_' → logprob: -7.2611308097839355
    5. '"_' → logprob: -7.3861308097839355
    6. 'weight' → logprob: -7.8861308097839355
    7. '_' → logprob: -9.636130332946777
    8. '='' → logprob: -10.011130332946777
    9. '=' → logprob: -10.136130332946777
    10. 'Weight' → logprob: -11.511130332946777

Token 550: '="' (ID: 580)
  Prédit: '="'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '="' → logprob: -0.3994815945625305
    2. '=' → logprob: -1.1494815349578857
    3. '='' → logprob: -4.399481773376465
    4. '=
' → logprob: -9.149481773376465
    5. '=

' → logprob: -9.149481773376465
    6. '"' → logprob: -10.399481773376465
    7. '=",' → logprob: -13.274481773376465
    8. ')' → logprob: -14.274481773376465
    9. ' =' → logprob: -14.649481773376465
    10. '=`' → logprob: -15.024481773376465

Token 551: 'yen' (ID: 31069)
  Prédit: 'yen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yen' → logprob: -0.0002135534887202084
    2. '"' → logprob: -8.500213623046875
    3. ''y' → logprob: -12.500213623046875
    4. ''' → logprob: -12.875213623046875
    5. 'y' → logprob: -13.500213623046875
    6. 'yan' → logprob: -13.750213623046875
    7. ' yen' → logprob: -14.250213623046875
    8. '```' → logprob: -15.875213623046875
    9. '`' → logprob: -16.375213623046875
    10. 'ye' → logprob: -16.750213623046875

Token 552: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0030215606093406677
    2. '")
' → logprob: -5.878021717071533
    3. ')' → logprob: -9.128021240234375
    4. ')")' → logprob: -9.378021240234375
    5. '")
' → logprob: -11.128021240234375
    6. '")

' → logprob: -12.253021240234375
    7. '"' → logprob: -13.503021240234375
    8. ')")
' → logprob: -14.128021240234375
    9. ')"' → logprob: -14.128021240234375
    10. ' ")' → logprob: -14.878021240234375

Token 553: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006013764068484306
    2. 'd' → logprob: -5.506013870239258
    3. ' d' → logprob: -6.256013870239258
    4. '	d' → logprob: -11.756013870239258
    5. '
' → logprob: -13.131013870239258
    6. ' ' → logprob: -13.506013870239258
    7. '    
' → logprob: -13.756013870239258
    8. ',d' → logprob: -13.881013870239258
    9. '  ' → logprob: -15.131013870239258
    10. '_d' → logprob: -15.381013870239258

Token 554: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.0018380836118012667
    2. ' d' → logprob: -6.501838207244873
    3. '   ' → logprob: -8.001837730407715
    4. '	d' → logprob: -14.376837730407715
    5. ' ' → logprob: -15.251837730407715
    6. '  ' → logprob: -16.25183868408203
    7. '_d' → logprob: -18.75183868408203
    8. '
' → logprob: -19.75183868408203
    9. 'def' → logprob: -19.75183868408203
    10. '    
' → logprob: -19.87683868408203

Token 555: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.00034940900513902307
    2. '_' → logprob: -8.000349044799805
    3. 's' → logprob: -12.000349044799805
    4. '_t' → logprob: -12.500349044799805
    5. '=' → logprob: -14.125349044799805
    6. '_
' → logprob: -14.625349044799805
    7. ' =' → logprob: -14.750349044799805
    8. '_=' → logprob: -15.000349044799805
    9. '_x' → logprob: -15.125349044799805
    10. '_y' → logprob: -15.125349044799805

Token 556: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519293427467346
    2. ' =' → logprob: -1.5019292831420898
    3. ' ' → logprob: -15.87692928314209
    4. ',' → logprob: -17.251930236816406
    5. '＝' → logprob: -17.751930236816406
    6. '=
' → logprob: -18.001930236816406
    7. '=d' → logprob: -18.251930236816406
    8. '[' → logprob: -18.251930236816406
    9. '   ' → logprob: -18.626930236816406
    10. ')' → logprob: -18.876930236816406

Token 557: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.25194835662841797
    2. ' d' → logprob: -1.501948356628418
    3. '(d' → logprob: -11.501948356628418
    4. '   ' → logprob: -12.001948356628418
    5. '	d' → logprob: -14.001948356628418
    6. ' ' → logprob: -14.876948356628418
    7. ')d' → logprob: -14.876948356628418
    8. '.d' → logprob: -15.126948356628418
    9. '_d' → logprob: -15.189448356628418
    10. '  ' → logprob: -15.876948356628418

Token 558: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -4.7994282795116305e-05
    2. '(n' → logprob: -10.37504768371582
    3. 'ijk' → logprob: -11.75004768371582
    4. 'ij' → logprob: -12.25004768371582
    5. 'nl' → logprob: -13.87504768371582
    6. 'ik' → logprob: -14.00004768371582
    7. 'ijkl' → logprob: -14.25004768371582
    8. 'jik' → logprob: -14.62504768371582
    9. '[n' → logprob: -15.25004768371582
    10. '```' → logprob: -15.37504768371582

Token 559: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.842555426876061e-06
    2. 'nl' → logprob: -12.625004768371582
    3. '(' → logprob: -13.625004768371582
    4. ' nl' → logprob: -16.5000057220459
    5. ' (' → logprob: -17.0000057220459
    6. '(
' → logprob: -17.0000057220459
    7. 'n' → logprob: -17.3750057220459
    8. '(l' → logprob: -18.2500057220459
    9. '```' → logprob: -18.6250057220459
    10. ',' → logprob: -18.8750057220459

Token 560: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -8.280175097752362e-05
    2. 'nl' → logprob: -10.125082969665527
    3. '(n' → logprob: -10.125082969665527
    4. ',' → logprob: -14.500082969665527
    5. ' nl' → logprob: -14.500082969665527
    6. '(' → logprob: -15.375082969665527
    7. '1' → logprob: -15.625082969665527
    8. 'n' → logprob: -15.750082969665527
    9. '```' → logprob: -15.875082969665527
    10. '(l' → logprob: -16.00008201599121

Token 561: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47418415546417236
    2. '(n' → logprob: -0.9741841554641724
    3. ',n' → logprob: -9.599184036254883
    4. 'nl' → logprob: -10.724184036254883
    5. '(' → logprob: -12.099184036254883
    6. ' ,' → logprob: -12.224184036254883
    7. ' nl' → logprob: -12.724184036254883
    8. ' (' → logprob: -13.099184036254883
    9. '   ' → logprob: -14.474184036254883
    10. ')' → logprob: -14.724184036254883

Token 562: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0029492934700101614
    2. ' t' → logprob: -6.377949237823486
    3. 'nl' → logprob: -6.752949237823486
    4. ' nl' → logprob: -10.127949714660645
    5. 'tl' → logprob: -11.752949714660645
    6. 's' → logprob: -11.752949714660645
    7. 'n' → logprob: -12.377949714660645
    8. '	t' → logprob: -13.002949714660645
    9. '(t' → logprob: -13.127949714660645
    10. ' ' → logprob: -13.127949714660645

Token 563: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.632542913896032e-05
    2. ' ,' → logprob: -10.000046730041504
    3. ',use' → logprob: -14.250046730041504
    4. 's' → logprob: -16.125045776367188
    5. ',
' → logprob: -16.875045776367188
    6. ')' → logprob: -17.125045776367188
    7. '   ' → logprob: -17.875045776367188
    8. ' ' → logprob: -18.750045776367188
    9. 'use' → logprob: -19.000045776367188
    10. '[' → logprob: -19.000045776367188

Token 564: ' use' (ID: 1199)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.8620492219924927
    2. '"use' → logprob: -0.8620492219924927
    3. ' use' → logprob: -1.8620492219924927
    4. ''use' → logprob: -10.362049102783203
    5. '"' → logprob: -11.112049102783203
    6. ' ' → logprob: -13.362049102783203
    7. '(use' → logprob: -13.362049102783203
    8. ',use' → logprob: -13.612049102783203
    9. '  ' → logprob: -14.112049102783203
    10. '	use' → logprob: -14.362049102783203

Token 565: '_weight' (ID: 34711)
  Prédit: '_weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.018154039978981018
    2. 'weight' → logprob: -4.018154144287109
    3. 's' → logprob: -14.14315414428711
    4. 'wei' → logprob: -14.39315414428711
    5. 'we' → logprob: -14.76815414428711
    6. '_weights' → logprob: -14.76815414428711
    7. 'weig' → logprob: -14.89315414428711
    8. 'Weight' → logprob: -15.51815414428711
    9. '_w' → logprob: -15.51815414428711
    10. '_cost' → logprob: -15.76815414428711

Token 566: '="' (ID: 580)
  Prédit: '="'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '="' → logprob: -0.00672448705881834
    2. '=' → logprob: -5.0067243576049805
    3. '=
' → logprob: -12.38172435760498
    4. '='' → logprob: -13.00672435760498
    5. '=s' → logprob: -13.88172435760498
    6. '"' → logprob: -14.13172435760498
    7. '=

' → logprob: -14.38172435760498
    8. '=",' → logprob: -16.006725311279297
    9. '=="' → logprob: -16.256725311279297
    10. '=("' → logprob: -16.756725311279297

Token 567: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.01844501495361328
    2. '"s' → logprob: -4.393445014953613
    3. '"' → logprob: -5.143445014953613
    4. ''s' → logprob: -9.518445014953613
    5. ' ' → logprob: -13.393445014953613
    6. 'sn' → logprob: -13.393445014953613
    7. ' "' → logprob: -13.518445014953613
    8. '`s' → logprob: -15.018445014953613
    9. 'y' → logprob: -15.143445014953613
    10. 'yen' → logprob: -15.393445014953613

Token 568: 'nu' (ID: 8502)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6932768821716309
    2. 'nu' → logprob: -0.6932768821716309
    3. 'u' → logprob: -10.693277359008789
    4. 'ну' → logprob: -11.380777359008789
    5. '"' → logprob: -11.880777359008789
    6. 'ni' → logprob: -11.943277359008789
    7. '
' → logprob: -12.068277359008789
    8. 's' → logprob: -12.130777359008789
    9. 'ne' → logprob: -12.130777359008789
    10. 'nk' → logprob: -12.193277359008789

Token 569: 'uk' (ID: 1160)
  Prédit: 'uk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uk' → logprob: -0.002605975838378072
    2. 'k' → logprob: -6.00260591506958
    3. 'ok' → logprob: -10.002606391906738
    4. 'u' → logprob: -10.377606391906738
    5. 'kuk' → logprob: -11.252606391906738
    6. 'ku' → logprob: -11.752606391906738
    7. ' uk' → logprob: -11.877606391906738
    8. 'ук' → logprob: -12.377606391906738
    9. '

' → logprob: -13.190106391906738
    10. 'uku' → logprob: -13.252606391906738

Token 570: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0002929174806922674
    2. ')' → logprob: -8.750292778015137
    3. ')")' → logprob: -9.500292778015137
    4. '")
' → logprob: -9.750292778015137
    5. ')"' → logprob: -14.500292778015137
    6. '"' → logprob: -14.875292778015137
    7. '")
' → logprob: -15.625292778015137
    8. '')' → logprob: -16.250293731689453
    9. '}")' → logprob: -17.125293731689453
    10. ')")
' → logprob: -17.250293731689453

Token 571: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35000523924827576
    2. 'A' → logprob: -1.2250052690505981
    3. ' A' → logprob: -6.600005149841309
    4. ' ' → logprob: -9.600005149841309
    5. '	A' → logprob: -9.600005149841309
    6. '  ' → logprob: -10.225005149841309
    7. '    
' → logprob: -11.225005149841309
    8. '<|end|>' → logprob: -12.475005149841309
    9. '```' → logprob: -12.850005149841309
    10. '
' → logprob: -12.850005149841309

Token 572: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.0002892258344218135
    2. '   ' → logprob: -8.250288963317871
    3. ' A' → logprob: -10.500288963317871
    4. ' ' → logprob: -15.125288963317871
    5. '	A' → logprob: -16.625289916992188
    6. '  ' → logprob: -16.750289916992188
    7. '```' → logprob: -19.750289916992188
    8. '       ' → logprob: -19.875289916992188
    9. 'a' → logprob: -20.875289916992188
    10. '    
' → logprob: -20.875289916992188

Token 573: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602325439453125
    2. ' =' → logprob: -1.9102325439453125
    3. '.append' → logprob: -12.660232543945312
    4. '=[]' → logprob: -13.535232543945312
    5. '.' → logprob: -14.285232543945312
    6. '.=' → logprob: -14.535232543945312
    7. '<|end|>' → logprob: -14.785232543945312
    8. ')' → logprob: -15.035232543945312
    9. '.extend' → logprob: -15.035232543945312
    10. '=[' → logprob: -15.410232543945312

Token 574: ' accumulate' (ID: 74226)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.0002614550176076591
    2. ' accumulate' → logprob: -8.250261306762695
    3. '(acc' → logprob: -16.125261306762695
    4. '	acc' → logprob: -17.125261306762695
    5. 'ac' → logprob: -17.750261306762695
    6. '_acc' → logprob: -18.250261306762695
    7. '.acc' → logprob: -18.500261306762695
    8. ' acc' → logprob: -19.125261306762695
    9. 'aggregate' → logprob: -19.875261306762695
    10. 'ACC' → logprob: -20.000261306762695

Token 575: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -4.7994282795116305e-05
    2. 'min' → logprob: -10.12504768371582
    3. '_cost' → logprob: -12.12504768371582
    4. '_max' → logprob: -14.00004768371582
    5. '(min' → logprob: -14.87504768371582
    6. '```' → logprob: -15.25004768371582
    7. 'A' → logprob: -15.37504768371582
    8. '(n' → logprob: -15.75004768371582
    9. '_val' → logprob: -16.50004768371582
    10. '=' → logprob: -16.62504768371582

Token 576: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -3.3451433409936726e-05
    2. 'cost' → logprob: -10.375033378601074
    3. 'A' → logprob: -13.875033378601074
    4. '_min' → logprob: -14.500033378601074
    5. 's' → logprob: -15.625033378601074
    6. '(A' → logprob: -16.12503433227539
    7. '```' → logprob: -16.12503433227539
    8. 'Costs' → logprob: -17.25003433227539
    9. '_code' → logprob: -17.37503433227539
    10. ' costs' → logprob: -17.50003433227539

Token 577: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10651195794343948
    2. '_cost' → logprob: -2.3565120697021484
    3. 'cost' → logprob: -5.106512069702148
    4. '(cost' → logprob: -9.356512069702148
    5. 'Costs' → logprob: -9.606512069702148
    6. ' costs' → logprob: -10.481512069702148
    7. 'sts' → logprob: -11.106512069702148
    8. 'ost' → logprob: -11.356512069702148
    9. 'skosten' → logprob: -12.231512069702148
    10. '-cost' → logprob: -12.356512069702148

Token 578: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.6166903151315637e-05
    2. ' (' → logprob: -11.500016212463379
    3. '(' → logprob: -12.250016212463379
    4. '(
' → logprob: -14.875016212463379
    5. '<n' → logprob: -15.375016212463379
    6. 'n' → logprob: -15.750016212463379
    7. '<|end|>' → logprob: -15.875016212463379
    8. ' n' → logprob: -16.000015258789062
    9. ',n' → logprob: -16.750015258789062
    10. '(len' → logprob: -17.375015258789062

Token 579: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014418430509977043
    2. ',d' → logprob: -8.875144004821777
    3. ' ,' → logprob: -12.500144004821777
    4. ',
' → logprob: -15.125144004821777
    5. 'd' → logprob: -15.250144004821777
    6. ')' → logprob: -16.875144958496094
    7. ',n' → logprob: -17.625144958496094
    8. '(' → logprob: -18.500144958496094
    9. '=' → logprob: -18.750144958496094
    10. '   ' → logprob: -19.000144958496094

Token 580: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0007101670489646494
    2. ' d' → logprob: -7.2507100105285645
    3. '   ' → logprob: -15.500710487365723
    4. ' ' → logprob: -17.250709533691406
    5. '
' → logprob: -18.000709533691406
    6. '	d' → logprob: -18.000709533691406
    7. ')d' → logprob: -18.250709533691406
    8. ')' → logprob: -19.000709533691406
    9. '  ' → logprob: -19.000709533691406
    10. '_d' → logprob: -19.750709533691406

Token 581: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.00043376852408982813
    2. '_s' → logprob: -8.125433921813965
    3. ',' → logprob: -9.500433921813965
    4. '_d' → logprob: -10.875433921813965
    5. ',y' → logprob: -11.250433921813965
    6. 'y' → logprob: -11.500433921813965
    7. ')' → logprob: -11.750433921813965
    8. '_,' → logprob: -12.125433921813965
    9. '_' → logprob: -12.875433921813965
    10. 'd' → logprob: -13.625433921813965

Token 582: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00027206414961256087
    2. ',d' → logprob: -8.250271797180176
    3. ' ,' → logprob: -11.500271797180176
    4. 'd' → logprob: -15.125271797180176
    5. ',
' → logprob: -15.500271797180176
    6. '   ' → logprob: -16.250272750854492
    7. '_,' → logprob: -17.125272750854492
    8. '[' → logprob: -17.625272750854492
    9. '```' → logprob: -18.500272750854492
    10. ')' → logprob: -18.625272750854492

Token 583: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0001584850688232109
    2. ' d' → logprob: -8.750158309936523
    3. '   ' → logprob: -18.875158309936523
    4. '
' → logprob: -19.125158309936523
    5. '	d' → logprob: -19.125158309936523
    6. 'def' → logprob: -19.375158309936523
    7. ')d' → logprob: -20.125158309936523
    8. '_d' → logprob: -20.625158309936523
    9. '```' → logprob: -20.625158309936523
    10. ' ' → logprob: -21.125158309936523

Token 584: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -9.13388703338569e-06
    2. 's' → logprob: -11.750009536743164
    3. ')' → logprob: -13.875009536743164
    4. '_' → logprob: -15.375009536743164
    5. '_)' → logprob: -17.375009536743164
    6. '_S' → logprob: -19.375009536743164
    7. 'd' → logprob: -19.500009536743164
    8. '[' → logprob: -19.625009536743164
    9. '```' → logprob: -20.125009536743164
    10. '   ' → logprob: -20.875009536743164

Token 585: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10048411041498184
    2. ')
' → logprob: -2.3504841327667236
    3. '   ' → logprob: -8.225483894348145
    4. ')
' → logprob: -11.725483894348145
    5. ' ' → logprob: -14.350483894348145
    6. ' )' → logprob: -14.475483894348145
    7. ' )
' → logprob: -15.600483894348145
    8. ')

' → logprob: -15.975483894348145
    9. '  ' → logprob: -16.35048484802246
    10. '()' → logprob: -16.60048484802246

Token 586: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20835652947425842
    2. 'print' → logprob: -1.708356499671936
    3. ' print' → logprob: -5.3333563804626465
    4. '
' → logprob: -6.3333563804626465
    5. '    
' → logprob: -8.708356857299805
    6. '	print' → logprob: -9.708356857299805
    7. '```' → logprob: -9.833356857299805
    8. '(print' → logprob: -10.958356857299805
    9. '_print' → logprob: -11.708356857299805
    10. '<|end|>' → logprob: -13.083356857299805

Token 587: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -6.749814019713085e-06
    2. '   ' → logprob: -12.500006675720215
    3. ' print' → logprob: -12.750006675720215
    4. '	print' → logprob: -16.75000762939453
    5. '```' → logprob: -18.00000762939453
    6. '#print' → logprob: -18.75000762939453
    7. '
' → logprob: -18.87500762939453
    8. '.print' → logprob: -19.62500762939453
    9. '(print' → logprob: -19.75000762939453
    10. ' ' → logprob: -19.87500762939453

Token 588: '_results' (ID: 31049)
  Prédit: '_results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_results' → logprob: -0.000619388825725764
    2. '()' → logprob: -7.875619411468506
    3. '_' → logprob: -9.250618934631348
    4. ' ' → logprob: -9.750618934631348
    5. 'results' → logprob: -10.500618934631348
    6. 'Results' → logprob: -11.125618934631348
    7. '(' → logprob: -11.375618934631348
    8. '(A' → logprob: -12.375618934631348
    9. '
' → logprob: -12.500618934631348
    10. '_RESULTS' → logprob: -12.625618934631348

Token 589: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: 0.0
    2. '(' → logprob: -18.0
    3. 'A' → logprob: -18.0
    4. '(AST' → logprob: -20.625
    5. '(
' → logprob: -21.25
    6. '(E' → logprob: -21.375
    7. '(I' → logprob: -21.875
    8. '()' → logprob: -22.75
    9. '(B' → logprob: -22.875
    10. '((' → logprob: -23.0

Token 590: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.4849443838757e-06
    2. ')
' → logprob: -13.000004768371582
    3. '())' → logprob: -13.250004768371582
    4. ' )' → logprob: -15.375004768371582
    5. '))' → logprob: -17.125003814697266
    6. ')`' → logprob: -17.125003814697266
    7. '()' → logprob: -17.375003814697266
    8. ')

' → logprob: -17.750003814697266
    9. '[])' → logprob: -18.125003814697266
    10. ')#' → logprob: -18.750003814697266

Token 591: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.061981577426195145
    2. 'main' → logprob: -2.811981678009033
    3. ' if' → logprob: -11.936981201171875
    4. '
' → logprob: -12.936981201171875
    5. '```' → logprob: -13.311981201171875
    6. ' main' → logprob: -13.561981201171875
    7. '(main' → logprob: -13.811981201171875
    8. '#' → logprob: -14.936981201171875
    9. '<|end|>' → logprob: -15.311981201171875
    10. 'import' → logprob: -15.436981201171875

Token 592: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 590
Tokens correctement prédits (1ère position, stricte): 269
Tokens correctement prédits (1ère position, avec adaptation): 287
Tokens correctement prédits (top 10): 520
Précision stricte (1ère position): 45.59%
Précision adaptée (1ère position): 48.64%
Précision (top 10): 88.14%
================================================================================
