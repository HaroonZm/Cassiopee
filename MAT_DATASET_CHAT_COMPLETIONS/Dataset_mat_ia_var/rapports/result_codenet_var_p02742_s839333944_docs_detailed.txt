================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:22:32
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def compute_max_dominoes(h: int, w: int) -> int:
    """
    Calcule le nombre maximal de dominos 2x1 pouvant être placés sur une grille de taille h x w sans chevauchement.
    
    Les dominos couvrent chacun deux cases adjacentes de la grille. Le but est de couvrir le maximum de cases 
    en utilisant des dominos entiers.

    Args:
        h (int): nombre de lignes de la grille.
        w (int): nombre de colonnes de la grille.

    Returns:
        int: nombre maximal de dominos qui peuvent être placés sur la grille.
    """
    # Si la grille n'a qu'une ligne ou qu'une colonne, traiter le cas spécial :
    # pour une grille 1x1 ou 1xn ou nx1, on ne peut placer qu'un seul domino si la taille totale >= 2, sinon zéro.
    # Si la grille a au moins 2 lignes ET 2 colonnes, placer le nombre maximum de dominos possible (surface // 2).
    # La division entière renvoie combien de dominos complets peuvent être placés.
    if h > 1 and w > 1:
        return (h * w) // 2
    else:
        # Pour les tableaux 1xN ou Nx1, on ne peut placer qu'un domino si la surface est supérieure ou égale à 2.
        # sum(divmod(h*w, 2)) donne (h*w)//2 + (h*w)%2, càd 1 si surface=1, sinon quantité de dominos.
        surface = h * w
        return sum(divmod(surface, 2))

def main():
    """
    Fonction principale: lit l'entrée utilisateur, calcule et affiche le nombre maximal de dominos.
    """
    # Lecture des dimensions de la grille : deux entiers séparés par un espace.
    h, w = map(int, input().split())
    # Calcul et affichage du nombre maximal de dominos pouvant être placés.
    print(compute_max_dominoes(h, w))

# Appel de la fonction principale si le script est exécuté directement
if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' compute' (ID: 23864)
  → Token d'amorce (pas de prédiction)

Token 2: '_max' (ID: 13731)
  → Token d'amorce (pas de prédiction)

Token 3: '_dom' (ID: 90214)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.009945790283381939
    2. '(_' → logprob: -6.009945869445801
    3. '_value' → logprob: -6.134945869445801
    4. '_length' → logprob: -6.634945869445801
    5. '_max' → logprob: -6.884945869445801
    6. '```' → logprob: -7.634945869445801
    7. ' _' → logprob: -8.1349458694458
    8. '_parent' → logprob: -8.3849458694458
    9. ')_' → logprob: -8.6349458694458
    10. '_size' → logprob: -9.0099458694458

Token 4: 'ino' (ID: 2081)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0030775293707847595
    2. 'ain' → logprob: -7.253077507019043
    3. '_value' → logprob: -7.878077507019043
    4. '_score' → logprob: -8.503077507019043
    5. '```' → logprob: -8.628077507019043
    6. 'in' → logprob: -8.753077507019043
    7. '_index' → logprob: -9.128077507019043
    8. '():' → logprob: -9.378077507019043
    9. '_in' → logprob: -9.503077507019043
    10. '(self' → logprob: -9.753077507019043

Token 5: 'es' (ID: 268)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2136935442686081
    2. '```' → logprob: -1.8386934995651245
    3. '(' → logprob: -4.713693618774414
    4. '(_' → logprob: -5.088693618774414
    5. ')_' → logprob: -5.713693618774414
    6. '`' → logprob: -6.338693618774414
    7. '_s' → logprob: -6.713693618774414
    8. '_size' → logprob: -6.838693618774414
    9. '_length' → logprob: -6.838693618774414
    10. '_pair' → logprob: -7.213693618774414

Token 6: '(h' (ID: 8120)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.35301080346107483
    2. '():' → logprob: -1.4780107736587524
    3. '_' → logprob: -3.353010892868042
    4. '_:' → logprob: -4.228010654449463
    5. '(:' → logprob: -4.478010654449463
    6. ':' → logprob: -5.853010654449463
    7. '(_:' → logprob: -6.353010654449463
    8. '(":' → logprob: -7.103010654449463
    9. '):' → logprob: -7.353010654449463
    10. '```' → logprob: -7.353010654449463

Token 7: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04220113158226013
    2. '):' → logprob: -3.542201042175293
    3. 'e' → logprob: -4.667201042175293
    4. 'ight' → logprob: -6.417201042175293
    5. 'eight' → logprob: -7.292201042175293
    6. 't' → logprob: -8.792201042175293
    7. 'a' → logprob: -9.417201042175293
    8. '=' → logprob: -9.542201042175293
    9. ')' → logprob: -9.542201042175293
    10. ' ,' → logprob: -9.667201042175293

Token 8: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -1.1509753465652466
    2. ',' → logprob: -1.2759753465652466
    3. ' ,' → logprob: -1.7759753465652466
    4. 'int' → logprob: -2.400975227355957
    5. ':int' → logprob: -2.900975227355957
    6. ' ' → logprob: -3.025975227355957
    7. ' :' → logprob: -3.775975227355957
    8. ':' → logprob: -4.775975227355957
    9. '=int' → logprob: -5.650975227355957
    10. ',int' → logprob: -6.775975227355957

Token 9: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003675609827041626
    2. ')' → logprob: -5.62867546081543
    3. ' ,' → logprob: -11.00367546081543
    4. ',)' → logprob: -11.37867546081543
    5. ',width' → logprob: -11.50367546081543
    6. '```' → logprob: -11.75367546081543
    7. '):' → logprob: -11.87867546081543
    8. ',b' → logprob: -12.25367546081543
    9. ',
' → logprob: -12.75367546081543
    10. ':' → logprob: -13.25367546081543

Token 10: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.16027763485908508
    2. 'w' → logprob: -1.9102776050567627
    3. ' ' → logprob: -11.535277366638184
    4. ' ' → logprob: -11.535277366638184
    5. '   ' → logprob: -12.535277366638184
    6. ' m' → logprob: -12.660277366638184
    7. 'd' → logprob: -12.785277366638184
    8. 'm' → logprob: -13.035277366638184
    9. 'def' → logprob: -13.160277366638184
    10. 'l' → logprob: -13.285277366638184

Token 11: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5202651619911194
    2. ')' → logprob: -1.1452651023864746
    3. ':' → logprob: -2.6452651023864746
    4. '```' → logprob: -4.770265102386475
    5. '):
' → logprob: -5.270265102386475
    6. ',' → logprob: -6.270265102386475
    7. '**' → logprob: -8.645265579223633
    8. '):

' → logprob: -8.645265579223633
    9. '):
' → logprob: -9.145265579223633
    10. '=' → logprob: -9.270265579223633

Token 12: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.04859565943479538
    2. ' int' → logprob: -3.048595666885376
    3. '=int' → logprob: -12.798595428466797
    4. ':int' → logprob: -13.048595428466797
    5. ')' → logprob: -13.298595428466797
    6. '[int' → logprob: -14.673595428466797
    7. '(int' → logprob: -14.923595428466797
    8. '<int' → logprob: -15.173595428466797
    9. ' ' → logprob: -15.548595428466797
    10. ' ' → logprob: -15.798595428466797

Token 13: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019953702576458454
    2. '):' → logprob: -6.37699556350708
    3. ')->' → logprob: -8.376995086669922
    4. '`)' → logprob: -10.876995086669922
    5. '```' → logprob: -11.126995086669922
    6. ':' → logprob: -11.751995086669922
    7. '):
' → logprob: -12.001995086669922
    8. ',' → logprob: -12.251995086669922
    9. '->' → logprob: -13.626995086669922
    10. '')' → logprob: -13.626995086669922

Token 14: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003956416912842542
    2. '':' → logprob: -8.750395774841309
    3. '_:' → logprob: -9.750395774841309
    4. '):' → logprob: -10.375395774841309
    5. ':return' → logprob: -10.375395774841309
    6. '():' → logprob: -10.500395774841309
    7. '`:' → logprob: -10.625395774841309
    8. '```' → logprob: -10.875395774841309
    9. '   ' → logprob: -11.500395774841309
    10. '":' → logprob: -11.500395774841309

Token 15: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5759604573249817
    2. ' int' → logprob: -0.8259604573249817
    3. '[int' → logprob: -11.825960159301758
    4. '(int' → logprob: -12.075960159301758
    5. ' ' → logprob: -12.575960159301758
    6. '<int' → logprob: -14.075960159301758
    7. ':int' → logprob: -14.075960159301758
    8. '	int' → logprob: -14.075960159301758
    9. '   ' → logprob: -14.450960159301758
    10. '```' → logprob: -14.575960159301758

Token 16: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001431114797014743
    2. '   ' → logprob: -10.000143051147461
    3. ':
' → logprob: -10.625143051147461
    4. '```' → logprob: -10.750143051147461
    5. '':' → logprob: -10.875143051147461
    6. '):' → logprob: -11.625143051147461
    7. '`:' → logprob: -11.875143051147461
    8. ':return' → logprob: -12.250143051147461
    9. '":' → logprob: -12.625143051147461
    10. ' :' → logprob: -12.875143051147461

Token 17: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14642176032066345
    2. '   ' → logprob: -2.0214216709136963
    3. ':
' → logprob: -6.771421909332275
    4. '```' → logprob: -7.021421909332275
    5. '\' → logprob: -7.396421909332275
    6. '    ' → logprob: -8.146421432495117
    7. ' ' → logprob: -8.521421432495117
    8. '\n' → logprob: -8.646421432495117
    9. ''' → logprob: -9.646421432495117
    10. '    
' → logprob: -10.021421432495117

Token 18: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09279307723045349
    2. ' ' → logprob: -3.0927929878234863
    3. '    ' → logprob: -3.9677929878234863
    4. '```' → logprob: -5.217792987823486
    5. '       ' → logprob: -5.842792987823486
    6. '\n' → logprob: -5.842792987823486
    7. '\' → logprob: -5.967792987823486
    8. ':' → logprob: -6.092792987823486
    9. 'return' → logprob: -6.592792987823486
    10. '`' → logprob: -6.967792987823486

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4674767851829529
    2. '"""' → logprob: -2.0924768447875977
    3. ' """' → logprob: -2.0924768447875977
    4. '#' → logprob: -3.3424768447875977
    5. 'n' → logprob: -4.217476844787598
    6. '\n' → logprob: -4.342476844787598
    7. ' if' → logprob: -4.467476844787598
    8. ')' → logprob: -4.967476844787598
    9. ' ' → logprob: -5.217476844787598
    10. ' """
' → logprob: -5.467476844787598

Token 20: ' Cal' (ID: 4453)
  Prédit: 'Calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Calculate' → logprob: -1.192115068435669
    2. '"""' → logprob: -1.317115068435669
    3. 'Given' → logprob: -1.942115068435669
    4. '#' → logprob: -2.317115068435669
    5. '"""
' → logprob: -2.317115068435669
    6. 'Returns' → logprob: -4.19211483001709
    7. 'Calcul' → logprob: -4.31711483001709
    8. 'Return' → logprob: -4.44211483001709
    9. 'Compute' → logprob: -4.56711483001709
    10. 'Determine' → logprob: -4.81711483001709

Token 21: 'cule' (ID: 45017)
  Prédit: 'culate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'culate' → logprob: -0.021265236660838127
    2. 'cul' → logprob: -4.271265029907227
    3. 'c' → logprob: -5.021265029907227
    4. 'cula' → logprob: -8.396265029907227
    5. '```' → logprob: -9.521265029907227
    6. 'cu' → logprob: -9.896265029907227
    7. '   ' → logprob: -10.146265029907227
    8. 'culated' → logprob: -10.271265029907227
    9. 'cule' → logprob: -11.021265029907227
    10. 'cular' → logprob: -11.646265029907227

Token 22: ' le' (ID: 505)
  Prédit: 'te'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'te' → logprob: -0.8297653794288635
    2. 's' → logprob: -0.9547653794288635
    3. 'r' → logprob: -2.5797653198242188
    4. 't' → logprob: -2.9547653198242188
    5. 'tes' → logprob: -3.3297653198242188
    6. 'ate' → logprob: -5.704765319824219
    7. ' la' → logprob: -5.704765319824219
    8. ' the' → logprob: -5.829765319824219
    9. 'u' → logprob: -7.079765319824219
    10. 'd' → logprob: -7.079765319824219

Token 23: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.006891435012221336
    2. 'nombre' → logprob: -5.006891250610352
    3. ' maximum' → logprob: -9.506891250610352
    4. ' ' → logprob: -10.506891250610352
    5. ' nombres' → logprob: -10.506891250610352
    6. '   ' → logprob: -11.006891250610352
    7. ' nomb' → logprob: -11.506891250610352
    8. 'n' → logprob: -12.256891250610352
    9. ' nombr' → logprob: -12.881891250610352
    10. ' number' → logprob: -12.881891250610352

Token 24: ' maximal' (ID: 65414)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.8087960481643677
    2. ' maximal' → logprob: -1.5587960481643677
    3. ' ' → logprob: -1.8087960481643677
    4. '  ' → logprob: -2.558795928955078
    5. ' maximale' → logprob: -3.683795928955078
    6. '   ' → logprob: -4.058795928955078
    7. ' maximum' → logprob: -4.058795928955078
    8. 'max' → logprob: -4.433795928955078
    9. ' d' → logprob: -4.558795928955078
    10. ' max' → logprob: -5.433795928955078

Token 25: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5870166420936584
    2. ' de' → logprob: -1.7120165824890137
    3. ' d' → logprob: -1.7120165824890137
    4. 'de' → logprob: -3.3370165824890137
    5. 'd' → logprob: -4.212016582489014
    6. '  ' → logprob: -4.587016582489014
    7. '_' → logprob: -4.837016582489014
    8. '   ' → logprob: -5.462016582489014
    9. '    ' → logprob: -6.212016582489014
    10. '```' → logprob: -6.212016582489014

Token 26: ' dom' (ID: 3878)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0971926674246788
    2. 'dom' → logprob: -2.9721927642822266
    3. ' domino' → logprob: -4.097192764282227
    4. ' dom' → logprob: -4.972192764282227
    5. ' cases' → logprob: -5.722192764282227
    6. 'cases' → logprob: -6.597192764282227
    7. 't' → logprob: -6.597192764282227
    8. '_' → logprob: -6.597192764282227
    9. ' espaces' → logprob: -6.722192764282227
    10. ' t' → logprob: -6.722192764282227

Token 27: 'inos' (ID: 8200)
  Prédit: 'ino'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ino' → logprob: -0.016383303329348564
    2. 'inos' → logprob: -4.266383171081543
    3. 'i' → logprob: -6.641383171081543
    4. 'ино' → logprob: -7.891383171081543
    5. 'in' → logprob: -8.391383171081543
    6. '```' → logprob: -9.391383171081543
    7. '##' → logprob: -10.516383171081543
    8. '   ' → logprob: -11.016383171081543
    9. '**' → logprob: -11.266383171081543
    10. '``' → logprob: -11.766383171081543

Token 28: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.007067112717777491
    2. '_' → logprob: -6.7570672035217285
    3. ' that' → logprob: -6.7570672035217285
    4. ' pouvant' → logprob: -6.7570672035217285
    5. '   ' → logprob: -7.0070672035217285
    6. '  ' → logprob: -7.7570672035217285
    7. '```' → logprob: -8.00706672668457
    8. 's' → logprob: -8.13206672668457
    9. ' can' → logprob: -9.00706672668457
    10. ' `' → logprob: -9.00706672668457

Token 29: '2' (ID: 17)
  Prédit: ' pouvant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pouvant' → logprob: -0.23717685043811798
    2. ' ' → logprob: -2.8621768951416016
    3. 'qui' → logprob: -3.6121768951416016
    4. ' qui' → logprob: -3.7371768951416016
    5. ' que' → logprob: -3.9871768951416016
    6. 'plac' → logprob: -4.612176895141602
    7. ' (' → logprob: -5.112176895141602
    8. '(' → logprob: -5.237176895141602
    9. '```' → logprob: -5.237176895141602
    10. ' that' → logprob: -5.362176895141602

Token 30: 'x' (ID: 87)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12269755452871323
    2. '-' → logprob: -3.622697591781616
    3. 'sur' → logprob: -3.872697591781616
    4. ' sur' → logprob: -3.997697591781616
    5. ' -' → logprob: -4.872697353363037
    6. ' par' → logprob: -5.247697353363037
    7. ')' → logprob: -5.247697353363037
    8. '*' → logprob: -5.372697353363037
    9. '-sur' → logprob: -5.997697353363037
    10. ' ' → logprob: -5.997697353363037

Token 31: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0493769496679306
    2. ' ' → logprob: -3.424376964569092
    3. '1' → logprob: -4.674376964569092
    4. '```' → logprob: -5.424376964569092
    5. '3' → logprob: -7.674376964569092
    6. '4' → logprob: -7.799376964569092
    7. ''' → logprob: -8.799376487731934
    8. ' ```' → logprob: -9.174376487731934
    9. '"' → logprob: -9.299376487731934
    10. '`' → logprob: -9.299376487731934

Token 32: ' pouvant' (ID: 104840)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.004200678784400225
    2. ' that' → logprob: -7.004200458526611
    3. ')' → logprob: -7.504200458526611
    4. '   ' → logprob: -8.25420093536377
    5. ' pouvant' → logprob: -8.25420093536377
    6. '```' → logprob: -8.25420093536377
    7. ' )' → logprob: -8.50420093536377
    8. ' ,' → logprob: -8.62920093536377
    9. ' :' → logprob: -8.62920093536377
    10. ''' → logprob: -8.75420093536377

Token 33: ' être' (ID: 9104)
  Prédit: ' être'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' être' → logprob: -0.5671328902244568
    2. ' couvrir' → logprob: -1.1921329498291016
    3. ' be' → logprob: -2.8171329498291016
    4. ' s' → logprob: -3.9421329498291016
    5. 'être' → logprob: -3.9421329498291016
    6. ' etre' → logprob: -4.567132949829102
    7. ' tenir' → logprob: -5.442132949829102
    8. ' ' → logprob: -5.692132949829102
    9. ' conten' → logprob: -6.692132949829102
    10. 'e' → logprob: -6.942132949829102

Token 34: ' plac' (ID: 7097)
  Prédit: ' plac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plac' → logprob: -0.2666225731372833
    2. 'plac' → logprob: -1.641622543334961
    3. 'pos' → logprob: -3.641622543334961
    4. ' placé' → logprob: -4.641622543334961
    5. ' pos' → logprob: -6.016622543334961
    6. 'position' → logprob: -8.391622543334961
    7. 'placer' → logprob: -8.516622543334961
    8. 'pla' → logprob: -8.516622543334961
    9. 'place' → logprob: -8.641622543334961
    10. '```' → logprob: -8.641622543334961

Token 35: 'és' (ID: 1756)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.5763746500015259
    2. 'és' → logprob: -0.8263746500015259
    3. 'e' → logprob: -8.076375007629395
    4. 'er' → logprob: -9.826375007629395
    5. 'es' → logprob: -10.576375007629395
    6. '&eacute' → logprob: -11.451375007629395
    7. 'ées' → logprob: -11.826375007629395
    8. 'u' → logprob: -12.076375007629395
    9. 's' → logprob: -12.326375007629395
    10. 'е' → logprob: -13.201375007629395

Token 36: ' sur' (ID: 1512)
  Prédit: ' sur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sur' → logprob: -0.39981475472450256
    2. 'sur' → logprob: -1.1498147249221802
    3. ' dans' → logprob: -5.899814605712891
    4. ',' → logprob: -6.274814605712891
    5. ' ' → logprob: -6.274814605712891
    6. '```' → logprob: -6.399814605712891
    7. 'dans' → logprob: -6.524814605712891
    8. ' en' → logprob: -6.899814605712891
    9. '.' → logprob: -7.399814605712891
    10. ' """' → logprob: -8.27481460571289

Token 37: ' une' (ID: 2463)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.8044963479042053
    2. ' une' → logprob: -0.8044963479042053
    3. ' ' → logprob: -2.4294962882995605
    4. ' la' → logprob: -5.4294962882995605
    5. 'une' → logprob: -5.6794962882995605
    6. ' ' → logprob: -5.8044962882995605
    7. '```' → logprob: -6.5544962882995605
    8. '   ' → logprob: -6.6794962882995605
    9. ' a' → logprob: -7.4294962882995605
    10. 'l' → logprob: -7.5544962882995605

Token 38: ' grille' (ID: 99153)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24297188222408295
    2. ' surface' → logprob: -3.117971897125244
    3. ' grille' → logprob: -3.367971897125244
    4. ' ' → logprob: -3.492971897125244
    5. 'gr' → logprob: -3.867971897125244
    6. ' case' → logprob: -3.992971897125244
    7. '   ' → logprob: -4.117971897125244
    8. 'surface' → logprob: -4.867971897125244
    9. 'e' → logprob: -5.617971897125244
    10. ' éch' → logprob: -5.742971897125244

Token 39: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.48897650837898254
    2. ' de' → logprob: -1.3639764785766602
    3. '\' → logprob: -3.23897647857666
    4. '   ' → logprob: -3.61397647857666
    5. ' d' → logprob: -4.48897647857666
    6. '```' → logprob: -4.48897647857666
    7. ',' → logprob: -4.86397647857666
    8. '\n' → logprob: -4.98897647857666
    9. ' (' → logprob: -5.11397647857666
    10. ' ,' → logprob: -5.73897647857666

Token 40: ' taille' (ID: 41644)
  Prédit: ' dimensions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dimensions' → logprob: -1.0234659910202026
    2. ' h' → logprob: -1.3984659910202026
    3. ' taille' → logprob: -1.8984659910202026
    4. ' ' → logprob: -2.398466110229492
    5. 'h' → logprob: -2.773466110229492
    6. ' hauteur' → logprob: -3.898466110229492
    7. ' dimension' → logprob: -4.023466110229492
    8. 'dimensions' → logprob: -4.148466110229492
    9. 'ha' → logprob: -5.023466110229492
    10. ' grille' → logprob: -5.273466110229492

Token 41: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.01298573985695839
    2. 'h' → logprob: -5.012985706329346
    3. ' ' → logprob: -5.137985706329346
    4. ' \(' → logprob: -8.887986183166504
    5. ' (' → logprob: -9.137986183166504
    6. '(h' → logprob: -10.887986183166504
    7. ' ```' → logprob: -11.137986183166504
    8. '```' → logprob: -11.137986183166504
    9. ' `' → logprob: -11.262986183166504
    10. ' ' → logprob: -11.512986183166504

Token 42: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.11753370612859726
    2. ' ' → logprob: -2.6175336837768555
    3. ',' → logprob: -4.3675336837768555
    4. '   ' → logprob: -4.7425336837768555
    5. ' *' → logprob: -4.8675336837768555
    6. ' ×' → logprob: -5.4925336837768555
    7. 'x' → logprob: -5.8675336837768555
    8. '*' → logprob: -6.7425336837768555
    9. '\t' → logprob: -8.367533683776855
    10. '×' → logprob: -8.492533683776855

Token 43: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.16070884466171265
    2. 'w' → logprob: -1.9107089042663574
    3. ' ' → logprob: -7.660708904266357
    4. '```' → logprob: -12.1607084274292
    5. ' ' → logprob: -12.6607084274292
    6. '   ' → logprob: -13.6607084274292
    7. '  ' → logprob: -13.7857084274292
    8. '	w' → logprob: -14.0357084274292
    9. ' ```' → logprob: -14.5357084274292
    10. '2' → logprob: -14.7857084274292

Token 44: ' sans' (ID: 9828)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33403798937797546
    2. '.' → logprob: -2.209038019180298
    3. '\n' → logprob: -2.209038019180298
    4. '
' → logprob: -3.959038019180298
    5. ':' → logprob: -4.209037780761719
    6. '\' → logprob: -4.834037780761719
    7. '    
' → logprob: -5.334037780761719
    8. ',' → logprob: -5.459037780761719
    9. '"""' → logprob: -5.709037780761719
    10. '```' → logprob: -5.959037780761719

Token 45: ' chev' (ID: 127415)
  Prédit: 'che'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'che' → logprob: -1.2274662256240845
    2. ' chev' → logprob: -1.9774662256240845
    3. ' dépasser' → logprob: -2.727466106414795
    4. 'dé' → logprob: -2.852466106414795
    5. ' rec' → logprob: -3.102466106414795
    6. 'es' → logprob: -3.102466106414795
    7. ' les' → logprob: -3.227466106414795
    8. ' super' → logprob: -3.227466106414795
    9. 'esp' → logprob: -3.352466106414795
    10. 'super' → logprob: -3.352466106414795

Token 46: 'auche' (ID: 143141)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07291397452354431
    2. 'au' → logprob: -2.697913885116577
    3. 'auer' → logprob: -7.072914123535156
    4. 'а' → logprob: -7.072914123535156
    5. '   ' → logprob: -7.947914123535156
    6. 'aub' → logprob: -8.322914123535156
    7. 'aqu' → logprob: -9.197914123535156
    8. 'aus' → logprob: -9.322914123535156
    9. 'auche' → logprob: -9.447914123535156
    10. '

' → logprob: -9.822914123535156

Token 47: 'ment' (ID: 508)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.28397297859191895
    2. 'ment' → logprob: -1.408972978591919
    3. 'm' → logprob: -6.78397274017334
    4. 'ement' → logprob: -7.15897274017334
    5. 'rement' → logprob: -7.65897274017334
    6. ' r' → logprob: -9.40897274017334
    7. '   ' → logprob: -9.65897274017334
    8. 'lement' → logprob: -9.90897274017334
    9. 't' → logprob: -9.90897274017334
    10. 'nement' → logprob: -10.40897274017334

Token 48: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16544026136398315
    2. '\n' → logprob: -2.915440320968628
    3. ':' → logprob: -3.165440320968628
    4. '.' → logprob: -3.415440320968628
    5. ',' → logprob: -4.915440082550049
    6. '\' → logprob: -5.540440082550049
    7. '```' → logprob: -5.915440082550049
    8. '
' → logprob: -6.540440082550049
    9. ')' → logprob: -6.665440082550049
    10. '    
' → logprob: -6.790440082550049

Token 49: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02340817265212536
    2. '\n' → logprob: -4.648407936096191
    3. '"""' → logprob: -5.023407936096191
    4. ')' → logprob: -6.148407936096191
    5. '    
' → logprob: -6.648407936096191
    6. '```' → logprob: -6.773407936096191
    7. '"""
' → logprob: -7.273407936096191
    8. '
' → logprob: -7.398407936096191
    9. ' 
' → logprob: -8.523407936096191
    10. ' ' → logprob: -8.898407936096191

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007837293669581413
    2. '"""' → logprob: -5.382837295532227
    3. ' """' → logprob: -6.257837295532227
    4. ')' → logprob: -7.882837295532227
    5. '    ' → logprob: -8.007837295532227
    6. '```' → logprob: -9.132837295532227
    7. '\n' → logprob: -9.257837295532227
    8. ' ' → logprob: -9.257837295532227
    9. ' """
' → logprob: -9.632837295532227
    10. '  ' → logprob: -10.382837295532227

Token 51: ' Les' (ID: 7029)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.059782933443784714
    2. 'On' → logprob: -3.5597829818725586
    3. '"""' → logprob: -4.559782981872559
    4. 'La' → logprob: -4.934782981872559
    5. 'Le' → logprob: -5.934782981872559
    6. 'Chaque' → logprob: -6.309782981872559
    7. ' La' → logprob: -6.809782981872559
    8. ' On' → logprob: -6.934782981872559
    9. ' """' → logprob: -6.934782981872559
    10. '    ' → logprob: -6.934782981872559

Token 52: ' dom' (ID: 3878)
  Prédit: ' dom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dom' → logprob: -0.7215554118156433
    2. ' espaces' → logprob: -1.471555471420288
    3. ' ' → logprob: -2.346555471420288
    4. '  ' → logprob: -2.971555471420288
    5. ' d' → logprob: -3.471555471420288
    6. 'dom' → logprob: -3.721555471420288
    7. '   ' → logprob: -4.221555233001709
    8. '    ' → logprob: -4.596555233001709
    9. ' cases' → logprob: -4.596555233001709
    10. ' meilleurs' → logprob: -5.221555233001709

Token 53: 'inos' (ID: 8200)
  Prédit: 'inos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inos' → logprob: -0.8070501685142517
    2. 'ino' → logprob: -1.1820502281188965
    3. 'i' → logprob: -1.8070502281188965
    4. '```' → logprob: -4.0570502281188965
    5. '   ' → logprob: -4.1820502281188965
    6. '``' → logprob: -4.9320502281188965
    7. 'ино' → logprob: -5.3070502281188965
    8. 'in' → logprob: -5.5570502281188965
    9. '\' → logprob: -5.6820502281188965
    10. '**' → logprob: -5.8070502281188965

Token 54: ' couvr' (ID: 129883)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14313220977783203
    2. ' peuvent' → logprob: -2.143132209777832
    3. ' couvr' → logprob: -4.893132209777832
    4. ' sont' → logprob: -5.893132209777832
    5. ' pouvant' → logprob: -6.518132209777832
    6. 's' → logprob: -7.268132209777832
    7. ' plac' → logprob: -7.268132209777832
    8. ' can' → logprob: -7.768132209777832
    9. ' peux' → logprob: -8.143132209777832
    10. ' ' → logprob: -8.518132209777832

Token 55: 'ent' (ID: 299)
  Prédit: 'ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.0007459024200215936
    2. 'ant' → logprob: -7.25074577331543
    3. '   ' → logprob: -11.12574577331543
    4. ' ent' → logprob: -12.00074577331543
    5. 'aient' → logprob: -12.25074577331543
    6. 'nt' → logprob: -13.25074577331543
    7. 'e' → logprob: -13.87574577331543
    8. '#' → logprob: -14.00074577331543
    9. '```' → logprob: -14.00074577331543
    10. 'ont' → logprob: -14.12574577331543

Token 56: ' chacun' (ID: 52136)
  Prédit: ' deux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.2687510550022125
    2. ' ' → logprob: -1.8937510251998901
    3. 'de' → logprob: -3.0187511444091797
    4. ' exactement' → logprob: -4.14375114440918
    5. ' une' → logprob: -5.26875114440918
    6. '2' → logprob: -5.64375114440918
    7. ' toujours' → logprob: -5.76875114440918
    8. ' au' → logprob: -6.89375114440918
    9. ' two' → logprob: -7.01875114440918
    10. 'au' → logprob: -7.14375114440918

Token 57: ' deux' (ID: 10301)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5106611251831055
    2. ' deux' → logprob: -1.5106611251831055
    3. '2' → logprob: -2.1356611251831055
    4. 'de' → logprob: -2.8856611251831055
    5. ' exactement' → logprob: -6.1356611251831055
    6. 'exact' → logprob: -6.8856611251831055
    7. ' two' → logprob: -7.5106611251831055
    8. ' ' → logprob: -7.8856611251831055
    9. ' exactly' → logprob: -8.010661125183105
    10. '```' → logprob: -9.385661125183105

Token 58: ' cases' (ID: 7911)
  Prédit: 'cases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cases' → logprob: -0.5210594534873962
    2. ' cases' → logprob: -1.396059513092041
    3. ' espaces' → logprob: -3.021059513092041
    4. 'case' → logprob: -3.146059513092041
    5. ' ' → logprob: -4.146059513092041
    6. '<|end|>' → logprob: -4.396059513092041
    7. ' cellules' → logprob: -4.771059513092041
    8. ' case' → logprob: -5.146059513092041
    9. 'c' → logprob: -5.521059513092041
    10. 'esp' → logprob: -5.646059513092041

Token 59: ' adj' (ID: 20251)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29603686928749084
    2. ',' → logprob: -2.296036958694458
    3. ' ,' → logprob: -2.421036958694458
    4. ' .' → logprob: -3.171036958694458
    5. ' de' → logprob: -4.671036720275879
    6. ' (' → logprob: -5.421036720275879
    7. ' ' → logprob: -6.421036720275879
    8. ' adj' → logprob: -6.421036720275879
    9. ' sur' → logprob: -6.546036720275879
    10. ' non' → logprob: -7.296036720275879

Token 60: 'ac' (ID: 359)
  Prédit: 'ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.0208663921803236
    2. 'a' → logprob: -4.645866394042969
    3. 'acent' → logprob: -4.770866394042969
    4. 'acency' → logprob: -7.770866394042969
    5. '   ' → logprob: -8.270866394042969
    6. ' ac' → logprob: -8.645866394042969
    7. 'aces' → logprob: -8.645866394042969
    8. '```' → logprob: -9.020866394042969
    9. ' a' → logprob: -9.083366394042969
    10. 'uentes' → logprob: -9.145866394042969

Token 61: 'entes' (ID: 5651)
  Prédit: 'entes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entes' → logprob: -0.004704237915575504
    2. 'ente' → logprob: -6.504704475402832
    3. 'ent' → logprob: -6.879704475402832
    4. 'e' → logprob: -7.629704475402832
    5. 'es' → logprob: -7.629704475402832
    6. 'ents' → logprob: -7.879704475402832
    7. '   ' → logprob: -9.379704475402832
    8. ' ' → logprob: -9.379704475402832
    9. 'ENTES' → logprob: -9.504704475402832
    10. 'a' → logprob: -10.004704475402832

Token 62: ' de' (ID: 334)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4464666545391083
    2. ',' → logprob: -1.5714666843414307
    3. ' (' → logprob: -2.8214666843414307
    4. ' de' → logprob: -3.1964666843414307
    5. ' ,' → logprob: -4.071466445922852
    6. ' ' → logprob: -4.446466445922852
    7. '   ' → logprob: -5.071466445922852
    8. ' .' → logprob: -5.946466445922852
    9. ' sur' → logprob: -6.071466445922852
    10. '```' → logprob: -6.321466445922852

Token 63: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.02237447164952755
    2. 'la' → logprob: -4.272374629974365
    3. 'l' → logprob: -5.397374629974365
    4. ' l' → logprob: -6.147374629974365
    5. '```' → logprob: -7.647374629974365
    6. ' grille' → logprob: -8.147374153137207
    7. ' ' → logprob: -9.272374153137207
    8. ' the' → logprob: -9.397374153137207
    9. ' code' → logprob: -9.522374153137207
    10. ' cases' → logprob: -9.772374153137207

Token 64: ' grille' (ID: 99153)
  Prédit: ' grille'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grille' → logprob: -0.5837512016296387
    2. 'gr' → logprob: -0.8337512016296387
    3. ' même' → logprob: -5.083751201629639
    4. 'm' → logprob: -7.333751201629639
    5. ' gr' → logprob: -7.833751201629639
    6. '   ' → logprob: -8.333751678466797
    7. '```' → logprob: -9.583751678466797
    8. 'plate' → logprob: -10.333751678466797
    9. '_gr' → logprob: -10.583751678466797
    10. ' grid' → logprob: -10.833751678466797

Token 65: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.19396935403347015
    2. '   ' → logprob: -2.443969249725342
    3. ',' → logprob: -2.943969249725342
    4. '\n' → logprob: -4.443969249725342
    5. '\' → logprob: -4.693969249725342
    6. '.
' → logprob: -6.068969249725342
    7. '"' → logprob: -6.568969249725342
    8. ',
' → logprob: -6.568969249725342
    9. ' .' → logprob: -6.568969249725342
    10. '    
' → logprob: -6.693969249725342

Token 66: ' Le' (ID: 2018)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19641457498073578
    2. '\n' → logprob: -2.1964144706726074
    3. '"""' → logprob: -3.4464144706726074
    4. '
' → logprob: -4.821414470672607
    5. '\' → logprob: -4.946414470672607
    6. '    
' → logprob: -5.196414470672607
    7. '"""
' → logprob: -5.696414470672607
    8. ' 
' → logprob: -5.946414470672607
    9. '""' → logprob: -6.571414470672607
    10. '"' → logprob: -6.571414470672607

Token 67: ' but' (ID: 889)
  Prédit: ' nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.08140229433774948
    2. 'nombre' → logprob: -3.95640230178833
    3. ' ' → logprob: -4.45640230178833
    4. 's' → logprob: -4.70640230178833
    5. ' maximum' → logprob: -4.95640230178833
    6. ' code' → logprob: -5.45640230178833
    7. 'u' → logprob: -5.70640230178833
    8. 'r' → logprob: -5.70640230178833
    9. ' espace' → logprob: -5.83140230178833
    10. 'n' → logprob: -6.08140230178833

Token 68: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.14574523270130157
    2. ' ' → logprob: -2.270745277404785
    3. ' d' → logprob: -4.395745277404785
    4. ' de' → logprob: -4.645745277404785
    5. ' is' → logprob: -4.895745277404785
    6. ' des' → logprob: -6.770745277404785
    7. '  ' → logprob: -7.145745277404785
    8. '   ' → logprob: -8.395745277404785
    9. ' e' → logprob: -9.020745277404785
    10. ' ' → logprob: -9.270745277404785

Token 69: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.20182211697101593
    2. ' d' → logprob: -1.9518221616744995
    3. '    ' → logprob: -3.57682204246521
    4. '   ' → logprob: -4.951822280883789
    5. ' ' → logprob: -6.201822280883789
    6. '  ' → logprob: -6.826822280883789
    7. ' to' → logprob: -7.326822280883789
    8. ' que' → logprob: -7.451822280883789
    9. 'de' → logprob: -7.701822280883789
    10. 'd' → logprob: -8.076822280883789

Token 70: ' couvrir' (ID: 197187)
  Prédit: ' couvrir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' couvrir' → logprob: -0.9898051619529724
    2. ' placer' → logprob: -1.2398052215576172
    3. 'placer' → logprob: -1.3648052215576172
    4. ' maxim' → logprob: -3.364805221557617
    5. ' remplir' → logprob: -4.364805221557617
    6. '   ' → logprob: -5.364805221557617
    7. ' rec' → logprob: -5.614805221557617
    8. 'plac' → logprob: -5.864805221557617
    9. ' compléter' → logprob: -5.864805221557617
    10. 'max' → logprob: -5.989805221557617

Token 71: ' le' (ID: 505)
  Prédit: ' au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.28703951835632324
    2. ' la' → logprob: -2.5370395183563232
    3. ' l' → logprob: -3.4120395183563232
    4. ' tout' → logprob: -3.6620395183563232
    5. 'au' → logprob: -3.6620395183563232
    6. ' toute' → logprob: -3.7870395183563232
    7. ' le' → logprob: -3.9120395183563232
    8. ' entièrement' → logprob: -5.037039756774902
    9. 'ent' → logprob: -5.287039756774902
    10. '   ' → logprob: -5.412039756774902

Token 72: ' maximum' (ID: 10562)
  Prédit: ' plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.5809922218322754
    2. ' maximum' → logprob: -1.8309922218322754
    3. 'plus' → logprob: -2.2059922218322754
    4. ' nombre' → logprob: -3.2059922218322754
    5. 'nombre' → logprob: -3.3309922218322754
    6. '   ' → logprob: -3.8309922218322754
    7. 's' → logprob: -4.705992221832275
    8. 'maximum' → logprob: -4.705992221832275
    9. 'gr' → logprob: -4.830992221832275
    10. 'e' → logprob: -4.830992221832275

Token 73: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6018610596656799
    2. ' possible' → logprob: -1.1018610000610352
    3. ' d' → logprob: -2.726861000061035
    4. ' ' → logprob: -3.601861000061035
    5. '_possible' → logprob: -4.726861000061035
    6. 'possible' → logprob: -5.226861000061035
    7. 'de' → logprob: -5.476861000061035
    8. '_' → logprob: -5.601861000061035
    9. ' _' → logprob: -6.476861000061035
    10. ' nombre' → logprob: -6.851861000061035

Token 74: ' cases' (ID: 7911)
  Prédit: ' cases'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cases' → logprob: -0.3587290346622467
    2. 'cases' → logprob: -1.3587290048599243
    3. ' ' → logprob: -3.858729124069214
    4. ' espaces' → logprob: -4.858728885650635
    5. ' case' → logprob: -5.483728885650635
    6. 'c' → logprob: -5.858728885650635
    7. '```' → logprob: -6.733728885650635
    8. ' cas' → logprob: -6.733728885650635
    9. 'case' → logprob: -6.858728885650635
    10. ' cellules' → logprob: -6.983728885650635

Token 75: ' 
' (ID: 793)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8669686913490295
    2. ' possible' → logprob: -1.6169686317443848
    3. ' utilis' → logprob: -3.2419686317443848
    4. ' ,' → logprob: -3.2419686317443848
    5. ' .' → logprob: -3.3669686317443848
    6. '   ' → logprob: -3.3669686317443848
    7. ' avec' → logprob: -3.4919686317443848
    8. ',' → logprob: -3.6169686317443848
    9. ' de' → logprob: -3.6169686317443848
    10. ' sans' → logprob: -3.6169686317443848

Token 76: '   ' (ID: 271)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.4205842018127441
    2. ' avec' → logprob: -1.6705842018127441
    3. ' sans' → logprob: -1.9205842018127441
    4. ' de' → logprob: -3.045584201812744
    5. ' ,' → logprob: -3.170584201812744
    6. 'sans' → logprob: -3.170584201812744
    7. ' possible' → logprob: -3.420584201812744
    8. ' utilis' → logprob: -3.420584201812744
    9. ' non' → logprob: -3.420584201812744
    10. ' par' → logprob: -3.670584201812744

Token 77: ' en' (ID: 469)
  Prédit: ' avec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' avec' → logprob: -1.9049932956695557
    2. ' par' → logprob: -2.0299932956695557
    3. '.' → logprob: -2.4049932956695557
    4. ' utilis' → logprob: -2.6549932956695557
    5. 'sans' → logprob: -2.6549932956695557
    6. 'avec' → logprob: -3.0299932956695557
    7. ' sans' → logprob: -3.0299932956695557
    8. '```' → logprob: -3.1549932956695557
    9. ' possible' → logprob: -3.2799932956695557
    10. 'poss' → logprob: -3.4049932956695557

Token 78: ' utilisant' (ID: 92474)
  Prédit: ' utilisant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisant' → logprob: -0.20936048030853271
    2. 'util' → logprob: -2.3343605995178223
    3. ' les' → logprob: -3.2093605995178223
    4. ' pla' → logprob: -3.7093605995178223
    5. 'pla' → logprob: -4.584360599517822
    6. ' respect' → logprob: -6.584360599517822
    7. 'plac' → logprob: -6.584360599517822
    8. ' plac' → logprob: -7.084360599517822
    9. ' utilis' → logprob: -7.209360599517822
    10. 'les' → logprob: -7.209360599517822

Token 79: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.1485182046890259
    2. ' la' → logprob: -1.3985182046890259
    3. 'des' → logprob: -2.5235180854797363
    4. ' le' → logprob: -2.7735180854797363
    5. '```' → logprob: -2.8985180854797363
    6. ' toute' → logprob: -3.0235180854797363
    7. ' au' → logprob: -3.3985180854797363
    8. ' deux' → logprob: -3.7735180854797363
    9. 'le' → logprob: -4.023518085479736
    10. ' une' → logprob: -4.023518085479736

Token 80: ' dom' (ID: 3878)
  Prédit: 'dom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dom' → logprob: -0.11402280628681183
    2. ' dom' → logprob: -2.239022731781006
    3. ' domino' → logprob: -7.739022731781006
    4. '```' → logprob: -9.364023208618164
    5. '2' → logprob: -9.489023208618164
    6. ' pairs' → logprob: -9.489023208618164
    7. ' espaces' → logprob: -9.614023208618164
    8. ' ' → logprob: -9.739023208618164
    9. 'domain' → logprob: -9.864023208618164
    10. ' domain' → logprob: -10.801523208618164

Token 81: 'inos' (ID: 8200)
  Prédit: 'inos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inos' → logprob: -0.1643182635307312
    2. 'ino' → logprob: -1.914318323135376
    3. 'in' → logprob: -6.789318084716797
    4. '```' → logprob: -7.164318084716797
    5. 'ines' → logprob: -7.289318084716797
    6. 'i' → logprob: -7.789318084716797
    7. 'ино' → logprob: -8.164318084716797
    8. '   ' → logprob: -8.289318084716797
    9. 'es' → logprob: -9.164318084716797
    10. '``' → logprob: -9.539318084716797

Token 82: ' ent' (ID: 1121)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.11098062992095947
    2. '   ' → logprob: -2.98598051071167
    3. ',' → logprob: -3.11098051071167
    4. '\' → logprob: -6.23598051071167
    5. '\n' → logprob: -6.23598051071167
    6. ' ,' → logprob: -6.86098051071167
    7. '    
' → logprob: -6.86098051071167
    8. '.
' → logprob: -7.61098051071167
    9. ' .' → logprob: -7.86098051071167
    10. '"' → logprob: -7.86098051071167

Token 83: 'iers' (ID: 11012)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.410080224275589
    2. 'ières' → logprob: -1.5350801944732666
    3. 'ière' → logprob: -2.1600801944732666
    4. '   ' → logprob: -5.910080432891846
    5. 'iers' → logprob: -7.160080432891846
    6. 'ier' → logprob: -7.535080432891846
    7. '```' → logprob: -7.660080432891846
    8. '       ' → logprob: -7.785080432891846
    9. 'ié' → logprob: -8.785079956054688
    10. 'èrement' → logprob: -9.910079956054688

Token 84: '.

' (ID: 364)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.08394577354192734
    2. '   ' → logprob: -2.8339457511901855
    3. ',' → logprob: -4.0839457511901855
    4. ':' → logprob: -6.3339457511901855
    5. '\' → logprob: -7.5839457511901855
    6. '.
' → logprob: -7.7089457511901855
    7. '\n' → logprob: -8.083946228027344
    8. ' ,' → logprob: -8.208946228027344
    9. ' .' → logprob: -8.833946228027344
    10. '"' → logprob: -8.958946228027344

Token 85: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00037490393151529133
    2. '"""' → logprob: -8.875374794006348
    3. '    
' → logprob: -10.125374794006348
    4. ')' → logprob: -10.125374794006348
    5. '```' → logprob: -10.125374794006348
    6. '    ' → logprob: -10.125374794006348
    7. '\n' → logprob: -10.625374794006348
    8. '
' → logprob: -11.125374794006348
    9. '     
' → logprob: -12.125374794006348
    10. '\' → logprob: -12.375374794006348

Token 86: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008261834154836833
    2. '```' → logprob: -8.125825881958008
    3. '    ' → logprob: -8.375825881958008
    4. '"""' → logprob: -8.625825881958008
    5. '
' → logprob: -10.000825881958008
    6. '    
' → logprob: -10.875825881958008
    7. '\n' → logprob: -11.125825881958008
    8. ')' → logprob: -11.625825881958008
    9. '  ' → logprob: -12.250825881958008
    10. '     
' → logprob: -12.500825881958008

Token 87: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14895257353782654
    2. '   ' → logprob: -2.3989524841308594
    3. '```' → logprob: -4.148952484130859
    4. ' :' → logprob: -4.398952484130859
    5. '):' → logprob: -4.648952484130859
    6. ')' → logprob: -5.523952484130859
    7. ',' → logprob: -6.273952484130859
    8. 'def' → logprob: -6.773952484130859
    9. '`:' → logprob: -7.773952484130859
    10. 'h' → logprob: -7.773952484130859

Token 88: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11758435517549515
    2. 'h' → logprob: -2.617584466934204
    3. ' h' → logprob: -3.367584466934204
    4. ' ' → logprob: -6.992584228515625
    5. ')' → logprob: -7.117584228515625
    6. ' 
' → logprob: -7.742584228515625
    7. '    ' → logprob: -7.867584228515625
    8. ' )' → logprob: -8.492584228515625
    9. '    
' → logprob: -8.867584228515625
    10. '  ' → logprob: -9.117584228515625

Token 89: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' (adapté à ' h') → logprob: -0.02905665896832943
    2. ' h' → logprob: -3.7790565490722656
    3. '   ' → logprob: -5.154056549072266
    4. '```' → logprob: -12.154056549072266
    5. 'height' → logprob: -12.779056549072266
    6. '	h' → logprob: -13.154056549072266
    7. 'self' → logprob: -13.404056549072266
    8. '       ' → logprob: -13.404056549072266
    9. '`' → logprob: -13.529056549072266
    10. '    ' → logprob: -13.779056549072266

Token 90: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010823521297425032
    2. ':int' → logprob: -7.126082420349121
    3. ' :' → logprob: -8.376082420349121
    4. ',' → logprob: -10.501082420349121
    5. '):' → logprob: -11.626082420349121
    6. ')' → logprob: -12.251082420349121
    7. '   ' → logprob: -12.626082420349121
    8. ' (' → logprob: -14.251082420349121
    9. '  ' → logprob: -14.501082420349121
    10. 'int' → logprob: -14.626082420349121

Token 91: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.004161383491009474
    2. ' int' → logprob: -5.504161357879639
    3. '   ' → logprob: -9.504161834716797
    4. ')' → logprob: -12.629161834716797
    5. ':int' → logprob: -12.754161834716797
    6. 'i' → logprob: -13.629161834716797
    7. 'in' → logprob: -15.379161834716797
    8. '  ' → logprob: -15.754161834716797
    9. '```' → logprob: -16.004161834716797
    10. ' ' → logprob: -16.129161834716797

Token 92: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6121398210525513
    2. ')' → logprob: -0.8621398210525513
    3. ',' → logprob: -3.3621397018432617
    4. '   ' → logprob: -7.237139701843262
    5. '):
' → logprob: -9.987139701843262
    6. ' ):' → logprob: -10.112139701843262
    7. ':' → logprob: -10.237139701843262
    8. '),' → logprob: -11.362139701843262
    9. '```' → logprob: -11.612139701843262
    10. ' )' → logprob: -11.862139701843262

Token 93: ' nombre' (ID: 9733)
  Prédit: ' La'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' La' → logprob: -0.8039277791976929
    2. ' Ha' → logprob: -1.1789277791976929
    3. ' Le' → logprob: -1.9289277791976929
    4. ' la' → logprob: -3.5539278984069824
    5. 'Ha' → logprob: -3.8039278984069824
    6. 'La' → logprob: -3.8039278984069824
    7. ' hauteur' → logprob: -4.803927898406982
    8. ' The' → logprob: -5.303927898406982
    9. '   ' → logprob: -5.803927898406982
    10. ' L' → logprob: -5.928927898406982

Token 94: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.23785793781280518
    2. ' d' → logprob: -1.6128579378128052
    3. '    ' → logprob: -5.862857818603516
    4. '  ' → logprob: -5.987857818603516
    5. ' ' → logprob: -6.612857818603516
    6. 'de' → logprob: -6.737857818603516
    7. '   ' → logprob: -6.737857818603516
    8. 's' → logprob: -7.237857818603516
    9. '_de' → logprob: -7.612857818603516
    10. '_' → logprob: -7.737857818603516

Token 95: ' lignes' (ID: 81687)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.06316741555929184
    2. ' lignes' → logprob: -2.8131673336029053
    3. ' ' → logprob: -7.188167572021484
    4. 'ligne' → logprob: -8.688167572021484
    5. ' l' → logprob: -9.313167572021484
    6. '   ' → logprob: -9.563167572021484
    7. ' ligne' → logprob: -10.938167572021484
    8. ' lines' → logprob: -10.938167572021484
    9. '  ' → logprob: -11.188167572021484
    10. 'lig' → logprob: -11.438167572021484

Token 96: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15694907307624817
    2. '   ' → logprob: -2.406949043273926
    3. '<|end|>' → logprob: -3.656949043273926
    4. ',' → logprob: -4.406949043273926
    5. '```' → logprob: -4.531949043273926
    6. '):' → logprob: -5.906949043273926
    7. '<|end|>' → logprob: -6.906949043273926
    8. ' )' → logprob: -7.656949043273926
    9. '\' → logprob: -8.406949043273926
    10. '),' → logprob: -8.406949043273926

Token 97: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.020232830196619034
    2. 'la' → logprob: -4.270232677459717
    3. ' grille' → logprob: -6.145232677459717
    4. 'l' → logprob: -6.395232677459717
    5. '<|end|>' → logprob: -7.020232677459717
    6. 'gr' → logprob: -7.895232677459717
    7. ' the' → logprob: -8.520233154296875
    8. ' ' → logprob: -8.520233154296875
    9. ' l' → logprob: -8.520233154296875
    10. 'the' → logprob: -8.770233154296875

Token 98: ' grille' (ID: 99153)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.2270636409521103
    2. ' grille' → logprob: -1.6020636558532715
    3. 'plate' → logprob: -6.6020636558532715
    4. ' plateau' → logprob: -8.852063179016113
    5. ' gr' → logprob: -9.852063179016113
    6. '   ' → logprob: -9.977063179016113
    7. 'grid' → logprob: -11.477063179016113
    8. ' ' → logprob: -11.602063179016113
    9. 'pl' → logprob: -12.102063179016113
    10. '```' → logprob: -12.102063179016113

Token 99: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24804434180259705
    2. '   ' → logprob: -1.9980443716049194
    3. '<|end|>' → logprob: -2.62304425239563
    4. '```' → logprob: -5.373044490814209
    5. '<|end|>' → logprob: -6.123044490814209
    6. '
' → logprob: -6.748044490814209
    7. ',' → logprob: -6.998044490814209
    8. '    
' → logprob: -7.373044490814209
    9. ' )' → logprob: -7.498044490814209
    10. '  ' → logprob: -8.37304401397705

Token 100: '       ' (ID: 309)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.6767936944961548
    2. '   ' → logprob: -1.0517936944961548
    3. '```' → logprob: -2.1767935752868652
    4. ' ' → logprob: -4.551793575286865
    5. ')' → logprob: -5.301793575286865
    6. ' 
' → logprob: -5.801793575286865
    7. ' w' → logprob: -6.051793575286865
    8. '       ' → logprob: -6.176793575286865
    9. '    ' → logprob: -7.176793575286865
    10. '\' → logprob: -7.176793575286865

Token 101: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' (adapté à ' w') → logprob: -0.16022828221321106
    2. ' w' → logprob: -1.9102282524108887
    3. '   ' → logprob: -12.785228729248047
    4. '```' → logprob: -14.535228729248047
    5. '       ' → logprob: -15.035228729248047
    6. '	w' → logprob: -15.410228729248047
    7. ' ' → logprob: -16.410228729248047
    8. ' ' → logprob: -16.535228729248047
    9. '    ' → logprob: -16.785228729248047
    10. '  ' → logprob: -17.910228729248047

Token 102: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.016523664817214012
    2. ':' → logprob: -4.891523838043213
    3. ')' → logprob: -5.516523838043213
    4. '(int' → logprob: -5.641523838043213
    5. ':int' → logprob: -7.266523838043213
    6. '   ' → logprob: -7.891523838043213
    7. '```' → logprob: -9.016523361206055
    8. ' :' → logprob: -9.891523361206055
    9. '):' → logprob: -10.891523361206055
    10. '[int' → logprob: -11.141523361206055

Token 103: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -9.627176768844947e-05
    2. ' int' → logprob: -9.250096321105957
    3. ')' → logprob: -17.00009536743164
    4. '(int' → logprob: -18.62509536743164
    5. '```' → logprob: -19.25009536743164
    6. '[int' → logprob: -19.37509536743164
    7. '   ' → logprob: -19.50009536743164
    8. '=int' → logprob: -20.50009536743164
    9. ' ' → logprob: -20.62509536743164
    10. '<int' → logprob: -21.00009536743164

Token 104: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.26731136441230774
    2. ')' → logprob: -1.5173113346099854
    3. ':' → logprob: -4.2673115730285645
    4. 'int' → logprob: -7.3923115730285645
    5. ':int' → logprob: -8.267311096191406
    6. '[int' → logprob: -8.642311096191406
    7. '(int' → logprob: -9.767311096191406
    8. '):
' → logprob: -10.017311096191406
    9. ' ):' → logprob: -10.392311096191406
    10. '   ' → logprob: -10.392311096191406

Token 105: ' nombre' (ID: 9733)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.20823204517364502
    2. ' int' → logprob: -1.708232045173645
    3. ' nombre' → logprob: -5.2082319259643555
    4. 'nombre' → logprob: -6.7082319259643555
    5. '   ' → logprob: -9.833231925964355
    6. ' ' → logprob: -10.958231925964355
    7. ' le' → logprob: -11.833231925964355
    8. ' entier' → logprob: -11.958231925964355
    9. ' largeur' → logprob: -12.583231925964355
    10. 'ent' → logprob: -12.583231925964355

Token 106: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.3204164505004883
    2. 'de' → logprob: -1.3204164505004883
    3. '   ' → logprob: -5.570416450500488
    4. 'd' → logprob: -7.195416450500488
    5. ' d' → logprob: -7.320416450500488
    6. ' ' → logprob: -7.570416450500488
    7. ')' → logprob: -7.820416450500488
    8. ' des' → logprob: -8.320416450500488
    9. 'des' → logprob: -8.320416450500488
    10. '_de' → logprob: -8.945416450500488

Token 107: ' colon' (ID: 20947)
  Prédit: 'colon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colon' → logprob: -1.3020038604736328
    2. 'cases' → logprob: -1.4270038604736328
    3. ' colon' → logprob: -1.9270038604736328
    4. ' cases' → logprob: -2.302003860473633
    5. 'l' → logprob: -2.427003860473633
    6. 'gr' → logprob: -2.802003860473633
    7. ' la' → logprob: -2.927003860473633
    8. 'la' → logprob: -4.677003860473633
    9. ' grille' → logprob: -4.802003860473633
    10. 'col' → logprob: -5.052003860473633

Token 108: 'nes' (ID: 4382)
  Prédit: 'nes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nes' → logprob: -0.011091683059930801
    2. 'es' → logprob: -4.511091709136963
    3. 's' → logprob: -10.761091232299805
    4. 'n' → logprob: -11.761091232299805
    5. '   ' → logprob: -12.136091232299805
    6. 'nées' → logprob: -12.886091232299805
    7. 'ies' → logprob: -13.386091232299805
    8. ' es' → logprob: -14.011091232299805
    9. '```' → logprob: -14.136091232299805
    10. 'tes' → logprob: -14.136091232299805

Token 109: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42492803931236267
    2. ')' → logprob: -1.674928069114685
    3. '):' → logprob: -1.924928069114685
    4. '):
' → logprob: -4.424928188323975
    5. '```' → logprob: -8.174927711486816
    6. ' )' → logprob: -8.549927711486816
    7. '
' → logprob: -8.674927711486816
    8. ' ):' → logprob: -9.424927711486816
    9. '  ' → logprob: -9.674927711486816
    10. ' ' → logprob: -10.174927711486816

Token 110: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.3268485963344574
    2. ' la' → logprob: -1.4518486261367798
    3. 'l' → logprob: -3.2018485069274902
    4. ' grille' → logprob: -5.70184850692749
    5. 'a' → logprob: -8.201848983764648
    6. ' ' → logprob: -8.576848983764648
    7. ' l' → logprob: -9.701848983764648
    8. 'gr' → logprob: -9.951848983764648
    9. '   ' → logprob: -10.951848983764648
    10. 's' → logprob: -11.951848983764648

Token 111: ' grille' (ID: 99153)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.6931677460670471
    2. ' grille' → logprob: -0.6931677460670471
    3. ' gr' → logprob: -11.443167686462402
    4. 'grid' → logprob: -12.193167686462402
    5. '_gr' → logprob: -13.568167686462402
    6. ' ' → logprob: -13.693167686462402
    7. '   ' → logprob: -13.943167686462402
    8. ' grid' → logprob: -14.318167686462402
    9. ' ' → logprob: -15.193167686462402
    10. 'ligne' → logprob: -15.818167686462402

Token 112: '.

' (ID: 364)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05559835210442543
    2. '   ' → logprob: -2.930598258972168
    3. '):
' → logprob: -7.680598258972168
    4. '):' → logprob: -8.555598258972168
    5. '`)' → logprob: -11.055598258972168
    6. '```' → logprob: -11.055598258972168
    7. '")' → logprob: -11.805598258972168
    8. '
' → logprob: -11.805598258972168
    9. ' )' → logprob: -12.680598258972168
    10. ')->' → logprob: -12.805598258972168

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0030731407459825277
    2. '"""' → logprob: -6.003073215484619
    3. '"""
' → logprob: -8.253072738647461
    4. ')' → logprob: -8.503072738647461
    5. '    
' → logprob: -10.128072738647461
    6. '```' → logprob: -10.378072738647461
    7. '
' → logprob: -11.003072738647461
    8. ' """
' → logprob: -11.003072738647461
    9. ' """' → logprob: -11.503072738647461
    10. '    ' → logprob: -12.753072738647461

Token 114: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4941965341567993
    2. 'Returns' (adapté à ' Returns') → logprob: -1.7441965341567993
    3. '"""' → logprob: -2.2441964149475098
    4. '"""
' → logprob: -2.6191964149475098
    5. 'return' → logprob: -3.6191964149475098
    6. '```' → logprob: -5.24419641494751
    7. 'returns' → logprob: -6.74419641494751
    8. 'Return' → logprob: -7.61919641494751
    9. ')' → logprob: -7.86919641494751
    10. ' Returns' → logprob: -7.99419641494751

Token 115: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01573554240167141
    2. ':
' → logprob: -4.515735626220703
    3. '   ' → logprob: -5.890735626220703
    4. ':int' → logprob: -7.265735626220703
    5. '[int' → logprob: -7.390735626220703
    6. ' :' → logprob: -7.890735626220703
    7. ')' → logprob: -9.765735626220703
    8. ' int' → logprob: -10.140735626220703
    9. 'int' → logprob: -10.515735626220703
    10. ':return' → logprob: -10.640735626220703

Token 116: '       ' (ID: 309)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.06838380545377731
    2. '   ' → logprob: -3.0683836936950684
    3. '       ' → logprob: -4.443383693695068
    4. 'int' → logprob: -5.193383693695068
    5. ' (' → logprob: -7.318383693695068
    6. ' h' → logprob: -7.318383693695068
    7. '    ' → logprob: -7.443383693695068
    8. ' max' → logprob: -8.443384170532227
    9. '(int' → logprob: -9.943384170532227
    10. '        ' → logprob: -10.568384170532227

Token 117: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' (adapté à ' int') → logprob: -0.001815121271647513
    2. ' int' → logprob: -6.501815319061279
    3. '   ' → logprob: -8.126814842224121
    4. 'max' → logprob: -11.126814842224121
    5. '(int' → logprob: -14.001814842224121
    6. '       ' → logprob: -14.626814842224121
    7. '```' → logprob: -14.626814842224121
    8. 'return' → logprob: -14.751814842224121
    9. '[int' → logprob: -16.501815795898438
    10. '
' → logprob: -16.876815795898438

Token 118: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.022364912554621696
    2. '   ' → logprob: -4.522365093231201
    3. ' :' → logprob: -4.647365093231201
    4. ':
' → logprob: -6.772365093231201
    5. ')' → logprob: -8.647364616394043
    6. '):' → logprob: -9.897364616394043
    7. '    ' → logprob: -10.147364616394043
    8. ':return' → logprob: -10.272364616394043
    9. ' :
' → logprob: -10.272364616394043
    10. '```' → logprob: -10.522364616394043

Token 119: ' nombre' (ID: 9733)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.27632665634155273
    2. ' (' → logprob: -1.9013266563415527
    3. '(h' → logprob: -3.0263266563415527
    4. ' Le' → logprob: -3.9013266563415527
    5. ' le' → logprob: -4.151326656341553
    6. 'h' → logprob: -6.026326656341553
    7. 'Le' → logprob: -6.151326656341553
    8. '   ' → logprob: -6.901326656341553
    9. ' nombre' → logprob: -7.151326656341553
    10. ' maximum' → logprob: -7.526326656341553

Token 120: ' maximal' (ID: 65414)
  Prédit: ' maximal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximal' → logprob: -0.013593083247542381
    2. ' maximum' → logprob: -4.6385931968688965
    3. '_max' → logprob: -6.7635931968688965
    4. '_' → logprob: -7.2635931968688965
    5. '   ' → logprob: -7.2635931968688965
    6. ' max' → logprob: -7.3885931968688965
    7. ' _' → logprob: -9.138592720031738
    8. ' ' → logprob: -9.263592720031738
    9. ' de' → logprob: -9.263592720031738
    10. ' maximale' → logprob: -9.263592720031738

Token 121: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.02602042816579342
    2. ' d' → logprob: -3.9010205268859863
    3. '_' → logprob: -5.651020526885986
    4. ' ' → logprob: -7.276020526885986
    5. ' _' → logprob: -7.776020526885986
    6. '_de' → logprob: -8.901020050048828
    7. '    ' → logprob: -9.026020050048828
    8. '<|end|>' → logprob: -9.401020050048828
    9. '_d' → logprob: -9.776020050048828
    10. '  ' → logprob: -9.901020050048828

Token 122: ' dom' (ID: 3878)
  Prédit: 'dom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dom' → logprob: -0.42896878719329834
    2. ' dom' → logprob: -1.0539687871932983
    3. ' domino' → logprob: -8.42896842956543
    4. ' ' → logprob: -10.80396842956543
    5. '(dom' → logprob: -11.05396842956543
    6. ' (' → logprob: -12.42896842956543
    7. ' domaines' → logprob: -13.42896842956543
    8. '_dom' → logprob: -13.55396842956543
    9. '2' → logprob: -13.55396842956543
    10. '-dom' → logprob: -13.67896842956543

Token 123: 'inos' (ID: 8200)
  Prédit: 'inos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inos' → logprob: -0.003337410045787692
    2. 'ino' → logprob: -5.753337383270264
    3. 'ines' → logprob: -8.878337860107422
    4. 'in' → logprob: -12.753337860107422
    5. 'i' → logprob: -13.003337860107422
    6. '```' → logprob: -13.003337860107422
    7. 'ios' → logprob: -13.378337860107422
    8. 'iques' → logprob: -13.378337860107422
    9. 'os' → logprob: -13.503337860107422
    10. 'es' → logprob: -13.628337860107422

Token 124: ' qui' (ID: 2780)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2777850031852722
    2. '    
' → logprob: -2.027785062789917
    3. ' pouvant' → logprob: -3.777785062789917
    4. ' that' → logprob: -3.777785062789917
    5. ' =' → logprob: -4.152784824371338
    6. '     
' → logprob: -5.027784824371338
    7. '
' → logprob: -5.027784824371338
    8. '```' → logprob: -5.277784824371338
    9. '  
' → logprob: -5.402784824371338
    10. ' ' → logprob: -5.402784824371338

Token 125: ' peuvent' (ID: 21321)
  Prédit: ' peuvent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peuvent' → logprob: -0.0034569292329251766
    2. ' pourront' → logprob: -6.753457069396973
    3. ' peux' → logprob: -7.753457069396973
    4. ' peut' → logprob: -7.753457069396973
    5. ' can' → logprob: -7.878457069396973
    6. 'pe' → logprob: -7.878457069396973
    7. ' pourraient' → logprob: -8.003457069396973
    8. ' pe' → logprob: -9.003457069396973
    9. ' peu' → logprob: -10.503457069396973
    10. '   ' → logprob: -10.628457069396973

Token 126: ' être' (ID: 9104)
  Prédit: ' être'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' être' → logprob: -0.04230707138776779
    2. 'être' → logprob: -3.292307138442993
    3. ' etre' → logprob: -6.542306900024414
    4. ' couvrir' → logprob: -7.292306900024414
    5. ' be' → logprob: -7.542306900024414
    6. ''être' → logprob: -8.167306900024414
    7. '_' → logprob: -8.542306900024414
    8. ' ê' → logprob: -8.667306900024414
    9. 'e' → logprob: -8.667306900024414
    10. '’être' → logprob: -9.042306900024414

Token 127: ' plac' (ID: 7097)
  Prédit: 'plac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plac' → logprob: -0.3168495297431946
    2. ' plac' → logprob: -1.3168494701385498
    3. 'pos' → logprob: -5.941849708557129
    4. 'placement' → logprob: -7.941849708557129
    5. 'placer' → logprob: -9.191849708557129
    6. ' placé' → logprob: -9.191849708557129
    7. 'position' → logprob: -9.566849708557129
    8. 'place' → logprob: -9.691849708557129
    9. 'pla' → logprob: -9.941849708557129
    10. ' pos' → logprob: -10.191849708557129

Token 128: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.0009398083784617484
    2. 'es' → logprob: -7.375939846038818
    3. 'é' → logprob: -8.12593936920166
    4. 'e' → logprob: -11.25093936920166
    5. '```' → logprob: -13.87593936920166
    6. 'ed' → logprob: -14.37593936920166
    7. 'ées' → logprob: -14.62593936920166
    8. '"' → logprob: -14.75093936920166
    9. 'ÉS' → logprob: -14.75093936920166
    10. '**' → logprob: -15.25093936920166

Token 129: ' sur' (ID: 1512)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18089351058006287
    2. ':' → logprob: -2.6808934211730957
    3. '.' → logprob: -3.1808934211730957
    4. ':
' → logprob: -3.5558934211730957
    5. '.
' → logprob: -4.805893421173096
    6. '    
' → logprob: -5.180893421173096
    7. '
' → logprob: -5.180893421173096
    8. '\n' → logprob: -5.930893421173096
    9. ',' → logprob: -6.180893421173096
    10. ' 
' → logprob: -8.055893898010254

Token 130: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.01000007800757885
    2. 'la' → logprob: -5.635000228881836
    3. ' h' → logprob: -5.885000228881836
    4. ' une' → logprob: -6.385000228881836
    5. ' ' → logprob: -7.135000228881836
    6. '   ' → logprob: -7.385000228881836
    7. ' l' → logprob: -8.635000228881836
    8. ' ' → logprob: -8.885000228881836
    9. 'h' → logprob: -9.135000228881836
    10. 'l' → logprob: -11.135000228881836

Token 131: ' grille' (ID: 99153)
  Prédit: ' grille'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grille' → logprob: -0.009576637297868729
    2. 'gr' → logprob: -5.259576797485352
    3. 'h' → logprob: -6.634576797485352
    4. ' h' → logprob: -6.759576797485352
    5. ' (' → logprob: -7.259576797485352
    6. '(h' → logprob: -7.384576797485352
    7. ' surface' → logprob: -9.009576797485352
    8. ' gr' → logprob: -9.134576797485352
    9. ' grid' → logprob: -9.384576797485352
    10. '   ' → logprob: -9.634576797485352

Token 132: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5640382766723633
    2. '   ' → logprob: -1.3140382766723633
    3. ':
' → logprob: -2.8140382766723633
    4. '.' → logprob: -3.0640382766723633
    5. ')' → logprob: -3.5640382766723633
    6. '):' → logprob: -4.189038276672363
    7. '
' → logprob: -5.564038276672363
    8. '):
' → logprob: -5.814038276672363
    9. '.
' → logprob: -6.564038276672363
    10. '```' → logprob: -6.564038276672363

Token 133: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021010449156165123
    2. '"""' → logprob: -3.896010398864746
    3. '"""
' → logprob: -8.396010398864746
    4. '
' → logprob: -9.396010398864746
    5. ')' → logprob: -9.646010398864746
    6. ' """' → logprob: -10.396010398864746
    7. '```' → logprob: -10.521010398864746
    8. '""' → logprob: -11.521010398864746
    9. '    
' → logprob: -11.521010398864746
    10. '    ' → logprob: -12.021010398864746

Token 134: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05125555768609047
    2. '"""' → logprob: -3.051255464553833
    3. '"""
' (adapté à ' """
') → logprob: -6.551255702972412
    4. '```' → logprob: -7.676255702972412
    5. '
' → logprob: -7.801255702972412
    6. ')' → logprob: -8.926255226135254
    7. 'return' → logprob: -9.676255226135254
    8. ' """' → logprob: -9.801255226135254
    9. '""' → logprob: -10.801255226135254
    10. '    ' → logprob: -11.051255226135254

Token 135: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020386797841638327
    2. 'return' → logprob: -6.377038478851318
    3. ' return' → logprob: -8.002038955688477
    4. '    ' → logprob: -14.127038955688477
    5. '   ' → logprob: -14.627038955688477
    6. '    
' → logprob: -15.627038955688477
    7. '```' → logprob: -15.627038955688477
    8. '
' → logprob: -15.752038955688477
    9. '  ' → logprob: -16.377038955688477
    10. '   ' → logprob: -17.252038955688477

Token 136: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00047773998812772334
    2. ' return' → logprob: -8.50047779083252
    3. 'max' → logprob: -9.12547779083252
    4. 'total' → logprob: -9.50047779083252
    5. '   ' → logprob: -9.62547779083252
    6. '#' (adapté à ' #') → logprob: -11.00047779083252
    7. 'n' → logprob: -13.62547779083252
    8. 'nombre' → logprob: -14.00047779083252
    9. 'nb' → logprob: -14.12547779083252
    10. 'num' → logprob: -14.25047779083252

Token 137: ' Si' (ID: 7832)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.007639993913471699
    2. ' return' → logprob: -5.0076398849487305
    3. 'max' → logprob: -7.2576398849487305
    4. 'dom' → logprob: -9.25763988494873
    5. '   ' → logprob: -9.75763988494873
    6. ' max' → logprob: -10.88263988494873
    7. 'total' → logprob: -11.75763988494873
    8. 'result' → logprob: -11.75763988494873
    9. 'n' → logprob: -12.38263988494873
    10. 'ret' → logprob: -12.38263988494873

Token 138: ' la' (ID: 557)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.17047275602817535
    2. 'h' → logprob: -2.2954728603363037
    3. ' (' → logprob: -3.4204728603363037
    4. '(h' → logprob: -3.7954728603363037
    5. ' ' → logprob: -7.920472621917725
    6. '(' → logprob: -8.920473098754883
    7. '   ' → logprob: -9.295473098754883
    8. '  ' → logprob: -10.170473098754883
    9. '0' → logprob: -10.607973098754883
    10. ' not' → logprob: -10.670473098754883

Token 139: ' grille' (ID: 99153)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.06323008239269257
    2. ' h' → logprob: -2.813230037689209
    3. '(h' → logprob: -8.563230514526367
    4. '   ' → logprob: -8.688230514526367
    5. 'gr' → logprob: -8.688230514526367
    6. ' ' → logprob: -8.688230514526367
    7. 'ha' → logprob: -9.063230514526367
    8. '0' → logprob: -9.563230514526367
    9. '  ' → logprob: -10.563230514526367
    10. 'grid' → logprob: -10.813230514526367

Token 140: ' n' (ID: 297)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.1371813863515854
    2. 'est' → logprob: -2.137181282043457
    3. ' n' → logprob: -5.387181282043457
    4. '   ' → logprob: -6.387181282043457
    5. ' a' → logprob: -6.512181282043457
    6. ' peut' → logprob: -7.262181282043457
    7. ' is' → logprob: -7.887181282043457
    8. ' ' → logprob: -8.262181282043457
    9. 'n' → logprob: -8.387181282043457
    10. ' contient' → logprob: -9.137181282043457

Token 141: ''a' (ID: 10443)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.9785619378089905
    2. 'est' → logprob: -1.3535618782043457
    3. ''est' → logprob: -1.9785618782043457
    4. ' a' → logprob: -2.4785618782043457
    5. ' ==' → logprob: -2.8535618782043457
    6. '==' → logprob: -3.4785618782043457
    7. 'e' → logprob: -4.228561878204346
    8. ' or' → logprob: -4.603561878204346
    9. ' is' → logprob: -4.978561878204346
    10. '   ' → logprob: -5.353561878204346

Token 142: ' qu' (ID: 474)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7562386989593506
    2. 'h' → logprob: -1.5062386989593506
    3. ' h' → logprob: -1.5062386989593506
    4. ' ' → logprob: -2.6312386989593506
    5. ' pas' → logprob: -5.38123893737793
    6. 'pas' → logprob: -5.38123893737793
    7. 'une' → logprob: -6.13123893737793
    8. ' une' → logprob: -6.38123893737793
    9. ' aucune' → logprob: -6.88123893737793
    10. '   ' → logprob: -8.63123893737793

Token 143: ''une' (ID: 13337)
  Prédit: ''une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''une' → logprob: -0.3237048089504242
    2. 'une' → logprob: -1.3237048387527466
    3. 'e' → logprob: -5.323704719543457
    4. ''un' → logprob: -5.948704719543457
    5. ''' → logprob: -6.448704719543457
    6. ' une' → logprob: -7.823704719543457
    7. '’une' → logprob: -8.198704719543457
    8. 'u' → logprob: -8.573704719543457
    9. ''au' → logprob: -8.823704719543457
    10. '1' → logprob: -9.698704719543457

Token 144: ' ligne' (ID: 19583)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.12066875398159027
    2. 'ligne' → logprob: -2.370668649673462
    3. ' case' → logprob: -4.120668888092041
    4. ' ligne' → logprob: -7.120668888092041
    5. 'c' → logprob: -7.245668888092041
    6. ' seule' → logprob: -7.370668888092041
    7. 'se' → logprob: -7.495668888092041
    8. 'dimension' → logprob: -7.870668888092041
    9. '1' → logprob: -7.995668888092041
    10. ' ' → logprob: -8.870668411254883

Token 145: ' ou' (ID: 2031)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007937824353575706
    2. ' or' → logprob: -5.507937908172607
    3. ':' → logprob: -6.382937908172607
    4. ' ou' → logprob: -6.632937908172607
    5. ',' → logprob: -8.13293743133545
    6. '    
' → logprob: -8.75793743133545
    7. '    ' → logprob: -9.25793743133545
    8. '  ' → logprob: -9.88293743133545
    9. ' and' → logprob: -10.00793743133545
    10. ' ' → logprob: -10.75793743133545

Token 146: ' qu' (ID: 474)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.5038211345672607
    2. 'une' → logprob: -1.0038211345672607
    3. ' ' → logprob: -5.37882137298584
    4. ' colonne' → logprob: -5.37882137298584
    5. 'col' → logprob: -5.50382137298584
    6. '   ' → logprob: -5.62882137298584
    7. 'qu' → logprob: -6.12882137298584
    8. ''une' → logprob: -6.25382137298584
    9. ' qu' → logprob: -6.37882137298584
    10. '1' → logprob: -6.37882137298584

Token 147: ''une' (ID: 13337)
  Prédit: ''une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''une' → logprob: -0.2742198705673218
    2. 'une' → logprob: -1.6492198705673218
    3. 'e' → logprob: -3.7742199897766113
    4. ''un' → logprob: -4.524219989776611
    5. ''' → logprob: -5.024219989776611
    6. '’une' → logprob: -6.274219989776611
    7. 'u' → logprob: -6.524219989776611
    8. '   ' → logprob: -6.649219989776611
    9. 'un' → logprob: -7.649219989776611
    10. ' une' → logprob: -7.899219989776611

Token 148: ' colonne' (ID: 148275)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.010410253889858723
    2. ' colonne' → logprob: -4.635410308837891
    3. 'column' → logprob: -9.13541030883789
    4. '   ' → logprob: -9.26041030883789
    5. 'ligne' → logprob: -9.26041030883789
    6. 'colon' → logprob: -9.38541030883789
    7. 'se' → logprob: -9.38541030883789
    8. 'case' → logprob: -9.63541030883789
    9. ' ' → logprob: -10.51041030883789
    10. '```' → logprob: -11.13541030883789

Token 149: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.468244343996048
    2. ',' → logprob: -1.4682443141937256
    3. ':' → logprob: -1.9682443141937256
    4. ':
' → logprob: -6.718244552612305
    5. '    
' → logprob: -7.093244552612305
    6. ' ,' → logprob: -7.468244552612305
    7. ' :' → logprob: -7.718244552612305
    8. '    ' → logprob: -8.843244552612305
    9. ',
' → logprob: -8.968244552612305
    10. '
' → logprob: -9.593244552612305

Token 150: ' traiter' (ID: 105852)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3912966549396515
    2. ' return' → logprob: -1.516296625137329
    3. 'return' → logprob: -2.266296625137329
    4. '   ' → logprob: -7.766296863555908
    5. ' ' → logprob: -9.64129638671875
    6. '   ' → logprob: -10.26629638671875
    7. '    ' → logprob: -10.76629638671875
    8. ' retour' → logprob: -11.14129638671875
    9. 'ret' → logprob: -11.76629638671875
    10. '	return' → logprob: -12.26629638671875

Token 151: ' le' (ID: 505)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1002020314335823
    2. ' le' → logprob: -2.6002020835876465
    3. '    
' → logprob: -5.1002020835876465
    4. '    ' → logprob: -5.7252020835876465
    5. '  ' → logprob: -5.9752020835876465
    6. ' la' → logprob: -5.9752020835876465
    7. ' ' → logprob: -6.2252020835876465
    8. 'le' → logprob: -6.9752020835876465
    9. ' un' → logprob: -7.2252020835876465
    10. ' h' → logprob: -7.3502020835876465

Token 152: ' cas' (ID: 2108)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.08353310823440552
    2. 'cas' → logprob: -3.2085330486297607
    3. 'ret' → logprob: -4.45853328704834
    4. ' return' → logprob: -4.83353328704834
    5. '   ' → logprob: -4.95853328704834
    6. ' cas' → logprob: -5.08353328704834
    7. 'nombre' → logprob: -5.95853328704834
    8. 'if' → logprob: -6.83353328704834
    9. '#' → logprob: -7.45853328704834
    10. '```' → logprob: -7.58353328704834

Token 153: ' spécial' (ID: 40397)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000682530109770596
    2. '    
' → logprob: -8.125682830810547
    3. ' spécial' → logprob: -8.875682830810547
    4. 'special' → logprob: -9.750682830810547
    5. '    ' → logprob: -10.000682830810547
    6. '  ' → logprob: -10.500682830810547
    7. ' particulier' → logprob: -10.500682830810547
    8. ' special' → logprob: -10.500682830810547
    9. ' if' → logprob: -11.625682830810547
    10. '       ' → logprob: -11.625682830810547

Token 154: ' :
' (ID: 10039)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13774578273296356
    2. '    
' → logprob: -2.5127458572387695
    3. '
' → logprob: -3.5127458572387695
    4. ':' → logprob: -5.0127458572387695
    5. '   
' → logprob: -5.7627458572387695
    6. '  
' → logprob: -6.0127458572387695
    7. 'if' → logprob: -6.6377458572387695
    8. ' 
' → logprob: -6.6377458572387695
    9. ' if' → logprob: -6.8877458572387695
    10. ',' → logprob: -7.6377458572387695

Token 155: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11466195434331894
    2. ' if' → logprob: -2.364661931991577
    3. 'if' → logprob: -4.614662170410156
    4. ' return' → logprob: -5.989662170410156
    5. '    
' → logprob: -7.239662170410156
    6. 'return' → logprob: -7.489662170410156
    7. '    ' → logprob: -8.114662170410156
    8. ' 
' → logprob: -8.489662170410156
    9. '   
' → logprob: -10.114662170410156
    10. '
' → logprob: -10.614662170410156

Token 156: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7461235523223877
    2. ' if' → logprob: -0.9961235523223877
    3. 'return' → logprob: -2.6211235523223877
    4. '   ' → logprob: -3.1211235523223877
    5. ' return' → logprob: -3.2461235523223877
    6. 'max' → logprob: -7.996123313903809
    7. ' max' → logprob: -8.496123313903809
    8. '```' → logprob: -9.996123313903809
    9. ' ' → logprob: -10.371123313903809
    10. '    
' → logprob: -10.746123313903809

Token 157: ' pour' (ID: 1930)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.8797379732131958
    2. 'return' → logprob: -1.3797379732131958
    3. ' if' → logprob: -1.7547379732131958
    4. '   ' → logprob: -2.6297378540039062
    5. 'if' → logprob: -2.7547378540039062
    6. ' max' → logprob: -4.129737854003906
    7. 'max' → logprob: -5.004737854003906
    8. ' total' → logprob: -8.254737854003906
    9. 'result' → logprob: -8.504737854003906
    10. ' result' → logprob: -8.629737854003906

Token 158: ' une' (ID: 2463)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3975842595100403
    2. 'i' → logprob: -1.5225841999053955
    3. ' h' → logprob: -3.3975841999053955
    4. ' une' → logprob: -3.8975841999053955
    5. 'h' → logprob: -4.272584438323975
    6. ' les' → logprob: -4.522584438323975
    7. 'l' → logprob: -5.522584438323975
    8. 'une' → logprob: -5.897584438323975
    9. ' l' → logprob: -6.147584438323975
    10. ' w' → logprob: -6.147584438323975

Token 159: ' grille' (ID: 99153)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.5600209832191467
    2. 'gr' → logprob: -1.935020923614502
    3. ' ligne' → logprob: -2.060020923614502
    4. ' grille' → logprob: -2.310020923614502
    5. ' ' → logprob: -4.560020923614502
    6. 'dimension' → logprob: -4.685020923614502
    7. '1' → logprob: -4.685020923614502
    8. ' seule' → logprob: -4.935020923614502
    9. ' dimension' → logprob: -5.560020923614502
    10. 'range' → logprob: -6.310020923614502

Token 160: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7688297629356384
    2. '1' → logprob: -1.3938298225402832
    3. ' d' → logprob: -1.8938298225402832
    4. ' de' → logprob: -3.018829822540283
    5. 'd' → logprob: -3.268829822540283
    6. '   ' → logprob: -3.643829822540283
    7. 'de' → logprob: -4.018829822540283
    8. ' avec' → logprob: -7.143829822540283
    9. 'ligne' → logprob: -7.143829822540283
    10. ' à' → logprob: -7.393829822540283

Token 161: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.18260234594345093
    2. ' ' → logprob: -1.9326024055480957
    3. 'de' → logprob: -5.182602405548096
    4. 'd' → logprob: -5.432602405548096
    5. ' de' → logprob: -5.557602405548096
    6. '   ' → logprob: -6.057602405548096
    7. ' d' → logprob: -6.182602405548096
    8. 'ligne' → logprob: -6.807602405548096
    9. 'à' → logprob: -7.807602405548096
    10. ' à' → logprob: -8.432601928710938

Token 162: 'x' (ID: 87)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.17021045088768005
    2. 'x' → logprob: -2.545210361480713
    3. '   ' → logprob: -3.170210361480713
    4. ' ou' → logprob: -4.670210361480713
    5. ' ' → logprob: -4.795210361480713
    6. ',' → logprob: -5.295210361480713
    7. ' or' → logprob: -5.420210361480713
    8. '    ' → logprob: -6.545210361480713
    9. ' *' → logprob: -6.670210361480713
    10. ' ,' → logprob: -6.670210361480713

Token 163: '1' (ID: 16)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0038036382757127285
    2. '1' → logprob: -6.378803730010986
    3. 'n' → logprob: -6.628803730010986
    4. ' w' → logprob: -8.003803253173828
    5. 'h' → logprob: -8.253803253173828
    6. 'max' → logprob: -9.128803253173828
    7. ' ' → logprob: -10.753803253173828
    8. '_w' → logprob: -11.378803253173828
    9. '```' → logprob: -12.003803253173828
    10. '(w' → logprob: -12.253803253173828

Token 164: ' ou' (ID: 2031)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5218195915222168
    2. ',' → logprob: -1.3968195915222168
    3. ':' → logprob: -2.646819591522217
    4. '    
' → logprob: -3.021819591522217
    5. ' 
' → logprob: -4.271819591522217
    6. '
' → logprob: -5.146819591522217
    7. '   
' → logprob: -5.396819591522217
    8. ':
' → logprob: -5.771819591522217
    9. ',
' → logprob: -6.146819591522217
    10. '     
' → logprob: -6.646819591522217

Token 165: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5019775032997131
    2. ' ' → logprob: -1.0019774436950684
    3. '0' → logprob: -3.6269774436950684
    4. '   ' → logprob: -8.126977920532227
    5. ' (' → logprob: -8.876977920532227
    6. 'h' → logprob: -9.126977920532227
    7. ' h' → logprob: -9.251977920532227
    8. '(' → logprob: -10.126977920532227
    9. '```' → logprob: -10.251977920532227
    10. '  ' → logprob: -10.564477920532227

Token 166: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06638340651988983
    2. ' ' → logprob: -2.8163833618164062
    3. '0' → logprob: -5.566383361816406
    4. 'h' → logprob: -8.691383361816406
    5. ' h' → logprob: -9.441383361816406
    6. '   ' → logprob: -9.941383361816406
    7. '```' → logprob: -10.066383361816406
    8. '(' → logprob: -10.191383361816406
    9. ' (' → logprob: -10.191383361816406
    10. 'une' → logprob: -10.628883361816406

Token 167: 'xn' (ID: 82646)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4970369040966034
    2. '   ' → logprob: -2.247036933898926
    3. 'x' → logprob: -2.622036933898926
    4. ',' → logprob: -2.997036933898926
    5. ' :' → logprob: -3.122036933898926
    6. ' x' → logprob: -3.497036933898926
    7. ' ' → logprob: -3.622036933898926
    8. ' or' → logprob: -3.997036933898926
    9. ' *' → logprob: -4.622036933898926
    10. '  ' → logprob: -5.247036933898926

Token 168: ' ou' (ID: 2031)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3658970594406128
    2. '    
' → logprob: -2.1158971786499023
    3. ',' → logprob: -2.4908971786499023
    4. '
' → logprob: -3.1158971786499023
    5. '   
' → logprob: -4.115897178649902
    6. ':' → logprob: -4.240897178649902
    7. '  
' → logprob: -5.115897178649902
    8. ' 
' → logprob: -5.365897178649902
    9. ':
' → logprob: -5.490897178649902
    10. 'if' → logprob: -5.990897178649902

Token 169: ' nx' (ID: 50118)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5323787927627563
    2. ' ' → logprob: -0.9073787927627563
    3. ' nx' → logprob: -5.657378673553467
    4. ' n' → logprob: -6.032378673553467
    5. 'n' → logprob: -6.532378673553467
    6. 'nx' → logprob: -6.657378673553467
    7. '   ' → logprob: -8.282379150390625
    8. 'xn' → logprob: -9.282379150390625
    9. ' wx' → logprob: -10.282379150390625
    10. '0' → logprob: -10.407379150390625

Token 170: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012821101699955761
    2. ' ' → logprob: -10.000127792358398
    3. 'w' → logprob: -10.000127792358398
    4. '2' → logprob: -10.625127792358398
    5. 'n' → logprob: -12.750127792358398
    6. '```' → logprob: -13.000127792358398
    7. 'm' → logprob: -13.500127792358398
    8. '`' → logprob: -13.875127792358398
    9. 'h' → logprob: -14.250127792358398
    10. 'a' → logprob: -14.625127792358398

Token 171: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2164597064256668
    2. 'if' → logprob: -2.5914597511291504
    3. '    
' → logprob: -3.4664597511291504
    4. '
' → logprob: -3.5914597511291504
    5. ' if' → logprob: -3.5914597511291504
    6. ':' → logprob: -4.09145975112915
    7. ':
' → logprob: -5.34145975112915
    8. '   
' → logprob: -5.71645975112915
    9. ',' → logprob: -5.84145975112915
    10. '  
' → logprob: -6.46645975112915

Token 172: ' on' (ID: 402)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6487552523612976
    2. '   ' → logprob: -1.0237553119659424
    3. 'return' → logprob: -2.1487553119659424
    4. ' if' → logprob: -6.898755073547363
    5. '    ' → logprob: -8.898755073547363
    6. 'if' → logprob: -9.273755073547363
    7. '   ' → logprob: -10.648755073547363
    8. ' ' → logprob: -10.773755073547363
    9. ' retour' → logprob: -10.898755073547363
    10. '    
' → logprob: -11.023755073547363

Token 173: ' ne' (ID: 453)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6894146203994751
    2. ' return' → logprob: -1.314414620399475
    3. ' retourne' → logprob: -2.6894145011901855
    4. ' peut' → logprob: -2.8144145011901855
    5. ' peux' → logprob: -3.3144145011901855
    6. 'pe' → logprob: -3.8144145011901855
    7. 'n' → logprob: -4.5644145011901855
    8. '   ' → logprob: -4.9394145011901855
    9. ' ren' → logprob: -5.5644145011901855
    10. ' place' → logprob: -5.9394145011901855

Token 174: ' peut' (ID: 9216)
  Prédit: ' peux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peux' → logprob: -0.0825657919049263
    2. 'pe' → logprob: -2.9575657844543457
    3. ' peut' → logprob: -4.082565784454346
    4. '   ' → logprob: -5.832565784454346
    5. ' return' → logprob: -6.332565784454346
    6. ' pourra' → logprob: -6.457565784454346
    7. 'return' → logprob: -6.707565784454346
    8. 'pour' → logprob: -6.707565784454346
    9. ' pe' → logprob: -7.832565784454346
    10. ' pour' → logprob: -8.082566261291504

Token 175: ' placer' (ID: 55591)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.06289756298065186
    2. ' placer' → logprob: -3.1878976821899414
    3. 'pas' → logprob: -4.187897682189941
    4. 'placer' → logprob: -5.812897682189941
    5. ' poser' → logprob: -7.312897682189941
    6. '   ' → logprob: -8.437897682189941
    7. ' place' → logprob: -8.937897682189941
    8. ' rien' → logprob: -9.187897682189941
    9. ' mettre' → logprob: -9.687897682189941
    10. ' jamais' → logprob: -10.062897682189941

Token 176: ' qu' (ID: 474)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.36638474464416504
    2. 'auc' → logprob: -2.366384744644165
    3. ' aucun' → logprob: -2.491384744644165
    4. ' qu' → logprob: -2.991384744644165
    5. 'qu' → logprob: -3.491384744644165
    6. 'que' → logprob: -3.866384744644165
    7. 'pas' → logprob: -4.741384506225586
    8. ' de' → logprob: -4.866384506225586
    9. 'de' → logprob: -5.241384506225586
    10. ' pas' → logprob: -6.241384506225586

Token 177: ''un' (ID: 9788)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.32705146074295044
    2. ''un' → logprob: -2.3270514011383057
    3. ''au' → logprob: -2.4520514011383057
    4. 'e' → logprob: -3.0770514011383057
    5. 'u' → logprob: -3.3270514011383057
    6. ''u' → logprob: -4.827051639556885
    7. 'au' → logprob: -6.577051639556885
    8. 'ue' → logprob: -7.452051639556885
    9. ''à' → logprob: -7.702051639556885
    10. ' '' → logprob: -7.827051639556885

Token 178: ' seul' (ID: 33041)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.11358088254928589
    2. ' seul' → logprob: -3.2385809421539307
    3. ' ' → logprob: -3.9885809421539307
    4. ' demi' → logprob: -4.613580703735352
    5. ' nombre' → logprob: -4.988580703735352
    6. ' domino' → logprob: -5.113580703735352
    7. '0' → logprob: -5.238580703735352
    8. ' e' → logprob: -5.363580703735352
    9. 'dom' → logprob: -5.488580703735352
    10. ' (' → logprob: -6.113580703735352

Token 179: ' domino' (ID: 133589)
  Prédit: ' domino'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' domino' → logprob: -0.06415779888629913
    2. 'dom' → logprob: -2.814157724380493
    3. ' ' → logprob: -6.689157962799072
    4. ' dom' → logprob: -7.939157962799072
    5. ' espace' → logprob: -8.064157485961914
    6. '0' → logprob: -9.814157485961914
    7. '_dom' → logprob: -10.064157485961914
    8. 'domin' → logprob: -10.689157485961914
    9. '_' → logprob: -11.189157485961914
    10. '```' → logprob: -11.439157485961914

Token 180: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9459567070007324
    2. '    
' → logprob: -1.5709567070007324
    3. ' 
' → logprob: -1.9459567070007324
    4. ',' → logprob: -2.5709567070007324
    5. '
' → logprob: -2.6959567070007324
    6. 's' → logprob: -3.0709567070007324
    7. ' if' → logprob: -4.070956707000732
    8. '   
' → logprob: -4.195956707000732
    9. '  
' → logprob: -4.570956707000732
    10. ' s' → logprob: -4.820956707000732

Token 181: ' la' (ID: 557)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.634935736656189
    2. ' la' → logprob: -1.759935736656189
    3. ' h' → logprob: -1.884935736656189
    4. 'h' → logprob: -2.1349358558654785
    5. 'l' → logprob: -2.1349358558654785
    6. ' w' → logprob: -2.1349358558654785
    7. ' l' → logprob: -2.6349358558654785
    8. 'la' → logprob: -4.2599358558654785
    9. 'n' → logprob: -4.3849358558654785
    10. ' n' → logprob: -5.0099358558654785

Token 182: ' taille' (ID: 41644)
  Prédit: ' grille'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grille' → logprob: -1.9695398807525635
    2. ' longueur' → logprob: -1.9695398807525635
    3. ' case' → logprob: -2.3445398807525635
    4. ' taille' → logprob: -2.3445398807525635
    5. 'h' → logprob: -2.8445398807525635
    6. ' largeur' → logprob: -2.8445398807525635
    7. 'gr' → logprob: -2.9695398807525635
    8. ' ' → logprob: -3.2195398807525635
    9. 'tail' → logprob: -3.5945398807525635
    10. 'r' → logprob: -3.5945398807525635

Token 183: ' totale' (ID: 52898)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.4679185748100281
    2. ' ' → logprob: -2.342918634414673
    3. '>=' → logprob: -2.592918634414673
    4. ' de' → logprob: -3.217918634414673
    5. ' est' → logprob: -3.217918634414673
    6. '>' → logprob: -3.467918634414673
    7. ' >' → logprob: -3.592918634414673
    8. '   ' → logprob: -3.842918634414673
    9. ' is' → logprob: -4.592918395996094
    10. 'de' → logprob: -4.592918395996094

Token 184: ' >=' (ID: 5064)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.9186868667602539
    2. ' >=' → logprob: -1.543686866760254
    3. '>=' → logprob: -2.168686866760254
    4. ' ' → logprob: -2.168686866760254
    5. ' de' → logprob: -2.543686866760254
    6. 'de' → logprob: -3.543686866760254
    7. ' is' → logprob: -3.668686866760254
    8. 'est' → logprob: -4.918686866760254
    9. '   ' → logprob: -5.543686866760254
    10. '>' → logprob: -5.543686866760254

Token 185: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.048588622361421585
    2. ' ' → logprob: -3.048588514328003
    3. '   ' → logprob: -15.048588752746582
    4. ' ' → logprob: -15.298588752746582
    5. '
' → logprob: -15.548588752746582
    6. '```' → logprob: -15.548588752746582
    7. '4' → logprob: -15.861088752746582
    8. '  ' → logprob: -15.923588752746582
    9. ' deux' → logprob: -17.048587799072266
    10. '

' → logprob: -17.486087799072266

Token 186: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.674858301877975e-05
    2. ' ' → logprob: -9.250096321105957
    3. '```' → logprob: -15.375096321105957
    4. '   ' → logprob: -16.875097274780273
    5. 'de' → logprob: -17.000097274780273
    6. '
' → logprob: -17.437597274780273
    7. '4' → logprob: -17.500097274780273
    8. ' deux' → logprob: -17.500097274780273
    9. 'two' → logprob: -17.625097274780273
    10. '۲' → logprob: -17.937597274780273

Token 187: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.640427827835083
    2. '   ' → logprob: -1.265427827835083
    3. '    
' → logprob: -1.890427827835083
    4. ' 
' → logprob: -3.890427827835083
    5. '   
' → logprob: -4.640427589416504
    6. '\n' → logprob: -5.265427589416504
    7. '  
' → logprob: -6.140427589416504
    8. '     
' → logprob: -6.890427589416504
    9. '\' → logprob: -7.765427589416504
    10. 'if' → logprob: -8.265427589416504

Token 188: ' sinon' (ID: 52915)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005442093592137098
    2. ' return' → logprob: -6.380442142486572
    3. '    
' → logprob: -6.880442142486572
    4. ' 
' → logprob: -7.005442142486572
    5. 'return' → logprob: -7.005442142486572
    6. '    ' → logprob: -7.755442142486572
    7. '  
' → logprob: -10.255441665649414
    8. '   
' → logprob: -10.255441665649414
    9. 'space' → logprob: -10.255441665649414
    10. ' ' → logprob: -10.380441665649414

Token 189: ' zéro' (ID: 182040)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02192217856645584
    2. ' ' → logprob: -3.8969221115112305
    3. '   ' → logprob: -7.1469221115112305
    4. 'return' → logprob: -7.6469221115112305
    5. ' return' → logprob: -10.52192211151123
    6. '  ' → logprob: -10.89692211151123
    7. ' on' → logprob: -11.02192211151123
    8. 'on' → logprob: -11.14692211151123
    9. 'auc' → logprob: -11.52192211151123
    10. '    ' → logprob: -12.27192211151123

Token 190: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1365506500005722
    2. '
' → logprob: -2.1365506649017334
    3. '    
' → logprob: -5.261550426483154
    4. 'if' → logprob: -5.761550426483154
    5. 'total' → logprob: -7.761550426483154
    6. ' if' → logprob: -8.261550903320312
    7. '   
' → logprob: -8.386550903320312
    8. 'n' → logprob: -9.636550903320312
    9. '\n' → logprob: -10.011550903320312
    10. '  
' → logprob: -10.136550903320312

Token 191: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21248827874660492
    2. '
' → logprob: -1.8374882936477661
    3. '    
' → logprob: -4.087488174438477
    4. 'if' → logprob: -4.337488174438477
    5. ' if' → logprob: -7.087488174438477
    6. '   
' → logprob: -7.462488174438477
    7. ' 
' → logprob: -8.462488174438477
    8. '  
' → logprob: -8.837488174438477
    9. '\n' → logprob: -9.212488174438477
    10. 'n' → logprob: -9.212488174438477

Token 192: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48581427335739136
    2. 'if' → logprob: -1.6108143329620361
    3. 'total' → logprob: -2.360814332962036
    4. ' if' → logprob: -2.610814332962036
    5. ' total' → logprob: -4.735814094543457
    6. '    
' → logprob: -5.860814094543457
    7. 'n' → logprob: -6.360814094543457
    8. '
' → logprob: -6.610814094543457
    9. 'size' → logprob: -7.110814094543457
    10. '  
' → logprob: -7.735814094543457

Token 193: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8992947936058044
    2. 'total' → logprob: -1.2742948532104492
    3. ' if' → logprob: -1.7742948532104492
    4. '   ' → logprob: -2.274294853210449
    5. ' total' → logprob: -3.274294853210449
    6. 'n' → logprob: -6.899294853210449
    7. 'tail' → logprob: -7.899294853210449
    8. 'size' → logprob: -8.02429485321045
    9. 'area' → logprob: -8.39929485321045
    10. ' n' → logprob: -8.52429485321045

Token 194: ' la' (ID: 557)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.1613590121269226
    2. 'h' → logprob: -1.9113590717315674
    3. ' (' → logprob: -7.036358833312988
    4. '(h' → logprob: -8.786358833312988
    5. ' ' → logprob: -9.661358833312988
    6. '   ' → logprob: -11.161358833312988
    7. '(' → logprob: -11.911358833312988
    8. ' min' → logprob: -12.036358833312988
    9. 'min' → logprob: -12.786358833312988
    10. ' ' → logprob: -13.161358833312988

Token 195: ' grille' (ID: 99153)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.08919277787208557
    2. ' h' → logprob: -2.4641928672790527
    3. 'min' → logprob: -9.464192390441895
    4. ' (' → logprob: -10.089192390441895
    5. 'max' → logprob: -10.214192390441895
    6. '(h' → logprob: -10.214192390441895
    7. ' min' → logprob: -10.339192390441895
    8. ' ' → logprob: -11.589192390441895
    9. ' max' → logprob: -11.964192390441895
    10. '   ' → logprob: -12.589192390441895

Token 196: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26148325204849243
    2. ' est' → logprob: -3.2614831924438477
    3. ':' → logprob: -3.3864831924438477
    4. ' ==' → logprob: -3.5114831924438477
    5. ' n' → logprob: -3.7614831924438477
    6. ' is' → logprob: -4.011483192443848
    7. 'est' → logprob: -4.011483192443848
    8. ' a' → logprob: -4.261483192443848
    9. ' ' → logprob: -4.511483192443848
    10. '[' → logprob: -4.761483192443848

Token 197: ' au' (ID: 2791)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.29867953062057495
    2. 'h' → logprob: -1.4236795902252197
    3. ' ' → logprob: -4.673679351806641
    4. '1' → logprob: -5.798679351806641
    5. 'min' → logprob: -6.298679351806641
    6. ' min' → logprob: -6.423679351806641
    7. ' une' → logprob: -7.673679351806641
    8. '0' → logprob: -7.798679351806641
    9. ' un' → logprob: -8.67367935180664
    10. '   ' → logprob: -8.67367935180664

Token 198: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.0077067045494914055
    2. ' moins' → logprob: -5.007706642150879
    3. 'mo' → logprob: -7.507706642150879
    4. '   ' → logprob: -8.257706642150879
    5. '```' → logprob: -9.882706642150879
    6. 'm' → logprob: -10.132706642150879
    7. 'menos' → logprob: -10.257706642150879
    8. ' ' → logprob: -10.757706642150879
    9. '  ' → logprob: -11.632706642150879
    10. 'plus' → logprob: -12.507706642150879

Token 199: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0816730260848999
    2. ' ' → logprob: -2.5816731452941895
    3. 'de' → logprob: -6.5816731452941895
    4. ' deux' → logprob: -7.2066731452941895
    5. '1' → logprob: -8.081672668457031
    6. ' une' → logprob: -8.956672668457031
    7. 'une' → logprob: -9.206672668457031
    8. '   ' → logprob: -9.581672668457031
    9. 'l' → logprob: -11.456672668457031
    10. 'un' → logprob: -11.831672668457031

Token 200: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005207431968301535
    2. '1' → logprob: -8.125520706176758
    3. ' ' → logprob: -8.750520706176758
    4. 'de' → logprob: -9.875520706176758
    5. ' deux' → logprob: -11.625520706176758
    6. '   ' → logprob: -13.125520706176758
    7. '

' → logprob: -14.125520706176758
    8. 'une' → logprob: -14.125520706176758
    9. 'l' → logprob: -14.875520706176758
    10. 'h' → logprob: -15.000520706176758

Token 201: ' lignes' (ID: 81687)
  Prédit: ' lignes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lignes' → logprob: -0.4566973149776459
    2. ' ' → logprob: -1.0816973447799683
    3. 'l' → logprob: -3.8316972255706787
    4. ' lines' → logprob: -6.456697463989258
    5. ' espaces' → logprob: -7.206697463989258
    6. '*' → logprob: -7.706697463989258
    7. ':' → logprob: -7.831697463989258
    8. ' ligne' → logprob: -7.956697463989258
    9. ' ' → logprob: -8.081697463989258
    10. ' l' → logprob: -8.206697463989258

Token 202: ' ET' (ID: 23345)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17411445081233978
    2. ':' → logprob: -2.174114465713501
    3. ' or' → logprob: -4.049114227294922
    4. ',' → logprob: -4.924114227294922
    5. ' and' → logprob: -4.924114227294922
    6. ' et' → logprob: -5.174114227294922
    7. ' ou' → logprob: -5.424114227294922
    8. ' :' → logprob: -6.299114227294922
    9. ':
' → logprob: -7.674114227294922
    10. 'et' → logprob: -8.049114227294922

Token 203: ' ' (ID: 220)
  Prédit: ' au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.1929503083229065
    2. ' w' → logprob: -2.5679502487182617
    3. ' ' → logprob: -3.4429502487182617
    4. 'au' → logprob: -3.8179502487182617
    5. 'w' → logprob: -4.192950248718262
    6. '2' → logprob: -4.567950248718262
    7. '   ' → logprob: -4.817950248718262
    8. ' at' → logprob: -4.942950248718262
    9. ' deux' → logprob: -6.067950248718262
    10. ' une' → logprob: -7.692950248718262

Token 204: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.640546977519989
    2. 'au' → logprob: -1.0155470371246338
    3. 'de' → logprob: -3.140547037124634
    4. ' au' → logprob: -3.265547037124634
    5. ' ' → logprob: -3.640547037124634
    6. ' deux' → logprob: -6.640546798706055
    7. 'colon' → logprob: -7.640546798706055
    8. 'w' → logprob: -8.140546798706055
    9. '   ' → logprob: -8.140546798706055
    10. 'col' → logprob: -8.765546798706055

Token 205: ' colon' (ID: 20947)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.41944095492362976
    2. ' lignes' → logprob: -1.6694409847259521
    3. ' colon' → logprob: -2.294440984725952
    4. 'colon' → logprob: -3.294440984725952
    5. '   ' → logprob: -4.544440746307373
    6. ' l' → logprob: -6.419440746307373
    7. ' ' → logprob: -6.794440746307373
    8. ' ' → logprob: -7.044440746307373
    9. ' espaces' → logprob: -7.794440746307373
    10. 'col' → logprob: -8.044441223144531

Token 206: 'nes' (ID: 4382)
  Prédit: 'nes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nes' → logprob: -0.008341046050190926
    2. 'es' → logprob: -4.883340835571289
    3. '   ' → logprob: -7.883340835571289
    4. 'ies' → logprob: -8.133340835571289
    5. 'ne' → logprob: -11.508340835571289
    6. ' ' → logprob: -11.633340835571289
    7. '       ' → logprob: -12.133340835571289
    8. 'les' → logprob: -12.133340835571289
    9. '    ' → logprob: -12.508340835571289
    10. '  ' → logprob: -12.633340835571289

Token 207: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19749142229557037
    2. ':' → logprob: -1.8224914073944092
    3. ':
' → logprob: -4.197491645812988
    4. ',' → logprob: -6.197491645812988
    5. '       ' → logprob: -8.572491645812988
    6. '    
' → logprob: -8.947491645812988
    7. '
' → logprob: -9.447491645812988
    8. ' :' → logprob: -10.697491645812988
    9. '):' → logprob: -11.072491645812988
    10. ',
' → logprob: -11.322491645812988

Token 208: ' placer' (ID: 55591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001127955736592412
    2. ' return' → logprob: -7.00112771987915
    3. 'return' → logprob: -8.876128196716309
    4. '    ' → logprob: -10.126128196716309
    5. '       ' → logprob: -11.376128196716309
    6. '    
' → logprob: -11.751128196716309
    7. '   ' → logprob: -11.876128196716309
    8. '
' → logprob: -12.251128196716309
    9. '  ' → logprob: -13.626128196716309
    10. ' 
' → logprob: -13.751128196716309

Token 209: ' le' (ID: 505)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.851819634437561
    2. '(h' → logprob: -0.976819634437561
    3. ' (' → logprob: -2.1018195152282715
    4. ' h' → logprob: -3.1018195152282715
    5. ' return' → logprob: -4.9768195152282715
    6. ' des' → logprob: -5.1018195152282715
    7. 'h' → logprob: -5.3518195152282715
    8. 'return' → logprob: -5.3518195152282715
    9. 'des' → logprob: -6.3518195152282715
    10. ' ' → logprob: -6.3518195152282715

Token 210: ' nombre' (ID: 9733)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.11041375249624252
    2. ' return' → logprob: -2.6104137897491455
    3. 'max' → logprob: -3.9854137897491455
    4. ' nombre' → logprob: -6.110413551330566
    5. 'nombre' → logprob: -6.110413551330566
    6. ' max' → logprob: -6.235413551330566
    7. 'maximum' → logprob: -6.610413551330566
    8. ' maximum' → logprob: -6.610413551330566
    9. ' (' → logprob: -7.235413551330566
    10. 'h' → logprob: -7.735413551330566

Token 211: ' maximum' (ID: 10562)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06001140922307968
    2. ' //' → logprob: -3.810011386871338
    3. '_total' → logprob: -4.435011386871338
    4. '_max' → logprob: -5.185011386871338
    5. ' de' → logprob: -6.185011386871338
    6. 'd' → logprob: -6.185011386871338
    7. ' d' → logprob: -6.560011386871338
    8. ' ' → logprob: -6.560011386871338
    9. '_de' → logprob: -6.560011386871338
    10. '_d' → logprob: -6.685011386871338

Token 212: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10353939235210419
    2. ' de' → logprob: -2.72853946685791
    3. '_possible' → logprob: -4.85353946685791
    4. '    
' → logprob: -4.97853946685791
    5. '    ' → logprob: -4.97853946685791
    6. '_de' → logprob: -6.10353946685791
    7. 'de' → logprob: -6.10353946685791
    8. ' ' → logprob: -6.72853946685791
    9. ' possible' → logprob: -6.72853946685791
    10. ' d' → logprob: -6.72853946685791

Token 213: ' dom' (ID: 3878)
  Prédit: 'dom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dom' → logprob: -0.018833141773939133
    2. ' dom' → logprob: -4.018833160400391
    3. 'cases' → logprob: -8.14383316040039
    4. ' domino' → logprob: -9.01883316040039
    5. '_dom' → logprob: -9.26883316040039
    6. ' ' → logprob: -10.26883316040039
    7. ' cases' → logprob: -10.39383316040039
    8. 'div' → logprob: -10.89383316040039
    9. '2' → logprob: -11.01883316040039
    10. 'domain' → logprob: -11.64383316040039

Token 214: 'inos' (ID: 8200)
  Prédit: 'inos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inos' → logprob: -0.047470495104789734
    2. 'ino' → logprob: -3.2974705696105957
    3. 'ines' → logprob: -5.672470569610596
    4. '   ' → logprob: -6.172470569610596
    5. 'in' → logprob: -7.547470569610596
    6. 'es' → logprob: -7.547470569610596
    7. '```' → logprob: -7.672470569610596
    8. '#' → logprob: -7.922470569610596
    9. 'ино' → logprob: -8.297470092773438
    10. 'i' → logprob: -8.609970092773438

Token 215: ' possible' (ID: 4149)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04421650618314743
    2. '    
' → logprob: -3.2942163944244385
    3. '
' → logprob: -5.169216632843018
    4. '     
' → logprob: -8.91921615600586
    5. '   
' → logprob: -9.04421615600586
    6. '    ' → logprob: -9.16921615600586
    7. ' 
' → logprob: -10.29421615600586
    8. '  
' → logprob: -10.54421615600586
    9. '    
    
' → logprob: -11.66921615600586
    10. 'return' → logprob: -11.91921615600586

Token 216: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06294871121644974
    2. '    
' → logprob: -3.187948703765869
    3. '
' → logprob: -3.937948703765869
    4. '   
' → logprob: -8.937949180603027
    5. '  
' → logprob: -10.312949180603027
    6. '     
' → logprob: -10.687949180603027
    7. '    ' → logprob: -11.312949180603027
    8. ' 
' → logprob: -11.562949180603027
    9. '\n' → logprob: -11.562949180603027
    10. '    
    
' → logprob: -11.562949180603027

Token 217: 'surface' (ID: 86531)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6728625297546387
    2. '(h' → logprob: -0.7978625297546387
    3. '   ' → logprob: -3.6728625297546387
    4. ' return' → logprob: -5.297862529754639
    5. 'return' → logprob: -5.547862529754639
    6. ' h' → logprob: -6.297862529754639
    7. 'h' → logprob: -6.922862529754639
    8. ')' → logprob: -7.547862529754639
    9. '
' → logprob: -7.797862529754639
    10. ')
' → logprob: -8.172863006591797

Token 218: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.11027560383081436
    2. ')' → logprob: -3.1102755069732666
    3. '//' → logprob: -3.2352755069732666
    4. '   ' → logprob: -4.110275745391846
    5. ' ' → logprob: -6.360275745391846
    6. ' )' → logprob: -6.610275745391846
    7. ')//' → logprob: -7.485275745391846
    8. '  ' → logprob: -9.360275268554688
    9. '    ' → logprob: -9.610275268554688
    10. 'div' → logprob: -10.360275268554688

Token 219: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.12695550918579102
    2. ' ' → logprob: -2.126955509185791
    3. '   ' → logprob: -10.751955032348633
    4. ' ' → logprob: -13.126955032348633
    5. '```' → logprob: -13.376955032348633
    6. '  ' → logprob: -14.814455032348633
    7. '
' → logprob: -14.814455032348633
    8. '1' → logprob: -15.126955032348633
    9. '    ' → logprob: -15.501955032348633
    10. ' ' → logprob: -16.001955032348633

Token 220: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002186545403674245
    2. ' ' → logprob: -6.1271867752075195
    3. '   ' → logprob: -13.75218677520752
    4. '```' → logprob: -15.25218677520752
    5. '1' → logprob: -16.752185821533203
    6. ' ' → logprob: -16.877185821533203
    7. '3' → logprob: -17.627185821533203
    8. '
' → logprob: -17.752185821533203
    9. '  ' → logprob: -17.752185821533203
    10. '`' → logprob: -18.752185821533203

Token 221: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4385817050933838
    2. '   ' → logprob: -1.3135817050933838
    3. ')
' → logprob: -2.688581705093384
    4. '):
' → logprob: -4.188581466674805
    5. '):' → logprob: -5.938581466674805
    6. ')
' → logprob: -9.313581466674805
    7. '
' → logprob: -9.688581466674805
    8. ':
' → logprob: -10.438581466674805
    9. ' )' → logprob: -10.563581466674805
    10. ')

' → logprob: -10.563581466674805

Token 222: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022863848134875298
    2. '
' → logprob: -4.022863864898682
    3. '    
' → logprob: -5.397863864898682
    4. 'return' → logprob: -9.397863388061523
    5. ' 
' → logprob: -10.522863388061523
    6. '   
' → logprob: -10.772863388061523
    7. '     
' → logprob: -11.147863388061523
    8. '\n' → logprob: -11.647863388061523
    9. '    ' → logprob: -11.897863388061523
    10. '```' → logprob: -12.647863388061523

Token 223: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019127774983644485
    2. 'if' → logprob: -4.51912784576416
    3. ' if' → logprob: -5.26912784576416
    4. 'return' → logprob: -6.51912784576416
    5. '
' → logprob: -7.14412784576416
    6. '    
' → logprob: -7.76912784576416
    7. ' return' → logprob: -8.89412784576416
    8. 'result' → logprob: -11.14412784576416
    9. 'total' → logprob: -11.14412784576416
    10. ' 
' → logprob: -11.76912784576416

Token 224: ' La' (ID: 3038)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.652618944644928
    2. '   ' → logprob: -1.4026188850402832
    3. ' if' → logprob: -1.5276188850402832
    4. 'total' → logprob: -4.527618885040283
    5. 'return' → logprob: -6.402618885040283
    6. 'surface' → logprob: -6.402618885040283
    7. ' total' → logprob: -6.652618885040283
    8. ' surface' → logprob: -8.277619361877441
    9. ' return' → logprob: -9.152619361877441
    10. '```' → logprob: -9.277619361877441

Token 225: ' division' (ID: 21629)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.830906331539154
    2. 'return' → logprob: -1.0809063911437988
    3. 'r' → logprob: -2.580906391143799
    4. 'if' → logprob: -3.080906391143799
    5. 'surface' → logprob: -3.330906391143799
    6. ' ' → logprob: -4.080906391143799
    7. 'n' → logprob: -4.330906391143799
    8. ' return' → logprob: -4.705906391143799
    9. ' if' → logprob: -4.955906391143799
    10. 'result' → logprob: -5.455906391143799

Token 226: ' entière' (ID: 61583)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7563372254371643
    2. ' de' → logprob: -1.3813371658325195
    3. '_' → logprob: -2.0063371658325195
    4. '_result' → logprob: -4.0063371658325195
    5. ' totale' → logprob: -4.1313371658325195
    6. ' return' → logprob: -4.2563371658325195
    7. ' =' → logprob: -4.5063371658325195
    8. ' ' → logprob: -4.6313371658325195
    9. ' entière' → logprob: -4.6313371658325195
    10. ' est' → logprob: -5.1313371658325195

Token 227: ' ren' (ID: 5427)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2003316879272461
    2. ' return' → logprob: -1.825331687927246
    3. 'return' → logprob: -4.825331687927246
    4. ' h' → logprob: -5.450331687927246
    5. ' de' → logprob: -6.450331687927246
    6. '_' → logprob: -6.950331687927246
    7. ' =' → logprob: -7.200331687927246
    8. '    ' → logprob: -7.200331687927246
    9. ')' → logprob: -7.450331687927246
    10. ' )' → logprob: -7.575331687927246

Token 228: 'voie' (ID: 70072)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5721468329429626
    2. 'voie' → logprob: -1.6971468925476074
    3. 'return' → logprob: -2.5721468925476074
    4. 'du' → logprob: -2.6971468925476074
    5. 't' → logprob: -2.9471468925476074
    6. '   ' → logprob: -4.197146892547607
    7. 'e' → logprob: -4.822146892547607
    8. 'ver' → logprob: -5.072146892547607
    9. 'v' → logprob: -5.197146892547607
    10. 'dre' → logprob: -5.322146892547607

Token 229: ' combien' (ID: 106648)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.23393814265727997
    2. ' le' → logprob: -2.483938217163086
    3. ' h' → logprob: -2.608938217163086
    4. ' surface' → logprob: -3.608938217163086
    5. ' ' → logprob: -5.108938217163086
    6. 'surface' → logprob: -5.358938217163086
    7. 'h' → logprob: -5.733938217163086
    8. ' l' → logprob: -6.233938217163086
    9. ' un' → logprob: -6.483938217163086
    10. ' len' → logprob: -6.608938217163086

Token 230: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.07782535254955292
    2. ' d' → logprob: -3.2028253078460693
    3. '    ' → logprob: -3.7028253078460693
    4. '   ' → logprob: -5.327825546264648
    5. 'de' → logprob: -6.702825546264648
    6. 'd' → logprob: -6.827825546264648
    7. ' ' → logprob: -7.202825546264648
    8. ' of' → logprob: -7.577825546264648
    9. '  ' → logprob: -8.577825546264648
    10. ' possible' → logprob: -8.827825546264648

Token 231: ' dom' (ID: 3878)
  Prédit: 'dom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dom' → logprob: -0.2834583818912506
    2. ' dom' → logprob: -1.4084583520889282
    3. 'cases' → logprob: -7.783458232879639
    4. ' ' → logprob: -8.033458709716797
    5. ' cases' → logprob: -8.033458709716797
    6. ' domino' → logprob: -8.283458709716797
    7. '2' → logprob: -8.408458709716797
    8. '```' → logprob: -9.158458709716797
    9. ' fois' → logprob: -9.283458709716797
    10. ' domaines' → logprob: -9.783458709716797

Token 232: 'inos' (ID: 8200)
  Prédit: 'inos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inos' → logprob: -0.5187770128250122
    2. 'es' → logprob: -2.1437768936157227
    3. 'ines' → logprob: -2.1437768936157227
    4. 'aines' → logprob: -2.3937768936157227
    5. 'e' → logprob: -3.0187768936157227
    6. 'in' → logprob: -5.018776893615723
    7. 'ino' → logprob: -5.143776893615723
    8. '   ' → logprob: -5.518776893615723
    9. 'mes' → logprob: -5.893776893615723
    10. 'oines' → logprob: -6.518776893615723

Token 233: ' comple' (ID: 2149)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038795292377471924
    2. 'pe' → logprob: -4.038795471191406
    3. ' peuvent' → logprob: -5.288795471191406
    4. ' peut' → logprob: -5.663795471191406
    5. ' can' → logprob: -6.288795471191406
    6. 'return' → logprob: -6.413795471191406
    7. ' return' → logprob: -6.663795471191406
    8. ' possible' → logprob: -6.913795471191406
    9. 'possible' → logprob: -7.038795471191406
    10. ' pe' → logprob: -7.038795471191406

Token 234: 'ts' (ID: 1561)
  Prédit: 'ment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.4864467978477478
    2. 't' → logprob: -0.9864467978477478
    3. 'te' → logprob: -5.736446857452393
    4. 'ti' → logprob: -6.111446857452393
    5. 'int' → logprob: -6.361446857452393
    6. 'et' → logprob: -6.361446857452393
    7. 'met' → logprob: -7.361446857452393
    8. 'it' → logprob: -7.486446857452393
    9. 'tit' → logprob: -8.486446380615234
    10. 'vit' → logprob: -8.986446380615234

Token 235: ' peuvent' (ID: 21321)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17502310872077942
    2. ' return' → logprob: -2.175023078918457
    3. 'return' → logprob: -4.425023078918457
    4. ')' → logprob: -4.550023078918457
    5. ' can' → logprob: -4.675023078918457
    6. ',' → logprob: -6.050023078918457
    7. ' de' → logprob: -6.175023078918457
    8. ' )' → logprob: -6.300023078918457
    9. '.' → logprob: -6.550023078918457
    10. ' =' → logprob: -6.800023078918457

Token 236: ' être' (ID: 9104)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.15396778285503387
    2. ' être' → logprob: -2.02896785736084
    3. 'êtres' → logprob: -5.02896785736084
    4. 'etre' → logprob: -6.40396785736084
    5. ' couvrir' → logprob: -7.65396785736084
    6. 'êt' → logprob: -7.90396785736084
    7. ' etre' → logprob: -8.15396785736084
    8. 's' → logprob: -8.65396785736084
    9. 'ê' → logprob: -8.77896785736084
    10. ' ' → logprob: -8.90396785736084

Token 237: ' plac' (ID: 7097)
  Prédit: 'plac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plac' → logprob: -0.19971127808094025
    2. ' plac' → logprob: -1.8247113227844238
    3. 'pos' → logprob: -4.074711322784424
    4. 'pla' → logprob: -7.574711322784424
    5. 'form' → logprob: -7.824711322784424
    6. 'placed' → logprob: -8.199710845947266
    7. ' pos' → logprob: -8.324710845947266
    8. 'placer' → logprob: -8.699710845947266
    9. 'placement' → logprob: -8.699710845947266
    10. 'position' → logprob: -8.824710845947266

Token 238: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.009850174188613892
    2. 'es' → logprob: -4.759850025177002
    3. 'é' → logprob: -7.509850025177002
    4. '```' → logprob: -8.38485050201416
    5. 'e' → logprob: -8.63485050201416
    6. 'ées' → logprob: -9.75985050201416
    7. '   ' → logprob: -9.88485050201416
    8. 'ed' → logprob: -10.38485050201416
    9. 'er' → logprob: -10.75985050201416
    10. 'c' → logprob: -10.88485050201416

Token 239: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0038329751696437597
    2. ':' → logprob: -6.128832817077637
    3. '    
' → logprob: -6.753832817077637
    4. '
' → logprob: -8.878832817077637
    5. ' 
' → logprob: -9.503832817077637
    6. 'return' → logprob: -10.003832817077637
    7. ')' → logprob: -10.253832817077637
    8. '    ' → logprob: -10.628832817077637
    9. '   
' → logprob: -10.628832817077637
    10. ':
' → logprob: -10.753832817077637

Token 240: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012847563484683633
    2. '
' → logprob: -7.626284599304199
    3. '    
' → logprob: -7.626284599304199
    4. 'return' → logprob: -8.2512845993042
    5. ' return' → logprob: -10.7512845993042
    6. '    ' → logprob: -11.1262845993042
    7. ' 
' → logprob: -12.5012845993042
    8. '   
' → logprob: -12.7512845993042
    9. '     
' → logprob: -13.8762845993042
    10. '  ' → logprob: -14.1262845993042

Token 241: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.061012495309114456
    2. 'return' → logprob: -2.9360125064849854
    3. ' return' → logprob: -5.186012268066406
    4. 'if' (adapté à ' if') → logprob: -8.561012268066406
    5. ' if' → logprob: -9.436012268066406
    6. '    
' → logprob: -9.686012268066406
    7. 'result' → logprob: -9.936012268066406
    8. '
' → logprob: -10.436012268066406
    9. 'total' → logprob: -10.811012268066406
    10. '    ' → logprob: -10.936012268066406

Token 242: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.018152983859181404
    2. 'h' → logprob: -4.018153190612793
    3. ' (' → logprob: -13.768153190612793
    4. ' ' → logprob: -13.893153190612793
    5. '(h' → logprob: -14.643153190612793
    6. '   ' → logprob: -15.268153190612793
    7. ' min' → logprob: -15.518153190612793
    8. '	h' → logprob: -16.018152236938477
    9. ' ' → logprob: -18.018152236938477
    10. ' not' → logprob: -18.518152236938477

Token 243: ' >' (ID: 1424)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.916239857673645
    2. ' <=' → logprob: -1.916239857673645
    3. '==' → logprob: -1.916239857673645
    4. ' *' → logprob: -2.0412397384643555
    5. ' <' → logprob: -2.5412397384643555
    6. '<' → logprob: -3.4162397384643555
    7. '<=' → logprob: -3.4162397384643555
    8. '*' → logprob: -4.0412397384643555
    9. ' >=' → logprob: -4.6662397384643555
    10. '>=' → logprob: -5.9162397384643555

Token 244: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3466937839984894
    2. '1' → logprob: -1.971693754196167
    3. '=' → logprob: -2.346693754196167
    4. '0' → logprob: -2.846693754196167
    5. ' =' → logprob: -10.971693992614746
    6. '  ' → logprob: -11.721693992614746
    7. '   ' → logprob: -12.721693992614746
    8. '2' → logprob: -13.721693992614746
    9. '=
' → logprob: -13.721693992614746
    10. ' ' → logprob: -14.471693992614746

Token 245: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09137479960918427
    2. '0' → logprob: -2.7163748741149902
    3. '=' → logprob: -3.9663748741149902
    4. ' ' → logprob: -6.09137487411499
    5. '   ' → logprob: -13.091374397277832
    6. '  ' → logprob: -14.341374397277832
    7. '

' → logprob: -14.591374397277832
    8. ' =' → logprob: -14.716374397277832
    9. '==' → logprob: -15.091374397277832
    10. '>' → logprob: -15.153874397277832

Token 246: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.012217996641993523
    2. 'and' → logprob: -4.512217998504639
    3. '   ' → logprob: -7.262217998504639
    4. ' or' → logprob: -7.887217998504639
    5. ':' → logprob: -9.88721752166748
    6. ' ' → logprob: -10.51221752166748
    7. 'or' → logprob: -12.26221752166748
    8. '    ' → logprob: -12.76221752166748
    9. '	and' → logprob: -13.76221752166748
    10. ':
' → logprob: -13.88721752166748

Token 247: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.0008223761687986553
    2. 'w' → logprob: -7.1258225440979
    3. ' ' → logprob: -11.125822067260742
    4. ' ' → logprob: -13.625822067260742
    5. '	w' → logprob: -14.000822067260742
    6. '   ' → logprob: -14.750822067260742
    7. '  ' → logprob: -15.125822067260742
    8. '    ' → logprob: -15.250822067260742
    9. ''w' → logprob: -16.625822067260742
    10. '```' → logprob: -17.000822067260742

Token 248: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.03416794538497925
    2. ' >=' → logprob: -4.034167766571045
    3. '>' → logprob: -4.159167766571045
    4. '>=' → logprob: -8.534168243408203
    5. ' ' → logprob: -9.659168243408203
    6. '   ' → logprob: -12.159168243408203
    7. ' >
' → logprob: -14.284168243408203
    8. ' <' → logprob: -14.409168243408203
    9. ' <=' → logprob: -14.534168243408203
    10. '  ' → logprob: -14.784168243408203

Token 249: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0788913294672966
    2. ' ' → logprob: -2.5788912773132324
    3. '0' → logprob: -14.20389175415039
    4. '   ' → logprob: -14.45389175415039
    5. '=' → logprob: -15.82889175415039
    6. '>' → logprob: -16.57889175415039
    7. '  ' → logprob: -16.64139175415039
    8. '```' → logprob: -16.76639175415039
    9. '2' → logprob: -16.95389175415039
    10. '１' → logprob: -17.70389175415039

Token 250: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014084660506341606
    2. ' ' → logprob: -8.875141143798828
    3. '   ' → logprob: -14.500141143798828
    4. '0' → logprob: -15.000141143798828
    5. '  ' → logprob: -17.125141143798828
    6. '```' → logprob: -17.687641143798828
    7. '１' → logprob: -18.562641143798828
    8. '    ' → logprob: -18.687641143798828
    9. '=' → logprob: -18.750141143798828
    10. '>' → logprob: -18.875141143798828

Token 251: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003610878484323621
    2. ':
' → logprob: -5.628611087799072
    3. '   ' → logprob: -12.253610610961914
    4. ':return' → logprob: -13.253610610961914
    5. '):' → logprob: -13.378610610961914
    6. ' :' → logprob: -13.378610610961914
    7. '       ' → logprob: -14.253610610961914
    8. ':
' → logprob: -15.503610610961914
    9. ':

' → logprob: -15.628610610961914
    10. '):
' → logprob: -15.753610610961914

Token 252: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011072466149926186
    2. '   ' → logprob: -4.886072635650635
    3. ':' → logprob: -5.761072635650635
    4. 'return' → logprob: -9.136072158813477
    5. '    ' → logprob: -9.386072158813477
    6. ' return' → logprob: -10.386072158813477
    7. ':return' → logprob: -10.386072158813477
    8. ':
' → logprob: -11.261072158813477
    9. '    
' → logprob: -11.761072158813477
    10. '      ' → logprob: -12.261072158813477

Token 253: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3896207809448242
    2. ' return' → logprob: -1.7646207809448242
    3. 'return' (adapté à ' return') → logprob: -1.8896207809448242
    4. '   ' → logprob: -8.139620780944824
    5. 'result' → logprob: -12.514620780944824
    6. '           ' → logprob: -13.014620780944824
    7. ' ' → logprob: -13.389620780944824
    8. ' result' → logprob: -13.514620780944824
    9. '	return' → logprob: -13.889620780944824
    10. '      ' → logprob: -14.139620780944824

Token 254: ' (' (ID: 350)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.47409623861312866
    2. ' (' → logprob: -0.9740962386131287
    3. '   ' → logprob: -11.224096298217773
    4. 'h' → logprob: -12.724096298217773
    5. '(' → logprob: -13.974096298217773
    6. ' h' → logprob: -14.099096298217773
    7. ' ' → logprob: -14.599096298217773
    8. '
' → logprob: -15.599096298217773
    9. '(hw' → logprob: -15.724096298217773
    10. ' ' → logprob: -16.099096298217773

Token 255: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -7.815280696377158e-05
    2. '(h' → logprob: -9.500078201293945
    3. ' h' → logprob: -12.750078201293945
    4. '   ' → logprob: -15.250078201293945
    5. ' (' → logprob: -16.875078201293945
    6. '	h' → logprob: -17.375078201293945
    7. '[h' → logprob: -20.125078201293945
    8. ')' → logprob: -20.250078201293945
    9. '"h' → logprob: -20.500078201293945
    10. '```' → logprob: -21.000078201293945

Token 256: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.004106658045202494
    2. '*' → logprob: -5.504106521606445
    3. '*w' → logprob: -10.629106521606445
    4. ' ' → logprob: -12.629106521606445
    5. ' ' → logprob: -14.879106521606445
    6. '   ' → logprob: -15.254106521606445
    7. 'w' → logprob: -17.004106521606445
    8. '    ' → logprob: -17.129106521606445
    9. ' **' → logprob: -18.129106521606445
    10. '  ' → logprob: -18.254106521606445

Token 257: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.07889209687709808
    2. ' w' → logprob: -2.5788919925689697
    3. '   ' → logprob: -13.82889175415039
    4. ' ' → logprob: -13.95389175415039
    5. '	w' → logprob: -15.95389175415039
    6. '    ' → logprob: -16.07889175415039
    7. '(w' → logprob: -16.32889175415039
    8. ' (' → logprob: -17.07889175415039
    9. '  ' → logprob: -17.32889175415039
    10. ')' → logprob: -17.45389175415039

Token 258: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008698481135070324
    2. ' )' → logprob: -4.758698463439941
    3. ' //' → logprob: -10.133698463439941
    4. ')//' → logprob: -10.133698463439941
    5. '//' → logprob: -12.883698463439941
    6. '   ' → logprob: -13.508698463439941
    7. ' ' → logprob: -14.883698463439941
    8. '       ' → logprob: -16.758699417114258
    9. ']' → logprob: -17.258699417114258
    10. '    ' → logprob: -17.383699417114258

Token 259: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.062060896307229996
    2. '//' → logprob: -2.812060832977295
    3. ' ' → logprob: -9.687061309814453
    4. ' ' → logprob: -11.187061309814453
    5. '   ' → logprob: -11.312061309814453
    6. ')' → logprob: -13.062061309814453
    7. '       ' → logprob: -14.187061309814453
    8. '  ' → logprob: -14.187061309814453
    9. '    ' → logprob: -14.812061309814453
    10. '```' → logprob: -14.937061309814453

Token 260: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.4974866644479334e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -15.750015258789062
    4. '```' → logprob: -18.000015258789062
    5. '  ' → logprob: -19.875015258789062
    6. '
' → logprob: -20.500015258789062
    7. '۲' → logprob: -20.500015258789062
    8. '２' → logprob: -20.812515258789062
    9. '    ' → logprob: -20.812515258789062
    10. '       ' → logprob: -21.625015258789062

Token 261: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '   ' → logprob: -19.375
    4. '```' → logprob: -19.75
    5. '２' → logprob: -20.75
    6. '
' → logprob: -21.125
    7. '۲' → logprob: -21.25
    8. '২' → logprob: -22.5
    9. '२' → logprob: -23.0
    10. '٢' → logprob: -23.25

Token 262: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000835716025903821
    2. '    
' → logprob: -7.50083589553833
    3. '
' → logprob: -9.250835418701172
    4. 'return' → logprob: -9.375835418701172
    5. 'else' → logprob: -9.500835418701172
    6. 'elif' → logprob: -11.875835418701172
    7. '  
' → logprob: -12.500835418701172
    8. ' else' → logprob: -12.750835418701172
    9. '\n' → logprob: -12.875835418701172
    10. '   
' → logprob: -13.125835418701172

Token 263: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017716889269649982
    2. 'elif' → logprob: -6.501771926879883
    3. 'if' → logprob: -8.751771926879883
    4. 'else' → logprob: -9.626771926879883
    5. '    
' → logprob: -10.376771926879883
    6. 'return' → logprob: -12.126771926879883
    7. '
' → logprob: -12.376771926879883
    8. ' elif' → logprob: -13.126771926879883
    9. '```' → logprob: -13.376771926879883
    10. ' if' → logprob: -15.751771926879883

Token 264: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0252246856689453
    2. 'if' → logprob: -1.2752246856689453
    3. 'elif' → logprob: -1.2752246856689453
    4. 'else' (adapté à ' else') → logprob: -2.6502246856689453
    5. 'return' → logprob: -4.900224685668945
    6. ' if' → logprob: -6.025224685668945
    7. ' elif' → logprob: -6.525224685668945
    8. ' else' → logprob: -8.025224685668945
    9. '    
' → logprob: -9.400224685668945
    10. '
' → logprob: -9.525224685668945

Token 265: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03394581004977226
    2. ':
' → logprob: -3.4089457988739014
    3. '       ' → logprob: -8.78394603729248
    4. ' :' → logprob: -9.65894603729248
    5. '   ' → logprob: -10.40894603729248
    6. ' :
' → logprob: -10.53394603729248
    7. ':return' → logprob: -10.78394603729248
    8. '    ' → logprob: -12.65894603729248
    9. ':
' → logprob: -14.15894603729248
    10. ':

' → logprob: -14.78394603729248

Token 266: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07717061042785645
    2. 'if' → logprob: -3.0771706104278564
    3. 'return' → logprob: -4.327170372009277
    4. ' if' → logprob: -4.827170372009277
    5. '       ' → logprob: -5.077170372009277
    6. ' return' → logprob: -7.327170372009277
    7. 'total' → logprob: -10.077170372009277
    8. '    ' → logprob: -12.202170372009277
    9. ' total' → logprob: -12.452170372009277
    10. 'max' → logprob: -12.452170372009277

Token 267: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.12845835089683533
    2. 'if' → logprob: -2.128458261489868
    3. '   ' → logprob: -7.128458499908447
    4. '       ' → logprob: -8.253458023071289
    5. 'max' → logprob: -8.253458023071289
    6. ' return' → logprob: -8.878458023071289
    7. 'total' → logprob: -10.503458023071289
    8. ' if' → logprob: -10.628458023071289
    9. 'min' → logprob: -12.003458023071289
    10. '           ' → logprob: -13.753458023071289

Token 268: ' Pour' (ID: 13931)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6681633591651917
    2. 'if' → logprob: -1.1681632995605469
    3. 'total' → logprob: -1.7931632995605469
    4. '   ' → logprob: -5.668163299560547
    5. 'size' → logprob: -5.918163299560547
    6. ' return' → logprob: -6.793163299560547
    7. ' if' → logprob: -6.793163299560547
    8. 'n' → logprob: -7.918163299560547
    9. ' total' → logprob: -7.918163299560547
    10. 'surface' → logprob: -8.168163299560547

Token 269: ' les' (ID: 1341)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.7115117907524109
    2. 'h' → logprob: -1.5865118503570557
    3. ' (' → logprob: -1.7115118503570557
    4. '(h' → logprob: -2.5865118503570557
    5. ' max' → logprob: -3.7115118503570557
    6. 'max' → logprob: -4.336511611938477
    7. ' min' → logprob: -5.461511611938477
    8. '(max' → logprob: -5.711511611938477
    9. 'min' → logprob: -6.711511611938477
    10. ' ' → logprob: -7.461511611938477

Token 270: ' tableaux' (ID: 176599)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.3263455033302307
    2. 'h' → logprob: -1.826345443725586
    3. 'cases' → logprob: -3.201345443725586
    4. 'cas' → logprob: -3.951345443725586
    5. '(h' → logprob: -4.326345443725586
    6. 't' → logprob: -4.826345443725586
    7. ' (' → logprob: -5.326345443725586
    8. ' h' → logprob: -5.826345443725586
    9. 'else' → logprob: -5.826345443725586
    10. ' cas' → logprob: -5.951345443725586

Token 271: ' ' (ID: 220)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.3801443576812744
    2. '   ' → logprob: -1.7551443576812744
    3. 'h' → logprob: -1.8801443576812744
    4. '1' → logprob: -2.2551443576812744
    5. ' ' → logprob: -2.6301443576812744
    6. 'd' → logprob: -3.3801443576812744
    7. ' avec' → logprob: -3.3801443576812744
    8. ' with' → logprob: -3.3801443576812744
    9. 'with' → logprob: -3.3801443576812744
    10. ' h' → logprob: -3.5051443576812744

Token 272: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.19367170333862305
    2. 'd' → logprob: -2.693671703338623
    3. 'de' → logprob: -2.693671703338623
    4. ' ' → logprob: -4.693671703338623
    5. 'avec' → logprob: -4.818671703338623
    6. '   ' → logprob: -5.068671703338623
    7. 'un' → logprob: -5.193671703338623
    8. 'h' → logprob: -5.568671703338623
    9. 'une' → logprob: -6.943671703338623
    10. '(' → logprob: -6.943671703338623

Token 273: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.006148600485175848
    2. '   ' → logprob: -6.381148815155029
    3. ' x' → logprob: -6.381148815155029
    4. '*' → logprob: -6.881148815155029
    5. '<=' → logprob: -8.381148338317871
    6. 'xn' → logprob: -8.381148338317871
    7. ' <=' → logprob: -8.506148338317871
    8. ' *' → logprob: -8.631148338317871
    9. 'if' → logprob: -8.756148338317871
    10. 'w' → logprob: -9.256148338317871

Token 274: 'N' (ID: 45)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.41981467604637146
    2. 'n' → logprob: -1.4198147058486938
    3. 'w' → logprob: -2.2948145866394043
    4. ' n' → logprob: -9.544815063476562
    5. ' ' → logprob: -10.044815063476562
    6. '   ' → logprob: -10.169815063476562
    7. ' w' → logprob: -10.169815063476562
    8. 'h' → logprob: -10.169815063476562
    9. '0' → logprob: -11.044815063476562
    10. 'max' → logprob: -11.169815063476562

Token 275: ' ou' (ID: 2031)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.2508971393108368
    2. ' ou' → logprob: -2.125897169113159
    3. '   ' → logprob: -3.375897169113159
    4. ':' → logprob: -3.875897169113159
    5. 'or' → logprob: -4.00089693069458
    6. 'if' → logprob: -5.00089693069458
    7. ' if' → logprob: -5.12589693069458
    8. ',' → logprob: -5.50089693069458
    9. 'return' → logprob: -5.62589693069458
    10. '       ' → logprob: -5.62589693069458

Token 276: ' Nx' (ID: 178338)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016064519062638283
    2. ' ' → logprob: -5.016064643859863
    3. 'N' → logprob: -5.266064643859863
    4. 'n' → logprob: -6.266064643859863
    5. 'Nx' → logprob: -6.516064643859863
    6. ' Nx' → logprob: -7.891064643859863
    7. ' N' → logprob: -8.766064643859863
    8. ' n' → logprob: -9.016064643859863
    9. 'nx' → logprob: -9.641064643859863
    10. 'h' → logprob: -11.266064643859863

Token 277: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.558399319241289e-05
    2. ' ' → logprob: -10.750025749206543
    3. '   ' → logprob: -12.625025749206543
    4. '```' → logprob: -15.125025749206543
    5. 'h' → logprob: -15.625025749206543
    6. '0' → logprob: -16.250024795532227
    7. '  ' → logprob: -16.750024795532227
    8. 'w' → logprob: -17.000024795532227
    9. '`' → logprob: -17.125024795532227
    10. '[' → logprob: -17.875024795532227

Token 278: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5587417483329773
    2. '       ' → logprob: -0.9337417483329773
    3. ':
' → logprob: -3.808741807937622
    4. 'return' → logprob: -5.683741569519043
    5. ':return' → logprob: -5.683741569519043
    6. ',' → logprob: -6.308741569519043
    7. '   ' → logprob: -6.308741569519043
    8. ' :' → logprob: -7.308741569519043
    9. ' return' → logprob: -7.433741569519043
    10. 'if' → logprob: -8.058741569519043

Token 279: ' on' (ID: 402)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6959477663040161
    2. 'if' → logprob: -1.8209477663040161
    3. '   ' → logprob: -2.3209476470947266
    4. '       ' → logprob: -2.4459476470947266
    5. ' return' → logprob: -2.4459476470947266
    6. ' if' → logprob: -2.6959476470947266
    7. 'total' → logprob: -8.320947647094727
    8. '    ' → logprob: -9.320947647094727
    9. ' total' → logprob: -9.945947647094727
    10. '           ' → logprob: -10.070947647094727

Token 280: ' ne' (ID: 453)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8611637949943542
    2. '       ' → logprob: -1.236163854598999
    3. ' return' → logprob: -1.861163854598999
    4. '   ' → logprob: -2.236163854598999
    5. ' if' → logprob: -4.48616361618042
    6. 'if' → logprob: -4.86116361618042
    7. '    ' → logprob: -5.86116361618042
    8. 'eturn' → logprob: -7.23616361618042
    9. '        ' → logprob: -7.48616361618042
    10. '           ' → logprob: -7.98616361618042

Token 281: ' peut' (ID: 9216)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.616368293762207
    2. 'pe' → logprob: -1.491368293762207
    3. '       ' → logprob: -2.366368293762207
    4. ' peut' → logprob: -3.241368293762207
    5. 'if' → logprob: -3.491368293762207
    6. '   ' → logprob: -3.491368293762207
    7. ' peux' → logprob: -3.866368293762207
    8. ' return' → logprob: -4.241368293762207
    9. 'can' → logprob: -6.491368293762207
    10. ' if' → logprob: -6.741368293762207

Token 282: ' placer' (ID: 55591)
  Prédit: 'placer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'placer' → logprob: -0.21201767027378082
    2. '   ' → logprob: -2.337017774581909
    3. 'pas' → logprob: -2.712017774581909
    4. ' placer' → logprob: -4.58701753616333
    5. '       ' → logprob: -5.08701753616333
    6. ' pas' → logprob: -5.46201753616333
    7. 'place' → logprob: -5.96201753616333
    8. 'mettre' → logprob: -6.58701753616333
    9. 'return' → logprob: -6.96201753616333
    10. 'placing' → logprob: -7.21201753616333

Token 283: ' qu' (ID: 474)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.46335479617118835
    2. ' que' → logprob: -1.7133548259735107
    3. '(h' → logprob: -1.9633548259735107
    4. ' h' → logprob: -4.088354587554932
    5. 'max' → logprob: -4.963354587554932
    6. ' max' → logprob: -5.088354587554932
    7. '   ' → logprob: -5.213354587554932
    8. 'h' → logprob: -5.713354587554932
    9. ' ' → logprob: -6.338354587554932
    10. '(max' → logprob: -6.338354587554932

Token 284: ''un' (ID: 9788)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8861536383628845
    2. '   ' → logprob: -1.7611536979675293
    3. ' pas' → logprob: -1.8861536979675293
    4. 'pas' → logprob: -2.5111536979675293
    5. ' que' → logprob: -2.7611536979675293
    6. ' qu' → logprob: -3.3861536979675293
    7. ''un' → logprob: -3.7611536979675293
    8. 'e' → logprob: -4.761153697967529
    9. 'u' → logprob: -4.761153697967529
    10. ''au' → logprob: -4.886153697967529

Token 285: ' domino' (ID: 133589)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.08646145462989807
    2. '(h' → logprob: -2.8364615440368652
    3. ' seul' → logprob: -4.961461544036865
    4. ' h' → logprob: -5.086461544036865
    5. ' max' → logprob: -5.961461544036865
    6. ' return' → logprob: -6.336461544036865
    7. '(max' → logprob: -6.711461544036865
    8. '(' → logprob: -6.961461544036865
    9. ' ' → logprob: -6.961461544036865
    10. 'h' → logprob: -7.336461544036865

Token 286: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0026333266869187355
    2. '       ' → logprob: -6.502633094787598
    3. 'if' → logprob: -7.252633094787598
    4. ' si' → logprob: -8.377633094787598
    5. ' s' → logprob: -9.502633094787598
    6. '   ' → logprob: -9.877633094787598
    7. '           ' → logprob: -10.627633094787598
    8. 's' → logprob: -11.752633094787598
    9. '        ' → logprob: -12.002633094787598
    10. ',' → logprob: -12.002633094787598

Token 287: ' la' (ID: 557)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.2357499897480011
    2. 'h' → logprob: -1.6107499599456787
    3. ' (' → logprob: -5.235750198364258
    4. '(h' → logprob: -5.360750198364258
    5. '   ' → logprob: -8.985750198364258
    6. '(' → logprob: -9.235750198364258
    7. ' ' → logprob: -10.360750198364258
    8. '	h' → logprob: -12.235750198364258
    9. '  ' → logprob: -13.485750198364258
    10. ' ' → logprob: -14.235750198364258

Token 288: ' surface' (ID: 9753)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.09369127452373505
    2. ' h' → logprob: -2.593691349029541
    3. '(h' → logprob: -4.468691349029541
    4. ' (' → logprob: -5.968691349029541
    5. '   ' → logprob: -8.093690872192383
    6. ' ' → logprob: -8.218690872192383
    7. '  ' → logprob: -11.093690872192383
    8. '	h' → logprob: -11.343690872192383
    9. 'max' → logprob: -11.718690872192383
    10. 'size' → logprob: -11.843690872192383

Token 289: ' est' (ID: 893)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.523993968963623
    2. ' >=' → logprob: -0.898993968963623
    3. '   ' → logprob: -7.398993968963623
    4. ' ' → logprob: -9.023994445800781
    5. '    ' → logprob: -10.148994445800781
    6. ' ' → logprob: -11.023994445800781
    7. '>' → logprob: -11.023994445800781
    8. ']>=' → logprob: -11.398994445800781
    9. ')>=' → logprob: -11.398994445800781
    10. '≥' → logprob: -11.773994445800781

Token 290: ' supérieure' (ID: 106336)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.6387297511100769
    2. '>=' → logprob: -0.7637297511100769
    3. '    ' → logprob: -5.763729572296143
    4. '   ' → logprob: -6.138729572296143
    5. ' ' → logprob: -7.763729572296143
    6. '2' → logprob: -8.8887300491333
    7. '>' → logprob: -9.3887300491333
    8. '≥' → logprob: -10.5137300491333
    9. ']>=' → logprob: -10.6387300491333
    10. ')>=' → logprob: -10.7637300491333

Token 291: ' ou' (ID: 2031)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05340970680117607
    2. ' ou' → logprob: -3.9284098148345947
    3. 'à' → logprob: -4.178409576416016
    4. ' à' → logprob: -4.928409576416016
    5. 'ou' → logprob: -5.303409576416016
    6. '   ' → logprob: -5.803409576416016
    7. ' =' → logprob: -6.678409576416016
    8. '    ' → logprob: -8.928409576416016
    9. ' ' → logprob: -9.553409576416016
    10. ' or' → logprob: -9.553409576416016

Token 292: ' ég' (ID: 33150)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0008491750340908766
    2. ' ég' → logprob: -7.62584924697876
    3. ' égal' → logprob: -8.625848770141602
    4. 'égal' → logprob: -9.750848770141602
    5. 'à' → logprob: -10.375848770141602
    6. '1' → logprob: -10.750848770141602
    7. 'equal' → logprob: -11.250848770141602
    8. 'ég' → logprob: -11.375848770141602
    9. '==' → logprob: -11.500848770141602
    10. '0' → logprob: -11.625848770141602

Token 293: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.12704990804195404
    2. 'al' → logprob: -2.1270499229431152
    3. 'a' → logprob: -9.502049446105957
    4. '```' → logprob: -11.627049446105957
    5. '1' → logprob: -11.877049446105957
    6. '   ' → logprob: -12.002049446105957
    7. '2' → logprob: -12.502049446105957
    8. 'ales' → logprob: -13.127049446105957
    9. '>' → logprob: -13.127049446105957
    10. '0' → logprob: -13.252049446105957

Token 294: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.7231833934783936
    2. 'à' → logprob: -1.0981833934783936
    3. '   ' → logprob: -2.4731833934783936
    4. '2' → logprob: -2.5981833934783936
    5. '=' → logprob: -4.848183631896973
    6. ' ' → logprob: -5.223183631896973
    7. '1' → logprob: -5.848183631896973
    8. 'to' → logprob: -6.348183631896973
    9. '    ' → logprob: -7.098183631896973
    10. '(' → logprob: -7.223183631896973

Token 295: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02324605919420719
    2. ' ' → logprob: -3.7732460498809814
    3. '   ' → logprob: -14.648245811462402
    4. '```' → logprob: -16.64824676513672
    5. '  ' → logprob: -17.27324676513672
    6. ' ' → logprob: -17.77324676513672
    7. '２' → logprob: -18.33574676513672
    8. '۲' → logprob: -18.52324676513672
    9. '    ' → logprob: -18.77324676513672
    10. '
' → logprob: -18.77324676513672

Token 296: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00012356207298580557
    2. ' ' → logprob: -9.000123977661133
    3. '   ' → logprob: -16.375123977661133
    4. '```' → logprob: -16.500123977661133
    5. ' ' → logprob: -18.625123977661133
    6. '２' → logprob: -18.937623977661133
    7. '  ' → logprob: -19.000123977661133
    8. '۲' → logprob: -19.562623977661133
    9. '
' → logprob: -19.875123977661133
    10. '1' → logprob: -20.062623977661133

Token 297: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019733747467398643
    2. ':' → logprob: -4.519733905792236
    3. '   ' → logprob: -5.144733905792236
    4. '           ' → logprob: -7.269733905792236
    5. 'return' → logprob: -7.519733905792236
    6. ' and' → logprob: -7.644733905792236
    7. ':
' → logprob: -7.769733905792236
    8. ' if' → logprob: -8.519733428955078
    9. ':return' → logprob: -9.144733428955078
    10. ' return' → logprob: -9.769733428955078

Token 298: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005979505367577076
    2. '   ' → logprob: -8.250597953796387
    3. 'if' → logprob: -9.000597953796387
    4. 'return' → logprob: -9.125597953796387
    5. ' if' → logprob: -9.500597953796387
    6. '           ' → logprob: -11.375597953796387
    7. ' return' → logprob: -12.000597953796387
    8. '
' → logprob: -13.375597953796387
    9. '      ' → logprob: -13.375597953796387
    10. '        
' → logprob: -13.500597953796387

Token 299: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.16090179979801178
    2. 'if' → logprob: -1.9109017848968506
    3. '   ' → logprob: -8.16090202331543
    4. '       ' → logprob: -8.28590202331543
    5. ' return' → logprob: -9.03590202331543
    6. ' if' → logprob: -10.91090202331543
    7. 'total' → logprob: -13.66090202331543
    8. 'max' → logprob: -15.28590202331543
    9. 'size' → logprob: -15.53590202331543
    10. 'surface' → logprob: -15.66090202331543

Token 300: ' sum' (ID: 4215)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.19388560950756073
    2. 'if' → logprob: -1.8188855648040771
    3. '       ' → logprob: -5.068885803222656
    4. ' return' → logprob: -5.693885803222656
    5. 'surface' → logprob: -6.443885803222656
    6. '   ' → logprob: -6.693885803222656
    7. ' if' → logprob: -6.818885803222656
    8. 'total' → logprob: -7.943885803222656
    9. 'size' → logprob: -10.443885803222656
    10. 'max' → logprob: -10.693885803222656

Token 301: '(div' (ID: 73108)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45849213004112244
    2. '(h' → logprob: -1.7084921598434448
    3. '       ' → logprob: -3.2084920406341553
    4. '=' → logprob: -3.4584920406341553
    5. '(' → logprob: -3.4584920406341553
    6. 'return' → logprob: -4.083492279052734
    7. '_' → logprob: -4.208492279052734
    8. ' =' → logprob: -4.333492279052734
    9. ' if' → logprob: -4.708492279052734
    10. 'if' → logprob: -5.458492279052734

Token 302: 'mod' (ID: 4847)
  Prédit: 'ide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ide' → logprob: -1.95015287399292
    2. 'ision' → logprob: -1.95015287399292
    3. '(' → logprob: -2.07515287399292
    4. '=' → logprob: -2.32515287399292
    5. '_' → logprob: -2.45015287399292
    6. '(h' → logprob: -2.70015287399292
    7. 'isible' → logprob: -2.70015287399292
    8. ' =' → logprob: -2.82515287399292
    9. '   ' → logprob: -3.07515287399292
    10. '>' → logprob: -4.20015287399292

Token 303: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.003062088042497635
    2. '((' → logprob: -6.5030622482299805
    3. '(' → logprob: -7.1280622482299805
    4. ')' → logprob: -8.12806224822998
    5. ' (' → logprob: -8.87806224822998
    6. '   ' → logprob: -9.37806224822998
    7. '(w' → logprob: -10.37806224822998
    8. '(s' → logprob: -10.37806224822998
    9. '(abs' → logprob: -10.50306224822998
    10. '(total' → logprob: -10.62806224822998

Token 304: '*w' (ID: 147727)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.3005117177963257
    2. '(w' → logprob: -1.5505117177963257
    3. '*' → logprob: -3.8005118370056152
    4. '(' → logprob: -4.550511837005615
    5. '*w' → logprob: -4.925511837005615
    6. ' *' → logprob: -5.925511837005615
    7. ' (' → logprob: -6.925511837005615
    8. ',' → logprob: -7.300511837005615
    9. '(*' → logprob: -7.425511837005615
    10. '   ' → logprob: -7.425511837005615

Token 305: ',' (ID: 11)
  Prédit: ')['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')[' → logprob: -0.46009543538093567
    2. '(h' → logprob: -2.0850954055786133
    3. '())[' → logprob: -2.2100954055786133
    4. '()[' → logprob: -2.8350954055786133
    5. '(' → logprob: -3.4600954055786133
    6. '[' → logprob: -3.9600954055786133
    7. ')' → logprob: -4.710095405578613
    8. '))[' → logprob: -5.460095405578613
    9. '   ' → logprob: -6.210095405578613
    10. ' )[' → logprob: -6.710095405578613

Token 306: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04864811152219772
    2. ' ' → logprob: -3.0486481189727783
    3. ')' → logprob: -10.1736478805542
    4. '   ' → logprob: -11.5486478805542
    5. '1' → logprob: -12.6736478805542
    6. '  ' → logprob: -13.2361478805542
    7. ' )' → logprob: -13.3611478805542
    8. '    ' → logprob: -13.5486478805542
    9. '```' → logprob: -14.1736478805542
    10. ' ' → logprob: -14.6736478805542

Token 307: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00030281138606369495
    2. ' ' → logprob: -8.125303268432617
    3. ')' → logprob: -12.125303268432617
    4. '   ' → logprob: -14.875303268432617
    5. '
' → logprob: -15.875303268432617
    6. '```' → logprob: -15.875303268432617
    7. '1' → logprob: -15.937803268432617
    8. '  ' → logprob: -16.062803268432617
    9. ' )' → logprob: -17.750303268432617
    10. '    ' → logprob: -17.875303268432617

Token 308: '))' (ID: 915)
  Prédit: ')['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')[' → logprob: -0.0077194939367473125
    2. ')' → logprob: -5.63271951675415
    3. '))' → logprob: -6.38271951675415
    4. '))[' → logprob: -6.50771951675415
    5. '[' → logprob: -7.25771951675415
    6. ' )[' → logprob: -9.382719039916992
    7. ')
' → logprob: -10.132719039916992
    8. '   ' → logprob: -11.257719039916992
    9. '))
' → logprob: -11.382719039916992
    10. ')))' → logprob: -11.507719039916992

Token 309: ' donne' (ID: 30004)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.17647315561771393
    2. '       ' → logprob: -2.6764731407165527
    3. 'return' → logprob: -3.3014731407165527
    4. '   ' → logprob: -4.051473140716553
    5. ' if' → logprob: -4.801473140716553
    6. 'if' → logprob: -5.301473140716553
    7. ' return' → logprob: -5.551473140716553
    8. '
' → logprob: -5.801473140716553
    9. '>' → logprob: -5.926473140716553
    10. ' //' → logprob: -6.176473140716553

Token 310: ' (' (ID: 350)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.0852106511592865
    2. ' (' → logprob: -3.2102105617523193
    3. 'div' → logprob: -3.7102105617523193
    4. 'h' → logprob: -4.710210800170898
    5. '(div' → logprob: -5.960210800170898
    6. '1' → logprob: -6.210210800170898
    7. '0' → logprob: -6.710210800170898
    8. ' div' → logprob: -7.460210800170898
    9. ' h' → logprob: -7.460210800170898
    10. ' ' → logprob: -7.835210800170898

Token 311: 'h' (ID: 71)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.18432360887527466
    2. ' (' → logprob: -2.18432354927063
    3. 'h' → logprob: -2.93432354927063
    4. ' h' → logprob: -6.684323787689209
    5. '0' → logprob: -7.434323787689209
    6. '1' → logprob: -8.55932331085205
    7. ')' → logprob: -8.68432331085205
    8. ' ' → logprob: -8.93432331085205
    9. '(' → logprob: -9.30932331085205
    10. 'div' → logprob: -9.93432331085205

Token 312: '*w' (ID: 147727)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.01787913776934147
    2. '*w' → logprob: -4.142879009246826
    3. '*' → logprob: -6.767879009246826
    4. ' ' → logprob: -7.892879009246826
    5. '   ' → logprob: -8.892879486083984
    6. '*h' → logprob: -10.142879486083984
    7. ')' → logprob: -10.767879486083984
    8. '  ' → logprob: -10.892879486083984
    9. ' ' → logprob: -10.892879486083984
    10. '*b' → logprob: -11.017879486083984

Token 313: ')//' (ID: 60375)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0697517916560173
    2. ' //' → logprob: -3.194751739501953
    3. ' )' → logprob: -4.819751739501953
    4. '//' → logprob: -4.819751739501953
    5. ')//' → logprob: -4.819751739501953
    6. '[' → logprob: -7.069751739501953
    7. ' ' → logprob: -7.569751739501953
    8. '   ' → logprob: -8.194751739501953
    9. '>' → logprob: -8.944751739501953
    10. ' ' → logprob: -9.194751739501953

Token 314: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.062393587082624435
    2. ' ' → logprob: -2.8123936653137207
    3. '1' → logprob: -7.812393665313721
    4. 'div' → logprob: -12.062393188476562
    5. '0' → logprob: -12.187393188476562
    6. ')' → logprob: -13.312393188476562
    7. '```' → logprob: -13.562393188476562
    8. ' (' → logprob: -13.687393188476562
    9. ' ' → logprob: -13.687393188476562
    10. ' /' → logprob: -13.937393188476562

Token 315: ' +' (ID: 659)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8948712944984436
    2. ' if' → logprob: -1.6448712348937988
    3. ' and' → logprob: -2.019871234893799
    4. ' +' → logprob: -2.394871234893799
    5. ',' → logprob: -3.144871234893799
    6. '+' → logprob: -3.644871234893799
    7. '   ' → logprob: -3.769871234893799
    8. 'if' → logprob: -4.394871234893799
    9. ' or' → logprob: -4.769871234893799
    10. ' *' → logprob: -5.019871234893799

Token 316: ' (' (ID: 350)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.058087971061468124
    2. ' (' → logprob: -3.0580880641937256
    3. 'h' → logprob: -5.0580878257751465
    4. 'div' → logprob: -6.5580878257751465
    5. ' h' → logprob: -7.4330878257751465
    6. '(div' → logprob: -7.8080878257751465
    7. '((' → logprob: -8.683088302612305
    8. '1' → logprob: -8.683088302612305
    9. '0' → logprob: -8.933088302612305
    10. '(' → logprob: -9.933088302612305

Token 317: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.20492734014987946
    2. '(h' → logprob: -1.7049273252487183
    3. ' (' → logprob: -6.079927444458008
    4. ' h' → logprob: -6.954927444458008
    5. '1' → logprob: -8.579927444458008
    6. ' ' → logprob: -10.454927444458008
    7. '	h' → logprob: -10.954927444458008
    8. '0' → logprob: -11.704927444458008
    9. '   ' → logprob: -12.454927444458008
    10. '(' → logprob: -12.579927444458008

Token 318: '*w' (ID: 147727)
  Prédit: '*w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*w' → logprob: -0.061063751578330994
    2. '*' → logprob: -3.311063766479492
    3. ' *' → logprob: -3.811063766479492
    4. '%' → logprob: -8.186063766479492
    5. ' ' → logprob: -9.311063766479492
    6. 'w' → logprob: -10.436063766479492
    7. '*x' → logprob: -10.561063766479492
    8. ' ' → logprob: -10.561063766479492
    9. '*h' → logprob: -10.561063766479492
    10. ')' → logprob: -10.686063766479492

Token 319: ')%' (ID: 57656)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.7166226506233215
    2. ')' → logprob: -1.4666225910186768
    3. ' %' → logprob: -2.2166225910186768
    4. '>=' → logprob: -2.5916225910186768
    5. '%' → logprob: -2.8416225910186768
    6. ' //' → logprob: -4.591622829437256
    7. ' ' → logprob: -4.716622829437256
    8. '>' → logprob: -5.216622829437256
    9. '//' → logprob: -6.216622829437256
    10. ' >' → logprob: -6.341622829437256

Token 320: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.25224751234054565
    2. ' ' → logprob: -1.5022475719451904
    3. '1' → logprob: -9.00224781036377
    4. ')' → logprob: -9.75224781036377
    5. '0' → logprob: -10.12724781036377
    6. ' )' → logprob: -10.75224781036377
    7. ',' → logprob: -11.00224781036377
    8. '_' → logprob: -11.37724781036377
    9. ' ' → logprob: -11.37724781036377
    10. '```' → logprob: -12.56474781036377

Token 321: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8252634406089783
    2. '
' → logprob: -1.075263500213623
    3. '       ' → logprob: -1.700263500213623
    4. ' if' → logprob: -3.950263500213623
    5. 'return' → logprob: -5.200263500213623
    6. '	return' → logprob: -5.950263500213623
    7. 'if' → logprob: -6.575263500213623
    8. ' return' → logprob: -6.825263500213623
    9. '<|end|>' → logprob: -6.950263500213623
    10. '	if' → logprob: -7.075263500213623

Token 322: ' cà' (ID: 77949)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.2156728506088257
    2. '1' → logprob: -1.3406728506088257
    3. '       ' → logprob: -2.2156729698181152
    4. ' return' → logprob: -2.5906729698181152
    5. '2' → logprob: -2.7156729698181152
    6. '0' → logprob: -2.9656729698181152
    7. '   ' → logprob: -3.0906729698181152
    8. ' ' → logprob: -3.0906729698181152
    9. ' if' → logprob: -4.465672969818115
    10. '    ' → logprob: -4.590672969818115

Token 323: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.27878743410110474
    2. 'à' → logprob: -2.40378737449646
    3. 'a' → logprob: -2.65378737449646
    4. '-à' → logprob: -2.77878737449646
    5. '=' → logprob: -5.028787612915039
    6. '   ' → logprob: -6.153787612915039
    7. ' à' → logprob: -6.403787612915039
    8. '           ' → logprob: -6.778787612915039
    9. ''à' → logprob: -7.403787612915039
    10. '       ' → logprob: -7.403787612915039

Token 324: ' ' (ID: 220)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.2643273174762726
    2. '(h' → logprob: -1.6393272876739502
    3. '1' → logprob: -3.63932728767395
    4. ' ' → logprob: -4.889327526092529
    5. 'div' → logprob: -6.764327526092529
    6. '0' → logprob: -7.139327526092529
    7. '2' → logprob: -7.264327526092529
    8. ' div' → logprob: -7.514327526092529
    9. ' h' → logprob: -7.639327526092529
    10. '   ' → logprob: -8.639327049255371

Token 325: '1' (ID: 16)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.1650448441505432
    2. ' (' → logprob: -2.0400447845458984
    3. '1' → logprob: -4.040044784545898
    4. '0' → logprob: -6.790044784545898
    5. 'h' → logprob: -7.040044784545898
    6. ' ' → logprob: -7.290044784545898
    7. 'div' → logprob: -7.415044784545898
    8. 'max' → logprob: -8.040044784545898
    9. ' h' → logprob: -8.290044784545898
    10. '((' → logprob: -8.540044784545898

Token 326: ' si' (ID: 1784)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3405150771141052
    2. '   ' → logprob: -1.71551513671875
    3. 'return' → logprob: -2.59051513671875
    4. ' if' → logprob: -4.09051513671875
    5. 'if' → logprob: -5.21551513671875
    6. ' return' → logprob: -5.71551513671875
    7. ':return' → logprob: -6.34051513671875
    8. '           ' → logprob: -6.59051513671875
    9. '	return' → logprob: -6.59051513671875
    10. '    ' → logprob: -7.34051513671875

Token 327: ' surface' (ID: 9753)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.36028432846069336
    2. 'h' → logprob: -1.9852843284606934
    3. ' (' → logprob: -1.9852843284606934
    4. '(h' → logprob: -3.6102843284606934
    5. ' ' → logprob: -7.360284328460693
    6. ' ' → logprob: -9.735284805297852
    7. '(' → logprob: -10.110284805297852
    8. '   ' → logprob: -10.610284805297852
    9. '	h' → logprob: -11.360284805297852
    10. '  ' → logprob: -11.485284805297852

Token 328: '=' (ID: 28)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.484830766916275
    2. ' >=' → logprob: -0.9848307371139526
    3. '   ' → logprob: -4.734830856323242
    4. ' ' → logprob: -7.234830856323242
    5. '       ' → logprob: -8.484830856323242
    6. '    ' → logprob: -8.734830856323242
    7. ')>=' → logprob: -8.734830856323242
    8. '>' → logprob: -8.859830856323242
    9. '  ' → logprob: -9.609830856323242
    10. '≥' → logprob: -9.609830856323242

Token 329: '1' (ID: 16)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5773810148239136
    2. '2' → logprob: -0.8273810148239136
    3. '1' → logprob: -7.327381134033203
    4. '0' → logprob: -7.577381134033203
    5. '    ' → logprob: -9.202381134033203
    6. '   ' → logprob: -9.702381134033203
    7. ' >=' → logprob: -10.202381134033203
    8. '  ' → logprob: -10.827381134033203
    9. ' ' → logprob: -11.077381134033203
    10. '>=' → logprob: -11.202381134033203

Token 330: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014140591956675053
    2. 'return' → logprob: -4.764140605926514
    3. ' if' → logprob: -6.389140605926514
    4. ' return' → logprob: -6.389140605926514
    5. '   ' → logprob: -6.889140605926514
    6. 'if' → logprob: -7.139140605926514
    7. '           ' → logprob: -9.014140129089355
    8. ',' → logprob: -10.389140129089355
    9. '        
' → logprob: -10.389140129089355
    10. '
' → logprob: -10.389140129089355

Token 331: ' sinon' (ID: 52915)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.9105433821678162
    2. ' return' → logprob: -1.660543441772461
    3. '       ' → logprob: -1.785543441772461
    4. '0' → logprob: -2.035543441772461
    5. '2' → logprob: -3.910543441772461
    6. '           ' → logprob: -4.160543441772461
    7. '(h' → logprob: -4.285543441772461
    8. ' h' → logprob: -4.285543441772461
    9. ' (' → logprob: -4.410543441772461
    10. ' ' → logprob: -4.660543441772461

Token 332: ' quantité' (ID: 89219)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.22612370550632477
    2. '(h' → logprob: -1.6011236906051636
    3. ' ' → logprob: -8.101123809814453
    4. '0' → logprob: -8.101123809814453
    5. ' h' → logprob: -10.101123809814453
    6. 'h' → logprob: -11.226123809814453
    7. '   ' → logprob: -11.351123809814453
    8. '2' → logprob: -11.476123809814453
    9. ' return' → logprob: -11.851123809814453
    10. '1' → logprob: -12.101123809814453

Token 333: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8985040187835693
    2. 'return' → logprob: -1.1485040187835693
    3. ' return' → logprob: -1.8985040187835693
    4. '   ' → logprob: -2.6485040187835693
    5. ' if' → logprob: -3.5235040187835693
    6. 'if' → logprob: -4.523504257202148
    7. ')' → logprob: -5.523504257202148
    8. ':return' → logprob: -6.523504257202148
    9. '           ' → logprob: -7.023504257202148
    10. '	return' → logprob: -7.023504257202148

Token 334: ' dom' (ID: 3878)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.6697059273719788
    2. ' (' → logprob: -1.669705867767334
    3. 'dom' → logprob: -1.919705867767334
    4. ' ' → logprob: -2.794705867767334
    5. '2' → logprob: -3.044705867767334
    6. ' h' → logprob: -4.294705867767334
    7. ' dom' → logprob: -4.419705867767334
    8. 'h' → logprob: -5.544705867767334
    9. '1' → logprob: -5.544705867767334
    10. '0' → logprob: -6.294705867767334

Token 335: 'inos' (ID: 8200)
  Prédit: 'inos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inos' → logprob: -0.04548097029328346
    2. 'ino' → logprob: -3.670480966567993
    3. 'ines' → logprob: -4.670481204986572
    4. 'in' → logprob: -5.920481204986572
    5. '```' → logprob: -6.920481204986572
    6. '   ' → logprob: -7.045481204986572
    7. 'es' → logprob: -7.045481204986572
    8. 'os' → logprob: -8.107980728149414
    9. 'min' → logprob: -8.170480728149414
    10. 'ино' → logprob: -8.357980728149414

Token 336: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6248627305030823
    2. 'return' → logprob: -0.9998627305030823
    3. ' return' → logprob: -3.2498626708984375
    4. '   ' → logprob: -3.3748626708984375
    5. ' if' → logprob: -4.2498626708984375
    6. 'if' → logprob: -4.8748626708984375
    7. ':' → logprob: -7.2498626708984375
    8. '           ' → logprob: -8.249862670898438
    9. ':return' → logprob: -8.999862670898438
    10. '    ' → logprob: -9.249862670898438

Token 337: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6379910111427307
    2. 'return' → logprob: -1.012990951538086
    3. ' return' → logprob: -2.262990951538086
    4. '   ' → logprob: -6.387990951538086
    5. 'if' → logprob: -6.512990951538086
    6. ' if' → logprob: -6.762990951538086
    7. '	return' → logprob: -10.262990951538086
    8. '```' → logprob: -10.887990951538086
    9. ' ' → logprob: -11.012990951538086
    10. '           ' → logprob: -11.137990951538086

Token 338: ' surface' (ID: 9753)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.03594352677464485
    2. ' return' → logprob: -4.035943508148193
    3. 'if' → logprob: -4.660943508148193
    4. '       ' → logprob: -5.035943508148193
    5. '   ' → logprob: -6.785943508148193
    6. ' if' → logprob: -7.535943508148193
    7. '	return' → logprob: -12.660943984985352
    8. ' ' → logprob: -13.160943984985352
    9. 'ret' → logprob: -13.160943984985352
    10. '```' → logprob: -13.285943984985352

Token 339: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8857055902481079
    2. ' =' → logprob: -1.260705590248108
    3. '   ' → logprob: -2.2607054710388184
    4. ')' → logprob: -2.5107054710388184
    5. '<|end|>' → logprob: -3.5107054710388184
    6. ' ' → logprob: -4.135705471038818
    7. ' *' → logprob: -4.760705471038818
    8. '[' → logprob: -4.885705471038818
    9. '<|end|>' → logprob: -4.885705471038818
    10. ' //' → logprob: -5.010705471038818

Token 340: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.474094957113266
    2. ' h' → logprob: -0.9740949869155884
    3. '   ' → logprob: -10.974095344543457
    4. ' ' → logprob: -14.974095344543457
    5. '	h' → logprob: -15.224095344543457
    6. ' ' → logprob: -15.974095344543457
    7. '    ' → logprob: -16.59909439086914
    8. '  ' → logprob: -16.97409439086914
    9. '(h' → logprob: -17.22409439086914
    10. ' (' → logprob: -18.47409439086914

Token 341: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.055535998195409775
    2. '*' → logprob: -3.3055360317230225
    3. '*w' → logprob: -4.055535793304443
    4. ' ' → logprob: -12.555536270141602
    5. '<|end|>' → logprob: -12.930536270141602
    6. '*h' → logprob: -13.180536270141602
    7. '   ' → logprob: -13.305536270141602
    8. '*object' → logprob: -13.555536270141602
    9. 'w' → logprob: -13.680536270141602
    10. '*u' → logprob: -14.680536270141602

Token 342: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0019293478690087795
    2. ' w' → logprob: -6.25192928314209
    3. ' ' → logprob: -15.50192928314209
    4. '   ' → logprob: -15.62692928314209
    5. '	w' → logprob: -16.376930236816406
    6. '*w' → logprob: -16.501930236816406
    7. '    ' → logprob: -17.626930236816406
    8. '```' → logprob: -18.126930236816406
    9. ''w' → logprob: -18.251930236816406
    10. '_w' → logprob: -18.314430236816406

Token 343: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7245688438415527
    2. '       ' → logprob: -0.9745688438415527
    3. '   ' → logprob: -2.0995688438415527
    4. ' if' → logprob: -4.349568843841553
    5. 'if' → logprob: -6.849568843841553
    6. '    
' → logprob: -7.849568843841553
    7. '        
' → logprob: -7.974568843841553
    8. '
' → logprob: -8.849569320678711
    9. '	if' → logprob: -8.974569320678711
    10. 'return' → logprob: -8.974569320678711

Token 344: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30882030725479126
    2. 'if' → logprob: -1.5588202476501465
    3. ' if' → logprob: -3.4338202476501465
    4. 'return' → logprob: -4.1838202476501465
    5. '       ' → logprob: -4.9338202476501465
    6. ' return' → logprob: -7.4338202476501465
    7. '    ' → logprob: -12.433820724487305
    8. '  ' → logprob: -13.558820724487305
    9. ' ' → logprob: -13.808820724487305
    10. '	if' → logprob: -14.308820724487305

Token 345: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3133484125137329
    2. 'if' → logprob: -1.313348412513733
    3. ' return' → logprob: -10.063348770141602
    4. '   ' → logprob: -11.063348770141602
    5. ' if' → logprob: -11.188348770141602
    6. '       ' → logprob: -11.188348770141602
    7. '	return' → logprob: -15.688348770141602
    8. '```' → logprob: -15.813348770141602
    9. 'ret' → logprob: -16.0633487701416
    10. '
' → logprob: -16.6883487701416

Token 346: ' sum' (ID: 4215)
  Prédit: ' surface'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' surface' → logprob: -0.6935752034187317
    2. 'surface' → logprob: -0.6935752034187317
    3. '(surface' → logprob: -7.943575382232666
    4. ' (' → logprob: -10.568574905395508
    5. 'surf' → logprob: -11.568574905395508
    6. '   ' → logprob: -11.693574905395508
    7. 'sur' → logprob: -11.943574905395508
    8. ' ' → logprob: -11.943574905395508
    9. '0' → logprob: -12.318574905395508
    10. ' max' → logprob: -12.943574905395508

Token 347: '(div' (ID: 73108)
  Prédit: '(div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(div' → logprob: -0.20148633420467377
    2. 'div' → logprob: -1.701486349105835
    3. ' div' → logprob: -9.576486587524414
    4. '	div' → logprob: -13.076486587524414
    5. '(' → logprob: -13.701486587524414
    6. '_div' → logprob: -15.701486587524414
    7. ' (' → logprob: -16.076486587524414
    8. '.div' → logprob: -16.576486587524414
    9. '<div' → logprob: -16.826486587524414
    10. 'DIV' → logprob: -17.076486587524414

Token 348: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -9.460291767027229e-05
    2. 'div' → logprob: -9.375094413757324
    3. 'mods' → logprob: -12.875094413757324
    4. 'omod' → logprob: -13.000094413757324
    5. '_mod' → logprob: -13.500094413757324
    6. 'surface' → logprob: -13.750094413757324
    7. ' mod' → logprob: -14.250094413757324
    8. '(mod' → logprob: -14.625094413757324
    9. '	mod' → logprob: -15.125094413757324
    10. '(div' → logprob: -15.875094413757324

Token 349: '(surface' (ID: 186049)
  Prédit: '(surface'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(surface' → logprob: -0.0008193961111828685
    2. 'surface' → logprob: -7.125819206237793
    3. ' surface' → logprob: -11.625819206237793
    4. '(' → logprob: -12.375819206237793
    5. ')' → logprob: -14.375819206237793
    6. '(s' → logprob: -14.750819206237793
    7. '(space' → logprob: -15.000819206237793
    8. '_surface' → logprob: -15.375819206237793
    9. ' (' → logprob: -15.750819206237793
    10. '.surface' → logprob: -16.87582015991211

Token 350: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01177428662776947
    2. ' ,' → logprob: -4.886774063110352
    3. '(' → logprob: -5.511774063110352
    4. '2' → logprob: -10.136774063110352
    5. ' (' → logprob: -10.886774063110352
    6. ')' → logprob: -11.136774063110352
    7. ' ' → logprob: -11.636774063110352
    8. '   ' → logprob: -11.636774063110352
    9. '1' → logprob: -12.261774063110352
    10. '),' → logprob: -12.261774063110352

Token 351: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00029744720086455345
    2. ' ' → logprob: -8.125297546386719
    3. '   ' → logprob: -14.125297546386719
    4. '1' → logprob: -14.250297546386719
    5. ')' → logprob: -16.87529754638672
    6. '  ' → logprob: -17.68779754638672
    7. '```' → logprob: -17.68779754638672
    8. '    ' → logprob: -17.75029754638672
    9. '3' → logprob: -18.68779754638672
    10. '0' → logprob: -18.81279754638672

Token 352: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.849109119386412e-06
    2. ' ' → logprob: -11.625009536743164
    3. '   ' → logprob: -14.750009536743164
    4. '1' → logprob: -15.000009536743164
    5. '```' → logprob: -16.250009536743164
    6. ')' → logprob: -17.000009536743164
    7. '
' → logprob: -17.937509536743164
    8. '0' → logprob: -18.312509536743164
    9. '  ' → logprob: -18.375009536743164
    10. '    ' → logprob: -18.625009536743164

Token 353: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0002880337997339666
    2. ')' → logprob: -8.375288009643555
    3. '))
' → logprob: -10.500288009643555
    4. '))[' → logprob: -11.500288009643555
    5. ')[' → logprob: -11.625288009643555
    6. ')))' → logprob: -12.625288009643555
    7. '[:-' → logprob: -13.000288009643555
    8. '   ' → logprob: -13.625288009643555
    9. '()))' → logprob: -13.875288009643555
    10. '))-' → logprob: -14.125288009643555

Token 354: 'def' (ID: 1314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5641327500343323
    2. '(' → logprob: -1.6891326904296875
    3. '0' → logprob: -2.4391326904296875
    4. ' ' → logprob: -2.8141326904296875
    5. '-' → logprob: -2.9391326904296875
    6. ')' → logprob: -3.9391326904296875
    7. '(surface' → logprob: -5.6891326904296875
    8. '<|end|>' → logprob: -5.6891326904296875
    9. '   ' → logprob: -5.8141326904296875
    10. ' (' → logprob: -5.9391326904296875

Token 355: ' main' (ID: 2758)
  Prédit: ' compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -1.027762770652771
    2. ' main' → logprob: -1.277762770652771
    3. ' max' → logprob: -1.902762770652771
    4. ' place' → logprob: -2.6527628898620605
    5. ' test' → logprob: -3.6527628898620605
    6. ' is' → logprob: -3.6527628898620605
    7. 'max' → logprob: -4.0277628898620605
    8. ' calculate' → logprob: -4.7777628898620605
    9. ' solve' → logprob: -4.9027628898620605
    10. '_max' → logprob: -4.9027628898620605

Token 356: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.011283718049526215
    2. '_' → logprob: -4.886283874511719
    3. '()' → logprob: -6.011283874511719
    4. '(' → logprob: -7.136283874511719
    5. '():
' → logprob: -8.761283874511719
    6. '()>' → logprob: -9.261283874511719
    7. ' ():' → logprob: -9.761283874511719
    8. '_:' → logprob: -10.511283874511719
    9. ':' → logprob: -11.261283874511719
    10. '().__' → logprob: -12.011283874511719

Token 357: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009611115790903568
    2. '(' → logprob: -6.134611129760742
    3. '<|end|>' → logprob: -6.134611129760742
    4. '    ' → logprob: -6.634611129760742
    5. ')' → logprob: -6.634611129760742
    6. ':' → logprob: -7.009611129760742
    7. '()' → logprob: -8.259611129760742
    8. '#' → logprob: -8.884611129760742
    9. '[' → logprob: -9.009611129760742
    10. ' :' → logprob: -9.259611129760742

Token 358: ' """
' (ID: 7037)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.04602070525288582
    2. '   ' → logprob: -3.421020746231079
    3. ' h' → logprob: -4.7960205078125
    4. 'n' → logprob: -5.9210205078125
    5. 'import' → logprob: -7.2960205078125
    6. ' n' → logprob: -8.9210205078125
    7. 'print' → logprob: -9.4210205078125
    8. 'height' → logprob: -9.4210205078125
    9. 'surface' → logprob: -9.9210205078125
    10. ' import' → logprob: -10.1710205078125

Token 359: '   ' (ID: 271)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.4829646944999695
    2. '   ' → logprob: -0.9829646944999695
    3. 'n' → logprob: -5.482964515686035
    4. 'print' → logprob: -6.607964515686035
    5. '#' → logprob: -6.732964515686035
    6. 'if' → logprob: -7.232964515686035
    7. ' h' → logprob: -7.607964515686035
    8. 'import' → logprob: -8.607964515686035
    9. 'height' → logprob: -9.732964515686035
    10. '"""' → logprob: -9.732964515686035

Token 360: ' Fonction' (ID: 189149)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6701132655143738
    2. 'print' → logprob: -1.7951133251190186
    3. '#' → logprob: -2.1701133251190186
    4. 'h' → logprob: -2.5451133251190186
    5. 'max' → logprob: -3.4201133251190186
    6. ' print' → logprob: -4.1701130867004395
    7. ' h' → logprob: -4.2951130867004395
    8. 'result' → logprob: -4.6701130867004395
    9. 'pass' → logprob: -4.7951130867004395
    10. 'import' → logprob: -5.1701130867004395

Token 361: ' principale' (ID: 68926)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.231329321861267
    2. ' principale' → logprob: -1.481329321861267
    3. '   ' → logprob: -1.606329321861267
    4. ' de' → logprob: -1.856329321861267
    5. ' test' → logprob: -2.7313294410705566
    6. ' d' → logprob: -4.106329441070557
    7. ' main' → logprob: -4.481329441070557
    8. ' principal' → logprob: -4.481329441070557
    9. ' to' → logprob: -5.106329441070557
    10. ' def' → logprob: -6.106329441070557

Token 362: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32128143310546875
    2. '():' → logprob: -1.9462814331054688
    3. 'def' → logprob: -2.6962814331054688
    4. '():
' → logprob: -3.5712814331054688
    5. ':' → logprob: -3.8212814331054688
    6. '()' → logprob: -5.071281433105469
    7. '```' → logprob: -6.196281433105469
    8. '
' → logprob: -7.071281433105469
    9. '<|end|>' → logprob: -7.071281433105469
    10. '):' → logprob: -7.196281433105469

Token 363: ' lit' (ID: 11980)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013319524936378002
    2. ' for' → logprob: -6.263319492340088
    3. ' max' → logprob: -6.263319492340088
    4. ' surface' → logprob: -6.388319492340088
    5. ' h' → logprob: -6.513319492340088
    6. ' grid' → logprob: -6.763319492340088
    7. '    ' → logprob: -7.263319492340088
    8. ' n' → logprob: -7.638319492340088
    9. '```' → logprob: -7.888319492340088
    10. 'def' → logprob: -8.013319969177246

Token 364: ' l' (ID: 305)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.36894479393959045
    2. '   ' → logprob: -1.493944764137268
    3. ' les' → logprob: -2.8689448833465576
    4. ' la' → logprob: -4.1189446449279785
    5. ' des' → logprob: -6.6189446449279785
    6. ' l' → logprob: -6.6189446449279785
    7. '():' → logprob: -6.7439446449279785
    8. ':' → logprob: -6.8689446449279785
    9. ' ()' → logprob: -6.9939446449279785
    10. ' ' → logprob: -7.1189446449279785

Token 365: ''entrée' (ID: 115820)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4962930679321289
    2. '   ' → logprob: -1.246293067932129
    3. ''entrée' → logprob: -2.996293067932129
    4. 'e' → logprob: -3.496293067932129
    5. 'es' → logprob: -4.371293067932129
    6. 'input' → logprob: -5.871293067932129
    7. ''' → logprob: -5.996293067932129
    8. ''utilisateur' → logprob: -6.996293067932129
    9. ''import' → logprob: -7.121293067932129
    10. ''ex' → logprob: -7.371293067932129

Token 366: ' utilisateur' (ID: 115595)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04423122480511665
    2. ',' → logprob: -3.5442311763763428
    3. 'def' → logprob: -5.044231414794922
    4. 'import' → logprob: -5.419231414794922
    5. '()' → logprob: -6.044231414794922
    6. ' ' → logprob: -8.669231414794922
    7. 's' → logprob: -9.294231414794922
    8. 'n' → logprob: -9.419231414794922
    9. '```' → logprob: -9.419231414794922
    10. '(),' → logprob: -9.669231414794922

Token 367: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4415357708930969
    2. ',' → logprob: -1.0665357112884521
    3. ' et' → logprob: -4.691535949707031
    4. ' ,' → logprob: -6.066535949707031
    5. '()' → logprob: -7.316535949707031
    6. '(),' → logprob: -8.566535949707031
    7. 'def' → logprob: -9.566535949707031
    8. '.' → logprob: -9.941535949707031
    9. ' and' → logprob: -10.066535949707031
    10. ' ' → logprob: -10.191535949707031

Token 368: ' calc' (ID: 25691)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5902649760246277
    2. ' h' → logprob: -1.4652650356292725
    3. 'h' → logprob: -1.7152650356292725
    4. 'calcul' → logprob: -4.715264797210693
    5. ' appelle' → logprob: -4.715264797210693
    6. 'cal' → logprob: -5.215264797210693
    7. 'app' → logprob: -6.340264797210693
    8. '    
' → logprob: -6.465264797210693
    9. 'n' → logprob: -6.965264797210693
    10. ' calculates' → logprob: -7.090264797210693

Token 369: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.00033546582562848926
    2. 'cule' → logprob: -9.125335693359375
    3. 'ul' → logprob: -9.125335693359375
    4. '   ' → logprob: -9.625335693359375
    5. 'ulé' → logprob: -11.125335693359375
    6. 'uler' → logprob: -11.500335693359375
    7. '```' → logprob: -12.250335693359375
    8. 'u' → logprob: -12.500335693359375
    9. 'ulaire' → logprob: -12.500335693359375
    10. '#' → logprob: -12.625335693359375

Token 370: ' et' (ID: 859)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.2349088340997696
    2. '   ' → logprob: -2.6099088191986084
    3. 'le' → logprob: -2.6099088191986084
    4. ' et' → logprob: -3.6099088191986084
    5. ' le' → logprob: -4.1099090576171875
    6. 'max' → logprob: -4.7349090576171875
    7. 'and' → logprob: -4.9849090576171875
    8. ' and' → logprob: -6.8599090576171875
    9. 'la' → logprob: -7.6099090576171875
    10. 'nombre' → logprob: -8.734909057617188

Token 371: ' affiche' (ID: 127479)
  Prédit: ' affiche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' affiche' → logprob: -0.15283875167369843
    2. 'aff' → logprob: -2.402838706970215
    3. '   ' → logprob: -3.902838706970215
    4. ' imprime' → logprob: -3.902838706970215
    5. 'print' → logprob: -4.777838706970215
    6. ' print' → logprob: -6.152838706970215
    7. '    ' → logprob: -9.777838706970215
    8. ''aff' → logprob: -9.902838706970215
    9. ' affich' → logprob: -9.902838706970215
    10. '_aff' → logprob: -10.152838706970215

Token 372: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.13651154935359955
    2. ' le' → logprob: -2.1365115642547607
    3. '   ' → logprob: -5.386511325836182
    4. '_le' → logprob: -6.511511325836182
    5. 'la' → logprob: -6.886511325836182
    6. 'max' → logprob: -7.136511325836182
    7. '(' → logprob: -7.261511325836182
    8. '()' → logprob: -7.886511325836182
    9. '(le' → logprob: -9.01151180267334
    10. ' la' → logprob: -9.13651180267334

Token 373: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.28735992312431335
    2. ' nombre' → logprob: -1.5373599529266357
    3. 'max' → logprob: -3.9123599529266357
    4. 'maximum' → logprob: -5.412359714508057
    5. ' résultat' → logprob: -5.662359714508057
    6. ' maximum' → logprob: -6.412359714508057
    7. '_nombre' → logprob: -6.537359714508057
    8. '_max' → logprob: -6.787359714508057
    9. 'rés' → logprob: -6.912359714508057
    10. 'result' → logprob: -7.287359714508057

Token 374: ' maximal' (ID: 65414)
  Prédit: ' maximal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximal' → logprob: -0.004677542019635439
    2. 'max' → logprob: -6.254677772521973
    3. '   ' → logprob: -6.379677772521973
    4. '_max' → logprob: -8.004677772521973
    5. '_' → logprob: -8.504677772521973
    6. ' maksimal' → logprob: -8.754677772521973
    7. ' maximale' → logprob: -9.004677772521973
    8. ' maximum' → logprob: -9.254677772521973
    9. ' de' → logprob: -10.379677772521973
    10. ' max' → logprob: -10.504677772521973

Token 375: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.15577904880046844
    2. '   ' → logprob: -2.5307791233062744
    3. 'de' → logprob: -2.7807791233062744
    4. 'def' → logprob: -6.655778884887695
    5. ' ' → logprob: -7.030778884887695
    6. '    ' → logprob: -8.030778884887695
    7. '  ' → logprob: -9.655778884887695
    8. 'd' → logprob: -10.655778884887695
    9. ' ' → logprob: -11.280778884887695
    10. '_de' → logprob: -11.530778884887695

Token 376: ' dom' (ID: 3878)
  Prédit: 'dom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dom' → logprob: -0.03805721178650856
    2. ' dom' → logprob: -3.288057327270508
    3. ' domino' → logprob: -11.413057327270508
    4. '_dom' → logprob: -13.538057327270508
    5. ' дом' → logprob: -13.663057327270508
    6. 'd' → logprob: -14.163057327270508
    7. '(dom' → logprob: -14.663057327270508
    8. ' ' → logprob: -15.163057327270508
    9. ' domaines' → logprob: -15.663057327270508
    10. 'дом' → logprob: -16.038057327270508

Token 377: 'inos' (ID: 8200)
  Prédit: 'inos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inos' → logprob: -0.000660015270113945
    2. 'ino' → logprob: -9.000659942626953
    3. 'in' → logprob: -9.750659942626953
    4. '`' → logprob: -9.875659942626953
    5. '   ' → logprob: -9.875659942626953
    6. '</' → logprob: -10.625659942626953
    7. 'ines' → logprob: -10.750659942626953
    8. '``' → logprob: -10.875659942626953
    9. '```' → logprob: -11.000659942626953
    10. '#' → logprob: -11.188159942626953

Token 378: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03495724871754646
    2. ' pouvant' → logprob: -4.034957408905029
    3. 'plac' → logprob: -4.784957408905029
    4. ' plac' → logprob: -6.284957408905029
    5. ' qui' → logprob: -6.534957408905029
    6. ' que' → logprob: -6.659957408905029
    7. ' ' → logprob: -7.409957408905029
    8. 'qui' → logprob: -7.534957408905029
    9. '```' → logprob: -7.784957408905029
    10. ' à' → logprob: -7.909957408905029

Token 379: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.217951886355877e-05
    2. '    
' → logprob: -10.000061988830566
    3. '```' → logprob: -11.750061988830566
    4. '       ' → logprob: -13.375061988830566
    5. ')' → logprob: -13.500061988830566
    6. 'def' → logprob: -13.625061988830566
    7. '
' → logprob: -14.000061988830566
    8. '    ' → logprob: -14.000061988830566
    9. ' ' → logprob: -14.250061988830566
    10. '  
' → logprob: -15.000061988830566

Token 380: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.666993507067673e-05
    2. 'import' → logprob: -11.000036239624023
    3. 'input' → logprob: -12.125036239624023
    4. '```' → logprob: -12.500036239624023
    5. '    
' → logprob: -12.625036239624023
    6. 'n' → logprob: -12.875036239624023
    7. '       ' → logprob: -13.875036239624023
    8. ' lines' → logprob: -14.000036239624023
    9. '    ' → logprob: -14.500036239624023
    10. 'def' → logprob: -14.500036239624023

Token 381: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00010998018842656165
    2. ' h' → logprob: -10.625109672546387
    3. 'input' → logprob: -10.625109672546387
    4. 'import' → logprob: -11.250109672546387
    5. 'n' → logprob: -11.250109672546387
    6. ' input' → logprob: -11.625109672546387
    7. 'h' → logprob: -12.250109672546387
    8. 'try' → logprob: -12.250109672546387
    9. '```' → logprob: -12.375109672546387
    10. ' n' → logprob: -12.750109672546387

Token 382: ' #' (ID: 1069)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.004393205977976322
    2. ' h' → logprob: -5.754393100738525
    3. '   ' → logprob: -6.754393100738525
    4. 'try' → logprob: -10.504393577575684
    5. 'height' → logprob: -11.629393577575684
    6. 'import' → logprob: -11.754393577575684
    7. 'n' → logprob: -12.754393577575684
    8. '```' → logprob: -14.629393577575684
    9. ' try' → logprob: -14.879393577575684
    10. '	h' → logprob: -15.129393577575684

Token 383: ' Lecture' (ID: 106534)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.008929139003157616
    2. ' h' → logprob: -5.383929252624512
    3. 'import' → logprob: -5.633929252624512
    4. 'try' → logprob: -7.758929252624512
    5. '   ' → logprob: -8.883929252624512
    6. 'height' → logprob: -9.633929252624512
    7. ' import' → logprob: -10.008929252624512
    8. 'n' → logprob: -11.258929252624512
    9. ' try' → logprob: -11.258929252624512
    10. 'hw' → logprob: -12.133929252624512

Token 384: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020602114964276552
    2. 'n' → logprob: -7.127060413360596
    3. 'size' → logprob: -7.377060413360596
    4. ' h' → logprob: -9.252059936523438
    5. 'h' → logprob: -9.877059936523438
    6. 'nombre' → logprob: -9.877059936523438
    7. '(h' → logprob: -10.127059936523438
    8. ' size' → logprob: -10.502059936523438
    9. ' line' → logprob: -10.502059936523438
    10. ' lines' → logprob: -10.752059936523438

Token 385: ' dimensions' (ID: 23995)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.4810127913951874
    2. ' h' → logprob: -1.1060128211975098
    3. 'dimensions' → logprob: -3.7310128211975098
    4. ' dimensions' → logprob: -3.9810128211975098
    5. 'l' → logprob: -5.85601282119751
    6. ' ' → logprob: -6.85601282119751
    7. ' lignes' → logprob: -7.23101282119751
    8. 'n' → logprob: -7.48101282119751
    9. 'import' → logprob: -7.60601282119751
    10. ' ent' → logprob: -7.85601282119751

Token 386: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5781950950622559
    2. ' h' → logprob: -1.0781950950622559
    3. 'h' → logprob: -2.328195095062256
    4. ',' → logprob: -7.203195095062256
    5. ' line' → logprob: -8.578195571899414
    6. 'n' → logprob: -9.328195571899414
    7. '    
' → logprob: -9.578195571899414
    8. 'import' → logprob: -9.578195571899414
    9. '	h' → logprob: -10.203195571899414
    10. ' ligne' → logprob: -10.328195571899414

Token 387: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.38931339979171753
    2. 'la' → logprob: -1.1393134593963623
    3. 'l' → logprob: -6.139313220977783
    4. 'h' → logprob: -9.139313697814941
    5. ' l' → logprob: -9.514313697814941
    6. ' grille' → logprob: -10.389313697814941
    7. ' ' → logprob: -10.764313697814941
    8. '   ' → logprob: -11.264313697814941
    9. 'gr' → logprob: -11.764313697814941
    10. 'input' → logprob: -11.889313697814941

Token 388: ' grille' (ID: 99153)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.01107093133032322
    2. ' grille' → logprob: -4.511070728302002
    3. 'grid' → logprob: -10.76107120513916
    4. ' ' → logprob: -14.38607120513916
    5. ' gr' → logprob: -14.63607120513916
    6. 'ligne' → logprob: -15.26107120513916
    7. '   ' → logprob: -15.38607120513916
    8. 'g' → logprob: -15.88607120513916
    9. 'print' → logprob: -17.261070251464844
    10. 'entrée' → logprob: -17.261070251464844

Token 389: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08456871658563614
    2. ' h' → logprob: -2.584568738937378
    3. 'h' → logprob: -5.459568500518799
    4. 'n' → logprob: -7.584568500518799
    5. '    
' → logprob: -7.834568500518799
    6. ' line' → logprob: -8.459568977355957
    7. ' lines' → logprob: -9.959568977355957
    8. ',' → logprob: -10.084568977355957
    9. 'import' → logprob: -10.334568977355957
    10. '
' → logprob: -10.584568977355957

Token 390: ' deux' (ID: 10301)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.5772113800048828
    2. 'h' → logprob: -0.8272113800048828
    3. '   ' → logprob: -6.702211380004883
    4. '	h' → logprob: -11.577211380004883
    5. ' line' → logprob: -11.577211380004883
    6. 'n' → logprob: -11.827211380004883
    7. ' n' → logprob: -11.827211380004883
    8. ' lines' → logprob: -12.827211380004883
    9. 'line' → logprob: -13.702211380004883
    10. ' try' → logprob: -13.827211380004883

Token 391: ' ent' (ID: 1121)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.7043518424034119
    2. ' ent' → logprob: -0.9543518424034119
    3. ' integers' → logprob: -2.4543519020080566
    4. ' nombres' → logprob: -4.079351902008057
    5. 'inte' → logprob: -5.329351902008057
    6. 'val' → logprob: -5.829351902008057
    7. ' valeurs' → logprob: -6.079351902008057
    8. 'n' → logprob: -6.704351902008057
    9. 'nombre' → logprob: -6.829351902008057
    10. ' =' → logprob: -6.829351902008057

Token 392: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0007363698096014559
    2. 'rees' → logprob: -8.250736236572266
    3. 'r' → logprob: -8.875736236572266
    4. 'ier' → logprob: -8.875736236572266
    5. 'ières' → logprob: -9.000736236572266
    6. 'ers' → logprob: -9.875736236572266
    7. 'ires' → logprob: -12.250736236572266
    8. 'ieres' → logprob: -12.750736236572266
    9. 'i' → logprob: -12.750736236572266
    10. '   ' → logprob: -13.000736236572266

Token 393: ' sépar' (ID: 97160)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.5930526256561279
    2. ',' → logprob: -0.9680526256561279
    3. ' =' → logprob: -3.343052625656128
    4. 'h' → logprob: -3.968052625656128
    5. '   ' → logprob: -5.218052864074707
    6. 's' → logprob: -6.093052864074707
    7. 'n' → logprob: -6.718052864074707
    8. ' ,' → logprob: -6.968052864074707
    9. ' n' → logprob: -7.218052864074707
    10. ',h' → logprob: -7.218052864074707

Token 394: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.0018490320071578026
    2. 'é' → logprob: -6.376849174499512
    3. 'es' → logprob: -9.501849174499512
    4. 'er' → logprob: -10.126849174499512
    5. 'ées' → logprob: -11.626849174499512
    6. 'e' → logprob: -12.126849174499512
    7. 'par' → logprob: -12.626849174499512
    8. 'ès' → logprob: -12.751849174499512
    9. 'É' → logprob: -13.251849174499512
    10. ' par' → logprob: -13.376849174499512

Token 395: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.6955433487892151
    2. 'par' → logprob: -0.6955433487892151
    3. 'by' → logprob: -7.19554328918457
    4. '()' → logprob: -7.32054328918457
    5. 'e' → logprob: -8.57054328918457
    6. 'def' → logprob: -8.82054328918457
    7. '_par' → logprob: -8.82054328918457
    8. ' by' → logprob: -9.19554328918457
    9. ')' → logprob: -9.82054328918457
    10. '   ' → logprob: -9.94554328918457

Token 396: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.3233296573162079
    2. ' un' → logprob: -1.3233296871185303
    3. ''un' → logprob: -5.448329448699951
    4. 'une' → logprob: -6.448329448699951
    5. ' espace' → logprob: -6.823329448699951
    6. 'space' → logprob: -6.948329448699951
    7. ' une' → logprob: -7.198329448699951
    8. ''espace' → logprob: -7.948329448699951
    9. 'es' → logprob: -8.57332992553711
    10. 'des' → logprob: -8.69832992553711

Token 397: ' espace' (ID: 66004)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.6798408627510071
    2. ' espace' → logprob: -0.8048408627510071
    3. 'esp' → logprob: -3.4298408031463623
    4. ''espace' → logprob: -5.054841041564941
    5. 'space' → logprob: -5.304841041564941
    6. 'e' → logprob: -7.304841041564941
    7. ' ' → logprob: -7.679841041564941
    8. '’espace' → logprob: -8.054841041564941
    9. ' space' → logprob: -8.429841041564941
    10. 'input' → logprob: -8.429841041564941

Token 398: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24318504333496094
    2. ' line' → logprob: -2.118185043334961
    3. ' h' → logprob: -3.243185043334961
    4. 'h' → logprob: -4.243185043334961
    5. 'n' → logprob: -4.743185043334961
    6. 'line' → logprob: -4.868185043334961
    7. ' ligne' → logprob: -4.993185043334961
    8. 'input' → logprob: -4.993185043334961
    9. 'ligne' → logprob: -5.618185043334961
    10. ',' → logprob: -5.743185043334961

Token 399: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26394763588905334
    2. ' line' → logprob: -1.513947606086731
    3. 'line' → logprob: -5.638947486877441
    4. ' h' → logprob: -6.138947486877441
    5. 'input' → logprob: -6.263947486877441
    6. ' input' → logprob: -6.388947486877441
    7. ' ligne' → logprob: -7.138947486877441
    8. 'inputs' → logprob: -7.888947486877441
    9. ' inputs' → logprob: -8.263947486877441
    10. ' lines' → logprob: -8.388947486877441

Token 400: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' (adapté à ' h') → logprob: -0.3201912045478821
    2. ' h' → logprob: -1.3201911449432373
    3. '   ' → logprob: -5.445191383361816
    4. ' line' → logprob: -6.695191383361816
    5. 'line' → logprob: -7.445191383361816
    6. 'dimensions' → logprob: -8.320191383361816
    7. ' dimensions' → logprob: -8.945191383361816
    8. 'input' → logprob: -9.570191383361816
    9. 'l' → logprob: -10.195191383361816
    10. 'ligne' → logprob: -10.320191383361816

Token 401: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024631983251310885
    2. ',w' → logprob: -8.375246047973633
    3. ' ,' → logprob: -11.375246047973633
    4. 'w' → logprob: -12.375246047973633
    5. ',
' → logprob: -17.125246047973633
    6. ',width' → logprob: -18.125246047973633
    7. '_,' → logprob: -18.375246047973633
    8. 's' → logprob: -18.375246047973633
    9. ',W' → logprob: -18.875246047973633
    10. ' w' → logprob: -19.000246047973633

Token 402: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.16023042798042297
    2. 'w' → logprob: -1.9102303981781006
    3. '<|end|>' → logprob: -12.41023063659668
    4. ' ' → logprob: -13.53523063659668
    5. ' ' → logprob: -14.78523063659668
    6. '	w' → logprob: -15.53523063659668
    7. ' ' → logprob: -16.03523063659668
    8. '  ' → logprob: -16.28523063659668
    9. '?w' → logprob: -17.16023063659668
    10. '    ' → logprob: -18.03523063659668

Token 403: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029750952497124672
    2. '=' → logprob: -3.5297510623931885
    3. '=input' → logprob: -15.02975082397461
    4. '=int' → logprob: -16.77975082397461
    5. ' ' → logprob: -18.02975082397461
    6. ')' → logprob: -18.40475082397461
    7. ',' → logprob: -18.40475082397461
    8. ' =
' → logprob: -18.65475082397461
    9. '＝' → logprob: -19.15475082397461
    10. '   ' → logprob: -19.65475082397461

Token 404: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.12692873179912567
    2. ' map' → logprob: -2.1269288063049316
    3. '	map' → logprob: -14.751928329467773
    4. '(map' → logprob: -16.126928329467773
    5. ' ' → logprob: -16.626928329467773
    6. 'input' → logprob: -17.126928329467773
    7. ' ' → logprob: -17.251928329467773
    8. '[' → logprob: -17.751928329467773
    9. '   ' → logprob: -18.251928329467773
    10. '.map' → logprob: -18.876928329467773

Token 405: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00044401636114344
    2. 'int' → logprob: -8.250444412231445
    3. '(' → logprob: -8.625444412231445
    4. '(input' → logprob: -13.125444412231445
    5. ' int' → logprob: -14.875444412231445
    6. '(
' → logprob: -15.125444412231445
    7. '<int' → logprob: -15.375444412231445
    8. 'input' → logprob: -16.125444412231445
    9. '=int' → logprob: -16.250444412231445
    10. '[int' → logprob: -16.750444412231445

Token 406: ',' (ID: 11)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10357604920864105
    2. '(input' → logprob: -2.3535759449005127
    3. ' input' → logprob: -6.478576183319092
    4. ',input' → logprob: -6.603576183319092
    5. ')' → logprob: -8.103575706481934
    6. ',' → logprob: -9.478575706481934
    7. '(' → logprob: -9.603575706481934
    8. '=input' → logprob: -11.228575706481934
    9. '   ' → logprob: -12.103575706481934
    10. '<input' → logprob: -13.228575706481934

Token 407: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0019286326132714748
    2. ' input' → logprob: -6.251928806304932
    3. '   ' → logprob: -18.251928329467773
    4. '(input' → logprob: -18.376928329467773
    5. ')' → logprob: -19.876928329467773
    6. '	input' → logprob: -20.126928329467773
    7. '=input' → logprob: -20.126928329467773
    8. ' ' → logprob: -20.251928329467773
    9. ',input' → logprob: -21.251928329467773
    10. '```' → logprob: -21.501928329467773

Token 408: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.061054359131958e-06
    2. '()' → logprob: -11.750007629394531
    3. ' ().' → logprob: -16.37500762939453
    4. '()
' → logprob: -18.87500762939453
    5. '())' → logprob: -19.37500762939453
    6. '(' → logprob: -19.37500762939453
    7. '.split' → logprob: -20.50000762939453
    8. '("").' → logprob: -20.62500762939453
    9. '().
' → logprob: -21.12500762939453
    10. '("' → logprob: -21.12500762939453

Token 409: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0004307884373702109
    2. 'strip' → logprob: -7.750430583953857
    3. ' split' → logprob: -16.500431060791016
    4. 'rstrip' → logprob: -17.750431060791016
    5. '(split' → logprob: -18.125431060791016
    6. 'spl' → logprob: -18.750431060791016
    7. '().' → logprob: -19.375431060791016
    8. '.split' → logprob: -19.500431060791016
    9. 'read' → logprob: -20.250431060791016
    10. '_split' → logprob: -21.000431060791016

Token 410: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0004360334132798016
    2. '()))' → logprob: -8.125435829162598
    3. '()' → logprob: -9.125435829162598
    4. ')' → logprob: -10.500435829162598
    5. ' ())' → logprob: -13.375435829162598
    6. '(' → logprob: -13.875435829162598
    7. '))' → logprob: -14.250435829162598
    8. '())
' → logprob: -15.500435829162598
    9. '('' → logprob: -17.375436782836914
    10. '());' → logprob: -17.625436782836914

Token 411: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.160572811961174
    2. 'print' → logprob: -1.9105727672576904
    3. 'result' → logprob: -8.16057300567627
    4. ' print' → logprob: -10.28557300567627
    5. '```' → logprob: -11.28557300567627
    6. '    
' → logprob: -12.03557300567627
    7. '
' → logprob: -12.41057300567627
    8. 'return' → logprob: -13.53557300567627
    9. '	print' → logprob: -13.91057300567627
    10. '       ' → logprob: -13.91057300567627

Token 412: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.007748709991574287
    2. 'result' → logprob: -5.007748603820801
    3. ' print' → logprob: -7.382748603820801
    4. '   ' → logprob: -8.0077486038208
    5. 'max' → logprob: -9.7577486038208
    6. ' result' → logprob: -10.8827486038208
    7. 'results' → logprob: -14.8827486038208
    8. 'res' → logprob: -14.8827486038208
    9. '```' → logprob: -15.6327486038208
    10. ' max' → logprob: -15.8827486038208

Token 413: ' Calcul' (ID: 57243)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.039682138711214066
    2. 'result' → logprob: -3.289682149887085
    3. 'max' → logprob: -6.539681911468506
    4. ' print' → logprob: -8.914682388305664
    5. 'res' → logprob: -10.164682388305664
    6. ' result' → logprob: -11.039682388305664
    7. 'dom' → logprob: -13.289682388305664
    8. '   ' → logprob: -13.664682388305664
    9. ' max' → logprob: -14.289682388305664
    10. 'results' → logprob: -14.914682388305664

Token 414: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.051919907331466675
    2. 'max' → logprob: -3.926919937133789
    3. 'result' → logprob: -4.176919937133789
    4. '_max' → logprob: -4.676919937133789
    5. ' maximale' → logprob: -6.301919937133789
    6. ' max' → logprob: -7.176919937133789
    7. ' result' → logprob: -7.676919937133789
    8. '_result' → logprob: -7.801919937133789
    9. '<|end|>' → logprob: -7.801919937133789
    10. ' =' → logprob: -8.051919937133789

Token 415: ' affich' (ID: 90179)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006715967319905758
    2. ' print' → logprob: -5.006715774536133
    3. '   ' → logprob: -14.506715774536133
    4. '```' → logprob: -16.256715774536133
    5. '_print' → logprob: -18.881715774536133
    6. 'return' → logprob: -19.131715774536133
    7. '(print' → logprob: -19.631715774536133
    8. '#print' → logprob: -19.756715774536133
    9. '.print' → logprob: -20.131715774536133
    10. '
' → logprob: -20.256715774536133

Token 416: 'age' (ID: 477)
  Prédit: 'age'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'age' → logprob: -0.3797115385532379
    2. 'er' → logprob: -1.6297115087509155
    3. '   ' → logprob: -2.129711627960205
    4. 'e' → logprob: -7.379711627960205
    5. 'print' → logprob: -7.879711627960205
    6. '(' → logprob: -10.504711151123047
    7. 'ge' → logprob: -10.754711151123047
    8. '    ' → logprob: -11.754711151123047
    9. '(print' → logprob: -12.379711151123047
    10. ' print' → logprob: -12.504711151123047

Token 417: ' du' (ID: 1462)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.49464738368988037
    2. '   ' → logprob: -1.2446473836898804
    3. '(com' → logprob: -2.74464750289917
    4. '(print' → logprob: -3.49464750289917
    5. '(max' → logprob: -5.86964750289917
    6. '(
' → logprob: -6.24464750289917
    7. 'print' → logprob: -6.49464750289917
    8. '(result' → logprob: -7.99464750289917
    9. ':' → logprob: -8.494647026062012
    10. ' print' → logprob: -9.369647026062012

Token 418: ' nombre' (ID: 9733)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.0034619139041751623
    2. ' compute' → logprob: -6.003461837768555
    3. 'result' → logprob: -7.253461837768555
    4. 'print' → logprob: -8.253461837768555
    5. 'max' → logprob: -11.003461837768555
    6. ' result' → logprob: -14.503461837768555
    7. 'computed' → logprob: -15.503461837768555
    8. '.compute' → logprob: -16.003461837768555
    9. '_compute' → logprob: -17.253461837768555
    10. '
' → logprob: -17.253461837768555

Token 419: ' maximal' (ID: 65414)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.9331406950950623
    2. ' maximal' → logprob: -1.058140754699707
    3. 'max' → logprob: -1.433140754699707
    4. ' maximale' → logprob: -4.433140754699707
    5. '(max' → logprob: -5.433140754699707
    6. '   ' → logprob: -5.683140754699707
    7. ' maksimal' → logprob: -7.933140754699707
    8. ' max' → logprob: -8.308140754699707
    9. 'maximum' → logprob: -8.933140754699707
    10. '(com' → logprob: -9.308140754699707

Token 420: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.8515310883522034
    2. 'de' → logprob: -0.8515310883522034
    3. 'compute' → logprob: -2.4765310287475586
    4. ' compute' → logprob: -3.8515310287475586
    5. '   ' → logprob: -3.9765310287475586
    6. '(com' → logprob: -4.101531028747559
    7. '_' → logprob: -6.601531028747559
    8. '_de' → logprob: -6.851531028747559
    9. '(' → logprob: -7.351531028747559
    10. 'max' → logprob: -7.601531028747559

Token 421: ' dom' (ID: 3878)
  Prédit: 'dom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dom' → logprob: -0.0012058269931003451
    2. 'compute' → logprob: -6.876205921173096
    3. ' dom' → logprob: -9.001205444335938
    4. ' compute' → logprob: -10.126205444335938
    5. ' domino' → logprob: -11.751205444335938
    6. 'domain' → logprob: -14.501205444335938
    7. '_dom' → logprob: -15.001205444335938
    8. '_' → logprob: -15.126205444335938
    9. 'comput' → logprob: -16.001205444335938
    10. '```' → logprob: -16.126205444335938

Token 422: 'inos' (ID: 8200)
  Prédit: 'inos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inos' → logprob: -0.0002445317804813385
    2. 'ines' → logprob: -8.875244140625
    3. 'ino' → logprob: -9.750244140625
    4. 'in' → logprob: -10.750244140625
    5. '   ' → logprob: -12.125244140625
    6. '```' → logprob: -12.625244140625
    7. 'ино' → logprob: -13.000244140625
    8. '``' → logprob: -13.750244140625
    9. '
' → logprob: -14.125244140625
    10. '#' → logprob: -14.250244140625

Token 423: ' pouvant' (ID: 104840)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003746048314496875
    2. '(' → logprob: -5.753746032714844
    3. 'print' → logprob: -8.378746032714844
    4. ',' → logprob: -9.003746032714844
    5. ':' → logprob: -9.878746032714844
    6. '(print' → logprob: -9.878746032714844
    7. ' print' → logprob: -10.003746032714844
    8. '(
' → logprob: -10.503746032714844
    9. ')' → logprob: -11.378746032714844
    10. '.' → logprob: -12.003746032714844

Token 424: ' être' (ID: 9104)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.5856698751449585
    2. ' être' → logprob: -0.8356698751449585
    3. ' be' → logprob: -5.085669994354248
    4. ' etre' → logprob: -6.835669994354248
    5. 'êtres' → logprob: -7.210669994354248
    6. 'etre' → logprob: -8.08566951751709
    7. '   ' → logprob: -8.08566951751709
    8. ''être' → logprob: -8.33566951751709
    9. '’être' → logprob: -8.58566951751709
    10. 'be' → logprob: -9.33566951751709

Token 425: ' plac' (ID: 7097)
  Prédit: 'plac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plac' → logprob: -0.00788117665797472
    2. 'placed' → logprob: -5.882881164550781
    3. ' plac' → logprob: -6.132881164550781
    4. 'pos' → logprob: -6.507881164550781
    5. ' placé' → logprob: -7.257881164550781
    6. 'posé' → logprob: -8.257881164550781
    7. 'placement' → logprob: -8.882881164550781
    8. 'placer' → logprob: -9.007881164550781
    9. ' placed' → logprob: -9.507881164550781
    10. 'place' → logprob: -10.257881164550781

Token 426: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.00170041061937809
    2. 'es' → logprob: -7.001700401306152
    3. 'er' → logprob: -8.251700401306152
    4. 'is' → logprob: -9.126700401306152
    5. 'us' → logprob: -9.626700401306152
    6. 'u' → logprob: -10.126700401306152
    7. 'rés' → logprob: -10.126700401306152
    8. 'lés' → logprob: -10.376700401306152
    9. ' placed' → logprob: -10.626700401306152
    10. 'Placed' → logprob: -10.626700401306152

Token 427: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47775834798812866
    2. '(print' → logprob: -1.6027584075927734
    3. '(' → logprob: -1.8527584075927734
    4. 'print' → logprob: -4.727758407592773
    5. '(com' → logprob: -4.727758407592773
    6. '(
' → logprob: -6.102758407592773
    7. '(max' → logprob: -6.727758407592773
    8. '((' → logprob: -8.727758407592773
    9. ' print' → logprob: -9.477758407592773
    10. '()' → logprob: -10.602758407592773

Token 428: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002109574619680643
    2. 'print' → logprob: -6.252109527587891
    3. ' print' → logprob: -8.62710952758789
    4. '```' → logprob: -13.75210952758789
    5. '
' → logprob: -14.12710952758789
    6. 'result' → logprob: -17.62710952758789
    7. '    
' → logprob: -17.87710952758789
    8. '   ' → logprob: -18.62710952758789
    9. '       ' → logprob: -19.00210952758789
    10. '	print' → logprob: -19.00210952758789

Token 429: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.001516768941655755
    2. ' print' → logprob: -6.501516819000244
    3. '   ' → logprob: -11.501516342163086
    4. 'result' → logprob: -12.376516342163086
    5. ' result' → logprob: -16.876516342163086
    6. 'max' → logprob: -16.876516342163086
    7. '```' → logprob: -17.001516342163086
    8. '	print' → logprob: -20.376516342163086
    9. ' max' → logprob: -21.126516342163086
    10. '
' → logprob: -21.501516342163086

Token 430: '(com' (ID: 27868)
  Prédit: '(com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.0003404687449801713
    2. '(' → logprob: -8.000340461730957
    3. 'compute' → logprob: -13.000340461730957
    4. '((' → logprob: -13.375340461730957
    5. ' (' → logprob: -14.375340461730957
    6. ' compute' → logprob: -14.750340461730957
    7. '(
' → logprob: -16.750341415405273
    8. '()' → logprob: -16.875341415405273
    9. '.compute' → logprob: -18.125341415405273
    10. '(c' → logprob: -18.375341415405273

Token 431: 'pute' (ID: 13605)
  Prédit: 'pute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pute' → logprob: -3.0948158382670954e-05
    2. 'put' → logprob: -10.750030517578125
    3. 'ute' → logprob: -11.625030517578125
    4. 'p' → logprob: -15.500030517578125
    5. '```' → logprob: -16.125030517578125
    6. '_' → logprob: -16.250030517578125
    7. '_put' → logprob: -17.375030517578125
    8. '
' → logprob: -17.500030517578125
    9. ' pute' → logprob: -17.750030517578125
    10. 'putate' → logprob: -17.875030517578125

Token 432: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -1.9361264946837764e-07
    2. 'max' → logprob: -16.875
    3. '_' → logprob: -17.5
    4. '_MAX' → logprob: -20.0
    5. '_min' → logprob: -20.875
    6. 'Max' → logprob: -21.875
    7. ')_' → logprob: -22.25
    8. '_Max' → logprob: -22.375
    9. ')' → logprob: -22.5
    10. ' max' → logprob: -22.875

Token 433: '_dom' (ID: 90214)
  Prédit: '_dom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dom' → logprob: -0.0015079588629305363
    2. '_max' → logprob: -6.501507759094238
    3. '_' → logprob: -12.251507759094238
    4. 'dom' → logprob: -14.376507759094238
    5. '_min' → logprob: -15.876507759094238
    6. '_d' → logprob: -15.876507759094238
    7. '_domain' → logprob: -17.001508712768555
    8. '_DOM' → logprob: -17.251508712768555
    9. ' _' → logprob: -18.501508712768555
    10. 'Dom' → logprob: -18.876508712768555

Token 434: 'ino' (ID: 2081)
  Prédit: 'ino'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ino' → logprob: -8.959636033978313e-05
    2. 'inos' → logprob: -9.500089645385742
    3. 'ино' → logprob: -12.000089645385742
    4. '```' → logprob: -13.000089645385742
    5. 'in' → logprob: -13.375089645385742
    6. 'o' → logprob: -13.625089645385742
    7. '   ' → logprob: -14.375089645385742
    8. '__' → logprob: -15.000089645385742
    9. '_in' → logprob: -15.125089645385742
    10. '
' → logprob: -15.500089645385742

Token 435: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -1.8624639324116288e-06
    2. '```' → logprob: -14.875001907348633
    3. ' es' → logprob: -15.125001907348633
    4. 'ces' → logprob: -15.500001907348633
    5. ')' → logprob: -15.875001907348633
    6. 'e' → logprob: -16.000001907348633
    7. 'ez' → logprob: -16.125001907348633
    8. '2' → logprob: -16.125001907348633
    9. 'zes' → logprob: -16.250001907348633
    10. 'oes' → logprob: -16.500001907348633

Token 436: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -8.895480277715251e-06
    2. '(' → logprob: -12.625008583068848
    3. ' (' → logprob: -12.625008583068848
    4. ')' → logprob: -13.125008583068848
    5. ')(' → logprob: -15.875008583068848
    6. '(
' → logprob: -16.375009536743164
    7. '   ' → logprob: -17.000009536743164
    8. '(w' → logprob: -18.625009536743164
    9. '(H' → logprob: -18.625009536743164
    10. ',h' → logprob: -18.625009536743164

Token 437: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.05499910004437e-05
    2. ',w' → logprob: -9.500090599060059
    3. ' ,' → logprob: -11.125090599060059
    4. ',
' → logprob: -14.250090599060059
    5. 'w' → logprob: -15.875090599060059
    6. '   ' → logprob: -16.000089645385742
    7. ',

' → logprob: -18.125089645385742
    8. ' w' → logprob: -18.875089645385742
    9. ')' → logprob: -19.250089645385742
    10. '‌,' → logprob: -19.250089645385742

Token 438: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.07888978719711304
    2. ' w' → logprob: -2.578889846801758
    3. '   ' → logprob: -18.703889846801758
    4. '    ' → logprob: -19.578889846801758
    5. '	w' → logprob: -19.578889846801758
    6. ')' → logprob: -19.703889846801758
    7. ' ' → logprob: -19.828889846801758
    8. ' ' → logprob: -20.453889846801758
    9. '  ' → logprob: -21.453889846801758
    10. '_w' → logprob: -21.578889846801758

Token 439: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0005793657619506121
    2. ')' → logprob: -7.500579357147217
    3. '()))' → logprob: -10.625579833984375
    4. '))
' → logprob: -13.875579833984375
    5. ' ))' → logprob: -14.625579833984375
    6. '())' → logprob: -15.125579833984375
    7. ')))' → logprob: -15.125579833984375
    8. '()' → logprob: -16.250579833984375
    9. ' ' → logprob: -17.625579833984375
    10. '   ' → logprob: -18.375579833984375

Token 440: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00016754455282352865
    2. ' if' → logprob: -9.500167846679688
    3. '```' → logprob: -10.125167846679688
    4. '
' → logprob: -10.750167846679688
    5. '<|end|>' → logprob: -10.750167846679688
    6. '\n' → logprob: -12.500167846679688
    7. '\' → logprob: -13.500167846679688
    8. '#' → logprob: -13.875167846679688
    9. '  
' → logprob: -14.125167846679688
    10. '[' → logprob: -14.500167846679688

Token 441: ' App' (ID: 2583)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0001017551330733113
    2. 'main' → logprob: -9.625102043151855
    3. ' if' → logprob: -10.250102043151855
    4. '#' → logprob: -16.25010108947754
    5. '```' → logprob: -16.37510108947754
    6. 'compute' → logprob: -17.37510108947754
    7. ' main' → logprob: -19.50010108947754
    8. '[' → logprob: -20.37510108947754
    9. '__' → logprob: -20.50010108947754
    10. '\' → logprob: -20.50010108947754

Token 442: 'el' (ID: 296)
  Prédit: 'el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.00524454889819026
    2. 'eler' → logprob: -5.255244731903076
    3. 'elle' → logprob: -12.630244255065918
    4. 'if' → logprob: -12.630244255065918
    5. 'elé' → logprob: -13.380244255065918
    6. 'elf' → logprob: -13.880244255065918
    7. 'els' → logprob: -14.005244255065918
    8. 'ell' → logprob: -15.130244255065918
    9. 'elif' → logprob: -15.380244255065918
    10. 'le' → logprob: -16.130245208740234

Token 443: ' de' (ID: 334)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.001990493619814515
    2. 'main' → logprob: -6.25199031829834
    3. '(main' → logprob: -10.00199031829834
    4. ' if' → logprob: -11.25199031829834
    5. ' main' → logprob: -13.37699031829834
    6. 'de' → logprob: -14.00199031829834
    7. '```' → logprob: -14.62699031829834
    8. 'def' → logprob: -14.87699031829834
    9. '_main' → logprob: -15.25199031829834
    10. 'en' → logprob: -17.251991271972656

Token 444: ' la' (ID: 557)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -16.0
    3. 'if' → logprob: -19.625
    4. '(main' → logprob: -22.0
    5. '	main' → logprob: -23.5
    6. '_main' → logprob: -24.875
    7. '__' → logprob: -24.875
    8. '```' → logprob: -25.0
    9. '.main' → logprob: -25.125
    10. 'print' → logprob: -25.75

Token 445: ' fonction' (ID: 17610)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -9.388769103679806e-05
    2. 'if' → logprob: -10.000093460083008
    3. ' main' → logprob: -10.000093460083008
    4. 'def' → logprob: -12.875093460083008
    5. '(main' → logprob: -16.250093460083008
    6. 'principal' → logprob: -16.625093460083008
    7. '_main' → logprob: -16.875093460083008
    8. '__' → logprob: -17.500093460083008
    9. '	main' → logprob: -17.625093460083008
    10. 'function' → logprob: -17.750093460083008

Token 446: ' principale' (ID: 68926)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.07889033854007721
    2. 'if' → logprob: -2.578890323638916
    3. ' main' → logprob: -14.453890800476074
    4. '(main' → logprob: -16.953889846801758
    5. ' if' → logprob: -17.578889846801758
    6. '```' → logprob: -18.453889846801758
    7. '_main' → logprob: -18.828889846801758
    8. '	main' → logprob: -18.953889846801758
    9. '.main' → logprob: -19.578889846801758
    10. 'Main' → logprob: -20.953889846801758

Token 447: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07914457470178604
    2. 'main' → logprob: -2.5791444778442383
    3. '
' → logprob: -8.329144477844238
    4. '(main' → logprob: -11.954144477844238
    5. '```' → logprob: -12.704144477844238
    6. ' if' → logprob: -13.079144477844238
    7. ' main' → logprob: -13.579144477844238
    8. '

' → logprob: -15.704144477844238
    9. '_main' → logprob: -16.329145431518555
    10. '\n' → logprob: -16.454145431518555

Token 448: ' le' (ID: 505)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.008615161292254925
    2. ' __' → logprob: -4.758615016937256
    3. 'name' → logprob: -14.758615493774414
    4. '```' → logprob: -16.133615493774414
    5. ' ' → logprob: -17.883615493774414
    6. '/__' → logprob: -18.133615493774414
    7. '_name' → logprob: -18.258615493774414
    8. ' ' → logprob: -18.633615493774414
    9. '(__' → logprob: -18.758615493774414
    10. '___' → logprob: -18.758615493774414

Token 449: ' script' (ID: 11713)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.012560747563838959
    2. ' __' → logprob: -4.387560844421387
    3. 'name' → logprob: -10.012560844421387
    4. '```' → logprob: -13.012560844421387
    5. '_name' → logprob: -13.387560844421387
    6. '_' → logprob: -14.762560844421387
    7. 'if' → logprob: -14.887560844421387
    8. ' name' → logprob: -15.137560844421387
    9. '___' → logprob: -15.512560844421387
    10. '.py' → logprob: -15.762560844421387

Token 450: ' est' (ID: 893)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.012671511620283127
    2. ' __' → logprob: -5.13767147064209
    3. ' ==' → logprob: -5.63767147064209
    4. '==' → logprob: -6.01267147064209
    5. 'if' → logprob: -7.63767147064209
    6. 'name' → logprob: -9.01267147064209
    7. ' is' → logprob: -10.38767147064209
    8. '```' → logprob: -10.51267147064209
    9. '.__' → logprob: -10.63767147064209
    10. 'is' → logprob: -11.76267147064209

Token 451: ' exécut' (ID: 165350)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.005967899691313505
    2. ' __' → logprob: -5.13096809387207
    3. 'name' → logprob: -10.38096809387207
    4. '_name' → logprob: -13.13096809387207
    5. 'execut' → logprob: -13.50596809387207
    6. '```' → logprob: -13.75596809387207
    7. '___' → logprob: -14.00596809387207
    8. 'nom' → logprob: -14.13096809387207
    9. ' "__' → logprob: -14.88096809387207
    10. '/__' → logprob: -14.88096809387207

Token 452: 'é' (ID: 377)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.037216249853372574
    2. 'if' → logprob: -3.5372161865234375
    3. 'é' → logprob: -5.0372161865234375
    4. 'e' → logprob: -8.287216186523438
    5. ' __' → logprob: -8.537216186523438
    6. 'able' → logprob: -8.912216186523438
    7. ' if' → logprob: -9.287216186523438
    8. 'er' → logprob: -9.412216186523438
    9. '   ' → logprob: -9.662216186523438
    10. '==' → logprob: -10.287216186523438

Token 453: ' directement' (ID: 52317)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.7110500335693359
    2. 'if' → logprob: -1.586050033569336
    3. '__' → logprob: -1.836050033569336
    4. ' under' → logprob: -2.461050033569336
    5. ' sous' → logprob: -4.711050033569336
    6. ' if' → logprob: -4.836050033569336
    7. '```' → logprob: -4.961050033569336
    8. '_en' → logprob: -5.211050033569336
    9. ' as' → logprob: -5.211050033569336
    10. ' __' → logprob: -5.461050033569336

Token 454: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5835391283035278
    2. '
' → logprob: -0.8335391283035278
    3. '```' → logprob: -5.458539009094238
    4. '

' → logprob: -6.083539009094238
    5. ' if' → logprob: -7.208539009094238
    6. ':
' → logprob: -9.458539009094238
    7. '``' → logprob: -9.458539009094238
    8. '\n' → logprob: -10.083539009094238
    9. ':' → logprob: -10.458539009094238
    10. '  
' → logprob: -10.833539009094238

Token 455: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -3.7697225252486533e-06
    2. '```' → logprob: -13.000003814697266
    3. ' if' → logprob: -14.125003814697266
    4. '
' → logprob: -14.250003814697266
    5. '``' → logprob: -18.875003814697266
    6. '\n' → logprob: -21.750003814697266
    7. '\' → logprob: -22.000003814697266
    8. '\
' → logprob: -22.125003814697266
    9. '@if' → logprob: -22.250003814697266
    10. '

' → logprob: -22.625003814697266

Token 456: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.16032618284225464
    2. '__' → logprob: -1.9103262424468994
    3. ' ' → logprob: -9.28532600402832
    4. 'name' → logprob: -12.53532600402832
    5. ' ' → logprob: -12.66032600402832
    6. '_name' → logprob: -13.78532600402832
    7. '```' → logprob: -14.78532600402832
    8. '___' → logprob: -15.28532600402832
    9. '​' → logprob: -15.78532600402832
    10. ' name' → logprob: -15.91032600402832

Token 457: 'name' (ID: 897)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.018010275438427925
    2. '__' → logprob: -4.518010139465332
    3. '==' → logprob: -5.018010139465332
    4. 'name' → logprob: -9.018010139465332
    5. ' __' → logprob: -9.143010139465332
    6. '=="' → logprob: -9.893010139465332
    7. ' =="' → logprob: -10.893010139465332
    8. ' =' → logprob: -12.143010139465332
    9. '=='' → logprob: -12.268010139465332
    10. ' ' → logprob: -12.768010139465332

Token 458: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -9.088346359931165e-07
    2. '==' → logprob: -14.125000953674316
    3. '_' → logprob: -17.25
    4. ' ==' → logprob: -17.375
    5. '__.__' → logprob: -17.875
    6. '____' → logprob: -18.875
    7. '___' → logprob: -19.125
    8. ' __' → logprob: -19.125
    9. '__
' → logprob: -19.625
    10. '"' → logprob: -19.625

Token 459: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0568036288022995
    2. '==' → logprob: -2.9318037033081055
    3. ' ==' → logprob: -6.3068037033081055
    4. '=="' → logprob: -9.556803703308105
    5. '=' → logprob: -11.431803703308105
    6. '_' → logprob: -12.181803703308105
    7. '=='' → logprob: -12.181803703308105
    8. '___' → logprob: -13.806803703308105
    9. '===' → logprob: -13.931803703308105
    10. '"' → logprob: -14.056803703308105

Token 460: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.048636868596076965
    2. ''' → logprob: -3.0486369132995605
    3. ' "__' → logprob: -10.048636436462402
    4. '__' → logprob: -12.173636436462402
    5. ' '__' → logprob: -13.798636436462402
    6. '("__' → logprob: -17.54863739013672
    7. '"user' → logprob: -17.54863739013672
    8. '"name' → logprob: -18.17363739013672
    9. '"_' → logprob: -18.29863739013672
    10. '"'' → logprob: -18.42363739013672

Token 461: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: 0.0
    2. 'name' → logprob: -18.625
    3. ' main' → logprob: -20.5
    4. '_main' → logprob: -22.25
    5. 'ma' → logprob: -22.5
    6. 'm' → logprob: -23.375
    7. '	main' → logprob: -23.625
    8. '__' → logprob: -24.0
    9. 'maine' → logprob: -24.25
    10. 'mp' → logprob: -24.75

Token 462: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.10022295266389847
    2. '__' → logprob: -2.3502230644226074
    3. '__':
' → logprob: -11.10022258758545
    4. '"' → logprob: -14.85022258758545
    5. '__["' → logprob: -14.85022258758545
    6. '_' → logprob: -15.85022258758545
    7. '__("' → logprob: -16.225223541259766
    8. '__",' → logprob: -16.975223541259766
    9. '_"' → logprob: -17.100223541259766
    10. '__
' → logprob: -17.225223541259766

Token 463: '   ' (ID: 271)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.004425251390784979
    2. '__' → logprob: -5.504425048828125
    3. ''' → logprob: -8.379425048828125
    4. ' "__' → logprob: -9.754425048828125
    5. 'main' → logprob: -10.254425048828125
    6. '   ' → logprob: -10.754425048828125
    7. ' main' → logprob: -13.504425048828125
    8. ' ' → logprob: -14.879425048828125
    9. ' __' → logprob: -15.629425048828125
    10. '	' → logprob: -16.254425048828125

Token 464: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -16.5
    3. '	main' → logprob: -21.75
    4. '   ' → logprob: -24.5
    5. '_main' → logprob: -26.25
    6. 'Main' → logprob: -28.0
    7. '.main' → logprob: -28.0
    8. '(main' → logprob: -29.125
    9. '主' → logprob: -30.75
    10. 'mainwindow' → logprob: -31.625

Token 465: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 463
Tokens correctement prédits (1ère position, stricte): 150
Tokens correctement prédits (1ère position, avec adaptation): 157
Tokens correctement prédits (top 10): 318
Précision stricte (1ère position): 32.40%
Précision adaptée (1ère position): 33.91%
Précision (top 10): 68.68%
================================================================================
