================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:32:33
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from collections import Counter, defaultdict

# Buffered and regular readline for fast I/O
buff_readline = sys.stdin.buffer.readline
readline = sys.stdin.readline

def read_int():
    """
    Reads a single integer from standard input.

    Returns:
        int: The integer read from input.
    """
    return int(buff_readline())

def read_int_n():
    """
    Reads a line of space-separated integers from standard input.

    Returns:
        List[int]: The list of integers read from input.
    """
    return list(map(int, buff_readline().split()))

# Global variable for caching power values for rolling hash computations
gpw = None

class RH:
    """
    Rolling Hash (RH) implementation for efficient substring hash computation.
    Useful for comparing slices of bit representations.

    Attributes:
        base (int): Hash base value for rolling hash.
        mod (int): Modulus to avoid integer overflow.
        h (List[int]): Prefix hashes for the sequence.
        pw (List[int]): Precomputed powers of base modulo mod for substring hash calculation.
    """
    def __init__(self, s, base, mod):
        """
        Initializes the rolling hash object for sequence 's'.

        Args:
            s (List[int]): Input sequence (e.g., bits of a number).
            base (int): Hash base.
            mod (int): Modulus for hash calculation.
        """
        self.base = base
        self.mod = mod

        l = len(s)
        self.h = h = [0] * (l + 1)
        tmp = 0
        # Compute prefix hashes for the input sequence
        for i in range(l):
            tmp = (tmp * base + s[i]) % mod
            h[i + 1] = tmp

        # Use global power cache if available, else precompute powers of base
        global gpw
        if gpw is None:
            self.pw = pw = [1] * (len(s) + 1)
            v = 1
            for i in range(l):
                pw[i + 1] = v = v * base % mod
            gpw = pw
        else:
            self.pw = gpw

    def calc(self, l, r):
        """
        Calculates the rolling hash of the subsequence s[l:r].

        Args:
            l (int): Start index (inclusive).
            r (int): End index (exclusive).

        Returns:
            int: Hash value for the subsequence.
        """
        return (self.h[r] - self.h[l] * self.pw[r-l]) % self.mod

def slv(N, A, B):
    """
    Finds all valid (k, x) pairs where B is obtained by applying XOR operation to 
    A with a shifted and reversed mask, considering all cyclic rotations and possible bit masks.

    Args:
        N (int): The length of input arrays A and B.
        A (List[int]): The first integer sequence.
        B (List[int]): The second integer sequence.

    Returns:
        List[str]: List of formatted results as 'k x' for all valid pairs.
    """
    # Determine the number of bits required to represent the largest element
    L = max(max(A), max(B)).bit_length()
    ah = []   # List to store rolling hashes of A's bits for each bit position
    bh = []   # List for B's bits
    bnh = []  # List for inverse (not) of B's bits

    for i in range(L):
        ta = []   # i-th bit of A for all elements
        tb = []   # i-th bit of B
        tbn = []  # Inverse of tb
        
        for a, b in zip(A, B):
            ta.append((a >> i) & 1)
            tb.append((b >> i) & 1)
            tbn.append(tb[-1] ^ 1)  # Negate last value in tb

        ah.append(RH(ta, 641, 10**9 + 7))
        bh.append(RH(tb, 641, 10**9 + 7))
        bnh.append(RH(tbn, 641, 10**9 + 7))

    # Array to store computed mask x for each shift k, None if invalid
    x = [0] * N

    # For each bit position, check for all shifts k whether the rotated XOR pattern matches
    for i in range(L):
        for k in range(N):
            # Rolling hash for A's i-th bit after rotating left by k
            l = ah[i].calc(k, N)
            # Rolling hash for A's i-th bit before k
            r = ah[i].calc(0, k)

            if x[k] is None:
                continue  # Already invalidated this k

            # Condition 1: Rotated pattern matches inverse of B
            if l == bnh[i].calc(0, N-k) and r == bnh[i].calc(N-k, N):
                x[k] += 1 << i  # Set this bit in candidate mask x[k]

            # Condition 2: Rotated pattern matches B as is (no bit to set in x[k])
            elif l == bh[i].calc(0, N-k) and r == bh[i].calc(N-k, N):
                pass  # No change to x[k]
            else:
                # No valid match, invalidate shift k
                x[k] = None

    # Collect all valid (k, x) solutions
    ans = []
    for k, xx in enumerate(x):
        if xx is not None:
            ans.append('%d %d' % (k, xx))

    return ans

def main():
    """
    Main function for problem execution.
    Reads input, processes data, and outputs results.
    """
    N = read_int()
    A = read_int_n()
    B = read_int_n()
    print(*slv(N, A, B), sep='\n')

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6975938677787781
    2. '\n' → logprob: -0.8225938677787781
    3. '<|end|>' → logprob: -3.572593927383423
    4. '\' → logprob: -4.322593688964844
    5. 'newline' → logprob: -5.072593688964844
    6. 'import' → logprob: -5.322593688964844
    7. '<|end|>' → logprob: -5.947593688964844
    8. '```' → logprob: -6.572593688964844
    9. '' → logprob: -6.697593688964844
    10. '
' → logprob: -6.947593688964844

Token 4: ' collections' (ID: 22690)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.01821877807378769
    2. 'os' → logprob: -4.143218994140625
    3. ' Py' → logprob: -7.768218994140625
    4. ' pathlib' → logprob: -7.768218994140625
    5. ' collections' → logprob: -7.893218994140625
    6. ' math' → logprob: -8.768218994140625
    7. 'collections' → logprob: -9.018218994140625
    8. ' ' → logprob: -9.143218994140625
    9. ' typing' → logprob: -9.643218994140625
    10. ' datetime' → logprob: -9.768218994140625

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.537659227848053
    2. 'import' → logprob: -0.912659227848053
    3. '.' → logprob: -4.287659168243408
    4. ' ' → logprob: -8.287659645080566
    5. '<|end|>' → logprob: -9.037659645080566
    6. '.import' → logprob: -9.287659645080566
    7. '```' → logprob: -9.412659645080566
    8. '_import' → logprob: -10.537659645080566
    9. '	import' → logprob: -10.662659645080566
    10. '_' → logprob: -11.412659645080566

Token 6: ' Counter' (ID: 32251)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.38865795731544495
    2. ' deque' → logprob: -1.3886579275131226
    3. ' abc' → logprob: -2.763658046722412
    4. 'deque' → logprob: -4.888658046722412
    5. 'abc' → logprob: -6.888658046722412
    6. ' named' → logprob: -7.638658046722412
    7. ' Counter' → logprob: -7.888658046722412
    8. ' Ordered' → logprob: -10.263657569885254
    9. 'named' → logprob: -10.638657569885254
    10. 'default' → logprob: -10.638657569885254

Token 7: ',' (ID: 11)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.2370128333568573
    2. 'import' → logprob: -1.8620128631591797
    3. '\' → logprob: -3.9870128631591797
    4. '
' → logprob: -4.73701286315918
    5. '```' → logprob: -4.73701286315918
    6. '<|end|>' → logprob: -4.86201286315918
    7. ',' → logprob: -5.73701286315918
    8. 'newline' → logprob: -6.36201286315918
    9. '<|end|>' → logprob: -6.48701286315918
    10. '.' → logprob: -6.73701286315918

Token 8: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.007894190028309822
    2. 'default' → logprob: -4.882894039154053
    3. ' deque' → logprob: -8.757894515991211
    4. 'deque' → logprob: -9.132894515991211
    5. 'named' → logprob: -11.507894515991211
    6. ' named' → logprob: -12.257894515991211
    7. ' Ordered' → logprob: -12.507894515991211
    8. ' default' → logprob: -13.007894515991211
    9. 'Ordered' → logprob: -13.507894515991211
    10. ' itertools' → logprob: -16.13289451599121

Token 9: '

' (ID: 279)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6820252537727356
    2. '
' → logprob: -1.4320251941680908
    3. '

' → logprob: -2.182025194168091
    4. '\n' → logprob: -2.557025194168091
    5. ',' → logprob: -3.807025194168091
    6. '```' → logprob: -3.932025194168091
    7. '<|end|>' → logprob: -4.68202543258667
    8. '' → logprob: -5.18202543258667
    9. '<|end|>' → logprob: -6.55702543258667
    10. '\' → logprob: -6.93202543258667

Token 10: '#' (ID: 2)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.4881235957145691
    2. ',' → logprob: -1.8631236553192139
    3. '```' → logprob: -2.113123655319214
    4. '\n' → logprob: -3.738123655319214
    5. '\' → logprob: -3.988123655319214
    6. '`' → logprob: -4.113123416900635
    7. 'def' → logprob: -4.613123416900635
    8. '
' → logprob: -4.613123416900635
    9. '.' → logprob: -4.613123416900635
    10. '#' → logprob: -4.988123416900635

Token 11: ' Buffered' (ID: 25428)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.004007996059954166
    2. ' #' → logprob: -7.004007816314697
    3. 'd' → logprob: -7.254007816314697
    4. ' 

' → logprob: -7.504007816314697
    5. '#' → logprob: -7.629007816314697
    6. '_' → logprob: -8.379008293151855
    7. ' ' → logprob: -8.504008293151855
    8. ' 
' → logprob: -8.629008293151855
    9. 'def' → logprob: -8.879008293151855
    10. 'import' → logprob: -9.254008293151855

Token 12: ' and' (ID: 326)
  Prédit: 'Reader'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Reader' → logprob: -0.005630943458527327
    2. 'Writer' → logprob: -5.255630970001221
    3. 'reader' → logprob: -8.380630493164062
    4. 'I' → logprob: -10.380630493164062
    5. 'Input' → logprob: -10.380630493164062
    6. '_reader' → logprob: -10.380630493164062
    7. 'IO' → logprob: -10.505630493164062
    8. '_' → logprob: -10.880630493164062
    9. ' reader' → logprob: -12.505630493164062
    10. ' Reader' → logprob: -12.630630493164062

Token 13: ' regular' (ID: 6953)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.9344133138656616
    2. 'stream' → logprob: -1.9344133138656616
    3. ' streamed' → logprob: -2.434413433074951
    4. ' incremental' → logprob: -3.059413433074951
    5. ' cached' → logprob: -3.184413433074951
    6. 'cached' → logprob: -3.434413433074951
    7. 'un' → logprob: -3.684413433074951
    8. '#' → logprob: -3.809413433074951
    9. ' streaming' → logprob: -4.184413433074951
    10. ' line' → logprob: -4.434413433074951

Token 14: ' readline' (ID: 179561)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.427084743976593
    2. ' ' → logprob: -1.9270846843719482
    3. 'import' → logprob: -2.5520846843719482
    4. ' import' → logprob: -3.0520846843719482
    5. '_reader' → logprob: -3.5520846843719482
    6. '_input' → logprob: -4.427084922790527
    7. '_import' → logprob: -5.177084922790527
    8. '_read' → logprob: -5.677084922790527
    9. ' _' → logprob: -5.802084922790527
    10. 'Reader' → logprob: -6.177084922790527

Token 15: ' for' (ID: 395)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.187897726893425
    2. '(' → logprob: -2.1878976821899414
    3. '\' → logprob: -4.312897682189941
    4. '()' → logprob: -4.687897682189941
    5. '(
' → logprob: -5.187897682189941
    6. 's' → logprob: -5.437897682189941
    7. 'def' → logprob: -5.437897682189941
    8. '\n' → logprob: -5.562897682189941
    9. '```' → logprob: -5.937897682189941
    10. '=' → logprob: -6.062897682189941

Token 16: ' fast' (ID: 5661)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.710001528263092
    2. 'input' → logprob: -0.960001528263092
    3. ' fast' → logprob: -2.5850014686584473
    4. 'stdin' → logprob: -4.460001468658447
    5. 'sys' → logprob: -4.835001468658447
    6. ' stdin' → logprob: -4.960001468658447
    7. ' sys' → logprob: -5.085001468658447
    8. 'fast' → logprob: -5.210001468658447
    9. ' faster' → logprob: -5.460001468658447
    10. ' reading' → logprob: -5.960001468658447

Token 17: ' I' (ID: 357)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.018652843311429024
    2. 'input' → logprob: -4.76865291595459
    3. '_input' → logprob: -5.01865291595459
    4. ' I' → logprob: -6.76865291595459
    5. '_' → logprob: -7.26865291595459
    6. '_io' → logprob: -7.76865291595459
    7. ' ' → logprob: -8.01865291595459
    8. ' IO' → logprob: -8.64365291595459
    9. ' reads' → logprob: -8.89365291595459
    10. ' readline' → logprob: -9.26865291595459

Token 18: '/O' (ID: 37469)
  Prédit: 'O'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'O' → logprob: -0.30731379985809326
    2. '/O' → logprob: -1.4323137998580933
    3. 'n' → logprob: -4.307313919067383
    4. '/' → logprob: -4.432313919067383
    5. 'N' → logprob: -9.182313919067383
    6. ' O' → logprob: -9.807313919067383
    7. '\' → logprob: -10.057313919067383
    8. '/o' → logprob: -10.182313919067383
    9. 'OM' → logprob: -10.807313919067383
    10. '_O' → logprob: -10.932313919067383

Token 19: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.982070803642273
    2. '_input' → logprob: -1.982070803642273
    3. '\n' → logprob: -1.982070803642273
    4. '_' → logprob: -2.4820709228515625
    5. 'import' → logprob: -2.9820709228515625
    6. '```' → logprob: -3.1070709228515625
    7. '_reader' → logprob: -3.8570709228515625
    8. '_
' → logprob: -3.8570709228515625
    9. '_read' → logprob: -4.1070709228515625
    10. '__' → logprob: -4.1070709228515625

Token 20: 'buff' (ID: 51053)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6200908422470093
    2. 'input' → logprob: -1.6200908422470093
    3. '_input' → logprob: -1.6200908422470093
    4. '
' → logprob: -4.370090961456299
    5. '```' → logprob: -4.495090961456299
    6. '_buffer' → logprob: -4.745090961456299
    7. 'sys' → logprob: -4.995090961456299
    8. 'def' → logprob: -5.370090961456299
    9. '_read' → logprob: -5.745090961456299
    10. 'read' → logprob: -5.870090961456299

Token 21: '_read' (ID: 14291)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.16185586154460907
    2. 'ered' → logprob: -1.9118558168411255
    3. ' =' → logprob: -7.411855697631836
    4. 'e' → logprob: -7.786855697631836
    5. '=' → logprob: -8.411855697631836
    6. 'fer' → logprob: -8.536855697631836
    7. '_' → logprob: -9.661855697631836
    8. '_read' → logprob: -10.286855697631836
    9. 'ere' → logprob: -10.786855697631836
    10. 'ed' → logprob: -10.786855697631836

Token 22: 'line' (ID: 1137)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.06674935668706894
    2. 'line' → logprob: -3.066749334335327
    3. ' =' → logprob: -4.566749572753906
    4. '()' → logprob: -5.566749572753906
    5. '_line' → logprob: -6.441749572753906
    6. '=' → logprob: -6.691749572753906
    7. 'ing' → logprob: -7.191749572753906
    8. '(' → logprob: -10.316749572753906
    9. 'e' → logprob: -10.566749572753906
    10. 'buffer' → logprob: -11.066749572753906

Token 23: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25198134779930115
    2. '=' → logprob: -1.5019813776016235
    3. '_' → logprob: -10.376981735229492
    4. ' ' → logprob: -11.751981735229492
    5. ',' → logprob: -12.876981735229492
    6. 's' → logprob: -13.126981735229492
    7. ':' → logprob: -13.501981735229492
    8. '(' → logprob: -13.751981735229492
    9. ')' → logprob: -14.126981735229492
    10. '=sys' → logprob: -14.126981735229492

Token 24: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0005819845828227699
    2. ' sys' → logprob: -7.625582218170166
    3. '(sys' → logprob: -10.125581741333008
    4. 'lambda' → logprob: -10.250581741333008
    5. '=sys' → logprob: -12.125581741333008
    6. 'input' → logprob: -12.625581741333008
    7. '	sys' → logprob: -12.750581741333008
    8. '```' → logprob: -13.000581741333008
    9. 'iter' → logprob: -13.250581741333008
    10. 'open' → logprob: -14.250581741333008

Token 25: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.002146931365132332
    2. '.stdout' → logprob: -6.5021467208862305
    3. '.' → logprob: -7.6271467208862305
    4. '.argv' → logprob: -9.87714672088623
    5. '.std' → logprob: -10.00214672088623
    6. '.readline' → logprob: -10.12714672088623
    7. '.version' → logprob: -12.12714672088623
    8. '.buffer' → logprob: -12.37714672088623
    9. '.stderr' → logprob: -12.37714672088623
    10. ' .' → logprob: -13.12714672088623

Token 26: '.buffer' (ID: 48964)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.038594938814640045
    2. '.buffer' → logprob: -3.288594961166382
    3. '.read' → logprob: -7.663594722747803
    4. '.' → logprob: -9.663595199584961
    5. '.readlines' → logprob: -11.663595199584961
    6. 'buffer' → logprob: -11.913595199584961
    7. '.Buffered' → logprob: -13.663595199584961
    8. '.f' → logprob: -13.788595199584961
    9. '.buff' → logprob: -13.913595199584961
    10. '.detach' → logprob: -14.538595199584961

Token 27: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.5332478142227046e-05
    2. '.read' → logprob: -11.750015258789062
    3. '.' → logprob: -11.875015258789062
    4. '.readlines' → logprob: -15.375015258789062
    5. '.raw' → logprob: -16.000015258789062
    6. '.peek' → logprob: -16.750015258789062
    7. '```' → logprob: -17.125015258789062
    8. '._' → logprob: -18.875015258789062
    9. ' readline' → logprob: -19.000015258789062
    10. '.rstrip' → logprob: -19.250015258789062

Token 28: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6679888963699341
    2. '
' → logprob: -1.042988896369934
    3. '(' → logprob: -3.2929887771606445
    4. 'def' → logprob: -3.2929887771606445
    5. ')' → logprob: -4.7929887771606445
    6. '\n' → logprob: -4.9179887771606445
    7. '

' → logprob: -5.0429887771606445
    8. '(
' → logprob: -5.1679887771606445
    9. '()
' → logprob: -5.5429887771606445
    10. '\' → logprob: -5.7929887771606445

Token 29: 'read' (ID: 1293)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006762263830751181
    2. '
' → logprob: -5.6317620277404785
    3. '\' → logprob: -7.6317620277404785
    4. '\n' → logprob: -7.7567620277404785
    5. '_' → logprob: -8.006762504577637
    6. '#' → logprob: -8.131762504577637
    7. '

' → logprob: -8.131762504577637
    8. '' → logprob: -8.381762504577637
    9. 'newline' → logprob: -8.506762504577637
    10. 'import' → logprob: -8.756762504577637

Token 30: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -4.227250610711053e-05
    2. 'ine' → logprob: -10.250041961669922
    3. '_line' → logprob: -12.000041961669922
    4. 'lin' → logprob: -15.375041961669922
    5. 'eline' → logprob: -15.375041961669922
    6. 'l' → logprob: -16.125041961669922
    7. 'Line' → logprob: -16.875041961669922
    8. 'lines' → logprob: -17.500041961669922
    9. 'ln' → logprob: -18.000041961669922
    10. ' =' → logprob: -18.625041961669922

Token 31: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4782520532608032
    2. ' =' → logprob: -0.9782520532608032
    3. '()' → logprob: -5.603251934051514
    4. '(' → logprob: -8.103252410888672
    5. ' ' → logprob: -9.728252410888672
    6. ')' → logprob: -9.853252410888672
    7. ',' → logprob: -11.478252410888672
    8. ' ()' → logprob: -11.478252410888672
    9. '[:]' → logprob: -12.103252410888672
    10. '  ' → logprob: -12.228252410888672

Token 32: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.3133241832256317
    2. ' sys' → logprob: -1.313324213027954
    3. 'input' → logprob: -10.813323974609375
    4. '(sys' → logprob: -11.188323974609375
    5. '=sys' → logprob: -11.438323974609375
    6. 'lambda' → logprob: -12.188323974609375
    7. '	sys' → logprob: -12.563323974609375
    8. ' input' → logprob: -12.938323974609375
    9. ' lambda' → logprob: -13.063323974609375
    10. 'buff' → logprob: -13.563323974609375

Token 33: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.38096365332603455
    2. '.readline' → logprob: -1.630963683128357
    3. '.stdin' → logprob: -2.1309635639190674
    4. '.stdout' → logprob: -6.3809638023376465
    5. '.read' → logprob: -8.630963325500488
    6. ' .' → logprob: -9.005963325500488
    7. '.stderr' → logprob: -9.505963325500488
    8. '.
' → logprob: -10.505963325500488
    9. '.<' → logprob: -10.505963325500488
    10. '.buffer' → logprob: -10.505963325500488

Token 34: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.47415387630462646
    2. '.' → logprob: -0.9741538763046265
    3. '.read' → logprob: -10.099153518676758
    4. ' .' → logprob: -11.474153518676758
    5. '.buffer' → logprob: -11.724153518676758
    6. '.f' → logprob: -12.474153518676758
    7. '.\' → logprob: -12.974153518676758
    8. '.`' → logprob: -13.474153518676758
    9. '.stdin' → logprob: -13.849153518676758
    10. '.user' → logprob: -14.099153518676758

Token 35: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21054625511169434
    2. 'def' → logprob: -2.4605462551116943
    3. '

' → logprob: -2.4605462551116943
    4. '```' → logprob: -5.210546493530273
    5. '\n' → logprob: -5.210546493530273
    6. '#' → logprob: -5.835546493530273
    7. '\' → logprob: -6.960546493530273
    8. 'newline' → logprob: -6.960546493530273
    9. '
' → logprob: -7.335546493530273
    10. '' → logprob: -7.335546493530273

Token 36: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05928559601306915
    2. '
' → logprob: -3.8092856407165527
    3. '#' → logprob: -4.434285640716553
    4. 'class' → logprob: -4.809285640716553
    5. 'import' → logprob: -5.559285640716553
    6. '\' → logprob: -5.684285640716553
    7. 'd' → logprob: -5.809285640716553
    8. '\n' → logprob: -6.559285640716553
    9. '```' → logprob: -6.809285640716553
    10. '

' → logprob: -6.809285640716553

Token 37: ' read' (ID: 1729)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.054606907069683075
    2. '_' → logprob: -4.054606914520264
    3. ' _' → logprob: -4.429606914520264
    4. ' main' → logprob: -4.679606914520264
    5. ' solve' → logprob: -5.804606914520264
    6. ' fast' → logprob: -6.554606914520264
    7. ' calculate' → logprob: -6.804606914520264
    8. ' process' → logprob: -6.804606914520264
    9. ' read' → logprob: -7.054606914520264
    10. ' get' → logprob: -7.054606914520264

Token 38: '_int' (ID: 12285)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.02383814938366413
    2. 'line' → logprob: -4.523838043212891
    3. '():' → logprob: -4.523838043212891
    4. '()' → logprob: -7.023838043212891
    5. '_' → logprob: -7.523838043212891
    6. '_token' → logprob: -8.52383804321289
    7. '(' → logprob: -9.77383804321289
    8. 'Line' → logprob: -9.77383804321289
    9. ' line' → logprob: -10.64883804321289
    10. '_LINE' → logprob: -11.02383804321289

Token 39: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.008057031780481339
    2. '()' → logprob: -5.133057117462158
    3. '(' → logprob: -6.258057117462158
    4. 's' → logprob: -9.383056640625
    5. ' ():' → logprob: -10.008056640625
    6. '():
' → logprob: -10.633056640625
    7. '_line' → logprob: -11.383056640625
    8. '):' → logprob: -12.008056640625
    9. ' ()' → logprob: -12.008056640625
    10. '_' → logprob: -12.008056640625

Token 40: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06031188368797302
    2. '():' → logprob: -3.185311794281006
    3. '(' → logprob: -4.435311794281006
    4. ' ()' → logprob: -5.935311794281006
    5. ' return' → logprob: -6.935311794281006
    6. 'return' → logprob: -7.060311794281006
    7. '   ' → logprob: -8.185312271118164
    8. ')' → logprob: -8.935312271118164
    9. ':' → logprob: -9.185312271118164
    10. ' ():' → logprob: -9.810312271118164

Token 41: ' """
' (ID: 7037)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.883554220199585
    2. 'int' → logprob: -1.008554220199585
    3. 'return' → logprob: -1.633554220199585
    4. ' int' → logprob: -3.758554220199585
    5. '   ' → logprob: -5.758554458618164
    6. 'n' → logprob: -9.383554458618164
    7. '    ' → logprob: -10.758554458618164
    8. ' n' → logprob: -10.883554458618164
    9. ' ' → logprob: -11.008554458618164
    10. '(int' → logprob: -11.133554458618164

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15348538756370544
    2. ')' → logprob: -3.4034852981567383
    3. 'int' → logprob: -3.5284852981567383
    4. ' return' → logprob: -3.5284852981567383
    5. '"""' → logprob: -3.9034852981567383
    6. 'return' → logprob: -4.028485298156738
    7. ' int' → logprob: -5.153485298156738
    8. '(int' → logprob: -6.903485298156738
    9. '""' → logprob: -7.528485298156738
    10. '    ' → logprob: -7.528485298156738

Token 43: ' Reads' (ID: 88839)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4957542419433594
    2. '   ' → logprob: -1.1207542419433594
    3. ' return' → logprob: -2.7457542419433594
    4. '"""' → logprob: -8.12075424194336
    5. 'Return' → logprob: -9.62075424194336
    6. ' """' → logprob: -9.87075424194336
    7. '    ' → logprob: -9.99575424194336
    8. 'line' → logprob: -10.37075424194336
    9. 'r' → logprob: -10.62075424194336
    10. '       ' → logprob: -10.74575424194336

Token 44: ' a' (ID: 261)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0852484181523323
    2. 'int' → logprob: -3.0852484703063965
    3. '():' → logprob: -4.8352484703063965
    4. ')' → logprob: -4.9602484703063965
    5. ' ()' → logprob: -5.3352484703063965
    6. ' an' → logprob: -5.4602484703063965
    7. '()
' → logprob: -5.5852484703063965
    8. '   ' → logprob: -6.2102484703063965
    9. ' a' → logprob: -6.7102484703063965
    10. ' )' → logprob: -7.0852484703063965

Token 45: ' single' (ID: 4590)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1307995319366455
    2. ' line' → logprob: -2.2557995319366455
    3. ' single' → logprob: -4.255799293518066
    4. 'line' → logprob: -6.505799293518066
    5. 'int' → logprob: -6.880799293518066
    6. ' n' → logprob: -7.255799293518066
    7. 'single' → logprob: -8.505799293518066
    8. ' number' → logprob: -9.755799293518066
    9. '_line' → logprob: -10.380799293518066
    10. ' token' → logprob: -10.755799293518066

Token 46: ' integer' (ID: 16336)
  Prédit: ' integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' integer' → logprob: -0.7754906415939331
    2. ' line' → logprob: -1.275490641593933
    3. 'int' → logprob: -1.900490641593933
    4. ' int' → logprob: -2.2754907608032227
    5. 'integer' → logprob: -5.400490760803223
    6. 'line' → logprob: -6.525490760803223
    7. ' ' → logprob: -7.150490760803223
    8. '(int' → logprob: -8.275490760803223
    9. '()' → logprob: -8.525490760803223
    10. '_int' → logprob: -9.275490760803223

Token 47: ' from' (ID: 591)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.3713241219520569
    2. '()' → logprob: -1.246324062347412
    3. '(' → logprob: -3.996324062347412
    4. ':' → logprob: -7.246324062347412
    5. '(
' → logprob: -7.246324062347412
    6. '():
' → logprob: -7.371324062347412
    7. ')' → logprob: -7.621324062347412
    8. '):' → logprob: -8.12132453918457
    9. 'from' → logprob: -8.12132453918457
    10. '.' → logprob: -8.24632453918457

Token 48: ' standard' (ID: 7024)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.5209752917289734
    2. ' the' → logprob: -2.020975351333618
    3. ' sys' → logprob: -2.145975351333618
    4. 'the' → logprob: -2.895975351333618
    5. ')' → logprob: -3.145975351333618
    6. 'stdin' → logprob: -4.145975112915039
    7. 'input' → logprob: -4.520975112915039
    8. 'line' → logprob: -5.145975112915039
    9. ' readline' → logprob: -5.520975112915039
    10. ' stdin' → logprob: -5.645975112915039

Token 49: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.47425881028175354
    2. 'input' → logprob: -0.9742587804794312
    3. 'in' → logprob: -8.724258422851562
    4. '   ' → logprob: -11.224258422851562
    5. ' in' → logprob: -13.224258422851562
    6. 'int' → logprob: -13.474258422851562
    7. '	input' → logprob: -14.099258422851562
    8. ' ' → logprob: -14.474258422851562
    9. '_input' → logprob: -14.724258422851562
    10. '  ' → logprob: -15.599258422851562

Token 50: '.

' (ID: 364)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6776102185249329
    2. '()' → logprob: -1.302610158920288
    3. '(' → logprob: -2.177610158920288
    4. '   ' → logprob: -2.552610158920288
    5. '(
' → logprob: -4.802610397338867
    6. '():' → logprob: -5.552610397338867
    7. '\n' → logprob: -5.802610397338867
    8. '()
' → logprob: -6.052610397338867
    9. '):' → logprob: -6.552610397338867
    10. '.' → logprob: -6.677610397338867

Token 51: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00112426420673728
    2. '"""' → logprob: -7.001124382019043
    3. ')' → logprob: -9.126124382019043
    4. ' """' → logprob: -10.876124382019043
    5. '    ' → logprob: -11.001124382019043
    6. '    
' → logprob: -11.126124382019043
    7. ' return' → logprob: -11.376124382019043
    8. 'return' → logprob: -11.751124382019043
    9. '\n' → logprob: -11.876124382019043
    10. '```' → logprob: -12.501124382019043

Token 52: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02011657878756523
    2. 'return' → logprob: -5.020116806030273
    3. 'line' → logprob: -5.020116806030273
    4. ' line' → logprob: -5.145116806030273
    5. ' return' → logprob: -7.145116806030273
    6. 'data' → logprob: -10.770116806030273
    7. '```' → logprob: -11.145116806030273
    8. ' ' → logprob: -11.270116806030273
    9. '"""' → logprob: -11.270116806030273
    10. '    ' → logprob: -12.020116806030273

Token 53: ':
' (ID: 734)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.41344356536865234
    2. ' int' → logprob: -1.4134435653686523
    3. '   ' → logprob: -3.6634435653686523
    4. ' ' → logprob: -3.7884435653686523
    5. '(int' → logprob: -4.413443565368652
    6. '    ' → logprob: -5.038443565368652
    7. ':int' → logprob: -5.038443565368652
    8. ':' → logprob: -5.538443565368652
    9. '  ' → logprob: -5.538443565368652
    10. '=int' → logprob: -6.413443565368652

Token 54: '       ' (ID: 309)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.2521628439426422
    2. 'int' → logprob: -1.5021628141403198
    3. '   ' → logprob: -8.37716293334961
    4. '<int' → logprob: -14.00216293334961
    5. '    ' → logprob: -14.50216293334961
    6. ':int' → logprob: -14.50216293334961
    7. '(int' → logprob: -14.87716293334961
    8. '```' → logprob: -15.37716293334961
    9. '=int' → logprob: -15.50216293334961
    10. ' ' → logprob: -16.00216293334961

Token 55: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' (adapté à ' int') → logprob: -0.0024758970830589533
    2. ' int' → logprob: -6.002475738525391
    3. '   ' → logprob: -16.12747573852539
    4. '<int' → logprob: -18.00247573852539
    5. '(int' → logprob: -18.12747573852539
    6. ':int' → logprob: -18.50247573852539
    7. '```' → logprob: -18.62747573852539
    8. '`' → logprob: -19.00247573852539
    9. '[int' → logprob: -19.62747573852539
    10. '=int' → logprob: -20.75247573852539

Token 56: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9541465044021606
    2. '<|end|>' → logprob: -1.8291465044021606
    3. '()' → logprob: -1.9541465044021606
    4. ':' → logprob: -2.204146385192871
    5. '(' → logprob: -2.454146385192871
    6. '<|end|>' → logprob: -4.329146385192871
    7. 'int' → logprob: -4.454146385192871
    8. '(int' → logprob: -4.454146385192871
    9. '(
' → logprob: -4.704146385192871
    10. '(read' → logprob: -4.704146385192871

Token 57: ' The' (ID: 623)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.6335080862045288
    2. 'int' → logprob: -0.7585080862045288
    3. '   ' → logprob: -7.633508205413818
    4. ' read' → logprob: -9.25850772857666
    5. '<int' → logprob: -9.75850772857666
    6. '(int' → logprob: -10.38350772857666
    7. '=int' → logprob: -10.50850772857666
    8. ' next' → logprob: -10.75850772857666
    9. ' buff' → logprob: -10.75850772857666
    10. ' readline' → logprob: -10.88350772857666

Token 58: ' integer' (ID: 16336)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.04763953387737274
    2. ' integer' → logprob: -3.2976396083831787
    3. ' parsed' → logprob: -4.9226393699646
    4. 'next' → logprob: -6.5476393699646
    5. ' int' → logprob: -8.172639846801758
    6. 'n' → logprob: -8.672639846801758
    7. ' input' → logprob: -9.047639846801758
    8. 'integer' → logprob: -9.172639846801758
    9. 'int' → logprob: -9.422639846801758
    10. 'parsed' → logprob: -10.422639846801758

Token 59: ' read' (ID: 1729)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.19297026097774506
    2. '
' → logprob: -2.9429702758789062
    3. '<|end|>' → logprob: -4.067970275878906
    4. ':' → logprob: -4.442970275878906
    5. '   ' → logprob: -4.442970275878906
    6. ' value' → logprob: -4.567970275878906
    7. '()
' → logprob: -4.692970275878906
    8. 'value' → logprob: -4.817970275878906
    9. '`' → logprob: -5.192970275878906
    10. '\n' → logprob: -5.317970275878906

Token 60: ' from' (ID: 591)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.09052710980176926
    2. '(' → logprob: -2.715527057647705
    3. '(
' → logprob: -4.590527057647705
    4. '()
' → logprob: -5.340527057647705
    5. '   ' → logprob: -6.215527057647705
    6. '\n' → logprob: -7.090527057647705
    7. ')' → logprob: -7.340527057647705
    8. '()\' → logprob: -7.965527057647705
    9. '```' → logprob: -8.090527534484863
    10. '().' → logprob: -8.340527534484863

Token 61: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.4007421135902405
    2. 'input' → logprob: -1.6507420539855957
    3. ' the' → logprob: -2.4007420539855957
    4. ' sys' → logprob: -4.025742053985596
    5. 'sys' → logprob: -4.650742053985596
    6. 'the' → logprob: -4.900742053985596
    7. 'stdin' → logprob: -5.275742053985596
    8. ' stdin' → logprob: -5.900742053985596
    9. ' readline' → logprob: -6.775742053985596
    10. 'line' → logprob: -6.900742053985596

Token 62: '.
' (ID: 558)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6370558738708496
    2. '()' → logprob: -2.2620558738708496
    3. ':' → logprob: -2.6370558738708496
    4. '   ' → logprob: -3.0120558738708496
    5. ')' → logprob: -3.0120558738708496
    6. '():' → logprob: -3.1370558738708496
    7. '\' → logprob: -3.3870558738708496
    8. '(
' → logprob: -4.01205587387085
    9. '()
' → logprob: -4.26205587387085
    10. '
' → logprob: -4.26205587387085

Token 63: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07320550084114075
    2. '\n' → logprob: -3.1982054710388184
    3. '"""' → logprob: -4.448205471038818
    4. ')' → logprob: -5.198205471038818
    5. '"""
' → logprob: -5.323205471038818
    6. '    
' → logprob: -6.573205471038818
    7. '"\' → logprob: -6.698205471038818
    8. '\' → logprob: -7.073205471038818
    9. ' 
' → logprob: -7.448205471038818
    10. ' ' → logprob: -7.573205471038818

Token 64: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43744394183158875
    2. '\n' → logprob: -1.4374439716339111
    3. '"""' → logprob: -2.812443971633911
    4. '"""
' (adapté à ' """
') → logprob: -3.937443971633911
    5. ')' → logprob: -4.187443733215332
    6. '"\' → logprob: -5.562443733215332
    7. '""' → logprob: -5.687443733215332
    8. '    
' → logprob: -5.687443733215332
    9. '\' → logprob: -5.812443733215332
    10. '  
' → logprob: -5.812443733215332

Token 65: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05716576427221298
    2. 'return' → logprob: -3.0571658611297607
    3. 'line' → logprob: -4.807165622711182
    4. ' line' → logprob: -8.55716609954834
    5. ' return' → logprob: -9.30716609954834
    6. 'data' → logprob: -9.55716609954834
    7. '    
' → logprob: -12.43216609954834
    8. 'int' → logprob: -12.93216609954834
    9. 'raw' → logprob: -13.05716609954834
    10. ' ' → logprob: -13.55716609954834

Token 66: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.14005175232887268
    2. '   ' → logprob: -2.76505184173584
    3. ' return' → logprob: -2.89005184173584
    4. 'line' → logprob: -4.51505184173584
    5. ' line' → logprob: -7.14005184173584
    6. 'int' → logprob: -8.26505184173584
    7. 'data' → logprob: -9.26505184173584
    8. 's' → logprob: -10.89005184173584
    9. 'raw' → logprob: -11.76505184173584
    10. 'value' → logprob: -12.01505184173584

Token 67: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.07889232039451599
    2. 'int' → logprob: -2.578892230987549
    3. '   ' → logprob: -13.078892707824707
    4. '(int' → logprob: -15.328892707824707
    5. ' ' → logprob: -15.828892707824707
    6. '  ' → logprob: -16.82889175415039
    7. '	int' → logprob: -17.32889175415039
    8. '<int' → logprob: -17.82889175415039
    9. '=int' → logprob: -18.07889175415039
    10. '[int' → logprob: -18.07889175415039

Token 68: '(buff' (ID: 89821)
  Prédit: '(read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(read' → logprob: -0.20834344625473022
    2. '(' → logprob: -1.708343505859375
    3. '(buff' → logprob: -5.208343505859375
    4. '(sys' → logprob: -6.583343505859375
    5. '(line' → logprob: -11.083343505859375
    6. 'read' → logprob: -11.458343505859375
    7. ' (' → logprob: -12.083343505859375
    8. '(input' → logprob: -12.458343505859375
    9. '(open' → logprob: -12.708343505859375
    10. '(
' → logprob: -12.958343505859375

Token 69: '_read' (ID: 14291)
  Prédit: '_read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_read' → logprob: -1.1472419600977446e-06
    2. '_decode' → logprob: -15.250000953674316
    3. 'read' → logprob: -15.375000953674316
    4. '_READ' → logprob: -15.875000953674316
    5. '_' → logprob: -16.000001907348633
    6. '_reads' → logprob: -16.375001907348633
    7. 'b' → logprob: -16.750001907348633
    8. '_write' → logprob: -17.000001907348633
    9. ')' → logprob: -17.000001907348633
    10. ' _' → logprob: -17.125001907348633

Token 70: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -1.3856492842023727e-06
    2. '_line' → logprob: -14.875000953674316
    3. '.readline' → logprob: -15.000000953674316
    4. 'ine' → logprob: -15.125000953674316
    5. 'read' → logprob: -15.250000953674316
    6. 'eline' → logprob: -16.000001907348633
    7. 'write' → logprob: -19.375001907348633
    8. 'LINE' → logprob: -19.500001907348633
    9. ' readline' → logprob: -19.625001907348633
    10. ' line' → logprob: -19.875001907348633

Token 71: '())

' (ID: 27654)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.41194039583206177
    2. '())' → logprob: -1.661940336227417
    3. '()' → logprob: -1.911940336227417
    4. '(' → logprob: -9.786940574645996
    5. ' ())' → logprob: -12.161940574645996
    6. '()[' → logprob: -12.661940574645996
    7. ')' → logprob: -13.161940574645996
    8. '();)' → logprob: -13.661940574645996
    9. '()]' → logprob: -14.036940574645996
    10. '()
' → logprob: -14.536940574645996

Token 72: 'def' (ID: 1314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08067696541547775
    2. '(' → logprob: -2.580677032470703
    3. '()\' → logprob: -7.205677032470703
    4. '()
' → logprob: -7.830677032470703
    5. '().' → logprob: -8.830677032470703
    6. '(
' → logprob: -8.955677032470703
    7. '(\' → logprob: -9.205677032470703
    8. '\n' → logprob: -9.330677032470703
    9. '()

' → logprob: -9.955677032470703
    10. ')' → logprob: -10.330677032470703

Token 73: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.011217346414923668
    2. 'read' → logprob: -4.51121711730957
    3. ' readline' → logprob: -9.38621711730957
    4. '_read' → logprob: -9.76121711730957
    5. ' reads' → logprob: -11.88621711730957
    6. '	read' → logprob: -11.88621711730957
    7. ' ' → logprob: -12.76121711730957
    8. ' main' → logprob: -12.88621711730957
    9. ' ()' → logprob: -13.38621711730957
    10. ' write' → logprob: -13.38621711730957

Token 74: '_int' (ID: 12285)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.0841551199555397
    2. '_' → logprob: -3.2091550827026367
    3. '_int' → logprob: -3.3341550827026367
    4. '_str' → logprob: -6.209155082702637
    5. '_list' → logprob: -6.834155082702637
    6. '()' → logprob: -7.584155082702637
    7. '_string' → logprob: -7.959155082702637
    8. 'line' → logprob: -8.334155082702637
    9. 'int' → logprob: -9.334155082702637
    10. '(' → logprob: -9.834155082702637

Token 75: '_n' (ID: 2170)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.22265498340129852
    2. 's' → logprob: -2.3476550579071045
    3. '()' → logprob: -2.8476550579071045
    4. 'line' → logprob: -3.5976550579071045
    5. '_list' → logprob: -4.097654819488525
    6. '_array' → logprob: -6.722654819488525
    7. '_lines' → logprob: -8.097655296325684
    8. 'list' → logprob: -9.097655296325684
    9. '_LINE' → logprob: -9.347655296325684
    10. 'Line' → logprob: -9.597655296325684

Token 76: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03209443390369415
    2. '_' → logprob: -4.657094478607178
    3. '():' → logprob: -5.157094478607178
    4. '_lines' → logprob: -6.282094478607178
    5. 'def' → logprob: -6.407094478607178
    6. 'umbers' → logprob: -6.407094478607178
    7. 's' → logprob: -6.532094478607178
    8. '```' → logprob: -6.532094478607178
    9. '()]' → logprob: -6.907094478607178
    10. '(' → logprob: -7.157094478607178

Token 77: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.006417401600629091
    2. '()' → logprob: -5.131417274475098
    3. '():
' → logprob: -7.756417274475098
    4. ' ():' → logprob: -11.131417274475098
    5. '(' → logprob: -11.506417274475098
    6. ' ()' → logprob: -12.006417274475098
    7. '(n' → logprob: -12.131417274475098
    8. 's' → logprob: -12.131417274475098
    9. '():

' → logprob: -12.631417274475098
    10. ':' → logprob: -12.881417274475098

Token 78: ' """
' (ID: 7037)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.015437303110957146
    2. '()' → logprob: -4.765437126159668
    3. '():
' → logprob: -5.140437126159668
    4. ' ():' → logprob: -8.015437126159668
    5. '   ' → logprob: -8.515437126159668
    6. ':' → logprob: -8.640437126159668
    7. ' ()' → logprob: -9.640437126159668
    8. '(n' → logprob: -10.265437126159668
    9. '):' → logprob: -10.515437126159668
    10. '(' → logprob: -10.640437126159668

Token 79: '   ' (ID: 271)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06472893804311752
    2. ')' → logprob: -3.1897289752960205
    3. '():' → logprob: -4.314728736877441
    4. '   ' → logprob: -5.564728736877441
    5. '*' → logprob: -6.314728736877441
    6. '):
' → logprob: -6.814728736877441
    7. ':' → logprob: -7.689728736877441
    8. '()' → logprob: -7.939728736877441
    9. '**' → logprob: -9.064728736877441
    10. ' ):' → logprob: -9.439728736877441

Token 80: ' Reads' (ID: 88839)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.09154613316059113
    2. '():' → logprob: -2.466546058654785
    3. ')' → logprob: -7.591546058654785
    4. '()*' → logprob: -7.966546058654785
    5. '().' → logprob: -8.091546058654785
    6. '())' → logprob: -8.091546058654785
    7. '():
' → logprob: -8.091546058654785
    8. '()
' → logprob: -8.716546058654785
    9. 'def' → logprob: -9.591546058654785
    10. ' ()' → logprob: -9.716546058654785

Token 81: ' a' (ID: 261)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.05618488788604736
    2. '():' → logprob: -2.931184768676758
    3. '()*' → logprob: -7.681184768676758
    4. '().' → logprob: -8.681184768676758
    5. ' ()' → logprob: -8.681184768676758
    6. '():
' → logprob: -8.681184768676758
    7. 'line' → logprob: -9.181184768676758
    8. '()[' → logprob: -10.181184768676758
    9. '()>' → logprob: -10.556184768676758
    10. '()<' → logprob: -10.806184768676758

Token 82: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.7873393893241882
    2. ')' → logprob: -1.662339448928833
    3. ' list' → logprob: -2.037339448928833
    4. '()' → logprob: -2.287339448928833
    5. 'line' → logprob: -2.912339448928833
    6. 'list' → logprob: -3.912339448928833
    7. 'n' → logprob: -4.287339210510254
    8. ' n' → logprob: -5.037339210510254
    9. ' )' → logprob: -5.037339210510254
    10. ' single' → logprob: -5.037339210510254

Token 83: ' of' (ID: 328)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.11290600150823593
    2. '()' → logprob: -2.237905979156494
    3. ')' → logprob: -10.487906455993652
    4. '(' → logprob: -11.112906455993652
    5. '.' → logprob: -11.237906455993652
    6. '()
' → logprob: -11.487906455993652
    7. '()[' → logprob: -12.362906455993652
    8. '())' → logprob: -12.862906455993652
    9. '()

' → logprob: -13.487906455993652
    10. '   ' → logprob: -13.612906455993652

Token 84: ' space' (ID: 4918)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.21522080898284912
    2. ')' → logprob: -1.7152208089828491
    3. '().' → logprob: -5.215220928192139
    4. ' ()' → logprob: -5.215220928192139
    5. '())' → logprob: -6.465220928192139
    6. ' )' → logprob: -8.71522045135498
    7. 'tokens' → logprob: -9.09022045135498
    8. '(' → logprob: -9.34022045135498
    9. ' ' → logprob: -9.59022045135498
    10. '```' → logprob: -9.59022045135498

Token 85: '-separated' (ID: 189658)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.08339624851942062
    2. '()' → logprob: -3.3333961963653564
    3. '-separated' → logprob: -3.7083961963653564
    4. '.split' → logprob: -5.0833964347839355
    5. ')' → logprob: -5.3333964347839355
    6. ')-' → logprob: -5.8333964347839355
    7. '()-' → logprob: -6.7083964347839355
    8. '.strip' → logprob: -7.2083964347839355
    9. '.' → logprob: -7.4583964347839355
    10. ' separated' → logprob: -7.5833964347839355

Token 86: ' integers' (ID: 54912)
  Prédit: ' integers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' integers' → logprob: -0.5197989344596863
    2. 'inte' → logprob: -1.019798994064331
    3. 'ints' → logprob: -3.644798994064331
    4. '()' → logprob: -4.019798755645752
    5. 'int' → logprob: -7.644798755645752
    6. ' ints' → logprob: -10.26979923248291
    7. ')' → logprob: -10.89479923248291
    8. '(int' → logprob: -11.26979923248291
    9. 'numbers' → logprob: -11.64479923248291
    10. 's' → logprob: -11.64479923248291

Token 87: ' from' (ID: 591)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.024152616038918495
    2. '()' → logprob: -3.7741525173187256
    3. '():
' → logprob: -7.274152755737305
    4. '().' → logprob: -9.149152755737305
    5. '):' → logprob: -10.149152755737305
    6. '(' → logprob: -10.524152755737305
    7. ' ():' → logprob: -11.274152755737305
    8. '())' → logprob: -11.899152755737305
    9. '():

' → logprob: -11.899152755737305
    10. ')' → logprob: -12.524152755737305

Token 88: ' standard' (ID: 7024)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4192408621311188
    2. 'buff' → logprob: -1.6692408323287964
    3. ' buff' → logprob: -2.669240951538086
    4. ' the' → logprob: -4.044240951538086
    5. ' input' → logprob: -4.044240951538086
    6. 'input' → logprob: -4.169240951538086
    7. 'the' → logprob: -4.544240951538086
    8. '()' → logprob: -4.919240951538086
    9. '```' → logprob: -5.419240951538086
    10. ' ' → logprob: -5.794240951538086

Token 89: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.35051754117012024
    2. ' input' → logprob: -1.2255175113677979
    3. '_input' → logprob: -6.350517749786377
    4. '(input' → logprob: -8.975517272949219
    5. '(' → logprob: -9.100517272949219
    6. ')' → logprob: -10.475517272949219
    7. '()' → logprob: -10.975517272949219
    8. '```' → logprob: -11.600517272949219
    9. '_' → logprob: -11.975517272949219
    10. 'import' → logprob: -12.225517272949219

Token 90: '.

' (ID: 364)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.13232067227363586
    2. '():' → logprob: -2.1323206424713135
    3. ')' → logprob: -5.882320880889893
    4. '):' → logprob: -7.257320880889893
    5. '():
' → logprob: -7.507320880889893
    6. ' ()' → logprob: -7.757320880889893
    7. '())' → logprob: -8.007320404052734
    8. '().' → logprob: -8.507320404052734
    9. '()
' → logprob: -9.257320404052734
    10. '(' → logprob: -9.382320404052734

Token 91: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003714569378644228
    2. '():' → logprob: -6.378714561462402
    3. '):' → logprob: -7.003714561462402
    4. '()' → logprob: -7.878714561462402
    5. ')' → logprob: -8.253714561462402
    6. 'def' → logprob: -8.628714561462402
    7. '):
' → logprob: -9.378714561462402
    8. '():
' → logprob: -9.503714561462402
    9. ' ' → logprob: -10.503714561462402
    10. '```' → logprob: -10.753714561462402

Token 92: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.055556852370500565
    2. 'return' → logprob: -4.055556774139404
    3. ' return' → logprob: -4.055556774139404
    4. ' ' → logprob: -4.805556774139404
    5. ')' → logprob: -5.930556774139404
    6. ' 
' → logprob: -6.430556774139404
    7. '    
' → logprob: -6.805556774139404
    8. '  
' → logprob: -6.930556774139404
    9. '
' → logprob: -7.180556774139404
    10. '```' → logprob: -7.430556774139404

Token 93: ':
' (ID: 734)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.20494171977043152
    2. '()' → logprob: -1.829941749572754
    3. '(' → logprob: -3.954941749572754
    4. ':' → logprob: -6.079941749572754
    5. '   ' → logprob: -6.829941749572754
    6. ' ()' → logprob: -7.079941749572754
    7. ' ():' → logprob: -7.704941749572754
    8. '()[' → logprob: -8.579941749572754
    9. '():
' → logprob: -8.829941749572754
    10. ' (' → logprob: -9.079941749572754

Token 94: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5345726609230042
    2. ' list' → logprob: -1.4095726013183594
    3. ' []' → logprob: -2.2845726013183594
    4. ' [' → logprob: -3.2845726013183594
    5. '    ' → logprob: -4.659572601318359
    6. '[' → logprob: -5.159572601318359
    7. '[int' → logprob: -5.659572601318359
    8. 'list' → logprob: -5.784572601318359
    9. '[]' → logprob: -5.784572601318359
    10. ' map' → logprob: -6.534572601318359

Token 95: ' List' (ID: 2655)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.19718767702579498
    2. ' list' → logprob: -2.197187662124634
    3. 'List' (adapté à ' List') → logprob: -2.697187662124634
    4. ' List' → logprob: -7.822187900543213
    5. '[list' → logprob: -11.072187423706055
    6. '   ' → logprob: -11.197187423706055
    7. '[List' → logprob: -11.197187423706055
    8. '[' → logprob: -12.322187423706055
    9. 'map' → logprob: -13.322187423706055
    10. '_list' → logprob: -13.572187423706055

Token 96: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -2.2200749754119897e-06
    2. '[' → logprob: -13.125001907348633
    3. '<int' → logprob: -17.000001907348633
    4. '[Int' → logprob: -17.250001907348633
    5. ' of' → logprob: -17.375001907348633
    6. '[
' → logprob: -17.625001907348633
    7. '[str' → logprob: -18.750001907348633
    8. '[List' → logprob: -18.750001907348633
    9. ':' → logprob: -19.125001907348633
    10. '```' → logprob: -19.375001907348633

Token 97: ']:' (ID: 12433)
  Prédit: ']:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.38692140579223633
    2. ']' → logprob: -1.1369214057922363
    3. '"]:' → logprob: -10.636920928955078
    4. ']:
' → logprob: -11.761920928955078
    5. ']:
' → logprob: -12.511920928955078
    6. '[int' → logprob: -12.511920928955078
    7. '):' → logprob: -12.636920928955078
    8. '']:' → logprob: -13.136920928955078
    9. '"]' → logprob: -14.011920928955078
    10. ']):' → logprob: -14.011920928955078

Token 98: ' The' (ID: 623)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.10086341947317123
    2. '   ' → logprob: -3.475863456726074
    3. ' List' → logprob: -3.600863456726074
    4. 'List' → logprob: -3.850863456726074
    5. 'list' → logprob: -4.225863456726074
    6. ' map' → logprob: -6.975863456726074
    7. ' [' → logprob: -8.475863456726074
    8. '[int' → logprob: -8.600863456726074
    9. ' A' → logprob: -9.350863456726074
    10. ' The' → logprob: -9.725863456726074

Token 99: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.01753552258014679
    2. ' integers' → logprob: -4.39253568649292
    3. 'list' → logprob: -6.76753568649292
    4. ' line' → logprob: -7.01753568649292
    5. ' map' → logprob: -7.76753568649292
    6. ' next' → logprob: -7.76753568649292
    7. ' [' → logprob: -7.76753568649292
    8. ' result' → logprob: -8.017535209655762
    9. '[int' → logprob: -8.392535209655762
    10. ' parsed' → logprob: -8.392535209655762

Token 100: ' of' (ID: 328)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009439070709049702
    2. '()' → logprob: -5.134438991546631
    3. ' of' → logprob: -6.259438991546631
    4. '[' → logprob: -8.009439468383789
    5. '(buff' → logprob: -8.009439468383789
    6. 'of' → logprob: -8.134439468383789
    7. '(
' → logprob: -8.509439468383789
    8. '(map' → logprob: -9.509439468383789
    9. '(line' → logprob: -9.634439468383789
    10. '(range' → logprob: -10.134439468383789

Token 101: ' integers' (ID: 54912)
  Prédit: ' integers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' integers' → logprob: -0.007347969803959131
    2. 'inte' → logprob: -5.75734806060791
    3. ' ints' → logprob: -5.75734806060791
    4. 'int' → logprob: -8.00734806060791
    5. ' int' → logprob: -8.00734806060791
    6. 'ints' → logprob: -8.25734806060791
    7. ' read' → logprob: -10.13234806060791
    8. ' tokens' → logprob: -11.38234806060791
    9. ' integer' → logprob: -11.50734806060791
    10. '[int' → logprob: -12.75734806060791

Token 102: ' read' (ID: 1729)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.010832272469997406
    2. '<|end|>' → logprob: -5.3858323097229
    3. '(' → logprob: -6.2608323097229
    4. '[]' → logprob: -7.0108323097229
    5. '[' → logprob: -7.6358323097229
    6. ')' → logprob: -7.7608323097229
    7. '()]' → logprob: -7.8858323097229
    8. ']' → logprob: -8.260831832885742
    9. '()[' → logprob: -8.510831832885742
    10. '<|end|>' → logprob: -8.635831832885742

Token 103: ' from' (ID: 591)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0076650637201964855
    2. '(' → logprob: -5.382665157318115
    3. 'from' → logprob: -6.382665157318115
    4. '   ' → logprob: -7.882665157318115
    5. '().' → logprob: -8.632664680480957
    6. '()]' → logprob: -8.632664680480957
    7. ']' → logprob: -9.132664680480957
    8. ' from' → logprob: -9.257664680480957
    9. '()
' → logprob: -9.382664680480957
    10. '()[' → logprob: -9.757664680480957

Token 104: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7617778182029724
    2. ' input' → logprob: -1.6367778778076172
    3. 'buff' → logprob: -1.6367778778076172
    4. 'sys' → logprob: -3.136777877807617
    5. ' buff' → logprob: -3.386777877807617
    6. 'the' → logprob: -3.886777877807617
    7. ' sys' → logprob: -3.886777877807617
    8. 'read' → logprob: -4.761777877807617
    9. ' the' → logprob: -5.011777877807617
    10. 'list' → logprob: -5.636777877807617

Token 105: '.
' (ID: 558)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.2506946325302124
    2. '()' → logprob: -2.250694751739502
    3. '):' → logprob: -2.375694751739502
    4. '():
' → logprob: -4.250694751739502
    5. ')' → logprob: -6.000694751739502
    6. '   ' → logprob: -6.125694751739502
    7. ':' → logprob: -6.250694751739502
    8. '):
' → logprob: -6.375694751739502
    9. '()
' → logprob: -8.500694274902344
    10. ']:' → logprob: -8.500694274902344

Token 106: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026344774290919304
    2. '():' → logprob: -4.4013447761535645
    3. '():
' → logprob: -4.6513447761535645
    4. '):
' → logprob: -6.2763447761535645
    5. '):' → logprob: -7.2763447761535645
    6. '()' → logprob: -7.4013447761535645
    7. ')' → logprob: -8.276344299316406
    8. '    
' → logprob: -8.276344299316406
    9. ':
' → logprob: -9.151344299316406
    10. '
' → logprob: -9.151344299316406

Token 107: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18182910978794098
    2. '():' → logprob: -2.6818292140960693
    3. '):' → logprob: -3.1818292140960693
    4. '):
' → logprob: -3.4318292140960693
    5. '():
' → logprob: -4.30682897567749
    6. ')' → logprob: -5.68182897567749
    7. ':
' → logprob: -5.80682897567749
    8. ':' → logprob: -6.30682897567749
    9. '()' → logprob: -7.30682897567749
    10. 'return' → logprob: -8.056829452514648

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011603388702496886
    2. 'return' → logprob: -6.876160144805908
    3. ' return' → logprob: -9.001160621643066
    4. 'map' → logprob: -14.251160621643066
    5. 'line' → logprob: -14.376160621643066
    6. 'list' → logprob: -14.751160621643066
    7. '       ' → logprob: -14.751160621643066
    8. '  ' → logprob: -14.751160621643066
    9. ' map' → logprob: -15.126160621643066
    10. ' ' → logprob: -15.126160621643066

Token 109: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.23553475737571716
    2. ' return' → logprob: -1.6105347871780396
    3. '   ' → logprob: -4.61053466796875
    4. 'map' → logprob: -10.61053466796875
    5. ' list' → logprob: -10.86053466796875
    6. 'list' → logprob: -10.98553466796875
    7. ' map' → logprob: -10.98553466796875
    8. ' ' → logprob: -11.48553466796875
    9. 'data' → logprob: -11.73553466796875
    10. 'line' → logprob: -11.73553466796875

Token 110: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.048636533319950104
    2. 'list' → logprob: -3.0486364364624023
    3. ' ' → logprob: -11.173636436462402
    4. '[list' → logprob: -11.423636436462402
    5. '   ' → logprob: -11.798636436462402
    6. ' [' → logprob: -12.423636436462402
    7. '[' → logprob: -12.423636436462402
    8. ' map' → logprob: -12.798636436462402
    9. 'map' → logprob: -13.423636436462402
    10. '  ' → logprob: -13.423636436462402

Token 111: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -1.318681188422488e-05
    2. '(' → logprob: -11.25001335144043
    3. 'map' → logprob: -15.87501335144043
    4. '()' → logprob: -16.87501335144043
    5. '(int' → logprob: -18.25001335144043
    6. '(
' → logprob: -18.50001335144043
    7. ' map' → logprob: -19.00001335144043
    8. '	map' → logprob: -19.12501335144043
    9. '(ma' → logprob: -19.75001335144043
    10. '(m' → logprob: -19.87501335144043

Token 112: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.011088728904724121
    2. '(' → logprob: -4.511088848114014
    3. 'int' → logprob: -10.511088371276855
    4. '(
' → logprob: -12.511088371276855
    5. '<int' → logprob: -12.511088371276855
    6. ')' → logprob: -12.761088371276855
    7. '[int' → logprob: -14.261088371276855
    8. '=int' → logprob: -14.511088371276855
    9. ',int' → logprob: -14.636088371276855
    10. '(buff' → logprob: -14.761088371276855

Token 113: ',' (ID: 11)
  Prédit: '(buff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(buff' → logprob: -0.005107102915644646
    2. '(' → logprob: -6.1301069259643555
    3. '(sys' → logprob: -6.8801069259643555
    4. ',' → logprob: -7.1301069259643555
    5. '(read' → logprob: -7.2551069259643555
    6. '(b' → logprob: -8.380106925964355
    7. ',b' → logprob: -9.130106925964355
    8. ')' → logprob: -11.630106925964355
    9. 'buff' → logprob: -11.755106925964355
    10. ' (' → logprob: -12.380106925964355

Token 114: ' buff' (ID: 19397)
  Prédit: 'buff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'buff' → logprob: -0.49470001459121704
    2. ' buff' → logprob: -0.994700014591217
    3. ' readline' → logprob: -4.119699954986572
    4. 'read' → logprob: -6.244699954986572
    5. '(buff' → logprob: -7.119699954986572
    6. ' sys' → logprob: -7.869699954986572
    7. ' read' → logprob: -8.24470043182373
    8. 'sys' → logprob: -8.24470043182373
    9. '	buff' → logprob: -8.49470043182373
    10. ' ' → logprob: -9.24470043182373

Token 115: '_read' (ID: 14291)
  Prédit: '_read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_read' → logprob: -9.253090865968261e-06
    2. '_reads' → logprob: -13.250009536743164
    3. 'read' → logprob: -13.375009536743164
    4. '_READ' → logprob: -13.750009536743164
    5. '_write' → logprob: -13.875009536743164
    6. '```' → logprob: -14.250009536743164
    7. '_' → logprob: -14.500009536743164
    8. '(_' → logprob: -14.625009536743164
    9. '_decode' → logprob: -14.875009536743164
    10. 'Read' → logprob: -14.875009536743164

Token 116: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -4.274932143744081e-05
    2. '_line' → logprob: -10.500042915344238
    3. '_read' → logprob: -12.000042915344238
    4. 'read' → logprob: -12.000042915344238
    5. '.readline' → logprob: -13.750042915344238
    6. 'eline' → logprob: -13.875042915344238
    7. 'LINE' → logprob: -15.750042915344238
    8. 'pline' → logprob: -16.375041961669922
    9. 'oline' → logprob: -16.500041961669922
    10. 'only' → logprob: -16.875041961669922

Token 117: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.494741632603109e-05
    2. '()' → logprob: -10.12508487701416
    3. '()))' → logprob: -10.12508487701416
    4. '))' → logprob: -12.62508487701416
    5. '(' → logprob: -14.50008487701416
    6. ' ().' → logprob: -15.12508487701416
    7. '()[' → logprob: -16.000085830688477
    8. '())' → logprob: -16.000085830688477
    9. ')' → logprob: -16.125085830688477
    10. '())))' → logprob: -17.000085830688477

Token 118: 'split' (ID: 13627)
  Prédit: 'rstrip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.3650262653827667
    2. 'decode' → logprob: -1.8650262355804443
    3. 'strip' → logprob: -2.3650262355804443
    4. 'split' → logprob: -2.8650262355804443
    5. '.rstrip' → logprob: -14.740026473999023
    6. '.decode' → logprob: -15.865026473999023
    7. ' strip' → logprob: -16.240026473999023
    8. '```' → logprob: -16.365026473999023
    9. ' decode' → logprob: -16.615026473999023
    10. 'read' → logprob: -17.240026473999023

Token 119: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.02156873792409897
    2. '()' → logprob: -3.896568775177002
    3. 'b' → logprob: -7.771568775177002
    4. '(' → logprob: -8.396568298339844
    5. '))' → logprob: -8.396568298339844
    6. '())' → logprob: -9.646568298339844
    7. '()))
' → logprob: -9.896568298339844
    8. '(b' → logprob: -10.646568298339844
    9. '()));' → logprob: -12.146568298339844
    10. '(),' → logprob: -13.146568298339844

Token 120: '#' (ID: 2)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.05465182662010193
    2. '(' → logprob: -3.5546517372131348
    3. ')' → logprob: -4.304651737213135
    4. '()
' → logprob: -6.179651737213135
    5. '<|end|>' → logprob: -6.179651737213135
    6. '(
' → logprob: -6.804651737213135
    7. '
' → logprob: -6.929651737213135
    8. '\n' → logprob: -6.929651737213135
    9. '#' → logprob: -7.179651737213135
    10. '()

' → logprob: -7.554651737213135

Token 121: ' Global' (ID: 11459)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0071898577734827995
    2. '#' → logprob: -6.007189750671387
    3. '\n' → logprob: -6.382189750671387
    4. ' def' → logprob: -7.007189750671387
    5. '
' → logprob: -7.132189750671387
    6. '\' → logprob: -7.382189750671387
    7. 'd' → logprob: -8.382189750671387
    8. '(' → logprob: -9.257189750671387
    9. '<|end|>' → logprob: -10.007189750671387
    10. 'n' → logprob: -10.132189750671387

Token 122: ' variable' (ID: 11076)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05535205453634262
    2. ' _' → logprob: -3.930351972579956
    3. '_counter' → logprob: -4.055352210998535
    4. ' ' → logprob: -5.430352210998535
    5. '_count' → logprob: -5.430352210998535
    6. '_counts' → logprob: -6.805352210998535
    7. '_input' → logprob: -6.930352210998535
    8. '_state' → logprob: -6.930352210998535
    9. '_variables' → logprob: -7.555352210998535
    10. '_map' → logprob: -7.930352210998535

Token 123: ' for' (ID: 395)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6540102362632751
    2. ' ' → logprob: -1.02901029586792
    3. ' _' → logprob: -2.77901029586792
    4. 's' → logprob: -4.15401029586792
    5. ' s' → logprob: -4.40401029586792
    6. '_count' → logprob: -5.02901029586792
    7. 'count' → logprob: -5.40401029586792
    8. '_counter' → logprob: -5.40401029586792
    9. ' count' → logprob: -5.90401029586792
    10. 'counter' → logprob: -6.15401029586792

Token 124: ' caching' (ID: 104247)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5498520135879517
    2. ' input' → logprob: -2.674851894378662
    3. 'cache' → logprob: -2.674851894378662
    4. 'max' → logprob: -3.299851894378662
    5. 'counter' → logprob: -3.299851894378662
    6. 'n' → logprob: -3.424851894378662
    7. 'memo' → logprob: -3.549851894378662
    8. 'dp' → logprob: -4.299851894378662
    9. 'MAX' → logprob: -4.299851894378662
    10. 'N' → logprob: -4.549851894378662

Token 125: ' power' (ID: 3470)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.46393704414367676
    2. '_cache' → logprob: -1.2139370441436768
    3. 'memo' → logprob: -3.3389370441436768
    4. '_counter' → logprob: -4.338936805725098
    5. '_dp' → logprob: -5.963936805725098
    6. 'dp' → logprob: -6.088936805725098
    7. 'results' → logprob: -6.213936805725098
    8. 'counter' → logprob: -6.213936805725098
    9. '_results' → logprob: -6.463936805725098
    10. 'result' → logprob: -6.588936805725098

Token 126: ' values' (ID: 4824)
  Prédit: '_cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.16181185841560364
    2. 's' → logprob: -2.1618118286132812
    3. '_cached' → logprob: -4.161811828613281
    4. 'cache' → logprob: -5.536811828613281
    5. '_' → logprob: -5.911811828613281
    6. '_s' → logprob: -6.036811828613281
    7. '_result' → logprob: -6.661811828613281
    8. ' =' → logprob: -6.786811828613281
    9. '_results' → logprob: -7.036811828613281
    10. 'pow' → logprob: -7.286811828613281

Token 127: ' for' (ID: 395)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.29532477259635925
    2. 'pow' → logprob: -1.4203248023986816
    3. 'cache' → logprob: -4.795324802398682
    4. '_power' → logprob: -6.045324802398682
    5. 'powers' → logprob: -6.920324802398682
    6. '_pow' → logprob: -7.545324802398682
    7. 'max' → logprob: -7.920324802398682
    8. 'dp' → logprob: -8.170324325561523
    9. '
' → logprob: -8.170324325561523
    10. '_cache' → logprob: -8.670324325561523

Token 128: ' rolling' (ID: 30530)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.05595462769269943
    2. ' pow' → logprob: -3.555954694747925
    3. 'fast' → logprob: -4.680954456329346
    4. ' fast' → logprob: -5.180954456329346
    5. 'powers' → logprob: -6.430954456329346
    6. 'def' → logprob: -6.555954456329346
    7. '2' → logprob: -6.680954456329346
    8. ' ' → logprob: -6.805954456329346
    9. ' exponent' → logprob: -7.180954456329346
    10. ' powers' → logprob: -7.430954456329346

Token 129: ' hash' (ID: 10691)
  Prédit: '_hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hash' → logprob: -0.5726789832115173
    2. ' hash' → logprob: -1.197679042816162
    3. 'hash' → logprob: -2.072679042816162
    4. ' hashes' → logprob: -5.322679042816162
    5. '_' → logprob: -6.822679042816162
    6. '_h' → logprob: -7.822679042816162
    7. ' hashing' → logprob: -8.072678565979004
    8. 'pow' → logprob: -8.572678565979004
    9. '_mod' → logprob: -8.697678565979004
    10. 'Hash' → logprob: -8.822678565979004

Token 130: ' computations' (ID: 192859)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.5774533152580261
    2. 'pow' → logprob: -0.9524533152580261
    3. '_power' → logprob: -4.077453136444092
    4. '_pow' → logprob: -4.202453136444092
    5. '_p' → logprob: -4.702453136444092
    6. '_' → logprob: -5.827453136444092
    7. 'hash' → logprob: -6.202453136444092
    8. 'powers' → logprob: -6.452453136444092
    9. 'cache' → logprob: -6.702453136444092
    10. 'p' → logprob: -6.827453136444092

Token 131: '
' (ID: 198)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.4807857275009155
    2. 'pow' → logprob: -1.2307857275009155
    3. '_power' → logprob: -3.355785846710205
    4. '_pow' → logprob: -3.730785846710205
    5. '_p' → logprob: -4.855785846710205
    6. '_' → logprob: -5.105785846710205
    7. 'powers' → logprob: -5.230785846710205
    8. 'hash' → logprob: -5.605785846710205
    9. 'cache' → logprob: -6.480785846710205
    10. 'p' → logprob: -6.855785846710205

Token 132: 'gp' (ID: 45360)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.5135777592658997
    2. 'pow' → logprob: -1.0135776996612549
    3. ' power' → logprob: -4.263577938079834
    4. 'hash' → logprob: -4.513577938079834
    5. '_pow' → logprob: -6.013577938079834
    6. '_power' → logprob: -6.138577938079834
    7. 'powers' → logprob: -6.138577938079834
    8. ' pow' → logprob: -6.388577938079834
    9. 'cache' → logprob: -6.513577938079834
    10. 'p' → logprob: -6.763577938079834

Token 133: 'w' (ID: 86)
  Prédit: '_cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.5112811923027039
    2. 'w' → logprob: -2.2612812519073486
    3. '_hash' → logprob: -2.2612812519073486
    4. 'ow' → logprob: -2.3862812519073486
    5. '_pow' → logprob: -2.7612812519073486
    6. '=' → logprob: -5.0112810134887695
    7. 'ower' → logprob: -5.1362810134887695
    8. ' =' → logprob: -5.6362810134887695
    9. '_power' → logprob: -6.0112810134887695
    10. '_p' → logprob: -6.0112810134887695

Token 134: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07252401858568192
    2. '=' → logprob: -3.572524070739746
    3. '_' → logprob: -3.572524070739746
    4. '_cache' → logprob: -5.572524070739746
    5. '=[]' → logprob: -5.697524070739746
    6. 'a' → logprob: -6.572524070739746
    7. '_vals' → logprob: -6.822524070739746
    8. '_values' → logprob: -7.197524070739746
    9. '_val' → logprob: -7.197524070739746
    10. 'd' → logprob: -7.447524070739746

Token 135: ' None' (ID: 4662)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10590951889753342
    2. '[]' → logprob: -2.730909585952759
    3. '{}' → logprob: -3.605909585952759
    4. 'default' → logprob: -5.35590934753418
    5. ' [' → logprob: -6.23090934753418
    6. '{' → logprob: -7.23090934753418
    7. ' defaultdict' → logprob: -7.73090934753418
    8. ' []' → logprob: -8.60590934753418
    9. 'dict' → logprob: -9.85590934753418
    10. ' {}' → logprob: -10.73090934753418

Token 136: '

' (ID: 279)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.476897269487381
    2. '=' → logprob: -1.2268972396850586
    3. 'def' → logprob: -2.6018972396850586
    4. '[' → logprob: -5.726897239685059
    5. ',' → logprob: -5.851897239685059
    6. '_' → logprob: -6.101897239685059
    7. ' ' → logprob: -7.101897239685059
    8. '#' → logprob: -7.351897239685059
    9. '
' → logprob: -7.851897239685059
    10. 'if' → logprob: -8.101897239685059

Token 137: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003056972986087203
    2. '#' → logprob: -6.12805700302124
    3. 'gp' → logprob: -8.253056526184082
    4. '=' → logprob: -8.753056526184082
    5. ' def' → logprob: -8.753056526184082
    6. ' =' → logprob: -10.003056526184082
    7. '[' → logprob: -10.128056526184082
    8. '<|end|>' → logprob: -10.128056526184082
    9. ')' → logprob: -10.378056526184082
    10. ',' → logprob: -10.503056526184082

Token 138: ' RH' (ID: 62712)
  Prédit: ' Rolling'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Rolling' → logprob: -0.6709187030792236
    2. ' ' → logprob: -1.0459187030792236
    3. ' Hash' → logprob: -2.1709187030792236
    4. ' Polynomial' → logprob: -4.6709184646606445
    5. ' String' → logprob: -5.5459184646606445
    6. ' _' → logprob: -6.0459184646606445
    7. ' Solution' → logprob: -6.2959184646606445
    8. ' Trie' → logprob: -7.6709184646606445
    9. ' Python' → logprob: -7.9209184646606445
    10. ' Rab' → logprob: -7.9209184646606445

Token 139: ':
' (ID: 734)
  Prédit: 'ash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ash' → logprob: -0.2224351167678833
    2. 'ashing' → logprob: -1.9724351167678833
    3. ':' → logprob: -3.0974349975585938
    4. 'asher' → logprob: -5.222434997558594
    5. 'ASH' → logprob: -5.472434997558594
    6. '():' → logprob: -5.847434997558594
    7. ':
' → logprob: -6.847434997558594
    8. '(' → logprob: -7.722434997558594
    9. '():
' → logprob: -8.847434997558594
    10. 'as' → logprob: -9.097434997558594

Token 140: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0013267839094623923
    2. ' :' → logprob: -7.001326560974121
    3. '(' → logprob: -8.376326560974121
    4. ':
' → logprob: -8.751326560974121
    5. '():' → logprob: -11.376326560974121
    6. '(object' → logprob: -12.751326560974121
    7. '):' → logprob: -13.001326560974121
    8. '<|end|>' → logprob: -13.001326560974121
    9. '   ' → logprob: -13.376326560974121
    10. '.' → logprob: -13.751326560974121

Token 141: ' """
' (ID: 7037)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.1150144636631012
    2. 'def' → logprob: -2.9900145530700684
    3. '   ' → logprob: -3.1150145530700684
    4. ' 
' → logprob: -5.740014553070068
    5. ' ' → logprob: -5.865014553070068
    6. ':' → logprob: -5.990014553070068
    7. '    ' → logprob: -6.365014553070068
    8. ':
' → logprob: -7.365014553070068
    9. ' """
' → logprob: -7.615014553070068
    10. ' class' → logprob: -7.990014553070068

Token 142: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.6116055250167847
    2. '   ' → logprob: -2.361605644226074
    3. ' """' → logprob: -2.611605644226074
    4. '"""
' → logprob: -2.611605644226074
    5. 'class' → logprob: -2.986605644226074
    6. 'init' → logprob: -2.986605644226074
    7. '__' → logprob: -3.361605644226074
    8. ' """
' → logprob: -3.611605644226074
    9. ' def' → logprob: -3.986605644226074
    10. 'def' → logprob: -4.111605644226074

Token 143: ' Rolling' (ID: 72538)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -1.1443496942520142
    2. ' Rolling' → logprob: -1.2693496942520142
    3. 'Rolling' (adapté à ' Rolling') → logprob: -2.3943495750427246
    4. 'def' → logprob: -2.6443495750427246
    5. ' A' → logprob: -2.7693495750427246
    6. 'class' → logprob: -2.7693495750427246
    7. ' """
' → logprob: -3.6443495750427246
    8. 'A' → logprob: -3.6443495750427246
    9. '"""
' → logprob: -4.144349575042725
    10. '"""' → logprob: -4.519349575042725

Token 144: ' Hash' (ID: 10242)
  Prédit: 'Hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Hash' → logprob: -0.018589545041322708
    2. ' hash' → logprob: -4.893589496612549
    3. ' Hash' → logprob: -4.893589496612549
    4. '_hash' → logprob: -6.018589496612549
    5. 'hash' → logprob: -7.518589496612549
    6. 'ash' → logprob: -8.643589973449707
    7. ' ' → logprob: -9.518589973449707
    8. 'Hasher' → logprob: -9.643589973449707
    9. 'Hashes' → logprob: -10.643589973449707
    10. '(hash' → logprob: -10.893589973449707

Token 145: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03954395279288292
    2. ':
' → logprob: -3.539543867111206
    3. '):' → logprob: -5.789544105529785
    4. '<|end|>' → logprob: -6.164544105529785
    5. '(' → logprob: -6.289544105529785
    6. '(object' → logprob: -7.039544105529785
    7. '{' → logprob: -8.039544105529785
    8. ')' → logprob: -8.289544105529785
    9. '():' → logprob: -8.539544105529785
    10. ' implementation' → logprob: -8.914544105529785

Token 146: 'RH' (ID: 92453)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.46443068981170654
    2. ')' → logprob: -1.5894306898117065
    3. '):
' → logprob: -2.089430809020996
    4. ' )' → logprob: -4.339430809020996
    5. 'string' → logprob: -4.589430809020996
    6. ' ):' → logprob: -4.589430809020996
    7. ' ):
' → logprob: -5.714430809020996
    8. ':' → logprob: -6.714430809020996
    9. ' string' → logprob: -7.214430809020996
    10. ' ' → logprob: -7.339430809020996

Token 147: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7446445822715759
    2. ')' → logprob: -1.1196446418762207
    3. '):
' → logprob: -1.6196446418762207
    4. ' )' → logprob: -8.869644165039062
    5. ' ):' → logprob: -9.119644165039062
    6. ':' → logprob: -9.369644165039062
    7. ')
' → logprob: -9.494644165039062
    8. ' ):
' → logprob: -9.619644165039062
    9. '):

' → logprob: -9.744644165039062
    10. '   ' → logprob: -10.494644165039062

Token 148: ' implementation' (ID: 13847)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05907605215907097
    2. '(' → logprob: -3.1840760707855225
    3. ')' → logprob: -5.059075832366943
    4. '<|end|>' → logprob: -5.184075832366943
    5. ':
' → logprob: -6.434075832366943
    6. '):' → logprob: -7.059075832366943
    7. '{' → logprob: -7.809075832366943
    8. '(
' → logprob: -8.184076309204102
    9. '_' → logprob: -9.059076309204102
    10. ' (' → logprob: -9.184076309204102

Token 149: ' for' (ID: 395)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.057099103927612305
    2. ':
' → logprob: -3.6820991039276123
    3. '):' → logprob: -4.307099342346191
    4. '<|end|>' → logprob: -4.682099342346191
    5. '   ' → logprob: -5.682099342346191
    6. ' for' → logprob: -6.432099342346191
    7. '):
' → logprob: -7.307099342346191
    8. ')' → logprob: -7.557099342346191
    9. '<|end|>' → logprob: -8.182099342346191
    10. '(object' → logprob: -8.682099342346191

Token 150: ' efficient' (ID: 12430)
  Prédit: ' strings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' strings' → logprob: -0.1642095297574997
    2. ' string' → logprob: -2.1642096042633057
    3. 'string' → logprob: -4.914209365844727
    4. ' substring' → logprob: -4.914209365844727
    5. ' ' → logprob: -5.039209365844727
    6. 'strings' → logprob: -5.664209365844727
    7. 'str' → logprob: -6.414209365844727
    8. ' prefix' → logprob: -6.539209365844727
    9. ' substr' → logprob: -6.789209365844727
    10. ' a' → logprob: -7.039209365844727

Token 151: ' substring' (ID: 89494)
  Prédit: ' substring'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' substring' → logprob: -0.6450180411338806
    2. ' string' → logprob: -0.7700180411338806
    3. 'string' → logprob: -5.520018100738525
    4. ' pattern' → logprob: -5.895018100738525
    5. ' strings' → logprob: -6.020018100738525
    6. ' substr' → logprob: -6.395018100738525
    7. 'substring' → logprob: -7.020018100738525
    8. ' prefix' → logprob: -9.270017623901367
    9. ' polynomial' → logprob: -9.395017623901367
    10. ' hashing' → logprob: -9.645017623901367

Token 152: ' hash' (ID: 10691)
  Prédit: ' hashing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hashing' → logprob: -0.002885471796616912
    2. ' hash' → logprob: -6.627885341644287
    3. ' computation' → logprob: -7.877885341644287
    4. '_hash' → logprob: -8.127885818481445
    5. ' hashes' → logprob: -8.752885818481445
    6. 's' → logprob: -9.002885818481445
    7. ' matching' → logprob: -9.127885818481445
    8. ' calculation' → logprob: -9.627885818481445
    9. 'hash' → logprob: -9.627885818481445
    10. ' string' → logprob: -10.002885818481445

Token 153: ' computation' (ID: 76411)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.19676721096038818
    2. ' computation' → logprob: -1.8217672109603882
    3. ' computations' → logprob: -4.821767330169678
    4. ' calculation' → logprob: -5.571767330169678
    5. ' calculations' → logprob: -6.071767330169678
    6. '   ' → logprob: -6.196767330169678
    7. 's' → logprob: -8.69676685333252
    8. ' construction' → logprob: -8.82176685333252
    9. ' generation' → logprob: -9.69676685333252
    10. ' ' → logprob: -9.94676685333252

Token 154: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3065696954727173
    2. '<|end|>' → logprob: -2.3065695762634277
    3. ':
' → logprob: -3.3065695762634277
    4. '):' → logprob: -3.4315695762634277
    5. ')' → logprob: -3.4315695762634277
    6. '.' → logprob: -3.5565695762634277
    7. '   ' → logprob: -3.9315695762634277
    8. '
' → logprob: -5.806569576263428
    9. '<|end|>' → logprob: -5.931569576263428
    10. ',' → logprob: -6.056569576263428

Token 155: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023229636251926422
    2. ')' → logprob: -4.273229598999023
    3. '
' → logprob: -5.148229598999023
    4. '    
' → logprob: -6.773229598999023
    5. ':' → logprob: -7.898229598999023
    6. '):
' → logprob: -8.398229598999023
    7. '```' → logprob: -8.398229598999023
    8. ' def' → logprob: -8.773229598999023
    9. 'def' → logprob: -9.023229598999023
    10. '    ' → logprob: -9.148229598999023

Token 156: ' Useful' (ID: 91124)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.582550585269928
    2. '   ' → logprob: -1.0825505256652832
    3. '
' → logprob: -3.207550525665283
    4. '"""' → logprob: -4.082550525665283
    5. '```' → logprob: -4.207550525665283
    6. ':' → logprob: -4.332550525665283
    7. ' """
' → logprob: -5.582550525665283
    8. ' """' → logprob: -5.707550525665283
    9. '    
' → logprob: -6.582550525665283
    10. ' 
' → logprob: -6.832550525665283

Token 157: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06999345868825912
    2. 'for' → logprob: -2.694993495941162
    3. ' ' → logprob: -11.069993019104004
    4. ' to' → logprob: -11.194993019104004
    5. '   ' → logprob: -11.194993019104004
    6. '    ' → logprob: -12.569993019104004
    7. ' in' → logprob: -12.819993019104004
    8. '  ' → logprob: -13.194993019104004
    9. 'to' → logprob: -13.194993019104004
    10. '```' → logprob: -13.694993019104004

Token 158: ' comparing' (ID: 42171)
  Prédit: ' substring'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' substring' → logprob: -0.41656431555747986
    2. ' string' → logprob: -1.1665643453598022
    3. 'substring' → logprob: -4.791564464569092
    4. 'string' → logprob: -4.791564464569092
    5. ' pattern' → logprob: -5.541564464569092
    6. ' strings' → logprob: -6.291564464569092
    7. ' fast' → logprob: -6.916564464569092
    8. ' efficient' → logprob: -7.041564464569092
    9. ' hashing' → logprob: -7.041564464569092
    10. ' substr' → logprob: -7.666564464569092

Token 159: ' slices' (ID: 60510)
  Prédit: ' strings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' strings' → logprob: -0.304135262966156
    2. ' substr' → logprob: -1.6791353225708008
    3. ' string' → logprob: -3.304135322570801
    4. ' substring' → logprob: -3.304135322570801
    5. ' sequences' → logprob: -6.929135322570801
    6. ' ' → logprob: -8.0541353225708
    7. ' different' → logprob: -8.0541353225708
    8. ' text' → logprob: -9.1791353225708
    9. ' s' → logprob: -9.6791353225708
    10. '_' → logprob: -9.8041353225708

Token 160: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.10386108607053757
    2. '(' → logprob: -2.728861093521118
    3. ' (' → logprob: -4.603860855102539
    4. 's' → logprob: -5.103860855102539
    5. '[' → logprob: -5.228860855102539
    6. ' ' → logprob: -5.978860855102539
    7. '   ' → logprob: -6.103860855102539
    8. '_' → logprob: -6.228860855102539
    9. ')' → logprob: -6.228860855102539
    10. ',' → logprob: -7.103860855102539

Token 161: ' bit' (ID: 3546)
  Prédit: ' strings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' strings' → logprob: -0.5937817096710205
    2. 'strings' → logprob: -0.8437817096710205
    3. ' sequences' → logprob: -5.218781471252441
    4. 'string' → logprob: -5.218781471252441
    5. 'str' → logprob: -6.093781471252441
    6. 'text' → logprob: -6.218781471252441
    7. ' text' → logprob: -7.093781471252441
    8. 'a' → logprob: -8.218781471252441
    9. ' a' → logprob: -8.343781471252441
    10. 's' → logprob: -8.343781471252441

Token 162: ' representations' (ID: 63700)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.15634679794311523
    2. 'strings' → logprob: -2.0313467979431152
    3. 'string' → logprob: -5.281346797943115
    4. ' s' → logprob: -6.281346797943115
    5. ' strings' → logprob: -6.406346797943115
    6. 'arrays' → logprob: -6.406346797943115
    7. 'm' → logprob: -6.656346797943115
    8. 'array' → logprob: -7.906346797943115
    9. ' arrays' → logprob: -8.156347274780273
    10. 'vectors' → logprob: -8.406347274780273

Token 163: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9516559839248657
    2. '.' → logprob: -1.3266559839248657
    3. ' of' → logprob: -2.076655864715576
    4. ' for' → logprob: -2.951655864715576
    5. ' in' → logprob: -3.076655864715576
    6. ' and' → logprob: -3.576655864715576
    7. ' to' → logprob: -4.201655864715576
    8. ')' → logprob: -4.201655864715576
    9. ' or' → logprob: -4.326655864715576
    10. ',' → logprob: -4.451655864715576

Token 164: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09307040274143219
    2. ')' → logprob: -2.4680705070495605
    3. '    ' → logprob: -6.5930705070495605
    4. ' ' → logprob: -7.4680705070495605
    5. '```' → logprob: -7.7180705070495605
    6. '    
' → logprob: -7.8430705070495605
    7. '
' → logprob: -8.218070030212402
    8. ' 
' → logprob: -8.718070030212402
    9. ' )' → logprob: -8.843070030212402
    10. ')
' → logprob: -8.968070030212402

Token 165: ' Attributes' (ID: 70472)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05579995736479759
    2. '
' → logprob: -3.930799961090088
    3. 'class' → logprob: -4.305799961090088
    4. ' def' → logprob: -4.680799961090088
    5. 'def' → logprob: -5.430799961090088
    6. '    
' → logprob: -5.680799961090088
    7. ' """
' → logprob: -6.805799961090088
    8. '"""
' → logprob: -6.930799961090088
    9. ' 
' → logprob: -7.805799961090088
    10. '    ' → logprob: -7.805799961090088

Token 166: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6039909720420837
    2. ':' → logprob: -1.1039910316467285
    3. ' =' → logprob: -3.6039910316467285
    4. '<|end|>' → logprob: -3.9789910316467285
    5. '```' → logprob: -4.2289910316467285
    6. '[
' → logprob: -4.4789910316467285
    7. '=' → logprob: -4.6039910316467285
    8. '[' → logprob: -4.7289910316467285
    9. ':
' → logprob: -4.7289910316467285
    10. '):
' → logprob: -4.8539910316467285

Token 167: '       ' (ID: 309)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6968962550163269
    2. '   ' → logprob: -1.0718963146209717
    3. '    ' → logprob: -2.5718963146209717
    4. '``' → logprob: -3.6968963146209717
    5. ' 
' → logprob: -3.9468963146209717
    6. '[
' → logprob: -5.071896076202393
    7. ' ' → logprob: -5.196896076202393
    8. '{
' → logprob: -5.321896076202393
    9. '[' → logprob: -5.696896076202393
    10. '    
' → logprob: -5.946896076202393

Token 168: ' base' (ID: 3611)
  Prédit: ' base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.6126686334609985
    2. 'base' (adapté à ' base') → logprob: -1.3626686334609985
    3. 'mod' → logprob: -3.237668514251709
    4. ' pw' → logprob: -3.737668514251709
    5. ' mod' → logprob: -3.862668514251709
    6. ' bases' → logprob: -4.112668514251709
    7. '   ' → logprob: -4.487668514251709
    8. 'bases' → logprob: -4.612668514251709
    9. 'pw' → logprob: -4.862668514251709
    10. ' def' → logprob: -4.862668514251709

Token 169: ' (' (ID: 350)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1902446746826172
    2. ' =' → logprob: -1.8152446746826172
    3. '   ' → logprob: -5.315244674682617
    4. ',' → logprob: -5.815244674682617
    5. ':' → logprob: -6.940244674682617
    6. ')' → logprob: -7.440244674682617
    7. '1' → logprob: -7.815244674682617
    8. '_base' → logprob: -8.940244674682617
    9. '=None' → logprob: -9.190244674682617
    10. 's' → logprob: -9.440244674682617

Token 170: 'int' (ID: 491)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3477221727371216
    2. ')' → logprob: -1.3477221727371216
    3. 'int' → logprob: -4.597722053527832
    4. '=int' → logprob: -4.597722053527832
    5. '):' → logprob: -5.222722053527832
    6. ' =' → logprob: -5.722722053527832
    7. ')=' → logprob: -6.972722053527832
    8. ':' → logprob: -7.097722053527832
    9. ',' → logprob: -7.472722053527832
    10. '64' → logprob: -7.597722053527832

Token 171: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39834684133529663
    2. '=' → logprob: -1.2733469009399414
    3. '):' → logprob: -3.1483469009399414
    4. ',' → logprob: -5.648346900939941
    5. '):
' → logprob: -6.648346900939941
    6. '   ' → logprob: -7.648346900939941
    7. ')=' → logprob: -9.148346900939941
    8. ' =' → logprob: -9.273346900939941
    9. ')
' → logprob: -9.648346900939941
    10. ' )' → logprob: -10.023346900939941

Token 172: ' Hash' (ID: 10242)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0929979532957077
    2. ')' → logprob: -3.8429980278015137
    3. '1' → logprob: -4.342998027801514
    4. '32' → logprob: -5.092998027801514
    5. '64' → logprob: -5.342998027801514
    6. '100' → logprob: -5.467998027801514
    7. '2' → logprob: -5.592998027801514
    8. '10' → logprob: -5.717998027801514
    9. '163' → logprob: -6.217998027801514
    10. '36' → logprob: -6.342998027801514

Token 173: ' base' (ID: 3611)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.90275639295578
    2. ' =' → logprob: -1.1527564525604248
    3. '_base' → logprob: -2.152756452560425
    4. '=' → logprob: -3.027756452560425
    5. '_' → logprob: -3.277756452560425
    6. '   ' → logprob: -3.527756452560425
    7. ' _' → logprob: -4.527756214141846
    8. ' )' → logprob: -4.527756214141846
    9. '_size' → logprob: -4.902756214141846
    10. '_value' → logprob: -5.027756214141846

Token 174: ' value' (ID: 1432)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7295966744422913
    2. ',' → logprob: -1.3545966148376465
    3. '=' → logprob: -1.7295966148376465
    4. ' =' → logprob: -2.9795966148376465
    5. '   ' → logprob: -4.2295966148376465
    6. ',
' → logprob: -4.8545966148376465
    7. ')
' → logprob: -6.2295966148376465
    8. ' ,' → logprob: -6.2295966148376465
    9. ' )' → logprob: -6.4795966148376465
    10. '_' → logprob: -6.9795966148376465

Token 175: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1893150359392166
    2. '=' → logprob: -1.9393150806427002
    3. '   ' → logprob: -4.564314842224121
    4. ',' → logprob: -5.064314842224121
    5. ' =' → logprob: -5.064314842224121
    6. ')
' → logprob: -5.689314842224121
    7. ',
' → logprob: -6.939314842224121
    8. ' )' → logprob: -7.564314842224121
    9. ':' → logprob: -8.564314842224121
    10. '):' → logprob: -9.064314842224121

Token 176: ' rolling' (ID: 30530)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.4915241003036499
    2. ' rolling' → logprob: -1.61652410030365
    3. ' self' → logprob: -3.2415242195129395
    4. '   ' → logprob: -3.7415242195129395
    5. 'rolling' → logprob: -3.7415242195129395
    6. 'pow' → logprob: -4.1165242195129395
    7. ' hashing' → logprob: -4.2415242195129395
    8. 'the' → logprob: -4.2415242195129395
    9. ' pow' → logprob: -4.3665242195129395
    10. 'self' → logprob: -4.7415242195129395

Token 177: ' hash' (ID: 10691)
  Prédit: '_hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hash' → logprob: -1.0707857608795166
    2. ')' → logprob: -1.3207857608795166
    3. '_' → logprob: -1.6957857608795166
    4. ' _' → logprob: -2.5707857608795166
    5. '   ' → logprob: -2.8207857608795166
    6. ' )' → logprob: -4.5707855224609375
    7. 'hash' → logprob: -4.8207855224609375
    8. ' hash' → logprob: -4.8207855224609375
    9. ')_' → logprob: -4.8207855224609375
    10. '_base' → logprob: -5.1957855224609375

Token 178: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13766101002693176
    2. ')
' → logprob: -2.1376609802246094
    3. '=' → logprob: -5.262660980224609
    4. '   ' → logprob: -6.262660980224609
    5. ' =' → logprob: -6.387660980224609
    6. ',' → logprob: -7.512660980224609
    7. ' )' → logprob: -8.13766098022461
    8. '```' → logprob: -8.13766098022461
    9. '_base' → logprob: -8.51266098022461
    10. 's' → logprob: -9.01266098022461

Token 179: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5420743823051453
    2. '       ' → logprob: -1.54207444190979
    3. ')' → logprob: -1.79207444190979
    4. ')
' → logprob: -4.292074203491211
    5. ',' → logprob: -4.917074203491211
    6. '
' → logprob: -5.542074203491211
    7. '):
' → logprob: -5.917074203491211
    8. '```' → logprob: -6.042074203491211
    9. '=' → logprob: -6.417074203491211
    10. ',
' → logprob: -6.542074203491211

Token 180: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.12221988290548325
    2. ' pw' → logprob: -2.9972198009490967
    3. 'mod' (adapté à ' mod') → logprob: -3.8722198009490967
    4. ' modulus' → logprob: -4.747220039367676
    5. ' p' → logprob: -4.872220039367676
    6. ' pow' → logprob: -4.997220039367676
    7. ' length' → logprob: -5.372220039367676
    8. ' power' → logprob: -6.247220039367676
    9. ' base' → logprob: -6.247220039367676
    10. ' MOD' → logprob: -6.372220039367676

Token 181: ' (' (ID: 350)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7281019687652588
    2. ' =' → logprob: -0.8531019687652588
    3. ' (' → logprob: -2.603101968765259
    4. '   ' → logprob: -5.47810173034668
    5. '1' → logprob: -5.72810173034668
    6. '```' → logprob: -6.10310173034668
    7. '=int' → logprob: -6.60310173034668
    8. '=None' → logprob: -6.72810173034668
    9. ')' → logprob: -6.72810173034668
    10. ':' → logprob: -7.10310173034668

Token 182: 'int' (ID: 491)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06994421780109406
    2. 'int' → logprob: -3.444944143295288
    3. '=' → logprob: -3.944944143295288
    4. '10' → logprob: -4.944944381713867
    5. '(' → logprob: -5.944944381713867
    6. '1' → logprob: -6.319944381713867
    7. '(int' → logprob: -6.444944381713867
    8. '=int' → logprob: -6.444944381713867
    9. '2' → logprob: -7.319944381713867
    10. ':int' → logprob: -8.819944381713867

Token 183: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0024189415853470564
    2. '):
' → logprob: -6.5024189949035645
    3. ')' → logprob: -7.8774189949035645
    4. ' ):' → logprob: -8.377418518066406
    5. ':' → logprob: -8.627418518066406
    6. '   ' → logprob: -9.752418518066406
    7. '=' → logprob: -10.377418518066406
    8. '):

' → logprob: -10.627418518066406
    9. ',' → logprob: -12.252418518066406
    10. ' ' → logprob: -13.127418518066406

Token 184: ' Mod' (ID: 7191)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5866972804069519
    2. '10' → logprob: -0.9616972804069519
    3. ')' → logprob: -4.461697101593018
    4. 'int' → logprob: -4.711697101593018
    5. ' int' → logprob: -4.836697101593018
    6. '2' → logprob: -5.336697101593018
    7. '1' → logprob: -5.336697101593018
    8. ' None' → logprob: -5.336697101593018
    9. '100' → logprob: -5.336697101593018
    10. ' (' → logprob: -5.461697101593018

Token 185: 'ulus' (ID: 40006)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.379330575466156
    2. ' =' → logprob: -2.004330635070801
    3. '=None' → logprob: -3.129330635070801
    4. ')' → logprob: -3.254330635070801
    5. ':' → logprob: -3.754330635070801
    6. 'ulus' → logprob: -3.754330635070801
    7. '```' → logprob: -4.129330635070801
    8. '_base' → logprob: -4.754330635070801
    9. '=int' → logprob: -5.004330635070801
    10. '   ' → logprob: -5.504330635070801

Token 186: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5532646775245667
    2. ')' → logprob: -1.8032646179199219
    3. ' =' → logprob: -2.303264617919922
    4. ':' → logprob: -2.553264617919922
    5. '<|end|>' → logprob: -2.678264617919922
    6. '   ' → logprob: -5.928264617919922
    7. '):' → logprob: -6.053264617919922
    8. ',' → logprob: -6.303264617919922
    9. '<|end|>' → logprob: -6.428264617919922
    10. '_value' → logprob: -6.803264617919922

Token 187: ' avoid' (ID: 8397)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.5925472974777222
    2. ' ' → logprob: -1.4675472974777222
    3. '<|end|>' → logprob: -2.8425474166870117
    4. 'None' → logprob: -3.0925474166870117
    5. ')' → logprob: -3.3425474166870117
    6. ' (' → logprob: -3.4675474166870117
    7. '...' → logprob: -4.592547416687012
    8. '2' → logprob: -5.092547416687012
    9. ' prevent' → logprob: -5.592547416687012
    10. '100' → logprob: -5.717547416687012

Token 188: ' integer' (ID: 16336)
  Prédit: ' overflow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' overflow' → logprob: -1.0339082479476929
    2. ' ' → logprob: -1.4089082479476929
    3. '2' → logprob: -1.7839082479476929
    4. ' (' → logprob: -2.0339083671569824
    5. ' collisions' → logprob: -3.6589083671569824
    6. '<|end|>' → logprob: -3.7839083671569824
    7. ' None' → logprob: -4.533908367156982
    8. 'overflow' → logprob: -4.533908367156982
    9. '10' → logprob: -5.158908367156982
    10. '(' → logprob: -5.408908367156982

Token 189: ' overflow' (ID: 28614)
  Prédit: ' overflow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' overflow' → logprob: -0.0062950411811470985
    2. '_' → logprob: -6.631295204162598
    3. '_over' → logprob: -6.631295204162598
    4. ' _' → logprob: -6.881295204162598
    5. 'Overflow' → logprob: -6.881295204162598
    6. 'overflow' → logprob: -7.006295204162598
    7. ' Overflow' → logprob: -7.881295204162598
    8. ' over' → logprob: -9.381295204162598
    9. ')' → logprob: -9.506295204162598
    10. ' arithmetic' → logprob: -9.881295204162598

Token 190: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013309636153280735
    2. '   ' → logprob: -5.013309478759766
    3. ')
' → logprob: -5.138309478759766
    4. ',' → logprob: -7.888309478759766
    5. ',
' → logprob: -8.388309478759766
    6. ' )' → logprob: -10.013309478759766
    7. ')

' → logprob: -11.263309478759766
    8. '       ' → logprob: -12.013309478759766
    9. '```' → logprob: -12.263309478759766
    10. 'def' → logprob: -12.888309478759766

Token 191: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09672874212265015
    2. ')' → logprob: -2.596728801727295
    3. '       ' → logprob: -4.346728801727295
    4. '```' → logprob: -6.346728801727295
    5. ')
' → logprob: -6.471728801727295
    6. '
' → logprob: -7.971728801727295
    7. '):
' → logprob: -8.221728324890137
    8. '``' → logprob: -8.346728324890137
    9. '):' → logprob: -9.221728324890137
    10. '"""
' → logprob: -9.346728324890137

Token 192: ' h' (ID: 312)
  Prédit: ' pw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pw' → logprob: -0.4426315128803253
    2. ' pow' → logprob: -2.442631483078003
    3. ' p' → logprob: -2.692631483078003
    4. ' power' → logprob: -3.317631483078003
    5. ' base' → logprob: -3.317631483078003
    6. ' max' → logprob: -3.692631483078003
    7. 'pw' → logprob: -3.942631483078003
    8. 'pow' → logprob: -4.067631721496582
    9. ' n' → logprob: -4.317631721496582
    10. ' size' → logprob: -4.692631721496582

Token 193: ' (' (ID: 350)
  Prédit: 'ash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ash' → logprob: -0.026451705023646355
    2. ' =' → logprob: -3.901451587677002
    3. 'ashes' → logprob: -5.651451587677002
    4. ' ash' → logprob: -7.026451587677002
    5. 'sh' → logprob: -8.40145206451416
    6. 's' → logprob: -8.77645206451416
    7. '   ' → logprob: -8.77645206451416
    8. 'ashed' → logprob: -8.90145206451416
    9. 'ashing' → logprob: -9.02645206451416
    10. '_values' → logprob: -9.15145206451416

Token 194: 'List' (ID: 950)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7960947155952454
    2. '=' → logprob: -0.7960947155952454
    3. '[' → logprob: -2.6710946559906006
    4. ' =' → logprob: -4.79609489440918
    5. '[])' → logprob: -5.29609489440918
    6. ' )' → logprob: -5.79609489440918
    7. '[]' → logprob: -6.04609489440918
    8. ',' → logprob: -6.04609489440918
    9. ':' → logprob: -6.67109489440918
    10. '_' → logprob: -6.79609489440918

Token 195: '[int' (ID: 40124)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13622842729091644
    2. ')_' → logprob: -2.886228322982788
    3. '):' → logprob: -3.886228322982788
    4. '_' → logprob: -4.386228561401367
    5. '[' → logprob: -4.636228561401367
    6. ' )' → logprob: -5.511228561401367
    7. '=' → logprob: -5.761228561401367
    8. '):
' → logprob: -5.886228561401367
    9. '_)' → logprob: -6.011228561401367
    10. ' _' → logprob: -6.261228561401367

Token 196: ']):' (ID: 60705)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.004952189512550831
    2. ']):' → logprob: -5.6299519538879395
    3. '])
' → logprob: -8.004952430725098
    4. ']' → logprob: -8.254952430725098
    5. '],' → logprob: -8.504952430725098
    6. ')' → logprob: -8.754952430725098
    7. ']):
' → logprob: -8.754952430725098
    8. ' ])' → logprob: -9.754952430725098
    9. ',' → logprob: -10.004952430725098
    10. '])]' → logprob: -10.879952430725098

Token 197: ' Prefix' (ID: 121368)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6665090322494507
    2. '[]' → logprob: -0.9165090322494507
    3. ' []' → logprob: -2.6665091514587402
    4. ' [' → logprob: -4.91650915145874
    5. ' ' → logprob: -5.04150915145874
    6. '<|end|>' → logprob: -6.29150915145874
    7. '[:]' → logprob: -8.541508674621582
    8. '[])' → logprob: -8.666508674621582
    9. '[]}' → logprob: -8.666508674621582
    10. '  ' → logprob: -8.916508674621582

Token 198: ' hashes' (ID: 131101)
  Prédit: '_hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_hash' → logprob: -0.9776022434234619
    2. '_s' → logprob: -1.102602243423462
    3. 's' → logprob: -1.352602243423462
    4. ')' → logprob: -4.102602005004883
    5. '_' → logprob: -4.852602005004883
    6. 'es' → logprob: -6.102602005004883
    7. '_values' → logprob: -6.227602005004883
    8. ' _' → logprob: -6.852602005004883
    9. '_list' → logprob: -7.227602005004883
    10. 'hash' → logprob: -7.977602005004883

Token 199: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.48086753487586975
    2. '   ' → logprob: -1.7308675050735474
    3. '<|end|>' → logprob: -2.105867624282837
    4. ':' → logprob: -3.230867624282837
    5. '=' → logprob: -4.855867385864258
    6. ']' → logprob: -5.105867385864258
    7. ' =' → logprob: -5.230867385864258
    8. ',' → logprob: -5.480867385864258
    9. 's' → logprob: -6.105867385864258
    10. '<|end|>' → logprob: -6.105867385864258

Token 200: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.06242024153470993
    2. 'the' → logprob: -3.062420129776001
    3. ')' → logprob: -5.81242036819458
    4. ' bits' → logprob: -5.93742036819458
    5. ' bit' → logprob: -6.68742036819458
    6. 'self' → logprob: -6.93742036819458
    7. ' code' → logprob: -7.06242036819458
    8. ' s' → logprob: -7.56242036819458
    9. ' tokens' → logprob: -7.68742036819458
    10. ' prefix' → logprob: -7.81242036819458

Token 201: ' sequence' (ID: 16281)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -1.3362817764282227
    2. 'bit' → logprob: -1.4612817764282227
    3. ' bit' → logprob: -1.7112817764282227
    4. 'input' → logprob: -2.7112817764282227
    5. 'data' → logprob: -3.2112817764282227
    6. 'buffer' → logprob: -3.3362817764282227
    7. ' data' → logprob: -3.5862817764282227
    8. 'string' → logprob: -3.9612817764282227
    9. ' sequence' → logprob: -4.086281776428223
    10. ' bits' → logprob: -4.461281776428223

Token 202: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.061917368322610855
    2. '   ' → logprob: -3.186917304992676
    3. ')
' → logprob: -4.686917304992676
    4. ' )' → logprob: -5.936917304992676
    5. '[' → logprob: -6.436917304992676
    6. ',' → logprob: -6.561917304992676
    7. '])' → logprob: -6.686917304992676
    8. ')]' → logprob: -7.311917304992676
    9. ']' → logprob: -7.686917304992676
    10. 's' → logprob: -8.561917304992676

Token 203: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5839365720748901
    2. '       ' → logprob: -0.8339365720748901
    3. ')' → logprob: -5.83393669128418
    4. '
' → logprob: -6.20893669128418
    5. '```' → logprob: -7.08393669128418
    6. 's' → logprob: -8.20893669128418
    7. '[' → logprob: -8.20893669128418
    8. '    ' → logprob: -8.45893669128418
    9. ')
' → logprob: -8.58393669128418
    10. ' ' → logprob: -8.83393669128418

Token 204: ' pw' (ID: 24359)
  Prédit: 'pw'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pw' (adapté à ' pw') → logprob: -0.2451150119304657
    2. 'p' → logprob: -1.620115041732788
    3. 'pow' → logprob: -4.995114803314209
    4. ' pw' → logprob: -5.120114803314209
    5. 'power' → logprob: -6.745114803314209
    6. ' p' → logprob: -6.995114803314209
    7. '_pw' → logprob: -7.245114803314209
    8. 'inv' → logprob: -7.370114803314209
    9. '   ' → logprob: -7.620114803314209
    10. '_p' → logprob: -7.870114803314209

Token 205: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.06436288356781
    2. '=' → logprob: -1.31436288356781
    3. ' =' → logprob: -2.3143630027770996
    4. 's' → logprob: -2.4393630027770996
    5. ':' → logprob: -2.5643630027770996
    6. ' ' → logprob: -3.5643630027770996
    7. ']' → logprob: -3.9393630027770996
    8. '<|end|>' → logprob: -3.9393630027770996
    9. '   ' → logprob: -4.0643630027771
    10. ',' → logprob: -4.6893630027771

Token 206: 'List' (ID: 950)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -1.2071990966796875
    2. '[' → logprob: -1.4571990966796875
    3. ')' → logprob: -1.5821990966796875
    4. 'List' → logprob: -1.9571990966796875
    5. 'int' → logprob: -3.2071990966796875
    6. ']' → logprob: -3.3321990966796875
    7. '[List' → logprob: -3.9571990966796875
    8. '])' → logprob: -4.8321990966796875
    9. 'list' → logprob: -5.2071990966796875
    10. '[len' → logprob: -5.7071990966796875

Token 207: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -3.523948907968588e-05
    2. '<int' → logprob: -11.125035285949707
    3. '[' → logprob: -11.500035285949707
    4. 'int' → logprob: -12.625035285949707
    5. ']int' → logprob: -13.125035285949707
    6. '[List' → logprob: -13.375035285949707
    7. '```' → logprob: -13.750035285949707
    8. '=int' → logprob: -14.250035285949707
    9. '(int' → logprob: -14.625035285949707
    10. '[
' → logprob: -15.000035285949707

Token 208: ']):' (ID: 60705)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.3530675768852234
    2. ']):' → logprob: -1.2280676364898682
    3. ']):
' → logprob: -5.853067398071289
    4. ']' → logprob: -6.728067398071289
    5. ']:' → logprob: -8.853067398071289
    6. '])]' → logprob: -9.228067398071289
    7. '):' → logprob: -9.853067398071289
    8. '])
' → logprob: -9.853067398071289
    9. ')]' → logprob: -9.978067398071289
    10. ')' → logprob: -10.478067398071289

Token 209: ' Pre' (ID: 4659)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.0501657724380493
    2. 'List' → logprob: -1.8001657724380493
    3. ' pre' → logprob: -2.5501656532287598
    4. 'powers' → logprob: -2.5501656532287598
    5. '[int' → logprob: -3.0501656532287598
    6. ')' → logprob: -3.0501656532287598
    7. ' List' → logprob: -3.1751656532287598
    8. '[' → logprob: -3.3001656532287598
    9. 'prefix' → logprob: -4.17516565322876
    10. 'Prefix' → logprob: -4.92516565322876

Token 210: 'computed' (ID: 157929)
  Prédit: 'computed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'computed' → logprob: -0.09474331885576248
    2. '[' → logprob: -2.719743251800537
    3. 'fix' → logprob: -4.719743251800537
    4. 'powers' → logprob: -5.969743251800537
    5. '   ' → logprob: -6.344743251800537
    6. 'c' → logprob: -6.344743251800537
    7. 'fixed' → logprob: -6.469743251800537
    8. 'compute' → logprob: -6.594743251800537
    9. '[p' → logprob: -6.844743251800537
    10. 'pow' → logprob: -7.719743251800537

Token 211: ' powers' (ID: 27742)
  Prédit: ' powers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' powers' → logprob: -0.037778306752443314
    2. 'powers' → logprob: -3.912778377532959
    3. 'pow' → logprob: -5.162778377532959
    4. ' power' → logprob: -5.412778377532959
    5. '_p' → logprob: -5.787778377532959
    6. ' pow' → logprob: -7.162778377532959
    7. '_pow' → logprob: -7.537778377532959
    8. '[' → logprob: -7.787778377532959
    9. 'power' → logprob: -8.0377779006958
    10. ' base' → logprob: -8.2877779006958

Token 212: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -1.1670440435409546
    2. 'of' → logprob: -1.9170440435409546
    3. '_of' → logprob: -2.042044162750244
    4. '   ' → logprob: -2.292044162750244
    5. ')' → logprob: -2.417044162750244
    6. '(' → logprob: -2.417044162750244
    7. '[' → logprob: -2.792044162750244
    8. '=' → logprob: -3.792044162750244
    9. ']' → logprob: -4.417044162750244
    10. '_' → logprob: -4.917044162750244

Token 213: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.3600107431411743
    2. ' base' → logprob: -1.6100107431411743
    3. 'the' → logprob: -2.9850106239318848
    4. ' the' → logprob: -3.7350106239318848
    5. 'self' → logprob: -4.360010623931885
    6. '2' → logprob: -4.860010623931885
    7. '   ' → logprob: -5.110010623931885
    8. ' self' → logprob: -7.485010623931885
    9. ' ' → logprob: -7.860010623931885
    10. '10' → logprob: -9.110011100769043

Token 214: ' modulo' (ID: 112372)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6712400317192078
    2. '   ' → logprob: -1.5462400913238525
    3. '])' → logprob: -1.5462400913238525
    4. ' for' → logprob: -3.2962400913238525
    5. 'for' → logprob: -4.921239852905273
    6. ' )' → logprob: -5.546239852905273
    7. ' ])' → logprob: -6.046239852905273
    8. '       ' → logprob: -6.421239852905273
    9. ',' → logprob: -6.546239852905273
    10. '):' → logprob: -6.671239852905273

Token 215: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.4550943970680237
    2. 'self' → logprob: -1.080094337463379
    3. ' self' → logprob: -4.205094337463379
    4. ' mod' → logprob: -4.830094337463379
    5. ')' → logprob: -6.580094337463379
    6. '100' → logprob: -7.080094337463379
    7. '_mod' → logprob: -8.330094337463379
    8. '10' → logprob: -8.955094337463379
    9. '   ' → logprob: -9.205094337463379
    10. ' (' → logprob: -9.580094337463379

Token 216: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029358139261603355
    2. '   ' → logprob: -4.02935791015625
    3. ')
' → logprob: -5.02935791015625
    4. '])' → logprob: -5.90435791015625
    5. '.' → logprob: -7.27935791015625
    6. ' )' → logprob: -7.40435791015625
    7. ',' → logprob: -9.15435791015625
    8. '       ' → logprob: -9.27935791015625
    9. '.)' → logprob: -9.52935791015625
    10. '`)' → logprob: -9.77935791015625

Token 217: ' substring' (ID: 89494)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.9676574468612671
    2. ')' → logprob: -1.967657446861267
    3. ' hashing' → logprob: -2.0926575660705566
    4. 'the' → logprob: -2.8426575660705566
    5. ' fast' → logprob: -2.9676575660705566
    6. ' indexing' → logprob: -3.8426575660705566
    7. 'len' → logprob: -3.9676575660705566
    8. '1' → logprob: -4.217657566070557
    9. ' efficient' → logprob: -4.342657566070557
    10. ' len' → logprob: -4.342657566070557

Token 218: ' hash' (ID: 10691)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08579309284687042
    2. ')' → logprob: -3.0857930183410645
    3. ' lengths' → logprob: -4.0857930183410645
    4. ' length' → logprob: -5.3357930183410645
    5. ' s' → logprob: -6.2107930183410645
    6. ' calculations' → logprob: -6.3357930183410645
    7. ' computation' → logprob: -6.4607930183410645
    8. ' hashing' → logprob: -6.4607930183410645
    9. ']' → logprob: -6.7107930183410645
    10. ' computations' → logprob: -6.8357930183410645

Token 219: ' calculation' (ID: 40722)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5336300730705261
    2. 's' → logprob: -1.408630132675171
    3. ' computation' → logprob: -2.408630132675171
    4. ' calculation' → logprob: -3.783630132675171
    5. ' calculations' → logprob: -4.158629894256592
    6. ' computations' → logprob: -4.158629894256592
    7. '])' → logprob: -4.783629894256592
    8. 'ing' → logprob: -5.533629894256592
    9. ' )' → logprob: -6.033629894256592
    10. ')
' → logprob: -6.783629894256592

Token 220: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4003751277923584
    2. '   ' → logprob: -1.7753751277923584
    3. ')
' → logprob: -2.0253751277923584
    4. '.' → logprob: -4.1503753662109375
    5. ')

' → logprob: -5.5253753662109375
    6. '.)' → logprob: -6.2753753662109375
    7. ').' → logprob: -6.4003753662109375
    8. '.
' → logprob: -6.7753753662109375
    9. ',' → logprob: -7.4003753662109375
    10. ' )
' → logprob: -7.6503753662109375

Token 221: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027010086923837662
    2. ')' → logprob: -3.902010202407837
    3. ')
' → logprob: -5.527009963989258
    4. '"""
' → logprob: -6.527009963989258
    5. '```' → logprob: -7.402009963989258
    6. '):
' → logprob: -9.777009963989258
    7. '
' → logprob: -9.777009963989258
    8. '       ' → logprob: -9.902009963989258
    9. '``' → logprob: -10.152009963989258
    10. '"""' → logprob: -10.152009963989258

Token 222: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0494883693754673
    2. ')
' → logprob: -3.7994883060455322
    3. '"""
' (adapté à ' """
') → logprob: -3.9244883060455322
    4. ')' → logprob: -5.549488544464111
    5. '
' → logprob: -6.924488544464111
    6. ' """
' → logprob: -7.799488544464111
    7. '```' → logprob: -8.174488067626953
    8. '):
' → logprob: -8.924488067626953
    9. '    ' → logprob: -9.299488067626953
    10. '       ' → logprob: -9.549488067626953

Token 223: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005170670337975025
    2. ' def' → logprob: -6.505170822143555
    3. '
' → logprob: -6.630170822143555
    4. 'def' → logprob: -6.755170822143555
    5. '    
' → logprob: -7.380170822143555
    6. 'class' → logprob: -7.755170822143555
    7. ' 
' → logprob: -9.755170822143555
    8. '    ' → logprob: -11.505170822143555
    9. '```' → logprob: -11.505170822143555
    10. '	def' → logprob: -11.630170822143555

Token 224: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3895348608493805
    2. 'class' → logprob: -1.389534831047058
    3. 'def' (adapté à ' def') → logprob: -2.7645349502563477
    4. ' def' → logprob: -4.639534950256348
    5. ' class' → logprob: -7.264534950256348
    6. '	def' → logprob: -11.264534950256348
    7. '
' → logprob: -11.389534950256348
    8. ':' → logprob: -11.514534950256348
    9. '__' → logprob: -11.639534950256348
    10. '```' → logprob: -11.889534950256348

Token 225: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.3445022404193878
    2. 'init' → logprob: -1.5945022106170654
    3. '__' → logprob: -2.8445022106170654
    4. ' init' → logprob: -3.8445022106170654
    5. '_init' → logprob: -4.8445024490356445
    6. ' _' → logprob: -8.094502449035645
    7. 'n' → logprob: -8.594502449035645
    8. '_' → logprob: -8.594502449035645
    9. ' ' → logprob: -9.094502449035645
    10. 'class' → logprob: -9.344502449035645

Token 226: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -18.125
    3. 'ini' → logprob: -18.75
    4. '_init' → logprob: -19.875
    5. 'int' → logprob: -20.125
    6. 'inite' → logprob: -20.125
    7. 'in' → logprob: -20.25
    8. 'slots' → logprob: -21.625
    9. '
' → logprob: -22.625
    10. '```' → logprob: -22.75

Token 227: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.019023215398192406
    2. '__' → logprob: -4.144023418426514
    3. '__(
' → logprob: -6.519023418426514
    4. '__((' → logprob: -6.644023418426514
    5. '(' → logprob: -9.394022941589355
    6. '__(*' → logprob: -10.269022941589355
    7. '__('' → logprob: -10.394022941589355
    8. '(self' → logprob: -10.519022941589355
    9. '_' → logprob: -11.394022941589355
    10. '_(' → logprob: -11.769022941589355

Token 228: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0012009433703497052
    2. ' self' → logprob: -6.751201152801514
    3. ',' → logprob: -10.876200675964355
    4. ')' → logprob: -11.876200675964355
    5. ',self' → logprob: -13.751200675964355
    6. '(self' → logprob: -14.001200675964355
    7. '   ' → logprob: -14.251200675964355
    8. '
' → logprob: -14.251200675964355
    9. ' ' → logprob: -14.626200675964355
    10. 's' → logprob: -15.001200675964355

Token 229: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13788598775863647
    2. '(' → logprob: -2.5128860473632812
    3. ')' → logprob: -4.262886047363281
    4. ' (' → logprob: -4.262886047363281
    5. '):' → logprob: -5.387886047363281
    6. '(
' → logprob: -5.762886047363281
    7. ' ,' → logprob: -6.137886047363281
    8. '_' → logprob: -6.262886047363281
    9. '[' → logprob: -6.387886047363281
    10. 'self' → logprob: -7.262886047363281

Token 230: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.529445230960846
    2. 'self' → logprob: -2.154445171356201
    3. 'seq' → logprob: -2.154445171356201
    4. 'arr' → logprob: -2.654445171356201
    5. ' s' → logprob: -3.404445171356201
    6. 'a' → logprob: -4.029445171356201
    7. ' seq' → logprob: -4.654445171356201
    8. 'base' → logprob: -4.779445171356201
    9. ' self' → logprob: -5.029445171356201
    10. 'data' → logprob: -5.029445171356201

Token 231: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11817457526922226
    2. '):
' → logprob: -2.7431745529174805
    3. ':' → logprob: -3.1181745529174805
    4. ')' → logprob: -6.1181745529174805
    5. ' ):' → logprob: -8.61817455291748
    6. ' :' → logprob: -8.86817455291748
    7. '[' → logprob: -9.49317455291748
    8. '):
' → logprob: -9.61817455291748
    9. '   ' → logprob: -9.74317455291748
    10. ',' → logprob: -10.11817455291748

Token 232: ' base' (ID: 3611)
  Prédit: ' base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.3496019244194031
    2. ' mod' → logprob: -2.224601984024048
    3. 'mod' → logprob: -2.349601984024048
    4. 'base' → logprob: -2.849601984024048
    5. ' p' → logprob: -4.474601745605469
    6. 'p' → logprob: -5.474601745605469
    7. ' m' → logprob: -5.599601745605469
    8. '   ' → logprob: -5.849601745605469
    9. 'm' → logprob: -6.224601745605469
    10. ' pw' → logprob: -6.724601745605469

Token 233: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.020854713395237923
    2. ',' → logprob: -3.8958547115325928
    3. '):' → logprob: -9.270854949951172
    4. '   ' → logprob: -9.770854949951172
    5. ' =' → logprob: -9.770854949951172
    6. '):
' → logprob: -10.145854949951172
    7. ':' → logprob: -10.770854949951172
    8. '=None' → logprob: -10.770854949951172
    9. ' ,' → logprob: -11.395854949951172
    10. '=int' → logprob: -12.520854949951172

Token 234: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.2812426686286926
    2. ' mod' → logprob: -1.4062426090240479
    3. '   ' → logprob: -10.406242370605469
    4. ' ' → logprob: -10.656242370605469
    5. 'm' → logprob: -11.781242370605469
    6. '	mod' → logprob: -12.531242370605469
    7. '  ' → logprob: -12.968742370605469
    8. '    ' → logprob: -13.031242370605469
    9. '```' → logprob: -13.468742370605469
    10. ')' → logprob: -13.468742370605469

Token 235: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012919844128191471
    2. '):
' → logprob: -4.387919902801514
    3. ',' → logprob: -8.137919425964355
    4. ')' → logprob: -9.887919425964355
    5. '=' → logprob: -10.512919425964355
    6. ':' → logprob: -10.637919425964355
    7. '):
' → logprob: -11.887919425964355
    8. ' ):' → logprob: -12.137919425964355
    9. '   ' → logprob: -13.637919425964355
    10. '=None' → logprob: -13.887919425964355

Token 236: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02464449778199196
    2. ':' → logprob: -3.774644613265991
    3. '):' → logprob: -7.149644374847412
    4. '):
' → logprob: -8.52464485168457
    5. ',' → logprob: -9.02464485168457
    6. ':
' → logprob: -9.27464485168457
    7. '   ' → logprob: -9.77464485168457
    8. ')' → logprob: -10.39964485168457
    9. '	' → logprob: -10.89964485168457
    10. '[' → logprob: -11.27464485168457

Token 237: ' """
' (ID: 7037)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5656870007514954
    2. ' self' → logprob: -1.3156869411468506
    3. '       ' → logprob: -1.8156869411468506
    4. 'n' → logprob: -7.81568717956543
    5. ' n' → logprob: -7.94068717956543
    6. ' s' → logprob: -9.69068717956543
    7. '   ' → logprob: -9.94068717956543
    8. 'h' → logprob: -10.06568717956543
    9. ' h' → logprob: -10.31568717956543
    10. 's' → logprob: -10.81568717956543

Token 238: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7118439674377441
    2. 'self' → logprob: -0.7118439674377441
    3. ' self' → logprob: -4.461843967437744
    4. 's' → logprob: -5.711843967437744
    5. '   ' → logprob: -5.961843967437744
    6. ' ' → logprob: -7.711843967437744
    7. ' s' → logprob: -7.961843967437744
    8. '        ' → logprob: -9.586843490600586
    9. '     ' → logprob: -9.961843490600586
    10. ' ' → logprob: -10.211843490600586

Token 239: ' Initializes' (ID: 73569)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14403359591960907
    2. ' self' → logprob: -2.144033670425415
    3. 'self' → logprob: -4.144033432006836
    4. ' s' → logprob: -7.269033432006836
    5. '   ' → logprob: -8.394033432006836
    6. 's' → logprob: -9.394033432006836
    7. ' n' → logprob: -10.144033432006836
    8. 'n' → logprob: -11.144033432006836
    9. ' ' → logprob: -11.644033432006836
    10. ' super' → logprob: -11.644033432006836

Token 240: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.31333333253860474
    2. ' self' → logprob: -1.31333327293396
    3. ' s' → logprob: -10.313333511352539
    4. 's' → logprob: -10.688333511352539
    5. ')' → logprob: -11.938333511352539
    6. '(self' → logprob: -12.438333511352539
    7. '       ' → logprob: -12.688333511352539
    8. ' ' → logprob: -14.188333511352539
    9. '_self' → logprob: -14.938333511352539
    10. ',' → logprob: -15.438333511352539

Token 241: ' rolling' (ID: 30530)
  Prédit: ' RH'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' RH' → logprob: -0.4474059045314789
    2. 'RH' → logprob: -1.1974059343338013
    3. ' class' → logprob: -3.5724058151245117
    4. 'class' → logprob: -4.072405815124512
    5. ' object' → logprob: -5.072405815124512
    6. 'self' → logprob: -5.822405815124512
    7. ' instance' → logprob: -6.197405815124512
    8. ' rolling' → logprob: -7.697405815124512
    9. 'object' → logprob: -7.822405815124512
    10. 'instance' → logprob: -8.072405815124512

Token 242: ' hash' (ID: 10691)
  Prédit: '_hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hash' → logprob: -0.6938674449920654
    2. '_' → logprob: -1.4438674449920654
    3. ' hash' → logprob: -1.4438674449920654
    4. ' _' → logprob: -3.9438674449920654
    5. 'hash' → logprob: -5.1938676834106445
    6. ' ' → logprob: -6.5688676834106445
    7. 'Hash' → logprob: -6.8188676834106445
    8. ')' → logprob: -7.9438676834106445
    9. '_h' → logprob: -8.443867683410645
    10. ' Hash' → logprob: -8.818867683410645

Token 243: ' object' (ID: 2817)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.4846819639205933
    2. '(s' → logprob: -1.7346819639205933
    3. ' object' → logprob: -1.7346819639205933
    4. ':' → logprob: -2.109682083129883
    5. ' for' → logprob: -2.359682083129883
    6. '(self' → logprob: -3.484682083129883
    7. '(
' → logprob: -3.484682083129883
    8. ',' → logprob: -3.734682083129883
    9. ' (' → logprob: -3.859682083129883
    10. ')' → logprob: -4.359682083129883

Token 244: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3444940447807312
    2. ',' → logprob: -2.094494104385376
    3. ':' → logprob: -2.219494104385376
    4. '   ' → logprob: -3.969494104385376
    5. ' with' → logprob: -4.719493865966797
    6. ':
' → logprob: -4.969493865966797
    7. '(self' → logprob: -4.969493865966797
    8. ')' → logprob: -5.219493865966797
    9. 'self' → logprob: -5.469493865966797
    10. ' for' → logprob: -5.969493865966797

Token 245: ' sequence' (ID: 16281)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.013027395121753216
    2. 's' → logprob: -4.388027191162109
    3. ' the' → logprob: -7.638027191162109
    4. 'the' → logprob: -11.76302719116211
    5. ' a' → logprob: -12.01302719116211
    6. ' ' → logprob: -12.13802719116211
    7. ')' → logprob: -12.76302719116211
    8. ' bit' → logprob: -13.01302719116211
    9. '   ' → logprob: -13.26302719116211
    10. ' self' → logprob: -13.63802719116211

Token 246: ' '' (ID: 461)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9512380957603455
    2. ' s' → logprob: -1.3262381553649902
    3. '(s' → logprob: -2.0762381553649902
    4. ' (' → logprob: -2.7012381553649902
    5. '   ' → logprob: -3.9512381553649902
    6. '=' → logprob: -4.07623815536499
    7. '=s' → logprob: -4.07623815536499
    8. '(' → logprob: -4.20123815536499
    9. ' =' → logprob: -4.20123815536499
    10. '(
' → logprob: -4.32623815536499

Token 247: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.004159722477197647
    2. ' s' → logprob: -5.504159927368164
    3. ')' → logprob: -9.629159927368164
    4. '   ' → logprob: -11.879159927368164
    5. '')' → logprob: -12.879159927368164
    6. '       ' → logprob: -13.504159927368164
    7. '_s' → logprob: -14.129159927368164
    8. ')s' → logprob: -14.379159927368164
    9. '(s' → logprob: -14.504159927368164
    10. ' ' → logprob: -14.629159927368164

Token 248: ''.

' (ID: 52121)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3669324815273285
    2. '):' → logprob: -1.3669325113296509
    3. ')' → logprob: -3.2419323921203613
    4. '   ' → logprob: -5.241932392120361
    5. '       ' → logprob: -5.366932392120361
    6. ',' → logprob: -7.116932392120361
    7. ':' → logprob: -7.116932392120361
    8. ')
' → logprob: -8.49193286895752
    9. ''):
' → logprob: -8.61693286895752
    10. ' ):
' → logprob: -8.61693286895752

Token 249: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009731597383506596
    2. '```' → logprob: -7.125973224639893
    3. '   ' → logprob: -9.750972747802734
    4. 'self' → logprob: -10.500972747802734
    5. '           ' → logprob: -10.625972747802734
    6. '        
' → logprob: -11.500972747802734
    7. '
' → logprob: -11.625972747802734
    8. ' self' → logprob: -11.750972747802734
    9. ',' → logprob: -12.500972747802734
    10. '``' → logprob: -12.625972747802734

Token 250: ' Args' (ID: 39185)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17440567910671234
    2. ' self' → logprob: -2.424405574798584
    3. 'self' → logprob: -2.674405574798584
    4. 'n' → logprob: -7.049405574798584
    5. '   ' → logprob: -7.674405574798584
    6. ' super' → logprob: -7.799405574798584
    7. ' s' → logprob: -8.299406051635742
    8. ' n' → logprob: -8.424406051635742
    9. 's' → logprob: -9.174406051635742
    10. 'super' → logprob: -9.299406051635742

Token 251: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03736061602830887
    2. '):' → logprob: -4.412360668182373
    3. ':' → logprob: -4.537360668182373
    4. '=' → logprob: -4.912360668182373
    5. '   ' → logprob: -5.912360668182373
    6. '       ' → logprob: -6.787360668182373
    7. '):
' → logprob: -6.787360668182373
    8. '<|end|>' → logprob: -8.162360191345215
    9. ')' → logprob: -8.412360191345215
    10. 's' → logprob: -8.412360191345215

Token 252: '           ' (ID: 352)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6431042551994324
    2. '       ' → logprob: -0.8931042551994324
    3. ' self' → logprob: -2.768104314804077
    4. 's' → logprob: -7.018104076385498
    5. '(self' → logprob: -7.268104076385498
    6. '           ' → logprob: -8.143104553222656
    7. ' s' → logprob: -8.893104553222656
    8. '        ' → logprob: -9.393104553222656
    9. '   ' → logprob: -10.643104553222656
    10. ':' → logprob: -11.268104553222656

Token 253: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.16130535304546356
    2. ' s' → logprob: -1.91130530834198
    3. 'base' → logprob: -7.4113054275512695
    4. ' base' → logprob: -7.9113054275512695
    5. '       ' → logprob: -11.16130542755127
    6. ' sequence' → logprob: -11.28630542755127
    7. 'self' → logprob: -11.28630542755127
    8. 'list' → logprob: -11.53630542755127
    9. 'str' → logprob: -11.66130542755127
    10. 'sequence' → logprob: -11.66130542755127

Token 254: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22292408347129822
    2. ':' → logprob: -1.9729241132736206
    3. '):' → logprob: -3.222923994064331
    4. '):
' → logprob: -4.47292423248291
    5. '<|end|>' → logprob: -5.72292423248291
    6. ' ,' → logprob: -6.09792423248291
    7. '   ' → logprob: -6.22292423248291
    8. ')' → logprob: -7.34792423248291
    9. ',
' → logprob: -7.59792423248291
    10. '<|end|>' → logprob: -8.47292423248291

Token 255: 'List' (ID: 950)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5643960237503052
    2. ')' → logprob: -1.6893960237503052
    3. '):
' → logprob: -1.6893960237503052
    4. 'list' → logprob: -3.1893959045410156
    5. 'List' → logprob: -5.689395904541016
    6. ':list' → logprob: -5.939395904541016
    7. '[int' → logprob: -6.189395904541016
    8. '   ' → logprob: -6.189395904541016
    9. 's' → logprob: -6.314395904541016
    10. ' list' → logprob: -6.439395904541016

Token 256: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.0001777960715116933
    2. '):
' → logprob: -9.250177383422852
    3. '):' → logprob: -10.375177383422852
    4. '[' → logprob: -10.625177383422852
    5. '(int' → logprob: -11.375177383422852
    6. '<int' → logprob: -11.625177383422852
    7. 'int' → logprob: -13.250177383422852
    8. '   ' → logprob: -13.625177383422852
    9. ',int' → logprob: -14.625177383422852
    10. ')' → logprob: -14.875177383422852

Token 257: ']):' (ID: 60705)
  Prédit: ']):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.37079256772994995
    2. ']):
' → logprob: -1.2457926273345947
    3. '])' → logprob: -4.245792388916016
    4. ']' → logprob: -5.120792388916016
    5. '):
' → logprob: -7.870792388916016
    6. '],' → logprob: -7.995792388916016
    7. ')' → logprob: -7.995792388916016
    8. '):' → logprob: -8.370792388916016
    9. '])
' → logprob: -9.370792388916016
    10. '   ' → logprob: -9.870792388916016

Token 258: ' Input' (ID: 10090)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.09043966978788376
    2. 's' → logprob: -2.465439558029175
    3. ')' → logprob: -6.715439796447754
    4. ' ' → logprob: -9.590439796447754
    5. ' )' → logprob: -10.340439796447754
    6. ' list' → logprob: -10.340439796447754
    7. ' The' → logprob: -10.715439796447754
    8. '[s' → logprob: -10.840439796447754
    9. ' tokens' → logprob: -10.840439796447754
    10. ' [' → logprob: -10.965439796447754

Token 259: ' sequence' (ID: 16281)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2656126320362091
    2. '):
' → logprob: -2.1406126022338867
    3. ')' → logprob: -2.5156126022338867
    4. '[' → logprob: -4.765612602233887
    5. ' ):' → logprob: -4.890612602233887
    6. '[int' → logprob: -5.015612602233887
    7. ',' → logprob: -5.890612602233887
    8. ' )' → logprob: -6.515612602233887
    9. ' ):
' → logprob: -6.515612602233887
    10. ' ' → logprob: -6.765612602233887

Token 260: ' (' (ID: 350)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5317866802215576
    2. '):' → logprob: -1.2817866802215576
    3. ')' → logprob: -2.2817866802215576
    4. '   ' → logprob: -3.9067866802215576
    5. '[int' → logprob: -5.031786918640137
    6. '       ' → logprob: -6.281786918640137
    7. ',' → logprob: -6.781786918640137
    8. '
' → logprob: -7.281786918640137
    9. ' of' → logprob: -7.406786918640137
    10. ' or' → logprob: -8.156786918640137

Token 261: 'e' (ID: 68)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09053342044353485
    2. '[int' → logprob: -3.590533494949341
    3. '):
' → logprob: -3.590533494949341
    4. ' )' → logprob: -4.340533256530762
    5. '):' → logprob: -4.840533256530762
    6. ' or' → logprob: -6.090533256530762
    7. ' integers' → logprob: -6.465533256530762
    8. ' ):
' → logprob: -6.840533256530762
    9. ' tokens' → logprob: -7.090533256530762
    10. 'int' → logprob: -7.090533256530762

Token 262: '.g' (ID: 1940)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11062263697385788
    2. '[' → logprob: -2.6106226444244385
    3. '):
' → logprob: -4.735622406005859
    4. '   ' → logprob: -5.360622406005859
    5. '[
' → logprob: -5.610622406005859
    6. ')
' → logprob: -5.860622406005859
    7. 'n' → logprob: -6.235622406005859
    8. ' or' → logprob: -6.235622406005859
    9. ',' → logprob: -7.110622406005859
    10. '       ' → logprob: -7.485622406005859

Token 263: '.,' (ID: 4213)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.48154211044311523
    2. '[' → logprob: -1.9815421104431152
    3. 'of' → logprob: -2.8565421104431152
    4. '       ' → logprob: -3.4815421104431152
    5. 'list' → logprob: -3.7315421104431152
    6. '])' → logprob: -4.106542110443115
    7. ' of' → logprob: -4.606542110443115
    8. '   ' → logprob: -4.606542110443115
    9. '[]' → logprob: -4.856542110443115
    10. 't' → logprob: -4.856542110443115

Token 264: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.6325206160545349
    2. ' bits' → logprob: -1.1325206756591797
    3. 'bit' → logprob: -3.0075206756591797
    4. ' bit' → logprob: -3.5075206756591797
    5. 's' → logprob: -4.38252067565918
    6. ' list' → logprob: -4.50752067565918
    7. ' s' → logprob: -4.50752067565918
    8. '[int' → logprob: -5.00752067565918
    9. ' List' → logprob: -5.50752067565918
    10. ')' → logprob: -5.63252067565918

Token 265: ' of' (ID: 328)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008847376331686974
    2. ')
' → logprob: -5.883847236633301
    3. '   ' → logprob: -6.508847236633301
    4. '):' → logprob: -6.633847236633301
    5. '):
' → logprob: -6.633847236633301
    6. '[' → logprob: -6.758847236633301
    7. '       ' → logprob: -8.5088472366333
    8. ' )' → logprob: -8.8838472366333
    9. '[
' → logprob: -10.2588472366333
    10. '[i' → logprob: -10.5088472366333

Token 266: ' a' (ID: 261)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.40817126631736755
    2. 's' → logprob: -1.65817129611969
    3. ' the' → logprob: -2.7831711769104004
    4. ')' → logprob: -2.9081711769104004
    5. 'the' → logprob: -4.2831711769104
    6. '0' → logprob: -4.9081711769104
    7. '1' → logprob: -6.0331711769104
    8. ' ' → logprob: -6.5331711769104
    9. ' )' → logprob: -7.2831711769104
    10. ' a' → logprob: -7.6581711769104

Token 267: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.6440756916999817
    2. ')' → logprob: -1.644075632095337
    3. ' string' → logprob: -2.394075632095337
    4. 'string' → logprob: -2.644075632095337
    5. 'number' → logprob: -3.394075632095337
    6. ' s' → logprob: -3.769075632095337
    7. ' integer' → logprob: -4.019075870513916
    8. ' )' → logprob: -4.894075870513916
    9. 's' → logprob: -5.019075870513916
    10. 'integer' → logprob: -5.644075870513916

Token 268: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09888818114995956
    2. ')
' → logprob: -3.2238881587982178
    3. '   ' → logprob: -3.7238881587982178
    4. '):
' → logprob: -3.8488881587982178
    5. '       ' → logprob: -5.473888397216797
    6. '):' → logprob: -5.598888397216797
    7. ').' → logprob: -7.473888397216797
    8. '[' → logprob: -8.598888397216797
    9. ' )' → logprob: -10.473888397216797
    10. ').
' → logprob: -10.723888397216797

Token 269: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3734442889690399
    2. '):
' → logprob: -1.6234443187713623
    3. ')' → logprob: -2.7484443187713623
    4. '):' → logprob: -3.6234443187713623
    5. '   ' → logprob: -3.9984443187713623
    6. ')
' → logprob: -5.873444080352783
    7. '
' → logprob: -7.873444080352783
    8. '"""
' → logprob: -7.873444080352783
    9. '```' → logprob: -8.123444557189941
    10. ':
' → logprob: -8.373444557189941

Token 270: ' base' (ID: 3611)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.36649778485298157
    2. '       ' → logprob: -1.8664977550506592
    3. 'mod' → logprob: -2.616497755050659
    4. ' self' → logprob: -3.491497755050659
    5. '           ' → logprob: -3.616497755050659
    6. ')' → logprob: -4.866497993469238
    7. ' mod' → logprob: -5.491497993469238
    8. 'base' (adapté à ' base') → logprob: -5.866497993469238
    9. 'n' → logprob: -6.741497993469238
    10. ' base' → logprob: -6.991497993469238

Token 271: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15307313203811646
    2. '=' → logprob: -2.0280730724334717
    3. '):' → logprob: -5.278073310852051
    4. '):
' → logprob: -5.528073310852051
    5. ')' → logprob: -7.778073310852051
    6. ',
' → logprob: -8.65307331085205
    7. ':' → logprob: -8.90307331085205
    8. '   ' → logprob: -9.27807331085205
    9. ' ,' → logprob: -9.27807331085205
    10. ' =' → logprob: -9.77807331085205

Token 272: 'int' (ID: 491)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24403883516788483
    2. '10' → logprob: -1.7440388202667236
    3. '2' → logprob: -3.7440388202667236
    4. 'int' → logprob: -5.369039058685303
    5. ' )' → logprob: -5.494039058685303
    6. '=' → logprob: -6.244039058685303
    7. '1' → logprob: -6.369039058685303
    8. '):
' → logprob: -6.494039058685303
    9. ')
' → logprob: -7.494039058685303
    10. '100' → logprob: -7.869039058685303

Token 273: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2604359984397888
    2. '):
' → logprob: -1.6354360580444336
    3. ',' → logprob: -3.5104360580444336
    4. ')' → logprob: -6.135436058044434
    5. '=' → logprob: -6.510436058044434
    6. '   ' → logprob: -7.510436058044434
    7. ',
' → logprob: -9.385436058044434
    8. '),' → logprob: -9.760436058044434
    9. ')=' → logprob: -9.885436058044434
    10. ' ):' → logprob: -9.885436058044434

Token 274: ' Hash' (ID: 10242)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23203085362911224
    2. ' )' → logprob: -1.8570308685302734
    3. ' base' → logprob: -3.9820308685302734
    4. 'base' → logprob: -3.9820308685302734
    5. ' ' → logprob: -5.232030868530273
    6. ' 
' → logprob: -5.982030868530273
    7. '32' → logprob: -6.857030868530273
    8. ' int' → logprob: -6.982030868530273
    9. '<|end|>' → logprob: -6.982030868530273
    10. 'int' → logprob: -7.357030868530273

Token 275: ' base' (ID: 3611)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38728809356689453
    2. '   ' → logprob: -2.5122880935668945
    3. ' _' → logprob: -2.6372880935668945
    4. '       ' → logprob: -3.6372880935668945
    5. '=' → logprob: -3.8872880935668945
    6. ' =' → logprob: -3.8872880935668945
    7. ' ' → logprob: -4.1372880935668945
    8. '_' → logprob: -4.1372880935668945
    9. ')
' → logprob: -4.1372880935668945
    10. '):
' → logprob: -4.5122880935668945

Token 276: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.511288583278656
    2. '):
' → logprob: -1.2612886428833008
    3. '=' → logprob: -3.011288642883301
    4. ',' → logprob: -3.886288642883301
    5. '):' → logprob: -3.886288642883301
    6. '   ' → logprob: -4.136288642883301
    7. ')
' → logprob: -4.761288642883301
    8. ',
' → logprob: -7.511288642883301
    9. '),' → logprob: -8.2612886428833
    10. '       ' → logprob: -8.5112886428833

Token 277: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9193795323371887
    2. '       ' → logprob: -0.9193795323371887
    3. ')' → logprob: -2.669379472732544
    4. ',
' → logprob: -2.794379472732544
    5. ',' → logprob: -3.169379472732544
    6. '):
' → logprob: -3.919379472732544
    7. ')
' → logprob: -4.919379711151123
    8. '           ' → logprob: -7.169379711151123
    9. '"""
' → logprob: -7.544379711151123
    10. '```' → logprob: -7.544379711151123

Token 278: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.8960110545158386
    2. 'mod' (adapté à ' mod') → logprob: -0.8960110545158386
    3. 'int' → logprob: -2.2710111141204834
    4. ' int' → logprob: -2.5210111141204834
    5. '       ' → logprob: -11.896011352539062
    6. ' ' → logprob: -12.896011352539062
    7. '           ' → logprob: -13.146011352539062
    8. '_mod' → logprob: -13.396011352539062
    9. '	mod' → logprob: -13.646011352539062
    10. '   ' → logprob: -13.771011352539062

Token 279: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.26717880368232727
    2. '):
' → logprob: -1.5171787738800049
    3. ')' → logprob: -4.767179012298584
    4. ':' → logprob: -5.267179012298584
    5. '=' → logprob: -7.142179012298584
    6. '   ' → logprob: -8.142178535461426
    7. '):

' → logprob: -8.892178535461426
    8. ' ):' → logprob: -9.142178535461426
    9. ':int' → logprob: -10.642178535461426
    10. '):
' → logprob: -11.017178535461426

Token 280: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.01373701449483633
    2. ')' → logprob: -4.888737201690674
    3. ' int' → logprob: -5.138737201690674
    4. ':int' → logprob: -9.638736724853516
    5. '[int' → logprob: -9.763736724853516
    6. '(int' → logprob: -10.263736724853516
    7. '10' → logprob: -10.513736724853516
    8. '<int' → logprob: -11.138736724853516
    9. '):
' → logprob: -11.138736724853516
    10. '=int' → logprob: -11.263736724853516

Token 281: '):' (ID: 3127)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1271115243434906
    2. '):' → logprob: -2.1271114349365234
    3. ')' → logprob: -9.127111434936523
    4. '):
' → logprob: -10.752111434936523
    5. '):

' → logprob: -11.002111434936523
    6. '   ' → logprob: -11.377111434936523
    7. ':' → logprob: -11.627111434936523
    8. '=' → logprob: -11.627111434936523
    9. ' ):
' → logprob: -12.877111434936523
    10. ' ):' → logprob: -14.002111434936523

Token 282: ' Mod' (ID: 7191)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.16026028990745544
    2. ' int' → logprob: -1.9102603197097778
    3. ')' → logprob: -11.285260200500488
    4. '[int' → logprob: -11.285260200500488
    5. '(int' → logprob: -12.035260200500488
    6. '<|end|>' → logprob: -13.410260200500488
    7. ':int' → logprob: -14.285260200500488
    8. '<int' → logprob: -14.535260200500488
    9. ' 
' → logprob: -14.660260200500488
    10. ']int' → logprob: -15.285260200500488

Token 283: 'ulus' (ID: 40006)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5884864330291748
    2. ')' → logprob: -1.8384864330291748
    3. '_mod' → logprob: -1.8384864330291748
    4. '```' → logprob: -3.088486433029175
    5. '):
' → logprob: -3.838486433029175
    6. 'mod' → logprob: -4.213486671447754
    7. '=None' → logprob: -4.713486671447754
    8. '=' → logprob: -5.088486671447754
    9. 'ulus' → logprob: -5.088486671447754
    10. 'def' → logprob: -5.463486671447754

Token 284: ' for' (ID: 395)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.47532540559768677
    2. '):' → logprob: -0.9753254055976868
    3. ')' → logprob: -7.600325584411621
    4. '   ' → logprob: -7.975325584411621
    5. '=' → logprob: -8.475325584411621
    6. ':' → logprob: -9.975325584411621
    7. '):
' → logprob: -10.100325584411621
    8. '       ' → logprob: -10.350325584411621
    9. '):

' → logprob: -10.850325584411621
    10. '```' → logprob: -11.600325584411621

Token 285: ' hash' (ID: 10691)
  Prédit: ' mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.7098825573921204
    2. 'mod' → logprob: -0.8348825573921204
    3. ' the' → logprob: -3.0848824977874756
    4. 'int' → logprob: -5.209882736206055
    5. '10' → logprob: -5.334882736206055
    6. ')' → logprob: -5.459882736206055
    7. 'the' → logprob: -5.709882736206055
    8. ' modulus' → logprob: -5.834882736206055
    9. ' int' → logprob: -6.459882736206055
    10. ' modulo' → logprob: -6.834882736206055

Token 286: ' calculation' (ID: 40722)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014094635844230652
    2. '):' → logprob: -4.889094829559326
    3. '):
' → logprob: -5.514094829559326
    4. ')
' → logprob: -7.139094829559326
    5. ').' → logprob: -7.889094829559326
    6. '_value' → logprob: -7.889094829559326
    7. '`)' → logprob: -8.639094352722168
    8. '_mod' → logprob: -8.889094352722168
    9. ')`' → logprob: -9.014094352722168
    10. ' )' → logprob: -9.764094352722168

Token 287: '.
' (ID: 558)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.07441616803407669
    2. '):' → logprob: -2.699416160583496
    3. ')' → logprob: -6.074416160583496
    4. '   ' → logprob: -6.199416160583496
    5. '       ' → logprob: -9.824416160583496
    6. ')
' → logprob: -10.324416160583496
    7. '):
' → logprob: -10.699416160583496
    8. '```' → logprob: -11.699416160583496
    9. '):

' → logprob: -12.074416160583496
    10. ' ):
' → logprob: -12.824416160583496

Token 288: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1353796273469925
    2. '):
' → logprob: -2.3853795528411865
    3. '   ' → logprob: -3.8853795528411865
    4. ')' → logprob: -4.885379791259766
    5. '):' → logprob: -5.135379791259766
    6. '```' → logprob: -8.510379791259766
    7. '
' → logprob: -9.385379791259766
    8. '"""
' → logprob: -9.510379791259766
    9. '`' → logprob: -10.260379791259766
    10. '"""' → logprob: -10.760379791259766

Token 289: ' """
' (ID: 7037)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6804344654083252
    2. '       ' → logprob: -0.8054344654083252
    3. '   ' → logprob: -3.555434465408325
    4. '):' → logprob: -4.430434226989746
    5. ')' → logprob: -5.555434226989746
    6. '```' → logprob: -6.555434226989746
    7. '
' → logprob: -7.805434226989746
    8. '``' → logprob: -9.305434226989746
    9. '"""
' (adapté à ' """
') → logprob: -9.305434226989746
    10. ':
' → logprob: -9.555434226989746

Token 290: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00035238542477600276
    2. 'self' → logprob: -8.12535285949707
    3. '   ' → logprob: -9.87535285949707
    4. ' self' → logprob: -12.75035285949707
    5. '```' → logprob: -14.50035285949707
    6. 'def' → logprob: -14.75035285949707
    7. '           ' → logprob: -14.87535285949707
    8. '	' → logprob: -15.50035285949707
    9. 'super' → logprob: -15.50035285949707
    10. '	   ' → logprob: -16.50035285949707

Token 291: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.04326704144477844
    2. '       ' → logprob: -3.168267011642456
    3. 'n' → logprob: -8.668267250061035
    4. ' self' → logprob: -9.418267250061035
    5. '   ' → logprob: -11.918267250061035
    6. 's' → logprob: -12.543267250061035
    7. 'h' → logprob: -13.918267250061035
    8. '	self' → logprob: -14.043267250061035
    9. 'def' → logprob: -14.418267250061035
    10. 'length' → logprob: -14.543267250061035

Token 292: '.base' (ID: 15523)
  Prédit: '.h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.h' → logprob: -0.1868860125541687
    2. '.' → logprob: -1.9368860721588135
    3. '.s' → logprob: -4.061885833740234
    4. ' =' → logprob: -5.436885833740234
    5. ' .' → logprob: -5.811885833740234
    6. '=' → logprob: -7.811885833740234
    7. '   ' → logprob: -8.561885833740234
    8. '.=' → logprob: -8.686885833740234
    9. '._' → logprob: -8.811885833740234
    10. '.base' → logprob: -8.811885833740234

Token 293: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14324046671390533
    2. ' =' → logprob: -2.018240451812744
    3. ',' → logprob: -7.518240451812744
    4. ')' → logprob: -11.643240928649902
    5. '   ' → logprob: -12.643240928649902
    6. '=int' → logprob: -12.643240928649902
    7. '    ' → logprob: -13.143240928649902
    8. ' ' → logprob: -13.518240928649902
    9. '_' → logprob: -14.268240928649902
    10. ' ,' → logprob: -15.018240928649902

Token 294: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.01888085901737213
    2. ' base' → logprob: -4.393880844116211
    3. '10' → logprob: -6.393880844116211
    4. '100' → logprob: -6.393880844116211
    5. '131' → logprob: -6.768880844116211
    6. '911' → logprob: -7.768880844116211
    7. '(base' → logprob: -8.268880844116211
    8. ' ' → logprob: -8.768880844116211
    9. '101' → logprob: -8.893880844116211
    10. '127' → logprob: -9.018880844116211

Token 295: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003918271977454424
    2. 'self' → logprob: -8.625391960144043
    3. '<|end|>' → logprob: -9.125391960144043
    4. ',' → logprob: -10.250391960144043
    5. '
' → logprob: -10.500391960144043
    6. ',
' → logprob: -12.125391960144043
    7. 'mod' → logprob: -12.375391960144043
    8. '#' → logprob: -12.500391960144043
    9. '```' → logprob: -12.500391960144043
    10. '<|end|>' → logprob: -12.625391960144043

Token 296: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019618207588791847
    2. 'self' → logprob: -6.251961708068848
    3. ',' → logprob: -11.376961708068848
    4. ' self' → logprob: -12.126961708068848
    5. '
' → logprob: -12.876961708068848
    6. '.' → logprob: -13.376961708068848
    7. ',
' → logprob: -13.751961708068848
    8. '<|end|>' → logprob: -13.751961708068848
    9. '```' → logprob: -13.751961708068848
    10. 'mod' → logprob: -14.001961708068848

Token 297: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00020020268857479095
    2. '       ' → logprob: -8.750200271606445
    3. 'mod' → logprob: -10.375200271606445
    4. ' self' → logprob: -11.625200271606445
    5. 's' → logprob: -14.500200271606445
    6. '
' → logprob: -14.875200271606445
    7. '   ' → logprob: -15.500200271606445
    8. '=self' → logprob: -16.125200271606445
    9. '(self' → logprob: -16.500200271606445
    10. '=' → logprob: -17.000200271606445

Token 298: '.mod' (ID: 19046)
  Prédit: '.mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mod' → logprob: -0.08513883501291275
    2. '.h' → logprob: -2.5851387977600098
    3. '.' → logprob: -5.58513879776001
    4. '.p' → logprob: -6.96013879776001
    5. 'mod' → logprob: -7.46013879776001
    6. '.s' → logprob: -8.085139274597168
    7. '.pow' → logprob: -9.335139274597168
    8. '=' → logprob: -9.460139274597168
    9. '   ' → logprob: -9.585139274597168
    10. '._' → logprob: -9.710139274597168

Token 299: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.40294188261032104
    2. ' =' → logprob: -1.1529419422149658
    3. '<|end|>' → logprob: -5.027941703796387
    4. ')' → logprob: -5.277941703796387
    5. '       ' → logprob: -6.402941703796387
    6. ',' → logprob: -6.527941703796387
    7. '   ' → logprob: -7.902941703796387
    8. '<|end|>' → logprob: -8.652941703796387
    9. 'def' → logprob: -9.402941703796387
    10. ')
' → logprob: -9.527941703796387

Token 300: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -2.5941604690160602e-05
    2. ' mod' → logprob: -10.875025749206543
    3. '10' → logprob: -12.250025749206543
    4. '100' → logprob: -13.500025749206543
    5. '(mod' → logprob: -14.625025749206543
    6. '(' → logprob: -15.875025749206543
    7. ' ' → logprob: -17.37502670288086
    8. '	mod' → logprob: -17.50002670288086
    9. '998' → logprob: -17.75002670288086
    10. '
' → logprob: -18.00002670288086

Token 301: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0034108434338122606
    2. '
' → logprob: -6.128410816192627
    3. 'self' → logprob: -6.878410816192627
    4. ',' → logprob: -9.503411293029785
    5. '        
' → logprob: -10.003411293029785
    6. '   ' → logprob: -11.003411293029785
    7. ',
' → logprob: -11.253411293029785
    8. '<|end|>' → logprob: -11.878411293029785
    9. ' self' → logprob: -12.253411293029785
    10. '```' → logprob: -12.253411293029785

Token 302: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005651841638609767
    2. 'self' → logprob: -7.500565052032471
    3. '   ' → logprob: -11.500565528869629
    4. '	' → logprob: -14.375565528869629
    5. '
' → logprob: -14.625565528869629
    6. ' self' → logprob: -14.875565528869629
    7. '           ' → logprob: -15.375565528869629
    8. '```' → logprob: -16.250564575195312
    9. '	self' → logprob: -16.625564575195312
    10. '        
' → logprob: -16.750564575195312

Token 303: ' l' (ID: 305)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001154270488768816
    2. 'n' → logprob: -7.25115442276001
    3. '       ' → logprob: -7.75115442276001
    4. 'h' → logprob: -11.251153945922852
    5. ' self' → logprob: -14.501153945922852
    6. 'm' → logprob: -16.12615394592285
    7. '   ' → logprob: -16.37615394592285
    8. 'l' (adapté à ' l') → logprob: -16.37615394592285
    9. 'length' → logprob: -16.37615394592285
    10. 's' → logprob: -17.25115394592285

Token 304: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10877113789319992
    2. ' =' → logprob: -2.6087710857391357
    3. 'en' → logprob: -3.6087710857391357
    4. '=len' → logprob: -6.608771324157715
    5. '   ' → logprob: -7.858771324157715
    6. 'ength' → logprob: -7.983771324157715
    7. 'e' → logprob: -8.608771324157715
    8. 'f' → logprob: -10.608771324157715
    9. '       ' → logprob: -10.983771324157715
    10. 'eng' → logprob: -11.483771324157715

Token 305: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.10021357238292694
    2. ' len' → logprob: -2.3502135276794434
    3. '(len' → logprob: -12.225214004516602
    4. '[len' → logprob: -13.475214004516602
    5. '=len' → logprob: -14.725214004516602
    6. '	len' → logprob: -16.6002140045166
    7. ',len' → logprob: -17.1002140045166
    8. '<len' → logprob: -17.8502140045166
    9. '   ' → logprob: -18.1002140045166
    10. 'en' → logprob: -18.4752140045166

Token 306: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.001455236109904945
    2. '(' → logprob: -6.626455307006836
    3. 's' → logprob: -9.001455307006836
    4. ' (' → logprob: -12.751455307006836
    5. '(
' → logprob: -12.876455307006836
    6. ')' → logprob: -14.876455307006836
    7. ' s' → logprob: -15.751455307006836
    8. '(S' → logprob: -18.126455307006836
    9. '(

' → logprob: -18.501455307006836
    10. '((' → logprob: -18.751455307006836

Token 307: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47412991523742676
    2. ')
' → logprob: -0.9741299152374268
    3. '       ' → logprob: -10.599129676818848
    4. ')
' → logprob: -11.599129676818848
    5. ')

' → logprob: -11.974129676818848
    6. ' )
' → logprob: -12.599129676818848
    7. ' )' → logprob: -12.849129676818848
    8. '   ' → logprob: -12.974129676818848
    9. ')s' → logprob: -13.974129676818848
    10. ')#' → logprob: -14.849129676818848

Token 308: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20145466923713684
    2. '
' → logprob: -2.2014546394348145
    3. 'self' → logprob: -2.7014546394348145
    4. '```' → logprob: -6.7014546394348145
    5. '        
' → logprob: -7.0764546394348145
    6. ' self' → logprob: -7.2014546394348145
    7. '   ' → logprob: -8.201455116271973
    8. '
' → logprob: -8.951455116271973
    9. '[self' → logprob: -8.951455116271973
    10. '#' → logprob: -9.201455116271973

Token 309: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0035272561945021152
    2. '       ' → logprob: -5.8785271644592285
    3. ' self' → logprob: -7.2535271644592285
    4. '   ' → logprob: -12.003527641296387
    5. '```' → logprob: -12.753527641296387
    6. 'if' → logprob: -13.753527641296387
    7. 'h' → logprob: -14.003527641296387
    8. '[self' → logprob: -14.253527641296387
    9. '(self' → logprob: -14.378527641296387
    10. '	self' → logprob: -14.503527641296387

Token 310: '.h' (ID: 1508)
  Prédit: '.h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.h' → logprob: -4.7755875129951164e-05
    2. ' .' → logprob: -10.75004768371582
    3. 'h' → logprob: -11.25004768371582
    4. '.' → logprob: -11.87504768371582
    5. '.p' → logprob: -12.50004768371582
    6. '.py' → logprob: -15.00004768371582
    7. '.hs' → logprob: -15.00004768371582
    8. '.ht' → logprob: -15.12504768371582
    9. '.hp' → logprob: -15.25004768371582
    10. '.hm' → logprob: -15.75004768371582

Token 311: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2016342580318451
    2. ' =' → logprob: -1.7016342878341675
    3. '[' → logprob: -8.576634407043457
    4. '=[' → logprob: -10.701634407043457
    5. ',' → logprob: -12.451634407043457
    6. ' =[' → logprob: -12.826634407043457
    7. ' ' → logprob: -13.576634407043457
    8. '=[]' → logprob: -14.201634407043457
    9. '[:]' → logprob: -15.326634407043457
    10. '.append' → logprob: -15.451634407043457

Token 312: ' h' (ID: 312)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -6.575563020305708e-05
    2. ' [' → logprob: -9.750065803527832
    3. '[s' → logprob: -11.875065803527832
    4. '[l' → logprob: -15.250065803527832
    5. '[p' → logprob: -16.375064849853516
    6. '   ' → logprob: -17.875064849853516
    7. '[b' → logprob: -17.875064849853516
    8. '[h' → logprob: -18.000064849853516
    9. '[self' → logprob: -18.375064849853516
    10. '[a' → logprob: -18.875064849853516

Token 313: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7672915458679199
    2. '=[' → logprob: -1.39229154586792
    3. ' =' → logprob: -1.51729154586792
    4. '=' → logprob: -2.76729154586792
    5. '[:]' → logprob: -6.14229154586792
    6. '[:' → logprob: -7.14229154586792
    7. ' =[' → logprob: -7.14229154586792
    8. ' [' → logprob: -8.142292022705078
    9. '
' → logprob: -8.642292022705078
    10. 'import' → logprob: -9.142292022705078

Token 314: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.5577775128767826e-06
    2. ' [' → logprob: -12.125005722045898
    3. '[s' → logprob: -17.6250057220459
    4. '[p' → logprob: -19.0000057220459
    5. '([' → logprob: -19.2500057220459
    6. '[int' → logprob: -19.3750057220459
    7. '   ' → logprob: -19.3750057220459
    8. '[self' → logprob: -19.6250057220459
    9. '=[' → logprob: -19.7500057220459
    10. '0' → logprob: -20.0000057220459

Token 315: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '[' → logprob: -17.0
    4. '1' → logprob: -18.375
    5. '(' → logprob: -18.375
    6. '   ' → logprob: -19.125
    7. '۰' → logprob: -19.375
    8. '{' → logprob: -20.125
    9. '
' → logprob: -20.125
    10. '           ' → logprob: -20.3125

Token 316: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.015604105778038502
    2. ']*(' → logprob: -4.890604019165039
    3. ']
' → logprob: -5.015604019165039
    4. ']*' → logprob: -7.390604019165039
    5. ',' → logprob: -7.640604019165039
    6. ']+' → logprob: -9.015604019165039
    7. '0' → logprob: -10.015604019165039
    8. 'for' → logprob: -10.640604019165039
    9. ',
' → logprob: -11.515604019165039
    10. ' for' → logprob: -11.765604019165039

Token 317: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5477689504623413
    2. '*(' → logprob: -2.047769069671631
    3. '*l' → logprob: -2.297769069671631
    4. '
' → logprob: -2.922769069671631
    5. ']' → logprob: -3.422769069671631
    6. '*' → logprob: -3.547769069671631
    7. ',' → logprob: -4.422769069671631
    8. '(l' → logprob: -4.547769069671631
    9. 'for' → logprob: -4.547769069671631
    10. ']*(' → logprob: -4.922769069671631

Token 318: ' (' (ID: 350)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -1.0087516784551553e-05
    2. '(' → logprob: -12.00001049041748
    3. ' (' → logprob: -12.62501049041748
    4. '(ls' → logprob: -16.000009536743164
    5. 'l' → logprob: -16.125009536743164
    6. '   ' → logprob: -16.375009536743164
    7. '((' → logprob: -16.875009536743164
    8. '(
' → logprob: -17.375009536743164
    9. '(len' → logprob: -17.750009536743164
    10. '(ll' → logprob: -17.875009536743164

Token 319: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00010759611177491024
    2. '(l' → logprob: -9.250107765197754
    3. ' l' → logprob: -11.500107765197754
    4. '   ' → logprob: -15.125107765197754
    5. '(' → logprob: -15.375107765197754
    6. '	l' → logprob: -15.500107765197754
    7. '
' → logprob: -15.625107765197754
    8. ' (' → logprob: -16.125106811523438
    9. '{' → logprob: -16.500106811523438
    10. '[l' → logprob: -17.125106811523438

Token 320: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00026741522015072405
    2. ' +' → logprob: -8.375267028808594
    3. '+
' → logprob: -10.250267028808594
    4. '+l' → logprob: -14.125267028808594
    5. '+)' → logprob: -15.250267028808594
    6. ')' → logprob: -15.500267028808594
    7. ' +
' → logprob: -16.375267028808594
    8. '1' → logprob: -16.500267028808594
    9. '
' → logprob: -16.625267028808594
    10. '+h' → logprob: -17.250267028808594

Token 321: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '2' → logprob: -17.0
    4. '```' → logprob: -18.25
    5. '   ' → logprob: -18.5
    6. '
' → logprob: -19.625
    7. '{' → logprob: -20.25
    8. '7' → logprob: -20.625
    9. '１' → logprob: -21.0
    10. '11' → logprob: -21.5

Token 322: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '2' → logprob: -17.125
    4. '```' → logprob: -17.5
    5. '   ' → logprob: -18.125
    6. '
' → logprob: -18.375
    7. '{' → logprob: -18.8125
    8. '１' → logprob: -19.6875
    9. 'len' → logprob: -19.75
    10. '0' → logprob: -20.0

Token 323: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3136451840400696
    2. ')' → logprob: -1.3136451244354248
    3. '       ' → logprob: -8.438645362854004
    4. ')
' → logprob: -8.813645362854004
    5. ']
' → logprob: -12.438645362854004
    6. ')

' → logprob: -12.563645362854004
    7. ']' → logprob: -12.813645362854004
    8. ')`
' → logprob: -12.813645362854004
    9. '   ' → logprob: -13.563645362854004
    10. '
' → logprob: -13.563645362854004

Token 324: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03658594563603401
    2. ' for' → logprob: -3.911586046218872
    3. 'for' → logprob: -4.911585807800293
    4. '   ' → logprob: -6.161585807800293
    5. '```' → logprob: -6.161585807800293
    6. '        
' → logprob: -6.786585807800293
    7. '	' → logprob: -7.536585807800293
    8. '	for' → logprob: -7.536585807800293
    9. '<|end|>' → logprob: -7.661585807800293
    10. '
' → logprob: -7.786585807800293

Token 325: ' tmp' (ID: 8919)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21632172167301178
    2. '       ' → logprob: -1.8413217067718506
    3. ' for' → logprob: -3.3413217067718506
    4. '	for' → logprob: -8.09132194519043
    5. '   ' → logprob: -9.46632194519043
    6. '	' → logprob: -9.46632194519043
    7. 'self' → logprob: -10.96632194519043
    8. '[' → logprob: -11.71632194519043
    9. ' ' → logprob: -12.09132194519043
    10. '	   ' → logprob: -12.46632194519043

Token 326: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3488714396953583
    2. '=' → logprob: -1.2238714694976807
    3. '[' → logprob: -8.348871231079102
    4. '   ' → logprob: -10.098871231079102
    5. 'for' → logprob: -10.348871231079102
    6. 's' → logprob: -10.473871231079102
    7. ',' → logprob: -10.723871231079102
    8. ' ' → logprob: -11.723871231079102
    9. '_' → logprob: -11.723871231079102
    10. '=[]' → logprob: -11.848871231079102

Token 327: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1718495935201645
    2. '1' → logprob: -1.9218496084213257
    3. '[' → logprob: -5.171849727630615
    4. 's' → logprob: -5.796849727630615
    5. ' ' → logprob: -6.296849727630615
    6. '[s' → logprob: -8.296849250793457
    7. ' [' → logprob: -8.296849250793457
    8. ' s' → logprob: -9.546849250793457
    9. '(' → logprob: -9.671849250793457
    10. 'pow' → logprob: -9.921849250793457

Token 328: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.13217517733573914
    2. '[' → logprob: -2.1321752071380615
    3. '0' → logprob: -5.882174968719482
    4. '[s' → logprob: -6.382174968719482
    5. 's' → logprob: -8.38217544555664
    6. '[int' → logprob: -9.00717544555664
    7. 'gp' → logprob: -9.63217544555664
    8. '[g' → logprob: -10.00717544555664
    9. '[p' → logprob: -10.25717544555664
    10. '[h' → logprob: -10.25717544555664

Token 329: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36044079065322876
    2. '
' → logprob: -1.985440731048584
    3. 'for' → logprob: -1.985440731048584
    4. ' for' → logprob: -3.985440731048584
    5. '<|end|>' → logprob: -5.735440731048584
    6. ' 
' → logprob: -6.485440731048584
    7. '        
' → logprob: -7.235440731048584
    8. '	for' → logprob: -7.360440731048584
    9. '   ' → logprob: -7.735440731048584
    10. ')' → logprob: -7.860440731048584

Token 330: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4319748878479004
    2. 'for' → logprob: -1.1819748878479004
    3. ' for' → logprob: -3.3069748878479004
    4. '
' → logprob: -5.8069748878479
    5. '	for' → logprob: -6.5569748878479
    6. '	' → logprob: -6.8069748878479
    7. ' 
' → logprob: -7.8069748878479
    8. '   ' → logprob: -8.181974411010742
    9. '<|end|>' → logprob: -8.681974411010742
    10. ' ' → logprob: -8.681974411010742

Token 331: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7717805504798889
    2. '       ' → logprob: -1.2717804908752441
    3. 'for' → logprob: -1.5217804908752441
    4. '	for' → logprob: -3.521780490875244
    5. '
' → logprob: -5.396780490875244
    6. '	' → logprob: -5.521780490875244
    7. '   ' → logprob: -8.021780967712402
    8. '	   ' → logprob: -8.771780967712402
    9. '\t' → logprob: -9.396780967712402
    10. '	       ' → logprob: -9.771780967712402

Token 332: ' Compute' (ID: 45438)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10085921734571457
    2. ' for' → logprob: -2.3508591651916504
    3. '       ' → logprob: -7.72585916519165
    4. 'i' → logprob: -9.225859642028809
    5. '   ' → logprob: -9.350859642028809
    6. '	for' → logprob: -11.600859642028809
    7. ' i' → logprob: -11.725859642028809
    8. '```' → logprob: -12.350859642028809
    9. '    ' → logprob: -13.350859642028809
    10. '        
' → logprob: -14.725859642028809

Token 333: ' prefix' (ID: 18633)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6744343638420105
    2. ' for' → logprob: -0.9244343638420105
    3. 'i' → logprob: -3.9244344234466553
    4. '   ' → logprob: -4.299434185028076
    5. ' i' → logprob: -4.424434185028076
    6. 'tmp' → logprob: -4.674434185028076
    7. '       ' → logprob: -4.799434185028076
    8. ' tmp' → logprob: -4.924434185028076
    9. 'pow' → logprob: -5.049434185028076
    10. '```' → logprob: -5.299434185028076

Token 334: ' hashes' (ID: 131101)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.3310071229934692
    2. 'for' → logprob: -1.4560071229934692
    3. '       ' → logprob: -2.0810070037841797
    4. 'hash' → logprob: -2.0810070037841797
    5. ' =' → logprob: -2.9560070037841797
    6. '   ' → logprob: -3.0810070037841797
    7. '=' → logprob: -3.2060070037841797
    8. '_hash' → logprob: -3.4560070037841797
    9. ' hashes' → logprob: -3.7060070037841797
    10. 's' → logprob: -4.33100700378418

Token 335: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36149293184280396
    2. ' for' → logprob: -1.9864928722381592
    3. 'for' → logprob: -2.361492872238159
    4. '
' → logprob: -2.986492872238159
    5. '	for' → logprob: -4.486493110656738
    6. '	' → logprob: -5.361493110656738
    7. '   ' → logprob: -6.111493110656738
    8. '        
' → logprob: -6.861493110656738
    9. '    
' → logprob: -8.236493110656738
    10. ' 
' → logprob: -8.361493110656738

Token 336: ' the' (ID: 290)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.187897726893425
    2. 'range' → logprob: -2.0628976821899414
    3. ' range' → logprob: -3.8128976821899414
    4. 's' → logprob: -4.687897682189941
    5. ' i' → logprob: -4.687897682189941
    6. 'l' → logprob: -6.937897682189941
    7. 'for' → logprob: -7.312897682189941
    8. ' s' → logprob: -7.562897682189941
    9. '   ' → logprob: -7.812897682189941
    10. '1' → logprob: -8.687897682189941

Token 337: ' input' (ID: 3422)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20277611911296844
    2. 'for' → logprob: -2.8277761936187744
    3. 'range' → logprob: -2.9527761936187744
    4. ' range' → logprob: -3.5777761936187744
    5. ' for' → logprob: -3.8277761936187744
    6. ' i' → logprob: -4.202775955200195
    7. 's' → logprob: -5.202775955200195
    8. ' s' → logprob: -7.827775955200195
    9. '0' → logprob: -7.827775955200195
    10. '1' → logprob: -7.952775955200195

Token 338: ' sequence' (ID: 16281)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.530137300491333
    2. 'for' → logprob: -1.030137300491333
    3. 's' → logprob: -3.405137300491333
    4. ' s' → logprob: -4.780137062072754
    5. '       ' → logprob: -5.030137062072754
    6. '   ' → logprob: -5.280137062072754
    7. ' range' → logprob: -8.280137062072754
    8. '	for' → logprob: -8.405137062072754
    9. ' sequence' → logprob: -8.905137062072754
    10. 'range' → logprob: -9.280137062072754

Token 339: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.41581985354423523
    2. 'for' → logprob: -1.2908198833465576
    3. '       ' → logprob: -3.2908198833465576
    4. '   ' → logprob: -4.1658196449279785
    5. '	for' → logprob: -5.1658196449279785
    6. '	' → logprob: -6.6658196449279785
    7. '
' → logprob: -7.0408196449279785
    8. ' ' → logprob: -7.1658196449279785
    9. '    ' → logprob: -7.5408196449279785
    10. ',' → logprob: -7.5408196449279785

Token 340: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2423468679189682
    2. 'for' → logprob: -2.36734676361084
    3. '   ' → logprob: -2.74234676361084
    4. '       ' → logprob: -2.99234676361084
    5. '	for' → logprob: -5.61734676361084
    6. '    ' → logprob: -6.74234676361084
    7. ' ' → logprob: -7.61734676361084
    8. '	' → logprob: -8.11734676361084
    9. '    
' → logprob: -8.86734676361084
    10. '
' → logprob: -9.11734676361084

Token 341: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5861374139785767
    2. 'for' (adapté à ' for') → logprob: -0.9611374139785767
    3. '       ' → logprob: -2.836137294769287
    4. '   ' → logprob: -6.461137294769287
    5. '	for' → logprob: -7.211137294769287
    6. '
' → logprob: -10.211137771606445
    7. '    ' → logprob: -10.586137771606445
    8. '```' → logprob: -10.961137771606445
    9. '	' → logprob: -11.336137771606445
    10. '	   ' → logprob: -11.961137771606445

Token 342: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.22545000910758972
    2. ' i' → logprob: -1.600450038909912
    3. '_i' → logprob: -10.850449562072754
    4. '	i' → logprob: -12.225449562072754
    5. ' ' → logprob: -12.850449562072754
    6. '   ' → logprob: -12.850449562072754
    7. '0' → logprob: -13.350449562072754
    8. '(i' → logprob: -13.850449562072754
    9. 'I' → logprob: -13.850449562072754
    10. '_' → logprob: -13.850449562072754

Token 343: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04451390355825424
    2. 'in' → logprob: -3.1695139408111572
    3. '+' → logprob: -7.169513702392578
    4. ',' → logprob: -8.419513702392578
    5. '   ' → logprob: -9.294513702392578
    6. '	in' → logprob: -9.294513702392578
    7. ' ' → logprob: -9.669513702392578
    8. ' i' → logprob: -9.794513702392578
    9. '    ' → logprob: -10.544513702392578
    10. '=' → logprob: -10.669513702392578

Token 344: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.020568402484059334
    2. ' range' → logprob: -3.895568370819092
    3. '   ' → logprob: -11.14556884765625
    4. ' ' → logprob: -12.14556884765625
    5. '	range' → logprob: -12.77056884765625
    6. '  ' → logprob: -13.64556884765625
    7. '(range' → logprob: -13.64556884765625
    8. ')' → logprob: -15.27056884765625
    9. '    ' → logprob: -15.27056884765625
    10. '0' → logprob: -15.77056884765625

Token 345: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.3481253385543823
    2. '(' → logprob: -1.9731253385543823
    3. '1' → logprob: -2.473125457763672
    4. 'l' → logprob: -2.723125457763672
    5. ' l' → logprob: -5.473125457763672
    6. '   ' → logprob: -8.473125457763672
    7. '0' → logprob: -8.973125457763672
    8. '(
' → logprob: -9.348125457763672
    9. ' (' → logprob: -9.348125457763672
    10. '(len' → logprob: -9.473125457763672

Token 346: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.8108301162719727
    2. '+' → logprob: -1.3108301162719727
    3. '):
' → logprob: -1.3108301162719727
    4. ' +' → logprob: -4.185830116271973
    5. '   ' → logprob: -8.060830116271973
    6. '       ' → logprob: -8.060830116271973
    7. ',' → logprob: -9.060830116271973
    8. ':' → logprob: -9.185830116271973
    9. ')' → logprob: -9.560830116271973
    10. '1' → logprob: -10.560830116271973

Token 347: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.030249319970607758
    2. '       ' → logprob: -3.9052493572235107
    3. ':' → logprob: -6.780249118804932
    4. ',' → logprob: -6.780249118804932
    5. ' =' → logprob: -7.280249118804932
    6. '	       ' → logprob: -7.405249118804932
    7. '   ' → logprob: -7.530249118804932
    8. '        ' → logprob: -7.530249118804932
    9. ' tmp' → logprob: -7.530249118804932
    10. '+' → logprob: -7.780249118804932

Token 348: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' (adapté à ' tmp') → logprob: -0.1561133861541748
    2. '           ' → logprob: -2.656113386154175
    3. ' tmp' → logprob: -3.156113386154175
    4. 'h' → logprob: -3.781113386154175
    5. ' h' → logprob: -5.656113624572754
    6. '(tmp' → logprob: -6.031113624572754
    7. '               ' → logprob: -6.906113624572754
    8. '(h' → logprob: -6.906113624572754
    9. '   ' → logprob: -8.031113624572754
    10. ' (' → logprob: -8.281113624572754

Token 349: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6344848275184631
    2. ' =' → logprob: -0.7594848275184631
    3. '*=' → logprob: -6.634484767913818
    4. ' +=' → logprob: -8.259485244750977
    5. '+=' → logprob: -8.509485244750977
    6. '=(' → logprob: -10.384485244750977
    7. ' *=' → logprob: -10.384485244750977
    8. '*' → logprob: -11.259485244750977
    9. '+' → logprob: -11.384485244750977
    10. '   ' → logprob: -12.009485244750977

Token 350: ' (' (ID: 350)
  Prédit: '(tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tmp' → logprob: -0.00025228000595234334
    2. ' (' → logprob: -8.625252723693848
    3. '(ans' → logprob: -11.625252723693848
    4. '(s' → logprob: -11.875252723693848
    5. '   ' → logprob: -11.875252723693848
    6. '((' → logprob: -12.000252723693848
    7. '(prev' → logprob: -12.000252723693848
    8. '(tbl' → logprob: -12.375252723693848
    9. '(t' → logprob: -12.625252723693848
    10. '(hash' → logprob: -13.000252723693848

Token 351: 'tmp' (ID: 11669)
  Prédit: 'tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.030003979802131653
    2. '(tmp' → logprob: -3.5300040245056152
    3. 'h' → logprob: -9.155003547668457
    4. ' tmp' → logprob: -9.405003547668457
    5. '(h' → logprob: -10.155003547668457
    6. '	tmp' → logprob: -12.030003547668457
    7. '(' → logprob: -12.030003547668457
    8. '   ' → logprob: -12.905003547668457
    9. '$tmp' → logprob: -12.905003547668457
    10. ' (' → logprob: -13.405003547668457

Token 352: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.08901264518499374
    2. '*' → logprob: -2.464012622833252
    3. '+' → logprob: -10.46401309967041
    4. ' +' → logprob: -10.83901309967041
    5. ' ' → logprob: -11.46401309967041
    6. '*self' → logprob: -12.71401309967041
    7. ' ' → logprob: -12.71401309967041
    8. '   ' → logprob: -13.83901309967041
    9. '*h' → logprob: -13.83901309967041
    10. '*p' → logprob: -14.33901309967041

Token 353: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.002013813704252243
    2. 'self' → logprob: -6.252013683319092
    3. ' base' → logprob: -9.37701416015625
    4. ' self' → logprob: -15.25201416015625
    5. '(base' → logprob: -15.50201416015625
    6. '
' → logprob: -17.12701416015625
    7. '	base' → logprob: -17.62701416015625
    8. 'bases' → logprob: -18.12701416015625
    9. '   ' → logprob: -18.25201416015625
    10. '_base' → logprob: -18.75201416015625

Token 354: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12693145871162415
    2. ' +' → logprob: -2.1269314289093018
    3. '+i' → logprob: -14.251931190490723
    4. '           ' → logprob: -14.626931190490723
    5. ')' → logprob: -14.876931190490723
    6. ' ' → logprob: -15.251931190490723
    7. '+k' → logprob: -15.251931190490723
    8. '+
' → logprob: -15.376931190490723
    9. '+x' → logprob: -15.501931190490723
    10. '+s' → logprob: -15.501931190490723

Token 355: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.005749844945967197
    2. ' s' → logprob: -5.380749702453613
    3. '(s' → logprob: -6.880749702453613
    4. ' (' → logprob: -9.255749702453613
    5. '(' → logprob: -13.005749702453613
    6. '   ' → logprob: -14.130749702453613
    7. '           ' → logprob: -14.130749702453613
    8. '       ' → logprob: -14.880749702453613
    9. ' ' → logprob: -15.130749702453613
    10. '((' → logprob: -15.505749702453613

Token 356: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.6457742175552994e-05
    2. '[' → logprob: -10.000056266784668
    3. '[
' → logprob: -12.500056266784668
    4. ')' → logprob: -13.000056266784668
    5. ' [' → logprob: -14.000056266784668
    6. '[s' → logprob: -14.000056266784668
    7. '[I' → logprob: -14.000056266784668
    8. 'i' → logprob: -14.250056266784668
    9. ')[' → logprob: -14.750056266784668
    10. 's' → logprob: -14.750056266784668

Token 357: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007453064317815006
    2. '])' → logprob: -7.2507452964782715
    3. ' )' → logprob: -10.75074577331543
    4. '))' → logprob: -12.37574577331543
    5. ')%' → logprob: -12.37574577331543
    6. ']' → logprob: -13.25074577331543
    7. ')
' → logprob: -14.50074577331543
    8. '       ' → logprob: -14.62574577331543
    9. '})' → logprob: -14.75074577331543
    10. ')]' → logprob: -14.75074577331543

Token 358: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.024398356676101685
    2. ' %' → logprob: -4.024398326873779
    3. '%' → logprob: -5.774398326873779
    4. ')%' → logprob: -6.274398326873779
    5. ' )' → logprob: -6.774398326873779
    6. '           ' → logprob: -10.024398803710938
    7. '       ' → logprob: -11.149398803710938
    8. '
' → logprob: -11.649398803710938
    9. ']' → logprob: -11.774398803710938
    10. '%i' → logprob: -12.024398803710938

Token 359: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -9.088346359931165e-07
    2. 'self' → logprob: -14.250000953674316
    3. ' mod' → logprob: -15.250000953674316
    4. '(mod' → logprob: -18.25
    5. '	mod' → logprob: -20.375
    6. '
' → logprob: -21.75
    7. '_mod' → logprob: -21.75
    8. '   ' → logprob: -22.125
    9. '```' → logprob: -22.75
    10. ' мод' → logprob: -23.0

Token 360: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003989115823060274
    2. '
' → logprob: -5.753989219665527
    3. '       ' → logprob: -8.003989219665527
    4. 'h' → logprob: -9.003989219665527
    5. ',' → logprob: -9.253989219665527
    6. '   ' → logprob: -10.003989219665527
    7. '```' → logprob: -10.128989219665527
    8. '            
' → logprob: -10.378989219665527
    9. '<|end|>' → logprob: -10.378989219665527
    10. ',
' → logprob: -10.878989219665527

Token 361: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0067484090104699135
    2. '       ' → logprob: -5.381748199462891
    3. '   ' → logprob: -7.131748199462891
    4. '```' → logprob: -8.00674819946289
    5. 'h' → logprob: -8.63174819946289
    6. '
' → logprob: -8.75674819946289
    7. ',' → logprob: -9.13174819946289
    8. '        
' → logprob: -9.50674819946289
    9. '            
' → logprob: -9.50674819946289
    10. '<|end|>' → logprob: -9.50674819946289

Token 362: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' (adapté à ' h') → logprob: -0.015073712915182114
    2. '           ' → logprob: -4.265073776245117
    3. ' h' → logprob: -7.015073776245117
    4. '       ' → logprob: -11.890073776245117
    5. '   ' → logprob: -13.765073776245117
    6. '	h' → logprob: -14.015073776245117
    7. ' ' → logprob: -14.390073776245117
    8. '               ' → logprob: -14.890073776245117
    9. '          ' → logprob: -15.015073776245117
    10. '[h' → logprob: -15.140073776245117

Token 363: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.68022444692906e-05
    2. '[' → logprob: -10.000046730041504
    3. ' [' → logprob: -14.875046730041504
    4. 'i' → logprob: -15.125046730041504
    5. '```' → logprob: -15.875046730041504
    6. '[
' → logprob: -16.00004768371582
    7. '=' → logprob: -16.12504768371582
    8. '[I' → logprob: -16.50004768371582
    9. '[++' → logprob: -16.87504768371582
    10. '\[' → logprob: -17.25004768371582

Token 364: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07900480180978775
    2. ' +' → logprob: -2.5790047645568848
    3. ']' → logprob: -9.204005241394043
    4. '[' → logprob: -12.079005241394043
    5. '1' → logprob: -12.329005241394043
    6. ']+' → logprob: -14.079005241394043
    7. ' +
' → logprob: -14.579005241394043
    8. '+i' → logprob: -14.829005241394043
    9. '+]' → logprob: -14.829005241394043
    10. '+
' → logprob: -14.954005241394043

Token 365: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.125001907348633
    3. '```' → logprob: -16.500001907348633
    4. '
' → logprob: -17.250001907348633
    5. '   ' → logprob: -18.125001907348633
    6. ']' → logprob: -18.625001907348633
    7. '`' → logprob: -19.750001907348633
    8. '=' → logprob: -19.875001907348633
    9. '<|end|>' → logprob: -20.250001907348633
    10. ')' → logprob: -20.375001907348633

Token 366: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.500001907348633
    3. '```' → logprob: -15.125001907348633
    4. '   ' → logprob: -15.375001907348633
    5. '+' → logprob: -17.250001907348633
    6. '[' → logprob: -18.000001907348633
    7. '`' → logprob: -18.125001907348633
    8. 'i' → logprob: -18.125001907348633
    9. '<|end|>' → logprob: -18.187501907348633
    10. ']' → logprob: -18.312501907348633

Token 367: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012408277951180935
    2. ']=' → logprob: -4.887408256530762
    3. '=' → logprob: -5.512408256530762
    4. ' =' → logprob: -7.512408256530762
    5. ' ]' → logprob: -8.512408256530762
    6. ']+=' → logprob: -12.512408256530762
    7. ')' → logprob: -13.387408256530762
    8. '<|end|>' → logprob: -14.637408256530762
    9. '[' → logprob: -15.387408256530762
    10. ']=(' → logprob: -15.887408256530762

Token 368: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196768581867218
    2. ' =' → logprob: -2.811967611312866
    3. ']=' → logprob: -18.061967849731445
    4. ']' → logprob: -18.436967849731445
    5. ')' → logprob: -18.436967849731445
    6. '=
' → logprob: -18.561967849731445
    7. '[' → logprob: -19.311967849731445
    8. ')=' → logprob: -19.311967849731445
    9. '=

' → logprob: -19.311967849731445
    10. '＝' → logprob: -19.436967849731445

Token 369: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.0024763736873865128
    2. ' tmp' → logprob: -6.002476215362549
    3. '(tmp' → logprob: -14.502476692199707
    4. '	tmp' → logprob: -16.12747573852539
    5. '/tmp' → logprob: -16.87747573852539
    6. '$tmp' → logprob: -17.25247573852539
    7. '[tmp' → logprob: -17.87747573852539
    8. '_tmp' → logprob: -17.87747573852539
    9. 'temp' → logprob: -18.87747573852539
    10. ',tmp' → logprob: -19.87747573852539

Token 370: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 371: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 372: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1438906341791153
    2. '       ' → logprob: -2.018890619277954
    3. ' self' → logprob: -6.768890857696533
    4. 'if' → logprob: -10.393890380859375
    5. '```' → logprob: -11.268890380859375
    6. '   ' → logprob: -12.018890380859375
    7. '
' → logprob: -12.643890380859375
    8. 'def' → logprob: -13.393890380859375
    9. '        
' → logprob: -13.393890380859375
    10. '#' (adapté à ' #') → logprob: -13.518890380859375

Token 373: ' Use' (ID: 7649)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5120667219161987
    2. 'self' → logprob: -1.5120667219161987
    3. 'global' → logprob: -1.7620667219161987
    4. 'pw' → logprob: -5.512066841125488
    5. '       ' → logprob: -5.637066841125488
    6. '#' → logprob: -8.012066841125488
    7. ' global' → logprob: -9.012066841125488
    8. 'while' → logprob: -9.137066841125488
    9. 'If' → logprob: -9.262066841125488
    10. ' if' → logprob: -9.387066841125488

Token 374: ' global' (ID: 5466)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9111607074737549
    2. 'gp' → logprob: -1.9111607074737549
    3. ' [' → logprob: -2.411160707473755
    4. 'pw' → logprob: -2.786160707473755
    5. ' gp' → logprob: -3.286160707473755
    6. '[s' → logprob: -3.411160707473755
    7. 'global' → logprob: -3.411160707473755
    8. 'read' → logprob: -3.411160707473755
    9. ' pw' → logprob: -3.786160707473755
    10. 'self' → logprob: -4.036160469055176

Token 375: ' power' (ID: 3470)
  Prédit: ' pw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pw' → logprob: -0.2738379240036011
    2. 'pw' → logprob: -1.523837924003601
    3. ' if' → logprob: -4.398838043212891
    4. 'if' → logprob: -5.148838043212891
    5. ' global' → logprob: -6.523838043212891
    6. ' gp' → logprob: -6.523838043212891
    7. 'gp' → logprob: -8.14883804321289
    8. '_pw' → logprob: -8.77383804321289
    9. 'global' → logprob: -9.39883804321289
    10. ' gw' → logprob: -9.64883804321289

Token 376: ' cache' (ID: 11956)
  Prédit: 'pw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pw' → logprob: -0.4702414870262146
    2. 's' → logprob: -1.2202415466308594
    3. '_pw' → logprob: -3.5952415466308594
    4. 'self' → logprob: -3.5952415466308594
    5. ' pw' → logprob: -4.095241546630859
    6. '       ' → logprob: -6.970241546630859
    7. '_values' → logprob: -6.970241546630859
    8. '_list' → logprob: -7.095241546630859
    9. '#' → logprob: -7.470241546630859
    10. 'pow' → logprob: -7.595241546630859

Token 377: ' if' (ID: 538)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.3716410398483276
    2. ' if' → logprob: -1.4966410398483276
    3. '       ' → logprob: -1.6216410398483276
    4. 'if' → logprob: -1.6216410398483276
    5. '=' → logprob: -2.121641159057617
    6. '[self' → logprob: -6.496641159057617
    7. ':' → logprob: -6.996641159057617
    8. 'self' → logprob: -6.996641159057617
    9. '=self' → logprob: -7.371641159057617
    10. '[' → logprob: -7.371641159057617

Token 378: ' available' (ID: 2839)
  Prédit: 'gp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gp' → logprob: -0.1969192624092102
    2. ' gp' → logprob: -1.9469192028045654
    3. 'None' → logprob: -4.1969194412231445
    4. ' None' → logprob: -4.5719194412231445
    5. 'pw' → logprob: -5.3219194412231445
    6. ' not' → logprob: -6.1969194412231445
    7. 'not' → logprob: -6.8219194412231445
    8. 'gw' → logprob: -6.9469194412231445
    9. ' pw' → logprob: -7.1969194412231445
    10. 'global' → logprob: -7.6969194412231445

Token 379: ',' (ID: 11)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05927953124046326
    2. ' if' → logprob: -3.059279441833496
    3. '       ' → logprob: -4.559279441833496
    4. '
' → logprob: -9.809279441833496
    5. ' and' → logprob: -10.809279441833496
    6. ',' → logprob: -10.934279441833496
    7. '=' → logprob: -10.934279441833496
    8. ' or' → logprob: -10.934279441833496
    9. 'self' → logprob: -11.809279441833496
    10. ' =' → logprob: -12.184279441833496

Token 380: ' else' (ID: 1203)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4182325303554535
    2. 'else' → logprob: -1.4182325601577759
    3. ' if' → logprob: -2.9182324409484863
    4. '       ' → logprob: -3.7932324409484863
    5. ' else' → logprob: -4.043232440948486
    6. 'self' → logprob: -6.168232440948486
    7. 'elif' → logprob: -6.168232440948486
    8. ' or' → logprob: -7.043232440948486
    9. ' self' → logprob: -9.168232917785645
    10. 'or' → logprob: -9.418232917785645

Token 381: ' pre' (ID: 876)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6400162577629089
    2. 'self' → logprob: -1.3900163173675537
    3. 'if' → logprob: -2.6400163173675537
    4. ' self' → logprob: -2.7650163173675537
    5. ' if' → logprob: -3.1400163173675537
    6. ' initialize' → logprob: -4.390016078948975
    7. '           ' → logprob: -4.515016078948975
    8. 'pw' → logprob: -4.890016078948975
    9. ' pw' → logprob: -5.515016078948975
    10. 'initialize' → logprob: -5.765016078948975

Token 382: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.036701444536447525
    2. 'self' → logprob: -3.5367014408111572
    3. 'pw' → logprob: -5.536701679229736
    4. '       ' → logprob: -7.161701679229736
    5. '_compute' → logprob: -7.161701679229736
    6. '=' → logprob: -7.786701679229736
    7. 'if' → logprob: -8.661701202392578
    8. '   ' → logprob: -8.911701202392578
    9. 'c' → logprob: -8.911701202392578
    10. 'p' → logprob: -9.411701202392578

Token 383: ' powers' (ID: 27742)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.17062896490097046
    2. ' if' → logprob: -2.4206290245056152
    3. '       ' → logprob: -2.7956290245056152
    4. 'self' → logprob: -5.045629024505615
    5. ' self' → logprob: -8.545628547668457
    6. 'pw' → logprob: -8.795628547668457
    7. 'for' → logprob: -9.670628547668457
    8. '           ' → logprob: -10.170628547668457
    9. ' for' → logprob: -11.670628547668457
    10. '   ' → logprob: -12.045628547668457

Token 384: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05806715413928032
    2. ' if' → logprob: -3.0580670833587646
    3. 'if' → logprob: -4.683067321777344
    4. ' =' → logprob: -9.433067321777344
    5. '=' → logprob: -10.558067321777344
    6. '           ' → logprob: -10.808067321777344
    7. ',' → logprob: -11.183067321777344
    8. ' for' → logprob: -11.433067321777344
    9. ':' → logprob: -12.308067321777344
    10. ' or' → logprob: -12.308067321777344

Token 385: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.004554015584290028
    2. ' base' → logprob: -5.50455379486084
    3. 'self' → logprob: -8.00455379486084
    4. '```' → logprob: -9.75455379486084
    5. 'the' → logprob: -10.87955379486084
    6. '   ' → logprob: -11.12955379486084
    7. '(base' → logprob: -11.12955379486084
    8. '2' → logprob: -11.62955379486084
    9. '	base' → logprob: -11.75455379486084
    10. ' ' → logprob: -12.37955379486084

Token 386: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4361981749534607
    2. 'if' → logprob: -1.4361982345581055
    3. ' if' → logprob: -2.1861982345581055
    4. '=' → logprob: -6.5611982345581055
    5. ' =' → logprob: -7.5611982345581055
    6. '           ' → logprob: -8.061198234558105
    7. ',' → logprob: -8.061198234558105
    8. 'for' → logprob: -8.311198234558105
    9. ' for' → logprob: -8.686198234558105
    10. 'self' → logprob: -9.061198234558105

Token 387: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3351687788963318
    2. '       ' → logprob: -1.3351688385009766
    3. ' if' → logprob: -3.8351688385009766
    4. 'self' → logprob: -10.085168838500977
    5. '   ' → logprob: -11.960168838500977
    6. '```' → logprob: -11.960168838500977
    7. '	if' → logprob: -12.210168838500977
    8. ',' → logprob: -12.335168838500977
    9. ';if' → logprob: -13.585168838500977
    10. '[' → logprob: -13.710168838500977

Token 388: ' global' (ID: 5466)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.020304076373577118
    2. ' if' → logprob: -4.020304203033447
    3. '       ' → logprob: -6.145304203033447
    4. 'global' (adapté à ' global') → logprob: -12.395303726196289
    5. 'self' → logprob: -12.895303726196289
    6. 'try' → logprob: -14.270303726196289
    7. '   ' → logprob: -14.895303726196289
    8. '	if' → logprob: -15.145303726196289
    9. ' global' → logprob: -15.895303726196289
    10. 'pw' → logprob: -16.27030372619629

Token 389: ' gp' (ID: 62353)
  Prédit: 'gp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gp' → logprob: -0.001929228543303907
    2. ' gp' → logprob: -6.25192928314209
    3. 'gw' → logprob: -14.50192928314209
    4. '_gp' → logprob: -15.75192928314209
    5. 'gpu' → logprob: -17.251928329467773
    6. 'gps' → logprob: -17.751928329467773
    7. 'pw' → logprob: -18.126928329467773
    8. 'g' → logprob: -19.626928329467773
    9. 'gv' → logprob: -19.751928329467773
    10. 'GP' → logprob: -20.001928329467773

Token 390: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -4.320199877838604e-07
    2. 'pw' → logprob: -14.875
    3. '_w' → logprob: -18.625
    4. 'gw' → logprob: -18.75
    5. '_pw' → logprob: -19.0
    6. '#w' → logprob: -19.625
    7. '```' → logprob: -19.875
    8. 'aw' → logprob: -19.875
    9. 'wp' → logprob: -20.125
    10. '	w' → logprob: -20.125

Token 391: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22976450622081757
    2. 'if' → logprob: -1.729764461517334
    3. ' if' → logprob: -3.979764461517334
    4. '       ' → logprob: -4.854764461517334
    5. ' =' → logprob: -7.729764461517334
    6. '<|end|>' → logprob: -8.229764938354492
    7. '        
' → logprob: -8.604764938354492
    8. '=' → logprob: -8.604764938354492
    9. '   ' → logprob: -9.354764938354492
    10. ',' → logprob: -9.854764938354492

Token 392: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3885633945465088
    2. '       ' → logprob: -1.1385633945465088
    3. ' if' → logprob: -6.38856315612793
    4. '   ' → logprob: -12.63856315612793
    5. '
' → logprob: -13.26356315612793
    6. '	if' → logprob: -13.76356315612793
    7. '           ' → logprob: -14.13856315612793
    8. '	' → logprob: -14.13856315612793
    9. ';if' → logprob: -14.26356315612793
    10. '=' → logprob: -14.51356315612793

Token 393: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0001114106344175525
    2. '       ' → logprob: -9.37511157989502
    3. ' if' → logprob: -10.62511157989502
    4. 'gp' → logprob: -13.12511157989502
    5. 'If' → logprob: -17.000110626220703
    6. 'self' → logprob: -17.375110626220703
    7. 'pw' → logprob: -17.375110626220703
    8. '	if' → logprob: -18.125110626220703
    9. '```' → logprob: -18.875110626220703
    10. '   ' → logprob: -19.500110626220703

Token 394: ' gp' (ID: 62353)
  Prédit: 'gp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gp' → logprob: -0.11900157481431961
    2. ' gp' → logprob: -2.244001626968384
    3. ' not' → logprob: -5.744001388549805
    4. 'not' → logprob: -5.869001388549805
    5. 'None' → logprob: -9.869001388549805
    6. ' None' → logprob: -10.619001388549805
    7. 'gw' → logprob: -11.244001388549805
    8. 'g' → logprob: -11.744001388549805
    9. '           ' → logprob: -11.994001388549805
    10. '       ' → logprob: -12.494001388549805

Token 395: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -4.008129963040119e-06
    2. 'pw' → logprob: -13.375003814697266
    3. 'gw' → logprob: -14.000003814697266
    4. '_w' → logprob: -14.125003814697266
    5. '_pw' → logprob: -15.500003814697266
    6. 'g' → logprob: -16.250003814697266
    7. 'wp' → logprob: -16.625003814697266
    8. '```' → logprob: -16.875003814697266
    9. 'wx' → logprob: -17.375003814697266
    10. '
' → logprob: -17.500003814697266

Token 396: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.3868895173072815
    2. 'is' → logprob: -1.1368894577026367
    3. '==' → logprob: -12.011889457702637
    4. '[' → logprob: -12.886889457702637
    5. ':' → logprob: -13.136889457702637
    6. ')' → logprob: -13.136889457702637
    7. 'and' → logprob: -13.261889457702637
    8. 'in' → logprob: -14.136889457702637
    9. ')is' → logprob: -14.261889457702637
    10. '	is' → logprob: -14.636889457702637

Token 397: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.023254329338669777
    2. ' None' → logprob: -3.77325439453125
    3. 'not' → logprob: -12.39825439453125
    4. '   ' → logprob: -13.14825439453125
    5. ' not' → logprob: -13.52325439453125
    6. 'N' → logprob: -14.14825439453125
    7. '_None' → logprob: -14.89825439453125
    8. ' ' → logprob: -16.02325439453125
    9. 'Not' → logprob: -16.52325439453125
    10. 'No' → logprob: -16.64825439453125

Token 398: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.051067762076854706
    2. ':' → logprob: -3.05106782913208
    3. ' or' → logprob: -6.92606782913208
    4. '           ' → logprob: -7.05106782913208
    5. ' and' → logprob: -7.92606782913208
    6. '       ' → logprob: -8.676067352294922
    7. '=' → logprob: -10.676067352294922
    8. 'and' → logprob: -11.051067352294922
    9. '):
' → logprob: -11.426067352294922
    10. '   ' → logprob: -11.676067352294922

Token 399: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000500966387335211
    2. ':
' → logprob: -8.000500679016113
    3. 'gp' → logprob: -9.875500679016113
    4. '       ' → logprob: -10.125500679016113
    5. ':' → logprob: -10.375500679016113
    6. '               ' → logprob: -11.500500679016113
    7. '   ' → logprob: -12.000500679016113
    8. 'self' → logprob: -12.125500679016113
    9. 'pw' → logprob: -12.125500679016113
    10. '		' → logprob: -13.125500679016113

Token 400: ' self' (ID: 1051)
  Prédit: 'gp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gp' → logprob: -0.04363434389233589
    2. '           ' → logprob: -3.1686344146728516
    3. ' gp' → logprob: -8.293634414672852
    4. 'gw' → logprob: -9.168634414672852
    5. '       ' → logprob: -9.293634414672852
    6. 'pw' → logprob: -9.543634414672852
    7. '   ' → logprob: -9.793634414672852
    8. '               ' → logprob: -10.793634414672852
    9. '[' → logprob: -11.918634414672852
    10. 'self' (adapté à ' self') → logprob: -12.043634414672852

Token 401: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.0008059371029958129
    2. '.g' → logprob: -7.750805854797363
    3. 'pw' → logprob: -8.125805854797363
    4. '.' → logprob: -10.875805854797363
    5. '	pw' → logprob: -11.125805854797363
    6. '=' → logprob: -11.375805854797363
    7. ' .' → logprob: -11.500805854797363
    8. 'g' → logprob: -12.125805854797363
    9. ' =' → logprob: -12.750805854797363
    10. '_pw' → logprob: -13.000805854797363

Token 402: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -7.3458322731312364e-06
    2. 'pw' → logprob: -12.625007629394531
    3. 'ｗ' → logprob: -14.125007629394531
    4. 'ws' → logprob: -14.750007629394531
    5. 'wv' → logprob: -14.750007629394531
    6. 'wr' → logprob: -14.875007629394531
    7. 'rw' → logprob: -15.125007629394531
    8. 'ow' → logprob: -15.250007629394531
    9. 'aw' → logprob: -15.875007629394531
    10. 'wx' → logprob: -16.12500762939453

Token 403: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196891888976097
    2. ' =' → logprob: -2.8119688034057617
    3. '=[]' → logprob: -14.811968803405762
    4. '=[' → logprob: -15.186968803405762
    5. '=[]
' → logprob: -15.436968803405762
    6. '           ' → logprob: -15.811968803405762
    7. '   ' → logprob: -15.936968803405762
    8. '=None' → logprob: -16.561969757080078
    9. '=self' → logprob: -17.561969757080078
    10. '       ' → logprob: -17.686969757080078

Token 404: ' pw' (ID: 24359)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0011918948730453849
    2. ' [' → logprob: -6.751192092895508
    3. '[p' → logprob: -11.001192092895508
    4. '   ' → logprob: -13.376192092895508
    5. '[self' → logprob: -13.626192092895508
    6. 'pow' → logprob: -14.251192092895508
    7. '       ' → logprob: -14.626192092895508
    8. '           ' → logprob: -15.501192092895508
    9. '[tmp' → logprob: -15.751192092895508
    10. '[a' → logprob: -16.251192092895508

Token 405: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0471206903457642
    2. '=' → logprob: -1.2971206903457642
    3. '[' → logprob: -1.4221206903457642
    4. '=[' → logprob: -2.0471205711364746
    5. '=[]' → logprob: -6.422120571136475
    6. ' =[' → logprob: -6.422120571136475
    7. ' [' → logprob: -7.422120571136475
    8. '[:]' → logprob: -7.422120571136475
    9. '   ' → logprob: -8.797121047973633
    10. 'ow' → logprob: -9.047121047973633

Token 406: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00014370749704539776
    2. ' [' → logprob: -8.875144004821777
    3. '   ' → logprob: -12.875144004821777
    4. '           ' → logprob: -14.375144004821777
    5. '       ' → logprob: -14.500144004821777
    6. '               ' → logprob: -16.87514305114746
    7. '[p' → logprob: -17.62514305114746
    8. '[self' → logprob: -18.12514305114746
    9. '{' → logprob: -18.50014305114746
    10. ' ' → logprob: -18.50014305114746

Token 407: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. '0' → logprob: -14.000000953674316
    3. 'None' → logprob: -16.125001907348633
    4. '   ' → logprob: -17.000001907348633
    5. ' ' → logprob: -17.250001907348633
    6. 'pow' → logprob: -17.250001907348633
    7. '           ' → logprob: -17.500001907348633
    8. '       ' → logprob: -18.750001907348633
    9. '
' → logprob: -19.125001907348633
    10. '[' → logprob: -19.125001907348633

Token 408: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2892323136329651
    2. ']
' → logprob: -1.4142322540283203
    3. ' *' → logprob: -6.28923225402832
    4. ']*(' → logprob: -6.41423225402832
    5. ']*' → logprob: -6.41423225402832
    6. ',' → logprob: -7.03923225402832
    7. '           ' → logprob: -7.66423225402832
    8. ']+' → logprob: -8.03923225402832
    9. '*' → logprob: -8.28923225402832
    10. ']
' → logprob: -8.41423225402832

Token 409: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.8359195590019226
    2. '*' → logprob: -0.9609195590019226
    3. ' +' → logprob: -2.7109196186065674
    4. '+' → logprob: -2.8359196186065674
    5. '*[' → logprob: -4.085919380187988
    6. '+[' → logprob: -4.460919380187988
    7. '[' → logprob: -4.835919380187988
    8. '<|end|>' → logprob: -5.085919380187988
    9. '
' → logprob: -5.210919380187988
    10. '*(' → logprob: -6.210919380187988

Token 410: ' (' (ID: 350)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.022355586290359497
    2. '(max' → logprob: -4.522355556488037
    3. '(' → logprob: -4.772355556488037
    4. '100' → logprob: -6.147355556488037
    5. ' (' → logprob: -8.272356033325195
    6. '(len' → logprob: -9.647356033325195
    7. '(L' → logprob: -9.772356033325195
    8. 'max' → logprob: -10.022356033325195
    9. '10' → logprob: -10.397356033325195
    10. '(MAX' → logprob: -10.522356033325195

Token 411: 'len' (ID: 3303)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.0167617779225111
    2. 'l' → logprob: -4.641761779785156
    3. '(max' → logprob: -5.516761779785156
    4. '(' → logprob: -6.266761779785156
    5. 'max' → logprob: -7.766761779785156
    6. '100' → logprob: -8.016761779785156
    7. '10' → logprob: -9.391761779785156
    8. '(len' → logprob: -9.641761779785156
    9. ' (' → logprob: -10.266761779785156
    10. '(L' → logprob: -10.766761779785156

Token 412: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.007730607409030199
    2. 's' → logprob: -4.882730484008789
    3. '+' → logprob: -10.257730484008789
    4. '(p' → logprob: -10.757730484008789
    5. '(buff' → logprob: -11.382730484008789
    6. '(g' → logprob: -12.007730484008789
    7. 'buff' → logprob: -12.007730484008789
    8. '   ' → logprob: -12.382730484008789
    9. ' s' → logprob: -12.382730484008789
    10. '_s' → logprob: -12.382730484008789

Token 413: ')' (ID: 8)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08963032066822052
    2. ' +' → logprob: -2.464630365371704
    3. ')' → logprob: -7.464630126953125
    4. ')+' → logprob: -10.089630126953125
    5. '+
' → logprob: -10.714630126953125
    6. '[' → logprob: -11.214630126953125
    7. ')]' → logprob: -11.464630126953125
    8. '<|end|>' → logprob: -12.464630126953125
    9. ' +
' → logprob: -12.589630126953125
    10. ' ' → logprob: -12.714630126953125

Token 414: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.018733927980065346
    2. ' +' → logprob: -4.018733978271484
    3. ')' → logprob: -7.643733978271484
    4. '<|end|>' → logprob: -10.143733978271484
    5. '[' → logprob: -11.018733978271484
    6. '+
' → logprob: -11.143733978271484
    7. '```' → logprob: -12.018733978271484
    8. '<|end|>' → logprob: -12.018733978271484
    9. ')
' → logprob: -12.518733978271484
    10. ')+' → logprob: -13.268733978271484

Token 415: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03301812708377838
    2. '10' → logprob: -4.158018112182617
    3. '2' → logprob: -4.658018112182617
    4. ' ' → logprob: -5.533018112182617
    5. '100' → logprob: -6.033018112182617
    6. 'len' → logprob: -7.658018112182617
    7. '11' → logprob: -9.158018112182617
    8. '20' → logprob: -9.283018112182617
    9. '50' → logprob: -9.408018112182617
    10. '5' → logprob: -9.533018112182617

Token 416: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0018052493687719107
    2. '2' → logprob: -6.751805305480957
    3. '10' → logprob: -7.501805305480957
    4. '5' → logprob: -10.376805305480957
    5. ' ' → logprob: -10.626805305480957
    6. 'len' → logprob: -11.751805305480957
    7. '100' → logprob: -12.251805305480957
    8. '3' → logprob: -12.876805305480957
    9. '7' → logprob: -12.876805305480957
    10. '11' → logprob: -13.126805305480957

Token 417: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.27860283851623535
    2. ')
' → logprob: -1.6536028385162354
    3. '           ' → logprob: -3.1536028385162354
    4. '       ' → logprob: -5.028602600097656
    5. '<|end|>' → logprob: -6.278602600097656
    6. '
' → logprob: -8.903602600097656
    7. '               ' → logprob: -9.403602600097656
    8. ' )' → logprob: -9.528602600097656
    9. ']' → logprob: -9.903602600097656
    10. '   ' → logprob: -10.028602600097656

Token 418: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18744151294231415
    2. '       ' → logprob: -2.68744158744812
    3. '<|end|>' → logprob: -2.93744158744812
    4. 'else' → logprob: -3.68744158744812
    5. ' else' → logprob: -4.937441349029541
    6. ' for' → logprob: -5.187441349029541
    7. '
' → logprob: -5.937441349029541
    8. '               ' → logprob: -6.187441349029541
    9. 'for' → logprob: -6.437441349029541
    10. '[' → logprob: -6.937441349029541

Token 419: ' v' (ID: 323)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07538846880197525
    2. '           ' → logprob: -3.3253884315490723
    3. ' for' → logprob: -3.3253884315490723
    4. '	       ' → logprob: -7.950388431549072
    5. '	for' → logprob: -8.82538890838623
    6. '               ' → logprob: -9.57538890838623
    7. '   ' → logprob: -10.45038890838623
    8. '		' → logprob: -11.07538890838623
    9. '	           ' → logprob: -11.07538890838623
    10. '       ' → logprob: -11.07538890838623

Token 420: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.538530170917511
    2. '=' → logprob: -1.5385301113128662
    3. 'al' → logprob: -1.6635301113128662
    4. 'alue' → logprob: -4.663530349731445
    5. 'ar' → logprob: -6.788530349731445
    6. 'for' → logprob: -7.038530349731445
    7. 'p' → logprob: -9.288530349731445
    8. '   ' → logprob: -9.413530349731445
    9. '[' → logprob: -9.788530349731445
    10. 'ersion' → logprob: -10.038530349731445

Token 421: ' ' (ID: 220)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.03394799679517746
    2. ' base' → logprob: -4.158947944641113
    3. '1' → logprob: -4.658947944641113
    4. 'self' → logprob: -5.158947944641113
    5. '           ' → logprob: -6.408947944641113
    6. '(base' → logprob: -8.408947944641113
    7. '   ' → logprob: -8.783947944641113
    8. ' self' → logprob: -9.158947944641113
    9. '       ' → logprob: -9.283947944641113
    10. '0' → logprob: -9.408947944641113

Token 422: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020663803443312645
    2. 'base' → logprob: -3.8956637382507324
    3. ' ' → logprob: -10.77066421508789
    4. 'pow' → logprob: -11.02066421508789
    5. 'pw' → logprob: -11.02066421508789
    6. ' base' → logprob: -11.27066421508789
    7. '0' → logprob: -11.39566421508789
    8. '(base' → logprob: -11.39566421508789
    9. 'self' → logprob: -11.39566421508789
    10. 'int' → logprob: -12.02066421508789

Token 423: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006973002105951309
    2. ' for' → logprob: -5.881972789764404
    3. '<|end|>' → logprob: -6.131972789764404
    4. '
' → logprob: -7.256972789764404
    5. 'for' → logprob: -7.631972789764404
    6. '<|end|>' → logprob: -8.381973266601562
    7. ',' → logprob: -9.006973266601562
    8. '		' → logprob: -9.381973266601562
    9. '	       ' → logprob: -9.631973266601562
    10. '       ' → logprob: -10.006973266601562

Token 424: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008988694287836552
    2. ' for' → logprob: -5.383988857269287
    3. 'for' → logprob: -5.758988857269287
    4. '
' → logprob: -8.258988380432129
    5. '       ' → logprob: -8.508988380432129
    6. '   ' → logprob: -8.633988380432129
    7. '<|end|>' → logprob: -8.883988380432129
    8. '		' → logprob: -9.008988380432129
    9. '	       ' → logprob: -10.133988380432129
    10. ',' → logprob: -10.383988380432129

Token 425: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3791336119174957
    2. 'for' (adapté à ' for') → logprob: -1.6291335821151733
    3. '           ' → logprob: -2.379133701324463
    4. '	for' → logprob: -4.879133701324463
    5. '	       ' → logprob: -5.379133701324463
    6. '            ' → logprob: -5.629133701324463
    7. '		' → logprob: -6.129133701324463
    8. ' ' → logprob: -6.629133701324463
    9. '   ' → logprob: -6.879133701324463
    10. '	' → logprob: -6.879133701324463

Token 426: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.029837261885404587
    2. ' i' → logprob: -3.5298373699188232
    3. '_' → logprob: -9.904837608337402
    4. '_i' → logprob: -10.404837608337402
    5. ' ' → logprob: -13.029837608337402
    6. ' _' → logprob: -13.529837608337402
    7. '	i' → logprob: -14.029837608337402
    8. 'j' → logprob: -14.154837608337402
    9. '   ' → logprob: -14.404837608337402
    10. '  ' → logprob: -15.154837608337402

Token 427: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07008548825979233
    2. 'in' → logprob: -2.6950855255126953
    3. '1' → logprob: -9.695085525512695
    4. '+' → logprob: -10.820085525512695
    5. '	in' → logprob: -11.070085525512695
    6. ' ' → logprob: -11.820085525512695
    7. ',' → logprob: -11.945085525512695
    8. 'import' → logprob: -12.070085525512695
    9. '<|end|>' → logprob: -12.320085525512695
    10. '    ' → logprob: -12.695085525512695

Token 428: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3133547604084015
    2. ' range' → logprob: -1.313354730606079
    3. '   ' → logprob: -10.4383544921875
    4. ' ' → logprob: -10.6883544921875
    5. '(range' → logprob: -11.1883544921875
    6. '  ' → logprob: -11.5633544921875
    7. '	range' → logprob: -11.9383544921875
    8. ' in' → logprob: -12.1883544921875
    9. 'in' → logprob: -12.5633544921875
    10. '1' → logprob: -13.6883544921875

Token 429: '(l' (ID: 4179)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.5825617909431458
    2. 'len' → logprob: -0.9575617909431458
    3. '(' → logprob: -3.457561731338501
    4. '1' → logprob: -3.832561731338501
    5. ' len' → logprob: -5.70756196975708
    6. '           ' → logprob: -7.95756196975708
    7. '   ' → logprob: -8.207561492919922
    8. '	len' → logprob: -8.332561492919922
    9. ' ' → logprob: -9.207561492919922
    10. '(l' → logprob: -9.832561492919922

Token 430: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.18869808316230774
    2. '1' → logprob: -2.5636980533599854
    3. ' +' → logprob: -2.8136980533599854
    4. '):
' → logprob: -3.4386980533599854
    5. '):' → logprob: -6.3136982917785645
    6. ',' → logprob: -7.5636982917785645
    7. '   ' → logprob: -9.063697814941406
    8. '           ' → logprob: -9.813697814941406
    9. '-' → logprob: -9.813697814941406
    10. '       ' → logprob: -10.063697814941406

Token 431: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0015478298300877213
    2. ' v' → logprob: -7.626547813415527
    3. 'v' → logprob: -7.751547813415527
    4. '	           ' → logprob: -8.751547813415527
    5. '<|end|>' → logprob: -8.751547813415527
    6. '           ' → logprob: -9.501547813415527
    7. '		       ' → logprob: -10.001547813415527
    8. ',' → logprob: -10.251547813415527
    9. '```' → logprob: -10.501547813415527
    10. '	       ' → logprob: -10.876547813415527

Token 432: ' pw' (ID: 24359)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.5654731392860413
    2. 'v' → logprob: -0.9404731392860413
    3. '               ' → logprob: -3.1904730796813965
    4. ',v' → logprob: -9.190473556518555
    5. '	v' → logprob: -9.940473556518555
    6. '                ' → logprob: -10.065473556518555
    7. '```' → logprob: -10.565473556518555
    8. '                   ' → logprob: -10.565473556518555
    9. '(v' → logprob: -11.565473556518555
    10. '[v' → logprob: -12.190473556518555

Token 433: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003693013568408787
    2. '   ' → logprob: -8.87536907196045
    3. '[' → logprob: -9.00036907196045
    4. '=' → logprob: -9.62536907196045
    5. '*=' → logprob: -11.25036907196045
    6. ' [' → logprob: -11.50036907196045
    7. 'i' → logprob: -12.50036907196045
    8. '[-' → logprob: -12.87536907196045
    9. ' =' → logprob: -13.12536907196045
    10. '[
' → logprob: -13.37536907196045

Token 434: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06199401617050171
    2. ' +' → logprob: -2.8119940757751465
    3. ']' → logprob: -10.811993598937988
    4. '+i' → logprob: -12.686993598937988
    5. '1' → logprob: -13.811993598937988
    6. ' ' → logprob: -14.311993598937988
    7. ']+' → logprob: -14.811993598937988
    8. '[' → logprob: -15.811993598937988
    9. ']+=' → logprob: -15.811993598937988
    10. '+]' → logprob: -16.061994552612305

Token 435: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.992775888647884e-05
    2. ' ' → logprob: -9.750069618225098
    3. '   ' → logprob: -11.625069618225098
    4. '+' → logprob: -13.375069618225098
    5. '```' → logprob: -15.312569618225098
    6. '    ' → logprob: -15.437569618225098
    7. '  ' → logprob: -16.437570571899414
    8. '
' → logprob: -16.562570571899414
    9. 'i' → logprob: -16.625070571899414
    10. '       ' → logprob: -17.125070571899414

Token 436: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.990154047845863e-05
    2. ' ' → logprob: -10.125049591064453
    3. '   ' → logprob: -12.000049591064453
    4. '+' → logprob: -13.750049591064453
    5. '  ' → logprob: -14.937549591064453
    6. '```' → logprob: -15.062549591064453
    7. '    ' → logprob: -15.500049591064453
    8. '
' → logprob: -16.125049591064453
    9. '     ' → logprob: -16.250049591064453
    10. '' → logprob: -16.437549591064453

Token 437: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.013559344224631786
    2. ']=' → logprob: -5.138559341430664
    3. '=' → logprob: -5.263559341430664
    4. ' =' → logprob: -6.263559341430664
    5. ' ]' → logprob: -7.763559341430664
    6. ']=(' → logprob: -9.388559341430664
    7. ')' → logprob: -12.888559341430664
    8. ' ' → logprob: -13.388559341430664
    9. ']+=' → logprob: -13.388559341430664
    10. ',' → logprob: -13.888559341430664

Token 438: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008622255176305771
    2. ' =' → logprob: -4.758622169494629
    3. '*=' → logprob: -12.133622169494629
    4. '=v' → logprob: -13.258622169494629
    5. '=
' → logprob: -16.008623123168945
    6. ',' → logprob: -16.383623123168945
    7. ']=' → logprob: -16.633623123168945
    8. ' *=' → logprob: -16.883623123168945
    9. ']' → logprob: -17.133623123168945
    10. ')' → logprob: -17.383623123168945

Token 439: ' v' (ID: 323)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.023276928812265396
    2. 'v' → logprob: -3.8982770442962646
    3. ' (' → logprob: -6.0232768058776855
    4. ' v' → logprob: -8.773277282714844
    5. '               ' → logprob: -10.023277282714844
    6. 'pw' → logprob: -10.023277282714844
    7. '(p' → logprob: -10.398277282714844
    8. '(' → logprob: -11.023277282714844
    9. '                   ' → logprob: -11.398277282714844
    10. ' pw' → logprob: -13.773277282714844

Token 440: ' =' (ID: 314)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.06368006020784378
    2. '*' → logprob: -2.8136801719665527
    3. ' =' → logprob: -6.563680171966553
    4. '=' → logprob: -8.313679695129395
    5. '*v' → logprob: -10.688679695129395
    6. '
' → logprob: -11.563679695129395
    7. ' ' → logprob: -12.188679695129395
    8. ' ' → logprob: -12.688679695129395
    9. '*self' → logprob: -12.813679695129395
    10. '*=' → logprob: -12.813679695129395

Token 441: ' v' (ID: 323)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.0016700613778084517
    2. ' (' → logprob: -6.751669883728027
    3. 'v' → logprob: -7.626669883728027
    4. ' v' → logprob: -11.751669883728027
    5. '(' → logprob: -13.126669883728027
    6. '               ' → logprob: -13.626669883728027
    7. '                   ' → logprob: -14.501669883728027
    8. '           ' → logprob: -15.001669883728027
    9. '   ' → logprob: -15.126669883728027
    10. '((' → logprob: -17.001670837402344

Token 442: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3132692873477936
    2. ' *' → logprob: -1.3132692575454712
    3. '*v' → logprob: -12.43826961517334
    4. '*object' → logprob: -13.56326961517334
    5. ' ' → logprob: -14.18826961517334
    6. ' ' → logprob: -14.31326961517334
    7. '*self' → logprob: -15.06326961517334
    8. '	' → logprob: -16.063268661499023
    9. '**' → logprob: -16.438268661499023
    10. '   ' → logprob: -16.688268661499023

Token 443: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.004105827305465937
    2. ' base' → logprob: -5.504106044769287
    3. 'self' → logprob: -10.879105567932129
    4. '   ' → logprob: -12.254105567932129
    5. '           ' → logprob: -13.879105567932129
    6. ' ' → logprob: -14.504105567932129
    7. '       ' → logprob: -15.004105567932129
    8. '(base' → logprob: -15.004105567932129
    9. '	base' → logprob: -15.129105567932129
    10. '    ' → logprob: -15.379105567932129

Token 444: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.011048054322600365
    2. '%' → logprob: -4.511047840118408
    3. '%d' → logprob: -16.26104736328125
    4. '%s' → logprob: -16.88604736328125
    5. '%c' → logprob: -16.88604736328125
    6. '%i' → logprob: -17.38604736328125
    7. ' ' → logprob: -17.51104736328125
    8. '%n' → logprob: -17.51104736328125
    9. ' ' → logprob: -18.63604736328125
    10. ' %=' → logprob: -19.01104736328125

Token 445: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -4.0126840758603066e-05
    2. ' mod' → logprob: -10.125040054321289
    3. '(mod' → logprob: -18.87504005432129
    4. '
' → logprob: -19.12504005432129
    5. '	mod' → logprob: -19.37504005432129
    6. '           ' → logprob: -19.37504005432129
    7. '   ' → logprob: -19.62504005432129
    8. 'moder' → logprob: -20.00004005432129
    9. ' ' → logprob: -20.62504005432129
    10. '       ' → logprob: -21.62504005432129

Token 446: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 447: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 448: ' gp' (ID: 62353)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -1.051498532295227
    2. '       ' → logprob: -1.176498532295227
    3. '<|end|>' → logprob: -1.301498532295227
    4. ' else' → logprob: -3.5514984130859375
    5. 'self' → logprob: -3.9264984130859375
    6. ')' → logprob: -4.6764984130859375
    7. '
' → logprob: -6.6764984130859375
    8. '.' → logprob: -6.6764984130859375
    9. ' self' → logprob: -6.6764984130859375
    10. '+' → logprob: -7.0514984130859375

Token 449: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: 0.0
    2. 'pw' → logprob: -17.5
    3. ' w' → logprob: -18.5
    4. '	w' → logprob: -19.25
    5. 'wx' → logprob: -19.5
    6. '=' → logprob: -19.625
    7. 'wp' → logprob: -19.75
    8. '```' → logprob: -19.875
    9. '_w' → logprob: -20.0
    10. 'v' → logprob: -20.25

Token 450: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008618946187198162
    2. ' =' → logprob: -4.7586188316345215
    3. '=None' → logprob: -12.63361930847168
    4. 'else' → logprob: -15.38361930847168
    5. '=self' → logprob: -15.88361930847168
    6. '=
' → logprob: -16.00861930847168
    7. ' ' → logprob: -16.63361930847168
    8. ',' → logprob: -16.75861930847168
    9. '==' → logprob: -16.75861930847168
    10. '=True' → logprob: -16.88361930847168

Token 451: ' pw' (ID: 24359)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.657541811466217
    2. 'pw' → logprob: -0.782541811466217
    3. ' self' → logprob: -4.282541751861572
    4. ' pw' → logprob: -4.532541751861572
    5. '[self' → logprob: -10.65754222869873
    6. '   ' → logprob: -11.28254222869873
    7. '	pw' → logprob: -11.40754222869873
    8. ' ' → logprob: -11.53254222869873
    9. '(self' → logprob: -12.90754222869873
    10. '	self' → logprob: -13.15754222869873

Token 452: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1335831731557846
    2. 'else' → logprob: -2.2585830688476562
    3. ' else' → logprob: -4.258583068847656
    4. '<|end|>' → logprob: -5.133583068847656
    5. '<|end|>' → logprob: -9.133583068847656
    6. '[]' → logprob: -9.383583068847656
    7. '
' → logprob: -9.508583068847656
    8. '[' → logprob: -9.883583068847656
    9. ')' → logprob: -10.008583068847656
    10. '	else' → logprob: -10.508583068847656

Token 453: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19156360626220703
    2. 'else' → logprob: -2.066563606262207
    3. ' else' → logprob: -3.066563606262207
    4. '<|end|>' → logprob: -7.941563606262207
    5. 'self' → logprob: -8.441563606262207
    6. '	' → logprob: -8.441563606262207
    7. '[' → logprob: -9.316563606262207
    8. '	else' → logprob: -9.316563606262207
    9. ' self' → logprob: -10.441563606262207
    10. ')' → logprob: -10.691563606262207

Token 454: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.2878168225288391
    2. '       ' → logprob: -1.4128167629241943
    3. ' else' → logprob: -5.037817001342773
    4. 'self' → logprob: -9.037817001342773
    5. '<|end|>' → logprob: -11.037817001342773
    6. '	else' → logprob: -11.912817001342773
    7. 'elif' → logprob: -12.162817001342773
    8. '           ' → logprob: -12.787817001342773
    9. '```' → logprob: -13.412817001342773
    10. '   ' → logprob: -13.662817001342773

Token 455: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.32215285301208496
    2. ':' → logprob: -1.697152853012085
    3. ':
' → logprob: -2.447152853012085
    4. 'self' → logprob: -6.072153091430664
    5. '=' → logprob: -6.447153091430664
    6. ' =' → logprob: -7.072153091430664
    7. ':self' → logprob: -7.697153091430664
    8. ' self' → logprob: -8.447153091430664
    9. '       ' → logprob: -9.197153091430664
    10. '   ' → logprob: -10.322153091430664

Token 456: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.044506147503852844
    2. 'self' → logprob: -3.169506072998047
    3. ' self' → logprob: -6.544506072998047
    4. '	       ' → logprob: -11.044506072998047
    5. '       ' → logprob: -11.294506072998047
    6. '		' → logprob: -11.544506072998047
    7. '	self' → logprob: -11.794506072998047
    8. '   ' → logprob: -12.044506072998047
    9. 'if' → logprob: -13.169506072998047
    10. '               ' → logprob: -13.419506072998047

Token 457: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.003169153118506074
    2. ' self' → logprob: -6.128169059753418
    3. '           ' → logprob: -7.503169059753418
    4. '       ' → logprob: -7.753169059753418
    5. '	self' → logprob: -13.503169059753418
    6. '   ' → logprob: -14.003169059753418
    7. '[self' → logprob: -16.003170013427734
    8. '(self' → logprob: -16.128170013427734
    9. 'if' → logprob: -16.503170013427734
    10. ' ' → logprob: -16.628170013427734

Token 458: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -1.9027791495318525e-05
    2. 'pw' → logprob: -12.000019073486328
    3. '.' → logprob: -12.125019073486328
    4. '	pw' → logprob: -12.375019073486328
    5. ' .' → logprob: -14.125019073486328
    6. '_pw' → logprob: -14.250019073486328
    7. '.pb' → logprob: -14.375019073486328
    8. '.py' → logprob: -14.750019073486328
    9. '   ' → logprob: -15.875019073486328
    10. '.pg' → logprob: -16.250019073486328

Token 459: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.3856492842023727e-06
    2. 'pw' → logprob: -14.750000953674316
    3. 'W' → logprob: -15.250000953674316
    4. 'ow' → logprob: -15.875000953674316
    5. 'p' → logprob: -16.125001907348633
    6. 'ｗ' → logprob: -16.625001907348633
    7. '   ' → logprob: -16.875001907348633
    8. ' w' → logprob: -16.875001907348633
    9. '.w' → logprob: -17.250001907348633
    10. '	w' → logprob: -17.500001907348633

Token 460: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931519508361816
    2. ' =' → logprob: -0.6931519508361816
    3. '=self' → logprob: -14.193151473999023
    4. '[' → logprob: -14.318151473999023
    5. ' ' → logprob: -14.318151473999023
    6. ',' → logprob: -14.818151473999023
    7. '    ' → logprob: -14.943151473999023
    8. ' =[' → logprob: -15.443151473999023
    9. '=p' → logprob: -15.693151473999023
    10. '<|end|>' → logprob: -15.818151473999023

Token 461: ' gp' (ID: 62353)
  Prédit: 'gp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gp' → logprob: -0.0003357006062287837
    2. ' gp' → logprob: -8.000335693359375
    3. 'global' → logprob: -15.500335693359375
    4. '   ' → logprob: -16.875335693359375
    5. 'gpu' → logprob: -17.000335693359375
    6. 'gw' → logprob: -17.625335693359375
    7. 'gps' → logprob: -17.750335693359375
    8. ' ' → logprob: -18.625335693359375
    9. '_gp' → logprob: -18.625335693359375
    10. 'g' → logprob: -18.750335693359375

Token 462: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: 0.0
    2. 'pw' → logprob: -18.125
    3. '[w' → logprob: -18.125
    4. '	w' → logprob: -18.625
    5. '#w' → logprob: -19.0
    6. ' w' → logprob: -19.0
    7. 'ｗ' → logprob: -19.0
    8. '<w' → logprob: -19.125
    9. '[' → logprob: -19.125
    10. 'gw' → logprob: -19.125

Token 463: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 464: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 465: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.11793866753578186
    2. '
' → logprob: -2.992938756942749
    3. ' def' → logprob: -3.742938756942749
    4. '_' → logprob: -4.49293851852417
    5. '    
' → logprob: -4.86793851852417
    6. '   ' → logprob: -4.99293851852417
    7. '  
' → logprob: -5.61793851852417
    8. ' 
' → logprob: -5.74293851852417
    9. ')' → logprob: -6.49293851852417
    10. ',' → logprob: -7.49293851852417

Token 466: ' calc' (ID: 25691)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.24174052476882935
    2. ' get' → logprob: -1.6167404651641846
    3. '__' → logprob: -5.116740703582764
    4. 'hash' → logprob: -5.241740703582764
    5. ' hash' → logprob: -6.741740703582764
    6. 'query' → logprob: -7.116740703582764
    7. 'sub' → logprob: -7.366740703582764
    8. ' __' → logprob: -7.491740703582764
    9. 'calc' → logprob: -7.491740703582764
    10. ' calc' → logprob: -7.991740703582764

Token 467: '(self' (ID: 2402)
  Prédit: '_hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hash' → logprob: -0.10448462516069412
    2. '(' → logprob: -2.7294845581054688
    3. '_' → logprob: -3.6044845581054688
    4. '<|end|>' → logprob: -6.479484558105469
    5. '_sub' → logprob: -6.729484558105469
    6. '(self' → logprob: -7.229484558105469
    7. '_h' → logprob: -7.604484558105469
    8. '_value' → logprob: -7.729484558105469
    9. 'hash' → logprob: -8.229484558105469
    10. '[' → logprob: -8.354484558105469

Token 468: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14895278215408325
    2. '(start' → logprob: -3.2739527225494385
    3. ')' → logprob: -3.6489527225494385
    4. '_hash' → logprob: -4.023952960968018
    5. ',l' → logprob: -4.148952960968018
    6. ',start' → logprob: -5.148952960968018
    7. '(l' → logprob: -5.273952960968018
    8. '(' → logprob: -5.398952960968018
    9. 'hash' → logprob: -5.523952960968018
    10. ' ,' → logprob: -6.023952960968018

Token 469: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.011867126449942589
    2. ' l' → logprob: -4.636867046356201
    3. 'i' → logprob: -6.386867046356201
    4. 'self' → logprob: -9.01186752319336
    5. 'L' → logprob: -9.26186752319336
    6. 'left' → logprob: -9.38686752319336
    7. ' i' → logprob: -10.38686752319336
    8. 'a' → logprob: -10.38686752319336
    9. 's' → logprob: -11.38686752319336
    10. 'start' → logprob: -11.51186752319336

Token 470: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002258856315165758
    2. ' ,' → logprob: -6.252258777618408
    3. '   ' → logprob: -9.127259254455566
    4. ',l' → logprob: -9.502259254455566
    5. '<|end|>' → logprob: -9.752259254455566
    6. ',
' → logprob: -10.502259254455566
    7. ')' → logprob: -11.127259254455566
    8. '<|end|>' → logprob: -11.752259254455566
    9. '       ' → logprob: -12.127259254455566
    10. ',int' → logprob: -12.502259254455566

Token 471: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.003601140109822154
    2. ' r' → logprob: -5.62860107421875
    3. '   ' → logprob: -14.00360107421875
    4. '	r' → logprob: -16.00360107421875
    5. 'length' → logprob: -16.37860107421875
    6. ' ' → logprob: -16.87860107421875
    7. 'rr' → logprob: -18.50360107421875
    8. '```' → logprob: -19.00360107421875
    9. ' ' → logprob: -19.12860107421875
    10. ' length' → logprob: -19.12860107421875

Token 472: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6363819241523743
    2. '):
' → logprob: -0.7613819241523743
    3. ')' → logprob: -5.761382102966309
    4. '+' → logprob: -8.386382102966309
    5. '):
' → logprob: -8.386382102966309
    6. '   ' → logprob: -9.136382102966309
    7. ',' → logprob: -10.886382102966309
    8. ')+' → logprob: -11.511382102966309
    9. '       ' → logprob: -12.261382102966309
    10. ')**' → logprob: -12.386382102966309

Token 473: '       ' (ID: 309)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6681078672409058
    2. ':' → logprob: -1.5431078672409058
    3. '       ' → logprob: -2.1681079864501953
    4. '   ' → logprob: -2.5431079864501953
    5. '<|end|>' → logprob: -4.043107986450195
    6. '[
' → logprob: -4.168107986450195
    7. '.' → logprob: -4.293107986450195
    8. '(' → logprob: -4.293107986450195
    9. '[self' → logprob: -5.543107986450195
    10. ':return' → logprob: -5.918107986450195

Token 474: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9656771421432495
    2. ' return' → logprob: -1.0906771421432495
    3. 'return' → logprob: -1.5906771421432495
    4. '(' → logprob: -3.340677261352539
    5. ' (' → logprob: -3.965677261352539
    6. '((' → logprob: -4.590677261352539
    7. ':return' → logprob: -4.965677261352539
    8. '(return' → logprob: -5.465677261352539
    9. '   ' → logprob: -7.215677261352539
    10. '(
' → logprob: -7.715677261352539

Token 475: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15615428984165192
    2. 'return' → logprob: -2.5311543941497803
    3. '           ' → logprob: -3.6561543941497803
    4. ' return' → logprob: -3.7811543941497803
    5. '(' → logprob: -4.906154155731201
    6. ' (' → logprob: -5.781154155731201
    7. '        ' → logprob: -6.156154155731201
    8. '               ' → logprob: -7.156154155731201
    9. 'self' → logprob: -7.656154155731201
    10. '   ' → logprob: -7.781154155731201

Token 476: ' Calculates' (ID: 143745)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.24556684494018555
    2. 'return' → logprob: -2.1205668449401855
    3. '       ' → logprob: -3.2455668449401855
    4. '   ' → logprob: -3.4955668449401855
    5. ')' → logprob: -4.7455668449401855
    6. ' ' → logprob: -4.8705668449401855
    7. '<|end|>' → logprob: -5.3705668449401855
    8. '#' → logprob: -6.8705668449401855
    9. ' 
' → logprob: -6.8705668449401855
    10. ' (' → logprob: -7.2455668449401855

Token 477: ' the' (ID: 290)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.184661626815796
    2. '(self' → logprob: -1.434661626815796
    3. ' self' → logprob: -1.434661626815796
    4. 'self' → logprob: -1.684661626815796
    5. '(' → logprob: -3.684661626815796
    6. '(
' → logprob: -6.434661865234375
    7. ' h' → logprob: -6.809661865234375
    8. '((' → logprob: -6.809661865234375
    9. '(h' → logprob: -6.809661865234375
    10. '   ' → logprob: -7.059661865234375

Token 478: ' rolling' (ID: 30530)
  Prédit: ' hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' hash' → logprob: -0.431330144405365
    2. 'hash' → logprob: -1.0563302040100098
    3. ' substring' → logprob: -6.80633020401001
    4. ' (' → logprob: -7.18133020401001
    5. 'substring' → logprob: -8.556329727172852
    6. '(' → logprob: -9.431329727172852
    7. ' ' → logprob: -9.681329727172852
    8. '_hash' → logprob: -9.681329727172852
    9. 'h' → logprob: -9.681329727172852
    10. 'sub' → logprob: -9.806329727172852

Token 479: ' hash' (ID: 10691)
  Prédit: '_hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hash' → logprob: -0.5188390016555786
    2. '_' → logprob: -1.5188390016555786
    3. ' _' → logprob: -1.8938390016555786
    4. ' hash' → logprob: -3.518838882446289
    5. '_h' → logprob: -6.268838882446289
    6. ' ' → logprob: -6.518838882446289
    7. '   ' → logprob: -7.768838882446289
    8. 'hash' → logprob: -7.768838882446289
    9. '[' → logprob: -8.393838882446289
    10. '(' → logprob: -8.393838882446289

Token 480: ' of' (ID: 328)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.21106524765491486
    2. '[' → logprob: -2.2110652923583984
    3. '(
' → logprob: -3.2110652923583984
    4. '_' → logprob: -4.211065292358398
    5. '(l' → logprob: -4.336065292358398
    6. '[
' → logprob: -5.836065292358398
    7. '(self' → logprob: -6.211065292358398
    8. ' (' → logprob: -6.711065292358398
    9. '   ' → logprob: -6.711065292358398
    10. ' for' → logprob: -7.336065292358398

Token 481: ' the' (ID: 290)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.8260026574134827
    2. ' s' → logprob: -1.451002597808838
    3. ' l' → logprob: -1.701002597808838
    4. 's' → logprob: -2.201002597808838
    5. ' self' → logprob: -4.576002597808838
    6. 'self' → logprob: -4.576002597808838
    7. 'r' → logprob: -5.076002597808838
    8. ' r' → logprob: -5.951002597808838
    9. '(l' → logprob: -6.576002597808838
    10. ')' → logprob: -7.076002597808838

Token 482: ' subse' (ID: 19874)
  Prédit: ' substring'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' substring' → logprob: -0.3325294256210327
    2. ' sequence' → logprob: -2.4575295448303223
    3. 'substring' → logprob: -3.0825295448303223
    4. ' segment' → logprob: -3.2075295448303223
    5. 's' → logprob: -3.4575295448303223
    6. ' subse' → logprob: -3.7075295448303223
    7. ' s' → logprob: -3.8325295448303223
    8. 'sub' → logprob: -4.332529544830322
    9. 'sequence' → logprob: -4.457529544830322
    10. 'segment' → logprob: -5.707529544830322

Token 483: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.0013645237777382135
    2. 'q' → logprob: -7.251364707946777
    3. '[' → logprob: -7.751364707946777
    4. 'sequence' → logprob: -9.501364707946777
    5. '   ' → logprob: -10.376364707946777
    6. '[
' → logprob: -10.501364707946777
    7. 'qu' → logprob: -10.626364707946777
    8. '[q' → logprob: -11.376364707946777
    9. 'QUENCE' → logprob: -12.001364707946777
    10. 'string' → logprob: -12.126364707946777

Token 484: ' s' (ID: 265)
  Prédit: '[l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.1066574826836586
    2. '(l' → logprob: -2.4816575050354004
    3. '[' → logprob: -4.1066575050354
    4. '[
' → logprob: -7.8566575050354
    5. '```' → logprob: -8.231657028198242
    6. '(' → logprob: -8.606657028198242
    7. 'from' → logprob: -9.981657028198242
    8. '_' → logprob: -10.231657028198242
    9. '   ' → logprob: -10.356657028198242
    10. '_l' → logprob: -10.856657028198242

Token 485: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.10028073936700821
    2. '[' → logprob: -2.35028076171875
    3. '[
' → logprob: -9.72528076171875
    4. ' [' → logprob: -12.72528076171875
    5. '```' → logprob: -13.10028076171875
    6. '_' → logprob: -13.47528076171875
    7. '   ' → logprob: -13.85028076171875
    8. '[self' → logprob: -13.85028076171875
    9. 'l' → logprob: -13.85028076171875
    10. '\[' → logprob: -13.97528076171875

Token 486: ':r' (ID: 118417)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8561568260192871
    2. ']' → logprob: -1.356156826019287
    3. ':l' → logprob: -1.481156826019287
    4. ':r' → logprob: -2.981156826019287
    5. '[l' → logprob: -4.231156826019287
    6. '[r' → logprob: -4.731156826019287
    7. ' :' → logprob: -5.856156826019287
    8. '[' → logprob: -6.231156826019287
    9. ':]' → logprob: -6.606156826019287
    10. ':
' → logprob: -6.731156826019287

Token 487: '].

' (ID: 37441)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07694579660892487
    2. '])' → logprob: -3.3269457817077637
    3. ')' → logprob: -3.8269457817077637
    4. '[l' → logprob: -4.326945781707764
    5. '[' → logprob: -7.326945781707764
    6. '+' → logprob: -7.701945781707764
    7. ':' → logprob: -7.826945781707764
    8. ':l' → logprob: -8.326946258544922
    9. ']
' → logprob: -8.451946258544922
    10. '```' → logprob: -8.701946258544922

Token 488: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03140038251876831
    2. ')' → logprob: -3.906400442123413
    3. ' (' → logprob: -5.781400203704834
    4. '(' → logprob: -5.906400203704834
    5. ' return' → logprob: -6.656400203704834
    6. 'return' → logprob: -6.656400203704834
    7. '   ' → logprob: -7.781400203704834
    8. '```' → logprob: -8.281400680541992
    9. '<|end|>' → logprob: -8.406400680541992
    10. '           ' → logprob: -8.656400680541992

Token 489: ' Args' (ID: 39185)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 490: ':
' (ID: 734)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.8632045984268188
    2. '   ' → logprob: -1.8632045984268188
    3. '       ' → logprob: -1.9882045984268188
    4. ',' → logprob: -2.2382044792175293
    5. '<|end|>' → logprob: -2.3632044792175293
    6. ' +' → logprob: -2.4882044792175293
    7. '[l' → logprob: -2.4882044792175293
    8. '+' → logprob: -2.8632044792175293
    9. ')' → logprob: -3.1132044792175293
    10. '):
' → logprob: -3.9882044792175293

Token 491: '           ' (ID: 352)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.2674468755722046
    2. 'l' → logprob: -1.8924468755722046
    3. ')' → logprob: -3.767446994781494
    4. '       ' → logprob: -4.017446994781494
    5. '    ' → logprob: -4.767446994781494
    6. ' ' → logprob: -4.892446994781494
    7. '   ' → logprob: -4.892446994781494
    8. ' (' → logprob: -5.642446994781494
    9. '(l' → logprob: -5.767446994781494
    10. ',' → logprob: -5.892446994781494

Token 492: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.47459954023361206
    2. ' l' → logprob: -0.9745995402336121
    3. 'int' → logprob: -8.474599838256836
    4. ' int' → logprob: -8.599599838256836
    5. ')' → logprob: -10.349599838256836
    6. '       ' → logprob: -10.599599838256836
    7. '   ' → logprob: -10.599599838256836
    8. '    ' → logprob: -10.849599838256836
    9. ' ' → logprob: -11.724599838256836
    10. '           ' → logprob: -11.849599838256836

Token 493: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.43205785751342773
    2. '<|end|>' → logprob: -1.3070578575134277
    3. ')' → logprob: -3.3070578575134277
    4. '   ' → logprob: -3.5570578575134277
    5. ' ,' → logprob: -5.432057857513428
    6. '<|end|>' → logprob: -5.807057857513428
    7. '       ' → logprob: -6.432057857513428
    8. ' ' → logprob: -6.807057857513428
    9. '+' → logprob: -7.057057857513428
    10. ':' → logprob: -7.307057857513428

Token 494: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.23695048689842224
    2. ',' → logprob: -2.486950397491455
    3. ')' → logprob: -2.736950397491455
    4. ':int' → logprob: -2.986950397491455
    5. ',int' → logprob: -5.361950397491455
    6. ':' → logprob: -5.486950397491455
    7. ' int' → logprob: -6.111950397491455
    8. '):
' → logprob: -8.111950874328613
    9. '[int' → logprob: -8.236950874328613
    10. '   ' → logprob: -8.361950874328613

Token 495: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6896407008171082
    2. '):' → logprob: -1.189640760421753
    3. '):
' → logprob: -2.814640760421753
    4. ',' → logprob: -2.939640760421753
    5. '<|end|>' → logprob: -3.064640760421753
    6. '+' → logprob: -4.064640522003174
    7. ':' → logprob: -4.814640522003174
    8. '   ' → logprob: -6.064640522003174
    9. '<|end|>' → logprob: -6.814640522003174
    10. ' +' → logprob: -7.064640522003174

Token 496: ' Start' (ID: 7972)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.07140762358903885
    2. ' l' → logprob: -2.6964075565338135
    3. ')' → logprob: -6.571407794952393
    4. '<|end|>' → logprob: -10.696407318115234
    5. ' ' → logprob: -11.696407318115234
    6. '[' → logprob: -11.696407318115234
    7. '```' → logprob: -12.071407318115234
    8. 'r' → logprob: -12.696407318115234
    9. '           ' → logprob: -12.696407318115234
    10. '_l' → logprob: -12.696407318115234

Token 497: ' index' (ID: 3472)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2702128887176514
    2. '<|end|>' → logprob: -1.2702128887176514
    3. '```' → logprob: -1.7702128887176514
    4. '+' → logprob: -2.8952128887176514
    5. ' +' → logprob: -3.0202128887176514
    6. '   ' → logprob: -3.2702128887176514
    7. ',' → logprob: -3.3952128887176514
    8. '       ' → logprob: -4.1452131271362305
    9. '+l' → logprob: -4.3952131271362305
    10. ' ' → logprob: -4.7702131271362305

Token 498: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5572453141212463
    2. '<|end|>' → logprob: -1.5572452545166016
    3. '+' → logprob: -2.6822452545166016
    4. '   ' → logprob: -3.0572452545166016
    5. ' +' → logprob: -3.0572452545166016
    6. '[' → logprob: -4.307245254516602
    7. '       ' → logprob: -4.682245254516602
    8. '```' → logprob: -4.932245254516602
    9. ',' → logprob: -5.307245254516602
    10. '<|end|>' → logprob: -5.432245254516602

Token 499: 'inclusive' (ID: 186093)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018995026126503944
    2. ',' → logprob: -4.7689948081970215
    3. ' )' → logprob: -5.7689948081970215
    4. '<|end|>' → logprob: -5.7689948081970215
    5. 'l' → logprob: -7.2689948081970215
    6. '):
' → logprob: -7.7689948081970215
    7. '):' → logprob: -8.01899528503418
    8. '),' → logprob: -8.26899528503418
    9. ',l' → logprob: -8.26899528503418
    10. '```' → logprob: -8.51899528503418

Token 500: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2019491344690323
    2. ')
' → logprob: -1.701949119567871
    3. '           ' → logprob: -8.951949119567871
    4. '):
' → logprob: -9.076949119567871
    5. '```' → logprob: -9.576949119567871
    6. '       ' → logprob: -9.701949119567871
    7. ' )
' → logprob: -10.576949119567871
    8. '   ' → logprob: -10.576949119567871
    9. ' )' → logprob: -10.826949119567871
    10. ')**' → logprob: -11.076949119567871

Token 501: '           ' (ID: 352)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.32119670510292053
    2. '   ' → logprob: -2.1961967945098877
    3. '           ' → logprob: -2.3211967945098877
    4. '       ' → logprob: -2.9461967945098877
    5. ')' → logprob: -5.571196556091309
    6. ' r' → logprob: -5.696196556091309
    7. '```' → logprob: -6.196196556091309
    8. ' 
' → logprob: -7.446196556091309
    9. '    ' → logprob: -7.571196556091309
    10. '         ' → logprob: -8.571196556091309

Token 502: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.31390753388404846
    2. ' r' → logprob: -1.313907504081726
    3. '           ' → logprob: -7.438907623291016
    4. ')' → logprob: -10.188907623291016
    5. '   ' → logprob: -12.313907623291016
    6. '       ' → logprob: -12.438907623291016
    7. ' l' → logprob: -12.438907623291016
    8. 'l' → logprob: -13.313907623291016
    9. '            ' → logprob: -13.313907623291016
    10. '```' → logprob: -14.313907623291016

Token 503: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5660387277603149
    2. ':' → logprob: -1.816038727760315
    3. '+' → logprob: -2.4410386085510254
    4. ' +' → logprob: -2.6910386085510254
    5. '<|end|>' → logprob: -3.4410386085510254
    6. ',' → logprob: -3.8160386085510254
    7. '<|end|>' → logprob: -4.066038608551025
    8. '   ' → logprob: -4.316038608551025
    9. '):' → logprob: -4.441038608551025
    10. ':int' → logprob: -5.066038608551025

Token 504: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0007450680714100599
    2. ')' → logprob: -8.000744819641113
    3. ' int' → logprob: -8.500744819641113
    4. 'r' → logprob: -8.500744819641113
    5. ':int' → logprob: -13.750744819641113
    6. '[int' → logprob: -15.125744819641113
    7. '=int' → logprob: -15.250744819641113
    8. ' r' → logprob: -15.375744819641113
    9. '<int' → logprob: -15.375744819641113
    10. '<|end|>' → logprob: -15.625744819641113

Token 505: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11008276790380478
    2. ')' → logprob: -3.1100828647613525
    3. '+' → logprob: -3.2350828647613525
    4. '):
' → logprob: -4.360082626342773
    5. ':' → logprob: -5.110082626342773
    6. ' +' → logprob: -7.110082626342773
    7. '   ' → logprob: -9.235082626342773
    8. '<|end|>' → logprob: -9.735082626342773
    9. ')**' → logprob: -9.985082626342773
    10. ':int' → logprob: -9.985082626342773

Token 506: ' End' (ID: 6437)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.018226386979222298
    2. ' r' → logprob: -4.143226623535156
    3. ')' → logprob: -6.143226623535156
    4. '+' → logprob: -10.643226623535156
    5. ' +' → logprob: -12.643226623535156
    6. ' ' → logprob: -13.268226623535156
    7. '   ' → logprob: -13.518226623535156
    8. ']' → logprob: -13.643226623535156
    9. ' )' → logprob: -13.893226623535156
    10. '):
' → logprob: -13.893226623535156

Token 507: ' index' (ID: 3472)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.573456346988678
    2. ')' → logprob: -1.5734562873840332
    3. ' +' → logprob: -2.323456287384033
    4. '<|end|>' → logprob: -3.448456287384033
    5. ',' → logprob: -3.948456287384033
    6. '```' → logprob: -4.073456287384033
    7. '+r' → logprob: -4.448456287384033
    8. '   ' → logprob: -4.573456287384033
    9. 'r' → logprob: -4.698456287384033
    10. '=' → logprob: -4.823456287384033

Token 508: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4011502265930176
    2. '+' → logprob: -2.2761502265930176
    3. '):
' → logprob: -2.2761502265930176
    4. ' +' → logprob: -2.7761502265930176
    5. '):' → logprob: -3.2761502265930176
    6. '   ' → logprob: -4.526150226593018
    7. '```' → logprob: -5.276150226593018
    8. '<|end|>' → logprob: -6.026150226593018
    9. '<|end|>' → logprob: -6.901150226593018
    10. ')**' → logprob: -7.276150226593018

Token 509: 'exclusive' (ID: 196957)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0050910841673612595
    2. 'r' → logprob: -5.505091190338135
    3. ' )' → logprob: -8.255090713500977
    4. '+' → logprob: -8.380090713500977
    5. 'int' → logprob: -9.005090713500977
    6. '1' → logprob: -9.380090713500977
    7. 'exclusive' → logprob: -9.630090713500977
    8. '):' → logprob: -9.880090713500977
    9. ' r' → logprob: -10.005090713500977
    10. ' +' → logprob: -10.755090713500977

Token 510: ').

' (ID: 3991)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6116358041763306
    2. ')' → logprob: -0.8616358041763306
    3. '):' → logprob: -3.486635684967041
    4. ')
' → logprob: -6.361635684967041
    5. '```' → logprob: -6.361635684967041
    6. '   ' → logprob: -7.861635684967041
    7. '       ' → logprob: -8.3616361618042
    8. ')**' → logprob: -8.9866361618042
    9. '+' → logprob: -10.2366361618042
    10. ')`' → logprob: -10.2366361618042

Token 511: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0127055644989014
    2. '       ' → logprob: -1.1377055644989014
    3. '   ' → logprob: -1.2627055644989014
    4. '):' → logprob: -4.2627058029174805
    5. ':' → logprob: -4.8877058029174805
    6. '```' → logprob: -5.6377058029174805
    7. '):
' → logprob: -6.1377058029174805
    8. ':return' → logprob: -6.3877058029174805
    9. ' ' → logprob: -7.6377058029174805
    10. '    ' → logprob: -7.7627058029174805

Token 512: ' Returns' (ID: 9609)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02722310647368431
    2. ')' → logprob: -4.527223110198975
    3. 'return' → logprob: -4.902223110198975
    4. '   ' → logprob: -5.652223110198975
    5. '```' → logprob: -6.152223110198975
    6. ' return' → logprob: -6.527223110198975
    7. 'if' → logprob: -7.777223110198975
    8. ')
' → logprob: -7.902223110198975
    9. ' if' → logprob: -8.402222633361816
    10. '):
' → logprob: -9.027222633361816

Token 513: ':
' (ID: 734)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.03893587365746498
    2. ')' → logprob: -4.038935661315918
    3. '(self' → logprob: -4.413935661315918
    4. ' self' → logprob: -5.663935661315918
    5. ' ((' → logprob: -6.913935661315918
    6. '       ' → logprob: -6.913935661315918
    7. '        ' → logprob: -7.038935661315918
    8. ' ' → logprob: -7.663935661315918
    9. 'self' → logprob: -7.913935661315918
    10. ' =' → logprob: -8.413935661315918

Token 514: '           ' (ID: 352)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.15325161814689636
    2. '(self' → logprob: -2.0282516479492188
    3. ' self' → logprob: -4.903251647949219
    4. '       ' → logprob: -6.403251647949219
    5. 'self' → logprob: -6.653251647949219
    6. '   ' → logprob: -10.403251647949219
    7. '((' → logprob: -10.653251647949219
    8. ')' → logprob: -11.028251647949219
    9. ' ((' → logprob: -11.028251647949219
    10. '        ' → logprob: -11.278251647949219

Token 515: ' int' (ID: 677)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5446153283119202
    2. ' (' → logprob: -1.6696152687072754
    3. 'int' (adapté à ' int') → logprob: -1.6696152687072754
    4. 'self' → logprob: -3.4196152687072754
    5. '(int' → logprob: -5.419615268707275
    6. ' int' → logprob: -5.669615268707275
    7. ' self' → logprob: -6.169615268707275
    8. '(' → logprob: -8.294615745544434
    9. '(h' → logprob: -8.544615745544434
    10. '((' → logprob: -9.419615745544434

Token 516: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05141839757561684
    2. ' =' → logprob: -4.676418304443359
    3. '       ' → logprob: -5.051418304443359
    4. '(' → logprob: -5.301418304443359
    5. '=' → logprob: -5.301418304443359
    6. '   ' → logprob: -5.551418304443359
    7. '(
' → logprob: -5.551418304443359
    8. ':' → logprob: -5.801418304443359
    9. ' (' → logprob: -6.051418304443359
    10. '        ' → logprob: -6.176418304443359

Token 517: ' Hash' (ID: 10242)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.1272045373916626
    2. ' (' → logprob: -2.127204418182373
    3. 'self' → logprob: -9.252204895019531
    4. ' self' → logprob: -9.252204895019531
    5. '(h' → logprob: -10.127204895019531
    6. '((' → logprob: -10.877204895019531
    7. '(' → logprob: -11.377204895019531
    8. '   ' → logprob: -12.252204895019531
    9. '(hash' → logprob: -13.002204895019531
    10. '(s' → logprob: -13.877204895019531

Token 518: ' value' (ID: 1432)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.32199788093566895
    2. '(' → logprob: -2.696997880935669
    3. '(
' → logprob: -2.946997880935669
    4. '(self' → logprob: -3.196997880935669
    5. '_value' → logprob: -3.321997880935669
    6. '   ' → logprob: -3.571997880935669
    7. ' =' → logprob: -4.32199764251709
    8. '(s' → logprob: -4.69699764251709
    9. ' (' → logprob: -4.82199764251709
    10. '       ' → logprob: -5.57199764251709

Token 519: ' for' (ID: 395)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.038935303688049316
    2. '(
' → logprob: -3.7889351844787598
    3. '(l' → logprob: -5.28893518447876
    4. '   ' → logprob: -5.91393518447876
    5. '(r' → logprob: -6.66393518447876
    6. '(self' → logprob: -6.66393518447876
    7. '=' → logprob: -6.78893518447876
    8. ')' → logprob: -6.91393518447876
    9. '[' → logprob: -7.03893518447876
    10. '       ' → logprob: -7.66393518447876

Token 520: ' the' (ID: 290)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6488096117973328
    2. '(self' → logprob: -1.7738096714019775
    3. 'self' → logprob: -1.8988096714019775
    4. ' h' → logprob: -2.5238096714019775
    5. ' (' → logprob: -2.8988096714019775
    6. 'h' → logprob: -3.8988096714019775
    7. '(h' → logprob: -6.773809432983398
    8. '(' → logprob: -7.273809432983398
    9. ')' → logprob: -8.398809432983398
    10. '(r' → logprob: -9.773809432983398

Token 521: ' subse' (ID: 19874)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2885240912437439
    2. 'sub' → logprob: -2.9135241508483887
    3. ' substring' → logprob: -3.0385241508483887
    4. ' r' → logprob: -3.1635241508483887
    5. 'substring' → logprob: -3.2885241508483887
    6. ' subse' → logprob: -4.038524150848389
    7. 's' → logprob: -4.913524150848389
    8. 'segment' → logprob: -4.913524150848389
    9. ' s' → logprob: -5.038524150848389
    10. ' segment' → logprob: -5.038524150848389

Token 522: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.0003209229907952249
    2. '[l' → logprob: -9.125321388244629
    3. 'q' → logprob: -10.000321388244629
    4. '[' → logprob: -10.000321388244629
    5. 'sequence' → logprob: -10.375321388244629
    6. '   ' → logprob: -10.625321388244629
    7. '[
' → logprob: -11.125321388244629
    8. 'QUENCE' → logprob: -11.250321388244629
    9. 'quences' → logprob: -11.500321388244629
    10. '[r' → logprob: -11.875321388244629

Token 523: '.
' (ID: 558)
  Prédit: '[l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.5350137948989868
    2. '(l' → logprob: -1.9100137948989868
    3. '   ' → logprob: -2.2850136756896973
    4. '[' → logprob: -2.2850136756896973
    5. '[
' → logprob: -3.4100136756896973
    6. '       ' → logprob: -4.660013675689697
    7. ')' → logprob: -5.410013675689697
    8. '[r' → logprob: -5.535013675689697
    9. '```' → logprob: -5.535013675689697
    10. '(
' → logprob: -6.785013675689697

Token 524: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11862347275018692
    2. '   ' → logprob: -2.4936234951019287
    3. '(' → logprob: -4.99362325668335
    4. ')' → logprob: -5.49362325668335
    5. '
' → logprob: -5.61862325668335
    6. '(
' → logprob: -5.86862325668335
    7. 'return' → logprob: -6.49362325668335
    8. ' (' → logprob: -6.61862325668335
    9. '           ' → logprob: -6.99362325668335
    10. '    ' → logprob: -7.11862325668335

Token 525: ' """
' (ID: 7037)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6423454284667969
    2. '   ' → logprob: -1.5173454284667969
    3. ':' → logprob: -2.267345428466797
    4. '       ' → logprob: -2.767345428466797
    5. '(' → logprob: -2.892345428466797
    6. '=' → logprob: -4.892345428466797
    7. '#' → logprob: -5.642345428466797
    8. ' (' → logprob: -5.642345428466797
    9. '    ' → logprob: -5.892345428466797
    10. '[' → logprob: -6.142345428466797

Token 526: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007831734605133533
    2. ' return' → logprob: -5.132831573486328
    3. 'return' → logprob: -7.132831573486328
    4. '   ' → logprob: -7.132831573486328
    5. '           ' → logprob: -9.882831573486328
    6. '(' → logprob: -10.757831573486328
    7. '	' → logprob: -10.757831573486328
    8. ')' → logprob: -10.757831573486328
    9. '	return' → logprob: -10.882831573486328
    10. ':return' → logprob: -10.882831573486328

Token 527: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.008565167896449566
    2. '       ' → logprob: -5.3835649490356445
    3. 'res' → logprob: -5.6335649490356445
    4. 'ret' → logprob: -8.758564949035645
    5. ' return' → logprob: -9.633564949035645
    6. 'result' → logprob: -9.883564949035645
    7. 'val' → logprob: -10.258564949035645
    8. 'h' → logprob: -11.258564949035645
    9. 'v' → logprob: -11.758564949035645
    10. 'x' → logprob: -12.258564949035645

Token 528: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0007238718098960817
    2. ' (' → logprob: -7.250723838806152
    3. '((' → logprob: -11.875723838806152
    4. '(this' → logprob: -12.625723838806152
    5. '(' → logprob: -13.625723838806152
    6. '(abs' → logprob: -13.625723838806152
    7. '(h' → logprob: -15.000723838806152
    8. '(
' → logprob: -15.125723838806152
    9. 'self' → logprob: -16.00072479248047
    10. '
' → logprob: -16.37572479248047

Token 529: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.029761260375380516
    2. '(self' → logprob: -3.52976131439209
    3. ' self' → logprob: -11.52976131439209
    4. '[self' → logprob: -15.02976131439209
    5. '((' → logprob: -15.77976131439209
    6. '	self' → logprob: -15.90476131439209
    7. '(' → logprob: -16.029760360717773
    8. ' (' → logprob: -16.154760360717773
    9. '   ' → logprob: -16.279760360717773
    10. '(
' → logprob: -16.404760360717773

Token 530: '.h' (ID: 1508)
  Prédit: '.h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.h' → logprob: -2.5776860184123507e-06
    2. 'h' → logprob: -13.75000286102295
    3. '.' → logprob: -14.12500286102295
    4. ').' → logprob: -15.50000286102295
    5. ' .' → logprob: -15.50000286102295
    6. 'self' → logprob: -15.75000286102295
    7. '(h' → logprob: -17.625001907348633
    8. '_h' → logprob: -17.750001907348633
    9. '.hash' → logprob: -17.875001907348633
    10. '   ' → logprob: -17.875001907348633

Token 531: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -9.968312951968983e-06
    2. 'r' → logprob: -11.750009536743164
    3. '[' → logprob: -13.250009536743164
    4. '	r' → logprob: -16.750009536743164
    5. '[
' → logprob: -17.250009536743164
    6. ')' → logprob: -17.500009536743164
    7. '(r' → logprob: -17.625009536743164
    8. '   ' → logprob: -18.000009536743164
    9. '[right' → logprob: -18.125009536743164
    10. ' [' → logprob: -18.375009536743164

Token 532: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00269610108807683
    2. ']-' → logprob: -6.5026960372924805
    3. ' -' → logprob: -7.3776960372924805
    4. '[' → logprob: -8.25269603729248
    5. '-' → logprob: -8.25269603729248
    6. ')' → logprob: -10.62769603729248
    7. '}' → logprob: -11.75269603729248
    8. '```' → logprob: -12.62769603729248
    9. 'self' → logprob: -12.87769603729248
    10. '[self' → logprob: -13.12769603729248

Token 533: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.008616935461759567
    2. '-' → logprob: -4.758616924285889
    3. ' ' → logprob: -13.258617401123047
    4. '-self' → logprob: -15.508617401123047
    5. ' ' → logprob: -15.633617401123047
    6. ')' → logprob: -17.133617401123047
    7. '        ' → logprob: -17.508617401123047
    8. ' -
' → logprob: -17.508617401123047
    9. '```' → logprob: -17.508617401123047
    10. ',' → logprob: -17.883617401123047

Token 534: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0011927293380722404
    2. '(self' → logprob: -6.876192569732666
    3. ' self' → logprob: -8.751193046569824
    4. ' (' → logprob: -14.126193046569824
    5. '(' → logprob: -14.876193046569824
    6. '((' → logprob: -15.001193046569824
    7. '   ' → logprob: -16.251192092895508
    8. '	self' → logprob: -16.626192092895508
    9. '
' → logprob: -16.876192092895508
    10. '[self' → logprob: -16.876192092895508

Token 535: '.h' (ID: 1508)
  Prédit: '.h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.h' → logprob: -0.37307289242744446
    2. 'self' → logprob: -1.498072862625122
    3. '[self' → logprob: -2.498072862625122
    4. ' self' → logprob: -6.748073101043701
    5. '*self' → logprob: -6.998073101043701
    6. '(self' → logprob: -7.373073101043701
    7. '.s' → logprob: -7.623073101043701
    8. '[' → logprob: -7.623073101043701
    9. 'h' → logprob: -7.873073101043701
    10. '.' → logprob: -8.123072624206543

Token 536: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.012660914100706577
    2. '[self' → logprob: -4.387660980224609
    3. 'self' → logprob: -9.13766098022461
    4. 'l' → logprob: -10.51266098022461
    5. '[' → logprob: -12.13766098022461
    6. '[r' → logprob: -12.51266098022461
    7. '[
' → logprob: -13.13766098022461
    8. '```' → logprob: -13.38766098022461
    9. '*l' → logprob: -13.88766098022461
    10. ')' → logprob: -14.88766098022461

Token 537: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7857103943824768
    2. ' *' → logprob: -1.035710334777832
    3. '*' → logprob: -2.035710334777832
    4. ']*' → logprob: -3.410710334777832
    5. '*self' → logprob: -3.785710334777832
    6. '[self' → logprob: -6.785710334777832
    7. 'self' → logprob: -7.160710334777832
    8. '[' → logprob: -7.785710334777832
    9. '```' → logprob: -8.660710334777832
    10. ')' → logprob: -8.785710334777832

Token 538: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5249068737030029
    2. '*' → logprob: -1.149906873703003
    3. '*self' → logprob: -2.399906873703003
    4. ')' → logprob: -7.024907112121582
    5. 'self' → logprob: -9.774907112121582
    6. '[self' → logprob: -10.649907112121582
    7. '```' → logprob: -12.024907112121582
    8. ')*' → logprob: -12.024907112121582
    9. '(self' → logprob: -12.274907112121582
    10. ' self' → logprob: -12.649907112121582

Token 539: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.7252845029579476e-05
    2. ' self' → logprob: -10.625027656555176
    3. '(self' → logprob: -12.875027656555176
    4. '[self' → logprob: -15.250027656555176
    5. '=self' → logprob: -17.25002670288086
    6. '*self' → logprob: -17.62502670288086
    7. '	self' → logprob: -17.75002670288086
    8. '   ' → logprob: -18.12502670288086
    9. '       ' → logprob: -18.75002670288086
    10. '           ' → logprob: -20.12502670288086

Token 540: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.0004917914047837257
    2. 'self' → logprob: -7.625491619110107
    3. '.self' → logprob: -13.375492095947266
    4. '.' → logprob: -14.500492095947266
    5. 'pw' → logprob: -14.750492095947266
    6. '.py' → logprob: -14.750492095947266
    7. '[self' → logprob: -15.500492095947266
    8. ' self' → logprob: -15.500492095947266
    9. '	pw' → logprob: -16.125492095947266
    10. ' .' → logprob: -16.375492095947266

Token 541: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -9.088346359931165e-07
    2. '[w' → logprob: -14.500000953674316
    3. '[self' → logprob: -15.500000953674316
    4. 'ｗ' → logprob: -16.25
    5. '[' → logprob: -16.75
    6. 'pw' → logprob: -17.375
    7. 'ow' → logprob: -17.75
    8. '
' → logprob: -18.0
    9. '```' → logprob: -18.375
    10. 'o' → logprob: -18.5

Token 542: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -8.125210297293961e-05
    2. '[' → logprob: -9.500081062316895
    3. '[(' → logprob: -12.125081062316895
    4. ' [' → logprob: -14.625081062316895
    5. '[
' → logprob: -15.500081062316895
    6. 'r' → logprob: -15.625081062316895
    7. '(r' → logprob: -16.37508201599121
    8. '[l' → logprob: -17.00008201599121
    9. ']' → logprob: -18.00008201599121
    10. '   ' → logprob: -18.25008201599121

Token 543: '-l' (ID: 2887)
  Prédit: '-l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-l' → logprob: -0.419624388217926
    2. '[l' → logprob: -1.9196243286132812
    3. '-' → logprob: -2.2946243286132812
    4. ' -' → logprob: -2.4196243286132812
    5. '[-' → logprob: -5.294624328613281
    6. '[' → logprob: -6.794624328613281
    7. '[r' → logprob: -9.794624328613281
    8. '-[' → logprob: -10.544624328613281
    9. ']' → logprob: -11.044624328613281
    10. '-L' → logprob: -11.044624328613281

Token 544: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.2274855226278305
    2. ']' → logprob: -1.6024855375289917
    3. ']%' → logprob: -6.477485656738281
    4. '[' → logprob: -9.227485656738281
    5. ')' → logprob: -9.227485656738281
    6. 'l' → logprob: -9.352485656738281
    7. ']+' → logprob: -10.227485656738281
    8. '%' → logprob: -10.352485656738281
    9. '[l' → logprob: -10.352485656738281
    10. 'r' → logprob: -10.602485656738281

Token 545: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.0015040287980809808
    2. ' %' → logprob: -6.501503944396973
    3. ')%' → logprob: -14.626503944396973
    4. '%n' → logprob: -14.876503944396973
    5. ')' → logprob: -15.376503944396973
    6. '%i' → logprob: -15.501503944396973
    7. '%d' → logprob: -15.751503944396973
    8. '%x' → logprob: -16.12650489807129
    9. '%c' → logprob: -16.37650489807129
    10. '%m' → logprob: -16.87650489807129

Token 546: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.7697225252486533e-06
    2. ' self' → logprob: -13.000003814697266
    3. '(self' → logprob: -13.500003814697266
    4. '[self' → logprob: -18.250003814697266
    5. '       ' → logprob: -19.875003814697266
    6. '
' → logprob: -20.125003814697266
    7. '	self' → logprob: -20.750003814697266
    8. '$self' → logprob: -21.000003814697266
    9. '=self' → logprob: -21.500003814697266
    10. '   ' → logprob: -21.625003814697266

Token 547: '.mod' (ID: 19046)
  Prédit: '.mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mod' → logprob: -2.7729658540920354e-05
    2. 'mod' → logprob: -10.500027656555176
    3. ' mod' → logprob: -17.000028610229492
    4. '	mod' → logprob: -17.750028610229492
    5. '(mod' → logprob: -17.875028610229492
    6. ' .' → logprob: -18.125028610229492
    7. '_mod' → logprob: -18.750028610229492
    8. 'omod' → logprob: -19.000028610229492
    9. '```' → logprob: -19.750028610229492
    10. 'od' → logprob: -20.125028610229492

Token 548: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 549: 'def' (ID: 1314)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4259691834449768
    2. '<|end|>' → logprob: -1.800969123840332
    3. ')' → logprob: -2.050969123840332
    4. '
' → logprob: -4.425969123840332
    5. '```' → logprob: -4.800969123840332
    6. '#' → logprob: -5.050969123840332
    7. '[' → logprob: -5.175969123840332
    8. '\n' → logprob: -5.175969123840332
    9. '(' → logprob: -5.800969123840332
    10. '.' → logprob: -6.050969123840332

Token 550: ' sl' (ID: 1925)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.5374957919120789
    2. ' solve' → logprob: -1.9124958515167236
    3. ' _' → logprob: -2.6624958515167236
    4. ' bit' → logprob: -3.5374958515167236
    5. '_' → logprob: -3.6624958515167236
    6. ' decode' → logprob: -3.9124958515167236
    7. ' check' → logprob: -4.2874956130981445
    8. ' process' → logprob: -4.2874956130981445
    9. ' compute' → logprob: -4.2874956130981445
    10. ' find' → logprob: -4.4124956130981445

Token 551: 'v' (ID: 85)
  Prédit: 'ice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.44639548659324646
    2. 'en' → logprob: -1.6963955163955688
    3. 'eep' → logprob: -2.3213953971862793
    4. 'e' → logprob: -3.8213953971862793
    5. 'ide' → logprob: -4.696395397186279
    6. 'ug' → logprob: -5.071395397186279
    7. 'ices' → logprob: -5.321395397186279
    8. 'ee' → logprob: -5.571395397186279
    9. '[]' → logprob: -5.696395397186279
    10. '=' → logprob: -5.696395397186279

Token 552: '(N' (ID: 10564)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.021585654467344284
    2. '(a' → logprob: -4.521585464477539
    3. '(' → logprob: -5.021585464477539
    4. '(n' → logprob: -6.021585464477539
    5. '(e' → logprob: -8.396585464477539
    6. '_' → logprob: -8.521585464477539
    7. '(i' → logprob: -8.896585464477539
    8. '():
' → logprob: -8.896585464477539
    9. '(s' → logprob: -9.271585464477539
    10. '(N' → logprob: -9.396585464477539

Token 553: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002929174806922674
    2. '):' → logprob: -8.250292778015137
    3. ' ,' → logprob: -10.875292778015137
    4. ':' → logprob: -12.500292778015137
    5. ',N' → logprob: -12.875292778015137
    6. ',n' → logprob: -13.000292778015137
    7. ',
' → logprob: -13.875292778015137
    8. '):
' → logprob: -13.875292778015137
    9. ',int' → logprob: -15.000292778015137
    10. ')' → logprob: -15.750292778015137

Token 554: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.9295405149459839
    2. 'M' → logprob: -1.5545405149459839
    3. 'K' → logprob: -1.9295405149459839
    4. 'arr' → logprob: -2.9295406341552734
    5. 'X' → logprob: -3.3045406341552734
    6. 'bits' → logprob: -3.3045406341552734
    7. 's' → logprob: -3.8045406341552734
    8. 'S' → logprob: -4.054540634155273
    9. 'a' → logprob: -4.179540634155273
    10. 'x' → logprob: -4.804540634155273

Token 555: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14703845977783203
    2. '):' → logprob: -2.272038459777832
    3. '):
' → logprob: -3.397038459777832
    4. ':' → logprob: -9.647038459777832
    5. '):
' → logprob: -9.647038459777832
    6. ')' → logprob: -11.022038459777832
    7. ' ,' → logprob: -12.397038459777832
    8. '):

' → logprob: -12.772038459777832
    9. ',N' → logprob: -12.897038459777832
    10. '   ' → logprob: -13.147038459777832

Token 556: ' B' (ID: 418)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -1.0665987730026245
    2. 'M' → logprob: -1.1915987730026245
    3. 'B' → logprob: -1.6915987730026245
    4. 'X' → logprob: -3.316598892211914
    5. 'L' → logprob: -3.691598892211914
    6. 'Q' → logprob: -3.941598892211914
    7. 'k' → logprob: -4.191598892211914
    8. 'C' → logprob: -5.191598892211914
    9. 'x' → logprob: -5.191598892211914
    10. 'P' → logprob: -5.316598892211914

Token 557: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.029111437499523163
    2. '):
' → logprob: -4.029111385345459
    3. ',' → logprob: -4.529111385345459
    4. ')' → logprob: -9.904111862182617
    5. ':' → logprob: -10.529111862182617
    6. '):
' → logprob: -11.154111862182617
    7. ' ):' → logprob: -12.154111862182617
    8. '[]):' → logprob: -12.529111862182617
    9. '   ' → logprob: -12.654111862182617
    10. '):

' → logprob: -13.529111862182617

Token 558: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7011975646018982
    2. '   ' → logprob: -1.076197624206543
    3. ':
' → logprob: -1.826197624206543
    4. '```' → logprob: -6.951197624206543
    5. '[' → logprob: -7.826197624206543
    6. '    
' → logprob: -9.201197624206543
    7. '):
' → logprob: -9.451197624206543
    8. ',' → logprob: -9.451197624206543
    9. '#' → logprob: -10.076197624206543
    10. '():
' → logprob: -10.701197624206543

Token 559: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16365887224674225
    2. 'mod' → logprob: -2.663658857345581
    3. 'res' → logprob: -4.41365909576416
    4. 'm' → logprob: -4.41365909576416
    5. 'ans' → logprob: -4.78865909576416
    6. 'max' → logprob: -4.91365909576416
    7. '```' → logprob: -5.41365909576416
    8. 'MOD' → logprob: -5.53865909576416
    9. 'r' → logprob: -5.78865909576416
    10. 'k' → logprob: -6.03865909576416

Token 560: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10820779949426651
    2. '"""
' → logprob: -3.3582077026367188
    3. '"' → logprob: -4.233207702636719
    4. '    ' → logprob: -4.358207702636719
    5. '"""' → logprob: -4.358207702636719
    6. 'n' → logprob: -5.608207702636719
    7. 'r' → logprob: -5.983207702636719
    8. ' n' → logprob: -5.983207702636719
    9. '       ' → logprob: -6.108207702636719
    10. '```' → logprob: -6.733207702636719

Token 561: ' Finds' (ID: 113426)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8506598472595215
    2. 'def' → logprob: -1.6006598472595215
    3. '#' → logprob: -2.1006598472595215
    4. 'l' → logprob: -3.2256598472595215
    5. 'res' → logprob: -3.2256598472595215
    6. ' #' → logprob: -3.3506598472595215
    7. 'n' → logprob: -3.9756598472595215
    8. 'r' → logprob: -4.1006598472595215
    9. 'max' → logprob: -4.1006598472595215
    10. 'if' → logprob: -4.6006598472595215

Token 562: ' all' (ID: 722)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.15037371218204498
    2. 'the' → logprob: -2.400373697280884
    3. '   ' → logprob: -3.650373697280884
    4. 'def' → logprob: -5.525373935699463
    5. ' a' → logprob: -5.900373935699463
    6. 'max' → logprob: -6.275373935699463
    7. 'l' → logprob: -6.400373935699463
    8. 'a' → logprob: -6.525373935699463
    9. ' res' → logprob: -6.650373935699463
    10. '(N' → logprob: -7.275373935699463

Token 563: ' valid' (ID: 4529)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.948246717453003
    2. 'indices' → logprob: -2.198246717453003
    3. 'positions' → logprob: -2.323246717453003
    4. ' res' → logprob: -2.448246717453003
    5. 'length' → logprob: -2.823246717453003
    6. 'pairs' → logprob: -2.823246717453003
    7. 'possible' → logprob: -2.948246717453003
    8. 'res' → logprob: -2.948246717453003
    9. 'sub' → logprob: -3.323246717453003
    10. 'k' → logprob: -3.698246717453003

Token 564: ' (' (ID: 350)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.8930379748344421
    2. 'length' → logprob: -1.518038034439087
    3. 'i' → logprob: -2.768038034439087
    4. 'positions' → logprob: -2.768038034439087
    5. 'm' → logprob: -3.143038034439087
    6. 'indices' → logprob: -3.268038034439087
    7. 'prefix' → logprob: -3.768038034439087
    8. 'k' → logprob: -4.143037796020508
    9. 'pairs' → logprob: -4.143037796020508
    10. 'substr' → logprob: -4.643037796020508

Token 565: 'k' (ID: 74)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1417828798294067
    2. 'i' → logprob: -1.5167828798294067
    3. 'l' → logprob: -2.016782760620117
    4. ')' → logprob: -2.516782760620117
    5. 'start' → logprob: -2.766782760620117
    6. 'k' → logprob: -3.641782760620117
    7. 'L' → logprob: -4.016782760620117
    8. ' i' → logprob: -4.266782760620117
    9. '   ' → logprob: -4.391782760620117
    10. 'n' → logprob: -4.641782760620117

Token 566: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16444559395313263
    2. ')' → logprob: -2.039445638656616
    3. '+' → logprob: -4.164445400238037
    4. ',)' → logprob: -6.664445400238037
    5. ' +' → logprob: -7.039445400238037
    6. '=' → logprob: -7.289445400238037
    7. ',k' → logprob: -7.664445400238037
    8. '   ' → logprob: -7.664445400238037
    9. ' ,' → logprob: -8.164445877075195
    10. ',
' → logprob: -8.164445877075195

Token 567: ' x' (ID: 1215)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.9941725134849548
    2. 'l' → logprob: -1.4941725730895996
    3. 'M' → logprob: -2.6191725730895996
    4. 'x' → logprob: -2.9941725730895996
    5. 'n' → logprob: -3.1191725730895996
    6. 'k' → logprob: -3.6191725730895996
    7. ')' → logprob: -3.8691725730895996
    8. 'length' → logprob: -3.8691725730895996
    9. 'len' → logprob: -3.8691725730895996
    10. 'd' → logprob: -3.9941725730895996

Token 568: ')' (ID: 8)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.11588337272405624
    2. '):' → logprob: -2.3658833503723145
    3. ')' → logprob: -4.6158833503723145
    4. ',' → logprob: -5.2408833503723145
    5. 's' → logprob: -9.740883827209473
    6. '):

' → logprob: -9.740883827209473
    7. '0' → logprob: -9.990883827209473
    8. '   ' → logprob: -9.990883827209473
    9. '):
' → logprob: -10.615883827209473
    10. ')
' → logprob: -10.990883827209473

Token 569: ' pairs' (ID: 24702)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.608183741569519
    2. '):' → logprob: -1.733183741569519
    3. '):
' → logprob: -1.858183741569519
    4. ',' → logprob: -2.4831838607788086
    5. ':
' → logprob: -4.858183860778809
    6. '_pairs' → logprob: -4.858183860778809
    7. 's' → logprob: -5.233183860778809
    8. ' :' → logprob: -6.108183860778809
    9. '   ' → logprob: -6.233183860778809
    10. '_list' → logprob: -6.483183860778809

Token 570: ' where' (ID: 1919)
  Prédit: ' such'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' such' → logprob: -0.8405872583389282
    2. '   ' → logprob: -1.8405872583389282
    3. ' where' → logprob: -1.9655872583389282
    4. ' for' → logprob: -2.5905871391296387
    5. ':' → logprob: -2.8405871391296387
    6. ',' → logprob: -3.0905871391296387
    7. ' that' → logprob: -3.3405871391296387
    8. '(N' → logprob: -3.5905871391296387
    9. '(n' → logprob: -5.340587139129639
    10. '):
' → logprob: -5.590587139129639

Token 571: ' B' (ID: 418)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.9044795036315918
    2. 'k' → logprob: -1.0294795036315918
    3. ' k' → logprob: -2.779479503631592
    4. ' N' → logprob: -2.904479503631592
    5. ' for' → logprob: -3.654479503631592
    6. 'B' → logprob: -4.154479503631592
    7. 'A' → logprob: -4.404479503631592
    8. 'x' → logprob: -4.654479503631592
    9. '0' → logprob: -4.779479503631592
    10. 'n' → logprob: -4.904479503631592

Token 572: ' is' (ID: 382)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.757237434387207
    2. '[' → logprob: -1.757237434387207
    3. '==' → logprob: -2.632237434387207
    4. 'len' → logprob: -2.632237434387207
    5. '=' → logprob: -2.757237434387207
    6. '_len' → logprob: -2.757237434387207
    7. '[i' → logprob: -3.007237434387207
    8. ' =' → logprob: -3.007237434387207
    9. '[k' → logprob: -3.007237434387207
    10. '[len' → logprob: -3.007237434387207

Token 573: ' obtained' (ID: 17747)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.14846406877040863
    2. 'A' → logprob: -2.3984639644622803
    3. ' a' → logprob: -4.398464202880859
    4. '(A' → logprob: -5.523464202880859
    5. 'equal' → logprob: -5.648464202880859
    6. '[' → logprob: -5.773464202880859
    7. 'sub' → logprob: -6.273464202880859
    8. 'derived' → logprob: -6.273464202880859
    9. 'prefix' → logprob: -6.398464202880859
    10. 's' → logprob: -6.398464202880859

Token 574: ' by' (ID: 656)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.3981296122074127
    2. 'by' → logprob: -1.1481295824050903
    3. '   ' → logprob: -5.398129463195801
    4. '=' → logprob: -5.648129463195801
    5. ' by' → logprob: -6.273129463195801
    6. 'as' → logprob: -7.398129463195801
    7. ' =' → logprob: -8.0231294631958
    8. ' from' → logprob: -8.8981294631958
    9. 'def' → logprob: -10.0231294631958
    10. ' as' → logprob: -10.5231294631958

Token 575: ' applying' (ID: 24667)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'app' → logprob: -1.3091051578521729
    2. 'A' → logprob: -1.9341051578521729
    3. '((' → logprob: -2.559105157852173
    4. 'k' → logprob: -2.684105157852173
    5. 'x' → logprob: -2.934105157852173
    6. '(k' → logprob: -3.184105157852173
    7. 'sh' → logprob: -3.309105157852173
    8. '[(' → logprob: -3.434105157852173
    9. 'xor' → logprob: -3.684105157852173
    10. '(A' → logprob: -3.684105157852173

Token 576: ' XOR' (ID: 147209)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -1.5804221630096436
    2. 'A' → logprob: -1.8304221630096436
    3. 'xor' → logprob: -1.9554221630096436
    4. '(lambda' → logprob: -2.4554221630096436
    5. 'k' → logprob: -2.7054221630096436
    6. 'B' → logprob: -3.3304221630096436
    7. 'the' → logprob: -3.7054221630096436
    8. 'bit' → logprob: -3.8304221630096436
    9. '^' → logprob: -3.8304221630096436
    10. '   ' → logprob: -3.9554221630096436

Token 577: ' operation' (ID: 9506)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.8633365035057068
    2. '   ' → logprob: -1.1133365631103516
    3. ' (' → logprob: -2.4883365631103516
    4. '(' → logprob: -2.8633365631103516
    5. ' ' → logprob: -3.8633365631103516
    6. '(k' → logprob: -4.113336563110352
    7. '_' → logprob: -4.363336563110352
    8. ' on' → logprob: -4.488336563110352
    9. '(N' → logprob: -4.988336563110352
    10. '(s' → logprob: -5.238336563110352

Token 578: ' to' (ID: 316)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9985184669494629
    2. '   ' → logprob: -0.9985184669494629
    3. '(A' → logprob: -2.123518466949463
    4. '(N' → logprob: -2.748518466949463
    5. ' on' → logprob: -3.623518466949463
    6. '(k' → logprob: -4.373518466949463
    7. '_' → logprob: -4.998518466949463
    8. ' (' → logprob: -5.623518466949463
    9. ',' → logprob: -5.623518466949463
    10. 'with' → logprob: -5.873518466949463

Token 579: ' 
' (ID: 793)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.1333654820919037
    2. 'N' → logprob: -2.5083653926849365
    3. ' A' → logprob: -4.258365631103516
    4. ' the' → logprob: -4.883365631103516
    5. 'the' → logprob: -5.008365631103516
    6. '   ' → logprob: -5.508365631103516
    7. ' each' → logprob: -5.758365631103516
    8. 'each' → logprob: -5.758365631103516
    9. ' N' → logprob: -7.008365631103516
    10. ' elements' → logprob: -7.383365631103516

Token 580: '   ' (ID: 271)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.046624135226011276
    2. ' A' → logprob: -3.796624183654785
    3. 'N' → logprob: -3.921624183654785
    4. '   ' → logprob: -6.546624183654785
    5. ' N' → logprob: -7.671624183654785
    6. 'B' → logprob: -8.046624183654785
    7. ' ' → logprob: -9.046624183654785
    8. ')' → logprob: -9.046624183654785
    9. 'k' → logprob: -9.171624183654785
    10. '(N' → logprob: -9.296624183654785

Token 581: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.02197011560201645
    2. 'range' → logprob: -4.271970272064209
    3. 'B' → logprob: -6.146970272064209
    4. 'N' → logprob: -6.271970272064209
    5. ' range' → logprob: -7.396970272064209
    6. ' A' → logprob: -7.521970272064209
    7. 'a' → logprob: -7.646970272064209
    8. 'each' → logprob: -7.771970272064209
    9. 'the' → logprob: -8.14696979522705
    10. 's' → logprob: -8.52196979522705

Token 582: ' with' (ID: 483)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9012054800987244
    2. ' with' → logprob: -1.9012055397033691
    3. 'with' → logprob: -2.276205539703369
    4. '[' → logprob: -2.401205539703369
    5. ' at' → logprob: -3.026205539703369
    6. '(N' → logprob: -3.526205539703369
    7. ')' → logprob: -3.901205539703369
    8. '   ' → logprob: -3.901205539703369
    9. ' on' → logprob: -4.026205539703369
    10. '(' → logprob: -4.276205539703369

Token 583: ' a' (ID: 261)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.018080992624163628
    2. ' k' → logprob: -5.143081188201904
    3. 'x' → logprob: -5.893081188201904
    4. '(k' → logprob: -6.393081188201904
    5. 'all' → logprob: -6.643081188201904
    6. 'N' → logprob: -6.643081188201904
    7. 'the' → logprob: -7.643081188201904
    8. '(' → logprob: -7.893081188201904
    9. '[k' → logprob: -8.018080711364746
    10. 'each' → logprob: -8.018080711364746

Token 584: ' shifted' (ID: 58644)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.7953848242759705
    2. 'k' → logprob: -0.9203848242759705
    3. ' range' → logprob: -3.4203848838806152
    4. ' mask' → logprob: -4.045384883880615
    5. '(k' → logprob: -4.420384883880615
    6. ' ' → logprob: -4.670384883880615
    7. ' lambda' → logprob: -4.670384883880615
    8. 'xor' → logprob: -5.045384883880615
    9. 'range' → logprob: -5.295384883880615
    10. 'lambda' → logprob: -5.420384883880615

Token 585: ' and' (ID: 326)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.0781981945037842
    2. 'A' → logprob: -1.5781981945037842
    3. '(' → logprob: -1.8281981945037842
    4. '_' → logprob: -2.953198194503784
    5. ' (' → logprob: -3.078198194503784
    6. '(A' → logprob: -3.828198194503784
    7. '_x' → logprob: -3.828198194503784
    8. 'B' → logprob: -4.078198432922363
    9. 'xor' → logprob: -4.078198432922363
    10. '(k' → logprob: -4.203198432922363

Token 586: ' reversed' (ID: 57184)
  Prédit: 'rot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rot' → logprob: -0.11735010892152786
    2. 're' → logprob: -3.2423501014709473
    3. 'masked' → logprob: -3.7423501014709473
    4. 'xor' → logprob: -4.617350101470947
    5. 'rolled' → logprob: -4.867350101470947
    6. 'cycled' → logprob: -5.492350101470947
    7. ' rotated' → logprob: -5.742350101470947
    8. 'or' → logprob: -5.742350101470947
    9. 'c' → logprob: -6.492350101470947
    10. 'combined' → logprob: -6.492350101470947

Token 587: ' mask' (ID: 10910)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.0139176845550537
    2. 'version' → logprob: -1.7639176845550537
    3. 'bit' → logprob: -2.3889176845550537
    4. ' version' → logprob: -2.5139176845550537
    5. 'B' → logprob: -3.0139176845550537
    6. 'mask' → logprob: -3.3889176845550537
    7. ' A' → logprob: -3.6389176845550537
    8. 'window' → logprob: -3.6389176845550537
    9. 'xor' → logprob: -4.138917922973633
    10. ' mask' → logprob: -4.513917922973633

Token 588: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0271531343460083
    2. ',' → logprob: -2.2771530151367188
    3. '(A' → logprob: -2.4021530151367188
    4. 'def' → logprob: -2.4021530151367188
    5. ':' → logprob: -2.6521530151367188
    6. '(' → logprob: -3.1521530151367188
    7. '(s' → logprob: -3.5271530151367188
    8. '(k' → logprob: -3.7771530151367188
    9. '_' → logprob: -4.027153015136719
    10. 's' → logprob: -4.277153015136719

Token 589: ' considering' (ID: 17227)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2918276786804199
    2. ' k' → logprob: -1.66682767868042
    3. 'k' → logprob: -3.41682767868042
    4. '    ' → logprob: -4.79182767868042
    5. ' x' → logprob: -5.16682767868042
    6. ' i' → logprob: -5.66682767868042
    7. ' starting' → logprob: -5.79182767868042
    8. 'def' → logprob: -6.04182767868042
    9. 'x' → logprob: -6.66682767868042
    10. '```' → logprob: -7.16682767868042

Token 590: ' all' (ID: 722)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.621439516544342
    2. 'k' → logprob: -1.3714394569396973
    3. 'len' → logprob: -2.1214394569396973
    4. 'the' → logprob: -3.7464394569396973
    5. ' N' → logprob: -4.371439456939697
    6. 'range' → logprob: -4.371439456939697
    7. 'A' → logprob: -4.621439456939697
    8. ')' → logprob: -5.621439456939697
    9. 'x' → logprob: -5.871439456939697
    10. ' k' → logprob: -5.871439456939697

Token 591: ' cyclic' (ID: 139817)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.4447273015975952
    2. ' k' → logprob: -2.3197274208068848
    3. 'possible' → logprob: -2.4447274208068848
    4. 'sh' → logprob: -2.9447274208068848
    5. ' possible' → logprob: -2.9447274208068848
    6. ' shifts' → logprob: -4.194727420806885
    7. 'shift' → logprob: -4.444727420806885
    8. '(' → logprob: -5.319727420806885
    9. 'x' → logprob: -5.444727420806885
    10. 'positions' → logprob: -5.694727420806885

Token 592: ' rotations' (ID: 141136)
  Prédit: ' shifts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' shifts' → logprob: -0.7348640561103821
    2. '_sh' → logprob: -1.1098639965057373
    3. 'sh' → logprob: -2.2348639965057373
    4. 's' → logprob: -4.109864234924316
    5. '_shift' → logprob: -4.234864234924316
    6. '_' → logprob: -4.484864234924316
    7. ' _' → logprob: -4.984864234924316
    8. '_s' → logprob: -4.984864234924316
    9. ' permutations' → logprob: -5.359864234924316
    10. '(' → logprob: -5.734864234924316

Token 593: ' and' (ID: 326)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.842544436454773
    2. ':' → logprob: -1.467544436454773
    3. ',' → logprob: -2.8425445556640625
    4. '   ' → logprob: -2.9675445556640625
    5. '(' → logprob: -2.9675445556640625
    6. '(B' → logprob: -3.4675445556640625
    7. '(A' → logprob: -3.5925445556640625
    8. '.' → logprob: -3.8425445556640625
    9. '(k' → logprob: -4.2175445556640625
    10. '):' → logprob: -4.4675445556640625

Token 594: ' possible' (ID: 4149)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -1.5016984939575195
    2. 'sh' → logprob: -1.6266984939575195
    3. 'offset' → logprob: -2.3766984939575195
    4. 'sub' → logprob: -3.0016984939575195
    5. 're' → logprob: -3.1266984939575195
    6. ' lengths' → logprob: -3.1266984939575195
    7. ' shifts' → logprob: -3.5016984939575195
    8. 'prefix' → logprob: -3.7516984939575195
    9. 'all' → logprob: -3.8766984939575195
    10. 'k' → logprob: -3.8766984939575195

Token 595: ' bit' (ID: 3546)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.4639737606048584
    2. 'sh' → logprob: -1.9639737606048584
    3. 'm' → logprob: -2.0889737606048584
    4. '```' → logprob: -2.5889737606048584
    5. 'offset' → logprob: -3.0889737606048584
    6. ' shifts' → logprob: -3.0889737606048584
    7. 'length' → logprob: -3.2139737606048584
    8. 'x' → logprob: -3.3389737606048584
    9. 'mask' → logprob: -3.8389737606048584
    10. ' k' → logprob: -3.8389737606048584

Token 596: ' masks' (ID: 40028)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.7100769281387329
    2. 'fl' → logprob: -1.710076928138733
    3. 'sh' → logprob: -1.835076928138733
    4. '   ' → logprob: -2.9600768089294434
    5. 'length' → logprob: -3.5850768089294434
    6. ' flips' → logprob: -3.5850768089294434
    7. ' shifts' → logprob: -4.585076808929443
    8. '-fl' → logprob: -5.085076808929443
    9. 'wise' → logprob: -5.335076808929443
    10. '```' → logprob: -5.460076808929443

Token 597: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7468841075897217
    2. ':' → logprob: -1.9968841075897217
    3. '):
' → logprob: -1.9968841075897217
    4. '):' → logprob: -2.8718841075897217
    5. ',' → logprob: -3.2468841075897217
    6. '(n' → logprob: -3.7468841075897217
    7. ':
' → logprob: -3.7468841075897217
    8. 'def' → logprob: -3.8718841075897217
    9. '```' → logprob: -4.121884346008301
    10. '(' → logprob: -4.496884346008301

Token 598: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12403316795825958
    2. '   ' → logprob: -2.499033212661743
    3. ':
' → logprob: -3.999033212661743
    4. '):' → logprob: -5.374032974243164
    5. 'def' → logprob: -5.624032974243164
    6. ')' → logprob: -6.249032974243164
    7. '```' → logprob: -6.249032974243164
    8. ',' → logprob: -6.374032974243164
    9. '):
' → logprob: -7.499032974243164
    10. 'n' → logprob: -7.624032974243164

Token 599: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014247183687984943
    2. '
' → logprob: -5.264247417449951
    3. 'n' → logprob: -5.764247417449951
    4. 'def' → logprob: -6.639247417449951
    5. ' for' → logprob: -7.264247417449951
    6. 'for' → logprob: -7.389247417449951
    7. ' n' → logprob: -7.889247417449951
    8. '    
' → logprob: -8.014246940612793
    9. ' res' → logprob: -8.139246940612793
    10. '```' → logprob: -8.264246940612793

Token 600: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.035501934587955475
    2. ':' → logprob: -4.285501956939697
    3. '   ' → logprob: -4.410501956939697
    4. '):' → logprob: -5.535501956939697
    5. '=' → logprob: -5.785501956939697
    6. '):
' → logprob: -7.285501956939697
    7. ',
' → logprob: -7.785501956939697
    8. ')' → logprob: -8.285501480102539
    9. ' ,' → logprob: -9.785501480102539
    10. '[' → logprob: -9.785501480102539

Token 601: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013002808205783367
    2. '       ' → logprob: -4.888002872467041
    3. ' self' → logprob: -6.513002872467041
    4. 'self' → logprob: -6.763002872467041
    5. ' N' → logprob: -7.513002872467041
    6. 'N' → logprob: -7.763002872467041
    7. ' ' → logprob: -7.888002872467041
    8. 'def' → logprob: -8.013002395629883
    9. '    ' → logprob: -8.513002395629883
    10. ' def' → logprob: -8.513002395629883

Token 602: ' N' (ID: 478)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4593823552131653
    2. 'List' → logprob: -1.7093822956085205
    3. 'N' (adapté à ' N') → logprob: -1.8343822956085205
    4. 'A' → logprob: -4.0843825340271
    5. '   ' → logprob: -4.9593825340271
    6. ')' → logprob: -6.3343825340271
    7. 'list' → logprob: -7.0843825340271
    8. 'None' → logprob: -8.459382057189941
    9. '):
' → logprob: -8.584382057189941
    10. '):' → logprob: -8.584382057189941

Token 603: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001452140393666923
    2. '):' → logprob: -7.5014519691467285
    3. ' ,' → logprob: -8.001452445983887
    4. ':' → logprob: -8.626452445983887
    5. '   ' → logprob: -8.751452445983887
    6. ',int' → logprob: -9.626452445983887
    7. ',
' → logprob: -9.876452445983887
    8. ':int' → logprob: -10.251452445983887
    9. '<|end|>' → logprob: -10.751452445983887
    10. '):
' → logprob: -10.876452445983887

Token 604: 'int' (ID: 491)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6829317808151245
    2. 'int' → logprob: -0.8079317808151245
    3. ',int' → logprob: -3.307931900024414
    4. ')' → logprob: -4.557931900024414
    5. '),' → logprob: -7.182931900024414
    6. '[int' → logprob: -7.932931900024414
    7. '):' → logprob: -8.307931900024414
    8. ' int' → logprob: -8.432931900024414
    9. ':int' → logprob: -9.682931900024414
    10. ' ,' → logprob: -9.682931900024414

Token 605: '):' (ID: 3127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003682285314425826
    2. '   ' → logprob: -8.750368118286133
    3. ' ,' → logprob: -9.500368118286133
    4. '):' → logprob: -9.500368118286133
    5. ',
' → logprob: -10.625368118286133
    6. '):
' → logprob: -10.625368118286133
    7. ',int' → logprob: -11.875368118286133
    8. ':' → logprob: -14.250368118286133
    9. ',List' → logprob: -14.500368118286133
    10. ')' → logprob: -14.625368118286133

Token 606: ' The' (ID: 623)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07010249048471451
    2. ' int' → logprob: -2.6951024532318115
    3. 'The' → logprob: -10.07010269165039
    4. '[int' → logprob: -10.19510269165039
    5. '   ' → logprob: -10.69510269165039
    6. ')' → logprob: -11.07010269165039
    7. '...' → logprob: -11.32010269165039
    8. ' The' → logprob: -12.07010269165039
    9. 'Int' → logprob: -12.44510269165039
    10. 'N' → logprob: -12.82010269165039

Token 607: ' length' (ID: 5517)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3942677974700928
    2. ')' → logprob: -2.7692677974700928
    3. 'int' → logprob: -3.0192677974700928
    4. ' length' → logprob: -3.3942677974700928
    5. ':' → logprob: -3.8942677974700928
    6. ' A' → logprob: -4.019268035888672
    7. 'length' → logprob: -4.019268035888672
    8. 'A' → logprob: -4.144268035888672
    9. ' int' → logprob: -4.144268035888672
    10. ' list' → logprob: -4.269268035888672

Token 608: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31767481565475464
    2. '=' → logprob: -2.6926748752593994
    3. '):' → logprob: -3.4426748752593994
    4. '(A' → logprob: -3.4426748752593994
    5. ' of' → logprob: -3.6926748752593994
    6. ':' → logprob: -3.6926748752593994
    7. '(N' → logprob: -3.8176748752593994
    8. ',' → logprob: -3.9426748752593994
    9. '-' → logprob: -4.44267463684082
    10. '+' → logprob: -5.06767463684082

Token 609: ' input' (ID: 3422)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.11701826006174088
    2. 'B' → logprob: -2.242018222808838
    3. 'the' → logprob: -5.742018222808838
    4. ' A' → logprob: -7.367018222808838
    5. ' the' → logprob: -9.367018699645996
    6. ' B' → logprob: -9.617018699645996
    7. '```' → logprob: -10.117018699645996
    8. 'N' → logprob: -10.367018699645996
    9. 'input' → logprob: -10.992018699645996
    10. '...' → logprob: -11.367018699645996

Token 610: ' arrays' (ID: 38774)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5698096752166748
    2. 'A' → logprob: -1.0698096752166748
    3. ' A' → logprob: -3.569809675216675
    4. '(A' → logprob: -3.819809675216675
    5. ')' → logprob: -4.194809913635254
    6. 's' → logprob: -4.819809913635254
    7. '):
' → logprob: -5.694809913635254
    8. '   ' → logprob: -5.944809913635254
    9. '):' → logprob: -6.194809913635254
    10. '(s' → logprob: -6.319809913635254

Token 611: ' A' (ID: 355)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3975951671600342
    2. '):
' → logprob: -2.022595167160034
    3. '   ' → logprob: -2.522595167160034
    4. '):' → logprob: -2.647595167160034
    5. ')' → logprob: -3.397595167160034
    6. ',
' → logprob: -4.897595405578613
    7. '```' → logprob: -6.897595405578613
    8. '<|end|>' → logprob: -7.397595405578613
    9. ' ,' → logprob: -7.647595405578613
    10. '       ' → logprob: -8.522595405578613

Token 612: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9672662615776062
    2. '   ' → logprob: -1.217266321182251
    3. '):' → logprob: -1.467266321182251
    4. '):
' → logprob: -2.842266321182251
    5. ')' → logprob: -3.717266321182251
    6. '+' → logprob: -5.842266082763672
    7. '```' → logprob: -6.342266082763672
    8. '       ' → logprob: -6.842266082763672
    9. '-' → logprob: -6.967266082763672
    10. ',
' → logprob: -7.092266082763672

Token 613: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.008684420958161354
    2. ' B' → logprob: -4.7586846351623535
    3. 'N' → logprob: -10.758684158325195
    4. '   ' → logprob: -10.883684158325195
    5. ')' → logprob: -11.008684158325195
    6. '```' → logprob: -12.008684158325195
    7. ' ' → logprob: -13.633684158325195
    8. '`' → logprob: -13.883684158325195
    9. ',' → logprob: -14.008684158325195
    10. 'A' → logprob: -14.383684158325195

Token 614: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0993872657418251
    2. ',' → logprob: -2.4743871688842773
    3. '   ' → logprob: -5.724387168884277
    4. '):
' → logprob: -5.849387168884277
    5. '):' → logprob: -6.349387168884277
    6. ')
' → logprob: -6.599387168884277
    7. ',
' → logprob: -7.224387168884277
    8. '<|end|>' → logprob: -8.974387168884277
    9. '),' → logprob: -9.099387168884277
    10. ').' → logprob: -9.974387168884277

Token 615: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12605959177017212
    2. ',' → logprob: -3.0010595321655273
    3. '       ' → logprob: -3.2510595321655273
    4. 'def' → logprob: -4.376059532165527
    5. ')' → logprob: -5.126059532165527
    6. 'A' → logprob: -5.376059532165527
    7. '```' → logprob: -5.876059532165527
    8. ' def' → logprob: -6.501059532165527
    9. '
' → logprob: -7.251059532165527
    10. ' A' → logprob: -7.626059532165527

Token 616: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.01803966425359249
    2. ' A' → logprob: -4.268039703369141
    3. '   ' → logprob: -6.393039703369141
    4. 'x' → logprob: -6.643039703369141
    5. 'a' → logprob: -7.893039703369141
    6. '       ' → logprob: -9.01803970336914
    7. 'B' → logprob: -9.14303970336914
    8. ' x' → logprob: -9.76803970336914
    9. '#' → logprob: -10.01803970336914
    10. 'k' → logprob: -10.39303970336914

Token 617: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006189120467752218
    2. ':' → logprob: -8.500618934631348
    3. ',
' → logprob: -9.125618934631348
    4. ' ,' → logprob: -9.250618934631348
    5. '=' → logprob: -9.500618934631348
    6. '   ' → logprob: -10.625618934631348
    7. '):' → logprob: -10.750618934631348
    8. ' =' → logprob: -11.125618934631348
    9. ')' → logprob: -11.375618934631348
    10. 'def' → logprob: -11.625618934631348

Token 618: 'List' (ID: 950)
  Prédit: 'List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.6081506609916687
    2. 'int' → logprob: -0.8581506609916687
    3. '[int' → logprob: -3.7331507205963135
    4. ')' → logprob: -6.358150482177734
    5. ',' → logprob: -6.358150482177734
    6. 'list' → logprob: -6.358150482177734
    7. ' List' → logprob: -7.108150482177734
    8. '[List' → logprob: -7.108150482177734
    9. ',List' → logprob: -8.233150482177734
    10. ',int' → logprob: -8.483150482177734

Token 619: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.00011367550177965313
    2. ',int' → logprob: -10.000113487243652
    3. '<int' → logprob: -10.375113487243652
    4. '   ' → logprob: -11.250113487243652
    5. '(int' → logprob: -11.500113487243652
    6. ',' → logprob: -12.000113487243652
    7. 'int' → logprob: -12.625113487243652
    8. ']int' → logprob: -13.750113487243652
    9. '[' → logprob: -13.875113487243652
    10. '=int' → logprob: -14.625113487243652

Token 620: ']):' (ID: 60705)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.05994056165218353
    2. '],' → logprob: -3.6849405765533447
    3. ']):' → logprob: -4.059940338134766
    4. ']):
' → logprob: -4.684940338134766
    5. ']' → logprob: -6.184940338134766
    6. ']),' → logprob: -6.434940338134766
    7. ')' → logprob: -7.059940338134766
    8. ',' → logprob: -7.934940338134766
    9. '])]' → logprob: -7.934940338134766
    10. '])
' → logprob: -8.309940338134766

Token 621: ' The' (ID: 623)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.22238987684249878
    2. 'A' → logprob: -2.9723899364471436
    3. ' B' → logprob: -2.9723899364471436
    4. 'List' → logprob: -2.9723899364471436
    5. ' List' → logprob: -4.4723896980285645
    6. '[' → logprob: -4.4723896980285645
    7. ' A' → logprob: -4.7223896980285645
    8. ')' → logprob: -5.5973896980285645
    9. '[]' → logprob: -5.9723896980285645
    10. ' list' → logprob: -6.3473896980285645

Token 622: ' first' (ID: 1577)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.583830714225769
    2. '^' → logprob: -1.583830714225769
    3. 'A' → logprob: -2.5838308334350586
    4. '[]' → logprob: -3.8338308334350586
    5. 'xor' → logprob: -3.9588308334350586
    6. ',' → logprob: -4.208830833435059
    7. '[:]' → logprob: -4.208830833435059
    8. '[
' → logprob: -4.583830833435059
    9. ' xor' → logprob: -5.083830833435059
    10. 'X' → logprob: -5.083830833435059

Token 623: ' integer' (ID: 16336)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5867716073989868
    2. ')' → logprob: -1.4617716073989868
    3. '[' → logprob: -3.2117714881896973
    4. ' ^' → logprob: -3.5867714881896973
    5. ' ' → logprob: -3.7117714881896973
    6. ' ,' → logprob: -3.7117714881896973
    7. ' =' → logprob: -4.086771488189697
    8. '_' → logprob: -4.461771488189697
    9. '^' → logprob: -4.836771488189697
    10. '   ' → logprob: -4.836771488189697

Token 624: ' sequence' (ID: 16281)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4110963344573975
    2. '[]' → logprob: -1.7860963344573975
    3. '[' → logprob: -2.1610963344573975
    4. 's' → logprob: -2.5360963344573975
    5. ')' → logprob: -2.6610963344573975
    6. ',' → logprob: -2.9110963344573975
    7. ' array' → logprob: -3.1610963344573975
    8. ' list' → logprob: -3.1610963344573975
    9. ''s' → logprob: -3.5360963344573975
    10. '_list' → logprob: -4.286096572875977

Token 625: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6255069375038147
    2. ')' → logprob: -1.25050687789917
    3. '   ' → logprob: -2.12550687789917
    4. '):
' → logprob: -3.87550687789917
    5. '<|end|>' → logprob: -4.25050687789917
    6. '):' → logprob: -4.37550687789917
    7. '[' → logprob: -5.75050687789917
    8. '<|end|>' → logprob: -6.25050687789917
    9. '),' → logprob: -6.87550687789917
    10. ' of' → logprob: -7.25050687789917

Token 626: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030707085505127907
    2. ',' → logprob: -3.9057071208953857
    3. 'B' → logprob: -4.780706882476807
    4. '       ' → logprob: -6.905706882476807
    5. ')' → logprob: -7.530706882476807
    6. ' ,' → logprob: -10.280707359313965
    7. ' B' → logprob: -10.405707359313965
    8. ' ' → logprob: -10.905707359313965
    9. '```' → logprob: -11.280707359313965
    10. 'def' → logprob: -11.280707359313965

Token 627: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.2016926407814026
    2. ' B' → logprob: -1.7016925811767578
    3. '   ' → logprob: -8.201692581176758
    4. '       ' → logprob: -12.951692581176758
    5. '```' → logprob: -14.326692581176758
    6. 'b' → logprob: -14.826692581176758
    7. ' ' → logprob: -15.076692581176758
    8. '    ' → logprob: -15.076692581176758
    9. '
' → logprob: -16.076692581176758
    10. '``' → logprob: -16.076692581176758

Token 628: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10813291370868683
    2. ',' → logprob: -2.483132839202881
    3. '   ' → logprob: -4.983132839202881
    4. '):' → logprob: -5.233132839202881
    5. '):
' → logprob: -6.108132839202881
    6. ' (' → logprob: -6.733132839202881
    7. ')' → logprob: -6.858132839202881
    8. '[int' → logprob: -7.108132839202881
    9. '(int' → logprob: -8.108133316040039
    10. ':int' → logprob: -8.358133316040039

Token 629: 'List' (ID: 950)
  Prédit: 'List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.16076864302158356
    2. 'int' → logprob: -1.9107686281204224
    3. '[int' → logprob: -7.785768508911133
    4. 'list' → logprob: -9.285768508911133
    5. '[List' → logprob: -10.285768508911133
    6. ' List' → logprob: -14.785768508911133
    7. ')' → logprob: -15.035768508911133
    8. '[' → logprob: -15.160768508911133
    9. 'ints' → logprob: -15.410768508911133
    10. '```' → logprob: -15.410768508911133

Token 630: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.0007504248642362654
    2. '<int' → logprob: -8.500750541687012
    3. '(int' → logprob: -8.625750541687012
    4. '=int' → logprob: -9.375750541687012
    5. 'int' → logprob: -9.625750541687012
    6. ',int' → logprob: -9.750750541687012
    7. ']int' → logprob: -10.000750541687012
    8. '   ' → logprob: -10.125750541687012
    9. ')' → logprob: -10.250750541687012
    10. ':int' → logprob: -11.375750541687012

Token 631: ']):' (ID: 60705)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.2900945544242859
    2. ']):' → logprob: -2.1650946140289307
    3. ']):
' → logprob: -2.7900946140289307
    4. ']' → logprob: -3.5400946140289307
    5. '   ' → logprob: -4.040094375610352
    6. '][' → logprob: -4.915094375610352
    7. '])]' → logprob: -5.040094375610352
    8. ')' → logprob: -6.415094375610352
    9. '[int' → logprob: -6.415094375610352
    10. ']+' → logprob: -6.540094375610352

Token 632: ' The' (ID: 623)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.4855627417564392
    2. ' List' → logprob: -0.9855627417564392
    3. '[List' → logprob: -4.485562801361084
    4. '(List' → logprob: -9.860562324523926
    5. '   ' → logprob: -9.985562324523926
    6. 'A' → logprob: -11.110562324523926
    7. '[int' → logprob: -11.360562324523926
    8. ')' → logprob: -11.985562324523926
    9. '[' → logprob: -12.485562324523926
    10. 'int' → logprob: -12.860562324523926

Token 633: ' second' (ID: 3099)
  Prédit: ' second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' second' → logprob: -0.24756638705730438
    2. '[int' → logprob: -2.3725664615631104
    3. 'second' → logprob: -3.4975664615631104
    4. ' same' → logprob: -3.8725664615631104
    5. 'int' → logprob: -4.497566223144531
    6. ' int' → logprob: -4.622566223144531
    7. ' list' → logprob: -4.747566223144531
    8. '[' → logprob: -4.872566223144531
    9. 'A' → logprob: -4.997566223144531
    10. ')' → logprob: -5.247566223144531

Token 634: ' integer' (ID: 16336)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.009714193642139435
    2. ')' → logprob: -6.134714126586914
    3. 'int' → logprob: -6.509714126586914
    4. '[List' → logprob: -6.509714126586914
    5. ',' → logprob: -6.634714126586914
    6. ',int' → logprob: -7.259714126586914
    7. '):
' → logprob: -7.259714126586914
    8. '):' → logprob: -7.634714126586914
    9. '[' → logprob: -8.009714126586914
    10. '<int' → logprob: -8.134714126586914

Token 635: ' sequence' (ID: 16281)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1268257349729538
    2. '   ' → logprob: -3.6268258094787598
    3. '):
' → logprob: -4.00182580947876
    4. '])' → logprob: -4.00182580947876
    5. '[
' → logprob: -4.37682580947876
    6. ']' → logprob: -4.62682580947876
    7. ')
' → logprob: -5.00182580947876
    8. '[' → logprob: -5.75182580947876
    9. ',' → logprob: -6.00182580947876
    10. '<|end|>' → logprob: -6.00182580947876

Token 636: '.

' (ID: 364)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08511299639940262
    2. '):
' → logprob: -2.585113048553467
    3. '   ' → logprob: -5.210113048553467
    4. ',' → logprob: -7.710113048553467
    5. ')' → logprob: -8.960112571716309
    6. '[]):' → logprob: -9.460112571716309
    7. '):
' → logprob: -10.585112571716309
    8. '       ' → logprob: -10.835112571716309
    9. ':' → logprob: -11.710112571716309
    10. '):

' → logprob: -12.085112571716309

Token 637: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07998909056186676
    2. '):
' → logprob: -3.579989194869995
    3. '```' → logprob: -3.704989194869995
    4. '):' → logprob: -4.204988956451416
    5. ')' → logprob: -5.829988956451416
    6. ':' → logprob: -5.829988956451416
    7. 'def' → logprob: -6.829988956451416
    8. ':
' → logprob: -7.329988956451416
    9. '``' → logprob: -7.454988956451416
    10. '
' → logprob: -7.704988956451416

Token 638: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34085527062416077
    2. '"""
' → logprob: -1.8408552408218384
    3. ')' → logprob: -3.465855360031128
    4. '```' → logprob: -3.590855360031128
    5. 'def' → logprob: -3.840855360031128
    6. '):
' → logprob: -4.090855121612549
    7. ')
' → logprob: -4.090855121612549
    8. '
' → logprob: -4.715855121612549
    9. '``' → logprob: -6.090855121612549
    10. '"""' → logprob: -6.465855121612549

Token 639: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3924333453178406
    2. '   ' → logprob: -2.7674334049224854
    3. '[
' → logprob: -2.8924334049224854
    4. '[' → logprob: -3.0174334049224854
    5. '[]' → logprob: -3.1424334049224854
    6. ' [
' → logprob: -3.5174334049224854
    7. ',' → logprob: -4.017433166503906
    8. ' []' → logprob: -4.267433166503906
    9. '):' → logprob: -4.517433166503906
    10. ':
' → logprob: -4.892433166503906

Token 640: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1592579334974289
    2. ' []' → logprob: -2.1592578887939453
    3. '[]' → logprob: -3.5342578887939453
    4. '    ' → logprob: -7.284257888793945
    5. '[
' → logprob: -7.784257888793945
    6. ' [
' → logprob: -7.784257888793945
    7. '[' → logprob: -8.034257888793945
    8. ' []
' → logprob: -8.659257888793945
    9. '```' → logprob: -8.784257888793945
    10. 'def' → logprob: -9.284257888793945

Token 641: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' (adapté à ' List') → logprob: -0.6932569742202759
    2. 'list' → logprob: -0.6932569742202759
    3. ' list' → logprob: -9.443257331848145
    4. ' List' → logprob: -11.193257331848145
    5. 'set' → logprob: -11.818257331848145
    6. 'dict' → logprob: -12.818257331848145
    7. '[List' → logprob: -12.943257331848145
    8. '_list' → logprob: -13.193257331848145
    9. '   ' → logprob: -14.068257331848145
    10. 'int' → logprob: -14.318257331848145

Token 642: '[str' (ID: 33439)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.049112312495708466
    2. '[int' → logprob: -3.799112319946289
    3. '[List' → logprob: -4.174112319946289
    4. '[
' → logprob: -4.674112319946289
    5. '[(' → logprob: -7.174112319946289
    6. '```' → logprob: -11.049112319946289
    7. '   ' → logprob: -11.424112319946289
    8. 'Of' → logprob: -11.674112319946289
    9. '[list' → logprob: -13.174112319946289
    10. '[np' → logprob: -13.549112319946289

Token 643: ']:' (ID: 12433)
  Prédit: ']:
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.1265362650156021
    2. ']:' → logprob: -2.3765363693237305
    3. ']' → logprob: -3.7515363693237305
    4. '):
' → logprob: -7.7515363693237305
    5. '   ' → logprob: -8.12653636932373
    6. ']]:
' → logprob: -8.12653636932373
    7. ']:
' → logprob: -8.25153636932373
    8. '"]:
' → logprob: -8.25153636932373
    9. '']:
' → logprob: -8.62653636932373
    10. '[' → logprob: -8.87653636932373

Token 644: ' List' (ID: 2655)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.38270673155784607
    2. '   ' → logprob: -1.5077067613601685
    3. ' []' → logprob: -3.007706642150879
    4. '[
' → logprob: -3.632706642150879
    5. '[]
' → logprob: -5.007706642150879
    6. ' [
' → logprob: -5.882706642150879
    7. '[' → logprob: -6.007706642150879
    8. ' result' → logprob: -6.507706642150879
    9. '[str' → logprob: -6.507706642150879
    10. ' [' → logprob: -6.632706642150879

Token 645: ' of' (ID: 328)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6855990290641785
    2. '[
' → logprob: -1.4355990886688232
    3. ' of' → logprob: -2.0605990886688232
    4. '(' → logprob: -3.1855990886688232
    5. '   ' → logprob: -3.6855990886688232
    6. '```' → logprob: -4.310598850250244
    7. '[str' → logprob: -4.685598850250244
    8. '.' → logprob: -4.935598850250244
    9. 'of' → logprob: -5.310598850250244
    10. ')' → logprob: -5.435598850250244

Token 646: ' formatted' (ID: 43831)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.09181022644042969
    2. 'f' → logprob: -4.09181022644043
    3. '[str' → logprob: -4.46681022644043
    4. '(str' → logprob: -4.71681022644043
    5. ' str' → logprob: -4.71681022644043
    6. '[]' → logprob: -4.84181022644043
    7. '(k' → logprob: -5.09181022644043
    8. 'def' → logprob: -5.34181022644043
    9. 's' → logprob: -5.46681022644043
    10. 'k' → logprob: -5.96681022644043

Token 647: ' results' (ID: 4376)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1650474071502686
    2. '[
' → logprob: -1.1650474071502686
    3. 'f' → logprob: -1.6650474071502686
    4. '(' → logprob: -3.1650474071502686
    5. '(f' → logprob: -3.2900474071502686
    6. '"' → logprob: -3.9150474071502686
    7. '[str' → logprob: -4.165047645568848
    8. '   ' → logprob: -4.540047645568848
    9. 'str' → logprob: -4.665047645568848
    10. ' f' → logprob: -5.040047645568848

Token 648: ' as' (ID: 472)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.8772929906845093
    2. '[' → logprob: -1.6272929906845093
    3. '   ' → logprob: -2.002293109893799
    4. '```' → logprob: -2.377293109893799
    5. ':' → logprob: -2.502293109893799
    6. ' =' → logprob: -4.002293109893799
    7. '[]' → logprob: -4.127293109893799
    8. '([
' → logprob: -5.002293109893799
    9. '(' → logprob: -5.377293109893799
    10. ':
' → logprob: -5.752293109893799

Token 649: ' '' (ID: 461)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.3320039212703705
    2. '[f' → logprob: -1.8320039510726929
    3. '[str' → logprob: -3.0820038318634033
    4. ' f' → logprob: -3.2070038318634033
    5. '[k' → logprob: -4.707004070281982
    6. 'str' → logprob: -5.082004070281982
    7. '[]' → logprob: -5.082004070281982
    8. '[' → logprob: -5.582004070281982
    9. '[
' → logprob: -5.832004070281982
    10. ' [' → logprob: -5.957004070281982

Token 650: 'k' (ID: 74)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.504140019416809
    2. 'k' → logprob: -1.754140019416809
    3. 'str' → logprob: -1.879140019416809
    4. ''' → logprob: -2.3791399002075195
    5. '(k' → logprob: -2.5041399002075195
    6. '{}' → logprob: -2.8791399002075195
    7. '"{' → logprob: -2.8791399002075195
    8. '"' → logprob: -2.8791399002075195
    9. '(' → logprob: -3.8791399002075195
    10. '(str' → logprob: -4.3791399002075195

Token 651: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3199300467967987
    2. ',' → logprob: -1.444930076599121
    3. ' {' → logprob: -4.444930076599121
    4. ' s' → logprob: -5.319930076599121
    5. ' k' → logprob: -5.819930076599121
    6. ' B' → logprob: -6.069930076599121
    7. ' A' → logprob: -6.444930076599121
    8. '   ' → logprob: -6.569930076599121
    9. ' ,' → logprob: -6.819930076599121
    10. ' '' → logprob: -6.819930076599121

Token 652: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.722293496131897
    2. '\n' → logprob: -1.722293496131897
    3. '):' → logprob: -1.972293496131897
    4. ''):
' → logprob: -1.972293496131897
    5. '):
' → logprob: -2.3472933769226074
    6. '')' → logprob: -3.2222933769226074
    7. ''):' → logprob: -3.4722933769226074
    8. '[' → logprob: -3.4722933769226074
    9. ':' → logprob: -3.5972933769226074
    10. '']' → logprob: -3.8472933769226074

Token 653: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49118655920028687
    2. ':' → logprob: -2.1161866188049316
    3. ':
' → logprob: -2.2411866188049316
    4. '```' → logprob: -2.9911866188049316
    5. '):
' → logprob: -3.9911866188049316
    6. ']:
' → logprob: -4.366186618804932
    7. '
' → logprob: -4.491186618804932
    8. '[]' → logprob: -4.616186618804932
    9. '']:
' → logprob: -4.616186618804932
    10. '[' → logprob: -4.741186618804932

Token 654: ' all' (ID: 722)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5945743918418884
    2. ' k' → logprob: -1.2195744514465332
    3. '_' → logprob: -2.344574451446533
    4. ' _' → logprob: -3.844574451446533
    5. ' i' → logprob: -4.344574451446533
    6. 'i' → logprob: -4.469574451446533
    7. '_k' → logprob: -6.219574451446533
    8. ' res' → logprob: -6.219574451446533
    9. 'x' → logprob: -6.844574451446533
    10. 'res' → logprob: -6.969574451446533

Token 655: ' valid' (ID: 4529)
  Prédit: ' valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valid' → logprob: -0.42006662487983704
    2. ' k' → logprob: -1.6700665950775146
    3. 'k' → logprob: -3.4200665950775146
    4. 'valid' → logprob: -3.5450665950775146
    5. '
' → logprob: -4.045066833496094
    6. '(k' → logprob: -4.420066833496094
    7. '"""
' → logprob: -5.045066833496094
    8. '[
' → logprob: -5.045066833496094
    9. '```' → logprob: -5.170066833496094
    10. ' res' → logprob: -5.295066833496094

Token 656: ' pairs' (ID: 24702)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.204503059387207
    2. '(k' → logprob: -1.579503059387207
    3. 'k' → logprob: -2.579503059387207
    4. ' pairs' → logprob: -2.579503059387207
    5. 'pairs' → logprob: -2.954503059387207
    6. ' k' → logprob: -3.079503059387207
    7. '   ' → logprob: -3.079503059387207
    8. 'results' → logprob: -3.204503059387207
    9. ' (' → logprob: -3.954503059387207
    10. '"""
' → logprob: -4.079503059387207

Token 657: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17904898524284363
    2. '
' → logprob: -2.554049015045166
    3. ':
' → logprob: -3.679049015045166
    4. '```' → logprob: -4.429049015045166
    5. ':' → logprob: -4.554049015045166
    6. ',' → logprob: -4.804049015045166
    7. '[]' → logprob: -5.054049015045166
    8. '=' → logprob: -5.679049015045166
    9. ' =' → logprob: -5.804049015045166
    10. '[
' → logprob: -6.054049015045166

Token 658: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12354054301977158
    2. ':' → logprob: -3.2485406398773193
    3. 'def' → logprob: -3.6235406398773193
    4. ':
' → logprob: -3.7485406398773193
    5. '```' → logprob: -3.8735406398773193
    6. '):
' → logprob: -5.74854040145874
    7. '[' → logprob: -7.62354040145874
    8. '):' → logprob: -7.62354040145874
    9. '
' → logprob: -7.87354040145874
    10. '``' → logprob: -8.248540878295898

Token 659: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08271133154630661
    2. ':
' → logprob: -3.7077112197875977
    3. '```' → logprob: -3.9577112197875977
    4. ':' → logprob: -4.332711219787598
    5. 'def' → logprob: -4.582711219787598
    6. '):
' → logprob: -4.707711219787598
    7. '):' → logprob: -7.082711219787598
    8. '
' → logprob: -7.207711219787598
    9. ')' → logprob: -7.457711219787598
    10. '``' → logprob: -8.207711219787598

Token 660: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009432338178157806
    2. ' res' → logprob: -5.134432315826416
    3. '```' → logprob: -5.884432315826416
    4. 'def' → logprob: -9.009432792663574
    5. ' ans' → logprob: -9.134432792663574
    6. 'res' → logprob: -9.634432792663574
    7. '
' → logprob: -9.634432792663574
    8. '``' → logprob: -10.009432792663574
    9. 'k' → logprob: -10.134432792663574
    10. ' s' → logprob: -10.509432792663574

Token 661: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1885206699371338
    2. 'res' → logprob: -1.1885206699371338
    3. 'MOD' → logprob: -2.313520669937134
    4. 'mod' → logprob: -2.563520669937134
    5. 'M' → logprob: -2.813520669937134
    6. 'ans' → logprob: -3.563520669937134
    7. 'm' → logprob: -3.688520669937134
    8. 'ret' → logprob: -4.188520431518555
    9. ' res' → logprob: -4.313520431518555
    10. 'base' → logprob: -4.313520431518555

Token 662: ' Determine' (ID: 57076)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.708419680595398
    2. 'MOD' → logprob: -2.0834197998046875
    3. 'ans' → logprob: -2.5834197998046875
    4. '#' → logprob: -2.5834197998046875
    5. 'M' → logprob: -2.7084197998046875
    6. 'A' → logprob: -2.8334197998046875
    7. 'm' → logprob: -2.9584197998046875
    8. 'mod' → logprob: -2.9584197998046875
    9. 'base' → logprob: -3.3334197998046875
    10. 'ret' → logprob: -3.8334197998046875

Token 663: ' the' (ID: 290)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.2618024349212646
    2. '   ' → logprob: -2.0118024349212646
    3. 'M' → logprob: -2.1368024349212646
    4. 'base' → logprob: -2.2618024349212646
    5. 'mod' → logprob: -3.0118024349212646
    6. 'bits' → logprob: -3.1368024349212646
    7. 'bit' → logprob: -3.2618024349212646
    8. 'p' → logprob: -3.7618024349212646
    9. 'mask' → logprob: -4.011802673339844
    10. 'k' → logprob: -4.011802673339844

Token 664: ' number' (ID: 2086)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'base' → logprob: -1.545379638671875
    2. 'm' → logprob: -1.670379638671875
    3. 'mod' → logprob: -1.670379638671875
    4. 'max' → logprob: -2.670379638671875
    5. 'mask' → logprob: -3.295379638671875
    6. 'l' → logprob: -3.295379638671875
    7. 'M' → logprob: -3.545379638671875
    8. 'length' → logprob: -3.545379638671875
    9. 'b' → logprob: -3.670379638671875
    10. 'k' → logprob: -3.920379638671875

Token 665: ' of' (ID: 328)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.6007676124572754
    2. '(N' → logprob: -1.6007676124572754
    3. 'of' → logprob: -2.7257676124572754
    4. 'A' → logprob: -2.7257676124572754
    5. '```' → logprob: -3.2257676124572754
    6. ' of' → logprob: -4.350767612457275
    7. '_of' → logprob: -4.475767612457275
    8. '=' → logprob: -4.850767612457275
    9. '=N' → logprob: -4.975767612457275
    10. '`' → logprob: -5.100767612457275

Token 666: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.009666486643254757
    2. ' bits' → logprob: -6.509666442871094
    3. 'A' → logprob: -6.759666442871094
    4. '1' → logprob: -6.884666442871094
    5. 'bytes' → logprob: -6.884666442871094
    6. 'bit' → logprob: -7.259666442871094
    7. 'N' → logprob: -7.259666442871094
    8. 'set' → logprob: -7.384666442871094
    9. 'digits' → logprob: -7.384666442871094
    10. 'k' → logprob: -8.384666442871094

Token 667: ' required' (ID: 3759)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5676760077476501
    2. '_' → logprob: -1.192676067352295
    3. '=' → logprob: -2.067676067352295
    4. '_per' → logprob: -7.192676067352295
    5. '   ' → logprob: -7.692676067352295
    6. '_needed' → logprob: -7.817676067352295
    7. '_n' → logprob: -7.942676067352295
    8. '_num' → logprob: -8.692675590515137
    9. '_in' → logprob: -8.942675590515137
    10. 's' → logprob: -8.942675590515137

Token 668: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3412034213542938
    2. ' =' → logprob: -1.7162034511566162
    3. '   ' → logprob: -2.341203451156616
    4. 'for' → logprob: -5.966203212738037
    5. 'n' → logprob: -6.091203212738037
    6. '_needed' → logprob: -7.091203212738037
    7. 'N' → logprob: -7.341203212738037
    8. ' needed' → logprob: -7.591203212738037
    9. 'k' → logprob: -7.591203212738037
    10. '_' → logprob: -7.716203212738037

Token 669: ' represent' (ID: 5188)
  Prédit: 'represent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'represent' → logprob: -0.05747835710644722
    2. ' represent' → logprob: -3.807478427886963
    3. 'repr' → logprob: -4.057478427886963
    4. 'A' → logprob: -5.432478427886963
    5. 'cover' → logprob: -5.432478427886963
    6. 'rep' → logprob: -5.682478427886963
    7. 'encode' → logprob: -6.682478427886963
    8. 'max' → logprob: -7.057478427886963
    9. ' cover' → logprob: -8.432477951049805
    10. '_repr' → logprob: -8.432477951049805

Token 670: ' the' (ID: 290)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.07911648601293564
    2. 'N' → logprob: -3.2041165828704834
    3. 'A' → logprob: -4.204116344451904
    4. '(max' → logprob: -4.579116344451904
    5. ' max' → logprob: -5.454116344451904
    6. '1' → logprob: -6.079116344451904
    7. '32' → logprob: -7.079116344451904
    8. '   ' → logprob: -7.204116344451904
    9. 'B' → logprob: -7.454116344451904
    10. '30' → logprob: -7.954116344451904

Token 671: ' largest' (ID: 10574)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.26240310072898865
    2. 'max' → logprob: -1.512403130531311
    3. ' max' → logprob: -5.2624030113220215
    4. 'A' → logprob: -5.5124030113220215
    5. ' N' → logprob: -8.63740348815918
    6. 'bits' → logprob: -8.76240348815918
    7. '(max' → logprob: -9.13740348815918
    8. 'B' → logprob: -9.26240348815918
    9. '   ' → logprob: -9.26240348815918
    10. 'maximum' → logprob: -9.26240348815918

Token 672: ' element' (ID: 3577)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.4829229712486267
    2. 'max' → logprob: -1.6079230308532715
    3. 'num' → logprob: -2.6079230308532715
    4. 'a' → logprob: -3.6079230308532715
    5. 'val' → logprob: -4.1079230308532715
    6. ' max' → logprob: -4.6079230308532715
    7. 'v' → logprob: -4.8579230308532715
    8. 'number' → logprob: -4.9829230308532715
    9. 'element' → logprob: -4.9829230308532715
    10. 'x' → logprob: -5.1079230308532715

Token 673: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18384991586208344
    2. '=' → logprob: -2.308849811553955
    3. '_in' → logprob: -3.933849811553955
    4. 'A' → logprob: -4.183849811553955
    5. '   ' → logprob: -4.683849811553955
    6. '_' → logprob: -5.058849811553955
    7. '=max' → logprob: -5.308849811553955
    8. ' in' → logprob: -5.433849811553955
    9. 'in' → logprob: -6.183849811553955
    10. '_needed' → logprob: -6.683849811553955

Token 674: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23774120211601257
    2. '=' → logprob: -1.987741231918335
    3. '   ' → logprob: -2.862741231918335
    4. ' in' → logprob: -5.612740993499756
    5. 'in' → logprob: -5.737740993499756
    6. 'A' → logprob: -5.987740993499756
    7. 'max' → logprob: -6.362740993499756
    8. '_' → logprob: -6.487740993499756
    9. '=max' → logprob: -7.237740993499756
    10. 'n' → logprob: -7.487740993499756

Token 675: ' L' (ID: 451)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.737154245376587
    2. 'mx' → logprob: -2.237154245376587
    3. 'bits' → logprob: -2.487154245376587
    4. 'm' → logprob: -2.487154245376587
    5. '   ' → logprob: -2.737154245376587
    6. 'b' → logprob: -2.737154245376587
    7. 'w' → logprob: -2.862154245376587
    8. 'M' → logprob: -3.112154245376587
    9. 'bit' → logprob: -3.362154245376587
    10. ' mx' → logprob: -3.362154245376587

Token 676: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4741034209728241
    2. '=' → logprob: -0.9741034507751465
    3. '   ' → logprob: -11.474102973937988
    4. ',' → logprob: -11.974102973937988
    5. '=max' → logprob: -12.974102973937988
    6. '=len' → logprob: -13.099102973937988
    7. '=int' → logprob: -13.224102973937988
    8. ')' → logprob: -14.224102973937988
    9. '_' → logprob: -14.474102973937988
    10. 'max' → logprob: -14.724102973937988

Token 677: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.059836599975824356
    2. '(max' → logprob: -3.6848366260528564
    3. ' max' → logprob: -4.809836387634277
    4. 'N' → logprob: -4.809836387634277
    5. '32' → logprob: -5.684836387634277
    6. '1' → logprob: -5.684836387634277
    7. 'A' → logprob: -6.184836387634277
    8. '30' → logprob: -6.934836387634277
    9. '(N' → logprob: -7.059836387634277
    10. 'B' → logprob: -7.059836387634277

Token 678: '(max' (ID: 17178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5845081806182861
    2. 'A' → logprob: -1.5845081806182861
    3. '(A' → logprob: -1.9595081806182861
    4. '(max' → logprob: -3.709508180618286
    5. 'N' → logprob: -4.334507942199707
    6. '(len' → logprob: -4.334507942199707
    7. '0' → logprob: -4.334507942199707
    8. '(N' → logprob: -4.834507942199707
    9. 'max' → logprob: -4.959507942199707
    10. '([' → logprob: -5.334507942199707

Token 679: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.32144707441329956
    2. 'A' → logprob: -1.3214471340179443
    3. '(' → logprob: -5.196446895599365
    4. ')' → logprob: -7.321446895599365
    5. '([' → logprob: -7.571446895599365
    6. '(max' → logprob: -7.696446895599365
    7. '(
' → logprob: -8.571447372436523
    8. 'max' → logprob: -8.571447372436523
    9. '_A' → logprob: -8.946447372436523
    10. '(len' → logprob: -9.696447372436523

Token 680: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.9806722402572632
    2. ')+' → logprob: -1.1056722402572632
    3. ')' → logprob: -1.3556722402572632
    4. ',' → logprob: -3.6056723594665527
    5. '[' → logprob: -6.230672359466553
    6. '+' → logprob: -6.605672359466553
    7. '   ' → logprob: -7.355672359466553
    8. '))' → logprob: -7.355672359466553
    9. '))+' → logprob: -7.355672359466553
    10. ').__' → logprob: -7.480672359466553

Token 681: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.057125456631183624
    2. ' max' → logprob: -3.1821255683898926
    3. '1' → logprob: -4.432125568389893
    4. 'B' → logprob: -7.307125568389893
    5. ' ' → logprob: -7.682125568389893
    6. '(max' → logprob: -7.807125568389893
    7. 'len' → logprob: -9.307125091552734
    8. 'min' → logprob: -9.557125091552734
    9. ' B' → logprob: -9.557125091552734
    10. '255' → logprob: -9.807125091552734

Token 682: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.22004595398902893
    2. '(A' → logprob: -1.7200459241867065
    3. '(max' → logprob: -4.220046043395996
    4. 'B' → logprob: -6.595046043395996
    5. 'max' → logprob: -6.845046043395996
    6. 'A' → logprob: -7.220046043395996
    7. '(
' → logprob: -8.345046043395996
    8. ')' → logprob: -9.220046043395996
    9. '   ' → logprob: -9.470046043395996
    10. '(' → logprob: -10.095046043395996

Token 683: ')).' (ID: 8784)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15249879658222198
    2. ')+' → logprob: -2.277498722076416
    3. '))' → logprob: -3.902498722076416
    4. '))+' → logprob: -4.152498722076416
    5. ').' → logprob: -6.652498722076416
    6. '.bit' → logprob: -7.152498722076416
    7. '),' → logprob: -8.027499198913574
    8. '   ' → logprob: -9.027499198913574
    9. ')
' → logprob: -9.027499198913574
    10. ',' → logprob: -9.652499198913574

Token 684: 'bit' (ID: 6516)
  Prédit: 'bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -3.0590548703912646e-05
    2. '.bit' → logprob: -10.875030517578125
    3. '```' → logprob: -11.500030517578125
    4. ' bit' → logprob: -13.750030517578125
    5. '_bit' → logprob: -16.625030517578125
    6. '**' → logprob: -16.750030517578125
    7. '(bit' → logprob: -16.875030517578125
    8. '__' → logprob: -17.250030517578125
    9. 'bi' → logprob: -17.375030517578125
    10. 'b' → logprob: -17.625030517578125

Token 685: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -7.941850526549388e-06
    2. 'length' → logprob: -11.750007629394531
    3. '\' → logprob: -18.12500762939453
    4. '_LENGTH' → logprob: -18.12500762939453
    5. 'ength' → logprob: -18.62500762939453
    6. 'L' → logprob: -18.62500762939453
    7. '```' → logprob: -18.62500762939453
    8. '_' → logprob: -19.00000762939453
    9. '
' → logprob: -19.00000762939453
    10. 'Length' → logprob: -19.25000762939453

Token 686: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.013783227652311325
    2. '()+' → logprob: -4.7637834548950195
    3. '()
' → logprob: -5.7637834548950195
    4. '+' → logprob: -6.6387834548950195
    5. '   ' → logprob: -7.8887834548950195
    6. ' +' → logprob: -8.63878345489502
    7. ')' → logprob: -10.26378345489502
    8. '#' → logprob: -10.26378345489502
    9. '())' → logprob: -11.13878345489502
    10. 'def' → logprob: -11.88878345489502

Token 687: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05423615127801895
    2. '   ' → logprob: -3.5542361736297607
    3. ' +' → logprob: -4.179235935211182
    4. '```' → logprob: -5.679235935211182
    5. '+' → logprob: -5.804235935211182
    6. '    
' → logprob: -6.554235935211182
    7. 'def' → logprob: -8.30423641204834
    8. '
' → logprob: -8.80423641204834
    9. '

' → logprob: -9.80423641204834
    10. ' 
' → logprob: -9.92923641204834

Token 688: ' ah' (ID: 5369)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39221110939979553
    2. 's' → logprob: -3.1422111988067627
    3. '```' → logprob: -3.3922111988067627
    4. '#' → logprob: -3.7672111988067627
    5. 'A' → logprob: -3.7672111988067627
    6. 'if' → logprob: -3.8922111988067627
    7. 'a' → logprob: -4.642210960388184
    8. ' if' → logprob: -4.642210960388184
    9. 'bits' → logprob: -4.642210960388184
    10. 'M' → logprob: -4.767210960388184

Token 689: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5273685455322266
    2. ' =' → logprob: -0.9023685455322266
    3. '   ' → logprob: -5.652368545532227
    4. 's' → logprob: -7.777368545532227
    5. ',' → logprob: -9.027368545532227
    6. '_' → logprob: -10.027368545532227
    7. '=[' → logprob: -10.152368545532227
    8. 'p' → logprob: -10.652368545532227
    9. '       ' → logprob: -11.152368545532227
    10. '[' → logprob: -11.402368545532227

Token 690: ' []' (ID: 6126)
  Prédit: 'RH'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'RH' → logprob: -0.0011661761673167348
    2. ' RH' → logprob: -6.876166343688965
    3. '[' → logprob: -9.126166343688965
    4. '   ' → logprob: -11.251166343688965
    5. '[R' → logprob: -12.626166343688965
    6. '[]
' → logprob: -13.126166343688965
    7. '[]' → logprob: -13.626166343688965
    8. ' [' → logprob: -13.751166343688965
    9. ' ' → logprob: -13.876166343688965
    10. '  ' → logprob: -14.126166343688965

Token 691: '  ' (ID: 256)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0265058279037476
    2. 'for' → logprob: -1.2765058279037476
    3. ' =' → logprob: -1.4015058279037476
    4. '.append' → logprob: -3.276505947113037
    5. '
' → logprob: -3.401505947113037
    6. ' for' → logprob: -4.026505947113037
    7. '   ' → logprob: -4.651505947113037
    8. ',' → logprob: -5.526505947113037
    9. '[:]' → logprob: -5.901505947113037
    10. '.extend' → logprob: -6.401505947113037

Token 692: ' #' (ID: 1069)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5490459203720093
    2. 'for' → logprob: -1.0490459203720093
    3. ' =' → logprob: -4.049046039581299
    4. '   ' → logprob: -4.049046039581299
    5. '.append' → logprob: -4.799046039581299
    6. ' for' → logprob: -4.924046039581299
    7. '
' → logprob: -5.424046039581299
    8. '=[' → logprob: -5.424046039581299
    9. '[:]' → logprob: -5.924046039581299
    10. ',' → logprob: -6.299046039581299

Token 693: ' List' (ID: 2655)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.4161231517791748
    2. '[' → logprob: -1.6661231517791748
    3. '[]' → logprob: -1.7911231517791748
    4. 'for' → logprob: -2.166123151779175
    5. '[(' → logprob: -2.791123151779175
    6. '[A' → logprob: -2.791123151779175
    7. '[a' → logprob: -3.041123151779175
    8. '[]
' → logprob: -3.541123151779175
    9. '0' → logprob: -3.791123151779175
    10. '[i' → logprob: -4.041123390197754

Token 694: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5306333303451538
    2. '.append' → logprob: -2.2806334495544434
    3. ' =' → logprob: -2.4056334495544434
    4. '   ' → logprob: -2.6556334495544434
    5. '=[]' → logprob: -3.1556334495544434
    6. 'for' → logprob: -3.1556334495544434
    7. 'append' → logprob: -4.030633449554443
    8. '[]' → logprob: -4.655633449554443
    9. '=[]
' → logprob: -4.780633449554443
    10. 'of' → logprob: -5.155633449554443

Token 695: ' store' (ID: 4897)
  Prédit: 'append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.028279505670070648
    2. 'A' → logprob: -5.0282793045043945
    3. '.append' → logprob: -5.4032793045043945
    4. 'ah' → logprob: -5.6532793045043945
    5. 'extend' → logprob: -5.9032793045043945
    6. 'int' → logprob: -6.6532793045043945
    7. 'range' → logprob: -6.9032793045043945
    8. '   ' → logprob: -7.1532793045043945
    9. 's' → logprob: -7.2782793045043945
    10. '[]' → logprob: -7.4032793045043945

Token 696: ' rolling' (ID: 30530)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.328866720199585
    2. 'ah' → logprob: -1.703866720199585
    3. '[]' → logprob: -1.828866720199585
    4. '[(' → logprob: -2.078866720199585
    5. 'A' → logprob: -2.328866720199585
    6. '[a' → logprob: -3.453866720199585
    7. '[i' → logprob: -3.703866720199585
    8. '[A' → logprob: -3.828866720199585
    9. '0' → logprob: -4.203866958618164
    10. 'a' → logprob: -4.328866958618164

Token 697: ' hashes' (ID: 131101)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.2799745500087738
    2. 'h' → logprob: -3.1549744606018066
    3. '_hash' → logprob: -3.1549744606018066
    4. 'A' → logprob: -3.6549744606018066
    5. '[' → logprob: -3.6549744606018066
    6. ' hashes' → logprob: -4.154974460601807
    7. 'bits' → logprob: -4.279974460601807
    8. '[(' → logprob: -4.279974460601807
    9. 's' → logprob: -4.654974460601807
    10. 'a' → logprob: -4.904974460601807

Token 698: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7513213753700256
    2. '=' → logprob: -1.7513213157653809
    3. '.append' → logprob: -2.751321315765381
    4. 'for' → logprob: -2.876321315765381
    5. '   ' → logprob: -3.126321315765381
    6. '(' → logprob: -3.126321315765381
    7. '_' → logprob: -3.626321315765381
    8. 'A' → logprob: -3.751321315765381
    9. 's' → logprob: -3.876321315765381
    10. '=[]' → logprob: -4.126321315765381

Token 699: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5716742873191833
    2. '[(' → logprob: -1.4466743469238281
    3. 'bin' → logprob: -2.821674346923828
    4. 'a' → logprob: -3.196674346923828
    5. '[A' → logprob: -3.196674346923828
    6. '[' → logprob: -4.071674346923828
    7. '[a' → logprob: -4.321674346923828
    8. 'format' → logprob: -5.696674346923828
    9. '[s' → logprob: -5.946674346923828
    10. '[i' → logprob: -6.071674346923828

Token 700: ''s' (ID: 885)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.6240596175193787
    2. 'for' → logprob: -2.2490596771240234
    3. '   ' → logprob: -2.9990596771240234
    4. '[' → logprob: -3.4990596771240234
    5. '_' → logprob: -3.4990596771240234
    6. ' =' → logprob: -3.6240596771240234
    7. '_bits' → logprob: -3.6240596771240234
    8. ',' → logprob: -3.7490596771240234
    9. 's' → logprob: -3.7490596771240234
    10. ' for' → logprob: -3.8740596771240234

Token 701: ' bits' (ID: 18189)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.1557656526565552
    2. '[i' → logprob: -1.4057656526565552
    3. 'bits' → logprob: -1.5307656526565552
    4. '[' → logprob: -3.0307655334472656
    5. '[(' → logprob: -3.2807655334472656
    6. 'a' → logprob: -3.2807655334472656
    7. 's' → logprob: -4.530765533447266
    8. 'i' → logprob: -4.530765533447266
    9. '[a' → logprob: -4.530765533447266
    10. '[A' → logprob: -4.530765533447266

Token 702: ' for' (ID: 395)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9163700938224792
    2. '.append' → logprob: -1.416370153427124
    3. 'for' → logprob: -1.791370153427124
    4. '=' → logprob: -2.666370153427124
    5. '_' → logprob: -4.041369915008545
    6. '
' → logprob: -4.416369915008545
    7. ' for' → logprob: -4.416369915008545
    8. ',' → logprob: -4.666369915008545
    9. '[:]' → logprob: -4.666369915008545
    10. 's' → logprob: -4.791369915008545

Token 703: ' each' (ID: 2454)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5868521928787231
    2. 'i' → logprob: -1.5868521928787231
    3. 'a' → logprob: -2.4618520736694336
    4. 'bit' → logprob: -3.2118520736694336
    5. '0' → logprob: -3.7118520736694336
    6. 'x' → logprob: -4.211852073669434
    7. 'A' → logprob: -4.461852073669434
    8. 'k' → logprob: -4.461852073669434
    9. ' i' → logprob: -4.961852073669434
    10. 'b' → logprob: -5.086852073669434

Token 704: ' bit' (ID: 3546)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3625794053077698
    2. ' i' → logprob: -2.362579345703125
    3. '_' → logprob: -2.612579345703125
    4. 'a' → logprob: -3.112579345703125
    5. ' _' → logprob: -3.487579345703125
    6. 'x' → logprob: -4.362579345703125
    7. 'num' → logprob: -4.737579345703125
    8. ')' → logprob: -5.112579345703125
    9. '_i' → logprob: -5.612579345703125
    10. 'n' → logprob: -5.737579345703125

Token 705: ' position' (ID: 4010)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3395029306411743
    2. ' =' → logprob: -2.3395028114318848
    3. '   ' → logprob: -3.0895028114318848
    4. '_s' → logprob: -3.8395028114318848
    5. '_repr' → logprob: -3.9645028114318848
    6. 'for' → logprob: -4.839502811431885
    7. '_vectors' → logprob: -4.839502811431885
    8. '_arrays' → logprob: -5.089502811431885
    9. '_positions' → logprob: -5.214502811431885
    10. '_layer' → logprob: -5.214502811431885

Token 706: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7738555669784546
    2. 'for' → logprob: -1.6488555669784546
    3. '=' → logprob: -2.148855686187744
    4. '[]' → logprob: -3.023855686187744
    5. ' for' → logprob: -3.273855686187744
    6. '   ' → logprob: -3.398855686187744
    7. '.append' → logprob: -3.523855686187744
    8. '[:]' → logprob: -3.898855686187744
    9. ',' → logprob: -4.148855686187744
    10. '[' → logprob: -5.148855686187744

Token 707: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8033062815666199
    2. '   ' → logprob: -1.6783063411712646
    3. 'for' → logprob: -1.8033063411712646
    4. '=' → logprob: -2.4283063411712646
    5. ' for' → logprob: -4.0533061027526855
    6. '[]' → logprob: -4.0533061027526855
    7. '_' → logprob: -4.0533061027526855
    8. '[' → logprob: -4.5533061027526855
    9. '[:]' → logprob: -4.5533061027526855
    10. '
' → logprob: -4.6783061027526855

Token 708: ' bh' (ID: 11387)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6160715818405151
    2. ' for' → logprob: -0.9910715818405151
    3. '   ' → logprob: -2.7410717010498047
    4. '[' → logprob: -4.866071701049805
    5. '[]' → logprob: -5.616071701049805
    6. 'A' → logprob: -6.241071701049805
    7. '```' → logprob: -6.491071701049805
    8. '[
' → logprob: -6.616071701049805
    9. '[]
' → logprob: -6.866071701049805
    10. ' [' → logprob: -6.866071701049805

Token 709: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.038336027413606644
    2. ' =' → logprob: -3.2883360385894775
    3. '=[]' → logprob: -8.163335800170898
    4. '=[]
' → logprob: -13.163335800170898
    5. '   ' → logprob: -13.413335800170898
    6. ' ' → logprob: -13.663335800170898
    7. '[]' → logprob: -13.663335800170898
    8. ',' → logprob: -13.788335800170898
    9. '.append' → logprob: -13.788335800170898
    10. ']' → logprob: -14.538335800170898

Token 710: ' []' (ID: 6126)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.06461518257856369
    2. ' []' → logprob: -2.814615249633789
    3. '[]
' → logprob: -6.564615249633789
    4. '[' → logprob: -6.814615249633789
    5. ' [' → logprob: -9.689615249633789
    6. ' []
' → logprob: -10.064615249633789
    7. '[]

' → logprob: -12.189615249633789
    8. '   ' → logprob: -12.314615249633789
    9. '[]}' → logprob: -12.314615249633789
    10. ' [[]' → logprob: -12.689615249633789

Token 711: '  ' (ID: 256)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22833366692066193
    2. '=' → logprob: -1.6033337116241455
    3. '   ' → logprob: -5.853333473205566
    4. ',' → logprob: -11.228333473205566
    5. '=[]' → logprob: -11.603333473205566
    6. ' ' → logprob: -11.853333473205566
    7. '    ' → logprob: -11.978333473205566
    8. ' =
' → logprob: -12.978333473205566
    9. '  ' → logprob: -13.353333473205566
    10. '=[]
' → logprob: -13.728333473205566

Token 712: ' #' (ID: 1069)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04985770583152771
    2. ' =' → logprob: -3.0498576164245605
    3. '   ' → logprob: -6.9248576164245605
    4. '=[]' → logprob: -8.549858093261719
    5. '[]' → logprob: -10.799858093261719
    6. '=[]
' → logprob: -11.299858093261719
    7. ' ' → logprob: -11.299858093261719
    8. '  ' → logprob: -11.799858093261719
    9. ',' → logprob: -11.799858093261719
    10. '[' → logprob: -11.924858093261719

Token 713: ' List' (ID: 2655)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.05128489434719086
    2. ' []' → logprob: -3.1762847900390625
    3. '[]
' → logprob: -5.1762847900390625
    4. '[' → logprob: -6.1762847900390625
    5. ' [' → logprob: -8.301284790039062
    6. ' []
' → logprob: -8.926284790039062
    7. '   ' → logprob: -10.176284790039062
    8. '  ' → logprob: -10.301284790039062
    9. '#' → logprob: -11.051284790039062
    10. '[]

' → logprob: -11.301284790039062

Token 714: ' for' (ID: 395)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7865142226219177
    2. ' =' → logprob: -0.7865142226219177
    3. '=[]' → logprob: -3.7865142822265625
    4. '   ' → logprob: -3.9115142822265625
    5. '(' → logprob: -4.0365142822265625
    6. '.append' → logprob: -5.0365142822265625
    7. 'for' → logprob: -5.7865142822265625
    8. '=[]
' → logprob: -6.1615142822265625
    9. '(
' → logprob: -6.4115142822265625
    10. ':' → logprob: -6.5365142822265625

Token 715: ' B' (ID: 418)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.1388905942440033
    2. '[' → logprob: -3.138890504837036
    3. ' []' → logprob: -4.138890743255615
    4. 'A' → logprob: -4.388890743255615
    5. 'range' → logprob: -4.388890743255615
    6. '[]
' → logprob: -4.513890743255615
    7. ' [' → logprob: -5.138890743255615
    8. ' range' → logprob: -5.638890743255615
    9. '[int' → logprob: -5.763890743255615
    10. ' A' → logprob: -6.138890743255615

Token 716: ''s' (ID: 885)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.5346739888191223
    2. '_bits' → logprob: -1.6596739292144775
    3. '_h' → logprob: -2.1596739292144775
    4. ''s' → logprob: -3.1596739292144775
    5. 'bits' → logprob: -3.6596739292144775
    6. '_' → logprob: -5.034674167633057
    7. '   ' → logprob: -5.159674167633057
    8. '.append' → logprob: -5.534674167633057
    9. ''' → logprob: -5.534674167633057
    10. 'for' → logprob: -6.034674167633057

Token 717: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.3385435938835144
    2. '_bits' → logprob: -1.4635436534881592
    3. ' bits' → logprob: -3.713543653488159
    4. 'bit' → logprob: -4.21354341506958
    5. '[' → logprob: -5.33854341506958
    6. '_bit' → logprob: -6.21354341506958
    7. '[i' → logprob: -6.46354341506958
    8. '   ' → logprob: -6.46354341506958
    9. ''s' → logprob: -6.71354341506958
    10. ' bit' → logprob: -7.08854341506958

Token 718: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14795741438865662
    2. '=' → logprob: -2.5229573249816895
    3. '   ' → logprob: -3.5229573249816895
    4. 'for' → logprob: -4.0229573249816895
    5. ' for' → logprob: -5.1479573249816895
    6. '[]' → logprob: -7.5229573249816895
    7. '=[]' → logprob: -7.5229573249816895
    8. 's' → logprob: -7.6479573249816895
    9. '_bits' → logprob: -7.7729573249816895
    10. '[' → logprob: -8.272957801818848

Token 719: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0608856678009033
    2. '   ' → logprob: -1.3108856678009033
    3. ' for' → logprob: -1.5608856678009033
    4. ' =' → logprob: -2.5608856678009033
    5. '[' → logprob: -3.5608856678009033
    6. '
' → logprob: -3.6858856678009033
    7. '=' → logprob: -4.310885429382324
    8. '[]' → logprob: -4.935885429382324
    9. 'A' → logprob: -5.435885429382324
    10. '```' → logprob: -5.810885429382324

Token 720: ' b' (ID: 287)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.41805148124694824
    2. ' for' → logprob: -1.1680514812469482
    3. '   ' → logprob: -3.6680514812469482
    4. '#' → logprob: -6.043051719665527
    5. 'a' → logprob: -7.418051719665527
    6. 'A' → logprob: -7.543051719665527
    7. '```' → logprob: -7.668051719665527
    8. ' #' → logprob: -8.543051719665527
    9. '
' → logprob: -9.043051719665527
    10. ' A' → logprob: -9.168051719665527

Token 721: 'nh' (ID: 5380)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.35899344086647034
    2. ' =' → logprob: -2.1089935302734375
    3. 'its' → logprob: -2.6089935302734375
    4. 'it' → logprob: -3.3589935302734375
    5. '_bits' → logprob: -3.3589935302734375
    6. 'w' → logprob: -4.6089935302734375
    7. '=' → logprob: -5.7339935302734375
    8. 'bits' → logprob: -5.8589935302734375
    9. 'i' → logprob: -6.1089935302734375
    10. '_h' → logprob: -6.1089935302734375

Token 722: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02294808067381382
    2. ' =' → logprob: -4.147948265075684
    3. '=[]' → logprob: -5.022948265075684
    4. '[]' → logprob: -9.522948265075684
    5. '=[]
' → logprob: -9.897948265075684
    6. 'w' → logprob: -9.897948265075684
    7. 'b' → logprob: -10.147948265075684
    8. '=[' → logprob: -10.522948265075684
    9. ' ' → logprob: -11.397948265075684
    10. '=b' → logprob: -11.772948265075684

Token 723: ' []' (ID: 6126)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.11586840450763702
    2. ' []' → logprob: -2.365868330001831
    3. '[' → logprob: -4.49086856842041
    4. ' [' → logprob: -6.11586856842041
    5. '[]
' → logprob: -6.74086856842041
    6. ' [[]' → logprob: -8.61586856842041
    7. '=[]' → logprob: -9.24086856842041
    8. ' =' → logprob: -9.36586856842041
    9. '[
' → logprob: -9.99086856842041
    10. ' []
' → logprob: -9.99086856842041

Token 724: ' ' (ID: 220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10174739360809326
    2. '=' → logprob: -2.351747512817383
    3. '=[]' → logprob: -6.976747512817383
    4. '   ' → logprob: -7.976747512817383
    5. '[]' → logprob: -8.726747512817383
    6. '[' → logprob: -10.101747512817383
    7. ',' → logprob: -11.226747512817383
    8. ')' → logprob: -11.476747512817383
    9. '  ' → logprob: -11.976747512817383
    10. '<|end|>' → logprob: -12.101747512817383

Token 725: ' #' (ID: 1069)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007148791570216417
    2. ' =' → logprob: -5.007148742675781
    3. '=[]' → logprob: -8.007148742675781
    4. '   ' → logprob: -10.007148742675781
    5. '[]' → logprob: -10.507148742675781
    6. '[' → logprob: -11.882148742675781
    7. '  ' → logprob: -11.882148742675781
    8. '=[]
' → logprob: -12.007148742675781
    9. '=[' → logprob: -13.632148742675781
    10. '=
' → logprob: -13.882148742675781

Token 726: ' List' (ID: 2655)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.07534601539373398
    2. '[' → logprob: -3.325345993041992
    3. '[]
' → logprob: -3.450345993041992
    4. '[[' → logprob: -5.950345993041992
    5. ' []' → logprob: -6.950345993041992
    6. '[b' → logprob: -7.575345993041992
    7. ' [' → logprob: -8.825345993041992
    8. '[A' → logprob: -8.950345993041992
    9. '[]

' → logprob: -9.325345993041992
    10. ' [[]' → logprob: -9.450345993041992

Token 727: ' for' (ID: 395)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14621931314468384
    2. ' =' → logprob: -2.146219253540039
    3. '=[]' → logprob: -4.896219253540039
    4. 'for' → logprob: -5.396219253540039
    5. '.append' → logprob: -6.396219253540039
    6. '   ' → logprob: -6.771219253540039
    7. '_' → logprob: -7.271219253540039
    8. ' for' → logprob: -7.521219253540039
    9. '=[]
' → logprob: -7.646219253540039
    10. '(' → logprob: -7.771219253540039

Token 728: ' inverse' (ID: 53743)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.2141800969839096
    2. 'range' → logprob: -2.7141799926757812
    3. '[' → logprob: -3.0891799926757812
    4. 'A' → logprob: -4.214179992675781
    5. '0' → logprob: -4.339179992675781
    6. 'b' → logprob: -4.464179992675781
    7. ' range' → logprob: -5.589179992675781
    8. '[A' → logprob: -5.589179992675781
    9. '[i' → logprob: -5.714179992675781
    10. 'i' → logprob: -5.839179992675781

Token 729: ' (' (ID: 350)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.9622290730476379
    2. 'bh' → logprob: -1.0872290134429932
    3. 's' → logprob: -2.837229013442993
    4. 'A' → logprob: -2.837229013442993
    5. 'B' → logprob: -2.837229013442993
    6. 'b' → logprob: -3.712229013442993
    7. '_b' → logprob: -3.962229013442993
    8. 'bits' → logprob: -4.087229251861572
    9. '_bits' → logprob: -4.462229251861572
    10. '_' → logprob: -5.212229251861572

Token 730: 'not' (ID: 2878)
  Prédit: 'bh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bh' → logprob: -1.2082655429840088
    2. 'B' → logprob: -1.7082655429840088
    3. '~' → logprob: -2.333265542984009
    4. ')' → logprob: -2.333265542984009
    5. 'b' → logprob: -2.708265542984009
    6. '1' → logprob: -2.708265542984009
    7. 'not' → logprob: -3.083265542984009
    8. 'n' → logprob: -3.833265542984009
    9. 'N' → logprob: -4.08326530456543
    10. 'A' → logprob: -4.45826530456543

Token 731: ')' (ID: 8)
  Prédit: '_b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -1.1321245431900024
    2. 'b' → logprob: -1.3821245431900024
    3. ')' → logprob: -2.007124423980713
    4. 'B' → logprob: -2.257124423980713
    5. 'bh' → logprob: -2.507124423980713
    6. 'h' → logprob: -3.632124423980713
    7. '[])' → logprob: -4.007124423980713
    8. '[]' → logprob: -4.632124423980713
    9. '_h' → logprob: -4.882124423980713
    10. ' )' → logprob: -5.257124423980713

Token 732: ' of' (ID: 328)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.2509499788284302
    2. '_b' → logprob: -1.7509499788284302
    3. 'B' → logprob: -1.8759499788284302
    4. 'bh' → logprob: -2.1259498596191406
    5. 'h' → logprob: -2.7509498596191406
    6. ' =' → logprob: -3.0009498596191406
    7. 'b' → logprob: -3.3759498596191406
    8. '_bits' → logprob: -3.6259498596191406
    9. 's' → logprob: -3.7509498596191406
    10. '_' → logprob: -3.8759498596191406

Token 733: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.12151408195495605
    2. 'b' → logprob: -2.496514081954956
    3. 'bh' → logprob: -3.871514081954956
    4. 'A' → logprob: -4.871514320373535
    5. '[' → logprob: -7.246514320373535
    6. '[b' → logprob: -7.621514320373535
    7. 'a' → logprob: -7.746514320373535
    8. '[]' → logprob: -7.871514320373535
    9. '[B' → logprob: -8.121514320373535
    10. ' B' → logprob: -8.496514320373535

Token 734: ''s' (ID: 885)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.113369345664978
    2. 'h' → logprob: -1.738369345664978
    3. '_' → logprob: -2.6133694648742676
    4. '_bits' → logprob: -2.6133694648742676
    5. '=' → logprob: -2.9883694648742676
    6. '_b' → logprob: -3.3633694648742676
    7. '_h' → logprob: -3.4883694648742676
    8. '.append' → logprob: -3.7383694648742676
    9. 'def' → logprob: -3.8633694648742676
    10. '   ' → logprob: -3.8633694648742676

Token 735: ' bits' (ID: 18189)
  Prédit: '_bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_bits' → logprob: -0.15249419212341309
    2. '_h' → logprob: -2.652494192123413
    3. 'bits' → logprob: -2.902494192123413
    4. 'h' → logprob: -4.777494430541992
    5. '_b' → logprob: -5.402494430541992
    6. '_' → logprob: -7.027494430541992
    7. '```' → logprob: -7.777494430541992
    8. 's' → logprob: -8.277494430541992
    9. '[]' → logprob: -8.402494430541992
    10. '_bit' → logprob: -8.777494430541992

Token 736: '

' (ID: 279)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14612074196338654
    2. '=' → logprob: -2.02112078666687
    3. '   ' → logprob: -6.146120548248291
    4. '=[]' → logprob: -7.896120548248291
    5. '=[]
' → logprob: -8.02112102508545
    6. '
' → logprob: -9.39612102508545
    7. 'for' → logprob: -9.52112102508545
    8. 'def' → logprob: -9.52112102508545
    9. 'b' → logprob: -9.64612102508545
    10. '_' → logprob: -9.89612102508545

Token 737: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.361998975276947
    2. '   ' → logprob: -1.7369990348815918
    3. ' for' → logprob: -2.611999034881592
    4. '```' → logprob: -3.986999034881592
    5. '[]' → logprob: -4.611999034881592
    6. '
' → logprob: -5.361999034881592
    7. '=' → logprob: -5.486999034881592
    8. '[' → logprob: -5.486999034881592
    9. ' =' → logprob: -5.486999034881592
    10. '[]
' → logprob: -5.736999034881592

Token 738: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.30814480781555176
    2. ' for' → logprob: -1.8081448078155518
    3. '   ' → logprob: -2.3081448078155518
    4. '```' → logprob: -7.558144569396973
    5. 'A' → logprob: -7.683144569396973
    6. '#' → logprob: -8.433144569396973
    7. '
' → logprob: -8.933144569396973
    8. ' A' → logprob: -9.308144569396973
    9. '       ' → logprob: -9.683144569396973
    10. '``' → logprob: -9.933144569396973

Token 739: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16575735807418823
    2. 'bit' → logprob: -2.540757417678833
    3. 'k' → logprob: -4.165757179260254
    4. 'b' → logprob: -4.165757179260254
    5. 'x' → logprob: -4.415757179260254
    6. 'd' → logprob: -5.040757179260254
    7. 'j' → logprob: -5.290757179260254
    8. ' i' → logprob: -5.415757179260254
    9. '_' → logprob: -5.665757179260254
    10. 'l' → logprob: -6.540757179260254

Token 740: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1834906041622162
    2. 'in' → logprob: -1.8084906339645386
    3. ',' → logprob: -5.808490753173828
    4. '(' → logprob: -8.183490753173828
    5. ')' → logprob: -9.183490753173828
    6. '   ' → logprob: -9.183490753173828
    7. ' ,' → logprob: -10.183490753173828
    8. ' ' → logprob: -10.433490753173828
    9. '(range' → logprob: -10.558490753173828
    10. '_in' → logprob: -10.683490753173828

Token 741: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00038407891406677663
    2. ' range' → logprob: -7.8753838539123535
    3. 'A' → logprob: -13.250384330749512
    4. '   ' → logprob: -14.250384330749512
    5. 'L' → logprob: -15.375384330749512
    6. '0' → logprob: -15.500384330749512
    7. ' ' → logprob: -15.625384330749512
    8. 'B' → logprob: -15.875384330749512
    9. '(range' → logprob: -16.000383377075195
    10. 're' → logprob: -16.250383377075195

Token 742: '(L' (ID: 11075)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.00014597235713154078
    2. '(L' → logprob: -9.12514591217041
    3. ' L' → logprob: -10.87514591217041
    4. 'N' → logprob: -11.00014591217041
    5. '(' → logprob: -14.00014591217041
    6. ' (' → logprob: -16.250146865844727
    7. '(N' → logprob: -16.375146865844727
    8. '   ' → logprob: -16.500146865844727
    9. ' ' → logprob: -16.875146865844727
    10. '0' → logprob: -16.875146865844727

Token 743: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04371592402458191
    2. '):' → logprob: -3.1687159538269043
    3. '   ' → logprob: -8.168715476989746
    4. ':' → logprob: -8.543715476989746
    5. '):
' → logprob: -9.168715476989746
    6. '       ' → logprob: -10.168715476989746
    7. ':
' → logprob: -10.418715476989746
    8. ',' → logprob: -10.668715476989746
    9. '+' → logprob: -10.918715476989746
    10. ')' → logprob: -12.418715476989746

Token 744: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06266145408153534
    2. 'a' → logprob: -3.1876614093780518
    3. ' a' → logprob: -5.187661647796631
    4. '```' → logprob: -5.437661647796631
    5. '   ' → logprob: -5.812661647796631
    6. 'A' → logprob: -5.812661647796631
    7. ' A' → logprob: -6.437661647796631
    8. ' s' → logprob: -7.187661647796631
    9. ',' → logprob: -8.312661170959473
    10. '_a' → logprob: -8.437661170959473

Token 745: ' ta' (ID: 2868)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.19861119985580444
    2. '   ' → logprob: -2.573611259460449
    3. 'aa' → logprob: -3.073611259460449
    4. 'as' → logprob: -4.323611259460449
    5. 'sa' → logprob: -4.948611259460449
    6. 'A' → logprob: -5.073611259460449
    7. '       ' → logprob: -5.573611259460449
    8. 'ha' → logprob: -5.823611259460449
    9. 'ai' → logprob: -5.823611259460449
    10. 'ta' (adapté à ' ta') → logprob: -5.823611259460449

Token 746: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18773874640464783
    2. '=' → logprob: -2.4377386569976807
    3. 'g' → logprob: -3.0627386569976807
    4. '=A' → logprob: -4.93773889541626
    5. 'A' → logprob: -5.31273889541626
    6. '=[]' → logprob: -5.68773889541626
    7. 'r' → logprob: -5.81273889541626
    8. 's' → logprob: -5.93773889541626
    9. '=[' → logprob: -6.06273889541626
    10. 'gs' → logprob: -6.56273889541626

Token 747: ' []' (ID: 6126)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.007788085378706455
    2. '[((' → logprob: -5.632788181304932
    3. '[' → logprob: -5.757788181304932
    4. ' [(' → logprob: -7.257788181304932
    5. '[]' → logprob: -9.007787704467773
    6. '[]
' → logprob: -9.132787704467773
    7. ' [' → logprob: -10.507787704467773
    8. '[i' → logprob: -11.007787704467773
    9. '[A' → logprob: -11.132787704467773
    10. '[[' → logprob: -12.132787704467773

Token 748: '  ' (ID: 256)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9555143713951111
    2. ' for' → logprob: -1.4555144309997559
    3. 'for' → logprob: -2.080514430999756
    4. ',' → logprob: -2.955514430999756
    5. '[' → logprob: -3.205514430999756
    6. ' =' → logprob: -3.330514430999756
    7. '   ' → logprob: -4.205514430999756
    8. '           ' → logprob: -4.455514430999756
    9. ' [' → logprob: -4.455514430999756
    10. ' (' → logprob: -4.580514430999756

Token 749: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1519598811864853
    2. ' for' → logprob: -2.6519598960876465
    3. '       ' → logprob: -3.7769598960876465
    4. '   ' → logprob: -4.7769598960876465
    5. '[i' → logprob: -4.9019598960876465
    6. '
' → logprob: -5.2769598960876465
    7. ',' → logprob: -5.4019598960876465
    8. '=' → logprob: -5.6519598960876465
    9. '[' → logprob: -5.6519598960876465
    10. 'A' → logprob: -6.0269598960876465

Token 750: ' i' (ID: 575)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.367239773273468
    2. '[]' → logprob: -2.1172397136688232
    3. '[i' → logprob: -2.6172397136688232
    4. '[(' → logprob: -2.8672397136688232
    5. '[' → logprob: -3.7422397136688232
    6. ' for' → logprob: -4.992239952087402
    7. '[A' → logprob: -5.492239952087402
    8. 'A' → logprob: -5.742239952087402
    9. '[]
' → logprob: -5.992239952087402
    10. '   ' → logprob: -6.492239952087402

Token 751: '-th' (ID: 14928)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3570926189422607
    2. '=' → logprob: -1.4820926189422607
    3. ' =' → logprob: -1.8570926189422607
    4. 'n' → logprob: -1.8570926189422607
    5. '   ' → logprob: -2.8570926189422607
    6. ' for' → logprob: -3.1070926189422607
    7. '=[]' → logprob: -4.48209285736084
    8. 'mp' → logprob: -4.73209285736084
    9. '       ' → logprob: -4.85709285736084
    10. '=[]
' → logprob: -4.98209285736084

Token 752: ' bit' (ID: 3546)
  Prédit: '_bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bits' → logprob: -1.061598777770996
    2. 'bits' → logprob: -1.811598777770996
    3. 'bit' → logprob: -2.311598777770996
    4. 'A' → logprob: -2.686598777770996
    5. '_bit' → logprob: -3.061598777770996
    6. '[' → logprob: -3.436598777770996
    7. ' bit' → logprob: -3.686598777770996
    8. 'for' → logprob: -3.811598777770996
    9. '[]' → logprob: -4.061598777770996
    10. ' for' → logprob: -4.186598777770996

Token 753: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5946204662322998
    2. 's' → logprob: -2.3446204662323
    3. '=' → logprob: -2.7196204662323
    4. '=[]' → logprob: -2.9696204662323
    5. '[]' → logprob: -3.0946204662323
    6. 'for' → logprob: -3.3446204662323
    7. '   ' → logprob: -3.8446204662323
    8. '_bits' → logprob: -3.8446204662323
    9. '=[]
' → logprob: -4.094620704650879
    10. '       ' → logprob: -4.094620704650879

Token 754: ' A' (ID: 355)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.23140084743499756
    2. 'A' → logprob: -1.8564008474349976
    3. 'each' → logprob: -3.856400966644287
    4. 'x' → logprob: -5.106400966644287
    5. '((' → logprob: -5.106400966644287
    6. '[(' → logprob: -5.481400966644287
    7. 'num' → logprob: -6.356400966644287
    8. '[a' → logprob: -6.481400966644287
    9. ' a' → logprob: -6.606400966644287
    10. ' each' → logprob: -6.731400966644287

Token 755: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34002768993377686
    2. ' =' → logprob: -2.2150278091430664
    3. 'for' → logprob: -2.3400278091430664
    4. '=' → logprob: -3.9650278091430664
    5. ' for' → logprob: -3.9650278091430664
    6. '[:]' → logprob: -4.590027809143066
    7. '.append' → logprob: -5.090027809143066
    8. '[]' → logprob: -5.340027809143066
    9. ':' → logprob: -5.840027809143066
    10. ',' → logprob: -5.840027809143066

Token 756: ' all' (ID: 722)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3388693332672119
    2. ' a' → logprob: -2.213869333267212
    3. 'j' → logprob: -3.213869333267212
    4. 'x' → logprob: -3.338869333267212
    5. ' j' → logprob: -4.213869094848633
    6. 'A' → logprob: -4.463869094848633
    7. ' x' → logprob: -4.588869094848633
    8. 'num' → logprob: -4.588869094848633
    9. 'each' → logprob: -4.713869094848633
    10. 'elem' → logprob: -5.088869094848633

Token 757: ' elements' (ID: 8632)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8013944029808044
    2. 'j' → logprob: -1.6763944625854492
    3. 'N' → logprob: -1.8013944625854492
    4. 'range' → logprob: -3.051394462585449
    5. 'x' → logprob: -3.426394462585449
    6. 'A' → logprob: -4.176394462585449
    7. '   ' → logprob: -4.301394462585449
    8. ' range' → logprob: -4.301394462585449
    9. '_' → logprob: -4.426394462585449
    10. ' j' → logprob: -4.926394462585449

Token 758: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09551777690649033
    2. 'for' → logprob: -3.095517873764038
    3. ' for' → logprob: -3.220517873764038
    4. ',' → logprob: -6.720517635345459
    5. ' =' → logprob: -6.970517635345459
    6. ' in' → logprob: -7.595517635345459
    7. '[]' → logprob: -7.595517635345459
    8. '=' → logprob: -8.095518112182617
    9. '[i' → logprob: -8.095518112182617
    10. '   ' → logprob: -8.220518112182617

Token 759: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07073765993118286
    2. ' for' → logprob: -3.320737600326538
    3. 'for' → logprob: -3.820737600326538
    4. ' =' → logprob: -6.445737838745117
    5. '           ' → logprob: -6.820737838745117
    6. ',' → logprob: -6.820737838745117
    7. '```' → logprob: -6.820737838745117
    8. '[' → logprob: -6.945737838745117
    9. '   ' → logprob: -7.195737838745117
    10. '[]' → logprob: -7.570737838745117

Token 760: ' tb' (ID: 25078)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23155538737773895
    2. ' for' → logprob: -1.8565553426742554
    3. '[' → logprob: -3.606555461883545
    4. ' [' → logprob: -4.981555461883545
    5. '   ' → logprob: -5.731555461883545
    6. 'ta' → logprob: -5.856555461883545
    7. '[a' → logprob: -6.231555461883545
    8. ' ta' → logprob: -6.606555461883545
    9. '[i' → logprob: -6.731555461883545
    10. '       ' → logprob: -6.731555461883545

Token 761: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34979528188705444
    2. ' =' → logprob: -1.2247953414916992
    3. '=[]' → logprob: -6.849795341491699
    4. 'b' → logprob: -8.4747953414917
    5. '=[]
' → logprob: -10.7247953414917
    6. ' ' → logprob: -11.0997953414917
    7. '   ' → logprob: -11.4747953414917
    8. 'a' → logprob: -11.8497953414917
    9. '=[' → logprob: -12.4747953414917
    10. 's' → logprob: -12.7247953414917

Token 762: ' []' (ID: 6126)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.04639120772480965
    2. ' []' → logprob: -4.046391010284424
    3. '[' → logprob: -4.171391010284424
    4. '[i' → logprob: -4.796391010284424
    5. '[]
' → logprob: -6.046391010284424
    6. ' [' → logprob: -6.796391010284424
    7. '[(' → logprob: -7.921391010284424
    8. '[]

' → logprob: -10.171391487121582
    9. '[int' → logprob: -10.296391487121582
    10. ' []
' → logprob: -10.421391487121582

Token 763: '  ' (ID: 256)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4553067982196808
    2. '   ' → logprob: -1.5803067684173584
    3. '=' → logprob: -2.3303067684173584
    4. '  ' → logprob: -4.5803070068359375
    5. '[]' → logprob: -4.7053070068359375
    6. ' for' → logprob: -4.7053070068359375
    7. ' ' → logprob: -4.7053070068359375
    8. '=[]' → logprob: -4.8303070068359375
    9. 'for' → logprob: -5.3303070068359375
    10. '[' → logprob: -6.2053070068359375

Token 764: ' #' (ID: 1069)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.25586897134780884
    2. '  ' → logprob: -2.505868911743164
    3. ' []' → logprob: -2.880868911743164
    4. ' ' → logprob: -3.630868911743164
    5. 'for' → logprob: -4.130868911743164
    6. '#' (adapté à ' #') → logprob: -4.255868911743164
    7. '[i' → logprob: -4.630868911743164
    8. '   ' → logprob: -4.880868911743164
    9. '[]
' → logprob: -5.380868911743164
    10. '[' → logprob: -6.005868911743164

Token 765: ' i' (ID: 575)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.34793275594711304
    2. '[' → logprob: -1.9729328155517578
    3. '[i' → logprob: -2.347932815551758
    4. '[int' → logprob: -3.972932815551758
    5. '0' → logprob: -4.472932815551758
    6. '[(' → logprob: -4.597932815551758
    7. ' [' → logprob: -5.722932815551758
    8. ' []' → logprob: -5.847932815551758
    9. '[]
' → logprob: -5.972932815551758
    10. 'def' → logprob: -6.347932815551758

Token 766: '-th' (ID: 14928)
  Prédit: '-th'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-th' → logprob: -0.026327701285481453
    2. ' -' → logprob: -4.776327610015869
    3. 'th' → logprob: -5.151327610015869
    4. '[-' → logprob: -6.401327610015869
    5. '  ' → logprob: -6.526327610015869
    6. '_th' → logprob: -6.651327610015869
    7. ' ' → logprob: -6.901327610015869
    8. '   ' → logprob: -6.901327610015869
    9. '-' → logprob: -7.651327610015869
    10. '#' → logprob: -7.776327610015869

Token 767: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.1485651731491089
    2. ' bit' → logprob: -2.0235652923583984
    3. 'b' → logprob: -5.898565292358398
    4. '_bit' → logprob: -6.398565292358398
    5. 'bits' → logprob: -7.523565292358398
    6. '_bits' → logprob: -8.773565292358398
    7. 'for' → logprob: -9.148565292358398
    8. '   ' → logprob: -9.648565292358398
    9. '-bit' → logprob: -9.773565292358398
    10. ' for' → logprob: -9.898565292358398

Token 768: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1602044105529785
    2. ' =' → logprob: -1.1602044105529785
    3. ' of' → logprob: -2.6602044105529785
    4. '   ' → logprob: -2.6602044105529785
    5. '       ' → logprob: -2.7852044105529785
    6. 'for' → logprob: -3.1602044105529785
    7. 'of' → logprob: -3.1602044105529785
    8. '=[]' → logprob: -3.5352044105529785
    9. ' for' → logprob: -3.9102044105529785
    10. '=[' → logprob: -5.5352044105529785

Token 769: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.003485439345240593
    2. ' B' → logprob: -6.253485202789307
    3. 'A' → logprob: -6.503485202789307
    4. ' A' → logprob: -11.378485679626465
    5. '[B' → logprob: -11.753485679626465
    6. 'range' → logprob: -11.878485679626465
    7. 'b' → logprob: -12.128485679626465
    8. ' (' → logprob: -12.253485679626465
    9. ' [' → logprob: -12.378485679626465
    10. ' range' → logprob: -12.753485679626465

Token 770: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.800635814666748
    2. 'for' → logprob: -1.050635814666748
    3. '       ' → logprob: -2.675635814666748
    4. ' =' → logprob: -2.800635814666748
    5. '   ' → logprob: -3.550635814666748
    6. '=' → logprob: -4.175635814666748
    7. '=[]' → logprob: -4.675635814666748
    8. '=[]
' → logprob: -5.300635814666748
    9. '[]' → logprob: -5.800635814666748
    10. ' ' → logprob: -6.675635814666748

Token 771: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24673841893672943
    2. ' for' → logprob: -1.7467384338378906
    3. 'for' → logprob: -3.2467384338378906
    4. '   ' → logprob: -5.746738433837891
    5. ' ' → logprob: -7.121738433837891
    6. '\t' → logprob: -8.37173843383789
    7. '[' → logprob: -8.49673843383789
    8. '	for' → logprob: -9.37173843383789
    9. '        
' → logprob: -9.49673843383789
    10. ' ' → logprob: -9.49673843383789

Token 772: ' t' (ID: 260)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.029975872486829758
    2. ' for' → logprob: -3.6549758911132812
    3. '       ' → logprob: -5.904975891113281
    4. '   ' → logprob: -7.654975891113281
    5. 'tb' → logprob: -8.779975891113281
    6. '           ' → logprob: -9.279975891113281
    7. 'tn' → logprob: -10.279975891113281
    8. 'tm' → logprob: -10.404975891113281
    9. 'ta' → logprob: -10.529975891113281
    10. 't' (adapté à ' t') → logprob: -10.529975891113281

Token 773: 'bn' (ID: 22040)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0090049859136343
    2. 'b' → logprob: -4.884005069732666
    3. '_a' → logprob: -7.884005069732666
    4. 'A' → logprob: -8.134004592895508
    5. ' =' → logprob: -8.134004592895508
    6. ' a' → logprob: -9.134004592895508
    7. 'c' → logprob: -9.884004592895508
    8. 'r' → logprob: -9.884004592895508
    9. '=' → logprob: -10.259004592895508
    10. 'o' → logprob: -10.634004592895508

Token 774: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.050702158361673355
    2. ' =' → logprob: -3.0507020950317383
    3. '=[]' → logprob: -6.175702095031738
    4. '[]' → logprob: -10.925702095031738
    5. '=[]
' → logprob: -12.050702095031738
    6. ' ' → logprob: -12.425702095031738
    7. 'e' → logprob: -14.050702095031738
    8. 'b' → logprob: -14.175702095031738
    9. '_' → logprob: -14.300702095031738
    10. 'n' → logprob: -14.550702095031738

Token 775: ' []' (ID: 6126)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0017177811823785305
    2. '[' → logprob: -6.876717567443848
    3. ' []' → logprob: -7.376717567443848
    4. '[]
' → logprob: -10.001717567443848
    5. '[]}' → logprob: -12.126717567443848
    6. '[i' → logprob: -12.376717567443848
    7. ' [' → logprob: -14.251717567443848
    8. '[]>' → logprob: -14.751717567443848
    9. '[]

' → logprob: -14.751717567443848
    10. '[len' → logprob: -15.001717567443848

Token 776: ' ' (ID: 220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28367337584495544
    2. '=' → logprob: -1.4086734056472778
    3. '   ' → logprob: -6.783673286437988
    4. '=[]' → logprob: -7.408673286437988
    5. '=[]
' → logprob: -8.408673286437988
    6. '[]' → logprob: -9.033673286437988
    7. ' ' → logprob: -9.658673286437988
    8. ' for' → logprob: -9.658673286437988
    9. '       ' → logprob: -9.783673286437988
    10. '[' → logprob: -9.908673286437988

Token 777: ' #' (ID: 1069)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.009014437906444073
    2. ' =' → logprob: -4.88401460647583
    3. '=[]' → logprob: -6.75901460647583
    4. '[]' → logprob: -8.884014129638672
    5. '=[]
' → logprob: -9.634014129638672
    6. 'for' → logprob: -11.509014129638672
    7. '=[' → logprob: -11.759014129638672
    8. '   ' → logprob: -11.759014129638672
    9. '  ' → logprob: -12.384014129638672
    10. '[' → logprob: -12.759014129638672

Token 778: ' In' (ID: 730)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.08156062662601471
    2. '[' → logprob: -2.7065606117248535
    3. '[i' → logprob: -5.2065606117248535
    4. '[(' → logprob: -5.5815606117248535
    5. ' []' → logprob: -7.2065606117248535
    6. '[]
' → logprob: -7.4565606117248535
    7. ' [' → logprob: -8.081561088562012
    8. '[t' → logprob: -8.206561088562012
    9. '[int' → logprob: -9.456561088562012
    10. '[
' → logprob: -9.956561088562012

Token 779: 'verse' (ID: 7093)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31232258677482605
    2. '[]' → logprob: -1.6873226165771484
    3. ' [' → logprob: -3.3123226165771484
    4. 't' → logprob: -4.437322616577148
    5. '   ' → logprob: -4.562322616577148
    6. ' []' → logprob: -5.437322616577148
    7. '[]
' → logprob: -5.687322616577148
    8. ' ' → logprob: -5.937322616577148
    9. '[i' → logprob: -6.187322616577148
    10. '[t' → logprob: -6.562322616577148

Token 780: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6308154463768005
    2. '=[]' → logprob: -1.8808155059814453
    3. '=' → logprob: -2.3808155059814453
    4. 'b' → logprob: -2.8808155059814453
    5. 'of' → logprob: -3.6308155059814453
    6. '[]' → logprob: -3.7558155059814453
    7. ' of' → logprob: -3.8808155059814453
    8. '   ' → logprob: -4.505815505981445
    9. '[i' → logprob: -4.755815505981445
    10. '```' → logprob: -4.880815505981445

Token 781: ' tb' (ID: 25078)
  Prédit: 'tb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tb' → logprob: -0.296370267868042
    2. 'b' → logprob: -1.546370267868042
    3. ' tb' → logprob: -4.546370506286621
    4. '(tb' → logprob: -4.546370506286621
    5. '[t' → logprob: -5.046370506286621
    6. 'B' → logprob: -5.671370506286621
    7. '[(' → logprob: -5.796370506286621
    8. '[' → logprob: -6.421370506286621
    9. '[b' → logprob: -6.546370506286621
    10. 't' → logprob: -6.671370506286621

Token 782: '
        
' (ID: 20417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07987937331199646
    2. ' =' → logprob: -3.5798792839050293
    3. ' for' → logprob: -3.8298792839050293
    4. 'for' → logprob: -4.704879283905029
    5. '
' → logprob: -5.329879283905029
    6. '=' → logprob: -5.329879283905029
    7. '   ' → logprob: -5.829879283905029
    8. ')' → logprob: -6.829879283905029
    9. '=[]
' → logprob: -7.579879283905029
    10. ':' → logprob: -7.704879283905029

Token 783: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07325725257396698
    2. ' for' → logprob: -3.0732572078704834
    3. 'for' → logprob: -4.1982574462890625
    4. '   ' → logprob: -5.4482574462890625
    5. '           ' → logprob: -6.3232574462890625
    6. ' ' → logprob: -6.5732574462890625
    7. '        
' → logprob: -8.323257446289062
    8. '     ' → logprob: -8.573257446289062
    9. '	' → logprob: -8.823257446289062
    10. '
' → logprob: -8.948257446289062

Token 784: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1799842268228531
    2. ' for' → logprob: -2.1799843311309814
    3. '       ' → logprob: -3.1799843311309814
    4. '   ' → logprob: -5.429984092712402
    5. '           ' → logprob: -5.804984092712402
    6. 'A' → logprob: -6.429984092712402
    7. ' ' → logprob: -8.429984092712402
    8. ' A' → logprob: -8.679984092712402
    9. 'range' → logprob: -8.804984092712402
    10. '               ' → logprob: -9.804984092712402

Token 785: ' a' (ID: 261)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.12235120683908463
    2. 'a' → logprob: -2.6223511695861816
    3. 'x' → logprob: -3.3723511695861816
    4. 'v' → logprob: -5.497351169586182
    5. ' j' → logprob: -6.622351169586182
    6. 'k' → logprob: -6.872351169586182
    7. 'ai' → logprob: -8.24735164642334
    8. 'aa' → logprob: -8.24735164642334
    9. 'num' → logprob: -8.87235164642334
    10. 'e' → logprob: -9.12235164642334

Token 786: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.429970920085907
    2. 'in' → logprob: -1.0549709796905518
    3. 'j' → logprob: -8.054970741271973
    4. 'n' → logprob: -8.429970741271973
    5. 'a' → logprob: -8.554970741271973
    6. 'i' → logprob: -8.929970741271973
    7. '[' → logprob: -9.679970741271973
    8. ' ' → logprob: -9.804970741271973
    9. '_' → logprob: -9.929970741271973
    10. 'A' → logprob: -10.179970741271973

Token 787: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0005532711511477828
    2. ' b' → logprob: -7.500553131103516
    3. '   ' → logprob: -16.000553131103516
    4. ' ' → logprob: -16.625553131103516
    5. '    ' → logprob: -17.875553131103516
    6. '  ' → logprob: -18.375553131103516
    7. '
' → logprob: -18.500553131103516
    8. '	b' → logprob: -18.500553131103516
    9. '       ' → logprob: -18.625553131103516
    10. 'a' → logprob: -19.125553131103516

Token 788: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5770739912986755
    2. ' in' → logprob: -0.8270739912986755
    3. 'a' → logprob: -7.07707405090332
    4. 's' → logprob: -9.82707405090332
    5. 'A' → logprob: -10.07707405090332
    6. '_in' → logprob: -10.20207405090332
    7. '```' → logprob: -11.20207405090332
    8. ',' → logprob: -11.32707405090332
    9. '   ' → logprob: -11.45207405090332
    10. 'i' → logprob: -11.45207405090332

Token 789: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.008699662983417511
    2. ' zip' → logprob: -4.758699893951416
    3. 'A' → logprob: -9.508699417114258
    4. '(zip' → logprob: -11.508699417114258
    5. ' A' → logprob: -14.758699417114258
    6. ' ' → logprob: -15.883699417114258
    7. '   ' → logprob: -16.383699417114258
    8. '.zip' → logprob: -16.758699417114258
    9. 'z' → logprob: -17.008699417114258
    10. 'range' → logprob: -17.133699417114258

Token 790: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.01815052703022957
    2. 'A' → logprob: -4.018150329589844
    3. ' A' → logprob: -15.143150329589844
    4. '(' → logprob: -16.018150329589844
    5. '   ' → logprob: -16.018150329589844
    6. '(
' → logprob: -16.893150329589844
    7. '(B' → logprob: -17.143150329589844
    8. '[A' → logprob: -17.518150329589844
    9. ',A' → logprob: -17.893150329589844
    10. '((' → logprob: -18.018150329589844

Token 791: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0035506547428667545
    2. ',a' → logprob: -6.2535505294799805
    3. ' ,' → logprob: -6.8785505294799805
    4. '(a' → logprob: -8.25355052947998
    5. ',A' → logprob: -9.37855052947998
    6. ',(' → logprob: -10.25355052947998
    7. ',b' → logprob: -10.50355052947998
    8. '   ' → logprob: -10.50355052947998
    9. '(' → logprob: -10.62855052947998
    10. '[' → logprob: -10.87855052947998

Token 792: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.004674338269978762
    2. ' B' → logprob: -5.379674434661865
    3. 'A' → logprob: -11.254673957824707
    4. '   ' → logprob: -11.379673957824707
    5. '       ' → logprob: -11.504673957824707
    6. 'b' → logprob: -12.254673957824707
    7. '        ' → logprob: -12.754673957824707
    8. ' ' → logprob: -12.754673957824707
    9. '    ' → logprob: -13.379673957824707
    10. '           ' → logprob: -13.379673957824707

Token 793: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.00925234705209732
    2. '):' → logprob: -4.759252548217773
    3. '       ' → logprob: -7.884252548217773
    4. '()):
' → logprob: -9.009252548217773
    5. '):
' → logprob: -10.259252548217773
    6. '():
' → logprob: -10.384252548217773
    7. '   ' → logprob: -10.634252548217773
    8. '           ' → logprob: -11.009252548217773
    9. ' ):
' → logprob: -12.009252548217773
    10. '):

' → logprob: -12.259252548217773

Token 794: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007106438861228526
    2. ',' → logprob: -8.500710487365723
    3. '```' → logprob: -9.000710487365723
    4. '[' → logprob: -9.500710487365723
    5. '#' → logprob: -10.375710487365723
    6. '               ' → logprob: -10.625710487365723
    7. '	       ' → logprob: -10.750710487365723
    8. '          ' → logprob: -10.750710487365723
    9. 'a' → logprob: -10.875710487365723
    10. ':
' → logprob: -11.000710487365723

Token 795: ' ta' (ID: 2868)
  Prédit: ' ta'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ta' → logprob: -0.09099011868238449
    2. 'ta' (adapté à ' ta') → logprob: -2.8409900665283203
    3. '           ' → logprob: -4.34099006652832
    4. '               ' → logprob: -4.46599006652832
    5. '            ' → logprob: -6.34099006652832
    6. 'tb' → logprob: -6.71599006652832
    7. ' tb' → logprob: -7.71599006652832
    8. ' ' → logprob: -9.34099006652832
    9. 't' → logprob: -9.59099006652832
    10. '   ' → logprob: -9.71599006652832

Token 796: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0003959992900490761
    2. 'append' → logprob: -8.625395774841309
    3. '.' → logprob: -8.750395774841309
    4. '   ' → logprob: -11.000395774841309
    5. ' .' → logprob: -11.125395774841309
    6. 'Append' → logprob: -12.625395774841309
    7. '_append' → logprob: -12.875395774841309
    8. '.app' → logprob: -13.125395774841309
    9. '=' → logprob: -13.250395774841309
    10. '.extend' → logprob: -13.500395774841309

Token 797: '((' (ID: 2054)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.23974895477294922
    2. '((' → logprob: -1.8647489547729492
    3. ' (' → logprob: -2.864748954772949
    4. ' ((' → logprob: -7.364748954772949
    5. '1' → logprob: -8.11474895477295
    6. '(' → logprob: -8.86474895477295
    7. '   ' → logprob: -9.48974895477295
    8. ' ' → logprob: -9.86474895477295
    9. '0' → logprob: -11.61474895477295
    10. 'a' → logprob: -11.98974895477295

Token 798: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.000321995816193521
    2. '(a' → logprob: -8.125322341918945
    3. ' a' → logprob: -10.625322341918945
    4. ' (' → logprob: -14.125322341918945
    5. '   ' → logprob: -14.750322341918945
    6. 'b' → logprob: -16.375322341918945
    7. ' ' → logprob: -16.500322341918945
    8. '	a' → logprob: -17.125322341918945
    9. '((' → logprob: -17.250322341918945
    10. '(' → logprob: -17.375322341918945

Token 799: ' >>' (ID: 6832)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.003292375011369586
    2. ' >>' → logprob: -5.753292560577393
    3. '>>>' → logprob: -9.378292083740234
    4. '>>(' → logprob: -11.753292083740234
    5. ')>>' → logprob: -12.128292083740234
    6. ' ' → logprob: -12.628292083740234
    7. ')' → logprob: -12.878292083740234
    8. '≫' → logprob: -13.003292083740234
    9. '>' → logprob: -13.628292083740234
    10. '&gt' → logprob: -13.753292083740234

Token 800: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.5491004129871726e-05
    2. ' i' → logprob: -10.000045776367188
    3. '	i' → logprob: -19.250045776367188
    4. ')i' → logprob: -19.875045776367188
    5. '   ' → logprob: -20.500045776367188
    6. ' ' → logprob: -20.875045776367188
    7. '_i' → logprob: -21.750045776367188
    8. '1' → logprob: -22.000045776367188
    9. '```' → logprob: -22.625045776367188
    10. ')' → logprob: -23.000045776367188

Token 801: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007644252385944128
    2. ')&' → logprob: -4.882644176483154
    3. '&' → logprob: -10.382644653320312
    4. ' )' → logprob: -12.507644653320312
    5. '1' → logprob: -12.882644653320312
    6. '0' → logprob: -15.382644653320312
    7. ' &' → logprob: -16.257644653320312
    8. '&)' → logprob: -16.507644653320312
    9. ')
' → logprob: -16.632644653320312
    10. ')>>' → logprob: -16.757644653320312

Token 802: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.023182110860943794
    2. ' &' → logprob: -4.023181915283203
    3. ')&' → logprob: -5.523181915283203
    4. ')' → logprob: -6.898181915283203
    5. '1' → logprob: -12.023181915283203
    6. '&amp' → logprob: -12.273181915283203
    7. ' )' → logprob: -13.773181915283203
    8. '&
' → logprob: -14.523181915283203
    9. '&B' → logprob: -14.898181915283203
    10. '&)' → logprob: -14.898181915283203

Token 803: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '   ' → logprob: -18.875085830688477
    4. '0' → logprob: -19.750085830688477
    5. ' ' → logprob: -20.250085830688477
    6. '```' → logprob: -20.500085830688477
    7. '(' → logprob: -20.562585830688477
    8. '
' → logprob: -20.750085830688477
    9. '{' → logprob: -20.875085830688477
    10. '`' → logprob: -21.000085830688477

Token 804: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '{' → logprob: -18.000001907348633
    4. '(' → logprob: -18.625001907348633
    5. '   ' → logprob: -18.625001907348633
    6. '01' → logprob: -19.000001907348633
    7. '0' → logprob: -19.500001907348633
    8. '`' → logprob: -20.312501907348633
    9. '```' → logprob: -20.312501907348633
    10. '１' → logprob: -20.375001907348633

Token 805: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.16447827219963074
    2. ')' → logprob: -1.9144783020019531
    3. '           ' → logprob: -5.539478302001953
    4. ')
' → logprob: -8.414478302001953
    5. '       ' → logprob: -9.914478302001953
    6. ' )
' → logprob: -10.539478302001953
    7. '),' → logprob: -12.039478302001953
    8. '               ' → logprob: -13.039478302001953
    9. ' )' → logprob: -13.039478302001953
    10. '          ' → logprob: -13.664478302001953

Token 806: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008752549765631557
    2. '
' → logprob: -7.375875473022461
    3. '            
' → logprob: -9.750875473022461
    4. ',' → logprob: -9.875875473022461
    5. '```' → logprob: -10.125875473022461
    6. '		' → logprob: -10.500875473022461
    7. '               ' → logprob: -11.125875473022461
    8. '\t' → logprob: -11.875875473022461
    9. ')
' → logprob: -12.000875473022461
    10. '       ' → logprob: -12.250875473022461

Token 807: ' tb' (ID: 25078)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3174099624156952
    2. 'tb' (adapté à ' tb') → logprob: -1.3174099922180176
    3. '           ' → logprob: -6.192409992218018
    4. ' t' → logprob: -6.442409992218018
    5. ' tb' → logprob: -8.19240951538086
    6. '       ' → logprob: -9.06740951538086
    7. '               ' → logprob: -10.06740951538086
    8. '   ' → logprob: -10.56740951538086
    9. '          ' → logprob: -11.56740951538086
    10. '(t' → logprob: -12.44240951538086

Token 808: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0006423805025406182
    2. '.' → logprob: -7.5006422996521
    3. ' .' → logprob: -9.875642776489258
    4. 'append' → logprob: -11.625642776489258
    5. '=' → logprob: -12.000642776489258
    6. '           ' → logprob: -12.250642776489258
    7. '```' → logprob: -12.750642776489258
    8. '((' → logprob: -12.875642776489258
    9. ' =' → logprob: -13.375642776489258
    10. ')' → logprob: -13.500642776489258

Token 809: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00030114251421764493
    2. '(b' → logprob: -8.250301361083984
    3. '(' → logprob: -10.750301361083984
    4. ' ((' → logprob: -11.125301361083984
    5. ' (' → logprob: -12.875301361083984
    6. '1' → logprob: -15.000301361083984
    7. ' ' → logprob: -16.000301361083984
    8. '(((' → logprob: -16.000301361083984
    9. '(t' → logprob: -16.125301361083984
    10. '   ' → logprob: -16.375301361083984

Token 810: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.01626884564757347
    2. '(b' → logprob: -4.141268730163574
    3. ' (' → logprob: -8.766268730163574
    4. 'a' → logprob: -10.641268730163574
    5. '(a' → logprob: -11.016268730163574
    6. ' b' → logprob: -11.266268730163574
    7. '1' → logprob: -11.391268730163574
    8. '(' → logprob: -12.516268730163574
    9. '(i' → logprob: -12.516268730163574
    10. 'i' → logprob: -13.266268730163574

Token 811: ' >>' (ID: 6832)
  Prédit: ' >>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >>' → logprob: -0.3091254234313965
    2. '>>' → logprob: -1.6841254234313965
    3. ' i' → logprob: -3.0591254234313965
    4. 'i' → logprob: -3.4341254234313965
    5. ' ' → logprob: -7.5591254234313965
    6. '[i' → logprob: -8.684125900268555
    7. ')' → logprob: -9.059125900268555
    8. ' ' → logprob: -9.434125900268555
    9. '>' → logprob: -10.059125900268555
    10. '0' → logprob: -10.184125900268555

Token 812: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0009128939709626138
    2. ' i' → logprob: -7.000912666320801
    3. '<|end|>' → logprob: -14.1259126663208
    4. ' ' → logprob: -15.5009126663208
    5. '<|end|>' → logprob: -15.8759126663208
    6. '1' → logprob: -16.375913619995117
    7. ')' → logprob: -16.750913619995117
    8. ')i' → logprob: -16.875913619995117
    9. '0' → logprob: -17.000913619995117
    10. '	i' → logprob: -17.625913619995117

Token 813: ')' (ID: 8)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.15335623919963837
    2. ' i' → logprob: -2.2783563137054443
    3. ')' → logprob: -3.2783563137054443
    4. ')i' → logprob: -6.403356075286865
    5. '_i' → logprob: -9.153356552124023
    6. '1' → logprob: -9.653356552124023
    7. ' ' → logprob: -9.903356552124023
    8. ' )' → logprob: -10.278356552124023
    9. ',i' → logprob: -10.528356552124023
    10. '	i' → logprob: -10.653356552124023

Token 814: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.19773314893245697
    2. ' &' → logprob: -2.072733163833618
    3. ')' → logprob: -3.322733163833618
    4. ')&' → logprob: -4.072732925415039
    5. '1' → logprob: -7.822732925415039
    6. '&)' → logprob: -11.072732925415039
    7. ' )' → logprob: -11.072732925415039
    8. '0' → logprob: -11.072732925415039
    9. ' ' → logprob: -11.822732925415039
    10. ' &)' → logprob: -12.197732925415039

Token 815: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010505540994927287
    2. ' ' → logprob: -6.8760504722595215
    3. '0' → logprob: -11.12605094909668
    4. 'i' → logprob: -12.87605094909668
    5. '   ' → logprob: -16.12605094909668
    6. '(i' → logprob: -16.37605094909668
    7. ' i' → logprob: -16.43855094909668
    8. '[i' → logprob: -17.87605094909668
    9. ')' → logprob: -18.06355094909668
    10. '```' → logprob: -18.12605094909668

Token 816: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.873571692267433e-05
    2. ' ' → logprob: -10.375068664550781
    3. 'i' → logprob: -10.500068664550781
    4. '0' → logprob: -11.875068664550781
    5. '```' → logprob: -15.125068664550781
    6. '   ' → logprob: -15.187568664550781
    7. '(i' → logprob: -15.562568664550781
    8. 'int' → logprob: -15.875068664550781
    9. 'bit' → logprob: -16.31256866455078
    10. '31' → logprob: -16.50006866455078

Token 817: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06061822548508644
    2. ')
' → logprob: -2.9356181621551514
    3. ')' → logprob: -5.1856184005737305
    4. '               ' → logprob: -10.43561840057373
    5. ',' → logprob: -10.81061840057373
    6. '),' → logprob: -11.06061840057373
    7. '       ' → logprob: -11.93561840057373
    8. '		' → logprob: -12.06061840057373
    9. 't' → logprob: -12.06061840057373
    10. ')t' → logprob: -12.31061840057373

Token 818: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00018161057960242033
    2. 't' → logprob: -8.625181198120117
    3. ' t' → logprob: -14.125181198120117
    4. '               ' → logprob: -14.500181198120117
    5. '       ' → logprob: -15.250181198120117
    6. '		' → logprob: -15.875181198120117
    7. '   ' → logprob: -16.125181198120117
    8. 'b' → logprob: -16.125181198120117
    9. ',' → logprob: -16.250181198120117
    10. '```' → logprob: -16.375181198120117

Token 819: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.0017383632948622108
    2. ' t' → logprob: -7.001738548278809
    3. '           ' → logprob: -7.126738548278809
    4. '               ' → logprob: -11.876738548278809
    5. '   ' → logprob: -12.126738548278809
    6. '`t' → logprob: -12.251738548278809
    7. '       ' → logprob: -13.501738548278809
    8. ' ' → logprob: -14.126738548278809
    9. '            ' → logprob: -14.251738548278809
    10. '          ' → logprob: -14.251738548278809

Token 820: 'bn' (ID: 22040)
  Prédit: 'bn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bn' → logprob: -4.310693111619912e-05
    2. 'b' → logprob: -10.125042915344238
    3. ' bn' → logprob: -14.500042915344238
    4. 'bm' → logprob: -14.625042915344238
    5. '```' → logprob: -15.125042915344238
    6. 'ba' → logprob: -15.750042915344238
    7. 'bin' → logprob: -15.875042915344238
    8. 'bp' → logprob: -16.000043869018555
    9. 'ab' → logprob: -16.125043869018555
    10. '_bn' → logprob: -16.250043869018555

Token 821: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -5.991464786347933e-05
    2. '.' → logprob: -10.000060081481934
    3. 'append' → logprob: -11.375060081481934
    4. ' .' → logprob: -13.125060081481934
    5. '.a' → logprob: -15.250060081481934
    6. '.app' → logprob: -15.375060081481934
    7. '.ap' → logprob: -15.500060081481934
    8. '   ' → logprob: -16.250059127807617
    9. 'Append' → logprob: -16.500059127807617
    10. 'a' → logprob: -17.250059127807617

Token 822: '(tb' (ID: 115468)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8602778911590576
    2. '1' → logprob: -1.2352778911590576
    3. '((' → logprob: -1.7352778911590576
    4. '(((' → logprob: -2.2352778911590576
    5. '(tb' → logprob: -6.360278129577637
    6. '((((' → logprob: -8.235278129577637
    7. ' (' → logprob: -8.360278129577637
    8. 'tb' → logprob: -8.735278129577637
    9. '(~' → logprob: -9.110278129577637
    10. '   ' → logprob: -9.610278129577637

Token 823: '[-' (ID: 17503)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.006598017178475857
    2. '[' → logprob: -5.381597995758057
    3. ')' → logprob: -7.756597995758057
    4. 'i' → logprob: -7.881597995758057
    5. '[-' → logprob: -7.881597995758057
    6. '[j' → logprob: -8.756598472595215
    7. '=' → logprob: -9.006598472595215
    8. '[n' → logprob: -9.256598472595215
    9. '[
' → logprob: -10.256598472595215
    10. '_i' → logprob: -10.756598472595215

Token 824: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -12.12501049041748
    3. '0' → logprob: -13.37501049041748
    4. 'i' → logprob: -13.75001049041748
    5. '-' → logprob: -15.31251049041748
    6. '   ' → logprob: -15.31251049041748
    7. '```' → logprob: -16.062509536743164
    8. '
' → logprob: -16.562509536743164
    9. '!' → logprob: -16.562509536743164
    10. '  ' → logprob: -16.687509536743164

Token 825: ']' (ID: 60)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '^' → logprob: -0.06208386644721031
    2. ' ^' → logprob: -2.8120839595794678
    3. ')' → logprob: -9.437084197998047
    4. ')^' → logprob: -10.687084197998047
    5. '^)' → logprob: -11.937084197998047
    6. '==' → logprob: -13.062084197998047
    7. ' ' → logprob: -14.062084197998047
    8. ' ^=' → logprob: -14.312084197998047
    9. '^(' → logprob: -14.437084197998047
    10. '^{' → logprob: -14.437084197998047

Token 826: ' ^' (ID: 7602)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.05719277262687683
    2. ' ^' → logprob: -2.932192802429199
    3. ')' → logprob: -6.182192802429199
    4. '==' → logprob: -9.0571928024292
    5. '^)' → logprob: -10.1821928024292
    6. ')^' → logprob: -10.4321928024292
    7. '1' → logprob: -10.5571928024292
    8. '   ' → logprob: -11.8071928024292
    9. ' ' → logprob: -12.3071928024292
    10. ' ^=' → logprob: -12.8071928024292

Token 827: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -13.000003814697266
    3. '   ' → logprob: -14.125003814697266
    4. '           ' → logprob: -14.250003814697266
    5. '       ' → logprob: -15.125003814697266
    6. '                       ' → logprob: -16.000003814697266
    7. '                   ' → logprob: -16.625003814697266
    8. '               ' → logprob: -17.125003814697266
    9. 'True' → logprob: -17.125003814697266
    10. '                           ' → logprob: -17.625003814697266

Token 828: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -15.250001907348633
    4. 'True' → logprob: -16.375001907348633
    5. '       ' → logprob: -16.500001907348633
    6. '           ' → logprob: -16.750001907348633
    7. '                       ' → logprob: -18.125001907348633
    8. '               ' → logprob: -18.500001907348633
    9. '                   ' → logprob: -18.750001907348633
    10. 'true' → logprob: -18.750001907348633

Token 829: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002866092836484313
    2. '<|end|>' → logprob: -6.252866268157959
    3. '       ' → logprob: -7.877866268157959
    4. ' )' → logprob: -8.1278657913208
    5. ')
' → logprob: -8.5028657913208
    6. '<|end|>' → logprob: -10.3778657913208
    7. '           ' → logprob: -12.1278657913208
    8. ')return' → logprob: -12.2528657913208
    9. '')' → logprob: -12.3778657913208
    10. '   ' → logprob: -12.7528657913208

Token 830: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 831: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5355100035667419
    2. '<|end|>' → logprob: -1.4105100631713867
    3. '
' → logprob: -1.9105100631713867
    4. '        
' → logprob: -4.285510063171387
    5. ')' → logprob: -6.035510063171387
    6. '<|end|>' → logprob: -6.910510063171387
    7. '  
' → logprob: -7.035510063171387
    8. '    
' → logprob: -7.035510063171387
    9. 'for' → logprob: -7.285510063171387
    10. '```' → logprob: -7.410510063171387

Token 832: ' Neg' (ID: 22837)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4935605823993683
    2. 'b' → logprob: -2.743560552597046
    3. 'return' → logprob: -2.743560552597046
    4. ')' → logprob: -2.868560552597046
    5. '#' → logprob: -3.118560552597046
    6. '           ' → logprob: -3.118560552597046
    7. '```' → logprob: -3.368560552597046
    8. '<|end|>' → logprob: -4.243560791015625
    9. 't' → logprob: -4.368560791015625
    10. '
' → logprob: -4.368560791015625

Token 833: 'ate' (ID: 379)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0595831535756588
    2. 'ate' → logprob: -3.4345831871032715
    3. 'ated' → logprob: -4.3095831871032715
    4. ' ' → logprob: -5.4345831871032715
    5. 'ected' → logprob: -5.9345831871032715
    6. '       ' → logprob: -6.8095831871032715
    7. '   ' → logprob: -7.3095831871032715
    8. 't' → logprob: -7.6845831871032715
    9. '=' → logprob: -7.8095831871032715
    10. '```' → logprob: -8.059582710266113

Token 834: ' last' (ID: 2174)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 835: ' value' (ID: 1432)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1496713012456894
    2. 't' → logprob: -3.1496713161468506
    3. 'tb' → logprob: -3.3996713161468506
    4. 'token' → logprob: -3.7746713161468506
    5. '<|end|>' → logprob: -5.0246710777282715
    6. 'b' → logprob: -5.1496710777282715
    7. 'element' → logprob: -5.5246710777282715
    8. ' element' → logprob: -5.6496710777282715
    9. 'bit' → logprob: -5.8996710777282715
    10. '```' → logprob: -6.0246710777282715

Token 836: ' in' (ID: 306)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 837: ' tb' (ID: 25078)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.009178523905575275
    2. 'tb' → logprob: -4.759178638458252
    3. ' t' → logprob: -7.509178638458252
    4. '`t' → logprob: -11.634178161621094
    5. ' tb' → logprob: -12.009178161621094
    6. '[t' → logprob: -15.634178161621094
    7. '```' → logprob: -15.759178161621094
    8. '	t' → logprob: -15.759178161621094
    9. 'tab' → logprob: -15.884178161621094
    10. '   ' → logprob: -16.009178161621094

Token 838: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 839: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03641895577311516
    2. '<|end|>' → logprob: -3.536418914794922
    3. '```' → logprob: -5.911418914794922
    4. '
' → logprob: -6.661418914794922
    5. ')' → logprob: -7.286418914794922
    6. '           ' → logprob: -7.536418914794922
    7. '        
' → logprob: -8.036418914794922
    8. '   ' → logprob: -8.911418914794922
    9. ' ' → logprob: -9.036418914794922
    10. '        ' → logprob: -9.286418914794922

Token 840: ' ah' (ID: 5369)
  Prédit: 'ah'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ah' (adapté à ' ah') → logprob: -0.1383940428495407
    2. '   ' → logprob: -2.1383941173553467
    3. ' ah' → logprob: -4.513393878936768
    4. 'rh' → logprob: -9.138394355773926
    5. 'ahs' → logprob: -9.763394355773926
    6. 'ha' → logprob: -10.138394355773926
    7. '#' → logprob: -10.263394355773926
    8. '       ' → logprob: -10.388394355773926
    9. 'for' → logprob: -10.638394355773926
    10. '    
' → logprob: -11.013394355773926

Token 841: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0005811501177959144
    2. '.' → logprob: -8.125580787658691
    3. '[i' → logprob: -8.500580787658691
    4. '.app' → logprob: -9.750580787658691
    5. '.ap' → logprob: -11.250580787658691
    6. '[-' → logprob: -12.250580787658691
    7. '[' → logprob: -13.750580787658691
    8. 'append' → logprob: -14.000580787658691
    9. '_append' → logprob: -14.500580787658691
    10. '.setdefault' → logprob: -14.500580787658691

Token 842: '(R' (ID: 4092)
  Prédit: '(R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(R' → logprob: -0.12712328135967255
    2. 'RH' → logprob: -2.1271233558654785
    3. ' RH' → logprob: -9.25212287902832
    4. 'R' → logprob: -9.75212287902832
    5. '([' → logprob: -11.25212287902832
    6. 'Rh' → logprob: -11.50212287902832
    7. '   ' → logprob: -12.00212287902832
    8. '(' → logprob: -12.12712287902832
    9. '((' → logprob: -13.37712287902832
    10. '	R' → logprob: -14.12712287902832

Token 843: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -8.180258191714529e-06
    2. 'RH' → logprob: -12.500008583068848
    3. '(H' → logprob: -13.625008583068848
    4. '(' → logprob: -13.875008583068848
    5. ' H' → logprob: -14.000008583068848
    6. '[' → logprob: -15.000008583068848
    7. '<H' → logprob: -15.687508583068848
    8. ')' → logprob: -16.68750762939453
    9. 'HBox' → logprob: -16.68750762939453
    10. '
' → logprob: -16.93750762939453

Token 844: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.320199877838604e-07
    2. ')' → logprob: -15.75
    3. '((' → logprob: -16.25
    4. ' (' → logprob: -16.5
    5. ')(' → logprob: -16.5
    6. '(
' → logprob: -17.375
    7. '   ' → logprob: -18.125
    8. '([' → logprob: -18.875
    9. 'ta' → logprob: -19.125
    10. '(t' → logprob: -20.375

Token 845: 'ta' (ID: 1524)
  Prédit: 'ta'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ta' → logprob: -1.843177233240567e-05
    2. ' ta' → logprob: -11.000018119812012
    3. '[' → logprob: -14.375018119812012
    4. '   ' → logprob: -14.875018119812012
    5. '(' → logprob: -15.375018119812012
    6. 'Ta' → logprob: -15.375018119812012
    7. '           ' → logprob: -16.625019073486328
    8. ')' → logprob: -17.625019073486328
    9. 'tta' → logprob: -17.625019073486328
    10. 't' → logprob: -17.750019073486328

Token 846: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004583135014399886
    2. ' ,' → logprob: -8.375458717346191
    3. '(base' → logprob: -9.875458717346191
    4. ')' → logprob: -10.000458717346191
    5. '(' → logprob: -10.000458717346191
    6. ',b' → logprob: -10.375458717346191
    7. '))' → logprob: -10.500458717346191
    8. ',(' → logprob: -12.250458717346191
    9. ',B' → logprob: -13.125458717346191
    10. ';base' → logprob: -13.125458717346191

Token 847: ' ' (ID: 220)
  Prédit: '131'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '131' → logprob: -1.0191044807434082
    2. '2' → logprob: -1.1441044807434082
    3. '911' → logprob: -2.644104480743408
    4. '10' → logprob: -3.269104480743408
    5. '233' → logprob: -3.394104480743408
    6. '100' → logprob: -3.394104480743408
    7. '257' → logprob: -3.519104480743408
    8. '101' → logprob: -3.894104480743408
    9. '313' → logprob: -4.769104480743408
    10. '127' → logprob: -4.894104480743408

Token 848: '641' (ID: 45293)
  Prédit: '131'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '131' → logprob: -0.994734525680542
    2. '911' → logprob: -1.244734525680542
    3. '2' → logprob: -2.869734525680542
    4. '100' → logprob: -2.994734525680542
    5. '10' → logprob: -3.244734525680542
    6. '233' → logprob: -3.494734525680542
    7. '313' → logprob: -3.619734525680542
    8. '257' → logprob: -3.869734525680542
    9. '101' → logprob: -4.244734764099121
    10. '357' → logprob: -4.619734764099121

Token 849: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011042994447052479
    2. '))' → logprob: -4.886043071746826
    3. ')' → logprob: -7.136043071746826
    4. '+' → logprob: -7.261043071746826
    5. ' +' → logprob: -7.511043071746826
    6. ' ,' → logprob: -7.511043071746826
    7. '   ' → logprob: -8.261042594909668
    8. ',
' → logprob: -9.136042594909668
    9. ' ' → logprob: -10.136042594909668
    10. '```' → logprob: -10.261042594909668

Token 850: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.03576905280351639
    2. '100' → logprob: -3.410768985748291
    3. '999' → logprob: -6.660768985748291
    4. '998' → logprob: -7.785768985748291
    5. '1' → logprob: -8.91076946258545
    6. 'int' → logprob: -9.03576946258545
    7. '123' → logprob: -10.41076946258545
    8. ' ' → logprob: -11.03576946258545
    9. '101' → logprob: -11.66076946258545
    10. '129' → logprob: -11.78576946258545

Token 851: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.04570213705301285
    2. '100' → logprob: -3.1707022190093994
    3. '999' → logprob: -6.67070198059082
    4. '998' → logprob: -7.79570198059082
    5. '1' → logprob: -8.04570198059082
    6. 'int' → logprob: -8.29570198059082
    7. '214' → logprob: -10.04570198059082
    8. '(' → logprob: -10.04570198059082
    9. '123' → logprob: -10.17070198059082
    10. '129' → logprob: -10.54570198059082

Token 852: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.2298540323972702
    2. '9' → logprob: -1.9798539876937866
    3. '09' → logprob: -2.979854106903076
    4. '000' → logprob: -4.229854106903076
    5. '009' → logprob: -6.979854106903076
    6. '_' → logprob: -8.104853630065918
    7. '07' → logprob: -8.354853630065918
    8. '007' → logprob: -8.979853630065918
    9. ' **' → logprob: -9.229853630065918
    10. '+' → logprob: -9.229853630065918

Token 853: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.2352385965641588e-05
    2. '+' → logprob: -11.625012397766113
    3. '```' → logprob: -14.250012397766113
    4. '09' → logprob: -14.375012397766113
    5. '15' → logprob: -14.500012397766113
    6. '10' → logprob: -14.875012397766113
    7. '``' → logprob: -15.375012397766113
    8. '18' → logprob: -15.750012397766113
    9. '19' → logprob: -16.000011444091797
    10. '11' → logprob: -16.062511444091797

Token 854: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0016342396847903728
    2. '7' → logprob: -6.501634120941162
    3. '9' → logprob: -9.00163459777832
    4. ' +' → logprob: -12.12663459777832
    5. '```' → logprob: -13.37663459777832
    6. '+
' → logprob: -14.25163459777832
    7. ')+' → logprob: -15.00163459777832
    8. '＋' → logprob: -15.12663459777832
    9. '   ' → logprob: -15.50163459777832
    10. ']+' → logprob: -16.87663459777832

Token 855: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.22025619447231293
    2. '+' → logprob: -2.0952560901641846
    3. '7' → logprob: -2.5952560901641846
    4. '```' → logprob: -11.845255851745605
    5. ' +' → logprob: -12.470255851745605
    6. '``' → logprob: -12.595255851745605
    7. '87' → logprob: -13.345255851745605
    8. '   ' → logprob: -14.095255851745605
    9. '#' → logprob: -14.970255851745605
    10. '15' → logprob: -15.095255851745605

Token 856: '7' (ID: 22)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4560837745666504
    2. '9' → logprob: -1.2060837745666504
    3. '7' → logprob: -2.7060837745666504
    4. '```' → logprob: -10.706083297729492
    5. ' +' → logprob: -10.956083297729492
    6. '``' → logprob: -11.331083297729492
    7. '87' → logprob: -12.081083297729492
    8. '   ' → logprob: -13.456083297729492
    9. '+"' → logprob: -13.581083297729492
    10. '#' → logprob: -13.956083297729492

Token 857: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0017641937592998147
    2. '))
' → logprob: -6.376764297485352
    3. ')' → logprob: -9.876764297485352
    4. ' ))' → logprob: -12.626764297485352
    5. ')))' → logprob: -13.001764297485352
    6. '))

' → logprob: -14.251764297485352
    7. '));' → logprob: -14.376764297485352
    8. ''))' → logprob: -14.501764297485352
    9. '   ' → logprob: -14.501764297485352
    10. ',' → logprob: -14.626764297485352

Token 858: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09745895117521286
    2. 'bh' → logprob: -3.222458839416504
    3. '   ' → logprob: -3.347458839416504
    4. ' bh' → logprob: -4.097458839416504
    5. '           ' → logprob: -6.847458839416504
    6. 'b' → logprob: -9.847458839416504
    7. ' ' → logprob: -10.847458839416504
    8. '	b' → logprob: -11.097458839416504
    9. '      ' → logprob: -11.972458839416504
    10. '```' → logprob: -11.972458839416504

Token 859: ' bh' (ID: 11387)
  Prédit: 'bh'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bh' (adapté à ' bh') → logprob: -0.0008723941282369196
    2. '   ' → logprob: -7.125872611999512
    3. ' bh' → logprob: -9.875872611999512
    4. '       ' → logprob: -11.625872611999512
    5. ' ' → logprob: -13.000872611999512
    6. '           ' → logprob: -13.375872611999512
    7. 'b' → logprob: -13.625872611999512
    8. '  ' → logprob: -14.125872611999512
    9. '	b' → logprob: -14.625872611999512
    10. 'ah' → logprob: -14.625872611999512

Token 860: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00014478032244369388
    2. '.' → logprob: -8.875144958496094
    3. 'append' → logprob: -13.000144958496094
    4. ' .' → logprob: -13.500144958496094
    5. '.app' → logprob: -14.875144958496094
    6. ').' → logprob: -15.375144958496094
    7. '_append' → logprob: -15.375144958496094
    8. '.extend' → logprob: -15.625144958496094
    9. '.Append' → logprob: -16.375144958496094
    10. '.ap' → logprob: -16.750144958496094

Token 861: '(R' (ID: 4092)
  Prédit: '(R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(R' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -15.5
    3. 'RH' → logprob: -16.875
    4. '(
' → logprob: -18.625
    5. '   ' → logprob: -19.25
    6. '((' → logprob: -19.375
    7. ' (' → logprob: -19.75
    8. '(S' → logprob: -20.25
    9. '(H' → logprob: -20.25
    10. ' RH' → logprob: -20.625

Token 862: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.3777408003807068
    2. 'RH' → logprob: -1.2527408599853516
    3. '(tb' → logprob: -3.8777408599853516
    4. '(' → logprob: -5.877740859985352
    5. 'R' → logprob: -6.002740859985352
    6. '(R' → logprob: -6.627740859985352
    7. 'b' → logprob: -7.752740859985352
    8. 'tb' → logprob: -8.377740859985352
    9. '(t' → logprob: -8.877740859985352
    10. '([' → logprob: -8.877740859985352

Token 863: '(tb' (ID: 115468)
  Prédit: '(tb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tb' → logprob: -0.012378609739243984
    2. '(t' → logprob: -4.512378692626953
    3. 'tb' → logprob: -6.637378692626953
    4. '(' → logprob: -11.637378692626953
    5. ' tb' → logprob: -12.387378692626953
    6. 't' → logprob: -12.387378692626953
    7. '	tb' → logprob: -13.512378692626953
    8. ' (' → logprob: -15.137378692626953
    9. '(tc' → logprob: -15.512378692626953
    10. '_tb' → logprob: -15.637378692626953

Token 864: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021534727420657873
    2. '(' → logprob: -6.502153396606445
    3. ' ,' → logprob: -8.252153396606445
    4. '[' → logprob: -9.127153396606445
    5. ',(' → logprob: -10.002153396606445
    6. ',[' → logprob: -10.002153396606445
    7. '   ' → logprob: -10.877153396606445
    8. '           ' → logprob: -10.877153396606445
    9. '(tb' → logprob: -10.877153396606445
    10. '       ' → logprob: -11.127153396606445

Token 865: ' ' (ID: 220)
  Prédit: '641'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '641' → logprob: -0.0010411443654447794
    2. '643' → logprob: -8.251041412353516
    3. '631' → logprob: -9.251041412353516
    4. '647' → logprob: -9.501041412353516
    5. ' ' → logprob: -10.126041412353516
    6. '541' → logprob: -10.126041412353516
    7. '357' → logprob: -10.251041412353516
    8. '257' → logprob: -10.501041412353516
    9. '173' → logprob: -10.626041412353516
    10. '313' → logprob: -10.751041412353516

Token 866: '641' (ID: 45293)
  Prédit: '641'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '641' → logprob: -0.0031533613801002502
    2. '357' → logprob: -7.628153324127197
    3. '643' → logprob: -8.128153800964355
    4. '541' → logprob: -8.878153800964355
    5. '647' → logprob: -9.003153800964355
    6. '631' → logprob: -9.253153800964355
    7. '127' → logprob: -9.378153800964355
    8. '997' → logprob: -9.628153800964355
    9. '257' → logprob: -9.690653800964355
    10. '642' → logprob: -9.753153800964355

Token 867: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5332478142227046e-05
    2. ' ,' → logprob: -11.500015258789062
    3. ',
' → logprob: -12.500015258789062
    4. '   ' → logprob: -14.875015258789062
    5. '<|end|>' → logprob: -15.000015258789062
    6. ')' → logprob: -15.125015258789062
    7. ' ' → logprob: -16.375015258789062
    8. '),' → logprob: -16.750015258789062
    9. '```' → logprob: -16.750015258789062
    10. ',

' → logprob: -17.000015258789062

Token 868: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00016301481809932739
    2. ' ' → logprob: -8.750163078308105
    3. '100' → logprob: -12.500163078308105
    4. '   ' → logprob: -15.000163078308105
    5. '(' → logprob: -16.25016212463379
    6. '  ' → logprob: -17.12516212463379
    7. '           ' → logprob: -17.25016212463379
    8. 'b' → logprob: -17.50016212463379
    9. '        ' → logprob: -17.68766212463379
    10. '         ' → logprob: -17.81266212463379

Token 869: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0008135587559081614
    2. '100' → logprob: -7.1258134841918945
    3. ' ' → logprob: -12.000813484191895
    4. '(' → logprob: -13.875813484191895
    5. '   ' → logprob: -14.125813484191895
    6. '998' → logprob: -15.000813484191895
    7. '1' → logprob: -15.625813484191895
    8. '```' → logprob: -16.12581443786621
    9. '
' → logprob: -16.37581443786621
    10. 'int' → logprob: -16.50081443786621

Token 870: '**' (ID: 410)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16046570241451263
    2. '9' → logprob: -1.9104657173156738
    3. ' +' → logprob: -9.160465240478516
    4. '7' → logprob: -9.535465240478516
    5. '```' → logprob: -10.160465240478516
    6. '**' → logprob: -11.660465240478516
    7. ' ' → logprob: -11.660465240478516
    8. '``' → logprob: -13.535465240478516
    9. '6' → logprob: -13.660465240478516
    10. ')+' → logprob: -14.160465240478516

Token 871: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0001354824344161898
    2. '7' → logprob: -9.12513542175293
    3. '6' → logprob: -10.87513542175293
    4. '```' → logprob: -12.37513542175293
    5. '``' → logprob: -13.50013542175293
    6. '+' → logprob: -13.75013542175293
    7. '-' → logprob: -15.75013542175293
    8. '4' → logprob: -16.37513542175293
    9. '15' → logprob: -16.50013542175293
    10. '2' → logprob: -16.56263542175293

Token 872: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.012509997934103012
    2. ' +' → logprob: -4.387509822845459
    3. '```' → logprob: -16.637510299682617
    4. '   ' → logprob: -16.762510299682617
    5. ' ' → logprob: -16.762510299682617
    6. ' ' → logprob: -17.137510299682617
    7. '＋' → logprob: -17.137510299682617
    8. '
' → logprob: -18.200010299682617
    9. '[' → logprob: -18.325010299682617
    10. ')' → logprob: -18.325010299682617

Token 873: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0019614631310105324
    2. '9' → logprob: -6.2519612312316895
    3. '6' → logprob: -11.251961708068848
    4. '+' → logprob: -11.376961708068848
    5. '8' → logprob: -12.751961708068848
    6. '```' → logprob: -12.876961708068848
    7. '10' → logprob: -14.001961708068848
    8. '``' → logprob: -15.126961708068848
    9. '14' → logprob: -15.251961708068848
    10. '[' → logprob: -15.251961708068848

Token 874: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0017244421178475022
    2. '9' → logprob: -6.3767242431640625
    3. '6' → logprob: -11.001724243164062
    4. '+' → logprob: -12.751724243164062
    5. '8' → logprob: -14.751724243164062
    6. '10' → logprob: -14.876724243164062
    7. '15' → logprob: -15.376724243164062
    8. '```' → logprob: -15.626724243164062
    9. '12' → logprob: -16.001724243164062
    10. '14' → logprob: -16.001724243164062

Token 875: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.1003013476729393
    2. '))
' → logprob: -2.3503012657165527
    3. '       ' → logprob: -9.850301742553711
    4. ')' → logprob: -10.475301742553711
    5. '   ' → logprob: -12.350301742553711
    6. '))
' → logprob: -12.475301742553711
    7. '           ' → logprob: -13.600301742553711
    8. ' ))' → logprob: -14.100301742553711
    9. '))

' → logprob: -14.225301742553711
    10. ')
' → logprob: -14.225301742553711

Token 876: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016826950013637543
    2. 'b' → logprob: -4.14182710647583
    3. ' b' → logprob: -7.76682710647583
    4. '           ' → logprob: -8.016826629638672
    5. '   ' → logprob: -11.266826629638672
    6. 't' → logprob: -11.641826629638672
    7. '```' → logprob: -12.266826629638672
    8. '               ' → logprob: -12.641826629638672
    9. '      ' → logprob: -13.266826629638672
    10. 'bn' → logprob: -13.516826629638672

Token 877: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -5.0020742492051795e-05
    2. '       ' → logprob: -10.500049591064453
    3. ' b' → logprob: -10.750049591064453
    4. '   ' → logprob: -14.625049591064453
    5. '           ' → logprob: -15.250049591064453
    6. 'bn' → logprob: -15.250049591064453
    7. '               ' → logprob: -17.625049591064453
    8. '     ' → logprob: -18.125049591064453
    9. '      ' → logprob: -18.125049591064453
    10. '        ' → logprob: -18.250049591064453

Token 878: 'nh' (ID: 5380)
  Prédit: 'nh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nh' → logprob: -0.0012027313932776451
    2. 'h' → logprob: -6.751202583312988
    3. 'n' → logprob: -10.376202583312988
    4. 'hn' → logprob: -14.126202583312988
    5. '.append' → logprob: -15.626202583312988
    6. 'b' → logprob: -16.126203536987305
    7. 'bh' → logprob: -16.126203536987305
    8. 'ah' → logprob: -16.501203536987305
    9. 'nb' → logprob: -17.376203536987305
    10. ' nh' → logprob: -17.501203536987305

Token 879: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -6.034592388459714e-06
    2. '.' → logprob: -12.375005722045898
    3. '.app' → logprob: -13.875005722045898
    4. 'append' → logprob: -14.375005722045898
    5. '.ap' → logprob: -15.750005722045898
    6. '[-' → logprob: -17.1250057220459
    7. '_append' → logprob: -17.8750057220459
    8. ' .' → logprob: -18.2500057220459
    9. '.Append' → logprob: -18.5000057220459
    10. '   ' → logprob: -18.7500057220459

Token 880: '(R' (ID: 4092)
  Prédit: '(R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(R' → logprob: -0.00020401719666551799
    2. 'RH' → logprob: -8.500204086303711
    3. 'Rh' → logprob: -15.500204086303711
    4. ' RH' → logprob: -15.750204086303711
    5. '(' → logprob: -16.00020408630371
    6. '   ' → logprob: -16.87520408630371
    7. 'R' → logprob: -17.00020408630371
    8. '(
' → logprob: -18.50020408630371
    9. ' (' → logprob: -18.62520408630371
    10. '(H' → logprob: -20.12520408630371

Token 881: 'H' (ID: 39)
  Prédit: 'RH'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RH' → logprob: -0.0003242607053834945
    2. 'H' → logprob: -8.500324249267578
    3. ' RH' → logprob: -9.750324249267578
    4. '(R' → logprob: -9.875324249267578
    5. 'b' → logprob: -12.125324249267578
    6. 'R' → logprob: -12.750324249267578
    7. '(' → logprob: -14.375324249267578
    8. '[' → logprob: -14.500324249267578
    9. '=' → logprob: -14.750324249267578
    10. 't' → logprob: -15.125324249267578

Token 882: '(t' (ID: 2025)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.34913596510887146
    2. '(t' → logprob: -1.2241359949111938
    3. ' t' → logprob: -7.349135875701904
    4. '(' → logprob: -10.724136352539062
    5. ' (' → logprob: -11.599136352539062
    6. ')' → logprob: -12.724136352539062
    7. '	t' → logprob: -12.849136352539062
    8. '   ' → logprob: -12.974136352539062
    9. '           ' → logprob: -13.224136352539062
    10. '[t' → logprob: -13.474136352539062

Token 883: 'bn' (ID: 22040)
  Prédit: 'bn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bn' → logprob: -0.0015083164907991886
    2. 'b' → logprob: -6.5015082359313965
    3. 'bm' → logprob: -13.126508712768555
    4. 'tb' → logprob: -13.501508712768555
    5. 't' → logprob: -14.251508712768555
    6. 'bt' → logprob: -14.876508712768555
    7. 'tn' → logprob: -15.251508712768555
    8. 'bnb' → logprob: -15.501508712768555
    9. 'bh' → logprob: -15.876508712768555
    10. '_bn' → logprob: -16.001508712768555

Token 884: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0036585067864507437
    2. '(' → logprob: -5.628658294677734
    3. '[' → logprob: -11.378658294677734
    4. ' ,' → logprob: -11.503658294677734
    5. ',(' → logprob: -11.628658294677734
    6. ' (' → logprob: -11.628658294677734
    7. ')' → logprob: -12.253658294677734
    8. ',b' → logprob: -12.253658294677734
    9. ',[' → logprob: -13.003658294677734
    10. '<|end|>' → logprob: -13.753658294677734

Token 885: ' ' (ID: 220)
  Prédit: '641'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '641' → logprob: -0.00010115911572938785
    2. ' ' → logprob: -9.750101089477539
    3. '[' → logprob: -10.750101089477539
    4. '(' → logprob: -11.625101089477539
    5. '   ' → logprob: -12.500101089477539
    6. '```' → logprob: -14.125101089477539
    7. ')' → logprob: -14.187601089477539
    8. '  ' → logprob: -14.375101089477539
    9. '640' → logprob: -14.437601089477539
    10. 'bh' → logprob: -14.437601089477539

Token 886: '641' (ID: 45293)
  Prédit: '641'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '641' → logprob: -0.00033308175625279546
    2. '[' → logprob: -9.250332832336426
    3. '(' → logprob: -9.500332832336426
    4. ' ' → logprob: -9.625332832336426
    5. 'RH' → logprob: -10.250332832336426
    6. 'b' → logprob: -10.750332832336426
    7. '   ' → logprob: -12.375332832336426
    8. '640' → logprob: -12.500332832336426
    9. 'bh' → logprob: -12.875332832336426
    10. '10' → logprob: -12.875332832336426

Token 887: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.771655115589965e-05
    2. ' ,' → logprob: -11.125018119812012
    3. '<|end|>' → logprob: -13.375018119812012
    4. '   ' → logprob: -14.625018119812012
    5. '<|end|>' → logprob: -14.750018119812012
    6. ',
' → logprob: -15.500018119812012
    7. ')' → logprob: -15.875018119812012
    8. '‌,' → logprob: -16.625017166137695
    9. ' ' → logprob: -17.500017166137695
    10. '```' → logprob: -18.250017166137695

Token 888: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -3.881560041918419e-05
    2. ' ' → logprob: -10.250039100646973
    3. '100' → logprob: -12.750039100646973
    4. '   ' → logprob: -15.375039100646973
    5. '(' → logprob: -16.125038146972656
    6. '  ' → logprob: -17.625038146972656
    7. '
' → logprob: -18.125038146972656
    8. '           ' → logprob: -18.187538146972656
    9. '```' → logprob: -18.500038146972656
    10. '       ' → logprob: -18.625038146972656

Token 889: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.2471589798224159e-05
    2. '100' → logprob: -11.625012397766113
    3. ' ' → logprob: -12.750012397766113
    4. '(' → logprob: -14.750012397766113
    5. '   ' → logprob: -17.00001335144043
    6. '```' → logprob: -18.12501335144043
    7. '1' → logprob: -18.25001335144043
    8. '0' → logprob: -18.50001335144043
    9. 'b' → logprob: -18.62501335144043
    10. '
' → logprob: -18.62501335144043

Token 890: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.1279315948486328
    2. '+' → logprob: -2.127931594848633
    3. '**' → logprob: -7.127931594848633
    4. '```' → logprob: -8.752931594848633
    5. ' +' → logprob: -11.002931594848633
    6. '^' → logprob: -12.127931594848633
    7. '``' → logprob: -12.252931594848633
    8. ' ' → logprob: -12.252931594848633
    9. '7' → logprob: -12.502931594848633
    10. '`' → logprob: -13.377931594848633

Token 891: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.7697225252486533e-06
    2. '7' → logprob: -13.375003814697266
    3. '6' → logprob: -14.000003814697266
    4. '```' → logprob: -14.625003814697266
    5. ' ' → logprob: -14.875003814697266
    6. '``' → logprob: -16.000003814697266
    7. '(' → logprob: -16.812503814697266
    8. '4' → logprob: -17.125003814697266
    9. '+' → logprob: -17.500003814697266
    10. '
' → logprob: -17.500003814697266

Token 892: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.014170913025736809
    2. ' +' → logprob: -4.264171123504639
    3. '7' → logprob: -11.88917064666748
    4. '```' → logprob: -15.38917064666748
    5. ' ' → logprob: -16.264171600341797
    6. ')' → logprob: -16.639171600341797
    7. '   ' → logprob: -16.889171600341797
    8. ',' → logprob: -17.139171600341797
    9. ' ' → logprob: -17.514171600341797
    10. '[' → logprob: -17.639171600341797

Token 893: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -4.4894986785948277e-05
    2. ' ' → logprob: -10.250044822692871
    3. '9' → logprob: -11.750044822692871
    4. '+' → logprob: -15.000044822692871
    5. '   ' → logprob: -15.125044822692871
    6. '```' → logprob: -15.250044822692871
    7. '0' → logprob: -16.062545776367188
    8. '6' → logprob: -16.125045776367188
    9. '10' → logprob: -16.312545776367188
    10. '07' → logprob: -16.500045776367188

Token 894: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.1637164789135568e-05
    2. '9' → logprob: -11.625011444091797
    3. ' ' → logprob: -13.125011444091797
    4. '6' → logprob: -14.750011444091797
    5. '```' → logprob: -16.375011444091797
    6. '+' → logprob: -17.000011444091797
    7. '   ' → logprob: -17.125011444091797
    8. '
' → logprob: -17.125011444091797
    9. '07' → logprob: -17.312511444091797
    10. '4' → logprob: -17.500011444091797

Token 895: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.07923553884029388
    2. ')' → logprob: -2.579235553741455
    3. '))
' → logprob: -8.079235076904297
    4. ')
' → logprob: -11.079235076904297
    5. '       ' → logprob: -11.204235076904297
    6. ')))' → logprob: -12.204235076904297
    7. ')}' → logprob: -15.204235076904297
    8. '   ' → logprob: -15.329235076904297
    9. '));' → logprob: -15.829235076904297
    10. '])' → logprob: -15.954235076904297

Token 896: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2646690905094147
    2. 'res' → logprob: -2.764669179916382
    3. 'ans' → logprob: -3.889669179916382
    4. '#' → logprob: -4.014668941497803
    5. 'rs' → logprob: -4.014668941497803
    6. 'for' → logprob: -4.389668941497803
    7. 'ra' → logprob: -4.514668941497803
    8. 'r' → logprob: -4.639668941497803
    9. 'rl' → logprob: -5.264668941497803
    10. 'rr' → logprob: -5.264668941497803

Token 897: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.10468743741512299
    2. 'ans' → logprob: -3.479687452316284
    3. 'rs' → logprob: -4.479687213897705
    4. 'ret' → logprob: -4.604687213897705
    5. 'ra' → logprob: -4.729687213897705
    6. 'results' → logprob: -5.604687213897705
    7. 'r' → logprob: -5.854687213897705
    8. '#' (adapté à ' #') → logprob: -5.979687213897705
    9. '   ' → logprob: -5.979687213897705
    10. 'L' → logprob: -6.479687213897705

Token 898: ' Array' (ID: 4825)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.6766087412834167
    2. 'ans' → logprob: -3.0516088008880615
    3. 'rev' → logprob: -3.3016088008880615
    4. '#' → logprob: -3.4266088008880615
    5. 'r' → logprob: -3.8016088008880615
    6. 'ret' → logprob: -3.8016088008880615
    7. 'm' → logprob: -3.8016088008880615
    8. 'dp' → logprob: -4.051608562469482
    9. 'n' → logprob: -4.051608562469482
    10. 'ra' → logprob: -4.176608562469482

Token 899: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7567033171653748
    2. 'A' → logprob: -1.7567033767700195
    3. '=' → logprob: -2.7567033767700195
    4. 'a' → logprob: -3.0067033767700195
    5. 'res' → logprob: -3.8817033767700195
    6. 'f' → logprob: -3.8817033767700195
    7. 'dp' → logprob: -4.0067033767700195
    8. 'k' → logprob: -4.6317033767700195
    9. '=[' → logprob: -4.7567033767700195
    10. 'n' → logprob: -4.8817033767700195

Token 900: ' store' (ID: 4897)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'find' → logprob: -1.1368203163146973
    2. 'store' → logprob: -2.1368203163146973
    3. 'append' → logprob: -2.7618203163146973
    4. ' =' → logprob: -3.0118203163146973
    5. 'check' → logprob: -3.0118203163146973
    6. '=' → logprob: -3.2618203163146973
    7. 'n' → logprob: -3.2618203163146973
    8. 'max' → logprob: -3.7618203163146973
    9. 'len' → logprob: -3.8868203163146973
    10. 'import' → logprob: -4.136820316314697

Token 901: ' computed' (ID: 46716)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.3102740943431854
    2. 'ans' → logprob: -2.560274124145508
    3. 'dp' → logprob: -2.810274124145508
    4. 'results' → logprob: -3.310274124145508
    5. 'valid' → logprob: -3.935274124145508
    6. 'answers' → logprob: -4.685274124145508
    7. 'possible' → logprob: -4.810274124145508
    8. 'cnt' → logprob: -4.810274124145508
    9. 'ok' → logprob: -5.060274124145508
    10. 'A' → logprob: -5.185274124145508

Token 902: ' mask' (ID: 10910)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.037627935409546
    2. 'ans' → logprob: -2.287627935409546
    3. 'dp' → logprob: -3.037627935409546
    4. 'cnt' → logprob: -3.037627935409546
    5. 'rh' → logprob: -3.287627935409546
    6. 'rev' → logprob: -3.537627935409546
    7. 'ah' → logprob: -3.662627935409546
    8. 'n' → logprob: -3.787627935409546
    9. 'r' → logprob: -4.037628173828125
    10. 'h' → logprob: -4.162628173828125

Token 903: ' x' (ID: 1215)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mask' → logprob: -1.1173417568206787
    2. 'm' → logprob: -1.4923417568206787
    3. ' =' → logprob: -2.1173417568206787
    4. 'ms' → logprob: -2.7423417568206787
    5. '=' → logprob: -2.8673417568206787
    6. 'ans' → logprob: -3.8673417568206787
    7. 'mx' → logprob: -3.9923417568206787
    8. 'x' → logprob: -3.9923417568206787
    9. 'f' → logprob: -4.367341995239258
    10. 'mn' → logprob: -4.367341995239258

Token 904: ' for' (ID: 395)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.750228762626648
    2. '=' → logprob: -1.125228762626648
    3. ' =' → logprob: -1.625228762626648
    4. '   ' → logprob: -5.8752288818359375
    5. '=[' → logprob: -6.5002288818359375
    6. 'a' → logprob: -7.7502288818359375
    7. 'ans' → logprob: -7.8752288818359375
    8. 'mask' → logprob: -8.375228881835938
    9. '[' → logprob: -8.750228881835938
    10. '=[]
' → logprob: -9.375228881835938

Token 905: ' each' (ID: 2454)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.29964566230773926
    2. 'i' → logprob: -1.7996456623077393
    3. 'x' → logprob: -3.1746456623077393
    4. '_' → logprob: -4.42464542388916
    5. 'bit' → logprob: -5.04964542388916
    6. '0' → logprob: -5.17464542388916
    7. 'L' → logprob: -5.79964542388916
    8. 'range' → logprob: -5.92464542388916
    9. '(' → logprob: -6.04964542388916
    10. 'None' → logprob: -6.17464542388916

Token 906: ' shift' (ID: 12847)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03848757594823837
    2. 'k' → logprob: -3.538487672805786
    3. 'L' → logprob: -5.538487434387207
    4. ' i' → logprob: -6.288487434387207
    5. 'x' → logprob: -6.913487434387207
    6. 'bit' → logprob: -7.288487434387207
    7. '_i' → logprob: -8.038487434387207
    8. '_' → logprob: -8.538487434387207
    9. '```' → logprob: -8.913487434387207
    10. 'mask' → logprob: -10.538487434387207

Token 907: ' k' (ID: 372)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.05612257122993469
    2. ' =' → logprob: -3.5561225414276123
    3. '[' → logprob: -5.056122779846191
    4. '=' → logprob: -5.431122779846191
    5. 'mx' → logprob: -5.806122779846191
    6. ' x' → logprob: -5.931122779846191
    7. 'ans' → logprob: -6.181122779846191
    8. '   ' → logprob: -6.681122779846191
    9. 'res' → logprob: -6.806122779846191
    10. '=[' → logprob: -6.931122779846191

Token 908: ',' (ID: 11)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.06897890567779541
    2. ' x' → logprob: -4.318978786468506
    3. 'ans' → logprob: -4.568978786468506
    4. 'mask' → logprob: -4.943978786468506
    5. ' =' → logprob: -5.193978786468506
    6. 'res' → logprob: -5.193978786468506
    7. '   ' → logprob: -5.318978786468506
    8. 'arr' → logprob: -5.443978786468506
    9. 'mx' → logprob: -5.693978786468506
    10. '[' → logprob: -6.318978786468506

Token 909: ' None' (ID: 4662)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.15728169679641724
    2. ' x' → logprob: -2.7822816371917725
    3. '#' → logprob: -4.032281875610352
    4. 'ans' → logprob: -4.407281875610352
    5. 'res' → logprob: -4.657281875610352
    6. ' ans' → logprob: -4.657281875610352
    7. 'mask' → logprob: -4.907281875610352
    8. ' res' → logprob: -5.532281875610352
    9. '   ' → logprob: -5.657281875610352
    10. 'mx' → logprob: -6.032281875610352

Token 910: ' if' (ID: 538)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05529261380434036
    2. ' =' → logprob: -2.9302926063537598
    3. '[' → logprob: -8.805293083190918
    4. '=[' → logprob: -9.305293083190918
    5. '   ' → logprob: -9.680293083190918
    6. 'for' → logprob: -10.305293083190918
    7. 'x' → logprob: -11.805293083190918
    8. ' for' → logprob: -11.805293083190918
    9. 'k' → logprob: -11.930293083190918
    10. ',' → logprob: -11.930293083190918

Token 911: ' invalid' (ID: 15796)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.10651646554470062
    2. ' None' → logprob: -2.6065163612365723
    3. ' not' → logprob: -4.231516361236572
    4. 'k' → logprob: -5.481516361236572
    5. 'not' → logprob: -5.606516361236572
    6. 'x' → logprob: -6.231516361236572
    7. '[' → logprob: -7.231516361236572
    8. '[]' → logprob: -7.481516361236572
    9. ' k' → logprob: -7.481516361236572
    10. ' x' → logprob: -7.856516361236572

Token 912: '
' (ID: 198)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.13002024590969086
    2. 'mask' → logprob: -3.5050201416015625
    3. 'mx' → logprob: -3.7550201416015625
    4. 'res' → logprob: -4.2550201416015625
    5. 'ans' → logprob: -4.3800201416015625
    6. '[' → logprob: -4.7550201416015625
    7. 'ms' → logprob: -5.5050201416015625
    8. '[x' → logprob: -5.6300201416015625
    9. ' =' → logprob: -5.8800201416015625
    10. 'm' → logprob: -6.0050201416015625

Token 913: '   ' (ID: 271)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.22524265944957733
    2. ' x' → logprob: -2.8502426147460938
    3. ' =' → logprob: -3.1002426147460938
    4. 'mask' → logprob: -3.6002426147460938
    5. '   ' → logprob: -3.9752426147460938
    6. 'mx' → logprob: -4.725242614746094
    7. 'res' → logprob: -5.100242614746094
    8. 'm' → logprob: -5.350242614746094
    9. 'ans' → logprob: -5.475242614746094
    10. ' mask' → logprob: -5.725242614746094

Token 914: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.025664128363132477
    2. 'mx' → logprob: -4.775664329528809
    3. 'mask' → logprob: -5.900664329528809
    4. 'ans' → logprob: -5.900664329528809
    5. 'xx' → logprob: -6.900664329528809
    6. 'xs' → logprob: -7.025664329528809
    7. 'res' → logprob: -7.025664329528809
    8. 'ok' → logprob: -7.650664329528809
    9. 'ms' → logprob: -7.650664329528809
    10. 'nx' → logprob: -7.650664329528809

Token 915: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12694984674453735
    2. ' =' → logprob: -2.1269497871398926
    3. '=[' → logprob: -11.25195026397705
    4. '=[]' → logprob: -12.50195026397705
    5. 'x' → logprob: -13.12695026397705
    6. '   ' → logprob: -14.75195026397705
    7. ' ' → logprob: -14.75195026397705
    8. '[' → logprob: -15.25195026397705
    9. 's' → logprob: -15.25195026397705
    10. '＝' → logprob: -15.50195026397705

Token 916: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.022024456411600113
    2. ' [' → logprob: -4.522024631500244
    3. '[N' → logprob: -4.647024631500244
    4. '[n' → logprob: -7.147024631500244
    5. '[k' → logprob: -8.522024154663086
    6. '   ' → logprob: -8.772024154663086
    7. '[L' → logprob: -9.772024154663086
    8. '[-' → logprob: -10.147024154663086
    9. '[len' → logprob: -11.147024154663086
    10. '[x' → logprob: -11.147024154663086

Token 917: '0' (ID: 15)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0002933942887466401
    2. '0' → logprob: -9.375293731689453
    3. ' None' → logprob: -9.500293731689453
    4. '-' → logprob: -9.500293731689453
    5. '[' → logprob: -10.125293731689453
    6. '   ' → logprob: -11.375293731689453
    7. 'N' → logprob: -13.375293731689453
    8. '(None' → logprob: -13.500293731689453
    9. '[-' → logprob: -14.250293731689453
    10. 'False' → logprob: -14.250293731689453

Token 918: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004802126437425613
    2. ']*' → logprob: -5.754802227020264
    3. ']*(' → logprob: -6.754802227020264
    4. ' for' → logprob: -7.879802227020264
    5. 'for' → logprob: -9.629801750183105
    6. '   ' → logprob: -11.879801750183105
    7. ']+' → logprob: -12.629801750183105
    8. '*' → logprob: -14.129801750183105
    9. ' ]' → logprob: -14.379801750183105
    10. ',' → logprob: -14.754801750183105

Token 919: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11973007768392563
    2. ' for' → logprob: -3.119729995727539
    3. ']*' → logprob: -3.869729995727539
    4. '*' → logprob: -3.994729995727539
    5. ' *' → logprob: -4.494729995727539
    6. ']*(' → logprob: -4.619729995727539
    7. 'for' → logprob: -4.994729995727539
    8. '*(' → logprob: -7.119729995727539
    9. '*[' → logprob: -8.744729995727539
    10. '*N' → logprob: -8.994729995727539

Token 920: ' N' (ID: 478)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.5785706639289856
    2. 'N' → logprob: -0.8285706639289856
    3. '(L' → logprob: -6.82857084274292
    4. '(' → logprob: -6.82857084274292
    5. 'L' → logprob: -8.703570365905762
    6. ' (' → logprob: -8.828570365905762
    7. '(n' → logprob: -10.453570365905762
    8. ' N' → logprob: -10.703570365905762
    9. '((' → logprob: -10.703570365905762
    10. '   ' → logprob: -11.453570365905762

Token 921: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21215209364891052
    2. '
' → logprob: -2.7121520042419434
    3. 'x' → logprob: -3.0871520042419434
    4. ' for' → logprob: -3.7121520042419434
    5. '<|end|>' → logprob: -3.8371520042419434
    6. '[' → logprob: -4.712152004241943
    7. '#' → logprob: -4.712152004241943
    8. '   ' → logprob: -5.962152004241943
    9. 'import' → logprob: -6.712152004241943
    10. 'b' → logprob: -6.712152004241943

Token 922: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02860334888100624
    2. '   ' → logprob: -4.653603553771973
    3. ' for' → logprob: -4.653603553771973
    4. 'mask' → logprob: -6.528603553771973
    5. '#' → logprob: -6.653603553771973
    6. '```' → logprob: -6.903603553771973
    7. 'valid' → logprob: -7.278603553771973
    8. 'inv' → logprob: -7.403603553771973
    9. 'k' → logprob: -7.653603553771973
    10. 'i' → logprob: -7.653603553771973

Token 923: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02645042911171913
    2. 'rev' → logprob: -5.4014506340026855
    3. 'inv' → logprob: -5.4014506340026855
    4. 'mask' → logprob: -5.7764506340026855
    5. 'base' → logprob: -6.2764506340026855
    6. 'mod' → logprob: -6.4014506340026855
    7. 'p' → logprob: -7.0264506340026855
    8. '#' (adapté à ' #') → logprob: -7.0264506340026855
    9. 'pow' → logprob: -7.1514506340026855
    10. 'def' → logprob: -7.1514506340026855

Token 924: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01666189730167389
    2. 'def' → logprob: -5.641662120819092
    3. 'rev' → logprob: -5.891662120819092
    4. 'inv' → logprob: -6.391662120819092
    5. 'mask' → logprob: -6.516662120819092
    6. '#' → logprob: -6.891662120819092
    7. 'mod' → logprob: -7.266662120819092
    8. 'x' → logprob: -7.391662120819092
    9. 'pow' → logprob: -7.516662120819092
    10. 'pw' → logprob: -8.016661643981934

Token 925: ' each' (ID: 2454)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.09192494302988052
    2. 'i' → logprob: -2.4669249057769775
    3. ' k' → logprob: -7.216925144195557
    4. 'shift' → logprob: -7.841925144195557
    5. '_' → logprob: -8.341924667358398
    6. '_k' → logprob: -8.591924667358398
    7. 'r' → logprob: -8.716924667358398
    8. ' i' → logprob: -8.841924667358398
    9. 'j' → logprob: -8.966924667358398
    10. 'l' → logprob: -9.341924667358398

Token 926: ' bit' (ID: 3546)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.003883439116179943
    2. 'i' → logprob: -5.628883361816406
    3. ' k' → logprob: -8.503883361816406
    4. '_' → logprob: -10.253883361816406
    5. '_k' → logprob: -10.753883361816406
    6. '```' → logprob: -12.128883361816406
    7. ' i' → logprob: -12.503883361816406
    8. 'shift' → logprob: -13.128883361816406
    9. '__' → logprob: -13.503883361816406
    10. '_i' → logprob: -13.628883361816406

Token 927: ' position' (ID: 4010)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04755087196826935
    2. ' in' → logprob: -3.547550916671753
    3. 'in' → logprob: -5.047550678253174
    4. 'k' → logprob: -5.547550678253174
    5. 'for' → logprob: -5.922550678253174
    6. ' i' → logprob: -6.172550678253174
    7. ' for' → logprob: -7.172550678253174
    8. 'pos' → logprob: -7.547550678253174
    9. '```' → logprob: -8.547551155090332
    10. '_i' → logprob: -8.672551155090332

Token 928: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3695135116577148
    2. ' for' → logprob: -1.7445135116577148
    3. 'for' → logprob: -1.7445135116577148
    4. ':' → logprob: -1.8695135116577148
    5. ' in' → logprob: -1.9945135116577148
    6. 'in' → logprob: -3.619513511657715
    7. '       ' → logprob: -3.744513511657715
    8. 'i' → logprob: -3.869513511657715
    9. ' i' → logprob: -4.119513511657715
    10. ',' → logprob: -4.369513511657715

Token 929: ' check' (ID: 2371)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3697616755962372
    2. ' for' → logprob: -1.2447617053985596
    3. '   ' → logprob: -4.3697614669799805
    4. '       ' → logprob: -4.8697614669799805
    5. '           ' → logprob: -8.61976146697998
    6. 'x' → logprob: -8.74476146697998
    7. ' x' → logprob: -9.24476146697998
    8. '    ' → logprob: -9.86976146697998
    9. '	for' → logprob: -9.99476146697998
    10. '```' → logprob: -10.24476146697998

Token 930: ' for' (ID: 395)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.1066278219223022
    2. 'for' → logprob: -1.3566278219223022
    3. ' for' → logprob: -1.6066278219223022
    4. '   ' → logprob: -2.356627941131592
    5. ' k' → logprob: -3.856627941131592
    6. 'range' → logprob: -3.856627941131592
    7. 'i' → logprob: -4.231627941131592
    8. 'N' → logprob: -4.356627941131592
    9. '```' → logprob: -4.356627941131592
    10. ' range' → logprob: -5.106627941131592

Token 931: ' all' (ID: 722)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3871634304523468
    2. 'i' → logprob: -2.0121634006500244
    3. '0' → logprob: -2.7621634006500244
    4. ' k' → logprob: -3.1371634006500244
    5. 'N' → logprob: -3.6371634006500244
    6. 'range' → logprob: -4.6371636390686035
    7. ' i' → logprob: -4.7621636390686035
    8. '1' → logprob: -4.8871636390686035
    9. '```' → logprob: -5.2621636390686035
    10. 'j' → logprob: -5.6371636390686035

Token 932: ' shifts' (ID: 50424)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0021789311431348324
    2. 'i' → logprob: -6.627179145812988
    3. ' k' → logprob: -7.377179145812988
    4. '```' → logprob: -9.002179145812988
    5. '_k' → logprob: -10.752179145812988
    6. 'x' → logprob: -11.252179145812988
    7. 'N' → logprob: -11.752179145812988
    8. '   ' → logprob: -11.752179145812988
    9. 'j' → logprob: -11.877179145812988
    10. '
' → logprob: -12.002179145812988

Token 933: ' k' (ID: 372)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.0286316871643066
    2. ' for' → logprob: -1.2786316871643066
    3. '   ' → logprob: -2.0286316871643066
    4. '       ' → logprob: -2.0286316871643066
    5. 'for' → logprob: -3.4036316871643066
    6. '```' → logprob: -4.528631687164307
    7. 'in' → logprob: -4.653631687164307
    8. ':' → logprob: -4.653631687164307
    9. ' i' → logprob: -4.903631687164307
    10. ',' → logprob: -5.028631687164307

Token 934: ' whether' (ID: 5588)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8907359838485718
    2. ':' → logprob: -2.1407361030578613
    3. 'in' → logprob: -2.1407361030578613
    4. ' for' → logprob: -2.1407361030578613
    5. '   ' → logprob: -2.5157361030578613
    6. 'range' → logprob: -3.0157361030578613
    7. ' range' → logprob: -3.1407361030578613
    8. 'for' → logprob: -3.2657361030578613
    9. '       ' → logprob: -4.765736103057861
    10. ':
' → logprob: -5.140736103057861

Token 935: ' the' (ID: 290)
  Prédit: 'bh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bh' → logprob: -0.7115465402603149
    2. 'ah' → logprob: -1.961546540260315
    3. '(' → logprob: -2.2115464210510254
    4. 'i' → logprob: -3.4615464210510254
    5. 'k' → logprob: -3.7115464210510254
    6. '0' → logprob: -3.8365464210510254
    7. ' (' → logprob: -3.9615464210510254
    8. '(i' → logprob: -4.211546421051025
    9. '(k' → logprob: -4.336546421051025
    10. 'True' → logprob: -4.336546421051025

Token 936: ' rotated' (ID: 93819)
  Prédit: 'bh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bh' → logprob: -0.7653659582138062
    2. 'for' → logprob: -1.6403659582138062
    3. '```' → logprob: -1.6403659582138062
    4. 'i' → logprob: -3.7653660774230957
    5. 'ah' → logprob: -4.015366077423096
    6. ' for' → logprob: -4.765366077423096
    7. '   ' → logprob: -4.890366077423096
    8. 'b' → logprob: -4.890366077423096
    9. ' (' → logprob: -5.140366077423096
    10. '#' → logprob: -5.140366077423096

Token 937: ' XOR' (ID: 147209)
  Prédit: 'bh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bh' → logprob: -0.06058545783162117
    2. 'ah' → logprob: -3.8105854988098145
    3. '```' → logprob: -4.6855854988098145
    4. '   ' → logprob: -4.6855854988098145
    5. 'b' → logprob: -5.4355854988098145
    6. 'tb' → logprob: -5.6855854988098145
    7. 'for' → logprob: -5.6855854988098145
    8. ' bh' → logprob: -6.8105854988098145
    9. 'a' → logprob: -7.0605854988098145
    10. 'A' → logprob: -7.4355854988098145

Token 938: ' pattern' (ID: 8302)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9300938844680786
    2. 's' → logprob: -1.9300938844680786
    3. 'for' → logprob: -2.055093765258789
    4. 'A' → logprob: -2.805093765258789
    5. 'matches' → logprob: -3.180093765258789
    6. 'array' → logprob: -3.680093765258789
    7. ' for' → logprob: -4.055093765258789
    8. 'x' → logprob: -4.305093765258789
    9. 'ah' → logprob: -4.555093765258789
    10. 'a' → logprob: -4.680093765258789

Token 939: ' matches' (ID: 15248)
  Prédit: ' matches'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' matches' → logprob: -0.48153430223464966
    2. 'matches' → logprob: -1.2315342426300049
    3. ' for' → logprob: -3.606534242630005
    4. ' is' → logprob: -3.731534242630005
    5. 'for' → logprob: -4.481534481048584
    6. 'is' → logprob: -5.481534481048584
    7. 's' → logprob: -5.606534481048584
    8. ' can' → logprob: -5.856534481048584
    9. '_matches' → logprob: -6.231534481048584
    10. ' of' → logprob: -6.356534481048584

Token 940: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1229346990585327
    2. '   ' → logprob: -1.2479346990585327
    3. ' for' → logprob: -1.4979346990585327
    4. '```' → logprob: -2.4979348182678223
    5. '       ' → logprob: -2.9979348182678223
    6. 'range' → logprob: -4.997934818267822
    7. 'bh' → logprob: -5.747934818267822
    8. ' range' → logprob: -5.872934818267822
    9. 'ah' → logprob: -5.872934818267822
    10. '           ' → logprob: -5.997934818267822

Token 941: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.0450845956802368
    2. '       ' → logprob: -1.1700845956802368
    3. ' for' → logprob: -1.4200845956802368
    4. '   ' → logprob: -2.5450844764709473
    5. 'for' → logprob: -5.670084476470947
    6. ' ' → logprob: -5.920084476470947
    7. '    ' → logprob: -6.170084476470947
    8. '           ' → logprob: -6.295084476470947
    9. ' ```' → logprob: -6.295084476470947
    10. '<|end|>' → logprob: -6.295084476470947

Token 942: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5695583820343018
    2. '   ' → logprob: -1.5695583820343018
    3. '       ' → logprob: -1.9445583820343018
    4. '```' → logprob: -2.9445583820343018
    5. 'for' (adapté à ' for') → logprob: -3.5695583820343018
    6. '           ' → logprob: -7.694558143615723
    7. '	for' → logprob: -7.694558143615723
    8. '
' → logprob: -8.319558143615723
    9. '    ' → logprob: -8.569558143615723
    10. '``' → logprob: -8.694558143615723

Token 943: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.002180477138608694
    2. 'bit' → logprob: -7.002180576324463
    3. ' i' → logprob: -8.002180099487305
    4. 'j' → logprob: -8.127180099487305
    5. '_i' → logprob: -8.627180099487305
    6. 'k' → logprob: -8.627180099487305
    7. '_' → logprob: -9.252180099487305
    8. 'b' → logprob: -9.502180099487305
    9. 'L' → logprob: -11.002180099487305
    10. 'l' → logprob: -11.002180099487305

Token 944: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11308732628822327
    2. 'in' → logprob: -2.2380874156951904
    3. '   ' → logprob: -8.73808765411377
    4. ',' → logprob: -10.11308765411377
    5. '	in' → logprob: -10.61308765411377
    6. ' ' → logprob: -11.23808765411377
    7. '0' → logprob: -12.48808765411377
    8. '    ' → logprob: -12.61308765411377
    9. '_in' → logprob: -12.73808765411377
    10. ' i' → logprob: -13.11308765411377

Token 945: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.007637273985892534
    2. ' range' → logprob: -4.8826375007629395
    3. '0' → logprob: -10.632637023925781
    4. ' ' → logprob: -13.257637023925781
    5. '   ' → logprob: -13.257637023925781
    6. '(range' → logprob: -13.632637023925781
    7. '
' → logprob: -14.382637023925781
    8. 'r' → logprob: -15.007637023925781
    9. '	range' → logprob: -15.382637023925781
    10. '  ' → logprob: -15.632637023925781

Token 946: '(L' (ID: 11075)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.02089160867035389
    2. '(L' → logprob: -3.8958916664123535
    3. 'N' → logprob: -8.645891189575195
    4. '   ' → logprob: -9.895891189575195
    5. ' L' → logprob: -9.895891189575195
    6. '(' → logprob: -10.770891189575195
    7. '(N' → logprob: -11.145891189575195
    8. 'i' → logprob: -12.020891189575195
    9. '1' → logprob: -12.270891189575195
    10. '0' → logprob: -12.395891189575195

Token 947: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.01863728277385235
    2. '):' → logprob: -4.143637180328369
    3. '   ' → logprob: -6.643637180328369
    4. '+' → logprob: -7.893637180328369
    5. '       ' → logprob: -8.018637657165527
    6. '):
' → logprob: -8.018637657165527
    7. ':' → logprob: -9.143637657165527
    8. ':
' → logprob: -9.518637657165527
    9. ',' → logprob: -9.643637657165527
    10. '=' → logprob: -12.393637657165527

Token 948: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16739991307258606
    2. ' for' → logprob: -1.9173998832702637
    3. '```' → logprob: -5.417399883270264
    4. 'for' → logprob: -6.667399883270264
    5. '   ' → logprob: -7.792399883270264
    6. '           ' → logprob: -8.417400360107422
    7. '    ' → logprob: -9.042400360107422
    8. '	for' → logprob: -9.167400360107422
    9. '	' → logprob: -9.292400360107422
    10. ',' → logprob: -9.917400360107422

Token 949: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1265762895345688
    2. 'h' → logprob: -3.0015761852264404
    3. 'mod' → logprob: -3.8765761852264404
    4. '   ' → logprob: -4.7515764236450195
    5. 'ah' → logprob: -4.8765764236450195
    6. 'b' → logprob: -5.1265764236450195
    7. 'rh' → logprob: -5.1265764236450195
    8. 'base' → logprob: -5.6265764236450195
    9. 'a' → logprob: -5.7515764236450195
    10. 'bh' → logprob: -6.1265764236450195

Token 950: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.06875547021627426
    2. ' k' → logprob: -2.8187553882598877
    3. '0' → logprob: -5.193755626678467
    4. ' ' → logprob: -7.818755626678467
    5. 'i' → logprob: -7.943755626678467
    6. '(' → logprob: -8.693755149841309
    7. '1' → logprob: -9.693755149841309
    8. ' i' → logprob: -9.693755149841309
    9. 'N' → logprob: -10.193755149841309
    10. '(k' → logprob: -10.693755149841309

Token 951: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2031724750995636
    2. 'in' → logprob: -1.7031724452972412
    3. ' ' → logprob: -7.20317268371582
    4. '(' → logprob: -7.70317268371582
    5. '1' → logprob: -8.95317268371582
    6. '0' → logprob: -9.57817268371582
    7. '	in' → logprob: -9.95317268371582
    8. '   ' → logprob: -10.07817268371582
    9. ')' → logprob: -10.07817268371582
    10. ',' → logprob: -10.20317268371582

Token 952: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.000431861262768507
    2. ' range' → logprob: -7.750432014465332
    3. '0' → logprob: -14.250432014465332
    4. 'N' → logprob: -15.125432014465332
    5. '(range' → logprob: -15.250432014465332
    6. '	range' → logprob: -19.125431060791016
    7. 'rang' → logprob: -20.125431060791016
    8. ' ' → logprob: -20.500431060791016
    9. 'n' → logprob: -20.625431060791016
    10. '   ' → logprob: -20.875431060791016

Token 953: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -5.097437315271236e-05
    2. '(N' → logprob: -10.37505054473877
    3. '1' → logprob: -11.25005054473877
    4. '   ' → logprob: -12.62505054473877
    5. ' N' → logprob: -13.25005054473877
    6. 'i' → logprob: -14.25005054473877
    7. '	N' → logprob: -15.12505054473877
    8. '(' → logprob: -15.37505054473877
    9. '           ' → logprob: -16.000051498413086
    10. '0' → logprob: -16.125051498413086

Token 954: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.642128586769104
    2. '):' → logprob: -0.767128586769104
    3. '+' → logprob: -5.7671284675598145
    4. '       ' → logprob: -6.1421284675598145
    5. '   ' → logprob: -6.3921284675598145
    6. ',' → logprob: -6.3921284675598145
    7. ')' → logprob: -8.642128944396973
    8. ':' → logprob: -8.892128944396973
    9. ' +' → logprob: -9.142128944396973
    10. '           ' → logprob: -9.392128944396973

Token 955: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01068073883652687
    2. ' if' → logprob: -5.010680675506592
    3. '```' → logprob: -5.885680675506592
    4. 'if' → logprob: -7.260680675506592
    5. '               ' → logprob: -9.01068115234375
    6. '``' → logprob: -9.38568115234375
    7. ' s' → logprob: -10.01068115234375
    8. '#' → logprob: -10.13568115234375
    9. ' x' → logprob: -10.26068115234375
    10. 'x' → logprob: -10.76068115234375

Token 956: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20432958006858826
    2. 'v' → logprob: -3.579329490661621
    3. '           ' → logprob: -3.579329490661621
    4. 'val' → logprob: -3.829329490661621
    5. 'x' → logprob: -4.454329490661621
    6. 'a' → logprob: -4.454329490661621
    7. '       ' → logprob: -4.579329490661621
    8. 'b' → logprob: -4.829329490661621
    9. 'tb' → logprob: -4.829329490661621
    10. 'ok' → logprob: -5.079329490661621

Token 957: ' Rolling' (ID: 72538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4922875165939331
    2. 'a' → logprob: -3.1172876358032227
    3. 'val' → logprob: -3.1172876358032227
    4. 'v' → logprob: -3.2422876358032227
    5. 'cur' → logprob: -3.6172876358032227
    6. 'ha' → logprob: -3.6172876358032227
    7. 'ah' → logprob: -3.7422876358032227
    8. 'ai' → logprob: -3.8672876358032227
    9. 'h' → logprob: -3.9922876358032227
    10. 'ta' → logprob: -4.492287635803223

Token 958: ' hash' (ID: 10691)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.39972206950187683
    2. 'hash' → logprob: -1.1497220993041992
    3. '_hash' → logprob: -5.399722099304199
    4. 'calc' → logprob: -6.149722099304199
    5. '(h' → logprob: -6.399722099304199
    6. ' hash' → logprob: -6.899722099304199
    7. 'k' → logprob: -7.649722099304199
    8. '_h' → logprob: -7.774722099304199
    9. '(' → logprob: -8.0247220993042
    10. ' h' → logprob: -8.2747220993042

Token 959: ' for' (ID: 395)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7502957582473755
    2. 'bh' → logprob: -1.8752957582473755
    3. ' =' → logprob: -2.125295639038086
    4. 'calc' → logprob: -2.375295639038086
    5. 'ah' → logprob: -4.125295639038086
    6. '(' → logprob: -4.125295639038086
    7. 'diff' → logprob: -4.375295639038086
    8. 'def' → logprob: -4.375295639038086
    9. '_val' → logprob: -4.625295639038086
    10. 'b' → logprob: -4.875295639038086

Token 960: ' A' (ID: 355)
  Prédit: 'bh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bh' → logprob: -0.25007137656211853
    2. 'ah' → logprob: -1.625071406364441
    3. 'i' → logprob: -4.7500715255737305
    4. 'b' → logprob: -5.3750715255737305
    5. 'k' → logprob: -6.0000715255737305
    6. 'A' → logprob: -6.5000715255737305
    7. ' bh' → logprob: -6.5000715255737305
    8. ' ah' → logprob: -6.8750715255737305
    9. 'N' → logprob: -6.8750715255737305
    10. '   ' → logprob: -7.0000715255737305

Token 961: ''s' (ID: 885)
  Prédit: '.h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.h' → logprob: -0.7432916164398193
    2. 'h' → logprob: -1.6182916164398193
    3. '[k' → logprob: -2.7432916164398193
    4. '   ' → logprob: -2.8682916164398193
    5. '[i' → logprob: -3.2432916164398193
    6. '.calc' → logprob: -3.2432916164398193
    7. '(k' → logprob: -3.7432916164398193
    8. 'calc' → logprob: -3.8682916164398193
    9. '.k' → logprob: -4.118291854858398
    10. ')' → logprob: -4.743291854858398

Token 962: ' i' (ID: 575)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0486527681350708
    2. 'i' → logprob: -3.2986526489257812
    3. 'k' → logprob: -5.173652648925781
    4. 'ah' → logprob: -5.423652648925781
    5. '.h' → logprob: -8.673652648925781
    6. 'a' → logprob: -9.173652648925781
    7. ' ah' → logprob: -10.923652648925781
    8. '.k' → logprob: -11.048652648925781
    9. '[i' → logprob: -11.173652648925781
    10. '`' → logprob: -11.298652648925781

Token 963: '-th' (ID: 14928)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.27959731221199036
    2. '[i' → logprob: -2.029597282409668
    3. '][' → logprob: -3.154597282409668
    4. 'i' → logprob: -4.404597282409668
    5. '[h' → logprob: -5.154597282409668
    6. '#' → logprob: -5.279597282409668
    7. '```' → logprob: -5.279597282409668
    8. '[' → logprob: -5.404597282409668
    9. ',' → logprob: -5.529597282409668
    10. ''s' → logprob: -6.029597282409668

Token 964: ' bit' (ID: 3546)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.4399853050708771
    2. 'i' → logprob: -1.8149852752685547
    3. 'bits' → logprob: -2.0649852752685547
    4. 'k' → logprob: -3.4399852752685547
    5. 'bit' → logprob: -4.689985275268555
    6. '][' → logprob: -4.939985275268555
    7. '[i' → logprob: -5.564985275268555
    8. '_bits' → logprob: -5.564985275268555
    9. '   ' → logprob: -6.439985275268555
    10. ' bits' → logprob: -7.189985275268555

Token 965: ' after' (ID: 1934)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.530814528465271
    2. 'calc' → logprob: -1.905814528465271
    3. '=' → logprob: -2.0308146476745605
    4. '[i' → logprob: -2.1558146476745605
    5. '(N' → logprob: -2.9058146476745605
    6. '(i' → logprob: -2.9058146476745605
    7. 'ah' → logprob: -3.4058146476745605
    8. '[k' → logprob: -3.4058146476745605
    9. 'k' → logprob: -3.6558146476745605
    10. '(k' → logprob: -3.6558146476745605

Token 966: ' rotating' (ID: 65441)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.07047450542449951
    2. '(N' → logprob: -3.945474624633789
    3. '(k' → logprob: -4.445474624633789
    4. 'N' → logprob: -4.445474624633789
    5. 'i' → logprob: -4.820474624633789
    6. 'rot' → logprob: -5.445474624633789
    7. 'ah' → logprob: -5.945474624633789
    8. '(i' → logprob: -6.070474624633789
    9. 'shift' → logprob: -6.320474624633789
    10. 'rotation' → logprob: -6.320474624633789

Token 967: ' left' (ID: 3561)
  Prédit: 'ah'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ah' → logprob: -0.020104311406612396
    2. 'k' → logprob: -5.27010440826416
    3. 'i' → logprob: -5.89510440826416
    4. ' ah' → logprob: -6.14510440826416
    5. '(k' → logprob: -6.39510440826416
    6. '(i' → logprob: -6.64510440826416
    7. '   ' → logprob: -6.64510440826416
    8. '(' → logprob: -6.64510440826416
    9. 'a' → logprob: -6.77010440826416
    10. 'A' → logprob: -6.77010440826416

Token 968: ' by' (ID: 656)
  Prédit: 'ah'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ah' → logprob: -0.9028536081314087
    2. 'k' → logprob: -1.1528536081314087
    3. '(k' → logprob: -2.277853488922119
    4. '(i' → logprob: -2.777853488922119
    5. 'i' → logprob: -3.027853488922119
    6. '(N' → logprob: -4.402853488922119
    7. '(' → logprob: -4.902853488922119
    8. '   ' → logprob: -5.152853488922119
    9. '```' → logprob: -5.402853488922119
    10. ',' → logprob: -5.652853488922119

Token 969: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0034526491072028875
    2. '1' → logprob: -6.003452777862549
    3. '(N' → logprob: -8.12845230102539
    4. ' k' → logprob: -8.25345230102539
    5. 'N' → logprob: -8.62845230102539
    6. '(k' → logprob: -9.00345230102539
    7. '(' → logprob: -9.87845230102539
    8. ' (' → logprob: -10.50345230102539
    9. '`' → logprob: -11.62845230102539
    10. '((' → logprob: -11.87845230102539

Token 970: '
' (ID: 198)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5304583311080933
    2. '][' → logprob: -2.155458450317383
    3. '(N' → logprob: -2.530458450317383
    4. 'h' → logprob: -2.655458450317383
    5. '(i' → logprob: -2.655458450317383
    6. '(k' → logprob: -2.780458450317383
    7. ' =' → logprob: -2.905458450317383
    8. 'k' → logprob: -3.280458450317383
    9. '[k' → logprob: -3.280458450317383
    10. 'i' → logprob: -3.405458450317383

Token 971: '           ' (ID: 352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2660776376724243
    2. ' =' → logprob: -1.2660776376724243
    3. '           ' → logprob: -2.2660775184631348
    4. ' (' → logprob: -2.5160775184631348
    5. '=' → logprob: -3.5160775184631348
    6. '[' → logprob: -3.5160775184631348
    7. '(' → logprob: -3.6410775184631348
    8. ',' → logprob: -3.7660775184631348
    9. ' )' → logprob: -4.016077518463135
    10. ':' → logprob: -4.516077518463135

Token 972: ' l' (ID: 305)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.6512140035629272
    2. 'ah' → logprob: -1.6512140035629272
    3. 'h' → logprob: -1.9012140035629272
    4. '(' → logprob: -2.651214122772217
    5. 'a' → logprob: -2.651214122772217
    6. 'val' → logprob: -2.776214122772217
    7. 'cur' → logprob: -3.401214122772217
    8. 'tmp' → logprob: -3.526214122772217
    9. 'rot' → logprob: -3.776214122772217
    10. 'v' → logprob: -3.901214122772217

Token 973: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09445537626743317
    2. '=' → logprob: -2.9694554805755615
    3. 'h' → logprob: -4.219455242156982
    4. 'hash' → logprob: -4.594455242156982
    5. '_hash' → logprob: -5.969455242156982
    6. 'eft' → logprob: -6.594455242156982
    7. '_h' → logprob: -6.719455242156982
    8. 'ef' → logprob: -6.719455242156982
    9. 'hs' → logprob: -6.969455242156982
    10. ',' → logprob: -7.094455242156982

Token 974: ' ah' (ID: 5369)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.22209274768829346
    2. '(k' → logprob: -1.8470927476882935
    3. 'N' → logprob: -3.847092628479004
    4. '(N' → logprob: -4.097092628479004
    5. '0' → logprob: -6.347092628479004
    6. '(' → logprob: -7.597092628479004
    7. '((' → logprob: -8.597092628479004
    8. '           ' → logprob: -8.722092628479004
    9. '(A' → logprob: -8.972092628479004
    10. ' (' → logprob: -9.222092628479004

Token 975: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0013569057919085026
    2. 'i' → logprob: -6.626357078552246
    3. '[' → logprob: -11.501357078552246
    4. ',i' → logprob: -12.001357078552246
    5. 's' → logprob: -12.126357078552246
    6. '{i' → logprob: -13.626357078552246
    7. '][' → logprob: -13.751357078552246
    8. 'k' → logprob: -14.126357078552246
    9. '[I' → logprob: -14.126357078552246
    10. '```' → logprob: -14.126357078552246

Token 976: '].' (ID: 1651)
  Prédit: '.h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.h' → logprob: -0.5052018165588379
    2. '].' → logprob: -1.755201816558838
    3. '][' → logprob: -2.755201816558838
    4. '.l' → logprob: -2.880201816558838
    5. '.k' → logprob: -3.130201816558838
    6. '.r' → logprob: -3.505201816558838
    7. '.n' → logprob: -4.880201816558838
    8. '   ' → logprob: -5.505201816558838
    9. ']' → logprob: -5.880201816558838
    10. 'h' → logprob: -6.130201816558838

Token 977: 'calc' (ID: 49633)
  Prédit: 'calc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -1.1517960956552997e-05
    2. 'h' → logprob: -11.750011444091797
    3. '.calc' → logprob: -13.375011444091797
    4. '   ' → logprob: -13.875011444091797
    5. ' calc' → logprob: -15.250011444091797
    6. '
' → logprob: -15.250011444091797
    7. '```' → logprob: -15.625011444091797
    8. '       ' → logprob: -17.000011444091797
    9. '  ' → logprob: -17.000011444091797
    10. '(calc' → logprob: -17.250011444091797

Token 978: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.4537789821624756
    2. 'k' → logprob: -1.0787789821624756
    3. '(N' → logprob: -4.453779220581055
    4. '((' → logprob: -4.953779220581055
    5. '(' → logprob: -5.453779220581055
    6. '0' → logprob: -6.953779220581055
    7. 'N' → logprob: -7.328779220581055
    8. '1' → logprob: -9.578779220581055
    9. '   ' → logprob: -10.328779220581055
    10. ' (' → logprob: -10.578779220581055

Token 979: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008384553715586662
    2. ',k' → logprob: -5.383384704589844
    3. ',N' → logprob: -6.383384704589844
    4. ' ,' → logprob: -6.883384704589844
    5. '   ' → logprob: -7.383384704589844
    6. 'k' → logprob: -8.758384704589844
    7. ')' → logprob: -9.883384704589844
    8. '+' → logprob: -10.008384704589844
    9. 'N' → logprob: -10.633384704589844
    10. ' ' → logprob: -10.633384704589844

Token 980: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.2822663187980652
    2. 'k' → logprob: -1.40726637840271
    3. 'ah' → logprob: -7.282266139984131
    4. '           ' → logprob: -9.282266616821289
    5. 'len' → logprob: -9.657266616821289
    6. 'l' → logprob: -9.657266616821289
    7. 'Ah' → logprob: -9.782266616821289
    8. ' N' → logprob: -10.782266616821289
    9. '   ' → logprob: -11.157266616821289
    10. 'n' → logprob: -11.157266616821289

Token 981: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002101606223732233
    2. ')+' → logprob: -7.002101421356201
    3. ')
' → logprob: -8.00210189819336
    4. '+' → logprob: -8.00210189819336
    5. ' )' → logprob: -8.62710189819336
    6. ')*' → logprob: -9.00210189819336
    7. '   ' → logprob: -10.12710189819336
    8. '-' → logprob: -10.37710189819336
    9. ')-' → logprob: -10.37710189819336
    10. ' +' → logprob: -11.00210189819336

Token 982: '           ' (ID: 352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3327934741973877
    2. '<|end|>' → logprob: -1.7077934741973877
    3. ' -' → logprob: -3.2077934741973877
    4. ' *' → logprob: -3.9577934741973877
    5. ' +' → logprob: -4.707793235778809
    6. ' if' → logprob: -5.207793235778809
    7. '           ' → logprob: -5.207793235778809
    8. ' %' → logprob: -5.832793235778809
    9. '<|end|>' → logprob: -5.832793235778809
    10. '+' → logprob: -6.082793235778809

Token 983: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.359626829624176
    2. '(N' → logprob: -2.6096267700195312
    3. ' (' → logprob: -2.9846267700195312
    4. 'N' → logprob: -3.2346267700195312
    5. '(' → logprob: -3.6096267700195312
    6. '<|end|>' → logprob: -3.8596267700195312
    7. ' +' → logprob: -4.234626770019531
    8. 'l' → logprob: -4.359626770019531
    9. ' l' → logprob: -4.609626770019531
    10. '+' → logprob: -4.984626770019531

Token 984: ' Rolling' (ID: 72538)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.006484676618129015
    2. 'l' → logprob: -5.506484508514404
    3. 'if' → logprob: -7.131484508514404
    4. ' r' → logprob: -7.381484508514404
    5. 'print' → logprob: -9.256484985351562
    6. '           ' → logprob: -9.756484985351562
    7. 'h' → logprob: -9.756484985351562
    8. 'tmp' → logprob: -9.756484985351562
    9. 'left' → logprob: -9.881484985351562
    10. 'continue' → logprob: -10.006484985351562

Token 985: ' hash' (ID: 10691)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.19252470135688782
    2. 'hash' → logprob: -2.8175246715545654
    3. '(N' → logprob: -3.0675246715545654
    4. 'l' → logprob: -3.1925246715545654
    5. 'N' → logprob: -5.0675249099731445
    6. 'i' → logprob: -5.0675249099731445
    7. '0' → logprob: -5.3175249099731445
    8. 'h' → logprob: -6.3175249099731445
    9. '[N' → logprob: -6.4425249099731445
    10. '(k' → logprob: -6.8175249099731445

Token 986: ' for' (ID: 395)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.7302625775337219
    2. '(N' → logprob: -1.1052625179290771
    3. '(' → logprob: -2.480262517929077
    4. ' =' → logprob: -3.230262517929077
    5. '<|end|>' → logprob: -4.230262756347656
    6. '[N' → logprob: -4.855262756347656
    7. '=' → logprob: -5.105262756347656
    8. ' (' → logprob: -5.230262756347656
    9. 'k' → logprob: -5.355262756347656
    10. ',' → logprob: -5.730262756347656

Token 987: ' A' (ID: 355)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.8513412475585938
    2. '0' → logprob: -1.2263412475585938
    3. 'ah' → logprob: -1.3513412475585938
    4. 'k' → logprob: -4.226341247558594
    5. 'l' → logprob: -6.601341247558594
    6. '   ' → logprob: -7.226341247558594
    7. '(' → logprob: -7.351341247558594
    8. ' ah' → logprob: -7.851341247558594
    9. '(N' → logprob: -7.976341247558594
    10. 'a' → logprob: -8.288841247558594

Token 988: ''s' (ID: 885)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003136552404612303
    2. 'i' → logprob: -8.750313758850098
    3. '[' → logprob: -10.000313758850098
    4. '```' → logprob: -10.000313758850098
    5. '(i' → logprob: -11.000313758850098
    6. '{i' → logprob: -11.250313758850098
    7. '   ' → logprob: -11.625313758850098
    8. ',i' → logprob: -11.750313758850098
    9. 's' → logprob: -12.250313758850098
    10. ')' → logprob: -13.125313758850098

Token 989: ' i' (ID: 575)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.021953320130705833
    2. '(' → logprob: -3.8969533443450928
    3. '(k' → logprob: -7.396953105926514
    4. 'N' → logprob: -8.771953582763672
    5. 'i' → logprob: -8.896953582763672
    6. 'k' → logprob: -9.146953582763672
    7. '(i' → logprob: -9.146953582763672
    8. '(N' → logprob: -9.146953582763672
    9. 'calc' → logprob: -10.146953582763672
    10. 'ah' → logprob: -10.521953582763672

Token 990: '-th' (ID: 14928)
  Prédit: '.calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.calc' → logprob: -0.05061943084001541
    2. 'calc' → logprob: -3.55061936378479
    3. '[i' → logprob: -4.050619602203369
    4. ' calc' → logprob: -7.050619602203369
    5. '_calc' → logprob: -7.925619602203369
    6. '.' → logprob: -8.050619125366211
    7. '].' → logprob: -8.175619125366211
    8. 'h' → logprob: -8.425619125366211
    9. '][' → logprob: -8.550619125366211
    10. '[' → logprob: -8.550619125366211

Token 991: ' bit' (ID: 3546)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.2603192925453186
    2. 'k' → logprob: -2.010319232940674
    3. 'N' → logprob: -3.760319232940674
    4. ')' → logprob: -4.635319232940674
    5. '   ' → logprob: -4.635319232940674
    6. '[i' → logprob: -4.760319232940674
    7. '(calc' → logprob: -5.010319232940674
    8. 'i' → logprob: -5.260319232940674
    9. ' calc' → logprob: -5.260319232940674
    10. '.calc' → logprob: -5.510319232940674

Token 992: ' before' (ID: 2254)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7989137768745422
    2. '(k' → logprob: -0.9239137768745422
    3. '(N' → logprob: -3.1739137172698975
    4. '0' → logprob: -3.2989137172698975
    5. '<|end|>' → logprob: -3.5489137172698975
    6. '[' → logprob: -4.298913955688477
    7. '[k' → logprob: -5.173913955688477
    8. ')' → logprob: -5.173913955688477
    9. '[N' → logprob: -5.798913955688477
    10. 'k' → logprob: -6.048913955688477

Token 993: ' k' (ID: 372)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05744234099984169
    2. 'k' → logprob: -3.1824424266815186
    3. 'N' → logprob: -4.5574421882629395
    4. '(' → logprob: -6.3074421882629395
    5. '(k' → logprob: -7.1824421882629395
    6. ' ' → logprob: -7.5574421882629395
    7. 'l' → logprob: -8.682442665100098
    8. '(N' → logprob: -8.807442665100098
    9. '```' → logprob: -9.182442665100098
    10. ' N' → logprob: -9.557442665100098

Token 994: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4530211687088013
    2. '<|end|>' → logprob: -1.4530211687088013
    3. '[k' → logprob: -2.3280210494995117
    4. '(k' → logprob: -2.7030210494995117
    5. ' +' → logprob: -3.0780210494995117
    6. 's' → logprob: -3.0780210494995117
    7. '```' → logprob: -3.4530210494995117
    8. '+' → logprob: -3.5780210494995117
    9. '   ' → logprob: -3.7030210494995117
    10. ',' → logprob: -3.7030210494995117

Token 995: '           ' (ID: 352)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.2169890403747559
    2. '-' → logprob: -1.8419890403747559
    3. ' +' → logprob: -1.9669890403747559
    4. '[' → logprob: -2.216989040374756
    5. ' -' → logprob: -2.716989040374756
    6. ')' → logprob: -3.341989040374756
    7. '+k' → logprob: -3.466989040374756
    8. '[k' → logprob: -3.591989040374756
    9. ',' → logprob: -4.091989040374756
    10. ']' → logprob: -4.341989040374756

Token 996: ' r' (ID: 428)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1695907711982727
    2. 'N' → logprob: -2.669590711593628
    3. '(' → logprob: -3.419590711593628
    4. '(k' → logprob: -3.669590711593628
    5. '(N' → logprob: -4.419590950012207
    6. 'k' → logprob: -4.419590950012207
    7. '[N' → logprob: -6.919590950012207
    8. '[' → logprob: -7.169590950012207
    9. 'l' → logprob: -7.669590950012207
    10. '           ' → logprob: -7.669590950012207

Token 997: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7137631177902222
    2. '=' → logprob: -1.2137631177902222
    3. '[k' → logprob: -2.5887632369995117
    4. '=k' → logprob: -3.3387632369995117
    5. '(k' → logprob: -3.5887632369995117
    6. '[r' → logprob: -3.5887632369995117
    7. '=r' → logprob: -4.588763236999512
    8. ']' → logprob: -4.963763236999512
    9. '(r' → logprob: -5.463763236999512
    10. 's' → logprob: -5.588763236999512

Token 998: ' ah' (ID: 5369)
  Prédit: 'ah'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ah' → logprob: -0.04154093936085701
    2. '(' → logprob: -3.6665408611297607
    3. ' ah' → logprob: -4.79154109954834
    4. '0' → logprob: -5.16654109954834
    5. '(k' → logprob: -8.16654109954834
    6. '(N' → logprob: -8.16654109954834
    7. ' (' → logprob: -8.54154109954834
    8. 'N' → logprob: -9.29154109954834
    9. 'k' → logprob: -9.66654109954834
    10. 'ahs' → logprob: -10.41654109954834

Token 999: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0002534720697440207
    2. '[' → logprob: -9.125253677368164
    3. 'i' → logprob: -9.125253677368164
    4. '{i' → logprob: -11.125253677368164
    5. '(i' → logprob: -11.750253677368164
    6. '```' → logprob: -12.125253677368164
    7. '<|end|>' → logprob: -12.375253677368164
    8. ' i' → logprob: -13.375253677368164
    9. ',i' → logprob: -15.000253677368164
    10. '[user' → logprob: -15.500253677368164

Token 1000: '].' (ID: 1651)
  Prédit: '.calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.calc' → logprob: -0.0035664502065628767
    2. '.' → logprob: -6.378566265106201
    3. ').' → logprob: -7.503566265106201
    4. '].' → logprob: -7.878566265106201
    5. '   ' → logprob: -8.12856674194336
    6. '[i' → logprob: -8.62856674194336
    7. ' .' → logprob: -9.12856674194336
    8. '[' → logprob: -9.50356674194336
    9. '.calculate' → logprob: -9.62856674194336
    10. '```' → logprob: -9.75356674194336

Token 1001: 'calc' (ID: 49633)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5261795520782471
    2. 'calc' → logprob: -0.9011795520782471
    3. 'k' → logprob: -6.151179313659668
    4. 'N' → logprob: -8.026179313659668
    5. '(calc' → logprob: -8.901179313659668
    6. '(' → logprob: -9.526179313659668
    7. ' calc' → logprob: -9.651179313659668
    8. '```' → logprob: -9.776179313659668
    9. '(k' → logprob: -10.151179313659668
    10. '.calc' → logprob: -10.151179313659668

Token 1002: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6931828856468201
    2. '0' → logprob: -0.6931828856468201
    3. ' ' → logprob: -11.693182945251465
    4. '<|end|>' → logprob: -11.693182945251465
    5. '```' → logprob: -11.943182945251465
    6. 'k' → logprob: -12.818182945251465
    7. '   ' → logprob: -13.568182945251465
    8. ' (' → logprob: -13.568182945251465
    9. '[' → logprob: -13.818182945251465
    10. '(k' → logprob: -14.068182945251465

Token 1003: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.700132997939363e-05
    2. ' ' → logprob: -11.750017166137695
    3. '(' → logprob: -11.875017166137695
    4. '```' → logprob: -14.250017166137695
    5. '   ' → logprob: -14.750017166137695
    6. '[' → logprob: -15.375017166137695
    7. ')' → logprob: -15.937517166137695
    8. '<|end|>' → logprob: -16.062517166137695
    9. '۰' → logprob: -16.375017166137695
    10. '       ' → logprob: -16.500017166137695

Token 1004: ',' (ID: 11)
  Prédit: '+k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+k' → logprob: -1.0910956859588623
    2. 'k' → logprob: -1.4660956859588623
    3. ',k' → logprob: -1.7160956859588623
    4. ',' → logprob: -2.0910956859588623
    5. ')' → logprob: -2.7160956859588623
    6. ' +' → logprob: -3.5910956859588623
    7. '+' → logprob: -4.216095924377441
    8. '[k' → logprob: -4.216095924377441
    9. '(k' → logprob: -6.966095924377441
    10. '*k' → logprob: -7.341095924377441

Token 1005: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -3.953082341467962e-05
    2. ' k' → logprob: -10.625039100646973
    3. '<|end|>' → logprob: -11.250039100646973
    4. '{k' → logprob: -14.250039100646973
    5. '	k' → logprob: -14.750039100646973
    6. '           ' → logprob: -15.625039100646973
    7. 'n' → logprob: -15.625039100646973
    8. '```' → logprob: -16.25004005432129
    9. '       ' → logprob: -16.25004005432129
    10. '0' → logprob: -16.37504005432129

Token 1006: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004170873435214162
    2. ' )' → logprob: -9.00041675567627
    3. ')+' → logprob: -9.50041675567627
    4. '+' → logprob: -9.75041675567627
    5. ')
' → logprob: -10.12541675567627
    6. ')*' → logprob: -10.50041675567627
    7. ' +' → logprob: -10.62541675567627
    8. '           ' → logprob: -11.25041675567627
    9. '   ' → logprob: -11.25041675567627
    10. '       ' → logprob: -12.37541675567627

Token 1007: '           ' (ID: 352)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.8850290179252625
    2. '<|end|>' → logprob: -1.3850290775299072
    3. '           ' → logprob: -2.5100290775299072
    4. '+' → logprob: -2.6350290775299072
    5. ')' → logprob: -2.7600290775299072
    6. ' *' → logprob: -3.1350290775299072
    7. '*' → logprob: -4.760028839111328
    8. '       ' → logprob: -4.885028839111328
    9. ' ^' → logprob: -5.260028839111328
    10. '   ' → logprob: -5.260028839111328

Token 1008: ' if' (ID: 538)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.38948866724967957
    2. '(' → logprob: -2.764488697052002
    3. ')' → logprob: -2.764488697052002
    4. '           ' → logprob: -3.014488697052002
    5. '<|end|>' → logprob: -3.639488697052002
    6. '    ' → logprob: -4.389488697052002
    7. ' +' → logprob: -4.389488697052002
    8. '=' → logprob: -4.389488697052002
    9. '   ' → logprob: -4.639488697052002
    10. ' ' → logprob: -4.639488697052002

Token 1009: ' x' (ID: 1215)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.2623242437839508
    2. '(l' → logprob: -3.012324333190918
    3. 'r' → logprob: -3.137324333190918
    4. ' (' → logprob: -3.387324333190918
    5. ' l' → logprob: -3.512324333190918
    6. 'ah' → logprob: -3.637324333190918
    7. ' ah' → logprob: -4.387324333190918
    8. '(r' → logprob: -5.137324333190918
    9. 'k' → logprob: -5.262324333190918
    10. '(N' → logprob: -5.387324333190918

Token 1010: '[k' (ID: 14298)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2257828712463379
    2. '[k' → logprob: -1.600782871246338
    3. ' [' → logprob: -9.47578239440918
    4. '[' → logprob: -9.60078239440918
    5. '[x' → logprob: -9.60078239440918
    6. 'i' → logprob: -10.60078239440918
    7. '==' → logprob: -10.72578239440918
    8. '```' → logprob: -10.72578239440918
    9. 'k' → logprob: -11.60078239440918
    10. '
' → logprob: -11.72578239440918

Token 1011: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -1.0142076015472412
    2. ']==' → logprob: -1.2642076015472412
    3. '[' → logprob: -2.264207601547241
    4. ']' → logprob: -2.514207601547241
    5. '[i' → logprob: -2.889207601547241
    6. '[k' → logprob: -3.514207601547241
    7. ' ==' → logprob: -3.639207601547241
    8. '!=' → logprob: -4.26420783996582
    9. '][' → logprob: -4.51420783996582
    10. ']!=' → logprob: -5.01420783996582

Token 1012: ' is' (ID: 382)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2490723580121994
    2. '!=' → logprob: -2.624072313308716
    3. ' is' → logprob: -3.499072313308716
    4. ' ==' → logprob: -3.499072313308716
    5. '|' → logprob: -3.624072313308716
    6. '^' → logprob: -4.124072551727295
    7. 'is' → logprob: -4.624072551727295
    8. ' ^=' → logprob: -4.624072551727295
    9. '&' → logprob: -5.124072551727295
    10. ' |=' → logprob: -5.374072551727295

Token 1013: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.03120398335158825
    2. ' None' → logprob: -3.9062039852142334
    3. '0' → logprob: -4.656203746795654
    4. 'not' → logprob: -7.281203746795654
    5. '-' → logprob: -8.781204223632812
    6. ' not' → logprob: -9.281204223632812
    7. 'Not' → logprob: -10.406204223632812
    8. '=None' → logprob: -10.656204223632812
    9. '_None' → logprob: -10.781204223632812
    10. '   ' → logprob: -10.781204223632812

Token 1014: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6610705256462097
    2. ' or' → logprob: -1.6610705852508545
    3. ':' → logprob: -2.0360705852508545
    4. ':
' → logprob: -2.6610705852508545
    5. '==' → logprob: -3.9110705852508545
    6. '=' → logprob: -4.036070346832275
    7. '           ' → logprob: -4.161070346832275
    8. ' =' → logprob: -4.536070346832275
    9. ' and' → logprob: -5.036070346832275
    10. ' ==' → logprob: -5.411070346832275

Token 1015: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8936033248901367
    2. ' =' → logprob: -1.8936033248901367
    3. '                               ' → logprob: -2.6436033248901367
    4. '[' → logprob: -3.0186033248901367
    5. '<|end|>' → logprob: -3.0186033248901367
    6. '            ' → logprob: -3.2686033248901367
    7. '                ' → logprob: -3.3936033248901367
    8. '=' → logprob: -3.6436033248901367
    9. ':' → logprob: -3.8936033248901367
    10. ')' → logprob: -4.143603324890137

Token 1016: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.34453678131103516
    2. 'continue' (adapté à ' continue') → logprob: -1.8445367813110352
    3. ' continue' → logprob: -2.344536781311035
    4. '                   ' → logprob: -3.594536781311035
    5. '                               ' → logprob: -5.219536781311035
    6. '                       ' → logprob: -6.469536781311035
    7. '```' → logprob: -6.469536781311035
    8. '                           ' → logprob: -7.719536781311035
    9. '           ' → logprob: -7.969536781311035
    10. '	continue' → logprob: -8.469536781311035

Token 1017: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007364541292190552
    2. ' if' → logprob: -5.882364749908447
    3. '=' → logprob: -7.382364749908447
    4. '```' → logprob: -7.382364749908447
    5. '
' → logprob: -7.632364749908447
    6. ' =' → logprob: -8.007364273071289
    7. '            
' → logprob: -8.132364273071289
    8. 'if' → logprob: -8.257364273071289
    9. '               ' → logprob: -8.257364273071289
    10. '<|end|>' → logprob: -8.257364273071289

Token 1018: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009956886060535908
    2. '
' → logprob: -4.7599568367004395
    3. '            
' → logprob: -7.7599568367004395
    4. '```' → logprob: -8.259957313537598
    5. 'if' → logprob: -9.134957313537598
    6. '               ' → logprob: -9.259957313537598
    7. ' if' → logprob: -9.384957313537598
    8. '       ' → logprob: -10.009957313537598
    9. '=' → logprob: -10.259957313537598
    10. '==' → logprob: -10.509957313537598

Token 1019: ' Already' (ID: 72560)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06014072149991989
    2. 'if' → logprob: -4.185140609741211
    3. '               ' → logprob: -4.435140609741211
    4. 'continue' → logprob: -4.560140609741211
    5. '```' → logprob: -4.810140609741211
    6. '       ' → logprob: -5.685140609741211
    7. ' if' → logprob: -6.060140609741211
    8. ' continue' → logprob: -6.435140609741211
    9. '                   ' → logprob: -6.560140609741211
    10. '+' → logprob: -7.185140609741211

Token 1020: ' invalid' (ID: 15796)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.325825572013855
    2. '```' → logprob: -1.700825572013855
    3. 'False' → logprob: -2.7008256912231445
    4. 'True' → logprob: -4.5758256912231445
    5. 'invalid' → logprob: -5.0758256912231445
    6. 'continue' → logprob: -5.5758256912231445
    7. 'found' → logprob: -6.3258256912231445
    8. ' None' → logprob: -6.5758256912231445
    9. '``' → logprob: -6.7008256912231445
    10. '
' → logprob: -6.8258256912231445

Token 1021: 'ated' (ID: 780)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016199536621570587
    2. '<|end|>' → logprob: -7.501619815826416
    3. '            
' → logprob: -8.001620292663574
    4. '
' → logprob: -8.251620292663574
    5. ',' → logprob: -9.626620292663574
    6. ' if' → logprob: -9.751620292663574
    7. '```' → logprob: -9.751620292663574
    8. '               ' → logprob: -10.001620292663574
    9. '       ' → logprob: -10.251620292663574
    10. '=' → logprob: -10.376620292663574

Token 1022: ' this' (ID: 495)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012840766459703445
    2. '<|end|>' → logprob: -4.887840747833252
    3. '```' → logprob: -6.012840747833252
    4. '               ' → logprob: -7.387840747833252
    5. ')' → logprob: -7.512840747833252
    6. '       ' → logprob: -7.762840747833252
    7. '+' → logprob: -8.88784122467041
    8. ' if' → logprob: -9.13784122467041
    9. '...' → logprob: -9.51284122467041
    10. '<|end|>' → logprob: -9.63784122467041

Token 1023: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6420010924339294
    2. 'token' → logprob: -2.267001152038574
    3. '[k' → logprob: -2.517001152038574
    4. ' k' → logprob: -2.892001152038574
    5. 'x' → logprob: -3.142001152038574
    6. ' for' → logprob: -3.642001152038574
    7. '```' → logprob: -3.767001152038574
    8. '
' → logprob: -3.892001152038574
    9. ' token' → logprob: -3.892001152038574
    10. 'position' → logprob: -4.517001152038574

Token 1024: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007293546572327614
    2. '<|end|>' → logprob: -5.007293701171875
    3. '            
' → logprob: -8.632293701171875
    4. ')' → logprob: -9.757293701171875
    5. '<|end|>' → logprob: -9.757293701171875
    6. '               ' → logprob: -10.007293701171875
    7. '       ' → logprob: -11.007293701171875
    8. ',' → logprob: -11.007293701171875
    9. '[' → logprob: -11.132293701171875
    10. '```' → logprob: -11.132293701171875

Token 1025: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01122324075549841
    2. ' if' → logprob: -5.511223316192627
    3. '       ' → logprob: -6.636223316192627
    4. '+' → logprob: -6.636223316192627
    5. 'if' → logprob: -6.886223316192627
    6. '<|end|>' → logprob: -6.886223316192627
    7. '```' → logprob: -7.636223316192627
    8. '               ' → logprob: -7.636223316192627
    9. '=' → logprob: -8.511222839355469
    10. '            ' → logprob: -8.636222839355469

Token 1026: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2982593774795532
    2. 'if' → logprob: -2.1732592582702637
    3. ' if' → logprob: -2.2982592582702637
    4. 'tmp' → logprob: -5.048259258270264
    5. ' s' → logprob: -5.423259258270264
    6. 's' → logprob: -5.423259258270264
    7. ' l' → logprob: -6.173259258270264
    8. 'l' → logprob: -6.173259258270264
    9. 'x' → logprob: -6.298259258270264
    10. 't' → logprob: -6.298259258270264

Token 1027: ' Condition' (ID: 30255)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.35497862100601196
    2. 'h' → logprob: -2.979978561401367
    3. 'val' → logprob: -2.979978561401367
    4. 'tmp' → logprob: -3.479978561401367
    5. 'v' → logprob: -3.854978561401367
    6. 'cur' → logprob: -4.604978561401367
    7. 'x' → logprob: -4.729978561401367
    8. 'l' → logprob: -4.729978561401367
    9. 'nr' → logprob: -4.729978561401367
    10. ' if' → logprob: -5.104978561401367

Token 1028: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.335938572883606
    2. ' =' → logprob: -1.460938572883606
    3. '==' → logprob: -1.585938572883606
    4. '           ' → logprob: -2.2109384536743164
    5. ' ==' → logprob: -2.3359384536743164
    6. 'if' → logprob: -3.4609384536743164
    7. ':' → logprob: -4.085938453674316
    8. ' if' → logprob: -4.585938453674316
    9. '```' → logprob: -4.710938453674316
    10. '               ' → logprob: -5.460938453674316

Token 1029: '1' (ID: 16)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7768277525901794
    2. '=' → logprob: -1.2768278121948242
    3. '           ' → logprob: -2.526827812194824
    4. ':' → logprob: -3.151827812194824
    5. 'if' → logprob: -3.401827812194824
    6. ' ==' → logprob: -3.651827812194824
    7. 'for' → logprob: -4.026827812194824
    8. ' =' → logprob: -4.151827812194824
    9. '```' → logprob: -4.401827812194824
    10. 'and' → logprob: -4.901827812194824

Token 1030: ':' (ID: 25)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0911141633987427
    2. '==' → logprob: -1.0911141633987427
    3. ' ==' → logprob: -2.591114044189453
    4. '=' → logprob: -2.591114044189453
    5. 'if' → logprob: -2.591114044189453
    6. ' if' → logprob: -3.466114044189453
    7. ' =' → logprob: -3.591114044189453
    8. ' l' → logprob: -5.341114044189453
    9. ' and' → logprob: -5.341114044189453
    10. 'l' → logprob: -5.591114044189453

Token 1031: ' Rot' (ID: 20416)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.213409662246704
    2. 'ah' → logprob: -1.463409662246704
    3. ' l' → logprob: -1.713409662246704
    4. ' ah' → logprob: -2.588409662246704
    5. ' (' → logprob: -2.838409662246704
    6. '```' → logprob: -3.963409662246704
    7. ' x' → logprob: -4.088409423828125
    8. 'bh' → logprob: -4.088409423828125
    9. 'x' → logprob: -4.213409423828125
    10. '(l' → logprob: -4.338409423828125

Token 1032: 'ated' (ID: 780)
  Prédit: 'ate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.7002227306365967
    2. 'ated' → logprob: -0.8252227306365967
    3. '(k' → logprob: -3.4502227306365967
    4. '```' → logprob: -4.825222969055176
    5. '(x' → logprob: -5.200222969055176
    6. 'x' → logprob: -6.075222969055176
    7. '       ' → logprob: -6.075222969055176
    8. '((' → logprob: -6.325222969055176
    9. 'ates' → logprob: -6.700222969055176
    10. '           ' → logprob: -6.700222969055176

Token 1033: ' pattern' (ID: 8302)
  Prédit: 'ah'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ah' → logprob: -1.1417423486709595
    2. 'r' → logprob: -1.7667423486709595
    3. 'l' → logprob: -2.01674222946167
    4. '(k' → logprob: -2.01674222946167
    5. 'h' → logprob: -2.39174222946167
    6. 'k' → logprob: -3.26674222946167
    7. '(' → logprob: -3.76674222946167
    8. '(r' → logprob: -4.26674222946167
    9. '(l' → logprob: -4.39174222946167
    10. ' (' → logprob: -4.64174222946167

Token 1034: ' matches' (ID: 15248)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6584267616271973
    2. ' ==' → logprob: -2.0334267616271973
    3. '(l' → logprob: -2.2834267616271973
    4. '=' → logprob: -2.9084267616271973
    5. ' =' → logprob: -3.2834267616271973
    6. 'l' → logprob: -3.4084267616271973
    7. '(k' → logprob: -3.4084267616271973
    8. '(' → logprob: -3.9084267616271973
    9. '   ' → logprob: -4.158426761627197
    10. '(h' → logprob: -5.283426761627197

Token 1035: ' inverse' (ID: 53743)
  Prédit: ' bh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bh' → logprob: -0.8688824772834778
    2. 'bh' → logprob: -0.9938824772834778
    3. ' (' → logprob: -2.993882417678833
    4. ' ah' → logprob: -3.493882417678833
    5. 'ah' → logprob: -3.618882417678833
    6. '==' → logprob: -3.743882417678833
    7. ' ==' → logprob: -3.993882417678833
    8. '```' → logprob: -3.993882417678833
    9. '(' → logprob: -4.993882656097412
    10. ' if' → logprob: -5.368882656097412

Token 1036: ' of' (ID: 328)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.779959499835968
    2. '==' → logprob: -1.2799594402313232
    3. ' of' → logprob: -3.1549594402313232
    4. '(r' → logprob: -3.5299594402313232
    5. '(l' → logprob: -3.7799594402313232
    6. ' or' → logprob: -3.7799594402313232
    7. '(k' → logprob: -4.029959678649902
    8. '(' → logprob: -4.279959678649902
    9. ' =' → logprob: -4.529959678649902
    10. ':' → logprob: -4.654959678649902

Token 1037: ' B' (ID: 418)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.40372133255004883
    2. 'bh' → logprob: -1.1537213325500488
    3. 'tb' → logprob: -4.153721332550049
    4. '```' → logprob: -7.903721332550049
    5. ' b' → logprob: -8.15372085571289
    6. ' bh' → logprob: -9.15372085571289
    7. '   ' → logprob: -10.02872085571289
    8. ' tb' → logprob: -10.27872085571289
    9. '`' → logprob: -10.77872085571289
    10. 't' → logprob: -11.02872085571289

Token 1038: '
' (ID: 198)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(k' → logprob: -1.3109381198883057
    2. ' ==' → logprob: -1.4359381198883057
    3. '==' → logprob: -1.5609381198883057
    4. '[k' → logprob: -3.0609381198883057
    5. 'bh' → logprob: -3.4359381198883057
    6. '(' → logprob: -3.8109381198883057
    7. '(i' → logprob: -4.185937881469727
    8. 'b' → logprob: -4.185937881469727
    9. '   ' → logprob: -4.310937881469727
    10. '(r' → logprob: -4.310937881469727

Token 1039: '           ' (ID: 352)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5049591660499573
    2. '==' → logprob: -1.5049591064453125
    3. '           ' → logprob: -3.1299591064453125
    4. '```' → logprob: -3.2549591064453125
    5. ' !=' → logprob: -3.6299591064453125
    6. ' or' → logprob: -4.3799591064453125
    7. ' =' → logprob: -4.5049591064453125
    8. ' and' → logprob: -4.8799591064453125
    9. '=' → logprob: -5.5049591064453125
    10. '                           ' → logprob: -5.6299591064453125

Token 1040: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4779967963695526
    2. '           ' → logprob: -1.727996826171875
    3. ' if' → logprob: -1.852996826171875
    4. 'l' → logprob: -3.977996826171875
    5. ' l' → logprob: -4.977996826171875
    6. 'bh' → logprob: -5.102996826171875
    7. '```' → logprob: -5.227996826171875
    8. '               ' → logprob: -6.602996826171875
    9. ' (' → logprob: -6.727996826171875
    10. ' x' → logprob: -7.102996826171875

Token 1041: ' l' (ID: 305)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5945096611976624
    2. 'bh' → logprob: -0.9695096611976624
    3. ' bh' → logprob: -3.5945096015930176
    4. ' b' → logprob: -3.7195096015930176
    5. '(b' → logprob: -4.594509601593018
    6. '   ' → logprob: -5.969509601593018
    7. 'x' → logprob: -6.469509601593018
    8. 'l' → logprob: -7.719509601593018
    9. ' x' → logprob: -8.094510078430176
    10. ' (' → logprob: -8.219510078430176

Token 1042: ' ==' (ID: 951)
  Prédit: ' ^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ^' → logprob: -0.27118852734565735
    2. ' ==' → logprob: -2.396188497543335
    3. '^' → logprob: -2.521188497543335
    4. '==' → logprob: -3.146188497543335
    5. ' !=' → logprob: -4.771188735961914
    6. ' +' → logprob: -5.896188735961914
    7. ')' → logprob: -6.021188735961914
    8. '+' → logprob: -6.271188735961914
    9. '!=' → logprob: -6.771188735961914
    10. ')^' → logprob: -7.146188735961914

Token 1043: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0028602739330381155
    2. ' b' → logprob: -6.002860069274902
    3. '(b' → logprob: -8.377860069274902
    4. 'bh' → logprob: -10.252860069274902
    5. '           ' → logprob: -10.377860069274902
    6. '(' → logprob: -10.377860069274902
    7. '   ' → logprob: -10.752860069274902
    8. '       ' → logprob: -11.627860069274902
    9. ' (' → logprob: -12.252860069274902
    10. '               ' → logprob: -13.127860069274902

Token 1044: 'nh' (ID: 5380)
  Prédit: 'nh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nh' → logprob: -0.008588925935328007
    2. 'h' → logprob: -5.508588790893555
    3. 'n' → logprob: -5.883588790893555
    4. '[i' → logprob: -6.383588790893555
    5. 'i' → logprob: -12.258588790893555
    6. ' nh' → logprob: -12.258588790893555
    7. '[n' → logprob: -12.633588790893555
    8. '```' → logprob: -13.133588790893555
    9. '[h' → logprob: -13.133588790893555
    10. 'nb' → logprob: -13.258588790893555

Token 1045: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.4974866644479334e-05
    2. '[' → logprob: -12.000015258789062
    3. '[k' → logprob: -12.750015258789062
    4. ' [' → logprob: -12.875015258789062
    5. '[I' → logprob: -14.500015258789062
    6. '[j' → logprob: -14.750015258789062
    7. '```' → logprob: -14.750015258789062
    8. 'i' → logprob: -15.125015258789062
    9. ')[' → logprob: -15.375015258789062
    10. '][' → logprob: -15.500015258789062

Token 1046: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.10758281499147415
    2. '.calc' → logprob: -3.2325828075408936
    3. ').' → logprob: -3.6075828075408936
    4. '[i' → logprob: -4.857583045959473
    5. '.k' → logprob: -5.107583045959473
    6. '[k' → logprob: -5.357583045959473
    7. '.h' → logprob: -5.357583045959473
    8. '][' → logprob: -5.482583045959473
    9. '   ' → logprob: -5.982583045959473
    10. ']' → logprob: -7.357583045959473

Token 1047: 'calc' (ID: 49633)
  Prédit: '.calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.calc' → logprob: -0.4741702079772949
    2. 'calc' → logprob: -0.9741702079772949
    3. ' calc' → logprob: -9.974170684814453
    4. 'h' → logprob: -11.099170684814453
    5. '   ' → logprob: -12.099170684814453
    6. '(calc' → logprob: -12.474170684814453
    7. ' .' → logprob: -12.599170684814453
    8. '.' → logprob: -12.599170684814453
    9. ' ' → logprob: -12.724170684814453
    10. '```' → logprob: -13.099170684814453

Token 1048: '(' (ID: 7)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09694135934114456
    2. '(' → logprob: -2.9719414710998535
    3. 'k' → logprob: -3.4719414710998535
    4. '(N' → logprob: -5.2219414710998535
    5. '(k' → logprob: -5.8469414710998535
    6. 'N' → logprob: -6.3469414710998535
    7. ' ' → logprob: -11.221940994262695
    8. '1' → logprob: -11.596940994262695
    9. 'r' → logprob: -11.721940994262695
    10. '(r' → logprob: -11.971940994262695

Token 1049: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00036679807817563415
    2. 'k' → logprob: -8.125367164611816
    3. ' ' → logprob: -10.500367164611816
    4. 'N' → logprob: -10.625367164611816
    5. '   ' → logprob: -11.250367164611816
    6. '(' → logprob: -13.125367164611816
    7. '           ' → logprob: -14.625367164611816
    8. '       ' → logprob: -14.812867164611816
    9. ')' → logprob: -15.000367164611816
    10. ' k' → logprob: -15.187867164611816

Token 1050: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0705467239022255
    2. ',k' → logprob: -2.6955466270446777
    3. ',N' → logprob: -8.070547103881836
    4. ' ,' → logprob: -8.320547103881836
    5. '           ' → logprob: -11.445547103881836
    6. '   ' → logprob: -11.820547103881836
    7. ',n' → logprob: -12.195547103881836
    8. ',len' → logprob: -12.570547103881836
    9. '```' → logprob: -12.695547103881836
    10. 'k' → logprob: -12.945547103881836

Token 1051: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.4974866644479334e-05
    2. ' N' → logprob: -11.500015258789062
    3. '(N' → logprob: -12.750015258789062
    4. '   ' → logprob: -13.625015258789062
    5. '	N' → logprob: -15.750015258789062
    6. 'r' → logprob: -15.875015258789062
    7. '{' → logprob: -16.000015258789062
    8. ' ' → logprob: -16.250015258789062
    9. '[N' → logprob: -17.125015258789062
    10. '<N' → logprob: -17.125015258789062

Token 1052: '-k' (ID: 10897)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00437766732648015
    2. '           ' → logprob: -6.254377841949463
    3. ' and' → logprob: -7.379377841949463
    4. '-' → logprob: -7.504377841949463
    5. '):' → logprob: -8.254377365112305
    6. 'and' → logprob: -8.629377365112305
    7. '       ' → logprob: -8.629377365112305
    8. ' -' → logprob: -9.254377365112305
    9. ' )' → logprob: -9.254377365112305
    10. ')-' → logprob: -9.629377365112305

Token 1053: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002898666774854064
    2. '           ' → logprob: -7.377898693084717
    3. ' )' → logprob: -7.377898693084717
    4. '):' → logprob: -7.502898693084717
    5. '):
' → logprob: -7.502898693084717
    6. '-' → logprob: -8.252898216247559
    7. ' and' → logprob: -9.502898216247559
    8. ' -' → logprob: -9.877898216247559
    9. '       ' → logprob: -11.002898216247559
    10. '               ' → logprob: -11.127898216247559

Token 1054: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.020845141261816025
    2. 'and' → logprob: -3.8958451747894287
    3. '           ' → logprob: -8.895845413208008
    4. ' or' → logprob: -9.645845413208008
    5. ')' → logprob: -10.145845413208008
    6. '       ' → logprob: -11.770845413208008
    7. '          ' → logprob: -11.895845413208008
    8. '<|end|>' → logprob: -11.895845413208008
    9. ':' → logprob: -12.145845413208008
    10. '        ' → logprob: -12.270845413208008

Token 1055: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.38787174224853516
    2. ' r' → logprob: -1.1378717422485352
    3. '   ' → logprob: -8.762871742248535
    4. '           ' → logprob: -9.137871742248535
    5. 'b' → logprob: -9.387871742248535
    6. 'tb' → logprob: -9.512871742248535
    7. ' ' → logprob: -9.637871742248535
    8. 'x' → logprob: -9.762871742248535
    9. 'bh' → logprob: -10.137871742248535
    10. '```' → logprob: -10.387871742248535

Token 1056: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.09794633090496063
    2. ' ==' → logprob: -2.4729464054107666
    3. ')==' → logprob: -5.7229461669921875
    4. '[' → logprob: -6.4729461669921875
    5. ']==' → logprob: -6.9729461669921875
    6. '[i' → logprob: -6.9729461669921875
    7. '```' → logprob: -7.0979461669921875
    8. '==
' → logprob: -7.8479461669921875
    9. ')' → logprob: -7.9729461669921875
    10. '==(' → logprob: -9.097946166992188

Token 1057: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.06145023554563522
    2. ' b' → logprob: -3.436450242996216
    3. 'bh' → logprob: -3.686450242996216
    4. 'bn' → logprob: -6.436450004577637
    5. ' bh' → logprob: -7.686450004577637
    6. '(b' → logprob: -9.061450004577637
    7. ' ' → logprob: -10.436450004577637
    8. ' bn' → logprob: -10.936450004577637
    9. '(' → logprob: -11.311450004577637
    10. '   ' → logprob: -11.561450004577637

Token 1058: 'nh' (ID: 5380)
  Prédit: 'nh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nh' → logprob: -0.06274440884590149
    2. 'bh' → logprob: -3.687744379043579
    3. 'h' → logprob: -3.812744379043579
    4. '[i' → logprob: -4.437744617462158
    5. 'n' → logprob: -7.312744617462158
    6. '(i' → logprob: -8.187744140625
    7. 'ah' → logprob: -8.437744140625
    8. 'b' → logprob: -8.687744140625
    9. 'hn' → logprob: -9.187744140625
    10. '   ' → logprob: -9.562744140625

Token 1059: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.786196975852363e-05
    2. 'i' → logprob: -11.375038146972656
    3. '```' → logprob: -11.375038146972656
    4. '[' → logprob: -12.500038146972656
    5. '[n' → logprob: -12.625038146972656
    6. 'b' → logprob: -12.875038146972656
    7. '[b' → logprob: -13.625038146972656
    8. '<|end|>' → logprob: -13.750038146972656
    9. '(i' → logprob: -14.250038146972656
    10. 'n' → logprob: -14.500038146972656

Token 1060: '].' (ID: 1651)
  Prédit: '.calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.calc' → logprob: -0.33399930596351624
    2. '[i' → logprob: -1.3339992761611938
    3. '```' → logprob: -4.833999156951904
    4. '(i' → logprob: -5.458999156951904
    5. '].' → logprob: -6.333999156951904
    6. '.i' → logprob: -6.458999156951904
    7. '[' → logprob: -6.958999156951904
    8. '.' → logprob: -6.958999156951904
    9. ').' → logprob: -7.083999156951904
    10. 'i' → logprob: -8.333999633789062

Token 1061: 'calc' (ID: 49633)
  Prédit: 'calc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.0029270683880895376
    2. '.calc' → logprob: -5.877927303314209
    3. '```' → logprob: -9.25292682647705
    4. ' calc' → logprob: -10.75292682647705
    5. '
' → logprob: -14.12792682647705
    6. '``' → logprob: -14.25292682647705
    7. '...' → logprob: -14.37792682647705
    8. '(calc' → logprob: -14.50292682647705
    9. 'h' → logprob: -14.62792682647705
    10. '`' → logprob: -15.25292682647705

Token 1062: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.1838078498840332
    2. 'N' → logprob: -1.8088078498840332
    3. '[N' → logprob: -5.683807849884033
    4. '0' → logprob: -8.058807373046875
    5. '(' → logprob: -8.058807373046875
    6. 'b' → logprob: -12.433807373046875
    7. '10' → logprob: -12.558807373046875
    8. '[' → logprob: -13.183807373046875
    9. ' N' → logprob: -13.433807373046875
    10. '1' → logprob: -13.558807373046875

Token 1063: '-k' (ID: 10897)
  Prédit: '-k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-k' → logprob: -0.0022825265768915415
    2. ' -' → logprob: -6.127282619476318
    3. 'k' → logprob: -9.62728214263916
    4. 'N' → logprob: -11.12728214263916
    5. '-' → logprob: -11.25228214263916
    6. '-N' → logprob: -13.12728214263916
    7. ' ' → logprob: -14.87728214263916
    8. '-n' → logprob: -15.25228214263916
    9. '```' → logprob: -15.25228214263916
    10. '   ' → logprob: -16.127283096313477

Token 1064: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0038180106785148382
    2. ',N' → logprob: -5.628818035125732
    3. ' ,' → logprob: -8.753817558288574
    4. ')' → logprob: -10.503817558288574
    5. 'N' → logprob: -12.253817558288574
    6. ',
' → logprob: -12.378817558288574
    7. '   ' → logprob: -12.503817558288574
    8. ' ' → logprob: -12.503817558288574
    9. ',n' → logprob: -12.753817558288574
    10. '),' → logprob: -13.128817558288574

Token 1065: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.9027791495318525e-05
    2. ' N' → logprob: -11.375019073486328
    3. 'None' → logprob: -12.375019073486328
    4. '   ' → logprob: -14.125019073486328
    5. ')' → logprob: -14.375019073486328
    6. ' ' → logprob: -14.625019073486328
    7. '```' → logprob: -14.625019073486328
    8. '10' → logprob: -16.000019073486328
    9. ' ' → logprob: -16.625019073486328
    10. '  ' → logprob: -16.625019073486328

Token 1066: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4795599579811096
    2. '):' → logprob: -1.3545598983764648
    3. ')' → logprob: -2.104559898376465
    4. '           ' → logprob: -8.104559898376465
    5. '):
' → logprob: -8.604559898376465
    6. '):

' → logprob: -8.979559898376465
    7. ':' → logprob: -8.979559898376465
    8. ':
' → logprob: -10.354559898376465
    9. ''):
' → logprob: -10.479559898376465
    10. '       ' → logprob: -10.604559898376465

Token 1067: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7565723061561584
    2. '               ' → logprob: -1.1315722465515137
    3. '                               ' → logprob: -2.3815722465515137
    4. '                       ' → logprob: -3.7565722465515137
    5. '                           ' → logprob: -3.8815722465515137
    6. ':
' → logprob: -3.8815722465515137
    7. '```' → logprob: -4.256572246551514
    8. ' and' → logprob: -4.756572246551514
    9. '<|end|>' → logprob: -5.506572246551514
    10. '                   ' → logprob: -5.506572246551514

Token 1068: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.03901178017258644
    2. '                   ' → logprob: -4.0390119552612305
    3. '               ' → logprob: -4.2890119552612305
    4. ' x' → logprob: -5.4140119552612305
    5. 'if' → logprob: -6.7890119552612305
    6. '```' → logprob: -7.2890119552612305
    7. '                       ' → logprob: -8.16401195526123
    8. '           ' → logprob: -8.66401195526123
    9. 'continue' → logprob: -9.53901195526123
    10. ' if' → logprob: -10.28901195526123

Token 1069: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -5.512236498361744e-07
    2. 'k' → logprob: -15.750000953674316
    3. '```' → logprob: -16.25
    4. '[i' → logprob: -16.75
    5. '[' → logprob: -17.125
    6. '           ' → logprob: -17.25
    7. ' [' → logprob: -17.5
    8. '=k' → logprob: -17.875
    9. '[
' → logprob: -18.5
    10. '[token' → logprob: -18.625

Token 1070: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10887110978364944
    2. '[k' → logprob: -3.1088712215423584
    3. ' =' → logprob: -3.6088712215423584
    4. ' ^=' → logprob: -4.108870983123779
    5. '^' → logprob: -4.608870983123779
    6. '=None' → logprob: -5.983870983123779
    7. '=k' → logprob: -7.233870983123779
    8. ']' → logprob: -7.733870983123779
    9. '[' → logprob: -7.733870983123779
    10. ' |=' → logprob: -8.733871459960938

Token 1071: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4209292531013489
    2. '^' → logprob: -1.670929193496704
    3. ' ^=' → logprob: -2.295929193496704
    4. ' =' → logprob: -3.170929193496704
    5. '[k' → logprob: -5.295929431915283
    6. '=None' → logprob: -6.045929431915283
    7. '|' → logprob: -6.170929431915283
    8. '=k' → logprob: -6.545929431915283
    9. ' |=' → logprob: -6.670929431915283
    10. '+=' → logprob: -9.045928955078125

Token 1072: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.25195640325546265
    2. '(' → logprob: -1.5019564628601074
    3. '0' → logprob: -10.75195598602295
    4. ' (' → logprob: -12.37695598602295
    5. '((' → logprob: -14.50195598602295
    6. ' ' → logprob: -14.50195598602295
    7. '2' → logprob: -15.37695598602295
    8. '   ' → logprob: -15.37695598602295
    9. 'pow' → logprob: -15.50195598602295
    10. '(pow' → logprob: -16.751956939697266

Token 1073: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.386919230222702
    2. '(' → logprob: -1.1369192600250244
    3. '0' → logprob: -10.386919021606445
    4. ' (' → logprob: -11.886919021606445
    5. '((' → logprob: -12.261919021606445
    6. '2' → logprob: -12.761919021606445
    7. ' ' → logprob: -13.886919021606445
    8. '(i' → logprob: -14.261919021606445
    9. 'pow' → logprob: -14.886919021606445
    10. '   ' → logprob: -15.511919021606445

Token 1074: ' <<' (ID: 2256)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.9732658267021179
    2. '           ' → logprob: -1.2232658863067627
    3. ' else' → logprob: -1.5982658863067627
    4. '<|end|>' → logprob: -2.3482658863067627
    5. '               ' → logprob: -4.348265647888184
    6. 'elif' → logprob: -5.098265647888184
    7. '<|end|>' → logprob: -6.223265647888184
    8. '                   ' → logprob: -6.723265647888184
    9. '       ' → logprob: -6.723265647888184
    10. ')' → logprob: -7.473265647888184

Token 1075: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -6.630610641877865e-06
    2. ' i' → logprob: -12.000006675720215
    3. '```' → logprob: -15.750006675720215
    4. '`' → logprob: -16.1250057220459
    5. '(i' → logprob: -16.3750057220459
    6. '(' → logprob: -16.8750057220459
    7. '<|end|>' → logprob: -17.2500057220459
    8. '	i' → logprob: -17.7500057220459
    9. '
' → logprob: -18.0000057220459
    10. 'user' → logprob: -18.5000057220459

Token 1076: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08030971139669418
    2. '<|end|>' → logprob: -3.5803096294403076
    3. 'else' → logprob: -3.8303096294403076
    4. '               ' → logprob: -4.455309867858887
    5. ' else' → logprob: -4.955309867858887
    6. '		' → logprob: -5.830309867858887
    7. 'elif' → logprob: -6.580309867858887
    8. '                   ' → logprob: -7.455309867858887
    9. '                           ' → logprob: -7.830309867858887
    10. '<|end|>' → logprob: -7.830309867858887

Token 1077: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13636083900928497
    2. 'else' → logprob: -2.1363608837127686
    3. 'elif' → logprob: -5.2613606452941895
    4. '               ' → logprob: -6.0113606452941895
    5. ' else' → logprob: -6.5113606452941895
    6. '                   ' → logprob: -9.636361122131348
    7. '<|end|>' → logprob: -9.761361122131348
    8. '                       ' → logprob: -10.386361122131348
    9. '       ' → logprob: -10.636361122131348
    10. '		' → logprob: -11.011361122131348

Token 1078: ' Set' (ID: 3957)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7067441940307617
    2. 'continue' → logprob: -1.5817441940307617
    3. 'else' → logprob: -1.8317441940307617
    4. 'elif' → logprob: -2.5817441940307617
    5. ' continue' → logprob: -3.5817441940307617
    6. 'x' → logprob: -4.706744194030762
    7. '               ' → logprob: -4.831744194030762
    8. ' else' → logprob: -4.831744194030762
    9. '```' → logprob: -5.581744194030762
    10. '                   ' → logprob: -6.706744194030762

Token 1079: ' this' (ID: 495)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4239002466201782
    2. '(' → logprob: -1.5489002466201782
    3. '1' → logprob: -3.0489001274108887
    4. ' (' → logprob: -3.4239001274108887
    5. ' i' → logprob: -3.6739001274108887
    6. '(i' → logprob: -4.173900127410889
    7. '```' → logprob: -5.173900127410889
    8. 'k' → logprob: -5.548900127410889
    9. 'bit' → logprob: -7.298900127410889
    10. ' ' → logprob: -7.423900127410889

Token 1080: ' bit' (ID: 3546)
  Prédit: ' bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bit' → logprob: -0.5428080558776855
    2. 'bit' → logprob: -0.9178080558776855
    3. '```' → logprob: -4.7928080558776855
    4. 'k' → logprob: -5.6678080558776855
    5. ' i' → logprob: -5.6678080558776855
    6. 'i' → logprob: -5.9178080558776855
    7. '|' → logprob: -8.042808532714844
    8. ' k' → logprob: -8.042808532714844
    9. '-bit' → logprob: -9.042808532714844
    10. '<|end|>' → logprob: -9.042808532714844

Token 1081: ' in' (ID: 306)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14259742200374603
    2. '<|end|>' → logprob: -3.1425974369049072
    3. ' else' → logprob: -3.6425974369049072
    4. 'else' → logprob: -3.6425974369049072
    5. '       ' → logprob: -4.517597198486328
    6. 'continue' → logprob: -4.767597198486328
    7. '               ' → logprob: -5.267597198486328
    8. '<|end|>' → logprob: -5.392597198486328
    9. ' continue' → logprob: -6.017597198486328
    10. '```' → logprob: -6.517597198486328

Token 1082: ' candidate' (ID: 17098)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.8624639324116288e-06
    2. ' x' → logprob: -13.750001907348633
    3. '```' → logprob: -14.875001907348633
    4. 'k' → logprob: -15.000001907348633
    5. '`' → logprob: -18.000001907348633
    6. '           ' → logprob: -18.250001907348633
    7. '   ' → logprob: -18.625001907348633
    8. '       ' → logprob: -19.750001907348633
    9. '``' → logprob: -20.125001907348633
    10. '               ' → logprob: -20.375001907348633

Token 1083: ' mask' (ID: 10910)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07990556210279465
    2. '<|end|>' → logprob: -2.7049055099487305
    3. ' x' → logprob: -5.3299055099487305
    4. 'mask' → logprob: -5.8299055099487305
    5. '           ' → logprob: -7.8299055099487305
    6. ' mask' → logprob: -7.9549055099487305
    7. 'value' → logprob: -8.45490550994873
    8. '<|end|>' → logprob: -8.45490550994873
    9. '```' → logprob: -8.70490550994873
    10. 'token' → logprob: -9.32990550994873

Token 1084: ' x' (ID: 1215)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3280625641345978
    2. 'else' → logprob: -1.5780625343322754
    3. ' else' → logprob: -3.3280625343322754
    4. 'elif' → logprob: -4.328062534332275
    5. '               ' → logprob: -4.953062534332275
    6. '<|end|>' → logprob: -5.328062534332275
    7. '       ' → logprob: -5.953062534332275
    8. '```' → logprob: -6.203062534332275
    9. '
' → logprob: -6.953062534332275
    10. '                   ' → logprob: -7.078062534332275

Token 1085: '[k' (ID: 14298)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006470817606896162
    2. 'else' → logprob: -6.131470680236816
    3. '               ' → logprob: -6.506470680236816
    4. '<|end|>' → logprob: -6.631470680236816
    5. 'elif' → logprob: -7.756470680236816
    6. ' else' → logprob: -7.756470680236816
    7. '       ' → logprob: -8.756470680236816
    8. '		' → logprob: -9.756470680236816
    9. '.' → logprob: -9.881470680236816
    10. '```' → logprob: -9.881470680236816

Token 1086: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02667737752199173
    2. '           ' → logprob: -4.27667760848999
    3. '<|end|>' → logprob: -4.65167760848999
    4. '<|end|>' → logprob: -6.77667760848999
    5. ']' → logprob: -7.52667760848999
    6. '')' → logprob: -8.151677131652832
    7. ')]' → logprob: -8.526677131652832
    8. '               ' → logprob: -8.901677131652832
    9. '       ' → logprob: -9.026677131652832
    10. ')
' → logprob: -9.526677131652832

Token 1087: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2356368750333786
    2. 'else' → logprob: -1.735636830329895
    3. '               ' → logprob: -4.3606367111206055
    4. 'elif' → logprob: -5.1106367111206055
    5. ' else' → logprob: -5.3606367111206055
    6. '                           ' → logprob: -6.3606367111206055
    7. '                               ' → logprob: -6.4856367111206055
    8. '                   ' → logprob: -6.7356367111206055
    9. '```' → logprob: -6.8606367111206055
    10. '                       ' → logprob: -6.9856367111206055

Token 1088: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21559275686740875
    2. 'else' → logprob: -1.9655927419662476
    3. 'elif' → logprob: -2.965592861175537
    4. ' else' → logprob: -6.340592861175537
    5. ' elif' → logprob: -7.590592861175537
    6. '               ' → logprob: -10.465592384338379
    7. '       ' → logprob: -11.465592384338379
    8. '		' → logprob: -11.965592384338379
    9. '```' → logprob: -12.340592384338379
    10. '   ' → logprob: -12.465592384338379

Token 1089: ' Condition' (ID: 30255)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.11585354059934616
    2. 'else' → logprob: -2.6158535480499268
    3. '           ' → logprob: -3.3658535480499268
    4. ' elif' → logprob: -6.990853309631348
    5. ' else' → logprob: -8.115853309631348
    6. '       ' → logprob: -8.365853309631348
    7. '               ' → logprob: -8.740853309631348
    8. 'el' → logprob: -9.240853309631348
    9. 'if' → logprob: -10.990853309631348
    10. '                   ' → logprob: -11.990853309631348

Token 1090: ' ' (ID: 220)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2055407613515854
    2. '```' → logprob: -2.330540657043457
    3. '1' → logprob: -3.705540657043457
    4. '=' → logprob: -4.455540657043457
    5. ' :' → logprob: -4.580540657043457
    6. '<|end|>' → logprob: -4.705540657043457
    7. ' =' → logprob: -4.955540657043457
    8. ' ' → logprob: -5.455540657043457
    9. '==' → logprob: -5.830540657043457
    10. ' ==' → logprob: -5.955540657043457

Token 1091: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.17437393963336945
    2. '1' → logprob: -2.1743738651275635
    3. '0' → logprob: -4.174374103546143
    4. '```' → logprob: -4.174374103546143
    5. ':' → logprob: -4.924374103546143
    6. '=' → logprob: -5.549374103546143
    7. '3' → logprob: -6.049374103546143
    8. ' ' → logprob: -7.174374103546143
    9. '
' → logprob: -8.424373626708984
    10. '**' → logprob: -8.799373626708984

Token 1092: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.43904680013656616
    2. '           ' → logprob: -1.814046859741211
    3. ' ==' → logprob: -2.439046859741211
    4. 'elif' → logprob: -3.439046859741211
    5. ' elif' → logprob: -3.439046859741211
    6. ' :' → logprob: -3.814046859741211
    7. '==' → logprob: -4.689046859741211
    8. ' =' → logprob: -6.564046859741211
    9. ' else' → logprob: -6.689046859741211
    10. '```' → logprob: -6.939046859741211

Token 1093: ' Rot' (ID: 20416)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.40855923295021057
    2. 'l' → logprob: -1.1585592031478882
    3. 'b' → logprob: -5.783559322357178
    4. 'r' → logprob: -6.033559322357178
    5. 'else' → logprob: -6.033559322357178
    6. 'elif' → logprob: -6.033559322357178
    7. 'bh' → logprob: -6.158559322357178
    8. '(l' → logprob: -6.408559322357178
    9. ' bh' → logprob: -6.908559322357178
    10. ' r' → logprob: -7.033559322357178

Token 1094: 'ated' (ID: 780)
  Prédit: 'ated'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ated' → logprob: -0.07729386538267136
    2. '==' → logprob: -3.577293872833252
    3. 'ate' → logprob: -4.077293872833252
    4. '(x' → logprob: -5.327293872833252
    5. ' ==' → logprob: -5.327293872833252
    6. 'x' → logprob: -5.452293872833252
    7. '(k' → logprob: -5.827293872833252
    8. '[k' → logprob: -5.952293872833252
    9. '```' → logprob: -6.327293872833252
    10. '[' → logprob: -6.452293872833252

Token 1095: ' pattern' (ID: 8302)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6156226396560669
    2. ' l' → logprob: -1.240622639656067
    3. 'r' → logprob: -2.2406225204467773
    4. ' r' → logprob: -3.1156225204467773
    5. 'bh' → logprob: -5.490622520446777
    6. 'elif' → logprob: -6.365622520446777
    7. '```' → logprob: -6.490622520446777
    8. ' ==' → logprob: -6.740622520446777
    9. ' bh' → logprob: -6.740622520446777
    10. 'else' → logprob: -6.990622520446777

Token 1096: ' matches' (ID: 15248)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.20329250395298004
    2. ' ==' → logprob: -1.8282924890518188
    3. '!=' → logprob: -5.078292369842529
    4. 'else' → logprob: -5.453292369842529
    5. ' !=' → logprob: -5.828292369842529
    6. '```' → logprob: -5.953292369842529
    7. '==
' → logprob: -6.203292369842529
    8. 'elif' → logprob: -6.578292369842529
    9. '=' → logprob: -6.953292369842529
    10. '==(' → logprob: -8.078292846679688

Token 1097: ' B' (ID: 418)
  Prédit: 'bh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bh' → logprob: -0.35309284925460815
    2. ' bh' → logprob: -1.728092908859253
    3. 'b' → logprob: -2.603092908859253
    4. ' b' → logprob: -3.728092908859253
    5. 'l' → logprob: -5.228092670440674
    6. ' l' → logprob: -5.353092670440674
    7. '   ' → logprob: -5.603092670440674
    8. '(b' → logprob: -5.978092670440674
    9. 'r' → logprob: -6.103092670440674
    10. ' r' → logprob: -7.228092670440674

Token 1098: ' as' (ID: 472)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4379745125770569
    2. ' ==' → logprob: -1.812974452972412
    3. '           ' → logprob: -1.937974452972412
    4. '[k' → logprob: -4.187974452972412
    5. 'elif' → logprob: -4.562974452972412
    6. ' and' → logprob: -5.437974452972412
    7. 'and' → logprob: -5.687974452972412
    8. 'else' → logprob: -5.937974452972412
    9. 'if' → logprob: -6.062974452972412
    10. '```' → logprob: -6.187974452972412

Token 1099: ' is' (ID: 382)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8929135203361511
    2. '=' → logprob: -2.767913579940796
    3. 'r' → logprob: -2.892913579940796
    4. 'or' → logprob: -2.892913579940796
    5. '```' → logprob: -3.142913579940796
    6. 'b' → logprob: -3.267913579940796
    7. '[' → logprob: -3.392913579940796
    8. 'l' → logprob: -3.392913579940796
    9. '[l' → logprob: -3.392913579940796
    10. '(' → logprob: -3.642913579940796

Token 1100: ' (' (ID: 350)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.7406384348869324
    2. '           ' → logprob: -1.1156384944915771
    3. ' elif' → logprob: -2.365638494491577
    4. '==' → logprob: -3.740638494491577
    5. ' ==' → logprob: -3.865638494491577
    6. ' and' → logprob: -3.865638494491577
    7. ' if' → logprob: -4.740638256072998
    8. ' or' → logprob: -4.990638256072998
    9. 'if' → logprob: -4.990638256072998
    10. 'and' → logprob: -5.490638256072998

Token 1101: 'no' (ID: 1750)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8791965842247009
    2. '           ' → logprob: -1.7541966438293457
    3. 'elif' → logprob: -2.2541966438293457
    4. '):
' → logprob: -3.0041966438293457
    5. '):' → logprob: -3.1291966438293457
    6. '```' → logprob: -3.1291966438293457
    7. ' or' → logprob: -3.2541966438293457
    8. ' and' → logprob: -3.7541966438293457
    9. ':' → logprob: -3.8791966438293457
    10. 'else' → logprob: -4.004196643829346

Token 1102: ' bit' (ID: 3546)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.5966393947601318
    2. ')' → logprob: -1.7216393947601318
    3. 'space' → logprob: -2.471639394760132
    4. ' space' → logprob: -2.721639394760132
    5. ' else' → logprob: -2.721639394760132
    6. '```' → logprob: -3.096639394760132
    7. 'x' → logprob: -4.096639633178711
    8. ' change' → logprob: -4.096639633178711
    9. ' x' → logprob: -4.221639633178711
    10. '=' → logprob: -4.221639633178711

Token 1103: ' to' (ID: 316)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '^' → logprob: -0.9354516863822937
    2. ' ^' → logprob: -1.6854517459869385
    3. ')' → logprob: -1.8104517459869385
    4. '_flip' → logprob: -3.4354517459869385
    5. '```' → logprob: -3.5604517459869385
    6. '=' → logprob: -3.5604517459869385
    7. '_set' → logprob: -3.8104517459869385
    8. '_' → logprob: -4.060451507568359
    9. '+' → logprob: -4.185451507568359
    10. 'flip' → logprob: -4.560451507568359

Token 1104: ' set' (ID: 920)
  Prédit: ' set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.28464213013648987
    2. 'set' → logprob: -1.5346421003341675
    3. '```' → logprob: -4.659642219543457
    4. ')' → logprob: -5.534642219543457
    5. ' ' → logprob: -5.534642219543457
    6. ' add' → logprob: -6.159642219543457
    7. '   ' → logprob: -6.159642219543457
    8. '``' → logprob: -6.159642219543457
    9. 'flip' → logprob: -6.659642219543457
    10. '1' → logprob: -7.284642219543457

Token 1105: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3390393853187561
    2. '```' → logprob: -2.5890393257141113
    3. '           ' → logprob: -3.0890393257141113
    4. 'in' → logprob: -3.0890393257141113
    5. ')' → logprob: -3.5890393257141113
    6. ' at' → logprob: -3.8390393257141113
    7. '):
' → logprob: -3.8390393257141113
    8. '=' → logprob: -4.214039325714111
    9. ' if' → logprob: -5.089039325714111
    10. ' =' → logprob: -5.089039325714111

Token 1106: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.036356985569000244
    2. ' x' → logprob: -3.4113569259643555
    3. ')' → logprob: -7.0363569259643555
    4. '```' → logprob: -7.4113569259643555
    5. 'k' → logprob: -8.286356925964355
    6. 'else' → logprob: -8.786356925964355
    7. ' the' → logprob: -9.536356925964355
    8. 'b' → logprob: -9.661356925964355
    9. '           ' → logprob: -9.786356925964355
    10. ' ' → logprob: -9.911356925964355

Token 1107: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.00039659533649683
    2. ')' → logprob: -9.000396728515625
    3. '[i' → logprob: -9.375396728515625
    4. '           ' → logprob: -9.750396728515625
    5. '```' → logprob: -10.375396728515625
    6. 'else' → logprob: -10.375396728515625
    7. '[' → logprob: -11.125396728515625
    8. '               ' → logprob: -11.375396728515625
    9. ')[' → logprob: -11.375396728515625
    10. 'k' → logprob: -11.750396728515625

Token 1108: '])
' (ID: 5169)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.10244014114141464
    2. ')' → logprob: -2.727440118789673
    3. '):' → logprob: -3.977440118789673
    4. '           ' → logprob: -5.102440357208252
    5. ')
' → logprob: -5.352440357208252
    6. '):

' → logprob: -6.477440357208252
    7. '               ' → logprob: -8.102439880371094
    8. '):
' → logprob: -8.977439880371094
    9. '```' → logprob: -9.102439880371094
    10. ' else' → logprob: -9.477439880371094

Token 1109: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.545111894607544
    2. ' else' → logprob: -1.670111894607544
    3. ' elif' → logprob: -2.670111894607544
    4. 'else' → logprob: -2.920111894607544
    5. 'elif' → logprob: -3.045111894607544
    6. '```' → logprob: -3.670111894607544
    7. '               ' → logprob: -3.795111894607544
    8. '                       ' → logprob: -5.420111656188965
    9. '
' → logprob: -6.170111656188965
    10. '       ' → logprob: -6.545111656188965

Token 1110: ' elif' (ID: 9497)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.712628185749054
    2. 'elif' (adapté à ' elif') → logprob: -0.712628185749054
    3. ' elif' → logprob: -3.962628126144409
    4. 'else' → logprob: -8.587628364562988
    5. '		' → logprob: -10.087628364562988
    6. 'el' → logprob: -10.712628364562988
    7. '               ' → logprob: -11.712628364562988
    8. 'if' → logprob: -12.087628364562988
    9. ' ' → logprob: -12.712628364562988
    10. '```' → logprob: -13.087628364562988

Token 1111: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.6222713589668274
    2. 'l' → logprob: -0.8722713589668274
    3. 'b' → logprob: -4.247271537780762
    4. ' b' → logprob: -4.872271537780762
    5. 'bh' → logprob: -4.997271537780762
    6. 'r' → logprob: -5.122271537780762
    7. ' bh' → logprob: -5.622271537780762
    8. ' r' → logprob: -5.622271537780762
    9. '   ' → logprob: -6.372271537780762
    10. '(l' → logprob: -7.622271537780762

Token 1112: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3488922715187073
    2. '==' → logprob: -1.2238922119140625
    3. ' !=' → logprob: -8.973892211914062
    4. '()==' → logprob: -9.723892211914062
    5. '==(' → logprob: -9.973892211914062
    6. '==
' → logprob: -10.473892211914062
    7. ']==' → logprob: -10.473892211914062
    8. '<|end|>' → logprob: -10.848892211914062
    9. ')==' → logprob: -10.973892211914062
    10. '[' → logprob: -10.973892211914062

Token 1113: ' bh' (ID: 11387)
  Prédit: 'bh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bh' → logprob: -0.0017877520294860005
    2. ' bh' → logprob: -6.3767876625061035
    3. 'b' → logprob: -9.626788139343262
    4. ' ' → logprob: -13.126788139343262
    5. 'gh' → logprob: -13.251788139343262
    6. '(b' → logprob: -13.376788139343262
    7. '   ' → logprob: -13.501788139343262
    8. 'BH' → logprob: -13.626788139343262
    9. 'bm' → logprob: -13.751788139343262
    10. 'Bh' → logprob: -13.876788139343262

Token 1114: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001382241171086207
    2. 'i' → logprob: -9.500138282775879
    3. '```' → logprob: -10.000138282775879
    4. 'calc' → logprob: -11.750138282775879
    5. '{i' → logprob: -12.875138282775879
    6. '.calc' → logprob: -13.375138282775879
    7. '   ' → logprob: -13.625138282775879
    8. '[' → logprob: -13.750138282775879
    9. '_i' → logprob: -13.750138282775879
    10. '(i' → logprob: -14.500138282775879

Token 1115: '].' (ID: 1651)
  Prédit: '.calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.calc' → logprob: -0.047636691480875015
    2. '].' → logprob: -3.9226367473602295
    3. '.' → logprob: -4.29763650894165
    4. ').' → logprob: -4.67263650894165
    5. ' .' → logprob: -6.67263650894165
    6. '   ' → logprob: -6.92263650894165
    7. '.i' → logprob: -7.04763650894165
    8. '.cal' → logprob: -8.922636985778809
    9. '```' → logprob: -9.797636985778809
    10. '{}.' → logprob: -10.047636985778809

Token 1116: 'calc' (ID: 49633)
  Prédit: 'calc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.0024538920260965824
    2. '.calc' → logprob: -6.127453804016113
    3. '```' → logprob: -8.502453804016113
    4. ' calc' → logprob: -9.877453804016113
    5. '   ' → logprob: -12.752453804016113
    6. '_calc' → logprob: -13.127453804016113
    7. '``' → logprob: -13.252453804016113
    8. '
' → logprob: -13.377453804016113
    9. '(calc' → logprob: -13.752453804016113
    10. '`' → logprob: -14.127453804016113

Token 1117: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20559580624103546
    2. '(k' → logprob: -2.4555957317352295
    3. '(N' → logprob: -2.9555957317352295
    4. '0' → logprob: -3.0805957317352295
    5. 'k' → logprob: -6.330595970153809
    6. 'N' → logprob: -8.955595970153809
    7. '(n' → logprob: -9.955595970153809
    8. ' (' → logprob: -10.830595970153809
    9. ' ' → logprob: -11.330595970153809
    10. '(
' → logprob: -11.580595970153809

Token 1118: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006152204005047679
    2. 'N' → logprob: -7.750615119934082
    3. 'k' → logprob: -9.375615119934082
    4. '(' → logprob: -9.375615119934082
    5. ' ' → logprob: -11.750615119934082
    6. '(N' → logprob: -12.750615119934082
    7. '(k' → logprob: -13.250615119934082
    8. '   ' → logprob: -14.375615119934082
    9. ')' → logprob: -14.750615119934082
    10. ' N' → logprob: -15.563115119934082

Token 1119: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011284107313258573
    2. ',N' → logprob: -9.250112533569336
    3. ',k' → logprob: -11.250112533569336
    4. ' ,' → logprob: -13.750112533569336
    5. ',
' → logprob: -14.375112533569336
    6. '           ' → logprob: -14.750112533569336
    7. 'k' → logprob: -15.000112533569336
    8. '   ' → logprob: -15.000112533569336
    9. '```' → logprob: -15.750112533569336
    10. '       ' → logprob: -15.875112533569336

Token 1120: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0009206312242895365
    2. ' N' → logprob: -7.00092077255249
    3. 'k' → logprob: -12.250920295715332
    4. '(N' → logprob: -13.000920295715332
    5. '   ' → logprob: -14.000920295715332
    6. '0' → logprob: -14.750920295715332
    7. ' ' → logprob: -15.125920295715332
    8. '	N' → logprob: -15.625920295715332
    9. ' ' → logprob: -15.750920295715332
    10. '[N' → logprob: -16.50092124938965

Token 1121: '-k' (ID: 10897)
  Prédit: '-k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-k' → logprob: -0.0003233070601709187
    2. ' -' → logprob: -8.250323295593262
    3. '-' → logprob: -9.750323295593262
    4. 'k' → logprob: -14.250323295593262
    5. '-n' → logprob: -14.500323295593262
    6. ')' → logprob: -15.000323295593262
    7. '   ' → logprob: -15.000323295593262
    8. '+k' → logprob: -15.000323295593262
    9. '
' → logprob: -15.750323295593262
    10. ' ' → logprob: -15.875323295593262

Token 1122: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004350797680672258
    2. '           ' → logprob: -8.250434875488281
    3. ' and' → logprob: -9.500434875488281
    4. 'and' → logprob: -10.375434875488281
    5. '               ' → logprob: -11.250434875488281
    6. ' )' → logprob: -11.250434875488281
    7. '):
' → logprob: -11.375434875488281
    8. '```' → logprob: -12.000434875488281
    9. '):' → logprob: -12.250434875488281
    10. ']' → logprob: -12.500434875488281

Token 1123: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.029720861464738846
    2. 'and' → logprob: -3.6547207832336426
    3. '           ' → logprob: -6.029720783233643
    4. '               ' → logprob: -8.0297212600708
    5. '            ' → logprob: -8.4047212600708
    6. '```' → logprob: -8.7797212600708
    7. ')' → logprob: -9.4047212600708
    8. '             ' → logprob: -10.0297212600708
    9. ' ' → logprob: -10.5297212600708
    10. '          ' → logprob: -10.7797212600708

Token 1124: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.3485579490661621
    2. 'r' → logprob: -1.223557949066162
    3. '           ' → logprob: -9.34855842590332
    4. '               ' → logprob: -12.22355842590332
    5. '            ' → logprob: -12.47355842590332
    6. '   ' → logprob: -12.97355842590332
    7. '       ' → logprob: -13.09855842590332
    8. '                   ' → logprob: -13.34855842590332
    9. '          ' → logprob: -13.59855842590332
    10. '    ' → logprob: -13.97355842590332

Token 1125: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3870062232017517
    2. '==' → logprob: -1.1370062828063965
    3. ')==' → logprob: -10.262005805969238
    4. ']==' → logprob: -10.637005805969238
    5. '==(' → logprob: -10.637005805969238
    6. '==
' → logprob: -11.262005805969238
    7. '[i' → logprob: -11.637005805969238
    8. '```' → logprob: -11.762005805969238
    9. '           ' → logprob: -12.762005805969238
    10. '[k' → logprob: -12.762005805969238

Token 1126: ' bh' (ID: 11387)
  Prédit: 'bh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bh' → logprob: -0.06197541579604149
    2. ' bh' → logprob: -2.8119754791259766
    3. 'b' → logprob: -12.811975479125977
    4. ' ' → logprob: -13.186975479125977
    5. '   ' → logprob: -14.061975479125977
    6. '  ' → logprob: -14.936975479125977
    7. ' ' → logprob: -15.186975479125977
    8. '```' → logprob: -15.311975479125977
    9. '	b' → logprob: -15.561975479125977
    10. '
' → logprob: -15.811975479125977

Token 1127: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.000170882252859883
    2. 'i' → logprob: -9.875170707702637
    3. '```' → logprob: -10.625170707702637
    4. '(i' → logprob: -10.750170707702637
    5. '[' → logprob: -10.750170707702637
    6. '   ' → logprob: -11.000170707702637
    7. '{i' → logprob: -11.500170707702637
    8. '.i' → logprob: -11.750170707702637
    9. '[N' → logprob: -11.875170707702637
    10. ',i' → logprob: -13.625170707702637

Token 1128: '].' (ID: 1651)
  Prédit: '.calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.calc' → logprob: -0.1743047535419464
    2. '].' → logprob: -1.924304723739624
    3. '.' → logprob: -4.799304962158203
    4. '   ' → logprob: -6.799304962158203
    5. ').' → logprob: -7.049304962158203
    6. 'calc' → logprob: -7.174304962158203
    7. '```' → logprob: -7.299304962158203
    8. '           ' → logprob: -7.424304962158203
    9. '[i' → logprob: -7.924304962158203
    10. ' .' → logprob: -8.549304962158203

Token 1129: 'calc' (ID: 49633)
  Prédit: 'calc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.00020246754866093397
    2. 'N' → logprob: -9.125202178955078
    3. '```' → logprob: -9.625202178955078
    4. '.calc' → logprob: -11.250202178955078
    5. '(calc' → logprob: -12.500202178955078
    6. ' calc' → logprob: -12.625202178955078
    7. '   ' → logprob: -13.375202178955078
    8. '``' → logprob: -13.500202178955078
    9. '(N' → logprob: -14.000202178955078
    10. '
' → logprob: -14.250202178955078

Token 1130: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.20168405771255493
    2. 'N' → logprob: -1.7016839981079102
    3. '0' → logprob: -8.45168399810791
    4. '(' → logprob: -10.07668399810791
    5. 'k' → logprob: -11.82668399810791
    6. '   ' → logprob: -13.70168399810791
    7. '[N' → logprob: -13.70168399810791
    8. '	N' → logprob: -13.95168399810791
    9. ' (' → logprob: -14.07668399810791
    10. '<N' → logprob: -14.20168399810791

Token 1131: '-k' (ID: 10897)
  Prédit: '-k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-k' → logprob: -1.5451681974809617e-05
    2. ' -' → logprob: -11.625015258789062
    3. 'k' → logprob: -12.500015258789062
    4. '```' → logprob: -13.750015258789062
    5. '``' → logprob: -14.250015258789062
    6. '-' → logprob: -15.500015258789062
    7. '   ' → logprob: -15.750015258789062
    8. '-n' → logprob: -16.000015258789062
    9. '
' → logprob: -16.125015258789062
    10. ' ' → logprob: -16.500015258789062

Token 1132: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000399091251892969
    2. ',N' → logprob: -8.000398635864258
    3. ' ,' → logprob: -11.250398635864258
    4. '<|end|>' → logprob: -11.375398635864258
    5. '<|end|>' → logprob: -11.500398635864258
    6. '```' → logprob: -11.750398635864258
    7. ')' → logprob: -12.000398635864258
    8. '   ' → logprob: -12.750398635864258
    9. ',n' → logprob: -13.000398635864258
    10. ',
' → logprob: -13.375398635864258

Token 1133: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00014215784904081374
    2. ' N' → logprob: -8.875142097473145
    3. '```' → logprob: -13.875142097473145
    4. '   ' → logprob: -14.750142097473145
    5. ' ' → logprob: -15.250142097473145
    6. '0' → logprob: -15.500142097473145
    7. '	N' → logprob: -16.25014305114746
    8. '       ' → logprob: -16.87514305114746
    9. '_N' → logprob: -16.87514305114746
    10. '[N' → logprob: -17.37514305114746

Token 1134: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3296598494052887
    2. '):' → logprob: -1.4546598196029663
    3. ')' → logprob: -3.079659938812256
    4. '           ' → logprob: -7.454659938812256
    5. '):

' → logprob: -8.579659461975098
    6. ')==' → logprob: -9.079659461975098
    7. '```' → logprob: -9.454659461975098
    8. '               ' → logprob: -9.829659461975098
    9. ''):
' → logprob: -10.079659461975098
    10. '):
' → logprob: -10.079659461975098

Token 1135: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9180586934089661
    2. ':' → logprob: -1.4180586338043213
    3. '                               ' → logprob: -1.6680586338043213
    4. '                       ' → logprob: -3.0430586338043213
    5. '                           ' → logprob: -3.0430586338043213
    6. '                   ' → logprob: -3.7930586338043213
    7. '```' → logprob: -4.0430588722229
    8. '):' → logprob: -5.1680588722229
    9. ')' → logprob: -5.1680588722229
    10. '                                           ' → logprob: -5.2930588722229

Token 1136: ' pass' (ID: 1853)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.2784247100353241
    2. '                   ' → logprob: -1.7784247398376465
    3. '               ' → logprob: -3.5284247398376465
    4. ' continue' → logprob: -4.0284247398376465
    5. '                               ' → logprob: -4.5284247398376465
    6. '```' → logprob: -4.7784247398376465
    7. '                       ' → logprob: -6.2784247398376465
    8. '	continue' → logprob: -6.4034247398376465
    9. '                           ' → logprob: -6.7784247398376465
    10. '           ' → logprob: -7.6534247398376465

Token 1137: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15908430516719818
    2. 'else' → logprob: -2.5340843200683594
    3. ' else' → logprob: -3.5340843200683594
    4. '               ' → logprob: -3.6590843200683594
    5. '<|end|>' → logprob: -5.034084320068359
    6. '       ' → logprob: -6.284084320068359
    7. '                       ' → logprob: -6.784084320068359
    8. '                   ' → logprob: -7.409084320068359
    9. '                           ' → logprob: -7.534084320068359
    10. '                               ' → logprob: -7.534084320068359

Token 1138: ' #' (ID: 1069)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.07860013097524643
    2. '           ' → logprob: -2.8286001682281494
    3. ' else' → logprob: -4.82859992980957
    4. '               ' → logprob: -4.95359992980957
    5. '       ' → logprob: -7.57859992980957
    6. '                   ' → logprob: -7.95359992980957
    7. '                       ' → logprob: -8.82859992980957
    8. ':
' → logprob: -9.45359992980957
    9. '   ' → logprob: -9.82859992980957
    10. '                               ' → logprob: -10.07859992980957

Token 1139: ' No' (ID: 3004)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.8790329098701477
    2. '           ' → logprob: -1.004032850265503
    3. 'continue' → logprob: -2.004032850265503
    4. '               ' → logprob: -3.379032850265503
    5. ' else' → logprob: -3.879032850265503
    6. ' continue' → logprob: -4.504033088684082
    7. '                   ' → logprob: -5.504033088684082
    8. '```' → logprob: -5.504033088684082
    9. '       ' → logprob: -6.004033088684082
    10. '<|end|>' → logprob: -6.129033088684082

Token 1140: ' change' (ID: 3343)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -1.0264272689819336
    2. 'x' → logprob: -1.4014272689819336
    3. '=' → logprob: -2.1514272689819336
    4. ' else' → logprob: -2.6514272689819336
    5. 'space' → logprob: -3.7764272689819336
    6. '+=' → logprob: -3.7764272689819336
    7. ' x' → logprob: -4.276427268981934
    8. ' ' → logprob: -4.526427268981934
    9. 'change' → logprob: -4.526427268981934
    10. '
' → logprob: -4.526427268981934

Token 1141: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016069678589701653
    2. 'else' → logprob: -4.8910698890686035
    3. '<|end|>' → logprob: -5.3910698890686035
    4. ' else' → logprob: -6.2660698890686035
    5. '       ' → logprob: -7.3910698890686035
    6. '               ' → logprob: -7.6410698890686035
    7. '   ' → logprob: -8.266069412231445
    8. 'elif' → logprob: -8.891069412231445
    9. '<|end|>' → logprob: -9.016069412231445
    10. '
' → logprob: -9.641069412231445

Token 1142: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.001704102149233222
    2. ' x' → logprob: -6.376704216003418
    3. '```' → logprob: -13.376704216003418
    4. '`' → logprob: -16.1267032623291
    5. '           ' → logprob: -16.5017032623291
    6. '   ' → logprob: -16.6267032623291
    7. '       ' → logprob: -17.1267032623291
    8. '
' → logprob: -17.2517032623291
    9. ')x' → logprob: -17.2517032623291
    10. '``' → logprob: -17.2517032623291

Token 1143: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -1.2352385965641588e-05
    2. '```' → logprob: -12.250012397766113
    3. 'k' → logprob: -12.625012397766113
    4. 'elif' → logprob: -13.875012397766113
    5. '_k' → logprob: -14.000012397766113
    6. 'else' → logprob: -14.125012397766113
    7. '[' → logprob: -14.125012397766113
    8. '{k' → logprob: -15.750012397766113
    9. '[i' → logprob: -16.000011444091797
    10. '<|end|>' → logprob: -16.250011444091797

Token 1144: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3240900933742523
    2. '           ' → logprob: -1.8240901231765747
    3. '
' → logprob: -3.449090003967285
    4. '               ' → logprob: -3.824090003967285
    5. '<|end|>' → logprob: -4.074090003967285
    6. '[' → logprob: -4.449090003967285
    7. '<|end|>' → logprob: -4.574090003967285
    8. '):
' → logprob: -5.699090003967285
    9. '                   ' → logprob: -6.074090003967285
    10. ')
' → logprob: -6.074090003967285

Token 1145: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12813392281532288
    2. 'else' → logprob: -2.12813401222229
    3. ' else' → logprob: -7.503133773803711
    4. '               ' → logprob: -7.753133773803711
    5. '		' → logprob: -9.378133773803711
    6. '```' → logprob: -9.753133773803711
    7. '                   ' → logprob: -10.503133773803711
    8. '                       ' → logprob: -10.503133773803711
    9. 'elif' → logprob: -11.878133773803711
    10. '       ' → logprob: -12.003133773803711

Token 1146: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07960253208875656
    2. 'else' (adapté à ' else') → logprob: -2.5796024799346924
    3. ' else' → logprob: -7.5796027183532715
    4. '		' → logprob: -8.579602241516113
    5. '               ' → logprob: -12.704602241516113
    6. '```' → logprob: -12.954602241516113
    7. 'elif' → logprob: -13.204602241516113
    8. '	else' → logprob: -13.204602241516113
    9. '       ' → logprob: -13.579602241516113
    10. '	       ' → logprob: -13.954602241516113

Token 1147: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.060892488807439804
    2. ':
' → logprob: -2.9358925819396973
    3. ':' → logprob: -5.560892581939697
    4. '                   ' → logprob: -6.810892581939697
    5. '           ' → logprob: -7.560892581939697
    6. '                       ' → logprob: -8.310892105102539
    7. '```' → logprob: -9.810892105102539
    8. '[' → logprob: -9.935892105102539
    9. ' x' → logprob: -10.560892105102539
    10. '                           ' → logprob: -10.810892105102539

Token 1148: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.026669250801205635
    2. ' x' → logprob: -4.276669025421143
    3. '                   ' → logprob: -4.901669025421143
    4. '```' → logprob: -6.526669025421143
    5. '           ' → logprob: -6.651669025421143
    6. 'x' → logprob: -7.026669025421143
    7. '                               ' → logprob: -7.276669025421143
    8. '                       ' → logprob: -8.4016695022583
    9. '                           ' → logprob: -8.6516695022583
    10. '   ' → logprob: -9.6516695022583

Token 1149: ' #' (ID: 1069)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.25751611590385437
    2. ' x' → logprob: -1.7575161457061768
    3. '               ' → logprob: -3.1325161457061768
    4. '                   ' → logprob: -4.882515907287598
    5. '           ' → logprob: -6.132515907287598
    6. '```' → logprob: -7.007515907287598
    7. '   ' → logprob: -8.507515907287598
    8. '                       ' → logprob: -11.007515907287598
    9. '``' → logprob: -11.007515907287598
    10. '                               ' → logprob: -11.382515907287598

Token 1150: ' No' (ID: 3004)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03685909882187843
    2. ' x' → logprob: -3.5368590354919434
    3. '```' → logprob: -5.786859035491943
    4. '               ' → logprob: -6.286859035491943
    5. '                   ' → logprob: -6.286859035491943
    6. '           ' → logprob: -8.786859512329102
    7. '``' → logprob: -10.161859512329102
    8. '                           ' → logprob: -10.661859512329102
    9. '                               ' → logprob: -10.911859512329102
    10. '                       ' → logprob: -11.161859512329102

Token 1151: ' valid' (ID: 4529)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.022289952263236046
    2. 'k' → logprob: -4.647289752960205
    3. '=' → logprob: -4.897289752960205
    4. '=k' → logprob: -6.522289752960205
    5. ' =' → logprob: -6.897289752960205
    6. '
' → logprob: -7.272289752960205
    7. '[' → logprob: -7.397289752960205
    8. 't' → logprob: -8.397290229797363
    9. 'x' → logprob: -8.522290229797363
    10. ' k' → logprob: -8.897290229797363

Token 1152: ' match' (ID: 3981)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.01160416193306446
    2. 'x' → logprob: -5.136604309082031
    3. 'k' → logprob: -5.386604309082031
    4. '```' → logprob: -7.636604309082031
    5. ' k' → logprob: -8.636604309082031
    6. '``' → logprob: -9.261604309082031
    7. '
' → logprob: -10.136604309082031
    8. '[' → logprob: -10.136604309082031
    9. ' x' → logprob: -10.261604309082031
    10. '_k' → logprob: -10.386604309082031

Token 1153: ',' (ID: 11)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.623576819896698
    2. ' =' → logprob: -0.873576819896698
    3. '=' → logprob: -3.9985768795013428
    4. '```' → logprob: -4.373576641082764
    5. '=k' → logprob: -5.498576641082764
    6. '[' → logprob: -6.248576641082764
    7. '                   ' → logprob: -6.498576641082764
    8. '
' → logprob: -6.748576641082764
    9. '(k' → logprob: -6.873576641082764
    10. '``' → logprob: -7.498576641082764

Token 1154: ' invalidate' (ID: 83545)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5623738765716553
    2. ' x' → logprob: -0.9373738765716553
    3. '```' → logprob: -3.3123738765716553
    4. '``' → logprob: -6.812374114990234
    5. '                   ' → logprob: -8.187374114990234
    6. '               ' → logprob: -8.437374114990234
    7. '`' → logprob: -8.687374114990234
    8. '[' → logprob: -9.937374114990234
    9. '                               ' → logprob: -9.937374114990234
    10. '                           ' → logprob: -10.312374114990234

Token 1155: ' shift' (ID: 12847)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.034695323556661606
    2. '[k' → logprob: -4.034695148468018
    3. ' x' → logprob: -4.659695148468018
    4. '```' → logprob: -5.659695148468018
    5. 'k' → logprob: -6.409695148468018
    6. 'None' → logprob: -7.284695148468018
    7. ' k' → logprob: -8.159695625305176
    8. ' None' → logprob: -8.284695625305176
    9. '``' → logprob: -8.534695625305176
    10. '[' → logprob: -9.159695625305176

Token 1156: ' k' (ID: 372)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.00011689399980241433
    2. 'k' → logprob: -9.125117301940918
    3. '```' → logprob: -12.750117301940918
    4. '_k' → logprob: -13.875117301940918
    5. '=k' → logprob: -14.000117301940918
    6. '[' → logprob: -14.375117301940918
    7. '(k' → logprob: -14.375117301940918
    8. '`' → logprob: -14.875117301940918
    9. ' k' → logprob: -15.125117301940918
    10. '=' → logprob: -15.250117301940918

Token 1157: '
' (ID: 198)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.8484565019607544
    2. ' =' → logprob: -1.2234565019607544
    3. '               ' → logprob: -2.473456382751465
    4. '=' → logprob: -2.848456382751465
    5. 'x' → logprob: -3.098456382751465
    6. '                   ' → logprob: -3.598456382751465
    7. '           ' → logprob: -3.598456382751465
    8. '```' → logprob: -4.473456382751465
    9. ' x' → logprob: -4.598456382751465
    10. '[x' → logprob: -5.473456382751465

Token 1158: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11925892531871796
    2. '```' → logprob: -2.3692588806152344
    3. '                   ' → logprob: -4.994258880615234
    4. ' x' → logprob: -5.744258880615234
    5. '``' → logprob: -5.994258880615234
    6. '[' → logprob: -6.244258880615234
    7. '           ' → logprob: -6.244258880615234
    8. '                               ' → logprob: -7.494258880615234
    9. 'x' → logprob: -7.494258880615234
    10. ' =' → logprob: -7.994258880615234

Token 1159: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.006424624938517809
    2. ' x' → logprob: -5.506424427032471
    3. '```' → logprob: -6.506424427032471
    4. '               ' → logprob: -8.006424903869629
    5. '                   ' → logprob: -8.131424903869629
    6. '           ' → logprob: -8.506424903869629
    7. '``' → logprob: -11.631424903869629
    8. '   ' → logprob: -12.006424903869629
    9. '`' → logprob: -13.131424903869629
    10. '                       ' → logprob: -14.006424903869629

Token 1160: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -1.8624639324116288e-06
    2. '[' → logprob: -14.375001907348633
    3. '\[' → logprob: -15.000001907348633
    4. '```' → logprob: -15.125001907348633
    5. '[i' → logprob: -15.875001907348633
    6. '=[' → logprob: -15.875001907348633
    7. '[key' → logprob: -16.125001907348633
    8. '=k' → logprob: -16.500001907348633
    9. 'k' → logprob: -17.125001907348633
    10. '=' → logprob: -17.125001907348633

Token 1161: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.019536903128027916
    2. ']=' → logprob: -4.019536972045898
    3. '=' → logprob: -7.394536972045898
    4. '[k' → logprob: -7.644536972045898
    5. ' =' → logprob: -8.894536972045898
    6. '=None' → logprob: -9.269536972045898
    7. '```' → logprob: -11.019536972045898
    8. '[' → logprob: -11.144536972045898
    9. '][' → logprob: -12.019536972045898
    10. ' ]' → logprob: -12.394536972045898

Token 1162: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0014230913948267698
    2. ' =' → logprob: -6.626422882080078
    3. '=None' → logprob: -9.251422882080078
    4. ']=' → logprob: -15.001422882080078
    5. ']' → logprob: -15.501422882080078
    6. '```' → logprob: -15.501422882080078
    7. '[' → logprob: -15.751422882080078
    8. 'None' → logprob: -16.626422882080078
    9. '=True' → logprob: -17.126422882080078
    10. '=False' → logprob: -17.126422882080078

Token 1163: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -1.1875571544806007e-05
    2. ' None' → logprob: -11.375011444091797
    3. '   ' → logprob: -16.125011444091797
    4. '=None' → logprob: -16.375011444091797
    5. '```' → logprob: -17.000011444091797
    6. '(None' → logprob: -18.125011444091797
    7. '`' → logprob: -18.125011444091797
    8. '[' → logprob: -18.625011444091797
    9. '_None' → logprob: -18.625011444091797
    10. '
' → logprob: -19.250011444091797

Token 1164: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1165: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1166: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09755086153745651
    2. 'for' → logprob: -3.097550868988037
    3. 'return' → logprob: -3.472550868988037
    4. '
' → logprob: -4.597550868988037
    5. ' for' → logprob: -6.097550868988037
    6. '```' → logprob: -6.472550868988037
    7. ' return' → logprob: -6.722550868988037
    8. '       ' → logprob: -6.847550868988037
    9. '    
' → logprob: -8.722550392150879
    10. '           ' → logprob: -9.472550392150879

Token 1167: ' Collect' (ID: 30483)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.08368146419525146
    2. 'ans' → logprob: -3.333681583404541
    3. '   ' → logprob: -3.458681583404541
    4. 'ret' → logprob: -4.833681583404541
    5. '```' → logprob: -6.208681583404541
    6. 'for' → logprob: -7.083681583404541
    7. 'results' → logprob: -7.833681583404541
    8. 'result' → logprob: -8.083681106567383
    9. 'rs' → logprob: -8.333681106567383
    10. '
' → logprob: -8.458681106567383

Token 1168: ' all' (ID: 722)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.9790329933166504
    2. '[
' → logprob: -0.9790329933166504
    3. '[(' → logprob: -2.1040329933166504
    4. 'result' → logprob: -2.9790329933166504
    5. 'results' → logprob: -3.3540329933166504
    6. 'res' → logprob: -4.22903299331665
    7. '[]' → logprob: -5.10403299331665
    8. 'k' → logprob: -5.22903299331665
    9. '[i' → logprob: -5.22903299331665
    10. '[' → logprob: -6.22903299331665

Token 1169: ' valid' (ID: 4529)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -1.2612179517745972
    2. '[(' → logprob: -1.5112179517745972
    3. '(k' → logprob: -2.2612180709838867
    4. 'res' → logprob: -2.3862180709838867
    5. '[k' → logprob: -2.7612180709838867
    6. 'result' → logprob: -2.7612180709838867
    7. 'k' → logprob: -2.8862180709838867
    8. '[
' → logprob: -3.1362180709838867
    9. '(valid' → logprob: -4.511218070983887
    10. '(
' → logprob: -4.636218070983887

Token 1170: ' (' (ID: 350)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.04101429879665375
    2. '```' → logprob: -3.6660141944885254
    3. '_k' → logprob: -5.041014194488525
    4. 'k' → logprob: -5.416014194488525
    5. '[' → logprob: -6.916014194488525
    6. '_' → logprob: -7.041014194488525
    7. '``' → logprob: -7.916014194488525
    8. '_results' → logprob: -8.041014671325684
    9. '`' → logprob: -8.541014671325684
    10. 'results' → logprob: -8.791014671325684

Token 1171: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.002446758095175028
    2. '[k' → logprob: -7.00244665145874
    3. ')' → logprob: -7.75244665145874
    4. ',' → logprob: -7.87744665145874
    5. 'i' → logprob: -9.127447128295898
    6. '[
' → logprob: -9.252447128295898
    7. '(k' → logprob: -9.502447128295898
    8. '[' → logprob: -9.502447128295898
    9. '`' → logprob: -9.877447128295898
    10. '[(' → logprob: -10.002447128295898

Token 1172: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.43663889169692993
    2. '[k' → logprob: -1.5616388320922852
    3. '```' → logprob: -3.061638832092285
    4. ',k' → logprob: -3.936638832092285
    5. ',
' → logprob: -4.061638832092285
    6. '[' → logprob: -4.186638832092285
    7. '   ' → logprob: -4.686638832092285
    8. '[
' → logprob: -4.811638832092285
    9. '[x' → logprob: -5.061638832092285
    10. ')' → logprob: -5.561638832092285

Token 1173: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.33216872811317444
    2. ')' → logprob: -1.957168698310852
    3. '[
' → logprob: -3.3321688175201416
    4. '[' → logprob: -4.0821685791015625
    5. ')]' → logprob: -4.2071685791015625
    6. ' x' → logprob: -4.4571685791015625
    7. '[]' → logprob: -4.9571685791015625
    8. '   ' → logprob: -4.9571685791015625
    9. ']' → logprob: -5.3321685791015625
    10. 'len' → logprob: -5.4571685791015625

Token 1174: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2346959263086319
    2. '_pairs' → logprob: -1.9846959114074707
    3. '[k' → logprob: -4.109695911407471
    4. 's' → logprob: -4.484695911407471
    5. 'pairs' → logprob: -4.484695911407471
    6. '):
' → logprob: -4.984695911407471
    7. '
' → logprob: -5.109695911407471
    8. ' pairs' → logprob: -5.859695911407471
    9. ' =' → logprob: -6.234695911407471
    10. '```' → logprob: -6.359695911407471

Token 1175: ' solutions' (ID: 9368)
  Prédit: '_pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -0.578544557094574
    2. '.append' → logprob: -1.5785446166992188
    3. ' =' → logprob: -2.3285446166992188
    4. 'pairs' → logprob: -2.5785446166992188
    5. 's' → logprob: -3.9535446166992188
    6. '```' → logprob: -4.453544616699219
    7. '_list' → logprob: -5.078544616699219
    8. '_candidates' → logprob: -5.703544616699219
    9. '_results' → logprob: -5.828544616699219
    10. '=' → logprob: -6.078544616699219

Token 1176: '
' (ID: 198)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.24462155997753143
    2. '```' → logprob: -1.9946215152740479
    3. '   ' → logprob: -3.869621515274048
    4. 'results' → logprob: -4.119621753692627
    5. 'ans' → logprob: -4.369621753692627
    6. 'result' → logprob: -4.494621753692627
    7. 'ret' → logprob: -4.494621753692627
    8. '``' → logprob: -5.744621753692627
    9. '
' → logprob: -5.869621753692627
    10. 'rets' → logprob: -6.994621753692627

Token 1177: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6527222990989685
    2. '   ' → logprob: -1.4027223587036133
    3. 'res' → logprob: -1.7777223587036133
    4. '```' → logprob: -3.5277223587036133
    5. 'result' → logprob: -3.7777223587036133
    6. 'results' → logprob: -5.152722358703613
    7. 'ans' → logprob: -6.152722358703613
    8. '``' → logprob: -6.527722358703613
    9. '    
' → logprob: -7.277722358703613
    10. 'ret' → logprob: -7.527722358703613

Token 1178: ' ans' (ID: 3345)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.001382378744892776
    2. 'ans' (adapté à ' ans') → logprob: -7.001382350921631
    3. 'ret' → logprob: -8.376382827758789
    4. '   ' → logprob: -9.626382827758789
    5. 'rs' → logprob: -9.876382827758789
    6. 'r' → logprob: -10.126382827758789
    7. '```' → logprob: -10.626382827758789
    8. ' res' → logprob: -11.251382827758789
    9. 'out' → logprob: -11.251382827758789
    10. 'result' → logprob: -11.376382827758789

Token 1179: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.032595328986644745
    2. ' =' → logprob: -3.53259539604187
    3. '.append' → logprob: -6.157595157623291
    4. '=[]' → logprob: -7.657595157623291
    5. '=[]
' → logprob: -9.28259563446045
    6. '+=' → logprob: -9.65759563446045
    7. '.extend' → logprob: -10.40759563446045
    8. '```' → logprob: -11.28259563446045
    9. 's' → logprob: -11.40759563446045
    10. '[:]' → logprob: -11.53259563446045

Token 1180: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0012186899548396468
    2. '[]
' → logprob: -6.751218795776367
    3. ' []' → logprob: -10.001218795776367
    4. '[]

' → logprob: -13.626218795776367
    5. '[' → logprob: -13.751218795776367
    6. '[
' → logprob: -15.001218795776367
    7. '   ' → logprob: -15.501218795776367
    8. '[]}' → logprob: -15.876218795776367
    9. '[],' → logprob: -17.251218795776367
    10. '```' → logprob: -17.376218795776367

Token 1181: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4592128396034241
    2. '   ' → logprob: -1.2092127799987793
    3. '```' → logprob: -3.2092127799987793
    4. ' for' → logprob: -3.5842127799987793
    5. '
' → logprob: -6.834212779998779
    6. '``' → logprob: -7.709212779998779
    7. '       ' → logprob: -9.709213256835938
    8. '    
' → logprob: -10.834213256835938
    9. '	for' → logprob: -11.709213256835938
    10. '[' → logprob: -11.959213256835938

Token 1182: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.378048300743103
    2. '   ' → logprob: -1.378048300743103
    3. ' for' → logprob: -3.3780484199523926
    4. '```' → logprob: -3.7530484199523926
    5. '
' → logprob: -5.378048419952393
    6. '``' → logprob: -8.128047943115234
    7. '       ' → logprob: -8.878047943115234
    8. '    
' → logprob: -9.628047943115234
    9. '	for' → logprob: -10.503047943115234
    10. '           ' → logprob: -12.503047943115234

Token 1183: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.006773038301616907
    2. ' k' → logprob: -5.006772994995117
    3. 'i' → logprob: -10.006772994995117
    4. '_k' → logprob: -12.006772994995117
    5. ' i' → logprob: -12.881772994995117
    6. '   ' → logprob: -13.256772994995117
    7. '```' → logprob: -14.381772994995117
    8. 'kx' → logprob: -15.256772994995117
    9. '	k' → logprob: -15.381772994995117
    10. '_' → logprob: -15.506772994995117

Token 1184: ',' (ID: 11)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6932860016822815
    2. ' in' → logprob: -0.6932860016822815
    3. ',' → logprob: -8.943285942077637
    4. '```' → logprob: -12.568285942077637
    5. 'k' → logprob: -13.443285942077637
    6. ',k' → logprob: -14.318285942077637
    7. '_in' → logprob: -14.693285942077637
    8. '0' → logprob: -14.943285942077637
    9. 'range' → logprob: -15.068285942077637
    10. ')' → logprob: -15.193285942077637

Token 1185: ' xx' (ID: 44242)
  Prédit: 'xx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xx' → logprob: -0.06529974937438965
    2. 'val' → logprob: -3.5652997493743896
    3. 'v' → logprob: -4.190299987792969
    4. 'x' → logprob: -4.315299987792969
    5. 'vx' → logprob: -5.690299987792969
    6. 'xi' → logprob: -5.940299987792969
    7. '_x' → logprob: -9.190299987792969
    8. 'xc' → logprob: -9.315299987792969
    9. ' xx' → logprob: -9.815299987792969
    10. ' xv' → logprob: -10.315299987792969

Token 1186: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5766746997833252
    2. ' in' → logprob: -0.8266746997833252
    3. ',' → logprob: -7.576674461364746
    4. ')' → logprob: -9.576674461364746
    5. '_in' → logprob: -10.826674461364746
    6. 'x' → logprob: -10.826674461364746
    7. 's' → logprob: -11.076674461364746
    8. 'k' → logprob: -11.201674461364746
    9. '```' → logprob: -11.326674461364746
    10. 'n' → logprob: -11.451674461364746

Token 1187: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.011299033649265766
    2. ' enumerate' → logprob: -4.511299133300781
    3. 'range' → logprob: -8.636299133300781
    4. 'x' → logprob: -10.261299133300781
    5. 'in' → logprob: -10.636299133300781
    6. '
' → logprob: -12.136299133300781
    7. '```' → logprob: -12.761299133300781
    8. ' in' → logprob: -13.511299133300781
    9. ',' → logprob: -13.886299133300781
    10. ' ' → logprob: -14.136299133300781

Token 1188: '(x' (ID: 4061)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.13045422732830048
    2. 'enumer' → logprob: -2.1304543018341064
    3. 'zip' → logprob: -6.255454063415527
    4. ' enumerate' → logprob: -6.755454063415527
    5. ' x' → logprob: -8.505454063415527
    6. 'range' → logprob: -9.130454063415527
    7. '(x' → logprob: -9.880454063415527
    8. '   ' → logprob: -10.880454063415527
    9. '```' → logprob: -11.255454063415527
    10. '(zip' → logprob: -11.380454063415527

Token 1189: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0024502077139914036
    2. '):' → logprob: -6.377449989318848
    3. '   ' → logprob: -8.627449989318848
    4. '():
' → logprob: -9.002449989318848
    5. '):
' → logprob: -9.252449989318848
    6. ':' → logprob: -9.877449989318848
    7. ':
' → logprob: -9.877449989318848
    8. ')' → logprob: -10.002449989318848
    9. '       ' → logprob: -10.502449989318848
    10. '```' → logprob: -10.502449989318848

Token 1190: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013441023416817188
    2. '   ' → logprob: -4.76344108581543
    3. ' if' → logprob: -6.26344108581543
    4. '```' → logprob: -6.63844108581543
    5. 'if' → logprob: -6.88844108581543
    6. '[' → logprob: -8.01344108581543
    7. '``' → logprob: -9.76344108581543
    8. '<|end|>' → logprob: -10.51344108581543
    9. '    ' → logprob: -10.63844108581543
    10. ':' → logprob: -10.63844108581543

Token 1191: ' if' (ID: 538)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6708990931510925
    2. '       ' → logprob: -0.9208990931510925
    3. 'if' (adapté à ' if') → logprob: -2.6708991527557373
    4. ' if' → logprob: -4.420898914337158
    5. '   ' → logprob: -5.170898914337158
    6. '``' → logprob: -5.795898914337158
    7. '           ' → logprob: -7.795898914337158
    8. '[' → logprob: -10.170899391174316
    9. '`' → logprob: -10.420899391174316
    10. ' ' → logprob: -10.545899391174316

Token 1192: ' xx' (ID: 44242)
  Prédit: 'xx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xx' → logprob: -0.00027432903880253434
    2. ' xx' → logprob: -8.250274658203125
    3. '   ' → logprob: -11.500274658203125
    4. '(xx' → logprob: -13.750274658203125
    5. '       ' → logprob: -14.250274658203125
    6. 'not' → logprob: -14.500274658203125
    7. 'x' → logprob: -15.625274658203125
    8. 'k' → logprob: -16.125274658203125
    9. '           ' → logprob: -16.500274658203125
    10. '
' → logprob: -16.500274658203125

Token 1193: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.09908868372440338
    2. ' is' → logprob: -2.849088668823242
    3. '!=' → logprob: -3.349088668823242
    4. ' !=' → logprob: -7.224088668823242
    5. ')' → logprob: -7.974088668823242
    6. ')is' → logprob: -9.349088668823242
    7. '```' → logprob: -10.349088668823242
    8. '>=' → logprob: -10.474088668823242
    9. '==' → logprob: -10.599088668823242
    10. '[' → logprob: -10.724088668823242

Token 1194: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.03821694105863571
    2. ' not' → logprob: -3.2882168292999268
    3. 'None' → logprob: -8.913216590881348
    4. '0' → logprob: -10.288216590881348
    5. '!=' → logprob: -13.663216590881348
    6. 'Not' → logprob: -13.663216590881348
    7. '```' → logprob: -13.913216590881348
    8. '!' → logprob: -14.163216590881348
    9. 'n' → logprob: -14.538216590881348
    10. 'k' → logprob: -14.663216590881348

Token 1195: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -1.5094070477061905e-05
    2. ' None' → logprob: -11.375015258789062
    3. '0' → logprob: -13.125015258789062
    4. 'not' → logprob: -14.125015258789062
    5. '=None' → logprob: -15.000015258789062
    6. '```' → logprob: -15.000015258789062
    7. '   ' → logprob: -16.625015258789062
    8. '_None' → logprob: -17.250015258789062
    9. '(None' → logprob: -17.375015258789062
    10. '``' → logprob: -17.500015258789062

Token 1196: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3061639964580536
    2. '           ' → logprob: -1.431164026260376
    3. ':
' → logprob: -4.056163787841797
    4. ':' → logprob: -5.306163787841797
    5. 'and' → logprob: -6.181163787841797
    6. '       ' → logprob: -8.806163787841797
    7. ',' → logprob: -9.806163787841797
    8. '):
' → logprob: -10.306163787841797
    9. '```' → logprob: -10.806163787841797
    10. '   ' → logprob: -11.306163787841797

Token 1197: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00177942612208426
    2. '```' → logprob: -6.376779556274414
    3. ' ans' → logprob: -9.876779556274414
    4. 'ans' → logprob: -11.751779556274414
    5. '(ans' → logprob: -12.126779556274414
    6. '               ' → logprob: -12.376779556274414
    7. '       ' → logprob: -12.876779556274414
    8. '``' → logprob: -13.251779556274414
    9. '`' → logprob: -13.501779556274414
    10. '		' → logprob: -14.751779556274414

Token 1198: ' ans' (ID: 3345)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6922667622566223
    2. ' ans' → logprob: -0.9422667622566223
    3. '       ' → logprob: -2.8172667026519775
    4. 'ans' (adapté à ' ans') → logprob: -3.0672667026519775
    5. '```' → logprob: -6.692266941070557
    6. '   ' → logprob: -6.817266941070557
    7. '(ans' → logprob: -7.567266941070557
    8. '	ans' → logprob: -7.692266941070557
    9. '               ' → logprob: -9.067266464233398
    10. 'answer' → logprob: -11.692266464233398

Token 1199: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -9.066919301403686e-05
    2. '.' → logprob: -9.875090599060059
    3. ').' → logprob: -10.875090599060059
    4. '].' → logprob: -11.375090599060059
    5. 'append' → logprob: -12.625090599060059
    6. '.extend' → logprob: -13.125090599060059
    7. '.app' → logprob: -13.750090599060059
    8. 'Append' → logprob: -14.250090599060059
    9. ' .' → logprob: -14.375090599060059
    10. '_append' → logprob: -15.375090599060059

Token 1200: '('%' (ID: 38886)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.003109622746706009
    2. ' (' → logprob: -6.753109455108643
    3. '(' → logprob: -7.253109455108643
    4. 'f' → logprob: -7.378109455108643
    5. '   ' → logprob: -7.628109455108643
    6. ' f' → logprob: -9.3781099319458
    7. '(str' → logprob: -11.7531099319458
    8. '((' → logprob: -11.7531099319458
    9. '(k' → logprob: -12.0031099319458
    10. '('' → logprob: -12.3781099319458

Token 1201: 'd' (ID: 67)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00042149791261181235
    2. 'd' → logprob: -7.875421524047852
    3. 'str' → logprob: -11.000421524047852
    4. 's' → logprob: -11.250421524047852
    5. '(k' → logprob: -11.875421524047852
    6. '{k' → logprob: -12.375421524047852
    7. 'f' → logprob: -15.625421524047852
    8. '{}' → logprob: -15.750421524047852
    9. '%d' → logprob: -16.00042152404785
    10. ' k' → logprob: -16.37542152404785

Token 1202: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.26106998324394226
    2. '%d' → logprob: -1.8860700130462646
    3. ' k' → logprob: -2.6360700130462646
    4. '{k' → logprob: -6.1360697746276855
    5. 'k' → logprob: -6.2610697746276855
    6. '%s' → logprob: -6.8860697746276855
    7. '(k' → logprob: -7.0110697746276855
    8. '%' → logprob: -8.136070251464844
    9. '%c' → logprob: -10.261070251464844
    10. ''%' → logprob: -10.886070251464844

Token 1203: 'd' (ID: 67)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.008754138834774494
    2. 'd' → logprob: -5.383754253387451
    3. 'x' → logprob: -5.508754253387451
    4. '(k' → logprob: -10.133753776550293
    5. 'kx' → logprob: -11.133753776550293
    6. 's' → logprob: -11.758753776550293
    7. '{k' → logprob: -12.883753776550293
    8. '%d' → logprob: -13.133753776550293
    9. 'xx' → logprob: -13.383753776550293
    10. ' k' → logprob: -13.633753776550293

Token 1204: ''' (ID: 6)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.5855120420455933
    2. ''' → logprob: -0.8355120420455933
    3. '\n' → logprob: -5.335512161254883
    4. ''%(' → logprob: -5.960512161254883
    5. '%d' → logprob: -6.710512161254883
    6. '(%' → logprob: -8.085512161254883
    7. ''%' → logprob: -8.210512161254883
    8. '')' → logprob: -9.835512161254883
    9. '(' → logprob: -9.960512161254883
    10. '"' → logprob: -10.085512161254883

Token 1205: ' %' (ID: 1851)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.6278985142707825
    2. '%' → logprob: -1.2528984546661377
    3. ' %' → logprob: -1.7528984546661377
    4. '%(' → logprob: -5.252898693084717
    5. ')' → logprob: -6.627898693084717
    6. ' (' → logprob: -7.877898693084717
    7. '   ' → logprob: -9.502898216247559
    8. '(' → logprob: -9.877898216247559
    9. '       ' → logprob: -9.877898216247559
    10. '%d' → logprob: -10.502898216247559

Token 1206: ' (' (ID: 350)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -1.2664456789934775e-06
    2. ' (' → logprob: -13.625000953674316
    3. '   ' → logprob: -17.500001907348633
    4. 'k' → logprob: -19.375001907348633
    5. '(' → logprob: -19.625001907348633
    6. '(
' → logprob: -19.625001907348633
    7. '  ' → logprob: -19.750001907348633
    8. '(K' → logprob: -20.125001907348633
    9. ' ' → logprob: -20.375001907348633
    10. ')' → logprob: -20.625001907348633

Token 1207: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.9361264946837764e-07
    2. ' k' → logprob: -16.875
    3. '           ' → logprob: -18.75
    4. '{k' → logprob: -19.625
    5. '```' → logprob: -20.875
    6. '(k' → logprob: -20.875
    7. '_k' → logprob: -21.125
    8. '"k' → logprob: -21.75
    9. 'kx' → logprob: -21.875
    10. '	k' → logprob: -21.875

Token 1208: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000591278774663806
    2. '',' → logprob: -8.250591278076172
    3. ' ,' → logprob: -8.625591278076172
    4. ',x' → logprob: -9.250591278076172
    5. '','' → logprob: -11.875591278076172
    6. ',len' → logprob: -12.000591278076172
    7. ',k' → logprob: -12.000591278076172
    8. ',",' → logprob: -12.000591278076172
    9. '       ' → logprob: -12.125591278076172
    10. '`,' → logprob: -12.375591278076172

Token 1209: ' xx' (ID: 44242)
  Prédit: 'xx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xx' → logprob: -0.0001234428636962548
    2. ' xx' → logprob: -9.000123023986816
    3. '(xx' → logprob: -17.125123977661133
    4. '           ' → logprob: -17.375123977661133
    5. '       ' → logprob: -18.000123977661133
    6. '         ' → logprob: -19.125123977661133
    7. '          ' → logprob: -19.125123977661133
    8. '   ' → logprob: -19.750123977661133
    9. 'xxx' → logprob: -19.875123977661133
    10. '        ' → logprob: -20.375123977661133

Token 1210: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0050773294642567635
    2. '))
' → logprob: -5.380077362060547
    3. ')' → logprob: -7.880077362060547
    4. '       ' → logprob: -9.630077362060547
    5. ''))' → logprob: -11.880077362060547
    6. '           ' → logprob: -13.130077362060547
    7. ')
' → logprob: -13.630077362060547
    8. '   ' → logprob: -13.880077362060547
    9. '))

' → logprob: -14.505077362060547
    10. ' ))' → logprob: -14.755077362060547

Token 1211: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39172327518463135
    2. '
' → logprob: -1.1417232751846313
    3. 'return' → logprob: -5.516723155975342
    4. '    
' → logprob: -7.641723155975342
    5. '```' → logprob: -8.2667236328125
    6. '<|end|>' → logprob: -10.7667236328125
    7. '
' → logprob: -11.1417236328125
    8. '	return' → logprob: -11.3917236328125
    9. ' return' → logprob: -11.3917236328125
    10. '  
' → logprob: -12.1417236328125

Token 1212: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.12798835337162018
    2. '   ' → logprob: -2.127988338470459
    3. '
' → logprob: -7.877988338470459
    4. '	return' → logprob: -8.002988815307617
    5. ' return' → logprob: -8.127988815307617
    6. '```' → logprob: -10.377988815307617
    7. '    
' → logprob: -11.502988815307617
    8. ':return' → logprob: -12.877988815307617
    9. '@return' → logprob: -13.002988815307617
    10. '{return' → logprob: -13.502988815307617

Token 1213: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.0325924449716695e-05
    2. ' ans' → logprob: -11.50001049041748
    3. '(ans' → logprob: -15.87501049041748
    4. '   ' → logprob: -18.125009536743164
    5. '[]' → logprob: -18.375009536743164
    6. '	ans' → logprob: -18.500009536743164
    7. '`' → logprob: -19.500009536743164
    8. '```' → logprob: -19.625009536743164
    9. '[' → logprob: -20.250009536743164
    10. '_ans' → logprob: -21.250009536743164

Token 1214: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1215: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6821815371513367
    2. '<|end|>' → logprob: -0.8071815371513367
    3. '```' → logprob: -4.182181358337402
    4. ':' → logprob: -4.307181358337402
    5. ''' → logprob: -5.557181358337402
    6. '\n' → logprob: -5.557181358337402
    7. '<|end|>' → logprob: -5.932181358337402
    8. '#' → logprob: -6.182181358337402
    9. '
' → logprob: -6.682181358337402
    10. '[' → logprob: -6.807181358337402

Token 1216: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.4887857139110565
    2. ' read' → logprob: -1.488785743713379
    3. ' sl' → logprob: -2.613785743713379
    4. 'main' → logprob: -3.113785743713379
    5. 'read' → logprob: -3.488785743713379
    6. ' solve' → logprob: -4.988785743713379
    7. 'solve' → logprob: -5.738785743713379
    8. 'sl' → logprob: -6.488785743713379
    9. '_main' → logprob: -8.738785743713379
    10. ' run' → logprob: -8.738785743713379

Token 1217: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.018176397308707237
    2. '():
' → logprob: -4.018176555633545
    3. '()' → logprob: -11.018176078796387
    4. ' ():' → logprob: -12.768176078796387
    5. '():

' → logprob: -13.268176078796387
    6. '():
' → logprob: -13.518176078796387
    7. '_' → logprob: -13.893176078796387
    8. '()>' → logprob: -14.018176078796387
    9. '(' → logprob: -14.768176078796387
    10. '(argv' → logprob: -15.268176078796387

Token 1218: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03272327408194542
    2. '```' → logprob: -4.157723426818848
    3. '():' → logprob: -4.907723426818848
    4. '    
' → logprob: -5.907723426818848
    5. '():
' → logprob: -6.157723426818848
    6. '
' → logprob: -6.782723426818848
    7. '()' → logprob: -7.407723426818848
    8. '    ' → logprob: -8.157723426818848
    9. '<|end|>' → logprob: -8.282723426818848
    10. ' readline' → logprob: -8.407723426818848

Token 1219: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029729316011071205
    2. '```' → logprob: -4.65472936630249
    3. '():' → logprob: -5.15472936630249
    4. '()' → logprob: -5.15472936630249
    5. '
' → logprob: -6.65472936630249
    6. '    
' → logprob: -6.77972936630249
    7. 'n' → logprob: -6.90472936630249
    8. '():
' → logprob: -6.90472936630249
    9. 'import' → logprob: -7.77972936630249
    10. ':' → logprob: -8.029728889465332

Token 1220: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6187201738357544
    2. '):' → logprob: -1.7437201738357544
    3. ')' → logprob: -1.8687201738357544
    4. '):
' → logprob: -2.243720054626465
    5. '():' → logprob: -5.868720054626465
    6. '():
' → logprob: -6.118720054626465
    7. '"""' → logprob: -6.118720054626465
    8. '```' → logprob: -6.243720054626465
    9. '">' → logprob: -6.493720054626465
    10. ':' → logprob: -6.493720054626465

Token 1221: ' Main' (ID: 7956)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.056681979447603226
    2. '
' → logprob: -3.8066818714141846
    3. '```' → logprob: -3.9316818714141846
    4. 'def' → logprob: -4.556682109832764
    5. 'data' → logprob: -7.056682109832764
    6. '    
' → logprob: -7.806682109832764
    7. '``' → logprob: -8.306681632995605
    8. 'n' → logprob: -8.556681632995605
    9. '       ' → logprob: -8.681681632995605
    10. 'args' → logprob: -8.681681632995605

Token 1222: ' function' (ID: 1114)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.011192000471055508
    2. '():
' → logprob: -4.7611918449401855
    3. '()' → logprob: -6.0111918449401855
    4. 'def' → logprob: -9.511192321777344
    5. '(
' → logprob: -11.761192321777344
    6. '(' → logprob: -11.886192321777344
    7. '()
' → logprob: -11.886192321777344
    8. ':' → logprob: -12.136192321777344
    9. '()`' → logprob: -12.761192321777344
    10. '```' → logprob: -12.886192321777344

Token 1223: ' for' (ID: 395)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.39074334502220154
    2. '():
' → logprob: -1.140743374824524
    3. '   ' → logprob: -5.890743255615234
    4. '```' → logprob: -7.515743255615234
    5. ':' → logprob: -8.390743255615234
    6. '()' → logprob: -9.140743255615234
    7. 'def' → logprob: -9.140743255615234
    8. ':
' → logprob: -10.640743255615234
    9. '(
' → logprob: -10.890743255615234
    10. '
' → logprob: -11.890743255615234

Token 1224: ' problem' (ID: 4792)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05345175042748451
    2. '```' → logprob: -3.1784517765045166
    3. '   ' → logprob: -4.9284515380859375
    4. 'import' → logprob: -6.9284515380859375
    5. '...' → logprob: -7.8034515380859375
    6. '():
' → logprob: -7.8034515380859375
    7. ':' → logprob: -8.428451538085938
    8. ' def' → logprob: -8.553451538085938
    9. '``' → logprob: -8.678451538085938
    10. '():' → logprob: -9.053451538085938

Token 1225: ' execution' (ID: 20860)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.14864304661750793
    2. '():' → logprob: -2.1486430168151855
    3. 'def' → logprob: -4.0236430168151855
    4. '```' → logprob: -6.5236430168151855
    5. '   ' → logprob: -7.3986430168151855
    6. ':' → logprob: -7.3986430168151855
    7. ':
' → logprob: -8.148643493652344
    8. '):
' → logprob: -8.773643493652344
    9. '()' → logprob: -8.898643493652344
    10. '()
' → logprob: -9.023643493652344

Token 1226: '.
' (ID: 558)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.16447776556015015
    2. '():' → logprob: -1.914477825164795
    3. '   ' → logprob: -5.789477825164795
    4. '```' → logprob: -7.039477825164795
    5. '):
' → logprob: -9.539477348327637
    6. ':' → logprob: -9.539477348327637
    7. ':
' → logprob: -10.039477348327637
    8. '()' → logprob: -10.039477348327637
    9. '
' → logprob: -11.039477348327637
    10. '():

' → logprob: -11.414477348327637

Token 1227: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07634879648685455
    2. '```' → logprob: -2.7013487815856934
    3. 'def' → logprob: -5.451348781585693
    4. ':' → logprob: -7.576348781585693
    5. '``' → logprob: -7.701348781585693
    6. '    
' → logprob: -7.826348781585693
    7. '
' → logprob: -8.326349258422852
    8. '():' → logprob: -9.076349258422852
    9. '():
' → logprob: -9.826349258422852
    10. '<|end|>' → logprob: -10.326349258422852

Token 1228: ' Reads' (ID: 88839)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021563954651355743
    2. '```' → logprob: -4.02156400680542
    3. '():
' → logprob: -6.64656400680542
    4. '():' → logprob: -7.02156400680542
    5. 'def' → logprob: -7.89656400680542
    6. '()' → logprob: -8.521563529968262
    7. '``' → logprob: -8.771563529968262
    8. '
' → logprob: -8.896563529968262
    9. ':' → logprob: -9.396563529968262
    10. '):
' → logprob: -9.896563529968262

Token 1229: ' input' (ID: 3422)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4645240306854248
    2. '():' → logprob: -1.7145240306854248
    3. '   ' → logprob: -1.8395240306854248
    4. '():
' → logprob: -3.964524030685425
    5. '```' → logprob: -4.714524269104004
    6. '()
' → logprob: -5.714524269104004
    7. 'def' → logprob: -8.714524269104004
    8. '(),' → logprob: -8.839524269104004
    9. '()\' → logprob: -8.964524269104004
    10. ':' → logprob: -9.089524269104004

Token 1230: ',' (ID: 11)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.2684553265571594
    2. '():
' → logprob: -2.2684552669525146
    3. '   ' → logprob: -2.6434552669525146
    4. '()' → logprob: -2.8934552669525146
    5. '()
' → logprob: -6.268455505371094
    6. '```' → logprob: -6.268455505371094
    7. ':' → logprob: -6.643455505371094
    8. 'def' → logprob: -8.768455505371094
    9. '().' → logprob: -9.768455505371094
    10. '(),' → logprob: -10.393455505371094

Token 1231: ' processes' (ID: 14340)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010991579852998257
    2. 'def' → logprob: -4.88599157333374
    3. '```' → logprob: -6.26099157333374
    4. '
' → logprob: -7.13599157333374
    5. 'N' → logprob: -8.010992050170898
    6. ' N' → logprob: -8.635992050170898
    7. 'n' → logprob: -10.135992050170898
    8. ' def' → logprob: -10.635992050170898
    9. '``' → logprob: -10.635992050170898
    10. 't' → logprob: -10.760992050170898

Token 1232: ' data' (ID: 1238)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07433846592903137
    2. '```' → logprob: -2.824338436126709
    3. 'def' → logprob: -5.699338436126709
    4. ':' → logprob: -6.074338436126709
    5. '():' → logprob: -6.449338436126709
    6. '
' → logprob: -6.824338436126709
    7. '():
' → logprob: -6.949338436126709
    8. '()' → logprob: -7.074338436126709
    9. '``' → logprob: -7.074338436126709
    10. '):
' → logprob: -7.449338436126709

Token 1233: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40851810574531555
    2. ',' → logprob: -1.1585180759429932
    3. '(),' → logprob: -4.408518314361572
    4. 'and' → logprob: -5.408518314361572
    5. ',
' → logprob: -6.283518314361572
    6. '```' → logprob: -7.158518314361572
    7. '
' → logprob: -7.283518314361572
    8. '()
' → logprob: -7.783518314361572
    9. ' and' → logprob: -7.908518314361572
    10. '()' → logprob: -8.158517837524414

Token 1234: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35456427931785583
    2. 'and' → logprob: -1.6045643091201782
    3. ' and' → logprob: -2.3545641899108887
    4. '
' → logprob: -6.479564189910889
    5. '```' → logprob: -7.604564189910889
    6. ',' → logprob: -7.979564189910889
    7. 'def' → logprob: -8.729564666748047
    8. '``' → logprob: -11.104564666748047
    9. 'outputs' → logprob: -11.229564666748047
    10. '    
' → logprob: -11.729564666748047

Token 1235: ' outputs' (ID: 32725)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6550812721252441
    2. 'prints' → logprob: -1.2800812721252441
    3. 'outputs' → logprob: -1.7800812721252441
    4. '```' → logprob: -4.030081272125244
    5. 'writes' → logprob: -5.030081272125244
    6. ' prints' → logprob: -5.655081272125244
    7. 'print' → logprob: -6.530081272125244
    8. 'produ' → logprob: -6.780081272125244
    9. '
' → logprob: -6.905081272125244
    10. 'def' → logprob: -7.405081272125244

Token 1236: ' results' (ID: 4376)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28911706805229187
    2. '()' → logprob: -2.0391170978546143
    3. 'results' → logprob: -2.4141170978546143
    4. '```' → logprob: -4.414116859436035
    5. ' results' → logprob: -5.039116859436035
    6. 'the' → logprob: -5.789116859436035
    7. '()
' → logprob: -6.039116859436035
    8. 'def' → logprob: -6.539116859436035
    9. '"""
' → logprob: -6.914116859436035
    10. 'result' → logprob: -7.414116859436035

Token 1237: '.
' (ID: 558)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.1340087354183197
    2. '():' → logprob: -2.3840086460113525
    3. '   ' → logprob: -3.6340086460113525
    4. '```' → logprob: -5.759008884429932
    5. ':' → logprob: -6.009008884429932
    6. '()' → logprob: -7.509008884429932
    7. ':
' → logprob: -7.759008884429932
    8. '
' → logprob: -9.384008407592773
    9. '):
' → logprob: -9.884008407592773
    10. 'def' → logprob: -10.759008407592773

Token 1238: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07271979749202728
    2. '```' → logprob: -2.6977198123931885
    3. ':' → logprob: -6.572719573974609
    4. '``' → logprob: -7.822719573974609
    5. '
' → logprob: -8.57271957397461
    6. 'def' → logprob: -8.57271957397461
    7. '    
' → logprob: -8.69771957397461
    8. '():' → logprob: -8.82271957397461
    9. '()' → logprob: -9.57271957397461
    10. ':
' → logprob: -10.07271957397461

Token 1239: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6274802684783936
    2. '```' → logprob: -1.0024802684783936
    3. ':' → logprob: -3.3774802684783936
    4. 'def' → logprob: -4.127480506896973
    5. '():' → logprob: -4.252480506896973
    6. '``' → logprob: -4.377480506896973
    7. '():
' → logprob: -4.627480506896973
    8. '
' → logprob: -5.002480506896973
    9. ':
' → logprob: -6.002480506896973
    10. '()' → logprob: -6.877480506896973

Token 1240: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014528137631714344
    2. '```' → logprob: -4.389528274536133
    3. 'N' → logprob: -7.389528274536133
    4. '    
' → logprob: -8.139528274536133
    5. '``' → logprob: -8.264528274536133
    6. 'n' → logprob: -8.389528274536133
    7. 'import' → logprob: -8.639528274536133
    8. 'data' → logprob: -9.014528274536133
    9. 'def' → logprob: -9.139528274536133
    10. 'input' → logprob: -9.389528274536133

Token 1241: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3279721438884735
    2. 'N' (adapté à ' N') → logprob: -2.077972173690796
    3. 't' → logprob: -2.327972173690796
    4. '   ' → logprob: -3.202972173690796
    5. 'T' → logprob: -4.202971935272217
    6. 'import' → logprob: -7.077971935272217
    7. '```' → logprob: -8.577972412109375
    8. ' n' → logprob: -9.452972412109375
    9. 'nt' → logprob: -9.827972412109375
    10. 'input' → logprob: -9.952972412109375

Token 1242: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05579589307308197
    2. ' =' → logprob: -2.930795907974243
    3. ',' → logprob: -7.555795669555664
    4. '   ' → logprob: -8.055795669555664
    5. '=int' → logprob: -9.805795669555664
    6. '=input' → logprob: -11.555795669555664
    7. '    ' → logprob: -12.680795669555664
    8. '=line' → logprob: -13.680795669555664
    9. '=sys' → logprob: -14.305795669555664
    10. '```' → logprob: -14.555795669555664

Token 1243: ' read' (ID: 1729)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.006145873572677374
    2. 'read' → logprob: -5.25614595413208
    3. ' int' → logprob: -7.00614595413208
    4. ' read' → logprob: -12.131145477294922
    5. '[int' → logprob: -18.881145477294922
    6. '   ' → logprob: -20.256145477294922
    7. 'map' → logprob: -20.256145477294922
    8. 'ints' → logprob: -20.256145477294922
    9. '<int' → logprob: -21.006145477294922
    10. '(int' → logprob: -21.006145477294922

Token 1244: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.3911336064338684
    2. '()' → logprob: -1.2661335468292236
    3. 'int' → logprob: -3.2661335468292236
    4. '_' → logprob: -5.766133785247803
    5. '_integer' → logprob: -9.391133308410645
    6. 'Int' → logprob: -9.516133308410645
    7. '```' → logprob: -9.516133308410645
    8. '().' → logprob: -10.016133308410645
    9. '(' → logprob: -10.141133308410645
    10. '()
' → logprob: -10.141133308410645

Token 1245: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2014811635017395
    2. '()
' → logprob: -1.7014811038970947
    3. '   ' → logprob: -10.826480865478516
    4. '()\' → logprob: -11.076480865478516
    5. '()
' → logprob: -11.826480865478516
    6. '())' → logprob: -12.076480865478516
    7. '();' → logprob: -12.326480865478516
    8. '
' → logprob: -12.576480865478516
    9. '()

' → logprob: -13.326480865478516
    10. ' ()' → logprob: -13.701480865478516

Token 1246: '   ' (ID: 271)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.2019302397966385
    2. '   ' → logprob: -1.701930284500122
    3. ' A' → logprob: -7.701930046081543
    4. 'B' → logprob: -10.576930046081543
    5. '```' → logprob: -10.826930046081543
    6. '	A' → logprob: -11.326930046081543
    7. '
' → logprob: -12.451930046081543
    8. '    
' → logprob: -13.576930046081543
    9. '`' → logprob: -14.826930046081543
    10. 'AB' → logprob: -14.951930046081543

Token 1247: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -9.088346359931165e-07
    2. '   ' → logprob: -14.250000953674316
    3. ' A' → logprob: -15.875000953674316
    4. '```' → logprob: -17.0
    5. 'B' → logprob: -18.875
    6. '
' → logprob: -19.25
    7. '    
' → logprob: -20.125
    8. '	A' → logprob: -20.5
    9. 'for' → logprob: -21.0
    10. 'a' → logprob: -21.875

Token 1248: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3224891424179077
    2. ' =' → logprob: -1.3224891424179077
    3. ',' → logprob: -4.697489261627197
    4. ')' → logprob: -11.197488784790039
    5. '[' → logprob: -11.322488784790039
    6. ' ,' → logprob: -11.447488784790039
    7. '   ' → logprob: -12.197488784790039
    8. '_' → logprob: -12.572488784790039
    9. ',
' → logprob: -12.697488784790039
    10. '=
' → logprob: -12.822488784790039

Token 1249: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.0067154900170862675
    2. ' read' → logprob: -5.006715297698975
    3. 'list' → logprob: -15.881715774536133
    4. '	read' → logprob: -18.256715774536133
    5. '(read' → logprob: -18.256715774536133
    6. '   ' → logprob: -18.506715774536133
    7. ' list' → logprob: -19.006715774536133
    8. ' ' → logprob: -19.506715774536133
    9. '
' → logprob: -20.006715774536133
    10. '[' → logprob: -20.881715774536133

Token 1250: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.00035488870344124734
    2. 'int' → logprob: -8.000354766845703
    3. '_n' → logprob: -11.375354766845703
    4. '```' → logprob: -12.750354766845703
    5. '_line' → logprob: -13.875354766845703
    6. '()' → logprob: -13.875354766845703
    7. '_list' → logprob: -14.000354766845703
    8. '_' → logprob: -14.500354766845703
    9. '
' → logprob: -14.750354766845703
    10. '\' → logprob: -15.250354766845703

Token 1251: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.1807466745376587
    2. '()' → logprob: -1.8057466745376587
    3. '()
' → logprob: -7.680746555328369
    4. 'n' → logprob: -8.430747032165527
    5. 's' → logprob: -8.430747032165527
    6. '```' → logprob: -10.055747032165527
    7. '(n' → logprob: -10.680747032165527
    8. '(' → logprob: -12.180747032165527
    9. '()[' → logprob: -12.180747032165527
    10. '().' → logprob: -12.180747032165527

Token 1252: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4740816056728363
    2. '()
' → logprob: -0.9740816354751587
    3. '()
' → logprob: -13.474081993103027
    4. '   ' → logprob: -14.349081993103027
    5. '()\' → logprob: -14.349081993103027
    6. '()

' → logprob: -14.474081993103027
    7. '()`' → logprob: -14.849081993103027
    8. '()[' → logprob: -15.224081993103027
    9. '();' → logprob: -15.599081993103027
    10. '())' → logprob: -15.974081993103027

Token 1253: '   ' (ID: 271)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.386922687292099
    2. '   ' → logprob: -1.1369227170944214
    3. ' B' → logprob: -9.886922836303711
    4. '	B' → logprob: -14.886922836303711
    5. '```' → logprob: -15.511922836303711
    6. ' ' → logprob: -15.761922836303711
    7. '
' → logprob: -16.63692283630371
    8. '  ' → logprob: -17.26192283630371
    9. '    
' → logprob: -18.88692283630371
    10. '       ' → logprob: -18.88692283630371

Token 1254: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -4.084206375409849e-05
    2. '   ' → logprob: -10.250041007995605
    3. ' B' → logprob: -12.125041007995605
    4. '	B' → logprob: -17.87504005432129
    5. '```' → logprob: -18.62504005432129
    6. ' ' → logprob: -19.37504005432129
    7. '
' → logprob: -20.50004005432129
    8. '``' → logprob: -21.12504005432129
    9. '    
' → logprob: -21.37504005432129
    10. 'b' → logprob: -21.62504005432129

Token 1255: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15708570182323456
    2. ' =' → logprob: -2.282085657119751
    3. '()' → logprob: -3.157085657119751
    4. '()
' → logprob: -7.78208589553833
    5. '   ' → logprob: -8.532085418701172
    6. ')' → logprob: -10.407085418701172
    7. '_' → logprob: -10.657085418701172
    8. '_n' → logprob: -10.782085418701172
    9. '=
' → logprob: -10.907085418701172
    10. '[]' → logprob: -11.657085418701172

Token 1256: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.0031794982496649027
    2. ' read' → logprob: -5.753179550170898
    3. '(read' → logprob: -13.503179550170898
    4. '   ' → logprob: -15.003179550170898
    5. '	read' → logprob: -17.6281795501709
    6. ' ' → logprob: -17.8781795501709
    7. 'list' → logprob: -19.0031795501709
    8. '.read' → logprob: -19.0031795501709
    9. '  ' → logprob: -19.0031795501709
    10. '    ' → logprob: -19.5031795501709

Token 1257: '_int' (ID: 12285)
  Prédit: '_n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -1.8193366486229934e-05
    2. 'int' → logprob: -11.500018119812012
    3. '_int' → logprob: -11.750018119812012
    4. '```' → logprob: -16.625019073486328
    5. 'n' → logprob: -17.000019073486328
    6. 'Int' → logprob: -19.000019073486328
    7. '\n' → logprob: -19.500019073486328
    8. '_' → logprob: -20.375019073486328
    9. '\' → logprob: -20.375019073486328
    10. '
' → logprob: -20.875019073486328

Token 1258: '_n' (ID: 2170)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005719504784792662
    2. '_n' → logprob: -5.3807196617126465
    3. '()
' → logprob: -7.0057196617126465
    4. '())' → logprob: -8.755719184875488
    5. 'n' → logprob: -11.005719184875488
    6. '()\' → logprob: -12.380719184875488
    7. '_' → logprob: -12.505719184875488
    8. ')' → logprob: -12.505719184875488
    9. '()]' → logprob: -14.005719184875488
    10. '```' → logprob: -14.130719184875488

Token 1259: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2299857884645462
    2. '   ' → logprob: -1.6049858331680298
    3. '    
' → logprob: -5.97998571395874
    4. '<|end|>' → logprob: -6.47998571395874
    5. '```' → logprob: -8.729986190795898
    6. '
' → logprob: -9.354986190795898
    7. ')' → logprob: -9.854986190795898
    8. '<|end|>' → logprob: -10.479986190795898
    9. '()
' → logprob: -10.729986190795898
    10. '()' → logprob: -10.854986190795898

Token 1260: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020512896589934826
    2. '
' → logprob: -6.75205135345459
    3. '```' → logprob: -7.50205135345459
    4. '    
' → logprob: -8.62705135345459
    5. 'results' → logprob: -9.37705135345459
    6. 'result' → logprob: -10.12705135345459
    7. 'ans' → logprob: -11.75205135345459
    8. 'for' → logprob: -11.75205135345459
    9. '``' → logprob: -12.62705135345459
    10. 'outputs' → logprob: -13.75205135345459

Token 1261: ' print' (ID: 2123)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.22113189101219177
    2. '   ' → logprob: -1.9711319208145142
    3. 'ans' → logprob: -3.0961318016052246
    4. 'result' → logprob: -4.971131801605225
    5. 'results' → logprob: -5.596131801605225
    6. 'for' → logprob: -6.721131801605225
    7. '
' → logprob: -6.846131801605225
    8. 'ret' → logprob: -8.346132278442383
    9. '```' → logprob: -8.346132278442383
    10. 'r' → logprob: -8.971132278442383

Token 1262: '(*' (ID: 9000)
  Prédit: '('\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.36703184247016907
    2. '(len' → logprob: -1.9920318126678467
    3. '(*' → logprob: -1.9920318126678467
    4. '('' → logprob: -3.4920318126678467
    5. '()' → logprob: -6.117032051086426
    6. '(s' → logprob: -7.492032051086426
    7. '("\' → logprob: -7.742032051086426
    8. '(' → logprob: -8.242032051086426
    9. '(*(' → logprob: -8.992032051086426
    10. '(ans' → logprob: -9.367032051086426

Token 1263: 'sl' (ID: 4500)
  Prédit: 'sl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sl' → logprob: -1.9361264946837764e-07
    2. ' sl' → logprob: -16.5
    3. 'sorted' → logprob: -18.625
    4. ')' → logprob: -19.125
    5. '(sl' → logprob: -19.25
    6. '[' → logprob: -19.25
    7. '(s' → logprob: -19.625
    8. '\' → logprob: -19.875
    9. '('\' → logprob: -20.25
    10. 'list' → logprob: -20.5

Token 1264: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -4.320199877838604e-07
    2. '_v' → logprob: -15.5
    3. '(v' → logprob: -16.375
    4. 'vs' → logprob: -17.625
    5. '(' → logprob: -17.75
    6. '_' → logprob: -17.875
    7. 'sv' → logprob: -18.375
    8. 'в' → logprob: -18.75
    9. 'vl' → logprob: -18.75
    10. ' v' → logprob: -19.0

Token 1265: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -4.0722858102526516e-05
    2. '(' → logprob: -10.250041007995605
    3. ' (' → logprob: -13.000041007995605
    4. '((' → logprob: -13.375041007995605
    5. ')' → logprob: -14.375041007995605
    6. ')(' → logprob: -15.250041007995605
    7. '(None' → logprob: -15.250041007995605
    8. '(
' → logprob: -15.625041007995605
    9. '   ' → logprob: -16.62504005432129
    10. '(A' → logprob: -16.75004005432129

Token 1266: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018446780450176448
    2. '(' → logprob: -9.625184059143066
    3. ',N' → logprob: -10.375184059143066
    4. '(N' → logprob: -10.625184059143066
    5. ' ,' → logprob: -10.750184059143066
    6. ',A' → logprob: -10.875184059143066
    7. '   ' → logprob: -11.375184059143066
    8. '`,' → logprob: -13.125184059143066
    9. ',
' → logprob: -13.375184059143066
    10. ')' → logprob: -13.750184059143066

Token 1267: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -3.130576806142926e-05
    2. ' A' → logprob: -10.375031471252441
    3. '   ' → logprob: -16.500030517578125
    4. '[A' → logprob: -18.750030517578125
    5. ' ' → logprob: -19.125030517578125
    6. ')' → logprob: -19.125030517578125
    7. '  ' → logprob: -20.500030517578125
    8. '	A' → logprob: -20.625030517578125
    9. '(A' → logprob: -21.500030517578125
    10. '    ' → logprob: -21.500030517578125

Token 1268: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.3795937522663735e-05
    2. ',B' → logprob: -11.50002384185791
    3. ' ,' → logprob: -11.75002384185791
    4. '   ' → logprob: -12.75002384185791
    5. ',
' → logprob: -13.37502384185791
    6. ')' → logprob: -14.75002384185791
    7. ',A' → logprob: -15.62502384185791
    8. '),' → logprob: -16.250022888183594
    9. ',b' → logprob: -16.500022888183594
    10. '[' → logprob: -16.500022888183594

Token 1269: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0019295861711725593
    2. ' B' → logprob: -6.251929759979248
    3. '   ' → logprob: -14.12692928314209
    4. ' ' → logprob: -16.126930236816406
    5. '    ' → logprob: -17.126930236816406
    6. '       ' → logprob: -17.626930236816406
    7. '	B' → logprob: -17.626930236816406
    8. '```' → logprob: -17.626930236816406
    9. '[' → logprob: -17.751930236816406
    10. 'b' → logprob: -17.876930236816406

Token 1270: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0747746154665947
    2. '))' → logprob: -2.8247745037078857
    3. '())' → logprob: -4.449774742126465
    4. ',' → logprob: -7.699774742126465
    5. '()' → logprob: -7.824774742126465
    6. '(),' → logprob: -9.449774742126465
    7. '   ' → logprob: -9.949774742126465
    8. '()))' → logprob: -10.324774742126465
    9. '`)' → logprob: -11.574774742126465
    10. ')))' → logprob: -11.574774742126465

Token 1271: ' sep' (ID: 31529)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sep' → logprob: -0.0004342453321442008
    2. ' sep' → logprob: -7.750434398651123
    3. 'se' → logprob: -13.250433921813965
    4. '   ' → logprob: -13.500433921813965
    5. ' ' → logprob: -15.500433921813965
    6. 'separator' → logprob: -15.500433921813965
    7. 'end' → logprob: -17.37543487548828
    8. ''\' → logprob: -17.50043487548828
    9. '  ' → logprob: -18.25043487548828
    10. 'Sep' → logprob: -19.00043487548828

Token 1272: '='\' (ID: 106410)
  Prédit: ''\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''\' → logprob: -0.5763493776321411
    2. '='\' → logprob: -0.8263493776321411
    3. '"\' → logprob: -8.201349258422852
    4. '="\' → logprob: -9.076349258422852
    5. '('\' → logprob: -11.701349258422852
    6. '+'\' → logprob: -12.576349258422852
    7. ''' → logprob: -12.701349258422852
    8. ''
' → logprob: -13.326349258422852
    9. ''''
' → logprob: -13.576349258422852
    10. '"""
' → logprob: -13.951349258422852

Token 1273: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0005563704180531204
    2. '\n' → logprob: -7.500556468963623
    3. ''\' → logprob: -12.625555992126465
    4. ''n' → logprob: -17.25055694580078
    5. 'newline' → logprob: -17.37555694580078
    6. 'nl' → logprob: -17.37555694580078
    7. '"\' → logprob: -18.00055694580078
    8. ' n' → logprob: -18.25055694580078
    9. '
' → logprob: -18.37555694580078
    10. '```' → logprob: -19.87555694580078

Token 1274: '')

' (ID: 9735)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00044223200529813766
    2. '')' → logprob: -7.750442028045654
    3. '")' → logprob: -12.250442504882812
    4. '`)' → logprob: -12.875442504882812
    5. '   ' → logprob: -13.375442504882812
    6. ')")' → logprob: -13.625442504882812
    7. '))' → logprob: -14.250442504882812
    8. ')
' → logprob: -14.875442504882812
    9. ' )' → logprob: -15.500442504882812
    10. ')`' → logprob: -16.250442504882812

Token 1275: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0007239909609779716
    2. '```' → logprob: -7.500723838806152
    3. ' if' → logprob: -9.125723838806152
    4. '
' → logprob: -10.000723838806152
    5. '``' → logprob: -11.875723838806152
    6. '<|end|>' → logprob: -12.500723838806152
    7. '  
' → logprob: -13.625723838806152
    8. '    
' → logprob: -14.125723838806152
    9. '#' → logprob: -14.125723838806152
    10. 'main' → logprob: -14.375723838806152

Token 1276: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0160394124686718
    2. '__' → logprob: -4.1410393714904785
    3. '_' → logprob: -13.391039848327637
    4. ' _' → logprob: -13.516039848327637
    5. ' ' → logprob: -14.391039848327637
    6. '```' → logprob: -14.641039848327637
    7. '___' → logprob: -14.891039848327637
    8. ' ___' → logprob: -15.141039848327637
    9. '​' → logprob: -15.641039848327637
    10. ' ' → logprob: -16.39103889465332

Token 1277: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.022817350924015045
    2. '==' → logprob: -4.022817134857178
    3. ' ==' → logprob: -6.147817134857178
    4. '__.__' → logprob: -7.272817134857178
    5. '=="' → logprob: -7.647817134857178
    6. '```' → logprob: -8.147817611694336
    7. '=='' → logprob: -8.647817611694336
    8. '__":
' → logprob: -9.022817611694336
    9. '[' → logprob: -9.022817611694336
    10. '__["' → logprob: -9.397817611694336

Token 1278: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0006156971794553101
    2. '__.__' → logprob: -7.75061559677124
    3. '__('' → logprob: -9.125616073608398
    4. '=='' → logprob: -10.750616073608398
    5. '=="' → logprob: -11.625616073608398
    6. '==' → logprob: -11.625616073608398
    7. '___' → logprob: -11.875616073608398
    8. '__["' → logprob: -11.875616073608398
    9. '__':
' → logprob: -12.625616073608398
    10. '____' → logprob: -12.750616073608398

Token 1279: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8442618250846863
    2. '__' → logprob: -0.8442618250846863
    3. '=='' → logprob: -2.594261884689331
    4. '=="' → logprob: -3.219261884689331
    5. ' ==' → logprob: -3.719261884689331
    6. '__.__' → logprob: -8.34426212310791
    7. '['' → logprob: -8.34426212310791
    8. '==='' → logprob: -8.34426212310791
    9. '===' → logprob: -9.21926212310791
    10. '[' → logprob: -9.46926212310791

Token 1280: ' '__' (ID: 28278)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.10025348514318466
    2. '"' → logprob: -2.3502535820007324
    3. '__' → logprob: -9.975253105163574
    4. ' '__' → logprob: -16.10025405883789
    5. ' "__' → logprob: -16.10025405883789
    6. '   ' → logprob: -16.72525405883789
    7. '('__' → logprob: -17.47525405883789
    8. ' ' → logprob: -18.85025405883789
    9. ''app' → logprob: -18.85025405883789
    10. ''name' → logprob: -19.35025405883789

Token 1281: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.01119141187518835
    2. '__' → logprob: -4.511191368103027
    3. '_main' → logprob: -9.136191368103027
    4. 'name' → logprob: -10.261191368103027
    5. 'm' → logprob: -15.261191368103027
    6. ' main' → logprob: -15.261191368103027
    7. '__':
' → logprob: -15.511191368103027
    8. '___' → logprob: -16.636192321777344
    9. ''' → logprob: -17.011192321777344
    10. '__
' → logprob: -17.136192321777344

Token 1282: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.34998437762260437
    2. '__' → logprob: -1.2249844074249268
    3. '__":
' → logprob: -6.849984169006348
    4. '__:' → logprob: -7.724984169006348
    5. '__('' → logprob: -11.724984169006348
    6. ':' → logprob: -12.099984169006348
    7. '==' → logprob: -12.349984169006348
    8. '__
' → logprob: -12.724984169006348
    9. '_' → logprob: -13.224984169006348
    10. '**' → logprob: -13.224984169006348

Token 1283: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.007373064756393433
    2. '   ' → logprob: -5.132372856140137
    3. '	main' → logprob: -7.257372856140137
    4. '__' → logprob: -8.007372856140137
    5. ' main' → logprob: -8.632372856140137
    6. '_main' → logprob: -9.007372856140137
    7. '```' → logprob: -9.632372856140137
    8. '    
' → logprob: -12.257372856140137
    9. '(main' → logprob: -12.257372856140137
    10. 'Main' → logprob: -12.507372856140137

Token 1284: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.5048530030981055e-06
    2. ' main' → logprob: -14.250001907348633
    3. '	main' → logprob: -14.750001907348633
    4. '   ' → logprob: -15.125001907348633
    5. '_main' → logprob: -16.875001907348633
    6. '```' → logprob: -19.375001907348633
    7. '(main' → logprob: -20.250001907348633
    8. 'import' → logprob: -20.500001907348633
    9. '__' → logprob: -21.000001907348633
    10. 'Main' → logprob: -21.750001907348633

Token 1285: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1283
Tokens correctement prédits (1ère position, stricte): 341
Tokens correctement prédits (1ère position, avec adaptation): 378
Tokens correctement prédits (top 10): 806
Précision stricte (1ère position): 26.58%
Précision adaptée (1ère position): 29.46%
Précision (top 10): 62.82%
================================================================================
