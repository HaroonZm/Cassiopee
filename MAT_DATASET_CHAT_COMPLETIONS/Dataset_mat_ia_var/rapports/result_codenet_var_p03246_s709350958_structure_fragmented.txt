================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:07:35
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def read_input():
    return int(input()), [int(x) for x in input().split()]

def create_count_dict():
    return {}

def update_dict(d, k):
    try:
        d[k] += 1
    except KeyError:
        d[k] = 1

def process_series(series, n, even_dict, odd_dict):
    for i in range(n):
        k = series[i]
        if i % 2 == 0:
            update_dict(even_dict, k)
        else:
            update_dict(odd_dict, k)

def extract_counts(count_dict):
    result = []
    for key in count_dict:
        result.append([count_dict[key], key])
    return result

def sort_counts(vals):
    vals.sort(reverse=True)
    return vals

def get_single_case_counts(odd_vals, even_vals):
    return odd_vals[0][0], even_vals[0][0], odd_vals[0][1], even_vals[0][1]

def get_multi_case_counts(odd_vals, even_vals):
    a = odd_vals[0][0]
    b = odd_vals[1][0]
    c = even_vals[0][0]
    d = even_vals[1][0]
    return a, b, c, d

def single_case(n, odd_vals, even_vals):
    a, b, odd_key, even_key = get_single_case_counts(odd_vals, even_vals)
    if odd_key != even_key:
        print(n - a - b)
    else:
        print(n // 2)

def multi_case(n, odd_vals, even_vals):
    if odd_vals[0][1] != even_vals[0][1]:
        print(n - odd_vals[0][0] - even_vals[0][0])
    else:
        a, b, c, d = get_multi_case_counts(odd_vals, even_vals)
        print(min(n - a - d, n - b - c))

def mixed_case(n, odd_vals, even_vals):
    a = odd_vals[0][0]
    b = even_vals[0][0]
    if len(odd_vals) == 1:
        c = even_vals[1][0]
    else:
        c = odd_vals[1][0]
    if odd_vals[0][1] != even_vals[0][1]:
        print(n - a - b)
    else:
        print(n - a - c)

def main():
    n, series = read_input()
    odd_dict = create_count_dict()
    even_dict = create_count_dict()
    process_series(series, n, even_dict, odd_dict)
    odd_vals = extract_counts(odd_dict)
    even_vals = extract_counts(even_dict)
    odd_vals = sort_counts(odd_vals)
    even_vals = sort_counts(even_vals)
    odd_len = len(odd_vals)
    even_len = len(even_vals)
    if odd_len == 1 and even_len == 1:
        single_case(n, odd_vals, even_vals)
    elif odd_len > 1 and even_len > 1:
        multi_case(n, odd_vals, even_vals)
    else:
        mixed_case(n, odd_vals, even_vals)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' read' (ID: 1729)
  → Token d'amorce (pas de prédiction)

Token 2: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002494683489203453
    2. '_' → logprob: -6.877494812011719
    3. '():' → logprob: -7.127494812011719
    4. '(:' → logprob: -8.252494812011719
    5. '```' → logprob: -8.877494812011719
    6. '(_:' → logprob: -9.377494812011719
    7. ':' → logprob: -9.752494812011719
    8. ' (' → logprob: -10.002494812011719
    9. '(_' → logprob: -10.877494812011719
    10. '()' → logprob: -12.502494812011719

Token 4: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.988785445690155
    2. '\' → logprob: -1.2387855052947998
    3. '\n' → logprob: -1.3637855052947998
    4. '   ' → logprob: -3.1137855052948
    5. '    
' → logprob: -4.863785266876221
    6. '
' → logprob: -5.113785266876221
    7. ' 
' → logprob: -5.613785266876221
    8. '``' → logprob: -5.863785266876221
    9. ':' → logprob: -6.113785266876221
    10. ''\' → logprob: -6.613785266876221

Token 5: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40832003951072693
    2. '```' → logprob: -2.1583199501037598
    3. 'return' (adapté à ' return') → logprob: -2.6583199501037598
    4. '    ' → logprob: -3.4083199501037598
    5. 'input' → logprob: -3.6583199501037598
    6. 'r' → logprob: -3.6583199501037598
    7. 'x' → logprob: -4.28331995010376
    8. '\' → logprob: -4.40831995010376
    9. '       ' → logprob: -4.78331995010376
    10. '`' → logprob: -5.28331995010376

Token 6: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21321910619735718
    2. ' input' → logprob: -2.213219165802002
    3. 'input' → logprob: -3.088219165802002
    4. '"' → logprob: -3.463219165802002
    5. ''' → logprob: -5.588219165802002
    6. ' []' → logprob: -7.588219165802002
    7. '  ' → logprob: -7.963219165802002
    8. ' "' → logprob: -8.463218688964844
    9. ' None' → logprob: -9.088218688964844
    10. '(input' → logprob: -9.213218688964844

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005015624337829649
    2. '('' → logprob: -8.37550163269043
    3. ''' → logprob: -9.62550163269043
    4. '```' → logprob: -9.62550163269043
    5. ' (' → logprob: -10.75050163269043
    6. '`' → logprob: -11.00050163269043
    7. '(open' → logprob: -11.00050163269043
    8. '("("' → logprob: -11.12550163269043
    9. '(input' → logprob: -11.25050163269043
    10. '()' → logprob: -11.50050163269043

Token 8: '()),' (ID: 24379)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.23295630514621735
    2. '(' → logprob: -1.8579562902450562
    3. '()' → logprob: -3.7329564094543457
    4. ')' → logprob: -3.9829564094543457
    5. '()))' → logprob: -4.982956409454346
    6. '))' → logprob: -6.982956409454346
    7. '(()' → logprob: -7.607956409454346
    8. ' ())' → logprob: -8.232955932617188
    9. '('' → logprob: -8.482955932617188
    10. '(""))' → logprob: -8.732955932617188

Token 9: ' [' (ID: 723)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 10: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.028137069195508957
    2. '0' → logprob: -4.02813720703125
    3. ']' → logprob: -5.77813720703125
    4. ' int' → logprob: -5.90313720703125
    5. 'input' → logprob: -6.52813720703125
    6. ']int' → logprob: -7.02813720703125
    7. 'map' → logprob: -7.27813720703125
    8. 'x' → logprob: -8.02813720703125
    9. ' ' → logprob: -9.02813720703125
    10. 'i' → logprob: -9.15313720703125

Token 11: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5899866819381714
    2. '(x' → logprob: -0.8399866819381714
    3. '(input' → logprob: -4.589986801147461
    4. '(i' → logprob: -5.714986801147461
    5. '(token' → logprob: -8.964986801147461
    6. '()]' → logprob: -9.339986801147461
    7. ']' → logprob: -9.464986801147461
    8. '(s' → logprob: -9.964986801147461
    9. '(item' → logprob: -10.089986801147461
    10. '(value' → logprob: -11.339986801147461

Token 12: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003297489834949374
    2. 'for' → logprob: -6.253297328948975
    3. ' for' → logprob: -7.128297328948975
    4. '(x' → logprob: -8.253297805786133
    5. ' )' → logprob: -8.878297805786133
    6. ')]' → logprob: -9.378297805786133
    7. ')])' → logprob: -10.503297805786133
    8. '')' → logprob: -11.253297805786133
    9. ']' → logprob: -12.253297805786133
    10. '   ' → logprob: -12.628297805786133

Token 13: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14321351051330566
    2. ' for' → logprob: -2.0182135105133057
    3. '(x' → logprob: -7.768213272094727
    4. ')' → logprob: -9.393213272094727
    5. ']' → logprob: -11.518213272094727
    6. '```' → logprob: -11.768213272094727
    7. '(' → logprob: -12.643213272094727
    8. '	for' → logprob: -12.893213272094727
    9. 'x' → logprob: -13.018213272094727
    10. 'in' → logprob: -13.518213272094727

Token 14: ' x' (ID: 1215)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.0010429323883727193
    2. 'input' → logprob: -6.87604284286499
    3. ' ' → logprob: -12.501043319702148
    4. '(input' → logprob: -12.501043319702148
    5. ' range' → logprob: -14.126043319702148
    6. ' in' → logprob: -14.501043319702148
    7. ' x' → logprob: -14.751043319702148
    8. ' the' → logprob: -15.001043319702148
    9. '=input' → logprob: -15.251043319702148
    10. '_' → logprob: -16.50104331970215

Token 15: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.062058545649051666
    2. 'in' → logprob: -2.812058448791504
    3. 'n' → logprob: -10.187058448791504
    4. ' ' → logprob: -10.687058448791504
    5. 'input' → logprob: -11.937058448791504
    6. 'import' → logprob: -12.562058448791504
    7. '	in' → logprob: -13.062058448791504
    8. '  ' → logprob: -13.312058448791504
    9. 's' → logprob: -13.437058448791504
    10. 'x' → logprob: -13.437058448791504

Token 16: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.029776528477668762
    2. ' input' → logprob: -3.5297765731811523
    3. 'range' → logprob: -10.654776573181152
    4. ' range' → logprob: -13.404776573181152
    5. '(input' → logprob: -14.279776573181152
    6. ' ' → logprob: -16.154775619506836
    7. '<input' → logprob: -16.404775619506836
    8. '=input' → logprob: -16.904775619506836
    9. '[input' → logprob: -17.404775619506836
    10. '	input' → logprob: -17.779775619506836

Token 17: '().' (ID: 1454)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.21389839053153992
    2. '()' → logprob: -1.7138984203338623
    3. '())' → logprob: -4.463898181915283
    4. '().' → logprob: -7.088898181915283
    5. '()].' → logprob: -10.713898658752441
    6. '(' → logprob: -11.713898658752441
    7. ']()' → logprob: -12.088898658752441
    8. '()][' → logprob: -12.213898658752441
    9. '()],' → logprob: -12.713898658752441
    10. '()`' → logprob: -12.838898658752441

Token 18: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.004114019684493542
    2. 'strip' → logprob: -5.504114151000977
    3. 'rstrip' → logprob: -10.254114151000977
    4. ' split' → logprob: -14.754114151000977
    5. '(split' → logprob: -18.004114151000977
    6. 'spl' → logprob: -18.129114151000977
    7. ' strip' → logprob: -19.504114151000977
    8. 's' → logprob: -19.879114151000977
    9. '.split' → logprob: -20.754114151000977
    10. 'read' → logprob: -21.129114151000977

Token 19: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.05664953589439392
    2. '())' → logprob: -3.3066494464874268
    3. '()' → logprob: -4.056649684906006
    4. '(' → logprob: -7.181649684906006
    5. '('' → logprob: -8.056649208068848
    6. ')]' → logprob: -10.806649208068848
    7. ']' → logprob: -11.931649208068848
    8. '()],' → logprob: -12.431649208068848
    9. '("' → logprob: -12.806649208068848
    10. ')])' → logprob: -12.931649208068848

Token 20: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.020212143659591675
    2. ')]' → logprob: -4.270212173461914
    3. '])' → logprob: -5.145212173461914
    4. '']' → logprob: -9.645212173461914
    5. '])]' → logprob: -10.145212173461914
    6. '`]' → logprob: -10.270212173461914
    7. ')' → logprob: -10.395212173461914
    8. ')])' → logprob: -11.395212173461914
    9. '()]' → logprob: -11.645212173461914
    10. ' ]' → logprob: -12.145212173461914

Token 21: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5762753486633301
    2. '```' → logprob: -1.70127534866333
    3. '#' → logprob: -2.57627534866333
    4. 'def' → logprob: -2.70127534866333
    5. 'd' → logprob: -3.20127534866333
    6. '<|end|>' → logprob: -3.95127534866333
    7. '' → logprob: -4.20127534866333
    8. 'newline' → logprob: -4.70127534866333
    9. '\' → logprob: -5.20127534866333
    10. '\n' → logprob: -5.45127534866333

Token 22: ' create' (ID: 2501)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.4678158462047577
    2. ' main' → logprob: -1.59281587600708
    3. ' process' → logprob: -2.34281587600708
    4. ' calculate' → logprob: -3.46781587600708
    5. ' sort' → logprob: -4.84281587600708
    6. ' factorial' → logprob: -5.21781587600708
    7. ' binary' → logprob: -5.34281587600708
    8. ' max' → logprob: -5.46781587600708
    9. ' compute' → logprob: -5.59281587600708
    10. ' write' → logprob: -6.34281587600708

Token 23: '_count' (ID: 7536)
  Prédit: '_array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.05240420252084732
    2. '_' → logprob: -3.5524041652679443
    3. '_stack' → logprob: -5.177404403686523
    4. '_list' → logprob: -5.677404403686523
    5. '_tree' → logprob: -6.177404403686523
    6. '_heap' → logprob: -6.302404403686523
    7. '_matrix' → logprob: -6.927404403686523
    8. '_table' → logprob: -7.177404403686523
    9. '_bucket' → logprob: -7.552404403686523
    10. '_queue' → logprob: -7.677404403686523

Token 24: '_dict' (ID: 11295)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06943576782941818
    2. '_' → logprob: -3.3194358348846436
    3. '_array' → logprob: -4.8194355964660645
    4. '_s' → logprob: -5.5694355964660645
    5. '_items' → logprob: -5.6944355964660645
    6. '(' → logprob: -5.8194355964660645
    7. '_map' → logprob: -6.0694355964660645
    8. '_counts' → logprob: -6.1944355964660645
    9. '_dict' → logprob: -6.5694355964660645
    10. '_list' → logprob: -6.8194355964660645

Token 25: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002448893792461604
    2. ' (' → logprob: -9.625245094299316
    3. '("("' → logprob: -10.000245094299316
    4. '()' → logprob: -10.375245094299316
    5. '_' → logprob: -10.750245094299316
    6. '   ' → logprob: -11.250245094299316
    7. '((' → logprob: -11.875245094299316
    8. 's' → logprob: -12.000245094299316
    9. '```' → logprob: -12.375245094299316
    10. 'def' → logprob: -12.375245094299316

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.039585430175065994
    2. '():' → logprob: -5.039585590362549
    3. '()' → logprob: -5.039585590362549
    4. 'def' → logprob: -5.164585590362549
    5. '{}' → logprob: -6.164585590362549
    6. ' ' → logprob: -6.164585590362549
    7. '[]' → logprob: -6.289585590362549
    8. '(n' → logprob: -6.289585590362549
    9. 'counter' → logprob: -6.789585590362549
    10. ' defaultdict' → logprob: -6.789585590362549

Token 27: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10465490818023682
    2. '{}' → logprob: -3.3546547889709473
    3. ' ' → logprob: -3.6046547889709473
    4. ' defaultdict' → logprob: -4.229654788970947
    5. '    ' → logprob: -5.229654788970947
    6. ' {}' → logprob: -5.354654788970947
    7. '{' → logprob: -6.354654788970947
    8. 'return' (adapté à ' return') → logprob: -6.479654788970947
    9. 'count' → logprob: -6.604654788970947
    10. 'counter' → logprob: -6.729654788970947

Token 28: ' {}

' (ID: 21724)
  Prédit: ' {}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' {}' → logprob: -0.5017909407615662
    2. '{}' → logprob: -1.001791000366211
    3. ' defaultdict' → logprob: -3.751791000366211
    4. 'default' → logprob: -5.626791000366211
    5. 'dict' → logprob: -9.251791000366211
    6. ' dict' → logprob: -9.626791000366211
    7. ' ' → logprob: -10.626791000366211
    8. ' collections' → logprob: -11.251791000366211
    9. ' default' → logprob: -11.376791000366211
    10. ' {}\' → logprob: -11.626791000366211

Token 29: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0004744023026432842
    2. '<|end|>' → logprob: -8.000473976135254
    3. '
' → logprob: -10.625473976135254
    4. '_' → logprob: -10.625473976135254
    5. '<|end|>' → logprob: -11.375473976135254
    6. ' def' → logprob: -11.375473976135254
    7. '```' → logprob: -11.500473976135254
    8. '

' → logprob: -11.625473976135254
    9. 'd' → logprob: -12.125473976135254
    10. '(' → logprob: -12.375473976135254

Token 30: ' update' (ID: 4027)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.46108293533325195
    2. 'count' → logprob: -2.086082935333252
    3. ' update' → logprob: -2.586082935333252
    4. ' process' → logprob: -2.711082935333252
    5. ' main' → logprob: -3.086082935333252
    6. ' add' → logprob: -4.586082935333252
    7. ' solve' → logprob: -4.711082935333252
    8. ' increment' → logprob: -5.336082935333252
    9. 'process' → logprob: -5.586082935333252
    10. 'update' → logprob: -5.836082935333252

Token 31: '_dict' (ID: 11295)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.01674571819603443
    2. '_counts' → logprob: -4.516745567321777
    3. '_' → logprob: -5.391745567321777
    4. '_counter' → logprob: -7.516745567321777
    5. '(' → logprob: -8.266745567321777
    6. '_(' → logprob: -9.266745567321777
    7. '```' → logprob: -9.641745567321777
    8. '(_' → logprob: -10.266745567321777
    9. '_dict' → logprob: -10.391745567321777
    10. '_frequency' → logprob: -11.016745567321777

Token 32: '(d' (ID: 2572)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09703158587217331
    2. '_count' → logprob: -3.722031593322754
    3. '_counts' → logprob: -4.347031593322754
    4. '(count' → logprob: -4.347031593322754
    5. '(dict' → logprob: -4.347031593322754
    6. '(d' → logprob: -4.472031593322754
    7. '(_' → logprob: -5.097031593322754
    8. ' (' → logprob: -5.222031593322754
    9. '_dict' → logprob: -6.597031593322754
    10. '_' → logprob: -6.597031593322754

Token 33: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032231067307293415
    2. ' ,' → logprob: -6.378222942352295
    3. 'ictionary' → logprob: -7.503222942352295
    4. ')' → logprob: -8.253223419189453
    5. ',d' → logprob: -8.628223419189453
    6. '[' → logprob: -8.878223419189453
    7. ',[' → logprob: -9.003223419189453
    8. 'ef' → logprob: -10.003223419189453
    9. 'ict' → logprob: -10.378223419189453
    10. ',a' → logprob: -10.878223419189453

Token 34: ' k' (ID: 372)
  Prédit: ' key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.1775062382221222
    2. 'key' → logprob: -3.6775062084198
    3. ' k' → logprob: -3.8025062084198
    4. ' arr' → logprob: -3.9275062084198
    5. ' n' → logprob: -4.052506446838379
    6. ' num' → logprob: -4.677506446838379
    7. ' value' → logprob: -4.677506446838379
    8. ' val' → logprob: -4.927506446838379
    9. 'arr' → logprob: -5.427506446838379
    10. ' keys' → logprob: -5.427506446838379

Token 35: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07095255702733994
    2. '):' → logprob: -2.9459526538848877
    3. 'ey' → logprob: -4.445952415466309
    4. '):
' → logprob: -5.820952415466309
    5. 'eys' → logprob: -7.445952415466309
    6. ' ,' → logprob: -7.695952415466309
    7. ',count' → logprob: -10.070952415466309
    8. ' ):' → logprob: -10.195952415466309
    9. ')' → logprob: -10.320952415466309
    10. '   ' → logprob: -11.195952415466309

Token 36: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5629323124885559
    2. 'd' → logprob: -1.1879322528839111
    3. ':' → logprob: -2.812932252883911
    4. ' d' → logprob: -3.312932252883911
    5. ' :' → logprob: -5.06293249130249
    6. ',' → logprob: -5.31293249130249
    7. '[d' → logprob: -5.81293249130249
    8. '    ' → logprob: -5.93793249130249
    9. ' ' → logprob: -6.06293249130249
    10. '):' → logprob: -6.31293249130249

Token 37: ' try' (ID: 2075)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.47941410541534424
    2. 'd' → logprob: -0.9794141054153442
    3. ' if' → logprob: -5.729413986206055
    4. '   ' → logprob: -6.229413986206055
    5. 'if' → logprob: -9.604413986206055
    6. '	d' → logprob: -11.479413986206055
    7. ' ' → logprob: -11.854413986206055
    8. 'k' → logprob: -12.479413986206055
    9. '    ' → logprob: -12.729413986206055
    10. '_d' → logprob: -12.854413986206055

Token 38: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004852072801440954
    2. ':
' → logprob: -5.379852294921875
    3. ' :' → logprob: -8.504852294921875
    4. '   ' → logprob: -11.629852294921875
    5. '[' → logprob: -11.879852294921875
    6. ' :
' → logprob: -12.754852294921875
    7. ':

' → logprob: -13.004852294921875
    8. ':
' → logprob: -13.254852294921875
    9. '       ' → logprob: -13.754852294921875
    10. '    ' → logprob: -14.004852294921875

Token 39: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02621692791581154
    2. '   ' → logprob: -4.276216983795166
    3. '[' → logprob: -5.401216983795166
    4. '[d' → logprob: -6.026216983795166
    5. ':' → logprob: -6.151216983795166
    6. 'd' → logprob: -6.276216983795166
    7. ':
' → logprob: -7.651216983795166
    8. ' d' → logprob: -8.901216506958008
    9. ':d' → logprob: -9.151216506958008
    10. '	d' → logprob: -9.401216506958008

Token 40: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.12785713374614716
    2. 'd' (adapté à ' d') → logprob: -2.127857208251953
    3. '   ' → logprob: -7.252857208251953
    4. '       ' → logprob: -8.502857208251953
    5. '	d' → logprob: -11.502857208251953
    6. '1' → logprob: -13.627857208251953
    7. '           ' → logprob: -13.627857208251953
    8. ')d' → logprob: -13.877857208251953
    9. ' ' → logprob: -14.127857208251953
    10. '[d' → logprob: -14.377857208251953

Token 41: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -2.045823566731997e-05
    2. '[' → logprob: -11.000020027160645
    3. 'k' → logprob: -12.625020027160645
    4. '[key' → logprob: -15.375020027160645
    5. ' k' → logprob: -16.25002098083496
    6. ' [' → logprob: -17.00002098083496
    7. ',k' → logprob: -17.25002098083496
    8. '	k' → logprob: -17.62502098083496
    9. '[i' → logprob: -18.12502098083496
    10. '[d' → logprob: -18.37502098083496

Token 42: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012571105733513832
    2. ']+=' → logprob: -4.387571334838867
    3. ' ]' → logprob: -10.137571334838867
    4. '']' → logprob: -11.012571334838867
    5. '`]' → logprob: -13.637571334838867
    6. ']+' → logprob: -13.887571334838867
    7. ']=' → logprob: -14.012571334838867
    8. '+=' → logprob: -14.512571334838867
    9. '[' → logprob: -14.512571334838867
    10. '"]' → logprob: -14.637571334838867

Token 43: ' +=' (ID: 2757)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.22711513936519623
    2. ']+=' → logprob: -1.6021151542663574
    3. '+=' → logprob: -6.727115154266357
    4. ' ]' → logprob: -8.2271146774292
    5. ' +=' → logprob: -8.6021146774292
    6. '[' → logprob: -11.1021146774292
    7. ']=' → logprob: -11.3521146774292
    8. '']' → logprob: -11.6021146774292
    9. '   ' → logprob: -12.8521146774292
    10. '```' → logprob: -13.1021146774292

Token 44: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014163747429847717
    2. ' ' → logprob: -4.264163970947266
    3. '   ' → logprob: -15.764163970947266
    4. '<|end|>' → logprob: -16.639163970947266
    5. '  ' → logprob: -17.139163970947266
    6. ' ' → logprob: -18.889163970947266
    7. '```' → logprob: -19.264163970947266
    8. '0' → logprob: -19.951663970947266
    9. '2' → logprob: -20.014163970947266
    10. '    ' → logprob: -20.139163970947266

Token 45: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. 'd' → logprob: -19.5000057220459
    4. '   ' → logprob: -19.8125057220459
    5. 'a' → logprob: -20.3125057220459
    6. '2' → logprob: -20.6875057220459
    7. '0' → logprob: -20.8125057220459
    8. '１' → logprob: -20.9375057220459
    9. '```' → logprob: -21.0000057220459
    10. '3' → logprob: -21.3750057220459

Token 46: '
' (ID: 198)
  Prédit: 'except'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'except' → logprob: -0.5228138566017151
    2. '   ' → logprob: -1.1478137969970703
    3. ' except' → logprob: -3.0228137969970703
    4. '       ' → logprob: -3.2728137969970703
    5. '	except' → logprob: -6.14781379699707
    6. '
' → logprob: -7.02281379699707
    7. 'Except' → logprob: -9.14781379699707
    8. '    
' → logprob: -10.27281379699707
    9. '_except' → logprob: -11.02281379699707
    10. '<|end|>' → logprob: -11.27281379699707

Token 47: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1854870468378067
    2. 'except' → logprob: -2.3104870319366455
    3. '       ' → logprob: -3.1854870319366455
    4. ' except' → logprob: -3.6854870319366455
    5. '
' → logprob: -5.935487270355225
    6. '	except' → logprob: -7.060487270355225
    7. '    
' → logprob: -10.185486793518066
    8. 'Except' → logprob: -10.810486793518066
    9. '<|end|>' → logprob: -11.185486793518066
    10. '```' → logprob: -11.435486793518066

Token 48: ' except' (ID: 6384)
  Prédit: 'except'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'except' (adapté à ' except') → logprob: -0.20315922796726227
    2. ' except' → logprob: -1.703159213066101
    3. '   ' → logprob: -6.453159332275391
    4. '	except' → logprob: -8.70315933227539
    5. 'Except' → logprob: -13.95315933227539
    6. '
' → logprob: -14.32815933227539
    7. '_except' → logprob: -14.45315933227539
    8. '       ' → logprob: -15.45315933227539
    9. '    
' → logprob: -15.95315933227539
    10. 'ex' → logprob: -16.07815933227539

Token 49: ' Key' (ID: 7926)
  Prédit: 'Key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Key' → logprob: -0.004488631151616573
    2. ' Key' → logprob: -5.504488468170166
    3. '	Key' → logprob: -8.004488945007324
    4. '(Key' → logprob: -9.879488945007324
    5. '<Key' → logprob: -10.879488945007324
    6. ' ' → logprob: -13.379488945007324
    7. '_key' → logprob: -13.879488945007324
    8. '_Key' → logprob: -13.879488945007324
    9. '.Key' → logprob: -14.379488945007324
    10. 'K' → logprob: -14.379488945007324

Token 50: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -1.676292231422849e-05
    2. 'rror' → logprob: -11.000017166137695
    3. 'error' → logprob: -17.375017166137695
    4. ' Error' → logprob: -19.125017166137695
    5. '   ' → logprob: -19.375017166137695
    6. '```' → logprob: -20.000017166137695
    7. '	Error' → logprob: -20.000017166137695
    8. 'Erro' → logprob: -20.125017166137695
    9. 'LError' → logprob: -21.125017166137695
    10. '>Error' → logprob: -21.625017166137695

Token 51: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012563214637339115
    2. ':
' → logprob: -4.387563228607178
    3. '       ' → logprob: -10.13756275177002
    4. '   ' → logprob: -11.76256275177002
    5. ' :' → logprob: -12.63756275177002
    6. '):
' → logprob: -14.51256275177002
    7. ':

' → logprob: -14.76256275177002
    8. ' :
' → logprob: -14.88756275177002
    9. '):' → logprob: -15.13756275177002
    10. ':return' → logprob: -15.38756275177002

Token 52: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003347397781908512
    2. 'd' → logprob: -6.003347396850586
    3. ' d' → logprob: -7.128347396850586
    4. '   ' → logprob: -9.753347396850586
    5. ',d' → logprob: -12.878347396850586
    6. '	d' → logprob: -13.253347396850586
    7. '      ' → logprob: -14.003347396850586
    8. '           ' → logprob: -14.003347396850586
    9. ',' → logprob: -14.503347396850586
    10. '     ' → logprob: -14.628347396850586

Token 53: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.4111654758453369
    2. ' d' → logprob: -1.161165475845337
    3. '       ' → logprob: -3.786165475845337
    4. '   ' → logprob: -6.661165237426758
    5. '	d' → logprob: -10.786165237426758
    6. ' ' → logprob: -11.411165237426758
    7. '  ' → logprob: -13.036165237426758
    8. '           ' → logprob: -13.161165237426758
    9. '     ' → logprob: -14.036165237426758
    10. '      ' → logprob: -14.161165237426758

Token 54: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.00021676832693628967
    2. '[' → logprob: -8.500216484069824
    3. '[key' → logprob: -11.875216484069824
    4. '.setdefault' → logprob: -13.500216484069824
    5. '```' → logprob: -13.500216484069824
    6. 'k' → logprob: -14.500216484069824
    7. '\[' → logprob: -14.500216484069824
    8. '[i' → logprob: -15.000216484069824
    9. '__[' → logprob: -15.000216484069824
    10. '[d' → logprob: -15.250216484069824

Token 55: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00014191943046171218
    2. ']=' → logprob: -8.875142097473145
    3. ' ]' → logprob: -13.750142097473145
    4. '']' → logprob: -14.750142097473145
    5. '=' → logprob: -15.125142097473145
    6. '"]' → logprob: -15.875142097473145
    7. '`]' → logprob: -16.250141143798828
    8. ']+=' → logprob: -17.250141143798828
    9. ']==' → logprob: -17.500141143798828
    10. ']]' → logprob: -17.500141143798828

Token 56: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -6.659005157416686e-05
    2. ' =' → logprob: -9.625066757202148
    3. '[' → logprob: -14.875066757202148
    4. ']=' → logprob: -16.37506675720215
    5. ']' → logprob: -17.12506675720215
    6. '=
' → logprob: -18.50006675720215
    7. '.=' → logprob: -19.25006675720215
    8. '=}' → logprob: -19.37506675720215
    9. '[]=' → logprob: -19.37506675720215
    10. '_=' → logprob: -19.50006675720215

Token 57: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026303084567189217
    2. ' ' → logprob: -3.6513030529022217
    3. '0' → logprob: -13.4013032913208
    4. '   ' → logprob: -13.9013032913208
    5. '<|end|>' → logprob: -15.8388032913208
    6. '  ' → logprob: -16.213802337646484
    7. '```' → logprob: -16.963802337646484
    8. '    ' → logprob: -17.276302337646484
    9. ' ' → logprob: -17.651302337646484
    10. '2' → logprob: -17.713802337646484

Token 58: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.822646693966817e-06
    2. ' ' → logprob: -11.875007629394531
    3. '0' → logprob: -14.000007629394531
    4. '   ' → logprob: -18.56250762939453
    5. '2' → logprob: -19.37500762939453
    6. '<|end|>' → logprob: -19.37500762939453
    7. '```' → logprob: -19.56250762939453
    8. '۱' → logprob: -20.06250762939453
    9. 'def' → logprob: -20.68750762939453
    10. '' → logprob: -20.81250762939453

Token 59: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 60: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0011258102022111416
    2. '
' → logprob: -6.876125812530518
    3. '

' → logprob: -9.62612533569336
    4. '<|end|>' → logprob: -11.50112533569336
    5. ' def' → logprob: -12.12612533569336
    6. '```' → logprob: -12.75112533569336
    7. '\' → logprob: -13.12612533569336
    8. 'return' → logprob: -14.12612533569336
    9. 'for' → logprob: -14.25112533569336
    10. '<|end|>' → logprob: -14.37612533569336

Token 61: ' process' (ID: 2273)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.34248480200767517
    2. ' count' → logprob: -1.8424848318099976
    3. 'main' → logprob: -3.342484712600708
    4. 'count' → logprob: -3.467484712600708
    5. ' solve' → logprob: -3.967484712600708
    6. ' process' → logprob: -3.967484712600708
    7. ' find' → logprob: -5.092484951019287
    8. ' calculate' → logprob: -5.967484951019287
    9. 'process' → logprob: -6.092484951019287
    10. ' get' → logprob: -6.217484951019287

Token 62: '_series' (ID: 86499)
  Prédit: '_array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_array' → logprob: -1.0512704849243164
    2. '(' → logprob: -1.4262704849243164
    3. '_list' → logprob: -2.1762704849243164
    4. '_' → logprob: -2.4262704849243164
    5. '_data' → logprob: -3.0512704849243164
    6. '_items' → logprob: -3.0512704849243164
    7. '_elements' → logprob: -3.6762704849243164
    8. '_input' → logprob: -3.6762704849243164
    9. '_counts' → logprob: -4.301270484924316
    10. '_values' → logprob: -4.801270484924316

Token 63: '(series' (ID: 155571)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5591422319412231
    2. '(series' → logprob: -1.4341422319412231
    3. '(s' → logprob: -1.8091422319412231
    4. '(n' → logprob: -3.9341421127319336
    5. '(k' → logprob: -6.434142112731934
    6. '(a' → logprob: -7.059142112731934
    7. '(data' → logprob: -7.309142112731934
    8. '(nums' → logprob: -7.684142112731934
    9. '(numbers' → logprob: -8.184142112731934
    10. '(size' → logprob: -8.434142112731934

Token 64: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0004007600946351886
    2. ',' → logprob: -8.50040054321289
    3. '):
' → logprob: -9.50040054321289
    4. ' ):' → logprob: -10.00040054321289
    5. '   ' → logprob: -10.37540054321289
    6. ':' → logprob: -10.37540054321289
    7. ')' → logprob: -12.37540054321289
    8. '[' → logprob: -13.00040054321289
    9. '[]):' → logprob: -13.25040054321289
    10. ']:' → logprob: -13.50040054321289

Token 65: ' n' (ID: 297)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7879751324653625
    2. ' d' → logprob: -1.6629750728607178
    3. 'k' → logprob: -2.5379750728607178
    4. 'count' → logprob: -2.6629750728607178
    5. ' count' → logprob: -3.1629750728607178
    6. ' k' → logprob: -3.4129750728607178
    7. ' counts' → logprob: -3.5379750728607178
    8. 'n' → logprob: -4.037975311279297
    9. 'counts' → logprob: -4.287975311279297
    10. ' n' → logprob: -4.412975311279297

Token 66: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00012403888104017824
    2. ' ):' → logprob: -9.875123977661133
    3. '):
' → logprob: -10.250123977661133
    4. ')' → logprob: -10.375123977661133
    5. ',' → logprob: -13.125123977661133
    6. ':' → logprob: -13.500123977661133
    7. '=' → logprob: -14.000123977661133
    8. '_' → logprob: -14.500123977661133
    9. '   ' → logprob: -15.125123977661133
    10. 'e' → logprob: -16.125123977661133

Token 67: ' even' (ID: 1952)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.9466792941093445
    2. 'd' → logprob: -1.6966793537139893
    3. ' k' → logprob: -2.4466793537139893
    4. 'k' → logprob: -2.6966793537139893
    5. ' m' → logprob: -2.6966793537139893
    6. 'm' → logprob: -3.1966793537139893
    7. ' count' → logprob: -3.1966793537139893
    8. 'count' → logprob: -3.8216793537139893
    9. ' counts' → logprob: -3.8216793537139893
    10. ' threshold' → logprob: -4.69667911529541

Token 68: '_dict' (ID: 11295)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4074772000312805
    2. '_indices' → logprob: -2.6574771404266357
    3. '_' → logprob: -3.0324771404266357
    4. '=' → logprob: -3.0324771404266357
    5. '_count' → logprob: -3.1574771404266357
    6. ' ):' → logprob: -3.7824771404266357
    7. '=True' → logprob: -3.7824771404266357
    8. 's' → logprob: -4.282477378845215
    9. ' =' → logprob: -4.407477378845215
    10. '_numbers' → logprob: -4.782477378845215

Token 69: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00038336371653713286
    2. ',' → logprob: -8.750383377075195
    3. ')' → logprob: -9.000383377075195
    4. ' ):' → logprob: -9.250383377075195
    5. '=' → logprob: -13.750383377075195
    6. '_' → logprob: -14.000383377075195
    7. ':' → logprob: -14.250383377075195
    8. '):
' → logprob: -14.250383377075195
    9. '   ' → logprob: -15.000383377075195
    10. '),' → logprob: -15.125383377075195

Token 70: ' odd' (ID: 14210)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.3877677917480469
    2. ' odd' → logprob: -1.1377677917480469
    3. 'od' → logprob: -8.137767791748047
    4. ' ' → logprob: -8.262767791748047
    5. '   ' → logprob: -9.387767791748047
    6. ')' → logprob: -9.950267791748047
    7. 'o' → logprob: -10.387767791748047
    8. 'even' → logprob: -10.762767791748047
    9. '  ' → logprob: -11.262767791748047
    10. ' od' → logprob: -11.387767791748047

Token 71: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -0.007622960489243269
    2. '_' → logprob: -5.007623195648193
    3. '_d' → logprob: -7.882623195648193
    4. ')_' → logprob: -8.507622718811035
    5. ')' → logprob: -8.757622718811035
    6. ' _' → logprob: -10.007622718811035
    7. '_dic' → logprob: -10.507622718811035
    8. '_def' → logprob: -11.382622718811035
    9. 's' → logprob: -11.632622718811035
    10. '_count' → logprob: -11.632622718811035

Token 72: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00015538577281404287
    2. ')' → logprob: -9.000155448913574
    3. ',' → logprob: -11.000155448913574
    4. ':' → logprob: -11.500155448913574
    5. ' ):' → logprob: -12.625155448913574
    6. '):
' → logprob: -13.875155448913574
    7. '   ' → logprob: -14.625155448913574
    8. ''):' → logprob: -16.375154495239258
    9. '=' → logprob: -16.750154495239258
    10. '_' → logprob: -16.750154495239258

Token 73: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05694092437624931
    2. ' for' → logprob: -3.181941032409668
    3. '    
' → logprob: -4.931941032409668
    4. '
' → logprob: -5.806941032409668
    5. ' ' → logprob: -6.681941032409668
    6. '<|end|>' → logprob: -7.556941032409668
    7. ' 
' → logprob: -7.931941032409668
    8. '    ' → logprob: -8.431941032409668
    9. 'for' → logprob: -8.431941032409668
    10. '```' → logprob: -8.556941032409668

Token 74: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.23190663754940033
    2. 'for' (adapté à ' for') → logprob: -1.8569066524505615
    3. '   ' → logprob: -2.9819066524505615
    4. ' ' → logprob: -9.98190689086914
    5. '```' → logprob: -10.10690689086914
    6. '
' → logprob: -11.48190689086914
    7. '    
' → logprob: -11.73190689086914
    8. '	for' → logprob: -11.98190689086914
    9. ' i' → logprob: -12.10690689086914
    10. '  ' → logprob: -12.98190689086914

Token 75: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.011163721792399883
    2. 'i' → logprob: -5.011163711547852
    3. ' idx' → logprob: -6.136163711547852
    4. ' index' → logprob: -6.761163711547852
    5. ' x' → logprob: -7.761163711547852
    6. ' ' → logprob: -7.886163711547852
    7. 'index' → logprob: -9.261163711547852
    8. 'x' → logprob: -9.636163711547852
    9. ' num' → logprob: -10.511163711547852
    10. '   ' → logprob: -10.511163711547852

Token 76: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.015179156325757504
    2. 'in' → logprob: -4.26517915725708
    3. ',' → logprob: -7.26517915725708
    4. ' ' → logprob: -8.265178680419922
    5. ' ,' → logprob: -10.390178680419922
    6. '	in' → logprob: -11.265178680419922
    7. ' i' → logprob: -12.390178680419922
    8. '  ' → logprob: -12.890178680419922
    9. 'n' → logprob: -13.515178680419922
    10. 's' → logprob: -14.202678680419922

Token 77: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.003219184000045061
    2. 'range' → logprob: -5.753219127655029
    3. ' ' → logprob: -10.628219604492188
    4. ' xrange' → logprob: -12.003219604492188
    5. '	range' → logprob: -12.128219604492188
    6. '  ' → logprob: -13.253219604492188
    7. '   ' → logprob: -13.503219604492188
    8. '(range' → logprob: -13.753219604492188
    9. ' ' → logprob: -14.503219604492188
    10. ' ran' → logprob: -14.753219604492188

Token 78: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0381641685962677
    2. '(' → logprob: -3.2881641387939453
    3. ' (' → logprob: -9.788164138793945
    4. ' n' → logprob: -9.913164138793945
    5. 'n' → logprob: -11.663164138793945
    6. '(len' → logprob: -12.038164138793945
    7. '(
' → logprob: -13.413164138793945
    8. ' ' → logprob: -14.288164138793945
    9. '(

' → logprob: -16.163164138793945
    10. '(i' → logprob: -16.288164138793945

Token 79: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0023390199057757854
    2. '):
' → logprob: -6.877338886260986
    3. ' ):' → logprob: -6.877338886260986
    4. ')' → logprob: -8.377339363098145
    5. ':' → logprob: -10.877339363098145
    6. '   ' → logprob: -11.627339363098145
    7. ',' → logprob: -12.252339363098145
    8. ' )' → logprob: -12.752339363098145
    9. '):
' → logprob: -13.002339363098145
    10. ' ):
' → logprob: -13.377339363098145

Token 80: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10597610473632812
    2. ':' → logprob: -2.355976104736328
    3. '   ' → logprob: -5.605976104736328
    4. ',' → logprob: -7.355976104736328
    5. '<|end|>' → logprob: -7.730976104736328
    6. '        
' → logprob: -8.480976104736328
    7. '    ' → logprob: -8.605976104736328
    8. ' :' → logprob: -9.355976104736328
    9. '    
' → logprob: -9.605976104736328
    10. ' ' → logprob: -9.730976104736328

Token 81: ' k' (ID: 372)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.45728492736816406
    2. '       ' → logprob: -1.082284927368164
    3. 'if' → logprob: -4.207284927368164
    4. ' s' → logprob: -5.457284927368164
    5. ' x' → logprob: -5.832284927368164
    6. '   ' → logprob: -6.082284927368164
    7. ' value' → logprob: -6.707284927368164
    8. ' series' → logprob: -7.957284927368164
    9. '           ' → logprob: -8.457284927368164
    10. ' val' → logprob: -8.457284927368164

Token 82: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029797237366437912
    2. '=' → logprob: -3.529797315597534
    3. ',' → logprob: -10.654797554016113
    4. ' ' → logprob: -11.404797554016113
    5. ' =
' → logprob: -11.904797554016113
    6. ')' → logprob: -12.779797554016113
    7. ']' → logprob: -14.404797554016113
    8. '=
' → logprob: -14.904797554016113
    9. '   ' → logprob: -15.279797554016113
    10. '    ' → logprob: -15.967297554016113

Token 83: ' series' (ID: 5594)
  Prédit: ' series'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' series' → logprob: -0.38689637184143066
    2. 'series' → logprob: -1.1368963718414307
    3. ' serie' → logprob: -11.386896133422852
    4. '(series' → logprob: -12.261896133422852
    5. '   ' → logprob: -12.386896133422852
    6. 'serie' → logprob: -12.636896133422852
    7. '-series' → logprob: -14.886896133422852
    8. ' ' → logprob: -15.011896133422852
    9. ' serien' → logprob: -15.511896133422852
    10. '.series' → logprob: -15.636896133422852

Token 84: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001805377542041242
    2. '[' → logprob: -8.6251802444458
    3. '[
' → logprob: -15.3751802444458
    4. '[I' → logprob: -15.3751802444458
    5. ' [' → logprob: -16.250181198120117
    6. '[k' → logprob: -16.750181198120117
    7. '```' → logprob: -16.750181198120117
    8. '[index' → logprob: -17.125181198120117
    9. '   ' → logprob: -17.750181198120117
    10. '[int' → logprob: -17.875181198120117

Token 85: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5673420429229736
    2. ']' → logprob: -0.9423420429229736
    3. '])' → logprob: -3.3173420429229736
    4. ' )' → logprob: -5.4423418045043945
    5. '%' → logprob: -7.3173418045043945
    6. ' ]' → logprob: -7.6923418045043945
    7. ')
' → logprob: -7.9423418045043945
    8. ']%' → logprob: -8.067341804504395
    9. ' ])' → logprob: -8.567341804504395
    10. ')]' → logprob: -8.567341804504395

Token 86: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.006259373389184475
    2. '       ' → logprob: -6.381259441375732
    3. ' 
' → logprob: -6.631259441375732
    4. '  
' → logprob: -7.006259441375732
    5. '        
' → logprob: -7.256259441375732
    6. '
' → logprob: -7.756259441375732
    7. '    
' → logprob: -7.881259441375732
    8. '<|end|>' → logprob: -8.256258964538574
    9. ' if' → logprob: -8.381258964538574
    10. '   ' → logprob: -9.506258964538574

Token 87: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.04033314809203148
    2. 'if' (adapté à ' if') → logprob: -3.2903330326080322
    3. ' ' → logprob: -6.165333271026611
    4. '       ' → logprob: -9.290332794189453
    5. '        ' → logprob: -9.915332794189453
    6. ' 
' → logprob: -10.915332794189453
    7. '    ' → logprob: -11.665332794189453
    8. '   ' → logprob: -12.040332794189453
    9. '
' → logprob: -12.290332794189453
    10. '	if' → logprob: -13.915332794189453

Token 88: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.00424163555726409
    2. ' ' → logprob: -5.629241466522217
    3. ' k' → logprob: -8.004241943359375
    4. 'i' → logprob: -8.379241943359375
    5. ' (' → logprob: -9.504241943359375
    6. 'k' → logprob: -13.379241943359375
    7. ' 
' → logprob: -15.004241943359375
    8. '	i' → logprob: -15.004241943359375
    9. '(i' → logprob: -15.254241943359375
    10. ' ' → logprob: -15.504241943359375

Token 89: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.034783415496349335
    2. '%' → logprob: -3.409783363342285
    3. ' ' → logprob: -6.784783363342285
    4. ' ' → logprob: -13.034783363342285
    5. '<|end|>' → logprob: -13.409783363342285
    6. ' %
' → logprob: -14.034783363342285
    7. '0' → logprob: -15.034783363342285
    8. ' 
' → logprob: -15.159783363342285
    9. '  ' → logprob: -15.409783363342285
    10. ' 

' → logprob: -16.0347843170166

Token 90: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.34848320484161377
    2. ' ' → logprob: -1.2234832048416138
    3. '<|end|>' → logprob: -10.723483085632324
    4. '  ' → logprob: -12.348483085632324
    5. '```' → logprob: -12.348483085632324
    6. ' ' → logprob: -13.848483085632324
    7. '   ' → logprob: -13.848483085632324
    8. ')' → logprob: -14.348483085632324
    9. '    ' → logprob: -14.410983085632324
    10. '<|end|>' → logprob: -14.410983085632324

Token 91: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001593195047462359
    2. ' ' → logprob: -8.75015926361084
    3. '```' → logprob: -15.12515926361084
    4. '   ' → logprob: -15.25015926361084
    5. '  ' → logprob: -16.000160217285156
    6. '<|end|>' → logprob: -17.062660217285156
    7. '۲' → logprob: -17.250160217285156
    8. '>' → logprob: -18.187660217285156
    9. '{' → logprob: -18.375160217285156
    10. '...' → logprob: -18.500160217285156

Token 92: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.09032945334911346
    2. '==' → logprob: -2.46532940864563
    3. ' ' → logprob: -6.840329647064209
    4. '=' → logprob: -8.59032917022705
    5. '0' → logprob: -9.84032917022705
    6. ' =' → logprob: -9.84032917022705
    7. ')==' → logprob: -11.71532917022705
    8. ')' → logprob: -11.96532917022705
    9. ' ===' → logprob: -12.96532917022705
    10. ' !=' → logprob: -13.21532917022705

Token 93: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0700063481926918
    2. ' ' → logprob: -2.6950063705444336
    3. '2' → logprob: -10.070006370544434
    4. '1' → logprob: -10.695006370544434
    5. '<|end|>' → logprob: -14.195006370544434
    6. '```' → logprob: -14.570006370544434
    7. '==' → logprob: -14.632506370544434
    8. '   ' → logprob: -14.757506370544434
    9. '=' → logprob: -15.007506370544434
    10. '۰' → logprob: -15.320006370544434

Token 94: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0069894613698124886
    2. '2' → logprob: -5.006989479064941
    3. ' ' → logprob: -8.381989479064941
    4. '1' → logprob: -10.131989479064941
    5. '02' → logprob: -13.006989479064941
    6. '01' → logprob: -14.256989479064941
    7. '00' → logprob: -14.569489479064941
    8. '```' → logprob: -15.506989479064941
    9. '۰' → logprob: -15.569489479064941
    10. '   ' → logprob: -15.819489479064941

Token 95: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007725633680820465
    2. ':
' → logprob: -4.882725715637207
    3. ' :' → logprob: -10.257725715637207
    4. '       ' → logprob: -10.257725715637207
    5. '):' → logprob: -11.257725715637207
    6. '):
' → logprob: -11.757725715637207
    7. ' :
' → logprob: -11.882725715637207
    8. ':

' → logprob: -12.257725715637207
    9. ')' → logprob: -12.382725715637207
    10. '<|end|>' → logprob: -13.007725715637207

Token 96: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.35059627890586853
    2. ' update' → logprob: -2.4755961894989014
    3. 'update' → logprob: -2.6005961894989014
    4. '            
' → logprob: -2.7255961894989014
    5. ':' → logprob: -4.1005964279174805
    6. ' 
' → logprob: -4.2255964279174805
    7. ' ' → logprob: -4.6005964279174805
    8. '.update' → logprob: -5.1005964279174805
    9. ':
' → logprob: -5.4755964279174805
    10. 'even' → logprob: -5.6005964279174805

Token 97: ' update' (ID: 4027)
  Prédit: ' update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' update' → logprob: -0.14606305956840515
    2. ' even' → logprob: -2.6460630893707275
    3. 'update' (adapté à ' update') → logprob: -3.0210630893707275
    4. '           ' → logprob: -4.771062850952148
    5. 'even' → logprob: -5.021062850952148
    6. '               ' → logprob: -7.271062850952148
    7. '.update' → logprob: -9.396062850952148
    8. ' ' → logprob: -9.521062850952148
    9. '                
' → logprob: -10.646062850952148
    10. '_even' → logprob: -10.646062850952148

Token 98: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -1.2113979209971149e-05
    2. '_' → logprob: -12.375012397766113
    3. '_d' → logprob: -12.375012397766113
    4. '_dic' → logprob: -13.125012397766113
    5. '_dist' → logprob: -14.750012397766113
    6. '"_' → logprob: -15.750012397766113
    7. '_def' → logprob: -15.750012397766113
    8. ' _' → logprob: -15.750012397766113
    9. '_doc' → logprob: -16.250011444091797
    10. '```' → logprob: -16.250011444091797

Token 99: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.001502598519437015
    2. '(' → logprob: -6.501502513885498
    3. ' (' → logprob: -15.751502990722656
    4. '(ev' → logprob: -17.501502990722656
    5. '(
' → logprob: -18.376502990722656
    6. '(o' → logprob: -18.876502990722656
    7. '(

' → logprob: -19.126502990722656
    8. ' even' → logprob: -19.126502990722656
    9. '.e' → logprob: -20.126502990722656
    10. ')' → logprob: -20.251502990722656

Token 100: 'ven' (ID: 1066)
  Prédit: 'ven'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ven' → logprob: -0.0001370320824207738
    2. 'even' → logprob: -10.000137329101562
    3. 'v' → logprob: -10.500137329101562
    4. 'vent' → logprob: -11.375137329101562
    5. '_even' → logprob: -11.500137329101562
    6. 've' → logprob: -11.750137329101562
    7. ' ven' → logprob: -12.125137329101562
    8. '_' → logprob: -12.750137329101562
    9. '   ' → logprob: -12.875137329101562
    10. '```' → logprob: -13.000137329101562

Token 101: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -3.7697225252486533e-06
    2. '_dic' → logprob: -13.500003814697266
    3. '_' → logprob: -14.000003814697266
    4. '_d' → logprob: -14.125003814697266
    5. ' _' → logprob: -14.750003814697266
    6. ')_' → logprob: -15.375003814697266
    7. '"_' → logprob: -17.000003814697266
    8. ')' → logprob: -17.125003814697266
    9. '_dictionary' → logprob: -17.875003814697266
    10. ''_' → logprob: -17.875003814697266

Token 102: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014878390356898308
    2. ',k' → logprob: -6.626487731933594
    3. ' ,' → logprob: -8.751487731933594
    4. '(k' → logprob: -12.751487731933594
    5. '(' → logprob: -15.501487731933594
    6. ')' → logprob: -16.126487731933594
    7. 'k' → logprob: -16.501487731933594
    8. ',
' → logprob: -17.126487731933594
    9. ' k' → logprob: -17.376487731933594
    10. ' ' → logprob: -17.376487731933594

Token 103: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.1602330505847931
    2. 'k' → logprob: -1.9102330207824707
    3. ')' → logprob: -12.035233497619629
    4. '(k' → logprob: -13.035233497619629
    5. '	k' → logprob: -14.910233497619629
    6. ' )' → logprob: -14.910233497619629
    7. ' ' → logprob: -16.785232543945312
    8. ',k' → logprob: -17.535232543945312
    9. ' 
' → logprob: -17.785232543945312
    10. '{k' → logprob: -17.785232543945312

Token 104: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.47554096579551697
    2. ')' → logprob: -0.9755409955978394
    3. '       ' → logprob: -6.600541114807129
    4. ')
' → logprob: -9.475541114807129
    5. ' )
' → logprob: -11.600541114807129
    6. ')

' → logprob: -11.600541114807129
    7. ' )' → logprob: -12.350541114807129
    8. '   ' → logprob: -12.725541114807129
    9. ')`
' → logprob: -15.100541114807129
    10. ' ' → logprob: -15.850541114807129

Token 105: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009457575506530702
    2. 'else' → logprob: -7.125945568084717
    3. ' else' → logprob: -8.875946044921875
    4. '   ' → logprob: -14.625946044921875
    5. '      ' → logprob: -14.750946044921875
    6. '	else' → logprob: -15.375946044921875
    7. '```' → logprob: -16.125946044921875
    8. 'elif' → logprob: -16.375946044921875
    9. '        
' → logprob: -16.875946044921875
    10. '     ' → logprob: -17.000946044921875

Token 106: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.869354248046875
    2. 'else' (adapté à ' else') → logprob: -1.119354248046875
    3. '       ' → logprob: -1.369354248046875
    4. '   ' → logprob: -11.494354248046875
    5. '	else' → logprob: -12.744354248046875
    6. 'elif' → logprob: -13.994354248046875
    7. '      ' → logprob: -14.619354248046875
    8. '    ' → logprob: -14.619354248046875
    9. '        ' → logprob: -14.869354248046875
    10. 'e' → logprob: -15.494354248046875

Token 107: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005971454083919525
    2. '           ' → logprob: -5.380971431732178
    3. ':
' → logprob: -6.630971431732178
    4. ' :' → logprob: -11.005971908569336
    5. '       ' → logprob: -12.755971908569336
    6. '        ' → logprob: -13.130971908569336
    7. ':

' → logprob: -13.255971908569336
    8. '          ' → logprob: -13.255971908569336
    9. ':update' → logprob: -13.880971908569336
    10. '         ' → logprob: -14.130971908569336

Token 108: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010532823391258717
    2. 'update' → logprob: -5.135532855987549
    3. ' update' → logprob: -5.385532855987549
    4. '   ' → logprob: -12.38553237915039
    5. '       ' → logprob: -13.51053237915039
    6. '(update' → logprob: -13.51053237915039
    7. '	update' → logprob: -13.63553237915039
    8. '.update' → logprob: -13.76053237915039
    9. ':update' → logprob: -14.38553237915039
    10. '          ' → logprob: -14.51053237915039

Token 109: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' (adapté à ' update') → logprob: -0.20156040787696838
    2. ' update' → logprob: -1.701560378074646
    3. '       ' → logprob: -9.201560020446777
    4. '           ' → logprob: -10.951560020446777
    5. '   ' → logprob: -11.201560020446777
    6. '	update' → logprob: -11.701560020446777
    7. ' ' → logprob: -12.826560020446777
    8. '.update' → logprob: -13.326560020446777
    9. '  ' → logprob: -13.951560020446777
    10. '(update' → logprob: -14.326560020446777

Token 110: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -9.968312951968983e-06
    2. 'Dict' → logprob: -11.625009536743164
    3. 'dict' → logprob: -14.750009536743164
    4. '_DICT' → logprob: -15.000009536743164
    5. '_dic' → logprob: -15.875009536743164
    6. '```' → logprob: -17.375009536743164
    7. ''_' → logprob: -17.375009536743164
    8. '"_' → logprob: -18.500009536743164
    9. '_df' → logprob: -18.500009536743164
    10. '`' → logprob: -18.625009536743164

Token 111: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.9153885558771435e-06
    2. ' (' → logprob: -12.750005722045898
    3. '(o' → logprob: -13.750005722045898
    4. '(
' → logprob: -13.875005722045898
    5. '```' → logprob: -15.125005722045898
    6. '<|end|>' → logprob: -15.500005722045898
    7. '(k' → logprob: -15.625005722045898
    8. '(

' → logprob: -16.3750057220459
    9. '(ord' → logprob: -17.0000057220459
    10. ')(' → logprob: -17.5000057220459

Token 112: 'odd' (ID: 18303)
  Prédit: 'odd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -2.2127087504486553e-05
    2. ' odd' → logprob: -10.875021934509277
    3. 'od' → logprob: -12.750021934509277
    4. 'ood' → logprob: -15.250021934509277
    5. ')' → logprob: -17.125022888183594
    6. 'o' → logprob: -19.500022888183594
    7. 'old' → logprob: -19.750022888183594
    8. 'even' → logprob: -19.750022888183594
    9. '   ' → logprob: -20.000022888183594
    10. '
' → logprob: -21.125022888183594

Token 113: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -8.061054359131958e-06
    2. '_d' → logprob: -12.625007629394531
    3. ')_' → logprob: -13.125007629394531
    4. '_dic' → logprob: -13.750007629394531
    5. '_' → logprob: -14.875007629394531
    6. ' _' → logprob: -15.000007629394531
    7. ')' → logprob: -15.125007629394531
    8. '"_' → logprob: -15.625007629394531
    9. '```' → logprob: -16.12500762939453
    10. '_def' → logprob: -16.62500762939453

Token 114: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.588793960167095e-05
    2. ',k' → logprob: -9.500076293945312
    3. ' ,' → logprob: -13.875076293945312
    4. ')' → logprob: -17.125076293945312
    5. ',
' → logprob: -17.250076293945312
    6. 'k' → logprob: -17.625076293945312
    7. ',d' → logprob: -18.250076293945312
    8. '),' → logprob: -19.375076293945312
    9. '(k' → logprob: -19.375076293945312
    10. ',n' → logprob: -19.625076293945312

Token 115: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.01104935072362423
    2. ' k' → logprob: -4.511049270629883
    3. ')' → logprob: -13.511049270629883
    4. '	k' → logprob: -17.136049270629883
    5. '(k' → logprob: -17.886049270629883
    6. ',k' → logprob: -17.886049270629883
    7. '_k' → logprob: -18.136049270629883
    8. ',' → logprob: -18.636049270629883
    9. '"k' → logprob: -18.636049270629883
    10. ' ' → logprob: -18.761049270629883

Token 116: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4498052223643754e-05
    2. ')
' → logprob: -11.250014305114746
    3. ')

' → logprob: -14.375014305114746
    4. ')return' → logprob: -14.625014305114746
    5. ' )' → logprob: -15.125014305114746
    6. '   ' → logprob: -16.000015258789062
    7. '))' → logprob: -18.500015258789062
    8. '       ' → logprob: -18.625015258789062
    9. '<|end|>' → logprob: -19.000015258789062
    10. ')
' → logprob: -19.250015258789062

Token 117: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0018523624166846275
    2. '<|end|>' → logprob: -6.876852512359619
    3. '
' → logprob: -7.251852512359619
    4. 'return' → logprob: -9.501852035522461
    5. '#' → logprob: -12.126852035522461
    6. 'for' → logprob: -12.251852035522461
    7. '<|end|>' → logprob: -12.501852035522461
    8. '

' → logprob: -12.501852035522461
    9. '    
' → logprob: -12.626852035522461
    10. '```' → logprob: -12.751852035522461

Token 118: ' extract' (ID: 13424)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.06210929900407791
    2. 'main' → logprob: -2.8121092319488525
    3. ' solve' → logprob: -9.187108993530273
    4. 'solve' → logprob: -11.312108993530273
    5. ' process' → logprob: -11.937108993530273
    6. ' calculate' → logprob: -12.187108993530273
    7. 'calculate' → logprob: -13.187108993530273
    8. 'process' → logprob: -13.437108993530273
    9. ' count' → logprob: -13.437108993530273
    10. ' find' → logprob: -13.437108993530273

Token 119: '_counts' (ID: 61971)
  Prédit: '_unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_unique' → logprob: -0.8753789663314819
    2. '_counts' → logprob: -1.875378966331482
    3. '_values' → logprob: -2.8753790855407715
    4. '_common' → logprob: -2.8753790855407715
    5. '_even' → logprob: -3.1253790855407715
    6. '_keys' → logprob: -3.2503790855407715
    7. '_data' → logprob: -3.5003790855407715
    8. '_max' → logprob: -3.6253790855407715
    9. '_' → logprob: -3.8753790855407715
    10. '_numbers' → logprob: -4.1253790855407715

Token 120: '(count' (ID: 25892)
  Prédit: '(e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.1272675096988678
    2. '(' → logprob: -2.127267599105835
    3. '(s' → logprob: -8.627267837524414
    4. '(def' → logprob: -9.877267837524414
    5. '():' → logprob: -10.752267837524414
    6. '(d' → logprob: -11.002267837524414
    7. '(count' → logprob: -11.502267837524414
    8. '(n' → logprob: -11.752267837524414
    9. '(event' → logprob: -12.002267837524414
    10. '(es' → logprob: -12.502267837524414

Token 121: '_dict' (ID: 11295)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.09146574139595032
    2. '_dict' → logprob: -2.466465711593628
    3. '_' → logprob: -6.966465950012207
    4. '_s' → logprob: -7.091465950012207
    5. 'ed' → logprob: -8.591465950012207
    6. '_d' → logprob: -8.966465950012207
    7. ')' → logprob: -8.966465950012207
    8. 'dict' → logprob: -9.091465950012207
    9. '_)' → logprob: -10.591465950012207
    10. ')_' → logprob: -10.591465950012207

Token 122: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0016410232055932283
    2. ',' → logprob: -7.126640796661377
    3. '):
' → logprob: -7.251640796661377
    4. ' ):' → logprob: -9.251641273498535
    5. ')' → logprob: -10.751641273498535
    6. ':' → logprob: -13.376641273498535
    7. '):
' → logprob: -13.376641273498535
    8. ' ' → logprob: -13.501641273498535
    9. '   ' → logprob: -13.751641273498535
    10. '():' → logprob: -13.876641273498535

Token 123: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020775748416781425
    2. 'return' → logprob: -6.252077579498291
    3. ' return' → logprob: -8.877077102661133
    4. 'counts' → logprob: -12.252077102661133
    5. 'result' → logprob: -12.752077102661133
    6. ' counts' → logprob: -14.502077102661133
    7. '   ' → logprob: -15.002077102661133
    8. 'keys' → logprob: -16.002077102661133
    9. 'values' → logprob: -16.127077102661133
    10. '    
' → logprob: -16.127077102661133

Token 124: ' result' (ID: 1534)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.695385754108429
    2. '   ' → logprob: -0.820385754108429
    3. ' return' → logprob: -3.195385694503784
    4. 'counts' → logprob: -4.195385932922363
    5. 'values' → logprob: -6.195385932922363
    6. ' counts' → logprob: -6.695385932922363
    7. 'result' (adapté à ' result') → logprob: -7.570385932922363
    8. 'count' → logprob: -7.820385932922363
    9. 'max' → logprob: -8.570385932922363
    10. ' values' → logprob: -9.445385932922363

Token 125: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2520940899848938
    2. ' =' → logprob: -1.502094030380249
    3. '[' → logprob: -9.252094268798828
    4. ',' → logprob: -10.252094268798828
    5. '.' → logprob: -11.752094268798828
    6. '[:]' → logprob: -12.252094268798828
    7. ' ' → logprob: -12.502094268798828
    8. 's' → logprob: -12.627094268798828
    9. '_' → logprob: -12.627094268798828
    10. '=[]' → logprob: -12.752094268798828

Token 126: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.1015615314245224
    2. 'list' → logprob: -2.8515615463256836
    3. '[]
' → logprob: -3.8515615463256836
    4. '[count' → logprob: -5.226561546325684
    5. '[list' → logprob: -5.476561546325684
    6. '[]

' → logprob: -5.476561546325684
    7. ' []' → logprob: -6.726561546325684
    8. '{}' → logprob: -7.101561546325684
    9. '[' → logprob: -7.476561546325684
    10. 'sorted' → logprob: -7.726561546325684

Token 127: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008932678960263729
    2. ' for' → logprob: -4.883932590484619
    3. 'for' → logprob: -6.633932590484619
    4. '    
' → logprob: -12.383933067321777
    5. ' ' → logprob: -13.133933067321777
    6. '    ' → logprob: -13.508933067321777
    7. '	for' → logprob: -14.258933067321777
    8. ',' → logprob: -14.258933067321777
    9. '  ' → logprob: -14.383933067321777
    10. '<|end|>' → logprob: -14.383933067321777

Token 128: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.017156163230538368
    2. '   ' → logprob: -4.76715612411499
    3. ' for' → logprob: -4.76715612411499
    4. ' ' → logprob: -14.642156600952148
    5. '	for' → logprob: -15.517156600952148
    6. '  ' → logprob: -17.14215660095215
    7. 'keys' → logprob: -17.51715660095215
    8. '    
' → logprob: -18.39215660095215
    9. '       ' → logprob: -19.14215660095215
    10. '
' → logprob: -19.26715660095215

Token 129: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.1942588835954666
    2. 'k' → logprob: -2.44425892829895
    3. ' key' → logprob: -2.44425892829895
    4. ' k' → logprob: -6.569258689880371
    5. 'count' → logprob: -6.819258689880371
    6. 'value' → logprob: -7.819258689880371
    7. ' count' → logprob: -10.319258689880371
    8. '_key' → logprob: -11.194258689880371
    9. ' value' → logprob: -11.319258689880371
    10. 'v' → logprob: -11.569258689880371

Token 130: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1274099349975586
    2. ',' → logprob: -2.3774099349975586
    3. 'in' → logprob: -3.6274099349975586
    4. ' ,' → logprob: -8.752409934997559
    5. ' ' → logprob: -10.002409934997559
    6. ',in' → logprob: -11.252409934997559
    7. ',count' → logprob: -11.502409934997559
    8. ',value' → logprob: -11.627409934997559
    9. '	in' → logprob: -12.377409934997559
    10. '  ' → logprob: -12.627409934997559

Token 131: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.03235229477286339
    2. ' count' → logprob: -3.5323522090911865
    3. 'sorted' → logprob: -6.157352447509766
    4. ' sorted' → logprob: -7.657352447509766
    5. '[count' → logprob: -12.407352447509766
    6. '(count' → logprob: -13.907352447509766
    7. '   ' → logprob: -13.907352447509766
    8. '	count' → logprob: -14.157352447509766
    9. 'range' → logprob: -15.032352447509766
    10. ' ' → logprob: -15.157352447509766

Token 132: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -3.309382373117842e-05
    2. 'dict' → logprob: -10.875033378601074
    3. 's' → logprob: -11.375033378601074
    4. '_' → logprob: -13.375033378601074
    5. '_dictionary' → logprob: -14.750033378601074
    6. '_DICT' → logprob: -15.375033378601074
    7. '_dic' → logprob: -15.875033378601074
    8. 'd' → logprob: -16.375032424926758
    9. '_d' → logprob: -16.375032424926758
    10. ' dict' → logprob: -17.250032424926758

Token 133: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.044650252908468246
    2. '.keys' → logprob: -3.1696503162384033
    3. '.values' → logprob: -8.044650077819824
    4. ' :' → logprob: -8.044650077819824
    5. ':
' → logprob: -8.294650077819824
    6. '<|end|>' → logprob: -8.544650077819824
    7. '   ' → logprob: -8.919650077819824
    8. '):' → logprob: -8.919650077819824
    9. ' ' → logprob: -9.919650077819824
    10. '.' → logprob: -10.669650077819824

Token 134: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019022206543013453
    2. ' result' → logprob: -6.751902103424072
    3. 'result' → logprob: -7.876902103424072
    4. '   ' → logprob: -8.00190258026123
    5. ':' → logprob: -11.25190258026123
    6. ',' → logprob: -13.87690258026123
    7. '(result' → logprob: -14.00190258026123
    8. ',result' → logprob: -14.37690258026123
    9. '	result' → logprob: -14.37690258026123
    10. '[result' → logprob: -15.00190258026123

Token 135: ' result' (ID: 1534)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9055731892585754
    2. 'result' (adapté à ' result') → logprob: -0.9055731892585754
    3. ' result' → logprob: -1.7805731296539307
    4. '       ' → logprob: -3.7805731296539307
    5. '	result' → logprob: -11.405572891235352
    6. ' if' → logprob: -12.780572891235352
    7. ' ' → logprob: -13.030572891235352
    8. '    
' → logprob: -13.030572891235352
    9. '  ' → logprob: -13.030572891235352
    10. '    ' → logprob: -13.405572891235352

Token 136: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.003291782923042774
    2. '.' → logprob: -5.753291606903076
    3. '.extend' → logprob: -9.128292083740234
    4. ' .' → logprob: -12.878292083740234
    5. 'append' → logprob: -13.878292083740234
    6. '.push' → logprob: -14.503292083740234
    7. '.Append' → logprob: -14.628292083740234
    8. '.app' → logprob: -14.878292083740234
    9. '.add' → logprob: -15.378292083740234
    10. ').' → logprob: -15.753292083740234

Token 137: '([' (ID: 5194)
  Prédit: '(count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.25580114126205444
    2. '((' → logprob: -1.5058012008666992
    3. '(' → logprob: -5.630801200866699
    4. 'count' → logprob: -8.2558012008667
    5. ' (' → logprob: -11.2558012008667
    6. ' count' → logprob: -13.0058012008667
    7. ',count' → logprob: -14.0058012008667
    8. '([' → logprob: -14.5058012008667
    9. '(f' → logprob: -14.8808012008667
    10. ' ((' → logprob: -15.1308012008667

Token 138: 'count' (ID: 5420)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.016475118696689606
    2. 'count' → logprob: -4.141475200653076
    3. ' key' → logprob: -8.016474723815918
    4. '   ' → logprob: -9.516474723815918
    5. 'result' → logprob: -11.641474723815918
    6. ' ' → logprob: -13.016474723815918
    7. '
' → logprob: -13.141474723815918
    8. '    
' → logprob: -13.141474723815918
    9. ' count' → logprob: -13.141474723815918
    10. '	key' → logprob: -13.328974723815918

Token 139: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -0.0005601812736131251
    2. 'dict' → logprob: -7.500560283660889
    3. ',' → logprob: -13.37555980682373
    4. '(dict' → logprob: -13.62555980682373
    5. 's' → logprob: -14.12555980682373
    6. '(key' → logprob: -14.25055980682373
    7. '_key' → logprob: -14.37555980682373
    8. '_count' → logprob: -14.62555980682373
    9. 'Dict' → logprob: -15.12555980682373
    10. '_,' → logprob: -15.12555980682373

Token 140: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -4.723352049040841e-06
    2. '[' → logprob: -12.875004768371582
    3. '[k' → logprob: -14.375004768371582
    4. '][' → logprob: -14.875004768371582
    5. ',key' → logprob: -14.875004768371582
    6. ' [' → logprob: -15.250004768371582
    7. 'key' → logprob: -15.750004768371582
    8. '[
' → logprob: -16.000003814697266
    9. '```' → logprob: -16.125003814697266
    10. ',' → logprob: -16.375003814697266

Token 141: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013363128527998924
    2. ' ,' → logprob: -7.626336097717285
    3. '])' → logprob: -7.626336097717285
    4. ',key' → logprob: -8.376336097717285
    5. ']])' → logprob: -9.751336097717285
    6. ',k' → logprob: -10.751336097717285
    7. ']' → logprob: -11.001336097717285
    8. ')])' → logprob: -11.501336097717285
    9. ')' → logprob: -11.876336097717285
    10. ' ])' → logprob: -12.126336097717285

Token 142: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.31328243017196655
    2. ' key' → logprob: -1.3132824897766113
    3. '
' → logprob: -11.688282012939453
    4. ' ' → logprob: -12.438282012939453
    5. ',key' → logprob: -13.188282012939453
    6. '(key' → logprob: -13.938282012939453
    7. '[key' → logprob: -14.063282012939453
    8. '	key' → logprob: -14.063282012939453
    9. '   ' → logprob: -14.188282012939453
    10. ',' → logprob: -14.313282012939453

Token 143: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0001025895617203787
    2. '])
' → logprob: -9.625102996826172
    3. ')' → logprob: -10.750102996826172
    4. ' ])' → logprob: -11.625102996826172
    5. ']' → logprob: -12.875102996826172
    6. ',' → logprob: -13.250102996826172
    7. '   ' → logprob: -14.125102996826172
    8. '])

' → logprob: -15.000102996826172
    9. ')])' → logprob: -15.875102996826172
    10. ']);' → logprob: -16.250102996826172

Token 144: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006630589719861746
    2. ' return' → logprob: -5.3816304206848145
    3. 'return' → logprob: -6.7566304206848145
    4. '
' → logprob: -7.1316304206848145
    5. '    
' → logprob: -10.756630897521973
    6. ' ' → logprob: -12.381630897521973
    7. ',' → logprob: -12.381630897521973
    8. ')' → logprob: -12.506630897521973
    9. '	return' → logprob: -12.756630897521973
    10. ' 
' → logprob: -12.881630897521973

Token 145: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3359864354133606
    2. 'return' (adapté à ' return') → logprob: -1.8359863758087158
    3. '   ' → logprob: -2.085986375808716
    4. '
' → logprob: -6.460986614227295
    5. ' ' → logprob: -9.710986137390137
    6. ' 
' → logprob: -9.960986137390137
    7. '    
' → logprob: -10.835986137390137
    8. '	return' → logprob: -10.960986137390137
    9. ':return' → logprob: -12.585986137390137
    10. '```' → logprob: -13.335986137390137

Token 146: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.252511203289032
    2. ' result' → logprob: -1.5025112628936768
    3. 'sorted' → logprob: -7.752511024475098
    4. ' sorted' → logprob: -8.877511024475098
    5. '[result' → logprob: -11.627511024475098
    6. ' ' → logprob: -13.002511024475098
    7. '   ' → logprob: -14.877511024475098
    8. ' [' → logprob: -15.252511024475098
    9. '(result' → logprob: -15.377511024475098
    10. '[' → logprob: -15.502511024475098

Token 147: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 148: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.652451464906335e-05
    2. '<|end|>' → logprob: -12.000016212463379
    3. 'from' → logprob: -12.500016212463379
    4. 'import' → logprob: -13.250016212463379
    5. '
' → logprob: -13.375016212463379
    6. 'even' → logprob: -13.875016212463379
    7. '```' → logprob: -14.000016212463379
    8. '#' → logprob: -14.750016212463379
    9. ' def' → logprob: -15.500016212463379
    10. '    
' → logprob: -15.750016212463379

Token 149: ' sort' (ID: 4506)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.04097893461585045
    2. 'main' → logprob: -3.9159789085388184
    3. ' find' → logprob: -4.165978908538818
    4. ' merge' → logprob: -6.165978908538818
    5. ' solve' → logprob: -7.415978908538818
    6. ' combine' → logprob: -7.790978908538818
    7. ' sort' → logprob: -8.540979385375977
    8. ' get' → logprob: -8.665979385375977
    9. ' compare' → logprob: -8.665979385375977
    10. 'merge' → logprob: -8.915979385375977

Token 150: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.16299165785312653
    2. '_' → logprob: -2.662991762161255
    3. '_results' → logprob: -3.912991762161255
    4. '_list' → logprob: -4.537991523742676
    5. '(' → logprob: -4.912991523742676
    6. '_count' → logprob: -5.162991523742676
    7. '_extract' → logprob: -5.287991523742676
    8. '_items' → logprob: -5.412991523742676
    9. '_by' → logprob: -5.412991523742676
    10. '_key' → logprob: -5.537991523742676

Token 151: '(vals' (ID: 167053)
  Prédit: '(count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.023353440687060356
    2. '(' → logprob: -3.773353338241577
    3. '(result' → logprob: -9.773353576660156
    4. ' (' → logprob: -10.898353576660156
    5. '(lst' → logprob: -11.898353576660156
    6. '(
' → logprob: -12.148353576660156
    7. '(_' → logprob: -13.148353576660156
    8. '(results' → logprob: -13.273353576660156
    9. '(cnt' → logprob: -13.273353576660156
    10. '(list' → logprob: -13.398353576660156

Token 152: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08943120390176773
    2. '):
' → logprob: -2.4644312858581543
    3. ')' → logprob: -8.714430809020996
    4. ',' → logprob: -8.964430809020996
    5. ' ):' → logprob: -9.339430809020996
    6. '(vals' → logprob: -10.339430809020996
    7. '):
' → logprob: -10.589430809020996
    8. '   ' → logprob: -10.839430809020996
    9. '(' → logprob: -12.089430809020996
    10. '):

' → logprob: -12.339430809020996

Token 153: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21463753283023834
    2. 'vals' → logprob: -1.9646375179290771
    3. 'return' → logprob: -2.964637517929077
    4. ' return' → logprob: -6.964637756347656
    5. ' vals' → logprob: -8.089637756347656
    6. '
' → logprob: -9.839637756347656
    7. 'val' → logprob: -10.339637756347656
    8. '(vals' → logprob: -10.589637756347656
    9. '_vals' → logprob: -12.339637756347656
    10. '    
' → logprob: -12.589637756347656

Token 154: ' vals' (ID: 58985)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.47946104407310486
    2. 'vals' (adapté à ' vals') → logprob: -0.9794610738754272
    3. '   ' → logprob: -5.854461193084717
    4. ' return' → logprob: -6.104461193084717
    5. ' vals' → logprob: -8.479460716247559
    6. 'val' → logprob: -9.854460716247559
    7. '(vals' → logprob: -12.729460716247559
    8. '
' → logprob: -13.229460716247559
    9. '```' → logprob: -14.104460716247559
    10. 'retval' → logprob: -14.229460716247559

Token 155: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.029753148555755615
    2. '.' → logprob: -3.5297532081604004
    3. ' .' → logprob: -13.154752731323242
    4. '=' → logprob: -14.904752731323242
    5. '.sorted' → logprob: -16.029752731323242
    6. 'sort' → logprob: -16.154752731323242
    7. '.reverse' → logprob: -16.529752731323242
    8. '.=' → logprob: -16.779752731323242
    9. ' =' → logprob: -17.529752731323242
    10. '   ' → logprob: -17.654752731323242

Token 156: '(reverse' (ID: 110806)
  Prédit: '(key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.048801738768815994
    2. '(reverse' → logprob: -3.0488016605377197
    3. '(' → logprob: -8.79880142211914
    4. '()' → logprob: -9.79880142211914
    5. 'reverse' → logprob: -11.92380142211914
    6. 'key' → logprob: -14.17380142211914
    7. '(
' → logprob: -14.79880142211914
    8. '(lambda' → logprob: -16.54880142211914
    9. '(

' → logprob: -16.92380142211914
    10. ',key' → logprob: -17.17380142211914

Token 157: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.0005283685750328004
    2. ')' → logprob: -8.875528335571289
    3. '(),' → logprob: -8.875528335571289
    4. ',' → logprob: -9.250528335571289
    5. '=' → logprob: -9.375528335571289
    6. '(True' → logprob: -10.375528335571289
    7. '())' → logprob: -11.125528335571289
    8. '()' → logprob: -11.250528335571289
    9. '=False' → logprob: -13.250528335571289
    10. ' =' → logprob: -13.250528335571289

Token 158: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.9888433093437925e-05
    2. ',' → logprob: -10.250040054321289
    3. ' )' → logprob: -13.000040054321289
    4. ')
' → logprob: -13.750040054321289
    5. '<|end|>' → logprob: -15.125040054321289
    6. ',)' → logprob: -15.625040054321289
    7. ')return' → logprob: -15.875040054321289
    8. '   ' → logprob: -15.875040054321289
    9. '),' → logprob: -16.00004005432129
    10. ' ' → logprob: -16.50004005432129

Token 159: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10583938658237457
    2. '   ' → logprob: -2.480839490890503
    3. ',' → logprob: -5.355839252471924
    4. '<|end|>' → logprob: -5.355839252471924
    5. '
' → logprob: -6.105839252471924
    6. '()' → logprob: -6.480839252471924
    7. 'return' → logprob: -6.480839252471924
    8. ' return' → logprob: -7.605839252471924
    9. ')' → logprob: -7.855839252471924
    10. '(' → logprob: -8.355839729309082

Token 160: ' return' (ID: 622)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6046726107597351
    2. 'return' (adapté à ' return') → logprob: -1.1046726703643799
    3. '<|end|>' → logprob: -2.60467267036438
    4. ' return' → logprob: -3.60467267036438
    5. '   ' → logprob: -4.229672431945801
    6. '
' → logprob: -5.854672431945801
    7. ')' → logprob: -6.479672431945801
    8. ',' → logprob: -7.604672431945801
    9. ')return' → logprob: -8.7296724319458
    10. ' ' → logprob: -8.7296724319458

Token 161: ' vals' (ID: 58985)
  Prédit: 'vals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.2519533634185791
    2. ' vals' → logprob: -1.501953363418579
    3. 'val' → logprob: -10.876953125
    4. '(vals' → logprob: -12.501953125
    5. 'None' → logprob: -14.501953125
    6. 'values' → logprob: -15.251953125
    7. ' None' → logprob: -15.501953125
    8. '_vals' → logprob: -15.626953125
    9. 'Vals' → logprob: -15.751953125
    10. ' val' → logprob: -16.251953125

Token 162: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004981489852070808
    2. '<|end|>' → logprob: -6.254981517791748
    3. '
' → logprob: -6.379981517791748
    4. '

' → logprob: -6.629981517791748
    5. ' def' → logprob: -11.25498104095459
    6. '<|end|>' → logprob: -12.12998104095459
    7. '(def' → logprob: -12.50498104095459
    8. '[' → logprob: -12.87998104095459
    9. '```' → logprob: -13.25498104095459
    10. '(' → logprob: -13.87998104095459

Token 163: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.4855663721391466e-05
    2. '<|end|>' → logprob: -11.250015258789062
    3. '
' → logprob: -14.375015258789062
    4. ' def' → logprob: -15.000015258789062
    5. 'from' → logprob: -15.250015258789062
    6. '```' → logprob: -15.875015258789062
    7. '(def' → logprob: -16.125015258789062
    8. '  
' → logprob: -16.375015258789062
    9. '<|end|>' → logprob: -16.375015258789062
    10. '(' → logprob: -16.875015258789062

Token 164: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.7168230414390564
    2. 'main' → logprob: -0.7168230414390564
    3. 'def' → logprob: -4.216823101043701
    4. ' def' → logprob: -6.091823101043701
    5. 'calculate' → logprob: -6.466823101043701
    6. ' calculate' → logprob: -7.341823101043701
    7. ' find' → logprob: -7.341823101043701
    8. 'solve' → logprob: -7.591823101043701
    9. 'combine' → logprob: -7.841823101043701
    10. 'max' → logprob: -7.966823101043701

Token 165: '_single' (ID: 46053)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.5654650926589966
    2. '_top' → logprob: -1.6904650926589966
    3. '_m' → logprob: -2.065464973449707
    4. '_best' → logprob: -2.940464973449707
    5. '_unique' → logprob: -4.315464973449707
    6. '_w' → logprob: -4.690464973449707
    7. '_counts' → logprob: -5.190464973449707
    8. '_min' → logprob: -5.565464973449707
    9. '_final' → logprob: -5.815464973449707
    10. '_common' → logprob: -5.940464973449707

Token 166: '_case' (ID: 43667)
  Prédit: 'ton'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ton' → logprob: -1.128933072090149
    2. '_change' → logprob: -1.628933072090149
    3. '_m' → logprob: -2.0039329528808594
    4. '_max' → logprob: -2.7539329528808594
    5. 'tons' → logprob: -3.3789329528808594
    6. '_difference' → logprob: -3.5039329528808594
    7. '_' → logprob: -3.7539329528808594
    8. '_counts' → logprob: -3.7539329528808594
    9. '_best' → logprob: -4.003932952880859
    10. '_value' → logprob: -4.128932952880859

Token 167: '_counts' (ID: 61971)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.14843179285526276
    2. '(n' → logprob: -2.5234317779541016
    3. '(' → logprob: -3.0234317779541016
    4. '(input' → logprob: -5.773431777954102
    5. ' ():' → logprob: -6.023431777954102
    6. '(series' → logprob: -6.523431777954102
    7. ' (' → logprob: -7.398431777954102
    8. '_input' → logprob: -7.398431777954102
    9. '(num' → logprob: -8.648431777954102
    10. '(params' → logprob: -9.523431777954102

Token 168: '(' (ID: 7)
  Prédit: '(series'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(series' → logprob: -0.7224125862121582
    2. '(n' → logprob: -0.8474125862121582
    3. '():' → logprob: -2.722412586212158
    4. '(' → logprob: -4.472412586212158
    5. '(s' → logprob: -6.097412586212158
    6. '(case' → logprob: -6.222412586212158
    7. '(input' → logprob: -6.347412586212158
    8. '(nums' → logprob: -7.472412586212158
    9. '(count' → logprob: -7.597412586212158
    10. '(e' → logprob: -7.847412586212158

Token 169: 'odd' (ID: 18303)
  Prédit: 'series'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'series' → logprob: -0.5092968344688416
    2. 'n' → logprob: -1.0092968940734863
    3. '):
' → logprob: -4.509296894073486
    4. '):' → logprob: -4.634296894073486
    5. 'even' → logprob: -5.134296894073486
    6. 'nums' → logprob: -6.509296894073486
    7. 'case' → logprob: -6.884296894073486
    8. ' n' → logprob: -7.134296894073486
    9. ' series' → logprob: -7.259296894073486
    10. 'input' → logprob: -7.384296894073486

Token 170: '_vals' (ID: 71688)
  Prédit: '_dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -0.47185829281806946
    2. '_counts' → logprob: -1.346858263015747
    3. ',' → logprob: -2.596858263015747
    4. '_vals' → logprob: -3.971858263015747
    5. '):' → logprob: -4.596858501434326
    6. '_count' → logprob: -5.846858501434326
    7. '_,' → logprob: -5.971858501434326
    8. ' ,' → logprob: -6.596858501434326
    9. '_series' → logprob: -6.846858501434326
    10. '_' → logprob: -7.346858501434326

Token 171: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018878262490034103
    2. '):' → logprob: -6.376887798309326
    3. ' ,' → logprob: -8.751888275146484
    4. ')' → logprob: -11.126888275146484
    5. '):
' → logprob: -13.251888275146484
    6. ' ):' → logprob: -13.251888275146484
    7. ',
' → logprob: -13.501888275146484
    8. '   ' → logprob: -14.126888275146484
    9. '_,' → logprob: -14.126888275146484
    10. ',e' → logprob: -14.251888275146484

Token 172: ' even' (ID: 1952)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.004094427917152643
    2. ' even' → logprob: -5.50409460067749
    3. '   ' → logprob: -12.129094123840332
    4. 'odd' → logprob: -13.129094123840332
    5. 'ev' → logprob: -13.254094123840332
    6. ')' → logprob: -13.504094123840332
    7. ' ' → logprob: -13.879094123840332
    8. 'eve' → logprob: -14.004094123840332
    9. 'e' → logprob: -14.254094123840332
    10. 'n' → logprob: -14.379094123840332

Token 173: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -0.000521577603649348
    2. 'vals' → logprob: -8.375521659851074
    3. '_' → logprob: -9.000521659851074
    4. '_counts' → logprob: -9.625521659851074
    5. '_val' → logprob: -10.375521659851074
    6. ' _' → logprob: -10.750521659851074
    7. ')_' → logprob: -11.375521659851074
    8. ')' → logprob: -12.375521659851074
    9. '_v' → logprob: -12.375521659851074
    10. '):' → logprob: -12.750521659851074

Token 174: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06227453052997589
    2. ',' → logprob: -2.81227445602417
    3. ' ):' → logprob: -9.312274932861328
    4. '):
' → logprob: -9.562274932861328
    5. ':' → logprob: -9.687274932861328
    6. ')' → logprob: -10.062274932861328
    7. '   ' → logprob: -11.187274932861328
    8. '(' → logprob: -11.937274932861328
    9. ' ,' → logprob: -12.062274932861328
    10. ']:' → logprob: -13.437274932861328

Token 175: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014126161113381386
    2. ' if' → logprob: -7.626412391662598
    3. ' max' → logprob: -8.376412391662598
    4. 'even' → logprob: -8.626412391662598
    5. 'odd' → logprob: -9.376412391662598
    6. ' odd' → logprob: -9.751412391662598
    7. ' even' → logprob: -9.751412391662598
    8. ' return' → logprob: -9.876412391662598
    9. 'max' → logprob: -9.876412391662598
    10. '    
' → logprob: -10.251412391662598

Token 176: ' return' (ID: 622)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -1.2489262819290161
    2. '   ' → logprob: -1.7489262819290161
    3. 'max' → logprob: -1.9989262819290161
    4. 'res' → logprob: -2.1239261627197266
    5. 'result' → logprob: -2.4989261627197266
    6. 'if' → logprob: -3.2489261627197266
    7. 'even' → logprob: -3.3739261627197266
    8. 'return' (adapté à ' return') → logprob: -3.6239261627197266
    9. ' res' → logprob: -3.7489261627197266
    10. 'total' → logprob: -4.748926162719727

Token 177: ' odd' (ID: 14210)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -1.0470491647720337
    2. '[' → logprob: -1.5470491647720337
    3. 'even' → logprob: -2.047049045562744
    4. ' max' → logprob: -2.547049045562744
    5. ' odd' → logprob: -2.922049045562744
    6. 'max' → logprob: -2.922049045562744
    7. '[max' → logprob: -3.547049045562744
    8. ' [' → logprob: -3.797049045562744
    9. ' even' → logprob: -4.172049045562744
    10. '(max' → logprob: -4.297049045562744

Token 178: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -5.9153885558771435e-06
    2. '_val' → logprob: -13.125005722045898
    3. '_counts' → logprob: -14.125005722045898
    4. 'vals' → logprob: -14.375005722045898
    5. '_' → logprob: -14.750005722045898
    6. '[' → logprob: -14.875005722045898
    7. '._' → logprob: -15.250005722045898
    8. ' _' → logprob: -15.375005722045898
    9. '"_' → logprob: -15.625005722045898
    10. ''_' → logprob: -15.750005722045898

Token 179: '[' (ID: 58)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7828423976898193
    2. ' +' → logprob: -0.9078423976898193
    3. '[' → logprob: -2.2828423976898193
    4. ',' → logprob: -3.6578423976898193
    5. '<|end|>' → logprob: -4.657842636108398
    6. '[:' → logprob: -7.282842636108398
    7. '[-' → logprob: -7.657842636108398
    8. '+[' → logprob: -8.032842636108398
    9. '[::-' → logprob: -8.157842636108398
    10. ' ,' → logprob: -8.782842636108398

Token 180: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007985493168234825
    2. '-' → logprob: -5.632985591888428
    3. ' ' → logprob: -6.132985591888428
    4. ':' → logprob: -6.382985591888428
    5. '[' → logprob: -8.13298511505127
    6. ' -' → logprob: -10.00798511505127
    7. '   ' → logprob: -10.13298511505127
    8. ' :' → logprob: -10.57048511505127
    9. '1' → logprob: -11.13298511505127
    10. '::-' → logprob: -11.19548511505127

Token 181: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0005374244065023959
    2. ']' → logprob: -8.125537872314453
    3. '],' → logprob: -8.625537872314453
    4. ' ][' → logprob: -10.375537872314453
    5. '[' → logprob: -11.125537872314453
    6. '],[' → logprob: -12.250537872314453
    7. ']+' → logprob: -12.250537872314453
    8. '][-' → logprob: -13.125537872314453
    9. ']][' → logprob: -13.500537872314453
    10. '0' → logprob: -14.250537872314453

Token 182: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009812753647565842
    2. '1' → logprob: -4.634812831878662
    3. ' ' → logprob: -9.884812355041504
    4. ']' → logprob: -14.134812355041504
    5. '   ' → logprob: -14.447312355041504
    6. '
' → logprob: -14.697312355041504
    7. '```' → logprob: -15.072312355041504
    8. 'count' → logprob: -15.259812355041504
    9. '01' → logprob: -15.447312355041504
    10. ':' → logprob: -15.634812355041504

Token 183: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.0816389322280884
    2. ',' → logprob: -1.4566389322280884
    3. ' +' → logprob: -1.8316389322280884
    4. '+' → logprob: -1.9566389322280884
    5. ' ,' → logprob: -2.331638813018799
    6. '],' → logprob: -4.956638813018799
    7. '][' → logprob: -5.456638813018799
    8. ']+' → logprob: -5.581638813018799
    9. '<|end|>' → logprob: -5.581638813018799
    10. '[' → logprob: -5.706638813018799

Token 184: ' even' (ID: 1952)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.21174977719783783
    2. ' even' → logprob: -2.086749792098999
    3. 'odd' → logprob: -2.961749792098999
    4. ' odd' → logprob: -4.21174955368042
    5. ' ' → logprob: -9.711750030517578
    6. 'od' → logprob: -10.649250030517578
    7. 'evenodd' → logprob: -10.774250030517578
    8. '   ' → logprob: -11.024250030517578
    9. 'ev' → logprob: -11.461750030517578
    10. '  ' → logprob: -11.961750030517578

Token 185: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -7.290784560609609e-05
    2. '_' → logprob: -10.500072479248047
    3. 'vals' → logprob: -10.500072479248047
    4. '_val' → logprob: -11.375072479248047
    5. ' _' → logprob: -12.500072479248047
    6. '_v' → logprob: -14.250072479248047
    7. '[' → logprob: -15.000072479248047
    8. '[_' → logprob: -15.625072479248047
    9. '(vals' → logprob: -15.750072479248047
    10. '"_' → logprob: -15.875072479248047

Token 186: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00011725161311915144
    2. '0' → logprob: -9.500117301940918
    3. '][' → logprob: -11.625117301940918
    4. ',' → logprob: -11.875117301940918
    5. '<|end|>' → logprob: -11.875117301940918
    6. ' ' → logprob: -12.375117301940918
    7. ')[' → logprob: -12.875117301940918
    8. ' [' → logprob: -13.125117301940918
    9. '```' → logprob: -13.250117301940918
    10. ']' → logprob: -13.500117301940918

Token 187: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '[' → logprob: -17.250003814697266
    4. '   ' → logprob: -18.250003814697266
    5. '1' → logprob: -19.250003814697266
    6. '
' → logprob: -19.375003814697266
    7. '۰' → logprob: -19.375003814697266
    8. '  ' → logprob: -20.125003814697266
    9. '][' → logprob: -20.125003814697266
    10. ']' → logprob: -20.625003814697266

Token 188: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00018280261429026723
    2. '[' → logprob: -9.00018310546875
    3. ']' → logprob: -10.62518310546875
    4. ' ][' → logprob: -10.75018310546875
    5. '0' → logprob: -11.50018310546875
    6. ']][' → logprob: -14.00018310546875
    7. '   ' → logprob: -14.12518310546875
    8. ' ' → logprob: -14.50018310546875
    9. '1' → logprob: -14.62518310546875
    10. '()][' → logprob: -16.00018310546875

Token 189: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.682846287731081e-05
    2. '][' → logprob: -10.375066757202148
    3. ' ' → logprob: -10.625066757202148
    4. '[' → logprob: -11.750066757202148
    5. '1' → logprob: -13.625066757202148
    6. '   ' → logprob: -13.875066757202148
    7. ']' → logprob: -15.125066757202148
    8. '  ' → logprob: -15.375066757202148
    9. '-' → logprob: -16.12506675720215
    10. '```' → logprob: -16.50006675720215

Token 190: '],' (ID: 2155)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00695891585201025
    2. ']' → logprob: -5.381958961486816
    3. '}' → logprob: -6.131958961486816
    4. ',' → logprob: -9.881958961486816
    5. '),' → logprob: -10.006958961486816
    6. '<|end|>' → logprob: -11.006958961486816
    7. ' )' → logprob: -11.256958961486816
    8. '   ' → logprob: -11.631958961486816
    9. ')]' → logprob: -11.756958961486816
    10. ')
' → logprob: -12.131958961486816

Token 191: ' odd' (ID: 14210)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.013026338070631027
    2. ' odd' → logprob: -4.388026237487793
    3. 'sum' → logprob: -8.388026237487793
    4. 'even' → logprob: -8.763026237487793
    5. 'max' → logprob: -9.763026237487793
    6. 'od' → logprob: -10.638026237487793
    7. 'len' → logprob: -11.513026237487793
    8. '   ' → logprob: -12.138026237487793
    9. ' sum' → logprob: -12.638026237487793
    10. ' ' → logprob: -12.638026237487793

Token 192: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -3.4121114822482923e-06
    2. 'vals' → logprob: -13.625003814697266
    3. '_val' → logprob: -14.000003814697266
    4. '_' → logprob: -14.875003814697266
    5. '[_' → logprob: -15.500003814697266
    6. ' _' → logprob: -15.625003814697266
    7. '[' → logprob: -15.875003814697266
    8. 's' → logprob: -17.000003814697266
    9. '(vals' → logprob: -17.000003814697266
    10. 'Vals' → logprob: -17.125003814697266

Token 193: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0018671216676011682
    2. '1' → logprob: -7.126867294311523
    3. '0' → logprob: -7.251867294311523
    4. ',' → logprob: -9.001867294311523
    5. '<|end|>' → logprob: -9.251867294311523
    6. ' ' → logprob: -10.376867294311523
    7. '[-' → logprob: -10.501867294311523
    8. '2' → logprob: -10.626867294311523
    9. 'and' → logprob: -11.001867294311523
    10. ' and' → logprob: -12.126867294311523

Token 194: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006277294596657157
    2. '-' → logprob: -8.000627517700195
    3. ' ' → logprob: -8.875627517700195
    4. '1' → logprob: -9.000627517700195
    5. '[' → logprob: -11.500627517700195
    6. '][' → logprob: -12.625627517700195
    7. '   ' → logprob: -12.750627517700195
    8. ' -' → logprob: -12.750627517700195
    9. '
' → logprob: -13.000627517700195
    10. ']' → logprob: -13.438127517700195

Token 195: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.002449734602123499
    2. '[' → logprob: -6.5024495124816895
    3. '1' → logprob: -7.3774495124816895
    4. ']' → logprob: -8.252449989318848
    5. ' ][' → logprob: -10.377449989318848
    6. '],' → logprob: -12.252449989318848
    7. '-' → logprob: -12.252449989318848
    8. ']][' → logprob: -12.627449989318848
    9. ')[' → logprob: -12.752449989318848
    10. ',' → logprob: -13.002449989318848

Token 196: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9862216504407115e-05
    2. '0' → logprob: -11.125020027160645
    3. '-' → logprob: -13.125020027160645
    4. '][' → logprob: -14.375020027160645
    5. '
' → logprob: -14.500020027160645
    6. ']' → logprob: -14.625020027160645
    7. '```' → logprob: -14.875020027160645
    8. ' ' → logprob: -15.000020027160645
    9. '   ' → logprob: -15.812520027160645
    10. '' → logprob: -16.437519073486328

Token 197: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4079456925392151
    2. ']' → logprob: -1.7829456329345703
    3. '],' → logprob: -2.1579456329345703
    4. ')' → logprob: -3.7829456329345703
    5. '),' → logprob: -4.40794563293457
    6. '[' → logprob: -4.53294563293457
    7. ' ,' → logprob: -6.28294563293457
    8. '<|end|>' → logprob: -7.03294563293457
    9. ')]' → logprob: -7.65794563293457
    10. '][' → logprob: -7.65794563293457

Token 198: ' even' (ID: 1952)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.08895234018564224
    2. ' even' → logprob: -2.4639523029327393
    3. 'odd' → logprob: -12.08895206451416
    4. ' odd' → logprob: -12.71395206451416
    5. 'evenodd' → logprob: -13.33895206451416
    6. '_even' → logprob: -13.46395206451416
    7. ' ' → logprob: -15.08895206451416
    8. 'ev' → logprob: -15.33895206451416
    9. 'Even' → logprob: -15.46395206451416
    10. '<|end|>' → logprob: -15.96395206451416

Token 199: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -6.034592388459714e-06
    2. '_' → logprob: -12.875005722045898
    3. '_val' → logprob: -13.375005722045898
    4. 'vals' → logprob: -14.375005722045898
    5. '[_' → logprob: -14.625005722045898
    6. '```' → logprob: -15.500005722045898
    7. ' _' → logprob: -16.0000057220459
    8. '[' → logprob: -16.0000057220459
    9. '_v' → logprob: -16.2500057220459
    10. 'Vals' → logprob: -17.3750057220459

Token 200: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3901686370372772
    2. '_vals' → logprob: -1.1401686668395996
    3. 'vals' → logprob: -5.7651686668396
    4. '```' → logprob: -9.890168190002441
    5. '[-' → logprob: -10.140168190002441
    6. 'Vals' → logprob: -11.140168190002441
    7. '_val' → logprob: -11.390168190002441
    8. 's' → logprob: -11.515168190002441
    9. '-' → logprob: -11.765168190002441
    10. 'val' → logprob: -11.890168190002441

Token 201: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.719917630311102e-05
    2. ' ' → logprob: -9.625077247619629
    3. '1' → logprob: -12.250077247619629
    4. '[' → logprob: -12.500077247619629
    5. '][' → logprob: -13.500077247619629
    6. '   ' → logprob: -14.875077247619629
    7. ']' → logprob: -15.625077247619629
    8. '-' → logprob: -15.625077247619629
    9. '```' → logprob: -16.250076293945312
    10. '  ' → logprob: -16.625076293945312

Token 202: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0009037189302034676
    2. '[' → logprob: -7.250903606414795
    3. ']' → logprob: -8.875904083251953
    4. ' ][' → logprob: -10.750904083251953
    5. '   ' → logprob: -12.125904083251953
    6. '-' → logprob: -12.125904083251953
    7. '0' → logprob: -12.125904083251953
    8. ']][' → logprob: -12.500904083251953
    9. '1' → logprob: -12.625904083251953
    10. ')][' → logprob: -13.125904083251953

Token 203: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07003391534090042
    2. '1' → logprob: -2.6950340270996094
    3. '][' → logprob: -9.82003402709961
    4. '[' → logprob: -10.57003402709961
    5. ' ' → logprob: -11.19503402709961
    6. ']' → logprob: -13.69503402709961
    7. '   ' → logprob: -13.94503402709961
    8. '<|end|>' → logprob: -14.44503402709961
    9. '-' → logprob: -15.07003402709961
    10. '```' → logprob: -15.19503402709961

Token 204: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ' )' → logprob: -15.000000953674316
    3. '}' → logprob: -15.375000953674316
    4. ']' → logprob: -15.500000953674316
    5. ')
' → logprob: -16.125
    6. '),' → logprob: -17.75
    7. '   ' → logprob: -17.875
    8. '）' → logprob: -18.0
    9. '))' → logprob: -18.625
    10. ')

' → logprob: -18.75

Token 205: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.001564853941090405
    2. '<|end|>' → logprob: -6.501564979553223
    3. '
' → logprob: -9.876564979553223
    4. '#' → logprob: -12.376564979553223
    5. '<|end|>' → logprob: -12.751564979553223
    6. '```' → logprob: -14.001564979553223
    7. '[
' → logprob: -15.001564979553223
    8. '[' → logprob: -15.001564979553223
    9. '  
' → logprob: -15.376564979553223
    10. '.' → logprob: -15.376564979553223

Token 206: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.37773144245147705
    2. 'main' → logprob: -1.377731442451477
    3. ' solve' → logprob: -3.6277313232421875
    4. 'solve' → logprob: -4.1277313232421875
    5. 'calculate' → logprob: -5.7527313232421875
    6. ' calculate' → logprob: -5.8777313232421875
    7. 'min' → logprob: -6.2527313232421875
    8. 'def' → logprob: -6.3777313232421875
    9. 'max' → logprob: -6.3777313232421875
    10. ' max' → logprob: -6.6277313232421875

Token 207: '_multi' (ID: 81207)
  Prédit: '_al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_al' → logprob: -0.4479392170906067
    2. '_max' → logprob: -2.322939157485962
    3. '_min' → logprob: -2.822939157485962
    4. '_second' → logprob: -2.822939157485962
    5. '_best' → logprob: -3.197939157485962
    6. '_single' → logprob: -3.572939157485962
    7. '_m' → logprob: -4.322939395904541
    8. '_other' → logprob: -4.822939395904541
    9. '_unique' → logprob: -5.197939395904541
    10. '_case' → logprob: -5.322939395904541

Token 208: '_case' (ID: 43667)
  Prédit: '_case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_case' → logprob: -0.061085838824510574
    2. 'ple' → logprob: -3.3110859394073486
    3. '_' → logprob: -5.3110857009887695
    4. 'case' → logprob: -5.8110857009887695
    5. '_max' → logprob: -5.9360857009887695
    6. '_val' → logprob: -6.3110857009887695
    7. 'max' → logprob: -6.3110857009887695
    8. '_key' → logprob: -6.5610857009887695
    9. '_candidate' → logprob: -6.6860857009887695
    10. '_count' → logprob: -6.8110857009887695

Token 209: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.0008178464486263692
    2. '_count' → logprob: -8.375818252563477
    3. '_case' → logprob: -8.750818252563477
    4. '_' → logprob: -8.875818252563477
    5. '_cases' → logprob: -9.250818252563477
    6. '(' → logprob: -9.750818252563477
    7. '_vals' → logprob: -10.750818252563477
    8. '(_' → logprob: -11.125818252563477
    9. '_s' → logprob: -11.375818252563477
    10. '_results' → logprob: -11.375818252563477

Token 210: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.676981345459353e-06
    2. ' (' → logprob: -13.375005722045898
    3. '():' → logprob: -13.375005722045898
    4. '(m' → logprob: -14.750005722045898
    5. '(
' → logprob: -15.250005722045898
    6. '(old' → logprob: -15.625005722045898
    7. '(s' → logprob: -15.625005722045898
    8. ':' → logprob: -15.875005722045898
    9. '(`' → logprob: -15.875005722045898
    10. '(*' → logprob: -15.875005722045898

Token 211: 'odd' (ID: 18303)
  Prédit: 'odd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.04183822125196457
    2. ' odd' → logprob: -4.1668381690979
    3. 'vals' → logprob: -4.2918381690979
    4. 'even' → logprob: -5.5418381690979
    5. 'od' → logprob: -6.5418381690979
    6. 'counts' → logprob: -6.7918381690979
    7. 'count' → logprob: -6.9168381690979
    8. ' vals' → logprob: -7.6668381690979
    9. 'case' → logprob: -7.7918381690979
    10. 'single' → logprob: -8.041838645935059

Token 212: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -0.0002912486088462174
    2. '_counts' → logprob: -9.375290870666504
    3. '_' → logprob: -9.875290870666504
    4. ' _' → logprob: -9.875290870666504
    5. '_s' → logprob: -11.250290870666504
    6. 'vals' → logprob: -11.250290870666504
    7. ',_' → logprob: -11.500290870666504
    8. '_val' → logprob: -11.750290870666504
    9. '_,' → logprob: -12.000290870666504
    10. ',' → logprob: -12.000290870666504

Token 213: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.9040898880339228e-05
    2. ' ,' → logprob: -10.875028610229492
    3. '):' → logprob: -11.750028610229492
    4. '   ' → logprob: -14.125028610229492
    5. ',
' → logprob: -14.875028610229492
    6. ')' → logprob: -15.500028610229492
    7. '[' → logprob: -15.625028610229492
    8. '[],' → logprob: -16.000028610229492
    9. '‌,' → logprob: -16.000028610229492
    10. ',e' → logprob: -16.625028610229492

Token 214: ' even' (ID: 1952)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.3871595561504364
    2. ' even' → logprob: -1.1371595859527588
    3. 'odd' → logprob: -9.01215934753418
    4. ' odd' → logprob: -9.51215934753418
    5. ' ' → logprob: -10.38715934753418
    6. '   ' → logprob: -10.63715934753418
    7. '_even' → logprob: -12.32465934753418
    8. 'e' → logprob: -12.63715934753418
    9. 'event' → logprob: -13.01215934753418
    10. 'Even' → logprob: -13.19965934753418

Token 215: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -0.00015169414109550416
    2. 'vals' → logprob: -9.375151634216309
    3. '[' → logprob: -10.625151634216309
    4. 's' → logprob: -10.875151634216309
    5. ',' → logprob: -12.000151634216309
    6. '```' → logprob: -12.750151634216309
    7. ',_' → logprob: -13.000151634216309
    8. '_idxs' → logprob: -13.375151634216309
    9. '[_' → logprob: -13.500151634216309
    10. '_s' → logprob: -13.625151634216309

Token 216: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10072416812181473
    2. ',' → logprob: -2.350724220275879
    3. '):
' → logprob: -8.225724220275879
    4. ' ):' → logprob: -8.975724220275879
    5. ':' → logprob: -10.225724220275879
    6. ')' → logprob: -10.225724220275879
    7. ' ,' → logprob: -10.725724220275879
    8. '   ' → logprob: -10.850724220275879
    9. ' :' → logprob: -13.975724220275879
    10. '):
' → logprob: -13.975724220275879

Token 217: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010201874189078808
    2. '
' → logprob: -5.385201930999756
    3. ' max' → logprob: -6.135201930999756
    4. '    
' → logprob: -7.135201930999756
    5. 'max' → logprob: -7.635201930999756
    6. ':
' → logprob: -8.135201454162598
    7. ',' → logprob: -8.260201454162598
    8. ' for' → logprob: -8.760201454162598
    9. ' counts' → logprob: -8.760201454162598
    10. 'odd' → logprob: -9.135201454162598

Token 218: ' a' (ID: 261)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.268646240234375
    2. ' max' → logprob: -2.893646240234375
    3. 'res' → logprob: -3.143646240234375
    4. 'results' → logprob: -3.268646240234375
    5. 'best' → logprob: -3.643646240234375
    6. 'for' → logprob: -3.768646240234375
    7. 'odd' → logprob: -4.393646240234375
    8. ' res' → logprob: -4.768646240234375
    9. 'result' → logprob: -4.893646240234375
    10. ' best' → logprob: -5.768646240234375

Token 219: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4155210852622986
    2. '_' → logprob: -1.5405211448669434
    3. '_len' → logprob: -3.5405211448669434
    4. ',' → logprob: -3.7905211448669434
    5. '_count' → logprob: -4.040521144866943
    6. 'a' → logprob: -4.415521144866943
    7. '=' → logprob: -4.915521144866943
    8. '1' → logprob: -5.040521144866943
    9. '0' → logprob: -5.040521144866943
    10. 's' → logprob: -5.040521144866943

Token 220: ' odd' (ID: 14210)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.007802634034305811
    2. ' odd' → logprob: -5.382802486419678
    3. 'even' → logprob: -5.882802486419678
    4. 'max' → logprob: -8.882802963256836
    5. '(' → logprob: -9.382802963256836
    6. '0' → logprob: -9.882802963256836
    7. 'od' → logprob: -10.382802963256836
    8. ' even' → logprob: -10.632802963256836
    9. '[' → logprob: -10.757802963256836
    10. ' max' → logprob: -11.757802963256836

Token 221: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -7.107425062713446e-06
    2. '[' → logprob: -13.000006675720215
    3. ' _' → logprob: -13.625006675720215
    4. '[_' → logprob: -13.875006675720215
    5. 'vals' → logprob: -14.000006675720215
    6. '_val' → logprob: -14.625006675720215
    7. '_' → logprob: -14.625006675720215
    8. '\' → logprob: -16.50000762939453
    9. ')_' → logprob: -16.62500762939453
    10. '```' → logprob: -16.75000762939453

Token 222: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00011725161311915144
    2. '0' → logprob: -9.250117301940918
    3. '][' → logprob: -12.625117301940918
    4. '=' → logprob: -12.750117301940918
    5. '[-' → logprob: -12.750117301940918
    6. 'def' → logprob: -13.250117301940918
    7. ' [' → logprob: -13.625117301940918
    8. 'a' → logprob: -13.750117301940918
    9. '1' → logprob: -13.750117301940918
    10. ' ' → logprob: -13.875117301940918

Token 223: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013394085690379143
    2. '1' → logprob: -6.751339435577393
    3. ' ' → logprob: -9.376338958740234
    4. '[' → logprob: -10.438838958740234
    5. '   ' → logprob: -11.126338958740234
    6. '][' → logprob: -11.813838958740234
    7. ':' → logprob: -12.563838958740234
    8. '...' → logprob: -12.751338958740234
    9. ']' → logprob: -13.001338958740234
    10. '2' → logprob: -13.063838958740234

Token 224: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00035369666875340044
    2. ' ][' → logprob: -8.500353813171387
    3. '[' → logprob: -9.375353813171387
    4. ']' → logprob: -9.750353813171387
    5. '0' → logprob: -12.875353813171387
    6. '   ' → logprob: -13.250353813171387
    7. ' ' → logprob: -14.625353813171387
    8. ']
' → logprob: -14.625353813171387
    9. '
' → logprob: -14.750353813171387
    10. ' ]' → logprob: -15.375353813171387

Token 225: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012713817704934627
    2. '1' → logprob: -9.375126838684082
    3. '
' → logprob: -10.937626838684082
    4. '[' → logprob: -12.062626838684082
    5. ' ' → logprob: -12.500126838684082
    6. '][' → logprob: -13.062626838684082
    7. '   ' → logprob: -13.250126838684082
    8. '

' → logprob: -13.625126838684082
    9. '```' → logprob: -13.875126838684082
    10. '٠' → logprob: -14.687626838684082

Token 226: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5912159085273743
    2. ',' → logprob: -1.0912158489227295
    3. ',b' → logprob: -2.9662158489227295
    4. '<|end|>' → logprob: -4.091216087341309
    5. ' ,' → logprob: -4.591216087341309
    6. ',a' → logprob: -5.216216087341309
    7. '
' → logprob: -5.216216087341309
    8. ',
' → logprob: -5.591216087341309
    9. ' -' → logprob: -5.841216087341309
    10. '-' → logprob: -5.966216087341309

Token 227: '   ' (ID: 271)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3244553804397583
    2. ',' → logprob: -1.9494553804397583
    3. ' b' → logprob: -2.1994552612304688
    4. ',b' → logprob: -4.074455261230469
    5. '   ' → logprob: -5.074455261230469
    6. ' ,' → logprob: -8.574455261230469
    7. ' ' → logprob: -9.074455261230469
    8. ',
' → logprob: -9.574455261230469
    9. '    ' → logprob: -9.824455261230469
    10. '
' → logprob: -10.574455261230469

Token 228: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.0031448006629943848
    2. ' b' → logprob: -5.87814474105835
    3. 'a' → logprob: -8.378145217895508
    4. ',' → logprob: -10.253145217895508
    5. '   ' → logprob: -10.253145217895508
    6. 'c' → logprob: -11.128145217895508
    7. ',b' → logprob: -11.753145217895508
    8. ' ' → logprob: -12.753145217895508
    9. ' a' → logprob: -13.503145217895508
    10. '    ' → logprob: -13.628145217895508

Token 229: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2838972508907318
    2. '=' → logprob: -1.4088972806930542
    3. ',' → logprob: -5.908897399902344
    4. ' ,' → logprob: -11.158897399902344
    5. 'a' → logprob: -12.158897399902344
    6. ' ' → logprob: -12.408897399902344
    7. '   ' → logprob: -13.658897399902344
    8. '  ' → logprob: -14.033897399902344
    9. ',a' → logprob: -15.158897399902344
    10. ' =
' → logprob: -15.283897399902344

Token 230: ' odd' (ID: 14210)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.07799483835697174
    2. 'odd' → logprob: -3.2029948234558105
    3. ' even' → logprob: -3.4529948234558105
    4. ' odd' → logprob: -6.0779948234558105
    5. ' ' → logprob: -8.702995300292969
    6. '   ' → logprob: -9.702995300292969
    7. '  ' → logprob: -11.077995300292969
    8. 'ev' → logprob: -11.452995300292969
    9. 'e' → logprob: -11.577995300292969
    10. '_even' → logprob: -11.577995300292969

Token 231: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -0.0026464059483259916
    2. 'vals' → logprob: -6.002646446228027
    3. '[' → logprob: -8.752646446228027
    4. 'Vals' → logprob: -12.627646446228027
    5. '[-' → logprob: -13.252646446228027
    6. '[_' → logprob: -13.252646446228027
    7. ' vals' → logprob: -13.752646446228027
    8. '(vals' → logprob: -14.377646446228027
    9. 'v' → logprob: -14.502646446228027
    10. 's' → logprob: -14.752646446228027

Token 232: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9862216504407115e-05
    2. '1' → logprob: -11.875020027160645
    3. '][' → logprob: -12.125020027160645
    4. ' [' → logprob: -13.500020027160645
    5. '0' → logprob: -13.750020027160645
    6. '```' → logprob: -13.750020027160645
    7. '=' → logprob: -13.875020027160645
    8. 'def' → logprob: -14.375020027160645
    9. '   ' → logprob: -14.750020027160645
    10. 's' → logprob: -15.000020027160645

Token 233: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017112360801547766
    2. '0' → logprob: -6.376711368560791
    3. ' ' → logprob: -12.376710891723633
    4. '   ' → logprob: -13.501710891723633
    5. '[' → logprob: -14.126710891723633
    6. '
' → logprob: -14.189210891723633
    7. '-' → logprob: -14.939210891723633
    8. '```' → logprob: -15.001710891723633
    9. '][' → logprob: -15.001710891723633
    10. '...' → logprob: -16.189210891723633

Token 234: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0001025895617203787
    2. '[' → logprob: -9.750102996826172
    3. ' ][' → logprob: -10.375102996826172
    4. '0' → logprob: -12.125102996826172
    5. ']' → logprob: -12.250102996826172
    6. '   ' → logprob: -13.625102996826172
    7. ' ' → logprob: -14.125102996826172
    8. ']][' → logprob: -15.500102996826172
    9. '  ' → logprob: -16.125102996826172
    10. '"][' → logprob: -16.500102996826172

Token 235: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.991464786347933e-05
    2. '1' → logprob: -10.000060081481934
    3. '][' → logprob: -12.000060081481934
    4. '[' → logprob: -12.625060081481934
    5. ' ' → logprob: -12.875060081481934
    6. '
' → logprob: -13.250060081481934
    7. '   ' → logprob: -15.125060081481934
    8. '```' → logprob: -17.000059127807617
    9. '

' → logprob: -17.187559127807617
    10. ']' → logprob: -17.250059127807617

Token 236: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4872205853462219
    2. '<|end|>' → logprob: -1.7372205257415771
    3. '   ' → logprob: -2.237220525741577
    4. '}' → logprob: -3.112220525741577
    5. ',' → logprob: -3.487220525741577
    6. ')' → logprob: -3.862220525741577
    7. ',
' → logprob: -6.612220764160156
    8. '<|end|>' → logprob: -7.112220764160156
    9. '#' → logprob: -7.237220764160156
    10. ' ' → logprob: -7.862220764160156

Token 237: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022998936474323273
    2. 'c' → logprob: -6.752299785614014
    3. ',' → logprob: -7.877299785614014
    4. '    
' → logprob: -8.252300262451172
    5. '
' → logprob: -8.377300262451172
    6. ' c' → logprob: -9.252300262451172
    7. ',
' → logprob: -9.502300262451172
    8. '<|end|>' → logprob: -9.877300262451172
    9. ',c' → logprob: -11.127300262451172
    10. '	c' → logprob: -12.002300262451172

Token 238: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.2655840218067169
    2. 'c' (adapté à ' c') → logprob: -1.6405839920043945
    3. '   ' → logprob: -3.5155839920043945
    4. ',' → logprob: -4.7655839920043945
    5. ',c' → logprob: -7.5155839920043945
    6. ' ' → logprob: -8.140583992004395
    7. ' ,' → logprob: -9.140583992004395
    8. ',
' → logprob: -9.515583992004395
    9. '
' → logprob: -10.640583992004395
    10. '	c' → logprob: -10.765583992004395

Token 239: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5765255093574524
    2. ' =' → logprob: -0.8265255093574524
    3. ',' → logprob: -7.451525688171387
    4. 'd' → logprob: -13.326525688171387
    5. ' ,' → logprob: -13.826525688171387
    6. ' ' → logprob: -13.951525688171387
    7. ',d' → logprob: -14.701525688171387
    8. 'a' → logprob: -14.951525688171387
    9. '  ' → logprob: -15.201525688171387
    10. '   ' → logprob: -15.576525688171387

Token 240: ' even' (ID: 1952)
  Prédit: ' odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' odd' → logprob: -0.6355594992637634
    2. 'odd' → logprob: -0.7605594992637634
    3. 'even' → logprob: -6.385559558868408
    4. ' even' → logprob: -6.885559558868408
    5. ' ' → logprob: -9.01055908203125
    6. '   ' → logprob: -10.51055908203125
    7. 'od' → logprob: -10.76055908203125
    8. ' b' → logprob: -10.88555908203125
    9. '  ' → logprob: -11.32305908203125
    10. ',' → logprob: -12.76055908203125

Token 241: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -8.709308167453855e-05
    2. 'vals' → logprob: -9.375086784362793
    3. '_val' → logprob: -14.000086784362793
    4. '_' → logprob: -15.250086784362793
    5. 's' → logprob: -15.250086784362793
    6. '[_' → logprob: -15.750086784362793
    7. '[' → logprob: -16.00008773803711
    8. ' vals' → logprob: -16.12508773803711
    9. ' _' → logprob: -16.12508773803711
    10. '(vals' → logprob: -16.50008773803711

Token 242: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9862216504407115e-05
    2. '0' → logprob: -10.875020027160645
    3. '   ' → logprob: -15.375020027160645
    4. '1' → logprob: -15.625020027160645
    5. ' [' → logprob: -15.625020027160645
    6. '```' → logprob: -16.750019073486328
    7. 's' → logprob: -17.375019073486328
    8. ' ' → logprob: -17.375019073486328
    9. 'def' → logprob: -17.500019073486328
    10. '][' → logprob: -18.125019073486328

Token 243: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. '1' → logprob: -13.875001907348633
    3. ' ' → logprob: -15.125001907348633
    4. '[' → logprob: -15.250001907348633
    5. '   ' → logprob: -16.500001907348633
    6. '۰' → logprob: -18.062501907348633
    7. '```' → logprob: -18.687501907348633
    8. '
' → logprob: -18.875001907348633
    9. '０' → logprob: -19.375001907348633
    10. '  ' → logprob: -19.562501907348633

Token 244: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0006332091288641095
    2. '[' → logprob: -7.375633239746094
    3. '0' → logprob: -12.875633239746094
    4. ' ][' → logprob: -13.000633239746094
    5. ']' → logprob: -13.875633239746094
    6. '   ' → logprob: -14.625633239746094
    7. '1' → logprob: -16.125633239746094
    8. ''][' → logprob: -16.250633239746094
    9. ']][' → logprob: -17.250633239746094
    10. '"][' → logprob: -17.250633239746094

Token 245: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.6312321753939614e-05
    2. '[' → logprob: -10.750036239624023
    3. '1' → logprob: -11.875036239624023
    4. '][' → logprob: -12.000036239624023
    5. ' ' → logprob: -13.625036239624023
    6. '   ' → logprob: -15.125036239624023
    7. '  ' → logprob: -18.375036239624023
    8. ' [' → logprob: -18.500036239624023
    9. ' ][' → logprob: -18.500036239624023
    10. '
' → logprob: -18.875036239624023

Token 246: ']
' (ID: 1592)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43741461634635925
    2. ']' → logprob: -2.0624146461486816
    3. ')
' → logprob: -2.3124146461486816
    4. ')' → logprob: -2.8124146461486816
    5. ']
' → logprob: -2.8124146461486816
    6. ',
' → logprob: -5.937414646148682
    7. ',' → logprob: -6.062414646148682
    8. 'd' → logprob: -6.812414646148682
    9. '[' → logprob: -7.812414646148682
    10. '
' → logprob: -8.062414169311523

Token 247: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05628158152103424
    2. 'd' → logprob: -2.931281566619873
    3. ' d' → logprob: -6.681281566619873
    4. ' ' → logprob: -10.056282043457031
    5. '
' → logprob: -10.306282043457031
    6. '  ' → logprob: -10.931282043457031
    7. '    
' → logprob: -11.181282043457031
    8. ',' → logprob: -11.306282043457031
    9. '    ' → logprob: -11.681282043457031
    10. ',d' → logprob: -12.306282043457031

Token 248: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.00046928023220971227
    2. '   ' → logprob: -7.750469207763672
    3. ' d' → logprob: -10.250469207763672
    4. 'e' → logprob: -13.250469207763672
    5. ' ' → logprob: -14.125469207763672
    6. 'c' → logprob: -15.625469207763672
    7. '
' → logprob: -15.875469207763672
    8. '    
' → logprob: -15.875469207763672
    9. '  ' → logprob: -16.000469207763672
    10. '	d' → logprob: -16.125469207763672

Token 249: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5760729312896729
    2. '=' → logprob: -0.8260729312896729
    3. ',' → logprob: -8.951072692871094
    4. ' ' → logprob: -13.201072692871094
    5. '   ' → logprob: -14.201072692871094
    6. '=
' → logprob: -15.451072692871094
    7. ')' → logprob: -15.701072692871094
    8. ' ,' → logprob: -15.701072692871094
    9. '  ' → logprob: -15.826072692871094
    10. 'a' → logprob: -16.201072692871094

Token 250: ' even' (ID: 1952)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.2014477401971817
    2. ' even' → logprob: -1.7014477252960205
    3. '   ' → logprob: -10.576447486877441
    4. ' ' → logprob: -12.701447486877441
    5. '[' → logprob: -12.826447486877441
    6. '1' → logprob: -14.076447486877441
    7. 'e' → logprob: -14.701447486877441
    8. ' [' → logprob: -15.451447486877441
    9. '_even' → logprob: -15.576447486877441
    10. '  ' → logprob: -15.826447486877441

Token 251: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -0.00021855637896806002
    2. 'vals' → logprob: -8.625218391418457
    3. '[' → logprob: -10.250218391418457
    4. '[-' → logprob: -13.750218391418457
    5. '_val' → logprob: -14.250218391418457
    6. 'Vals' → logprob: -14.875218391418457
    7. '[_' → logprob: -15.000218391418457
    8. '(vals' → logprob: -15.500218391418457
    9. '-' → logprob: -15.875218391418457
    10. '```' → logprob: -16.000219345092773

Token 252: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.1557283111615106e-05
    2. '][' → logprob: -10.625041961669922
    3. '1' → logprob: -11.125041961669922
    4. '```' → logprob: -13.875041961669922
    5. ')[' → logprob: -14.250041961669922
    6. ' [' → logprob: -15.000041961669922
    7. '   ' → logprob: -16.000041961669922
    8. '
' → logprob: -16.250041961669922
    9. '`' → logprob: -16.625041961669922
    10. ' ' → logprob: -17.250041961669922

Token 253: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.080963092041202e-06
    2. ' ' → logprob: -12.625004768371582
    3. '   ' → logprob: -14.500004768371582
    4. '[' → logprob: -14.750004768371582
    5. '
' → logprob: -14.750004768371582
    6. '0' → logprob: -15.000004768371582
    7. ']' → logprob: -17.4375057220459
    8. '```' → logprob: -17.6250057220459
    9. '!' → logprob: -18.1250057220459
    10. '...' → logprob: -18.3125057220459

Token 254: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.1603277027606964
    2. '[' → logprob: -1.910327672958374
    3. ' ][' → logprob: -10.160327911376953
    4. '   ' → logprob: -11.035327911376953
    5. '0' → logprob: -11.285327911376953
    6. ']' → logprob: -11.410327911376953
    7. ' [' → logprob: -11.785327911376953
    8. ')[' → logprob: -12.535327911376953
    9. '}[' → logprob: -12.660327911376953
    10. '>[' → logprob: -12.910327911376953

Token 255: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00011784763046307489
    2. '1' → logprob: -9.750118255615234
    3. '[' → logprob: -9.750118255615234
    4. '][' → logprob: -14.750118255615234
    5. '```' → logprob: -15.125118255615234
    6. '   ' → logprob: -15.375118255615234
    7. ' ' → logprob: -15.500118255615234
    8. '۰' → logprob: -16.875118255615234
    9. '
' → logprob: -17.000118255615234
    10. '-' → logprob: -18.125118255615234

Token 256: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6496462225914001
    2. '}' → logprob: -0.8996462225914001
    3. ')' → logprob: -3.274646282196045
    4. '<|end|>' → logprob: -4.024646282196045
    5. '   ' → logprob: -4.274646282196045
    6. ',' → logprob: -8.399645805358887
    7. '}
' → logprob: -8.524645805358887
    8. 'd' → logprob: -8.774645805358887
    9. ']
' → logprob: -8.899645805358887
    10. 'def' → logprob: -8.899645805358887

Token 257: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1361142098903656
    2. 'e' → logprob: -2.1361141204833984
    3. ' e' → logprob: -5.511114120483398
    4. ',' → logprob: -5.511114120483398
    5. '    
' → logprob: -8.136114120483398
    6. 'odd' → logprob: -9.261114120483398
    7. '    ' → logprob: -9.511114120483398
    8. '  ' → logprob: -9.511114120483398
    9. '<|end|>' → logprob: -9.511114120483398
    10. ' odd' → logprob: -9.761114120483398

Token 258: ' return' (ID: 622)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.016266850754618645
    2. '   ' → logprob: -4.516266822814941
    3. ' e' → logprob: -6.266266822814941
    4. ',' → logprob: -6.266266822814941
    5. 'a' → logprob: -7.516266822814941
    6. 'o' → logprob: -8.391266822814941
    7. 'odd' → logprob: -8.391266822814941
    8. 'x' → logprob: -8.891266822814941
    9. '    
' → logprob: -9.641266822814941
    10. ' odd' → logprob: -10.516266822814941

Token 259: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10707034915685654
    2. ' a' → logprob: -2.7320704460144043
    3. '(a' → logprob: -3.4820704460144043
    4. ' (' → logprob: -5.232070446014404
    5. '(' → logprob: -8.732069969177246
    6. ' ' → logprob: -9.732069969177246
    7. '   ' → logprob: -10.107069969177246
    8. '((' → logprob: -10.232069969177246
    9. '[a' → logprob: -10.732069969177246
    10. ' max' → logprob: -11.357069969177246

Token 260: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0027794393245130777
    2. ',b' → logprob: -6.002779483795166
    3. ' ,' → logprob: -8.377779006958008
    4. ',c' → logprob: -10.252779006958008
    5. ',d' → logprob: -11.377779006958008
    6. ',a' → logprob: -11.502779006958008
    7. ',
' → logprob: -12.127779006958008
    8. 'b' → logprob: -12.252779006958008
    9. '[' → logprob: -13.252779006958008
    10. '<|end|>' → logprob: -13.377779006958008

Token 261: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0031837786082178354
    2. ' b' → logprob: -5.753183841705322
    3. 'c' → logprob: -12.128183364868164
    4. ' c' → logprob: -14.878183364868164
    5. ' ' → logprob: -15.878183364868164
    6. '   ' → logprob: -16.003183364868164
    7. '  ' → logprob: -18.503183364868164
    8. 'd' → logprob: -18.628183364868164
    9. '    ' → logprob: -19.253183364868164
    10. '	b' → logprob: -19.753183364868164

Token 262: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012551113031804562
    2. ',c' → logprob: -7.126255035400391
    3. ',
' → logprob: -8.37625503540039
    4. ' ,' → logprob: -9.12625503540039
    5. 'c' → logprob: -9.25125503540039
    6. '   ' → logprob: -11.37625503540039
    7. ' ' → logprob: -14.12625503540039
    8. ' c' → logprob: -14.50125503540039
    9. ',
' → logprob: -14.87625503540039
    10. '  ' → logprob: -14.87625503540039

Token 263: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.01416798122227192
    2. ' c' → logprob: -4.264167785644531
    3. '   ' → logprob: -13.014167785644531
    4. ' ' → logprob: -13.264167785644531
    5. '  ' → logprob: -16.01416778564453
    6. '	c' → logprob: -16.13916778564453
    7. '
' → logprob: -16.51416778564453
    8. '    ' → logprob: -16.63916778564453
    9. ',c' → logprob: -17.13916778564453
    10. '<|end|>' → logprob: -17.63916778564453

Token 264: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01630297303199768
    2. ',d' → logprob: -4.766303062438965
    3. 'd' → logprob: -4.891303062438965
    4. ' ,' → logprob: -9.766303062438965
    5. ' d' → logprob: -10.391303062438965
    6. '   ' → logprob: -10.516303062438965
    7. ',
' → logprob: -11.016303062438965
    8. '[' → logprob: -11.641303062438965
    9. ' ' → logprob: -13.266303062438965
    10. '(d' → logprob: -14.141303062438965

Token 265: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0009117019944824278
    2. ' d' → logprob: -7.000911712646484
    3. '   ' → logprob: -16.000911712646484
    4. ' ' → logprob: -16.750911712646484
    5. '  ' → logprob: -18.125911712646484
    6. '       ' → logprob: -19.500911712646484
    7. '     ' → logprob: -19.875911712646484
    8. '    ' → logprob: -20.000911712646484
    9. '	d' → logprob: -20.250911712646484
    10. ',d' → logprob: -21.500911712646484

Token 266: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0024566298816353083
    2. '
' → logprob: -7.0024566650390625
    3. ',' → logprob: -7.1274566650390625
    4. '<|end|>' → logprob: -7.3774566650390625
    5. ',
' → logprob: -9.752456665039062
    6. '

' → logprob: -11.002456665039062
    7. '  
' → logprob: -11.877456665039062
    8. '#' → logprob: -12.127456665039062
    9. '    
' → logprob: -12.127456665039062
    10. '```' → logprob: -12.502456665039062

Token 267: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004929885733872652
    2. '<|end|>' → logprob: -5.504930019378662
    3. '
' → logprob: -7.379930019378662
    4. ':def' → logprob: -9.504929542541504
    5. ':' → logprob: -9.754929542541504
    6. ' def' → logprob: -10.629929542541504
    7. '\' → logprob: -10.879929542541504
    8. '  
' → logprob: -11.504929542541504
    9. '<|end|>' → logprob: -11.504929542541504
    10. '```' → logprob: -12.004929542541504

Token 268: ' single' (ID: 4590)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.5078114867210388
    2. 'main' → logprob: -1.7578115463256836
    3. ' solve' → logprob: -2.7578115463256836
    4. 'solve' → logprob: -3.2578115463256836
    5. 'min' → logprob: -3.3828115463256836
    6. ' minimal' → logprob: -3.8828115463256836
    7. 'calculate' → logprob: -4.382811546325684
    8. ' calculate' → logprob: -4.632811546325684
    9. ' min' → logprob: -4.632811546325684
    10. ' find' → logprob: -5.007811546325684

Token 269: '_case' (ID: 43667)
  Prédit: '_case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_case' → logprob: -0.0018286957638338208
    2. '_' → logprob: -6.751828670501709
    3. '_count' → logprob: -9.001829147338867
    4. 'case' → logprob: -9.126829147338867
    5. '_choice' → logprob: -9.126829147338867
    6. '_change' → logprob: -9.376829147338867
    7. '_line' → logprob: -9.626829147338867
    8. ' _' → logprob: -9.876829147338867
    9. '_cases' → logprob: -11.501829147338867
    10. '_value' → logprob: -12.001829147338867

Token 270: '(n' (ID: 2406)
  Prédit: '_counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_counts' → logprob: -1.0258417129516602
    2. '(' → logprob: -1.1508417129516602
    3. '_count' → logprob: -2.02584171295166
    4. '():' → logprob: -2.27584171295166
    5. '(_' → logprob: -3.90084171295166
    6. '(a' → logprob: -4.27584171295166
    7. '_' → logprob: -4.52584171295166
    8. '_cost' → logprob: -4.65084171295166
    9. '_result' → logprob: -5.27584171295166
    10. '(count' → logprob: -5.52584171295166

Token 271: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04304886236786842
    2. '):' → logprob: -3.168048858642578
    3. ' ,' → logprob: -11.668048858642578
    4. ')' → logprob: -11.668048858642578
    5. '):
' → logprob: -11.793048858642578
    6. ',n' → logprob: -12.043048858642578
    7. '   ' → logprob: -12.418048858642578
    8. ',
' → logprob: -12.543048858642578
    9. ':' → logprob: -12.793048858642578
    10. ' ):' → logprob: -13.418048858642578

Token 272: ' odd' (ID: 14210)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.4094187915325165
    2. 'series' → logprob: -1.1594188213348389
    3. 'even' → logprob: -4.65941858291626
    4. ' series' → logprob: -5.03441858291626
    5. ' odd' → logprob: -5.28441858291626
    6. '   ' → logprob: -8.971919059753418
    7. 'od' → logprob: -9.034419059753418
    8. ' even' → logprob: -9.034419059753418
    9. 'n' → logprob: -9.159419059753418
    10. 'vals' → logprob: -9.221919059753418

Token 273: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -0.0005099030095152557
    2. ',' → logprob: -8.125510215759277
    3. '_counts' → logprob: -8.875510215759277
    4. ',_' → logprob: -10.250510215759277
    5. 'vals' → logprob: -12.125510215759277
    6. '_,' → logprob: -12.500510215759277
    7. ' _' → logprob: -12.500510215759277
    8. ')_' → logprob: -12.625510215759277
    9. '_val' → logprob: -12.875510215759277
    10. '

' → logprob: -13.250510215759277

Token 274: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016516048344783485
    2. ' ,' → logprob: -9.125164985656738
    3. ',
' → logprob: -9.875164985656738
    4. ',n' → logprob: -13.750164985656738
    5. '):' → logprob: -13.875164985656738
    6. ',

' → logprob: -14.375164985656738
    7. '   ' → logprob: -14.625164985656738
    8. ',e' → logprob: -15.625164985656738
    9. ',val' → logprob: -15.750164985656738
    10. 's' → logprob: -15.875164985656738

Token 275: ' even' (ID: 1952)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.16028942167758942
    2. ' even' → logprob: -1.9102894067764282
    3. ' ' → logprob: -10.660289764404297
    4. 'odd' → logprob: -10.910289764404297
    5. '   ' → logprob: -11.910289764404297
    6. ' odd' → logprob: -12.035289764404297
    7. 'Even' → logprob: -13.410289764404297
    8. '  ' → logprob: -13.535289764404297
    9. '_even' → logprob: -13.535289764404297
    10. ')' → logprob: -13.972789764404297

Token 276: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -0.0006781232077628374
    2. 'vals' → logprob: -8.000678062438965
    3. ',' → logprob: -9.000678062438965
    4. ')_' → logprob: -9.750678062438965
    5. '):' → logprob: -10.125678062438965
    6. ',_' → logprob: -10.250678062438965
    7. ' _' → logprob: -11.125678062438965
    8. '
' → logprob: -11.500678062438965
    9. ')' → logprob: -11.500678062438965
    10. 'def' → logprob: -12.000678062438965

Token 277: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00014418430509977043
    2. '):
' → logprob: -9.250144004821777
    3. ':' → logprob: -10.375144004821777
    4. ',' → logprob: -11.375144004821777
    5. ')' → logprob: -12.375144004821777
    6. ' ):' → logprob: -14.250144004821777
    7. '   ' → logprob: -15.250144004821777
    8. '():' → logprob: -16.000144958496094
    9. '):
' → logprob: -16.875144958496094
    10. '}:' → logprob: -17.250144958496094

Token 278: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005939012626186013
    2. 'if' → logprob: -7.875594139099121
    3. 'a' → logprob: -9.000594139099121
    4. ' if' → logprob: -10.125594139099121
    5. 'odd' → logprob: -11.000594139099121
    6. ',' → logprob: -11.375594139099121
    7. '```' → logprob: -11.875594139099121
    8. '    
' → logprob: -12.000594139099121
    9. '):
' → logprob: -12.875594139099121
    10. ':' → logprob: -13.500594139099121

Token 279: ' a' (ID: 261)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.054695285856723785
    2. '   ' → logprob: -3.5546953678131104
    3. 'return' → logprob: -3.9296953678131104
    4. 'a' (adapté à ' a') → logprob: -5.679695129394531
    5. 'count' → logprob: -7.429695129394531
    6. 'odd' → logprob: -8.054695129394531
    7. '#' → logprob: -8.804695129394531
    8. 'ans' → logprob: -9.054695129394531
    9. 'print' → logprob: -9.554695129394531
    10. 'res' → logprob: -9.804695129394531

Token 280: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5928235650062561
    2. ',' → logprob: -1.0928235054016113
    3. ' =' → logprob: -2.2178235054016113
    4. ',b' → logprob: -6.592823505401611
    5. ',c' → logprob: -7.842823505401611
    6. ' ,' → logprob: -7.842823505401611
    7. 'a' → logprob: -8.34282398223877
    8. ',a' → logprob: -8.34282398223877
    9. 'c' → logprob: -9.34282398223877
    10. '=a' → logprob: -9.46782398223877

Token 281: ' b' (ID: 287)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.023757711052894592
    2. 'b' → logprob: -3.7737576961517334
    3. ' c' → logprob: -8.148757934570312
    4. 'd' → logprob: -9.273757934570312
    5. '_,' → logprob: -10.148757934570312
    6. 'a' → logprob: -10.273757934570312
    7. 'e' → logprob: -10.773757934570312
    8. ' b' → logprob: -11.523757934570312
    9. '_c' → logprob: -12.148757934570312
    10. '   ' → logprob: -12.523757934570312

Token 282: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.21360044181346893
    2. ',' → logprob: -1.9636003971099854
    3. ' =' → logprob: -2.9636003971099854
    4. 'c' → logprob: -8.713600158691406
    5. ',c' → logprob: -9.588600158691406
    6. '=c' → logprob: -9.713600158691406
    7. ' ,' → logprob: -10.338600158691406
    8. '=a' → logprob: -12.338600158691406
    9. 'a' → logprob: -12.588600158691406
    10. '   ' → logprob: -12.713600158691406

Token 283: ' odd' (ID: 14210)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0009469495271332562
    2. ' c' → logprob: -7.000946998596191
    3. 'a' → logprob: -11.875946998596191
    4. '_,' → logprob: -11.875946998596191
    5. '   ' → logprob: -12.000946998596191
    6. ' ' → logprob: -12.125946998596191
    7. '_c' → logprob: -12.750946998596191
    8. ',' → logprob: -13.250946998596191
    9. ' =' → logprob: -13.500946998596191
    10. '  ' → logprob: -13.625946998596191

Token 284: '_key' (ID: 6724)
  Prédit: '_key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_key' → logprob: -0.3027665615081787
    2. '_val' → logprob: -1.5527665615081787
    3. 'key' → logprob: -4.677766799926758
    4. '_c' → logprob: -5.052766799926758
    5. '_k' → logprob: -5.427766799926758
    6. '_idx' → logprob: -5.427766799926758
    7. ',' → logprob: -5.677766799926758
    8. '_v' → logprob: -5.677766799926758
    9. 'val' → logprob: -5.927766799926758
    10. 'v' → logprob: -5.927766799926758

Token 285: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.567575034452602e-05
    2. '=' → logprob: -10.25009536743164
    3. ' ,' → logprob: -10.50009536743164
    4. ',
' → logprob: -12.12509536743164
    5. '_,' → logprob: -12.25009536743164
    6. ',c' → logprob: -12.25009536743164
    7. 'c' → logprob: -12.37509536743164
    8. ' =' → logprob: -12.37509536743164
    9. ',\
' → logprob: -13.00009536743164
    10. 'a' → logprob: -13.62509536743164

Token 286: ' even' (ID: 1952)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.14338630437850952
    2. ' even' → logprob: -2.0183863639831543
    3. 'c' → logprob: -7.768386363983154
    4. ' c' → logprob: -8.893385887145996
    5. '_even' → logprob: -9.018385887145996
    6. 'odd' → logprob: -11.893385887145996
    7. ' ' → logprob: -12.393385887145996
    8. 'ev' → logprob: -12.768385887145996
    9. 'd' → logprob: -12.768385887145996
    10. 'Even' → logprob: -12.893385887145996

Token 287: '_key' (ID: 6724)
  Prédit: '_key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_key' → logprob: -1.9146995327901095e-05
    2. 'key' → logprob: -11.625019073486328
    3. '_val' → logprob: -11.625019073486328
    4. '_' → logprob: -15.250019073486328
    5. '_keys' → logprob: -15.250019073486328
    6. '_vals' → logprob: -15.875019073486328
    7. ' _' → logprob: -16.125019073486328
    8. 'Key' → logprob: -16.125019073486328
    9. 'val' → logprob: -16.625019073486328
    10. ',' → logprob: -16.875019073486328

Token 288: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04016655683517456
    2. '=' → logprob: -3.2901666164398193
    3. '   ' → logprob: -6.66516637802124
    4. ',' → logprob: -7.29016637802124
    5. ' ' → logprob: -9.165166854858398
    6. '<|end|>' → logprob: -10.790166854858398
    7. '    ' → logprob: -11.540166854858398
    8. '  ' → logprob: -12.290166854858398
    9. 'def' → logprob: -12.290166854858398
    10. ' =
' → logprob: -12.290166854858398

Token 289: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.06922544538974762
    2. ' get' → logprob: -2.819225549697876
    3. 'a' → logprob: -5.194225311279297
    4. 'odd' → logprob: -7.069225311279297
    5. ' n' → logprob: -8.319225311279297
    6. ' a' → logprob: -8.319225311279297
    7. 'n' → logprob: -8.569225311279297
    8. ' ' → logprob: -9.694225311279297
    9. ' odd' → logprob: -10.444225311279297
    10. '   ' → logprob: -10.569225311279297

Token 290: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -1.306760805164231e-05
    2. 'single' → logprob: -11.25001335144043
    3. 'Single' → logprob: -19.12501335144043
    4. '_SINGLE' → logprob: -19.12501335144043
    5. ' single' → logprob: -19.25001335144043
    6. '_s' → logprob: -19.50001335144043
    7. '(single' → logprob: -20.25001335144043
    8. '_multi' → logprob: -20.37501335144043
    9. '_get' → logprob: -21.25001335144043
    10. '```' → logprob: -22.87501335144043

Token 291: '_case' (ID: 43667)
  Prédit: '_case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_case' → logprob: -9.253090865968261e-06
    2. '_counts' → logprob: -12.375009536743164
    3. '_count' → logprob: -12.875009536743164
    4. 'case' → logprob: -13.125009536743164
    5. '_cases' → logprob: -15.625009536743164
    6. '
' → logprob: -16.500009536743164
    7. '_single' → logprob: -17.125009536743164
    8. '(_' → logprob: -17.125009536743164
    9. '_' → logprob: -17.375009536743164
    10. '```' → logprob: -17.875009536743164

Token 292: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -8.959636033978313e-05
    2. '_case' → logprob: -9.375089645385742
    3. '_cases' → logprob: -12.500089645385742
    4. 'case' → logprob: -14.750089645385742
    5. '_count' → logprob: -15.750089645385742
    6. 'counts' → logprob: -16.000089645385742
    7. '(' → logprob: -17.125089645385742
    8. '```' → logprob: -17.125089645385742
    9. '(_' → logprob: -17.500089645385742
    10. '
' → logprob: -18.000089645385742

Token 293: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0325924449716695e-05
    2. '(n' → logprob: -11.62501049041748
    3. ' (' → logprob: -14.00001049041748
    4. '(
' → logprob: -15.00001049041748
    5. 'odd' → logprob: -16.375009536743164
    6. '(
' → logprob: -17.625009536743164
    7. '()' → logprob: -17.750009536743164
    8. '(a' → logprob: -18.000009536743164
    9. '(e' → logprob: -18.250009536743164
    10. '((' → logprob: -18.375009536743164

Token 294: 'odd' (ID: 18303)
  Prédit: 'odd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.005234475247561932
    2. ' odd' → logprob: -5.255234241485596
    3. 'od' → logprob: -14.130234718322754
    4. 'even' → logprob: -17.755233764648438
    5. 'Odd' → logprob: -18.005233764648438
    6. 'old' → logprob: -18.505233764648438
    7. ' ' → logprob: -18.755233764648438
    8. '   ' → logprob: -19.005233764648438
    9. ')' → logprob: -19.130233764648438
    10. '
' → logprob: -19.505233764648438

Token 295: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -3.292907877039397e-06
    2. '_val' → logprob: -13.37500286102295
    3. 'vals' → logprob: -13.87500286102295
    4. '_' → logprob: -15.25000286102295
    5. ' _' → logprob: -15.50000286102295
    6. ')_' → logprob: -16.000003814697266
    7. '_v' → logprob: -17.000003814697266
    8. ',_' → logprob: -17.250003814697266
    9. ',' → logprob: -17.500003814697266
    10. '(vals' → logprob: -17.500003814697266

Token 296: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.463036435074173e-05
    2. ',
' → logprob: -11.125024795532227
    3. ' ,' → logprob: -11.750024795532227
    4. ',e' → logprob: -13.750024795532227
    5. ',

' → logprob: -15.125024795532227
    6. '   ' → logprob: -15.500024795532227
    7. '‌,' → logprob: -15.625024795532227
    8. ',\
' → logprob: -16.000024795532227
    9. 'even' → logprob: -16.875024795532227
    10. ')' → logprob: -17.000024795532227

Token 297: ' even' (ID: 1952)
  Prédit: ' even'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' even' → logprob: -0.38688844442367554
    2. 'even' → logprob: -1.1368885040283203
    3. ' ' → logprob: -11.88688850402832
    4. '_even' → logprob: -12.76188850402832
    5. '   ' → logprob: -13.38688850402832
    6. 'Even' → logprob: -13.51188850402832
    7. ')' → logprob: -14.01188850402832
    8. ' ' → logprob: -14.76188850402832
    9. '[' → logprob: -14.76188850402832
    10. '
' → logprob: -14.88688850402832

Token 298: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -0.0002491807099431753
    2. 'vals' → logprob: -9.125248908996582
    3. '_' → logprob: -10.125248908996582
    4. '_val' → logprob: -10.250248908996582
    5. ' _' → logprob: -10.750248908996582
    6. ')_' → logprob: -12.000248908996582
    7. '
' → logprob: -12.125248908996582
    8. '```' → logprob: -12.375248908996582
    9. '_v' → logprob: -12.750248908996582
    10. ',' → logprob: -12.875248908996582

Token 299: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00031270162435248494
    2. ')
' → logprob: -8.750312805175781
    3. '):' → logprob: -8.875312805175781
    4. '   ' → logprob: -11.625312805175781
    5. '):
' → logprob: -12.250312805175781
    6. ')return' → logprob: -15.875312805175781
    7. ' )' → logprob: -16.12531280517578
    8. ')

' → logprob: -16.50031280517578
    9. ':' → logprob: -16.75031280517578
    10. ')n' → logprob: -16.75031280517578

Token 300: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0032500813249498606
    2. '
' → logprob: -6.6282501220703125
    3. ' if' → logprob: -6.8782501220703125
    4. 'if' → logprob: -7.6282501220703125
    5. '    
' → logprob: -8.503250122070312
    6. '```' → logprob: -9.628250122070312
    7. '<|end|>' → logprob: -10.003250122070312
    8. ' ' → logprob: -10.878250122070312
    9. '  
' → logprob: -11.253250122070312
    10. ',' → logprob: -12.003250122070312

Token 301: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25514549016952515
    2. 'if' (adapté à ' if') → logprob: -1.50514554977417
    3. ' if' → logprob: -5.75514554977417
    4. 'return' → logprob: -10.255145072937012
    5. '    
' → logprob: -12.130145072937012
    6. ' ' → logprob: -14.005145072937012
    7. ' return' → logprob: -14.255145072937012
    8. '```' → logprob: -14.505145072937012
    9. 'If' → logprob: -14.505145072937012
    10. '
' → logprob: -14.630145072937012

Token 302: ' odd' (ID: 14210)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.00220687803812325
    2. ' odd' → logprob: -6.127206802368164
    3. '   ' → logprob: -11.002206802368164
    4. 'od' → logprob: -12.877206802368164
    5. 'even' → logprob: -13.877206802368164
    6. 'a' → logprob: -14.377206802368164
    7. ' ' → logprob: -14.877206802368164
    8. '  ' → logprob: -15.877206802368164
    9. 'old' → logprob: -16.252206802368164
    10. 'b' → logprob: -16.377206802368164

Token 303: '_key' (ID: 6724)
  Prédit: '_key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_key' → logprob: -3.8889261304575484e-06
    2. 'key' → logprob: -13.125003814697266
    3. '_val' → logprob: -13.750003814697266
    4. '_vals' → logprob: -15.375003814697266
    5. '
' → logprob: -16.125003814697266
    6. 'Key' → logprob: -16.375003814697266
    7. '_KEY' → logprob: -16.875003814697266
    8. '\' → logprob: -17.250003814697266
    9. '

' → logprob: -17.500003814697266
    10. 'a' → logprob: -17.500003814697266

Token 304: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.03833591192960739
    2. '==' → logprob: -3.2883358001708984
    3. ' !=' → logprob: -8.163335800170898
    4. ' ==' → logprob: -12.163335800170898
    5. '=' → logprob: -12.663335800170898
    6. ']!=' → logprob: -15.163335800170898
    7. '```' → logprob: -15.163335800170898
    8. ')!=' → logprob: -16.1633358001709
    9. '()!=' → logprob: -16.4133358001709
    10. '!==' → logprob: -16.4133358001709

Token 305: ' even' (ID: 1952)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.009757863357663155
    2. ' even' → logprob: -4.634757995605469
    3. 'odd' → logprob: -14.259757995605469
    4. ' ' → logprob: -14.259757995605469
    5. 'e' → logprob: -15.759757995605469
    6. '   ' → logprob: -15.884757995605469
    7. 'eve' → logprob: -16.63475799560547
    8. '  ' → logprob: -17.25975799560547
    9. 'ever' → logprob: -17.25975799560547
    10. 'evenodd' → logprob: -17.75975799560547

Token 306: '_key' (ID: 6724)
  Prédit: '_key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_key' → logprob: -3.531315314830863e-06
    2. 'key' → logprob: -12.625003814697266
    3. '
' → logprob: -17.250003814697266
    4. '```' → logprob: -17.875003814697266
    5. 'Key' → logprob: -18.000003814697266
    6. ' key' → logprob: -18.250003814697266
    7. '_KEY' → logprob: -19.125003814697266
    8. ' _' → logprob: -19.250003814697266
    9. '-key' → logprob: -19.375003814697266
    10. '_' → logprob: -19.375003814697266

Token 307: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00251145102083683
    2. ':
' → logprob: -6.127511501312256
    3. ' or' → logprob: -8.127511024475098
    4. ' :' → logprob: -11.127511024475098
    5. ':return' → logprob: -11.252511024475098
    6. '   ' → logprob: -13.252511024475098
    7. 'or' → logprob: -14.377511024475098
    8. '       ' → logprob: -14.877511024475098
    9. ' :
' → logprob: -14.877511024475098
    10. ':
' → logprob: -16.627511978149414

Token 308: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030257217586040497
    2. '
' → logprob: -6.503025531768799
    3. '   ' → logprob: -7.003025531768799
    4. 'print' → logprob: -7.628025531768799
    5. 'return' → logprob: -9.378026008605957
    6. ':
' → logprob: -11.253026008605957
    7. ' print' → logprob: -11.878026008605957
    8. '        
' → logprob: -12.003026008605957
    9. '```' → logprob: -12.753026008605957
    10. ':' → logprob: -12.878026008605957

Token 309: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.13462293148040771
    2. '       ' → logprob: -2.1346230506896973
    3. 'return' → logprob: -5.384623050689697
    4. '
' → logprob: -6.509623050689697
    5. '   ' → logprob: -6.759623050689697
    6. '           ' → logprob: -8.134622573852539
    7. ' print' → logprob: -9.759622573852539
    8. '        
' → logprob: -9.884622573852539
    9. 'result' → logprob: -11.259622573852539
    10. 'answer' → logprob: -12.509622573852539

Token 310: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.003739625681191683
    2. 'n' → logprob: -5.753739833831787
    3. '(' → logprob: -7.878739833831787
    4. '(a' → logprob: -8.753739356994629
    5. 'a' → logprob: -11.253739356994629
    6. '(min' → logprob: -12.878739356994629
    7. '0' → logprob: -13.003739356994629
    8. ' (' → logprob: -13.003739356994629
    9. '(max' → logprob: -13.378739356994629
    10. '((' → logprob: -13.503739356994629

Token 311: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002498609945178032
    2. ' -' → logprob: -6.627498626708984
    3. '-' → logprob: -7.002498626708984
    4. ' )' → logprob: -8.502498626708984
    5. ')
' → logprob: -11.002498626708984
    6. '   ' → logprob: -11.127498626708984
    7. '<|end|>' → logprob: -11.127498626708984
    8. ',' → logprob: -12.752498626708984
    9. '-)' → logprob: -13.002498626708984
    10. ' ' → logprob: -13.502498626708984

Token 312: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.12862616777420044
    2. '(a' → logprob: -2.1286261081695557
    3. ' (' → logprob: -7.128626346588135
    4. '(' → logprob: -7.628626346588135
    5. ' a' → logprob: -8.128625869750977
    6. 'max' → logprob: -9.378625869750977
    7. '(max' → logprob: -10.753625869750977
    8. ' ' → logprob: -13.503625869750977
    9. '(
' → logprob: -13.628625869750977
    10. ' max' → logprob: -13.628625869750977

Token 313: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2268437147140503
    2. '-' → logprob: -1.6018437147140503
    3. ')' → logprob: -6.60184383392334
    4. '   ' → logprob: -10.85184383392334
    5. ' )' → logprob: -11.10184383392334
    6. ' ' → logprob: -11.47684383392334
    7. ',' → logprob: -11.72684383392334
    8. '-a' → logprob: -12.22684383392334
    9. '-)' → logprob: -13.10184383392334
    10. '-b' → logprob: -13.47684383392334

Token 314: ' b' (ID: 287)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -9.627176768844947e-05
    2. ' c' → logprob: -9.250096321105957
    3. '   ' → logprob: -17.37509536743164
    4. '	c' → logprob: -17.75009536743164
    5. ')c' → logprob: -20.00009536743164
    6. '  ' → logprob: -20.12509536743164
    7. 'с' → logprob: -20.50009536743164
    8. '_c' → logprob: -21.12509536743164
    9. ' ' → logprob: -21.25009536743164
    10. '.c' → logprob: -22.00009536743164

Token 315: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029854850843548775
    2. ')
' → logprob: -3.5298547744750977
    3. ' )' → logprob: -9.529854774475098
    4. '   ' → logprob: -10.654854774475098
    5. ' )
' → logprob: -12.529854774475098
    6. ')
' → logprob: -13.029854774475098
    7. '+' → logprob: -14.904854774475098
    8. '*' → logprob: -15.029854774475098
    9. '))' → logprob: -15.279854774475098
    10. ')`
' → logprob: -15.404854774475098

Token 316: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06350880116224289
    2. 'else' → logprob: -2.8135087490081787
    3. ' else' → logprob: -6.563508987426758
    4. 'elif' → logprob: -9.688508987426758
    5. '       ' → logprob: -10.063508987426758
    6. 'def' → logprob: -11.063508987426758
    7. '	else' → logprob: -12.188508987426758
    8. ' elif' → logprob: -13.563508987426758
    9. '<|end|>' → logprob: -13.688508987426758
    10. '	elif' → logprob: -15.438508987426758

Token 317: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.01755461096763611
    2. '   ' → logprob: -4.392554759979248
    3. ' else' → logprob: -5.642554759979248
    4. 'elif' → logprob: -6.517554759979248
    5. ' elif' → logprob: -12.26755428314209
    6. '	else' → logprob: -12.39255428314209
    7. '       ' → logprob: -14.39255428314209
    8. '  ' → logprob: -14.89255428314209
    9. '	elif' → logprob: -15.01755428314209
    10. ' ' → logprob: -15.26755428314209

Token 318: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05494558811187744
    2. ':
' → logprob: -2.929945468902588
    3. '       ' → logprob: -9.929945945739746
    4. ',' → logprob: -12.179945945739746
    5. ':

' → logprob: -13.054945945739746
    6. ' :
' → logprob: -13.304945945739746
    7. '   ' → logprob: -13.429945945739746
    8. ':
' → logprob: -13.429945945739746
    9. ' :' → logprob: -13.804945945739746
    10. '):
' → logprob: -15.054945945739746

Token 319: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08723162859678268
    2. '   ' → logprob: -2.7122316360473633
    3. 'print' → logprob: -4.337231636047363
    4. ' print' → logprob: -5.712231636047363
    5. ' if' → logprob: -7.837231636047363
    6. 'if' → logprob: -8.212231636047363
    7. '    ' → logprob: -10.587231636047363
    8. '    
' → logprob: -11.087231636047363
    9. '        
' → logprob: -11.337231636047363
    10. '```' → logprob: -11.587231636047363

Token 320: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0003902775060851127
    2. '       ' → logprob: -8.87539005279541
    3. 'if' → logprob: -9.00039005279541
    4. '   ' → logprob: -9.37539005279541
    5. ' print' → logprob: -10.12539005279541
    6. '           ' → logprob: -13.37539005279541
    7. ' if' → logprob: -16.125391006469727
    8. '        
' → logprob: -16.500391006469727
    9. '	print' → logprob: -16.625391006469727
    10. '
' → logprob: -16.625391006469727

Token 321: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.10210469365119934
    2. '(min' → logprob: -2.352104663848877
    3. '(' → logprob: -7.102104663848877
    4. '(max' → logprob: -7.602104663848877
    5. 'n' → logprob: -7.727104663848877
    6. 'min' → logprob: -8.977105140686035
    7. '(
' → logprob: -12.602105140686035
    8. '(m' → logprob: -13.977105140686035
    9. 'max' → logprob: -14.352105140686035
    10. ' n' → logprob: -14.352105140686035

Token 322: ' //' (ID: 602)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.011079768650233746
    2. '-' → logprob: -4.511079788208008
    3. '   ' → logprob: -11.261079788208008
    4. ' ' → logprob: -11.261079788208008
    5. ')' → logprob: -12.386079788208008
    6. '  ' → logprob: -14.011079788208008
    7. ',' → logprob: -15.386079788208008
    8. '    ' → logprob: -15.386079788208008
    9. ' ' → logprob: -15.386079788208008
    10. ' -
' → logprob: -15.636079788208008

Token 323: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.008129963040119e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -15.000003814697266
    4. '
' → logprob: -15.625003814697266
    5. '

' → logprob: -16.375003814697266
    6. '```' → logprob: -16.625003814697266
    7. '  ' → logprob: -18.500003814697266
    8. '       ' → logprob: -18.500003814697266
    9. '1' → logprob: -19.125003814697266
    10. '
' → logprob: -19.250003814697266

Token 324: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.125
    3. '```' → logprob: -16.0
    4. '   ' → logprob: -17.5
    5. '
' → logprob: -17.625
    6. '

' → logprob: -18.375
    7. '``' → logprob: -19.0
    8. '//' → logprob: -19.375
    9. '1' → logprob: -19.75
    10. '       ' → logprob: -20.125

Token 325: ')

' (ID: 1029)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.011020119301974773
    2. '-' → logprob: -4.636020183563232
    3. ')' → logprob: -6.886020183563232
    4. ' ' → logprob: -9.386019706726074
    5. '   ' → logprob: -9.511019706726074
    6. '+' → logprob: -10.511019706726074
    7. ' +' → logprob: -10.886019706726074
    8. ',' → logprob: -11.011019706726074
    9. '  ' → logprob: -12.511019706726074
    10. ')
' → logprob: -12.511019706726074

Token 326: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00021402664424385875
    2. '
' → logprob: -8.625213623046875
    3. '<|end|>' → logprob: -10.625213623046875
    4. ' def' → logprob: -12.500213623046875
    5. '

' → logprob: -13.375213623046875
    6. '    
' → logprob: -13.875213623046875
    7. '```' → logprob: -14.125213623046875
    8. 'elif' → logprob: -14.250213623046875
    9. '  
' → logprob: -14.500213623046875
    10. '   ' → logprob: -14.750213623046875

Token 327: ' multi' (ID: 12151)
  Prédit: 'multi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multi' → logprob: -0.04273149371147156
    2. ' multi' → logprob: -3.292731523513794
    3. 'main' → logprob: -6.417731285095215
    4. 'multiple' → logprob: -6.542731285095215
    5. 'def' → logprob: -7.542731285095215
    6. 'single' → logprob: -7.792731285095215
    7. ' main' → logprob: -8.667731285095215
    8. ' multiple' → logprob: -9.167731285095215
    9. 'mult' → logprob: -9.417731285095215
    10. 'double' → logprob: -9.542731285095215

Token 328: '_case' (ID: 43667)
  Prédit: '_case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_case' → logprob: -3.702754474943504e-05
    2. 'case' → logprob: -10.62503719329834
    3. '_line' → logprob: -12.25003719329834
    4. ' _' → logprob: -12.87503719329834
    5. '_cases' → logprob: -13.62503719329834
    6. '_' → logprob: -13.87503719329834
    7. 'def' → logprob: -14.50003719329834
    8. '_process' → logprob: -14.87503719329834
    9. 'ple' → logprob: -14.87503719329834
    10. '_task' → logprob: -15.12503719329834

Token 329: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00044163595885038376
    2. '(' → logprob: -7.750441551208496
    3. ' (' → logprob: -11.500441551208496
    4. '(
' → logprob: -15.125441551208496
    5. 'n' → logprob: -16.625442504882812
    6. '(def' → logprob: -16.625442504882812
    7. 'def' → logprob: -16.750442504882812
    8. '(N' → logprob: -17.000442504882812
    9. '():' → logprob: -17.250442504882812
    10. ':' → logprob: -17.250442504882812

Token 330: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3663626305060461e-05
    2. ' ,' → logprob: -11.37501335144043
    3. ',
' → logprob: -13.12501335144043
    4. '‌,' → logprob: -17.50001335144043
    5. ',n' → logprob: -18.12501335144043
    6. ',

' → logprob: -18.37501335144043
    7. '   ' → logprob: -18.37501335144043
    8. '_,' → logprob: -18.75001335144043
    9. ',
' → logprob: -18.75001335144043
    10. '،' → logprob: -19.00001335144043

Token 331: ' odd' (ID: 14210)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.049050457775592804
    2. ' odd' → logprob: -3.0490505695343018
    3. 'a' → logprob: -8.674050331115723
    4. '   ' → logprob: -9.299050331115723
    5. 'od' → logprob: -9.424050331115723
    6. ' ' → logprob: -10.049050331115723
    7. ' a' → logprob: -10.799050331115723
    8. '  ' → logprob: -11.799050331115723
    9. 'old' → logprob: -11.924050331115723
    10. '    ' → logprob: -12.424050331115723

Token 332: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -0.00019889144459739327
    2. ',' → logprob: -9.375199317932129
    3. ' _' → logprob: -10.875199317932129
    4. '_' → logprob: -10.875199317932129
    5. 'vals' → logprob: -11.000199317932129
    6. ',_' → logprob: -11.125199317932129
    7. '_val' → logprob: -12.125199317932129
    8. '_,' → logprob: -12.125199317932129
    9. '_v' → logprob: -12.250199317932129
    10. ')_' → logprob: -12.375199317932129

Token 333: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020985817536711693
    2. ' ,' → logprob: -8.62520980834961
    3. ',
' → logprob: -10.50020980834961
    4. ',

' → logprob: -14.12520980834961
    5. ',
' → logprob: -14.87520980834961
    6. '[' → logprob: -15.00020980834961
    7. ',m' → logprob: -15.37520980834961
    8. '   ' → logprob: -15.50020980834961
    9. ')' → logprob: -16.00020980834961
    10. ',e' → logprob: -16.00020980834961

Token 334: ' even' (ID: 1952)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.03804585337638855
    2. ' even' → logprob: -3.288045883178711
    3. '   ' → logprob: -13.288045883178711
    4. ' ' → logprob: -14.038045883178711
    5. 'odd' → logprob: -14.788045883178711
    6. 'def' → logprob: -15.413045883178711
    7. 'Even' → logprob: -15.663045883178711
    8. 'e' → logprob: -15.913045883178711
    9. '_even' → logprob: -15.913045883178711
    10. ')' → logprob: -16.41304588317871

Token 335: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -0.0004055282333865762
    2. 'vals' → logprob: -8.375405311584473
    3. ',' → logprob: -9.000405311584473
    4. ',_' → logprob: -10.500405311584473
    5. '_,' → logprob: -12.750405311584473
    6. 's' → logprob: -12.750405311584473
    7. ' _' → logprob: -12.875405311584473
    8. 'v' → logprob: -13.250405311584473
    9. '```' → logprob: -13.250405311584473
    10. '_v' → logprob: -13.375405311584473

Token 336: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16034507751464844
    2. '):
' → logprob: -1.9103450775146484
    3. ',' → logprob: -9.410345077514648
    4. '   ' → logprob: -11.035345077514648
    5. '):
' → logprob: -11.535345077514648
    6. ':' → logprob: -12.035345077514648
    7. '):

' → logprob: -12.785345077514648
    8. ')' → logprob: -12.910345077514648
    9. ' ):' → logprob: -14.035345077514648
    10. 'def' → logprob: -14.785345077514648

Token 337: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3869461715221405
    2. '   ' → logprob: -1.136946201324463
    3. ' a' → logprob: -9.636945724487305
    4. '	a' → logprob: -12.261945724487305
    5. ' ' → logprob: -14.011945724487305
    6. 'def' → logprob: -14.136945724487305
    7. 'import' → logprob: -14.386945724487305
    8. '_a' → logprob: -14.636945724487305
    9. '    
' → logprob: -15.011945724487305
    10. '       ' → logprob: -15.136945724487305

Token 338: ' if' (ID: 538)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00031258241506293416
    2. '   ' → logprob: -8.125312805175781
    3. ' a' → logprob: -12.500312805175781
    4. 'import' → logprob: -12.875312805175781
    5. 'from' → logprob: -13.500312805175781
    6. 'best' → logprob: -13.500312805175781
    7. '#' → logprob: -13.625312805175781
    8. 'def' → logprob: -14.125312805175781
    9. 'if' (adapté à ' if') → logprob: -14.250312805175781
    10. '    
' → logprob: -14.500312805175781

Token 339: ' odd' (ID: 14210)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.0009538597078062594
    2. ' odd' → logprob: -7.250953674316406
    3. 'even' → logprob: -8.625953674316406
    4. 'get' → logprob: -10.000953674316406
    5. 'od' → logprob: -12.125953674316406
    6. '(' → logprob: -12.125953674316406
    7. 'len' → logprob: -13.250953674316406
    8. 'a' → logprob: -13.375953674316406
    9. 'n' → logprob: -14.000953674316406
    10. '   ' → logprob: -14.125953674316406

Token 340: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -0.00012713817704934627
    2. '[' → logprob: -9.250126838684082
    3. 'vals' → logprob: -11.000126838684082
    4. '_val' → logprob: -11.750126838684082
    5. '
' → logprob: -13.625126838684082
    6. 'Vals' → logprob: -14.625126838684082
    7. '_len' → logprob: -14.750126838684082
    8. '(vals' → logprob: -14.750126838684082
    9. '

' → logprob: -14.875126838684082
    10. '   ' → logprob: -15.125126838684082

Token 341: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00015085970517247915
    2. '   ' → logprob: -9.875150680541992
    3. '0' → logprob: -10.750150680541992
    4. ' ' → logprob: -10.875150680541992
    5. '```' → logprob: -11.000150680541992
    6. ' [' → logprob: -11.750150680541992
    7. ' and' → logprob: -11.875150680541992
    8. 'and' → logprob: -12.250150680541992
    9. '==' → logprob: -12.875150680541992
    10. '][' → logprob: -13.000150680541992

Token 342: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003320426447317004
    2. '1' → logprob: -6.128320217132568
    3. '[' → logprob: -7.003320217132568
    4. ' ' → logprob: -9.253320693969727
    5. '][' → logprob: -9.503320693969727
    6. ']' → logprob: -11.128320693969727
    7. '
' → logprob: -11.503320693969727
    8. '   ' → logprob: -11.878320693969727
    9. '```' → logprob: -12.815820693969727
    10. '(' → logprob: -13.253320693969727

Token 343: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0019784762989729643
    2. '[' → logprob: -6.251978397369385
    3. ' ][' → logprob: -10.501978874206543
    4. ']' → logprob: -11.876978874206543
    5. '
' → logprob: -12.001978874206543
    6. '0' → logprob: -12.751978874206543
    7. '   ' → logprob: -13.751978874206543
    8. ']][' → logprob: -14.251978874206543
    9. ']==' → logprob: -14.376978874206543
    10. 'a' → logprob: -14.751978874206543

Token 344: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00037251986213959754
    2. '0' → logprob: -8.000372886657715
    3. '
' → logprob: -10.250372886657715
    4. '   ' → logprob: -15.250372886657715
    5. '

' → logprob: -15.312872886657715
    6. ' ' → logprob: -15.562872886657715
    7. ']' → logprob: -15.937872886657715
    8. '][' → logprob: -15.937872886657715
    9. '
' → logprob: -16.0003719329834
    10. '```' → logprob: -16.2503719329834

Token 345: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7405797839164734
    2. '!=' → logprob: -0.9905797839164734
    3. ' !=' → logprob: -1.9905798435211182
    4. ']!=' → logprob: -4.365579605102539
    5. '==' → logprob: -6.490579605102539
    6. ' ' → logprob: -8.365579605102539
    7. ' ]' → logprob: -8.615579605102539
    8. ']==' → logprob: -8.740579605102539
    9. ')' → logprob: -9.365579605102539
    10. '```' → logprob: -9.490579605102539

Token 346: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.35266193747520447
    2. ' !=' → logprob: -1.2276619672775269
    3. '==' → logprob: -5.602662086486816
    4. ' ==' → logprob: -8.227662086486816
    5. '[' → logprob: -9.227662086486816
    6. ' ' → logprob: -9.852662086486816
    7. ']!=' → logprob: -10.227662086486816
    8. ')' → logprob: -11.102662086486816
    9. ')!=' → logprob: -11.102662086486816
    10. ']' → logprob: -11.602662086486816

Token 347: ' even' (ID: 1952)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.005235291086137295
    2. ' even' → logprob: -5.255235195159912
    3. '   ' → logprob: -13.88023567199707
    4. ' ' → logprob: -15.38023567199707
    5. '  ' → logprob: -15.38023567199707
    6. 'e' → logprob: -17.38023567199707
    7. '
' → logprob: -17.50523567199707
    8. 'odd' → logprob: -17.75523567199707
    9. '           ' → logprob: -18.13023567199707
    10. 'eve' → logprob: -18.25523567199707

Token 348: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -3.547789674485102e-05
    2. 'vals' → logprob: -11.500035285949707
    3. '[' → logprob: -11.625035285949707
    4. '_val' → logprob: -12.125035285949707
    5. '[_' → logprob: -12.500035285949707
    6. '```' → logprob: -12.500035285949707
    7. ' _' → logprob: -14.375035285949707
    8. 'Vals' → logprob: -14.875035285949707
    9. ''_' → logprob: -15.125035285949707
    10. ')_' → logprob: -15.250035285949707

Token 349: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00020067949662916362
    2. '0' → logprob: -8.875200271606445
    3. '][' → logprob: -10.375200271606445
    4. '```' → logprob: -11.250200271606445
    5. '   ' → logprob: -11.500200271606445
    6. ' [' → logprob: -13.500200271606445
    7. ' ' → logprob: -14.000200271606445
    8. '
' → logprob: -14.375200271606445
    9. '(' → logprob: -14.375200271606445
    10. '1' → logprob: -14.500200271606445

Token 350: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.468279752880335e-05
    2. '[' → logprob: -9.875064849853516
    3. ' ' → logprob: -11.500064849853516
    4. '   ' → logprob: -13.250064849853516
    5. '(' → logprob: -15.125064849853516
    6. '```' → logprob: -15.625064849853516
    7. '][' → logprob: -15.750064849853516
    8. '
' → logprob: -15.875064849853516
    9. '1' → logprob: -16.000064849853516
    10. '       ' → logprob: -16.250064849853516

Token 351: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.002889632945880294
    2. '[' → logprob: -5.877889633178711
    3. ']' → logprob: -10.377889633178711
    4. '   ' → logprob: -10.752889633178711
    5. ' ][' → logprob: -10.752889633178711
    6. ''][' → logprob: -12.752889633178711
    7. ' [' → logprob: -13.627889633178711
    8. ']][' → logprob: -13.877889633178711
    9. '>[' → logprob: -13.877889633178711
    10. ' ' → logprob: -14.002889633178711

Token 352: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011725161311915144
    2. '[' → logprob: -9.625117301940918
    3. '][' → logprob: -10.875117301940918
    4. '
' → logprob: -11.250117301940918
    5. ' ' → logprob: -12.000117301940918
    6. '0' → logprob: -12.875117301940918
    7. ']' → logprob: -12.875117301940918
    8. '   ' → logprob: -13.062617301940918
    9. '```' → logprob: -13.500117301940918
    10. '
' → logprob: -14.062617301940918

Token 353: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07458345592021942
    2. '):' → logprob: -3.1995835304260254
    3. ':
' → logprob: -3.6995835304260254
    4. '):
' → logprob: -5.074583530426025
    5. '   ' → logprob: -10.199583053588867
    6. ' and' → logprob: -11.324583053588867
    7. '():
' → logprob: -11.574583053588867
    8. ')' → logprob: -11.699583053588867
    9. ',' → logprob: -11.824583053588867
    10. ']:' → logprob: -12.074583053588867

Token 354: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005922635551542044
    2. ':' → logprob: -5.380922794342041
    3. ':
' → logprob: -7.255922794342041
    4. '
' → logprob: -8.630922317504883
    5. '):
' → logprob: -9.005922317504883
    6. 'a' → logprob: -9.755922317504883
    7. '):' → logprob: -10.130922317504883
    8. '   ' → logprob: -10.380922317504883
    9. ' a' → logprob: -10.380922317504883
    10. ',' → logprob: -10.505922317504883

Token 355: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.5825977325439453
    2. '       ' → logprob: -0.9575977325439453
    3. 'a' → logprob: -2.9575977325439453
    4. '   ' → logprob: -5.707597732543945
    5. 'n' → logprob: -6.457597732543945
    6. ' print' → logprob: -7.457597732543945
    7. '           ' → logprob: -8.457597732543945
    8. ' a' → logprob: -9.582597732543945
    9. ' n' → logprob: -11.582597732543945
    10. '
' → logprob: -12.082597732543945

Token 356: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.20143447816371918
    2. '(n' → logprob: -1.7014344930648804
    3. ' n' → logprob: -11.451434135437012
    4. '(' → logprob: -11.951434135437012
    5. '   ' → logprob: -12.576434135437012
    6. '	n' → logprob: -14.576434135437012
    7. '(
' → logprob: -16.451435089111328
    8. '_n' → logprob: -17.201435089111328
    9. ' (' → logprob: -17.326435089111328
    10. '  ' → logprob: -17.451435089111328

Token 357: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0013551177689805627
    2. '-' → logprob: -6.626355171203613
    3. ' ' → logprob: -11.126355171203613
    4. ')' → logprob: -11.751355171203613
    5. ' ' → logprob: -12.251355171203613
    6. '   ' → logprob: -13.876355171203613
    7. '    ' → logprob: -15.751355171203613
    8. ',' → logprob: -15.876355171203613
    9. '  ' → logprob: -15.876355171203613
    10. ' )' → logprob: -16.376354217529297

Token 358: ' odd' (ID: 14210)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.01383883785456419
    2. '(' → logprob: -4.513838768005371
    3. ' odd' → logprob: -6.013838768005371
    4. 'od' → logprob: -8.638838768005371
    5. ' (' → logprob: -8.888838768005371
    6. 'get' → logprob: -12.013838768005371
    7. '   ' → logprob: -12.638838768005371
    8. 'old' → logprob: -12.888838768005371
    9. ' ' → logprob: -12.888838768005371
    10. '  ' → logprob: -13.638838768005371

Token 359: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -0.0001640876434976235
    2. 'vals' → logprob: -9.125164031982422
    3. '[' → logprob: -9.875164031982422
    4. 'Vals' → logprob: -13.000164031982422
    5. '```' → logprob: -15.000164031982422
    6. '_attrs' → logprob: -15.625164031982422
    7. ' vals' → logprob: -15.875164031982422
    8. 's' → logprob: -15.875164031982422
    9. '_val' → logprob: -15.875164031982422
    10. '[_' → logprob: -16.500164031982422

Token 360: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.951771421066951e-05
    2. '0' → logprob: -10.750029563903809
    3. '][' → logprob: -12.875029563903809
    4. '   ' → logprob: -13.125029563903809
    5. '```' → logprob: -13.750029563903809
    6. ' [' → logprob: -13.875029563903809
    7. ' ' → logprob: -14.750029563903809
    8. '
' → logprob: -15.125029563903809
    9. '1' → logprob: -15.250029563903809
    10. '  ' → logprob: -16.000028610229492

Token 361: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011818927014246583
    2. '[' → logprob: -6.7511820793151855
    3. ' ' → logprob: -11.626181602478027
    4. '][' → logprob: -14.126181602478027
    5. '   ' → logprob: -14.501181602478027
    6. '
' → logprob: -14.876181602478027
    7. '```' → logprob: -15.751181602478027
    8. '00' → logprob: -15.751181602478027
    9. '(' → logprob: -15.876181602478027
    10. '1' → logprob: -16.376182556152344

Token 362: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.007670625578612089
    2. '[' → logprob: -4.8826704025268555
    3. ' ][' → logprob: -10.507670402526855
    4. ']' → logprob: -11.132670402526855
    5. '0' → logprob: -11.382670402526855
    6. '   ' → logprob: -12.757670402526855
    7. ''][' → logprob: -13.632670402526855
    8. ' [' → logprob: -14.257670402526855
    9. '}[' → logprob: -14.382670402526855
    10. '>[' → logprob: -14.507670402526855

Token 363: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014597235713154078
    2. '[' → logprob: -9.25014591217041
    3. ' ' → logprob: -10.50014591217041
    4. '
' → logprob: -11.25014591217041
    5. '   ' → logprob: -13.00014591217041
    6. '][' → logprob: -13.00014591217041
    7. '1' → logprob: -13.12514591217041
    8. ' [' → logprob: -14.68764591217041
    9. '    ' → logprob: -15.12514591217041
    10. '

' → logprob: -15.25014591217041

Token 364: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.014208992011845112
    2. '-' → logprob: -4.264208793640137
    3. ' ' → logprob: -10.139208793640137
    4. '[' → logprob: -12.514208793640137
    5. ')' → logprob: -13.764208793640137
    6. ' ' → logprob: -15.264208793640137
    7. ']' → logprob: -15.389208793640137
    8. ',' → logprob: -15.389208793640137
    9. '   ' → logprob: -16.139209747314453
    10. '  ' → logprob: -16.264209747314453

Token 365: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3868783116340637
    2. '-' → logprob: -1.136878252029419
    3. ' ' → logprob: -12.26187801361084
    4. '[' → logprob: -13.88687801361084
    5. '   ' → logprob: -14.76187801361084
    6. ',' → logprob: -15.38687801361084
    7. ')' → logprob: -15.63687801361084
    8. '  ' → logprob: -15.63687801361084
    9. ' ' → logprob: -15.76187801361084
    10. '```' → logprob: -16.136878967285156

Token 366: ' even' (ID: 1952)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.03808911517262459
    2. ' even' → logprob: -3.2880890369415283
    3. 'odd' → logprob: -10.53808879852295
    4. '   ' → logprob: -11.53808879852295
    5. ' odd' → logprob: -11.78808879852295
    6. ' ' → logprob: -13.66308879852295
    7. '           ' → logprob: -14.28808879852295
    8. '  ' → logprob: -14.91308879852295
    9. 'evenodd' → logprob: -15.16308879852295
    10. '
' → logprob: -15.41308879852295

Token 367: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -0.00026097820955328643
    2. 'vals' → logprob: -8.750261306762695
    3. '[' → logprob: -9.250261306762695
    4. 's' → logprob: -13.625261306762695
    5. '```' → logprob: -14.000261306762695
    6. '_val' → logprob: -14.375261306762695
    7. 'Vals' → logprob: -14.375261306762695
    8. 'v' → logprob: -14.750261306762695
    9. '[_' → logprob: -15.000261306762695
    10. ')' → logprob: -15.000261306762695

Token 368: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00010366239439463243
    2. '0' → logprob: -9.250103950500488
    3. '(' → logprob: -13.125103950500488
    4. ' [' → logprob: -13.125103950500488
    5. '][' → logprob: -13.625103950500488
    6. '   ' → logprob: -14.375103950500488
    7. '[
' → logprob: -14.625103950500488
    8. '```' → logprob: -15.000103950500488
    9. '()[' → logprob: -15.250103950500488
    10. 'def' → logprob: -15.375103950500488

Token 369: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.531315314830863e-06
    2. '[' → logprob: -13.000003814697266
    3. ' ' → logprob: -13.750003814697266
    4. '   ' → logprob: -16.875003814697266
    5. '  ' → logprob: -19.125003814697266
    6. '
' → logprob: -19.125003814697266
    7. '```' → logprob: -19.125003814697266
    8. '(' → logprob: -19.500003814697266
    9. '][' → logprob: -19.625003814697266
    10. ']' → logprob: -19.875003814697266

Token 370: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2837471663951874
    2. '][' → logprob: -1.4087471961975098
    3. '0' → logprob: -6.03374719619751
    4. ' [' → logprob: -9.783746719360352
    5. '   ' → logprob: -10.408746719360352
    6. ' ][' → logprob: -10.783746719360352
    7. '1' → logprob: -11.033746719360352
    8. ']' → logprob: -11.033746719360352
    9. '```' → logprob: -11.408746719360352
    10. ''][' → logprob: -11.533746719360352

Token 371: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.080963092041202e-06
    2. '[' → logprob: -12.625004768371582
    3. ' ' → logprob: -13.625004768371582
    4. '][' → logprob: -15.375004768371582
    5. '1' → logprob: -16.3750057220459
    6. '   ' → logprob: -16.6250057220459
    7. '
' → logprob: -17.1250057220459
    8. '```' → logprob: -17.6250057220459
    9. ']' → logprob: -18.0000057220459
    10. '  ' → logprob: -18.7500057220459

Token 372: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008645294234156609
    2. ')
' → logprob: -4.758645057678223
    3. '   ' → logprob: -10.633645057678223
    4. ')
' → logprob: -12.633645057678223
    5. ' )' → logprob: -13.008645057678223
    6. '))' → logprob: -15.133645057678223
    7. ')`
' → logprob: -15.508645057678223
    8. '       ' → logprob: -15.758645057678223
    9. ')`' → logprob: -15.883645057678223
    10. ')

' → logprob: -15.883645057678223

Token 373: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003783808322623372
    2. 'else' → logprob: -5.628783702850342
    3. '       ' → logprob: -8.7537841796875
    4. ' else' → logprob: -10.6287841796875
    5. 'elif' → logprob: -13.6287841796875
    6. '```' → logprob: -15.6287841796875
    7. '	else' → logprob: -16.2537841796875
    8. ' ' → logprob: -16.7537841796875
    9. '  ' → logprob: -17.6287841796875
    10. ' elif' → logprob: -17.7537841796875

Token 374: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5825368762016296
    2. 'else' (adapté à ' else') → logprob: -0.8325368762016296
    3. ' else' → logprob: -5.082536697387695
    4. 'elif' → logprob: -7.957536697387695
    5. ' elif' → logprob: -11.832536697387695
    6. '       ' → logprob: -12.082536697387695
    7. '	else' → logprob: -12.832536697387695
    8. ' ' → logprob: -13.707536697387695
    9. '    
' → logprob: -13.957536697387695
    10. '
' → logprob: -14.332536697387695

Token 375: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16626183688640594
    2. ':
' → logprob: -1.9162617921829224
    3. '       ' → logprob: -5.166261672973633
    4. '<|end|>' → logprob: -8.791261672973633
    5. ',' → logprob: -9.791261672973633
    6. '   ' → logprob: -11.166261672973633
    7. '):
' → logprob: -11.166261672973633
    8. ':

' → logprob: -11.291261672973633
    9. '{' → logprob: -11.291261672973633
    10. ',
' → logprob: -11.791261672973633

Token 376: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00031699295504949987
    2. 'print' → logprob: -8.750316619873047
    3. '   ' → logprob: -9.375316619873047
    4. ' print' → logprob: -10.250316619873047
    5. '           ' → logprob: -11.000316619873047
    6. 'a' → logprob: -12.125316619873047
    7. '```' → logprob: -12.500316619873047
    8. 'n' → logprob: -13.000316619873047
    9. '
' → logprob: -13.125316619873047
    10. ' a' → logprob: -13.375316619873047

Token 377: ' a' (ID: 261)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0006102138431742787
    2. '       ' → logprob: -7.6256103515625
    3. '           ' → logprob: -10.5006103515625
    4. 'res' → logprob: -11.0006103515625
    5. 'ans' → logprob: -11.0006103515625
    6. 'min' → logprob: -11.5006103515625
    7. 'option' → logprob: -11.6256103515625
    8. ' print' → logprob: -11.6256103515625
    9. 'c' → logprob: -12.3756103515625
    10. '   ' → logprob: -12.3756103515625

Token 378: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4211803376674652
    2. '=' → logprob: -1.2961803674697876
    3. ' =' → logprob: -2.671180248260498
    4. ',b' → logprob: -8.296180725097656
    5. ' ,' → logprob: -8.296180725097656
    6. 'b' → logprob: -8.671180725097656
    7. 'a' → logprob: -9.046180725097656
    8. ',a' → logprob: -9.671180725097656
    9. '   ' → logprob: -10.796180725097656
    10. 'n' → logprob: -10.921180725097656

Token 379: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0015439033741131425
    2. 'a' → logprob: -7.501543998718262
    3. 'c' → logprob: -7.501543998718262
    4. ' b' → logprob: -7.751543998718262
    5. 'd' → logprob: -13.001543998718262
    6. ' c' → logprob: -13.126543998718262
    7. '   ' → logprob: -14.126543998718262
    8. 'get' → logprob: -14.251543998718262
    9. ' a' → logprob: -14.376543998718262
    10. ' ' → logprob: -14.876543998718262

Token 380: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.025124503299593925
    2. '=' → logprob: -3.7751245498657227
    3. ' =' → logprob: -6.650124549865723
    4. 'c' → logprob: -7.900124549865723
    5. ',c' → logprob: -8.775124549865723
    6. ' ,' → logprob: -9.900124549865723
    7. '_,' → logprob: -13.525124549865723
    8. 'a' → logprob: -13.900124549865723
    9. ' c' → logprob: -14.025124549865723
    10. '   ' → logprob: -14.150124549865723

Token 381: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00012999906903132796
    2. ' c' → logprob: -9.000129699707031
    3. 'a' → logprob: -13.125129699707031
    4. '   ' → logprob: -13.375129699707031
    5. '
' → logprob: -13.500129699707031
    6. '	c' → logprob: -15.375129699707031
    7. 'b' → logprob: -15.750129699707031
    8. '  ' → logprob: -15.875129699707031
    9. ' ' → logprob: -15.875129699707031
    10. 'd' → logprob: -16.00012969970703

Token 382: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0034408881328999996
    2. '=' → logprob: -6.003440856933594
    3. ',d' → logprob: -7.378440856933594
    4. ' =' → logprob: -8.628440856933594
    5. 'd' → logprob: -8.878440856933594
    6. ' ,' → logprob: -11.003440856933594
    7. '_,' → logprob: -13.378440856933594
    8. '=d' → logprob: -13.753440856933594
    9. '   ' → logprob: -14.378440856933594
    10. ',_' → logprob: -14.878440856933594

Token 383: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00014370749704539776
    2. ' d' → logprob: -9.500144004821777
    3. '=' → logprob: -10.125144004821777
    4. ' =' → logprob: -10.750144004821777
    5. ',' → logprob: -13.625144004821777
    6. '_' → logprob: -13.875144004821777
    7. '
' → logprob: -13.875144004821777
    8. 'rest' → logprob: -14.000144004821777
    9. '_,' → logprob: -14.250144004821777
    10. '_d' → logprob: -14.375144004821777

Token 384: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759620070457458
    2. '=' → logprob: -0.8259620070457458
    3. '       ' → logprob: -11.95096206665039
    4. '        ' → logprob: -12.32596206665039
    5. ' ' → logprob: -12.70096206665039
    6. '   ' → logprob: -12.82596206665039
    7. ',' → logprob: -12.82596206665039
    8. '=n' → logprob: -13.57596206665039
    9. '    ' → logprob: -13.95096206665039
    10. '  ' → logprob: -15.32596206665039

Token 385: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.03943829610943794
    2. ' get' → logprob: -3.789438247680664
    3. 'odd' → logprob: -4.164438247680664
    4. ' odd' → logprob: -8.164438247680664
    5. 'multi' → logprob: -8.664438247680664
    6. 'even' → logprob: -10.664438247680664
    7. ' multi' → logprob: -12.039438247680664
    8. '   ' → logprob: -12.164438247680664
    9. 'sort' → logprob: -12.164438247680664
    10. ' ' → logprob: -12.289438247680664

Token 386: '_multi' (ID: 81207)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.11472402513027191
    2. 'multi' → logprob: -2.2397239208221436
    3. '_multi' → logprob: -6.489724159240723
    4. ' odd' → logprob: -8.489724159240723
    5. 'single' → logprob: -9.989724159240723
    6. ' multi' → logprob: -10.364724159240723
    7. '_' → logprob: -10.614724159240723
    8. 'od' → logprob: -10.864724159240723
    9. '_vals' → logprob: -10.864724159240723
    10. '(' → logprob: -11.739724159240723

Token 387: '_case' (ID: 43667)
  Prédit: '_case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_case' → logprob: -1.0087516784551553e-05
    2. 'case' → logprob: -11.62501049041748
    3. '_counts' → logprob: -14.37501049041748
    4. '_count' → logprob: -15.75001049041748
    5. '_vals' → logprob: -15.75001049041748
    6. 'Case' → logprob: -17.375009536743164
    7. ' case' → logprob: -17.500009536743164
    8. 'vals' → logprob: -17.500009536743164
    9. '_cases' → logprob: -17.875009536743164
    10. '_val' → logprob: -18.250009536743164

Token 388: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -3.5597102396423e-05
    2. 'counts' → logprob: -10.250035285949707
    3. '(' → logprob: -16.375036239624023
    4. 'Counts' → logprob: -16.750036239624023
    5. 's' → logprob: -18.250036239624023
    6. '[' → logprob: -18.375036239624023
    7. ' counts' → logprob: -18.750036239624023
    8. '_values' → logprob: -19.875036239624023
    9. '
' → logprob: -20.125036239624023
    10. 'count' → logprob: -20.250036239624023

Token 389: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.650518920039758e-06
    2. '   ' → logprob: -13.625003814697266
    3. ' (' → logprob: -14.000003814697266
    4. '[' → logprob: -14.375003814697266
    5. '       ' → logprob: -14.500003814697266
    6. '(
' → logprob: -16.125003814697266
    7. '           ' → logprob: -16.625003814697266
    8. 'odd' → logprob: -16.625003814697266
    9. '```' → logprob: -16.750003814697266
    10. '((' → logprob: -17.375003814697266

Token 390: 'odd' (ID: 18303)
  Prédit: 'odd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -6.0629870858974755e-05
    2. ' odd' → logprob: -9.75006103515625
    3. 'od' → logprob: -13.50006103515625
    4. 'even' → logprob: -14.12506103515625
    5. '
' → logprob: -16.62506103515625
    6. 'old' → logprob: -17.75006103515625
    7. '   ' → logprob: -18.75006103515625
    8. ')' → logprob: -19.37506103515625
    9. 'Odd' → logprob: -19.37506103515625
    10. ' ' → logprob: -19.50006103515625

Token 391: '_vals' (ID: 71688)
  Prédit: 'vals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.6932578086853027
    2. '_vals' → logprob: -0.6932578086853027
    3. 'v' → logprob: -10.193258285522461
    4. '[' → logprob: -10.193258285522461
    5. 'Vals' → logprob: -11.818258285522461
    6. '```' → logprob: -11.943258285522461
    7. '
' → logprob: -12.568258285522461
    8. '(vals' → logprob: -12.818258285522461
    9. ' vals' → logprob: -12.943258285522461
    10. 'val' → logprob: -13.068258285522461

Token 392: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001721934968372807
    2. ' ,' → logprob: -8.75017261505127
    3. '[' → logprob: -11.87517261505127
    4. ',
' → logprob: -13.00017261505127
    5. '   ' → logprob: -13.50017261505127
    6. ',e' → logprob: -13.50017261505127
    7. 'even' → logprob: -14.50017261505127
    8. ')' → logprob: -15.25017261505127
    9. ' even' → logprob: -16.000171661376953
    10. ',c' → logprob: -16.125171661376953

Token 393: ' even' (ID: 1952)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.001929228543303907
    2. ' even' → logprob: -6.25192928314209
    3. '   ' → logprob: -15.75192928314209
    4. ' ' → logprob: -15.87692928314209
    5. 'ever' → logprob: -17.126928329467773
    6. '           ' → logprob: -17.376928329467773
    7. 'odd' → logprob: -17.376928329467773
    8. '          ' → logprob: -17.626928329467773
    9. '  ' → logprob: -17.751928329467773
    10. 'e' → logprob: -17.876928329467773

Token 394: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -0.055660150945186615
    2. 'vals' → logprob: -2.9306602478027344
    3. '[' → logprob: -8.180660247802734
    4. '0' → logprob: -9.055660247802734
    5. '```' → logprob: -9.805660247802734
    6. ',' → logprob: -9.930660247802734
    7. '       ' → logprob: -10.055660247802734
    8. '1' → logprob: -10.180660247802734
    9. 'Vals' → logprob: -10.305660247802734
    10. '[-' → logprob: -10.805660247802734

Token 395: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.16057038307189941
    2. ')' → logprob: -1.9105703830718994
    3. '   ' → logprob: -8.03557014465332
    4. ')
' → logprob: -11.16057014465332
    5. '):
' → logprob: -13.16057014465332
    6. ')

' → logprob: -13.41057014465332
    7. '       ' → logprob: -13.78557014465332
    8. '
' → logprob: -14.41057014465332
    9. ')\' → logprob: -14.78557014465332
    10. ')`
' → logprob: -15.28557014465332

Token 396: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00031651611789129674
    2. '
' → logprob: -8.375316619873047
    3. '   ' → logprob: -10.125316619873047
    4. '           ' → logprob: -11.250316619873047
    5. '        
' → logprob: -11.625316619873047
    6. '```' → logprob: -11.750316619873047
    7. 'print' → logprob: -11.875316619873047
    8. '<|end|>' → logprob: -13.250316619873047
    9. 'n' → logprob: -14.125316619873047
    10. 'import' → logprob: -14.125316619873047

Token 397: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.07924214750528336
    2. '       ' → logprob: -2.57924222946167
    3. ' print' → logprob: -8.579241752624512
    4. '   ' → logprob: -9.079241752624512
    5. '           ' → logprob: -10.954241752624512
    6. 'if' → logprob: -11.079241752624512
    7. '```' → logprob: -11.454241752624512
    8. 'result' → logprob: -12.704241752624512
    9. '	print' → logprob: -13.204241752624512
    10. '
' → logprob: -15.079241752624512

Token 398: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.06338191777467728
    2. '(n' → logprob: -2.8133819103240967
    3. '(' → logprob: -7.063382148742676
    4. 'min' → logprob: -7.688382148742676
    5. '(
' → logprob: -9.313382148742676
    6. 'n' → logprob: -11.813382148742676
    7. '(max' → logprob: -14.063382148742676
    8. ' min' → logprob: -14.438382148742676
    9. '(m' → logprob: -16.06338119506836
    10. '(

' → logprob: -16.43838119506836

Token 399: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0052132438868284225
    2. '(' → logprob: -6.255213260650635
    3. '(a' → logprob: -6.380213260650635
    4. '(
' → logprob: -7.130213260650635
    5. '(b' → logprob: -7.505213260650635
    6. 'n' → logprob: -8.630212783813477
    7. '((' → logprob: -10.380212783813477
    8. ' (' → logprob: -12.130212783813477
    9. 'a' → logprob: -12.255212783813477
    10. 'b' → logprob: -12.880212783813477

Token 400: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0032669571228325367
    2. '-' → logprob: -5.75326681137085
    3. ' ' → logprob: -9.628267288208008
    4. ',' → logprob: -11.753267288208008
    5. '   ' → logprob: -11.878267288208008
    6. ')' → logprob: -13.003267288208008
    7. ' ' → logprob: -13.628267288208008
    8. '  ' → logprob: -13.753267288208008
    9. ' -
' → logprob: -14.128267288208008
    10. 'a' → logprob: -14.253267288208008

Token 401: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0006458373973146081
    2. ' a' → logprob: -8.000645637512207
    3. 'b' → logprob: -9.125645637512207
    4. 'odd' → logprob: -9.375645637512207
    5. '(a' → logprob: -9.750645637512207
    6. 'c' → logprob: -10.500645637512207
    7. ' (' → logprob: -11.625645637512207
    8. '(' → logprob: -11.750645637512207
    9. '   ' → logprob: -12.625645637512207
    10. 'od' → logprob: -12.750645637512207

Token 402: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07891920208930969
    2. '-' → logprob: -2.5789191722869873
    3. ' ' → logprob: -11.078919410705566
    4. '-b' → logprob: -11.578919410705566
    5. 'b' → logprob: -13.328919410705566
    6. '   ' → logprob: -14.328919410705566
    7. ' -
' → logprob: -14.578919410705566
    8. '  ' → logprob: -14.953919410705566
    9. ',' → logprob: -15.328919410705566
    10. '+' → logprob: -15.703919410705566

Token 403: ' d' (ID: 272)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.026363003998994827
    2. 'd' → logprob: -3.651362895965576
    3. ' c' → logprob: -10.276363372802734
    4. 'b' → logprob: -10.901363372802734
    5. 'a' → logprob: -12.651363372802734
    6. '   ' → logprob: -13.276363372802734
    7. ' d' → logprob: -13.651363372802734
    8. '	c' → logprob: -13.776363372802734
    9. '
' → logprob: -14.651363372802734
    10. '  ' → logprob: -15.088863372802734

Token 404: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029815874993801117
    2. ' ,' → logprob: -3.779815912246704
    3. ',
' → logprob: -5.279815673828125
    4. ',b' → logprob: -7.654815673828125
    5. ' -' → logprob: -8.154815673828125
    6. ',n' → logprob: -8.529815673828125
    7. '-' → logprob: -8.904815673828125
    8. '   ' → logprob: -9.654815673828125
    9. ',min' → logprob: -10.279815673828125
    10. ' +' → logprob: -10.404815673828125

Token 405: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.16022981703281403
    2. 'n' → logprob: -1.9102298021316528
    3. '
' → logprob: -14.285229682922363
    4. ' ' → logprob: -14.285229682922363
    5. ' 
' → logprob: -14.535229682922363
    6. '(n' → logprob: -14.535229682922363
    7. '	n' → logprob: -14.785229682922363
    8. '   ' → logprob: -15.035229682922363
    9. '\n' → logprob: -15.035229682922363
    10. '    ' → logprob: -15.160229682922363

Token 406: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5671525001525879
    2. ' +' → logprob: -0.9421525001525879
    3. '+' → logprob: -3.442152500152588
    4. '-' → logprob: -4.567152500152588
    5. ' ' → logprob: -7.442152500152588
    6. '   ' → logprob: -9.81715202331543
    7. '  ' → logprob: -11.06715202331543
    8. '    ' → logprob: -11.94215202331543
    9. ')' → logprob: -12.31715202331543
    10. '+b' → logprob: -12.31715202331543

Token 407: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5468233823776245
    2. 'a' → logprob: -0.9218233823776245
    3. 'c' → logprob: -4.546823501586914
    4. ' b' → logprob: -4.796823501586914
    5. ' a' → logprob: -5.671823501586914
    6. ' c' → logprob: -6.921823501586914
    7. ' ' → logprob: -10.421823501586914
    8. ',' → logprob: -10.546823501586914
    9. '   ' → logprob: -10.796823501586914
    10. ')' → logprob: -11.421823501586914

Token 408: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.020553220063447952
    2. '-' → logprob: -3.8955531120300293
    3. ' ' → logprob: -11.770553588867188
    4. '[' → logprob: -13.145553588867188
    5. '-c' → logprob: -14.520553588867188
    6. 'c' → logprob: -14.645553588867188
    7. '   ' → logprob: -15.145553588867188
    8. '  ' → logprob: -15.895553588867188
    9. ')' → logprob: -16.645553588867188
    10. ' ' → logprob: -16.770553588867188

Token 409: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -2.4391956685576588e-05
    2. ' c' → logprob: -10.625024795532227
    3. '	c' → logprob: -16.750024795532227
    4. '   ' → logprob: -17.375024795532227
    5. ')c' → logprob: -17.500024795532227
    6. '
' → logprob: -18.625024795532227
    7. 'с' → logprob: -19.375024795532227
    8. '```' → logprob: -19.500024795532227
    9. '[c' → logprob: -19.625024795532227
    10. '           ' → logprob: -20.000024795532227

Token 410: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0789206326007843
    2. ')' → logprob: -2.578920602798462
    3. '))
' → logprob: -10.703920364379883
    4. '   ' → logprob: -12.703920364379883
    5. ')
' → logprob: -12.953920364379883
    6. ' ))' → logprob: -13.578920364379883
    7. ')))' → logprob: -14.453920364379883
    8. '       ' → logprob: -14.828920364379883
    9. ' )' → logprob: -14.953920364379883
    10. ')}' → logprob: -15.703920364379883

Token 411: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0002217748697148636
    2. 'if' → logprob: -9.000222206115723
    3. 'n' → logprob: -9.250222206115723
    4. 'for' → logprob: -13.125222206115723
    5. '```' → logprob: -16.875221252441406
    6. 't' → logprob: -17.250221252441406
    7. 'num' → logprob: -17.750221252441406
    8. 'ndef' → logprob: -18.750221252441406
    9. ' def' → logprob: -18.875221252441406
    10. '#' → logprob: -20.375221252441406

Token 412: ' mixed' (ID: 16435)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0017148085171356797
    2. ' main' → logprob: -6.376714706420898
    3. 'solve' → logprob: -11.376714706420898
    4. 'def' → logprob: -14.376714706420898
    5. '	main' → logprob: -15.751714706420898
    6. ' solve' → logprob: -16.5017147064209
    7. 'run' → logprob: -16.5017147064209
    8. 'resolve' → logprob: -17.0017147064209
    9. 'process' → logprob: -17.1267147064209
    10. 'solution' → logprob: -17.1267147064209

Token 413: '_case' (ID: 43667)
  Prédit: '_case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_case' → logprob: -0.0018753247568383813
    2. '_' → logprob: -8.251874923706055
    3. '_counts' → logprob: -8.251874923706055
    4. 'case' → logprob: -8.626874923706055
    5. 'def' → logprob: -8.626874923706055
    6. '_count' → logprob: -8.751874923706055
    7. '_dict' → logprob: -8.751874923706055
    8. '(n' → logprob: -9.376874923706055
    9. '_cases' → logprob: -9.376874923706055
    10. '_def' → logprob: -9.751874923706055

Token 414: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0019584903493523598
    2. '():' → logprob: -6.87695837020874
    3. '(' → logprob: -7.00195837020874
    4. '(m' → logprob: -12.376958847045898
    5. '(def' → logprob: -12.501958847045898
    6. '(s' → logprob: -13.376958847045898
    7. ' (' → logprob: -14.126958847045898
    8. '(:' → logprob: -14.126958847045898
    9. '(a' → logprob: -14.376958847045898
    10. '(N' → logprob: -14.751958847045898

Token 415: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5213274309644476e-05
    2. ' ,' → logprob: -11.250015258789062
    3. ',
' → logprob: -13.375015258789062
    4. 'def' → logprob: -16.250015258789062
    5. ',n' → logprob: -16.500015258789062
    6. ',m' → logprob: -16.625015258789062
    7. '‌,' → logprob: -16.625015258789062
    8. '<|end|>' → logprob: -17.125015258789062
    9. ')' → logprob: -17.625015258789062
    10. '‍,' → logprob: -17.750015258789062

Token 416: ' odd' (ID: 14210)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.08131811767816544
    2. ' odd' → logprob: -2.5813181400299072
    3. 'even' → logprob: -6.206317901611328
    4. ' even' → logprob: -8.956317901611328
    5. 'mixed' → logprob: -9.831317901611328
    6. 'n' → logprob: -10.081317901611328
    7. 'od' → logprob: -10.706317901611328
    8. 'old' → logprob: -10.768817901611328
    9. '   ' → logprob: -10.956317901611328
    10. ' mixed' → logprob: -11.018817901611328

Token 417: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -0.00026407750556245446
    2. ',' → logprob: -8.875264167785645
    3. ',_' → logprob: -9.875264167785645
    4. '_val' → logprob: -11.375264167785645
    5. 'vals' → logprob: -11.375264167785645
    6. '_' → logprob: -11.875264167785645
    7. ' _' → logprob: -11.875264167785645
    8. '_,' → logprob: -12.250264167785645
    9. ')_' → logprob: -12.250264167785645
    10. '```' → logprob: -13.250264167785645

Token 418: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8789383830153383e-05
    2. ',
' → logprob: -11.375019073486328
    3. ' ,' → logprob: -12.250019073486328
    4. '[' → logprob: -14.875019073486328
    5. 'def' → logprob: -15.000019073486328
    6. ')' → logprob: -15.125019073486328
    7. 's' → logprob: -15.500019073486328
    8. '‌,' → logprob: -15.750019073486328
    9. '```' → logprob: -15.875019073486328
    10. '   ' → logprob: -15.875019073486328

Token 419: ' even' (ID: 1952)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.048609279096126556
    2. ' even' → logprob: -3.0486092567443848
    3. 'odd' → logprob: -11.423609733581543
    4. ' odd' → logprob: -12.798609733581543
    5. ' ' → logprob: -12.923609733581543
    6. 'def' → logprob: -13.673609733581543
    7. '   ' → logprob: -13.798609733581543
    8. '...' → logprob: -14.298609733581543
    9. '[' → logprob: -14.923609733581543
    10. '_even' → logprob: -14.923609733581543

Token 420: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -0.012130385264754295
    2. ',' → logprob: -4.637130260467529
    3. 'vals' → logprob: -6.512130260467529
    4. 's' → logprob: -7.387130260467529
    5. ',_' → logprob: -9.137130737304688
    6. '_,' → logprob: -9.887130737304688
    7. '```' → logprob: -10.012130737304688
    8. 'Vals' → logprob: -12.387130737304688
    9. '[' → logprob: -12.512130737304688
    10. ',s' → logprob: -12.512130737304688

Token 421: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00409502349793911
    2. '):
' → logprob: -5.504095077514648
    3. ':' → logprob: -11.629095077514648
    4. ')' → logprob: -12.379095077514648
    5. '   ' → logprob: -13.004095077514648
    6. ',' → logprob: -14.129095077514648
    7. ' ):' → logprob: -15.504095077514648
    8. '):
' → logprob: -15.629095077514648
    9. '):

' → logprob: -16.75409507751465
    10. '():' → logprob: -17.25409507751465

Token 422: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4977499544620514
    2. 'if' → logprob: -1.372749924659729
    3. 'a' → logprob: -1.997749924659729
    4. 'odd' → logprob: -6.4977498054504395
    5. ' if' → logprob: -7.4977498054504395
    6. 'for' → logprob: -8.497750282287598
    7. 'print' → logprob: -8.497750282287598
    8. 'max' → logprob: -9.247750282287598
    9. 'min' → logprob: -9.247750282287598
    10. '```' → logprob: -9.622750282287598

Token 423: ' a' (ID: 261)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1682063639163971
    2. 'a' (adapté à ' a') → logprob: -2.0432064533233643
    3. 'print' → logprob: -4.418206214904785
    4. 'odd' → logprob: -5.418206214904785
    5. 'single' → logprob: -5.793206214904785
    6. '   ' → logprob: -6.543206214904785
    7. 'for' → logprob: -6.793206214904785
    8. 'min' → logprob: -6.793206214904785
    9. 'n' → logprob: -7.793206214904785
    10. 'c' → logprob: -7.918206214904785

Token 424: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13679906725883484
    2. '=' → logprob: -2.1367990970611572
    3. ' =' → logprob: -4.636798858642578
    4. 'a' → logprob: -9.761798858642578
    5. ' ,' → logprob: -10.261798858642578
    6. ',a' → logprob: -10.511798858642578
    7. '=a' → logprob: -12.761798858642578
    8. '   ' → logprob: -13.386798858642578
    9. ',b' → logprob: -13.386798858642578
    10. ' a' → logprob: -13.636798858642578

Token 425: ' odd' (ID: 14210)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.01353452168405056
    2. ' odd' → logprob: -4.5135345458984375
    3. 'even' → logprob: -6.1385345458984375
    4. 'n' → logprob: -8.763534545898438
    5. ' even' → logprob: -9.638534545898438
    6. 'od' → logprob: -10.763534545898438
    7. ' n' → logprob: -11.013534545898438
    8. 'max' → logprob: -11.138534545898438
    9. 'mixed' → logprob: -11.388534545898438
    10. 'len' → logprob: -11.513534545898438

Token 426: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -0.0007370850071310997
    2. 'vals' → logprob: -7.500737190246582
    3. '[' → logprob: -8.625737190246582
    4. 'Vals' → logprob: -13.125737190246582
    5. '```' → logprob: -14.250737190246582
    6. '[_' → logprob: -14.500737190246582
    7. ' vals' → logprob: -15.000737190246582
    8. '_val' → logprob: -15.625737190246582
    9. '[-' → logprob: -15.875737190246582
    10. '[]' → logprob: -16.375736236572266

Token 427: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.5776860184123507e-06
    2. '0' → logprob: -13.87500286102295
    3. '
' → logprob: -14.37500286102295
    4. '```' → logprob: -14.75000286102295
    5. '   ' → logprob: -15.25000286102295
    6. ' [' → logprob: -16.250001907348633
    7. '][' → logprob: -16.625001907348633
    8. '=' → logprob: -16.750001907348633
    9. ' ' → logprob: -16.875001907348633
    10. 'def' → logprob: -17.000001907348633

Token 428: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006553700077347457
    2. '[' → logprob: -7.375655174255371
    3. ' ' → logprob: -10.875655174255371
    4. '1' → logprob: -12.875655174255371
    5. '][' → logprob: -13.313155174255371
    6. '
' → logprob: -13.688155174255371
    7. '   ' → logprob: -13.750655174255371
    8. '-' → logprob: -14.313155174255371
    9. '```' → logprob: -14.875655174255371
    10. ' [' → logprob: -15.125655174255371

Token 429: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.04316007345914841
    2. '[' → logprob: -3.1681599617004395
    3. ']' → logprob: -9.418160438537598
    4. ' ][' → logprob: -10.418160438537598
    5. '   ' → logprob: -11.418160438537598
    6. 'def' → logprob: -12.043160438537598
    7. '```' → logprob: -12.043160438537598
    8. ')[' → logprob: -12.418160438537598
    9. '>[' → logprob: -12.668160438537598
    10. '0' → logprob: -12.793160438537598

Token 430: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.034592388459714e-06
    2. '][' → logprob: -13.000005722045898
    3. '[' → logprob: -13.375005722045898
    4. ' ' → logprob: -13.875005722045898
    5. '1' → logprob: -14.125005722045898
    6. '
' → logprob: -15.000005722045898
    7. '   ' → logprob: -16.5000057220459
    8. '```' → logprob: -17.2500057220459
    9. '۰' → logprob: -18.2500057220459
    10. ' ][' → logprob: -18.6875057220459

Token 431: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6001602411270142
    2. ']
' → logprob: -1.4751602411270142
    3. '   ' → logprob: -1.6001602411270142
    4. ')' → logprob: -4.600160121917725
    5. ')
' → logprob: -5.100160121917725
    6. '
' → logprob: -6.475160121917725
    7. ',' → logprob: -7.100160121917725
    8. 'a' → logprob: -7.475160121917725
    9. ' ' → logprob: -7.725160121917725
    10. '<|end|>' → logprob: -7.850160121917725

Token 432: '   ' (ID: 271)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.10550850629806519
    2. '   ' → logprob: -2.60550856590271
    3. 'c' → logprob: -3.98050856590271
    4. ' b' → logprob: -5.105508327484131
    5. 'd' → logprob: -7.355508327484131
    6. ' c' → logprob: -7.980508327484131
    7. '
' → logprob: -8.105508804321289
    8. 'a' → logprob: -8.730508804321289
    9. ',' → logprob: -10.480508804321289
    10. ',b' → logprob: -11.355508804321289

Token 433: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.43892475962638855
    2. 'c' → logprob: -1.063924789428711
    3. '   ' → logprob: -4.813924789428711
    4. 'd' → logprob: -6.563924789428711
    5. 'a' → logprob: -7.688924789428711
    6. ' c' → logprob: -9.563924789428711
    7. ' b' → logprob: -9.688924789428711
    8. 'print' → logprob: -12.063924789428711
    9. 'import' → logprob: -12.063924789428711
    10. '       ' → logprob: -12.063924789428711

Token 434: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10906172543764114
    2. ' =' → logprob: -2.8590617179870605
    3. '=' → logprob: -3.1090617179870605
    4. '   ' → logprob: -7.6090617179870605
    5. ' ,' → logprob: -7.7340617179870605
    6. ',b' → logprob: -8.984062194824219
    7. ',
' → logprob: -9.109062194824219
    8. 'b' → logprob: -9.859062194824219
    9. 'def' → logprob: -10.484062194824219
    10. ' ' → logprob: -10.609062194824219

Token 435: ' even' (ID: 1952)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.008696119301021099
    2. 'odd' → logprob: -5.38369607925415
    3. ' even' → logprob: -6.38369607925415
    4. '1' → logprob: -7.00869607925415
    5. '0' → logprob: -7.25869607925415
    6. 'c' → logprob: -7.75869607925415
    7. 'len' → logprob: -9.008696556091309
    8. 'n' → logprob: -9.883696556091309
    9. ' ' → logprob: -10.633696556091309
    10. 'd' → logprob: -11.008696556091309

Token 436: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -2.069664333248511e-05
    2. 'vals' → logprob: -11.500020980834961
    3. '[' → logprob: -12.000020980834961
    4. '[_' → logprob: -13.625020980834961
    5. 'Vals' → logprob: -14.250020980834961
    6. '```' → logprob: -14.250020980834961
    7. '_val' → logprob: -14.625020980834961
    8. '[-' → logprob: -15.000020980834961
    9. ' _' → logprob: -16.25002098083496
    10. '_opts' → logprob: -16.37502098083496

Token 437: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.226628895296017e-06
    2. '0' → logprob: -12.375007629394531
    3. '```' → logprob: -13.750007629394531
    4. '   ' → logprob: -14.250007629394531
    5. ' [' → logprob: -14.500007629394531
    6. '][' → logprob: -15.625007629394531
    7. '1' → logprob: -15.750007629394531
    8. '
' → logprob: -16.00000762939453
    9. 'def' → logprob: -17.00000762939453
    10. '  ' → logprob: -17.12500762939453

Token 438: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.217951886355877e-05
    2. '1' → logprob: -10.000061988830566
    3. '[' → logprob: -12.125061988830566
    4. '-' → logprob: -12.125061988830566
    5. '
' → logprob: -13.000061988830566
    6. ' ' → logprob: -13.125061988830566
    7. '   ' → logprob: -14.750061988830566
    8. '```' → logprob: -15.375061988830566
    9. ']' → logprob: -15.750061988830566
    10. '...' → logprob: -15.812561988830566

Token 439: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.020627610385417938
    2. '[' → logprob: -3.895627498626709
    3. ' ][' → logprob: -9.895627975463867
    4. '   ' → logprob: -11.145627975463867
    5. ']' → logprob: -11.520627975463867
    6. ' [' → logprob: -13.270627975463867
    7. '```' → logprob: -13.645627975463867
    8. ')[' → logprob: -13.770627975463867
    9. '"][' → logprob: -13.895627975463867
    10. ''][' → logprob: -13.895627975463867

Token 440: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001854984788224101
    2. '[' → logprob: -6.50185489654541
    3. '1' → logprob: -8.00185489654541
    4. '][' → logprob: -11.37685489654541
    5. ' ' → logprob: -12.37685489654541
    6. ' [' → logprob: -14.37685489654541
    7. '   ' → logprob: -14.62685489654541
    8. '```' → logprob: -15.37685489654541
    9. '
' → logprob: -15.87685489654541
    10. '۰' → logprob: -16.314355850219727

Token 441: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.32757633924484253
    2. ']
' → logprob: -1.4525763988494873
    3. '   ' → logprob: -3.2025763988494873
    4. ')' → logprob: -6.077576160430908
    5. ')
' → logprob: -6.202576160430908
    6. 'def' → logprob: -8.952576637268066
    7. '
' → logprob: -9.827576637268066
    8. ',' → logprob: -10.077576637268066
    9. ' ]' → logprob: -10.327576637268066
    10. ' ' → logprob: -10.452576637268066

Token 442: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06826856732368469
    2. 'print' → logprob: -3.1932685375213623
    3. '
' → logprob: -3.9432685375213623
    4. '    
' → logprob: -6.568268775939941
    5. 'if' → logprob: -6.568268775939941
    6. '<|end|>' → logprob: -7.068268775939941
    7. 'c' → logprob: -7.443268775939941
    8. ' if' → logprob: -7.568268775939941
    9. ' print' → logprob: -8.568268775939941
    10. ',' → logprob: -8.943268775939941

Token 443: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.269506573677063
    2. 'c' → logprob: -1.519506573677063
    3. 'if' (adapté à ' if') → logprob: -4.269506454467773
    4. '   ' → logprob: -6.394506454467773
    5. 'odd' → logprob: -7.644506454467773
    6. 'n' → logprob: -7.894506454467773
    7. ' print' → logprob: -7.894506454467773
    8. ' if' → logprob: -9.144506454467773
    9. ' c' → logprob: -9.269506454467773
    10. 'a' → logprob: -9.519506454467773

Token 444: ' len' (ID: 4631)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.001041978714056313
    2. ' odd' → logprob: -6.876041889190674
    3. 'a' → logprob: -12.376042366027832
    4. 'even' → logprob: -13.501042366027832
    5. 'od' → logprob: -13.751042366027832
    6. '
' → logprob: -14.376042366027832
    7. '   ' → logprob: -14.501042366027832
    8. 'n' → logprob: -15.251042366027832
    9. ' ' → logprob: -15.251042366027832
    10. 'len' → logprob: -15.501042366027832

Token 445: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3503464162349701
    2. '(e' → logprob: -1.2253464460372925
    3. 'even' → logprob: -7.225346565246582
    4. 'odd' → logprob: -7.225346565246582
    5. '(m' → logprob: -8.225346565246582
    6. ' odd' → logprob: -9.725346565246582
    7. ' (' → logprob: -10.225346565246582
    8. ' even' → logprob: -10.350346565246582
    9. 'e' → logprob: -11.350346565246582
    10. '(o' → logprob: -11.975346565246582

Token 446: 'odd' (ID: 18303)
  Prédit: 'odd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.0060239569284021854
    2. 'even' → logprob: -5.13102388381958
    3. ' odd' → logprob: -9.506024360656738
    4. 'od' → logprob: -11.381024360656738
    5. 'old' → logprob: -13.756024360656738
    6. 'mixed' → logprob: -13.756024360656738
    7. '   ' → logprob: -13.881024360656738
    8. ' even' → logprob: -14.006024360656738
    9. ' ' → logprob: -14.506024360656738
    10. '[' → logprob: -14.631024360656738

Token 447: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -0.00034869377850554883
    2. '[' → logprob: -8.500349044799805
    3. ')' → logprob: -10.125349044799805
    4. '_val' → logprob: -10.375349044799805
    5. '[_' → logprob: -10.500349044799805
    6. 'vals' → logprob: -11.250349044799805
    7. '>' → logprob: -12.375349044799805
    8. ')_' → logprob: -12.625349044799805
    9. ' _' → logprob: -12.625349044799805
    10. '_vars' → logprob: -12.750349044799805

Token 448: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006251106387935579
    2. ')>' → logprob: -7.625625133514404
    3. ')==' → logprob: -9.375624656677246
    4. ')<' → logprob: -10.500624656677246
    5. '[' → logprob: -11.750624656677246
    6. '>' → logprob: -11.875624656677246
    7. ' )' → logprob: -12.000624656677246
    8. '==' → logprob: -14.000624656677246
    9. '   ' → logprob: -14.500624656677246
    10. ')
' → logprob: -14.875624656677246

Token 449: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5588538646697998
    2. '<' → logprob: -1.6838538646697998
    3. '==' → logprob: -2.1838538646698
    4. ' >' → logprob: -2.8088538646698
    5. ' <' → logprob: -3.3088538646698
    6. ' ==' → logprob: -3.4338538646698
    7. ')' → logprob: -8.558854103088379
    8. '>=' → logprob: -8.558854103088379
    9. ' ' → logprob: -8.933854103088379
    10. '[' → logprob: -10.058854103088379

Token 450: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08504335582256317
    2. '2' → logprob: -2.710043430328369
    3. ' ' → logprob: -4.210043430328369
    4. '<' → logprob: -9.335042953491211
    5. '>' → logprob: -10.335042953491211
    6. '0' → logprob: -11.210042953491211
    7. '3' → logprob: -12.210042953491211
    8. '   ' → logprob: -12.460042953491211
    9. ' <' → logprob: -13.335042953491211
    10. '=' → logprob: -14.585042953491211

Token 451: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.576359212398529
    2. '1' → logprob: -0.826359212398529
    3. ' ' → logprob: -8.576358795166016
    4. '>' → logprob: -9.076358795166016
    5. '3' → logprob: -9.951358795166016
    6. '0' → logprob: -10.451358795166016
    7. '<' → logprob: -10.451358795166016
    8. '   ' → logprob: -12.888858795166016
    9. '
' → logprob: -13.326358795166016
    10. '```' → logprob: -13.388858795166016

Token 452: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6786031723022461
    2. ' and' → logprob: -0.9286031723022461
    3. 'and' → logprob: -2.803603172302246
    4. ' or' → logprob: -3.428603172302246
    5. ':
' → logprob: -6.303603172302246
    6. '   ' → logprob: -6.428603172302246
    7. 'or' → logprob: -7.178603172302246
    8. ',' → logprob: -8.928603172302246
    9. ')' → logprob: -10.178603172302246
    10. '<|end|>' → logprob: -10.553603172302246

Token 453: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27910876274108887
    2. ':
' → logprob: -2.029108762741089
    3. ':' → logprob: -2.529108762741089
    4. '   ' → logprob: -4.154109001159668
    5. ' and' → logprob: -4.654109001159668
    6. ',' → logprob: -5.279109001159668
    7. ' or' → logprob: -7.029109001159668
    8. ',
' → logprob: -7.529109001159668
    9. 'and' → logprob: -8.904109001159668
    10. '):
' → logprob: -9.029109001159668

Token 454: ' c' (ID: 274)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0073819160461426
    2. ' print' → logprob: -1.3823819160461426
    3. 'print' → logprob: -1.8823819160461426
    4. ' c' → logprob: -2.0073819160461426
    5. '
' → logprob: -3.1323819160461426
    6. '   ' → logprob: -3.6323819160461426
    7. 'c' (adapté à ' c') → logprob: -4.632381916046143
    8. '        
' → logprob: -5.132381916046143
    9. ' b' → logprob: -5.882381916046143
    10. '    
' → logprob: -6.382381916046143

Token 455: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2545810639858246
    2. ' =' → logprob: -1.504581093788147
    3. ',' → logprob: -6.004580974578857
    4. '   ' → logprob: -9.004581451416016
    5. '  ' → logprob: -10.879581451416016
    6. '=len' → logprob: -11.254581451416016
    7. ' ' → logprob: -11.504581451416016
    8. 'b' → logprob: -13.129581451416016
    9. 'def' → logprob: -13.504581451416016
    10. ' ,' → logprob: -13.629581451416016

Token 456: ' even' (ID: 1952)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.14609891176223755
    2. '0' → logprob: -2.0210988521575928
    3. ' even' → logprob: -6.771099090576172
    4. 'n' → logprob: -6.771099090576172
    5. 'odd' → logprob: -7.521099090576172
    6. 'len' → logprob: -8.146099090576172
    7. ' ' → logprob: -9.521099090576172
    8. '(' → logprob: -9.771099090576172
    9. '1' → logprob: -9.771099090576172
    10. ' n' → logprob: -10.521099090576172

Token 457: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -4.8232690460281447e-05
    2. 'vals' → logprob: -10.000048637390137
    3. '[' → logprob: -14.125048637390137
    4. '_val' → logprob: -14.250048637390137
    5. '_' → logprob: -15.375048637390137
    6. 's' → logprob: -15.750048637390137
    7. 'v' → logprob: -16.12504768371582
    8. ' vals' → logprob: -16.12504768371582
    9. 'Vals' → logprob: -16.25004768371582
    10. '
' → logprob: -16.37504768371582

Token 458: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.000913370808120817
    2. '1' → logprob: -7.000913143157959
    3. '
' → logprob: -14.875913619995117
    4. '   ' → logprob: -15.375913619995117
    5. '[-' → logprob: -15.375913619995117
    6. ' [' → logprob: -15.500913619995117
    7. ' ' → logprob: -15.625913619995117
    8. 'and' → logprob: -16.250913619995117
    9. 's' → logprob: -16.250913619995117
    10. '...' → logprob: -16.500913619995117

Token 459: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.35706390615087e-05
    2. '0' → logprob: -10.375033378601074
    3. ' ' → logprob: -13.250033378601074
    4. '[' → logprob: -15.500033378601074
    5. '   ' → logprob: -16.37503433227539
    6. '-' → logprob: -16.50003433227539
    7. '
' → logprob: -17.12503433227539
    8. ']' → logprob: -18.00003433227539
    9. '>' → logprob: -18.87503433227539
    10. 'len' → logprob: -19.25003433227539

Token 460: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.06200947239995003
    2. '[' → logprob: -2.812009572982788
    3. ']' → logprob: -10.937009811401367
    4. '0' → logprob: -11.937009811401367
    5. ' ][' → logprob: -12.187009811401367
    6. ' [' → logprob: -12.437009811401367
    7. '   ' → logprob: -12.812009811401367
    8. '
' → logprob: -13.812009811401367
    9. ')[' → logprob: -13.937009811401367
    10. '[][' → logprob: -14.312009811401367

Token 461: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4855663721391466e-05
    2. '[' → logprob: -11.500015258789062
    3. '1' → logprob: -12.875015258789062
    4. '][' → logprob: -13.750015258789062
    5. '
' → logprob: -14.625015258789062
    6. ' ' → logprob: -15.250015258789062
    7. '   ' → logprob: -16.000015258789062
    8. ' [' → logprob: -17.500015258789062
    9. '00' → logprob: -17.500015258789062
    10. '  ' → logprob: -17.875015258789062

Token 462: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0035665694158524275
    2. '<|end|>' → logprob: -6.128566741943359
    3. '   ' → logprob: -7.378566741943359
    4. ')
' → logprob: -8.25356674194336
    5. '}' → logprob: -8.62856674194336
    6. ']' → logprob: -8.75356674194336
    7. '<|end|>' → logprob: -10.12856674194336
    8. ' ' → logprob: -11.00356674194336
    9. ')c' → logprob: -11.25356674194336
    10. ',' → logprob: -11.50356674194336

Token 463: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 464: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.3320103883743286
    2. ' else' → logprob: -1.7070103883743286
    3. '   ' → logprob: -2.332010269165039
    4. '
' → logprob: -6.582010269165039
    5. ' ' → logprob: -6.582010269165039
    6. 'elif' → logprob: -8.082010269165039
    7. '       ' → logprob: -8.832010269165039
    8. '    
' → logprob: -8.832010269165039
    9. ' if' → logprob: -8.832010269165039
    10. ' or' → logprob: -9.207010269165039

Token 465: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5684928894042969
    2. ':' → logprob: -1.3184928894042969
    3. ':
' → logprob: -2.068492889404297
    4. '   ' → logprob: -3.318492889404297
    5. ',' → logprob: -6.443492889404297
    6. ' c' → logprob: -6.693492889404297
    7. 'c' → logprob: -8.568492889404297
    8. '	c' → logprob: -9.568492889404297
    9. '           ' → logprob: -9.943492889404297
    10. '     ' → logprob: -10.318492889404297

Token 466: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6076220273971558
    2. 'c' → logprob: -1.1076220273971558
    3. ' c' → logprob: -2.1076221466064453
    4. '       ' → logprob: -6.232622146606445
    5. '	c' → logprob: -7.107622146606445
    6. ' ' → logprob: -7.482622146606445
    7. '  ' → logprob: -10.357622146606445
    8. '
' → logprob: -10.607622146606445
    9. '   ' → logprob: -10.857622146606445
    10. '    ' → logprob: -10.982622146606445

Token 467: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.0006986152729950845
    2. ' c' → logprob: -7.625698566436768
    3. '   ' → logprob: -8.625699043273926
    4. 'b' → logprob: -10.750699043273926
    5. '       ' → logprob: -11.875699043273926
    6. '	c' → logprob: -13.625699043273926
    7. ' ' → logprob: -14.875699043273926
    8. 'd' → logprob: -15.125699043273926
    9. 'a' → logprob: -15.500699043273926
    10. '  ' → logprob: -15.750699043273926

Token 468: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868948519229889
    2. ' =' → logprob: -1.1368948221206665
    3. '   ' → logprob: -11.386895179748535
    4. ' ' → logprob: -12.386895179748535
    5. ',' → logprob: -13.011895179748535
    6. 'b' → logprob: -13.261895179748535
    7. '  ' → logprob: -13.761895179748535
    8. 'c' → logprob: -13.886895179748535
    9. '=c' → logprob: -15.136895179748535
    10. '       ' → logprob: -15.136895179748535

Token 469: ' odd' (ID: 14210)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.026818744838237762
    2. ' odd' → logprob: -3.6518187522888184
    3. 'even' → logprob: -7.776818752288818
    4. 'od' → logprob: -10.40181827545166
    5. ' even' → logprob: -10.40181827545166
    6. '   ' → logprob: -10.65181827545166
    7. ' ' → logprob: -12.02681827545166
    8. '           ' → logprob: -13.02681827545166
    9. 'b' → logprob: -13.65181827545166
    10. '       ' → logprob: -13.77681827545166

Token 470: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -3.35706390615087e-05
    2. 'vals' → logprob: -10.375033378601074
    3. '[' → logprob: -13.250033378601074
    4. 'v' → logprob: -16.37503433227539
    5. 's' → logprob: -16.50003433227539
    6. 'Vals' → logprob: -16.75003433227539
    7. '_val' → logprob: -16.87503433227539
    8. '[-' → logprob: -17.00003433227539
    9. '_vars' → logprob: -17.12503433227539
    10. '(vals' → logprob: -17.25003433227539

Token 471: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0001462107611587271
    2. '1' → logprob: -8.87514591217041
    3. '   ' → logprob: -12.25014591217041
    4. ' [' → logprob: -14.62514591217041
    5. ' ' → logprob: -15.12514591217041
    6. '```' → logprob: -15.50014591217041
    7. '       ' → logprob: -16.250146865844727
    8. 's' → logprob: -16.625146865844727
    9. '2' → logprob: -16.750146865844727
    10. '  ' → logprob: -17.000146865844727

Token 472: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6405310816480778e-05
    2. '0' → logprob: -11.375016212463379
    3. ' ' → logprob: -12.750016212463379
    4. '[' → logprob: -13.625016212463379
    5. '   ' → logprob: -14.875016212463379
    6. '-' → logprob: -15.500016212463379
    7. '
' → logprob: -16.375017166137695
    8. '```' → logprob: -16.812517166137695
    9. '  ' → logprob: -17.750017166137695
    10. '１' → logprob: -18.187517166137695

Token 473: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.1428302675485611
    2. '[' → logprob: -2.0178303718566895
    3. '0' → logprob: -10.017829895019531
    4. '   ' → logprob: -10.142829895019531
    5. ')[' → logprob: -10.267829895019531
    6. ' ][' → logprob: -11.392829895019531
    7. '>[' → logprob: -12.267829895019531
    8. ' [' → logprob: -12.642829895019531
    9. '```' → logprob: -12.892829895019531
    10. ']' → logprob: -13.017829895019531

Token 474: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012094692647224292
    2. '[' → logprob: -9.375121116638184
    3. ' ' → logprob: -10.500121116638184
    4. '1' → logprob: -12.000121116638184
    5. '
' → logprob: -14.125121116638184
    6. '][' → logprob: -14.500121116638184
    7. '   ' → logprob: -14.500121116638184
    8. ' [' → logprob: -14.875121116638184
    9. '  ' → logprob: -15.750121116638184
    10. '    ' → logprob: -17.250120162963867

Token 475: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11661521345376968
    2. '<|end|>' → logprob: -2.3666152954101562
    3. '   ' → logprob: -4.366615295410156
    4. '
' → logprob: -7.241615295410156
    5. '<|end|>' → logprob: -7.241615295410156
    6. ']' → logprob: -7.366615295410156
    7. ')
' → logprob: -7.491615295410156
    8. '```' → logprob: -8.116615295410156
    9. ')return' → logprob: -8.741615295410156
    10. '}' → logprob: -8.866615295410156

Token 476: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009286366403102875
    2. 'd' → logprob: -5.509286403656006
    3. '
' → logprob: -6.259286403656006
    4. '	return' → logprob: -7.509286403656006
    5. ' if' → logprob: -7.759286403656006
    6. '	if' → logprob: -7.759286403656006
    7. 'if' → logprob: -8.384285926818848
    8. '	d' → logprob: -8.384285926818848
    9. '<|end|>' → logprob: -8.509285926818848
    10. 'print' → logprob: -8.634285926818848

Token 477: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7228097319602966
    2. 'd' → logprob: -1.0978097915649414
    3. ' d' → logprob: -1.8478097915649414
    4. ' if' → logprob: -4.222809791564941
    5. ' return' → logprob: -6.347809791564941
    6. '       ' → logprob: -6.722809791564941
    7. ',' → logprob: -6.722809791564941
    8. 'if' (adapté à ' if') → logprob: -7.222809791564941
    9. ' ' → logprob: -7.597809791564941
    10. '
' → logprob: -7.847809791564941

Token 478: ' odd' (ID: 14210)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.607272207736969
    2. 'len' → logprob: -0.857272207736969
    3. ' even' → logprob: -4.232272148132324
    4. 'even' → logprob: -4.232272148132324
    5. ' odd' → logprob: -6.857272148132324
    6. 'odd' → logprob: -7.482272148132324
    7. '(len' → logprob: -9.732272148132324
    8. ' ' → logprob: -10.607272148132324
    9. '   ' → logprob: -11.044772148132324
    10. '	len' → logprob: -11.294772148132324

Token 479: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -0.00018363336857873946
    2. '_val' → logprob: -9.875184059143066
    3. ' _' → logprob: -10.000184059143066
    4. '```' → logprob: -10.375184059143066
    5. '[' → logprob: -11.125184059143066
    6. '[_' → logprob: -12.000184059143066
    7. '_' → logprob: -12.125184059143066
    8. '_len' → logprob: -12.375184059143066
    9. '_vars' → logprob: -12.875184059143066
    10. 'vals' → logprob: -13.000184059143066

Token 480: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.000462366413557902
    2. '   ' → logprob: -8.625462532043457
    3. 'len' → logprob: -9.250462532043457
    4. ' [' → logprob: -9.750462532043457
    5. ' ' → logprob: -10.250462532043457
    6. '```' → logprob: -10.500462532043457
    7. ':' → logprob: -11.750462532043457
    8. '       ' → logprob: -12.000462532043457
    9. '0' → logprob: -12.000462532043457
    10. ' and' → logprob: -12.125462532043457

Token 481: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009860680438578129
    2. '1' → logprob: -4.634860515594482
    3. ' ' → logprob: -9.50986099243164
    4. '-' → logprob: -11.75986099243164
    5. '[' → logprob: -11.88486099243164
    6. '   ' → logprob: -12.25986099243164
    7. 'len' → logprob: -12.38486099243164
    8. ']' → logprob: -13.88486099243164
    9. '```' → logprob: -13.88486099243164
    10. '
' → logprob: -14.25986099243164

Token 482: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.01141265593469143
    2. '[' → logprob: -4.511412620544434
    3. ']' → logprob: -8.761412620544434
    4. '   ' → logprob: -9.011412620544434
    5. ' ][' → logprob: -9.886412620544434
    6. ')[' → logprob: -12.261412620544434
    7. '```' → logprob: -12.636412620544434
    8. '>[' → logprob: -12.761412620544434
    9. '
' → logprob: -13.011412620544434
    10. ' [' → logprob: -13.261412620544434

Token 483: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010533124441280961
    2. '0' → logprob: -9.625104904174805
    3. ' ' → logprob: -10.875104904174805
    4. '[' → logprob: -11.125104904174805
    5. '```' → logprob: -13.500104904174805
    6. '
' → logprob: -14.000104904174805
    7. '][' → logprob: -14.000104904174805
    8. '   ' → logprob: -14.687604904174805
    9. '-' → logprob: -15.000104904174805
    10. 'len' → logprob: -15.500104904174805

Token 484: ']' (ID: 60)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.011838259175419807
    2. '!=' → logprob: -4.511838436126709
    3. ' ==' → logprob: -7.386838436126709
    4. '==' → logprob: -9.26183795928955
    5. ']' → logprob: -10.63683795928955
    6. ')' → logprob: -11.13683795928955
    7. '<|end|>' → logprob: -11.38683795928955
    8. '[' → logprob: -12.01183795928955
    9. ']!=' → logprob: -12.51183795928955
    10. ' ' → logprob: -12.51183795928955

Token 485: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.1960972547531128
    2. '!=' → logprob: -2.4460973739624023
    3. ' ==' → logprob: -2.8210973739624023
    4. '==' → logprob: -3.4460973739624023
    5. '=' → logprob: -11.821097373962402
    6. '[' → logprob: -12.696097373962402
    7. ' ' → logprob: -12.946097373962402
    8. ')' → logprob: -13.446097373962402
    9. '<|end|>' → logprob: -13.446097373962402
    10. '>' → logprob: -13.696097373962402

Token 486: ' even' (ID: 1952)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.1270008683204651
    2. ' even' → logprob: -2.1270008087158203
    3. 'odd' → logprob: -10.25200080871582
    4. ' odd' → logprob: -10.87700080871582
    5. '   ' → logprob: -11.62700080871582
    6. ' ' → logprob: -12.62700080871582
    7. '  ' → logprob: -14.12700080871582
    8. '    ' → logprob: -14.37700080871582
    9. '_even' → logprob: -14.37700080871582
    10. 'ever' → logprob: -14.50200080871582

Token 487: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -8.061054359131958e-06
    2. 'vals' → logprob: -12.125007629394531
    3. '_val' → logprob: -13.250007629394531
    4. '_vars' → logprob: -15.250007629394531
    5. 'v' → logprob: -16.37500762939453
    6. '_' → logprob: -16.87500762939453
    7. '(vals' → logprob: -16.87500762939453
    8. '_v' → logprob: -17.25000762939453
    9. '
' → logprob: -17.75000762939453
    10. 'Vals' → logprob: -18.00000762939453

Token 488: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.696889623621246e-06
    2. '```' → logprob: -13.75000286102295
    3. ' [' → logprob: -14.37500286102295
    4. '   ' → logprob: -15.12500286102295
    5. ',' → logprob: -16.000001907348633
    6. '0' → logprob: -16.375001907348633
    7. 'def' → logprob: -16.375001907348633
    8. '][' → logprob: -16.500001907348633
    9. ' ' → logprob: -16.625001907348633
    10. '...' → logprob: -17.375001907348633

Token 489: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.078839502763003e-05
    2. ' ' → logprob: -9.625090599060059
    3. '[' → logprob: -11.250090599060059
    4. '1' → logprob: -11.875090599060059
    5. '   ' → logprob: -13.750090599060059
    6. '-' → logprob: -13.937590599060059
    7. '```' → logprob: -14.062590599060059
    8. '
' → logprob: -15.375090599060059
    9. '  ' → logprob: -15.562590599060059
    10. '...' → logprob: -15.687590599060059

Token 490: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.055060114711523056
    2. '[' → logprob: -2.9300601482391357
    3. '   ' → logprob: -9.930060386657715
    4. ''][' → logprob: -10.680060386657715
    5. ' ][' → logprob: -10.680060386657715
    6. ']' → logprob: -10.805060386657715
    7. '1' → logprob: -11.430060386657715
    8. '-' → logprob: -11.430060386657715
    9. ' [' → logprob: -11.555060386657715
    10. ')[' → logprob: -11.680060386657715

Token 491: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.750011444091797
    3. '
' → logprob: -13.375011444091797
    4. '0' → logprob: -14.500011444091797
    5. '   ' → logprob: -14.812511444091797
    6. '' → logprob: -15.562511444091797
    7. '```' → logprob: -15.812511444091797
    8. '

' → logprob: -16.125011444091797
    9. '[' → logprob: -16.125011444091797
    10. '-' → logprob: -16.187511444091797

Token 492: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7557134032249451
    2. '):
' → logprob: -1.2557134628295898
    3. ':' → logprob: -1.5057134628295898
    4. '):' → logprob: -3.88071346282959
    5. '       ' → logprob: -6.38071346282959
    6. '   ' → logprob: -7.38071346282959
    7. ')' → logprob: -8.00571346282959
    8. ' and' → logprob: -9.50571346282959
    9. '():
' → logprob: -9.88071346282959
    10. ',' → logprob: -10.25571346282959

Token 493: '       ' (ID: 309)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5054694414138794
    2. ':' → logprob: -1.1304694414138794
    3. '       ' → logprob: -2.63046932220459
    4. '   ' → logprob: -7.38046932220459
    5. '):
' → logprob: -7.38046932220459
    6. 'print' → logprob: -8.63046932220459
    7. ',' → logprob: -9.13046932220459
    8. ':

' → logprob: -10.13046932220459
    9. '```' → logprob: -10.13046932220459
    10. '):' → logprob: -10.25546932220459

Token 494: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38736236095428467
    2. 'print' (adapté à ' print') → logprob: -1.6373623609542847
    3. ' print' → logprob: -2.137362480163574
    4. '   ' → logprob: -4.762362480163574
    5. '
' → logprob: -9.137362480163574
    6. '           ' → logprob: -10.887362480163574
    7. '	print' → logprob: -11.387362480163574
    8. ' ' → logprob: -11.887362480163574
    9. '```' → logprob: -12.637362480163574
    10. '     ' → logprob: -13.887362480163574

Token 495: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0028194934129714966
    2. '(' → logprob: -5.877819538116455
    3. 'n' → logprob: -11.377819061279297
    4. ' (' → logprob: -13.627819061279297
    5. ' n' → logprob: -13.752819061279297
    6. '(
' → logprob: -14.377819061279297
    7. '(f' → logprob: -15.502819061279297
    8. '((' → logprob: -17.502819061279297
    9. '('' → logprob: -17.752819061279297
    10. ')' → logprob: -18.002819061279297

Token 496: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0010625827126204967
    2. '-' → logprob: -6.876062393188477
    3. ' ' → logprob: -11.126062393188477
    4. ')' → logprob: -11.751062393188477
    5. '<|end|>' → logprob: -12.626062393188477
    6. '   ' → logprob: -13.376062393188477
    7. ' ' → logprob: -14.376062393188477
    8. ' -
' → logprob: -14.876062393188477
    9. '    ' → logprob: -15.501062393188477
    10. '<|end|>' → logprob: -15.751062393188477

Token 497: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0028105827514082193
    2. ' a' → logprob: -5.877810478210449
    3. '(a' → logprob: -13.12781047821045
    4. ' (' → logprob: -13.62781047821045
    5. 'c' → logprob: -14.25281047821045
    6. '(' → logprob: -14.62781047821045
    7. 'b' → logprob: -14.75281047821045
    8. 'n' → logprob: -14.87781047821045
    9. '   ' → logprob: -15.50281047821045
    10. ' ' → logprob: -15.50281047821045

Token 498: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.009764472022652626
    2. '-' → logprob: -4.634764671325684
    3. ' ' → logprob: -11.759764671325684
    4. '   ' → logprob: -15.759764671325684
    5. ')' → logprob: -15.884764671325684
    6. ' ' → logprob: -15.884764671325684
    7. '  ' → logprob: -16.259763717651367
    8. '-b' → logprob: -16.509763717651367
    9. ' -
' → logprob: -16.759763717651367
    10. '```' → logprob: -17.259763717651367

Token 499: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -6.301394023466855e-05
    2. 'c' → logprob: -10.250062942504883
    3. ' b' → logprob: -10.500062942504883
    4. ' c' → logprob: -17.125062942504883
    5. ' ' → logprob: -18.125062942504883
    6. 'd' → logprob: -18.500062942504883
    7. 'min' → logprob: -18.625062942504883
    8. '1' → logprob: -19.000062942504883
    9. 'a' → logprob: -19.000062942504883
    10. '   ' → logprob: -19.250062942504883

Token 500: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0486709363758564
    2. ')
' → logprob: -3.048671007156372
    3. '   ' → logprob: -9.548670768737793
    4. ' )' → logprob: -12.923670768737793
    5. ')
' → logprob: -13.173670768737793
    6. ')

' → logprob: -13.298670768737793
    7. 'else' → logprob: -13.548670768737793
    8. '+' → logprob: -14.048670768737793
    9. ' else' → logprob: -14.048670768737793
    10. '       ' → logprob: -14.423670768737793

Token 501: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013654737267643213
    2. 'else' → logprob: -6.626365661621094
    3. ' else' → logprob: -10.251365661621094
    4. '       ' → logprob: -13.376365661621094
    5. ')' → logprob: -14.376365661621094
    6. '
' → logprob: -14.501365661621094
    7. '	else' → logprob: -14.626365661621094
    8. 'elif' → logprob: -15.376365661621094
    9. '<|end|>' → logprob: -15.376365661621094
    10. '```' → logprob: -15.751365661621094

Token 502: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13800987601280212
    2. 'else' (adapté à ' else') → logprob: -2.138009786605835
    3. ' else' → logprob: -4.513010025024414
    4. '       ' → logprob: -10.388010025024414
    5. '	else' → logprob: -11.138010025024414
    6. ' ' → logprob: -12.763010025024414
    7. '<|end|>' → logprob: -13.013010025024414
    8. 'elif' → logprob: -13.263010025024414
    9. '  ' → logprob: -14.013010025024414
    10. ')' → logprob: -14.638010025024414

Token 503: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.49833306670188904
    2. ':
' → logprob: -0.9983330965042114
    3. '       ' → logprob: -3.748332977294922
    4. '   ' → logprob: -8.623332977294922
    5. ',' → logprob: -8.998332977294922
    6. '):
' → logprob: -10.873332977294922
    7. '{' → logprob: -10.998332977294922
    8. ',
' → logprob: -11.123332977294922
    9. '():
' → logprob: -11.873332977294922
    10. ':

' → logprob: -12.123332977294922

Token 504: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002737828064709902
    2. 'print' → logprob: -6.377737998962402
    3. '
' → logprob: -7.127737998962402
    4. '   ' → logprob: -9.502737998962402
    5. ' print' → logprob: -9.502737998962402
    6. '```' → logprob: -9.877737998962402
    7. '           ' → logprob: -11.377737998962402
    8. '	' → logprob: -11.877737998962402
    9. '        
' → logprob: -12.627737998962402
    10. '	print' → logprob: -13.252737998962402

Token 505: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.013199289329349995
    2. '       ' → logprob: -4.513199329376221
    3. ' print' → logprob: -6.263199329376221
    4. 'c' → logprob: -9.388198852539062
    5. 'if' → logprob: -9.513198852539062
    6. '   ' → logprob: -10.013198852539062
    7. 'a' → logprob: -10.638198852539062
    8. '           ' → logprob: -12.388198852539062
    9. ' if' → logprob: -13.138198852539062
    10. ' c' → logprob: -13.388198852539062

Token 506: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.07801788300275803
    2. '(' → logprob: -2.9530179500579834
    3. '(min' → logprob: -3.8280179500579834
    4. 'min' → logprob: -7.203017711639404
    5. 'n' → logprob: -8.078018188476562
    6. '(
' → logprob: -11.078018188476562
    7. ' min' → logprob: -11.203018188476562
    8. '(max' → logprob: -11.453018188476562
    9. '(f' → logprob: -11.953018188476562
    10. '('' → logprob: -12.453018188476562

Token 507: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0008645339403301477
    2. '-' → logprob: -7.125864505767822
    3. ' ' → logprob: -9.87586498260498
    4. ')' → logprob: -13.00086498260498
    5. ' ' → logprob: -13.00086498260498
    6. '[' → logprob: -13.25086498260498
    7. '   ' → logprob: -14.87586498260498
    8. '  ' → logprob: -14.87586498260498
    9. 'n' → logprob: -15.25086498260498
    10. ' n' → logprob: -15.50086498260498

Token 508: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.15111172199249268
    2. 'c' → logprob: -2.651111602783203
    3. ' a' → logprob: -3.526111602783203
    4. 'b' → logprob: -4.526111602783203
    5. ' c' → logprob: -4.526111602783203
    6. 'max' → logprob: -4.526111602783203
    7. ' max' → logprob: -5.276111602783203
    8. 'min' → logprob: -6.776111602783203
    9. ' b' → logprob: -7.026111602783203
    10. ' min' → logprob: -7.776111602783203

Token 509: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0076176258735358715
    2. '-' → logprob: -4.882617473602295
    3. ' ' → logprob: -11.757617950439453
    4. '   ' → logprob: -14.132617950439453
    5. '[' → logprob: -14.507617950439453
    6. '       ' → logprob: -15.007617950439453
    7. '  ' → logprob: -15.007617950439453
    8. ' -
' → logprob: -15.132617950439453
    9. '-b' → logprob: -15.257617950439453
    10. ')' → logprob: -15.632617950439453

Token 510: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.001702675479464233
    2. ' c' → logprob: -6.376702785491943
    3. '	c' → logprob: -16.2517032623291
    4. '   ' → logprob: -16.2517032623291
    5. 'min' → logprob: -16.3767032623291
    6. '1' → logprob: -16.7517032623291
    7. 'max' → logprob: -17.0017032623291
    8. 'b' → logprob: -17.1267032623291
    9. ' ' → logprob: -17.5017032623291
    10. '(' → logprob: -17.9392032623291

Token 511: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000992795336060226
    2. ' )' → logprob: -7.000992774963379
    3. '-' → logprob: -10.625992774963379
    4. '+' → logprob: -11.125992774963379
    5. ' -' → logprob: -11.250992774963379
    6. '   ' → logprob: -11.500992774963379
    7. ')
' → logprob: -11.750992774963379
    8. '))' → logprob: -13.000992774963379
    9. ' +' → logprob: -13.125992774963379
    10. '       ' → logprob: -13.250992774963379

Token 512: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.010184773243963718
    2. 'n' → logprob: -4.6351847648620605
    3. 'for' → logprob: -8.135185241699219
    4. 'if' → logprob: -9.510185241699219
    5. '#' → logprob: -10.135185241699219
    6. 'print' → logprob: -11.510185241699219
    7. 'num' → logprob: -12.760185241699219
    8. ' n' → logprob: -12.885185241699219
    9. 'count' → logprob: -13.385185241699219
    10. '```' → logprob: -13.635185241699219

Token 513: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0014379698550328612
    2. ' main' → logprob: -6.626438140869141
    3. 'def' → logprob: -9.12643814086914
    4. 'if' → logprob: -13.25143814086914
    5. 'solve' → logprob: -14.25143814086914
    6. 'run' → logprob: -15.00143814086914
    7. 'process' → logprob: -15.62643814086914
    8. 'read' → logprob: -16.62643814086914
    9. 'calculate' → logprob: -16.87643814086914
    10. '__' → logprob: -16.87643814086914

Token 514: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00133285962510854
    2. '():
' → logprob: -6.626332759857178
    3. '()' → logprob: -12.626333236694336
    4. ' ():' → logprob: -13.001333236694336
    5. '(' → logprob: -14.376333236694336
    6. '():
' → logprob: -14.626333236694336
    7. ':' → logprob: -15.126333236694336
    8. '():

' → logprob: -16.376333236694336
    9. '().' → logprob: -17.501333236694336
    10. 'def' → logprob: -17.751333236694336

Token 515: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023733729496598244
    2. 'n' → logprob: -3.773733615875244
    3. ' n' → logprob: -7.648733615875244
    4. '	n' → logprob: -12.148734092712402
    5. '```' → logprob: -12.523734092712402
    6. '(n' → logprob: -13.148734092712402
    7. ',n' → logprob: -15.523734092712402
    8. '
' → logprob: -15.523734092712402
    9. ',' → logprob: -16.523733139038086
    10. 'def' → logprob: -16.523733139038086

Token 516: ' n' (ID: 297)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.06854143738746643
    2. 'T' → logprob: -3.5685415267944336
    3. ' t' → logprob: -3.8185415267944336
    4. 'n' (adapté à ' n') → logprob: -4.693541526794434
    5. '   ' → logprob: -5.193541526794434
    6. ' T' → logprob: -7.068541526794434
    7. 'q' → logprob: -8.318541526794434
    8. ' n' → logprob: -8.443541526794434
    9. 'import' → logprob: -10.568541526794434
    10. ' ' → logprob: -11.568541526794434

Token 517: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08959492295980453
    2. ',' → logprob: -3.089594841003418
    3. '=' → logprob: -3.214594841003418
    4. '   ' → logprob: -12.964594841003418
    5. ' ,' → logprob: -13.339594841003418
    6. '=int' → logprob: -14.589594841003418
    7. ' =
' → logprob: -14.839594841003418
    8. '.' → logprob: -15.714594841003418
    9. ',k' → logprob: -15.714594841003418
    10. ')' → logprob: -15.964594841003418

Token 518: ' series' (ID: 5594)
  Prédit: 'series'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'series' → logprob: -0.008635726757347584
    2. ' series' → logprob: -4.758635520935059
    3. 'serie' → logprob: -11.383635520935059
    4. 'arr' → logprob: -12.508635520935059
    5. 's' → logprob: -13.133635520935059
    6. 'sequence' → logprob: -13.758635520935059
    7. '   ' → logprob: -14.008635520935059
    8. ' serie' → logprob: -14.133635520935059
    9. 'array' → logprob: -15.758635520935059
    10. '    ' → logprob: -15.758635520935059

Token 519: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.281413733959198
    2. ' =' → logprob: -1.4064137935638428
    3. ',' → logprob: -8.406414031982422
    4. '   ' → logprob: -10.281414031982422
    5. ')' → logprob: -12.906414031982422
    6. '<|end|>' → logprob: -14.156414031982422
    7. ')=' → logprob: -14.406414031982422
    8. ' ' → logprob: -14.781414031982422
    9. '=
' → logprob: -15.156414031982422
    10. '    ' → logprob: -15.406414031982422

Token 520: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.03804149478673935
    2. 'read' → logprob: -3.288041591644287
    3. '   ' → logprob: -16.788042068481445
    4. '	read' → logprob: -18.163042068481445
    5. '    ' → logprob: -20.038042068481445
    6. '  ' → logprob: -20.413042068481445
    7. '(read' → logprob: -21.788042068481445
    8. ' ' → logprob: -22.288042068481445
    9. '.read' → logprob: -22.913042068481445
    10. '_read' → logprob: -23.163042068481445

Token 521: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0007709132041782141
    2. '_' → logprob: -7.2507710456848145
    3. '_line' → logprob: -10.375770568847656
    4. '(' → logprob: -11.500770568847656
    5. '_inputs' → logprob: -12.125770568847656
    6. '_in' → logprob: -12.750770568847656
    7. 'input' → logprob: -13.125770568847656
    8. '_output' → logprob: -13.375770568847656
    9. '()' → logprob: -13.625770568847656
    10. '_n' → logprob: -14.000770568847656

Token 522: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0008323782822117209
    2. '   ' → logprob: -8.000832557678223
    3. '    
' → logprob: -8.000832557678223
    4. '  
' → logprob: -10.375832557678223
    5. '<|end|>' → logprob: -10.500832557678223
    6. '```' → logprob: -10.750832557678223
    7. '	
' → logprob: -10.875832557678223
    8. '
' → logprob: -11.250832557678223
    9. 'even' → logprob: -12.000832557678223
    10. 'def' → logprob: -12.125832557678223

Token 523: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05113482102751732
    2. 'even' → logprob: -3.4261348247528076
    3. '
' → logprob: -4.4261345863342285
    4. '    
' → logprob: -6.4261345863342285
    5. ' even' → logprob: -6.8011345863342285
    6. '<|end|>' → logprob: -7.1761345863342285
    7. '_even' → logprob: -7.1761345863342285
    8. '	e' → logprob: -8.176135063171387
    9. '```' → logprob: -8.551135063171387
    10. '	
' → logprob: -8.676135063171387

Token 524: ' odd' (ID: 14210)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.10827017575502396
    2. '   ' → logprob: -2.4832701683044434
    3. ' even' → logprob: -3.9832701683044434
    4. 'odd' (adapté à ' odd') → logprob: -8.483270645141602
    5. '```' → logprob: -8.733270645141602
    6. '       ' → logprob: -10.233270645141602
    7. '_even' → logprob: -10.233270645141602
    8. ' ' → logprob: -10.483270645141602
    9. '  ' → logprob: -11.983270645141602
    10. 'evenodd' → logprob: -11.983270645141602

Token 525: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -0.3136732876300812
    2. '_vals' → logprob: -1.3136732578277588
    3. '_val' → logprob: -8.68867301940918
    4. '_' → logprob: -8.81367301940918
    5. '_counts' → logprob: -10.06367301940918
    6. '_d' → logprob: -11.06367301940918
    7. '_dic' → logprob: -11.56367301940918
    8. '_count' → logprob: -12.06367301940918
    9. '_values' → logprob: -12.43867301940918
    10. '_vec' → logprob: -12.93867301940918

Token 526: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08119095116853714
    2. '=' → logprob: -2.581191062927246
    3. ',' → logprob: -6.081191062927246
    4. ' ,' → logprob: -11.456191062927246
    5. '   ' → logprob: -13.581191062927246
    6. ' ' → logprob: -14.706191062927246
    7. '  ' → logprob: -15.081191062927246
    8. ' =
' → logprob: -15.456191062927246
    9. ')' → logprob: -15.956191062927246
    10. '    ' → logprob: -16.20619010925293

Token 527: ' create' (ID: 2501)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.006756340153515339
    2. 'create' → logprob: -5.00675630569458
    3. ' create' → logprob: -10.631756782531738
    4. ' {}' → logprob: -11.131756782531738
    5. '{}
' → logprob: -14.006756782531738
    6. '={}' → logprob: -14.506756782531738
    7. '   ' → logprob: -14.881756782531738
    8. '{})' → logprob: -15.631756782531738
    9. '=create' → logprob: -16.006755828857422
    10. '{}

' → logprob: -16.131755828857422

Token 528: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.005973469465970993
    2. '{}' → logprob: -5.2559733390808105
    3. '{}_' → logprob: -7.3809733390808105
    4. '_dict' → logprob: -9.880973815917969
    5. 'count' → logprob: -10.255973815917969
    6. '_' → logprob: -10.755973815917969
    7. '{}
' → logprob: -12.880973815917969
    8. '{' → logprob: -13.005973815917969
    9. 'dict' → logprob: -14.130973815917969
    10. '_counter' → logprob: -14.505973815917969

Token 529: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -0.027769478037953377
    2. '{}' → logprob: -3.6527695655822754
    3. '{}_' → logprob: -7.152769565582275
    4. 'dict' → logprob: -7.902769565582275
    5. '_' → logprob: -8.527769088745117
    6. '{' → logprob: -9.527769088745117
    7. '{}
' → logprob: -11.777769088745117
    8. '(' → logprob: -12.277769088745117
    9. ' {}' → logprob: -12.652769088745117
    10. 's' → logprob: -12.777769088745117

Token 530: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.011061973869800568
    2. '()
' → logprob: -4.511062145233154
    3. '()
' → logprob: -11.386061668395996
    4. '()

' → logprob: -13.136061668395996
    5. '()\' → logprob: -14.386061668395996
    6. '(),' → logprob: -16.886062622070312
    7. ' ()' → logprob: -17.011062622070312
    8. '())' → logprob: -17.136062622070312
    9. '();' → logprob: -17.136062622070312
    10. '   ' → logprob: -17.386062622070312

Token 531: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.051218967884778976
    2. ' even' → logprob: -3.4262189865112305
    3. 'even' → logprob: -4.0512189865112305
    4. '    
' → logprob: -11.67621898651123
    5. '_even' → logprob: -12.80121898651123
    6. ' ' → logprob: -13.05121898651123
    7. '```' → logprob: -13.80121898651123
    8. '   ' → logprob: -13.92621898651123
    9. ' for' → logprob: -14.30121898651123
    10. '
' → logprob: -14.55121898651123

Token 532: ' even' (ID: 1952)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' (adapté à ' even') → logprob: -0.00012356207298580557
    2. ' even' → logprob: -9.000123977661133
    3. '   ' → logprob: -16.875123977661133
    4. '_even' → logprob: -19.625123977661133
    5. 'eve' → logprob: -19.875123977661133
    6. ' ' → logprob: -20.250123977661133
    7. 'ev' → logprob: -20.500123977661133
    8. 'odd' → logprob: -20.500123977661133
    9. 'e' → logprob: -20.875123977661133
    10. 'for' → logprob: -21.000123977661133

Token 533: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -3.4121114822482923e-06
    2. 'dict' → logprob: -13.250003814697266
    3. '_d' → logprob: -14.750003814697266
    4. '_def' → logprob: -15.000003814697266
    5. '"_' → logprob: -16.375003814697266
    6. '._' → logprob: -16.500003814697266
    7. '_DICT' → logprob: -16.500003814697266
    8. '_' → logprob: -16.750003814697266
    9. 'def' → logprob: -16.875003814697266
    10. '_list' → logprob: -17.000003814697266

Token 534: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6936736106872559
    2. ' =' → logprob: -0.6936736106872559
    3. ',' → logprob: -7.693673610687256
    4. '   ' → logprob: -10.193674087524414
    5. '(' → logprob: -11.443674087524414
    6. ' =
' → logprob: -11.943674087524414
    7. '=create' → logprob: -13.068674087524414
    8. '<|end|>' → logprob: -13.068674087524414
    9. '()' → logprob: -13.193674087524414
    10. ' ' → logprob: -13.193674087524414

Token 535: ' create' (ID: 2501)
  Prédit: 'create'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'create' → logprob: -0.06465373188257217
    2. ' create' → logprob: -2.8146536350250244
    3. '{}' → logprob: -5.9396538734436035
    4. '(create' → logprob: -11.189653396606445
    5. '.create' → logprob: -11.439653396606445
    6. '	create' → logprob: -11.689653396606445
    7. ' {}' → logprob: -11.689653396606445
    8. '=create' → logprob: -12.689653396606445
    9. '{' → logprob: -12.814653396606445
    10. 'update' → logprob: -15.189653396606445

Token 536: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -4.429896944202483e-05
    2. 'count' → logprob: -10.625043869018555
    3. '_dict' → logprob: -11.000043869018555
    4. '{}_' → logprob: -13.375043869018555
    5. '{}' → logprob: -14.125043869018555
    6. 'dict' → logprob: -15.000043869018555
    7. '_counts' → logprob: -15.750043869018555
    8. '{' → logprob: -15.750043869018555
    9. 'Count' → logprob: -16.000043869018555
    10. '._' → logprob: -17.500043869018555

Token 537: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -0.00010962257510982454
    2. 'dict' → logprob: -9.125109672546387
    3. '{}' → logprob: -15.500109672546387
    4. '_DICT' → logprob: -15.625109672546387
    5. '{}_' → logprob: -16.37510871887207
    6. 'Dict' → logprob: -16.37510871887207
    7. '()' → logprob: -17.62510871887207
    8. '_dic' → logprob: -17.62510871887207
    9. '{' → logprob: -18.00010871887207
    10. '_' → logprob: -18.12510871887207

Token 538: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00026264708139933646
    2. '()
' → logprob: -8.250262260437012
    3. '()
' → logprob: -14.375262260437012
    4. '()

' → logprob: -15.500262260437012
    5. ' ()' → logprob: -15.750262260437012
    6. '()]' → logprob: -15.875262260437012
    7. '   ' → logprob: -16.000263214111328
    8. '()`' → logprob: -17.125263214111328
    9. '()"' → logprob: -17.125263214111328
    10. '()\' → logprob: -17.500263214111328

Token 539: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005375691689550877
    2. 'process' → logprob: -5.255375862121582
    3. ' process' → logprob: -8.880375862121582
    4. '	process' → logprob: -13.005375862121582
    5. '(process' → logprob: -15.630375862121582
    6. '
' → logprob: -15.755375862121582
    7. '    
' → logprob: -16.130374908447266
    8. '.process' → logprob: -17.005374908447266
    9. '```' → logprob: -17.630374908447266
    10. '       ' → logprob: -17.880374908447266

Token 540: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' (adapté à ' process') → logprob: -0.0181878749281168
    2. '   ' → logprob: -4.268187999725342
    3. ' process' → logprob: -5.518187999725342
    4. '	process' → logprob: -12.893187522888184
    5. '(process' → logprob: -15.393187522888184
    6. '  ' → logprob: -15.518187522888184
    7. '.process' → logprob: -15.893187522888184
    8. ' ' → logprob: -16.3931884765625
    9. 'update' → logprob: -17.0181884765625
    10. 'proces' → logprob: -17.0181884765625

Token 541: '_series' (ID: 86499)
  Prédit: '_series'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_series' → logprob: -8.7689099018462e-05
    2. 'series' → logprob: -9.50008773803711
    3. '_' → logprob: -11.50008773803711
    4. '(series' → logprob: -12.87508773803711
    5. '_ser' → logprob: -17.00008773803711
    6. '_serial' → logprob: -17.25008773803711
    7. 's' → logprob: -17.37508773803711
    8. ' series' → logprob: -18.50008773803711
    9. '_(' → logprob: -18.62508773803711
    10. '\' → logprob: -19.25008773803711

Token 542: '(series' (ID: 155571)
  Prédit: '(series'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(series' → logprob: -1.8624639324116288e-06
    2. '(' → logprob: -13.250001907348633
    3. ' (' → logprob: -17.500001907348633
    4. 'series' → logprob: -17.625001907348633
    5. '(serial' → logprob: -18.875001907348633
    6. '(sequence' → logprob: -19.000001907348633
    7. '(s' → logprob: -20.000001907348633
    8. ' series' → logprob: -20.250001907348633
    9. '(n' → logprob: -21.875001907348633
    10. '(se' → logprob: -22.625001907348633

Token 543: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004261468129698187
    2. ',n' → logprob: -7.875426292419434
    3. ' ,' → logprob: -10.625426292419434
    4. '   ' → logprob: -11.625426292419434
    5. '(n' → logprob: -12.000426292419434
    6. ',
' → logprob: -12.750426292419434
    7. 'even' → logprob: -13.750426292419434
    8. '(' → logprob: -14.000426292419434
    9. 'n' → logprob: -14.625426292419434
    10. ',e' → logprob: -15.000426292419434

Token 544: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00317783304490149
    2. ' n' → logprob: -5.753177642822266
    3. '   ' → logprob: -15.878177642822266
    4. '	n' → logprob: -17.253177642822266
    5. ')n' → logprob: -18.878177642822266
    6. 'len' → logprob: -19.253177642822266
    7. '_n' → logprob: -20.753177642822266
    8. ')' → logprob: -20.878177642822266
    9. '(n' → logprob: -21.753177642822266
    10. ',n' → logprob: -22.128177642822266

Token 545: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.398067828034982e-05
    2. '   ' → logprob: -9.62507438659668
    3. ' ,' → logprob: -12.25007438659668
    4. 'even' → logprob: -13.25007438659668
    5. ',
' → logprob: -14.37507438659668
    6. ')' → logprob: -14.87507438659668
    7. ',e' → logprob: -15.62507438659668
    8. ' even' → logprob: -16.62507438659668
    9. '[' → logprob: -17.12507438659668
    10. '```' → logprob: -17.25007438659668

Token 546: ' even' (ID: 1952)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.018265709280967712
    2. ' even' → logprob: -4.018265724182129
    3. 'odd' → logprob: -9.143265724182129
    4. ' odd' → logprob: -11.768265724182129
    5. '_even' → logprob: -14.018265724182129
    6. 'evenodd' → logprob: -15.768265724182129
    7. '   ' → logprob: -16.518264770507812
    8. 'e' → logprob: -17.393264770507812
    9. ')' → logprob: -17.518264770507812
    10. 'Even' → logprob: -18.143264770507812

Token 547: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -2.45848218582978e-06
    2. 'dict' → logprob: -13.25000286102295
    3. '_' → logprob: -14.87500286102295
    4. '_d' → logprob: -15.87500286102295
    5. '_dic' → logprob: -16.875001907348633
    6. '_even' → logprob: -17.500001907348633
    7. ')_' → logprob: -17.750001907348633
    8. ',' → logprob: -18.000001907348633
    9. '_dictionary' → logprob: -18.000001907348633
    10. ')' → logprob: -18.000001907348633

Token 548: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.2994620242971e-06
    2. ' ,' → logprob: -11.750008583068848
    3. '   ' → logprob: -15.750008583068848
    4. ',
' → logprob: -15.875008583068848
    5. ',

' → logprob: -17.87500762939453
    6. ')' → logprob: -18.00000762939453
    7. '‌,' → logprob: -18.12500762939453
    8. '=' → logprob: -19.37500762939453
    9. 'odd' → logprob: -19.37500762939453
    10. '_,' → logprob: -20.00000762939453

Token 549: ' odd' (ID: 14210)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.20141470432281494
    2. ' odd' → logprob: -1.701414704322815
    3. 'od' → logprob: -13.951415061950684
    4. '   ' → logprob: -15.326415061950684
    5. 'Odd' → logprob: -16.326414108276367
    6. ')' → logprob: -16.951414108276367
    7. ' ' → logprob: -17.451414108276367
    8. 'ood' → logprob: -17.701414108276367
    9. 'old' → logprob: -18.201414108276367
    10. '```' → logprob: -18.451414108276367

Token 550: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -2.5822400857578032e-05
    2. 'dict' → logprob: -10.625025749206543
    3. '_' → logprob: -14.250025749206543
    4. ')_' → logprob: -15.000025749206543
    5. 'odd' → logprob: -15.500025749206543
    6. '_dic' → logprob: -16.37502670288086
    7. ''_' → logprob: -16.87502670288086
    8. ')' → logprob: -16.87502670288086
    9. '_DICT' → logprob: -17.00002670288086
    10. '```' → logprob: -17.25002670288086

Token 551: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.779520092299208e-05
    2. ')
' → logprob: -9.750078201293945
    3. '   ' → logprob: -10.875078201293945
    4. ' )' → logprob: -14.875078201293945
    5. ')

' → logprob: -16.125078201293945
    6. ' ' → logprob: -18.375078201293945
    7. ')
' → logprob: -18.625078201293945
    8. '),' → logprob: -18.750078201293945
    9. '
' → logprob: -18.875078201293945
    10. '))' → logprob: -19.125078201293945

Token 552: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017514610663056374
    2. 'even' → logprob: -7.25175142288208
    3. '
' → logprob: -7.75175142288208
    4. '    
' → logprob: -8.001751899719238
    5. 'odd' → logprob: -8.376751899719238
    6. ' even' → logprob: -11.126751899719238
    7. '<|end|>' → logprob: -11.876751899719238
    8. 'od' → logprob: -12.126751899719238
    9. ' ' → logprob: -12.251751899719238
    10. '        
' → logprob: -13.251751899719238

Token 553: ' odd' (ID: 14210)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' (adapté à ' odd') → logprob: -0.5373625755310059
    2. '   ' → logprob: -0.9123625755310059
    3. 'even' → logprob: -4.287362575531006
    4. ' odd' → logprob: -8.412363052368164
    5. ' ' → logprob: -9.412363052368164
    6. 'od' → logprob: -10.412363052368164
    7. ' even' → logprob: -11.162363052368164
    8. '  ' → logprob: -11.162363052368164
    9. '    
' → logprob: -11.287363052368164
    10. '```' → logprob: -11.787363052368164

Token 554: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -3.054500666621607e-06
    2. '_counts' → logprob: -13.50000286102295
    3. 'vals' → logprob: -14.00000286102295
    4. '_values' → logprob: -14.75000286102295
    5. '_val' → logprob: -16.500003814697266
    6. 'Vals' → logprob: -17.125003814697266
    7. ' =' → logprob: -17.250003814697266
    8. '   ' → logprob: -17.250003814697266
    9. '_dict' → logprob: -17.625003814697266
    10. '[' → logprob: -17.750003814697266

Token 555: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.037146639078855515
    2. '=' → logprob: -3.41214656829834
    3. ',' → logprob: -5.66214656829834
    4. ' ,' → logprob: -11.03714656829834
    5. '   ' → logprob: -13.91214656829834
    6. ' =
' → logprob: -14.28714656829834
    7. ' ' → logprob: -14.78714656829834
    8. '	' → logprob: -15.41214656829834
    9. ' =
' → logprob: -15.41214656829834
    10. '[' → logprob: -15.53714656829834

Token 556: ' extract' (ID: 13424)
  Prédit: 'extract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'extract' → logprob: -0.004081009421497583
    2. ' extract' → logprob: -5.504080772399902
    3. 'sort' → logprob: -13.254080772399902
    4. '   ' → logprob: -14.129080772399902
    5. ' sort' → logprob: -16.62908172607422
    6. 'ex' → logprob: -16.62908172607422
    7. '.extract' → logprob: -17.50408172607422
    8. 'sorted' → logprob: -17.87908172607422
    9. 'extr' → logprob: -19.37908172607422
    10. '_extract' → logprob: -19.37908172607422

Token 557: '_counts' (ID: 61971)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.43674948811531067
    2. '_counts' → logprob: -1.0617494583129883
    3. '(count' → logprob: -5.186749458312988
    4. '(e' → logprob: -6.811749458312988
    5. '(_' → logprob: -7.311749458312988
    6. 's' → logprob: -8.186749458312988
    7. '(s' → logprob: -8.311749458312988
    8. 'counts' → logprob: -9.561749458312988
    9. '_count' → logprob: -11.436749458312988
    10. '(o' → logprob: -11.686749458312988

Token 558: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.392202976712724e-06
    2. '(e' → logprob: -12.000006675720215
    3. '(o' → logprob: -15.750006675720215
    4. ' (' → logprob: -17.2500057220459
    5. 'odd' → logprob: -17.7500057220459
    6. '(ord' → logprob: -18.2500057220459
    7. '((' → logprob: -19.5000057220459
    8. '(count' → logprob: -19.6250057220459
    9. '(old' → logprob: -19.6250057220459
    10. '(
' → logprob: -19.8750057220459

Token 559: 'odd' (ID: 18303)
  Prédit: 'odd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.002506101271137595
    2. '(' → logprob: -6.002506256103516
    3. ' odd' → logprob: -10.502506256103516
    4. 'even' → logprob: -13.127506256103516
    5. 'od' → logprob: -14.252506256103516
    6. 'Odd' → logprob: -15.502506256103516
    7. '(o' → logprob: -16.252506256103516
    8. '   ' → logprob: -18.752506256103516
    9. ')' → logprob: -18.877506256103516
    10. 'old' → logprob: -19.127506256103516

Token 560: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -5.9153885558771435e-06
    2. 'dict' → logprob: -12.625005722045898
    3. '_' → logprob: -13.875005722045898
    4. ')' → logprob: -14.375005722045898
    5. '_dic' → logprob: -14.750005722045898
    6. ')_' → logprob: -15.250005722045898
    7. '_DICT' → logprob: -15.875005722045898
    8. '_d' → logprob: -16.5000057220459
    9. 'Dict' → logprob: -17.3750057220459
    10. '
' → logprob: -17.3750057220459

Token 561: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11571626365184784
    2. ')
' → logprob: -2.2407162189483643
    3. '   ' → logprob: -6.115716457366943
    4. '(' → logprob: -7.990716457366943
    5. ',' → logprob: -8.990715980529785
    6. '()
' → logprob: -9.615715980529785
    7. '[' → logprob: -10.490715980529785
    8. '())
' → logprob: -10.615715980529785
    9. '()' → logprob: -10.865715980529785
    10. '())' → logprob: -11.365715980529785

Token 562: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44618743658065796
    2. 'even' → logprob: -1.1961874961853027
    3. ' even' → logprob: -2.9461874961853027
    4. '    
' → logprob: -6.071187496185303
    5. '
' → logprob: -6.571187496185303
    6. '[' → logprob: -8.071187019348145
    7. '_even' → logprob: -8.071187019348145
    8. ',' → logprob: -8.946187019348145
    9. '<|end|>' → logprob: -9.071187019348145
    10. 'odd' → logprob: -9.321187019348145

Token 563: ' even' (ID: 1952)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' (adapté à ' even') → logprob: -0.04549964889883995
    2. ' even' → logprob: -3.420499563217163
    3. '   ' → logprob: -4.545499801635742
    4. 'odd' → logprob: -6.795499801635742
    5. ' odd' → logprob: -10.545499801635742
    6. ' ' → logprob: -11.420499801635742
    7. '  ' → logprob: -12.420499801635742
    8. 'sort' → logprob: -12.920499801635742
    9. '_even' → logprob: -13.295499801635742
    10. 'evenodd' → logprob: -13.545499801635742

Token 564: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -2.9875325708417222e-05
    2. '_val' → logprob: -10.875029563903809
    3. '_' → logprob: -12.000029563903809
    4. '```' → logprob: -13.125029563903809
    5. 'vals' → logprob: -14.375029563903809
    6. 'Vals' → logprob: -14.500029563903809
    7. ')_' → logprob: -15.250029563903809
    8. ' _' → logprob: -15.875029563903809
    9. '\' → logprob: -16.125030517578125
    10. '=_' → logprob: -16.250030517578125

Token 565: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740770161151886
    2. '=' → logprob: -0.9740769863128662
    3. '＝' → logprob: -17.349077224731445
    4. '_=' → logprob: -18.849077224731445
    5. '_' → logprob: -18.974077224731445
    6. ')' → logprob: -19.599077224731445
    7. ' ' → logprob: -19.724077224731445
    8. '.=' → logprob: -19.974077224731445
    9. '=}' → logprob: -20.224077224731445
    10. ',' → logprob: -20.224077224731445

Token 566: ' extract' (ID: 13424)
  Prédit: 'extract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'extract' → logprob: -0.10020699352025986
    2. ' extract' → logprob: -2.3502070903778076
    3. '.extract' → logprob: -15.475207328796387
    4. 'ex' → logprob: -17.22520637512207
    5. '_extract' → logprob: -17.35020637512207
    6. '	ex' → logprob: -19.35020637512207
    7. 'extr' → logprob: -19.35020637512207
    8. ' ' → logprob: -19.60020637512207
    9. 'Extract' → logprob: -20.35020637512207
    10. '   ' → logprob: -20.47520637512207

Token 567: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -4.320199877838604e-07
    2. '_vals' → logprob: -15.5
    3. '_values' → logprob: -17.25
    4. 'Counts' → logprob: -17.375
    5. 'counts' → logprob: -17.75
    6. ')_' → logprob: -18.5
    7. 's' → logprob: -18.5
    8. '_count' → logprob: -18.625
    9. '```' → logprob: -18.625
    10. '_codes' → logprob: -19.125

Token 568: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.0006797884125262499
    2. '(' → logprob: -7.500679969787598
    3. '(count' → logprob: -9.000679969787598
    4. 'count' → logprob: -12.750679969787598
    5. ' (' → logprob: -15.625679969787598
    6. '(ev' → logprob: -15.875679969787598
    7. '```' → logprob: -16.12567901611328
    8. 'even' → logprob: -16.75067901611328
    9. '(
' → logprob: -16.75067901611328
    10. 'Count' → logprob: -16.87567901611328

Token 569: 'ven' (ID: 1066)
  Prédit: 'ven'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ven' → logprob: -0.0006296366918832064
    2. 'even' → logprob: -7.375629425048828
    3. '[' → logprob: -14.250629425048828
    4. 'vent' → logprob: -14.375629425048828
    5. 'odd' → logprob: -14.750629425048828
    6. 'vens' → logprob: -14.875629425048828
    7. '```' → logprob: -15.250629425048828
    8. '{' → logprob: -15.375629425048828
    9. 'v' → logprob: -15.500629425048828
    10. 'vn' → logprob: -16.625629425048828

Token 570: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -5.836499985889532e-05
    2. 'dict' → logprob: -10.2500581741333
    3. '_vals' → logprob: -11.6250581741333
    4. '_counts' → logprob: -12.2500581741333
    5. 's' → logprob: -12.6250581741333
    6. ')' → logprob: -13.3750581741333
    7. '_' → logprob: -13.6250581741333
    8. '_val' → logprob: -14.2500581741333
    9. 'even' → logprob: -14.6250581741333
    10. ')_' → logprob: -14.6250581741333

Token 571: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06684056669473648
    2. '   ' → logprob: -2.941840648651123
    3. ')
' → logprob: -4.441840648651123
    4. '<|end|>' → logprob: -10.191840171813965
    5. '()' → logprob: -10.566840171813965
    6. '()
' → logprob: -11.441840171813965
    7. '[' → logprob: -12.191840171813965
    8. '    
' → logprob: -12.191840171813965
    9. '(' → logprob: -12.691840171813965
    10. '
' → logprob: -12.816840171813965

Token 572: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09702996909618378
    2. 'odd' → logprob: -2.5970299243927
    3. ' odd' → logprob: -4.222030162811279
    4. 'even' → logprob: -6.222030162811279
    5. ' even' → logprob: -6.722030162811279
    6. ' ' → logprob: -10.097029685974121
    7. '  ' → logprob: -10.847029685974121
    8. ' sort' → logprob: -11.222029685974121
    9. 'sort' → logprob: -11.472029685974121
    10. '    
' → logprob: -11.972029685974121

Token 573: ' odd' (ID: 14210)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' (adapté à ' odd') → logprob: -0.015793032944202423
    2. ' odd' → logprob: -4.5157928466796875
    3. '   ' → logprob: -5.3907928466796875
    4. 'even' → logprob: -8.765792846679688
    5. ' even' → logprob: -12.140792846679688
    6. ' ' → logprob: -12.515792846679688
    7. '  ' → logprob: -12.640792846679688
    8. 'od' → logprob: -13.015792846679688
    9. 'sort' → logprob: -13.515792846679688
    10. '    
' → logprob: -14.015792846679688

Token 574: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -1.2948405128554441e-05
    2. '_val' → logprob: -12.50001335144043
    3. '_' → logprob: -12.62501335144043
    4. ' _' → logprob: -13.75001335144043
    5. '._' → logprob: -14.12501335144043
    6. 'vals' → logprob: -14.50001335144043
    7. ')_' → logprob: -14.62501335144043
    8. '```' → logprob: -14.75001335144043
    9. 'Vals' → logprob: -15.25001335144043
    10. '   ' → logprob: -15.25001335144043

Token 575: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6970070600509644
    2. '.sort' → logprob: -0.9470070600509644
    3. ',' → logprob: -2.197007179260254
    4. '.' → logprob: -6.322007179260254
    5. ' =' → logprob: -6.947007179260254
    6. 'sort' → logprob: -9.197007179260254
    7. ' sort' → logprob: -11.697007179260254
    8. '	sort' → logprob: -11.822007179260254
    9. '.=' → logprob: -12.697007179260254
    10. '.reverse' → logprob: -12.947007179260254

Token 576: ' sort' (ID: 4506)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.10020667314529419
    2. ' sort' → logprob: -2.3502066135406494
    3. '	sort' → logprob: -17.35020637512207
    4. '(sort' → logprob: -17.97520637512207
    5. 'sorted' → logprob: -18.35020637512207
    6. ' ' → logprob: -19.35020637512207
    7. '   ' → logprob: -19.60020637512207
    8. '.sort' → logprob: -20.22520637512207
    9. ' sorted' → logprob: -20.60020637512207
    10. 's' → logprob: -21.85020637512207

Token 577: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -7.5649528298527e-05
    2. '_vals' → logprob: -9.875075340270996
    3. '(' → logprob: -11.250075340270996
    4. '_' → logprob: -11.625075340270996
    5. '(_' → logprob: -13.500075340270996
    6. '_values' → logprob: -14.875075340270996
    7. '_scores' → logprob: -15.250075340270996
    8. '_count' → logprob: -16.500076293945312
    9. '_(' → logprob: -17.250076293945312
    10. 'Counts' → logprob: -17.500076293945312

Token 578: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.935296834039036e-06
    2. '((' → logprob: -13.25000286102295
    3. '(e' → logprob: -14.25000286102295
    4. ' (' → logprob: -16.250003814697266
    5. '(`' → logprob: -16.500003814697266
    6. '([' → logprob: -16.625003814697266
    7. '```' → logprob: -17.000003814697266
    8. '("("' → logprob: -17.500003814697266
    9. '(
' → logprob: -18.125003814697266
    10. '(ord' → logprob: -18.250003814697266

Token 579: 'odd' (ID: 18303)
  Prédit: 'odd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -2.6895233531831764e-05
    2. ' odd' → logprob: -11.50002670288086
    3. '(' → logprob: -11.87502670288086
    4. 'even' → logprob: -12.12502670288086
    5. 'od' → logprob: -12.37502670288086
    6. ')' → logprob: -15.75002670288086
    7. '[' → logprob: -18.87502670288086
    8. 'Odd' → logprob: -19.75002670288086
    9. 'ood' → logprob: -20.12502670288086
    10. ')(' → logprob: -20.62502670288086

Token 580: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -4.990154047845863e-05
    2. 'vals' → logprob: -10.250049591064453
    3. '(vals' → logprob: -12.000049591064453
    4. '_val' → logprob: -12.875049591064453
    5. ')_' → logprob: -13.625049591064453
    6. ')' → logprob: -13.625049591064453
    7. '_' → logprob: -13.750049591064453
    8. ',_' → logprob: -14.750049591064453
    9. '(' → logprob: -15.125049591064453
    10. '(_' → logprob: -15.125049591064453

Token 581: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1286955624818802
    2. ',' → logprob: -2.378695487976074
    3. '(' → logprob: -4.503695487976074
    4. '   ' → logprob: -5.003695487976074
    5. '()' → logprob: -5.378695487976074
    6. '[' → logprob: -6.253695487976074
    7. '<|end|>' → logprob: -6.753695487976074
    8. '(e' → logprob: -7.253695487976074
    9. 'even' → logprob: -7.253695487976074
    10. ')
' → logprob: -8.628695487976074

Token 582: '   ' (ID: 271)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.033748168498277664
    2. '   ' → logprob: -3.658748149871826
    3. ' even' → logprob: -4.908748149871826
    4. '_even' → logprob: -11.158748626708984
    5. '    
' → logprob: -12.283748626708984
    6. '[' → logprob: -12.283748626708984
    7. 'Even' → logprob: -12.658748626708984
    8. '```' → logprob: -12.783748626708984
    9. '<|end|>' → logprob: -12.783748626708984
    10. 'evenodd' → logprob: -13.533748626708984

Token 583: ' even' (ID: 1952)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' (adapté à ' even') → logprob: -0.05042857304215431
    2. ' even' → logprob: -3.050428628921509
    3. '   ' → logprob: -6.30042839050293
    4. ' ' → logprob: -13.05042839050293
    5. '  ' → logprob: -15.05042839050293
    6. '_even' → logprob: -15.05042839050293
    7. '[' → logprob: -15.17542839050293
    8. 'Even' → logprob: -15.30042839050293
    9. '    
' → logprob: -15.30042839050293
    10. '```' → logprob: -15.67542839050293

Token 584: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -0.0001625379954930395
    2. '_' → logprob: -9.250162124633789
    3. '_val' → logprob: -9.750162124633789
    4. '_counts' → logprob: -13.000162124633789
    5. ')_' → logprob: -13.625162124633789
    6. '```' → logprob: -13.750162124633789
    7. ' _' → logprob: -13.875162124633789
    8. 'vals' → logprob: -14.500162124633789
    9. ''_' → logprob: -15.250162124633789
    10. '(vals' → logprob: -15.375162124633789

Token 585: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326204538345337
    2. ' =' → logprob: -1.3132619857788086
    3. '_' → logprob: -16.563262939453125
    4. ')' → logprob: -17.063262939453125
    5. '<|end|>' → logprob: -17.063262939453125
    6. '_=' → logprob: -17.313262939453125
    7. ',' → logprob: -17.313262939453125
    8. '[' → logprob: -17.563262939453125
    9. '＝' → logprob: -17.688262939453125
    10. ' ' → logprob: -18.188262939453125

Token 586: ' sort' (ID: 4506)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.2519296407699585
    2. ' sort' → logprob: -1.5019296407699585
    3. '(sort' → logprob: -15.12692928314209
    4. '	sort' → logprob: -15.87692928314209
    5. 'even' → logprob: -16.126930236816406
    6. 'sorted' → logprob: -17.751930236816406
    7. ' even' → logprob: -18.751930236816406
    8. ' ' → logprob: -19.126930236816406
    9. '.sort' → logprob: -19.376930236816406
    10. '_sort' → logprob: -19.626930236816406

Token 587: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -2.7252845029579476e-05
    2. '(e' → logprob: -10.625027656555176
    3. 'counts' → logprob: -13.625027656555176
    4. 'Counts' → logprob: -14.625027656555176
    5. '_scores' → logprob: -14.875027656555176
    6. 's' → logprob: -15.125027656555176
    7. '_even' → logprob: -15.500027656555176
    8. 'even' → logprob: -16.00002670288086
    9. '_values' → logprob: -16.37502670288086
    10. '(' → logprob: -16.50002670288086

Token 588: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.0024768433067947626
    2. '(' → logprob: -6.002476692199707
    3. 'even' → logprob: -14.627476692199707
    4. '```' → logprob: -15.127476692199707
    5. '(
' → logprob: -15.502476692199707
    6. ' (' → logprob: -15.877476692199707
    7. '(ev' → logprob: -16.877477645874023
    8. '(equal' → logprob: -18.252477645874023
    9. '((' → logprob: -18.752477645874023
    10. '(

' → logprob: -18.877477645874023

Token 589: 'ven' (ID: 1066)
  Prédit: 'ven'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ven' → logprob: -0.0067405966110527515
    2. 'even' → logprob: -5.006740570068359
    3. '[' → logprob: -11.00674057006836
    4. '(e' → logprob: -12.63174057006836
    5. '(' → logprob: -13.25674057006836
    6. 'vens' → logprob: -13.25674057006836
    7. ' even' → logprob: -14.75674057006836
    8. '_even' → logprob: -14.75674057006836
    9. 'v' → logprob: -15.00674057006836
    10. '```' → logprob: -15.63174057006836

Token 590: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -0.00026538874953985214
    2. 'vals' → logprob: -8.250265121459961
    3. '(vals' → logprob: -13.750265121459961
    4. '_val' → logprob: -13.750265121459961
    5. '_' → logprob: -14.250265121459961
    6. '```' → logprob: -15.125265121459961
    7. 'Vals' → logprob: -15.250265121459961
    8. '_counts' → logprob: -15.375265121459961
    9. '_v' → logprob: -16.12526512145996
    10. 's' → logprob: -16.12526512145996

Token 591: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.2166411478538066e-05
    2. ')
' → logprob: -10.250052452087402
    3. '   ' → logprob: -12.625052452087402
    4. '[' → logprob: -12.625052452087402
    5. '()' → logprob: -12.625052452087402
    6. '())' → logprob: -13.250052452087402
    7. '<|end|>' → logprob: -13.500052452087402
    8. '))' → logprob: -14.125052452087402
    9. ' )' → logprob: -14.250052452087402
    10. ']' → logprob: -14.625052452087402

Token 592: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009705807082355022
    2. ' if' → logprob: -5.259706020355225
    3. '```' → logprob: -5.634706020355225
    4. 'if' → logprob: -7.509706020355225
    5. '	if' → logprob: -8.759705543518066
    6. '[' → logprob: -9.384705543518066
    7. '<|end|>' → logprob: -9.634705543518066
    8. ',' → logprob: -11.259705543518066
    9. '``' → logprob: -12.259705543518066
    10. '    
' → logprob: -13.009705543518066

Token 593: ' odd' (ID: 14210)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8751729726791382
    2. 'if' → logprob: -1.1251729726791382
    3. ' if' → logprob: -1.3751729726791382
    4. 'mixed' → logprob: -5.875173091888428
    5. 'single' → logprob: -6.625173091888428
    6. ' mixed' → logprob: -6.750173091888428
    7. ' single' → logprob: -7.875173091888428
    8. '[' → logprob: -10.50017261505127
    9. '```' → logprob: -10.50017261505127
    10. '	if' → logprob: -10.62517261505127

Token 594: '_len' (ID: 13683)
  Prédit: '_vals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_vals' → logprob: -0.0010869937250390649
    2. '_' → logprob: -7.126087188720703
    3. '_val' → logprob: -8.501087188720703
    4. ',_' → logprob: -11.001087188720703
    5. ')_' → logprob: -11.376087188720703
    6. ',' → logprob: -11.751087188720703
    7. ' _' → logprob: -12.001087188720703
    8. '_,' → logprob: -12.001087188720703
    9. '_vars' → logprob: -12.376087188720703
    10. '```' → logprob: -12.376087188720703

Token 595: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026563387364149094
    2. '=' → logprob: -3.6515634059906006
    3. ',' → logprob: -8.52656364440918
    4. '(' → logprob: -11.02656364440918
    5. 's' → logprob: -11.27656364440918
    6. ' ' → logprob: -11.65156364440918
    7. '   ' → logprob: -12.40156364440918
    8. ' ==' → logprob: -12.65156364440918
    9. '()' → logprob: -12.65156364440918
    10. '<|end|>' → logprob: -12.65156364440918

Token 596: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.03804194927215576
    2. 'len' → logprob: -3.2880420684814453
    3. '(len' → logprob: -14.538042068481445
    4. '	len' → logprob: -17.538042068481445
    5. '=len' → logprob: -18.663042068481445
    6. '[len' → logprob: -19.163042068481445
    7. ',len' → logprob: -20.413042068481445
    8. ' ' → logprob: -21.413042068481445
    9. '   ' → logprob: -21.663042068481445
    10. '<len' → logprob: -22.038042068481445

Token 597: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.3199920178740285e-05
    2. ' (' → logprob: -10.750022888183594
    3. '(e' → logprob: -14.250022888183594
    4. '(
' → logprob: -15.500022888183594
    5. '(o' → logprob: -15.500022888183594
    6. '((' → logprob: -16.000022888183594
    7. '(s' → logprob: -16.250022888183594
    8. '(`' → logprob: -16.625022888183594
    9. 'odd' → logprob: -16.625022888183594
    10. '(m' → logprob: -17.125022888183594

Token 598: 'odd' (ID: 18303)
  Prédit: 'odd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.38689419627189636
    2. '(' → logprob: -1.1368942260742188
    3. ' odd' → logprob: -10.886894226074219
    4. 'od' → logprob: -13.386894226074219
    5. 'even' → logprob: -13.386894226074219
    6. 'Odd' → logprob: -13.761894226074219
    7. '[' → logprob: -16.13689422607422
    8. ')' → logprob: -16.63689422607422
    9. '(
' → logprob: -17.38689422607422
    10. '```' → logprob: -17.51189422607422

Token 599: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -0.00016957100888248533
    2. '_val' → logprob: -10.12516975402832
    3. '(_' → logprob: -10.50016975402832
    4. ')' → logprob: -10.50016975402832
    5. ')_' → logprob: -11.00016975402832
    6. 's' → logprob: -11.62516975402832
    7. '(' → logprob: -11.62516975402832
    8. ' _' → logprob: -12.37516975402832
    9. '_vars' → logprob: -12.37516975402832
    10. 'vals' → logprob: -12.62516975402832

Token 600: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004122450016438961
    2. '   ' → logprob: -6.504122257232666
    3. ')
' → logprob: -7.504122257232666
    4. '<|end|>' → logprob: -7.629122257232666
    5. ' )' → logprob: -8.129122734069824
    6. '()' → logprob: -8.379122734069824
    7. ')>' → logprob: -8.879122734069824
    8. '==' → logprob: -9.004122734069824
    9. '())' → logprob: -9.004122734069824
    10. '[' → logprob: -9.129122734069824

Token 601: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002120038407156244
    2. '<|end|>' → logprob: -8.875211715698242
    3. ' if' → logprob: -10.000211715698242
    4. ',' → logprob: -11.875211715698242
    5. '[' → logprob: -11.875211715698242
    6. 'if' → logprob: -12.875211715698242
    7. '<|end|>' → logprob: -13.000211715698242
    8. '```' → logprob: -13.375211715698242
    9. ':' → logprob: -13.875211715698242
    10. '	if' → logprob: -14.000211715698242

Token 602: ' even' (ID: 1952)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' (adapté à ' even') → logprob: -0.08459259569644928
    2. 'if' → logprob: -2.959592580795288
    3. ' if' → logprob: -4.459592819213867
    4. ' even' → logprob: -4.584592819213867
    5. '   ' → logprob: -5.084592819213867
    6. 'odd' → logprob: -6.709592819213867
    7. '```' → logprob: -10.459592819213867
    8. ' odd' → logprob: -10.584592819213867
    9. '_even' → logprob: -11.209592819213867
    10. ' ' → logprob: -11.959592819213867

Token 603: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.0005302758072502911
    2. '_vals' → logprob: -8.000530242919922
    3. '_val' → logprob: -9.250530242919922
    4. '_' → logprob: -9.625530242919922
    5. 'Len' → logprob: -12.000530242919922
    6. ' _' → logprob: -12.250530242919922
    7. ')_' → logprob: -12.500530242919922
    8. 'len' → logprob: -12.500530242919922
    9. '_length' → logprob: -12.875530242919922
    10. '_l' → logprob: -13.250530242919922

Token 604: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.160666823387146
    2. '=' → logprob: -1.910666823387146
    3. ' ==' → logprob: -8.535666465759277
    4. '<|end|>' → logprob: -9.160666465759277
    5. '==' → logprob: -10.285666465759277
    6. '   ' → logprob: -10.535666465759277
    7. ',' → logprob: -11.035666465759277
    8. ')' → logprob: -11.785666465759277
    9. ' ' → logprob: -11.785666465759277
    10. '(' → logprob: -12.160666465759277

Token 605: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.08897937834262848
    2. ' len' → logprob: -2.463979482650757
    3. '   ' → logprob: -10.588979721069336
    4. ' ' → logprob: -12.213979721069336
    5. '(len' → logprob: -12.588979721069336
    6. '0' → logprob: -13.088979721069336
    7. '  ' → logprob: -13.713979721069336
    8. '2' → logprob: -13.963979721069336
    9. '[len' → logprob: -14.213979721069336
    10. '	len' → logprob: -14.463979721069336

Token 606: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.0007051641005091369
    2. '(' → logprob: -7.750705242156982
    3. '(len' → logprob: -8.375704765319824
    4. ' (' → logprob: -10.375704765319824
    5. 'even' → logprob: -11.375704765319824
    6. ' even' → logprob: -15.000704765319824
    7. 'len' → logprob: -16.12570571899414
    8. '   ' → logprob: -16.12570571899414
    9. 'Even' → logprob: -16.12570571899414
    10. '(ev' → logprob: -16.12570571899414

Token 607: 'ven' (ID: 1066)
  Prédit: 'ven'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ven' → logprob: -0.18178676068782806
    2. '_vals' → logprob: -1.9317867755889893
    3. 'vals' → logprob: -4.18178653717041
    4. 'v' → logprob: -6.30678653717041
    5. 'vs' → logprob: -6.43178653717041
    6. 'vens' → logprob: -7.05678653717041
    7. '_' → logprob: -7.30678653717041
    8. '_v' → logprob: -8.68178653717041
    9. 'even' → logprob: -8.80678653717041
    10. 'odd' → logprob: -9.18178653717041

Token 608: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -0.0005542247672565281
    2. ')' → logprob: -8.375554084777832
    3. 's' → logprob: -8.500554084777832
    4. 'vals' → logprob: -10.000554084777832
    5. '_)' → logprob: -10.875554084777832
    6. ')_' → logprob: -11.000554084777832
    7. '_s' → logprob: -11.250554084777832
    8. '_' → logprob: -11.875554084777832
    9. '_val' → logprob: -12.375554084777832
    10. '_len' → logprob: -13.125554084777832

Token 609: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006290771998465061
    2. '   ' → logprob: -5.506290912628174
    3. '<|end|>' → logprob: -6.256290912628174
    4. '<|end|>' → logprob: -8.756290435791016
    5. ')>' → logprob: -10.506290435791016
    6. ')
' → logprob: -10.756290435791016
    7. '
' → logprob: -11.256290435791016
    8. ' )' → logprob: -11.256290435791016
    9. ' if' → logprob: -11.631290435791016
    10. '#' → logprob: -12.131290435791016

Token 610: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011493504978716373
    2. ' if' → logprob: -5.011493682861328
    3. '	if' → logprob: -5.636493682861328
    4. 'if' → logprob: -8.011493682861328
    5. '
' → logprob: -8.136493682861328
    6. '<|end|>' → logprob: -8.136493682861328
    7. '```' → logprob: -8.636493682861328
    8. '    
' → logprob: -10.386493682861328
    9. '[' → logprob: -10.886493682861328
    10. '    ' → logprob: -12.011493682861328

Token 611: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15673893690109253
    2. ' if' → logprob: -2.2817389965057373
    3. 'if' (adapté à ' if') → logprob: -3.1567389965057373
    4. '	if' → logprob: -8.281739234924316
    5. 'i' → logprob: -10.031739234924316
    6. ' i' → logprob: -10.031739234924316
    7. '```' → logprob: -11.031739234924316
    8. '    ' → logprob: -11.406739234924316
    9. '<|end|>' → logprob: -12.031739234924316
    10. '[' → logprob: -12.281739234924316

Token 612: ' odd' (ID: 14210)
  Prédit: ' odd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' odd' → logprob: -0.03393106162548065
    2. 'odd' → logprob: -3.408931016921997
    3. ' even' → logprob: -8.283930778503418
    4. 'even' → logprob: -11.408930778503418
    5. ' not' → logprob: -11.783930778503418
    6. ' n' → logprob: -12.408930778503418
    7. ' ' → logprob: -13.158930778503418
    8. ' ' → logprob: -13.158930778503418
    9. ' odds' → logprob: -13.533930778503418
    10. 'od' → logprob: -13.783930778503418

Token 613: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -2.8206473871250637e-05
    2. 'len' → logprob: -10.750028610229492
    3. '_' → logprob: -13.750028610229492
    4. '_vals' → logprob: -13.750028610229492
    5. ' _' → logprob: -14.250028610229492
    6. '_l' → logprob: -14.375028610229492
    7. '_val' → logprob: -14.375028610229492
    8. '   ' → logprob: -15.000028610229492
    9. '_length' → logprob: -15.000028610229492
    10. 'Len' → logprob: -15.250028610229492

Token 614: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2611229717731476
    2. '==' → logprob: -1.5111229419708252
    3. ' >' → logprob: -5.136123180389404
    4. '>' → logprob: -6.636123180389404
    5. ' <' → logprob: -7.136123180389404
    6. ' <=' → logprob: -7.261123180389404
    7. '<' → logprob: -9.011122703552246
    8. ' ' → logprob: -9.386122703552246
    9. ' >=' → logprob: -9.386122703552246
    10. '<=' → logprob: -9.386122703552246

Token 615: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03318245708942413
    2. '0' → logprob: -4.158182621002197
    3. ' ' → logprob: -4.158182621002197
    4. '2' → logprob: -7.158182621002197
    5. 'len' → logprob: -7.783182621002197
    6. ' len' → logprob: -9.783182144165039
    7. 'and' → logprob: -10.283182144165039
    8. 'even' → logprob: -10.783182144165039
    9. 'n' → logprob: -10.908182144165039
    10. '   ' → logprob: -11.158182144165039

Token 616: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04423840343952179
    2. '0' → logprob: -3.669238328933716
    3. 'len' → logprob: -4.294238567352295
    4. 'even' → logprob: -5.919238567352295
    5. ' ' → logprob: -7.669238567352295
    6. '2' → logprob: -7.669238567352295
    7. 'n' → logprob: -8.169238090515137
    8. 'and' → logprob: -9.419238090515137
    9. 'odd' → logprob: -9.794238090515137
    10. ' len' → logprob: -10.044238090515137

Token 617: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.048000458627939224
    2. ' or' → logprob: -3.1730005741119385
    3. 'and' → logprob: -5.673000335693359
    4. '   ' → logprob: -6.548000335693359
    5. ':' → logprob: -10.17300033569336
    6. '       ' → logprob: -10.42300033569336
    7. 'or' → logprob: -10.79800033569336
    8. '    ' → logprob: -11.54800033569336
    9. ' ' → logprob: -12.17300033569336
    10. ':
' → logprob: -12.17300033569336

Token 618: ' even' (ID: 1952)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.5231423377990723
    2. ' even' → logprob: -0.8981423377990723
    3. ' odd' → logprob: -12.273141860961914
    4. ' ' → logprob: -12.273141860961914
    5. 'odd' → logprob: -12.898141860961914
    6. '   ' → logprob: -12.898141860961914
    7. 'len' → logprob: -14.148141860961914
    8. '1' → logprob: -14.273141860961914
    9. '_even' → logprob: -14.523141860961914
    10. 'e' → logprob: -14.898141860961914

Token 619: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -1.2352385965641588e-05
    2. '_val' → logprob: -12.125012397766113
    3. 'len' → logprob: -12.375012397766113
    4. '_vals' → logprob: -14.000012397766113
    5. 'Len' → logprob: -14.750012397766113
    6. ' _' → logprob: -14.875012397766113
    7. '_' → logprob: -15.125012397766113
    8. '```' → logprob: -15.500012397766113
    9. '_LEN' → logprob: -16.875011444091797
    10. '[_' → logprob: -16.875011444091797

Token 620: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2812972068786621
    2. '==' → logprob: -1.406297206878662
    3. ' >' → logprob: -9.90629768371582
    4. ' ' → logprob: -10.65629768371582
    5. '>' → logprob: -10.78129768371582
    6. '()==' → logprob: -11.03129768371582
    7. '()' → logprob: -11.65629768371582
    8. ' <' → logprob: -12.15629768371582
    9. ' !=' → logprob: -12.28129768371582
    10. '   ' → logprob: -12.78129768371582

Token 621: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003258280921727419
    2. ' ' → logprob: -5.753258228302002
    3. '2' → logprob: -10.50325870513916
    4. '0' → logprob: -10.62825870513916
    5. '   ' → logprob: -10.62825870513916
    6. '  ' → logprob: -13.50325870513916
    7. '    ' → logprob: -13.56575870513916
    8. '       ' → logprob: -15.06575870513916
    9. '(' → logprob: -15.50325870513916
    10. '     ' → logprob: -15.94075870513916

Token 622: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015062130114529282
    2. ' ' → logprob: -8.875150680541992
    3. '0' → logprob: -11.750150680541992
    4. '   ' → logprob: -13.687650680541992
    5. '2' → logprob: -13.875150680541992
    6. '```' → logprob: -16.187650680541992
    7. '  ' → logprob: -16.250150680541992
    8. '۱' → logprob: -16.875150680541992
    9. '
' → logprob: -16.937650680541992
    10. '(' → logprob: -17.125150680541992

Token 623: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020605655387043953
    2. ':
' → logprob: -3.8956055641174316
    3. '       ' → logprob: -10.27060604095459
    4. '   ' → logprob: -11.27060604095459
    5. ' and' → logprob: -11.89560604095459
    6. ':

' → logprob: -13.39560604095459
    7. ',' → logprob: -13.77060604095459
    8. '<|end|>' → logprob: -13.77060604095459
    9. '):
' → logprob: -13.89560604095459
    10. ' or' → logprob: -13.89560604095459

Token 624: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003688555210828781
    2. '   ' → logprob: -6.503688335418701
    3. '<|end|>' → logprob: -8.00368881225586
    4. ' single' → logprob: -8.50368881225586
    5. '(single' → logprob: -8.50368881225586
    6. 'single' → logprob: -8.75368881225586
    7. '        
' → logprob: -8.87868881225586
    8. '
' → logprob: -9.00368881225586
    9. ':' → logprob: -9.00368881225586
    10. ',' → logprob: -9.00368881225586

Token 625: ' single' (ID: 4590)
  Prédit: 'single'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'single' (adapté à ' single') → logprob: -0.5293186902999878
    2. ' single' → logprob: -1.4043186902999878
    3. '   ' → logprob: -1.9043186902999878
    4. '       ' → logprob: -4.154318809509277
    5. '	s' → logprob: -7.654318809509277
    6. '(single' → logprob: -8.279318809509277
    7. '```' → logprob: -10.779318809509277
    8. '_single' → logprob: -11.029318809509277
    9. ' ' → logprob: -11.154318809509277
    10. '.single' → logprob: -12.029318809509277

Token 626: '_case' (ID: 43667)
  Prédit: '_case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_case' → logprob: -3.292907877039397e-06
    2. '_' → logprob: -12.75000286102295
    3. '_cases' → logprob: -16.000003814697266
    4. ' _' → logprob: -16.750003814697266
    5. 'case' → logprob: -17.000003814697266
    6. 'Case' → logprob: -17.375003814697266
    7. '_CASE' → logprob: -18.125003814697266
    8. '_line' → logprob: -18.250003814697266
    9. '_c' → logprob: -18.375003814697266
    10. '_code' → logprob: -18.500003814697266

Token 627: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0024806505534797907
    2. '(' → logprob: -6.002480506896973
    3. ' (' → logprob: -12.252480506896973
    4. '(
' → logprob: -15.752480506896973
    5. '(

' → logprob: -17.62748146057129
    6. '((' → logprob: -18.12748146057129
    7. '(N' → logprob: -19.00248146057129
    8. ' ' → logprob: -19.87748146057129
    9. '   ' → logprob: -20.37748146057129
    10. '(len' → logprob: -21.00248146057129

Token 628: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2200749754119897e-06
    2. ' ,' → logprob: -13.625001907348633
    3. ',
' → logprob: -14.125001907348633
    4. ')' → logprob: -16.500001907348633
    5. '   ' → logprob: -17.125001907348633
    6. ',,' → logprob: -17.250001907348633
    7. ',

' → logprob: -17.375001907348633
    8. '‌,' → logprob: -18.125001907348633
    9. '،' → logprob: -19.125001907348633
    10. '‍,' → logprob: -19.312501907348633

Token 629: ' odd' (ID: 14210)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.07904423028230667
    2. ' odd' → logprob: -2.5790443420410156
    3. 'even' → logprob: -9.079044342041016
    4. ' even' → logprob: -10.829044342041016
    5. ' ' → logprob: -11.579044342041016
    6. 'od' → logprob: -12.329044342041016
    7. '   ' → logprob: -12.829044342041016
    8. '  ' → logprob: -14.079044342041016
    9. '0' → logprob: -14.454044342041016
    10. '1' → logprob: -14.579044342041016

Token 630: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -0.00026622318546287715
    2. '_len' → logprob: -8.750266075134277
    3. ',' → logprob: -10.000266075134277
    4. 'vals' → logprob: -10.625266075134277
    5. '_val' → logprob: -11.375266075134277
    6. ',_' → logprob: -11.750266075134277
    7. '_' → logprob: -11.875266075134277
    8. ' _' → logprob: -12.625266075134277
    9. ')_' → logprob: -13.000266075134277
    10. '```' → logprob: -14.125266075134277

Token 631: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.394135612528771e-05
    2. ' ,' → logprob: -10.250043869018555
    3. ',e' → logprob: -12.375043869018555
    4. ',
' → logprob: -12.875043869018555
    5. '   ' → logprob: -14.375043869018555
    6. ',

' → logprob: -15.750043869018555
    7. '‌,' → logprob: -15.750043869018555
    8. ')' → logprob: -16.125043869018555
    9. 'even' → logprob: -16.125043869018555
    10. '[' → logprob: -16.250043869018555

Token 632: ' even' (ID: 1952)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.0067176250740885735
    2. ' even' → logprob: -5.006717681884766
    3. 'odd' → logprob: -13.256717681884766
    4. 'e' → logprob: -15.881717681884766
    5. ' ' → logprob: -15.881717681884766
    6. '   ' → logprob: -16.006717681884766
    7. '[' → logprob: -17.131717681884766
    8. ')' → logprob: -17.131717681884766
    9. ' odd' → logprob: -17.256717681884766
    10. '_even' → logprob: -17.256717681884766

Token 633: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -0.0008095058728940785
    2. 'vals' → logprob: -7.125809669494629
    3. '_val' → logprob: -12.500809669494629
    4. '_' → logprob: -14.250809669494629
    5. 'Vals' → logprob: -15.375809669494629
    6. 'val' → logprob: -16.000808715820312
    7. 'even' → logprob: -16.250808715820312
    8. ' vals' → logprob: -16.875808715820312
    9. ')' → logprob: -17.375808715820312
    10. '_len' → logprob: -17.875808715820312

Token 634: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001550809945911169
    2. ')
' → logprob: -6.751550674438477
    3. '   ' → logprob: -7.876550674438477
    4. ' )' → logprob: -14.251550674438477
    5. ')
' → logprob: -16.376550674438477
    6. '       ' → logprob: -17.251550674438477
    7. ' ' → logprob: -17.501550674438477
    8. ')return' → logprob: -17.626550674438477
    9. ')

' → logprob: -17.626550674438477
    10. '),' → logprob: -17.751550674438477

Token 635: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004649303387850523
    2. 'elif' → logprob: -5.7546491622924805
    3. '<|end|>' → logprob: -6.7546491622924805
    4. ')' → logprob: -9.87964916229248
    5. ' elif' → logprob: -9.87964916229248
    6. '    
' → logprob: -9.87964916229248
    7. '	elif' → logprob: -9.87964916229248
    8. 'else' → logprob: -10.12964916229248
    9. '
' → logprob: -10.62964916229248
    10. '<|end|>' → logprob: -11.75464916229248

Token 636: ' elif' (ID: 9497)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0413161963224411
    2. 'elif' (adapté à ' elif') → logprob: -3.291316270828247
    3. 'else' → logprob: -5.916316032409668
    4. ' elif' → logprob: -7.916316032409668
    5. '    
' → logprob: -9.791316032409668
    6. '
' → logprob: -10.041316032409668
    7. ' else' → logprob: -10.041316032409668
    8. '	elif' → logprob: -10.041316032409668
    9. '```' → logprob: -11.791316032409668
    10. ' ' → logprob: -12.416316032409668

Token 637: ' odd' (ID: 14210)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.4331676959991455
    2. ' odd' → logprob: -1.0581676959991455
    3. 'even' → logprob: -6.433167457580566
    4. ' even' → logprob: -6.433167457580566
    5. '   ' → logprob: -7.433167457580566
    6. ' ' → logprob: -7.683167457580566
    7. ' (' → logprob: -9.558167457580566
    8. 'od' → logprob: -10.183167457580566
    9. '(' → logprob: -10.558167457580566
    10. '  ' → logprob: -11.058167457580566

Token 638: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -5.512236498361744e-07
    2. 'len' → logprob: -15.000000953674316
    3. '_val' → logprob: -16.0
    4. '_vals' → logprob: -16.375
    5. 'Len' → logprob: -17.0
    6. '_' → logprob: -17.625
    7. '_LEN' → logprob: -18.0
    8. 's' → logprob: -19.75
    9. '_l' → logprob: -19.75
    10. '__' → logprob: -20.0

Token 639: ' >' (ID: 1424)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6691633462905884
    2. ' >' → logprob: -0.9191633462905884
    3. '==' → logprob: -3.044163227081299
    4. '>' → logprob: -3.294163227081299
    5. ' >=' → logprob: -5.794163227081299
    6. '   ' → logprob: -7.669163227081299
    7. ' ' → logprob: -7.919163227081299
    8. ' <' → logprob: -8.794163703918457
    9. '>=' → logprob: -9.294163703918457
    10. ' !=' → logprob: -9.419163703918457

Token 640: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08897501975297928
    2. ' ' → logprob: -2.463974952697754
    3. '=' → logprob: -10.588974952697754
    4. '0' → logprob: -12.213974952697754
    5. '2' → logprob: -12.963974952697754
    6. '   ' → logprob: -13.213974952697754
    7. '>' → logprob: -14.838974952697754
    8. '  ' → logprob: -15.213974952697754
    9. 'len' → logprob: -16.52647590637207
    10. '
' → logprob: -16.90147590637207

Token 641: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00044795009307563305
    2. ' ' → logprob: -7.750447750091553
    3. '0' → logprob: -11.500448226928711
    4. '=' → logprob: -12.875448226928711
    5. '2' → logprob: -13.500448226928711
    6. 'len' → logprob: -13.625448226928711
    7. '
' → logprob: -14.437948226928711
    8. '   ' → logprob: -14.875448226928711
    9. '>' → logprob: -16.00044822692871
    10. '```' → logprob: -16.31294822692871

Token 642: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.018288305029273033
    2. 'and' → logprob: -4.0182881355285645
    3. ' or' → logprob: -9.518288612365723
    4. '   ' → logprob: -9.893288612365723
    5. ' ' → logprob: -11.768288612365723
    6. '    ' → logprob: -13.018288612365723
    7. '  ' → logprob: -13.268288612365723
    8. ',' → logprob: -14.143288612365723
    9. '       ' → logprob: -14.768288612365723
    10. '	and' → logprob: -14.768288612365723

Token 643: ' even' (ID: 1952)
  Prédit: ' even'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' even' → logprob: -0.25213420391082764
    2. 'even' → logprob: -1.5021342039108276
    3. ' ' → logprob: -9.502134323120117
    4. ' odd' → logprob: -9.627134323120117
    5. '   ' → logprob: -10.127134323120117
    6. 'odd' → logprob: -11.127134323120117
    7. '  ' → logprob: -12.752134323120117
    8. '_even' → logprob: -14.127134323120117
    9. ' (' → logprob: -14.189634323120117
    10. 'len' → logprob: -14.377134323120117

Token 644: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -1.8193366486229934e-05
    2. 'len' → logprob: -11.750018119812012
    3. '_val' → logprob: -11.875018119812012
    4. '_vals' → logprob: -13.875018119812012
    5. 'Len' → logprob: -14.125018119812012
    6. ' _' → logprob: -14.625018119812012
    7. '_' → logprob: -15.125018119812012
    8. '_LEN' → logprob: -15.625018119812012
    9. '_length' → logprob: -16.000019073486328
    10. '_l' → logprob: -16.250019073486328

Token 645: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.016041524708271027
    2. '>' → logprob: -4.1410417556762695
    3. ' ' → logprob: -12.64104175567627
    4. ' <' → logprob: -13.64104175567627
    5. ' ==' → logprob: -13.89104175567627
    6. '   ' → logprob: -14.14104175567627
    7. '==' → logprob: -15.26604175567627
    8. ' ' → logprob: -15.39104175567627
    9. ' >
' → logprob: -15.76604175567627
    10. '[' → logprob: -16.141040802001953

Token 646: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2014196664094925
    2. ' ' → logprob: -1.701419711112976
    3. '=' → logprob: -12.826419830322266
    4. '   ' → logprob: -13.326419830322266
    5. '2' → logprob: -14.451419830322266
    6. '0' → logprob: -14.451419830322266
    7. '>' → logprob: -15.263919830322266
    8. '  ' → logprob: -15.888919830322266
    9. '```' → logprob: -15.888919830322266
    10. '(' → logprob: -16.138919830322266

Token 647: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -17.250051498413086
    4. '0' → logprob: -17.750051498413086
    5. '=' → logprob: -18.937551498413086
    6. '
' → logprob: -19.187551498413086
    7. '１' → logprob: -19.250051498413086
    8. '```' → logprob: -19.562551498413086
    9. '۱' → logprob: -19.625051498413086
    10. '>' → logprob: -19.625051498413086

Token 648: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0703975260257721
    2. ':
' → logprob: -2.6953976154327393
    3. '       ' → logprob: -7.82039737701416
    4. '   ' → logprob: -10.07039737701416
    5. ',' → logprob: -11.94539737701416
    6. '):
' → logprob: -12.82039737701416
    7. ':

' → logprob: -12.82039737701416
    8. ' and' → logprob: -13.44539737701416
    9. '[' → logprob: -13.82039737701416
    10. ':
' → logprob: -14.19539737701416

Token 649: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.288163083605468e-05
    2. 'multi' → logprob: -10.250052452087402
    3. ' multi' → logprob: -11.000052452087402
    4. '	' → logprob: -15.375052452087402
    5. '   ' → logprob: -15.875052452087402
    6. '      ' → logprob: -16.00005340576172
    7. '
' → logprob: -16.62505340576172
    8. '     ' → logprob: -16.87505340576172
    9. ':' → logprob: -17.25005340576172
    10. '           ' → logprob: -17.50005340576172

Token 650: ' multi' (ID: 12151)
  Prédit: 'multi'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multi' (adapté à ' multi') → logprob: -0.3060573637485504
    2. '       ' → logprob: -1.556057333946228
    3. 'mixed' → logprob: -3.0560574531555176
    4. ' multi' → logprob: -5.306057453155518
    5. ' mixed' → logprob: -8.43105697631836
    6. 'mult' → logprob: -8.55605697631836
    7. '   ' → logprob: -9.30605697631836
    8. '	' → logprob: -10.43105697631836
    9. 'multip' → logprob: -10.68105697631836
    10. '	m' → logprob: -11.43105697631836

Token 651: '_case' (ID: 43667)
  Prédit: '_case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_case' → logprob: -1.6240566083070007e-06
    2. '_' → logprob: -14.875001907348633
    3. '_line' → logprob: -15.000001907348633
    4. '_code' → logprob: -15.500001907348633
    5. '_def' → logprob: -15.500001907348633
    6. ' _' → logprob: -16.000001907348633
    7. 'case' → logprob: -16.500001907348633
    8. '_cases' → logprob: -16.625001907348633
    9. '_val' → logprob: -16.875001907348633
    10. '\' → logprob: -17.000001907348633

Token 652: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.2961512513575144e-05
    2. '(' → logprob: -10.750022888183594
    3. ' (' → logprob: -13.625022888183594
    4. '(
' → logprob: -15.125022888183594
    5. '```' → logprob: -17.375022888183594
    6. '   ' → logprob: -19.125022888183594
    7. '(

' → logprob: -20.125022888183594
    8. '(N' → logprob: -20.250022888183594
    9. ' ' → logprob: -20.375022888183594
    10. ')' → logprob: -20.875022888183594

Token 653: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006010498036630452
    2. '(n' → logprob: -7.500600814819336
    3. ',n' → logprob: -10.250600814819336
    4. ' ,' → logprob: -11.750600814819336
    5. ')' → logprob: -13.500600814819336
    6. '(' → logprob: -13.625600814819336
    7. ',
' → logprob: -13.750600814819336
    8. '   ' → logprob: -14.250600814819336
    9. 'n' → logprob: -15.125600814819336
    10. '```' → logprob: -16.125600814819336

Token 654: ' odd' (ID: 14210)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.03947795182466507
    2. 'even' → logprob: -3.789478063583374
    3. ' odd' → logprob: -4.164477825164795
    4. ' even' → logprob: -7.539477825164795
    5. 'n' → logprob: -11.289478302001953
    6. 'od' → logprob: -11.289478302001953
    7. ' n' → logprob: -12.164478302001953
    8. ' ' → logprob: -13.914478302001953
    9. 'old' → logprob: -15.789478302001953
    10. '   ' → logprob: -16.414478302001953

Token 655: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -3.1424973713001236e-05
    2. 'vals' → logprob: -11.500031471252441
    3. '_len' → logprob: -12.250031471252441
    4. ',' → logprob: -12.500031471252441
    5. '_val' → logprob: -12.625031471252441
    6. '_' → logprob: -13.125031471252441
    7. ' _' → logprob: -13.375031471252441
    8. 's' → logprob: -13.500031471252441
    9. ',_' → logprob: -14.125031471252441
    10. '_v' → logprob: -14.375031471252441

Token 656: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2352385965641588e-05
    2. ' ,' → logprob: -11.750012397766113
    3. ',e' → logprob: -12.625012397766113
    4. ',
' → logprob: -14.625012397766113
    5. '   ' → logprob: -16.000011444091797
    6. 'even' → logprob: -16.125011444091797
    7. '[' → logprob: -16.250011444091797
    8. ')' → logprob: -16.625011444091797
    9. ' even' → logprob: -17.125011444091797
    10. '```' → logprob: -17.750011444091797

Token 657: ' even' (ID: 1952)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.008615754544734955
    2. ' even' → logprob: -4.758615970611572
    3. ' ' → logprob: -14.008615493774414
    4. '   ' → logprob: -15.508615493774414
    5. 'e' → logprob: -15.883615493774414
    6. 'Even' → logprob: -16.758615493774414
    7. 'odd' → logprob: -17.633615493774414
    8. '           ' → logprob: -18.383615493774414
    9. '  ' → logprob: -18.508615493774414
    10. '_even' → logprob: -18.758615493774414

Token 658: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -0.00017195509281009436
    2. 'vals' → logprob: -8.750171661376953
    3. '_len' → logprob: -11.625171661376953
    4. '_val' → logprob: -13.250171661376953
    5. '_' → logprob: -14.250171661376953
    6. 'Vals' → logprob: -14.875171661376953
    7. 'v' → logprob: -15.625171661376953
    8. '-' → logprob: -15.625171661376953
    9. ' vals' → logprob: -15.750171661376953
    10. '(vals' → logprob: -15.750171661376953

Token 659: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4027211368083954
    2. ')
' → logprob: -1.1527211666107178
    3. '   ' → logprob: -4.152720928192139
    4. ')
' → logprob: -13.527721405029297
    5. ')

' → logprob: -13.777721405029297
    6. ' )' → logprob: -14.777721405029297
    7. ' )
' → logprob: -14.902721405029297
    8. '()' → logprob: -16.402721405029297
    9. '())
' → logprob: -16.652721405029297
    10. ')`
' → logprob: -16.652721405029297

Token 660: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00021331508469302207
    2. 'else' → logprob: -8.500213623046875
    3. 'elif' → logprob: -12.000213623046875
    4. ' else' → logprob: -12.625213623046875
    5. '<|end|>' → logprob: -15.625213623046875
    6. ' elif' → logprob: -16.000213623046875
    7. '	else' → logprob: -17.250213623046875
    8. '```' → logprob: -17.500213623046875
    9. '	elif' → logprob: -17.625213623046875
    10. '       ' → logprob: -17.625213623046875

Token 661: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006411355454474688
    2. 'else' (adapté à ' else') → logprob: -5.256411552429199
    3. 'elif' → logprob: -6.756411552429199
    4. ' else' → logprob: -11.5064115524292
    5. ' elif' → logprob: -12.6314115524292
    6. '	elif' → logprob: -17.006410598754883
    7. '```' → logprob: -17.381410598754883
    8. '	else' → logprob: -18.006410598754883
    9. '       ' → logprob: -18.506410598754883
    10. 'elseif' → logprob: -19.381410598754883

Token 662: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008989581256173551
    2. ':
' → logprob: -7.250898838043213
    3. '       ' → logprob: -8.750899314880371
    4. ',' → logprob: -11.625899314880371
    5. '   ' → logprob: -12.250899314880371
    6. '():' → logprob: -12.375899314880371
    7. '(' → logprob: -12.500899314880371
    8. '):' → logprob: -12.875899314880371
    9. '[' → logprob: -13.500899314880371
    10. '<|end|>' → logprob: -13.750899314880371

Token 663: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.79811754100956e-05
    2. '   ' → logprob: -10.875038146972656
    3. 'mixed' → logprob: -11.500038146972656
    4. ' mixed' → logprob: -12.000038146972656
    5. '	' → logprob: -14.625038146972656
    6. '           ' → logprob: -14.750038146972656
    7. '```' → logprob: -14.750038146972656
    8. '	   ' → logprob: -15.000038146972656
    9. '[' → logprob: -15.125038146972656
    10. '	m' → logprob: -15.125038146972656

Token 664: ' mixed' (ID: 16435)
  Prédit: 'mixed'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mixed' (adapté à ' mixed') → logprob: -0.0003479785518720746
    2. ' mixed' → logprob: -8.000348091125488
    3. '   ' → logprob: -11.875348091125488
    4. 'if' → logprob: -12.250348091125488
    5. '       ' → logprob: -14.750348091125488
    6. 'mix' → logprob: -15.250348091125488
    7. 'm' → logprob: -16.375347137451172
    8. ' if' → logprob: -17.500347137451172
    9. 'merged' → logprob: -17.750347137451172
    10. '	m' → logprob: -18.375347137451172

Token 665: '_case' (ID: 43667)
  Prédit: '_case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_case' → logprob: -1.0280383548888494e-06
    2. '_cases' → logprob: -14.750000953674316
    3. '_' → logprob: -15.375000953674316
    4. ' _' → logprob: -15.750000953674316
    5. '_code' → logprob: -16.250001907348633
    6. '_line' → logprob: -17.875001907348633
    7. '```' → logprob: -17.875001907348633
    8. 'case' → logprob: -18.500001907348633
    9. 'Case' → logprob: -18.500001907348633
    10. '_c' → logprob: -18.750001907348633

Token 666: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.01819559559226036
    2. '(' → logprob: -4.018195629119873
    3. '(
' → logprob: -10.018195152282715
    4. ' (' → logprob: -14.268195152282715
    5. '(

' → logprob: -15.393195152282715
    6. '(
' → logprob: -16.64319610595703
    7. '```' → logprob: -16.89319610595703
    8. 'n' → logprob: -17.89319610595703
    9. '(N' → logprob: -18.26819610595703
    10. '\(' → logprob: -18.39319610595703

Token 667: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006101920269429684
    2. ',n' → logprob: -5.256102085113525
    3. '(n' → logprob: -7.381102085113525
    4. ' ,' → logprob: -8.631101608276367
    5. ')' → logprob: -10.381101608276367
    6. 'n' → logprob: -11.006101608276367
    7. ' n' → logprob: -11.756101608276367
    8. ',
' → logprob: -12.381101608276367
    9. '   ' → logprob: -12.881101608276367
    10. ')n' → logprob: -13.881101608276367

Token 668: ' odd' (ID: 14210)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3894260823726654
    2. ' n' → logprob: -1.1394261121749878
    3. 'even' → logprob: -6.389426231384277
    4. ' even' → logprob: -7.389426231384277
    5. 'odd' → logprob: -9.139426231384277
    6. ' odd' → logprob: -9.389426231384277
    7. ' ' → logprob: -10.514426231384277
    8. '   ' → logprob: -10.889426231384277
    9. ')' → logprob: -12.514426231384277
    10. ' len' → logprob: -12.639426231384277

Token 669: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -5.7530574849806726e-05
    2. '_len' → logprob: -10.375057220458984
    3. 'vals' → logprob: -11.125057220458984
    4. '_' → logprob: -12.125057220458984
    5. ' _' → logprob: -13.250057220458984
    6. '_val' → logprob: -13.375057220458984
    7. 's' → logprob: -14.125057220458984
    8. '_vars' → logprob: -15.000057220458984
    9. '```' → logprob: -15.125057220458984
    10. '__' → logprob: -15.750057220458984

Token 670: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6286106983898208e-05
    2. ' ,' → logprob: -11.125016212463379
    3. ',e' → logprob: -14.500016212463379
    4. ',
' → logprob: -15.375016212463379
    5. '   ' → logprob: -15.375016212463379
    6. '[' → logprob: -15.625016212463379
    7. ',m' → logprob: -15.750016212463379
    8. ')' → logprob: -16.500017166137695
    9. '‌,' → logprob: -16.500017166137695
    10. ',s' → logprob: -18.000017166137695

Token 671: ' even' (ID: 1952)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.023246407508850098
    2. ' even' → logprob: -3.7732462882995605
    3. 'odd' → logprob: -15.148246765136719
    4. ' ' → logprob: -15.148246765136719
    5. 'e' → logprob: -16.02324676513672
    6. '   ' → logprob: -16.14824676513672
    7. 'Even' → logprob: -16.77324676513672
    8. '_even' → logprob: -17.02324676513672
    9. '           ' → logprob: -17.77324676513672
    10. '  ' → logprob: -17.89824676513672

Token 672: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -1.580929347255733e-05
    2. 'vals' → logprob: -11.375016212463379
    3. '_val' → logprob: -13.625016212463379
    4. ')_' → logprob: -14.250016212463379
    5. '_' → logprob: -14.500016212463379
    6. ',' → logprob: -14.625016212463379
    7. ',_' → logprob: -14.875016212463379
    8. ' _' → logprob: -15.375016212463379
    9. ')' → logprob: -15.500016212463379
    10. 'Vals' → logprob: -15.750016212463379

Token 673: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1637164789135568e-05
    2. '   ' → logprob: -11.625011444091797
    3. ')
' → logprob: -13.125011444091797
    4. ' )' → logprob: -14.750011444091797
    5. ',)' → logprob: -16.000011444091797
    6. ',' → logprob: -16.500011444091797
    7. '))' → logprob: -17.125011444091797
    8. '[' → logprob: -18.125011444091797
    9. ')`' → logprob: -18.625011444091797
    10. ')#' → logprob: -18.750011444091797

Token 674: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.8778560161590576
    2. '<|end|>' → logprob: -0.8778560161590576
    3. 'if' → logprob: -2.2528560161590576
    4. 'read' → logprob: -3.1278560161590576
    5. '```' → logprob: -5.002856254577637
    6. '(main' → logprob: -5.752856254577637
    7. '
' → logprob: -6.002856254577637
    8. ' main' → logprob: -6.502856254577637
    9. ')' → logprob: -6.752856254577637
    10. '()' → logprob: -6.752856254577637

Token 675: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 673
Tokens correctement prédits (1ère position, stricte): 364
Tokens correctement prédits (1ère position, avec adaptation): 389
Tokens correctement prédits (top 10): 617
Précision stricte (1ère position): 54.09%
Précision adaptée (1ère position): 57.80%
Précision (top 10): 91.68%
================================================================================
