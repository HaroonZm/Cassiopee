================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:59:30
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# C'est le code pour le B d'aujourd'hui (je crois)
n = int(input())  # on lit n
liste = []
for j in range(n):
    s, p = input().split()
    p = int(p)  # conversion forcée (sinon ça plante en int)
    liste.append([s, p, j])

# d'abord tri par place (je préfère), puis par nom
liste.sort(key=lambda elem: elem[1], reverse=True)
liste.sort(key=lambda elem: elem[0])

# affichage des indices 1-based (pas fan de ce "+1" mais bon)
for thing in liste:
    print(thing[2] + 1)  # normalement ça sort dans le bon ordre?
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' C' (ID: 363)
  → Token d'amorce (pas de prédiction)

Token 2: ''est' (ID: 6616)
  → Token d'amorce (pas de prédiction)

Token 3: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05203908309340477
    2. ' #' → logprob: -4.42703914642334
    3. '_' → logprob: -4.92703914642334
    4. 's' → logprob: -5.05203914642334
    5. ' un' → logprob: -5.30203914642334
    6. '#' → logprob: -5.42703914642334
    7. 'u' → logprob: -6.42703914642334
    8. ''' → logprob: -6.42703914642334
    9. ' une' → logprob: -6.67703914642334
    10. ' ```' → logprob: -6.80203914642334

Token 4: ' code' (ID: 3490)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7690000534057617
    2. 'd' → logprob: -1.5190000534057617
    3. 'f' → logprob: -2.3940000534057617
    4. 's' → logprob: -2.5190000534057617
    5. 'dé' → logprob: -3.2690000534057617
    6. 'c' → logprob: -4.144000053405762
    7. 'code' → logprob: -4.269000053405762
    8. 'm' → logprob: -4.269000053405762
    9. ' ' → logprob: -4.644000053405762
    10. 'b' → logprob: -4.894000053405762

Token 5: ' pour' (ID: 1930)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6744285225868225
    2. '#' → logprob: -1.0494284629821777
    3. '\' → logprob: -2.5494284629821777
    4. '```' → logprob: -3.7994284629821777
    5. ' ' → logprob: -4.049428462982178
    6. ':' → logprob: -4.924428462982178
    7. '
' → logprob: -5.799428462982178
    8. ''' → logprob: -6.424428462982178
    9. ' #' → logprob: -6.674428462982178
    10. ' 
' → logprob: -6.799428462982178

Token 6: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14063109457492828
    2. ' l' → logprob: -3.3906311988830566
    3. ' d' → logprob: -3.7656311988830566
    4. ' le' → logprob: -4.890631198883057
    5. ' la' → logprob: -4.890631198883057
    6. 'l' → logprob: -5.015631198883057
    7. ' a' → logprob: -5.640631198883057
    8. '  ' → logprob: -5.640631198883057
    9. ' `' → logprob: -5.640631198883057
    10. ' #' → logprob: -5.765631198883057

Token 7: ' B' (ID: 418)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9143928289413452
    2. 'pro' → logprob: -1.9143928289413452
    3. 'mod' → logprob: -2.1643929481506348
    4. 'calcul' → logprob: -2.6643929481506348
    5. 'jeu' → logprob: -3.0393929481506348
    6. 'su' → logprob: -3.2893929481506348
    7. 'tri' → logprob: -3.5393929481506348
    8. 'trait' → logprob: -3.6643929481506348
    9. 'next' → logprob: -4.414392948150635
    10. 'd' → logprob: -4.539392948150635

Token 8: ' d' (ID: 272)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5831952095031738
    2. '_' → logprob: -1.4581952095031738
    3. '```' → logprob: -2.583195209503174
    4. 'e' → logprob: -3.458195209503174
    5. '`' → logprob: -3.708195209503174
    6. ':' → logprob: -4.083195209503174
    7. 'u' → logprob: -4.333195209503174
    8. 'B' → logprob: -5.083195209503174
    9. '.' → logprob: -5.083195209503174
    10. ')' → logprob: -5.083195209503174

Token 9: ''au' (ID: 63689)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.5301008224487305
    2. 'e' → logprob: -1.5301008224487305
    3. ''' → logprob: -2.5301008224487305
    4. 'i' → logprob: -3.7801008224487305
    5. 'u' → logprob: -4.5301008224487305
    6. 'r' → logprob: -4.6551008224487305
    7. 'a' → logprob: -4.6551008224487305
    8. '_' → logprob: -4.7801008224487305
    9. '`' → logprob: -4.7801008224487305
    10. 'éf' → logprob: -4.9051008224487305

Token 10: 'jourd' (ID: 29366)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.8975592851638794
    2. '_' → logprob: -1.7725592851638794
    3. 'g' → logprob: -2.39755916595459
    4. '```' → logprob: -2.77255916595459
    5. 'c' → logprob: -3.39755916595459
    6. ''' → logprob: -3.39755916595459
    7. 'm' → logprob: -3.52255916595459
    8. '`' → logprob: -3.89755916595459
    9. '-' → logprob: -3.89755916595459
    10. 'n' → logprob: -4.02255916595459

Token 11: ''hui' (ID: 43820)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.04132409393787384
    2. ''hui' → logprob: -3.5413241386413574
    3. ''h' → logprob: -4.791324138641357
    4. '-' → logprob: -7.541324138641357
    5. '\' → logprob: -7.541324138641357
    6. '']' → logprob: -7.916324138641357
    7. ''\' → logprob: -8.2913236618042
    8. '')' → logprob: -8.6663236618042
    9. '\'' → logprob: -9.0413236618042
    10. '`' → logprob: -9.0413236618042

Token 12: ' (' (ID: 350)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6680127382278442
    2. 'e' → logprob: -1.9180127382278442
    3. '```' → logprob: -2.6680126190185547
    4. ':' → logprob: -2.7930126190185547
    5. '_' → logprob: -2.7930126190185547
    6. ''' → logprob: -2.9180126190185547
    7. '`' → logprob: -3.6680126190185547
    8. 'u' → logprob: -3.7930126190185547
    9. 'a' → logprob: -4.418012619018555
    10. ''''' → logprob: -4.793012619018555

Token 13: 'je' (ID: 1587)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03142707049846649
    2. '#' → logprob: -4.031426906585693
    3. 'e' → logprob: -5.281426906585693
    4. '`)' → logprob: -6.031426906585693
    5. ' )' → logprob: -6.406426906585693
    6. 'a' → logprob: -7.156426906585693
    7. '```' → logprob: -7.406426906585693
    8. '')' → logprob: -7.531426906585693
    9. 'u' → logprob: -7.781426906585693
    10. '`' → logprob: -8.656427383422852

Token 14: ' crois' (ID: 65485)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2707200050354004
    2. 'v' → logprob: -1.6457200050354004
    3. ' ' → logprob: -2.3957200050354004
    4. 's' → logprob: -2.3957200050354004
    5. ' )' → logprob: -2.6457200050354004
    6. ' veux' → logprob: -2.7707200050354004
    7. ' v' → logprob: -3.1457200050354004
    8. '```' → logprob: -3.2707200050354004
    9. '')' → logprob: -3.6457200050354004
    10. ' ')' → logprob: -4.2707200050354

Token 15: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006771499291062355
    2. '#' → logprob: -5.256771564483643
    3. '```' → logprob: -7.881771564483643
    4. '`)' → logprob: -8.006771087646484
    5. ' )' → logprob: -8.381771087646484
    6. '`' → logprob: -8.881771087646484
    7. 'e' → logprob: -8.881771087646484
    8. '')' → logprob: -9.631771087646484
    9. ',' → logprob: -10.131771087646484
    10. '!' → logprob: -10.381771087646484

Token 16: 'n' (ID: 77)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8363221883773804
    2. ':' → logprob: -0.8363221883773804
    3. '```' → logprob: -3.08632230758667
    4. ''' → logprob: -3.83632230758667
    5. '_' → logprob: -4.21132230758667
    6. 'e' → logprob: -4.46132230758667
    7. '\' → logprob: -4.96132230758667
    8. ',' → logprob: -5.08632230758667
    9. ' :' → logprob: -5.08632230758667
    10. '.' → logprob: -5.33632230758667

Token 17: ' =' (ID: 314)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.9610801339149475
    2. '=' → logprob: -1.7110800743103027
    3. 'u' → logprob: -1.9610800743103027
    4. '#' → logprob: -2.4610800743103027
    5. 'a' → logprob: -2.7110800743103027
    6. 'o' → logprob: -2.8360800743103027
    7. '_' → logprob: -3.4610800743103027
    8. ' =' → logprob: -3.9610800743103027
    9. 'i' → logprob: -5.211080074310303
    10. ' ' → logprob: -5.336080074310303

Token 18: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.018583573400974274
    2. '10' → logprob: -4.64358377456665
    3. 'int' → logprob: -5.76858377456665
    4. ' int' → logprob: -5.89358377456665
    5. '5' → logprob: -6.14358377456665
    6. '20' → logprob: -8.018583297729492
    7. '0' → logprob: -9.393583297729492
    8. '3' → logprob: -9.393583297729492
    9. '4' → logprob: -9.393583297729492
    10. '1' → logprob: -10.643583297729492

Token 19: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00022129806166049093
    2. '(input' → logprob: -9.250221252441406
    3. '('' → logprob: -9.625221252441406
    4. ' (' → logprob: -11.375221252441406
    5. '("' → logprob: -11.625221252441406
    6. '(
' → logprob: -11.875221252441406
    7. '()' → logprob: -12.000221252441406
    8. '<|end|>' → logprob: -12.000221252441406
    9. '(n' → logprob: -12.250221252441406
    10. '(

' → logprob: -12.750221252441406

Token 20: '())' (ID: 3516)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.021125895902514458
    2. '()' → logprob: -4.896125793457031
    3. '('' → logprob: -5.146125793457031
    4. ')' → logprob: -5.521125793457031
    5. '("("' → logprob: -5.896125793457031
    6. '(
' → logprob: -8.271125793457031
    7. '("")' → logprob: -8.521125793457031
    8. '(""))' → logprob: -9.271125793457031
    9. '())' → logprob: -9.396125793457031
    10. '(

' → logprob: -9.896125793457031

Token 21: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.36139512062072754
    2. ')' → logprob: -1.8613951206207275
    3. '
' → logprob: -2.9863951206207275
    4. '#' → logprob: -4.111394882202148
    5. 'for' → logprob: -4.236394882202148
    6. '<|end|>' → logprob: -4.236394882202148
    7. '\n' → logprob: -4.986394882202148
    8. ' 
' → logprob: -5.236394882202148
    9. '\' → logprob: -5.236394882202148
    10. ' )' → logprob: -5.361394882202148

Token 22: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9697779417037964
    2. 'for' → logprob: -0.9697779417037964
    3. 's' → logprob: -2.344778060913086
    4. '#' → logprob: -3.469778060913086
    5. ' ' → logprob: -3.719778060913086
    6. '*' → logprob: -4.719778060913086
    7. 'a' → logprob: -4.844778060913086
    8. ' for' → logprob: -5.094778060913086
    9. 'n' → logprob: -5.094778060913086
    10. '%' → logprob: -5.344778060913086

Token 23: ' on' (ID: 402)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.023529862985014915
    2. '"' → logprob: -4.898530006408691
    3. ''' → logprob: -5.023530006408691
    4. ' "' → logprob: -5.148530006408691
    5. '  ' → logprob: -6.273530006408691
    6. ' '' → logprob: -7.898530006408691
    7. ' )' → logprob: -8.523530006408691
    8. ' n' → logprob: -9.023530006408691
    9. 'n' → logprob: -9.148530006408691
    10. ')' → logprob: -9.148530006408691

Token 24: ' lit' (ID: 11980)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'put' → logprob: -1.5288738012313843
    2. 's' → logprob: -2.028873920440674
    3. ' =' → logprob: -2.028873920440674
    4. '_' → logprob: -2.153873920440674
    5. '=' → logprob: -3.028873920440674
    6. ' sais' → logprob: -3.153873920440674
    7. 'range' → logprob: -3.653873920440674
    8. 'e' → logprob: -3.778873920440674
    9. ' prend' → logprob: -3.778873920440674
    10. 'puts' → logprob: -4.028873920440674

Token 25: ' n' (ID: 297)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.003219899022951722
    2. 'n' → logprob: -7.003220081329346
    3. ' n' → logprob: -7.628220081329346
    4. ' un' → logprob: -7.753220081329346
    5. '  ' → logprob: -7.753220081329346
    6. ' l' → logprob: -8.128219604492188
    7. 'l' → logprob: -8.753219604492188
    8. ' la' → logprob: -9.003219604492188
    9. ' le' → logprob: -9.628219604492188
    10. ' une' → logprob: -9.878219604492188

Token 26: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5580648183822632
    2. '<|end|>' → logprob: -2.0580649375915527
    3. ')' → logprob: -2.5580649375915527
    4. '
' → logprob: -2.6830649375915527
    5. 'n' → logprob: -3.1830649375915527
    6. ' 
' → logprob: -4.183064937591553
    7. '<|end|>' → logprob: -4.683064937591553
    8. ' )' → logprob: -4.808064937591553
    9. '\n' → logprob: -4.808064937591553
    10. '.' → logprob: -4.808064937591553

Token 27: 'liste' (ID: 69656)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7854022979736328
    2. 'for' → logprob: -1.1604022979736328
    3. ' ' → logprob: -2.035402297973633
    4. ' for' → logprob: -3.785402297973633
    5. '#' → logprob: -4.035402297973633
    6. ')' → logprob: -4.410402297973633
    7. 'r' → logprob: -4.785402297973633
    8. 'a' → logprob: -5.285402297973633
    9. ',' → logprob: -5.410402297973633
    10. 'sum' → logprob: -5.910402297973633

Token 28: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4129718244075775
    2. ' =' → logprob: -1.1629718542099
    3. '[:]' → logprob: -4.5379719734191895
    4. '=' → logprob: -4.9129719734191895
    5. '_de' → logprob: -6.5379719734191895
    6. '[' → logprob: -6.5379719734191895
    7. 's' → logprob: -6.7879719734191895
    8. '.' → logprob: -7.7879719734191895
    9. '_=' → logprob: -8.037971496582031
    10. '_des' → logprob: -8.037971496582031

Token 29: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.1330069601535797
    2. '[]' → logprob: -2.258007049560547
    3. ' [' → logprob: -4.383007049560547
    4. ' list' → logprob: -5.758007049560547
    5. 'list' → logprob: -5.883007049560547
    6. '[' → logprob: -7.008007049560547
    7. '[input' → logprob: -8.133007049560547
    8. '[list' → logprob: -8.883007049560547
    9. ' ' → logprob: -9.633007049560547
    10. 'input' → logprob: -9.883007049560547

Token 30: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0067534977570176125
    2. ' for' → logprob: -5.006753444671631
    3. ' ' → logprob: -11.256753921508789
    4. '
' → logprob: -11.631753921508789
    5. 'f' → logprob: -12.256753921508789
    6. ' 
' → logprob: -12.381753921508789
    7. '```' → logprob: -13.131753921508789
    8. '' → logprob: -13.506753921508789
    9. 'n' → logprob: -14.256753921508789
    10. 'i' → logprob: -14.381753921508789

Token 31: ' j' (ID: 441)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16772021353244781
    2. ' i' → logprob: -1.9177201986312866
    3. ' _' → logprob: -5.292720317840576
    4. '_' → logprob: -6.167720317840576
    5. 'i' → logprob: -8.292719841003418
    6. '  ' → logprob: -9.542719841003418
    7. ' ‌' → logprob: -11.292719841003418
    8. ' ' → logprob: -13.042719841003418
    9. ' n' → logprob: -13.417719841003418
    10. ' range' → logprob: -13.792719841003418

Token 32: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08763708174228668
    2. ' ' → logprob: -2.587637186050415
    3. 'in' → logprob: -5.337636947631836
    4. 'n' → logprob: -5.962636947631836
    5. '  ' → logprob: -7.087636947631836
    6. '   ' → logprob: -8.837636947631836
    7. ' i' → logprob: -9.212636947631836
    8. ' n' → logprob: -9.837636947631836
    9. 'j' → logprob: -9.962636947631836
    10. '_' → logprob: -10.212636947631836

Token 33: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.038080740720033646
    2. 'range' → logprob: -3.2880806922912598
    3. ' ' → logprob: -10.413081169128418
    4. '  ' → logprob: -13.038081169128418
    5. '	range' → logprob: -13.288081169128418
    6. 'rang' → logprob: -13.663081169128418
    7. ' ' → logprob: -14.038081169128418
    8. ' rang' → logprob: -14.038081169128418
    9. '   ' → logprob: -14.413081169128418
    10. ' xrange' → logprob: -15.163081169128418

Token 34: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.048643115907907486
    2. '(n' → logprob: -3.048643112182617
    3. ' (' → logprob: -10.298643112182617
    4. '(
' → logprob: -11.298643112182617
    5. '(j' → logprob: -12.173643112182617
    6. '(s' → logprob: -13.548643112182617
    7. '('' → logprob: -14.798643112182617
    8. 'n' → logprob: -15.173643112182617
    9. '(len' → logprob: -15.173643112182617
    10. '(m' → logprob: -15.173643112182617

Token 35: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012985974550247192
    2. ')' → logprob: -4.637986183166504
    3. ' ):' → logprob: -5.762986183166504
    4. ':' → logprob: -10.512986183166504
    5. '+' → logprob: -10.512986183166504
    6. ' )' → logprob: -11.637986183166504
    7. '):
' → logprob: -12.012986183166504
    8. ' :' → logprob: -12.012986183166504
    9. ' ' → logprob: -12.512986183166504
    10. ',' → logprob: -13.387986183166504

Token 36: '   ' (ID: 271)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.6112983822822571
    2. ' ' → logprob: -1.1112983226776123
    3. '     
' → logprob: -2.3612983226776123
    4. '   ' → logprob: -4.486298561096191
    5. ' input' → logprob: -5.361298561096191
    6. ' 
' → logprob: -5.486298561096191
    7. '    
' → logprob: -5.736298561096191
    8. 'input' → logprob: -5.986298561096191
    9. ' )' → logprob: -6.736298561096191
    10. ' (' → logprob: -6.986298561096191

Token 37: ' s' (ID: 265)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3992474675178528
    2. ' ligne' → logprob: -2.649247407913208
    3. ' line' → logprob: -3.024247407913208
    4. ' t' → logprob: -3.524247407913208
    5. ' i' → logprob: -3.899247407913208
    6. ' data' → logprob: -3.899247407913208
    7. '   ' → logprob: -4.274247646331787
    8. ' x' → logprob: -4.524247646331787
    9. ' a' → logprob: -4.649247646331787
    10. 't' → logprob: -4.649247646331787

Token 38: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.030383581295609474
    2. '=' → logprob: -4.155383586883545
    3. 'tr' → logprob: -4.405383586883545
    4. '=input' → logprob: -7.030383586883545
    5. ' ' → logprob: -7.155383586883545
    6. 'tring' → logprob: -8.530383110046387
    7. 'trin' → logprob: -10.530383110046387
    8. '_' → logprob: -10.655383110046387
    9. 'input' → logprob: -11.030383110046387
    10. '   ' → logprob: -11.155383110046387

Token 39: ' p' (ID: 275)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0271693468093872
    2. 't' → logprob: -1.1521693468093872
    3. 'a' → logprob: -2.1521692276000977
    4. ' t' → logprob: -2.6521692276000977
    5. 'i' → logprob: -3.7771692276000977
    6. ' =' → logprob: -3.9021692276000977
    7. '_' → logprob: -4.277169227600098
    8. 'l' → logprob: -4.902169227600098
    9. '  ' → logprob: -4.902169227600098
    10. 'v' → logprob: -5.027169227600098

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2833314836025238
    2. '=' → logprob: -1.4083315134048462
    3. ',' → logprob: -6.658331394195557
    4. 'r' → logprob: -8.533331871032715
    5. 'p' → logprob: -9.033331871032715
    6. ' ' → logprob: -9.033331871032715
    7. ')' → logprob: -9.408331871032715
    8. 'ar' → logprob: -10.033331871032715
    9. 'rodu' → logprob: -10.408331871032715
    10. 'rompt' → logprob: -10.658331871032715

Token 41: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3901415169239044
    2. 'input' → logprob: -1.140141487121582
    3. ' map' → logprob: -6.265141487121582
    4. 'map' → logprob: -6.640141487121582
    5. ' ' → logprob: -10.515141487121582
    6. '(input' → logprob: -12.015141487121582
    7. '[input' → logprob: -12.015141487121582
    8. '=input' → logprob: -13.015141487121582
    9. 'list' → logprob: -13.140141487121582
    10. ' list' → logprob: -13.140141487121582

Token 42: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00018542143516242504
    2. '()' → logprob: -8.625185012817383
    3. '(' → logprob: -12.375185012817383
    4. '('' → logprob: -14.250185012817383
    5. ' ().' → logprob: -14.500185012817383
    6. '("' → logprob: -15.500185012817383
    7. '("").' → logprob: -16.500185012817383
    8. '('').' → logprob: -16.625185012817383
    9. ')' → logprob: -18.000185012817383
    10. '.split' → logprob: -18.000185012817383

Token 43: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.662937372922897e-05
    2. 'strip' → logprob: -9.375096321105957
    3. 'rstrip' → logprob: -12.125096321105957
    4. 'rs' → logprob: -12.875096321105957
    5. ' split' → logprob: -13.125096321105957
    6. 'spl' → logprob: -13.500096321105957
    7. '(split' → logprob: -16.000097274780273
    8. 'sp' → logprob: -16.375097274780273
    9. '.split' → logprob: -16.875097274780273
    10. 's' → logprob: -17.250097274780273

Token 44: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.002349122893065214
    2. '(' → logprob: -6.127348899841309
    3. '('' → logprob: -9.002348899841309
    4. '()
' → logprob: -11.252348899841309
    5. '(',' → logprob: -11.502348899841309
    6. '(),' → logprob: -12.627348899841309
    7. ' ()' → logprob: -12.752348899841309
    8. ')' → logprob: -13.002348899841309
    9. '()

' → logprob: -13.252348899841309
    10. '("' → logprob: -13.377348899841309

Token 45: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 46: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.28997325897216797
    2. 'p' (adapté à ' p') → logprob: -1.914973258972168
    3. ' ' → logprob: -2.414973258972168
    4. ' s' → logprob: -6.164973258972168
    5. 's' → logprob: -6.414973258972168
    6. ')' → logprob: -6.414973258972168
    7. ' )' → logprob: -6.414973258972168
    8. '    ' → logprob: -7.039973258972168
    9. ' liste' → logprob: -7.039973258972168
    10. 'liste' → logprob: -7.289973258972168

Token 47: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.43117037415504456
    2. ' =' → logprob: -1.0561703443527222
    3. '=int' → logprob: -6.056170463562012
    4. ')' → logprob: -9.931170463562012
    5. ',' → logprob: -10.556170463562012
    6. 'int' → logprob: -10.556170463562012
    7. ' ' → logprob: -12.056170463562012
    8. '<|end|>' → logprob: -12.431170463562012
    9. '   ' → logprob: -12.806170463562012
    10. '  ' → logprob: -13.681170463562012

Token 48: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5762413740158081
    2. ' int' → logprob: -0.8262413740158081
    3. ' float' → logprob: -8.326241493225098
    4. 'float' → logprob: -9.826241493225098
    5. ' ' → logprob: -13.201241493225098
    6. '=int' → logprob: -14.076241493225098
    7. '[int' → logprob: -14.326241493225098
    8. ' ' → logprob: -14.326241493225098
    9. '(int' → logprob: -14.576241493225098
    10. '	int' → logprob: -14.826241493225098

Token 49: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.038088422268629074
    2. '(' → logprob: -3.288088321685791
    3. ' (' → logprob: -10.66308879852295
    4. '()' → logprob: -10.78808879852295
    5. ' ' → logprob: -14.28808879852295
    6. '('' → logprob: -14.28808879852295
    7. ')' → logprob: -14.41308879852295
    8. '(
' → logprob: -15.03808879852295
    9. 'p' → logprob: -15.66308879852295
    10. '((' → logprob: -16.038087844848633

Token 50: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010485442908247933
    2. ' )' → logprob: -9.375104904174805
    3. ')
' → logprob: -11.375104904174805
    4. '   ' → logprob: -11.875104904174805
    5. '))' → logprob: -15.375104904174805
    6. '#' → logprob: -15.500104904174805
    7. ' ' → logprob: -15.750104904174805
    8. ')p' → logprob: -15.750104904174805
    9. ')#' → logprob: -16.125104904174805
    10. '')' → logprob: -16.375104904174805

Token 51: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011238683015108109
    2. ')' → logprob: -4.7612385749816895
    3. '<|end|>' → logprob: -6.6362385749816895
    4. '
' → logprob: -8.136239051818848
    5. ' ' → logprob: -8.261239051818848
    6. '    
' → logprob: -8.886239051818848
    7. '  ' → logprob: -9.011239051818848
    8. ',' → logprob: -9.136239051818848
    9. 'liste' → logprob: -9.511239051818848
    10. '    ' → logprob: -9.636239051818848

Token 52: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0033498897682875395
    2. ')' → logprob: -6.003349781036377
    3. 'liste' → logprob: -7.753349781036377
    4. ' ' → logprob: -8.753350257873535
    5. '  ' → logprob: -9.503350257873535
    6. '<|end|>' → logprob: -9.503350257873535
    7. '    
' → logprob: -10.628350257873535
    8. '#' → logprob: -10.878350257873535
    9. '```' → logprob: -11.128350257873535
    10. ',' → logprob: -11.253350257873535

Token 53: ' conversion' (ID: 22165)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.095015287399292
    2. ' liste' → logprob: -1.345015287399292
    3. '<|end|>' → logprob: -1.845015287399292
    4. ')' → logprob: -1.970015287399292
    5. 'liste' → logprob: -2.970015287399292
    6. '<|end|>' → logprob: -4.845015525817871
    7. ' p' → logprob: -4.970015525817871
    8. ' )' → logprob: -4.970015525817871
    9. 'list' → logprob: -5.345015525817871
    10. ' ' → logprob: -5.470015525817871

Token 54: ' forc' (ID: 58285)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33303162455558777
    2. '<|end|>' → logprob: -1.3330316543579102
    3. ')' → logprob: -4.70803165435791
    4. '<|end|>' → logprob: -5.33303165435791
    5. ' ' → logprob: -5.70803165435791
    6. '    ' → logprob: -7.58303165435791
    7. '  ' → logprob: -7.58303165435791
    8. '```' → logprob: -7.70803165435791
    9. '    
' → logprob: -8.45803165435791
    10. ',' → logprob: -8.83303165435791

Token 55: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.01838206686079502
    2. 'é' → logprob: -4.3933820724487305
    3. 'e' → logprob: -5.5183820724487305
    4. 'ément' → logprob: -7.0183820724487305
    5. 'cée' → logprob: -8.51838207244873
    6. 't' → logprob: -8.89338207244873
    7. 'int' → logprob: -9.01838207244873
    8. 'ç' → logprob: -10.01838207244873
    9. 'è' → logprob: -10.26838207244873
    10. 'p' → logprob: -10.26838207244873

Token 56: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009300658479332924
    2. '<|end|>' → logprob: -5.009300708770752
    3. ')' → logprob: -6.634300708770752
    4. '    
' → logprob: -8.134300231933594
    5. ' ' → logprob: -8.384300231933594
    6. '<|end|>' → logprob: -8.509300231933594
    7. 'liste' → logprob: -9.009300231933594
    8. '  ' → logprob: -9.259300231933594
    9. ',' → logprob: -9.384300231933594
    10. '    ' → logprob: -10.259300231933594

Token 57: 'sin' (ID: 23516)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04969119653105736
    2. ' )' → logprob: -3.1746912002563477
    3. ' p' → logprob: -5.924691200256348
    4. ' ' → logprob: -6.049691200256348
    5. 'p' → logprob: -7.174691200256348
    6. ')p' → logprob: -8.299691200256348
    7. '  ' → logprob: -9.049691200256348
    8. '   ' → logprob: -9.049691200256348
    9. ' en' → logprob: -9.674691200256348
    10. ' ' → logprob: -10.049691200256348

Token 58: 'on' (ID: 263)
  Prédit: 'on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.020220207050442696
    2. 't' → logprob: -4.8952202796936035
    3. 'g' → logprob: -6.0202202796936035
    4. 'ón' → logprob: -6.0202202796936035
    5. 'c' → logprob: -6.2702202796936035
    6. 'plement' → logprob: -7.0202202796936035
    7. 'ç' → logprob: -7.1452202796936035
    8. 'gle' → logprob: -7.3952202796936035
    9. 'ple' → logprob: -7.5202202796936035
    10. 'p' → logprob: -7.8952202796936035

Token 59: ' ça' (ID: 13590)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.41250765323638916
    2. ' p' → logprob: -1.7875076532363892
    3. ' erreur' → logprob: -3.6625075340270996
    4. 'p' → logprob: -3.9125075340270996
    5. ' Type' → logprob: -4.0375075340271
    6. ' ' → logprob: -4.0375075340271
    7. ' Value' → logprob: -4.1625075340271
    8. ' on' → logprob: -4.2875075340271
    9. ' )' → logprob: -4.2875075340271
    10. 'Type' → logprob: -4.6625075340271

Token 60: ' plante' (ID: 39981)
  Prédit: 'ser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ser' → logprob: -1.0091164112091064
    2. 'reste' → logprob: -2.1341164112091064
    3. ' rester' → logprob: -2.2591164112091064
    4. 's' → logprob: -2.5091164112091064
    5. ' serait' → logprob: -2.8841164112091064
    6. ' reste' → logprob: -3.3841164112091064
    7. 'rest' → logprob: -3.7591164112091064
    8. 'sera' → logprob: -4.009116172790527
    9. 'sembler' → logprob: -4.134116172790527
    10. '<|end|>' → logprob: -4.759116172790527

Token 61: ' en' (ID: 469)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014490410685539246
    2. ')
' → logprob: -7.001449108123779
    3. '   ' → logprob: -7.876449108123779
    4. ' )' → logprob: -9.001448631286621
    5. ')n' → logprob: -12.126448631286621
    6. '')' → logprob: -12.376448631286621
    7. '#' → logprob: -12.376448631286621
    8. ' ' → logprob: -13.126448631286621
    9. ')#' → logprob: -13.126448631286621
    10. ')
' → logprob: -13.251448631286621

Token 62: ' int' (ID: 677)
  Prédit: ' cas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cas' → logprob: -1.4485007524490356
    2. ' tri' → logprob: -2.323500633239746
    3. ' ' → logprob: -2.448500633239746
    4. 'entrée' → logprob: -2.448500633239746
    5. 'tri' → logprob: -2.448500633239746
    6. 'python' → logprob: -2.948500633239746
    7. 'suite' → logprob: -3.073500633239746
    8. ' test' → logprob: -3.073500633239746
    9. 'jeu' → logprob: -3.573500633239746
    10. ' Python' → logprob: -3.698500633239746

Token 63: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00028982185176573694
    2. ')
' → logprob: -9.000289916992188
    3. ' )' → logprob: -9.500289916992188
    4. '   ' → logprob: -10.125289916992188
    5. ' ' → logprob: -11.375289916992188
    6. ')#' → logprob: -12.500289916992188
    7. '<|end|>' → logprob: -12.500289916992188
    8. '')' → logprob: -12.625289916992188
    9. '`)' → logprob: -12.875289916992188
    10. '#' → logprob: -12.875289916992188

Token 64: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003207300091162324
    2. '<|end|>' → logprob: -6.878207206726074
    3. 'liste' → logprob: -7.378207206726074
    4. '    
' → logprob: -7.503207206726074
    5. '
' → logprob: -7.628207206726074
    6. '  ' → logprob: -9.503207206726074
    7. ')' → logprob: -9.628207206726074
    8. '```' → logprob: -10.003207206726074
    9. '<|end|>' → logprob: -10.003207206726074
    10. 'l' → logprob: -10.253207206726074

Token 65: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' (adapté à ' liste') → logprob: -0.39989781379699707
    2. ' liste' → logprob: -1.274897813796997
    3. '   ' → logprob: -3.149897813796997
    4. 'list' → logprob: -6.149897575378418
    5. 'l' → logprob: -6.649897575378418
    6. ' list' → logprob: -7.399897575378418
    7. ' ' → logprob: -7.649897575378418
    8. ' if' → logprob: -7.774897575378418
    9. '    
' → logprob: -8.274897575378418
    10. 'lista' → logprob: -8.274897575378418

Token 66: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.2255266010761261
    2. '.' → logprob: -1.6005265712738037
    3. '.add' → logprob: -10.600526809692383
    4. '.extend' → logprob: -10.850526809692383
    5. '.push' → logprob: -11.225526809692383
    6. '.app' → logprob: -11.350526809692383
    7. '.setdefault' → logprob: -11.475526809692383
    8. '.Append' → logprob: -11.850526809692383
    9. ' .' → logprob: -12.100526809692383
    10. '   ' → logprob: -12.600526809692383

Token 67: '([' (ID: 5194)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00041184606379829347
    2. '(' → logprob: -7.8754119873046875
    3. '(s' → logprob: -10.500411987304688
    4. '([' → logprob: -12.875411987304688
    5. '(('' → logprob: -14.250411987304688
    6. '(p' → logprob: -15.250411987304688
    7. ' ((' → logprob: -16.125411987304688
    8. '(("' → logprob: -16.125411987304688
    9. '(([' → logprob: -16.250411987304688
    10. '(
' → logprob: -16.375411987304688

Token 68: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.025890331715345383
    2. 'p' → logprob: -3.775890350341797
    3. ' s' → logprob: -6.025890350341797
    4. ' p' → logprob: -8.650890350341797
    5. '   ' → logprob: -10.650890350341797
    6. ' ' → logprob: -11.775890350341797
    7. 'j' → logprob: -13.088390350341797
    8. '  ' → logprob: -13.150890350341797
    9. '-s' → logprob: -13.150890350341797
    10. '(s' → logprob: -13.400890350341797

Token 69: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0033201880287379026
    2. ',p' → logprob: -5.753320217132568
    3. ' ,' → logprob: -8.87831974029541
    4. ',
' → logprob: -14.00331974029541
    5. ',n' → logprob: -14.50331974029541
    6. 'p' → logprob: -14.87831974029541
    7. ',j' → logprob: -15.37831974029541
    8. ' p' → logprob: -15.37831974029541
    9. ' ' → logprob: -15.75331974029541
    10. '‌,' → logprob: -16.003320693969727

Token 70: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.2811671793460846
    2. ' p' → logprob: -1.4061671495437622
    3. ' ' → logprob: -12.281167030334473
    4. ' ' → logprob: -12.406167030334473
    5. '   ' → logprob: -12.406167030334473
    6. '    ' → logprob: -13.031167030334473
    7. '  ' → logprob: -13.781167030334473
    8. ',' → logprob: -15.781167030334473
    9. '	p' → logprob: -16.34366798400879
    10. '(p' → logprob: -16.71866798400879

Token 71: ',' (ID: 11)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0006652565789408982
    2. ')' → logprob: -8.125665664672852
    3. ')])' → logprob: -8.625665664672852
    4. ' ])' → logprob: -9.000665664672852
    5. '])
' → logprob: -10.375665664672852
    6. '   ' → logprob: -11.500665664672852
    7. ')]' → logprob: -12.250665664672852
    8. ']])' → logprob: -12.375665664672852
    9. '])]' → logprob: -12.500665664672852
    10. ']))' → logprob: -12.875665664672852

Token 72: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0263754241168499
    2. ' j' → logprob: -3.6513755321502686
    3. ' ' → logprob: -9.901375770568848
    4. '   ' → logprob: -11.651375770568848
    5. '  ' → logprob: -12.651375770568848
    6. '0' → logprob: -12.901375770568848
    7. ' ' → logprob: -13.651375770568848
    8. ']' → logprob: -14.026375770568848
    9. ')' → logprob: -14.026375770568848
    10. 'n' → logprob: -14.088875770568848

Token 73: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00014597235713154078
    2. ')' → logprob: -9.12514591217041
    3. ' ])' → logprob: -11.00014591217041
    4. ')])' → logprob: -11.75014591217041
    5. ']' → logprob: -12.25014591217041
    6. '])
' → logprob: -12.75014591217041
    7. '   ' → logprob: -13.50014591217041
    8. '])]' → logprob: -14.12514591217041
    9. ']])' → logprob: -14.25014591217041
    10. ')]' → logprob: -14.37514591217041

Token 74: '#' (ID: 2)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.0055455975234508514
    2. '
' → logprob: -6.755545616149902
    3. '```' → logprob: -6.880545616149902
    4. '#' → logprob: -7.130545616149902
    5. 'lst' → logprob: -7.505545616149902
    6. 'l' → logprob: -7.755545616149902
    7. ')' → logprob: -7.755545616149902
    8. 'sorted' → logprob: -8.005545616149902
    9. 'list' → logprob: -9.130545616149902
    10. 'lista' → logprob: -9.755545616149902

Token 75: ' d' (ID: 272)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.03830265626311302
    2. '#' → logprob: -4.038302421569824
    3. 'l' → logprob: -5.038302421569824
    4. ' liste' → logprob: -5.538302421569824
    5. '
' → logprob: -5.913302421569824
    6. 'lst' → logprob: -6.413302421569824
    7. 'list' → logprob: -6.788302421569824
    8. 'def' → logprob: -7.413302421569824
    9. 's' → logprob: -7.538302421569824
    10. 'for' → logprob: -7.538302421569824

Token 76: ''abord' (ID: 89989)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1073938608169556
    2. 'ef' → logprob: -1.3573938608169556
    3. 'e' → logprob: -1.4823938608169556
    4. 'u' → logprob: -3.357393741607666
    5. 'liste' → logprob: -3.357393741607666
    6. 'onne' → logprob: -4.357393741607666
    7. ' =' → logprob: -4.357393741607666
    8. 'f' → logprob: -4.482393741607666
    9. 'ic' → logprob: -4.607393741607666
    10. 'i' → logprob: -4.732393741607666

Token 77: ' tri' (ID: 12665)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.36161932349205017
    2. 'liste' → logprob: -2.236619234085083
    3. ' liste' → logprob: -3.486619234085083
    4. 'tri' → logprob: -3.861619234085083
    5. '=' → logprob: -4.236619472503662
    6. 'l' → logprob: -4.236619472503662
    7. ' tri' → logprob: -4.361619472503662
    8. ')' → logprob: -4.486619472503662
    9. '<|end|>' → logprob: -4.486619472503662
    10. ' on' → logprob: -4.611619472503662

Token 78: ' par' (ID: 686)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7560006976127625
    2. 'st' → logprob: -1.6310007572174072
    3. ',' → logprob: -2.3810007572174072
    4. 'er' → logprob: -3.0060007572174072
    5. ' =' → logprob: -3.5060007572174072
    6. 'm' → logprob: -3.8810007572174072
    7. 'r' → logprob: -4.006000518798828
    8. '   ' → logprob: -4.006000518798828
    9. 'liste' → logprob: -4.131000518798828
    10. '=' → logprob: -4.381000518798828

Token 79: ' place' (ID: 2475)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.1322740912437439
    2. 'p' → logprob: -2.5072741508483887
    3. ' score' → logprob: -4.507274150848389
    4. '-' → logprob: -4.882274150848389
    5. 'score' → logprob: -5.882274150848389
    6. ' points' → logprob: -6.007274150848389
    7. ' priorité' → logprob: -6.007274150848389
    8. ' -' → logprob: -6.132274150848389
    9. ' prix' → logprob: -6.757274150848389
    10. ' ' → logprob: -6.882274150848389

Token 80: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01978927105665207
    2. ' ,' → logprob: -4.644789218902588
    3. 's' → logprob: -5.394789218902588
    4. ',l' → logprob: -6.519789218902588
    5. ',
' → logprob: -6.769789218902588
    6. 'liste' → logprob: -7.019789218902588
    7. 'e' → logprob: -8.019789695739746
    8. ':' → logprob: -8.269789695739746
    9. '=' → logprob: -8.519789695739746
    10. 'l' → logprob: -8.644789695739746

Token 81: 'je' (ID: 1587)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8648960590362549
    2. ',' → logprob: -0.8648960590362549
    3. 'p' → logprob: -2.489896059036255
    4. ' )' → logprob: -3.239896059036255
    5. ' ,' → logprob: -3.989896059036255
    6. ' p' → logprob: -4.614895820617676
    7. '),' → logprob: -6.239895820617676
    8. ',)' → logprob: -6.239895820617676
    9. ',p' → logprob: -7.114895820617676
    10. ')p' → logprob: -8.239895820617676

Token 82: ' préfère' (ID: 141784)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6046057939529419
    2. ')' → logprob: -1.604605793952942
    3. ' =' → logprob: -1.979605793952942
    4. 'n' → logprob: -3.8546056747436523
    5. 'p' → logprob: -4.354605674743652
    6. ',' → logprob: -4.604605674743652
    7. '#' → logprob: -4.604605674743652
    8. 's' → logprob: -4.729605674743652
    9. 'd' → logprob: -5.104605674743652
    10. '   ' → logprob: -5.604605674743652

Token 83: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0113105773925781
    2. ' )' → logprob: -1.6363105773925781
    3. 'p' → logprob: -1.7613105773925781
    4. ' p' → logprob: -2.011310577392578
    5. ' la' → logprob: -3.511310577392578
    6. ',' → logprob: -3.511310577392578
    7. 'le' → logprob: -4.636310577392578
    8. 's' → logprob: -4.886310577392578
    9. 'place' → logprob: -5.011310577392578
    10. ' l' → logprob: -5.136310577392578

Token 84: ' puis' (ID: 18766)
  Prédit: ' puis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' puis' → logprob: -0.395126074552536
    2. ' liste' → logprob: -2.0201261043548584
    3. ' then' → logprob: -2.3951261043548584
    4. 'liste' → logprob: -2.5201261043548584
    5. ' ensuite' → logprob: -4.770125865936279
    6. 'then' → logprob: -5.270125865936279
    7. ' key' → logprob: -6.270125865936279
    8. 's' → logprob: -7.145125865936279
    9. ' lst' → logprob: -7.770125865936279
    10. ' ' → logprob: -7.770125865936279

Token 85: ' par' (ID: 686)
  Prédit: ' tri'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tri' → logprob: -0.7263607382774353
    2. 'tri' → logprob: -1.10136079788208
    3. ' par' → logprob: -1.97636079788208
    4. 'par' → logprob: -3.47636079788208
    5. ' un' → logprob: -5.47636079788208
    6. ' ' → logprob: -6.10136079788208
    7. '#' → logprob: -7.22636079788208
    8. '```' → logprob: -7.35136079788208
    9. ' on' → logprob: -7.60136079788208
    10. 'au' → logprob: -7.66386079788208

Token 86: ' nom' (ID: 8080)
  Prédit: ' score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' score' → logprob: -1.3002707958221436
    2. ' note' → logprob: -1.8002707958221436
    3. ' nom' → logprob: -2.0502707958221436
    4. 'score' → logprob: -2.5502707958221436
    5. ' p' → logprob: -2.6752707958221436
    6. '-' → logprob: -2.6752707958221436
    7. 'nom' → logprob: -3.0502707958221436
    8. 'p' → logprob: -3.6752707958221436
    9. 'note' → logprob: -3.6752707958221436
    10. ' -' → logprob: -4.050271034240723

Token 87: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6160261631011963
    2. 'liste' → logprob: -0.9910261631011963
    3. ',' → logprob: -3.4910261631011963
    4. '
' → logprob: -3.6160261631011963
    5. ',
' → logprob: -4.741025924682617
    6. 's' → logprob: -5.366025924682617
    7. '

' → logprob: -5.491025924682617
    8. '\' → logprob: -5.741025924682617
    9. ',l' → logprob: -6.241025924682617
    10. '' → logprob: -6.366025924682617

Token 88: 'liste' (ID: 69656)
  Prédit: 'liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.05601821094751358
    2. '
' → logprob: -2.931018114089966
    3. 'l' → logprob: -7.806018352508545
    4. '
' → logprob: -8.681017875671387
    5. '```' → logprob: -8.806017875671387
    6. 'list' → logprob: -9.306017875671387
    7. 'lst' → logprob: -9.556017875671387
    8. 'lista' → logprob: -9.806017875671387
    9. 's' → logprob: -10.306017875671387
    10. ' liste' → logprob: -10.556017875671387

Token 89: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.062034789472818375
    2. '.' → logprob: -2.812034845352173
    3. '<|end|>' → logprob: -10.312034606933594
    4. 'sort' → logprob: -11.812034606933594
    5. '.s' → logprob: -12.062034606933594
    6. '_sorted' → logprob: -12.312034606933594
    7. '[' → logprob: -12.687034606933594
    8. ' =' → logprob: -13.062034606933594
    9. '.setdefault' → logprob: -13.187034606933594
    10. '=' → logprob: -13.187034606933594

Token 90: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.0015514022670686245
    2. '()' → logprob: -6.751551628112793
    3. '(' → logprob: -8.001551628112793
    4. '(reverse' → logprob: -10.126551628112793
    5. '(lambda' → logprob: -12.751551628112793
    6. 'key' → logprob: -13.626551628112793
    7. '(
' → logprob: -13.751551628112793
    8. ',key' → logprob: -15.376551628112793
    9. '(keys' → logprob: -16.001550674438477
    10. '```' → logprob: -16.001550674438477

Token 91: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.0031777136027812958
    2. '=' → logprob: -5.753177642822266
    3. '=

' → logprob: -18.378177642822266
    4. '=len' → logprob: -18.628177642822266
    5. ' =' → logprob: -19.253177642822266
    6. '=l' → logprob: -19.378177642822266
    7. '=
' → logprob: -19.503177642822266
    8. '=item' → logprob: -19.628177642822266
    9. 'lambda' → logprob: -19.628177642822266
    10. '=int' → logprob: -19.753177642822266

Token 92: ' elem' (ID: 23108)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.03031500242650509
    2. 'x' → logprob: -3.5303149223327637
    3. ' e' → logprob: -9.280315399169922
    4. ' l' → logprob: -9.530315399169922
    5. ' ' → logprob: -9.905315399169922
    6. 'e' → logprob: -9.905315399169922
    7. ' item' → logprob: -9.905315399169922
    8. ' a' → logprob: -10.030315399169922
    9. ' t' → logprob: -10.530315399169922
    10. ' i' → logprob: -10.655315399169922

Token 93: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00014740281039848924
    2. ' :' → logprob: -8.875147819519043
    3. ':(' → logprob: -12.500147819519043
    4. 'elem' → logprob: -13.375147819519043
    5. '[' → logprob: -14.250147819519043
    6. ':[' → logprob: -15.375147819519043
    7. '=' → logprob: -15.375147819519043
    8. ':e' → logprob: -15.625147819519043
    9. 'e' → logprob: -16.000146865844727
    10. ':
' → logprob: -16.125146865844727

Token 94: ' elem' (ID: 23108)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5383861660957336
    2. '(elem' → logprob: -1.1633861064910889
    3. 'elem' → logprob: -2.788386106491089
    4. ' elem' → logprob: -3.538386106491089
    5. '(' → logprob: -4.788386344909668
    6. ' (-' → logprob: -5.788386344909668
    7. '(-' → logprob: -6.538386344909668
    8. '(lambda' → logprob: -9.288386344909668
    9. '	elem' → logprob: -9.788386344909668
    10. '-' → logprob: -10.100886344909668

Token 95: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0001363168703392148
    2. '[-' → logprob: -9.000136375427246
    3. '[::-' → logprob: -12.875136375427246
    4. ' [' → logprob: -13.000136375427246
    5. '[:' → logprob: -13.250136375427246
    6. ')' → logprob: -13.750136375427246
    7. 'p' → logprob: -13.875136375427246
    8. '[p' → logprob: -14.125136375427246
    9. 'elem' → logprob: -14.500136375427246
    10. '1' → logprob: -15.125136375427246

Token 96: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2561092972755432
    2. '2' → logprob: -1.6311092376708984
    3. '0' → logprob: -3.5061092376708984
    4. '-' → logprob: -8.881109237670898
    5. '(' → logprob: -10.881109237670898
    6. ' ' → logprob: -11.631109237670898
    7. '[' → logprob: -11.693609237670898
    8. '```' → logprob: -12.318609237670898
    9. '])' → logprob: -12.568609237670898
    10. ']' → logprob: -12.568609237670898

Token 97: '],' (ID: 2155)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09136847406625748
    2. ',' → logprob: -2.4663684368133545
    3. ' )' → logprob: -6.341368675231934
    4. ',)' → logprob: -7.716368675231934
    5. '))' → logprob: -9.466368675231934
    6. ' ,' → logprob: -9.966368675231934
    7. '),' → logprob: -9.966368675231934
    8. ')#' → logprob: -11.341368675231934
    9. ')
' → logprob: -11.591368675231934
    10. '])' → logprob: -12.091368675231934

Token 98: ' reverse' (ID: 18199)
  Prédit: ' reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reverse' → logprob: -0.693186342716217
    2. 'reverse' → logprob: -0.693186342716217
    3. ')' → logprob: -10.44318675994873
    4. '(reverse' → logprob: -13.19318675994873
    5. '_reverse' → logprob: -13.31818675994873
    6. ' ' → logprob: -13.44318675994873
    7. ' )' → logprob: -13.44318675994873
    8. '    ' → logprob: -13.94318675994873
    9. '.reverse' → logprob: -14.31818675994873
    10. 'rev' → logprob: -14.69318675994873

Token 99: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.0003811025235336274
    2. '=' → logprob: -7.875380992889404
    3. '=False' → logprob: -13.875381469726562
    4. 'True' → logprob: -16.875381469726562
    5. '=T' → logprob: -18.000381469726562
    6. '=

' → logprob: -18.125381469726562
    7. '=
' → logprob: -18.375381469726562
    8. ')' → logprob: -18.625381469726562
    9. ' =' → logprob: -19.750381469726562
    10. ')=' → logprob: -20.125381469726562

Token 100: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.392824874026701e-05
    2. ')
' → logprob: -11.25003433227539
    3. '),' → logprob: -11.62503433227539
    4. ',' → logprob: -12.25003433227539
    5. ' )' → logprob: -12.37503433227539
    6. '))' → logprob: -13.25003433227539
    7. ',)' → logprob: -13.87503433227539
    8. ')#' → logprob: -16.62503433227539
    9. ')

' → logprob: -16.75003433227539
    10. ').' → logprob: -17.25003433227539

Token 101: 'liste' (ID: 69656)
  Prédit: 'liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.0032796678133308887
    2. ',
' → logprob: -6.628279685974121
    3. ',' → logprob: -6.753279685974121
    4. '
' → logprob: -8.128279685974121
    5. ',l' → logprob: -8.503279685974121
    6. '#' → logprob: -9.003279685974121
    7. 'l' → logprob: -10.503279685974121
    8. ')
' → logprob: -10.628279685974121
    9. 'lista' → logprob: -10.753279685974121
    10. '[
' → logprob: -10.878279685974121

Token 102: '.sort' (ID: 19551)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 103: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -6.630610641877865e-06
    2. '(' → logprob: -12.125006675720215
    3. ' (' → logprob: -14.250006675720215
    4. 'key' → logprob: -15.250006675720215
    5. ',key' → logprob: -16.1250057220459
    6. '(
' → logprob: -17.0000057220459
    7. '(lambda' → logprob: -18.1250057220459
    8. '()' → logprob: -18.1250057220459
    9. ' key' → logprob: -18.6250057220459
    10. '	key' → logprob: -18.7500057220459

Token 104: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.0007104054093360901
    2. '=' → logprob: -7.250710487365723
    3. 'lambda' → logprob: -14.875710487365723
    4. '=l' → logprob: -17.625709533691406
    5. '=
' → logprob: -18.125709533691406
    6. 'ambda' → logprob: -18.500709533691406
    7. '=

' → logprob: -18.875709533691406
    8. ' lambda' → logprob: -19.250709533691406
    9. '=None' → logprob: -19.875709533691406
    10. ' =' → logprob: -20.125709533691406

Token 105: ' elem' (ID: 23108)
  Prédit: ' elem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elem' → logprob: -0.4740995764732361
    2. 'elem' → logprob: -0.9740995764732361
    3. '(elem' → logprob: -11.099099159240723
    4. '	elem' → logprob: -12.099099159240723
    5. '.elem' → logprob: -14.349099159240723
    6. '_elem' → logprob: -14.974099159240723
    7. ' ' → logprob: -15.349099159240723
    8. 'element' → logprob: -15.849099159240723
    9. 'x' → logprob: -16.09910011291504
    10. 'e' → logprob: -16.47410011291504

Token 106: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.301394023466855e-05
    2. ' :' → logprob: -9.875062942504883
    3. '[' → logprob: -12.250062942504883
    4. ':
' → logprob: -12.875062942504883
    5. '0' → logprob: -13.375062942504883
    6. '=lambda' → logprob: -14.000062942504883
    7. '1' → logprob: -14.375062942504883
    8. 'lambda' → logprob: -14.500062942504883
    9. '```' → logprob: -15.875062942504883
    10. '_:' → logprob: -16.500062942504883

Token 107: ' elem' (ID: 23108)
  Prédit: 'elem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elem' → logprob: -0.006729814689606428
    2. ' elem' → logprob: -5.006729602813721
    3. '	elem' → logprob: -11.506730079650879
    4. '(elem' → logprob: -12.756730079650879
    5. '   ' → logprob: -14.506730079650879
    6. 'lambda' → logprob: -14.756730079650879
    7. 'x' → logprob: -15.506730079650879
    8. 'ele' → logprob: -15.756730079650879
    9. ' ' → logprob: -16.381729125976562
    10. '.elem' → logprob: -16.881729125976562

Token 108: '[' (ID: 58)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.695480227470398
    2. '[' → logprob: -0.695480227470398
    3. '0' → logprob: -6.1954803466796875
    4. ' :' → logprob: -9.445480346679688
    5. '1' → logprob: -9.695480346679688
    6. 's' → logprob: -10.070480346679688
    7. ' ' → logprob: -11.070480346679688
    8. '```' → logprob: -11.195480346679688
    9. ':[' → logprob: -11.195480346679688
    10. '   ' → logprob: -11.445480346679688

Token 109: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.220573363360018e-05
    2. '2' → logprob: -9.875082015991211
    3. '1' → logprob: -10.500082015991211
    4. ' ' → logprob: -14.000082015991211
    5. ':' → logprob: -14.500082015991211
    6. 's' → logprob: -14.750082015991211
    7. '```' → logprob: -15.812582015991211
    8. '[' → logprob: -16.06258201599121
    9. '۰' → logprob: -16.25008201599121
    10. '   ' → logprob: -16.31258201599121

Token 110: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.001317977556027472
    2. ')' → logprob: -7.626317977905273
    3. '[' → logprob: -7.626317977905273
    4. '],' → logprob: -8.751317977905273
    5. '][' → logprob: -9.751317977905273
    6. ']' → logprob: -10.001317977905273
    7. ' ])' → logprob: -10.126317977905273
    8. ',' → logprob: -10.626317977905273
    9. ''])' → logprob: -12.626317977905273
    10. ' )' → logprob: -13.251317977905273

Token 111: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00012403888104017824
    2. ' for' → logprob: -9.500123977661133
    3. 'n' → logprob: -11.125123977661133
    4. 'print' → logprob: -11.625123977661133
    5. '#' → logprob: -12.125123977661133
    6. ')' → logprob: -12.375123977661133
    7. 'i' → logprob: -12.875123977661133
    8. 'result' → logprob: -13.875123977661133
    9. 'liste' → logprob: -13.875123977661133
    10. ',' → logprob: -14.000123977661133

Token 112: ' affich' (ID: 90179)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.0590548703912646e-05
    2. 'print' → logprob: -10.750030517578125
    3. 'n' → logprob: -13.125030517578125
    4. ' for' → logprob: -13.125030517578125
    5. 'result' → logprob: -13.500030517578125
    6. 'i' → logprob: -13.750030517578125
    7. 'j' → logprob: -14.125030517578125
    8. '#' → logprob: -14.625030517578125
    9. '```' → logprob: -15.750030517578125
    10. 'liste' → logprob: -15.875030517578125

Token 113: 'age' (ID: 477)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2426164448261261
    2. 'age' → logprob: -2.2426164150238037
    3. 'er' → logprob: -2.9926164150238037
    4. '()' → logprob: -3.4926164150238037
    5. 'print' → logprob: -4.492616653442383
    6. '(' → logprob: -5.617616653442383
    7. 'ation' → logprob: -5.742616653442383
    8. 'ist' → logprob: -5.867616653442383
    9. '(
' → logprob: -6.367616653442383
    10. '#' → logprob: -6.742616653442383

Token 114: ' des' (ID: 731)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -9.088346359931165e-07
    2. ' for' → logprob: -14.000000953674316
    3. '```' → logprob: -17.875
    4. 'n' → logprob: -19.625
    5. '<|end|>' → logprob: -19.875
    6. 'i' → logprob: -20.75
    7. '
' → logprob: -20.75
    8. '	for' → logprob: -21.25
    9. 'print' → logprob: -21.25
    10. 'j' → logprob: -21.25

Token 115: ' indices' (ID: 30378)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.3371776342391968
    2. 'result' → logprob: -1.5871776342391968
    3. 'élé' → logprob: -2.0871777534484863
    4. 'rés' → logprob: -2.0871777534484863
    5. 'for' → logprob: -2.7121777534484863
    6. 's' → logprob: -2.8371777534484863
    7. 'nom' → logprob: -3.7121777534484863
    8. 'elements' → logprob: -4.212177753448486
    9. 'res' → logprob: -4.337177753448486
    10. 'elem' → logprob: -4.462177753448486

Token 116: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.9361264946837764e-07
    2. ' for' → logprob: -16.0
    3. '```' → logprob: -18.25
    4. 'print' → logprob: -19.25
    5. '<|end|>' → logprob: -19.875
    6. 'i' → logprob: -20.125
    7. '
' → logprob: -20.875
    8. 'j' → logprob: -21.125
    9. '	for' → logprob: -21.5
    10. '#' → logprob: -21.875

Token 117: '1' (ID: 16)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.128163257315464e-07
    2. ' for' → logprob: -15.25
    3. 'print' → logprob: -17.5
    4. '```' → logprob: -17.5
    5. '
' → logprob: -19.375
    6. '``' → logprob: -20.25
    7. 'j' → logprob: -20.625
    8. '[' → logprob: -20.625
    9. '	for' → logprob: -20.625
    10. '[
' → logprob: -20.875

Token 118: '-based' (ID: 8235)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04215679317712784
    2. ':' → logprob: -3.79215669631958
    3. '[' → logprob: -5.04215669631958
    4. '=' → logprob: -5.91715669631958
    5. ' for' → logprob: -5.91715669631958
    6. 'in' → logprob: -6.91715669631958
    7. ' in' → logprob: -6.91715669631958
    8. '[:]' → logprob: -7.16715669631958
    9. '0' → logprob: -7.29215669631958
    10. ',' → logprob: -7.41715669631958

Token 119: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.320199877838604e-07
    2. ' for' → logprob: -14.875
    3. '```' → logprob: -18.75
    4. '
' → logprob: -18.875
    5. 'j' → logprob: -19.0
    6. 'print' → logprob: -20.25
    7. 'i' → logprob: -20.875
    8. '<|end|>' → logprob: -21.625
    9. '``' → logprob: -22.25
    10. '	for' → logprob: -22.375

Token 120: 'pas' (ID: 21122)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005466524511575699
    2. ' for' → logprob: -5.255466461181641
    3. ')' → logprob: -8.63046646118164
    4. 'pour' → logprob: -10.13046646118164
    5. 'print' → logprob: -11.75546646118164
    6. ')
' → logprob: -12.75546646118164
    7. ' pour' → logprob: -14.25546646118164
    8. '
' → logprob: -14.25546646118164
    9. '#' → logprob: -14.50546646118164
    10. 'n' → logprob: -14.63046646118164

Token 121: ' fan' (ID: 6831)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6898951530456543
    2. '#' → logprob: -1.8148951530456543
    3. 'range' → logprob: -3.1898951530456543
    4. ' ' → logprob: -3.3148951530456543
    5. 'comme' → logprob: -3.3148951530456543
    6. ' for' → logprob: -3.8148951530456543
    7. ')' → logprob: -4.189895153045654
    8. 'la' → logprob: -4.314895153045654
    9. 'indices' → logprob: -4.439895153045654
    10. 'n' → logprob: -4.689895153045654

Token 122: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08638469874858856
    2. ' de' → logprob: -3.9613847732543945
    3. '   ' → logprob: -4.0863847732543945
    4. ',' → logprob: -4.7113847732543945
    5. 'range' → logprob: -4.9613847732543945
    6. 'e' → logprob: -5.3363847732543945
    7. ' for' → logprob: -5.5863847732543945
    8. '()' → logprob: -5.8363847732543945
    9. ' range' → logprob: -5.9613847732543945
    10. 'for' → logprob: -6.2113847732543945

Token 123: ' ce' (ID: 2357)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2320202738046646
    2. ' la' → logprob: -2.732020378112793
    3. 'la' → logprob: -2.857020378112793
    4. ' range' → logprob: -2.982020378112793
    5. '1' → logprob: -4.732020378112793
    6. 'enumer' → logprob: -5.357020378112793
    7. 'l' → logprob: -5.482020378112793
    8. ')' → logprob: -5.732020378112793
    9. 'for' → logprob: -5.982020378112793
    10. 'liste' → logprob: -6.232020378112793

Token 124: ' "+' (ID: 10953)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4450397193431854
    2. ' code' → logprob: -1.5700397491455078
    3. 'for' → logprob: -3.445039749145508
    4. 'code' → logprob: -3.945039749145508
    5. '#' → logprob: -4.445039749145508
    6. 'comment' → logprob: -4.570039749145508
    7. 'range' → logprob: -4.695039749145508
    8. ' for' → logprob: -4.945039749145508
    9. ' que' → logprob: -4.945039749145508
    10. ' )' → logprob: -5.070039749145508

Token 125: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00036299455678090453
    2. ' ' → logprob: -8.12536334991455
    3. '+' → logprob: -9.87536334991455
    4. '   ' → logprob: -11.50036334991455
    5. 'j' → logprob: -13.50036334991455
    6. ')' → logprob: -14.50036334991455
    7. ' +' → logprob: -14.75036334991455
    8. 'i' → logprob: -15.00036334991455
    9. ' j' → logprob: -15.00036334991455
    10. '=' → logprob: -15.12536334991455

Token 126: '"' (ID: 1)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15775808691978455
    2. '")' → logprob: -2.1577579975128174
    3. ')")' → logprob: -3.5327579975128174
    4. ' )' → logprob: -8.282757759094238
    5. ']' → logprob: -8.532757759094238
    6. ')
' → logprob: -8.657757759094238
    7. ',' → logprob: -9.782757759094238
    8. '])' → logprob: -10.032757759094238
    9. ')")
' → logprob: -10.157757759094238
    10. 'for' → logprob: -10.157757759094238

Token 127: ' mais' (ID: 2899)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18076516687870026
    2. ')
' → logprob: -2.055765151977539
    3. 'for' → logprob: -3.305765151977539
    4. ' for' → logprob: -7.680765151977539
    5. 'print' → logprob: -8.930765151977539
    6. ',' → logprob: -10.055765151977539
    7. ')

' → logprob: -11.555765151977539
    8. ')
' → logprob: -11.680765151977539
    9. '):
' → logprob: -11.805765151977539
    10. '`)' → logprob: -12.180765151977539

Token 128: ' bon' (ID: 4846)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.7927638292312622
    2. ')' → logprob: -0.9177638292312622
    3. ' True' → logprob: -2.1677637100219727
    4. 'True' → logprob: -4.292763710021973
    5. ' je' → logprob: -5.542763710021973
    6. 'c' → logprob: -6.292763710021973
    7. ' for' → logprob: -6.417763710021973
    8. ' )' → logprob: -6.417763710021973
    9. ' j' → logprob: -6.542763710021973
    10. ' vrai' → logprob: -6.667763710021973

Token 129: ')
' (ID: 446)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014303360134363174
    2. ')' → logprob: -5.014303207397461
    3. ' for' → logprob: -5.014303207397461
    4. ')
' → logprob: -7.014303207397461
    5. '
' → logprob: -11.389303207397461
    6. '```' → logprob: -13.389303207397461
    7. '<|end|>' → logprob: -13.514303207397461
    8. 'print' → logprob: -14.014303207397461
    9. '	for' → logprob: -14.264303207397461
    10. '):
' → logprob: -14.514303207397461

Token 130: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: 0.0
    2. ' for' → logprob: -17.125
    3. '```' → logprob: -19.875
    4. 'print' → logprob: -22.625
    5. '	for' → logprob: -23.5
    6. '<|end|>' → logprob: -23.875
    7. 'j' → logprob: -24.5
    8. 'For' → logprob: -24.875
    9. '.for' → logprob: -25.5
    10. '>' → logprob: -25.5

Token 131: ' thing' (ID: 4435)
  Prédit: ' elem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' elem' → logprob: -0.4767749607563019
    2. 'elem' → logprob: -1.1017749309539795
    3. ' i' → logprob: -3.3517749309539795
    4. 'i' → logprob: -4.851775169372559
    5. ' item' → logprob: -6.601775169372559
    6. ' element' → logprob: -7.476775169372559
    7. 'item' → logprob: -7.851775169372559
    8. 'e' → logprob: -7.976775169372559
    9. ' elt' → logprob: -7.976775169372559
    10. 'element' → logprob: -8.351775169372559

Token 132: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018620207905769348
    2. 'in' → logprob: -4.018620014190674
    3. ' ' → logprob: -7.768620014190674
    4. '  ' → logprob: -10.768620491027832
    5. 's' → logprob: -12.018620491027832
    6. ' i' → logprob: -12.143620491027832
    7. ' ' → logprob: -12.268620491027832
    8. 'n' → logprob: -13.393620491027832
    9. '_' → logprob: -13.393620491027832
    10. '   ' → logprob: -13.643620491027832

Token 133: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.12701986730098724
    2. ' liste' → logprob: -2.1270198822021484
    3. 'list' → logprob: -9.627019882202148
    4. 'range' → logprob: -11.002019882202148
    5. 'lst' → logprob: -13.002019882202148
    6. 'lista' → logprob: -13.127019882202148
    7. ' range' → logprob: -13.252019882202148
    8. 'l' → logprob: -14.252019882202148
    9. 'lis' → logprob: -14.252019882202148
    10. '   ' → logprob: -14.877019882202148

Token 134: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017086135921999812
    2. ':
' → logprob: -6.376708507537842
    3. '[' → logprob: -12.626708984375
    4. ' :' → logprob: -13.376708984375
    5. ':

' → logprob: -14.751708984375
    6. 'print' → logprob: -14.876708984375
    7. ':
' → logprob: -15.251708984375
    8. '   ' → logprob: -16.001708984375
    9. ',' → logprob: -16.001708984375
    10. '.' → logprob: -16.376708984375

Token 135: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03056129813194275
    2. ' print' → logprob: -3.5305612087249756
    3. 'print' → logprob: -7.155561447143555
    4. '	print' → logprob: -11.030561447143555
    5. '    
' → logprob: -12.405561447143555
    6. '   ' → logprob: -12.905561447143555
    7. '    ' → logprob: -13.030561447143555
    8. '```' → logprob: -13.280561447143555
    9. '       ' → logprob: -13.780561447143555
    10. '   ' → logprob: -15.030561447143555

Token 136: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0002043748099822551
    2. ' print' → logprob: -8.500204086303711
    3. '   ' → logprob: -14.000204086303711
    4. '```' → logprob: -19.12520408630371
    5. '	print' → logprob: -20.50020408630371
    6. '#print' → logprob: -21.62520408630371
    7. ' ' → logprob: -22.00020408630371
    8. 'printf' → logprob: -22.25020408630371
    9. '_print' → logprob: -22.50020408630371
    10. 'prin' → logprob: -22.75020408630371

Token 137: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.3451433409936726e-05
    2. '(f' → logprob: -11.125033378601074
    3. '("' → logprob: -11.375033378601074
    4. '('' → logprob: -12.750033378601074
    5. '((' → logprob: -13.000033378601074
    6. '(th' → logprob: -13.750033378601074
    7. ' (' → logprob: -15.625033378601074
    8. '(int' → logprob: -15.875033378601074
    9. 'thing' → logprob: -15.875033378601074
    10. '(
' → logprob: -16.00003433227539

Token 138: 'thing' (ID: 3070)
  Prédit: 'thing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'thing' → logprob: -7.553032628493384e-05
    2. ' thing' → logprob: -9.500075340270996
    3. '   ' → logprob: -14.875075340270996
    4. ' ' → logprob: -16.250076293945312
    5. 'Thing' → logprob: -17.000076293945312
    6. '  ' → logprob: -17.250076293945312
    7. 'str' → logprob: -17.750076293945312
    8. 'things' → logprob: -17.750076293945312
    9. 'something' → logprob: -17.875076293945312
    10. '(' → logprob: -18.875076293945312

Token 139: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.8889261304575484e-06
    2. ')[' → logprob: -14.000003814697266
    3. '[-' → logprob: -14.250003814697266
    4. ')' → logprob: -14.500003814697266
    5. ' [' → logprob: -14.625003814697266
    6. '[
' → logprob: -14.625003814697266
    7. '\[' → logprob: -15.250003814697266
    8. '```' → logprob: -15.875003814697266
    9. '1' → logprob: -16.000003814697266
    10. '2' → logprob: -16.625003814697266

Token 140: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.007668267469853163
    2. '1' → logprob: -4.882668495178223
    3. '0' → logprob: -9.882668495178223
    4. '
' → logprob: -12.132668495178223
    5. '-' → logprob: -12.757668495178223
    6. '

' → logprob: -14.007668495178223
    7. '[' → logprob: -14.632668495178223
    8. ' ' → logprob: -14.757668495178223
    9. '(' → logprob: -15.320168495178223
    10. '```' → logprob: -15.507668495178223

Token 141: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10063405334949493
    2. ']+' → logprob: -2.3506340980529785
    3. '+' → logprob: -8.10063362121582
    4. ' ]' → logprob: -9.10063362121582
    5. ')' → logprob: -11.97563362121582
    6. ')+' → logprob: -13.10063362121582
    7. ' +' → logprob: -13.22563362121582
    8. '])' → logprob: -14.10063362121582
    9. ']+=' → logprob: -14.22563362121582
    10. '+]' → logprob: -14.60063362121582

Token 142: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10025098919868469
    2. ' +' → logprob: -2.3502509593963623
    3. ')+' → logprob: -10.475251197814941
    4. ')' → logprob: -11.225251197814941
    5. '+)' → logprob: -13.600251197814941
    6. ' ' → logprob: -14.600251197814941
    7. '()+' → logprob: -15.350251197814941
    8. ' plus' → logprob: -15.600251197814941
    9. ']+' → logprob: -15.725251197814941
    10. ' )' → logprob: -15.725251197814941

Token 143: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001584850688232109
    2. ' ' → logprob: -8.750158309936523
    3. '   ' → logprob: -19.875158309936523
    4. '```' → logprob: -19.875158309936523
    5. '+' → logprob: -20.750158309936523
    6. ' ' → logprob: -22.000158309936523
    7. '１' → logprob: -22.375158309936523
    8. ' +' → logprob: -22.500158309936523
    9. '۱' → logprob: -22.625158309936523
    10. '`' → logprob: -22.625158309936523

Token 144: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '+' → logprob: -20.5
    4. '```' → logprob: -20.5
    5. '   ' → logprob: -22.0
    6. '`' → logprob: -22.5
    7. '۱' → logprob: -22.75
    8. '１' → logprob: -22.875
    9. '<|end|>' → logprob: -24.25
    10. '' → logprob: -24.375

Token 145: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ' )' → logprob: -14.500000953674316
    3. ')`' → logprob: -16.0
    4. ')
' → logprob: -16.375
    5. '))' → logprob: -16.5
    6. ')}' → logprob: -18.25
    7. '),' → logprob: -18.875
    8. ')#' → logprob: -19.0
    9. '`)' → logprob: -19.625
    10. '）' → logprob: -19.625

Token 146: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5983427166938782
    2. '#' → logprob: -1.3483426570892334
    3. '<|end|>' → logprob: -2.0983426570892334
    4. '```' → logprob: -3.7233426570892334
    5. '[' → logprob: -4.7233428955078125
    6. ' ' → logprob: -5.0983428955078125
    7. '
' → logprob: -5.0983428955078125
    8. ',' → logprob: -5.4733428955078125
    9. '+' → logprob: -5.5983428955078125
    10. 'n' → logprob: -5.7233428955078125

Token 147: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 148: ' normalement' (ID: 164432)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 149: ' ça' (ID: 13590)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 150: ' sort' (ID: 4506)
  Prédit: 'mar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mar' → logprob: -0.44252872467041016
    2. 'fonction' → logprob: -1.4425287246704102
    3. ' marche' → logprob: -2.94252872467041
    4. ' fonctionne' → logprob: -3.31752872467041
    5. 'march' → logprob: -4.69252872467041
    6. 'print' → logprob: -5.44252872467041
    7. 'continue' → logprob: -5.44252872467041
    8. 'f' → logprob: -6.06752872467041
    9. 'do' → logprob: -6.19252872467041
    10. 's' → logprob: -6.31752872467041

Token 151: ' dans' (ID: 2671)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 152: ' le' (ID: 505)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0060609253123402596
    2. ' l' → logprob: -5.50606107711792
    3. 'ordre' → logprob: -7.13106107711792
    4. 'lex' → logprob: -7.63106107711792
    5. 'le' → logprob: -8.756060600280762
    6. '[l' → logprob: -9.756060600280762
    7. '*l' → logprob: -9.756060600280762
    8. '(l' → logprob: -9.881060600280762
    9. 'leur' → logprob: -10.006060600280762
    10. '#' → logprob: -10.006060600280762

Token 153: ' bon' (ID: 4846)
  Prédit: 'bon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bon' → logprob: -0.485202431678772
    2. 'ordre' → logprob: -1.110202431678772
    3. 'bonne' → logprob: -3.3602023124694824
    4. ' bon' → logprob: -4.735202312469482
    5. 'm' → logprob: -4.985202312469482
    6. 'good' → logprob: -6.110202312469482
    7. 'me' → logprob: -8.23520278930664
    8. ' bonne' → logprob: -8.48520278930664
    9. 'tri' → logprob: -8.73520278930664
    10. 'prem' → logprob: -8.73520278930664

Token 154: ' ordre' (ID: 103061)
  Prédit: 'ordre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ordre' → logprob: -0.00013738969573751092
    2. ' ordre' → logprob: -9.375137329101562
    3. 'sens' → logprob: -10.875137329101562
    4. ''ordre' → logprob: -11.250137329101562
    5. '#' → logprob: -11.875137329101562
    6. 'order' → logprob: -12.125137329101562
    7. 'ordine' → logprob: -13.375137329101562
    8. 'coin' → logprob: -13.875137329101562
    9. 'ord' → logprob: -14.000137329101562
    10. 'l' → logprob: -14.125137329101562

Token 155: '?' (ID: 30)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 153
Tokens correctement prédits (1ère position, stricte): 45
Tokens correctement prédits (1ère position, avec adaptation): 47
Tokens correctement prédits (top 10): 86
Précision stricte (1ère position): 29.41%
Précision adaptée (1ère position): 30.72%
Précision (top 10): 56.21%
================================================================================
