================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:54:45
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Importation du module 'sys' pour accéder à stdin, qui permet de lire les entrées standards.
from sys import stdin
# Importation de la fonction deepcopy depuis le module copy, pour effectuer des copies profondes d'objets (non utilisé ici, mais présent dans le code original).
from copy import deepcopy
# Importation de la fonction reduce depuis functools, utilisée pour appliquer une fonction de façon cumulative (non utilisé ici, mais présent dans le code original).
from functools import reduce
# Importation de la fonction gcd du module fractions, pour calculer le plus grand commun diviseur (obsolète à partir de Python 3.5, préférer math.gcd ; pas utilisé ici).
from fractions import gcd
# Importation du module math, qui fournit des fonctions mathématiques de base (non utilisé ici).
import math
# Importation du module itertools, qui propose des fonctions pour la manipulation d’itérateurs (non utilisé directement ici).
import itertools
# Importation de la classe Counter pour le comptage rapide d’éléments (non utilisée ici).
from collections import Counter
# Importation de la fonction chain depuis itertools, utile pour aplatir des listes imbriquées (non utilisé ici).
from itertools import chain
# Importation de heappush et heappop depuis heapq, pour manipuler des files de priorité (non utilisés ici).
from heapq import heappush, heappop

"""
Ce bloc de texte multi-lignes contient des exemples de diverses opérations d'entrée fréquemment utilisées dans les concours de programmation, telles que :
- lecture d'un entier ;
- lecture de deux entiers sur une seule ligne ;
- lecture d'une liste d'entiers d'une entrée unique ;
- lecture d'une liste d'entiers à partir de plusieurs entrées ;
- lecture d'une liste bi-dimensionnelle.
Il n’est pas exécuté : il sert d’aide-mémoire/commentaire.
"""

# Lecture des deux entiers N et L depuis l'entrée standard (souvent la première ligne), séparés par un espace.
N, L = map(int, input().split())

# Calcul de la somme totale de la suite d'entiers allant de L à L+N-1, 
# c'est-à-dire N entiers consécutifs commençant à L.
# Afin d'alléger le calcul, la formule suivante est utilisée :
# Somme = N * (premier élément + dernier élément) // 2
# premier élément = L
# dernier élément = L + N - 1
# donc Somme = N * (L + (L + N - 1)) // 2 = N * (2L + N - 1) // 2
Sum = N * (N + 2 * L - 1) // 2

# On va chercher à supprimer du total l'élément dont la valeur absolue est minimale (le plus petit en valeur absolue).
# Cela correspond à la consigne typique de certains problèmes de programmation, où on doit retirer, par exemple, le "fruit" au goût le plus neutre.

# Si L > 0, alors tous les éléments sont strictement positifs (par exemple : [L, L+1, ..., L+N-1]).
if L > 0:
    # Dans ce cas, le nombre le plus proche de 0 est L (le plus petit de la suite).
    # Donc on soustrait L à la somme totale.
    ans = Sum - L
# Sinon, si L+N-1 < 0 (c’est-à-dire, le dernier élément est encore négatif), alors tous les nombres sont strictement négatifs.
elif L + N - 1 < 0:
    # Ici, l'élément le plus proche de zéro est le dernier élément de la suite, soit L+N-1 (le moins négatif).
    # On retire cet élément de la somme totale.
    ans = Sum - (L + N - 1)
else:
    # Dans tous les autres cas, la suite d'entiers contient 0, ou des entiers positifs et négatifs de part et d'autre de 0.
    # Dans ce cas, celui dont la valeur absolue est minimale est 0 lui-même, donc on retire 0, ce qui est inutile.
    ans = Sum

# Affichage du résultat calculé. Cette commande print affiche le nombre 'ans' à la sortie standard.
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Import' (ID: 19998)
  → Token d'amorce (pas de prédiction)

Token 2: 'ation' (ID: 387)
  → Token d'amorce (pas de prédiction)

Token 3: ' du' (ID: 1462)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2668710947036743
    2. 'import' → logprob: -2.2668709754943848
    3. '```' → logprob: -2.6418709754943848
    4. '_' → logprob: -3.3918709754943848
    5. '`' → logprob: -4.766870975494385
    6. ' ' → logprob: -5.016870975494385
    7. '#' → logprob: -6.141870975494385
    8. '[' → logprob: -6.641870975494385
    9. '.' → logprob: -6.641870975494385
    10. ' import' → logprob: -6.766870975494385

Token 4: ' module' (ID: 8827)
  Prédit: ' pandas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pandas' → logprob: -1.1210894584655762
    2. ' os' → logprob: -1.2460894584655762
    3. ' ' → logprob: -1.6210894584655762
    4. ' module' → logprob: -2.496089458465576
    5. ' numpy' → logprob: -3.121089458465576
    6. 'os' → logprob: -3.996089458465576
    7. ' des' → logprob: -4.996089458465576
    8. ' sys' → logprob: -5.371089458465576
    9. ' code' → logprob: -5.496089458465576
    10. 's' → logprob: -5.496089458465576

Token 5: ' '' (ID: 461)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6114279627799988
    2. ' import' → logprob: -1.7364280223846436
    3. '```' → logprob: -2.1114280223846436
    4. ' ' → logprob: -2.3614280223846436
    5. '_' → logprob: -3.6114280223846436
    6. '`' → logprob: -4.7364277839660645
    7. ' ```' → logprob: -5.2364277839660645
    8. ':' → logprob: -5.2364277839660645
    9. ''' → logprob: -6.1114277839660645
    10. 'space' → logprob: -6.2364277839660645

Token 6: 'sys' (ID: 17324)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.0994972437620163
    2. ' os' → logprob: -3.8494973182678223
    3. 'math' → logprob: -3.8494973182678223
    4. 'random' → logprob: -3.9744973182678223
    5. 'requests' → logprob: -3.9744973182678223
    6. 'import' → logprob: -5.599497318267822
    7. 'numpy' → logprob: -6.099497318267822
    8. 'socket' → logprob: -6.474497318267822
    9. 'datetime' → logprob: -6.849497318267822
    10. 'p' → logprob: -6.974497318267822

Token 7: ''' (ID: 6)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.022378666326403618
    2. 'import' → logprob: -4.147378444671631
    3. '```' → logprob: -5.397378444671631
    4. '.import' → logprob: -7.272378444671631
    5. ' .' → logprob: -8.022378921508789
    6. ',' → logprob: -8.772378921508789
    7. ' import' → logprob: -8.772378921508789
    8. '\' → logprob: -8.897378921508789
    9. '`' → logprob: -9.647378921508789
    10. ')' → logprob: -9.897378921508789

Token 8: ' pour' (ID: 1930)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.007646375801414251
    2. '```' → logprob: -5.132646560668945
    3. '.' → logprob: -6.632646560668945
    4. ' import' → logprob: -8.507646560668945
    5. '\' → logprob: -9.382646560668945
    6. '\n' → logprob: -9.632646560668945
    7. '.import' → logprob: -11.132646560668945
    8. '``' → logprob: -12.007646560668945
    9. ''import' → logprob: -12.257646560668945
    10. '
' → logprob: -12.382646560668945

Token 9: ' accéder' (ID: 120555)
  Prédit: ' gérer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' gérer' → logprob: -0.7156698703765869
    2. ' l' → logprob: -2.715669870376587
    3. ' pouvoir' → logprob: -2.840669870376587
    4. 'import' → logprob: -2.965669870376587
    5. ' sys' → logprob: -2.965669870376587
    6. ' system' → logprob: -2.965669870376587
    7. ' manip' → logprob: -3.090669870376587
    8. ' import' → logprob: -3.465669870376587
    9. ' utiliser' → logprob: -3.590669870376587
    10. ' permettre' → logprob: -3.840669870376587

Token 10: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.7348881959915161
    2. ' au' → logprob: -0.8598881959915161
    3. ' aux' → logprob: -2.7348880767822266
    4. ' a' → logprob: -4.109888076782227
    5. ' ' → logprob: -4.734888076782227
    6. '.' → logprob: -5.609888076782227
    7. 'au' → logprob: -6.984888076782227
    8. '<|end|>' → logprob: -7.859888076782227
    9. 'import' → logprob: -8.234888076782227
    10. 'space' → logprob: -8.359888076782227

Token 11: ' stdin' (ID: 75143)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.34767261147499084
    2. ' l' → logprob: -2.222672700881958
    3. ' system' → logprob: -2.597672700881958
    4. ' ' → logprob: -2.847672700881958
    5. ' argv' → logprob: -3.972672700881958
    6. ' .' → logprob: -4.472672462463379
    7. 'sys' → logprob: -4.847672462463379
    8. '.' → logprob: -5.847672462463379
    9. ' la' → logprob: -5.972672462463379
    10. ' os' → logprob: -6.347672462463379

Token 12: ',' (ID: 11)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.03109871782362461
    2. '```' → logprob: -3.7810986042022705
    3. '\n' → logprob: -5.65609884262085
    4. '.' → logprob: -5.90609884262085
    5. '\' → logprob: -7.53109884262085
    6. ',' → logprob: -7.90609884262085
    7. '
' → logprob: -8.281098365783691
    8. ' import' → logprob: -8.906098365783691
    9. '`' → logprob: -9.156098365783691
    10. '#' → logprob: -9.906098365783691

Token 13: ' qui' (ID: 2780)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.396528035402298
    2. ',' → logprob: -1.3965280055999756
    3. 'import' → logprob: -2.8965280055999756
    4. '```' → logprob: -4.896528244018555
    5. '\n' → logprob: -5.021528244018555
    6. '\' → logprob: -6.021528244018555
    7. ' .' → logprob: -6.396528244018555
    8. '#' → logprob: -6.646528244018555
    9. '.import' → logprob: -7.146528244018555
    10. '`' → logprob: -7.646528244018555

Token 14: ' permet' (ID: 11798)
  Prédit: ' permet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permet' → logprob: -0.2978605031967163
    2. ' est' → logprob: -1.9228605031967163
    3. '.' → logprob: -3.797860622406006
    4. ' permettra' → logprob: -3.797860622406006
    5. ' .' → logprob: -4.172860622406006
    6. ' sera' → logprob: -4.422860622406006
    7. ' contient' → logprob: -5.172860622406006
    8. ',' → logprob: -5.422860622406006
    9. ' import' → logprob: -5.797860622406006
    10. ' nous' → logprob: -6.047860622406006

Token 15: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.5996168255805969
    2. ' de' → logprob: -0.8496168255805969
    3. ' l' → logprob: -4.724617004394531
    4. ' à' → logprob: -5.474617004394531
    5. ' la' → logprob: -5.974617004394531
    6. ' a' → logprob: -6.474617004394531
    7. ' ' → logprob: -6.849617004394531
    8. ' le' → logprob: -6.974617004394531
    9. ',' → logprob: -7.474617004394531
    10. ' ' → logprob: -7.599617004394531

Token 16: ' lire' (ID: 46082)
  Prédit: ' lire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lire' → logprob: -0.4543626308441162
    2. 'l' → logprob: -1.0793626308441162
    3. ' gérer' → logprob: -4.829362869262695
    4. 'r' → logprob: -5.454362869262695
    5. ' récupérer' → logprob: -5.954362869262695
    6. 'faire' → logprob: -6.579362869262695
    7. '```' → logprob: -6.579362869262695
    8. ' manip' → logprob: -7.079362869262695
    9. ' faire' → logprob: -7.204362869262695
    10. 'Lire' → logprob: -7.704362869262695

Token 17: ' les' (ID: 1341)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02319270931184292
    2. ' des' → logprob: -5.023192882537842
    3. ' le' → logprob: -6.148192882537842
    4. '.' → logprob: -6.148192882537842
    5. '<|end|>' → logprob: -6.523192882537842
    6. '  ' → logprob: -6.898192882537842
    7. ' l' → logprob: -7.023192882537842
    8. '_' → logprob: -7.023192882537842
    9. ' ,' → logprob: -7.148192882537842
    10. ',' → logprob: -7.273192882537842

Token 18: ' entr' (ID: 7072)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.0424175262451172
    2. ' ' → logprob: -1.6674175262451172
    3. ' entr' → logprob: -1.6674175262451172
    4. ' espaces' → logprob: -2.292417526245117
    5. ' flux' → logprob: -3.542417526245117
    6. ' données' → logprob: -3.917417526245117
    7. '\' → logprob: -4.292417526245117
    8. ' lignes' → logprob: -4.417417526245117
    9. '.' → logprob: -4.417417526245117
    10. ' ' → logprob: -4.667417526245117

Token 19: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.5509384870529175
    2. 'es' → logprob: -0.9259384870529175
    3. 'és' → logprob: -4.300938606262207
    4. 'é' → logprob: -4.550938606262207
    5. 'ée' → logprob: -6.050938606262207
    6. 'e' → logprob: -7.300938606262207
    7. 'ès' → logprob: -8.800938606262207
    8. ' es' → logprob: -10.550938606262207
    9. '́' → logprob: -10.550938606262207
    10. 'è' → logprob: -11.050938606262207

Token 20: ' standards' (ID: 13853)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.18386457860469818
    2. '.' → logprob: -1.9338645935058594
    3. '```' → logprob: -4.683864593505859
    4. ',' → logprob: -4.933864593505859
    5. '\n' → logprob: -5.933864593505859
    6. '\' → logprob: -6.683864593505859
    7. '
' → logprob: -6.933864593505859
    8. ':' → logprob: -7.683864593505859
    9. '#' → logprob: -8.18386459350586
    10. '' → logprob: -8.43386459350586

Token 21: '.
' (ID: 558)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.033380553126335144
    2. '```' → logprob: -3.5333805084228516
    3. '.' → logprob: -6.033380508422852
    4. ',' → logprob: -7.783380508422852
    5. '
' → logprob: -8.033380508422852
    6. '\n' → logprob: -8.658380508422852
    7. '\' → logprob: -9.533380508422852
    8. 'i' → logprob: -9.908380508422852
    9. '' → logprob: -10.283380508422852
    10. '``' → logprob: -10.533380508422852

Token 22: 'from' (ID: 2845)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.007495293393731117
    2. '```' → logprob: -5.257495403289795
    3. '.' → logprob: -6.882495403289795
    4. '
' → logprob: -8.132494926452637
    5. ',' → logprob: -8.257494926452637
    6. '\n' → logprob: -8.382494926452637
    7. '#' → logprob: -9.007494926452637
    8. '\' → logprob: -9.257494926452637
    9. 'im' → logprob: -9.507494926452637
    10. 'i' → logprob: -10.507494926452637

Token 23: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -9.162282367469743e-05
    2. ' ' → logprob: -9.750091552734375
    3. 'sys' → logprob: -10.500091552734375
    4. ' ' → logprob: -12.625091552734375
    5. ' import' → logprob: -13.625091552734375
    6. ' system' → logprob: -14.500091552734375
    7. ' collections' → logprob: -15.000091552734375
    8. ' space' → logprob: -16.000091552734375
    9. '	sys' → logprob: -16.500091552734375
    10. '=sys' → logprob: -16.625091552734375

Token 24: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.000945876759942621
    2. 'import' → logprob: -7.000946044921875
    3. ' ' → logprob: -10.375946044921875
    4. ' im' → logprob: -13.750946044921875
    5. '	import' → logprob: -14.375946044921875
    6. ' imports' → logprob: -15.250946044921875
    7. ' impor' → logprob: -15.500946044921875
    8. ' importar' → logprob: -15.625946044921875
    9. '.import' → logprob: -15.875946044921875
    10. ' importe' → logprob: -16.000946044921875

Token 25: ' stdin' (ID: 75143)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.10028485208749771
    2. ' stdin' → logprob: -2.3502848148345947
    3. '.stdin' → logprob: -9.475284576416016
    4. '(stdin' → logprob: -14.600284576416016
    5. 'argv' → logprob: -14.725284576416016
    6. 'std' → logprob: -16.100284576416016
    7. 'standard' → logprob: -16.475284576416016
    8. 'sys' → logprob: -16.600284576416016
    9. 'stdout' → logprob: -16.850284576416016
    10. ' sys' → logprob: -16.850284576416016

Token 26: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.43355754017829895
    2. '
' → logprob: -1.8085575103759766
    3. '

' → logprob: -1.8085575103759766
    4. '' → logprob: -5.058557510375977
    5. '.

' → logprob: -5.183557510375977
    6. '\n' → logprob: -5.433557510375977
    7. '.
' → logprob: -6.558557510375977
    8. '<|end|>' → logprob: -6.683557510375977
    9. '.readline' → logprob: -7.183557510375977
    10. 'newline' → logprob: -7.308557510375977

Token 27: '#' (ID: 2)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.0640808716416359
    2. '
' → logprob: -2.8140809535980225
    3. 'for' → logprob: -7.064080715179443
    4. '
' → logprob: -7.814080715179443
    5. '


' → logprob: -8.189081192016602
    6. '

' → logprob: -8.439081192016602
    7. '#' → logprob: -9.189081192016602
    8. '' → logprob: -9.564081192016602
    9. '



' → logprob: -10.064081192016602
    10. '\n' → logprob: -10.689081192016602

Token 28: ' Import' (ID: 19998)
  Prédit: ' 

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 

' → logprob: -0.30734017491340637
    2. '\n' → logprob: -2.682340145111084
    3. '

' → logprob: -2.932340145111084
    4. '
' → logprob: -3.307340145111084
    5. ' 
 
' → logprob: -3.307340145111084
    6. ' 
' → logprob: -3.557340145111084
    7. 'def' → logprob: -4.557340145111084
    8. '
 
' → logprob: -4.932340145111084
    9. '#' → logprob: -5.807340145111084
    10. 'n' → logprob: -5.807340145111084

Token 29: 'ation' (ID: 387)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1989983320236206
    2. ' math' → logprob: -3.57399845123291
    3. 'ation' → logprob: -3.69899845123291
    4. ' os' → logprob: -3.94899845123291
    5. ' numpy' → logprob: -4.19899845123291
    6. ' pandas' → logprob: -4.32399845123291
    7. ' des' → logprob: -4.57399845123291
    8. ' itertools' → logprob: -4.57399845123291
    9. '_' → logprob: -4.69899845123291
    10. ' de' → logprob: -5.32399845123291

Token 30: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.5010745525360107
    2. ' ' → logprob: -1.7510745525360107
    3. ' os' → logprob: -2.3760745525360107
    4. ' de' → logprob: -2.7510745525360107
    5. ' import' → logprob: -4.50107479095459
    6. 'import' → logprob: -4.50107479095459
    7. '<|end|>' → logprob: -4.62607479095459
    8. ' from' → logprob: -5.12607479095459
    9. ',' → logprob: -5.12607479095459
    10. ' pandas' → logprob: -5.87607479095459

Token 31: ' la' (ID: 557)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.6581453084945679
    2. ' math' → logprob: -0.7831453084945679
    3. ' random' → logprob: -4.783145427703857
    4. ' itertools' → logprob: -5.158145427703857
    5. ' collections' → logprob: -5.783145427703857
    6. ' time' → logprob: -6.033145427703857
    7. ' sys' → logprob: -6.158145427703857
    8. ' re' → logprob: -6.783145427703857
    9. 'os' → logprob: -7.783145427703857
    10. 'math' → logprob: -7.908145427703857

Token 32: ' fonction' (ID: 17610)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.14024676382541656
    2. ' math' → logprob: -2.640246868133545
    3. ' random' → logprob: -3.515246868133545
    4. ' collections' → logprob: -4.640246868133545
    5. ' module' → logprob: -5.640246868133545
    6. ' time' → logprob: -5.890246868133545
    7. ' datetime' → logprob: -6.140246868133545
    8. ' threading' → logprob: -6.390246868133545
    9. ' io' → logprob: -6.640246868133545
    10. ' sys' → logprob: -7.015246868133545

Token 33: ' deepcopy' (ID: 130230)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.08811582624912262
    2. ' random' → logprob: -3.963115930557251
    3. ' split' → logprob: -4.213115692138672
    4. 'input' → logprob: -4.338115692138672
    5. ' readline' → logprob: -4.338115692138672
    6. ' print' → logprob: -5.213115692138672
    7. ' ' → logprob: -5.713115692138672
    8. ' os' → logprob: -5.838115692138672
    9. ' exit' → logprob: -6.588115692138672
    10. ' import' → logprob: -6.588115692138672

Token 34: ' depuis' (ID: 16277)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17021538317203522
    2. ' from' → logprob: -2.170215368270874
    3. 'from' → logprob: -3.295215368270874
    4. ',' → logprob: -6.045215606689453
    5. ' ,' → logprob: -7.170215606689453
    6. ' (' → logprob: -7.670215606689453
    7. '(' → logprob: -7.920215606689453
    8. ' ' → logprob: -8.170215606689453
    9. '_' → logprob: -8.545215606689453
    10. 'import' → logprob: -8.795215606689453

Token 35: ' le' (ID: 505)
  Prédit: 'copy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'copy' → logprob: -0.0007104054093360901
    2. ' copy' → logprob: -7.250710487365723
    3. 'cpy' → logprob: -15.875710487365723
    4. 'import' → logprob: -16.250709533691406
    5. '_copy' → logprob: -16.375709533691406
    6. ' ' → logprob: -16.875709533691406
    7. '	copy' → logprob: -17.000709533691406
    8. 'collections' → logprob: -18.000709533691406
    9. '(copy' → logprob: -18.625709533691406
    10. '  ' → logprob: -19.000709533691406

Token 36: ' module' (ID: 8827)
  Prédit: 'copy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'copy' → logprob: -0.038042984902858734
    2. ' copy' → logprob: -3.2880430221557617
    3. '	copy' → logprob: -14.413043022155762
    4. 'cpy' → logprob: -14.788043022155762
    5. '_copy' → logprob: -14.788043022155762
    6. '.copy' → logprob: -16.788042068481445
    7. '(copy' → logprob: -16.913042068481445
    8. ' ' → logprob: -17.413042068481445
    9. '-copy' → logprob: -17.413042068481445
    10. 'import' → logprob: -18.163042068481445

Token 37: ' copy' (ID: 5150)
  Prédit: ' copy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' copy' → logprob: -0.04860043153166771
    2. 'copy' → logprob: -3.048600435256958
    3. '	copy' → logprob: -12.298600196838379
    4. ' import' → logprob: -13.298600196838379
    5. ' ' → logprob: -13.423600196838379
    6. 'import' → logprob: -13.548600196838379
    7. '_copy' → logprob: -13.923600196838379
    8. '.copy' → logprob: -14.048600196838379
    9. ' ' → logprob: -14.548600196838379
    10. ' deepcopy' → logprob: -15.048600196838379

Token 38: ',' (ID: 11)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.37731561064720154
    2. 'from' → logprob: -1.252315640449524
    3. ' ' → logprob: -4.127315521240234
    4. ' ,' → logprob: -5.252315521240234
    5. ',' → logprob: -5.252315521240234
    6. ' import' → logprob: -7.377315521240234
    7. ' ' → logprob: -8.002315521240234
    8. ' de' → logprob: -8.502315521240234
    9. ' deepcopy' → logprob: -8.752315521240234
    10. 'import' → logprob: -9.127315521240234

Token 39: ' pour' (ID: 1930)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -1.187219500541687
    2. 'import' → logprob: -1.812219500541687
    3. ' copy' → logprob: -2.1872196197509766
    4. ' qui' → logprob: -2.4372196197509766
    5. ' pour' → logprob: -2.5622196197509766
    6. ' deepcopy' → logprob: -3.0622196197509766
    7. ' afin' → logprob: -3.0622196197509766
    8. ' from' → logprob: -3.4372196197509766
    9. ' ce' → logprob: -3.5622196197509766
    10. ' ' → logprob: -3.8122196197509766

Token 40: ' effectuer' (ID: 98625)
  Prédit: ' copier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' copier' → logprob: -0.3227236270904541
    2. ' créer' → logprob: -1.822723627090454
    3. ' effectuer' → logprob: -3.072723627090454
    4. ' pouvoir' → logprob: -3.447723627090454
    5. ' manip' → logprob: -4.697723388671875
    6. ' cl' → logprob: -5.572723388671875
    7. ' deepcopy' → logprob: -5.572723388671875
    8. 'cop' → logprob: -5.947723388671875
    9. ' réaliser' → logprob: -6.197723388671875
    10. ' recop' → logprob: -6.197723388671875

Token 41: ' des' (ID: 731)
  Prédit: ' deepcopy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deepcopy' → logprob: -0.12537731230258942
    2. ' ' → logprob: -3.1253774166107178
    3. ' deep' → logprob: -3.2503774166107178
    4. ' copy' → logprob: -4.125377178192139
    5. ' des' → logprob: -4.375377178192139
    6. '  ' → logprob: -6.250377178192139
    7. '.deepcopy' → logprob: -6.250377178192139
    8. ' import' → logprob: -7.375377178192139
    9. 'deep' → logprob: -8.000377655029297
    10. ' la' → logprob: -8.750377655029297

Token 42: ' copies' (ID: 20138)
  Prédit: ' copies'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' copies' → logprob: -0.8553715348243713
    2. ' deepcopy' → logprob: -1.2303714752197266
    3. ' deep' → logprob: -2.4803714752197266
    4. 'cop' → logprob: -2.8553714752197266
    5. ' copy' → logprob: -3.6053714752197266
    6. 'import' → logprob: -3.8553714752197266
    7. ' copi' → logprob: -4.105371475219727
    8. 'copies' → logprob: -4.230371475219727
    9. 'deep' → logprob: -4.355371475219727
    10. ' import' → logprob: -4.480371475219727

Token 43: ' profond' (ID: 82671)
  Prédit: ' deepcopy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deepcopy' → logprob: -0.9115291833877563
    2. ' profond' → logprob: -1.5365291833877563
    3. '.deepcopy' → logprob: -2.036529064178467
    4. ' deep' → logprob: -2.661529064178467
    5. ' profonde' → logprob: -3.286529064178467
    6. ' ' → logprob: -3.286529064178467
    7. 'deep' → logprob: -3.536529064178467
    8. ' complète' → logprob: -3.911529064178467
    9. ' profundas' → logprob: -4.286529064178467
    10. ' approfond' → logprob: -4.661529064178467

Token 44: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.008295171894133091
    2. 'ies' → logprob: -4.883295059204102
    3. 'e' → logprob: -7.508295059204102
    4. ' es' → logprob: -10.508295059204102
    5. 'i' → logprob: -10.883295059204102
    6. 'ie' → logprob: -11.008295059204102
    7. '```' → logprob: -11.133295059204102
    8. 'tes' → logprob: -11.758295059204102
    9. 'ues' → logprob: -11.758295059204102
    10. '#' → logprob: -11.758295059204102

Token 45: ' d' (ID: 272)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.684207022190094
    2. 'from' → logprob: -1.6842069625854492
    3. ' ' → logprob: -1.9342069625854492
    4. ' deepcopy' → logprob: -2.809206962585449
    5. ' import' → logprob: -3.684206962585449
    6. ' des' → logprob: -3.809206962585449
    7. ' de' → logprob: -4.434206962585449
    8. '.' → logprob: -4.934206962585449
    9. ' ,' → logprob: -5.059206962585449
    10. ' deep' → logprob: -5.059206962585449

Token 46: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6200888752937317
    2. 'obj' → logprob: -1.620088815689087
    3. ''objet' → logprob: -2.495088815689087
    4. ' objects' → logprob: -2.870088815689087
    5. 'e' → logprob: -2.870088815689087
    6. ' objets' → logprob: -3.870088815689087
    7. 'a' → logprob: -4.495089054107666
    8. 'es' → logprob: -4.745089054107666
    9. 'objects' → logprob: -5.495089054107666
    10. ' obj' → logprob: -5.620089054107666

Token 47: 'obj' (ID: 4264)
  Prédit: 'obj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'obj' → logprob: -0.5879172086715698
    2. ' objects' → logprob: -1.4629172086715698
    3. ' objets' → logprob: -2.0879173278808594
    4. ' ' → logprob: -3.0879173278808594
    5. ' obj' → logprob: -3.8379173278808594
    6. 'objects' → logprob: -4.712917327880859
    7. 'e' → logprob: -6.087917327880859
    8. 'objet' → logprob: -6.212917327880859
    9. ''objet' → logprob: -6.712917327880859
    10. ' objetos' → logprob: -6.712917327880859

Token 48: 'ets' (ID: 1719)
  Prédit: 'ects'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ects' → logprob: -0.3750090003013611
    2. 'ets' → logprob: -1.2500090599060059
    3. 'et' → logprob: -4.250009059906006
    4. 'ect' → logprob: -4.500009059906006
    5. 'ecs' → logprob: -8.500008583068848
    6. 'ject' → logprob: -9.000008583068848
    7. 'ec' → logprob: -9.000008583068848
    8. 'etc' → logprob: -9.250008583068848
    9. 'import' → logprob: -9.375008583068848
    10. 'cts' → logprob: -10.000008583068848

Token 49: ' (' (ID: 350)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5798143744468689
    2. ' from' → logprob: -0.8298143744468689
    3. ',' → logprob: -6.829814434051514
    4. ' ' → logprob: -7.454814434051514
    5. ' ,' → logprob: -7.704814434051514
    6. '.' → logprob: -7.829814434051514
    7. 'import' → logprob: -8.454813957214355
    8. ' import' → logprob: -8.454813957214355
    9. '```' → logprob: -8.454813957214355
    10. ' deepcopy' → logprob: -8.704813957214355

Token 50: 'non' (ID: 11741)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.10523717850446701
    2. ')' → logprob: -2.7302372455596924
    3. ' copy' → logprob: -3.9802372455596924
    4. ' ).' → logprob: -4.730237007141113
    5. ' deepcopy' → logprob: -6.105237007141113
    6. 'copy' → logprob: -6.230237007141113
    7. ' ' → logprob: -7.230237007141113
    8. ' )
' → logprob: -8.105237007141113
    9. 'import' → logprob: -8.105237007141113
    10. ' import' → logprob: -8.230237007141113

Token 51: ' utilisé' (ID: 53138)
  Prédit: ' shallow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' shallow' → logprob: -0.7228270769119263
    2. ' mutable' → logprob: -1.8478270769119263
    3. ' seulement' → logprob: -2.4728269577026367
    4. ' mut' → logprob: -3.2228269577026367
    5. 'import' → logprob: -3.7228269577026367
    6. ' mod' → logprob: -3.9728269577026367
    7. ' part' → logprob: -4.097826957702637
    8. ' import' → logprob: -4.347826957702637
    9. ' trivial' → logprob: -4.347826957702637
    10. ')' → logprob: -4.472826957702637

Token 52: ' ici' (ID: 27994)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17459531128406525
    2. ' )' → logprob: -1.9245953559875488
    3. ').' → logprob: -4.549595355987549
    4. ' ).' → logprob: -6.174595355987549
    5. ',' → logprob: -7.674595355987549
    6. ' ' → logprob: -7.924595355987549
    7. 'import' → logprob: -7.924595355987549
    8. 's' → logprob: -9.42459487915039
    9. 'e' → logprob: -9.54959487915039
    10. ' dans' → logprob: -10.17459487915039

Token 53: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017580024432390928
    2. ').' → logprob: -6.501758098602295
    3. ' )' → logprob: -9.001757621765137
    4. 'import' → logprob: -9.376757621765137
    5. ')
' → logprob: -11.126757621765137
    6. ',' → logprob: -11.876757621765137
    7. '')' → logprob: -12.376757621765137
    8. '#' → logprob: -12.501757621765137
    9. '.' → logprob: -12.876757621765137
    10. '```' → logprob: -13.001757621765137

Token 54: ' mais' (ID: 2899)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.6861323714256287
    2. ')' → logprob: -0.9361323714256287
    3. ' mais' → logprob: -2.6861324310302734
    4. ' but' → logprob: -4.061132431030273
    5. '#' → logprob: -4.811132431030273
    6. ' )
' → logprob: -5.936132431030273
    7. ' ).' → logprob: -6.436132431030273
    8. ' ' → logprob: -7.061132431030273
    9. ')#' → logprob: -7.061132431030273
    10. ').' → logprob: -7.561132431030273

Token 55: ' présent' (ID: 24129)
  Prédit: ' souvent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' souvent' → logprob: -0.9789819121360779
    2. ' parfois' → logprob: -0.9789819121360779
    3. ' utile' → logprob: -1.8539819717407227
    4. ' peut' → logprob: -3.9789819717407227
    5. ' prévu' → logprob: -3.9789819717407227
    6. ' potent' → logprob: -4.728981971740723
    7. ' prêt' → logprob: -5.353981971740723
    8. ' possible' → logprob: -5.603981971740723
    9. ' conserv' → logprob: -5.728981971740723
    10. ' nécessaire' → logprob: -5.978981971740723

Token 56: ' dans' (ID: 2671)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24664443731307983
    2. ' dans' → logprob: -1.9966444969177246
    3. ' pour' → logprob: -3.1216444969177246
    4. ' )' → logprob: -3.9966444969177246
    5. ' ' → logprob: -4.871644496917725
    6. ').' → logprob: -5.371644496917725
    7. 'e' → logprob: -5.871644496917725
    8. 'dans' → logprob: -6.496644496917725
    9. ' afin' → logprob: -7.371644496917725
    10. 'pour' → logprob: -7.371644496917725

Token 57: ' le' (ID: 505)
  Prédit: ' copy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' copy' → logprob: -0.5591251254081726
    2. ' code' → logprob: -1.8091251850128174
    3. ' la' → logprob: -2.1841251850128174
    4. ' le' → logprob: -3.3091251850128174
    5. 'copy' → logprob: -3.6841251850128174
    6. ' l' → logprob: -4.309124946594238
    7. ' ce' → logprob: -4.434124946594238
    8. ' case' → logprob: -4.559124946594238
    9. ' the' → logprob: -4.684124946594238
    10. '<|end|>' → logprob: -4.809124946594238

Token 58: ' code' (ID: 3490)
  Prédit: ' code'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.16873367130756378
    2. 'code' → logprob: -1.9187337160110474
    3. ')' → logprob: -6.168733596801758
    4. ' contexte' → logprob: -6.918733596801758
    5. ' )' → logprob: -7.168733596801758
    6. ' module' → logprob: -7.418733596801758
    7. 'module' → logprob: -7.543733596801758
    8. 'texte' → logprob: -7.668733596801758
    9. ' ' → logprob: -8.043733596801758
    10. 's' → logprob: -8.043733596801758

Token 59: ' original' (ID: 4756)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028228238224983215
    2. ').' → logprob: -6.2528228759765625
    3. ' )' → logprob: -7.1278228759765625
    4. ')
' → logprob: -10.752822875976562
    5. 'import' → logprob: -11.002822875976562
    6. ',' → logprob: -11.127822875976562
    7. '.' → logprob: -11.627822875976562
    8. 's' → logprob: -12.252822875976562
    9. ' pour' → logprob: -12.877822875976562
    10. '.)' → logprob: -13.002822875976562

Token 60: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00028266964363865554
    2. ' )' → logprob: -8.875282287597656
    3. ')
' → logprob: -9.250282287597656
    4. ').' → logprob: -10.875282287597656
    5. 'import' → logprob: -11.875282287597656
    6. '')' → logprob: -12.125282287597656
    7. ',' → logprob: -12.375282287597656
    8. '```' → logprob: -12.875282287597656
    9. 'from' → logprob: -13.250282287597656
    10. ')

' → logprob: -13.500282287597656

Token 61: 'from' (ID: 2845)
  Prédit: 'from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.003627388970926404
    2. ' from' → logprob: -5.628627300262451
    3. 'f' → logprob: -10.87862777709961
    4. ' ' → logprob: -12.37862777709961
    5. 'import' → logprob: -13.75362777709961
    6. 'fr' → logprob: -14.37862777709961
    7. ',' → logprob: -14.50362777709961
    8. 'fro' → logprob: -15.25362777709961
    9. '	from' → logprob: -15.37862777709961
    10. ' 
' → logprob: -15.37862777709961

Token 62: ' copy' (ID: 5150)
  Prédit: ' copy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' copy' → logprob: -0.0009299254161305726
    2. 'copy' → logprob: -7.250929832458496
    3. ' ' → logprob: -8.750929832458496
    4. ' ' → logprob: -10.250929832458496
    5. ' space' → logprob: -11.875929832458496
    6. ' ﻿' → logprob: -12.625929832458496
    7. ' deepcopy' → logprob: -12.625929832458496
    8. ' copying' → logprob: -12.750929832458496
    9. '	copy' → logprob: -13.000929832458496
    10. ' コピー' → logprob: -13.250929832458496

Token 63: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.004001822788268328
    2. 'import' → logprob: -5.629001617431641
    3. ' ' → logprob: -8.37900161743164
    4. '	import' → logprob: -9.50400161743164
    5. ' deepcopy' → logprob: -9.75400161743164
    6. ' deep' → logprob: -11.12900161743164
    7. ' im' → logprob: -12.12900161743164
    8. ' ' → logprob: -12.12900161743164
    9. '.' → logprob: -13.25400161743164
    10. ' Import' → logprob: -13.37900161743164

Token 64: ' deepcopy' (ID: 130230)
  Prédit: ' deepcopy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deepcopy' → logprob: -0.015726856887340546
    2. 'deep' → logprob: -4.3907270431518555
    3. ' deep' → logprob: -5.7657270431518555
    4. '.deepcopy' → logprob: -10.390727043151855
    5. ' dee' → logprob: -10.515727043151855
    6. ' ' → logprob: -11.265727043151855
    7. 'dee' → logprob: -12.390727043151855
    8. ' d' → logprob: -13.890727043151855
    9. 'de' → logprob: -14.015727043151855
    10. 'd' → logprob: -14.515727043151855

Token 65: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.04215599596500397
    2. '
' → logprob: -3.2921559810638428
    3. '


' → logprob: -5.792156219482422
    4. '\n' → logprob: -8.417156219482422
    5. ' 

' → logprob: -8.417156219482422
    6. '#' → logprob: -8.542156219482422
    7. '



' → logprob: -9.042156219482422
    8. '' → logprob: -9.917156219482422
    9. '
' → logprob: -9.917156219482422
    10. '

' → logprob: -9.917156219482422

Token 66: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7253214716911316
    2. '

' → logprob: -0.7253214716911316
    3. '#' → logprob: -3.8503215312957764
    4. '


' → logprob: -5.475321292877197
    5. '' → logprob: -5.850321292877197
    6. '



' → logprob: -7.475321292877197
    7. '
' → logprob: -7.600321292877197
    8. 'n' → logprob: -7.725321292877197
    9. 'class' → logprob: -7.975321292877197
    10. '\n' → logprob: -7.975321292877197

Token 67: ' Import' (ID: 19998)
  Prédit: ' 

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 

' → logprob: -0.17479760944843292
    2. ' 
' → logprob: -3.299797534942627
    3. ' ' → logprob: -3.299797534942627
    4. '#' → logprob: -3.424797534942627
    5. '

' → logprob: -4.549797534942627
    6. ' 
 
' → logprob: -4.549797534942627
    7. 'd' → logprob: -5.049797534942627
    8. ' 


' → logprob: -5.299797534942627
    9. 'n' → logprob: -5.424797534942627
    10. '' → logprob: -5.674797534942627

Token 68: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.08085621148347855
    2. ' de' → logprob: -3.3308563232421875
    3. ' des' → logprob: -3.8308563232421875
    4. 'er' → logprob: -5.2058563232421875
    5. 'from' → logprob: -5.2058563232421875
    6. 'stat' → logprob: -6.4558563232421875
    7. 'de' → logprob: -6.5808563232421875
    8. ' ' → logprob: -6.7058563232421875
    9. ' from' → logprob: -6.9558563232421875
    10. 'a' → logprob: -7.4558563232421875

Token 69: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.316210150718689
    2. ' ' → logprob: -1.941210150718689
    3. ' des' → logprob: -2.1912102699279785
    4. ' math' → logprob: -2.1912102699279785
    5. ' from' → logprob: -2.5662102699279785
    6. ' os' → logprob: -2.8162102699279785
    7. ' collections' → logprob: -2.8162102699279785
    8. ' pandas' → logprob: -3.0662102699279785
    9. ' json' → logprob: -3.6912102699279785
    10. ' re' → logprob: -4.3162102699279785

Token 70: ' la' (ID: 557)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.43178799748420715
    2. ' itertools' → logprob: -1.6817879676818848
    3. ' collections' → logprob: -2.9317879676818848
    4. ' random' → logprob: -3.3067879676818848
    5. ' json' → logprob: -4.056787967681885
    6. ' re' → logprob: -4.056787967681885
    7. ' sys' → logprob: -4.181787967681885
    8. ' typing' → logprob: -4.681787967681885
    9. ' os' → logprob: -5.431787967681885
    10. 'math' → logprob: -6.056787967681885

Token 71: ' fonction' (ID: 17610)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.6158391833305359
    2. ' collections' → logprob: -1.4908392429351807
    3. ' random' → logprob: -2.7408392429351807
    4. ' typing' → logprob: -2.8658392429351807
    5. 'math' → logprob: -3.6158392429351807
    6. 'collections' → logprob: -3.6158392429351807
    7. ' itertools' → logprob: -3.9908392429351807
    8. ' re' → logprob: -4.740839004516602
    9. 're' → logprob: -4.990839004516602
    10. 'random' → logprob: -4.990839004516602

Token 72: ' reduce' (ID: 10389)
  Prédit: ' randint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' randint' → logprob: -0.975443959236145
    2. ' random' → logprob: -2.1004438400268555
    3. ' defaultdict' → logprob: -2.4754438400268555
    4. ' math' → logprob: -2.4754438400268555
    5. 'range' → logprob: -2.9754438400268555
    6. ' itertools' → logprob: -3.3504438400268555
    7. ' deepcopy' → logprob: -3.4754438400268555
    8. 'random' → logprob: -3.6004438400268555
    9. 'rand' → logprob: -3.8504438400268555
    10. ' json' → logprob: -4.1004438400268555

Token 73: ' depuis' (ID: 16277)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.6364836692810059
    2. 'from' → logprob: -0.7614836692810059
    3. ' ' → logprob: -5.761483669281006
    4. '(' → logprob: -8.136484146118164
    5. ',' → logprob: -8.886484146118164
    6. ' (' → logprob: -9.511484146118164
    7. ')' → logprob: -9.886484146118164
    8. '	from' → logprob: -9.886484146118164
    9. '(from' → logprob: -10.261484146118164
    10. '<|end|>' → logprob: -10.386484146118164

Token 74: ' functools' (ID: 142636)
  Prédit: 'fun'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fun' → logprob: -0.03805479779839516
    2. ' functools' → logprob: -3.2880547046661377
    3. 'from' → logprob: -11.663054466247559
    4. 'f' → logprob: -13.163054466247559
    5. ' ' → logprob: -13.663054466247559
    6. 'func' → logprob: -14.913054466247559
    7. '```' → logprob: -15.163054466247559
    8. 'ft' → logprob: -15.413054466247559
    9. 'fra' → logprob: -15.538054466247559
    10. 'functional' → logprob: -16.163055419921875

Token 75: ',' (ID: 11)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.14373649656772614
    2. ' from' → logprob: -2.8937366008758545
    3. 'import' → logprob: -3.6437366008758545
    4. ' ' → logprob: -3.7687366008758545
    5. 'from' → logprob: -4.268736362457275
    6. ',' → logprob: -4.893736362457275
    7. ' ,' → logprob: -5.518736362457275
    8. '<|end|>' → logprob: -6.893736362457275
    9. '.' → logprob: -7.018736362457275
    10. ' ' → logprob: -7.268736362457275

Token 76: ' utilisée' (ID: 106548)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5232523679733276
    2. ' from' → logprob: -1.6482523679733276
    3. 'from' → logprob: -1.7732523679733276
    4. ' functools' → logprob: -3.648252487182617
    5. ' import' → logprob: -4.898252487182617
    6. 'import' → logprob: -5.773252487182617
    7. ' for' → logprob: -6.648252487182617
    8. ' which' → logprob: -6.773252487182617
    9. ' ' → logprob: -6.898252487182617
    10. ' ,' → logprob: -7.398252487182617

Token 77: ' pour' (ID: 1930)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.258756399154663
    2. ' pour' → logprob: -1.633756399154663
    3. ' from' → logprob: -2.258756399154663
    4. ' for' → logprob: -2.258756399154663
    5. ' functools' → logprob: -2.258756399154663
    6. ' des' → logprob: -3.133756399154663
    7. ' to' → logprob: -3.508756399154663
    8. ' itertools' → logprob: -4.258756637573242
    9. 'from' → logprob: -4.383756637573242
    10. ' dans' → logprob: -4.383756637573242

Token 78: ' appliquer' (ID: 172872)
  Prédit: ' functools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' functools' → logprob: -0.004236174281686544
    2. ' ' → logprob: -5.504236221313477
    3. ' math' → logprob: -9.504236221313477
    4. ' reduce' → logprob: -10.004236221313477
    5. ' itertools' → logprob: -11.004236221313477
    6. ' ' → logprob: -12.504236221313477
    7. ' fun' → logprob: -12.754236221313477
    8. ' f' → logprob: -12.879236221313477
    9. ' réduire' → logprob: -13.004236221313477
    10. ' operator' → logprob: -13.379236221313477

Token 79: ' une' (ID: 2463)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 80: ' fonction' (ID: 17610)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.006089596077799797
    2. ' f' → logprob: -5.631089687347412
    3. 'n' → logprob: -7.881089687347412
    4. ' l' → logprob: -8.006089210510254
    5. ' ' → logprob: -8.256089210510254
    6. 's' → logprob: -8.381089210510254
    7. ' a' → logprob: -8.381089210510254
    8. ' fonction' → logprob: -8.631089210510254
    9. ' function' → logprob: -8.881089210510254
    10. ' s' → logprob: -9.131089210510254

Token 81: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.00201202929019928
    2. '<|end|>' → logprob: -6.627012252807617
    3. '_' → logprob: -8.502012252807617
    4. ' )' → logprob: -9.377012252807617
    5. ' ,' → logprob: -9.877012252807617
    6. 's' → logprob: -9.877012252807617
    7. '<|end|>' → logprob: -10.002012252807617
    8. ')' → logprob: -10.002012252807617
    9. '  ' → logprob: -10.252012252807617
    10. ' (' → logprob: -10.627012252807617

Token 82: ' façon' (ID: 33381)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.512263298034668
    2. ' functools' → logprob: -1.012263298034668
    3. 'r' → logprob: -4.387263298034668
    4. 'f' → logprob: -5.137263298034668
    5. ' réduction' → logprob: -5.262263298034668
    6. 'l' → logprob: -5.762263298034668
    7. ' f' → logprob: -6.387263298034668
    8. ' rédu' → logprob: -6.512263298034668
    9. ' l' → logprob: -6.762263298034668
    10. 'p' → logprob: -7.012263298034668

Token 83: ' cumulative' (ID: 75628)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04632052406668663
    2. ' functools' → logprob: -3.1713204383850098
    3. ' ' → logprob: -6.67132043838501
    4. ' reduce' → logprob: -7.79632043838501
    5. ' l' → logprob: -8.421320915222168
    6. ' a' → logprob: -8.421320915222168
    7. ' rédu' → logprob: -8.671320915222168
    8. ' ﻿' → logprob: -9.546320915222168
    9. ' f' → logprob: -9.796320915222168
    10. '<|end|>' → logprob: -9.796320915222168

Token 84: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04977932944893837
    2. ' import' → logprob: -4.299779415130615
    3. ' à' → logprob: -4.924779415130615
    4. ' from' → logprob: -5.049779415130615
    5. ',' → logprob: -5.424779415130615
    6. ' au' → logprob: -5.674779415130615
    7. ' (' → logprob: -5.799779415130615
    8. ' ,' → logprob: -5.924779415130615
    9. ' de' → logprob: -6.549779415130615
    10. ' des' → logprob: -6.924779415130615

Token 85: 'non' (ID: 11741)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.6854264140129089
    2. ' ' → logprob: -0.9354264140129089
    3. ')' → logprob: -2.9354264736175537
    4. ' à' → logprob: -3.4354264736175537
    5. ' functools' → logprob: -5.185426235198975
    6. ' au' → logprob: -5.685426235198975
    7. ' la' → logprob: -6.185426235198975
    8. ' l' → logprob: -6.560426235198975
    9. ' aux' → logprob: -7.185426235198975
    10. ' sur' → logprob: -7.310426235198975

Token 86: ' utilisé' (ID: 53138)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.078169822692871
    2. ' ' → logprob: -1.203169822692871
    3. ' )' → logprob: -2.203169822692871
    4. '<|end|>' → logprob: -2.578169822692871
    5. ',' → logprob: -3.203169822692871
    6. ' ' → logprob: -3.953169822692871
    7. ' utilisée' → logprob: -3.953169822692871
    8. ' ,' → logprob: -4.328169822692871
    9. '<|end|>' → logprob: -4.453169822692871
    10. 's' → logprob: -4.578169822692871

Token 87: ' ici' (ID: 27994)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7181867361068726
    2. ' )' → logprob: -1.0931867361068726
    3. ')' → logprob: -2.218186855316162
    4. ' ici' → logprob: -2.843186855316162
    5. ' here' → logprob: -5.468186855316162
    6. ' ]' → logprob: -6.843186855316162
    7. ' à' → logprob: -6.968186855316162
    8. ' ' → logprob: -7.593186855316162
    9. '  ' → logprob: -7.968186855316162
    10. 'I' → logprob: -8.093186378479004

Token 88: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.338539183139801
    2. ').' → logprob: -1.3385391235351562
    3. ' )' → logprob: -4.213539123535156
    4. ' ).' → logprob: -4.713539123535156
    5. ',' → logprob: -6.963539123535156
    6. ' ' → logprob: -9.088539123535156
    7. 'import' → logprob: -10.588539123535156
    8. '.' → logprob: -10.838539123535156
    9. '),' → logprob: -11.213539123535156
    10. ' ,' → logprob: -11.588539123535156

Token 89: ' mais' (ID: 2899)
  Prédit: ' mais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mais' → logprob: -0.9481285810470581
    2. ' ' → logprob: -1.448128581047058
    3. ' but' → logprob: -1.573128581047058
    4. ')' → logprob: -2.5731287002563477
    5. ' )' → logprob: -2.5731287002563477
    6. ' b' → logprob: -4.448128700256348
    7. 'b' → logprob: -6.573128700256348
    8. 'but' → logprob: -7.323128700256348
    9. ' ).' → logprob: -7.573128700256348
    10. ' ' → logprob: -7.823128700256348

Token 90: ' présent' (ID: 24129)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 91: ' dans' (ID: 2671)
  Prédit: ' dans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dans' → logprob: -0.5377632975578308
    2. ' ici' → logprob: -1.9127633571624756
    3. ' ' → logprob: -2.4127633571624756
    4. ')' → logprob: -2.4127633571624756
    5. 'é' → logprob: -3.2877633571624756
    6. 'dans' → logprob: -4.1627631187438965
    7. ' here' → logprob: -4.7877631187438965
    8. ' in' → logprob: -5.2877631187438965
    9. 'e' → logprob: -5.5377631187438965
    10. ' )' → logprob: -5.9127631187438965

Token 92: ' le' (ID: 505)
  Prédit: ' functools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' functools' → logprob: -0.00778548140078783
    2. 'fun' → logprob: -5.382785320281982
    3. ' le' → logprob: -6.382785320281982
    4. ' la' → logprob: -8.25778579711914
    5. ' ' → logprob: -8.38278579711914
    6. ' fun' → logprob: -8.50778579711914
    7. 'l' → logprob: -8.75778579711914
    8. 'le' → logprob: -9.25778579711914
    9. ' itertools' → logprob: -9.50778579711914
    10. ' les' → logprob: -9.50778579711914

Token 93: ' code' (ID: 3490)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.2458405494689941
    2. 'f' → logprob: -1.8708405494689941
    3. ' code' → logprob: -1.8708405494689941
    4. ' )' → logprob: -2.120840549468994
    5. ' ' → logprob: -2.120840549468994
    6. ' f' → logprob: -2.495840549468994
    7. ')' → logprob: -3.370840549468994
    8. ' c' → logprob: -4.620840549468994
    9. 'm' → logprob: -4.745840549468994
    10. ' functools' → logprob: -5.120840549468994

Token 94: ' original' (ID: 4756)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ').' → logprob: -0.19428293406963348
    2. ' ).' → logprob: -2.1942830085754395
    3. ')' → logprob: -2.9442830085754395
    4. ' )' → logprob: -4.6942830085754395
    5. '.' → logprob: -7.5692830085754395
    6. '').' → logprob: -7.9442830085754395
    7. ').
' → logprob: -7.9442830085754395
    8. ' ' → logprob: -8.194282531738281
    9. ' ').' → logprob: -8.194282531738281
    10. ').

' → logprob: -8.319282531738281

Token 95: ').
' (ID: 6294)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.28123143315315247
    2. ')' → logprob: -1.40623140335083
    3. ').
' → logprob: -10.281231880187988
    4. ')
' → logprob: -11.406231880187988
    5. '.' → logprob: -11.531231880187988
    6. ').

' → logprob: -12.656231880187988
    7. 'e' → logprob: -13.031231880187988
    8. ').
' → logprob: -13.156231880187988
    9. '').' → logprob: -13.156231880187988
    10. '.)' → logprob: -13.406231880187988

Token 96: 'from' (ID: 2845)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.392129510641098
    2. 'from' → logprob: -1.2671295404434204
    3. 'f' → logprob: -4.142129421234131
    4. ' f' → logprob: -4.267129421234131
    5. ' ' → logprob: -4.392129421234131
    6. ' ' → logprob: -9.267129898071289
    7. ' fro' → logprob: -9.517129898071289
    8. ' space' → logprob: -9.642129898071289
    9. ',' → logprob: -9.642129898071289
    10. ' ,' → logprob: -10.892129898071289

Token 97: ' functools' (ID: 142636)
  Prédit: ' functools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' functools' → logprob: -0.010581295005977154
    2. ' ' → logprob: -4.7605814933776855
    3. ' fun' → logprob: -6.5105814933776855
    4. 'fun' → logprob: -8.135581016540527
    5. ' f' → logprob: -9.260581016540527
    6. ' ' → logprob: -9.885581016540527
    7. ' ﻿' → logprob: -11.010581016540527
    8. ' funct' → logprob: -12.135581016540527
    9. ' ​' → logprob: -12.635581016540527
    10. ' ▁' → logprob: -12.760581016540527

Token 98: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.034308724105358124
    2. ' ' → logprob: -3.909308671951294
    3. 'import' → logprob: -4.409308910369873
    4. ' .' → logprob: -7.284308910369873
    5. '.' → logprob: -7.409308910369873
    6. ' ' → logprob: -10.284308433532715
    7. '	import' → logprob: -10.284308433532715
    8. ' ,' → logprob: -10.659308433532715
    9. '<|end|>' → logprob: -10.909308433532715
    10. '_import' → logprob: -10.909308433532715

Token 99: ' reduce' (ID: 10389)
  Prédit: ' reduce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reduce' → logprob: -0.6070457696914673
    2. 'reduce' → logprob: -0.8570457696914673
    3. 'r' → logprob: -3.8570456504821777
    4. ' r' → logprob: -4.732045650482178
    5. 'redu' → logprob: -8.482046127319336
    6. 're' → logprob: -8.732046127319336
    7. ' ' → logprob: -8.732046127319336
    8. ' redu' → logprob: -9.857046127319336
    9. '_reduce' → logprob: -10.857046127319336
    10. 'red' → logprob: -11.107046127319336

Token 100: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.39531081914901733
    2. '
' → logprob: -1.270310878753662
    3. ' 

' → logprob: -3.645310878753662
    4. '<|end|>' → logprob: -5.270310878753662
    5. '


' → logprob: -5.645310878753662
    6. '#' → logprob: -5.645310878753662
    7. ' 
' → logprob: -6.270310878753662
    8. '\n' → logprob: -6.270310878753662
    9. '' → logprob: -7.520310878753662
    10. '<|end|>' → logprob: -7.645310878753662

Token 101: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.467459499835968
    2. '
' → logprob: -1.5924594402313232
    3. '

' → logprob: -1.9674594402313232
    4. '' → logprob: -4.592459678649902
    5. 'd' → logprob: -5.217459678649902
    6. '\n' → logprob: -5.717459678649902
    7. '


' → logprob: -6.092459678649902
    8. 'n' → logprob: -6.217459678649902
    9. 'def' → logprob: -6.967459678649902
    10. '



' → logprob: -7.092459678649902

Token 102: ' Import' (ID: 19998)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.26640084385871887
    2. ' 

' → logprob: -2.7664008140563965
    3. ' 
' → logprob: -3.0164008140563965
    4. ' ' → logprob: -3.6414008140563965
    5. '
' → logprob: -3.6414008140563965
    6. 'd' → logprob: -4.0164008140563965
    7. '' → logprob: -4.5164008140563965
    8. 'n' → logprob: -4.6414008140563965
    9. '

' → logprob: -4.7664008140563965
    10. 'def' → logprob: -4.7664008140563965

Token 103: 'ation' (ID: 387)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -1.091079831123352
    2. 'ation' → logprob: -1.466079831123352
    3. ' math' → logprob: -1.466079831123352
    4. 'er' → logprob: -3.5910797119140625
    5. ' ' → logprob: -3.7160797119140625
    6. ' de' → logprob: -3.9660797119140625
    7. ' a' → logprob: -3.9660797119140625
    8. ' numpy' → logprob: -4.3410797119140625
    9. ' itertools' → logprob: -4.3410797119140625
    10. ' sys' → logprob: -4.4660797119140625

Token 104: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8457732796669006
    2. ' collections' → logprob: -1.7207732200622559
    3. ' os' → logprob: -1.7207732200622559
    4. '<|end|>' → logprob: -2.845773220062256
    5. ' math' → logprob: -3.095773220062256
    6. ' random' → logprob: -3.595773220062256
    7. ' itertools' → logprob: -4.345773220062256
    8. ' json' → logprob: -4.470773220062256
    9. ' defaultdict' → logprob: -4.720773220062256
    10. ' ' → logprob: -4.970773220062256

Token 105: ' la' (ID: 557)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.19293583929538727
    2. ' collections' → logprob: -2.0679359436035156
    3. ' itertools' → logprob: -3.1929359436035156
    4. ' operator' → logprob: -5.567935943603516
    5. ' random' → logprob: -5.942935943603516
    6. ' typing' → logprob: -7.442935943603516
    7. ' os' → logprob: -8.192935943603516
    8. ' re' → logprob: -8.442935943603516
    9. ' json' → logprob: -8.942935943603516
    10. 'collections' → logprob: -9.567935943603516

Token 106: ' fonction' (ID: 17610)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.3229862153530121
    2. ' collections' → logprob: -1.4479862451553345
    3. ' random' → logprob: -4.072986125946045
    4. ' itertools' → logprob: -4.322986125946045
    5. ' operator' → logprob: -5.697986125946045
    6. ' typing' → logprob: -5.947986125946045
    7. ' os' → logprob: -6.322986125946045
    8. 'r' → logprob: -7.947986125946045
    9. 'collections' → logprob: -8.072986602783203
    10. ' time' → logprob: -8.322986602783203

Token 107: ' gcd' (ID: 106918)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.11492181569337845
    2. ' itertools' → logprob: -2.489921808242798
    3. ' operator' → logprob: -4.989922046661377
    4. ' random' → logprob: -5.114922046661377
    5. ' json' → logprob: -6.239922046661377
    6. ' defaultdict' → logprob: -6.614922046661377
    7. ' randint' → logprob: -6.614922046661377
    8. ' counter' → logprob: -6.989922046661377
    9. ' l' → logprob: -7.114922046661377
    10. 'math' → logprob: -7.239922046661377

Token 108: ' du' (ID: 1462)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7661221623420715
    2. ' from' → logprob: -1.1411221027374268
    3. ' ' → logprob: -2.0161221027374268
    4. '<|end|>' → logprob: -2.8911221027374268
    5. ',' → logprob: -4.391122341156006
    6. ' (' → logprob: -5.266122341156006
    7. '(' → logprob: -5.516122341156006
    8. ' as' → logprob: -6.391122341156006
    9. 'import' → logprob: -6.766122341156006
    10. '<|end|>' → logprob: -7.141122341156006

Token 109: ' module' (ID: 8827)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.0031777136027812958
    2. 'math' → logprob: -5.753177642822266
    3. '.math' → logprob: -18.628177642822266
    4. '_math' → logprob: -18.753177642822266
    5. '(math' → logprob: -19.503177642822266
    6. 'fra' → logprob: -20.628177642822266
    7. ' maths' → logprob: -20.753177642822266
    8. ' fractions' → logprob: -20.878177642822266
    9. 'Math' → logprob: -21.253177642822266
    10. 'm' → logprob: -21.628177642822266

Token 110: ' fractions' (ID: 110523)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.00029720881138928235
    2. 'math' → logprob: -8.125297546386719
    3. '.math' → logprob: -14.250297546386719
    4. '_math' → logprob: -15.250297546386719
    5. ' ' → logprob: -15.750297546386719
    6. ' mathematics' → logprob: -16.50029754638672
    7. '(math' → logprob: -16.75029754638672
    8. ' maths' → logprob: -17.12529754638672
    9. ' ' → logprob: -17.37529754638672
    10. ' matem' → logprob: -18.12529754638672

Token 111: ',' (ID: 11)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.862680971622467
    2. ' from' → logprob: -1.3626809120178223
    3. ' math' → logprob: -1.7376809120178223
    4. ' import' → logprob: -2.1126809120178223
    5. 'import' → logprob: -4.112680912017822
    6. '.math' → logprob: -5.862680912017822
    7. 'math' → logprob: -6.112680912017822
    8. '.' → logprob: -6.612680912017822
    9. ' ' → logprob: -6.737680912017822
    10. 'fra' → logprob: -8.23768138885498

Token 112: ' pour' (ID: 1930)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.009483827278017998
    2. 'math' → logprob: -4.759483814239502
    3. ' from' → logprob: -7.634483814239502
    4. ' ' → logprob: -8.88448429107666
    5. ' import' → logprob: -9.75948429107666
    6. 'from' → logprob: -10.00948429107666
    7. ' gcd' → logprob: -10.63448429107666
    8. ' fractions' → logprob: -10.88448429107666
    9. 'import' → logprob: -11.13448429107666
    10. 'fra' → logprob: -11.25948429107666

Token 113: ' calcul' (ID: 7559)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.02328135259449482
    2. 'math' → logprob: -3.7732813358306885
    3. 'fra' → logprob: -10.64828109741211
    4. ' fractions' → logprob: -11.64828109741211
    5. ' ' → logprob: -13.77328109741211
    6. 'mat' → logprob: -14.77328109741211
    7. '_math' → logprob: -15.14828109741211
    8. ' Math' → logprob: -15.39828109741211
    9. ' maths' → logprob: -15.39828109741211
    10. 'Math' → logprob: -15.64828109741211

Token 114: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.6327671408653259
    2. 'us' → logprob: -1.8827672004699707
    3. 'ator' → logprob: -2.6327672004699707
    4. 'ateur' → logprob: -2.7577672004699707
    5. ' math' → logprob: -2.8827672004699707
    6. 'from' → logprob: -3.3827672004699707
    7. 'math' → logprob: -3.6327672004699707
    8. 'ating' → logprob: -4.132767200469971
    9. ' from' → logprob: -4.382767200469971
    10. 'ate' → logprob: -4.632767200469971

Token 115: ' le' (ID: 505)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.006920676678419113
    2. 'math' → logprob: -5.00692081451416
    3. ' ' → logprob: -8.88192081451416
    4. ' le' → logprob: -10.50692081451416
    5. ' ' → logprob: -11.63192081451416
    6. ' ma' → logprob: -12.13192081451416
    7. ' la' → logprob: -12.50692081451416
    8. ' fractions' → logprob: -12.50692081451416
    9. ' l' → logprob: -12.88192081451416
    10. '_math' → logprob: -13.00692081451416

Token 116: ' plus' (ID: 2932)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.0036662293132394552
    2. 'math' → logprob: -5.753666400909424
    3. ' ' → logprob: -8.253665924072266
    4. ' gcd' → logprob: -9.253665924072266
    5. '.math' → logprob: -10.628665924072266
    6. ' module' → logprob: -11.253665924072266
    7. ' maths' → logprob: -11.253665924072266
    8. ' m' → logprob: -11.628665924072266
    9. ' fractions' → logprob: -11.628665924072266
    10. ' greatest' → logprob: -11.628665924072266

Token 117: ' grand' (ID: 6363)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.01912672072649002
    2. ' _' → logprob: -5.519126892089844
    3. '_common' → logprob: -5.519126892089844
    4. '<|end|>' → logprob: -6.144126892089844
    5. '_gr' → logprob: -6.394126892089844
    6. ' ' → logprob: -6.894126892089844
    7. '_pro' → logprob: -7.019126892089844
    8. '_recent' → logprob: -7.644126892089844
    9. '_s' → logprob: -7.769126892089844
    10. '_import' → logprob: -8.269126892089844

Token 118: ' commun' (ID: 2797)
  Prédit: ' common'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' common' → logprob: -0.10113916546106339
    2. '_common' → logprob: -2.9761390686035156
    3. ' ' → logprob: -3.9761390686035156
    4. 'common' → logprob: -4.101139068603516
    5. ' commun' → logprob: -4.851139068603516
    6. '_' → logprob: -7.351139068603516
    7. 'commun' → logprob: -7.476139068603516
    8. '	common' → logprob: -8.601139068603516
    9. ' divisor' → logprob: -8.976139068603516
    10. 'div' → logprob: -9.476139068603516

Token 119: ' div' (ID: 4223)
  Prédit: ' div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' div' → logprob: -0.23675154149532318
    2. 'div' → logprob: -1.6117515563964844
    3. '	div' → logprob: -5.236751556396484
    4. ' ' → logprob: -5.986751556396484
    5. '_div' → logprob: -6.236751556396484
    6. ' divisor' → logprob: -7.611751556396484
    7. ' facteur' → logprob: -7.736751556396484
    8. '<div' → logprob: -9.111751556396484
    9. '```' → logprob: -9.236751556396484
    10. ' divis' → logprob: -9.986751556396484

Token 120: 'iseur' (ID: 108637)
  Prédit: 'iseur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iseur' → logprob: -0.01359496358782053
    2. 'ise' → logprob: -4.513595104217529
    3. 'is' → logprob: -6.513595104217529
    4. 'i' → logprob: -8.013594627380371
    5. 'isseur' → logprob: -8.263594627380371
    6. 'isateur' → logprob: -9.263594627380371
    7. 'isor' → logprob: -9.388594627380371
    8. '```' → logprob: -9.513594627380371
    9. 'iseau' → logprob: -10.138594627380371
    10. 'iso' → logprob: -10.888594627380371

Token 121: ' (' (ID: 350)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.4642142057418823
    2. 'math' → logprob: -1.9642142057418823
    3. '_math' → logprob: -2.089214324951172
    4. '.math' → logprob: -2.589214324951172
    5. 'from' → logprob: -4.464214324951172
    6. 'import' → logprob: -5.214214324951172
    7. '.' → logprob: -5.464214324951172
    8. 'cmath' → logprob: -6.089214324951172
    9. ' from' → logprob: -6.089214324951172
    10. 'fra' → logprob: -6.339214324951172

Token 122: 'ob' (ID: 630)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.5106600522994995
    2. ' math' → logprob: -1.0106600522994995
    3. ')' → logprob: -3.385660171508789
    4. ' )' → logprob: -6.760660171508789
    5. 'fra' → logprob: -7.760660171508789
    6. ' ' → logprob: -9.385660171508789
    7. 'import' → logprob: -9.510660171508789
    8. '.math' → logprob: -9.635660171508789
    9. 'from' → logprob: -10.010660171508789
    10. ' from' → logprob: -10.510660171508789

Token 123: 'sol' (ID: 4399)
  Prédit: 'solete'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solete' → logprob: -0.029276177287101746
    2. 'ject' → logprob: -4.779276371002197
    3. 'solute' → logprob: -4.904276371002197
    4. 'sol' → logprob: -5.154276371002197
    5. 'fra' → logprob: -5.779276371002197
    6. 'j' → logprob: -7.404276371002197
    7. 'fuscated' → logprob: -7.529276371002197
    8. ')' → logprob: -7.904276371002197
    9. 'jective' → logprob: -7.904276371002197
    10. 'f' → logprob: -8.154275894165039

Token 124: 'ète' (ID: 28789)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2327369898557663
    2. 'ète' → logprob: -2.9827370643615723
    3. 'è' → logprob: -3.2327370643615723
    4. 'u' → logprob: -3.4827370643615723
    5. 'ène' → logprob: -3.7327370643615723
    6. ' module' → logprob: -4.232737064361572
    7. 'é' → logprob: -4.732737064361572
    8. ' de' → logprob: -4.982737064361572
    9. 'çu' → logprob: -5.982737064361572
    10. 'èle' → logprob: -5.982737064361572

Token 125: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4330195188522339
    2. ' )' → logprob: -1.1830195188522339
    3. ',' → logprob: -3.8080196380615234
    4. ' from' → logprob: -4.933019638061523
    5. 'from' → logprob: -5.058019638061523
    6. ' ).' → logprob: -6.433019638061523
    7. 'import' → logprob: -6.558019638061523
    8. ').' → logprob: -6.683019638061523
    9. ' ,' → logprob: -6.683019638061523
    10. ' de' → logprob: -7.183019638061523

Token 126: ' partir' (ID: 12100)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.0028117671608924866
    2. 'math' → logprob: -5.877811908721924
    3. 'fra' → logprob: -12.877811431884766
    4. ' fractions' → logprob: -12.877811431884766
    5. '.math' → logprob: -14.502811431884766
    6. '(math' → logprob: -14.877811431884766
    7. '_math' → logprob: -15.377811431884766
    8. ' Python' → logprob: -15.752811431884766
    9. 'from' → logprob: -15.877811431884766
    10. ' from' → logprob: -15.877811431884766

Token 127: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.32144904136657715
    2. ' from' → logprob: -1.9464490413665771
    3. ' math' → logprob: -3.321449041366577
    4. ' ' → logprob: -3.446449041366577
    5. ' collections' → logprob: -4.071449279785156
    6. ' des' → logprob: -4.446449279785156
    7. ' Python' → logprob: -4.696449279785156
    8. 'from' → logprob: -5.071449279785156
    9. ' space' → logprob: -5.321449279785156
    10. ' ' → logprob: -5.946449279785156

Token 128: ' Python' (ID: 26534)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.004025683738291264
    2. 'math' → logprob: -5.879025459289551
    3. ' Python' → logprob: -6.754025459289551
    4. ' python' → logprob: -10.75402545928955
    5. ' fractions' → logprob: -11.87902545928955
    6. ' ' → logprob: -12.00402545928955
    7. 'python' → logprob: -12.00402545928955
    8. ' functools' → logprob: -12.62902545928955
    9. 'Python' → logprob: -12.75402545928955
    10. ' collections' → logprob: -13.12902545928955

Token 129: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.848472535610199
    2. ' ' → logprob: -0.973472535610199
    3. ' math' → logprob: -1.8484725952148438
    4. '.math' → logprob: -3.4734725952148438
    5. '.' → logprob: -6.223472595214844
    6. ' .' → logprob: -6.848472595214844
    7. 'math' → logprob: -6.973472595214844
    8. ')' → logprob: -7.223472595214844
    9. '_math' → logprob: -7.973472595214844
    10. ' )' → logprob: -8.723472595214844

Token 130: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.008457012474536896
    2. ' ' → logprob: -4.883457183837891
    3. 'math' → logprob: -8.13345718383789
    4. '.' → logprob: -8.38345718383789
    5. ' math' → logprob: -8.75845718383789
    6. '.math' → logprob: -9.38345718383789
    7. 'Math' → logprob: -11.13345718383789
    8. '0' → logprob: -11.50845718383789
    9. ''s' → logprob: -12.00845718383789
    10. 'import' → logprob: -12.00845718383789

Token 131: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.11989514529705048
    2. '.math' → logprob: -2.6198952198028564
    3. ')' → logprob: -4.494894981384277
    4. ' ' → logprob: -5.119894981384277
    5. ' math' → logprob: -5.244894981384277
    6. '_' → logprob: -5.494894981384277
    7. 'math' → logprob: -5.744894981384277
    8. '6' → logprob: -5.744894981384277
    9. '3' → logprob: -6.494894981384277
    10. ',' → logprob: -6.619894981384277

Token 132: '5' (ID: 20)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.43909022212028503
    2. '9' → logprob: -1.0640902519226074
    3. ' math' → logprob: -5.314090251922607
    4. '8' → logprob: -6.189090251922607
    5. '5' → logprob: -6.689090251922607
    6. '11' → logprob: -7.314090251922607
    7. '7' → logprob: -7.689090251922607
    8. '0' → logprob: -8.18908977508545
    9. '10' → logprob: -8.68908977508545
    10. '6' → logprob: -9.06408977508545

Token 133: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25556492805480957
    2. ' )' → logprob: -1.5055649280548096
    3. ').' → logprob: -6.7555646896362305
    4. ',' → logprob: -7.1305646896362305
    5. ' ).' → logprob: -7.7555646896362305
    6. 'from' → logprob: -7.8805646896362305
    7. ' from' → logprob: -8.00556468963623
    8. 'import' → logprob: -8.38056468963623
    9. '.' → logprob: -9.25556468963623
    10. ' ,' → logprob: -9.75556468963623

Token 134: ' préfér' (ID: 48289)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.842659056186676
    2. ' math' → logprob: -1.2176589965820312
    3. ')' → logprob: -2.2176589965820312
    4. 'from' → logprob: -2.8426589965820312
    5. ' )' → logprob: -3.5926589965820312
    6. ' from' → logprob: -3.5926589965820312
    7. ' but' → logprob: -4.217658996582031
    8. 'import' → logprob: -4.342658996582031
    9. ' mais' → logprob: -4.842658996582031
    10. ',' → logprob: -5.092658996582031

Token 135: 'er' (ID: 259)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5881965160369873
    2. '_' → logprob: -2.3381965160369873
    3. 'a' → logprob: -2.4631965160369873
    4. 'ence' → logprob: -2.9631965160369873
    5. 'é' → logprob: -2.9631965160369873
    6. 'i' → logprob: -3.2131965160369873
    7. 'ently' → logprob: -3.4631965160369873
    8. 'ent' → logprob: -3.5881965160369873
    9. 'ential' → logprob: -4.963196754455566
    10. 'ences' → logprob: -4.963196754455566

Token 136: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.005406761541962624
    2. 'math' → logprob: -5.255406856536865
    3. ' from' → logprob: -8.880406379699707
    4. 'from' → logprob: -10.505406379699707
    5. ' ' → logprob: -13.880406379699707
    6. 'import' → logprob: -14.005406379699707
    7. ' ' → logprob: -14.130406379699707
    8. '(math' → logprob: -14.255406379699707
    9. '```' → logprob: -14.380406379699707
    10. '_math' → logprob: -14.380406379699707

Token 137: '.g' (ID: 1940)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.49727651476860046
    2. ' .' → logprob: -1.8722765445709229
    3. '<|end|>' → logprob: -1.8722765445709229
    4. ' import' → logprob: -2.997276544570923
    5. ' ' → logprob: -4.122276306152344
    6. 'import' → logprob: -4.247276306152344
    7. '<|end|>' → logprob: -7.122276306152344
    8. 's' → logprob: -7.622276306152344
    9. 'space' → logprob: -8.247276306152344
    10. 'm' → logprob: -8.372276306152344

Token 138: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.07175085693597794
    2. ' math' → logprob: -3.3217508792877197
    3. 'import' → logprob: -4.696750640869141
    4. 'cmath' → logprob: -4.821750640869141
    5. 'math' → logprob: -5.196750640869141
    6. ' import' → logprob: -5.821750640869141
    7. ' ' → logprob: -5.821750640869141
    8. 'e' → logprob: -6.946750640869141
    9. 'c' → logprob: -7.196750640869141
    10. 'a' → logprob: -7.446750640869141

Token 139: ' ;' (ID: 4605)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03312595561146736
    2. ' )' → logprob: -3.533125877380371
    3. ',' → logprob: -6.908125877380371
    4. ')
' → logprob: -7.408125877380371
    5. 'import' → logprob: -7.533125877380371
    6. '.' → logprob: -8.158125877380371
    7. ' )
' → logprob: -8.533125877380371
    8. ').' → logprob: -8.783125877380371
    9. 'from' → logprob: -8.908125877380371
    10. '')' → logprob: -10.033125877380371

Token 140: ' pas' (ID: 2173)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.5286546945571899
    2. ')' → logprob: -0.9036546945571899
    3. 'import' → logprob: -6.4036545753479
    4. ' math' → logprob: -6.6536545753479
    5. 'from' → logprob: -7.0286545753479
    6. ' ' → logprob: -7.5286545753479
    7. ' )
' → logprob: -7.6536545753479
    8. 'math' → logprob: -8.528655052185059
    9. ' from' → logprob: -9.403655052185059
    10. ')
' → logprob: -10.403655052185059

Token 141: ' utilisé' (ID: 53138)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.4853834807872772
    2. ' ' → logprob: -1.2353835105895996
    3. ' de' → logprob: -3.3603835105895996
    4. ' from' → logprob: -4.3603835105896
    5. ' )' → logprob: -4.3603835105896
    6. ' import' → logprob: -5.4853835105896
    7. ')' → logprob: -6.1103835105896
    8. ' ,' → logprob: -6.1103835105896
    9. 'from' → logprob: -6.1103835105896
    10. '.' → logprob: -6.2353835105896

Token 142: ' ici' (ID: 27994)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3996207118034363
    2. ' )' → logprob: -1.149620771408081
    3. ').' → logprob: -5.274620532989502
    4. ' ).' → logprob: -6.274620532989502
    5. 'import' → logprob: -6.774620532989502
    6. ' ici' → logprob: -6.899620532989502
    7. 'from' → logprob: -7.649620532989502
    8. ' from' → logprob: -8.02462100982666
    9. '.' → logprob: -8.02462100982666
    10. ',' → logprob: -8.27462100982666

Token 143: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006099192891269922
    2. ').' → logprob: -5.131099224090576
    3. ' )' → logprob: -9.131098747253418
    4. ')
' → logprob: -10.256098747253418
    5. '.' → logprob: -11.756098747253418
    6. ',' → logprob: -12.006098747253418
    7. 'import' → logprob: -12.756098747253418
    8. ')#' → logprob: -13.256098747253418
    9. '')' → logprob: -13.506098747253418
    10. ')
' → logprob: -13.506098747253418

Token 144: 'from' (ID: 2845)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0371570587158203
    2. ' 
' → logprob: -1.1621570587158203
    3. 'from' → logprob: -1.6621570587158203
    4. ' from' → logprob: -2.5371570587158203
    5. 'f' → logprob: -3.2871570587158203
    6. '<|end|>' → logprob: -5.03715705871582
    7. ' f' → logprob: -5.28715705871582
    8. '  
' → logprob: -5.66215705871582
    9. ' 
 
' → logprob: -5.91215705871582
    10. ' 

' → logprob: -6.16215705871582

Token 145: ' fractions' (ID: 110523)
  Prédit: ' fractions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fractions' → logprob: -0.5311981439590454
    2. 'fra' → logprob: -0.9061981439590454
    3. ' math' → logprob: -5.156198024749756
    4. 'math' → logprob: -6.406198024749756
    5. ' functools' → logprob: -8.656198501586914
    6. 'fr' → logprob: -9.031198501586914
    7. 'f' → logprob: -9.156198501586914
    8. 'fraction' → logprob: -9.531198501586914
    9. ' ' → logprob: -9.781198501586914
    10. ' fra' → logprob: -10.906198501586914

Token 146: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.024753935635089874
    2. 'import' → logprob: -3.899754047393799
    3. ' ' → logprob: -6.024754047393799
    4. '.' → logprob: -6.524754047393799
    5. '	import' → logprob: -8.89975357055664
    6. ' .' → logprob: -9.64975357055664
    7. '.import' → logprob: -10.39975357055664
    8. ' ' → logprob: -11.02475357055664
    9. '_import' → logprob: -11.14975357055664
    10. '<|end|>' → logprob: -11.39975357055664

Token 147: ' gcd' (ID: 106918)
  Prédit: ' gcd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gcd' → logprob: -0.043338969349861145
    2. 'g' → logprob: -3.1683390140533447
    3. 'Fraction' → logprob: -8.793338775634766
    4. ' g' → logprob: -9.168338775634766
    5. ' Fraction' → logprob: -9.918338775634766
    6. '_g' → logprob: -11.668338775634766
    7. ' ' → logprob: -12.043338775634766
    8. 'G' → logprob: -12.293338775634766
    9. ' fractions' → logprob: -12.418338775634766
    10. 'fra' → logprob: -13.043338775634766

Token 148: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.3828428089618683
    2. '
' → logprob: -1.257842779159546
    3. ' 

' → logprob: -4.382843017578125
    4. '' → logprob: -5.257843017578125
    5. '


' → logprob: -5.882843017578125
    6. ' 
' → logprob: -6.007843017578125
    7. ',' → logprob: -6.132843017578125
    8. '#' → logprob: -6.507843017578125
    9. 'import' → logprob: -6.507843017578125
    10. '
' → logprob: -6.507843017578125

Token 149: '#' (ID: 2)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.595318615436554
    2. '
' → logprob: -0.970318615436554
    3. '#' → logprob: -3.845318555831909
    4. '' → logprob: -4.220318794250488
    5. ' 

' → logprob: -4.595318794250488
    6. '


' → logprob: -4.845318794250488
    7. ' 
' → logprob: -5.470318794250488
    8. '\n' → logprob: -5.970318794250488
    9. '



' → logprob: -6.470318794250488
    10. '<|end|>' → logprob: -6.720318794250488

Token 150: ' Import' (ID: 19998)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.7074809074401855
    2. ' import' → logprob: -1.0824809074401855
    3. 'import' → logprob: -2.4574809074401855
    4. 'from' → logprob: -4.4574809074401855
    5. 'math' → logprob: -4.4574809074401855
    6. '#' → logprob: -4.9574809074401855
    7. ' sys' → logprob: -5.0824809074401855
    8. ' from' → logprob: -5.2074809074401855
    9. 'def' → logprob: -5.2074809074401855
    10. ' class' → logprob: -5.4574809074401855

Token 151: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.058584101498126984
    2. ' math' → logprob: -3.183584213256836
    3. 'from' → logprob: -5.183584213256836
    4. ' from' → logprob: -5.933584213256836
    5. 'er' → logprob: -5.933584213256836
    6. 'import' → logprob: -6.933584213256836
    7. ' de' → logprob: -7.058584213256836
    8. ' des' → logprob: -7.558584213256836
    9. 'port' → logprob: -8.808584213256836
    10. ' ' → logprob: -8.933584213256836

Token 152: ' du' (ID: 1462)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.034542180597782135
    2. ' ' → logprob: -3.5345420837402344
    3. ' from' → logprob: -6.159542083740234
    4. ' import' → logprob: -7.159542083740234
    5. '<|end|>' → logprob: -7.284542083740234
    6. 'from' → logprob: -7.659542083740234
    7. ' ' → logprob: -8.034542083740234
    8. 'import' → logprob: -9.784542083740234
    9. ' de' → logprob: -9.784542083740234
    10. ' os' → logprob: -9.909542083740234

Token 153: ' module' (ID: 8827)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.025040460750460625
    2. 'math' → logprob: -3.7750403881073
    3. ' collections' → logprob: -7.150040626525879
    4. ' module' → logprob: -7.400040626525879
    5. ' itertools' → logprob: -8.775040626525879
    6. 'collections' → logprob: -9.525040626525879
    7. ' operator' → logprob: -10.025040626525879
    8. 'module' → logprob: -10.650040626525879
    9. ' typing' → logprob: -10.775040626525879
    10. ' random' → logprob: -10.900040626525879

Token 154: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.0015506906202062964
    2. 'math' → logprob: -6.876550674438477
    3. ' collections' → logprob: -8.501550674438477
    4. ' itertools' → logprob: -8.751550674438477
    5. ' re' → logprob: -9.876550674438477
    6. ' sys' → logprob: -10.126550674438477
    7. ' os' → logprob: -10.126550674438477
    8. 'collections' → logprob: -12.126550674438477
    9. ' ' → logprob: -12.251550674438477
    10. 'import' → logprob: -13.001550674438477

Token 155: ',' (ID: 11)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.13515408337116241
    2. 'import' → logprob: -2.1351540088653564
    3. ' ' → logprob: -4.8851542472839355
    4. '<|end|>' → logprob: -7.8851542472839355
    5. ' ,' → logprob: -9.510153770446777
    6. ',' → logprob: -9.885153770446777
    7. '.' → logprob: -10.385153770446777
    8. ' ' → logprob: -10.510153770446777
    9. '	import' → logprob: -11.010153770446777
    10. '<|end|>' → logprob: -11.510153770446777

Token 156: ' qui' (ID: 2780)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.019415078684687614
    2. ' math' → logprob: -4.519414901733398
    3. ' import' → logprob: -5.394414901733398
    4. '<|end|>' → logprob: -6.269414901733398
    5. 'import' → logprob: -6.644414901733398
    6. ' 
' → logprob: -8.269414901733398
    7. '  ' → logprob: -9.519414901733398
    8. ' space' → logprob: -9.644414901733398
    9. ' )' → logprob: -10.144414901733398
    10. ' as' → logprob: -10.894414901733398

Token 157: ' fournit' (ID: 123615)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7429840564727783
    2. ' import' → logprob: -0.7429840564727783
    3. 'import' → logprob: -4.867983818054199
    4. ' math' → logprob: -5.367983818054199
    5. ' provides' → logprob: -5.492983818054199
    6. '<|end|>' → logprob: -5.742983818054199
    7. ' fournit' → logprob: -5.742983818054199
    8. ' permet' → logprob: -5.867983818054199
    9. ' a' → logprob: -5.867983818054199
    10. ' provide' → logprob: -5.992983818054199

Token 158: ' des' (ID: 731)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09279556572437286
    2. '<|end|>' → logprob: -2.5927956104278564
    3. ' math' → logprob: -4.467795372009277
    4. '  ' → logprob: -6.592795372009277
    5. ' space' → logprob: -8.342795372009277
    6. ' import' → logprob: -8.467795372009277
    7. ' a' → logprob: -9.217795372009277
    8. ' ' → logprob: -9.467795372009277
    9. '<|end|>' → logprob: -10.342795372009277
    10. ' des' → logprob: -10.467795372009277

Token 159: ' fonctions' (ID: 87283)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.014040802605450153
    2. ' math' → logprob: -4.389040946960449
    3. ' fonctions' → logprob: -7.014040946960449
    4. ' espaces' → logprob: -8.76404094696045
    5. '  ' → logprob: -9.01404094696045
    6. ' f' → logprob: -10.01404094696045
    7. ' sqrt' → logprob: -10.13904094696045
    8. ' functions' → logprob: -10.13904094696045
    9. ' outils' → logprob: -10.26404094696045
    10. ' space' → logprob: -10.88904094696045

Token 160: ' math' (ID: 13324)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 161: 'ématiques' (ID: 114734)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.760391116142273
    2. '<|end|>' → logprob: -1.260391116142273
    3. 'ématiques' → logprob: -2.1353912353515625
    4. 'import' → logprob: -2.7603912353515625
    5. 'ématique' → logprob: -3.7603912353515625
    6. '.' → logprob: -4.6353912353515625
    7. ',' → logprob: -5.1353912353515625
    8. '.sqrt' → logprob: -5.5103912353515625
    9. ' import' → logprob: -5.6353912353515625
    10. 's' → logprob: -6.1353912353515625

Token 162: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23552118241786957
    2. '<|end|>' → logprob: -1.8605211973190308
    3. 'import' → logprob: -3.360521078109741
    4. ' import' → logprob: -4.73552131652832
    5. '.' → logprob: -5.11052131652832
    6. ' 
' → logprob: -5.73552131652832
    7. '<|end|>' → logprob: -7.86052131652832
    8. ',' → logprob: -8.36052131652832
    9. ' 

' → logprob: -8.61052131652832
    10. '  
' → logprob: -9.11052131652832

Token 163: ' base' (ID: 3611)
  Prédit: ' base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.12281238287687302
    2. ' math' → logprob: -2.872812271118164
    3. ' ' → logprob: -3.247812271118164
    4. 'base' → logprob: -5.372812271118164
    5. 's' → logprob: -5.497812271118164
    6. 'm' → logprob: -6.372812271118164
    7. ' bases' → logprob: -6.372812271118164
    8. '<|end|>' → logprob: -6.372812271118164
    9. 'import' → logprob: -7.247812271118164
    10. 't' → logprob: -7.247812271118164

Token 164: ' (' (ID: 350)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.46401897072792053
    2. '<|end|>' → logprob: -1.7140189409255981
    3. ' ' → logprob: -2.0890190601348877
    4. ' import' → logprob: -3.2140190601348877
    5. '.' → logprob: -4.464018821716309
    6. ',' → logprob: -5.089018821716309
    7. '
' → logprob: -5.589018821716309
    8. ' 
' → logprob: -6.339018821716309
    9. '<|end|>' → logprob: -6.589018821716309
    10. ' ,' → logprob: -7.089018821716309

Token 165: 'non' (ID: 11741)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5004977583885193
    2. ' )' → logprob: -1.000497817993164
    3. 'import' → logprob: -4.250497817993164
    4. ' ' → logprob: -5.125497817993164
    5. ' ,' → logprob: -6.125497817993164
    6. ' )
' → logprob: -6.500497817993164
    7. ' import' → logprob: -6.750497817993164
    8. ',' → logprob: -7.375497817993164
    9. ')
' → logprob: -9.000497817993164
    10. ' ' → logprob: -10.125497817993164

Token 166: ' utilisé' (ID: 53138)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7438510060310364
    2. '<|end|>' → logprob: -0.9938510060310364
    3. 'import' → logprob: -2.6188509464263916
    4. ' import' → logprob: -3.6188509464263916
    5. '.' → logprob: -4.493851184844971
    6. ' utilisé' → logprob: -4.993851184844971
    7. ' utilisée' → logprob: -5.118851184844971
    8. ' utilisées' → logprob: -5.618851184844971
    9. ')' → logprob: -5.743851184844971
    10. ' )' → logprob: -5.868851184844971

Token 167: ' ici' (ID: 27994)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24096927046775818
    2. ' )' → logprob: -2.115969181060791
    3. ' ,' → logprob: -3.490969181060791
    4. ')' → logprob: -3.490969181060791
    5. '.' → logprob: -4.115969181060791
    6. ',' → logprob: -5.365969181060791
    7. ' .' → logprob: -5.615969181060791
    8. 'import' → logprob: -6.365969181060791
    9. '<|end|>' → logprob: -6.365969181060791
    10. ' import' → logprob: -6.990969181060791

Token 168: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2657445967197418
    2. ').' → logprob: -1.6407445669174194
    3. ' )' → logprob: -3.515744686126709
    4. ',' → logprob: -5.390744686126709
    5. ' ).' → logprob: -5.765744686126709
    6. 'import' → logprob: -6.765744686126709
    7. '.' → logprob: -8.01574420928955
    8. '.)' → logprob: -8.14074420928955
    9. ' ,' → logprob: -8.39074420928955
    10. ' import' → logprob: -10.26574420928955

Token 169: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3024207353591919
    2. ' 
' → logprob: -1.677420735359192
    3. ' ' → logprob: -2.9274206161499023
    4. 'm' → logprob: -4.302420616149902
    5. ' import' → logprob: -5.802420616149902
    6. '  
' → logprob: -6.802420616149902
    7. '```' → logprob: -7.302420616149902
    8. ' 
 
' → logprob: -7.427420616149902
    9. ' 

' → logprob: -7.677420616149902
    10. '<|end|>' → logprob: -8.177420616149902

Token 170: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.0006545356009155512
    2. ' ' → logprob: -7.375654697418213
    3. ' space' → logprob: -10.875654220581055
    4. ' ' → logprob: -13.000654220581055
    5. 'math' → logprob: -13.250654220581055
    6. ' maths' → logprob: -13.625654220581055
    7. ' itertools' → logprob: -14.000654220581055
    8. ' sys' → logprob: -14.375654220581055
    9. '_math' → logprob: -14.875654220581055
    10. ' Math' → logprob: -15.000654220581055

Token 171: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.26562169194221497
    2. '
' → logprob: -1.5156216621398926
    3. '


' → logprob: -5.390621662139893
    4. '\n' → logprob: -5.765621662139893
    5. '#' → logprob: -6.515621662139893
    6. '' → logprob: -7.015621662139893
    7. '<|end|>' → logprob: -7.015621662139893
    8. ' 

' → logprob: -7.390621662139893
    9. '```' → logprob: -8.14062213897705
    10. '
' → logprob: -8.14062213897705

Token 172: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.27556049823760986
    2. '

' → logprob: -1.5255604982376099
    3. '#' → logprob: -4.02556037902832
    4. '


' → logprob: -6.40056037902832
    5. '' → logprob: -6.90056037902832
    6. '\n' → logprob: -7.65056037902832
    7. '
' → logprob: -7.77556037902832
    8. ' 

' → logprob: -7.77556037902832
    9. 'def' → logprob: -8.27556037902832
    10. ' 
' → logprob: -8.52556037902832

Token 173: ' Import' (ID: 19998)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4092276692390442
    2. '#' → logprob: -1.2842276096343994
    3. 'd' → logprob: -4.2842278480529785
    4. 'class' → logprob: -4.9092278480529785
    5. 'n' → logprob: -5.2842278480529785
    6. 'from' → logprob: -5.4092278480529785
    7. ' def' → logprob: -5.5342278480529785
    8. 'import' → logprob: -5.5342278480529785
    9. ' sys' → logprob: -5.9092278480529785
    10. ' #' → logprob: -6.2842278480529785

Token 174: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.019824909046292305
    2. ' de' → logprob: -4.894824981689453
    3. ' des' → logprob: -4.894824981689453
    4. 'stat' → logprob: -7.019824981689453
    5. ' os' → logprob: -7.144824981689453
    6. ' sys' → logprob: -7.269824981689453
    7. 'from' → logprob: -7.769824981689453
    8. ' from' → logprob: -8.394824981689453
    9. 'er' → logprob: -8.769824981689453
    10. 'de' → logprob: -8.894824981689453

Token 175: ' du' (ID: 1462)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.42880478501319885
    2. ' re' → logprob: -1.9288047552108765
    3. ' ' → logprob: -2.428804874420166
    4. ' collections' → logprob: -3.178804874420166
    5. ' sys' → logprob: -3.553804874420166
    6. ' random' → logprob: -4.303804874420166
    7. ' ' → logprob: -4.553804874420166
    8. ' itertools' → logprob: -5.178804874420166
    9. ' numpy' → logprob: -5.553804874420166
    10. ' pandas' → logprob: -5.678804874420166

Token 176: ' module' (ID: 8827)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -1.5754958391189575
    2. 'os' → logprob: -1.5754958391189575
    3. ' re' → logprob: -2.075495719909668
    4. ' os' → logprob: -2.450495719909668
    5. 'operator' → logprob: -2.575495719909668
    6. 'collections' → logprob: -2.575495719909668
    7. ' collections' → logprob: -2.575495719909668
    8. ' operator' → logprob: -2.700495719909668
    9. 'random' → logprob: -3.575495719909668
    10. ' random' → logprob: -3.700495719909668

Token 177: ' itertools' (ID: 103178)
  Prédit: ' re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' re' → logprob: -0.6965706944465637
    2. ' os' → logprob: -1.071570634841919
    3. ' collections' → logprob: -2.696570634841919
    4. ' random' → logprob: -2.946570634841919
    5. ' itertools' → logprob: -3.946570634841919
    6. ' operator' → logprob: -4.446570873260498
    7. 're' → logprob: -5.946570873260498
    8. 'random' → logprob: -6.571570873260498
    9. 'os' → logprob: -6.696570873260498
    10. 'collections' → logprob: -6.696570873260498

Token 178: ',' (ID: 11)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.2255985289812088
    2. 'import' → logprob: -2.3505985736846924
    3. ' ' → logprob: -2.8505985736846924
    4. '<|end|>' → logprob: -3.3505985736846924
    5. ' itertools' → logprob: -4.975598335266113
    6. '.' → logprob: -5.725598335266113
    7. '	import' → logprob: -6.975598335266113
    8. ' as' → logprob: -7.100598335266113
    9. ' ' → logprob: -7.475598335266113
    10. '<|end|>' → logprob: -7.725598335266113

Token 179: ' qui' (ID: 2780)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.7341151237487793
    2. 'import' → logprob: -1.6091151237487793
    3. ' which' → logprob: -1.9841151237487793
    4. ' itertools' → logprob: -1.9841151237487793
    5. ' for' → logprob: -4.734115123748779
    6. ' from' → logprob: -4.859115123748779
    7. ' ' → logprob: -4.984115123748779
    8. 'from' → logprob: -5.109115123748779
    9. 'which' → logprob: -5.609115123748779
    10. ' as' → logprob: -6.109115123748779

Token 180: ' propose' (ID: 22910)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.019266827031970024
    2. 'import' → logprob: -4.269266605377197
    3. ' provides' → logprob: -5.769266605377197
    4. ' itertools' → logprob: -7.519266605377197
    5. ' permet' → logprob: -8.269267082214355
    6. ' provide' → logprob: -8.894267082214355
    7. ' fournit' → logprob: -9.019267082214355
    8. ' from' → logprob: -9.144267082214355
    9. ' ' → logprob: -9.269267082214355
    10. 'ertools' → logprob: -9.394267082214355

Token 181: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.0038676580879837275
    2. 'des' → logprob: -6.0038676261901855
    3. ' ' → logprob: -7.2538676261901855
    4. ' les' → logprob: -8.503868103027344
    5. 's' → logprob: -8.628868103027344
    6. ' ' → logprob: -9.378868103027344
    7. ' itertools' → logprob: -9.378868103027344
    8. '<|end|>' → logprob: -10.378868103027344
    9. 'ertools' → logprob: -11.628868103027344
    10. 'es' → logprob: -11.628868103027344

Token 182: ' fonctions' (ID: 87283)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -1.4416359663009644
    2. ' permutations' → logprob: -1.8166359663009644
    3. ' itertools' → logprob: -1.8166359663009644
    4. ' combinations' → logprob: -2.066636085510254
    5. ' tools' → logprob: -2.441636085510254
    6. ' outils' → logprob: -3.066636085510254
    7. 'tools' → logprob: -3.191636085510254
    8. 'per' → logprob: -3.316636085510254
    9. 'ertools' → logprob: -4.191636085510254
    10. 'it' → logprob: -4.316636085510254

Token 183: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 184: ' la' (ID: 557)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.059742171317338943
    2. ' comb' → logprob: -3.6847422122955322
    3. ' iter' → logprob: -4.559741973876953
    4. ' permutations' → logprob: -5.184741973876953
    5. ' it' → logprob: -5.934741973876953
    6. ' créer' → logprob: -6.184741973876953
    7. ' ' → logprob: -6.309741973876953
    8. ' manip' → logprob: -6.559741973876953
    9. ' l' → logprob: -7.059741973876953
    10. ' parcour' → logprob: -7.059741973876953

Token 185: ' manipulation' (ID: 61519)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.9428010582923889
    2. 'it' → logprob: -2.067800998687744
    3. 'per' → logprob: -2.317800998687744
    4. 'com' → logprob: -2.942800998687744
    5. 'ertools' → logprob: -2.942800998687744
    6. 'import' → logprob: -3.192800998687744
    7. 's' → logprob: -3.317800998687744
    8. 't' → logprob: -3.442800998687744
    9. 'm' → logprob: -3.692800998687744
    10. 'iter' → logprob: -4.067800998687744

Token 186: ' d' (ID: 272)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.17203089594841003
    2. '<|end|>' → logprob: -2.5470309257507324
    3. ' import' → logprob: -3.0470309257507324
    4. ' ' → logprob: -4.047030925750732
    5. 'import' → logprob: -5.047030925750732
    6. 'ertools' → logprob: -6.547030925750732
    7. ' de' → logprob: -6.797030925750732
    8. ' ' → logprob: -6.797030925750732
    9. ' .' → logprob: -7.172030925750732
    10. 'it' → logprob: -7.297030925750732

Token 187: '’' (ID: 438)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6820141077041626
    2. 'es' → logprob: -1.5570141077041626
    3. 'e' → logprob: -1.6820141077041626
    4. ' des' → logprob: -3.307013988494873
    5. ' itertools' → logprob: -3.807013988494873
    6. ' les' → logprob: -5.182013988494873
    7. '```' → logprob: -5.557013988494873
    8. 'it' → logprob: -5.807013988494873
    9. '_iter' → logprob: -6.057013988494873
    10. 'a' → logprob: -6.182013988494873

Token 188: 'it' (ID: 278)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.4045880138874054
    2. ' iter' → logprob: -1.654587984085083
    3. ' des' → logprob: -3.279587984085083
    4. ' ' → logprob: -3.404587984085083
    5. 'it' → logprob: -3.779587984085083
    6. 's' → logprob: -4.654588222503662
    7. 'iter' → logprob: -5.029588222503662
    8. ' sequences' → logprob: -5.279588222503662
    9. ' it' → logprob: -5.404588222503662
    10. ' outils' → logprob: -5.529588222503662

Token 189: 'ér' (ID: 2156)
  Prédit: 'ertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ertools' → logprob: -0.011195185594260693
    2. 'er' → logprob: -4.511195182800293
    3. 'ert' → logprob: -9.386195182800293
    4. 'ools' → logprob: -10.261195182800293
    5. 'tools' → logprob: -10.761195182800293
    6. 'erto' → logprob: -12.761195182800293
    7. 'ool' → logprob: -13.386195182800293
    8. 'e' → logprob: -14.511195182800293
    9. 'erol' → logprob: -15.261195182800293
    10. 'erm' → logprob: -15.511195182800293

Token 190: 'ateurs' (ID: 19727)
  Prédit: 'tools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tools' → logprob: -0.012111537158489227
    2. 'ools' → logprob: -4.512111663818359
    3. 'ertools' → logprob: -8.01211166381836
    4. 't' → logprob: -8.38711166381836
    5. 'ool' → logprob: -8.76211166381836
    6. 'tool' → logprob: -9.13711166381836
    7. 'bles' → logprob: -10.63711166381836
    8. 'os' → logprob: -10.76211166381836
    9. 'to' → logprob: -10.88711166381836
    10. 'a' → logprob: -11.01211166381836

Token 191: ' (' (ID: 350)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.1853790134191513
    2. ' ' → logprob: -2.5603790283203125
    3. ' import' → logprob: -3.0603790283203125
    4. '.' → logprob: -3.6853790283203125
    5. '<|end|>' → logprob: -4.3103790283203125
    6. ' 
' → logprob: -6.0603790283203125
    7. '.import' → logprob: -7.1853790283203125
    8. ',' → logprob: -7.1853790283203125
    9. '
' → logprob: -7.3103790283203125
    10. '  
' → logprob: -7.8103790283203125

Token 192: 'non' (ID: 11741)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.4855096638202667
    2. ' ' → logprob: -1.8605096340179443
    3. ' itertools' → logprob: -2.1105096340179443
    4. ' ).' → logprob: -2.7355096340179443
    5. ')' → logprob: -4.110509872436523
    6. ' .' → logprob: -4.735509872436523
    7. ' import' → logprob: -4.985509872436523
    8. '.' → logprob: -5.735509872436523
    9. ' ,' → logprob: -6.360509872436523
    10. 'it' → logprob: -6.360509872436523

Token 193: ' utilisé' (ID: 53138)
  Prédit: ' .'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' .' → logprob: -0.24189424514770508
    2. '.' → logprob: -2.366894245147705
    3. ' itertools' → logprob: -2.866894245147705
    4. ' ' → logprob: -4.241894245147705
    5. ' import' → logprob: -4.491894245147705
    6. ' ' → logprob: -4.741894245147705
    7. '_' → logprob: -4.866894245147705
    8. 'import' → logprob: -5.116894245147705
    9. ' utilisé' → logprob: -6.241894245147705
    10. '.util' → logprob: -6.241894245147705

Token 194: ' directement' (ID: 52317)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.9219859838485718
    2. 'import' → logprob: -1.4219859838485718
    3. ' ' → logprob: -1.6719859838485718
    4. ' )' → logprob: -2.5469861030578613
    5. ')' → logprob: -3.9219861030578613
    6. ' ' → logprob: -4.421986103057861
    7. ' itertools' → logprob: -4.546986103057861
    8. '.' → logprob: -4.671986103057861
    9. ' espaces' → logprob: -4.796986103057861
    10. ' .' → logprob: -5.421986103057861

Token 195: ' ici' (ID: 27994)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' import' → logprob: -1.236176609992981
    2. 'import' → logprob: -1.361176609992981
    3. ')' → logprob: -1.736176609992981
    4. ' )' → logprob: -1.986176609992981
    5. '.' → logprob: -2.2361764907836914
    6. ' ' → logprob: -4.236176490783691
    7. ',' → logprob: -4.736176490783691
    8. ' .' → logprob: -6.111176490783691
    9. ' ,' → logprob: -6.236176490783691
    10. ' ).' → logprob: -6.361176490783691

Token 196: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05809055268764496
    2. 'import' → logprob: -3.4330904483795166
    3. ' )' → logprob: -3.8080904483795166
    4. '.' → logprob: -7.308090686798096
    5. ' import' → logprob: -7.558090686798096
    6. ')
' → logprob: -8.308090209960938
    7. ').' → logprob: -8.558090209960938
    8. ',' → logprob: -9.683090209960938
    9. ' )
' → logprob: -9.683090209960938
    10. '.import' → logprob: -9.683090209960938

Token 197: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.1634485423564911
    2. ' import' → logprob: -2.6634485721588135
    3. 'i' → logprob: -3.0384485721588135
    4. ' itertools' → logprob: -4.038448333740234
    5. 'it' → logprob: -4.788448333740234
    6. ' i' → logprob: -5.288448333740234
    7. 'from' → logprob: -6.538448333740234
    8. ' from' → logprob: -8.288448333740234
    9. ' ' → logprob: -8.663448333740234
    10. ' 
' → logprob: -9.288448333740234

Token 198: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.00026622318546287715
    2. ' ' → logprob: -8.875266075134277
    3. ' it' → logprob: -9.500266075134277
    4. 'it' → logprob: -10.000266075134277
    5. '	it' → logprob: -12.500266075134277
    6. ' iter' → logprob: -13.875266075134277
    7. ' ite' → logprob: -14.375266075134277
    8. ' functools' → logprob: -15.500266075134277
    9. ' ' → logprob: -15.750266075134277
    10. ' space' → logprob: -16.250267028808594

Token 199: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.12274468690156937
    2. '
' → logprob: -2.2477447986602783
    3. '


' → logprob: -5.622744560241699
    4. '\n' → logprob: -6.247744560241699
    5. '<|end|>' → logprob: -6.747744560241699
    6. '#' → logprob: -7.122744560241699
    7. ' 

' → logprob: -7.122744560241699
    8. 'import' → logprob: -8.1227445602417
    9. '' → logprob: -8.2477445602417
    10. '```' → logprob: -8.7477445602417

Token 200: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3710669279098511
    2. '#' → logprob: -1.746066927909851
    3. '

' → logprob: -2.3710670471191406
    4. '' → logprob: -4.746067047119141
    5. 'import' → logprob: -4.746067047119141
    6. '<|end|>' → logprob: -4.746067047119141
    7. '\n' → logprob: -5.496067047119141
    8. 'n' → logprob: -6.121067047119141
    9. '<|end|>' → logprob: -6.621067047119141
    10. ' 
' → logprob: -6.871067047119141

Token 201: ' Import' (ID: 19998)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0231674909591675
    2. ' 

' → logprob: -1.8981674909591675
    3. ' ' → logprob: -2.148167610168457
    4. 'def' → logprob: -2.273167610168457
    5. ' 
' → logprob: -2.273167610168457
    6. 'd' → logprob: -2.523167610168457
    7. 'n' → logprob: -3.648167610168457
    8. ' 
 
' → logprob: -3.898167610168457
    9. ' #' → logprob: -4.273167610168457
    10. '\' → logprob: -5.148167610168457

Token 202: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -1.1436971426010132
    2. 'from' → logprob: -1.7686971426010132
    3. ' os' → logprob: -1.8936971426010132
    4. ' sys' → logprob: -2.1436972618103027
    5. 'er' → logprob: -2.6436972618103027
    6. 'stat' → logprob: -3.5186972618103027
    7. ' numpy' → logprob: -3.8936972618103027
    8. ' from' → logprob: -4.018697261810303
    9. ' re' → logprob: -4.768697261810303
    10. 'lib' → logprob: -4.893697261810303

Token 203: ' de' (ID: 334)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.5950440764427185
    2. ' re' → logprob: -1.4700441360473633
    3. ' os' → logprob: -2.0950441360473633
    4. ' random' → logprob: -2.4700441360473633
    5. 'collections' → logprob: -5.720044136047363
    6. ' json' → logprob: -6.095044136047363
    7. ' numpy' → logprob: -6.720044136047363
    8. 're' → logprob: -7.095044136047363
    9. ' sys' → logprob: -7.595044136047363
    10. ' pandas' → logprob: -7.720044136047363

Token 204: ' la' (ID: 557)
  Prédit: ' re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' re' → logprob: -0.42969807982444763
    2. ' collections' → logprob: -1.92969810962677
    3. ' os' → logprob: -2.5546979904174805
    4. 're' → logprob: -2.6796979904174805
    5. ' operator' → logprob: -3.8046979904174805
    6. ' sys' → logprob: -4.0546979904174805
    7. 'collections' → logprob: -4.6796979904174805
    8. ' random' → logprob: -5.6796979904174805
    9. 'os' → logprob: -6.1796979904174805
    10. 'operator' → logprob: -7.0546979904174805

Token 205: ' classe' (ID: 29329)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -0.38415729999542236
    2. 'collections' → logprob: -2.009157180786133
    3. ' re' → logprob: -2.509157180786133
    4. ' collections' → logprob: -3.509157180786133
    5. 'operator' → logprob: -3.634157180786133
    6. ' operator' → logprob: -4.259157180786133
    7. 'os' → logprob: -4.384157180786133
    8. 'random' → logprob: -4.509157180786133
    9. ' random' → logprob: -5.884157180786133
    10. ' os' → logprob: -5.884157180786133

Token 206: ' Counter' (ID: 32251)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.4099999666213989
    2. 'collections' → logprob: -1.284999966621399
    3. ' threading' → logprob: -3.0349998474121094
    4. ' typing' → logprob: -5.784999847412109
    5. ' deque' → logprob: -6.284999847412109
    6. 'deque' → logprob: -6.409999847412109
    7. ' defaultdict' → logprob: -6.909999847412109
    8. ' dat' → logprob: -7.034999847412109
    9. ' queue' → logprob: -7.534999847412109
    10. 'dat' → logprob: -8.03499984741211

Token 207: ' pour' (ID: 1930)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.018174530938267708
    2. ' from' → logprob: -4.018174648284912
    3. '	from' → logprob: -11.143174171447754
    4. 'de' → logprob: -12.393174171447754
    5. ' de' → logprob: -13.518174171447754
    6. 'collections' → logprob: -13.768174171447754
    7. ',' → logprob: -14.768174171447754
    8. '.from' → logprob: -14.768174171447754
    9. '```' → logprob: -15.018174171447754
    10. '<|end|>' → logprob: -15.143174171447754

Token 208: ' le' (ID: 505)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.38690051436424255
    2. ' collections' → logprob: -1.136900544166565
    3. ' collection' → logprob: -11.261900901794434
    4. 'collection' → logprob: -11.511900901794434
    5. 'from' → logprob: -12.886900901794434
    6. '.collections' → logprob: -13.386900901794434
    7. 'col' → logprob: -13.636900901794434
    8. ' from' → logprob: -15.136900901794434
    9. 'collect' → logprob: -15.261900901794434
    10. 'c' → logprob: -15.386900901794434

Token 209: ' compt' (ID: 39238)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.030008265748620033
    2. ' collections' → logprob: -3.530008316040039
    3. 'collection' → logprob: -8.405008316040039
    4. ' collection' → logprob: -10.530008316040039
    5. 'c' → logprob: -12.655008316040039
    6. 'collect' → logprob: -13.280008316040039
    7. 'from' → logprob: -13.905008316040039
    8. 'col' → logprob: -14.405008316040039
    9. 'cole' → logprob: -15.155008316040039
    10. 'Collections' → logprob: -15.530008316040039

Token 210: 'age' (ID: 477)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.00027206414961256087
    2. 'from' → logprob: -8.875271797180176
    3. 'e' → logprob: -9.750271797180176
    4. 'collections' → logprob: -10.125271797180176
    5. 'eur' → logprob: -11.000271797180176
    6. 'erm' → logprob: -12.625271797180176
    7. 'ertools' → logprob: -12.875271797180176
    8. 'or' → logprob: -13.125271797180176
    9. ' from' → logprob: -13.250271797180176
    10. 'ur' → logprob: -14.000271797180176

Token 211: ' rapide' (ID: 44887)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.04901549220085144
    2. ' from' → logprob: -3.049015522003174
    3. 'collections' → logprob: -9.049015045166016
    4. ' de' → logprob: -9.174015045166016
    5. 'de' → logprob: -10.049015045166016
    6. ' des' → logprob: -10.299015045166016
    7. ' depuis' → logprob: -10.299015045166016
    8. '	from' → logprob: -10.299015045166016
    9. ',' → logprob: -10.424015045166016
    10. ' collections' → logprob: -12.299015045166016

Token 212: ' d' (ID: 272)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.001959678716957569
    2. ' from' → logprob: -6.251959800720215
    3. 'de' → logprob: -11.626959800720215
    4. '	from' → logprob: -11.751959800720215
    5. ',' → logprob: -12.501959800720215
    6. '.from' → logprob: -13.001959800720215
    7. ' de' → logprob: -13.001959800720215
    8. '```' → logprob: -13.126959800720215
    9. 'collections' → logprob: -14.251959800720215
    10. ' ' → logprob: -15.001959800720215

Token 213: '’' (ID: 438)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.35716909170150757
    2. 'collections' → logprob: -1.2321691513061523
    3. ' ' → logprob: -5.607169151306152
    4. 's' → logprob: -5.857169151306152
    5. 'from' → logprob: -7.357169151306152
    6. 'a' → logprob: -7.857169151306152
    7. '_' → logprob: -8.107169151306152
    8. 'Collections' → logprob: -9.232169151306152
    9. '<|end|>' → logprob: -9.232169151306152
    10. ' ' → logprob: -9.232169151306152

Token 214: 'élé' (ID: 15228)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.3485107123851776
    2. ' collections' → logprob: -1.2235107421875
    3. 's' → logprob: -11.2235107421875
    4. 'c' → logprob: -11.3485107421875
    5. 'from' → logprob: -12.4735107421875
    6. 'collection' → logprob: -12.4735107421875
    7. '_' → logprob: -12.5985107421875
    8. 'b' → logprob: -12.5985107421875
    9. ' collection' → logprob: -12.8485107421875
    10. ' ' → logprob: -12.9735107421875

Token 215: 'ments' (ID: 1626)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.0205953121185303
    2. 'urs' → logprob: -1.5205953121185303
    3. 'reurs' → logprob: -2.3955953121185303
    4. 'eurs' → logprob: -2.5205953121185303
    5. 'teurs' → logprob: -2.6455953121185303
    6. 'ries' → logprob: -3.0205953121185303
    7. 'ers' → logprob: -3.3955953121185303
    8. 'er' → logprob: -3.3955953121185303
    9. 'rs' → logprob: -4.145595550537109
    10. 's' → logprob: -5.145595550537109

Token 216: ' (' (ID: 350)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.007633600849658251
    2. ' from' → logprob: -4.882633686065674
    3. '	from' → logprob: -10.882633209228516
    4. ',' → logprob: -13.257633209228516
    5. '```' → logprob: -13.507633209228516
    6. 'collections' → logprob: -13.882633209228516
    7. 'de' → logprob: -14.132633209228516
    8. ')' → logprob: -14.757633209228516
    9. ' ' → logprob: -14.882633209228516
    10. ' ' → logprob: -15.007633209228516

Token 217: 'non' (ID: 11741)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5307950377464294
    2. ')' → logprob: -1.1557950973510742
    3. ' from' → logprob: -3.155795097351074
    4. 'collections' → logprob: -3.155795097351074
    5. ' collections' → logprob: -4.655795097351074
    6. ' )' → logprob: -6.155795097351074
    7. ' ' → logprob: -9.155795097351074
    8. ' ' → logprob: -10.405795097351074
    9. 'Collections' → logprob: -10.780795097351074
    10. ')
' → logprob: -10.905795097351074

Token 218: ' utilisée' (ID: 106548)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3175339698791504
    2. ' space' → logprob: -2.6925339698791504
    3. 'from' → logprob: -3.3175339698791504
    4. 's' → logprob: -3.4425339698791504
    5. ' ' → logprob: -3.6925339698791504
    6. 'space' → logprob: -4.06753396987915
    7. ' espace' → logprob: -4.19253396987915
    8. ' espaces' → logprob: -4.19253396987915
    9. ')' → logprob: -4.31753396987915
    10. 'collections' → logprob: -4.69253396987915

Token 219: ' ici' (ID: 27994)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2049454152584076
    2. ' )' → logprob: -1.82994544506073
    3. '.' → logprob: -4.9549455642700195
    4. 'from' → logprob: -5.2049455642700195
    5. ' ' → logprob: -5.8299455642700195
    6. ',' → logprob: -5.8299455642700195
    7. ' ' → logprob: -6.8299455642700195
    8. ' from' → logprob: -6.8299455642700195
    9. 'import' → logprob: -7.2049455642700195
    10. ' depuis' → logprob: -7.2049455642700195

Token 220: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00272058742120862
    2. ' )' → logprob: -6.252720355987549
    3. 'from' → logprob: -7.627720355987549
    4. ')
' → logprob: -8.377720832824707
    5. ' from' → logprob: -10.752720832824707
    6. 'import' → logprob: -11.252720832824707
    7. ' )
' → logprob: -11.627720832824707
    8. ',' → logprob: -12.002720832824707
    9. '.' → logprob: -12.377720832824707
    10. ')
' → logprob: -12.502720832824707

Token 221: 'from' (ID: 2845)
  Prédit: 'from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -3.128163257315464e-07
    2. ' from' → logprob: -15.5
    3. 'fro' → logprob: -18.875
    4. 'f' → logprob: -19.375
    5. 'fr' → logprob: -20.25
    6. '```' → logprob: -20.875
    7. '	from' → logprob: -21.0
    8. '#from' → logprob: -23.0
    9. '.from' → logprob: -23.375
    10. 'From' → logprob: -23.375

Token 222: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -3.547789674485102e-05
    2. ' collections' → logprob: -10.250035285949707
    3. 'collection' → logprob: -18.250036239624023
    4. '.collections' → logprob: -19.250036239624023
    5. 'collect' → logprob: -21.625036239624023
    6. ' ' → logprob: -21.875036239624023
    7. 'col' → logprob: -21.875036239624023
    8. 'cole' → logprob: -23.625036239624023
    9. '
' → logprob: -23.625036239624023
    10. 'Collections' → logprob: -23.625036239624023

Token 223: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.004708515014499426
    2. ' import' → logprob: -6.004708290100098
    3. 'collections' → logprob: -6.254708290100098
    4. 'port' → logprob: -9.629708290100098
    5. 'ections' → logprob: -10.004708290100098
    6. 'ounter' → logprob: -10.004708290100098
    7. 'abc' → logprob: -10.129708290100098
    8. 'imports' → logprob: -10.379708290100098
    9. 'ctions' → logprob: -11.379708290100098
    10. 'counter' → logprob: -11.629708290100098

Token 224: ' Counter' (ID: 32251)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.014166799373924732
    2. ' Counter' → logprob: -4.264166831970215
    3. '.Counter' → logprob: -13.889166831970215
    4. 'counter' → logprob: -14.264166831970215
    5. 'collections' → logprob: -14.389166831970215
    6. ' counter' → logprob: -15.014166831970215
    7. 'Collection' → logprob: -15.889166831970215
    8. '_counter' → logprob: -16.0141658782959
    9. ' defaultdict' → logprob: -16.0141658782959
    10. 'Coun' → logprob: -16.5141658782959

Token 225: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 226: '#' (ID: 2)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.9038907885551453
    2. '#' → logprob: -1.52889084815979
    3. '
' → logprob: -1.77889084815979
    4. '<|end|>' → logprob: -1.77889084815979
    5. '' → logprob: -4.653890609741211
    6. '

' → logprob: -4.903890609741211
    7. ' 
' → logprob: -5.403890609741211
    8. '```' → logprob: -6.028890609741211
    9. '<|end|>' → logprob: -6.153890609741211
    10. ' ' → logprob: -6.278890609741211

Token 227: ' Import' (ID: 19998)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.13567110896110535
    2. ' ' → logprob: -2.3856711387634277
    3. 'def' → logprob: -4.135671138763428
    4. 'd' → logprob: -5.260671138763428
    5. ' 
' → logprob: -5.260671138763428
    6. ' #' → logprob: -5.885671138763428
    7. ' 

' → logprob: -6.385671138763428
    8. 'a' → logprob: -7.135671138763428
    9. 'import' → logprob: -7.260671138763428
    10. ' 
 
' → logprob: -7.885671138763428

Token 228: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.08113664388656616
    2. ' os' → logprob: -3.456136703491211
    3. ' des' → logprob: -3.831136703491211
    4. ' from' → logprob: -5.331136703491211
    5. ' re' → logprob: -5.831136703491211
    6. ' de' → logprob: -5.956136703491211
    7. 'from' → logprob: -6.081136703491211
    8. ' random' → logprob: -6.206136703491211
    9. 'ance' → logprob: -6.331136703491211
    10. ' itertools' → logprob: -6.331136703491211

Token 229: ' de' (ID: 334)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.32337918877601624
    2. ' collections' → logprob: -1.8233791589736938
    3. ' re' → logprob: -2.6983792781829834
    4. ' random' → logprob: -4.698379039764404
    5. ' defaultdict' → logprob: -4.823379039764404
    6. ' typing' → logprob: -4.948379039764404
    7. ' datetime' → logprob: -5.198379039764404
    8. ' operator' → logprob: -5.698379039764404
    9. ' json' → logprob: -5.698379039764404
    10. 'collections' → logprob: -6.198379039764404

Token 230: ' la' (ID: 557)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -1.345090627670288
    2. ' os' → logprob: -1.595090627670288
    3. ' collections' → logprob: -1.720090627670288
    4. ' re' → logprob: -2.095090627670288
    5. 'collections' → logprob: -2.720090627670288
    6. ' typing' → logprob: -2.845090627670288
    7. 'os' → logprob: -2.970090627670288
    8. ' heap' → logprob: -3.470090627670288
    9. ' operator' → logprob: -4.720090866088867
    10. 'operator' → logprob: -5.845090866088867

Token 231: ' fonction' (ID: 17610)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -1.221786379814148
    2. 'operator' → logprob: -1.471786379814148
    3. 'typing' → logprob: -2.2217864990234375
    4. 'math' → logprob: -2.3467864990234375
    5. 'os' → logprob: -2.4717864990234375
    6. 'collections' → logprob: -2.5967864990234375
    7. 'heap' → logprob: -2.8467864990234375
    8. 'random' → logprob: -3.7217864990234375
    9. 'dat' → logprob: -4.4717864990234375
    10. 'datetime' → logprob: -4.9717864990234375

Token 232: ' chain' (ID: 13464)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.7929832339286804
    2. ' defaultdict' → logprob: -1.1679832935333252
    3. 'deque' → logprob: -3.167983293533325
    4. 'heap' → logprob: -3.542983293533325
    5. ' deque' → logprob: -3.792983293533325
    6. 'bis' → logprob: -4.042983055114746
    7. 'operator' → logprob: -4.292983055114746
    8. 'random' → logprob: -4.417983055114746
    9. 'per' → logprob: -4.417983055114746
    10. ' permutations' → logprob: -4.917983055114746

Token 233: ' depuis' (ID: 16277)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.506346583366394
    2. 'from' → logprob: -1.131346583366394
    3. ' import' → logprob: -2.7563467025756836
    4. ',' → logprob: -5.131346702575684
    5. ' from' → logprob: -5.631346702575684
    6. '<|end|>' → logprob: -7.256346702575684
    7. ' ' → logprob: -8.256346702575684
    8. '	import' → logprob: -8.881346702575684
    9. '<|end|>' → logprob: -8.881346702575684
    10. '	from' → logprob: -9.256346702575684

Token 234: ' itertools' (ID: 103178)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.07889628410339355
    2. ' itertools' → logprob: -2.5788962841033936
    3. 'iter' → logprob: -12.703896522521973
    4. 'import' → logprob: -13.328896522521973
    5. 'collections' → logprob: -13.703896522521973
    6. '	it' → logprob: -15.453896522521973
    7. '_it' → logprob: -15.703896522521973
    8. ' ' → logprob: -16.328895568847656
    9. 'iterator' → logprob: -16.578895568847656
    10. 'io' → logprob: -17.078895568847656

Token 235: ',' (ID: 11)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.3868842124938965
    2. 'import' → logprob: -1.1368842124938965
    3. '	import' → logprob: -12.136884689331055
    4. ' ' → logprob: -12.511884689331055
    5. 'from' → logprob: -13.136884689331055
    6. ' ' → logprob: -13.886884689331055
    7. ',' → logprob: -14.761884689331055
    8. '_import' → logprob: -15.511884689331055
    9. ' from' → logprob: -16.011884689331055
    10. ' im' → logprob: -16.261884689331055

Token 236: ' utile' (ID: 68237)
  Prédit: ' chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chain' → logprob: -0.20354287326335907
    2. 'import' → logprob: -2.453542947769165
    3. ' import' → logprob: -3.078542947769165
    4. 'chain' → logprob: -3.453542947769165
    5. 'from' → logprob: -3.953542947769165
    6. ' from' → logprob: -6.703542709350586
    7. ' itertools' → logprob: -9.953542709350586
    8. ' is' → logprob: -11.203542709350586
    9. 'to' → logprob: -12.078542709350586
    10. ' chained' → logprob: -12.453542709350586

Token 237: ' pour' (ID: 1930)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6997310519218445
    2. 'from' → logprob: -1.0747311115264893
    3. 'import' → logprob: -2.1997311115264893
    4. ' pour' → logprob: -3.8247311115264893
    5. ' from' → logprob: -4.94973087310791
    6. 'pour' → logprob: -5.19973087310791
    7. ' import' → logprob: -5.57473087310791
    8. ' depuis' → logprob: -6.57473087310791
    9. 'de' → logprob: -6.69973087310791
    10. ' de' → logprob: -6.82473087310791

Token 238: ' a' (ID: 261)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.0076967752538621426
    2. 'it' → logprob: -4.882696628570557
    3. 'chain' → logprob: -9.632697105407715
    4. 'iter' → logprob: -11.132697105407715
    5. 'import' → logprob: -12.382697105407715
    6. ' chain' → logprob: -13.257697105407715
    7. ' iter' → logprob: -13.632697105407715
    8. ' it' → logprob: -13.757697105407715
    9. 'iterator' → logprob: -14.757697105407715
    10. ' ' → logprob: -15.632697105407715

Token 239: 'plat' (ID: 45896)
  Prédit: 'pp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pp' → logprob: -0.5094128251075745
    2. 'chain' → logprob: -1.0094127655029297
    3. 't' → logprob: -5.50941276550293
    4. 'b' → logprob: -5.50941276550293
    5. 'cc' → logprob: -5.63441276550293
    6. 'it' → logprob: -5.88441276550293
    7. 'import' → logprob: -6.00941276550293
    8. 'n' → logprob: -6.13441276550293
    9. 'ct' → logprob: -6.25941276550293
    10. 'c' → logprob: -6.38441276550293

Token 240: 'ir' (ID: 380)
  Prédit: 'chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chain' → logprob: -0.1046253889799118
    2. 'pp' → logprob: -3.8546254634857178
    3. 'er' → logprob: -4.104625225067139
    4. 'r' → logprob: -4.354625225067139
    5. 'ch' → logprob: -4.479625225067139
    6. 'p' → logprob: -5.104625225067139
    7. 'érer' → logprob: -5.354625225067139
    8. 'rch' → logprob: -5.854625225067139
    9. 'ing' → logprob: -5.979625225067139
    10. '(chain' → logprob: -6.104625225067139

Token 241: ' des' (ID: 731)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.1470140814781189
    2. 'it' → logprob: -3.3970141410827637
    3. 'import' → logprob: -3.6470141410827637
    4. ',' → logprob: -4.022014141082764
    5. 'from' → logprob: -4.147014141082764
    6. '(iter' → logprob: -4.272014141082764
    7. '(' → logprob: -4.397014141082764
    8. '(it' → logprob: -4.647014141082764
    9. '(chain' → logprob: -6.522014141082764
    10. '<|end|>' → logprob: -6.647014141082764

Token 242: ' listes' (ID: 179198)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.0008052219054661691
    2. ' iter' → logprob: -7.250805377960205
    3. 'it' → logprob: -9.750804901123047
    4. 'iter' → logprob: -10.875804901123047
    5. ' iterable' → logprob: -11.625804901123047
    6. ' it' → logprob: -12.125804901123047
    7. '_iter' → logprob: -13.625804901123047
    8. ' chain' → logprob: -13.750804901123047
    9. 'chain' → logprob: -14.875804901123047
    10. 'import' → logprob: -15.375804901123047

Token 243: ' imb' (ID: 63592)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.09687838703393936
    2. 'from' → logprob: -2.8468782901763916
    3. ',' → logprob: -3.5968782901763916
    4. ' import' → logprob: -5.096878528594971
    5. '.' → logprob: -7.971878528594971
    6. ')' → logprob: -8.721878051757812
    7. ' from' → logprob: -9.846878051757812
    8. '(import' → logprob: -9.846878051757812
    9. ' ' → logprob: -10.471878051757812
    10. '	import' → logprob: -11.096878051757812

Token 244: 'ri' (ID: 872)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.7788978815078735
    2. 'r' → logprob: -2.028897762298584
    3. 'c' → logprob: -2.278897762298584
    4. 'les' → logprob: -2.278897762298584
    5. 'chain' → logprob: -2.903897762298584
    6. 'ch' → logprob: -2.903897762298584
    7. 'rch' → logprob: -2.903897762298584
    8. 'rc' → logprob: -3.153897762298584
    9. 'lg' → logprob: -3.403897762298584
    10. 'l' → logprob: -3.653897762298584

Token 245: 'quées' (ID: 111264)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.9446523785591125
    2. 'r' → logprob: -1.4446523189544678
    3. 'érées' → logprob: -1.9446523189544678
    4. 'ch' → logprob: -3.8196523189544678
    5. 'ser' → logprob: -3.9446523189544678
    6. 'c' → logprob: -4.194652557373047
    7. 'quées' → logprob: -4.444652557373047
    8. 'd' → logprob: -4.444652557373047
    9. 'ri' → logprob: -4.444652557373047
    10. 'ner' → logprob: -4.569652557373047

Token 246: ' (' (ID: 350)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.43457677960395813
    2. 'import' → logprob: -1.1845767498016357
    3. ',' → logprob: -3.3095767498016357
    4. ' from' → logprob: -5.309576988220215
    5. ' import' → logprob: -5.434576988220215
    6. '.' → logprob: -7.559576988220215
    7. ' ' → logprob: -9.434576988220215
    8. ' ,' → logprob: -9.934576988220215
    9. ')' → logprob: -10.809576988220215
    10. '(import' → logprob: -11.059576988220215

Token 247: 'non' (ID: 11741)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.08251573890447617
    2. 'it' → logprob: -3.0825157165527344
    3. ')' → logprob: -3.4575157165527344
    4. 'import' → logprob: -7.207515716552734
    5. ' )' → logprob: -7.457515716552734
    6. 'from' → logprob: -7.832515716552734
    7. ' it' → logprob: -10.582515716552734
    8. 'iter' → logprob: -10.957515716552734
    9. ' from' → logprob: -11.207515716552734
    10. ' import' → logprob: -11.332515716552734

Token 248: ' utilisé' (ID: 53138)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.26492083072662354
    2. ' import' → logprob: -2.264920711517334
    3. ')' → logprob: -2.764920711517334
    4. 'from' → logprob: -3.139920711517334
    5. ' itertools' → logprob: -5.639920711517334
    6. ' ' → logprob: -5.764920711517334
    7. ',' → logprob: -5.764920711517334
    8. ' )' → logprob: -6.389920711517334
    9. 'util' → logprob: -6.639920711517334
    10. '_import' → logprob: -6.639920711517334

Token 249: ' ici' (ID: 27994)
  Prédit: ' ici'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ici' → logprob: -0.6217459440231323
    2. ')' → logprob: -0.8717459440231323
    3. 'import' → logprob: -3.496746063232422
    4. ' )' → logprob: -5.246746063232422
    5. 'here' → logprob: -5.871746063232422
    6. ' here' → logprob: -5.871746063232422
    7. 'ici' → logprob: -6.246746063232422
    8. ''ici' → logprob: -7.871746063232422
    9. '’ici' → logprob: -8.871746063232422
    10. ',' → logprob: -8.871746063232422

Token 250: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0035080108791589737
    2. ').' → logprob: -5.8785080909729
    3. 'import' → logprob: -7.5035080909729
    4. ')
' → logprob: -9.503507614135742
    5. 'from' → logprob: -10.253507614135742
    6. ' )' → logprob: -10.753507614135742
    7. '')' → logprob: -12.253507614135742
    8. '.' → logprob: -12.503507614135742
    9. ',' → logprob: -13.128507614135742
    10. ').
' → logprob: -13.378507614135742

Token 251: 'from' (ID: 2845)
  Prédit: 'from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -4.60414821645827e-06
    2. 'f' → logprob: -13.000004768371582
    3. ' from' → logprob: -13.000004768371582
    4. 'fro' → logprob: -17.250003814697266
    5. 'fr' → logprob: -17.750003814697266
    6. 'import' → logprob: -18.875003814697266
    7. 'for' → logprob: -19.875003814697266
    8. '```' → logprob: -20.500003814697266
    9. 'form' → logprob: -21.250003814697266
    10. '`' → logprob: -21.500003814697266

Token 252: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.03804539144039154
    2. 'it' → logprob: -3.2880454063415527
    3. ' it' → logprob: -12.663044929504395
    4. 'iter' → logprob: -14.538044929504395
    5. ' iter' → logprob: -15.913044929504395
    6. '_it' → logprob: -16.41304588317871
    7. '	it' → logprob: -16.78804588317871
    8. ' functools' → logprob: -18.03804588317871
    9. 'import' → logprob: -18.28804588317871
    10. ' ' → logprob: -18.78804588317871

Token 253: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.029756737872958183
    2. 'import' → logprob: -3.529756784439087
    3. '	import' → logprob: -12.404756546020508
    4. ' ' → logprob: -14.279756546020508
    5. ' ' → logprob: -14.279756546020508
    6. ' im' → logprob: -15.279756546020508
    7. '_import' → logprob: -15.779756546020508
    8. '.import' → logprob: -16.404756546020508
    9. ' impor' → logprob: -16.529756546020508
    10. '.' → logprob: -16.654756546020508

Token 254: ' chain' (ID: 13464)
  Prédit: 'chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chain' → logprob: -0.0009115827269852161
    2. ' chain' → logprob: -7.000911712646484
    3. 'ch' → logprob: -17.375911712646484
    4. '.chain' → logprob: -17.750911712646484
    5. 'chains' → logprob: -19.750911712646484
    6. '(chain' → logprob: -20.625911712646484
    7. 'Chain' → logprob: -20.750911712646484
    8. '_chain' → logprob: -21.000911712646484
    9. '-chain' → logprob: -22.000911712646484
    10. 'chai' → logprob: -22.375911712646484

Token 255: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7488765120506287
    2. '\n' → logprob: -1.7488765716552734
    3. '<|end|>' → logprob: -1.8738765716552734
    4. '

' → logprob: -1.9988765716552734
    5. '#' → logprob: -3.2488765716552734
    6. '' → logprob: -4.998876571655273
    7. 'import' → logprob: -5.498876571655273
    8. '<|end|>' → logprob: -6.373876571655273
    9. ' 

' → logprob: -6.498876571655273
    10. '```' → logprob: -6.498876571655273

Token 256: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4995551109313965
    2. '<|end|>' → logprob: -1.7495551109313965
    3. '\n' → logprob: -2.1245551109313965
    4. '#' → logprob: -2.8745551109313965
    5. '

' → logprob: -3.7495551109313965
    6. '' → logprob: -5.6245551109313965
    7. '<|end|>' → logprob: -5.6245551109313965
    8. '```' → logprob: -5.8745551109313965
    9. ' 
' → logprob: -6.1245551109313965
    10. 'import' → logprob: -6.7495551109313965

Token 257: ' Import' (ID: 19998)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6058905720710754
    2. 'd' → logprob: -1.2308905124664307
    3. 'def' → logprob: -2.2308905124664307
    4. 'n' → logprob: -4.35589075088501
    5. ' ' → logprob: -4.35589075088501
    6. ' #' → logprob: -5.10589075088501
    7. ' 
' → logprob: -5.10589075088501
    8. 'a' → logprob: -5.23089075088501
    9. ' 

' → logprob: -6.10589075088501
    10. 'import' → logprob: -7.10589075088501

Token 258: 'ation' (ID: 387)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5995033383369446
    2. 'ation' → logprob: -0.8495033383369446
    3. 'import' → logprob: -4.599503517150879
    4. ' from' → logprob: -5.599503517150879
    5. ' des' → logprob: -6.099503517150879
    6. ' de' → logprob: -6.099503517150879
    7. 'port' → logprob: -6.849503517150879
    8. ' os' → logprob: -8.224503517150879
    9. 'stat' → logprob: -8.224503517150879
    10. 'er' → logprob: -8.349503517150879

Token 259: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.0993722677230835
    2. ' collections' → logprob: -1.4743722677230835
    3. ' os' → logprob: -2.099372386932373
    4. ' des' → logprob: -2.724372386932373
    5. ' math' → logprob: -3.349372386932373
    6. 'from' → logprob: -3.474372386932373
    7. ' from' → logprob: -3.599372386932373
    8. 'collections' → logprob: -3.599372386932373
    9. ' json' → logprob: -3.724372386932373
    10. ' sys' → logprob: -3.724372386932373

Token 260: ' he' (ID: 501)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -0.7637308835983276
    2. ' operator' → logprob: -1.6387308835983276
    3. 'operator' → logprob: -2.388731002807617
    4. ' re' → logprob: -2.513731002807617
    5. ' os' → logprob: -2.763731002807617
    6. 'os' → logprob: -3.013731002807617
    7. 'collections' → logprob: -4.388731002807617
    8. 'random' → logprob: -4.638731002807617
    9. ' collections' → logprob: -4.888731002807617
    10. ' random' → logprob: -5.263731002807617

Token 261: 'app' (ID: 903)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.29207366704940796
    2. 'ap' → logprob: -1.5420737266540527
    3. 'lp' → logprob: -3.9170737266540527
    4. 'xad' → logprob: -4.792073726654053
    5. 'app' → logprob: -5.917073726654053
    6. 'ader' → logprob: -6.042073726654053
    7. 'llo' → logprob: -6.542073726654053
    8. 'ad' → logprob: -7.167073726654053
    9. 'aps' → logprob: -7.417073726654053
    10. 'a' → logprob: -7.417073726654053

Token 262: 'ush' (ID: 1776)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00038479414070025086
    2. 'ush' → logprob: -7.87538480758667
    3. 'queue' → logprob: -13.000384330749512
    4. 'l' → logprob: -13.875384330749512
    5. 'op' → logprob: -14.250384330749512
    6. 'lib' → logprob: -15.500384330749512
    7. 'p' → logprob: -15.875384330749512
    8. 'Q' → logprob: -16.125385284423828
    9. 's' → logprob: -16.250385284423828
    10. 'u' → logprob: -17.000385284423828

Token 263: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10670784115791321
    2. 'from' → logprob: -2.731707811355591
    3. ' from' → logprob: -3.481707811355591
    4. ' ,' → logprob: -5.48170804977417
    5. '<|end|>' → logprob: -6.98170804977417
    6. '	from' → logprob: -8.981707572937012
    7. ' ' → logprob: -10.106707572937012
    8. '<|end|>' → logprob: -10.606707572937012
    9. 'import' → logprob: -10.856707572937012
    10. '```' → logprob: -11.856707572937012

Token 264: ' he' (ID: 501)
  Prédit: ' he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.01974649168550968
    2. 'he' → logprob: -4.01974630355835
    3. ' heap' → logprob: -7.14474630355835
    4. 'heap' → logprob: -7.14474630355835
    5. ' hea' → logprob: -11.894746780395508
    6. '_he' → logprob: -13.144746780395508
    7. '.he' → logprob: -13.644746780395508
    8. ' ' → logprob: -13.769746780395508
    9. ' heaps' → logprob: -13.769746780395508
    10. 'hea' → logprob: -14.269746780395508

Token 265: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.2014765739440918
    2. 'ap' → logprob: -1.7014765739440918
    3. 'a' → logprob: -9.70147705078125
    4. 'q' → logprob: -13.95147705078125
    5. 'ап' → logprob: -14.45147705078125
    6. '```' → logprob: -15.70147705078125
    7. 'aq' → logprob: -16.57647705078125
    8. '#' → logprob: -16.82647705078125
    9. '[' → logprob: -16.82647705078125
    10. 'appen' → logprob: -16.95147705078125

Token 266: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.6931489109992981
    2. 'ush' → logprob: -0.6931489109992981
    3. '```' → logprob: -14.443148612976074
    4. '
' → logprob: -15.568148612976074
    5. '

' → logprob: -15.568148612976074
    6. 'o' → logprob: -15.818148612976074
    7. '[' → logprob: -16.19314956665039
    8. 'u' → logprob: -16.94314956665039
    9. 'opp' → logprob: -17.06814956665039
    10. '...' → logprob: -17.06814956665039

Token 267: ' depuis' (ID: 16277)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.4294596016407013
    2. ' from' → logprob: -1.054459571838379
    3. ',' → logprob: -7.554459571838379
    4. ' depuis' → logprob: -8.804459571838379
    5. '	from' → logprob: -9.804459571838379
    6. ' desde' → logprob: -12.054459571838379
    7. ' ' → logprob: -12.054459571838379
    8. 'import' → logprob: -12.429459571838379
    9. ' ' → logprob: -12.929459571838379
    10. '_from' → logprob: -13.054459571838379

Token 268: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.03805606812238693
    2. ' heap' → logprob: -3.2880561351776123
    3. '_heap' → logprob: -12.163056373596191
    4. 's' → logprob: -13.538056373596191
    5. 'import' → logprob: -13.538056373596191
    6. '```' → logprob: -13.663056373596191
    7. 'h' → logprob: -13.913056373596191
    8. 'queue' → logprob: -14.038056373596191
    9. ' ' → logprob: -14.163056373596191
    10. '(heap' → logprob: -14.163056373596191

Token 269: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.5776860184123507e-06
    2. 'queue' → logprob: -13.50000286102295
    3. 'import' → logprob: -13.87500286102295
    4. 's' → logprob: -16.750001907348633
    5. ' queue' → logprob: -17.875001907348633
    6. 'p' → logprob: -18.625001907348633
    7. 'e' → logprob: -18.875001907348633
    8. 'que' → logprob: -19.000001907348633
    9. 'i' → logprob: -19.125001907348633
    10. 'queues' → logprob: -19.125001907348633

Token 270: ',' (ID: 11)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.47604620456695557
    2. 'import' → logprob: -0.9760462045669556
    3. 'from' → logprob: -6.726046085357666
    4. ' from' → logprob: -7.226046085357666
    5. ',' → logprob: -10.601046562194824
    6. ' ' → logprob: -11.726046562194824
    7. '	import' → logprob: -12.476046562194824
    8. ' ' → logprob: -13.226046562194824
    9. ' ,' → logprob: -14.351046562194824
    10. ' imports' → logprob: -15.101046562194824

Token 271: ' pour' (ID: 1930)
  Prédit: ' heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.2329808473587036
    2. 'heap' → logprob: -1.7329808473587036
    3. 'he' → logprob: -4.107980728149414
    4. 'from' → logprob: -5.107980728149414
    5. ' he' → logprob: -5.482980728149414
    6. ' from' → logprob: -5.482980728149414
    7. 'import' → logprob: -8.857980728149414
    8. '_heap' → logprob: -9.982980728149414
    9. ' import' → logprob: -10.607980728149414
    10. ' h' → logprob: -10.857980728149414

Token 272: ' manip' (ID: 20526)
  Prédit: ' heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.006160800810903311
    2. 'heap' → logprob: -5.381160736083984
    3. ' he' → logprob: -7.131160736083984
    4. 'he' → logprob: -7.506160736083984
    5. ' h' → logprob: -8.881160736083984
    6. ' import' → logprob: -11.631160736083984
    7. 'h' → logprob: -11.631160736083984
    8. ' l' → logprob: -12.006160736083984
    9. ' ' → logprob: -12.506160736083984
    10. 'import' → logprob: -12.631160736083984

Token 273: 'uler' (ID: 11802)
  Prédit: 'uler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uler' → logprob: -0.0014684381894767284
    2. 'q' → logprob: -7.626468658447266
    3. '```' → logprob: -8.251468658447266
    4. 'ul' → logprob: -8.501468658447266
    5. 'ulation' → logprob: -8.751468658447266
    6. 'l' → logprob: -10.251468658447266
    7. 'ulator' → logprob: -10.501468658447266
    8. 'uer' → logprob: -10.626468658447266
    9. 'er' → logprob: -10.626468658447266
    10. '`' → logprob: -10.626468658447266

Token 274: ' des' (ID: 731)
  Prédit: ' heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.021012088283896446
    2. ' ' → logprob: -3.8960120677948
    3. 'heap' → logprob: -8.021012306213379
    4. ' ' → logprob: -10.396012306213379
    5. '(heap' → logprob: -10.396012306213379
    6. ' space' → logprob: -10.646012306213379
    7. '  ' → logprob: -10.896012306213379
    8. '_heap' → logprob: -11.521012306213379
    9. 'he' → logprob: -12.146012306213379
    10. ' he' → logprob: -12.396012306213379

Token 275: ' files' (ID: 6291)
  Prédit: ' heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.01608540117740631
    2. 'heap' → logprob: -4.141085624694824
    3. 'he' → logprob: -11.016085624694824
    4. ' heaps' → logprob: -11.391085624694824
    5. '_heap' → logprob: -11.641085624694824
    6. ' ' → logprob: -12.016085624694824
    7. ' he' → logprob: -13.016085624694824
    8. ' queue' → logprob: -13.391085624694824
    9. '(heap' → logprob: -13.391085624694824
    10. '.heap' → logprob: -13.641085624694824

Token 276: ' de' (ID: 334)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.08866024017333984
    2. '_' → logprob: -3.58866024017334
    3. 'import' → logprob: -3.83866024017334
    4. ',' → logprob: -4.83866024017334
    5. 'from' → logprob: -4.83866024017334
    6. 'heap' → logprob: -5.21366024017334
    7. 'queue' → logprob: -5.58866024017334
    8. 'queues' → logprob: -6.08866024017334
    9. '_queue' → logprob: -6.21366024017334
    10. '_heap' → logprob: -7.08866024017334

Token 277: ' priorité' (ID: 150252)
  Prédit: 'prior'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prior' → logprob: -0.4948696792125702
    2. 'priority' → logprob: -1.1198697090148926
    3. ' priorité' → logprob: -3.1198697090148926
    4. ' priority' → logprob: -4.994869709014893
    5. 'prio' → logprob: -5.119869709014893
    6. 'pri' → logprob: -5.119869709014893
    7. 'heap' → logprob: -7.994869709014893
    8. ' prior' → logprob: -8.244869232177734
    9. '```' → logprob: -9.494869232177734
    10. 'pr' → logprob: -9.619869232177734

Token 278: ' (' (ID: 350)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.11405546218156815
    2. 'import' → logprob: -2.2390553951263428
    3. ' ' → logprob: -7.114055633544922
    4. ',' → logprob: -8.864055633544922
    5. 'from' → logprob: -8.989055633544922
    6. ' from' → logprob: -9.614055633544922
    7. ' ,' → logprob: -9.989055633544922
    8. ' ' → logprob: -11.614055633544922
    9. '.' → logprob: -11.739055633544922
    10. '	import' → logprob: -11.739055633544922

Token 279: 'non' (ID: 11741)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.5759671330451965
    2. ' heap' → logprob: -0.8259671330451965
    3. ')' → logprob: -11.700966835021973
    4. 'he' → logprob: -12.200966835021973
    5. '_heap' → logprob: -12.325966835021973
    6. '.heap' → logprob: -12.450966835021973
    7. ' )' → logprob: -12.825966835021973
    8. '(heap' → logprob: -13.325966835021973
    9. 'from' → logprob: -14.575966835021973
    10. 'import' → logprob: -15.325966835021973

Token 280: ' utilisés' (ID: 94258)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.7234146595001221
    2. 'import' → logprob: -1.848414659500122
    3. 'from' → logprob: -2.223414659500122
    4. ')' → logprob: -2.348414659500122
    5. ' from' → logprob: -2.723414659500122
    6. ' import' → logprob: -2.973414659500122
    7. ' heap' → logprob: -4.598414421081543
    8. ' ' → logprob: -5.598414421081543
    9. ' space' → logprob: -5.598414421081543
    10. ' ' → logprob: -5.848414421081543

Token 281: ' ici' (ID: 27994)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.188086599111557
    2. ')' → logprob: -2.18808650970459
    3. ' ici' → logprob: -2.93808650970459
    4. ' here' → logprob: -5.81308650970459
    5. ',' → logprob: -7.06308650970459
    6. 'import' → logprob: -7.06308650970459
    7. ' ' → logprob: -7.56308650970459
    8. ' heap' → logprob: -8.06308650970459
    9. ' ' → logprob: -8.31308650970459
    10. 'here' → logprob: -8.68808650970459

Token 282: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.033341359347105026
    2. ').' → logprob: -3.533341407775879
    3. 'import' → logprob: -5.658341407775879
    4. ',' → logprob: -10.658341407775879
    5. 'from' → logprob: -10.658341407775879
    6. ' )' → logprob: -11.033341407775879
    7. ')
' → logprob: -11.408341407775879
    8. '),' → logprob: -12.408341407775879
    9. '.' → logprob: -12.408341407775879
    10. ')#' → logprob: -12.783341407775879

Token 283: 'from' (ID: 2845)
  Prédit: 'from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.00041494169272482395
    2. 'f' → logprob: -8.000414848327637
    3. 'fro' → logprob: -10.125414848327637
    4. 'fr' → logprob: -10.375414848327637
    5. ' from' → logprob: -11.750414848327637
    6. 'import' → logprob: -15.750414848327637
    7. ' f' → logprob: -17.250415802001953
    8. ' ' → logprob: -17.500415802001953
    9. '```' → logprob: -18.125415802001953
    10. 'h' → logprob: -18.125415802001953

Token 284: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.018150994554162025
    2. ' heap' → logprob: -4.018150806427002
    3. 'he' → logprob: -14.26815128326416
    4. '_heap' → logprob: -14.76815128326416
    5. '(heap' → logprob: -17.393150329589844
    6. 'queue' → logprob: -17.518150329589844
    7. 'Heap' → logprob: -17.643150329589844
    8. 'h' → logprob: -17.768150329589844
    9. '.heap' → logprob: -17.768150329589844
    10. '```' → logprob: -20.018150329589844

Token 285: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: 0.0
    2. 'pq' → logprob: -21.375
    3. 'qp' → logprob: -21.375
    4. 'sq' → logprob: -21.5
    5. 'ql' → logprob: -21.625
    6. 'hq' → logprob: -21.75
    7. 'qq' → logprob: -21.875
    8. ' q' → logprob: -22.25
    9. 'aq' → logprob: -22.5
    10. '	q' → logprob: -22.5

Token 286: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.020567232742905617
    2. 'import' → logprob: -3.8955671787261963
    3. ' ' → logprob: -10.895566940307617
    4. '	import' → logprob: -12.270566940307617
    5. ' ' → logprob: -13.395566940307617
    6. ' ​' → logprob: -15.895566940307617
    7. '_import' → logprob: -16.145566940307617
    8. ' imports' → logprob: -16.520566940307617
    9. ' space' → logprob: -16.770566940307617
    10. 'space' → logprob: -16.895566940307617

Token 287: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.011050177738070488
    2. ' he' → logprob: -4.511050224304199
    3. 'heap' → logprob: -13.0110502243042
    4. ' heap' → logprob: -16.761049270629883
    5. '.he' → logprob: -17.011049270629883
    6. 'h' → logprob: -17.136049270629883
    7. '_he' → logprob: -17.511049270629883
    8. ' ' → logprob: -17.636049270629883
    9. 'He' → logprob: -19.761049270629883
    10. 'ha' → logprob: -20.136049270629883

Token 288: 'app' (ID: 903)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.6932646036148071
    2. 'app' → logprob: -0.6932646036148071
    3. 'a' → logprob: -9.193264961242676
    4. 'ап' → logprob: -11.443264961242676
    5. 'aps' → logprob: -13.943264961242676
    6. ' app' → logprob: -14.443264961242676
    7. '```' → logprob: -14.818264961242676
    8. 'append' → logprob: -14.943264961242676
    9. '[' → logprob: -15.318264961242676
    10. '`' → logprob: -15.443264961242676

Token 289: 'ush' (ID: 1776)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.5760435461997986
    2. 'ush' → logprob: -0.8260435461997986
    3. 'o' → logprob: -9.451043128967285
    4. 'push' → logprob: -11.451043128967285
    5. 'us' → logprob: -11.701043128967285
    6. 'u' → logprob: -13.451043128967285
    7. 'p' → logprob: -14.076043128967285
    8. 'os' → logprob: -14.201043128967285
    9. 'osh' → logprob: -14.201043128967285
    10. 'sh' → logprob: -14.451043128967285

Token 290: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.7292167184641585e-05
    2. ' ,' → logprob: -10.000057220458984
    3. ',
' → logprob: -12.250057220458984
    4. ' ' → logprob: -12.625057220458984
    5. 'import' → logprob: -13.000057220458984
    6. ',\
' → logprob: -14.250057220458984
    7. ',

' → logprob: -15.500057220458984
    8. ',
' → logprob: -15.875057220458984
    9. 'he' → logprob: -16.000057220458984
    10. 'from' → logprob: -16.375057220458984

Token 291: ' he' (ID: 501)
  Prédit: ' he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.5759422779083252
    2. 'he' → logprob: -0.8259422779083252
    3. 'heap' → logprob: -13.950942039489746
    4. ' ' → logprob: -14.575942039489746
    5. '_he' → logprob: -14.700942039489746
    6. ' ' → logprob: -15.575942039489746
    7. '.he' → logprob: -15.825942039489746
    8. ' heap' → logprob: -16.075942993164062
    9. 'He' → logprob: -16.200942993164062
    10. ' hea' → logprob: -16.450942993164062

Token 292: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.018152287229895592
    2. 'ap' → logprob: -4.018152236938477
    3. 'pop' → logprob: -13.643152236938477
    4. 'ап' → logprob: -15.143152236938477
    5. 'a' → logprob: -15.268152236938477
    6. 'p' → logprob: -15.518152236938477
    7. ' app' → logprob: -15.893152236938477
    8. 'op' → logprob: -16.268152236938477
    9. 'q' → logprob: -16.643152236938477
    10. '	app' → logprob: -17.518152236938477

Token 293: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -8.613945101387799e-05
    2. 'o' → logprob: -9.625085830688477
    3. 'pop' → logprob: -11.125085830688477
    4. 'p' → logprob: -13.000085830688477
    5. 'ap' → logprob: -14.375085830688477
    6. '0' → logprob: -15.500085830688477
    7. 'оп' → logprob: -15.500085830688477
    8. 'ol' → logprob: -15.750085830688477
    9. 'opup' → logprob: -15.750085830688477
    10. 'q' → logprob: -15.750085830688477

Token 294: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19125941395759583
    2. '<|end|>' → logprob: -2.0662593841552734
    3. '\n' → logprob: -3.5662593841552734
    4. '' → logprob: -4.941259384155273
    5. '

' → logprob: -5.191259384155273
    6. '#' → logprob: -5.941259384155273
    7. ' ' → logprob: -6.816259384155273
    8. '<|end|>' → logprob: -7.441259384155273
    9. ' 
' → logprob: -7.566259384155273
    10. 'import' → logprob: -8.566259384155273

Token 295: '"""
' (ID: 15611)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3172365427017212
    2. 'd' → logprob: -1.8172365427017212
    3. '#' → logprob: -2.9422364234924316
    4. '
' → logprob: -3.0672364234924316
    5. '

' → logprob: -5.567236423492432
    6. 'n' → logprob: -6.942236423492432
    7. 'de' → logprob: -7.067236423492432
    8. '\' → logprob: -7.192236423492432
    9. 'class' → logprob: -7.192236423492432
    10. '' → logprob: -7.567236423492432

Token 296: 'Ce' (ID: 24306)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6795615553855896
    2. '#' → logprob: -1.1795616149902344
    3. '"""' → logprob: -1.9295616149902344
    4. '
' → logprob: -4.429561614990234
    5. ' """' → logprob: -5.054561614990234
    6. 'C' → logprob: -5.554561614990234
    7. 'd' → logprob: -5.804561614990234
    8. ' 
' → logprob: -5.804561614990234
    9. 'c' → logprob: -6.679561614990234
    10. '\n' → logprob: -6.804561614990234

Token 297: ' bloc' (ID: 51218)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18361878395080566
    2. ' code' → logprob: -1.8086187839508057
    3. ' ' → logprob: -6.683618545532227
    4. 's' → logprob: -7.808618545532227
    5. '_' → logprob: -8.058618545532227
    6. ' test' → logprob: -8.058618545532227
    7. 'code' → logprob: -8.683618545532227
    8. ' Code' → logprob: -8.808618545532227
    9. ' n' → logprob: -9.183618545532227
    10. ' '' → logprob: -9.183618545532227

Token 298: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.058260831981897354
    2. ' de' → logprob: -2.933260917663574
    3. 'de' → logprob: -6.933260917663574
    4. ' d' → logprob: -7.933260917663574
    5. ' est' → logprob: -8.058260917663574
    6. ' code' → logprob: -8.308260917663574
    7. '#' → logprob: -8.433260917663574
    8. ' #' → logprob: -8.433260917663574
    9. ' """' → logprob: -8.433260917663574
    10. ' des' → logprob: -9.058260917663574

Token 299: ' texte' (ID: 53492)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.05371331796050072
    2. 'comment' → logprob: -3.053713321685791
    3. ' code' → logprob: -5.803713321685791
    4. 'texte' → logprob: -6.428713321685791
    5. 'codes' → logprob: -8.303712844848633
    6. ' commentaires' → logprob: -9.803712844848633
    7. '#' → logprob: -10.178712844848633
    8. '_code' → logprob: -10.928712844848633
    9. 'doc' → logprob: -11.053712844848633
    10. 'test' → logprob: -11.303712844848633

Token 300: ' multi' (ID: 12151)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5268290638923645
    2. '"""' → logprob: -1.2768290042877197
    3. ' """' → logprob: -2.2768290042877197
    4. ' est' → logprob: -5.026829242706299
    5. 's' → logprob: -5.401829242706299
    6. ''''' → logprob: -6.026829242706299
    7. ' :' → logprob: -6.776829242706299
    8. '="""' → logprob: -6.776829242706299
    9. ' """
' → logprob: -7.026829242706299
    10. ' '''' → logprob: -7.026829242706299

Token 301: '-l' (ID: 2887)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.9432913064956665
    2. '-l' → logprob: -1.0682913064956665
    3. 'l' → logprob: -1.4432913064956665
    4. 'line' → logprob: -4.818291187286377
    5. '-' → logprob: -5.193291187286377
    6. ' ligne' → logprob: -5.443291187286377
    7. '-line' → logprob: -5.443291187286377
    8. 'lig' → logprob: -6.318291187286377
    9. '_l' → logprob: -7.068291187286377
    10. '"""' → logprob: -7.193291187286377

Token 302: 'ignes' (ID: 53389)
  Prédit: 'igne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igne' → logprob: -0.4385715425014496
    2. 'ignes' → logprob: -1.438571572303772
    3. 'e' → logprob: -3.5635714530944824
    4. 'es' → logprob: -3.9385714530944824
    5. 'ecture' → logprob: -4.188571453094482
    6. 'ines' → logprob: -4.688571453094482
    7. 'ine' → logprob: -5.063571453094482
    8. 'texte' → logprob: -5.063571453094482
    9. 'iné' → logprob: -5.563571453094482
    10. '"""' → logprob: -5.563571453094482

Token 303: ' contient' (ID: 89067)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.18574200570583344
    2. ' """' → logprob: -2.560741901397705
    3. ' est' → logprob: -3.060741901397705
    4. ' contient' → logprob: -4.435741901397705
    5. ' ' → logprob: -4.935741901397705
    6. '("""' → logprob: -5.185741901397705
    7. '="""' → logprob: -5.560741901397705
    8. ' sert' → logprob: -6.060741901397705
    9. 's' → logprob: -6.310741901397705
    10. ' permet' → logprob: -6.435741901397705

Token 304: ' des' (ID: 731)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6168941855430603
    2. ' une' → logprob: -0.9918941855430603
    3. ' le' → logprob: -3.491894245147705
    4. ' l' → logprob: -3.616894245147705
    5. ' des' → logprob: -3.991894245147705
    6. ' les' → logprob: -5.366894245147705
    7. ' un' → logprob: -5.366894245147705
    8. 'la' → logprob: -6.366894245147705
    9. ' ' → logprob: -7.116894245147705
    10. 'une' → logprob: -7.366894245147705

Token 305: ' exemples' (ID: 105138)
  Prédit: ' instructions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' instructions' → logprob: -1.2404474020004272
    2. ' informations' → logprob: -1.7404474020004272
    3. 'instructions' → logprob: -1.9904474020004272
    4. 'exp' → logprob: -2.490447521209717
    5. ' commentaires' → logprob: -2.490447521209717
    6. ' exemples' → logprob: -2.615447521209717
    7. ' exp' → logprob: -3.240447521209717
    8. 'in' → logprob: -3.490447521209717
    9. 'ex' → logprob: -3.990447521209717
    10. 'comment' → logprob: -3.990447521209717

Token 306: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.9872405529022217
    2. ' d' → logprob: -1.1122405529022217
    3. ' ' → logprob: -1.6122405529022217
    4. 's' → logprob: -3.2372405529022217
    5. 'd' → logprob: -3.7372405529022217
    6. '<|end|>' → logprob: -4.362240791320801
    7. 'de' → logprob: -4.862240791320801
    8. ',' → logprob: -5.612240791320801
    9. ' des' → logprob: -5.737240791320801
    10. '"""' → logprob: -6.237240791320801

Token 307: ' diverses' (ID: 73470)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.35503172874450684
    2. ' tests' → logprob: -3.105031728744507
    3. ' solutions' → logprob: -3.105031728744507
    4. ' l' → logprob: -3.230031728744507
    5. ' test' → logprob: -4.105031967163086
    6. ' usage' → logprob: -4.105031967163086
    7. 'code' → logprob: -4.230031967163086
    8. ' comment' → logprob: -4.355031967163086
    9. 'l' → logprob: -4.855031967163086
    10. ' commentaires' → logprob: -5.105031967163086

Token 308: ' opérations' (ID: 102793)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'util' → logprob: -1.3892713785171509
    2. 'structures' → logprob: -1.5142713785171509
    3. 'man' → logprob: -1.7642713785171509
    4. ' utilis' → logprob: -2.2642712593078613
    5. 'types' → logprob: -2.7642712593078613
    6. 'str' → logprob: -3.5142712593078613
    7. ' manip' → logprob: -3.7642712593078613
    8. ' structures' → logprob: -3.7642712593078613
    9. 'import' → logprob: -4.389271259307861
    10. ' types' → logprob: -4.639271259307861

Token 309: ' d' (ID: 272)
  Prédit: ' sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sur' → logprob: -1.3017537593841553
    2. 'sur' → logprob: -1.4267537593841553
    3. '"""' → logprob: -2.1767537593841553
    4. ' de' → logprob: -2.5517537593841553
    5. ',' → logprob: -2.8017537593841553
    6. 's' → logprob: -3.0517537593841553
    7. '.' → logprob: -3.0517537593841553
    8. 'de' → logprob: -3.4267537593841553
    9. ' ,' → logprob: -3.5517537593841553
    10. ' d' → logprob: -3.6767537593841553

Token 310: ''entrée' (ID: 115820)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.3618519604206085
    2. 'es' → logprob: -2.611851930618286
    3. ''ex' → logprob: -2.736851930618286
    4. ''' → logprob: -3.111851930618286
    5. 'a' → logprob: -3.861851930618286
    6. ''entrée' → logprob: -3.986851930618286
    7. ''é' → logprob: -3.986851930618286
    8. 'é' → logprob: -4.486852169036865
    9. 'éc' → logprob: -4.486852169036865
    10. ''import' → logprob: -4.736852169036865

Token 311: ' fré' (ID: 52465)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8811378479003906
    2. '/s' → logprob: -1.2561378479003906
    3. ',' → logprob: -2.1311378479003906
    4. ' standard' → logprob: -3.0061378479003906
    5. 'standard' → logprob: -3.2561378479003906
    6. '"""
' → logprob: -4.006137847900391
    7. '"""' → logprob: -4.131137847900391
    8. 'et' → logprob: -4.381137847900391
    9. ' et' → logprob: -4.756137847900391
    10. '.' → logprob: -5.006137847900391

Token 312: 'quem' (ID: 43507)
  Prédit: 'quence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.5038850903511047
    2. 'quences' → logprob: -1.62888503074646
    3. 'qu' → logprob: -2.25388503074646
    4. 'quent' → logprob: -2.50388503074646
    5. 'quem' → logprob: -5.253885269165039
    6. 'quently' → logprob: -6.253885269165039
    7. 'q' → logprob: -6.503885269165039
    8. 'quency' → logprob: -6.753885269165039
    9. 'm' → logprob: -7.128885269165039
    10. 'v' → logprob: -7.253885269165039

Token 313: 'ment' (ID: 508)
  Prédit: 'tes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tes' → logprob: -0.4154793918132782
    2. 'entes' → logprob: -1.1654794216156006
    3. 'ment' → logprob: -4.2904791831970215
    4. 't' → logprob: -4.6654791831970215
    5. 'te' → logprob: -6.1654791831970215
    6. 'ent' → logprob: -7.0404791831970215
    7. 'es' → logprob: -7.1654791831970215
    8. 'nt' → logprob: -7.1654791831970215
    9. 'emment' → logprob: -8.66547966003418
    10. 'ente' → logprob: -9.04047966003418

Token 314: ' utilisées' (ID: 130009)
  Prédit: ' utilisées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisées' → logprob: -0.28662681579589844
    2. 'util' → logprob: -2.9116268157958984
    3. ' standard' → logprob: -2.9116268157958984
    4. 's' → logprob: -3.2866268157958984
    5. ' d' → logprob: -3.2866268157958984
    6. ' utilisés' → logprob: -4.911626815795898
    7. 'de' → logprob: -4.911626815795898
    8. ' de' → logprob: -5.161626815795898
    9. 'sur' → logprob: -5.411626815795898
    10. ' ' → logprob: -5.536626815795898

Token 315: ' dans' (ID: 2671)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.718254566192627
    2. ' en' → logprob: -1.343254566192627
    3. ',' → logprob: -2.343254566192627
    4. '"""' → logprob: -3.343254566192627
    5. ':' → logprob: -3.718254566192627
    6. '.
' → logprob: -3.843254566192627
    7. ':
' → logprob: -4.468254566192627
    8. ' pour' → logprob: -4.593254566192627
    9. '."""' → logprob: -4.843254566192627
    10. 's' → logprob: -5.093254566192627

Token 316: ' les' (ID: 1341)
  Prédit: 'Python'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Python' → logprob: -0.6333158612251282
    2. 'les' → logprob: -1.6333158016204834
    3. 'python' → logprob: -2.0083158016204834
    4. 'le' → logprob: -2.3833158016204834
    5. ' Python' → logprob: -3.7583158016204834
    6. 'la' → logprob: -5.1333160400390625
    7. 'un' → logprob: -5.3833160400390625
    8. '#' → logprob: -5.8833160400390625
    9. ' le' → logprob: -6.0083160400390625
    10. 'a' → logprob: -6.5083160400390625

Token 317: ' concours' (ID: 79362)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.9544858932495117
    2. 'python' → logprob: -1.5794858932495117
    3. 'program' → logprob: -1.8294858932495117
    4. 'programm' → logprob: -2.7044858932495117
    5. '#' → logprob: -2.8294858932495117
    6. 'programme' → logprob: -3.0794858932495117
    7. 'comment' → logprob: -3.4544858932495117
    8. 'Python' → logprob: -3.9544858932495117
    9. 'codes' → logprob: -5.079485893249512
    10. 'pro' → logprob: -5.579485893249512

Token 318: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.056840181350708
    2. '"""
' → logprob: -1.431840181350708
    3. ' Python' → logprob: -2.181840181350708
    4. '.' → logprob: -2.681840181350708
    5. ',' → logprob: -3.556840181350708
    6. 'python' → logprob: -3.556840181350708
    7. '.
' → logprob: -3.681840181350708
    8. '"""' → logprob: -3.681840181350708
    9. 'Python' → logprob: -3.931840181350708
    10. ' de' → logprob: -4.056839942932129

Token 319: ' programmation' (ID: 166376)
  Prédit: 'programm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'programm' → logprob: -0.9159274697303772
    2. ' programmation' → logprob: -1.2909274101257324
    3. 'code' → logprob: -2.1659274101257324
    4. 'python' → logprob: -2.2909274101257324
    5. 'program' → logprob: -2.5409274101257324
    6. 'programme' → logprob: -4.665927410125732
    7. 'comp' → logprob: -5.290927410125732
    8. ' code' → logprob: -5.290927410125732
    9. 'coding' → logprob: -5.915927410125732
    10. 'cod' → logprob: -6.290927410125732

Token 320: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.3723623752593994
    2. '.
' → logprob: -1.3723623752593994
    3. '"""
' → logprob: -1.4973623752593994
    4. '.' → logprob: -2.1223623752593994
    5. ':
' → logprob: -2.9973623752593994
    6. ' :
' → logprob: -3.8723623752593994
    7. ',' → logprob: -4.74736213684082
    8. ':' → logprob: -4.87236213684082
    9. ' :' → logprob: -4.99736213684082
    10. '"""' → logprob: -5.12236213684082

Token 321: ' telles' (ID: 83154)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""
' → logprob: -1.4575142860412598
    2. ' comme' → logprob: -1.9575142860412598
    3. '"""' → logprob: -2.0825142860412598
    4. ' telles' → logprob: -2.0825142860412598
    5. '#' → logprob: -2.4575142860412598
    6. 'comme' → logprob: -3.0825142860412598
    7. ' par' → logprob: -3.8325142860412598
    8. ' notamment' → logprob: -3.8325142860412598
    9. ' """
' → logprob: -3.9575142860412598
    10. ' 
' → logprob: -3.9575142860412598

Token 322: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.7793101668357849
    2. ' ' → logprob: -1.4043102264404297
    3. ' qu' → logprob: -1.9043102264404297
    4. '_' → logprob: -3.4043102264404297
    5. '```' → logprob: -3.7793102264404297
    6. 'que' → logprob: -4.40431022644043
    7. 'qu' → logprob: -4.40431022644043
    8. '#' → logprob: -4.52931022644043
    9. 'es' → logprob: -5.02931022644043
    10. ' ' → logprob: -5.40431022644043

Token 323: ' :
' (ID: 10039)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.27023741602897644
    2. 'la' → logprob: -1.8952374458312988
    3. 'l' → logprob: -3.020237445831299
    4. ' l' → logprob: -4.395237445831299
    5. ' des' → logprob: -4.395237445831299
    6. ' lire' → logprob: -6.145237445831299
    7. 's' → logprob: -6.270237445831299
    8. 'le' → logprob: -6.395237445831299
    9. 'les' → logprob: -6.770237445831299
    10. ' input' → logprob: -6.895237445831299

Token 324: '-' (ID: 12)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9389904141426086
    2. '"""
' → logprob: -0.9389904141426086
    3. 'input' → logprob: -2.938990354537964
    4. 's' → logprob: -3.938990354537964
    5. '"""' → logprob: -3.938990354537964
    6. '\n' → logprob: -4.438990592956543
    7. '""' → logprob: -4.563990592956543
    8. '
' → logprob: -4.688990592956543
    9. '1' → logprob: -4.688990592956543
    10. ' #' → logprob: -5.063990592956543

Token 325: ' lecture' (ID: 31993)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9863041639328003
    2. 'Lire' → logprob: -1.9863041639328003
    3. 'Lecture' → logprob: -2.23630428314209
    4. ' lecture' → logprob: -2.61130428314209
    5. ' #' → logprob: -3.11130428314209
    6. 'lecture' → logprob: -3.11130428314209
    7. 'La' → logprob: -3.23630428314209
    8. ' la' → logprob: -3.23630428314209
    9. ' Lire' → logprob: -3.61130428314209
    10. ' Lecture' → logprob: -4.11130428314209

Token 326: ' d' (ID: 272)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06888098269701004
    2. ' d' → logprob: -3.568881034851074
    3. '(
' → logprob: -4.318881034851074
    4. '(' → logprob: -4.943881034851074
    5. ' ' → logprob: -5.568881034851074
    6. 's' → logprob: -5.568881034851074
    7. '()
' → logprob: -5.568881034851074
    8. ' de' → logprob: -6.318881034851074
    9. 'd' → logprob: -6.318881034851074
    10. ' des' → logprob: -7.318881034851074

Token 327: ''un' (ID: 9788)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8306487798690796
    2. ''une' → logprob: -0.8306487798690796
    3. 'es' → logprob: -3.080648899078369
    4. ''un' → logprob: -3.455648899078369
    5. ''' → logprob: -3.830648899078369
    6. ''entrée' → logprob: -4.330648899078369
    7. ''e' → logprob: -5.080648899078369
    8. 'une' → logprob: -5.955648899078369
    9. 'u' → logprob: -6.705648899078369
    10. '’une' → logprob: -6.830648899078369

Token 328: ' entier' (ID: 80473)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5003806948661804
    2. 'ent' → logprob: -1.5003807544708252
    3. 'nombre' → logprob: -3.500380754470825
    4. ' input' → logprob: -3.625380754470825
    5. ' entier' → logprob: -3.875380754470825
    6. 'input' → logprob: -4.125380516052246
    7. ' nombre' → logprob: -4.250380516052246
    8. 'entrée' → logprob: -4.250380516052246
    9. 'ligne' → logprob: -5.000380516052246
    10. 'a' → logprob: -5.125380516052246

Token 329: ' ;
' (ID: 7980)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4381968379020691
    2. '(' → logprob: -1.8131968975067139
    3. '(
' → logprob: -2.313196897506714
    4. '_' → logprob: -3.313196897506714
    5. '()
' → logprob: -3.938196897506714
    6. 's' → logprob: -4.813196659088135
    7. '\' → logprob: -5.063196659088135
    8. ',' → logprob: -5.438196659088135
    9. 'n' → logprob: -5.938196659088135
    10. '_unique' → logprob: -6.563196659088135

Token 330: '-' (ID: 12)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8522547483444214
    2. 'n' → logprob: -1.2272547483444214
    3. '-' → logprob: -1.9772547483444214
    4. ' n' → logprob: -2.602254867553711
    5. ' #' → logprob: -3.977254867553711
    6. '"""
' → logprob: -3.977254867553711
    7. 'x' → logprob: -4.977254867553711
    8. '
' → logprob: -5.852254867553711
    9. ' -' → logprob: -5.852254867553711
    10. 'ent' → logprob: -6.102254867553711

Token 331: ' lecture' (ID: 31993)
  Prédit: ' lecture'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lecture' → logprob: -0.1078382134437561
    2. 'lecture' → logprob: -2.6078381538391113
    3. ' la' → logprob: -3.9828381538391113
    4. '#' → logprob: -5.357838153839111
    5. 'la' → logprob: -6.857838153839111
    6. ' sais' → logprob: -7.232838153839111
    7. ' #' → logprob: -7.482838153839111
    8. 'entrée' → logprob: -7.982838153839111
    9. ' récupération' → logprob: -7.982838153839111
    10. '-' → logprob: -7.982838153839111

Token 332: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.0434226356446743
    2. 'd' → logprob: -3.1684226989746094
    3. ' ' → logprob: -8.66842269897461
    4. '(' → logprob: -9.04342269897461
    5. '()' → logprob: -9.16842269897461
    6. '(
' → logprob: -11.66842269897461
    7. '(d' → logprob: -11.79342269897461
    8. 's' → logprob: -12.04342269897461
    9. '_d' → logprob: -13.79342269897461
    10. '	d' → logprob: -14.41842269897461

Token 333: ' deux' (ID: 10301)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.058902621269226
    2. 'l' → logprob: -1.183902621269226
    3. ' l' → logprob: -1.808902621269226
    4. ' une' → logprob: -2.8089027404785156
    5. ' la' → logprob: -3.5589027404785156
    6. ' un' → logprob: -3.5589027404785156
    7. 'une' → logprob: -4.183902740478516
    8. ' multiple' → logprob: -4.433902740478516
    9. 's' → logprob: -4.933902740478516
    10. ' plusieurs' → logprob: -5.308902740478516

Token 334: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.03071969375014305
    2. 'ent' → logprob: -3.780719757080078
    3. ' ' → logprob: -5.905719757080078
    4. ' int' → logprob: -6.780719757080078
    5. ' espaces' → logprob: -6.780719757080078
    6. ' integers' → logprob: -7.030719757080078
    7. '_ent' → logprob: -7.655719757080078
    8. 'int' → logprob: -7.905719757080078
    9. ' entier' → logprob: -8.530719757080078
    10. ' nombres' → logprob: -9.030719757080078

Token 335: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.04589080065488815
    2. 'ier' → logprob: -3.7958908081054688
    3. 'r' → logprob: -4.670890808105469
    4. 'rée' → logprob: -5.420890808105469
    5. 'ières' → logprob: -6.295890808105469
    6. 'i' → logprob: -6.295890808105469
    7. 're' → logprob: -6.920890808105469
    8. 'rees' → logprob: -7.045890808105469
    9. 't' → logprob: -7.295890808105469
    10. 's' → logprob: -8.170890808105469

Token 336: ' sur' (ID: 1512)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07307609170675278
    2. 's' → logprob: -3.073076009750366
    3. ' ,' → logprob: -4.448076248168945
    4. ')' → logprob: -6.198076248168945
    5. ' ' → logprob: -6.323076248168945
    6. ';' → logprob: -6.573076248168945
    7. '_' → logprob: -7.073076248168945
    8. ' ;' → logprob: -7.073076248168945
    9. '1' → logprob: -7.323076248168945
    10. ' )' → logprob: -7.573076248168945

Token 337: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.6628490090370178
    2. ' la' → logprob: -0.7878490090370178
    3. 'la' → logprob: -3.912848949432373
    4. 'une' → logprob: -5.162848949432373
    5. ' ' → logprob: -5.787848949432373
    6. 'l' → logprob: -7.412848949432373
    7. ' u' → logprob: -8.912849426269531
    8. ' ' → logprob: -9.412849426269531
    9. ''une' → logprob: -10.037849426269531
    10. 'a' → logprob: -10.662849426269531

Token 338: ' seule' (ID: 41983)
  Prédit: ' même'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' même' → logprob: -0.05676161125302315
    2. ' ' → logprob: -3.9317615032196045
    3. 'm' → logprob: -4.681761741638184
    4. 'e' → logprob: -4.806761741638184
    5. ' seule' → logprob: -4.931761741638184
    6. ' m' → logprob: -4.931761741638184
    7. ' seul' → logprob: -6.681761741638184
    8. ' ligne' → logprob: -7.306761741638184
    9. 'l' → logprob: -8.306761741638184
    10. ' meme' → logprob: -8.681761741638184

Token 339: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.16099506616592407
    2. ' ' → logprob: -2.5359950065612793
    3. 'ligne' → logprob: -2.7859950065612793
    4. 'l' → logprob: -5.285995006561279
    5. ' line' → logprob: -6.535995006561279
    6. ' ' → logprob: -7.160995006561279
    7. ' l' → logprob: -8.410995483398438
    8. ' lign' → logprob: -9.035995483398438
    9. 'line' → logprob: -10.035995483398438
    10. ' \' → logprob: -11.160995483398438

Token 340: ' ;
' (ID: 7980)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.25084295868873596
    2. ';' → logprob: -1.6258429288864136
    3. ' ;' → logprob: -4.750843048095703
    4. '.' → logprob: -5.500843048095703
    5. ' ' → logprob: -6.000843048095703
    6. '#' → logprob: -6.250843048095703
    7. ',
' → logprob: -6.250843048095703
    8. ' ,' → logprob: -7.250843048095703
    9. ';
' → logprob: -7.250843048095703
    10. 's' → logprob: -7.375843048095703

Token 341: '-' (ID: 12)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5824320316314697
    2. '-' → logprob: -0.8324320316314697
    3. ' -' → logprob: -6.082431793212891
    4. '"""
' → logprob: -6.207431793212891
    5. ' #' → logprob: -6.457431793212891
    6. 'from' → logprob: -8.83243179321289
    7. '"""' → logprob: -8.95743179321289
    8. 'import' → logprob: -9.20743179321289
    9. '"' → logprob: -10.20743179321289
    10. '#
' → logprob: -10.83243179321289

Token 342: ' lecture' (ID: 31993)
  Prédit: ' lecture'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lecture' → logprob: -0.2157750278711319
    2. 'lecture' → logprob: -2.4657750129699707
    3. '#' → logprob: -2.9657750129699707
    4. '-' → logprob: -3.0907750129699707
    5. ' #' → logprob: -4.840775012969971
    6. ' la' → logprob: -6.340775012969971
    7. ' -' → logprob: -7.590775012969971
    8. 'Lecture' → logprob: -7.965775012969971
    9. 'l' → logprob: -8.215775489807129
    10. 'import' → logprob: -8.465775489807129

Token 343: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.03451477363705635
    2. 'd' → logprob: -3.4095146656036377
    3. '()' → logprob: -7.284514904022217
    4. ' ' → logprob: -9.159514427185059
    5. 'de' → logprob: -10.784514427185059
    6. ' de' → logprob: -10.909514427185059
    7. '(' → logprob: -11.659514427185059
    8. '  ' → logprob: -12.409514427185059
    9. 's' → logprob: -12.534514427185059
    10. '   ' → logprob: -12.659514427185059

Token 344: ''une' (ID: 13337)
  Prédit: ''une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''une' → logprob: -0.2125617116689682
    2. 'une' → logprob: -2.33756160736084
    3. ' une' → logprob: -2.96256160736084
    4. ''un' → logprob: -3.83756160736084
    5. 'e' → logprob: -4.71256160736084
    6. 'a' → logprob: -6.33756160736084
    7. '’une' → logprob: -6.33756160736084
    8. 'u' → logprob: -6.71256160736084
    9. ' ' → logprob: -6.83756160736084
    10. ' u' → logprob: -7.08756160736084

Token 345: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.24880783259868622
    2. ' liste' → logprob: -2.873807907104492
    3. 'list' → logprob: -3.873807907104492
    4. 'ent' → logprob: -4.123807907104492
    5. 'n' → logprob: -4.373807907104492
    6. '#' → logprob: -4.373807907104492
    7. 'ligne' → logprob: -4.373807907104492
    8. 'tuple' → logprob: -4.498807907104492
    9. 'chaine' → logprob: -4.498807907104492
    10. ' tableau' → logprob: -4.998807907104492

Token 346: ' d' (ID: 272)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.534717082977295
    2. ' ' → logprob: -1.534717082977295
    3. ' de' → logprob: -1.534717082977295
    4. ' des' → logprob: -2.409717082977295
    5. '[int' → logprob: -2.784717082977295
    6. ' d' → logprob: -2.909717082977295
    7. '[]' → logprob: -3.659717082977295
    8. ',' → logprob: -3.784717082977295
    9. 's' → logprob: -4.034717082977295
    10. '_' → logprob: -4.284717082977295

Token 347: ''ent' (ID: 53422)
  Prédit: ''ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ent' → logprob: -0.13251812756061554
    2. 'ent' → logprob: -2.1325180530548096
    3. '’ent' → logprob: -5.507518291473389
    4. ' ent' → logprob: -7.007518291473389
    5. 'int' → logprob: -8.13251781463623
    6. ''int' → logprob: -9.50751781463623
    7. 'inte' → logprob: -9.50751781463623
    8. '_ent' → logprob: -10.13251781463623
    9. 'ints' → logprob: -10.25751781463623
    10. 'e' → logprob: -10.25751781463623

Token 348: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.001922206487506628
    2. 'ières' → logprob: -6.501922130584717
    3. 'i' → logprob: -8.126922607421875
    4. 'ier' → logprob: -10.126922607421875
    5. 'ent' → logprob: -11.001922607421875
    6. 'ités' → logprob: -11.501922607421875
    7. 'ière' → logprob: -11.501922607421875
    8. 't' → logprob: -11.501922607421875
    9. 'ires' → logprob: -11.626922607421875
    10. 'ints' → logprob: -12.001922607421875

Token 349: ' d' (ID: 272)
  Prédit: ';'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ';' → logprob: -0.40084487199783325
    2. '.' → logprob: -2.5258448123931885
    3. ';
' → logprob: -2.5258448123931885
    4. ' ;' → logprob: -3.1508448123931885
    5. ',' → logprob: -3.5258448123931885
    6. 's' → logprob: -3.7758448123931885
    7. ']' → logprob: -4.400845050811768
    8. '[' → logprob: -4.525845050811768
    9. ' ;
' → logprob: -4.650845050811768
    10. '#' → logprob: -5.275845050811768

Token 350: ''une' (ID: 13337)
  Prédit: ''une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''une' → logprob: -0.18877588212490082
    2. 'e' → logprob: -2.4387757778167725
    3. ''un' → logprob: -3.5637757778167725
    4. ''ent' → logprob: -3.8137757778167725
    5. 'es' → logprob: -4.813776016235352
    6. ''' → logprob: -4.813776016235352
    7. 'ans' → logprob: -4.938776016235352
    8. ''entrée' → logprob: -6.188776016235352
    9. 'une' → logprob: -6.688776016235352
    10. 'u' → logprob: -6.938776016235352

Token 351: ' entrée' (ID: 95590)
  Prédit: ' seule'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' seule' → logprob: -0.17687496542930603
    2. ' ligne' → logprob: -2.426874876022339
    3. 'ligne' → logprob: -3.176874876022339
    4. 'e' → logprob: -3.801874876022339
    5. ' seul' → logprob: -6.301875114440918
    6. 'l' → logprob: -6.301875114440918
    7. ' line' → logprob: -7.051875114440918
    8. ' ' → logprob: -7.176875114440918
    9. 'a' → logprob: -7.676875114440918
    10. 'se' → logprob: -7.926875114440918

Token 352: ' unique' (ID: 5746)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7848998308181763
    2. ')' → logprob: -2.2848997116088867
    3. 's' → logprob: -2.4098997116088867
    4. 'sur' → logprob: -2.4098997116088867
    5. ' sur' → logprob: -2.9098997116088867
    6. 'split' → logprob: -3.0348997116088867
    7. ',' → logprob: -3.6598997116088867
    8. 'map' → logprob: -4.784899711608887
    9. ' )' → logprob: -4.909899711608887
    10. '.' → logprob: -4.909899711608887

Token 353: ' ;
' (ID: 7980)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4935654401779175
    2. '()' → logprob: -1.4935654401779175
    3. '.' → logprob: -1.9935654401779175
    4. ')' → logprob: -2.118565559387207
    5. 's' → logprob: -2.868565559387207
    6. ']' → logprob: -3.118565559387207
    7. ';' → logprob: -3.368565559387207
    8. '()
' → logprob: -4.243565559387207
    9. ',
' → logprob: -4.368565559387207
    10. ' )' → logprob: -4.618565559387207

Token 354: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3998035192489624
    2. '#' → logprob: -1.1498035192489624
    3. '"""
' → logprob: -4.399803638458252
    4. '"""' → logprob: -8.024803161621094
    5. ' -' → logprob: -8.899803161621094
    6. '#
' → logprob: -10.149803161621094
    7. ' #' → logprob: -10.524803161621094
    8. '"""

' → logprob: -11.524803161621094
    9. '-
' → logprob: -12.024803161621094
    10. ''''
' → logprob: -12.399803161621094

Token 355: ' lecture' (ID: 31993)
  Prédit: ' lecture'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lecture' → logprob: -0.5514817833900452
    2. '#' → logprob: -1.3014817237854004
    3. 'lecture' → logprob: -2.3014817237854004
    4. '-' → logprob: -3.6764817237854004
    5. ' #' → logprob: -3.8014817237854004
    6. ' ' → logprob: -7.5514817237854
    7. 'Lecture' → logprob: -7.5514817237854
    8. 'import' → logprob: -7.8014817237854
    9. ' -' → logprob: -8.176482200622559
    10. ' la' → logprob: -8.301482200622559

Token 356: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.0699763372540474
    2. 'd' → logprob: -2.694976329803467
    3. ' ' → logprob: -11.069976806640625
    4. 's' → logprob: -11.444976806640625
    5. ' de' → logprob: -13.319976806640625
    6. '	d' → logprob: -13.444976806640625
    7. ' ' → logprob: -13.444976806640625
    8. '()' → logprob: -13.819976806640625
    9. '[]' → logprob: -13.819976806640625
    10. '[' → logprob: -14.194976806640625

Token 357: ''une' (ID: 13337)
  Prédit: ''une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''une' → logprob: -0.1601489633321762
    2. ' d' → logprob: -2.660148859024048
    3. ''un' → logprob: -3.160148859024048
    4. 'e' → logprob: -3.785148859024048
    5. ''' → logprob: -5.160149097442627
    6. 'd' → logprob: -6.035149097442627
    7. 'une' → logprob: -6.410149097442627
    8. '’une' → logprob: -6.535149097442627
    9. ' une' → logprob: -7.160149097442627
    10. 's' → logprob: -8.660148620605469

Token 358: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.3927566409111023
    2. ' chaîne' → logprob: -1.892756700515747
    3. ' ligne' → logprob: -3.017756700515747
    4. 'liste' → logprob: -3.142756700515747
    5. ' chaine' → logprob: -3.767756700515747
    6. ' ' → logprob: -4.017756462097168
    7. 'chaine' → logprob: -4.392756462097168
    8. 'ligne' → logprob: -4.892756462097168
    9. ' string' → logprob: -5.142756462097168
    10. ' list' → logprob: -6.642756462097168

Token 359: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.44007715582847595
    2. ' d' → logprob: -1.1900771856307983
    3. '[' → logprob: -3.315077066421509
    4. '<|end|>' → logprob: -5.190077304840088
    5. '[int' → logprob: -5.690077304840088
    6. '<int' → logprob: -6.315077304840088
    7. 's' → logprob: -6.690077304840088
    8. '_d' → logprob: -7.315077304840088
    9. 'de' → logprob: -7.690077304840088
    10. ' de' → logprob: -8.06507682800293

Token 360: ''ent' (ID: 53422)
  Prédit: ''ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ent' → logprob: -0.004059521481394768
    2. '’ent' → logprob: -6.004059314727783
    3. 'ent' → logprob: -6.504059314727783
    4. ''' → logprob: -11.004059791564941
    5. '_ent' → logprob: -11.254059791564941
    6. '(ent' → logprob: -11.504059791564941
    7. ''int' → logprob: -11.629059791564941
    8. ''ex' → logprob: -11.754059791564941
    9. ''entre' → logprob: -12.379059791564941
    10. 'e' → logprob: -12.504059791564941

Token 361: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0005905635771341622
    2. 't' → logprob: -7.875590801239014
    3. 'ières' → logprob: -9.375590324401855
    4. 'i' → logprob: -10.250590324401855
    5. 'ires' → logprob: -10.625590324401855
    6. 'ier' → logprob: -10.875590324401855
    7. 'ers' → logprob: -12.125590324401855
    8. 'ti' → logprob: -12.125590324401855
    9. 'ieres' → logprob: -12.375590324401855
    10. 'e' → logprob: -12.625590324401855

Token 362: ' à' (ID: 1221)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.146220862865448
    2. 'sur' → logprob: -3.0212209224700928
    3. ' sur' → logprob: -4.021220684051514
    4. '[' → logprob: -4.646220684051514
    5. '()
' → logprob: -4.771220684051514
    6. ',' → logprob: -4.771220684051514
    7. ')' → logprob: -5.021220684051514
    8. '[]' → logprob: -5.271220684051514
    9. 'from' → logprob: -5.521220684051514
    10. '(map' → logprob: -5.646220684051514

Token 363: ' partir' (ID: 12100)
  Prédit: ' partir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' partir' → logprob: -0.6519355177879333
    2. 'part' → logprob: -1.7769355773925781
    3. 'l' → logprob: -2.526935577392578
    4. ' plusieurs' → logprob: -3.026935577392578
    5. 'une' → logprob: -3.151935577392578
    6. 'de' → logprob: -3.276935577392578
    7. 'p' → logprob: -3.901935577392578
    8. '_' → logprob: -4.276935577392578
    9. 'n' → logprob: -4.401935577392578
    10. 'plus' → logprob: -4.526935577392578

Token 364: ' de' (ID: 334)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.31710079312324524
    2. ' d' → logprob: -1.3171007633209229
    3. 'de' → logprob: -6.067101001739502
    4. ' de' → logprob: -6.692101001739502
    5. '#' → logprob: -9.067100524902344
    6. '_d' → logprob: -10.067100524902344
    7. ' ' → logprob: -10.817100524902344
    8. 'une' → logprob: -10.942100524902344
    9. '	d' → logprob: -11.567100524902344
    10. '
' → logprob: -11.817100524902344

Token 365: ' plusieurs' (ID: 20875)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.1435500979423523
    2. 'l' → logprob: -2.393550157546997
    3. 'une' → logprob: -4.143549919128418
    4. 'stdin' → logprob: -4.768549919128418
    5. ' plusieurs' → logprob: -5.268549919128418
    6. '
' → logprob: -5.643549919128418
    7. '\n' → logprob: -6.268549919128418
    8. 'pl' → logprob: -6.393549919128418
    9. 'Plus' → logprob: -7.018549919128418
    10. '

' → logprob: -7.768549919128418

Token 366: ' entr' (ID: 7072)
  Prédit: ' lignes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lignes' → logprob: -0.6025229096412659
    2. 'l' → logprob: -0.8525229096412659
    3. ' ' → logprob: -4.602522850036621
    4. ' ' → logprob: -5.477522850036621
    5. ' lines' → logprob: -5.602522850036621
    6. '  
' → logprob: -5.852522850036621
    7. '
' → logprob: -7.352522850036621
    8. '_l' → logprob: -7.352522850036621
    9. '_' → logprob: -7.352522850036621
    10. 'lines' → logprob: -7.477522850036621

Token 367: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.0003298632800579071
    2. 'ees' → logprob: -9.125329971313477
    3. 'ée' → logprob: -9.125329971313477
    4. 'nées' → logprob: -10.125329971313477
    5. 'r' → logprob: -10.625329971313477
    6. 'l' → logprob: -10.750329971313477
    7. 'é' → logprob: -12.125329971313477
    8. 'ies' → logprob: -13.000329971313477
    9. 'e' → logprob: -13.250329971313477
    10. '#' → logprob: -13.500329971313477

Token 368: ' ;
' (ID: 7980)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3573565185070038
    2. 's' → logprob: -2.607356548309326
    3. '.
' → logprob: -2.857356548309326
    4. ',' → logprob: -3.482356548309326
    5. ',
' → logprob: -3.982356548309326
    6. ';' → logprob: -4.232356548309326
    7. '()' → logprob: -4.482356548309326
    8. '"""
' → logprob: -4.482356548309326
    9. '(
' → logprob: -4.732356548309326
    10. '#' → logprob: -4.857356548309326

Token 369: '-' (ID: 12)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5147005319595337
    2. '-' → logprob: -1.3897005319595337
    3. '"""' → logprob: -2.014700412750244
    4. '"""
' → logprob: -4.014700412750244
    5. '""' → logprob: -7.639700412750244
    6. ' -' → logprob: -8.014700889587402
    7. ' #' → logprob: -8.389700889587402
    8. '"' → logprob: -9.014700889587402
    9. '#
' → logprob: -9.264700889587402
    10. '*' → logprob: -9.389700889587402

Token 370: ' lecture' (ID: 31993)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.32049378752708435
    2. 'lecture' → logprob: -1.9454938173294067
    3. ' lecture' → logprob: -2.195493698120117
    4. ' #' → logprob: -4.320493698120117
    5. '-' → logprob: -5.820493698120117
    6. 'la' → logprob: -6.945493698120117
    7. ' la' → logprob: -7.320493698120117
    8. '"""
' → logprob: -7.695493698120117
    9. 'import' → logprob: -8.195493698120117
    10. 'Lecture' → logprob: -8.820493698120117

Token 371: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.16026058793067932
    2. 'd' → logprob: -1.910260558128357
    3. ' de' → logprob: -11.410260200500488
    4. '#' → logprob: -11.660260200500488
    5. 's' → logprob: -12.285260200500488
    6. 'de' → logprob: -12.285260200500488
    7. ' ' → logprob: -12.535260200500488
    8. ' des' → logprob: -14.035260200500488
    9. ' ' → logprob: -14.160260200500488
    10. '	d' → logprob: -14.660260200500488

Token 372: ''une' (ID: 13337)
  Prédit: ''une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''une' → logprob: -0.043337367475032806
    2. ''un' → logprob: -3.418337345123291
    3. 'e' → logprob: -4.793337345123291
    4. 'une' → logprob: -7.668337345123291
    5. ''u' → logprob: -8.41833782196045
    6. '’une' → logprob: -8.66833782196045
    7. 'u' → logprob: -8.79333782196045
    8. ''' → logprob: -9.04333782196045
    9. ''entrée' → logprob: -9.54333782196045
    10. 'a' → logprob: -10.54333782196045

Token 373: ' liste' (ID: 31719)
  Prédit: ' chaîne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.49485522508621216
    2. 'chaine' → logprob: -1.4948551654815674
    3. ' chaine' → logprob: -2.9948551654815674
    4. 'string' → logprob: -3.4948551654815674
    5. 'cha' → logprob: -3.8698551654815674
    6. ' string' → logprob: -4.4948554039001465
    7. 'ligne' → logprob: -4.6198554039001465
    8. ' ligne' → logprob: -4.7448554039001465
    9. 'liste' → logprob: -4.9948554039001465
    10. ' liste' → logprob: -5.3698554039001465

Token 374: ' bi' (ID: 4424)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.4102685749530792
    2. 'd' → logprob: -1.1602685451507568
    3. '<|end|>' → logprob: -4.410268783569336
    4. '[' → logprob: -5.660268783569336
    5. 's' → logprob: -6.035268783569336
    6. '[]' → logprob: -6.660268783569336
    7. ' complète' → logprob: -6.785268783569336
    8. ' des' → logprob: -7.660268783569336
    9. 'des' → logprob: -8.160268783569336
    10. '_d' → logprob: -8.160268783569336

Token 375: '-d' (ID: 2469)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.7697455286979675
    2. '-d' → logprob: -1.6447455883026123
    3. '-' → logprob: -2.3947455883026123
    4. 'd' → logprob: -2.5197455883026123
    5. '_dim' → logprob: -3.1447455883026123
    6. 'dim' → logprob: -3.3947455883026123
    7. '_d' → logprob: -4.019745349884033
    8. '_dimension' → logprob: -4.144745349884033
    9. 'dimension' → logprob: -4.269745349884033
    10. '-l' → logprob: -4.644745349884033

Token 376: 'imension' (ID: 48863)
  Prédit: 'im'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'im' → logprob: -0.7227702140808105
    2. 'imension' → logprob: -0.8477702140808105
    3. 'imens' → logprob: -4.0977702140808105
    4. 'm' → logprob: -4.0977702140808105
    5. 'imensional' → logprob: -4.3477702140808105
    6. 'i' → logprob: -4.9727702140808105
    7. 'irection' → logprob: -5.3477702140808105
    8. 'iment' → logprob: -5.4727702140808105
    9. 'mé' → logprob: -5.5977702140808105
    10. 'imen' → logprob: -6.1602702140808105

Token 377: 'nelle' (ID: 30805)
  Prédit: 'ension'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ension' → logprob: -0.0871291533112526
    2. 'ion' → logprob: -3.7121291160583496
    3. 'tion' → logprob: -4.08712911605835
    4. 'ention' → logprob: -4.33712911605835
    5. 'ens' → logprob: -4.83712911605835
    6. 'imension' → logprob: -5.58712911605835
    7. 'ersion' → logprob: -5.83712911605835
    8. 'ale' → logprob: -6.08712911605835
    9. '```' → logprob: -6.96212911605835
    10. 'ision' → logprob: -6.96212911605835

Token 378: '.
' (ID: 558)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.420203685760498
    2. 's' → logprob: -1.545203685760498
    3. '[
' → logprob: -1.545203685760498
    4. ',' → logprob: -3.045203685760498
    5. ' de' → logprob: -3.170203685760498
    6. 'de' → logprob: -3.420203685760498
    7. '#' → logprob: -3.670203685760498
    8. '[' → logprob: -3.795203685760498
    9. '[]' → logprob: -3.795203685760498
    10. ',
' → logprob: -3.920203685760498

Token 379: 'Il' (ID: 8438)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.06988296657800674
    2. '"""
' → logprob: -2.819882869720459
    3. '"""

' → logprob: -5.194882869720459
    4. '""' → logprob: -6.694882869720459
    5. ' """' → logprob: -7.569882869720459
    6. '"' → logprob: -8.694883346557617
    7. '#' → logprob: -9.319883346557617
    8. '"""


' → logprob: -9.319883346557617
    9. ' """
' → logprob: -9.944883346557617
    10. ''''' → logprob: -10.569883346557617

Token 380: ' n' (ID: 297)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.1602989435195923
    2. ' est' → logprob: -1.6602989435195923
    3. 's' → logprob: -1.9102989435195923
    4. ' peut' → logprob: -3.4102988243103027
    5. ' continue' → logprob: -3.6602988243103027
    6. ' ' → logprob: -3.9102988243103027
    7. '"""' → logprob: -3.9102988243103027
    8. ' reste' → logprob: -4.035298824310303
    9. ' contient' → logprob: -4.160298824310303
    10. ' """' → logprob: -4.285298824310303

Token 381: '’est' (ID: 6838)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7234236598014832
    2. ''est' → logprob: -1.223423719406128
    3. ''ex' → logprob: -2.473423719406128
    4. 'e' → logprob: -3.098423719406128
    5. '\'' → logprob: -3.973423719406128
    6. ''a' → logprob: -4.098423480987549
    7. ''y' → logprob: -4.223423480987549
    8. ''''' → logprob: -4.598423480987549
    9. 'es' → logprob: -5.223423480987549
    10. 'est' → logprob: -5.848423480987549

Token 382: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.6357803344726562
    2. 'pas' → logprob: -0.7607803344726562
    3. 'p' → logprob: -7.010780334472656
    4. ' jamais' → logprob: -7.385780334472656
    5. 's' → logprob: -7.885780334472656
    6. ' possible' → logprob: -8.010780334472656
    7. ' ' → logprob: -8.135780334472656
    8. ' souvent' → logprob: -8.760780334472656
    9. 'possible' → logprob: -8.760780334472656
    10. ' p' → logprob: -10.760780334472656

Token 383: ' exécut' (ID: 165350)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.6395180821418762
    2. ' pas' → logprob: -0.7645180821418762
    3. 'p' → logprob: -6.8895182609558105
    4. 's' → logprob: -7.0145182609558105
    5. ' jamais' → logprob: -7.1395182609558105
    6. ' utilisé' → logprob: -7.7645182609558105
    7. ' possible' → logprob: -7.8895182609558105
    8. 'plus' → logprob: -7.8895182609558105
    9. 'possible' → logprob: -7.8895182609558105
    10. 'f' → logprob: -8.389517784118652

Token 384: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.004149157088249922
    2. 'ée' → logprob: -5.504148960113525
    3. 'able' → logprob: -9.629149436950684
    4. 'e' → logprob: -12.879149436950684
    5. '#' → logprob: -14.129149436950684
    6. 'ées' → logprob: -14.504149436950684
    7. 'és' → logprob: -14.879149436950684
    8. '```' → logprob: -15.129149436950684
    9. '"""' → logprob: -15.129149436950684
    10. '�' → logprob: -16.504148483276367

Token 385: ' :' (ID: 712)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.3487890958786011
    2. '"""
' → logprob: -1.723789095878601
    3. '.' → logprob: -2.4737892150878906
    4. '#' → logprob: -5.098789215087891
    5. ',' → logprob: -5.098789215087891
    6. '""' → logprob: -5.348789215087891
    7. 'e' → logprob: -6.223789215087891
    8. ')' → logprob: -6.223789215087891
    9. '."""' → logprob: -6.598789215087891
    10. '.
' → logprob: -6.723789215087891

Token 386: ' il' (ID: 1793)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.030312348157167435
    2. '"""
' → logprob: -3.7803122997283936
    3. ' """' → logprob: -6.155312538146973
    4. '"' → logprob: -6.655312538146973
    5. ')' → logprob: -6.905312538146973
    6. ' """
' → logprob: -7.530312538146973
    7. ''''' → logprob: -7.530312538146973
    8. '""' → logprob: -7.780312538146973
    9. '#' → logprob: -8.030312538146973
    10. '"""

' → logprob: -8.280312538146973

Token 387: ' sert' (ID: 52405)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.5097416043281555
    2. 'est' → logprob: -2.0097415447235107
    3. 's' → logprob: -2.3847415447235107
    4. ' s' → logprob: -3.1347415447235107
    5. '"""' → logprob: -3.7597415447235107
    6. ' sert' → logprob: -3.7597415447235107
    7. '#' → logprob: -4.25974178314209
    8. ''''' → logprob: -4.63474178314209
    9. ' faut' → logprob: -4.75974178314209
    10. ' peut' → logprob: -4.88474178314209

Token 388: ' d' (ID: 272)
  Prédit: ' uniquement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' uniquement' → logprob: -0.05597074329853058
    2. ' seulement' → logprob: -3.5559706687927246
    3. ' juste' → logprob: -4.430970668792725
    4. ' de' → logprob: -5.430970668792725
    5. ' simplement' → logprob: -6.055970668792725
    6. ' à' → logprob: -6.180970668792725
    7. 'uni' → logprob: -6.305970668792725
    8. 'd' → logprob: -6.555970668792725
    9. 'de' → logprob: -7.430970668792725
    10. 'à' → logprob: -8.055971145629883

Token 389: '’aide' (ID: 76746)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.21542170643806458
    2. 'ex' → logprob: -2.465421676635742
    3. ''ex' → logprob: -3.465421676635742
    4. 'a' → logprob: -3.840421676635742
    5. ''aide' → logprob: -3.840421676635742
    6. ''' → logprob: -4.340421676635742
    7. ''une' → logprob: -5.090421676635742
    8. 'u' → logprob: -5.590421676635742
    9. ''''' → logprob: -6.215421676635742
    10. ''un' → logprob: -6.340421676635742

Token 390: '-m' (ID: 2126)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -1.0241165161132812
    2. ')' → logprob: -1.1491165161132812
    3. '"""
' → logprob: -2.6491165161132812
    4. '.' → logprob: -2.7741165161132812
    5. ' de' → logprob: -3.3991165161132812
    6. '.
' → logprob: -3.5241165161132812
    7. ' 
' → logprob: -4.149116516113281
    8. ' """' → logprob: -4.149116516113281
    9. ')
' → logprob: -4.399116516113281
    10. 'de' → logprob: -4.649116516113281

Token 391: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.016702113673090935
    2. 'emo' → logprob: -4.141702175140381
    3. 'a' → logprob: -8.266701698303223
    4. 'ém' → logprob: -9.641701698303223
    5. 'em' → logprob: -9.891701698303223
    6. '#' → logprob: -10.016701698303223
    7. 'ode' → logprob: -10.391701698303223
    8. '```' → logprob: -10.391701698303223
    9. 'o' → logprob: -10.516701698303223
    10. 'e' → logprob: -10.766701698303223

Token 392: 'moire' (ID: 64538)
  Prédit: 'mo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mo' → logprob: -0.48263993859291077
    2. 'moire' → logprob: -0.9826399087905884
    3. 'mor' → logprob: -5.357639789581299
    4. 'm' → logprob: -6.482639789581299
    5. '#' → logprob: -6.732639789581299
    6. '```' → logprob: -8.482640266418457
    7. '__' → logprob: -8.482640266418457
    8. '_' → logprob: -8.482640266418457
    9. '   ' → logprob: -9.107640266418457
    10. '_m' → logprob: -9.732640266418457

Token 393: '/comment' (ID: 159803)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.3568532168865204
    2. ')' → logprob: -2.1068532466888428
    3. '"""
' → logprob: -2.1068532466888428
    4. '.' → logprob: -4.356853008270264
    5. ')
' → logprob: -4.606853008270264
    6. ' """' → logprob: -4.731853008270264
    7. '#' → logprob: -5.481853008270264
    8. '.
' → logprob: -5.606853008270264
    9. ' """
' → logprob: -5.606853008270264
    10. '
' → logprob: -5.856853008270264

Token 394: 'aire' (ID: 8189)
  Prédit: 'aire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aire' → logprob: -1.1171869039535522
    2. 'aires' → logprob: -1.2421869039535522
    3. '#' → logprob: -1.9921869039535522
    4. '"""
' → logprob: -2.117187023162842
    5. '"""' → logprob: -2.242187023162842
    6. '```' → logprob: -5.242187023162842
    7. '#
' → logprob: -5.742187023162842
    8. ''''' → logprob: -5.867187023162842
    9. ''''
' → logprob: -5.992187023162842
    10. 'ent' → logprob: -6.117187023162842

Token 395: '.
' (ID: 558)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.4072837233543396
    2. '"""
' → logprob: -1.1572837829589844
    3. ')' → logprob: -5.407283782958984
    4. '"""

' → logprob: -5.407283782958984
    5. '
' → logprob: -5.907283782958984
    6. '.
' → logprob: -6.532283782958984
    7. ')
' → logprob: -6.532283782958984
    8. 's' → logprob: -6.907283782958984
    9. '#' → logprob: -7.282283782958984
    10. '""' → logprob: -7.282283782958984

Token 396: '"""

' (ID: 34508)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.017474133521318436
    2. '"""
' → logprob: -4.142474174499512
    3. '"""

' → logprob: -7.392474174499512
    4. '""' → logprob: -7.642474174499512
    5. '"' → logprob: -8.892474174499512
    6. ''''' → logprob: -9.267474174499512
    7. ' """' → logprob: -10.642474174499512
    8. '#' → logprob: -11.142474174499512
    9. '\"' → logprob: -11.267474174499512
    10. '*/' → logprob: -11.392474174499512

Token 397: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.18790267407894135
    2. '#' → logprob: -1.9379026889801025
    3. '\n' → logprob: -4.062902450561523
    4. 'a' → logprob: -5.937902450561523
    5. 'x' → logprob: -6.062902450561523
    6. '\' → logprob: -6.687902450561523
    7. 'i' → logprob: -7.312902450561523
    8. 'N' → logprob: -7.312902450561523
    9. 'l' → logprob: -7.937902450561523
    10. '"""
' → logprob: -8.312902450561523

Token 398: ' Lecture' (ID: 106534)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0841618999838829
    2. '#' → logprob: -2.5841619968414307
    3. 'N' → logprob: -6.209161758422852
    4. 'i' → logprob: -6.959161758422852
    5. 'a' → logprob: -7.709161758422852
    6. 'l' → logprob: -7.959161758422852
    7. 'x' → logprob: -8.209161758422852
    8. 'input' → logprob: -8.709161758422852
    9. ' #' → logprob: -9.084161758422852
    10. 't' → logprob: -9.209161758422852

Token 399: ' des' (ID: 731)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.44722190499305725
    2. '_' → logprob: -1.6972218751907349
    3. ' d' → logprob: -3.3222219944000244
    4. ' n' → logprob: -3.5722219944000244
    5. ' =' → logprob: -3.9472219944000244
    6. '(
' → logprob: -3.9472219944000244
    7. '(' → logprob: -3.9472219944000244
    8. 'd' → logprob: -4.197221755981445
    9. 's' → logprob: -4.947221755981445
    10. '=' → logprob: -5.197221755981445

Token 400: ' deux' (ID: 10301)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6802982687950134
    2. 'ent' → logprob: -1.9302983283996582
    3. ' n' → logprob: -2.180298328399658
    4. 'l' → logprob: -2.805298328399658
    5. ' ent' → logprob: -2.930298328399658
    6. ' lignes' → logprob: -3.555298328399658
    7. '_' → logprob: -4.305298328399658
    8. 'nombre' → logprob: -4.805298328399658
    9. '_ent' → logprob: -4.805298328399658
    10. 'entrée' → logprob: -4.930298328399658

Token 401: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.03798501938581467
    2. 'ent' → logprob: -4.162984848022461
    3. ' integers' → logprob: -4.912984848022461
    4. ' n' → logprob: -5.412984848022461
    5. 'n' → logprob: -5.662984848022461
    6. ' ' → logprob: -6.412984848022461
    7. ' nombres' → logprob: -6.412984848022461
    8. ' a' → logprob: -6.662984848022461
    9. ' entier' → logprob: -7.787984848022461
    10. '_' → logprob: -8.287984848022461

Token 402: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0064644175581634045
    2. 't' → logprob: -5.13146448135376
    3. 'tiers' → logprob: -7.88146448135376
    4. 'ti' → logprob: -9.756464004516602
    5. 'ières' → logprob: -10.256464004516602
    6. 'ts' → logprob: -10.631464004516602
    7. 'tes' → logprob: -11.506464004516602
    8. 'ties' → logprob: -11.756464004516602
    9. 'ers' → logprob: -12.006464004516602
    10. 'ants' → logprob: -12.381464004516602

Token 403: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8534069061279297
    2. ' n' → logprob: -0.9784069061279297
    3. 'a' → logprob: -2.3534069061279297
    4. ' a' → logprob: -2.4784069061279297
    5. ',' → logprob: -4.22840690612793
    6. ' ,' → logprob: -7.10340690612793
    7. ' ' → logprob: -7.35340690612793
    8. 'x' → logprob: -7.35340690612793
    9. ' N' → logprob: -7.35340690612793
    10. ' =' → logprob: -7.85340690612793

Token 404: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006028342177160084
    2. ' ,' → logprob: -7.750602722167969
    3. ',n' → logprob: -9.500602722167969
    4. ' =' → logprob: -10.125602722167969
    5. ',N' → logprob: -10.375602722167969
    6. 'n' → logprob: -11.875602722167969
    7. '=' → logprob: -12.375602722167969
    8. ' ' → logprob: -12.500602722167969
    9. 's' → logprob: -13.000602722167969
    10. ',
' → logprob: -13.875602722167969

Token 405: ' L' (ID: 451)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.05252784118056297
    2. 'K' → logprob: -3.427527904510498
    3. ' M' → logprob: -4.052527904510498
    4. ' K' → logprob: -6.802527904510498
    5. 'Q' → logprob: -9.05252742767334
    6. 'T' → logprob: -10.67752742767334
    7. 'P' → logprob: -10.92752742767334
    8. 'X' → logprob: -11.17752742767334
    9. 'S' → logprob: -11.30252742767334
    10. 'C' → logprob: -12.30252742767334

Token 406: ' depuis' (ID: 16277)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05871439352631569
    2. '=' → logprob: -3.0587143898010254
    3. ',' → logprob: -5.183714389801025
    4. 'N' → logprob: -5.933714389801025
    5. '=N' → logprob: -6.808714389801025
    6. ' ' → logprob: -8.683714866638184
    7. 'n' → logprob: -8.933714866638184
    8. ' N' → logprob: -9.058714866638184
    9. '=input' → logprob: -9.308714866638184
    10. ',N' → logprob: -9.558714866638184

Token 407: ' l' (ID: 305)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.30829450488090515
    2. ' stdin' → logprob: -1.4332945346832275
    3. 'input' → logprob: -4.433294296264648
    4. ' input' → logprob: -4.933294296264648
    5. '(stdin' → logprob: -5.933294296264648
    6. 'l' → logprob: -6.308294296264648
    7. ' la' → logprob: -6.308294296264648
    8. 'la' → logprob: -8.183294296264648
    9. ' ' → logprob: -9.058294296264648
    10. '.stdin' → logprob: -9.183294296264648

Token 408: ''entrée' (ID: 115820)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.6806880235671997
    2. 'e' → logprob: -1.0556880235671997
    3. 'a' → logprob: -2.05568790435791
    4. 'input' → logprob: -4.68068790435791
    5. 'ine' → logprob: -6.18068790435791
    6. ' stdin' → logprob: -6.93068790435791
    7. '.stdin' → logprob: -6.93068790435791
    8. 'es' → logprob: -7.05568790435791
    9. '(stdin' → logprob: -7.18068790435791
    10. 'std' → logprob: -7.18068790435791

Token 409: ' standard' (ID: 7024)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28613436222076416
    2. ' =' → logprob: -1.4111343622207642
    3. ',' → logprob: -6.411134243011475
    4. '=input' → logprob: -6.786134243011475
    5. 's' → logprob: -7.286134243011475
    6. '=N' → logprob: -8.161134719848633
    7. 'N' → logprob: -8.411134719848633
    8. ' ' → logprob: -8.536134719848633
    9. '_' → logprob: -8.536134719848633
    10. '()' → logprob: -9.786134719848633

Token 410: ' (' (ID: 350)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.04650045558810234
    2. ' =' → logprob: -4.0465006828308105
    3. 'n' → logprob: -4.6715006828308105
    4. ' N' → logprob: -4.9215006828308105
    5. '
' → logprob: -5.1715006828308105
    6. ',' → logprob: -6.5465006828308105
    7. '=' → logprob: -6.7965006828308105
    8. 'L' → logprob: -6.9215006828308105
    9. 'ligne' → logprob: -7.5465006828308105
    10. 'x' → logprob: -8.046500205993652

Token 411: 'sou' (ID: 153109)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20836639404296875
    2. ' )' → logprob: -1.7083663940429688
    3. '):' → logprob: -5.958366394042969
    4. 'n' → logprob: -7.583366394042969
    5. ' N' → logprob: -7.583366394042969
    6. 'line' → logprob: -7.833366394042969
    7. 'N' → logprob: -7.833366394042969
    8. ' ' → logprob: -7.833366394042969
    9. ' line' → logprob: -8.208366394042969
    10. 'input' → logprob: -8.333366394042969

Token 412: 'vent' (ID: 818)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -5.013994814362377e-05
    2. 'rance' → logprob: -10.25005054473877
    3. 'rv' → logprob: -11.75005054473877
    4. 'rant' → logprob: -13.25005054473877
    5. 'rs' → logprob: -13.50005054473877
    6. 'p' → logprob: -14.37505054473877
    7. 'rc' → logprob: -15.00005054473877
    8. 'rie' → logprob: -15.25005054473877
    9. 're' → logprob: -15.37505054473877
    10. 't' → logprob: -15.50005054473877

Token 413: ' la' (ID: 557)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.7991570830345154
    2. ' la' → logprob: -1.9241571426391602
    3. ' une' → logprob: -2.04915714263916
    4. 'util' → logprob: -2.92415714263916
    5. 'pour' → logprob: -3.17415714263916
    6. 'la' → logprob: -3.42415714263916
    7. ' pour' → logprob: -3.92415714263916
    8. 'input' → logprob: -4.54915714263916
    9. ' ' → logprob: -4.79915714263916
    10. ' utilisée' → logprob: -4.79915714263916

Token 414: ' première' (ID: 23423)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5949891805648804
    2. ' input' → logprob: -0.8449891805648804
    3. ' ' → logprob: -5.59498929977417
    4. 'stdin' → logprob: -6.21998929977417
    5. 'r' → logprob: -6.59498929977417
    6. ' ligne' → logprob: -6.96998929977417
    7. 'entrée' → logprob: -6.96998929977417
    8. ')' → logprob: -7.09498929977417
    9. 'ligne' → logprob: -7.09498929977417
    10. '=input' → logprob: -7.21998929977417

Token 415: ' ligne' (ID: 19583)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5541634559631348
    2. ' ligne' → logprob: -1.4291634559631348
    3. ' line' → logprob: -2.5541634559631348
    4. '()' → logprob: -3.5541634559631348
    5. ' )' → logprob: -3.6791634559631348
    6. 'ligne' → logprob: -3.9291634559631348
    7. ')' → logprob: -4.304163455963135
    8. 'line' → logprob: -5.179163455963135
    9. ' =' → logprob: -6.054163455963135
    10. ',' → logprob: -6.304163455963135

Token 416: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.37475043535232544
    2. ' =' → logprob: -1.6247503757476807
    3. ' )' → logprob: -2.4997503757476807
    4. '=' → logprob: -3.4997503757476807
    5. ',' → logprob: -6.99975061416626
    6. ' ' → logprob: -6.99975061416626
    7. '()' → logprob: -8.124750137329102
    8. '=input' → logprob: -8.249750137329102
    9. 'n' → logprob: -8.874750137329102
    10. ').' → logprob: -9.374750137329102

Token 417: ' sépar' (ID: 97160)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.525287926197052
    2. ' ' → logprob: -1.4002878665924072
    3. 'n' → logprob: -2.7752878665924072
    4. ' 
' → logprob: -3.2752878665924072
    5. ' n' → logprob: -3.6502878665924072
    6. 'N' → logprob: -4.400288105010986
    7. ' =' → logprob: -5.025288105010986
    8. ' line' → logprob: -5.275288105010986
    9. '  
' → logprob: -6.150288105010986
    10. 'input' → logprob: -6.150288105010986

Token 418: 'és' (ID: 1756)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.13462357223033905
    2. 'és' → logprob: -2.8846235275268555
    3. 'ée' → logprob: -3.0096235275268555
    4. '=' → logprob: -4.7596235275268555
    5. 'e' → logprob: -5.2596235275268555
    6. 'er' → logprob: -5.6346235275268555
    7. ' ' → logprob: -7.1346235275268555
    8. 'ées' → logprob: -7.3846235275268555
    9. ' =' → logprob: -7.6346235275268555
    10. ',' → logprob: -8.759623527526855

Token 419: ' par' (ID: 686)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22409498691558838
    2. ' par' → logprob: -1.9740949869155884
    3. 'par' → logprob: -3.099094867706299
    4. ' =' → logprob: -4.349094867706299
    5. '()' → logprob: -6.849094867706299
    6. ' ' → logprob: -7.349094867706299
    7. '_' → logprob: -7.599094867706299
    8. ' by' → logprob: -8.099095344543457
    9. '_par' → logprob: -8.099095344543457
    10. '=input' → logprob: -8.349095344543457

Token 420: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8928417563438416
    2. ''' → logprob: -1.2678418159484863
    3. 'un' → logprob: -2.3928418159484863
    4. ' un' → logprob: -2.3928418159484863
    5. 'space' → logprob: -3.6428418159484863
    6. '_' → logprob: -3.8928418159484863
    7. ' une' → logprob: -4.017841815948486
    8. '"' → logprob: -4.517841815948486
    9. ''un' → logprob: -4.767841815948486
    10. 'une' → logprob: -5.017841815948486

Token 421: ' espace' (ID: 66004)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -1.0521423816680908
    2. ''espace' → logprob: -1.1771423816680908
    3. ' espace' → logprob: -1.6771423816680908
    4. ''' → logprob: -2.802142381668091
    5. ' ' → logprob: -3.302142381668091
    6. 'space' → logprob: -3.677142381668091
    7. 'esp' → logprob: -4.427142143249512
    8. '"' → logprob: -4.802142143249512
    9. ''esp' → logprob: -5.427142143249512
    10. '’espace' → logprob: -5.552142143249512

Token 422: '.
' (ID: 558)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.005984609015285969
    2. '
' → logprob: -6.005984783172607
    3. 'n' → logprob: -6.255984783172607
    4. ' N' → logprob: -7.380984783172607
    5. 'ligne' → logprob: -8.63098430633545
    6. 'line' → logprob: -8.88098430633545
    7. ' =' → logprob: -9.13098430633545
    8. 'L' → logprob: -9.25598430633545
    9. 'x' → logprob: -9.25598430633545
    10. ' line' → logprob: -9.75598430633545

Token 423: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.700132997939363e-05
    2. 'line' → logprob: -11.750017166137695
    3. 'n' → logprob: -12.375017166137695
    4. 'ligne' → logprob: -13.125017166137695
    5. ' N' → logprob: -13.750017166137695
    6. '[N' → logprob: -14.875017166137695
    7. 'l' → logprob: -15.000017166137695
    8. '#' → logprob: -15.500017166137695
    9. 'for' → logprob: -15.625017166137695
    10. 'input' → logprob: -15.875017166137695

Token 424: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013935691677033901
    2. ' ,' → logprob: -6.626393795013428
    3. ',L' → logprob: -9.62639331817627
    4. ',
' → logprob: -14.37639331817627
    5. ',N' → logprob: -15.12639331817627
    6. ',l' → logprob: -15.25139331817627
    7. ' L' → logprob: -15.50139331817627
    8. 'L' → logprob: -16.376394271850586
    9. ',\
' → logprob: -16.501394271850586
    10. ' ' → logprob: -16.626394271850586

Token 425: ' L' (ID: 451)
  Prédit: ' L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.19532661139965057
    2. ' ' → logprob: -1.820326566696167
    3. 'L' → logprob: -4.195326805114746
    4. ' ' → logprob: -9.320326805114746
    5. ' =' → logprob: -9.445326805114746
    6. ' 
' → logprob: -9.945326805114746
    7. '  ' → logprob: -10.070326805114746
    8. '_' → logprob: -10.320326805114746
    9. '<|end|>' → logprob: -10.320326805114746
    10. 'space' → logprob: -10.445326805114746

Token 426: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020828247070312
    2. ' =' → logprob: -2.350208282470703
    3. '=input' → logprob: -13.975208282470703
    4. ',' → logprob: -15.725208282470703
    5. '=int' → logprob: -15.725208282470703
    6. ' ' → logprob: -16.225208282470703
    7. '=

' → logprob: -16.225208282470703
    8. '=
' → logprob: -16.350208282470703
    9. '＝' → logprob: -16.350208282470703
    10. ')' → logprob: -16.850208282470703

Token 427: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.07889209687709808
    2. ' map' → logprob: -2.5788919925689697
    3. '	map' → logprob: -14.07889175415039
    4. 'm' → logprob: -14.20389175415039
    5. 'list' → logprob: -15.20389175415039
    6. 'ma' → logprob: -15.70389175415039
    7. ' ' → logprob: -15.70389175415039
    8. '(map' → logprob: -15.95389175415039
    9. '[' → logprob: -16.07889175415039
    10. ' ' → logprob: -16.95389175415039

Token 428: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0838465690612793
    2. '(' → logprob: -2.5838465690612793
    3. '(str' → logprob: -5.333846569061279
    4. '(lambda' → logprob: -9.708847045898438
    5. '(in' → logprob: -11.083847045898438
    6. '(list' → logprob: -11.208847045898438
    7. '(input' → logprob: -11.708847045898438
    8. '[int' → logprob: -12.208847045898438
    9. '(
' → logprob: -12.333847045898438
    10. '(i' → logprob: -12.958847045898438

Token 429: ',' (ID: 11)
  Prédit: '(stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stdin' → logprob: -0.01361590065062046
    2. ',' → logprob: -4.38861608505249
    3. 'stdin' → logprob: -7.38861608505249
    4. '(' → logprob: -8.263615608215332
    5. ')' → logprob: -8.763615608215332
    6. ' stdin' → logprob: -11.138615608215332
    7. ' (' → logprob: -11.388615608215332
    8. '(std' → logprob: -11.388615608215332
    9. '.stdin' → logprob: -11.513615608215332
    10. '(st' → logprob: -11.513615608215332

Token 430: ' input' (ID: 3422)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.0008497710223309696
    2. ' stdin' → logprob: -7.250849723815918
    3. '(stdin' → logprob: -9.000849723815918
    4. '.stdin' → logprob: -11.500849723815918
    5. 'input' → logprob: -12.500849723815918
    6. ')' → logprob: -13.750849723815918
    7. 'stdout' → logprob: -14.500849723815918
    8. '   ' → logprob: -15.250849723815918
    9. 'std' → logprob: -15.375849723815918
    10. 'st' → logprob: -15.875849723815918

Token 431: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.991464786347933e-05
    2. '()' → logprob: -9.750060081481934
    3. '())' → logprob: -13.625060081481934
    4. '(' → logprob: -15.875060081481934
    5. ' ().' → logprob: -16.000059127807617
    6. ')' → logprob: -16.250059127807617
    7. '()
' → logprob: -16.500059127807617
    8. '()[' → logprob: -19.000059127807617
    9. '().
' → logprob: -19.375059127807617
    10. '()
' → logprob: -20.125059127807617

Token 432: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0007101670489646494
    2. 'strip' → logprob: -7.2507100105285645
    3. 'rstrip' → logprob: -16.375709533691406
    4. 'spl' → logprob: -16.625709533691406
    5. '(split' → logprob: -16.625709533691406
    6. '().' → logprob: -17.250709533691406
    7. ' split' → logprob: -17.250709533691406
    8. '.split' → logprob: -19.625709533691406
    9. '()' → logprob: -19.750709533691406
    10. ')' → logprob: -19.875709533691406

Token 433: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.01833079382777214
    2. '()' → logprob: -4.5183305740356445
    3. ')' → logprob: -5.0183305740356445
    4. '('' → logprob: -7.7683305740356445
    5. '(' → logprob: -8.643330574035645
    6. '()))' → logprob: -11.143330574035645
    7. '())
' → logprob: -11.768330574035645
    8. ' ())' → logprob: -12.018330574035645
    9. '(','' → logprob: -12.518330574035645
    10. '))' → logprob: -13.143330574035645

Token 434: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20626495778560638
    2. '#' → logprob: -2.4562649726867676
    3. ' 
' → logprob: -3.2062649726867676
    4. ' ' → logprob: -4.206264972686768
    5. '<|end|>' → logprob: -4.331264972686768
    6. ',' → logprob: -4.956264972686768
    7. 'a' → logprob: -5.706264972686768
    8. 'n' → logprob: -5.706264972686768
    9. '' → logprob: -6.081264972686768
    10. 'x' → logprob: -6.206264972686768

Token 435: ' Calcul' (ID: 57243)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.922102928161621
    2. 't' → logprob: -1.922102928161621
    3. 'length' → logprob: -2.297102928161621
    4. 'fr' → logprob: -2.547102928161621
    5. '#' → logprob: -3.172102928161621
    6. 'T' → logprob: -3.422102928161621
    7. 'ap' → logprob: -3.672102928161621
    8. 'taste' → logprob: -3.797102928161621
    9. 'lines' → logprob: -3.922102928161621
    10. 'a' → logprob: -3.922102928161621

Token 436: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9455697536468506
    2. '#' → logprob: -2.4455697536468506
    3. 's' → logprob: -2.5705697536468506
    4. 'result' → logprob: -2.6955697536468506
    5. '_sum' → logprob: -2.6955697536468506
    6. 'max' → logprob: -3.3205697536468506
    7. '_total' → logprob: -3.3205697536468506
    8. '()' → logprob: -3.3205697536468506
    9. '_max' → logprob: -3.6955697536468506
    10. '_min' → logprob: -3.8205697536468506

Token 437: ' la' (ID: 557)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.7126076817512512
    2. ' L' → logprob: -0.9626076817512512
    3. ' la' → logprob: -3.5876076221466064
    4. '1' → logprob: -3.7126076221466064
    5. 'l' → logprob: -4.0876078605651855
    6. 'sum' → logprob: -4.2126078605651855
    7. 'N' → logprob: -4.7126078605651855
    8. 's' → logprob: -4.8376078605651855
    9. ' ' → logprob: -5.4626078605651855
    10. '0' → logprob: -5.7126078605651855

Token 438: ' somme' (ID: 64484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9835852384567261
    2. 'total' → logprob: -1.858585238456726
    3. 'sum' → logprob: -2.6085853576660156
    4. 't' → logprob: -3.1085853576660156
    5. 'result' → logprob: -3.1085853576660156
    6. 'length' → logprob: -3.3585853576660156
    7. '#' → logprob: -3.4835853576660156
    8. 'fruit' → logprob: -3.4835853576660156
    9. 'liste' → logprob: -3.8585853576660156
    10. 'long' → logprob: -4.108585357666016

Token 439: ' totale' (ID: 52898)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1097078323364258
    2. 's' → logprob: -1.3597078323364258
    3. '=' → logprob: -2.359707832336426
    4. ' =' → logprob: -2.734707832336426
    5. 'des' → logprob: -3.109707832336426
    6. 'total' → logprob: -3.109707832336426
    7. '(' → logprob: -3.359707832336426
    8. '_total' → logprob: -3.609707832336426
    9. '_s' → logprob: -3.984707832336426
    10. 'result' → logprob: -4.109707832336426

Token 440: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4130236506462097
    2. ' =' → logprob: -1.7880237102508545
    3. '=' → logprob: -2.0380237102508545
    4. '(' → logprob: -4.163023471832275
    5. 's' → logprob: -4.413023471832275
    6. '_total' → logprob: -5.163023471832275
    7. '_s' → logprob: -6.288023471832275
    8. 'total' → logprob: -6.913023471832275
    9. '_=' → logprob: -6.913023471832275
    10. 'des' → logprob: -7.038023471832275

Token 441: ' la' (ID: 557)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.007387144025415182
    2. '[i' → logprob: -5.507387161254883
    3. '[L' → logprob: -7.132387161254883
    4. 'i' → logprob: -7.382387161254883
    5. '(range' → logprob: -7.382387161254883
    6. 'L' → logprob: -7.632387161254883
    7. ' range' → logprob: -8.882387161254883
    8. 'x' → logprob: -9.007387161254883
    9. 'l' → logprob: -9.132387161254883
    10. 'a' → logprob: -9.882387161254883

Token 442: ' suite' (ID: 13800)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.09331952780485153
    2. 'list' → logprob: -3.2183194160461426
    3. '[i' → logprob: -3.9683194160461426
    4. 'L' → logprob: -5.093319416046143
    5. 'i' → logprob: -5.218319416046143
    6. 'liste' → logprob: -5.343319416046143
    7. 'length' → logprob: -6.343319416046143
    8. 'abs' → logprob: -6.343319416046143
    9. '[L' → logprob: -6.843319416046143
    10. 'len' → logprob: -6.843319416046143

Token 443: ' d' (ID: 272)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8480489253997803
    2. '=' → logprob: -1.9730489253997803
    3. '_' → logprob: -2.3480489253997803
    4. 'range' → logprob: -2.4730489253997803
    5. '(range' → logprob: -2.9730489253997803
    6. 's' → logprob: -3.0980489253997803
    7. 'des' → logprob: -3.4730489253997803
    8. '_des' → logprob: -3.7230489253997803
    9. '_range' → logprob: -3.9730489253997803
    10. '_n' → logprob: -4.473049163818359

Token 444: ''ent' (ID: 53422)
  Prédit: '[L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[L' → logprob: -0.7639480829238892
    2. 'range' → logprob: -1.5139480829238892
    3. '(L' → logprob: -2.5139479637145996
    4. 'L' → logprob: -2.6389479637145996
    5. '[i' → logprob: -3.1389479637145996
    6. '(range' → logprob: -3.1389479637145996
    7. 'i' → logprob: -3.6389479637145996
    8. 'a' → logprob: -4.1389479637146
    9. '[' → logprob: -5.2639479637146
    10. 's' → logprob: -5.3889479637146

Token 445: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0022378049325197935
    2. 'ières' → logprob: -6.127237796783447
    3. 'ier' → logprob: -9.877238273620605
    4. 'ieres' → logprob: -14.252238273620605
    5. 'i' → logprob: -15.252238273620605
    6. 'ière' → logprob: -15.502238273620605
    7. '```' → logprob: -16.75223731994629
    8. 'eurs' → logprob: -17.87723731994629
    9. 'ieurs' → logprob: -18.00223731994629
    10. 'aliers' → logprob: -18.12723731994629

Token 446: ' allant' (ID: 122150)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.702751636505127
    2. 'de' → logprob: -1.452751636505127
    3. 'from' → logprob: -2.327751636505127
    4. '(range' → logprob: -2.702751636505127
    5. 's' → logprob: -3.827751636505127
    6. 'L' → logprob: -3.952751636505127
    7. 'total' → logprob: -4.452751636505127
    8. ' =' → logprob: -4.702751636505127
    9. '=' → logprob: -5.077751636505127
    10. 'tot' → logprob: -5.327751636505127

Token 447: ' de' (ID: 334)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.29818543791770935
    2. 'de' → logprob: -1.5481854677200317
    3. ' from' → logprob: -3.423185348510742
    4. ' de' → logprob: -4.423185348510742
    5. 'range' → logprob: -9.048185348510742
    6. 'L' → logprob: -9.173185348510742
    7. ' L' → logprob: -9.673185348510742
    8. '	from' → logprob: -9.798185348510742
    9. ' ' → logprob: -10.048185348510742
    10. 'du' → logprob: -10.173185348510742

Token 448: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.033842213451862335
    2. '1' → logprob: -3.5338423252105713
    3. ' L' → logprob: -5.908842086791992
    4. '0' → logprob: -6.658842086791992
    5. ' ' → logprob: -10.658842086791992
    6. '(L' → logprob: -10.908842086791992
    7. 'l' → logprob: -11.283842086791992
    8. 'i' → logprob: -11.533842086791992
    9. '	L' → logprob: -12.283842086791992
    10. '(' → logprob: -12.533842086791992

Token 449: ' à' (ID: 1221)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.43994876742362976
    2. ' à' → logprob: -2.064948797225952
    3. ' to' → logprob: -2.564948797225952
    4. '+' → logprob: -2.689948797225952
    5. '<|end|>' → logprob: -3.564948797225952
    6. 'à' → logprob: -3.689948797225952
    7. 'L' → logprob: -4.814948558807373
    8. ' jusqu' → logprob: -4.814948558807373
    9. ',' → logprob: -6.189948558807373
    10. 'a' → logprob: -6.314948558807373

Token 450: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.007650164887309074
    2. ' L' → logprob: -4.882650375366211
    3. '(L' → logprob: -10.382650375366211
    4. ' (' → logprob: -11.632650375366211
    5. '(' → logprob: -13.382650375366211
    6. '```' → logprob: -14.382650375366211
    7. ' ' → logprob: -14.507650375366211
    8. '	L' → logprob: -14.757650375366211
    9. '>L' → logprob: -15.382650375366211
    10. 'N' → logprob: -15.695150375366211

Token 451: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0699397623538971
    2. ' +' → logprob: -2.6949398517608643
    3. ' plus' → logprob: -13.319939613342285
    4. 'plus' → logprob: -14.194939613342285
    5. 'N' → logprob: -14.694939613342285
    6. '＋' → logprob: -15.694939613342285
    7. ' ' → logprob: -15.819939613342285
    8. '+n' → logprob: -16.3199405670166
    9. ' ' → logprob: -16.6949405670166
    10. '+
' → logprob: -16.6949405670166

Token 452: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.012551212683320045
    2. ' N' → logprob: -4.387551307678223
    3. '(N' → logprob: -11.012551307678223
    4. '(' → logprob: -11.387551307678223
    5. ' (' → logprob: -12.137551307678223
    6. ' ' → logprob: -12.262551307678223
    7. '	N' → logprob: -13.387551307678223
    8. '<N' → logprob: -14.762551307678223
    9. '+' → logprob: -14.887551307678223
    10. '<|end|>' → logprob: -15.012551307678223

Token 453: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16640618443489075
    2. ' -' → logprob: -1.9164061546325684
    3. '+' → logprob: -6.166406154632568
    4. 'N' → logprob: -6.416406154632568
    5. '*N' → logprob: -6.666406154632568
    6. '*' → logprob: -7.666406154632568
    7. ' +' → logprob: -7.916406154632568
    8. ' N' → logprob: -9.166406631469727
    9. ' ' → logprob: -9.291406631469727
    10. ' *' → logprob: -9.916406631469727

Token 454: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011105302110081539
    2. ' ' → logprob: -9.250110626220703
    3. '-' → logprob: -11.250110626220703
    4. '```' → logprob: -14.375110626220703
    5. ' -' → logprob: -15.375110626220703
    6. ',' → logprob: -15.812610626220703
    7. '
' → logprob: -16.000110626220703
    8. ' ' → logprob: -16.187610626220703
    9. '<|end|>' → logprob: -16.250110626220703
    10. '`' → logprob: -16.437610626220703

Token 455: ',' (ID: 11)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.4760333299636841
    2. 'sum' → logprob: -1.601033329963684
    3. 's' → logprob: -2.1010332107543945
    4. '=' → logprob: -4.1010332107543945
    5. ' =' → logprob: -4.4760332107543945
    6. '-' → logprob: -5.2260332107543945
    7. '*' → logprob: -5.3510332107543945
    8. ' total' → logprob: -6.3510332107543945
    9. '_' → logprob: -6.4760332107543945
    10. 'result' → logprob: -6.4760332107543945

Token 456: ' 
' (ID: 793)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22397081553936005
    2. '=' → logprob: -2.098970890045166
    3. ' =' → logprob: -2.973970890045166
    4. '0' → logprob: -5.098970890045166
    5. ' N' → logprob: -5.973970890045166
    6. 'sum' → logprob: -6.098970890045166
    7. '+' → logprob: -6.348970890045166
    8. ' sum' → logprob: -6.473970890045166
    9. '1' → logprob: -6.723970890045166
    10. ' -' → logprob: -6.848970890045166

Token 457: '#' (ID: 2)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8977366089820862
    2. '#' → logprob: -2.0227365493774414
    3. ' -' → logprob: -2.3977365493774414
    4. ' =' → logprob: -2.7727365493774414
    5. ' #' → logprob: -3.1477365493774414
    6. '=' → logprob: -3.2727365493774414
    7. '+' → logprob: -3.3977365493774414
    8. ' ' → logprob: -3.3977365493774414
    9. 's' → logprob: -3.3977365493774414
    10. 'range' → logprob: -4.022736549377441

Token 458: ' c' (ID: 274)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.518028736114502
    2. '-' → logprob: -2.143028736114502
    3. 'sum' → logprob: -2.268028736114502
    4. ' sum' → logprob: -2.518028736114502
    5. '+' → logprob: -2.768028736114502
    6. ' -' → logprob: -2.768028736114502
    7. ' s' → logprob: -2.893028736114502
    8. ' i' → logprob: -3.643028736114502
    9. ' #' → logprob: -3.643028736114502
    10. '#' → logprob: -3.643028736114502

Token 459: ''est' (ID: 6616)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7311498522758484
    2. 'a' → logprob: -1.7311499118804932
    3. 'al' → logprob: -2.731149911880493
    4. 'omme' → logprob: -2.856149911880493
    5. '_' → logprob: -2.981149911880493
    6. 'ar' → logprob: -3.606149911880493
    7. '=' → logprob: -3.606149911880493
    8. ''' → logprob: -3.856149911880493
    9. '#' → logprob: -3.981149911880493
    10. '+' → logprob: -3.981149911880493

Token 460: '-à' (ID: 56297)
  Prédit: '-à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-à' → logprob: -0.9126750826835632
    2. ' à' → logprob: -1.537675142288208
    3. '=' → logprob: -1.912675142288208
    4. 'à' → logprob: -2.037675142288208
    5. ' =' → logprob: -3.287675142288208
    6. ' ' → logprob: -3.537675142288208
    7. ' la' → logprob: -4.787674903869629
    8. ' a' → logprob: -5.162674903869629
    9. 'a' → logprob: -5.162674903869629
    10. '-' → logprob: -5.537674903869629

Token 461: '-dire' (ID: 76064)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -1.5269287824630737
    2. 's' → logprob: -1.5269287824630737
    3. '#' → logprob: -2.2769289016723633
    4. 'à' → logprob: -2.2769289016723633
    5. 'dire' → logprob: -2.5269289016723633
    6. 'la' → logprob: -3.0269289016723633
    7. 'près' → logprob: -3.0269289016723633
    8. 'part' → logprob: -3.2769289016723633
    9. '1' → logprob: -4.151928901672363
    10. 'l' → logprob: -4.276928901672363

Token 462: ' N' (ID: 478)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.9168722033500671
    2. 'sum' → logprob: -1.666872262954712
    3. ' sum' → logprob: -2.041872262954712
    4. '(L' → logprob: -2.291872262954712
    5. '(N' → logprob: -2.666872262954712
    6. '(sum' → logprob: -3.541872262954712
    7. ' L' → logprob: -3.541872262954712
    8. 'L' → logprob: -4.041872024536133
    9. '(' → logprob: -5.041872024536133
    10. ' N' → logprob: -5.041872024536133

Token 463: ' ent' (ID: 1121)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.43921640515327454
    2. '*' → logprob: -1.0642163753509521
    3. '*(' → logprob: -4.564216613769531
    4. '*[' → logprob: -11.564216613769531
    5. ' *(' → logprob: -11.939216613769531
    6. '*N' → logprob: -12.189216613769531
    7. '**' → logprob: -12.314216613769531
    8. '*
' → logprob: -13.064216613769531
    9. '*((' → logprob: -13.314216613769531
    10. ' ' → logprob: -13.314216613769531

Token 464: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.2811979651451111
    2. 'ier' → logprob: -2.406198024749756
    3. ' *' → logprob: -3.031198024749756
    4. 'ières' → logprob: -3.281198024749756
    5. ' integers' → logprob: -4.156198024749756
    6. ' _' → logprob: -4.781198024749756
    7. ' ' → logprob: -5.031198024749756
    8. ' i' → logprob: -5.406198024749756
    9. '_' → logprob: -5.656198024749756
    10. 'ieurs' → logprob: -6.156198024749756

Token 465: ' cons' (ID: 1473)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.4164647161960602
    2. ' *' → logprob: -1.9164646863937378
    3. 's' → logprob: -2.6664648056030273
    4. '*(' → logprob: -3.1664648056030273
    5. '=' → logprob: -3.5414648056030273
    6. 'total' → logprob: -4.541464805603027
    7. ' =' → logprob: -4.541464805603027
    8. '#' → logprob: -4.791464805603027
    9. 'sum' → logprob: -5.291464805603027
    10. '
' → logprob: -5.916464805603027

Token 466: 'écut' (ID: 96392)
  Prédit: 'écut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écut' → logprob: -0.029813556000590324
    2. 'ecut' → logprob: -3.529813528060913
    3. 'éc' → logprob: -11.154813766479492
    4. 'é' → logprob: -11.279813766479492
    5. 'secut' → logprob: -11.279813766479492
    6. '{' → logprob: -11.904813766479492
    7. 'ecu' → logprob: -12.654813766479492
    8. '#' → logprob: -13.029813766479492
    9. 'ec' → logprob: -13.404813766479492
    10. 'e' → logprob: -13.404813766479492

Token 467: 'ifs' (ID: 14119)
  Prédit: 'ut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ut' → logprob: -0.12845279276371002
    2. 'u' → logprob: -2.378452777862549
    3. 'utive' → logprob: -4.378452777862549
    4. ' ut' → logprob: -4.753452777862549
    5. 'i' → logprob: -6.628452777862549
    6. ' u' → logprob: -6.878452777862549
    7. 'uti' → logprob: -6.878452777862549
    8. 'cut' → logprob: -7.378452777862549
    9. 'uct' → logprob: -7.378452777862549
    10. 'icut' → logprob: -8.628453254699707

Token 468: ' comm' (ID: 1394)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.2730378806591034
    2. 's' → logprob: -2.148037910461426
    3. 'sum' → logprob: -3.023037910461426
    4. '*' → logprob: -4.523037910461426
    5. 'tot' → logprob: -4.773037910461426
    6. '(total' → logprob: -5.023037910461426
    7. ' total' → logprob: -5.148037910461426
    8. '*(' → logprob: -5.148037910461426
    9. '#' → logprob: -5.398037910461426
    10. ',' → logprob: -5.773037910461426

Token 469: 'en' (ID: 262)
  Prédit: 'enç'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enç' → logprob: -0.8176888823509216
    2. 'e' → logprob: -1.8176889419555664
    3. 'en' → logprob: -2.1926889419555664
    4. 'ent' → logprob: -2.6926889419555664
    5. 'enc' → logprob: -2.8176889419555664
    6. 'enant' → logprob: -2.9426889419555664
    7. 'anç' → logprob: -3.9426889419555664
    8. 'ença' → logprob: -4.192688941955566
    9. 'encé' → logprob: -4.442688941955566
    10. 'ant' → logprob: -4.567688941955566

Token 470: 'çant' (ID: 78714)
  Prédit: 'çant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'çant' → logprob: -0.0931011363863945
    2. 'c' → logprob: -2.5931010246276855
    3. 't' → logprob: -4.9681010246276855
    4. 'ç' → logprob: -5.8431010246276855
    5. 'cing' → logprob: -6.8431010246276855
    6. 'és' → logprob: -7.5931010246276855
    7. 'cé' → logprob: -7.5931010246276855
    8. 'çons' → logprob: -7.8431010246276855
    9. 's' → logprob: -8.593101501464844
    10. 'ant' → logprob: -8.718101501464844

Token 471: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.13818712532520294
    2. ' par' → logprob: -2.7631871700286865
    3. 'à' → logprob: -3.2631871700286865
    4. 'par' → logprob: -4.388186931610107
    5. ' from' → logprob: -5.138186931610107
    6. 'from' → logprob: -5.263186931610107
    7. ' de' → logprob: -6.138186931610107
    8. ' au' → logprob: -7.013186931610107
    9. 'de' → logprob: -7.513186931610107
    10. 'au' → logprob: -8.513187408447266

Token 472: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.011047814972698689
    2. ' L' → logprob: -4.511047840118408
    3. ' ' → logprob: -17.26104736328125
    4. '`' → logprob: -17.38604736328125
    5. '	L' → logprob: -18.38604736328125
    6. 'l' → logprob: -18.63604736328125
    7. '>L' → logprob: -18.63604736328125
    8. ' ' → logprob: -18.88604736328125
    9. '```' → logprob: -18.88604736328125
    10. '.L' → logprob: -19.76104736328125

Token 473: '.
' (ID: 558)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.5254228711128235
    2. 's' → logprob: -2.1504228115081787
    3. 'sum' → logprob: -2.2754228115081787
    4. '#' → logprob: -2.6504228115081787
    5. ')' → logprob: -3.4004228115081787
    6. '-' → logprob: -3.6504228115081787
    7. '*' → logprob: -4.650423049926758
    8. '
' → logprob: -4.650423049926758
    9. '=' → logprob: -4.775423049926758
    10. '.' → logprob: -5.275423049926758

Token 474: '#' (ID: 2)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.004166964441537857
    2. 's' → logprob: -5.879167079925537
    3. 'S' → logprob: -6.754167079925537
    4. 'sum' → logprob: -9.004166603088379
    5. 'tot' → logprob: -10.379166603088379
    6. ' total' → logprob: -11.629166603088379
    7. 't' → logprob: -11.754166603088379
    8. 'result' → logprob: -12.254166603088379
    9. 'summ' → logprob: -13.254166603088379
    10. '_total' → logprob: -13.379166603088379

Token 475: ' Afin' (ID: 152861)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.00882740318775177
    2. 's' → logprob: -5.008827209472656
    3. 'S' → logprob: -6.633827209472656
    4. 'sum' → logprob: -7.508827209472656
    5. 'tot' → logprob: -9.383827209472656
    6. 't' → logprob: -10.008827209472656
    7. 'result' → logprob: -10.758827209472656
    8. ' total' → logprob: -11.633827209472656
    9. 'ans' → logprob: -11.633827209472656
    10. 'T' → logprob: -11.883827209472656

Token 476: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.04037780314683914
    2. ' d' → logprob: -3.5403778553009033
    3. '=' → logprob: -5.165377616882324
    4. 'de' → logprob: -6.540377616882324
    5. '#' → logprob: -6.665377616882324
    6. 'd' → logprob: -7.415377616882324
    7. '_' → logprob: -7.665377616882324
    8. ' que' → logprob: -7.790377616882324
    9. ' =' → logprob: -7.790377616882324
    10. ' #' → logprob: -9.915377616882324

Token 477: ''all' (ID: 70653)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.4292515516281128
    2. ' éviter' → logprob: -1.4292515516281128
    3. ' calcul' → logprob: -1.8042515516281128
    4. '#' → logprob: -2.4292516708374023
    5. 'e' → logprob: -3.0542516708374023
    6. ' range' → logprob: -3.4292516708374023
    7. 'range' → logprob: -3.6792516708374023
    8. ' a' → logprob: -4.054251670837402
    9. ''év' → logprob: -4.429251670837402
    10. ' assurer' → logprob: -4.429251670837402

Token 478: 'é' (ID: 377)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9051928520202637
    2. 'ister' → logprob: -1.1551928520202637
    3. 'ist' → logprob: -3.4051928520202637
    4. 'a' → logprob: -3.4051928520202637
    5. 'er' → logprob: -3.5301928520202637
    6. 'l' → logprob: -3.6551928520202637
    7. 'ine' → logprob: -3.7801928520202637
    8. 'ier' → logprob: -4.155192852020264
    9. 'e' → logprob: -4.280192852020264
    10. 'sum' → logprob: -4.405192852020264

Token 479: 'ger' (ID: 1281)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.11020748317241669
    2. '#' → logprob: -3.3602075576782227
    3. 'er' → logprob: -3.9852075576782227
    4. '\' → logprob: -5.110207557678223
    5. 'e' → logprob: -5.235207557678223
    6. 'è' → logprob: -5.485207557678223
    7. '(' → logprob: -5.485207557678223
    8. '_' → logprob: -5.610207557678223
    9. 'ger' → logprob: -5.860207557678223
    10. '%' → logprob: -5.985207557678223

Token 480: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.17456679046154022
    2. ' le' → logprob: -1.9245667457580566
    3. 'la' → logprob: -4.674566745758057
    4. 'le' → logprob: -6.174566745758057
    5. ' l' → logprob: -7.174566745758057
    6. ' de' → logprob: -7.924566745758057
    7. ' #' → logprob: -8.049567222595215
    8. '_' → logprob: -8.299567222595215
    9. '_le' → logprob: -8.424567222595215
    10. '#' → logprob: -8.549567222595215

Token 481: ' calcul' (ID: 7559)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'code' → logprob: -1.0346320867538452
    2. ' code' → logprob: -1.4096320867538452
    3. '#' → logprob: -1.5346320867538452
    4. 'calcul' → logprob: -3.2846322059631348
    5. 's' → logprob: -3.7846322059631348
    6. 'po' → logprob: -3.7846322059631348
    7. ' #' → logprob: -4.159632205963135
    8. 'total' → logprob: -4.284632205963135
    9. 'print' → logprob: -4.534632205963135
    10. 'texte' → logprob: -4.659632205963135

Token 482: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2545413076877594
    2. ' ,' → logprob: -2.1295413970947266
    3. ' total' → logprob: -3.1295413970947266
    4. 'total' → logprob: -3.6295413970947266
    5. '_' → logprob: -4.754541397094727
    6. ' =' → logprob: -5.504541397094727
    7. '_total' → logprob: -5.504541397094727
    8. ' de' → logprob: -5.754541397094727
    9. ' #' → logprob: -6.129541397094727
    10. ' )' → logprob: -6.254541397094727

Token 483: ' la' (ID: 557)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.25953561067581177
    2. ' total' → logprob: -1.884535551071167
    3. 's' → logprob: -3.009535551071167
    4. 'sum' → logprob: -4.259535789489746
    5. ' s' → logprob: -5.384535789489746
    6. 'S' → logprob: -6.259535789489746
    7. ' sum' → logprob: -6.384535789489746
    8. 'result' → logprob: -7.009535789489746
    9. ' somme' → logprob: -7.009535789489746
    10. ' S' → logprob: -7.009535789489746

Token 484: ' formule' (ID: 84316)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4328131377696991
    2. 'sum' → logprob: -2.0578131675720215
    3. ' somme' → logprob: -2.5578131675720215
    4. 'total' → logprob: -2.6828131675720215
    5. '#' → logprob: -3.5578131675720215
    6. ' total' → logprob: -4.4328131675720215
    7. 'val' → logprob: -4.6828131675720215
    8. ' s' → logprob: -5.1828131675720215
    9. ' sum' → logprob: -5.3078131675720215
    10. 'som' → logprob: -5.4328131675720215

Token 485: ' suivante' (ID: 107439)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5270199775695801
    2. ' total' → logprob: -1.77701997756958
    3. 'total' → logprob: -2.65201997756958
    4. '=' → logprob: -3.77701997756958
    5. 'sum' → logprob: -3.77701997756958
    6. ' totale' → logprob: -4.02701997756958
    7. ' sum' → logprob: -4.02701997756958
    8. ' s' → logprob: -4.02701997756958
    9. ' res' → logprob: -4.27701997756958
    10. 's' → logprob: -4.65201997756958

Token 486: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6316068172454834
    2. '=' → logprob: -0.8816068172454834
    3. 's' → logprob: -3.5066068172454834
    4. ' s' → logprob: -4.8816070556640625
    5. 'total' → logprob: -5.2566070556640625
    6. 'n' → logprob: -6.3816070556640625
    7. 'sum' → logprob: -6.5066070556640625
    8. ':' → logprob: -6.6316070556640625
    9. ' total' → logprob: -7.2566070556640625
    10. ')' → logprob: -7.3816070556640625

Token 487: ' utilisée' (ID: 106548)
  Prédit: ' utilisée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisée' → logprob: -1.1109097003936768
    2. ' (' → logprob: -1.8609097003936768
    3. ' used' → logprob: -2.1109097003936768
    4. '(' → logprob: -2.3609097003936768
    5. ' L' → logprob: -2.7359097003936768
    6. '(N' → logprob: -2.9859097003936768
    7. 'N' → logprob: -3.3609097003936768
    8. 'used' → logprob: -3.6109097003936768
    9. '(L' → logprob: -3.6109097003936768
    10. ' N' → logprob: -3.6109097003936768

Token 488: ' :
' (ID: 10039)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2886278629302979
    2. 'total' → logprob: -1.4136278629302979
    3. ':' → logprob: -1.5386278629302979
    4. ' total' → logprob: -2.538627862930298
    5. ' :' → logprob: -2.913627862930298
    6. 'sum' → logprob: -4.163627624511719
    7. '=' → logprob: -4.413627624511719
    8. 's' → logprob: -4.538627624511719
    9. ' (' → logprob: -4.663627624511719
    10. ' ' → logprob: -4.663627624511719

Token 489: '#' (ID: 2)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.14741462469100952
    2. ' total' → logprob: -3.0224146842956543
    3. 's' → logprob: -3.3974146842956543
    4. 'sum' → logprob: -3.6474146842956543
    5. 'S' → logprob: -4.147414684295654
    6. 'N' → logprob: -5.522414684295654
    7. '(N' → logprob: -5.897414684295654
    8. 'tot' → logprob: -6.647414684295654
    9. ' sum' → logprob: -7.147414684295654
    10. ' S' → logprob: -7.272414684295654

Token 490: ' Som' (ID: 12116)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.043565183877944946
    2. 's' → logprob: -4.293565273284912
    3. 'sum' → logprob: -4.293565273284912
    4. ' total' → logprob: -4.418565273284912
    5. 'S' → logprob: -6.418565273284912
    6. 'tot' → logprob: -7.668565273284912
    7. 'result' → logprob: -8.168564796447754
    8. 't' → logprob: -9.168564796447754
    9. ' sum' → logprob: -9.293564796447754
    10. 'N' → logprob: -9.418564796447754

Token 491: 'me' (ID: 1047)
  Prédit: 'me'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'me' → logprob: -0.0066058337688446045
    2. 'm' → logprob: -5.131605625152588
    3. '=' → logprob: -7.756605625152588
    4. '#' → logprob: -9.256606101989746
    5. 'ma' → logprob: -10.631606101989746
    6. '(me' → logprob: -10.881606101989746
    7. ')' → logprob: -11.006606101989746
    8. '
' → logprob: -11.256606101989746
    9. 'mes' → logprob: -11.256606101989746
    10. 'mme' → logprob: -11.381606101989746

Token 492: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24894577264785767
    2. '_tot' → logprob: -2.248945713043213
    3. '_' → logprob: -3.123945713043213
    4. '_total' → logprob: -3.248945713043213
    5. '=' → logprob: -4.373945713043213
    6. 'tot' → logprob: -4.748945713043213
    7. '_N' → logprob: -5.748945713043213
    8. '(N' → logprob: -6.373945713043213
    9. '_des' → logprob: -6.748945713043213
    10. '_n' → logprob: -7.373945713043213

Token 493: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.04167793318629265
    2. '(N' → logprob: -3.541677951812744
    3. ' N' → logprob: -4.666677951812744
    4. ' (' → logprob: -6.291677951812744
    5. '(' → logprob: -8.041677474975586
    6. '((' → logprob: -8.791677474975586
    7. '   ' → logprob: -10.666677474975586
    8. '	N' → logprob: -11.041677474975586
    9. 'n' → logprob: -11.291677474975586
    10. ' ((' → logprob: -11.541677474975586

Token 494: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.29883795976638794
    2. ' *' → logprob: -1.4238379001617432
    3. '*(' → logprob: -4.048838138580322
    4. '*((' → logprob: -9.923837661743164
    5. ' *(' → logprob: -11.048837661743164
    6. ' ' → logprob: -11.798837661743164
    7. ' ' → logprob: -12.173837661743164
    8. '**' → logprob: -12.923837661743164
    9. '#' → logprob: -13.298837661743164
    10. '*N' → logprob: -13.798837661743164

Token 495: ' (' (ID: 350)
  Prédit: '(L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.04498855397105217
    2. '(' → logprob: -3.2949886322021484
    3. ' (' → logprob: -5.419988632202148
    4. 'L' → logprob: -6.044988632202148
    5. '((' → logprob: -9.169988632202148
    6. ' L' → logprob: -11.919988632202148
    7. '(
' → logprob: -12.919988632202148
    8. '（' → logprob: -13.419988632202148
    9. '(int' → logprob: -13.544988632202148
    10. '(N' → logprob: -13.919988632202148

Token 496: 'prem' (ID: 76294)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1400260478258133
    2. '2' → logprob: -2.390026092529297
    3. '(L' → logprob: -3.390026092529297
    4. 'L' → logprob: -5.265026092529297
    5. '((' → logprob: -9.390026092529297
    6. ' (' → logprob: -10.140026092529297
    7. '(
' → logprob: -11.265026092529297
    8. ')' → logprob: -12.015026092529297
    9. '1' → logprob: -13.202526092529297
    10. '[' → logprob: -13.390026092529297

Token 497: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.31850665807724
    2. 'ière' → logprob: -1.3185067176818848
    3. 'i' → logprob: -5.568506717681885
    4. 'iere' → logprob: -7.818506717681885
    5. '**' → logprob: -8.443506240844727
    6. 'iers' → logprob: -8.818506240844727
    7. '(i' → logprob: -9.068506240844727
    8. '(' → logprob: -9.693506240844727
    9. 'e' → logprob: -9.943506240844727
    10. '[i' → logprob: -10.193506240844727

Token 498: ' élément' (ID: 99627)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6707679033279419
    2. '_' → logprob: -1.045767903327942
    3. ' +' → logprob: -2.2957677841186523
    4. 'élé' → logprob: -4.795767784118652
    5. '_token' → logprob: -5.045767784118652
    6. '_val' → logprob: -5.670767784118652
    7. '_term' → logprob: -5.670767784118652
    8. '_element' → logprob: -6.170767784118652
    9. 'val' → logprob: -6.670767784118652
    10. '_plus' → logprob: -6.670767784118652

Token 499: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6327310800552368
    2. '+' → logprob: -0.7577310800552368
    3. 'de' → logprob: -10.757731437683105
    4. ' plus' → logprob: -11.132731437683105
    5. '<|end|>' → logprob: -11.132731437683105
    6. ')' → logprob: -11.382731437683105
    7. ' ' → logprob: -11.507731437683105
    8. '+l' → logprob: -11.632731437683105
    9. 'plus' → logprob: -11.882731437683105
    10. '_' → logprob: -12.257731437683105

Token 500: ' dernier' (ID: 27982)
  Prédit: 'dern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dern' → logprob: -0.0021018448751419783
    2. ' dernier' → logprob: -6.252101898193359
    3. 'der' → logprob: -8.87710189819336
    4. 'le' → logprob: -11.62710189819336
    5. 'last' → logprob: -11.62710189819336
    6. ' ' → logprob: -12.50210189819336
    7. 'Dern' → logprob: -12.75210189819336
    8. ' (' → logprob: -13.12710189819336
    9. ' le' → logprob: -13.75210189819336
    10. 'd' → logprob: -13.75210189819336

Token 501: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.24900619685649872
    2. '_' → logprob: -1.7490061521530151
    3. ' élément' → logprob: -3.1240062713623047
    4. ' _' → logprob: -6.999006271362305
    5. '_element' → logprob: -7.999006271362305
    6. ')' → logprob: -7.999006271362305
    7. 'é' → logprob: -8.499006271362305
    8. 'element' → logprob: -8.749006271362305
    9. ' element' → logprob: -8.999006271362305
    10. 'él' → logprob: -8.999006271362305

Token 502: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017608561320230365
    2. ')/' → logprob: -7.001760959625244
    3. ' )' → logprob: -7.251760959625244
    4. 'élé' → logprob: -10.001760482788086
    5. 'element' → logprob: -10.501760482788086
    6. ')#' → logprob: -11.001760482788086
    7. ')//' → logprob: -11.126760482788086
    8. ' élément' → logprob: -11.376760482788086
    9. '))' → logprob: -12.626760482788086
    10. 'token' → logprob: -13.126760482788086

Token 503: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14017070829868317
    2. ' //' → logprob: -2.3901708126068115
    3. ' )' → logprob: -4.140170574188232
    4. '//' → logprob: -4.140170574188232
    5. '#' → logprob: -5.890170574188232
    6. ' /' → logprob: -6.515170574188232
    7. ')//' → logprob: -7.015170574188232
    8. ' ' → logprob: -7.390170574188232
    9. '/' → logprob: -8.26517105102539
    10. ' #' → logprob: -8.39017105102539

Token 504: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00014048899174667895
    2. ' ' → logprob: -8.875140190124512
    3. '1' → logprob: -15.375140190124512
    4. '```' → logprob: -15.500140190124512
    5. '
' → logprob: -16.750141143798828
    6. ' ' → logprob: -17.625141143798828
    7. '۲' → logprob: -17.625141143798828
    8. '   ' → logprob: -17.750141143798828
    9. '`' → logprob: -18.125141143798828
    10. '２' → logprob: -18.187641143798828

Token 505: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.849109119386412e-06
    2. ' ' → logprob: -12.000009536743164
    3. '1' → logprob: -12.625009536743164
    4. '```' → logprob: -16.500009536743164
    5. '۲' → logprob: -17.625009536743164
    6. '
' → logprob: -17.687509536743164
    7. '(' → logprob: -17.937509536743164
    8. '２' → logprob: -18.000009536743164
    9. '   ' → logprob: -18.000009536743164
    10. '=' → logprob: -18.437509536743164

Token 506: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1006743907928467
    2. ' =' → logprob: -1.3506743907928467
    3. ')' → logprob: -1.6006743907928467
    4. 's' → logprob: -2.9756743907928467
    5. '*' → logprob: -3.2256743907928467
    6. '
' → logprob: -3.7256743907928467
    7. '#' → logprob: -4.225674629211426
    8. ' 
' → logprob: -4.350674629211426
    9. ' ' → logprob: -4.475674629211426
    10. '_' → logprob: -4.600674629211426

Token 507: '#' (ID: 2)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.08337639272212982
    2. 's' → logprob: -3.583376407623291
    3. 'sum' → logprob: -3.708376407623291
    4. 'S' → logprob: -3.833376407623291
    5. 'result' → logprob: -5.958376407623291
    6. 'som' → logprob: -6.583376407623291
    7. 'Som' → logprob: -7.458376407623291
    8. 'tot' → logprob: -8.333375930786133
    9. ' total' → logprob: -8.708375930786133
    10. 'summ' → logprob: -8.708375930786133

Token 508: ' premier' (ID: 15506)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.10266198217868805
    2. 's' → logprob: -2.9776620864868164
    3. 'sum' → logprob: -3.8526620864868164
    4. 'S' → logprob: -3.9776620864868164
    5. 'result' → logprob: -5.602662086486816
    6. ' total' → logprob: -6.852662086486816
    7. 't' → logprob: -7.977662086486816
    8. 'som' → logprob: -7.977662086486816
    9. 'tot' → logprob: -8.477662086486816
    10. 'summ' → logprob: -8.477662086486816

Token 509: ' élément' (ID: 99627)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.18069970607757568
    2. 'élé' → logprob: -2.8056998252868652
    3. '=' → logprob: -3.0556998252868652
    4. ' _' → logprob: -4.055699825286865
    5. '_element' → logprob: -4.180699825286865
    6. ' =' → logprob: -4.680699825286865
    7. ' élément' → logprob: -4.680699825286865
    8. 'element' → logprob: -6.680699825286865
    9. '_=' → logprob: -6.805699825286865
    10. '+' → logprob: -7.305699825286865

Token 510: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8593935966491699
    2. '=' → logprob: -1.10939359664917
    3. ' +' → logprob: -1.98439359664917
    4. ' =' → logprob: -2.35939359664917
    5. '<|end|>' → logprob: -4.98439359664917
    6. ',' → logprob: -5.73439359664917
    7. '_' → logprob: -6.48439359664917
    8. ')' → logprob: -6.48439359664917
    9. '_plus' → logprob: -7.98439359664917
    10. ':' → logprob: -8.609394073486328

Token 511: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0005536287208087742
    2. ' L' → logprob: -7.500553607940674
    3. '	L' → logprob: -15.375554084777832
    4. '`' → logprob: -15.625554084777832
    5. '>L' → logprob: -16.125553131103516
    6. '(L' → logprob: -16.750553131103516
    7. ' ' → logprob: -16.750553131103516
    8. ' ' → logprob: -16.875553131103516
    9. '```' → logprob: -17.375553131103516
    10. '   ' → logprob: -17.375553131103516

Token 512: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3606862425804138
    2. ' +' → logprob: -1.2356863021850586
    3. ')' → logprob: -5.360686302185059
    4. ',' → logprob: -6.610686302185059
    5. '#' → logprob: -6.985686302185059
    6. '+(' → logprob: -7.360686302185059
    7. '+
' → logprob: -7.360686302185059
    8. '
' → logprob: -7.610686302185059
    9. ' )' → logprob: -7.610686302185059
    10. '*' → logprob: -7.610686302185059

Token 513: '#' (ID: 2)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5528516173362732
    2. '#' → logprob: -1.802851676940918
    3. 'last' → logprob: -2.427851676940918
    4. ')' → logprob: -3.552851676940918
    5. 'prem' → logprob: -3.677851676940918
    6. ' +' → logprob: -4.052851676940918
    7. 'total' → logprob: -4.052851676940918
    8. ' last' → logprob: -4.677851676940918
    9. ' )' → logprob: -4.802851676940918
    10. ' #' → logprob: -4.802851676940918

Token 514: ' dernier' (ID: 27982)
  Prédit: 'dern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dern' → logprob: -0.07016316801309586
    2. 'der' → logprob: -3.4451632499694824
    3. ' dernier' → logprob: -4.820163249969482
    4. '(L' → logprob: -4.945163249969482
    5. 'last' → logprob: -5.070163249969482
    6. '(N' → logprob: -5.570163249969482
    7. 'prem' → logprob: -5.570163249969482
    8. ' (' → logprob: -6.195163249969482
    9. '(' → logprob: -6.570163249969482
    10. '(last' → logprob: -7.320163249969482

Token 515: ' élément' (ID: 99627)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6051141023635864
    2. ' +' → logprob: -0.8551141023635864
    3. '_' → logprob: -3.855113983154297
    4. 'élé' → logprob: -5.355113983154297
    5. '=' → logprob: -7.230113983154297
    6. '_element' → logprob: -7.355113983154297
    7. ' élément' → logprob: -7.730113983154297
    8. 'element' → logprob: -7.855113983154297
    9. ' =' → logprob: -8.105113983154297
    10. '_plus' → logprob: -9.230113983154297

Token 516: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4770764112472534
    2. ' =' → logprob: -0.9770764112472534
    3. '+' → logprob: -6.102076530456543
    4. ' +' → logprob: -7.227076530456543
    5. ' ' → logprob: -12.352076530456543
    6. '+=' → logprob: -12.477076530456543
    7. ',' → logprob: -12.602076530456543
    8. ' +=' → logprob: -12.727076530456543
    9. ' ' → logprob: -12.852076530456543
    10. '_' → logprob: -13.227076530456543

Token 517: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.18034681677818298
    2. ' L' → logprob: -1.8053468465805054
    3. '(L' → logprob: -7.680346965789795
    4. ' (' → logprob: -8.930346488952637
    5. '`' → logprob: -13.555346488952637
    6. '(' → logprob: -13.555346488952637
    7. ' ' → logprob: -13.680346488952637
    8. '	L' → logprob: -14.180346488952637
    9. ' ' → logprob: -14.430346488952637
    10. '```' → logprob: -14.555346488952637

Token 518: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20141908526420593
    2. ' +' → logprob: -1.7014191150665283
    3. ' ' → logprob: -13.07641887664795
    4. '+(' → logprob: -13.57641887664795
    5. '+
' → logprob: -13.82641887664795
    6. '＋' → logprob: -14.82641887664795
    7. '+n' → logprob: -15.45141887664795
    8. ' ' → logprob: -15.57641887664795
    9. ' +
' → logprob: -15.57641887664795
    10. ' plus' → logprob: -16.201419830322266

Token 519: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.008660659193992615
    2. ' N' → logprob: -4.758660793304443
    3. '(N' → logprob: -10.508660316467285
    4. ' (' → logprob: -11.008660316467285
    5. '(' → logprob: -13.508660316467285
    6. ' ' → logprob: -14.633660316467285
    7. '	N' → logprob: -15.633660316467285
    8. '[N' → logprob: -16.8836612701416
    9. ' ' → logprob: -17.3836612701416
    10. '```' → logprob: -17.7586612701416

Token 520: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02325933612883091
    2. ' -' → logprob: -3.773259401321411
    3. 'N' → logprob: -11.398259162902832
    4. '-N' → logprob: -13.273259162902832
    5. '−' → logprob: -15.148259162902832
    6. '–' → logprob: -15.148259162902832
    7. ' ' → logprob: -15.898259162902832
    8. '#' → logprob: -16.14826011657715
    9. '```' → logprob: -16.64826011657715
    10. ' ' → logprob: -16.89826011657715

Token 521: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '<|end|>' → logprob: -18.625059127807617
    4. '```' → logprob: -20.500059127807617
    5. '2' → logprob: -21.125059127807617
    6. ' ' → logprob: -21.250059127807617
    7. '۱' → logprob: -21.625059127807617
    8. '
' → logprob: -22.000059127807617
    9. '  ' → logprob: -22.125059127807617
    10. '１' → logprob: -22.500059127807617

Token 522: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '<|end|>' → logprob: -17.25
    4. '```' → logprob: -18.25
    5. '   ' → logprob: -20.25
    6. '`' → logprob: -20.25
    7. '۱' → logprob: -20.3125
    8. '১' → logprob: -20.75
    9. '2' → logprob: -20.75
    10. '１' → logprob: -20.8125

Token 523: '
' (ID: 198)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.05755973234772682
    2. 'sum' → logprob: -3.5575597286224365
    3. 'S' → logprob: -4.057559967041016
    4. 's' → logprob: -4.682559967041016
    5. ' total' → logprob: -8.432559967041016
    6. 'result' → logprob: -8.807559967041016
    7. ')' → logprob: -9.182559967041016
    8. 'som' → logprob: -9.682559967041016
    9. 'tot' → logprob: -9.807559967041016
    10. 't' → logprob: -10.182559967041016

Token 524: '#' (ID: 2)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.020809877663850784
    2. 'S' → logprob: -4.645809650421143
    3. 'sum' → logprob: -5.020809650421143
    4. 's' → logprob: -5.520809650421143
    5. 'som' → logprob: -9.0208101272583
    6. 'tot' → logprob: -9.1458101272583
    7. 'result' → logprob: -10.2708101272583
    8. 'summ' → logprob: -10.5208101272583
    9. 'Som' → logprob: -10.7708101272583
    10. ' total' → logprob: -11.3958101272583

Token 525: ' donc' (ID: 14206)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.015980999916791916
    2. 'S' → logprob: -5.265981197357178
    3. 'sum' → logprob: -5.265981197357178
    4. 's' → logprob: -5.265981197357178
    5. 'result' → logprob: -9.39098072052002
    6. 'tot' → logprob: -9.39098072052002
    7. 'som' → logprob: -9.76598072052002
    8. 'summ' → logprob: -10.64098072052002
    9. 'ans' → logprob: -10.89098072052002
    10. 't' → logprob: -11.26598072052002

Token 526: ' Som' (ID: 12116)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.353536456823349
    2. ' total' → logprob: -2.103536367416382
    3. 'sum' → logprob: -2.353536367416382
    4. 's' → logprob: -3.228536367416382
    5. 'S' → logprob: -4.353536605834961
    6. ' sum' → logprob: -4.728536605834961
    7. ' somme' → logprob: -4.853536605834961
    8. 'som' → logprob: -5.728536605834961
    9. ' S' → logprob: -6.228536605834961
    10. 'result' → logprob: -6.853536605834961

Token 527: 'me' (ID: 1047)
  Prédit: 'me'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'me' → logprob: -0.013185645453631878
    2. 'e' → logprob: -5.263185501098633
    3. '=' → logprob: -6.013185501098633
    4. 'm' → logprob: -6.388185501098633
    5. '#' → logprob: -7.013185501098633
    6. '_sum' → logprob: -7.513185501098633
    7. '_' → logprob: -7.638185501098633
    8. 'sum' → logprob: -8.388185501098633
    9. 'mme' → logprob: -8.888185501098633
    10. ' =' → logprob: -8.888185501098633

Token 528: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2520264685153961
    2. ' =' → logprob: -1.5020264387130737
    3. '_total' → logprob: -10.127026557922363
    4. 'total' → logprob: -10.252026557922363
    5. '=N' → logprob: -11.502026557922363
    6. '＝' → logprob: -13.002026557922363
    7. '_' → logprob: -13.252026557922363
    8. 's' → logprob: -13.252026557922363
    9. 'tot' → logprob: -13.502026557922363
    10. '_tot' → logprob: -13.752026557922363

Token 529: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0024768433067947626
    2. ' N' → logprob: -6.002476692199707
    3. ' ' → logprob: -14.377476692199707
    4. '(N' → logprob: -15.502476692199707
    5. '	N' → logprob: -16.002477645874023
    6. '   ' → logprob: -16.377477645874023
    7. ' ' → logprob: -16.377477645874023
    8. ' (' → logprob: -17.002477645874023
    9. '  ' → logprob: -17.502477645874023
    10. '(' → logprob: -17.877477645874023

Token 530: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.04899994656443596
    2. '*' → logprob: -3.0490000247955322
    3. '_' → logprob: -8.923999786376953
    4. ' ' → logprob: -9.298999786376953
    5. '*(' → logprob: -9.798999786376953
    6. ')' → logprob: -10.173999786376953
    7. ',' → logprob: -10.673999786376953
    8. '#' → logprob: -10.798999786376953
    9. ' _' → logprob: -10.798999786376953
    10. '**' → logprob: -12.423999786376953

Token 531: ' (' (ID: 350)
  Prédit: '(L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.00022999993234407157
    2. '(' → logprob: -8.750229835510254
    3. ' (' → logprob: -9.750229835510254
    4. '((' → logprob: -11.250229835510254
    5. '(l' → logprob: -16.37523078918457
    6. '`' → logprob: -17.00023078918457
    7. '2' → logprob: -17.12523078918457
    8. '(T' → logprob: -17.37523078918457
    9. '```' → logprob: -18.25023078918457
    10. '*(' → logprob: -18.25023078918457

Token 532: 'L' (ID: 43)
  Prédit: '(L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.4743157923221588
    2. 'L' → logprob: -0.9743157625198364
    3. '(' → logprob: -8.724315643310547
    4. ' (' → logprob: -9.974315643310547
    5. '2' → logprob: -11.224315643310547
    6. ' L' → logprob: -11.474315643310547
    7. '((' → logprob: -13.349315643310547
    8. '(
' → logprob: -13.599315643310547
    9. '[L' → logprob: -14.349315643310547
    10. '	L' → logprob: -14.724315643310547

Token 533: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931660175323486
    2. ' +' → logprob: -0.6931660175323486
    3. ' ' → logprob: -12.06816577911377
    4. '*' → logprob: -12.06816577911377
    5. '+(' → logprob: -12.19316577911377
    6. ' +(' → logprob: -14.19316577911377
    7. '+
' → logprob: -15.06816577911377
    8. ' +
' → logprob: -15.31816577911377
    9. '```' → logprob: -15.56816577911377
    10. ' ' → logprob: -15.94316577911377

Token 534: ' (' (ID: 350)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.41098594665527344
    2. '(L' → logprob: -1.2859859466552734
    3. ' L' → logprob: -3.4109859466552734
    4. ' (' → logprob: -3.6609859466552734
    5. '(' → logprob: -6.285985946655273
    6. ' ' → logprob: -11.035985946655273
    7. '((' → logprob: -11.535985946655273
    8. ' ' → logprob: -11.910985946655273
    9. '(
' → logprob: -12.410985946655273
    10. '	L' → logprob: -12.910985946655273

Token 535: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.00043984793592244387
    2. ' L' → logprob: -7.750439643859863
    3. '(L' → logprob: -11.750439643859863
    4. ' (' → logprob: -13.875439643859863
    5. 'l' → logprob: -16.50044059753418
    6. '	L' → logprob: -16.62544059753418
    7. '(' → logprob: -17.25044059753418
    8. ' ' → logprob: -17.75044059753418
    9. '   ' → logprob: -18.43794059753418
    10. '`' → logprob: -18.75044059753418

Token 536: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.061967797577381134
    2. ' +' → logprob: -2.8119678497314453
    3. '+
' → logprob: -16.186967849731445
    4. ' ' → logprob: -17.186967849731445
    5. ' ' → logprob: -17.436967849731445
    6. '+n' → logprob: -17.561967849731445
    7. ' +
' → logprob: -17.811967849731445
    8. '＋' → logprob: -18.186967849731445
    9. 'N' → logprob: -18.311967849731445
    10. ' plus' → logprob: -18.936967849731445

Token 537: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.009768485091626644
    2. ' N' → logprob: -4.634768486022949
    3. '(N' → logprob: -12.25976848602295
    4. ' (' → logprob: -12.63476848602295
    5. '	N' → logprob: -13.25976848602295
    6. ' ' → logprob: -13.38476848602295
    7. '(' → logprob: -14.50976848602295
    8. '   ' → logprob: -15.25976848602295
    9. '[N' → logprob: -16.259767532348633
    10. '  ' → logprob: -16.634767532348633

Token 538: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.313262403011322
    2. '-' → logprob: -1.3132624626159668
    3. ' ' → logprob: -14.813261985778809
    4. '−' → logprob: -15.813261985778809
    5. ' ' → logprob: -16.563262939453125
    6. ')' → logprob: -17.688262939453125
    7. '1' → logprob: -18.313262939453125
    8. '–' → logprob: -18.438262939453125
    9. '
' → logprob: -18.563262939453125
    10. '```' → logprob: -18.688262939453125

Token 539: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001509150955826044
    2. ' ' → logprob: -6.501509189605713
    3. '-' → logprob: -12.501508712768555
    4. ' -' → logprob: -13.501508712768555
    5. ')' → logprob: -14.376508712768555
    6. '```' → logprob: -14.501508712768555
    7. '<|end|>' → logprob: -15.126508712768555
    8. '`' → logprob: -16.126508712768555
    9. '۱' → logprob: -17.064008712768555
    10. '
' → logprob: -17.189008712768555

Token 540: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.375004768371582
    3. '2' → logprob: -18.125003814697266
    4. '-' → logprob: -18.500003814697266
    5. '```' → logprob: -19.625003814697266
    6. '   ' → logprob: -20.125003814697266
    7. ')' → logprob: -20.875003814697266
    8. '3' → logprob: -21.375003814697266
    9. '4' → logprob: -21.750003814697266
    10. '	' → logprob: -22.000003814697266

Token 541: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.010068533942103386
    2. ')' → logprob: -4.635068416595459
    3. ' ))' → logprob: -8.135068893432617
    4. '))
' → logprob: -12.510068893432617
    5. ' )' → logprob: -12.885068893432617
    6. ')
' → logprob: -13.010068893432617
    7. ')//' → logprob: -13.135068893432617
    8. ''))' → logprob: -13.385068893432617
    9. ' ' → logprob: -13.385068893432617
    10. '"))' → logprob: -13.885068893432617

Token 542: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.17730368673801422
    2. ')' → logprob: -1.927303671836853
    3. ' )' → logprob: -4.677303791046143
    4. '//' → logprob: -5.177303791046143
    5. ' ' → logprob: -7.177303791046143
    6. ')//' → logprob: -7.427303791046143
    7. ' #' → logprob: -8.427303314208984
    8. '#' → logprob: -8.552303314208984
    9. ' *' → logprob: -9.552303314208984
    10. ' ' → logprob: -9.927303314208984

Token 543: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004307884373702109
    2. ' ' → logprob: -7.750430583953857
    3. '```' → logprob: -16.625431060791016
    4. '۲' → logprob: -17.500431060791016
    5. '1' → logprob: -17.562931060791016
    6. '２' → logprob: -18.062931060791016
    7. '   ' → logprob: -18.312931060791016
    8. '  ' → logprob: -19.062931060791016
    9. '
' → logprob: -19.062931060791016
    10. '٢' → logprob: -19.312931060791016

Token 544: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '```' → logprob: -17.625
    4. '۲' → logprob: -19.125
    5. '２' → logprob: -19.25
    6. '
' → logprob: -19.875
    7. '   ' → logprob: -20.1875
    8. '1' → logprob: -20.25
    9. '`' → logprob: -21.0625
    10. '٢' → logprob: -21.25

Token 545: ' =' (ID: 314)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.26291391253471375
    2. 's' → logprob: -2.012913942337036
    3. 'sum' → logprob: -2.762913942337036
    4. 'S' → logprob: -4.012913703918457
    5. 'result' → logprob: -4.637913703918457
    6. ' total' → logprob: -5.762913703918457
    7. '=' → logprob: -6.887913703918457
    8. ' =' → logprob: -7.012913703918457
    9. 'answer' → logprob: -8.262913703918457
    10. ')' → logprob: -8.512913703918457

Token 546: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.05490812286734581
    2. ' N' → logprob: -2.929908037185669
    3. ' (' → logprob: -11.42990779876709
    4. '(N' → logprob: -11.67990779876709
    5. ' ' → logprob: -13.05490779876709
    6. '   ' → logprob: -13.42990779876709
    7. '(' → logprob: -14.05490779876709
    8. 'n' → logprob: -14.55490779876709
    9. '2' → logprob: -14.80490779876709
    10. '	N' → logprob: -14.80490779876709

Token 547: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0305283572524786
    2. '*' → logprob: -3.5305283069610596
    3. ' ' → logprob: -7.655528545379639
    4. '*(' → logprob: -8.78052806854248
    5. '_' → logprob: -10.28052806854248
    6. '#' → logprob: -10.28052806854248
    7. ')' → logprob: -10.78052806854248
    8. ' _' → logprob: -11.15552806854248
    9. ' **' → logprob: -11.65552806854248
    10. ' ' → logprob: -12.03052806854248

Token 548: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001016375608742237
    2. ' (' → logprob: -7.126016139984131
    3. '((' → logprob: -8.626016616821289
    4. '(L' → logprob: -10.376016616821289
    5. '2' → logprob: -14.376016616821289
    6. ' ((' → logprob: -14.501016616821289
    7. '(
' → logprob: -16.00101661682129
    8. '(N' → logprob: -16.12601661682129
    9. ' ' → logprob: -16.75101661682129
    10. '```' → logprob: -17.62601661682129

Token 549: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11297968775033951
    2. '2' → logprob: -2.2379796504974365
    3. ' (' → logprob: -8.987979888916016
    4. '((' → logprob: -11.237979888916016
    5. '(L' → logprob: -11.862979888916016
    6. ' ' → logprob: -12.362979888916016
    7. '(
' → logprob: -12.612979888916016
    8. 'L' → logprob: -13.237979888916016
    9. '1' → logprob: -13.487979888916016
    10. ')' → logprob: -14.862979888916016

Token 550: 'L' (ID: 43)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0141762038692832
    2. ' *' → logprob: -4.264176368713379
    3. 'L' → logprob: -11.389176368713379
    4. '*l' → logprob: -13.639176368713379
    5. '**' → logprob: -16.389175415039062
    6. ' L' → logprob: -16.889175415039062
    7. '*(' → logprob: -16.889175415039062
    8. ' ' → logprob: -17.139175415039062
    9. ' ' → logprob: -17.514175415039062
    10. '*
' → logprob: -17.639175415039062

Token 551: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.251930296421051
    2. ' +' → logprob: -1.5019302368164062
    3. ' plus' → logprob: -15.501930236816406
    4. ' ' → logprob: -15.501930236816406
    5. ' ' → logprob: -15.751930236816406
    6. ' +
' → logprob: -15.876930236816406
    7. '＋' → logprob: -16.126930236816406
    8. '+
' → logprob: -16.251930236816406
    9. '+(' → logprob: -16.751930236816406
    10. ')' → logprob: -16.751930236816406

Token 552: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.015463359653949738
    2. ' N' → logprob: -4.265463352203369
    3. '(N' → logprob: -6.765463352203369
    4. ' (' → logprob: -9.015463829040527
    5. '(' → logprob: -10.640463829040527
    6. '	N' → logprob: -15.140463829040527
    7. ' ' → logprob: -15.890463829040527
    8. ' ' → logprob: -17.01546287536621
    9. '(
' → logprob: -17.39046287536621
    10. '   ' → logprob: -17.64046287536621

Token 553: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06995166093111038
    2. '-' → logprob: -2.6949517726898193
    3. ')' → logprob: -11.444952011108398
    4. ' ' → logprob: -12.569952011108398
    5. ' )' → logprob: -15.069952011108398
    6. ' ' → logprob: -15.694952011108398
    7. '1' → logprob: -15.694952011108398
    8. '```' → logprob: -16.0699520111084
    9. '`' → logprob: -16.6949520111084
    10. '−' → logprob: -17.2574520111084

Token 554: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009119403548538685
    2. ' ' → logprob: -7.000911712646484
    3. '-' → logprob: -14.875911712646484
    4. ' -' → logprob: -16.750911712646484
    5. '```' → logprob: -17.375911712646484
    6. '0' → logprob: -18.625911712646484
    7. '۱' → logprob: -18.875911712646484
    8. '2' → logprob: -18.875911712646484
    9. '<|end|>' → logprob: -18.875911712646484
    10. ')' → logprob: -19.000911712646484

Token 555: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.630610641877865e-06
    2. ' ' → logprob: -12.000006675720215
    3. '```' → logprob: -15.750006675720215
    4. '   ' → logprob: -16.6250057220459
    5. '0' → logprob: -17.1250057220459
    6. ')' → logprob: -17.5000057220459
    7. '`' → logprob: -17.5000057220459
    8. '<|end|>' → logprob: -17.6250057220459
    9. '-' → logprob: -18.0625057220459
    10. '۱' → logprob: -18.1250057220459

Token 556: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002746269339695573
    2. ' )' → logprob: -6.252746105194092
    3. ')//' → logprob: -7.127746105194092
    4. ')#' → logprob: -12.00274658203125
    5. '))' → logprob: -13.00274658203125
    6. '//' → logprob: -13.25274658203125
    7. ')`' → logprob: -13.87774658203125
    8. '#' → logprob: -13.87774658203125
    9. ')
' → logprob: -14.50274658203125
    10. '+' → logprob: -14.75274658203125

Token 557: ' //' (ID: 602)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.099214792251587
    2. 'total' → logprob: -1.224214792251587
    3. ')' → logprob: -1.849214792251587
    4. 's' → logprob: -1.849214792251587
    5. 'S' → logprob: -3.474214792251587
    6. '#' → logprob: -4.974214553833008
    7. 'result' → logprob: -5.224214553833008
    8. 'Som' → logprob: -6.099214553833008
    9. ' )' → logprob: -6.349214553833008
    10. ')
' → logprob: -6.849214553833008

Token 558: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '```' → logprob: -17.375036239624023
    4. '1' → logprob: -17.750036239624023
    5. '۲' → logprob: -18.500036239624023
    6. '   ' → logprob: -19.687536239624023
    7. '２' → logprob: -19.812536239624023
    8. '
' → logprob: -20.250036239624023
    9. '٢' → logprob: -20.562536239624023
    10. '<|end|>' → logprob: -20.625036239624023

Token 559: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '۲' → logprob: -18.25
    4. '```' → logprob: -19.5625
    5. '２' → logprob: -19.6875
    6. '   ' → logprob: -20.25
    7. '1' → logprob: -20.6875
    8. '২' → logprob: -20.875
    9. '२' → logprob: -20.9375
    10. '(' → logprob: -21.1875

Token 560: '
' (ID: 198)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.04265611246228218
    2. 'S' → logprob: -3.792656183242798
    3. 's' → logprob: -4.542655944824219
    4. 'sum' → logprob: -4.917655944824219
    5. 'result' → logprob: -7.417655944824219
    6. 'som' → logprob: -9.167655944824219
    7. 'tot' → logprob: -9.167655944824219
    8. 'ans' → logprob: -9.417655944824219
    9. 'answer' → logprob: -9.542655944824219
    10. 'summ' → logprob: -9.792655944824219

Token 561: 'Sum' (ID: 17434)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.03296494483947754
    2. 'S' → logprob: -3.9079649448394775
    3. 's' → logprob: -4.782964706420898
    4. 'sum' → logprob: -5.782964706420898
    5. 'result' → logprob: -7.907964706420898
    6. 'tot' → logprob: -9.157964706420898
    7. 'ans' → logprob: -9.282964706420898
    8. 'answer' → logprob: -9.907964706420898
    9. 'som' → logprob: -10.282964706420898
    10. 'summ' → logprob: -10.532964706420898

Token 562: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5396447777748108
    2. '=' → logprob: -0.9146447777748108
    3. '_' → logprob: -4.164644718170166
    4. '_=' → logprob: -7.789644718170166
    5. 's' → logprob: -8.164645195007324
    6. ' ' → logprob: -10.289645195007324
    7. ' ' → logprob: -10.664645195007324
    8. 'm' → logprob: -11.039645195007324
    9. '_total' → logprob: -11.164645195007324
    10. ')' → logprob: -11.789645195007324

Token 563: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.313269704580307
    2. ' N' → logprob: -1.3132697343826294
    3. ' ' → logprob: -12.18826961517334
    4. '	N' → logprob: -13.43826961517334
    5. ' (' → logprob: -14.81326961517334
    6. ' ' → logprob: -14.93826961517334
    7. '(N' → logprob: -15.18826961517334
    8. '   ' → logprob: -15.68826961517334
    9. '  ' → logprob: -15.81326961517334
    10. '```' → logprob: -17.563270568847656

Token 564: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.47410595417022705
    2. '*' → logprob: -0.974105954170227
    3. '*(' → logprob: -11.224105834960938
    4. ' ' → logprob: -11.724105834960938
    5. ' ' → logprob: -12.099105834960938
    6. '**' → logprob: -13.599105834960938
    7. ' **' → logprob: -15.724105834960938
    8. ' *
' → logprob: -16.349105834960938
    9. '	' → logprob: -16.974105834960938
    10. '*
' → logprob: -17.224105834960938

Token 565: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0026301154866814613
    2. ' (' → logprob: -6.002630233764648
    3. '(L' → logprob: -9.127630233764648
    4. '((' → logprob: -10.002630233764648
    5. ' ((' → logprob: -15.252630233764648
    6. '(
' → logprob: -16.25263023376465
    7. '（' → logprob: -16.75263023376465
    8. ' ' → logprob: -16.87763023376465
    9. '	' → logprob: -17.87763023376465
    10. '2' → logprob: -17.87763023376465

Token 566: 'N' (ID: 45)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6343710422515869
    2. '2' → logprob: -0.7593710422515869
    3. ' (' → logprob: -6.509370803833008
    4. ' ' → logprob: -8.634370803833008
    5. '(L' → logprob: -9.634370803833008
    6. 'L' → logprob: -10.759370803833008
    7. '(
' → logprob: -11.634370803833008
    8. '((' → logprob: -12.634370803833008
    9. '   ' → logprob: -13.509370803833008
    10. '  ' → logprob: -14.634370803833008

Token 567: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.44924432039260864
    2. ' +' → logprob: -1.0742442607879639
    3. '2' → logprob: -4.324244499206543
    4. '*' → logprob: -5.574244499206543
    5. '-' → logprob: -6.449244499206543
    6. ')' → logprob: -7.949244499206543
    7. '(' → logprob: -7.949244499206543
    8. ' -' → logprob: -8.199244499206543
    9. ' ' → logprob: -8.449244499206543
    10. ' *' → logprob: -9.074244499206543

Token 568: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04875609651207924
    2. '(' → logprob: -3.0487561225891113
    3. ' ' → logprob: -8.923755645751953
    4. ' (' → logprob: -10.298755645751953
    5. '((' → logprob: -14.673755645751953
    6. '   ' → logprob: -15.423755645751953
    7. '```' → logprob: -15.923755645751953
    8. '-' → logprob: -15.923755645751953
    9. '  ' → logprob: -16.173755645751953
    10. '(L' → logprob: -16.173755645751953

Token 569: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.10037574917078018
    2. '(' → logprob: -2.3503756523132324
    3. ' ' → logprob: -9.10037612915039
    4. ' (' → logprob: -9.85037612915039
    5. '(L' → logprob: -13.35037612915039
    6. '((' → logprob: -13.60037612915039
    7. 'L' → logprob: -14.35037612915039
    8. '   ' → logprob: -14.97537612915039
    9. '-' → logprob: -16.22537612915039
    10. '1' → logprob: -16.35037612915039

Token 570: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.008775289170444012
    2. ' *' → logprob: -4.883775234222412
    3. 'L' → logprob: -6.758775234222412
    4. '*(' → logprob: -11.88377571105957
    5. ' L' → logprob: -14.75877571105957
    6. '(L' → logprob: -14.88377571105957
    7. ' ' → logprob: -16.63377571105957
    8. '(*' → logprob: -17.13377571105957
    9. '*l' → logprob: -17.13377571105957
    10. ' ' → logprob: -17.38377571105957

Token 571: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.00023059594968799502
    2. ' L' → logprob: -8.37523078918457
    3. '(L' → logprob: -18.12523078918457
    4. '	L' → logprob: -18.37523078918457
    5. ' ' → logprob: -20.25023078918457
    6. '*' → logprob: -20.62523078918457
    7. '[L' → logprob: -21.25023078918457
    8. ' ' → logprob: -21.25023078918457
    9. ')L' → logprob: -21.25023078918457
    10. '   ' → logprob: -21.37523078918457

Token 572: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3484738767147064
    2. '-' → logprob: -1.2234739065170288
    3. ' ' → logprob: -10.84847354888916
    4. ')' → logprob: -11.84847354888916
    5. '```' → logprob: -14.09847354888916
    6. '   ' → logprob: -14.59847354888916
    7. ' ' → logprob: -14.97347354888916
    8. '−' → logprob: -15.47347354888916
    9. 's' → logprob: -15.72347354888916
    10. '_' → logprob: -15.72347354888916

Token 573: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '１' → logprob: -21.875001907348633
    4. '۱' → logprob: -21.875001907348633
    5. '   ' → logprob: -22.125001907348633
    6. '2' → logprob: -22.875001907348633
    7. '_' → logprob: -23.125001907348633
    8. '১' → logprob: -23.125001907348633
    9. ')' → logprob: -23.250001907348633
    10. '```' → logprob: -23.500001907348633

Token 574: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. ')' → logprob: -18.875003814697266
    4. '-' → logprob: -20.125003814697266
    5. '１' → logprob: -20.375003814697266
    6. '۱' → logprob: -20.500003814697266
    7. '```' → logprob: -20.625003814697266
    8. '   ' → logprob: -20.750003814697266
    9. '_' → logprob: -21.375003814697266
    10. '<|end|>' → logprob: -21.750003814697266

Token 575: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00038991993642412126
    2. ')//' → logprob: -8.37539005279541
    3. ' )' → logprob: -8.75039005279541
    4. '//' → logprob: -14.87539005279541
    5. ')#' → logprob: -15.87539005279541
    6. ')
' → logprob: -15.87539005279541
    7. '#' → logprob: -16.250389099121094
    8. '）' → logprob: -17.375389099121094
    9. ' //' → logprob: -17.625389099121094
    10. '))' → logprob: -18.125389099121094

Token 576: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.4312349557876587
    2. '//' → logprob: -1.0562349557876587
    3. ')' → logprob: -6.556234836578369
    4. '#' → logprob: -6.931234836578369
    5. ')//' → logprob: -9.931235313415527
    6. ' )' → logprob: -10.806235313415527
    7. '```' → logprob: -10.806235313415527
    8. ' ' → logprob: -11.181235313415527
    9. ' #' → logprob: -11.681235313415527
    10. '/' → logprob: -11.806235313415527

Token 577: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '۲' → logprob: -19.0
    4. '```' → logprob: -20.0
    5. '   ' → logprob: -20.125
    6. '２' → logprob: -20.4375
    7. '২' → logprob: -20.6875
    8. '.' → logprob: -20.875
    9. '२' → logprob: -21.0625
    10. '<|end|>' → logprob: -21.1875

Token 578: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ' ' → logprob: -18.5
    3. '۲' → logprob: -20.75
    4. '２' → logprob: -22.125
    5. '   ' → logprob: -22.375
    6. '২' → logprob: -22.625
    7. '```' → logprob: -22.625
    8. '२' → logprob: -23.0
    9. '₂' → logprob: -23.8125
    10. '٢' → logprob: -23.875

Token 579: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07342439889907837
    2. 'min' → logprob: -2.9484243392944336
    3. '#' → logprob: -4.323424339294434
    4. 'm' → logprob: -6.448424339294434
    5. '<|end|>' → logprob: -7.073424339294434
    6. 'minimum' → logprob: -7.948424339294434
    7. 'small' → logprob: -8.573424339294434
    8. 'prin' → logprob: -8.948424339294434
    9. 'x' → logprob: -9.073424339294434
    10. 'excluded' → logprob: -9.073424339294434

Token 580: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1015469878911972
    2. 'min' → logprob: -3.4765470027923584
    3. 'm' → logprob: -3.7265470027923584
    4. 'a' → logprob: -4.726546764373779
    5. '_' → logprob: -5.226546764373779
    6. '#' → logprob: -5.601546764373779
    7. 'excluded' → logprob: -5.851546764373779
    8. 'minimum' → logprob: -6.226546764373779
    9. ')' → logprob: -6.476546764373779
    10. 'x' → logprob: -6.726546764373779

Token 581: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.17629148066043854
    2. 'min' → logprob: -1.9262914657592773
    3. '#' → logprob: -5.676291465759277
    4. 'm' → logprob: -5.801291465759277
    5. 'Min' → logprob: -6.551291465759277
    6. 'minimum' → logprob: -6.926291465759277
    7. 'M' → logprob: -7.676291465759277
    8. 'minimal' → logprob: -7.801291465759277
    9. 'x' → logprob: -7.926291465759277
    10. 'ans' → logprob: -7.926291465759277

Token 582: ' va' (ID: 3423)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.9384234547615051
    2. ' =' → logprob: -1.3134233951568604
    3. '=' → logprob: -2.0634233951568604
    4. '#' → logprob: -3.4384233951568604
    5. 'r' → logprob: -3.4384233951568604
    6. '_' → logprob: -3.8134233951568604
    7. 'min' → logprob: -4.1884236335754395
    8. '-' → logprob: -4.3134236335754395
    9. 'pr' → logprob: -4.6884236335754395
    10. ' print' → logprob: -4.6884236335754395

Token 583: ' chercher' (ID: 79602)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.34225839376449585
    2. '#' → logprob: -1.4672584533691406
    3. 'for' → logprob: -3.7172584533691406
    4. ' print' → logprob: -4.717258453369141
    5. 'min' → logprob: -4.842258453369141
    6. ' #' → logprob: -5.842258453369141
    7. 'ret' → logprob: -5.842258453369141
    8. 'r' → logprob: -6.217258453369141
    9. 's' → logprob: -6.342258453369141
    10. ' for' → logprob: -6.717258453369141

Token 584: ' à' (ID: 1221)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0677164793014526
    2. '_' → logprob: -2.192716598510742
    3. ' ' → logprob: -2.317716598510742
    4. ' to' → logprob: -2.567716598510742
    5. 'to' → logprob: -2.692716598510742
    6. 'i' → logprob: -2.817716598510742
    7. ' a' → logprob: -2.817716598510742
    8. ' à' → logprob: -2.942716598510742
    9. 'à' → logprob: -3.567716598510742
    10. 't' → logprob: -4.192716598510742

Token 585: ' supprimer' (ID: 119553)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.06706822663545609
    2. 'ret' → logprob: -3.317068338394165
    3. 'en' → logprob: -4.692068099975586
    4. '#' → logprob: -5.442068099975586
    5. 'remove' → logprob: -6.317068099975586
    6. 'max' → logprob: -6.317068099975586
    7. 'ex' → logprob: -6.442068099975586
    8. ' enlever' → logprob: -6.567068099975586
    9. ' retirer' → logprob: -6.692068099975586
    10. 'tr' → logprob: -7.942068099975586

Token 586: ' du' (ID: 1462)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.2489254474639893
    2. ' le' → logprob: -1.7489254474639893
    3. ' un' → logprob: -1.7489254474639893
    4. 'l' → logprob: -2.1239254474639893
    5. 'un' → logprob: -2.6239254474639893
    6. 'the' → logprob: -2.8739254474639893
    7. ' l' → logprob: -3.6239254474639893
    8. 'one' → logprob: -3.8739254474639893
    9. ' one' → logprob: -4.12392520904541
    10. ' celui' → logprob: -4.24892520904541

Token 587: ' total' (ID: 3609)
  Prédit: 'Sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Sum' → logprob: -0.004491596482694149
    2. ' Sum' → logprob: -5.754491806030273
    3. 'S' → logprob: -7.754491806030273
    4. '_sum' → logprob: -7.879491806030273
    5. 'sum' → logprob: -8.629491806030273
    6. 'input' → logprob: -10.129491806030273
    7. 'range' → logprob: -10.254491806030273
    8. '#' → logprob: -10.379491806030273
    9. 'code' → logprob: -10.629491806030273
    10. 'Summ' → logprob: -10.754491806030273

Token 588: ' l' (ID: 305)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.1308002471923828
    2. 'element' → logprob: -1.8808002471923828
    3. 'one' → logprob: -2.630800247192383
    4. 'm' → logprob: -3.005800247192383
    5. 'val' → logprob: -3.005800247192383
    6. 'Min' → logprob: -3.755800247192383
    7. 'max' → logprob: -3.880800247192383
    8. 'sum' → logprob: -3.880800247192383
    9. 'the' → logprob: -4.130800247192383
    10. 'minimum' → logprob: -4.130800247192383

Token 589: ''' (ID: 6)
  Prédit: ''un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''un' → logprob: -0.5711801052093506
    2. ''' → logprob: -1.4461801052093506
    3. 'e' → logprob: -1.9461801052093506
    4. ''une' → logprob: -3.4461801052093506
    5. 'a' → logprob: -4.07118034362793
    6. ''ent' → logprob: -6.07118034362793
    7. '#' → logprob: -7.07118034362793
    8. ''e' → logprob: -7.19618034362793
    9. ''objet' → logprob: -7.44618034362793
    10. '’un' → logprob: -7.57118034362793

Token 590: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.17420080304145813
    2. 'minimum' → logprob: -2.2992007732391357
    3. 'min' → logprob: -3.7992007732391357
    4. 'ent' → logprob: -3.9242007732391357
    5. 'element' → logprob: -5.049201011657715
    6. 'nombre' → logprob: -5.424201011657715
    7. 'plus' → logprob: -6.424201011657715
    8. '#' → logprob: -6.674201011657715
    9. 'ter' → logprob: -6.924201011657715
    10. 'val' → logprob: -7.549201011657715

Token 591: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.04856034740805626
    2. 'ément' → logprob: -3.298560380935669
    3. 'ement' → logprob: -4.67356014251709
    4. 'ém' → logprob: -8.04856014251709
    5. 'em' → logprob: -8.79856014251709
    6. 'élé' → logprob: -8.79856014251709
    7. 'é' → logprob: -8.79856014251709
    8. '#' → logprob: -9.42356014251709
    9. 'lement' → logprob: -9.54856014251709
    10. 'ments' → logprob: -10.04856014251709

Token 592: ' dont' (ID: 11562)
  Prédit: 'qui'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'qui' → logprob: -0.16534923017024994
    2. 'à' → logprob: -3.040349245071411
    3. 'dont' → logprob: -3.415349245071411
    4. 'ayant' → logprob: -3.790349245071411
    5. 'le' → logprob: -4.040349006652832
    6. '#' → logprob: -5.165349006652832
    7. 'val' → logprob: -5.540349006652832
    8. 'a' → logprob: -5.665349006652832
    9. 'closest' → logprob: -5.665349006652832
    10. ' qui' → logprob: -6.290349006652832

Token 593: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.015752198174595833
    2. 'l' → logprob: -4.26575231552124
    3. ' la' → logprob: -7.64075231552124
    4. 'le' → logprob: -7.76575231552124
    5. 'abs' → logprob: -8.140751838684082
    6. 'val' → logprob: -8.390751838684082
    7. '#' → logprob: -9.765751838684082
    8. ' l' → logprob: -10.515751838684082
    9. 'les' → logprob: -11.515751838684082
    10. 't' → logprob: -11.515751838684082

Token 594: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0553726926445961
    2. 'abs' → logprob: -3.805372714996338
    3. 'ab' → logprob: -3.930372714996338
    4. 'module' → logprob: -4.805372714996338
    5. '#' → logprob: -7.555372714996338
    6. 'absolute' → logprob: -7.805372714996338
    7. 'va' → logprob: -7.930372714996338
    8. '|' → logprob: -7.930372714996338
    9. 'vale' → logprob: -8.05537223815918
    10. 'la' → logprob: -8.80537223815918

Token 595: ' absol' (ID: 7374)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.8256385326385498
    2. 'a' → logprob: -1.3256385326385498
    3. 'abs' → logprob: -1.7006385326385498
    4. 'la' → logprob: -3.07563853263855
    5. 'absolute' → logprob: -4.325638771057129
    6. 'closest' → logprob: -4.700638771057129
    7. '#' → logprob: -4.950638771057129
    8. ' est' → logprob: -5.200638771057129
    9. 's' → logprob: -5.325638771057129
    10. 'qui' → logprob: -5.450638771057129

Token 596: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.23956510424613953
    2. 'ute' → logprob: -2.239565134048462
    3. 'ol' → logprob: -2.739565134048462
    4. 'u' → logprob: -4.239564895629883
    5. 'ut' → logprob: -4.864564895629883
    6. 'Sum' → logprob: -5.239564895629883
    7. 'e' → logprob: -5.864564895629883
    8. 'oute' → logprob: -5.864564895629883
    9. '(S' → logprob: -6.239564895629883
    10. 'ulte' → logprob: -6.489564895629883

Token 597: ' est' (ID: 893)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.7373107075691223
    2. '#' → logprob: -1.3623106479644775
    3. ' est' → logprob: -1.3623106479644775
    4. '<|end|>' → logprob: -5.362310886383057
    5. ' #' → logprob: -6.487310886383057
    6. ')' → logprob: -7.237310886383057
    7. 's' → logprob: -7.987310886383057
    8. 'is' → logprob: -8.487310409545898
    9. 'la' → logprob: -8.612310409545898
    10. ''est' → logprob: -8.612310409545898

Token 598: ' minimale' (ID: 143217)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.35617899894714355
    2. ' la' → logprob: -1.4811789989471436
    3. 'le' → logprob: -2.9811789989471436
    4. ' minimale' → logprob: -4.481179237365723
    5. 'minimum' → logprob: -5.981179237365723
    6. ' le' → logprob: -6.106179237365723
    7. 'min' → logprob: -6.356179237365723
    8. ' minimal' → logprob: -6.606179237365723
    9. 'minimal' → logprob: -6.731179237365723
    10. ' minimum' → logprob: -7.981179237365723

Token 599: ' (' (ID: 350)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.06873587518930435
    2. 'abs' → logprob: -3.3187358379364014
    3. 'idx' → logprob: -5.4437360763549805
    4. 'pos' → logprob: -5.6937360763549805
    5. 'closest' → logprob: -5.6937360763549805
    6. '#' → logprob: -5.8187360763549805
    7. 'val' → logprob: -5.9437360763549805
    8. 'index' → logprob: -6.3187360763549805
    9. 'minimum' → logprob: -6.4437360763549805
    10. 'Min' → logprob: -6.5687360763549805

Token 600: 'le' (ID: 282)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1706322729587555
    2. ' )' → logprob: -2.7956323623657227
    3. 'abs' → logprob: -2.9206323623657227
    4. 'min' → logprob: -4.045632362365723
    5. ').' → logprob: -4.545632362365723
    6. '#' → logprob: -5.545632362365723
    7. ' abs' → logprob: -6.670632362365723
    8. 'minimum' → logprob: -6.670632362365723
    9. 'closest' → logprob: -6.920632362365723
    10. 'val' → logprob: -7.045632362365723

Token 601: ' plus' (ID: 2932)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.3393927216529846
    2. 'val' → logprob: -2.83939266204834
    3. 'min' → logprob: -2.96439266204834
    4. 'minimum' → logprob: -3.33939266204834
    5. 'a' → logprob: -3.71439266204834
    6. ')' → logprob: -3.71439266204834
    7. 'Sum' → logprob: -3.83939266204834
    8. 'x' → logprob: -4.71439266204834
    9. '#' → logprob: -5.08939266204834
    10. 'element' → logprob: -5.21439266204834

Token 602: ' petit' (ID: 20577)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.016624614596366882
    2. 'pet' → logprob: -5.516624450683594
    3. '```' → logprob: -5.516624450683594
    4. 'près' → logprob: -5.891624450683594
    5. 'é' → logprob: -6.391624450683594
    6. 'grand' → logprob: -6.641624450683594
    7. 'L' → logprob: -7.391624450683594
    8. 'abs' → logprob: -7.766624450683594
    9. ')' → logprob: -8.641624450683594
    10. '#' → logprob: -8.766624450683594

Token 603: ' en' (ID: 469)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1469547003507614
    2. 'en' → logprob: -2.6469547748565674
    3. 'e' → logprob: -3.3969547748565674
    4. 'absolute' → logprob: -4.771954536437988
    5. 'é' → logprob: -5.521954536437988
    6. ' )' → logprob: -5.646954536437988
    7. ' absolute' → logprob: -6.021954536437988
    8. '<|end|>' → logprob: -6.146954536437988
    9. 'abs' → logprob: -6.396954536437988
    10. 'à' → logprob: -6.521954536437988

Token 604: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.5109986662864685
    2. ' valeur' → logprob: -1.7609987258911133
    3. 'abs' → logprob: -2.2609987258911133
    4. ')' → logprob: -3.3859987258911133
    5. 'value' → logprob: -3.8859987258911133
    6. ' ' → logprob: -4.135998725891113
    7. '_' → logprob: -4.885998725891113
    8. ' value' → logprob: -5.260998725891113
    9. ' )' → logprob: -5.510998725891113
    10. '_val' → logprob: -5.510998725891113

Token 605: ' absol' (ID: 7374)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.46130120754241943
    2. 'ab' → logprob: -1.0863012075424194
    3. '),' → logprob: -4.461301326751709
    4. 'en' → logprob: -4.711301326751709
    5. 'abs' → logprob: -5.961301326751709
    6. ').' → logprob: -5.961301326751709
    7. 'absolute' → logprob: -6.961301326751709
    8. '#' → logprob: -6.961301326751709
    9. 'Ab' → logprob: -7.086301326751709
    10. 'possible' → logprob: -7.586301326751709

Token 606: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.01651451550424099
    2. 'u' → logprob: -4.141514301300049
    3. 'e' → logprob: -8.516514778137207
    4. 'ute' → logprob: -8.891514778137207
    5. 'ut' → logprob: -9.641514778137207
    6. 'ol' → logprob: -10.891514778137207
    7. 'ule' → logprob: -11.391514778137207
    8. 'ul' → logprob: -11.641514778137207
    9. 'ur' → logprob: -12.141514778137207
    10. 'value' → logprob: -12.266514778137207

Token 607: ').
' (ID: 6294)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ').' → logprob: -0.6546849608421326
    2. ')' → logprob: -0.7796849608421326
    3. '),' → logprob: -4.029685020446777
    4. ' )' → logprob: -6.654685020446777
    5. ' ).' → logprob: -7.279685020446777
    6. '#' → logprob: -7.654685020446777
    7. 'possible' → logprob: -8.279685020446777
    8. 'abs' → logprob: -8.279685020446777
    9. 'val' → logprob: -8.404685020446777
    10. ').
' → logprob: -8.779685020446777

Token 608: '#' (ID: 2)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.21973328292369843
    2. 'abs' → logprob: -2.594733238220215
    3. '#' → logprob: -4.094733238220215
    4. 'to' → logprob: -4.219733238220215
    5. 'if' → logprob: -4.219733238220215
    6. 'ans' → logprob: -4.344733238220215
    7. 'val' → logprob: -4.344733238220215
    8. 'closest' → logprob: -4.594733238220215
    9. 'remove' → logprob: -5.094733238220215
    10. 'minimum' → logprob: -5.469733238220215

Token 609: ' Cela' (ID: 44403)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.13376308977603912
    2. 'abs' → logprob: -3.258763074874878
    3. 'ans' → logprob: -4.133763313293457
    4. 'mini' → logprob: -4.508763313293457
    5. 'val' → logprob: -4.883763313293457
    6. 'm' → logprob: -5.133763313293457
    7. 'minimum' → logprob: -5.133763313293457
    8. '#' → logprob: -5.258763313293457
    9. 'minimal' → logprob: -5.383763313293457
    10. 'answer' → logprob: -5.508763313293457

Token 610: ' correspond' (ID: 11095)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.4692744016647339
    2. 'abs' → logprob: -1.3442744016647339
    3. '#' → logprob: -3.3442745208740234
    4. 'val' → logprob: -3.3442745208740234
    5. ' abs' → logprob: -4.969274520874023
    6. ' min' → logprob: -5.344274520874023
    7. 'minimum' → logprob: -5.469274520874023
    8. 'a' → logprob: -5.594274520874023
    9. 'minimal' → logprob: -5.594274520874023
    10. 'm' → logprob: -5.719274520874023

Token 611: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.38104718923568726
    2. 'à' → logprob: -1.506047248840332
    3. ' au' → logprob: -3.006047248840332
    4. 'au' → logprob: -3.631047248840332
    5. ' a' → logprob: -4.756047248840332
    6. 'a' → logprob: -5.506047248840332
    7. ' to' → logprob: -5.881047248840332
    8. 'to' → logprob: -6.381047248840332
    9. '   ' → logprob: -8.131047248840332
    10. ''à' → logprob: -8.256047248840332

Token 612: ' la' (ID: 557)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.1724988967180252
    2. 'abs' → logprob: -2.172498941421509
    3. 'val' → logprob: -4.04749870300293
    4. 'la' → logprob: -5.17249870300293
    5. 'l' → logprob: -5.92249870300293
    6. 'ret' → logprob: -6.17249870300293
    7. 'un' → logprob: -6.29749870300293
    8. 'max' → logprob: -6.29749870300293
    9. '#' → logprob: -6.54749870300293
    10. 'L' → logprob: -6.92249870300293

Token 613: ' cons' (ID: 1473)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.023109085857868195
    2. 'abs' → logprob: -4.023108959197998
    3. 'minimum' → logprob: -6.523108959197998
    4. 'val' → logprob: -7.148108959197998
    5. 'minimal' → logprob: -8.148109436035156
    6. 'sum' → logprob: -8.523109436035156
    7. 'max' → logprob: -8.523109436035156
    8. 'index' → logprob: -8.523109436035156
    9. 'element' → logprob: -8.648109436035156
    10. 'elem' → logprob: -9.023109436035156

Token 614: 'igne' (ID: 24120)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.673128366470337
    2. 'u' → logprob: -2.173128366470337
    3. 't' → logprob: -2.298128366470337
    4. 'omm' → logprob: -2.423128366470337
    5. 'Sum' → logprob: -3.048128366470337
    6. 'truction' → logprob: -3.048128366470337
    7. 'é' → logprob: -3.173128366470337
    8. 'e' → logprob: -3.298128366470337
    9. 'igne' → logprob: -3.298128366470337
    10. 'om' → logprob: -3.298128366470337

Token 615: ' typ' (ID: 5378)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.130666971206665
    2. 'min' → logprob: -1.255666971206665
    3. 'abs' → logprob: -1.505666971206665
    4. 'a' → logprob: -3.630666971206665
    5. 'val' → logprob: -3.880666971206665
    6. 'closest' → logprob: -4.005666732788086
    7. 'minimal' → logprob: -4.505666732788086
    8. 'm' → logprob: -4.630666732788086
    9. 'possible' → logprob: -4.755666732788086
    10. 'c' → logprob: -5.005666732788086

Token 616: 'ique' (ID: 2222)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6903161406517029
    2. '#' → logprob: -2.1903162002563477
    3. 'que' → logprob: -2.1903162002563477
    4. 'ique' → logprob: -2.4403162002563477
    5. 'é' → logprob: -3.5653162002563477
    6. 'ée' → logprob: -3.6903162002563477
    7. 'ète' → logprob: -4.315316200256348
    8. 'è' → logprob: -4.315316200256348
    9. 'ème' → logprob: -4.815316200256348
    10. 'ément' → logprob: -5.065316200256348

Token 617: ' de' (ID: 334)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0466378927230835
    2. 'abs' → logprob: -1.5466378927230835
    3. 'd' → logprob: -1.9216378927230835
    4. 'val' → logprob: -2.546638011932373
    5. 'du' → logprob: -2.671638011932373
    6. 'min' → logprob: -3.421638011932373
    7. 'de' → logprob: -3.921638011932373
    8. 'pos' → logprob: -4.296638011932373
    9. 'for' → logprob: -4.546638011932373
    10. 'pour' → logprob: -4.546638011932373

Token 618: ' certains' (ID: 30681)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.2383055686950684
    2. 'la' → logprob: -1.2383055686950684
    3. '#' → logprob: -2.2383055686950684
    4. 'abs' → logprob: -2.4883055686950684
    5. 'pro' → logprob: -2.6133055686950684
    6. 'l' → logprob: -3.4883055686950684
    7. 'max' → logprob: -3.6133055686950684
    8. 'le' → logprob: -3.6133055686950684
    9. 'sum' → logprob: -4.363305568695068
    10. 'val' → logprob: -4.988305568695068

Token 619: ' problèmes' (ID: 49822)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.9688317179679871
    2. ' problèmes' → logprob: -1.4688317775726318
    3. 'conc' → logprob: -1.7188317775726318
    4. ' concours' → logprob: -2.093831777572632
    5. 'proble' → logprob: -4.218831539154053
    6. ' probl' → logprob: -4.343831539154053
    7. 'codes' → logprob: -4.593831539154053
    8. ' proble' → logprob: -4.843831539154053
    9. '#' → logprob: -4.843831539154053
    10. 'program' → logprob: -5.468831539154053

Token 620: ' de' (ID: 334)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.21624374389648438
    2. '#' → logprob: -2.7162437438964844
    3. 'abs' → logprob: -2.7162437438964844
    4. 'val' → logprob: -4.591243743896484
    5. 'minimum' → logprob: -4.591243743896484
    6. 'for' → logprob: -4.841243743896484
    7. 'closest' → logprob: -5.341243743896484
    8. 'A' → logprob: -5.716243743896484
    9. 'i' → logprob: -5.841243743896484
    10. 'a' → logprob: -5.966243743896484

Token 621: ' programmation' (ID: 166376)
  Prédit: 'programm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'programm' → logprob: -0.7586556077003479
    2. 'programme' → logprob: -1.8836555480957031
    3. 'conc' → logprob: -2.008655548095703
    4. 'la' → logprob: -2.383655548095703
    5. 'program' → logprob: -3.008655548095703
    6. 'code' → logprob: -4.008655548095703
    7. 'l' → logprob: -4.008655548095703
    8. 'le' → logprob: -4.758655548095703
    9. 'pro' → logprob: -4.758655548095703
    10. '#' → logprob: -4.758655548095703

Token 622: ',' (ID: 11)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.290515273809433
    2. 'abs' → logprob: -1.7905153036117554
    3. '#' → logprob: -3.790515184402466
    4. 'val' → logprob: -4.540515422821045
    5. 'minimum' → logprob: -4.915515422821045
    6. 'for' → logprob: -5.165515422821045
    7. 'closest' → logprob: -5.165515422821045
    8. 'a' → logprob: -5.165515422821045
    9. 'A' → logprob: -5.415515422821045
    10. 'minimal' → logprob: -5.790515422821045

Token 623: ' où' (ID: 15113)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.2452065348625183
    2. 'abs' → logprob: -2.120206594467163
    3. '#' → logprob: -2.745206594467163
    4. 'val' → logprob: -4.870206356048584
    5. 'Min' → logprob: -4.870206356048584
    6. 'idx' → logprob: -5.745206356048584
    7. 'closest' → logprob: -5.870206356048584
    8. 'minimal' → logprob: -6.120206356048584
    9. 'minimum' → logprob: -6.370206356048584
    10. 'ans' → logprob: -6.870206356048584

Token 624: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.6648104190826416
    2. 'abs' → logprob: -0.9148104190826416
    3. 'val' → logprob: -3.0398104190826416
    4. '#' → logprob: -4.6648101806640625
    5. 'min' → logprob: -4.9148101806640625
    6. 'for' → logprob: -5.4148101806640625
    7. 'le' → logprob: -5.7898101806640625
    8. 'élé' → logprob: -6.6648101806640625
    9. ' on' → logprob: -6.6648101806640625
    10. 'i' → logprob: -6.7898101806640625

Token 625: ' doit' (ID: 21822)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.8952191472053528
    2. 'do' → logprob: -1.270219087600708
    3. '#' → logprob: -2.395219087600708
    4. 'ret' → logprob: -2.395219087600708
    5. 'dev' → logprob: -3.770219087600708
    6. 'sup' → logprob: -4.395219326019287
    7. 'remove' → logprob: -4.520219326019287
    8. 'min' → logprob: -4.770219326019287
    9. 'pe' → logprob: -4.770219326019287
    10. 'v' → logprob: -4.895219326019287

Token 626: ' retirer' (ID: 136490)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.6779865026473999
    2. 'sup' → logprob: -1.1779865026474
    3. 'ex' → logprob: -2.9279866218566895
    4. 'en' → logprob: -3.1779866218566895
    5. 'remove' → logprob: -3.6779866218566895
    6. '#' → logprob: -4.0529866218566895
    7. 'sou' → logprob: -5.0529866218566895
    8. 'exclude' → logprob: -5.1779866218566895
    9. ' retirer' → logprob: -5.5529866218566895
    10. 'print' → logprob: -5.5529866218566895

Token 627: ',' (ID: 11)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.14281053841114044
    2. 'min' → logprob: -2.142810583114624
    3. 'un' → logprob: -5.392810344696045
    4. 'l' → logprob: -5.642810344696045
    5. 'le' → logprob: -5.642810344696045
    6. 'la' → logprob: -6.017810344696045
    7. 'une' → logprob: -8.017810821533203
    8. ' abs' → logprob: -8.267810821533203
    9. ' min' → logprob: -8.642810821533203
    10. '#' → logprob: -8.892810821533203

Token 628: ' par' (ID: 686)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.025029057636857033
    2. 'val' → logprob: -5.025029182434082
    3. ' abs' → logprob: -5.275029182434082
    4. 'min' → logprob: -5.650029182434082
    5. 'sum' → logprob: -5.650029182434082
    6. 'le' → logprob: -7.150029182434082
    7. 'value' → logprob: -7.150029182434082
    8. 'x' → logprob: -7.525029182434082
    9. '```' → logprob: -8.025029182434082
    10. 'a' → logprob: -8.275029182434082

Token 629: ' exemple' (ID: 26320)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.30748334527015686
    2. 'mis' → logprob: -1.8074833154678345
    3. 'mi' → logprob: -3.432483434677124
    4. '#' → logprob: -3.807483434677124
    5. 'min' → logprob: -4.182483196258545
    6. 'val' → logprob: -5.057483196258545
    7. 'la' → logprob: -6.057483196258545
    8. '```' → logprob: -6.057483196258545
    9. 'sum' → logprob: -6.182483196258545
    10. 'ex' → logprob: -6.557483196258545

Token 630: ',' (ID: 11)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.258927583694458
    2. ' au' → logprob: -1.883927583694458
    3. 'à' → logprob: -3.508927583694458
    4. ' la' → logprob: -4.258927345275879
    5. '#' → logprob: -5.008927345275879
    6. 'au' → logprob: -5.508927345275879
    7. ' a' → logprob: -5.508927345275879
    8. ')' → logprob: -5.758927345275879
    9. ' aux' → logprob: -6.133927345275879
    10. ' abs' → logprob: -6.133927345275879

Token 631: ' le' (ID: 505)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.8761579990386963
    2. ' l' → logprob: -1.7511579990386963
    3. 'abs' → logprob: -2.2511579990386963
    4. 'le' → logprob: -2.5011579990386963
    5. ' la' → logprob: -2.6261579990386963
    6. 'la' → logprob: -3.3761579990386963
    7. 'un' → logprob: -3.5011579990386963
    8. ' un' → logprob: -3.6261579990386963
    9. ' abs' → logprob: -3.8761579990386963
    10. ' le' → logprob: -4.001157760620117

Token 632: ' "' (ID: 392)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.04581599310040474
    2. 'nombre' → logprob: -3.920815944671631
    3. 'element' → logprob: -4.045815944671631
    4. 'min' → logprob: -6.420815944671631
    5. 'val' → logprob: -6.795815944671631
    6. '#' → logprob: -6.920815944671631
    7. 'minimum' → logprob: -6.920815944671631
    8. 'ter' → logprob: -7.795815944671631
    9. 'abs' → logprob: -8.295816421508789
    10. 'é' → logprob: -8.420816421508789

Token 633: 'fruit' (ID: 104717)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.040376655757427216
    2. 'element' → logprob: -4.290376663208008
    3. 'min' → logprob: -5.165376663208008
    4. 'nombre' → logprob: -5.665376663208008
    5. 'val' → logprob: -5.915376663208008
    6. 'minimum' → logprob: -5.915376663208008
    7. 'abs' → logprob: -6.165376663208008
    8. 'print' → logprob: -6.540376663208008
    9. 'plus' → logprob: -6.790376663208008
    10. 'num' → logprob: -7.165376663208008

Token 634: '"' (ID: 1)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 635: ' au' (ID: 2791)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5860061049461365
    2. 'abs' → logprob: -2.3360061645507812
    3. ')' → logprob: -2.8360061645507812
    4. 'for' → logprob: -3.2110061645507812
    5. 'closest' → logprob: -3.5860061645507812
    6. 'min' → logprob: -3.8360061645507812
    7. '_' → logprob: -4.336006164550781
    8. 'with' → logprob: -4.336006164550781
    9. 'to' → logprob: -4.336006164550781
    10. '#' → logprob: -4.336006164550781

Token 636: ' goût' (ID: 76414)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.7104566097259521
    2. 'minimum' → logprob: -1.4604566097259521
    3. 'val' → logprob: -2.335456609725952
    4. 'sens' → logprob: -2.710456609725952
    5. 'mil' → logprob: -3.585456609725952
    6. 'abs' → logprob: -3.585456609725952
    7. 'niveau' → logprob: -4.460456848144531
    8. 'maximum' → logprob: -4.960456848144531
    9. 'min' → logprob: -5.835456848144531
    10. 'score' → logprob: -5.960456848144531

Token 637: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.1652376651763916
    2. ' le' → logprob: -1.9152376651763916
    3. 'm' → logprob: -6.6652374267578125
    4. 'plus' → logprob: -6.9152374267578125
    5. 'su' → logprob: -7.4152374267578125
    6. 's' → logprob: -7.6652374267578125
    7. 'moins' → logprob: -8.290237426757812
    8. '```' → logprob: -8.665237426757812
    9. 'd' → logprob: -8.915237426757812
    10. 'ac' → logprob: -9.040237426757812

Token 638: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.004828107077628374
    2. ' plus' → logprob: -5.379827976226807
    3. '+' → logprob: -9.379828453063965
    4. 'Plus' → logprob: -10.504828453063965
    5. '-plus' → logprob: -10.629828453063965
    6. 'moins' → logprob: -10.754828453063965
    7. 'p' → logprob: -11.004828453063965
    8. '_plus' → logprob: -11.504828453063965
    9. 'm' → logprob: -11.629828453063965
    10. 'pl' → logprob: -12.379828453063965

Token 639: ' neut' (ID: 18541)
  Prédit: 'fort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fort' → logprob: -0.7673158049583435
    2. 'pro' → logprob: -1.5173158645629883
    3. 'm' → logprob: -1.8923158645629883
    4. '```' → logprob: -3.0173158645629883
    5. 'd' → logprob: -3.2673158645629883
    6. 'fa' → logprob: -4.142315864562988
    7. 'lé' → logprob: -5.017315864562988
    8. 'su' → logprob: -5.392315864562988
    9. 'près' → logprob: -5.517315864562988
    10. 'é' → logprob: -5.517315864562988

Token 640: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.46629059314727783
    2. 'rale' → logprob: -1.3412905931472778
    3. 'ral' → logprob: -2.3412904739379883
    4. 'r' → logprob: -4.466290473937988
    5. 'ra' → logprob: -5.966290473937988
    6. 'e' → logprob: -7.966290473937988
    7. 'rel' → logprob: -8.966290473937988
    8. 'ro' → logprob: -9.966290473937988
    9. ' ral' → logprob: -9.966290473937988
    10. 'al' → logprob: -10.216290473937988

Token 641: '.

' (ID: 364)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7334342002868652
    2. 'abs' → logprob: -1.3584342002868652
    3. '.' → logprob: -1.6084342002868652
    4. '#' → logprob: -3.7334342002868652
    5. 'a' → logprob: -4.733434200286865
    6. 'e' → logprob: -5.108434200286865
    7. ' )' → logprob: -5.858434200286865
    8. 'au' → logprob: -5.983434200286865
    9. 'possible' → logprob: -6.108434200286865
    10. ',' → logprob: -6.483434200286865

Token 642: '#' (ID: 2)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.43266424536705017
    2. 'if' → logprob: -1.4326642751693726
    3. '#' → logprob: -3.807664155960083
    4. 'abs' → logprob: -3.807664155960083
    5. 'for' → logprob: -4.182664394378662
    6. 'minimal' → logprob: -4.182664394378662
    7. 'm' → logprob: -4.807664394378662
    8. 'closest' → logprob: -5.307664394378662
    9. 'minimum' → logprob: -5.307664394378662
    10. 'ans' → logprob: -5.932664394378662

Token 643: ' Si' (ID: 7832)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.2775081992149353
    2. 'abs' → logprob: -2.15250825881958
    3. 'ans' → logprob: -3.40250825881958
    4. 'minimal' → logprob: -4.27750825881958
    5. '#' → logprob: -4.52750825881958
    6. 'minimum' → logprob: -4.65250825881958
    7. 'closest' → logprob: -4.77750825881958
    8. 'mn' → logprob: -5.02750825881958
    9. 'mini' → logprob: -5.15250825881958
    10. 'answer' → logprob: -5.52750825881958

Token 644: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.3534805476665497
    2. 'N' → logprob: -1.978480577468872
    3. 'abs' → logprob: -2.103480577468872
    4. ' abs' → logprob: -4.103480339050293
    5. ' L' → logprob: -4.353480339050293
    6. ' N' → logprob: -6.103480339050293
    7. 'Abs' → logprob: -6.103480339050293
    8. '__' → logprob: -6.853480339050293
    9. '_abs' → logprob: -7.728480339050293
    10. '(abs' → logprob: -7.978480339050293

Token 645: ' >' (ID: 1424)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -1.2515087127685547
    2. '<=' → logprob: -1.2515087127685547
    3. '>=' → logprob: -1.5015087127685547
    4. ' <=' → logprob: -2.7515087127685547
    5. ' <' → logprob: -2.8765087127685547
    6. ' >=' → logprob: -3.2515087127685547
    7. '>' → logprob: -3.3765087127685547
    8. ' >' → logprob: -5.001508712768555
    9. '+' → logprob: -5.376508712768555
    10. ' +' → logprob: -8.376508712768555

Token 646: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018183540552854538
    2. '0' → logprob: -4.018183708190918
    3. ' ' → logprob: -10.893183708190918
    4. '=-' → logprob: -11.643183708190918
    5. '-' → logprob: -12.893183708190918
    6. '1' → logprob: -14.268183708190918
    7. '=N' → logprob: -14.268183708190918
    8. '=
' → logprob: -14.893183708190918
    9. ' =' → logprob: -15.268183708190918
    10. '=(' → logprob: -15.768183708190918

Token 647: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22591698169708252
    2. '=' → logprob: -1.6009169816970825
    3. ' ' → logprob: -7.975916862487793
    4. '-' → logprob: -8.975916862487793
    5. '=-' → logprob: -11.225916862487793
    6. '1' → logprob: -11.725916862487793
    7. 'N' → logprob: -12.475916862487793
    8. '=N' → logprob: -12.850916862487793
    9. '=(' → logprob: -13.350916862487793
    10. ' =' → logprob: -14.788416862487793

Token 648: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00026217024424113333
    2. ':
' → logprob: -8.875262260437012
    3. ' or' → logprob: -9.750262260437012
    4. ' :' → logprob: -10.250262260437012
    5. ' and' → logprob: -11.000262260437012
    6. 'and' → logprob: -13.000262260437012
    7. 'or' → logprob: -13.500262260437012
    8. 'else' → logprob: -13.500262260437012
    9. '-' → logprob: -13.625262260437012
    10. '+:' → logprob: -13.625262260437012

Token 649: ' alors' (ID: 17971)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.41076385974884033
    2. 'Sum' → logprob: -1.4107638597488403
    3. ' print' → logprob: -3.285763740539551
    4. 'res' → logprob: -4.660763740539551
    5. ' Sum' → logprob: -4.785763740539551
    6. 'result' → logprob: -4.785763740539551
    7. 'ans' → logprob: -5.160763740539551
    8. 'answer' → logprob: -5.160763740539551
    9. '   ' → logprob: -5.410763740539551
    10. 'Min' → logprob: -5.660763740539551

Token 650: ' tous' (ID: 10688)
  Prédit: 'Sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Sum' → logprob: -0.4371800422668457
    2. 'print' → logprob: -1.6871800422668457
    3. '#' → logprob: -2.0621800422668457
    4. 'result' → logprob: -4.062180042266846
    5. 'answer' → logprob: -5.312180042266846
    6. 'res' → logprob: -5.437180042266846
    7. ' Sum' → logprob: -5.562180042266846
    8. 'ans' → logprob: -6.187180042266846
    9. ' #' → logprob: -6.812180042266846
    10. 'token' → logprob: -6.812180042266846

Token 651: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.042016785591840744
    2. ' les' → logprob: -3.2920167446136475
    3. 'Sum' → logprob: -7.167016983032227
    4. 'élé' → logprob: -7.417016983032227
    5. 'the' → logprob: -7.417016983032227
    6. 'Les' → logprob: -8.042016983032227
    7. '#' → logprob: -8.042016983032227
    8. 'le' → logprob: -8.417016983032227
    9. 'elements' → logprob: -8.542016983032227
    10. 'ent' → logprob: -8.792016983032227

Token 652: ' éléments' (ID: 57375)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.02963894046843052
    2. 'ent' → logprob: -3.9046390056610107
    3. 'él' → logprob: -5.779638767242432
    4. 'N' → logprob: -6.404638767242432
    5. 'fr' → logprob: -6.779638767242432
    6. 'é' → logprob: -7.154638767242432
    7. 'nombre' → logprob: -7.654638767242432
    8. 'elements' → logprob: -7.779638767242432
    9. 'L' → logprob: -8.02963924407959
    10. 'Sum' → logprob: -8.40463924407959

Token 653: ' sont' (ID: 5242)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0938400849699974
    2. ' sont' → logprob: -2.8438401222229004
    3. '#' → logprob: -3.9688401222229004
    4. 'ser' → logprob: -5.0938401222229
    5. 'de' → logprob: -6.0938401222229
    6. '>' → logprob: -7.2188401222229
    7. 'ont' → logprob: -7.7188401222229
    8. ' seront' → logprob: -7.9688401222229
    9. 'éta' → logprob: -8.093839645385742
    10. 'S' → logprob: -8.468839645385742

Token 654: ' strict' (ID: 12035)
  Prédit: 'posit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'posit' → logprob: -0.06876714527606964
    2. 'strict' → logprob: -2.8187670707702637
    3. 'positive' → logprob: -5.943767070770264
    4. '>' → logprob: -6.318767070770264
    5. ' posit' → logprob: -6.693767070770264
    6. 'pos' → logprob: -7.318767070770264
    7. 'sup' → logprob: -9.318767547607422
    8. 'égal' → logprob: -9.818767547607422
    9. 'positivo' → logprob: -9.818767547607422
    10. '```' → logprob: -10.443767547607422

Token 655: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.02391357161104679
    2. 'ly' → logprob: -3.773913621902466
    3. 'lement' → logprob: -7.898913383483887
    4. 'ment' → logprob: -8.773913383483887
    5. 'ément' → logprob: -9.648913383483887
    6. 'rement' → logprob: -11.148913383483887
    7. '>' → logprob: -11.523913383483887
    8. 'l' → logprob: -11.648913383483887
    9. 'emment' → logprob: -11.898913383483887
    10. 'nement' → logprob: -12.523913383483887

Token 656: ' posit' (ID: 13047)
  Prédit: 'posit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'posit' → logprob: -0.01794002391397953
    2. 'positive' → logprob: -4.392940044403076
    3. ' posit' → logprob: -5.642940044403076
    4. 'pos' → logprob: -6.767940044403076
    5. 'sup' → logprob: -8.017939567565918
    6. ' positive' → logprob: -9.017939567565918
    7. ' positif' → logprob: -9.892939567565918
    8. '>' → logprob: -10.142939567565918
    9. '```' → logprob: -10.142939567565918
    10. 'positivo' → logprob: -10.642939567565918

Token 657: 'ifs' (ID: 14119)
  Prédit: 'ifs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifs' → logprob: -0.16392149031162262
    2. 's' → logprob: -1.9139214754104614
    3. 'if' → logprob: -6.163921356201172
    4. 'es' → logprob: -7.788921356201172
    5. 'ents' → logprob: -7.913921356201172
    6. 'ets' → logprob: -9.038921356201172
    7. 'L' → logprob: -9.163921356201172
    8. 'és' → logprob: -9.538921356201172
    9. 'ints' → logprob: -9.663921356201172
    10. 'us' → logprob: -9.788921356201172

Token 658: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0018179784528911114
    2. ' or' → logprob: -7.5018181800842285
    3. 'else' → logprob: -7.7518181800842285
    4. 'or' → logprob: -8.37681770324707
    5. '.' → logprob: -8.62681770324707
    6. ' :' → logprob: -9.12681770324707
    7. ',' → logprob: -9.50181770324707
    8. ':
' → logprob: -10.25181770324707
    9. 'and' → logprob: -10.37681770324707
    10. ' and' → logprob: -10.37681770324707

Token 659: 'par' (ID: 796)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25387439131736755
    2. '),' → logprob: -1.87887442111969
    3. '):' → logprob: -3.3788743019104004
    4. ':' → logprob: -4.7538743019104
    5. 'print' → logprob: -5.2538743019104
    6. 'if' → logprob: -5.3788743019104
    7. '#' → logprob: -5.8788743019104
    8. ' or' → logprob: -6.1288743019104
    9. 'or' → logprob: -6.2538743019104
    10. ' )' → logprob: -6.3788743019104

Token 660: ' exemple' (ID: 26320)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.33735769987106323
    2. 'dé' → logprob: -1.837357759475708
    3. 'def' → logprob: -3.087357759475708
    4. 'cons' → logprob: -3.337357759475708
    5. 'construction' → logprob: -4.587357521057129
    6. '#' → logprob: -4.712357521057129
    7. 'fait' → logprob: -4.837357521057129
    8. '```' → logprob: -5.462357521057129
    9. 'L' → logprob: -5.712357521057129
    10. 'definition' → logprob: -6.212357521057129

Token 661: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6864323019981384
    2. 'L' → logprob: -1.6864323616027832
    3. 'fr' → logprob: -2.561432361602783
    4. '):' → logprob: -3.186432361602783
    5. ')' → logprob: -3.436432361602783
    6. ' fruits' → logprob: -3.561432361602783
    7. 'F' → logprob: -4.061432361602783
    8. ' :' → logprob: -4.561432361602783
    9. ',' → logprob: -4.936432361602783
    10. 'for' → logprob: -4.936432361602783

Token 662: ' [' (ID: 723)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.19566594064235687
    2. 'range' → logprob: -3.1956658363342285
    3. 'print' → logprob: -3.8206658363342285
    4. 'Sum' → logprob: -3.9456658363342285
    5. '1' → logprob: -4.0706658363342285
    6. '0' → logprob: -4.3206658363342285
    7. 'for' → logprob: -4.6956658363342285
    8. ' fruits' → logprob: -4.8206658363342285
    9. 'all' → logprob: -4.9456658363342285
    10. 'la' → logprob: -5.0706658363342285

Token 663: 'L' (ID: 43)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3917582631111145
    2. 'L' → logprob: -1.5167582035064697
    3. '3' → logprob: -3.1417582035064697
    4. '5' → logprob: -3.1417582035064697
    5. '2' → logprob: -4.641758441925049
    6. ' L' → logprob: -5.266758441925049
    7. ' ' → logprob: -6.516758441925049
    8. '10' → logprob: -6.891758441925049
    9. '4' → logprob: -7.516758441925049
    10. '7' → logprob: -8.14175796508789

Token 664: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011199901811778545
    2. ' ,' → logprob: -5.261199951171875
    3. ',L' → logprob: -5.511199951171875
    4. ' L' → logprob: -7.386199951171875
    5. 'L' → logprob: -7.386199951171875
    6. ',...' → logprob: -8.511199951171875
    7. '+' → logprob: -8.636199951171875
    8. ']' → logprob: -9.136199951171875
    9. '...' → logprob: -9.886199951171875
    10. '(L' → logprob: -10.636199951171875

Token 665: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.054890409111976624
    2. ' L' → logprob: -2.9298903942108154
    3. '...' → logprob: -12.679890632629395
    4. '<|end|>' → logprob: -12.929890632629395
    5. ',' → logprob: -13.929890632629395
    6. '	L' → logprob: -14.679890632629395
    7. '<|end|>' → logprob: -14.929890632629395
    8. 'LTR' → logprob: -15.429890632629395
    9. ' ' → logprob: -15.554890632629395
    10. ' ' → logprob: -16.304889678955078

Token 666: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01420522853732109
    2. ' +' → logprob: -4.264205455780029
    3. ',' → logprob: -10.264204978942871
    4. '+,' → logprob: -12.889204978942871
    5. '+l' → logprob: -13.764204978942871
    6. '+n' → logprob: -14.264204978942871
    7. 'L' → logprob: -14.264204978942871
    8. ' ,' → logprob: -14.514204978942871
    9. '＋' → logprob: -15.264204978942871
    10. '+
' → logprob: -15.389204978942871

Token 667: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0048380764201283455
    2. 'N' → logprob: -5.379837989807129
    3. ' ' → logprob: -8.504837989807129
    4. ' N' → logprob: -11.379837989807129
    5. '+' → logprob: -14.004837989807129
    6. '(' → logprob: -14.254837989807129
    7. '```' → logprob: -14.504837989807129
    8. '(N' → logprob: -14.879837989807129
    9. '-' → logprob: -14.879837989807129
    10. 'L' → logprob: -15.129837989807129

Token 668: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017402705270797014
    2. '])' → logprob: -7.626740455627441
    3. ' ,' → logprob: -7.876740455627441
    4. ']' → logprob: -7.876740455627441
    5. ',...' → logprob: -8.626740455627441
    6. ',L' → logprob: -8.626740455627441
    7. ')' → logprob: -9.876740455627441
    8. '...' → logprob: -10.751740455627441
    9. 'L' → logprob: -11.501740455627441
    10. ' L' → logprob: -11.751740455627441

Token 669: ' ...,' (ID: 126708)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.08528126031160355
    2. ' L' → logprob: -2.7102813720703125
    3. '...' → logprob: -4.2102813720703125
    4. '...,' → logprob: -8.460281372070312
    5. ',' → logprob: -9.960281372070312
    6. '<|end|>' → logprob: -10.085281372070312
    7. ' ' → logprob: -10.710281372070312
    8. ' ...' → logprob: -11.085281372070312
    9. '…' → logprob: -11.210281372070312
    10. '	L' → logprob: -11.835281372070312

Token 670: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.00020389800192788243
    2. ' L' → logprob: -8.500204086303711
    3. '...' → logprob: -14.875204086303711
    4. ',' → logprob: -17.50020408630371
    5. ')' → logprob: -18.12520408630371
    6. '<|end|>' → logprob: -18.62520408630371
    7. '>L' → logprob: -19.00020408630371
    8. '   ' → logprob: -19.12520408630371
    9. 'N' → logprob: -19.12520408630371
    10. '	L' → logprob: -19.25020408630371

Token 671: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.002819612855091691
    2. ' +' → logprob: -5.877819538116455
    3. '-' → logprob: -11.377820014953613
    4. '+(' → logprob: -13.752820014953613
    5. '+n' → logprob: -14.377820014953613
    6. '+#' → logprob: -15.127820014953613
    7. '+
' → logprob: -15.127820014953613
    8. '```' → logprob: -15.627820014953613
    9. '+]' → logprob: -15.877820014953613
    10. 'N' → logprob: -16.002819061279297

Token 672: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -2.868328920158092e-05
    2. ' N' → logprob: -10.500028610229492
    3. '+' → logprob: -14.750028610229492
    4. '(N' → logprob: -15.000028610229492
    5. ' ' → logprob: -15.625028610229492
    6. '```' → logprob: -16.500028610229492
    7. '	N' → logprob: -17.000028610229492
    8. '(' → logprob: -17.125028610229492
    9. '{' → logprob: -17.750028610229492
    10. '   ' → logprob: -18.375028610229492

Token 673: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.010240819305181503
    2. '])' → logprob: -4.6352410316467285
    3. ' -' → logprob: -7.8852410316467285
    4. ']' → logprob: -10.51024055480957
    5. '−' → logprob: -11.26024055480957
    6. ')' → logprob: -11.26024055480957
    7. ' ])' → logprob: -11.88524055480957
    8. '–' → logprob: -12.13524055480957
    9. ']))' → logprob: -12.26024055480957
    10. ']),' → logprob: -12.26024055480957

Token 674: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000504658033605665
    2. '2' → logprob: -7.625504493713379
    3. '-' → logprob: -11.500504493713379
    4. '<|end|>' → logprob: -13.375504493713379
    5. ')' → logprob: -13.500504493713379
    6. ' ' → logprob: -13.750504493713379
    7. '```' → logprob: -13.875504493713379
    8. '0' → logprob: -14.250504493713379
    9. ']' → logprob: -15.125504493713379
    10. '<|end|>' → logprob: -17.000505447387695

Token 675: ']).
' (ID: 135644)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.21316902339458466
    2. ']' → logprob: -2.7131690979003906
    3. ']):' → logprob: -2.9631690979003906
    4. ')' → logprob: -3.0881690979003906
    5. '):' → logprob: -4.213169097900391
    6. ']),' → logprob: -5.338169097900391
    7. '])
' → logprob: -6.213169097900391
    8. '#' → logprob: -6.463169097900391
    9. ']:' → logprob: -6.713169097900391
    10. ']).' → logprob: -7.088169097900391

Token 676: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03863038122653961
    2. 'Sum' → logprob: -3.913630485534668
    3. 'if' → logprob: -4.663630485534668
    4. 'ans' → logprob: -6.538630485534668
    5. 'min' → logprob: -6.663630485534668
    6. 'result' → logprob: -6.913630485534668
    7. 'answer' → logprob: -6.913630485534668
    8. 'Min' → logprob: -7.288630485534668
    9. ' print' → logprob: -7.413630485534668
    10. '#' → logprob: -7.413630485534668

Token 677: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.01815216802060604
    2. ' L' → logprob: -4.018152236938477
    3. '	L' → logprob: -14.018152236938477
    4. ' ' → logprob: -14.268152236938477
    5. '0' → logprob: -15.143152236938477
    6. '>L' → logprob: -15.518152236938477
    7. ' ' → logprob: -16.393152236938477
    8. '(L' → logprob: -16.393152236938477
    9. '  ' → logprob: -16.393152236938477
    10. '1' → logprob: -17.143152236938477

Token 678: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.42883792519569397
    2. ' >' → logprob: -1.0538378953933716
    3. ' ' → logprob: -9.303837776184082
    4. '&gt' → logprob: -11.678837776184082
    5. ' ' → logprob: -11.928837776184082
    6. '>=' → logprob: -12.053837776184082
    7. '">' → logprob: -12.303837776184082
    8. '<' → logprob: -12.928837776184082
    9. '  ' → logprob: -13.053837776184082
    10. '&' → logprob: -13.303837776184082

Token 679: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0059747775085270405
    2. ' ' → logprob: -5.130974769592285
    3. '=' → logprob: -10.005974769592285
    4. '1' → logprob: -14.255974769592285
    5. '-' → logprob: -16.1309757232666
    6. 'abs' → logprob: -16.5059757232666
    7. '2' → logprob: -17.0059757232666
    8. 'N' → logprob: -17.0684757232666
    9. '

' → logprob: -17.5059757232666
    10. '#' → logprob: -17.6309757232666

Token 680: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '1' → logprob: -17.875085830688477
    4. '۰' → logprob: -17.875085830688477
    5. '=' → logprob: -18.250085830688477
    6. '０' → logprob: -19.500085830688477
    7. '<|end|>' → logprob: -19.625085830688477
    8. '-' → logprob: -19.875085830688477
    9. ')' → logprob: -20.250085830688477
    10. ' ' → logprob: -20.562585830688477

Token 681: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11299044638872147
    2. ':
' → logprob: -2.237990379333496
    3. ':
' → logprob: -8.987990379333496
    4. ' :' → logprob: -10.612990379333496
    5. ' :
' → logprob: -11.612990379333496
    6. ':

' → logprob: -12.987990379333496
    7. ':#' → logprob: -13.362990379333496
    8. '   ' → logprob: -13.987990379333496
    9. ' ' → logprob: -14.612990379333496
    10. ':s' → logprob: -14.862990379333496

Token 682: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1214810311794281
    2. 'Sum' → logprob: -2.246480941772461
    3. '   ' → logprob: -5.121480941772461
    4. 'result' → logprob: -6.871480941772461
    5. ' print' → logprob: -7.121480941772461
    6. 'Print' → logprob: -8.621480941772461
    7. ' Sum' → logprob: -8.871480941772461
    8. '#' → logprob: -9.121480941772461
    9. 'answer' → logprob: -9.496480941772461
    10. ' ' → logprob: -9.621480941772461

Token 683: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2557167708873749
    2. 'Sum' → logprob: -1.5057168006896973
    3. 'result' → logprob: -7.005716800689697
    4. 'ans' → logprob: -7.130716800689697
    5. 'res' → logprob: -7.630716800689697
    6. 'answer' → logprob: -7.755716800689697
    7. 'Min' → logprob: -8.505716323852539
    8. 'removed' → logprob: -8.755716323852539
    9. 'min' → logprob: -9.130716323852539
    10. '   ' → logprob: -9.380716323852539

Token 684: ' Dans' (ID: 22082)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05764244496822357
    2. 'Sum' → logprob: -2.9326424598693848
    3. 'ans' → logprob: -6.807642459869385
    4. 'result' → logprob: -7.557642459869385
    5. 'answer' → logprob: -8.182641983032227
    6. 'res' → logprob: -8.432641983032227
    7. '#' → logprob: -9.307641983032227
    8. '   ' → logprob: -9.432641983032227
    9. 'Min' → logprob: -9.557641983032227
    10. 'Print' → logprob: -9.682641983032227

Token 685: ' ce' (ID: 2357)
  Prédit: ' ce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ce' → logprob: -0.7463844418525696
    2. '#' → logprob: -1.2463843822479248
    3. 'this' → logprob: -2.246384382247925
    4. 'Sum' → logprob: -2.621384382247925
    5. ' this' → logprob: -4.246384620666504
    6. 'ce' → logprob: -4.871384620666504
    7. ' Sum' → logprob: -4.996384620666504
    8. 'range' → logprob: -5.371384620666504
    9. 'c' → logprob: -5.496384620666504
    10. 'la' → logprob: -5.496384620666504

Token 686: ' cas' (ID: 2108)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09378842264413834
    2. '#' → logprob: -3.5937883853912354
    3. ' Sum' → logprob: -4.5937886238098145
    4. ' #' → logprob: -4.7187886238098145
    5. ' ' → logprob: -4.8437886238098145
    6. ' print' → logprob: -4.9687886238098145
    7. 'print' → logprob: -4.9687886238098145
    8. 'Sum' → logprob: -5.4687886238098145
    9. '    ' → logprob: -6.2187886238098145
    10. ' ' → logprob: -6.2187886238098145

Token 687: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0910418033599854
    2. '   ' → logprob: -1.2160418033599854
    3. ':' → logprob: -1.7160418033599854
    4. 'result' → logprob: -1.9660418033599854
    5. 'Sum' → logprob: -4.091041564941406
    6. ' print' → logprob: -4.591041564941406
    7. '#' → logprob: -5.091041564941406
    8. 'res' → logprob: -5.341041564941406
    9. ':
' → logprob: -5.841041564941406
    10. 'answer' → logprob: -6.341041564941406

Token 688: ' le' (ID: 505)
  Prédit: 'Sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Sum' → logprob: -0.4613770544528961
    2. 'print' → logprob: -1.0863770246505737
    3. '#' → logprob: -3.7113771438598633
    4. 'result' → logprob: -5.961377143859863
    5. ' Sum' → logprob: -6.211377143859863
    6. '   ' → logprob: -6.836377143859863
    7. 'answer' → logprob: -7.336377143859863
    8. 'res' → logprob: -8.336377143859863
    9. 'pass' → logprob: -8.836377143859863
    10. ' print' → logprob: -9.086377143859863

Token 689: ' nombre' (ID: 9733)
  Prédit: 'Sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Sum' → logprob: -0.02684357576072216
    2. '#' → logprob: -4.526843547821045
    3. 'print' → logprob: -5.401843547821045
    4. 'token' → logprob: -5.776843547821045
    5. 'result' → logprob: -6.276843547821045
    6. 'answer' → logprob: -6.776843547821045
    7. 'next' → logprob: -7.151843547821045
    8. 'minimum' → logprob: -7.401843547821045
    9. 'min' → logprob: -7.901843547821045
    10. 'rem' → logprob: -8.151844024658203

Token 690: ' le' (ID: 505)
  Prédit: '_min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -1.846229910850525
    2. ' le' → logprob: -2.0962300300598145
    3. 'min' → logprob: -2.0962300300598145
    4. 'minimum' → logprob: -2.3462300300598145
    5. '_le' → logprob: -2.4712300300598145
    6. 'à' → logprob: -2.7212300300598145
    7. '   ' → logprob: -3.2212300300598145
    8. '#' → logprob: -3.3462300300598145
    9. '_' → logprob: -3.5962300300598145
    10. 'de' → logprob: -3.5962300300598145

Token 691: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.0017144508892670274
    2. ' plus' → logprob: -7.12671422958374
    3. 'moins' → logprob: -7.75171422958374
    4. '#' → logprob: -8.751714706420898
    5. 'Plus' → logprob: -9.626714706420898
    6. 'min' → logprob: -10.001714706420898
    7. 'pl' → logprob: -10.126714706420898
    8. 'L' → logprob: -10.376714706420898
    9. 'minimum' → logprob: -10.501714706420898
    10. '```' → logprob: -10.626714706420898

Token 692: ' proche' (ID: 61089)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.021473070606589317
    2. 'small' → logprob: -4.021472930908203
    3. ' petit' → logprob: -6.021472930908203
    4. '```' → logprob: -8.146472930908203
    5. 'grand' → logprob: -8.896472930908203
    6. 'L' → logprob: -8.896472930908203
    7. '_small' → logprob: -9.271472930908203
    8. 'Petit' → logprob: -9.396472930908203
    9. 'sm' → logprob: -10.896472930908203
    10. '小' → logprob: -10.896472930908203

Token 693: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.6527162194252014
    2. ' de' → logprob: -0.7777162194252014
    3. ' du' → logprob: -5.027716159820557
    4. '   ' → logprob: -5.527716159820557
    5. ' à' → logprob: -5.777716159820557
    6. 'à' → logprob: -6.152716159820557
    7. 'from' → logprob: -7.277716159820557
    8. ' ' → logprob: -7.277716159820557
    9. 'du' → logprob: -7.402716159820557
    10. '    ' → logprob: -7.527716159820557

Token 694: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006802763789892197
    2. 'zero' → logprob: -5.256802558898926
    3. ' zéro' → logprob: -7.256802558898926
    4. ' ' → logprob: -7.506802558898926
    5. 'z' → logprob: -8.381802558898926
    6. ' zero' → logprob: -9.631802558898926
    7. 'L' → logprob: -11.631802558898926
    8. 'l' → logprob: -12.881802558898926
    9. ' z' → logprob: -13.256802558898926
    10. 'nul' → logprob: -14.131802558898926

Token 695: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004848922253586352
    2. 'z' → logprob: -8.625484466552734
    3. 'zero' → logprob: -8.875484466552734
    4. ' ' → logprob: -9.000484466552734
    5. ' zéro' → logprob: -10.125484466552734
    6. ' z' → logprob: -14.375484466552734
    7. ' zero' → logprob: -14.750484466552734
    8. 'zer' → logprob: -14.750484466552734
    9. 'ze' → logprob: -15.500484466552734
    10. '1' → logprob: -16.250484466552734

Token 696: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.09502357989549637
    2. ' à' → logprob: -3.2200236320495605
    3. 'est' → logprob: -3.4700236320495605
    4. 'à' → logprob: -4.5950236320495605
    5. '   ' → logprob: -5.0950236320495605
    6. ' vaut' → logprob: -6.8450236320495605
    7. ' sera' → logprob: -7.4700236320495605
    8. ' ' → logprob: -7.9700236320495605
    9. ' (' → logprob: -8.095023155212402
    10. ' is' → logprob: -8.845023155212402

Token 697: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.22654342651367188
    2. ' L' → logprob: -1.6015434265136719
    3. ' le' → logprob: -7.601543426513672
    4. 'l' → logprob: -8.476543426513672
    5. '	L' → logprob: -8.476543426513672
    6. 'le' → logprob: -9.851543426513672
    7. ' la' → logprob: -9.976543426513672
    8. ' l' → logprob: -10.226543426513672
    9. '>L' → logprob: -11.601543426513672
    10. '	l' → logprob: -11.976543426513672

Token 698: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006482661236077547
    2. '-' → logprob: -5.3814826011657715
    3. ' -' → logprob: -7.6314826011657715
    4. '+' → logprob: -8.38148307800293
    5. '    
' → logprob: -8.38148307800293
    6. ')' → logprob: -8.63148307800293
    7. 'elif' → logprob: -8.75648307800293
    8. 'else' → logprob: -9.00648307800293
    9. '#' → logprob: -9.75648307800293
    10. '
' → logprob: -9.88148307800293

Token 699: 'le' (ID: 282)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3366122245788574
    2. ' )' → logprob: -1.4616122245788574
    3. '   ' → logprob: -3.2116122245788574
    4. '#' → logprob: -5.961612224578857
    5. '),' → logprob: -5.961612224578857
    6. ' ),' → logprob: -6.586612224578857
    7. '    ' → logprob: -6.711612224578857
    8. ')#' → logprob: -6.961612224578857
    9. ' ' → logprob: -7.586612224578857
    10. ' ' → logprob: -7.711612224578857

Token 700: ' plus' (ID: 2932)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.3646851181983948
    2. ' premier' → logprob: -1.73968505859375
    3. 'plus' → logprob: -2.36468505859375
    4. 'élé' → logprob: -4.11468505859375
    5. ' plus' → logprob: -4.98968505859375
    6. ' ' → logprob: -6.23968505859375
    7. 'moins' → logprob: -6.36468505859375
    8. 'L' → logprob: -6.61468505859375
    9. 'minimum' → logprob: -6.61468505859375
    10. 'min' → logprob: -6.86468505859375

Token 701: ' petit' (ID: 20577)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.030885843560099602
    2. 'prem' → logprob: -4.530885696411133
    3. 'small' → logprob: -4.905885696411133
    4. 'pro' → logprob: -5.280885696411133
    5. ' petit' → logprob: -5.530885696411133
    6. '```' → logprob: -6.405885696411133
    7. 'L' → logprob: -8.030885696411133
    8. 'à' → logprob: -8.780885696411133
    9. 'grand' → logprob: -9.030885696411133
    10. 'prox' → logprob: -9.530885696411133

Token 702: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1968134194612503
    2. ' )' → logprob: -2.1968133449554443
    3. 'élé' → logprob: -3.5718133449554443
    4. 'de' → logprob: -4.446813583374023
    5. ' élément' → logprob: -4.946813583374023
    6. ' de' → logprob: -5.321813583374023
    7. ' ' → logprob: -5.446813583374023
    8. '<|end|>' → logprob: -6.071813583374023
    9. ' des' → logprob: -6.321813583374023
    10. 'token' → logprob: -6.696813583374023

Token 703: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.08116456866264343
    2. 'la' → logprob: -2.581164598464966
    3. 'l' → logprob: -6.956164360046387
    4. 's' → logprob: -8.206164360046387
    5. ')' → logprob: -8.581164360046387
    6. ' l' → logprob: -8.831164360046387
    7. ' ' → logprob: -8.956164360046387
    8. 'the' → logprob: -9.081164360046387
    9. 'les' → logprob: -9.831164360046387
    10. 't' → logprob: -10.331164360046387

Token 704: ' suite' (ID: 13800)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.469852089881897
    2. 'liste' → logprob: -1.844852089881897
    3. 's' → logprob: -2.2198519706726074
    4. 'interval' → logprob: -2.5948519706726074
    5. 'N' → logprob: -2.8448519706726074
    6. 'pl' → logprob: -3.2198519706726074
    7. 'ensemble' → logprob: -3.4698519706726074
    8. 'list' → logprob: -3.5948519706726074
    9. 'suite' → logprob: -3.5948519706726074
    10. 'la' → logprob: -3.8448519706726074

Token 705: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6753410696983337
    2. ').' → logprob: -1.3003411293029785
    3. '),' → logprob: -1.6753411293029785
    4. '   ' → logprob: -4.4253411293029785
    5. ' )' → logprob: -5.0503411293029785
    6. ')
' → logprob: -5.1753411293029785
    7. ' ),' → logprob: -5.5503411293029785
    8. ' ).' → logprob: -6.8003411293029785
    9. ').
' → logprob: -7.6753411293029785
    10. '),
' → logprob: -8.17534065246582

Token 706: '   ' (ID: 271)
  Prédit: 'Sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sum' → logprob: -0.2700786292552948
    2. ' Sum' → logprob: -2.020078659057617
    3. '   ' → logprob: -2.645078659057617
    4. 'print' → logprob: -4.270078659057617
    5. 'result' → logprob: -5.145078659057617
    6. '
' → logprob: -5.770078659057617
    7. ' print' → logprob: -5.770078659057617
    8. 'res' → logprob: -6.520078659057617
    9. '-' → logprob: -7.520078659057617
    10. ' result' → logprob: -7.645078659057617

Token 707: ' #' (ID: 1069)
  Prédit: 'Sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sum' → logprob: -0.030468450859189034
    2. 'print' → logprob: -3.530468463897705
    3. 'result' → logprob: -8.405467987060547
    4. '   ' → logprob: -8.530467987060547
    5. ' Sum' → logprob: -8.905467987060547
    6. 'res' → logprob: -10.280467987060547
    7. '#' (adapté à ' #') → logprob: -11.155467987060547
    8. 'answer' → logprob: -11.280467987060547
    9. 'sum' → logprob: -11.530467987060547
    10. '_sum' → logprob: -11.655467987060547

Token 708: ' Donc' (ID: 88837)
  Prédit: 'Sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Sum' → logprob: -0.12502506375312805
    2. 'print' → logprob: -2.2500250339508057
    3. ' Sum' → logprob: -4.875025272369385
    4. 'result' → logprob: -6.125025272369385
    5. ' print' → logprob: -7.250025272369385
    6. '   ' → logprob: -7.875025272369385
    7. 'answer' → logprob: -8.125024795532227
    8. 'ans' → logprob: -8.625024795532227
    9. 'res' → logprob: -8.750024795532227
    10. '#' → logprob: -9.375024795532227

Token 709: ' on' (ID: 402)
  Prédit: 'Sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Sum' → logprob: -0.3380884528160095
    2. 'print' → logprob: -2.2130885124206543
    3. ' Sum' → logprob: -2.2130885124206543
    4. ' print' → logprob: -3.0880885124206543
    5. '   ' → logprob: -3.9630885124206543
    6. 'result' → logprob: -6.213088512420654
    7. ' result' → logprob: -7.713088512420654
    8. 'Print' → logprob: -8.963088035583496
    9. 'S' → logprob: -9.213088035583496
    10. 'res' → logprob: -9.338088035583496

Token 710: ' sou' (ID: 4069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4389352798461914
    2. ' print' → logprob: -1.1889352798461914
    3. 'ret' → logprob: -4.563935279846191
    4. 'pr' → logprob: -4.813935279846191
    5. ' retire' → logprob: -5.313935279846191
    6. '#' → logprob: -5.438935279846191
    7. '-' → logprob: -5.688935279846191
    8. '   ' → logprob: -5.813935279846191
    9. ' #' → logprob: -6.313935279846191
    10. ' ret' → logprob: -6.438935279846191

Token 711: 'stra' (ID: 14867)
  Prédit: 'tra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tra' → logprob: -0.7189396619796753
    2. 'stra' → logprob: -0.8439396619796753
    3. 'tr' → logprob: -3.718939781188965
    4. 'stract' → logprob: -4.218939781188965
    5. '#' → logprob: -4.968939781188965
    6. '   ' → logprob: -5.093939781188965
    7. 'trait' → logprob: -5.468939781188965
    8. 't' → logprob: -5.468939781188965
    9. 'Tra' → logprob: -5.468939781188965
    10. 'straction' → logprob: -5.718939781188965

Token 712: 'it' (ID: 278)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.4559386372566223
    2. 'it' → logprob: -1.3309385776519775
    3. 'i' → logprob: -2.9559385776519775
    4. 'is' → logprob: -4.080938816070557
    5. 't' → logprob: -4.580938816070557
    6. '   ' → logprob: -5.080938816070557
    7. 'ction' → logprob: -5.830938816070557
    8. 'c' → logprob: -5.893438816070557
    9. 'ie' → logprob: -6.205938816070557
    10. 'e' → logprob: -7.080938816070557

Token 713: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.14268456399440765
    2. ' L' → logprob: -2.0176844596862793
    3. ' ' → logprob: -11.892684936523438
    4. '	L' → logprob: -13.892684936523438
    5. ' ' → logprob: -14.267684936523438
    6. '   ' → logprob: -14.892684936523438
    7. 'l' → logprob: -15.017684936523438
    8. '    ' → logprob: -15.892684936523438
    9. '```' → logprob: -17.330184936523438
    10. '>L' → logprob: -17.892684936523438

Token 714: ' à' (ID: 1221)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.19354715943336487
    2. ' from' → logprob: -2.443547248840332
    3. '   ' → logprob: -3.318547248840332
    4. '
' → logprob: -4.443547248840332
    5. ')' → logprob: -4.693547248840332
    6. ' ' → logprob: -4.818547248840332
    7. '    ' → logprob: -5.193547248840332
    8. '*' → logprob: -5.568547248840332
    9. '.' → logprob: -6.193547248840332
    10. '#' → logprob: -6.318547248840332

Token 715: ' la' (ID: 557)
  Prédit: 'Sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sum' → logprob: -0.12700359523296356
    2. ' Sum' → logprob: -2.1270036697387695
    3. 'S' → logprob: -9.87700366973877
    4. ' la' → logprob: -11.12700366973877
    5. ' S' → logprob: -13.25200366973877
    6. 'l' → logprob: -13.37700366973877
    7. '_sum' → logprob: -13.50200366973877
    8. 'la' → logprob: -13.62700366973877
    9. 'Summ' → logprob: -14.12700366973877
    10. ' ' → logprob: -14.25200366973877

Token 716: ' somme' (ID: 64484)
  Prédit: 'Sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Sum' → logprob: -0.004155329894274473
    2. ' Sum' → logprob: -5.504155158996582
    3. 'S' → logprob: -9.879155158996582
    4. 'Summ' → logprob: -11.879155158996582
    5. 'sum' → logprob: -12.254155158996582
    6. '_sum' → logprob: -13.004155158996582
    7. ' sum' → logprob: -13.004155158996582
    8. 'Som' → logprob: -13.004155158996582
    9. 'Su' → logprob: -13.379155158996582
    10. ' S' → logprob: -13.504155158996582

Token 717: ' totale' (ID: 52898)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6551600694656372
    2. ' -' → logprob: -0.7801600694656372
    3. '   ' → logprob: -4.405159950256348
    4. '
' → logprob: -5.405159950256348
    5. '-
' → logprob: -6.155159950256348
    6. ' -
' → logprob: -6.905159950256348
    7. '-S' → logprob: -7.280159950256348
    8. ' ' → logprob: -7.780159950256348
    9. '    
' → logprob: -8.405159950256348
    10. '.' → logprob: -8.655159950256348

Token 718: '.
' (ID: 558)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1448388695716858
    2. ' -' → logprob: -2.394838809967041
    3. '   ' → logprob: -3.894838809967041
    4. '
' → logprob: -4.519838809967041
    5. '-
' → logprob: -4.644838809967041
    6. '-S' → logprob: -7.269838809967041
    7. '
' → logprob: -7.894838809967041
    8. '    
' → logprob: -8.0198392868042
    9. ' -
' → logprob: -8.2698392868042
    10. '-
' → logprob: -8.2698392868042

Token 719: '   ' (ID: 271)
  Prédit: 'Sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sum' → logprob: -0.305495947599411
    2. 'print' → logprob: -1.6804959774017334
    3. '
' → logprob: -2.9304959774017334
    4. ' Sum' → logprob: -4.180495738983154
    5. ' print' → logprob: -5.055495738983154
    6. 'result' → logprob: -7.680495738983154
    7. 'Print' → logprob: -8.430496215820312
    8. '   ' → logprob: -8.430496215820312
    9. ' 
' → logprob: -8.555496215820312
    10. 'Subtract' → logprob: -9.055496215820312

Token 720: ' ans' (ID: 3345)
  Prédit: 'Sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sum' → logprob: -0.13484641909599304
    2. 'print' → logprob: -2.2598464488983154
    3. ' Sum' → logprob: -4.009846210479736
    4. ' print' → logprob: -6.259846210479736
    5. 'result' → logprob: -7.384846210479736
    6. 'answer' → logprob: -7.884846210479736
    7. 'ans' (adapté à ' ans') → logprob: -8.384846687316895
    8. 'Print' → logprob: -8.509846687316895
    9. 'res' → logprob: -9.009846687316895
    10. 'Ans' → logprob: -10.759846687316895

Token 721: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15416480600833893
    2. '=' → logprob: -2.5291647911071777
    3. ' -=' → logprob: -2.7791647911071777
    4. '-=' → logprob: -7.404164791107178
    5. '-' → logprob: -8.029165267944336
    6. ' -' → logprob: -9.654165267944336
    7. ' ' → logprob: -10.029165267944336
    8. ' +=' → logprob: -12.529165267944336
    9. ' ' → logprob: -12.904165267944336
    10. '	' → logprob: -13.529165267944336

Token 722: ' Sum' (ID: 34138)
  Prédit: 'Sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sum' → logprob: -0.00015860427811276168
    2. ' Sum' → logprob: -8.750158309936523
    3. 'sum' → logprob: -17.750158309936523
    4. 'S' → logprob: -18.125158309936523
    5. ' ' → logprob: -18.250158309936523
    6. '	S' → logprob: -18.375158309936523
    7. '   ' → logprob: -18.875158309936523
    8. '(S' → logprob: -19.375158309936523
    9. 'SUM' → logprob: -20.125158309936523
    10. ' sum' → logprob: -20.375158309936523

Token 723: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3868815004825592
    2. '-' → logprob: -1.1368814706802368
    3. '   ' → logprob: -11.886881828308105
    4. ' ' → logprob: -13.511881828308105
    5. '-L' → logprob: -13.511881828308105
    6. ' ' → logprob: -14.761881828308105
    7. '-
' → logprob: -16.76188087463379
    8. '−' → logprob: -17.13688087463379
    9. '-
' → logprob: -17.38688087463379
    10. '-l' → logprob: -17.63688087463379

Token 724: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -6.704273118884885e-07
    2. ' L' → logprob: -14.250000953674316
    3. '	L' → logprob: -19.375
    4. '   ' → logprob: -21.0
    5. '(L' → logprob: -21.0
    6. '[L' → logprob: -22.625
    7. '>L' → logprob: -23.0
    8. ' ' → logprob: -23.5
    9. '#' → logprob: -23.75
    10. ' ' → logprob: -23.875

Token 725: '
' (ID: 198)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.2553478181362152
    2. 'else' → logprob: -1.5053478479385376
    3. '<|end|>' → logprob: -6.005347728729248
    4. '
' → logprob: -7.505347728729248
    5. '#elif' → logprob: -9.755348205566406
    6. ' else' → logprob: -9.755348205566406
    7. ')' → logprob: -9.755348205566406
    8. '\n' → logprob: -10.005348205566406
    9. '```' → logprob: -10.630348205566406
    10. '#' → logprob: -10.630348205566406

Token 726: '#' (ID: 2)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.3133399486541748
    2. 'else' → logprob: -1.3133399486541748
    3. '\n' → logprob: -11.063340187072754
    4. '
' → logprob: -11.438340187072754
    5. 'el' → logprob: -11.688340187072754
    6. ' else' → logprob: -11.813340187072754
    7. '```' → logprob: -12.188340187072754
    8. ' elif' → logprob: -12.313340187072754
    9. '#elif' → logprob: -12.313340187072754
    10. 'e' → logprob: -12.313340187072754

Token 727: ' Sinon' (ID: 154924)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -7.612634362885728e-05
    2. 'else' → logprob: -9.500076293945312
    3. 'el' → logprob: -13.750076293945312
    4. ' elif' → logprob: -16.625076293945312
    5. 'els' → logprob: -18.250076293945312
    6. 'eli' → logprob: -18.625076293945312
    7. 'elseif' → logprob: -19.750076293945312
    8. '#elif' → logprob: -20.500076293945312
    9. 'elsif' → logprob: -20.750076293945312
    10. 'El' → logprob: -20.750076293945312

Token 728: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003967743366956711
    2. 'elif' → logprob: -5.878967761993408
    3. 'else' → logprob: -7.128967761993408
    4. ' :' → logprob: -8.37896728515625
    5. ':
' → logprob: -9.62896728515625
    6. 'if' → logprob: -9.87896728515625
    7. 'e' → logprob: -12.50396728515625
    8. ' elif' → logprob: -12.75396728515625
    9. ' else' → logprob: -13.00396728515625
    10. ':
' → logprob: -13.00396728515625

Token 729: ' si' (ID: 1784)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.08211204409599304
    2. ' elif' → logprob: -3.2071120738983154
    3. ':' → logprob: -4.207111835479736
    4. ' if' → logprob: -4.832111835479736
    5. ' L' → logprob: -4.957111835479736
    6. 'if' → logprob: -5.332111835479736
    7. '   ' → logprob: -6.332111835479736
    8. ' :' → logprob: -7.457111835479736
    9. 'L' → logprob: -8.207112312316895
    10. '#' → logprob: -8.707112312316895

Token 730: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.01372231263667345
    2. ' L' → logprob: -4.3887224197387695
    3. '0' → logprob: -7.1387224197387695
    4. '(L' → logprob: -8.13872241973877
    5. ' (' → logprob: -10.13872241973877
    6. ' ' → logprob: -10.63872241973877
    7. '   ' → logprob: -11.01372241973877
    8. 'N' → logprob: -11.13872241973877
    9. '#' → logprob: -11.51372241973877
    10. '(' → logprob: -12.01372241973877

Token 731: '+' (ID: 10)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.13313114643096924
    2. ' <=' → logprob: -2.2581310272216797
    3. '+' → logprob: -4.25813102722168
    4. ' +' → logprob: -5.88313102722168
    5. '<' → logprob: -6.00813102722168
    6. '==' → logprob: -7.75813102722168
    7. ' <' → logprob: -8.50813102722168
    8. '>=' → logprob: -10.88313102722168
    9. ' ==' → logprob: -11.13313102722168
    10. 'le' → logprob: -11.25813102722168

Token 732: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -2.5941604690160602e-05
    2. ' N' → logprob: -10.625025749206543
    3. '0' → logprob: -15.000025749206543
    4. '#' → logprob: -15.000025749206543
    5. '	N' → logprob: -15.125025749206543
    6. 'L' → logprob: -15.375025749206543
    7. ' ' → logprob: -15.750025749206543
    8. '(N' → logprob: -15.875025749206543
    9. '<N' → logprob: -16.50002670288086
    10. '[N' → logprob: -17.00002670288086

Token 733: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10832088440656662
    2. ' -' → logprob: -2.983320951461792
    3. ' <=' → logprob: -3.358320951461792
    4. '<=' → logprob: -4.108320713043213
    5. ' ==' → logprob: -8.358321189880371
    6. '==' → logprob: -8.608321189880371
    7. '0' → logprob: -9.608321189880371
    8. ' <' → logprob: -9.733321189880371
    9. ' >' → logprob: -9.858321189880371
    10. '>' → logprob: -9.983321189880371

Token 734: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5466054081916809
    2. '1' → logprob: -0.9216054081916809
    3. '0' → logprob: -3.796605348587036
    4. ' -' → logprob: -7.921605587005615
    5. '```' → logprob: -8.671605110168457
    6. '#' → logprob: -9.046605110168457
    7. 'N' → logprob: -10.046605110168457
    8. ' ' → logprob: -10.296605110168457
    9. '<|end|>' → logprob: -11.796605110168457
    10. '>' → logprob: -12.796605110168457

Token 735: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5865845680236816
    2. ' <' → logprob: -0.8365845680236816
    3. ' <=' → logprob: -5.336584568023682
    4. '<=' → logprob: -5.461584568023682
    5. ' >=' → logprob: -7.336584568023682
    6. '>=' → logprob: -7.336584568023682
    7. '>' → logprob: -9.211584091186523
    8. ' >' → logprob: -10.211584091186523
    9. '==' → logprob: -10.961584091186523
    10. ' ==' → logprob: -10.961584091186523

Token 736: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006823831703513861
    2. ' ' → logprob: -5.006824016571045
    3. '=' → logprob: -9.131823539733887
    4. ' =' → logprob: -15.381823539733887
    5. '1' → logprob: -16.881824493408203
    6. ' ' → logprob: -17.881824493408203
    7. '  ' → logprob: -18.006824493408203
    8. '   ' → logprob: -19.006824493408203
    9. '۰' → logprob: -19.131824493408203
    10. '>' → logprob: -19.256824493408203

Token 737: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00016241880075540394
    2. ' ' → logprob: -9.250162124633789
    3. '=' → logprob: -9.625162124633789
    4. '1' → logprob: -15.500162124633789
    5. ' =' → logprob: -17.25016212463379
    6. ' ' → logprob: -19.12516212463379
    7. '۰' → logprob: -19.25016212463379
    8. '-' → logprob: -19.50016212463379
    9. '   ' → logprob: -20.00016212463379
    10. '  ' → logprob: -20.00016212463379

Token 738: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02668457292020321
    2. ':
' → logprob: -3.651684522628784
    3. 'elif' → logprob: -7.901684761047363
    4. ' :' → logprob: -12.276684761047363
    5. 'else' → logprob: -12.651684761047363
    6. ':
' → logprob: -13.151684761047363
    7. '   ' → logprob: -13.276684761047363
    8. ' elif' → logprob: -13.651684761047363
    9. ':

' → logprob: -14.401684761047363
    10. ' :
' → logprob: -15.151684761047363

Token 739: 'c' (ID: 66)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.35789281129837036
    2. ':' → logprob: -1.4828927516937256
    3. ')' → logprob: -2.7328927516937256
    4. '):
' → logprob: -4.857892990112305
    5. 'elif' → logprob: -8.357892990112305
    6. 'if' → logprob: -8.857892990112305
    7. '#' → logprob: -8.982892990112305
    8. ':
' → logprob: -9.107892990112305
    9. ' ):' → logprob: -9.107892990112305
    10. '   ' → logprob: -9.357892990112305

Token 740: '’est' (ID: 6838)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016383420675992966
    2. 'ont' → logprob: -4.766383647918701
    3. '):' → logprob: -5.266383647918701
    4. '#' → logprob: -7.391383647918701
    5. '=' → logprob: -7.516383647918701
    6. ')' → logprob: -7.641383647918701
    7. 'u' → logprob: -8.141383171081543
    8. ' :' → logprob: -9.016383171081543
    9. ' or' → logprob: -9.641383171081543
    10. 'e' → logprob: -10.141383171081543

Token 741: '-à' (ID: 56297)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.32839587330818176
    2. '   ' → logprob: -2.2033958435058594
    3. '):' → logprob: -3.4533958435058594
    4. ' True' → logprob: -3.4533958435058594
    5. ')' → logprob: -3.7033958435058594
    6. '=' → logprob: -4.203395843505859
    7. 'True' → logprob: -4.703395843505859
    8. ' ' → logprob: -5.203395843505859
    9. '0' → logprob: -5.328395843505859
    10. ' :' → logprob: -5.453395843505859

Token 742: '-dire' (ID: 76064)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3173297047615051
    2. ':' → logprob: -2.4423296451568604
    3. 'True' → logprob: -2.4423296451568604
    4. 'False' → logprob: -3.1923296451568604
    5. ' True' → logprob: -4.0673298835754395
    6. '#' → logprob: -4.4423298835754395
    7. ' ' → logprob: -5.3173298835754395
    8. 't' → logprob: -5.3173298835754395
    9. ' False' → logprob: -5.8173298835754395
    10. 'u' → logprob: -6.3173298835754395

Token 743: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1515098214149475
    2. ' L' → logprob: -3.1515097618103027
    3. ':' → logprob: -3.2765097618103027
    4. 'L' → logprob: -3.6515097618103027
    5. '0' → logprob: -4.401509761810303
    6. 'if' → logprob: -5.276509761810303
    7. ')' → logprob: -5.901509761810303
    8. ' ' → logprob: -6.151509761810303
    9. ' la' → logprob: -6.151509761810303
    10. ' if' → logprob: -6.151509761810303

Token 744: ' le' (ID: 505)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.5978700518608093
    2. 'L' → logprob: -0.8478700518608093
    3. '   ' → logprob: -3.972870111465454
    4. '#' → logprob: -7.097869873046875
    5. 'elif' → logprob: -7.972869873046875
    6. ')' → logprob: -8.347869873046875
    7. ' ' → logprob: -9.097869873046875
    8. ' #' → logprob: -9.222869873046875
    9. '```' → logprob: -9.222869873046875
    10. '(L' → logprob: -9.222869873046875

Token 745: ' dernier' (ID: 27982)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.03577514365315437
    2. 'elif' → logprob: -4.160775184631348
    3. '#' → logprob: -4.535775184631348
    4. 'else' → logprob: -5.535775184631348
    5. ' L' → logprob: -5.910775184631348
    6. 'N' → logprob: -6.910775184631348
    7. '(L' → logprob: -8.160775184631348
    8. '```' → logprob: -8.660775184631348
    9. '0' → logprob: -9.035775184631348
    10. 'sum' → logprob: -9.285775184631348

Token 746: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.20241981744766235
    2. '_' → logprob: -2.3274197578430176
    3. ' élément' → logprob: -3.4524197578430176
    4. 'element' → logprob: -3.9524197578430176
    5. ' element' → logprob: -4.202419757843018
    6. ' _' → logprob: -5.452419757843018
    7. ' line' → logprob: -5.452419757843018
    8. ')' → logprob: -6.577419757843018
    9. '_l' → logprob: -6.952419757843018
    10. 'L' → logprob: -6.952419757843018

Token 747: ' est' (ID: 893)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.10752887278795242
    2. '<' → logprob: -2.6075289249420166
    3. ' <=' → logprob: -3.9825289249420166
    4. '<=' → logprob: -5.7325286865234375
    5. '):' → logprob: -6.2325286865234375
    6. ')' → logprob: -6.2325286865234375
    7. '   ' → logprob: -6.9825286865234375
    8. ')<' → logprob: -7.4825286865234375
    9. ':' → logprob: -7.8575286865234375
    10. '):
' → logprob: -9.732528686523438

Token 748: ' encore' (ID: 14043)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.05281973257660866
    2. 'strict' → logprob: -3.4278197288513184
    3. '<=' → logprob: -5.177819728851318
    4. 'inf' → logprob: -5.552819728851318
    5. '0' → logprob: -5.677819728851318
    6. ' inférieur' → logprob: -5.927819728851318
    7. 'moins' → logprob: -6.677819728851318
    8. ' <' → logprob: -6.927819728851318
    9. ' nég' → logprob: -7.802819728851318
    10. 'neg' → logprob: -9.052820205688477

Token 749: ' nég' (ID: 55805)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7811796069145203
    2. '<' → logprob: -1.156179666519165
    3. ' nég' → logprob: -1.781179666519165
    4. 'strict' → logprob: -3.906179666519165
    5. ' <' → logprob: -4.156179428100586
    6. 'neg' → logprob: -4.406179428100586
    7. 'n' → logprob: -6.031179428100586
    8. 'moins' → logprob: -6.156179428100586
    9. ' inférieur' → logprob: -6.281179428100586
    10. 'inf' → logprob: -6.656179428100586

Token 750: 'atif' (ID: 23984)
  Prédit: 'atif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atif' → logprob: -0.005528169684112072
    2. 'ative' → logprob: -5.755527973175049
    3. '#' → logprob: -6.880527973175049
    4. 'a' → logprob: -8.130528450012207
    5. 'at' → logprob: -8.255528450012207
    6. '<' → logprob: -8.880528450012207
    7. 'if' → logprob: -9.380528450012207
    8. '>' → logprob: -9.755528450012207
    9. ')' → logprob: -10.005528450012207
    10. ' at' → logprob: -10.255528450012207

Token 751: '),' (ID: 936)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.15798957645893097
    2. ':' → logprob: -2.157989501953125
    3. '):
' → logprob: -3.657989501953125
    4. ')' → logprob: -5.782989501953125
    5. '   ' → logprob: -7.532989501953125
    6. ' or' → logprob: -7.657989501953125
    7. '),' → logprob: -8.407989501953125
    8. ':
' → logprob: -9.282989501953125
    9. '):
' → logprob: -9.657989501953125
    10. ' :' → logprob: -9.782989501953125

Token 752: ' alors' (ID: 17971)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.002372439019382
    2. ':' → logprob: -6.2523722648620605
    3. '   ' → logprob: -8.502372741699219
    4. 'if' → logprob: -9.002372741699219
    5. 'else' → logprob: -9.502372741699219
    6. ' elif' → logprob: -10.252372741699219
    7. 'el' → logprob: -12.752372741699219
    8. 'elseif' → logprob: -14.127372741699219
    9. ' :' → logprob: -14.752372741699219
    10. '#' → logprob: -14.752372741699219

Token 753: ' tous' (ID: 10688)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.292373925447464
    2. 'elif' → logprob: -1.9173738956451416
    3. ' L' → logprob: -2.7923738956451416
    4. 'L' → logprob: -3.4173738956451416
    5. 'ans' → logprob: -5.417374134063721
    6. 'if' → logprob: -6.042374134063721
    7. ' ans' → logprob: -6.417374134063721
    8. ' elif' → logprob: -7.042374134063721
    9. ':' → logprob: -7.292374134063721
    10. ' ' → logprob: -7.792374134063721

Token 754: ' les' (ID: 1341)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.4285321533679962
    2. ' L' → logprob: -2.053532123565674
    3. '<' → logprob: -2.178532123565674
    4. '   ' → logprob: -3.178532123565674
    5. ' <' → logprob: -3.553532123565674
    6. 'le' → logprob: -4.428532123565674
    7. 'les' → logprob: -4.928532123565674
    8. '<L' → logprob: -5.178532123565674
    9. '<=' → logprob: -6.303532123565674
    10. ' les' → logprob: -6.303532123565674

Token 755: ' nombres' (ID: 76205)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.008067798800766468
    2. 'elements' → logprob: -5.758067607879639
    3. ' éléments' → logprob: -6.133067607879639
    4. '#' → logprob: -6.883067607879639
    5. 'él' → logprob: -7.383067607879639
    6. 'L' → logprob: -7.758067607879639
    7. 'é' → logprob: -8.883068084716797
    8. 'N' → logprob: -9.633068084716797
    9. 'ent' → logprob: -9.883068084716797
    10. ' elements' → logprob: -9.883068084716797

Token 756: ' sont' (ID: 5242)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.8746160268783569
    2. ' <' → logprob: -0.8746160268783569
    3. ' sont' → logprob: -2.2496161460876465
    4. '   ' → logprob: -3.8746161460876465
    5. 's' → logprob: -3.8746161460876465
    6. '<=' → logprob: -4.4996161460876465
    7. ' <=' → logprob: -6.1246161460876465
    8. 'strict' → logprob: -6.2496161460876465
    9. ' are' → logprob: -6.4996161460876465
    10. ' ' → logprob: -8.124615669250488

Token 757: ' strict' (ID: 12035)
  Prédit: 'strict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strict' → logprob: -0.16953663527965546
    2. 'neg' → logprob: -2.794536590576172
    3. ' nég' → logprob: -3.669536590576172
    4. '<' → logprob: -3.669536590576172
    5. 'inf' → logprob: -3.794536590576172
    6. 'n' → logprob: -4.044536590576172
    7. ' strict' → logprob: -6.419536590576172
    8. ' <' → logprob: -7.544536590576172
    9. '<=' → logprob: -7.794536590576172
    10. '<n' → logprob: -7.919536590576172

Token 758: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.0011729635298252106
    2. 'ict' → logprob: -7.62617301940918
    3. 'ements' → logprob: -7.87617301940918
    4. 'ment' → logprob: -9.25117301940918
    5. '#' → logprob: -10.12617301940918
    6. 'rement' → logprob: -10.12617301940918
    7. 'ly' → logprob: -10.62617301940918
    8. 'iquement' → logprob: -10.75117301940918
    9. 'strict' → logprob: -11.37617301940918
    10. 's' → logprob: -11.87617301940918

Token 759: ' nég' (ID: 55805)
  Prédit: 'neg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neg' → logprob: -0.48551222681999207
    2. 'n' → logprob: -1.1105122566223145
    3. 'inf' → logprob: -3.2355122566223145
    4. ' nég' → logprob: -4.6105122566223145
    5. '<' → logprob: -5.7355122566223145
    6. 'strict' → logprob: -6.6105122566223145
    7. 'moins' → logprob: -7.2355122566223145
    8. '   ' → logprob: -9.235511779785156
    9. ' n' → logprob: -9.610511779785156
    10. ' <' → logprob: -9.610511779785156

Token 760: 'atifs' (ID: 66205)
  Prédit: 'atifs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atifs' → logprob: -0.002262186724692583
    2. 'atif' → logprob: -6.127262115478516
    3. 'ifs' → logprob: -10.502262115478516
    4. 's' → logprob: -11.127262115478516
    5. '   ' → logprob: -11.377262115478516
    6. '#' → logprob: -11.502262115478516
    7. 'at' → logprob: -12.752262115478516
    8. 'if' → logprob: -13.002262115478516
    9. '
' → logprob: -13.502262115478516
    10. '##' → logprob: -14.002262115478516

Token 761: '.
' (ID: 558)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.006791393738240004
    2. ':' → logprob: -5.006791591644287
    3. 'else' → logprob: -9.881791114807129
    4. '   ' → logprob: -11.506791114807129
    5. ' elif' → logprob: -11.631791114807129
    6. 'el' → logprob: -12.881791114807129
    7. ':
' → logprob: -13.506791114807129
    8. 'if' → logprob: -14.756791114807129
    9. '.' → logprob: -14.881791114807129
    10. '#elif' → logprob: -15.131791114807129

Token 762: 'elif' (ID: 29767)
  Prédit: 'elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -2.522638169466518e-05
    2. 'else' → logprob: -10.750024795532227
    3. ' elif' → logprob: -12.875024795532227
    4. 'el' → logprob: -14.000024795532227
    5. ':' → logprob: -16.375024795532227
    6. 'if' → logprob: -16.500024795532227
    7. 'elseif' → logprob: -17.125024795532227
    8. '   ' → logprob: -17.375024795532227
    9. '```' → logprob: -17.500024795532227
    10. 'elsif' → logprob: -18.125024795532227

Token 763: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0064557744190096855
    2. ' L' → logprob: -5.131455898284912
    3. '(L' → logprob: -7.756455898284912
    4. '   ' → logprob: -9.506455421447754
    5. ' (' → logprob: -10.756455421447754
    6. ' ' → logprob: -13.381455421447754
    7. '	L' → logprob: -14.006455421447754
    8. ' ' → logprob: -14.881455421447754
    9. '(' → logprob: -15.381455421447754
    10. '  ' → logprob: -15.756455421447754

Token 764: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00809499528259039
    2. ' +' → logprob: -4.883094787597656
    3. '<' → logprob: -7.633094787597656
    4. '+n' → logprob: -13.133094787597656
    5. '＋' → logprob: -14.508094787597656
    6. '+
' → logprob: -14.508094787597656
    7. 'plus' → logprob: -14.633094787597656
    8. ' plus' → logprob: -15.133094787597656
    9. ' <' → logprob: -15.883094787597656
    10. '   ' → logprob: -16.008094787597656

Token 765: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -5.512236498361744e-07
    2. ' N' → logprob: -14.500000953674316
    3. '	N' → logprob: -19.0
    4. '(N' → logprob: -19.625
    5. '<|end|>' → logprob: -19.75
    6. '   ' → logprob: -20.375
    7. '>N' → logprob: -21.25
    8. '[N' → logprob: -21.75
    9. '#' → logprob: -21.75
    10. '<N' → logprob: -22.0

Token 766: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.01163680013269186
    2. ' -' → logprob: -4.511636734008789
    3. '<' → logprob: -8.011636734008789
    4. '<=' → logprob: -9.136636734008789
    5. '<|end|>' → logprob: -9.761636734008789
    6. ' <' → logprob: -10.386636734008789
    7. ' <=' → logprob: -10.761636734008789
    8. '1' → logprob: -11.761636734008789
    9. '[-' → logprob: -12.261636734008789
    10. '[' → logprob: -12.761636734008789

Token 767: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -17.500001907348633
    4. '```' → logprob: -18.875001907348633
    5. '<|end|>' → logprob: -19.125001907348633
    6. '2' → logprob: -19.625001907348633
    7. '-' → logprob: -19.687501907348633
    8. '１' → logprob: -19.875001907348633
    9. '  ' → logprob: -19.937501907348633
    10. '>' → logprob: -19.937501907348633

Token 768: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -12.87500286102295
    3. '2' → logprob: -16.750001907348633
    4. '<|end|>' → logprob: -17.250001907348633
    5. '```' → logprob: -17.437501907348633
    6. '   ' → logprob: -17.625001907348633
    7. '>' → logprob: -18.062501907348633
    8. '۱' → logprob: -18.375001907348633
    9. '-' → logprob: -18.625001907348633
    10. '0' → logprob: -19.125001907348633

Token 769: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.048591457307338715
    2. ' <' → logprob: -3.048591375350952
    3. '[' → logprob: -14.298591613769531
    4. ')' → logprob: -14.298591613769531
    5. ')<' → logprob: -14.423591613769531
    6. '<|end|>' → logprob: -14.423591613769531
    7. ' ' → logprob: -14.923591613769531
    8. '<int' → logprob: -15.298591613769531
    9. '<
' → logprob: -15.673591613769531
    10. '<=' → logprob: -16.17359161376953

Token 770: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '۰' → logprob: -18.250017166137695
    4. '=' → logprob: -19.875017166137695
    5. '   ' → logprob: -20.000017166137695
    6. '０' → logprob: -20.000017166137695
    7. 'zero' → logprob: -21.000017166137695
    8. ')' → logprob: -21.375017166137695
    9. '  ' → logprob: -21.500017166137695
    10. ':' → logprob: -21.625017166137695

Token 771: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '۰' → logprob: -18.750001907348633
    4. '０' → logprob: -20.125001907348633
    5. '   ' → logprob: -20.250001907348633
    6. '-' → logprob: -20.250001907348633
    7. '=' → logprob: -20.250001907348633
    8. '```' → logprob: -20.375001907348633
    9. '`' → logprob: -20.625001907348633
    10. '00' → logprob: -20.875001907348633

Token 772: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4742870628833771
    2. ':
' → logprob: -0.9742870330810547
    3. '   ' → logprob: -8.599287033081055
    4. ':
' → logprob: -11.599287033081055
    5. ' :
' → logprob: -11.724287033081055
    6. ' :' → logprob: -12.724287033081055
    7. ':

' → logprob: -12.849287033081055
    8. '=' → logprob: -13.849287033081055
    9. '):
' → logprob: -13.974287033081055
    10. ',' → logprob: -15.224287033081055

Token 773: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002736138121690601
    2. 'ans' → logprob: -8.250273704528809
    3. ' ans' → logprob: -12.375273704528809
    4. '#' → logprob: -12.625273704528809
    5. ':' → logprob: -13.125273704528809
    6. '	ans' → logprob: -13.250273704528809
    7. '```' → logprob: -14.625273704528809
    8. '   ' → logprob: -15.375273704528809
    9. 'Ans' → logprob: -16.250272750854492
    10. '       ' → logprob: -16.500272750854492

Token 774: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0654076337814331
    2. 'ans' → logprob: -2.8154077529907227
    3. '#' (adapté à ' #') → logprob: -5.690407752990723
    4. '	ans' → logprob: -10.315407752990723
    5. ' ans' → logprob: -11.190407752990723
    6. 'answer' → logprob: -12.815407752990723
    7. '```' → logprob: -13.190407752990723
    8. '(ans' → logprob: -13.815407752990723
    9. '   ' → logprob: -14.440407752990723
    10. '  ' → logprob: -15.065407752990723

Token 775: ' Ici' (ID: 145754)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0004330532974563539
    2. '   ' → logprob: -8.000432968139648
    3. '#' → logprob: -9.375432968139648
    4. '	ans' → logprob: -12.125432968139648
    5. ' ans' → logprob: -12.750432968139648
    6. 'answer' → logprob: -12.750432968139648
    7. '(ans' → logprob: -14.250432968139648
    8. '
' → logprob: -14.500432968139648
    9. 'anst' → logprob: -15.625432968139648
    10. 'Ans' → logprob: -16.50043296813965

Token 776: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016212647315114737
    2. ':' → logprob: -6.751621246337891
    3. '#' → logprob: -8.37662124633789
    4. 'ans' → logprob: -8.62662124633789
    5. ' ans' → logprob: -11.37662124633789
    6. '   ' → logprob: -11.62662124633789
    7. ',' → logprob: -11.75162124633789
    8. ' =' → logprob: -13.00162124633789
    9. ' #' → logprob: -13.37662124633789
    10. '=' → logprob: -13.37662124633789

Token 777: ' l' (ID: 305)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6634494662284851
    2. '   ' → logprob: -1.0384495258331299
    3. 'ans' → logprob: -2.03844952583313
    4. ' #' → logprob: -8.66344928741455
    5. 'on' → logprob: -8.78844928741455
    6. '	ans' → logprob: -9.91344928741455
    7. 'le' → logprob: -10.28844928741455
    8. '  ' → logprob: -10.53844928741455
    9. '   ' → logprob: -10.53844928741455
    10. ' ' → logprob: -10.53844928741455

Token 778: ''' (ID: 6)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.16593490540981293
    2. 'ans' → logprob: -1.9159349203109741
    3. '   ' → logprob: -5.915935039520264
    4. ' #' → logprob: -7.040935039520264
    5. 'abs' → logprob: -7.290935039520264
    6. 'a' → logprob: -8.290934562683105
    7. '=' → logprob: -8.415934562683105
    8. ' =' → logprob: -8.915934562683105
    9. ' ans' → logprob: -9.165934562683105
    10. '	ans' → logprob: -9.290934562683105

Token 779: 'élé' (ID: 15228)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.018362393602728844
    2. '#' → logprob: -5.018362522125244
    3. 'answer' → logprob: -5.393362522125244
    4. 'abs' → logprob: -5.893362522125244
    5. 'val' → logprob: -6.143362522125244
    6. 'élé' → logprob: -6.893362522125244
    7. 'element' → logprob: -7.268362522125244
    8. 'elem' → logprob: -9.018362045288086
    9. 'minimum' → logprob: -9.893362045288086
    10. 'ent' → logprob: -10.643362045288086

Token 780: 'ment' (ID: 508)
  Prédit: 'ément'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ément' → logprob: -0.21159964799880981
    2. 'ment' → logprob: -2.711599588394165
    3. 'ement' → logprob: -2.711599588394165
    4. '#' → logprob: -3.086599588394165
    5. 'é' → logprob: -5.961599826812744
    6. 'ém' → logprob: -5.961599826812744
    7. 'élé' → logprob: -6.461599826812744
    8. 'abs' → logprob: -6.461599826812744
    9. 'em' → logprob: -7.211599826812744
    10. 'elif' → logprob: -7.461599826812744

Token 781: ' le' (ID: 505)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0009876732947304845
    2. ' =' → logprob: -7.000987529754639
    3. 'val' → logprob: -10.250988006591797
    4. '=-' → logprob: -11.125988006591797
    5. '_=' → logprob: -11.625988006591797
    6. '_val' → logprob: -12.875988006591797
    7. 'abs' → logprob: -13.125988006591797
    8. '#' → logprob: -13.250988006591797
    9. '=
' → logprob: -13.375988006591797
    10. '=max' → logprob: -13.750988006591797

Token 782: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.07162269949913025
    2. '#' → logprob: -3.446622610092163
    3. 'abs' → logprob: -4.071622848510742
    4. 'val' → logprob: -4.696622848510742
    5. 'moins' → logprob: -4.696622848510742
    6. 'ans' → logprob: -7.696622848510742
    7. '+' → logprob: -8.321622848510742
    8. ' plus' → logprob: -8.821622848510742
    9. 'minimum' → logprob: -8.821622848510742
    10. '_plus' → logprob: -8.821622848510742

Token 783: ' proche' (ID: 61089)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.03429293632507324
    2. 'grand' → logprob: -4.409293174743652
    3. 'abs' → logprob: -5.409293174743652
    4. '#' → logprob: -5.659293174743652
    5. 'ab' → logprob: -6.034293174743652
    6. 'près' → logprob: -6.034293174743652
    7. 'é' → logprob: -6.534293174743652
    8. 'large' → logprob: -6.784293174743652
    9. 'neg' → logprob: -6.784293174743652
    10. 'à' → logprob: -7.034293174743652

Token 784: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.013540173880755901
    2. ' de' → logprob: -4.388540267944336
    3. 'abs' → logprob: -8.013540267944336
    4. 'à' → logprob: -8.138540267944336
    5. '=' → logprob: -9.138540267944336
    6. 'to' → logprob: -9.888540267944336
    7. 'du' → logprob: -10.013540267944336
    8. '<|end|>' → logprob: -10.263540267944336
    9. 'au' → logprob: -10.388540267944336
    10. ' =' → logprob: -10.513540267944336

Token 785: ' zéro' (ID: 182040)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007002840866334736
    2. 'zero' → logprob: -7.8757004737854
    3. 'z' → logprob: -8.125699996948242
    4. ' zéro' → logprob: -10.750699996948242
    5. 'zer' → logprob: -13.625699996948242
    6. ' ' → logprob: -14.250699996948242
    7. ' zero' → logprob: -15.750699996948242
    8. 'nul' → logprob: -15.750699996948242
    9. '０' → logprob: -16.000699996948242
    10. 'ze' → logprob: -16.500699996948242

Token 786: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018165744841098785
    2. ' =' → logprob: -4.018165588378906
    3. '=-' → logprob: -12.768165588378906
    4. '=
' → logprob: -13.143165588378906
    5. '=int' → logprob: -13.643165588378906
    6. '_=' → logprob: -13.768165588378906
    7. '_ans' → logprob: -13.893165588378906
    8. '＝' → logprob: -13.893165588378906
    9. '_' → logprob: -14.393165588378906
    10. ')' → logprob: -14.518165588378906

Token 787: ' le' (ID: 505)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0010496005415916443
    2. '(L' → logprob: -7.126049518585205
    3. ' L' → logprob: -8.626049995422363
    4. '   ' → logprob: -10.501049995422363
    5. '#' → logprob: -10.876049995422363
    6. '0' → logprob: -12.126049995422363
    7. 'l' → logprob: -12.626049995422363
    8. ' (' → logprob: -13.251049995422363
    9. '(' → logprob: -13.376049995422363
    10. '	L' → logprob: -13.376049995422363

Token 788: ' dernier' (ID: 27982)
  Prédit: 'dern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dern' → logprob: -0.5485624074935913
    2. 'L' → logprob: -0.9235624074935913
    3. '(L' → logprob: -4.048562526702881
    4. '#' → logprob: -5.923562526702881
    5. 'Dern' → logprob: -6.173562526702881
    6. 'last' → logprob: -6.923562526702881
    7. 'der' → logprob: -7.298562526702881
    8. ' dernier' → logprob: -8.173562049865723
    9. 'N' → logprob: -8.423562049865723
    10. 'plus' → logprob: -8.798562049865723

Token 789: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.27210596203804016
    2. '(L' → logprob: -2.1471059322357178
    3. 'element' → logprob: -3.3971059322357178
    4. '+' → logprob: -3.5221059322357178
    5. ' élément' → logprob: -3.5221059322357178
    6. ' element' → logprob: -5.147106170654297
    7. 'L' → logprob: -5.147106170654297
    8. '(' → logprob: -5.522106170654297
    9. ' (' → logprob: -6.772106170654297
    10. ' =' → logprob: -7.022106170654297

Token 790: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19956715404987335
    2. '=' → logprob: -1.824567198753357
    3. '   ' → logprob: -3.9495670795440674
    4. '#' → logprob: -9.449566841125488
    5. ')' → logprob: -10.074566841125488
    6. ' (' → logprob: -10.449566841125488
    7. '(' → logprob: -10.824566841125488
    8. '=-' → logprob: -10.949566841125488
    9. '    ' → logprob: -11.074566841125488
    10. '(ans' → logprob: -11.199566841125488

Token 791: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.045508187264204025
    2. ' la' → logprob: -3.1705081462860107
    3. 'range' → logprob: -6.92050838470459
    4. '#' → logprob: -7.54550838470459
    5. 'l' → logprob: -7.54550838470459
    6. 'the' → logprob: -8.17050838470459
    7. 'L' → logprob: -9.42050838470459
    8. 'La' → logprob: -11.29550838470459
    9. 'tail' → logprob: -11.79550838470459
    10. 's' → logprob: -12.04550838470459

Token 792: ' suite' (ID: 13800)
  Prédit: 'suite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'suite' → logprob: -0.10302905738353729
    2. 'sequence' → logprob: -3.1030290126800537
    3. 'liste' → logprob: -3.8530290126800537
    4. 'range' → logprob: -3.9780290126800537
    5. '#' → logprob: -5.103029251098633
    6. 's' → logprob: -5.353029251098633
    7. 'sé' → logprob: -7.228029251098633
    8. '   ' → logprob: -8.103029251098633
    9. 'serie' → logprob: -8.353029251098633
    10. 'list' → logprob: -8.603029251098633

Token 793: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41391825675964355
    2. ' =' → logprob: -1.2889182567596436
    3. '=' → logprob: -2.7889182567596436
    4. ',' → logprob: -7.288918495178223
    5. ')' → logprob: -8.663918495178223
    6. '    ' → logprob: -8.788918495178223
    7. '#' → logprob: -8.913918495178223
    8. ' (' → logprob: -9.163918495178223
    9. '(' → logprob: -9.288918495178223
    10. '  ' → logprob: -9.663918495178223

Token 794: ' soit' (ID: 17293)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027105232700705528
    2. 'ans' → logprob: -3.6521053314208984
    3. '#' → logprob: -7.902105331420898
    4. ' ans' → logprob: -8.152105331420898
    5. '	ans' → logprob: -9.527105331420898
    6. '(ans' → logprob: -10.277105331420898
    7. '  ' → logprob: -12.214605331420898
    8. '`' → logprob: -12.652105331420898
    9. 'answer' → logprob: -12.652105331420898
    10. '    ' → logprob: -12.964605331420898

Token 795: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0004212594940327108
    2. '(L' → logprob: -8.500421524047852
    3. '   ' → logprob: -9.000421524047852
    4. ' L' → logprob: -9.375421524047852
    5. '#' → logprob: -12.875421524047852
    6. '`' → logprob: -13.000421524047852
    7. '	L' → logprob: -13.125421524047852
    8. ' (' → logprob: -14.750421524047852
    9. ' ' → logprob: -15.250421524047852
    10. '  ' → logprob: -15.500421524047852

Token 796: '+' (ID: 10)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5762728452682495
    2. '+' → logprob: -0.8262728452682495
    3. '   ' → logprob: -8.201272964477539
    4. '+n' → logprob: -10.451272964477539
    5. ' ' → logprob: -11.576272964477539
    6. ' ' → logprob: -11.701272964477539
    7. '  ' → logprob: -12.701272964477539
    8. '    ' → logprob: -13.201272964477539
    9. '#' → logprob: -13.826272964477539
    10. '+#' → logprob: -13.951272964477539

Token 797: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -3.7697225252486533e-06
    2. ' N' → logprob: -12.625003814697266
    3. '(N' → logprob: -14.875003814697266
    4. '   ' → logprob: -17.250003814697266
    5. '	N' → logprob: -17.500003814697266
    6. '[N' → logprob: -19.000003814697266
    7. '`' → logprob: -19.500003814697266
    8. '+' → logprob: -19.500003814697266
    9. '<N' → logprob: -19.500003814697266
    10. '(' → logprob: -19.625003814697266

Token 798: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.014169970527291298
    2. ' -' → logprob: -4.264170169830322
    3. '   ' → logprob: -12.514169692993164
    4. '#' → logprob: -14.389169692993164
    5. '<|end|>' → logprob: -14.389169692993164
    6. '`' → logprob: -14.639169692993164
    7. ' ' → logprob: -15.014169692993164
    8. '−' → logprob: -15.389169692993164
    9. '```' → logprob: -15.389169692993164
    10. '–' → logprob: -15.889169692993164

Token 799: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0005788889247924089
    2. '1' → logprob: -8.000578880310059
    3. ' -' → logprob: -8.375578880310059
    4. '–' → logprob: -12.625578880310059
    5. 'N' → logprob: -12.750578880310059
    6. '#' → logprob: -13.500578880310059
    7. '−' → logprob: -13.750578880310059
    8. '<|end|>' → logprob: -13.875578880310059
    9. '```' → logprob: -14.500578880310059
    10. 'L' → logprob: -14.625578880310059

Token 800: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00038038729690015316
    2. ')' → logprob: -8.875380516052246
    3. ',' → logprob: -9.625380516052246
    4. '
' → logprob: -10.000380516052246
    5. '+' → logprob: -10.125380516052246
    6. '=' → logprob: -11.375380516052246
    7. '.' → logprob: -11.375380516052246
    8. ':' → logprob: -11.375380516052246
    9. 'abs' → logprob: -11.500380516052246
    10. 'ans' → logprob: -12.250380516052246

Token 801: 'le' (ID: 282)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07593929767608643
    2. '   ' → logprob: -2.950939178466797
    3. ').' → logprob: -4.575939178466797
    4. '),' → logprob: -4.700939178466797
    5. ')
' → logprob: -7.200939178466797
    6. '#' → logprob: -8.700939178466797
    7. ')#' → logprob: -8.700939178466797
    8. '):
' → logprob: -9.450939178466797
    9. '):' → logprob: -9.450939178466797
    10. ' )' → logprob: -10.200939178466797

Token 802: ' moins' (ID: 15924)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4858214557170868
    2. 'plus' → logprob: -1.1108214855194092
    3. 'largest' → logprob: -3.860821485519409
    4. ' plus' → logprob: -4.48582124710083
    5. 'N' → logprob: -4.86082124710083
    6. 'dern' → logprob: -5.61082124710083
    7. 'closest' → logprob: -6.36082124710083
    8. '#' → logprob: -6.48582124710083
    9. 'token' → logprob: -6.61082124710083
    10. ' +' → logprob: -6.61082124710083

Token 803: ' nég' (ID: 55805)
  Prédit: ' nég'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nég' → logprob: -0.21452797949314117
    2. 'negative' → logprob: -2.4645280838012695
    3. 'abs' → logprob: -2.9645280838012695
    4. 'neg' → logprob: -4.2145280838012695
    5. ' negative' → logprob: -4.7145280838012695
    6. ' negatif' → logprob: -4.9645280838012695
    7. 'n' → logprob: -5.5895280838012695
    8. '1' → logprob: -5.8395280838012695
    9. '+' → logprob: -6.0895280838012695
    10. '-' → logprob: -6.5895280838012695

Token 804: 'atif' (ID: 23984)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4689996838569641
    2. 'atif' → logprob: -1.2189996242523193
    3. 'itif' → logprob: -3.0939996242523193
    4. '-' → logprob: -4.718999862670898
    5. '+' → logprob: -4.843999862670898
    6. 'if' → logprob: -5.218999862670898
    7. ')' → logprob: -5.718999862670898
    8. 'i' → logprob: -6.343999862670898
    9. 'é' → logprob: -6.468999862670898
    10. 'atifs' → logprob: -7.093999862670898

Token 805: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04168764874339104
    2. ').' → logprob: -3.2916877269744873
    3. '   ' → logprob: -5.916687488555908
    4. ')
' → logprob: -7.916687488555908
    5. '),' → logprob: -8.416687965393066
    6. ' )' → logprob: -8.416687965393066
    7. ').
' → logprob: -10.791687965393066
    8. ' ).' → logprob: -11.166687965393066
    9. ' ' → logprob: -11.291687965393066
    10. ')**' → logprob: -11.541687965393066

Token 806: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.20470286905765533
    2. '   ' → logprob: -1.7047028541564941
    3. '=' → logprob: -6.454702854156494
    4. '	ans' → logprob: -7.454702854156494
    5. ' ans' → logprob: -8.204703330993652
    6. 'answer' → logprob: -8.829703330993652
    7. '(ans' → logprob: -9.079703330993652
    8. ' =' → logprob: -9.204703330993652
    9. '```' → logprob: -9.204703330993652
    10. ',' → logprob: -9.454703330993652

Token 807: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.055022433400154114
    2. '   ' → logprob: -2.9300224781036377
    3. ' ans' → logprob: -9.680022239685059
    4. '	ans' → logprob: -9.805022239685059
    5. 'answer' → logprob: -12.055022239685059
    6. '=' → logprob: -12.180022239685059
    7. '(ans' → logprob: -12.180022239685059
    8. '
' → logprob: -13.555022239685059
    9. '```' → logprob: -13.680022239685059
    10. '    
' → logprob: -14.055022239685059

Token 808: ' On' (ID: 2160)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -2.8325677703833207e-05
    2. '   ' → logprob: -10.750028610229492
    3. 'answer' → logprob: -12.750028610229492
    4. ' ans' → logprob: -13.000028610229492
    5. '#' → logprob: -14.250028610229492
    6. '	ans' → logprob: -14.500028610229492
    7. '(ans' → logprob: -16.000028610229492
    8. '```' → logprob: -16.000028610229492
    9. '
' → logprob: -16.125028610229492
    10. 'abs' → logprob: -16.875028610229492

Token 809: ' retire' (ID: 48410)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5141778588294983
    2. 'subtract' → logprob: -2.1391777992248535
    3. 'sou' → logprob: -2.6391777992248535
    4. '=' → logprob: -2.6391777992248535
    5. '#' → logprob: -3.6391777992248535
    6. '-=' → logprob: -3.7641777992248535
    7. 'elif' → logprob: -3.7641777992248535
    8. ' subtract' → logprob: -4.0141777992248535
    9. 'else' → logprob: -5.1391777992248535
    10. 's' → logprob: -5.5141777992248535

Token 810: ' cet' (ID: 19505)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -1.1686354875564575
    2. 'L' → logprob: -1.7936354875564575
    3. '   ' → logprob: -1.7936354875564575
    4. ' L' → logprob: -1.7936354875564575
    5. ' (' → logprob: -3.043635368347168
    6. 'ans' → logprob: -3.293635368347168
    7. '(L' → logprob: -3.543635368347168
    8. ' abs' → logprob: -3.668635368347168
    9. ' ans' → logprob: -4.043635368347168
    10. '(ans' → logprob: -4.793635368347168

Token 811: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.39016008377075195
    2. '+' → logprob: -1.515160083770752
    3. 'abs' → logprob: -3.640160083770752
    4. ' élément' → logprob: -3.640160083770752
    5. 'element' → logprob: -3.765160083770752
    6. 'lement' → logprob: -4.640160083770752
    7. ' element' → logprob: -5.265160083770752
    8. 'elem' → logprob: -6.015160083770752
    9. '<|end|>' → logprob: -7.015160083770752
    10. 'éli' → logprob: -7.140160083770752

Token 812: ' de' (ID: 334)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7657232880592346
    2. '   ' → logprob: -1.2657232284545898
    3. ' from' → logprob: -2.64072322845459
    4. '+' → logprob: -3.01572322845459
    5. ' à' → logprob: -3.39072322845459
    6. ')' → logprob: -3.76572322845459
    7. '=' → logprob: -4.01572322845459
    8. ' =' → logprob: -4.76572322845459
    9. 'abs' → logprob: -4.89072322845459
    10. 'à' → logprob: -5.01572322845459

Token 813: ' la' (ID: 557)
  Prédit: 'Sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sum' → logprob: -0.08271659910678864
    2. 'la' → logprob: -2.582716703414917
    3. ' la' → logprob: -5.832716464996338
    4. 'l' → logprob: -7.207716464996338
    5. ' Sum' → logprob: -9.332716941833496
    6. 'the' → logprob: -10.957716941833496
    7. '#' → logprob: -11.207716941833496
    8. 'Summ' → logprob: -11.707716941833496
    9. '_sum' → logprob: -12.332716941833496
    10. 'La' → logprob: -12.457716941833496

Token 814: ' somme' (ID: 64484)
  Prédit: 'Sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sum' → logprob: -0.0053887381218373775
    2. 'sum' → logprob: -5.7553887367248535
    3. 'Som' → logprob: -6.2553887367248535
    4. 's' → logprob: -9.005389213562012
    5. 'S' → logprob: -10.380389213562012
    6. ' Sum' → logprob: -10.380389213562012
    7. '_sum' → logprob: -10.755389213562012
    8. 'total' → logprob: -11.130389213562012
    9. 'som' → logprob: -11.130389213562012
    10. ' somme' → logprob: -11.130389213562012

Token 815: ' totale' (ID: 52898)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028129536658525467
    2. ' =' → logprob: -4.653129577636719
    3. '=' → logprob: -4.778129577636719
    4. ':' → logprob: -5.153129577636719
    5. '-' → logprob: -6.653129577636719
    6. ',' → logprob: -7.528129577636719
    7. '.' → logprob: -7.653129577636719
    8. 'from' → logprob: -7.903129577636719
    9. ' -' → logprob: -8.028129577636719
    10. '	ans' → logprob: -8.778129577636719

Token 816: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06249728798866272
    2. '=' → logprob: -3.18749737739563
    3. ' =' → logprob: -4.437497138977051
    4. ':' → logprob: -5.687497138977051
    5. 'ans' → logprob: -5.812497138977051
    6. ':
' → logprob: -7.687497138977051
    7. ',' → logprob: -8.81249713897705
    8. ' ans' → logprob: -9.06249713897705
    9. '	ans' → logprob: -9.06249713897705
    10. '  ' → logprob: -10.18749713897705

Token 817: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01201766449958086
    2. 'ans' → logprob: -4.512017726898193
    3. 'elif' → logprob: -7.387017726898193
    4. 'else' → logprob: -8.512017250061035
    5. '	ans' → logprob: -9.762017250061035
    6. ' ans' → logprob: -9.887017250061035
    7. ':' → logprob: -11.262017250061035
    8. '(ans' → logprob: -11.387017250061035
    9. '```' → logprob: -12.637017250061035
    10. '   ' → logprob: -13.012017250061035

Token 818: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.00014215784904081374
    2. '   ' → logprob: -8.875142097473145
    3. ' ans' → logprob: -13.500142097473145
    4. '	ans' → logprob: -14.375142097473145
    5. 'answer' → logprob: -16.12514305114746
    6. '(ans' → logprob: -16.50014305114746
    7. 'elif' → logprob: -16.62514305114746
    8. '
' → logprob: -17.12514305114746
    9. '#' → logprob: -17.75014305114746
    10. 'else' → logprob: -18.12514305114746

Token 819: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759395360946655
    2. ' =' → logprob: -0.8259395360946655
    3. '＝' → logprob: -16.075939178466797
    4. ' ' → logprob: -18.075939178466797
    5. '   ' → logprob: -18.950939178466797
    6. ' ' → logprob: -19.325939178466797
    7. ' =
' → logprob: -19.450939178466797
    8. '=

' → logprob: -19.450939178466797
    9. '.=' → logprob: -19.450939178466797
    10. '=
' → logprob: -19.575939178466797

Token 820: ' Sum' (ID: 34138)
  Prédit: 'Sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sum' → logprob: -4.842555426876061e-06
    2. ' Sum' → logprob: -12.250004768371582
    3. 'Summ' → logprob: -20.5000057220459
    4. '   ' → logprob: -20.7500057220459
    5. 'sum' → logprob: -20.7500057220459
    6. 'SUM' → logprob: -20.7500057220459
    7. 'S' → logprob: -21.5000057220459
    8. '(S' → logprob: -21.6250057220459
    9. '0' → logprob: -22.2500057220459
    10. '	S' → logprob: -22.5000057220459

Token 821: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5235350131988525
    2. '-' → logprob: -0.8985350131988525
    3. '+' → logprob: -7.898534774780273
    4. ' +' → logprob: -10.648534774780273
    5. '   ' → logprob: -11.648534774780273
    6. '-(' → logprob: -13.523534774780273
    7. ' ' → logprob: -13.523534774780273
    8. ' ' → logprob: -13.648534774780273
    9. '−' → logprob: -14.273534774780273
    10. '#' → logprob: -14.398534774780273

Token 822: ' (' (ID: 350)
  Prédit: '(L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.00010962257510982454
    2. '(' → logprob: -9.750109672546387
    3. ' (' → logprob: -10.625109672546387
    4. '((' → logprob: -11.000109672546387
    5. 'L' → logprob: -11.875109672546387
    6. '(abs' → logprob: -13.000109672546387
    7. 'abs' → logprob: -14.625109672546387
    8. '(N' → logprob: -15.125109672546387
    9. '   ' → logprob: -17.00010871887207
    10. '(l' → logprob: -17.25010871887207

Token 823: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -1.2113979209971149e-05
    2. '(L' → logprob: -11.375012397766113
    3. ' L' → logprob: -14.500012397766113
    4. 'abs' → logprob: -18.875011444091797
    5. '	L' → logprob: -18.875011444091797
    6. '   ' → logprob: -19.875011444091797
    7. ')L' → logprob: -20.125011444091797
    8. '(' → logprob: -20.750011444091797
    9. '#' → logprob: -20.875011444091797
    10. ' (' → logprob: -21.375011444091797

Token 824: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01815006136894226
    2. ' +' → logprob: -4.0181498527526855
    3. '＋' → logprob: -17.018150329589844
    4. ' ' → logprob: -17.768150329589844
    5. '+n' → logprob: -18.018150329589844
    6. 'import' → logprob: -18.393150329589844
    7. '+
' → logprob: -18.643150329589844
    8. 'N' → logprob: -18.768150329589844
    9. ')' → logprob: -18.893150329589844
    10. '﻿' → logprob: -19.018150329589844

Token 825: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.9027791495318525e-05
    2. ' N' → logprob: -10.875019073486328
    3. '   ' → logprob: -17.625019073486328
    4. '	N' → logprob: -18.375019073486328
    5. '(N' → logprob: -18.500019073486328
    6. '[N' → logprob: -19.250019073486328
    7. '`' → logprob: -20.125019073486328
    8. ' ' → logprob: -20.125019073486328
    9. '```' → logprob: -20.375019073486328
    10. 'n' → logprob: -20.875019073486328

Token 826: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03364846482872963
    2. ' -' → logprob: -3.4086484909057617
    3. ')' → logprob: -13.283648490905762
    4. '   ' → logprob: -15.283648490905762
    5. '#' → logprob: -15.408648490905762
    6. '−' → logprob: -15.658648490905762
    7. ' ' → logprob: -15.658648490905762
    8. '[-' → logprob: -16.658647537231445
    9. '<|end|>' → logprob: -16.658647537231445
    10. ')-' → logprob: -17.408647537231445

Token 827: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014180023572407663
    2. '-' → logprob: -8.875142097473145
    3. ' ' → logprob: -13.500142097473145
    4. '   ' → logprob: -15.500142097473145
    5. ' -' → logprob: -16.375141143798828
    6. '```' → logprob: -16.375141143798828
    7. ')' → logprob: -17.000141143798828
    8. '[' → logprob: -17.125141143798828
    9. '#' → logprob: -17.750141143798828
    10. '<|end|>' → logprob: -18.250141143798828

Token 828: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018077615823131055
    2. '-' → logprob: -8.625181198120117
    3. ' ' → logprob: -14.125181198120117
    4. '   ' → logprob: -15.875181198120117
    5. '#' → logprob: -16.375181198120117
    6. 'N' → logprob: -16.375181198120117
    7. '```' → logprob: -16.500181198120117
    8. '<|end|>' → logprob: -16.750181198120117
    9. ' -' → logprob: -17.125181198120117
    10. ')' → logprob: -17.250181198120117

Token 829: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16023743152618408
    2. ')
' → logprob: -1.910237431526184
    3. ')
' → logprob: -11.535237312316895
    4. ')#' → logprob: -13.285237312316895
    5. ')

' → logprob: -14.160237312316895
    6. 'else' → logprob: -14.785237312316895
    7. ' )' → logprob: -15.160237312316895
    8. '   ' → logprob: -15.910237312316895
    9. ' )
' → logprob: -15.910237312316895
    10. ')`
' → logprob: -16.28523826599121

Token 830: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -4.842555426876061e-06
    2. '#' → logprob: -12.375004768371582
    3. ' else' → logprob: -15.125004768371582
    4. '#else' → logprob: -15.875004768371582
    5. '```' → logprob: -16.5000057220459
    6. '}else' → logprob: -18.7500057220459
    7. '_else' → logprob: -18.8750057220459
    8. 'elif' → logprob: -19.0000057220459
    9. 'els' → logprob: -19.8750057220459
    10. 'elses' → logprob: -20.2500057220459

Token 831: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.252108633518219
    2. ':
' → logprob: -1.5021085739135742
    3. '   ' → logprob: -8.752108573913574
    4. ' :
' → logprob: -11.752108573913574
    5. ' :' → logprob: -11.877108573913574
    6. ':
' → logprob: -12.627108573913574
    7. ':

' → logprob: -13.502108573913574
    8. '#' → logprob: -14.252108573913574
    9. ':#' → logprob: -14.627108573913574
    10. '):
' → logprob: -15.752108573913574

Token 832: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12180287390947342
    2. '#' → logprob: -2.496802806854248
    3. 'min' → logprob: -3.871802806854248
    4. 'abs' → logprob: -5.121802806854248
    5. 'for' → logprob: -6.246802806854248
    6. 'i' → logprob: -6.746802806854248
    7. 'idx' → logprob: -7.996802806854248
    8. 'pos' → logprob: -8.496803283691406
    9. 'mid' → logprob: -8.746803283691406
    10. 'temp' → logprob: -8.746803283691406

Token 833: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -1.124812364578247
    2. 'if' → logprob: -1.374812364578247
    3. 'ans' → logprob: -2.124812364578247
    4. 'abs' → logprob: -2.249812364578247
    5. 'min' → logprob: -2.874812364578247
    6. '   ' → logprob: -2.999812364578247
    7. 'zero' → logprob: -4.374812126159668
    8. 'for' → logprob: -4.499812126159668
    9. 'pos' → logprob: -4.624812126159668
    10. '0' → logprob: -4.749812126159668

Token 834: ' Dans' (ID: 22082)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.42649656534194946
    2. 'if' → logprob: -1.9264965057373047
    3. 'min' → logprob: -2.9264965057373047
    4. 'for' → logprob: -3.3014965057373047
    5. 'm' → logprob: -4.051496505737305
    6. 'zero' → logprob: -4.051496505737305
    7. 'pos' → logprob: -4.426496505737305
    8. 'abs' → logprob: -4.801496505737305
    9. 'ans' → logprob: -4.801496505737305
    10. 'i' → logprob: -5.051496505737305

Token 835: ' tous' (ID: 10688)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7236213684082031
    2. 'abs' → logprob: -1.2236213684082031
    3. '   ' → logprob: -2.348621368408203
    4. '#' → logprob: -2.473621368408203
    5. 'range' → logprob: -4.098621368408203
    6. 'L' → logprob: -5.348621368408203
    7. 'l' → logprob: -5.473621368408203
    8. '0' → logprob: -5.973621368408203
    9. 'la' → logprob: -6.598621368408203
    10. 'r' → logprob: -6.973621368408203

Token 836: ' les' (ID: 1341)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09059854596853256
    2. '   ' → logprob: -2.5905985832214355
    3. 'else' → logprob: -4.8405985832214355
    4. '#' → logprob: -6.8405985832214355
    5. 'les' → logprob: -7.2155985832214355
    6. 'le' → logprob: -7.3405985832214355
    7. 'elif' → logprob: -7.8405985832214355
    8. ' else' → logprob: -8.465598106384277
    9. 'cas' → logprob: -9.340598106384277
    10. ' :' → logprob: -9.465598106384277

Token 837: ' autres' (ID: 18701)
  Prédit: 'cas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cas' → logprob: -0.08321143686771393
    2. 'aut' → logprob: -3.3332114219665527
    3. 'else' → logprob: -3.3332114219665527
    4. 'cases' → logprob: -5.208211421966553
    5. ':' → logprob: -6.833211421966553
    6. '#' → logprob: -7.208211421966553
    7. 'other' → logprob: -8.333211898803711
    8. ' cas' → logprob: -8.458211898803711
    9. ' autres' → logprob: -8.458211898803711
    10. '   ' → logprob: -9.208211898803711

Token 838: ' cas' (ID: 2108)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0014751063426956534
    2. 'cas' → logprob: -6.8764753341674805
    3. ' cas' → logprob: -8.37647533416748
    4. ' :' → logprob: -9.75147533416748
    5. 'cases' → logprob: -9.87647533416748
    6. ' casos' → logprob: -10.37647533416748
    7. ' cases' → logprob: -10.87647533416748
    8. 'es' → logprob: -11.25147533416748
    9. 'else' → logprob: -11.50147533416748
    10. ':
' → logprob: -12.00147533416748

Token 839: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008080685511231422
    2. ':
' → logprob: -5.25808048248291
    3. '   ' → logprob: -5.88308048248291
    4. ' :' → logprob: -10.75808048248291
    5. '):' → logprob: -11.75808048248291
    6. ',' → logprob: -12.25808048248291
    7. '=' → logprob: -12.63308048248291
    8. '{' → logprob: -12.75808048248291
    9. '#' → logprob: -13.13308048248291
    10. ':
' → logprob: -13.13308048248291

Token 840: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5267658233642578
    2. '#' → logprob: -1.6517658233642578
    3. 'abs' → logprob: -1.6517658233642578
    4. 'ans' → logprob: -4.651765823364258
    5. 'min' → logprob: -4.776765823364258
    6. 'if' → logprob: -5.401765823364258
    7. 'for' → logprob: -7.276765823364258
    8. 'pos' → logprob: -8.026765823364258
    9. 'idx' → logprob: -8.401765823364258
    10. 'i' → logprob: -8.651765823364258

Token 841: ' suite' (ID: 13800)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.13034184277057648
    2. 'abs' → logprob: -2.7553417682647705
    3. 'val' → logprob: -3.5053417682647705
    4. 'min' → logprob: -4.75534200668335
    5. 'for' → logprob: -5.50534200668335
    6. 'i' → logprob: -5.88034200668335
    7. 'pos' → logprob: -6.25534200668335
    8. 'L' → logprob: -6.63034200668335
    9. 'm' → logprob: -6.88034200668335
    10. 'a' → logprob: -6.88034200668335

Token 842: ' d' (ID: 272)
  Prédit: 'cont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cont' → logprob: -1.3509318828582764
    2. ' contient' → logprob: -1.7259318828582764
    3. ' contains' → logprob: -2.3509318828582764
    4. ' =' → logprob: -2.3509318828582764
    5. 'contains' → logprob: -2.8509318828582764
    6. 'est' → logprob: -2.9759318828582764
    7. '#' → logprob: -3.2259318828582764
    8. ' est' → logprob: -3.3509318828582764
    9. 'con' → logprob: -3.6009318828582764
    10. ' cont' → logprob: -3.7259318828582764

Token 843: ''ent' (ID: 53422)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.5999051928520203
    2. 'inte' → logprob: -1.849905252456665
    3. 'N' → logprob: -2.224905252456665
    4. 'L' → logprob: -2.974905252456665
    5. 'int' → logprob: -3.099905252456665
    6. '[N' → logprob: -3.974905252456665
    7. 'ints' → logprob: -4.224905014038086
    8. 'range' → logprob: -4.224905014038086
    9. ''ent' → logprob: -4.474905014038086
    10. '[L' → logprob: -5.224905014038086

Token 844: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.015123500488698483
    2. 'ier' → logprob: -4.89012336730957
    3. 'ée' → logprob: -5.76512336730957
    4. 'ières' → logprob: -6.76512336730957
    5. 'rée' → logprob: -7.01512336730957
    6. 'ié' → logprob: -7.89012336730957
    7. 'i' → logprob: -8.26512336730957
    8. 'é' → logprob: -8.39012336730957
    9. 'ière' → logprob: -8.89012336730957
    10. 'er' → logprob: -8.89012336730957

Token 845: ' contient' (ID: 89067)
  Prédit: 'cont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cont' → logprob: -0.07432232052087784
    2. 'con' → logprob: -2.94932222366333
    3. ' contient' → logprob: -5.19932222366333
    4. 'compr' → logprob: -5.19932222366333
    5. 'incl' → logprob: -6.07432222366333
    6. '   ' → logprob: -6.94932222366333
    7. ' cont' → logprob: -6.94932222366333
    8. 'est' → logprob: -7.44932222366333
    9. 'conten' → logprob: -7.44932222366333
    10. ' comprend' → logprob: -8.199322700500488

Token 846: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001037691137753427
    2. 'des' → logprob: -7.37603759765625
    3. '#' → logprob: -8.00103759765625
    4. 'le' → logprob: -10.50103759765625
    5. 'zero' → logprob: -10.87603759765625
    6. ' des' → logprob: -11.50103759765625
    7. 'au' → logprob: -12.87603759765625
    8. ' ' → logprob: -13.00103759765625
    9. 'un' → logprob: -13.50103759765625
    10. 'les' → logprob: -13.62603759765625

Token 847: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000431861262768507
    2. 'des' → logprob: -7.875432014465332
    3. 'zero' → logprob: -10.750432014465332
    4. '#' → logprob: -11.375432014465332
    5. 'le' → logprob: -12.125432014465332
    6. 'au' → logprob: -12.750432014465332
    7. 'les' → logprob: -13.250432014465332
    8. ' des' → logprob: -13.500432014465332
    9. 'un' → logprob: -13.750432014465332
    10. ' ' → logprob: -14.250432014465332

Token 848: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15731032192707062
    2. ' or' → logprob: -2.7823102474212646
    3. ',' → logprob: -3.4073102474212646
    4. ':' → logprob: -3.5323102474212646
    5. ' ou' → logprob: -5.032310485839844
    6. '  ' → logprob: -5.407310485839844
    7. '    ' → logprob: -5.907310485839844
    8. ' ' → logprob: -6.407310485839844
    9. 'or' → logprob: -7.032310485839844
    10. '	or' → logprob: -7.157310485839844

Token 849: ' ou' (ID: 2031)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0021332520991563797
    2. '#' → logprob: -7.377133369445801
    3. '	' → logprob: -7.877133369445801
    4. 'ou' → logprob: -8.8771333694458
    5. '   ' → logprob: -8.8771333694458
    6. '  ' → logprob: -9.0021333694458
    7. 'or' → logprob: -9.2521333694458
    8. '	or' → logprob: -9.3771333694458
    9. '\t' → logprob: -10.0021333694458
    10. ' or' → logprob: -10.0021333694458

Token 850: ' des' (ID: 731)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -1.4138861894607544
    2. ' des' → logprob: -1.4138861894607544
    3. '1' → logprob: -2.038886070251465
    4. 'L' → logprob: -2.663886070251465
    5. '0' → logprob: -2.913886070251465
    6. ' au' → logprob: -2.913886070251465
    7. ' une' → logprob: -3.288886070251465
    8. '#' → logprob: -3.413886070251465
    9. ' un' → logprob: -3.663886070251465
    10. ' ' → logprob: -3.663886070251465

Token 851: ' ent' (ID: 1121)
  Prédit: ' éléments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' éléments' → logprob: -1.1183818578720093
    2. ' nombres' → logprob: -1.1183818578720093
    3. 'élé' → logprob: -2.118381977081299
    4. ' valeurs' → logprob: -3.118381977081299
    5. '#' → logprob: -3.618381977081299
    6. ' nég' → logprob: -4.243381977081299
    7. '0' → logprob: -4.368381977081299
    8. '1' → logprob: -4.493381977081299
    9. ' espaces' → logprob: -4.493381977081299
    10. 'val' → logprob: -4.493381977081299

Token 852: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.05871046334505081
    2. 'ier' → logprob: -3.3087105751037598
    3. 'ières' → logprob: -4.55871057510376
    4. 'ié' → logprob: -5.43371057510376
    5. 'i' → logprob: -6.18371057510376
    6. 'ière' → logprob: -6.43371057510376
    7. 'e' → logprob: -7.55871057510376
    8. 'er' → logprob: -8.183710098266602
    9. 'ités' → logprob: -8.683710098266602
    10. '#' → logprob: -8.683710098266602

Token 853: ' posit' (ID: 13047)
  Prédit: ' proches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' proches' → logprob: -1.5199689865112305
    2. ' nég' → logprob: -1.8949689865112305
    3. '   ' → logprob: -2.1449689865112305
    4. ',' → logprob: -2.5199689865112305
    5. ' qui' → logprob: -2.6449689865112305
    6. ' et' → logprob: -2.7699689865112305
    7. ' ayant' → logprob: -3.2699689865112305
    8. ' compris' → logprob: -3.3949689865112305
    9. ' présents' → logprob: -3.3949689865112305
    10. 's' → logprob: -3.5199689865112305

Token 854: 'ifs' (ID: 14119)
  Prédit: 'ifs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifs' → logprob: -0.000540166103746742
    2. 'atifs' → logprob: -8.000539779663086
    3. 'if' → logprob: -9.250539779663086
    4. 's' → logprob: -10.625539779663086
    5. 'ieux' → logprob: -10.875539779663086
    6. '#' → logprob: -11.375539779663086
    7. 'is' → logprob: -11.500539779663086
    8. 'i' → logprob: -11.625539779663086
    9. 'és' → logprob: -11.750539779663086
    10. 'eux' → logprob: -12.625539779663086

Token 855: ' et' (ID: 859)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.5289373397827148
    2. ' ou' → logprob: -1.2789373397827148
    3. 'or' → logprob: -3.028937339782715
    4. 'ou' → logprob: -3.403937339782715
    5. ',' → logprob: -3.653937339782715
    6. '   ' → logprob: -4.528937339782715
    7. ' ' → logprob: -5.528937339782715
    8. '<|end|>' → logprob: -6.028937339782715
    9. '	or' → logprob: -6.403937339782715
    10. ')' → logprob: -6.528937339782715

Token 856: ' nég' (ID: 55805)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.020181534811854362
    2. ' nég' → logprob: -4.270181655883789
    3. 'neg' → logprob: -5.145181655883789
    4. 'né' → logprob: -9.395181655883789
    5. 'des' → logprob: -10.145181655883789
    6. ' n' → logprob: -12.020181655883789
    7. ' ' → logprob: -12.145181655883789
    8. '   ' → logprob: -12.145181655883789
    9. '0' → logprob: -12.270181655883789
    10. '```' → logprob: -12.520181655883789

Token 857: 'atifs' (ID: 66205)
  Prédit: 'ifs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifs' → logprob: -0.016422472894191742
    2. 'atifs' → logprob: -4.141422271728516
    3. 'if' → logprob: -9.141422271728516
    4. 's' → logprob: -9.266422271728516
    5. 'és' → logprob: -9.266422271728516
    6. 'is' → logprob: -11.141422271728516
    7. 'i' → logprob: -11.141422271728516
    8. '#' → logprob: -11.266422271728516
    9. 'ics' → logprob: -11.641422271728516
    10. 'it' → logprob: -12.141422271728516

Token 858: ' de' (ID: 334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6357433199882507
    2. '   ' → logprob: -0.7607433199882507
    3. ':
' → logprob: -6.885743141174316
    4. '.' → logprob: -6.885743141174316
    5. '#' → logprob: -8.010743141174316
    6. ' :' → logprob: -8.885743141174316
    7. ',' → logprob: -8.885743141174316
    8. '):' → logprob: -9.260743141174316
    9. '=' → logprob: -9.885743141174316
    10. ' =' → logprob: -10.135743141174316

Token 859: ' part' (ID: 997)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.2970427870750427
    2. 'man' → logprob: -2.1720428466796875
    3. 'fa' → logprob: -2.2970428466796875
    4. 'L' → logprob: -3.6720428466796875
    5. 'val' → logprob: -5.0470428466796875
    6. 'la' → logprob: -6.0470428466796875
    7. 'mixed' → logprob: -6.1720428466796875
    8. 'long' → logprob: -6.5470428466796875
    9. 'mix' → logprob: -7.1720428466796875
    10. 'mil' → logprob: -7.4220428466796875

Token 860: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.3714345693588257
    2. 'et' → logprob: -1.3714345693588257
    3. '-et' → logprob: -3.7464346885681152
    4. ' ' → logprob: -4.496434688568115
    5. '-' → logprob: -4.746434688568115
    6. ' and' → logprob: -5.621434688568115
    7. ' à' → logprob: -6.621434688568115
    8. 'à' → logprob: -6.746434688568115
    9. '-à' → logprob: -6.996434688568115
    10. 'out' → logprob: -7.371434688568115

Token 861: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6704446077346802
    2. ''autre' → logprob: -1.2954446077346802
    3. 'aut' → logprob: -1.5454446077346802
    4. '’autre' → logprob: -6.920444488525391
    5. 'da' → logprob: -9.17044448852539
    6. '#' → logprob: -9.29544448852539
    7. '_d' → logprob: -9.54544448852539
    8. ''autres' → logprob: -10.04544448852539
    9. 'other' → logprob: -10.29544448852539
    10. ' autre' → logprob: -10.42044448852539

Token 862: ''autre' (ID: 52145)
  Prédit: ''autre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''autre' → logprob: -0.00385102815926075
    2. 'aut' → logprob: -6.128850936889648
    3. ''autres' → logprob: -6.753850936889648
    4. ''aut' → logprob: -8.253850936889648
    5. '’autre' → logprob: -8.378850936889648
    6. ''ordre' → logprob: -13.128850936889648
    7. ' autre' → logprob: -14.128850936889648
    8. ''' → logprob: -14.378850936889648
    9. '’autres' → logprob: -14.628850936889648
    10. 'autore' → logprob: -14.753850936889648

Token 863: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09794621914625168
    2. ':' → logprob: -2.8479461669921875
    3. ' de' → logprob: -4.4729461669921875
    4. ' of' → logprob: -4.9729461669921875
    5. ',' → logprob: -5.4729461669921875
    6. ' du' → logprob: -5.4729461669921875
    7. 'de' → logprob: -5.9729461669921875
    8. '.' → logprob: -6.3479461669921875
    9. '#' → logprob: -6.5979461669921875
    10. 'of' → logprob: -7.0979461669921875

Token 864: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003045569872483611
    2. ' ' → logprob: -6.753045558929443
    3. 'zero' → logprob: -7.128045558929443
    4. ' zéro' → logprob: -7.378045558929443
    5. 'l' → logprob: -8.753046035766602
    6. 'z' → logprob: -8.878046035766602
    7. ' zero' → logprob: -9.503046035766602
    8. 'la' → logprob: -10.378046035766602
    9. ' l' → logprob: -11.003046035766602
    10. ' la' → logprob: -11.628046035766602

Token 865: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010522440075874329
    2. 'z' → logprob: -4.635522365570068
    3. 'zero' → logprob: -7.635522365570068
    4. 'l' → logprob: -8.760522842407227
    5. 'la' → logprob: -9.135522842407227
    6. ' zéro' → logprob: -11.510522842407227
    7. '```' → logprob: -12.635522842407227
    8. 'le' → logprob: -13.760522842407227
    9. '`' → logprob: -14.260522842407227
    10. ' z' → logprob: -14.260522842407227

Token 866: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5848760008811951
    2. ':' → logprob: -0.8348760008811951
    3. ':
' → logprob: -5.08487606048584
    4. '.' → logprob: -7.20987606048584
    5. '#' → logprob: -7.33487606048584
    6. ' :' → logprob: -8.45987606048584
    7. '):' → logprob: -8.95987606048584
    8. ',' → logprob: -9.08487606048584
    9. '=' → logprob: -9.45987606048584
    10. '):
' → logprob: -9.58487606048584

Token 867: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4826667904853821
    2. 'i' → logprob: -2.2326667308807373
    3. 'abs' → logprob: -2.3576667308807373
    4. 'if' → logprob: -2.7326667308807373
    5. 'min' → logprob: -2.9826667308807373
    6. 'pos' → logprob: -4.357666969299316
    7. '#' → logprob: -4.732666969299316
    8. 'idx' → logprob: -4.857666969299316
    9. 'for' → logprob: -5.482666969299316
    10. 'zero' → logprob: -5.732666969299316

Token 868: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.657802939414978
    2. 'min' → logprob: -2.0328030586242676
    3. 'abs' → logprob: -2.2828030586242676
    4. '#' (adapté à ' #') → logprob: -2.5328030586242676
    5. 'pos' → logprob: -3.2828030586242676
    6. 'zero' → logprob: -3.5328030586242676
    7. 'idx' → logprob: -3.9078030586242676
    8. '   ' → logprob: -4.282803058624268
    9. 'm' → logprob: -4.532803058624268
    10. 'closest' → logprob: -5.157803058624268

Token 869: ' Dans' (ID: 22082)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.7148298025131226
    2. 'if' → logprob: -1.8398298025131226
    3. 'i' → logprob: -2.089829921722412
    4. 'abs' → logprob: -2.089829921722412
    5. 'min' → logprob: -2.464829921722412
    6. 'for' → logprob: -2.839829921722412
    7. 'idx' → logprob: -2.839829921722412
    8. '   ' → logprob: -2.964829921722412
    9. 'pos' → logprob: -3.839829921722412
    10. 'm' → logprob: -3.839829921722412

Token 870: ' ce' (ID: 2357)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.04585857689380646
    2. 'L' → logprob: -4.170858383178711
    3. 'val' → logprob: -4.295858383178711
    4. '#' → logprob: -5.920858383178711
    5. '0' → logprob: -5.920858383178711
    6. 'ab' → logprob: -6.170858383178711
    7. 'i' → logprob: -6.670858383178711
    8. 'a' → logprob: -6.920858383178711
    9. 'l' → logprob: -7.045858383178711
    10. 'la' → logprob: -7.545858383178711

Token 871: ' cas' (ID: 2108)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1840094327926636
    2. 'range' → logprob: -1.5590094327926636
    3. 'abs' → logprob: -1.5590094327926636
    4. ' range' → logprob: -1.9340094327926636
    5. ' abs' → logprob: -3.184009552001953
    6. ':' → logprob: -3.809009552001953
    7. 'else' → logprob: -4.309009552001953
    8. 'for' → logprob: -4.934009552001953
    9. ' ' → logprob: -5.309009552001953
    10. '#' → logprob: -5.434009552001953

Token 872: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18785810470581055
    2. ':' → logprob: -1.8128581047058105
    3. ':
' → logprob: -5.3128581047058105
    4. ',' → logprob: -7.5628581047058105
    5. '#' → logprob: -7.8128581047058105
    6. ' =' → logprob: -7.8128581047058105
    7. ' :' → logprob: -8.687858581542969
    8. '=' → logprob: -8.812858581542969
    9. '    ' → logprob: -8.875358581542969
    10. '):
' → logprob: -9.000358581542969

Token 873: ' celui' (ID: 27857)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.317960649728775
    2. 'if' → logprob: -1.4429606199264526
    3. '   ' → logprob: -3.567960739135742
    4. '#' → logprob: -5.817960739135742
    5. 'abs' → logprob: -5.942960739135742
    6. ' ans' → logprob: -7.692960739135742
    7. ' if' → logprob: -7.692960739135742
    8. '0' → logprob: -7.817960739135742
    9. 'min' → logprob: -7.817960739135742
    10. '	ans' → logprob: -9.067960739135742

Token 874: ' dont' (ID: 11562)
  Prédit: '_abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_abs' → logprob: -1.0183664560317993
    2. 'abs' → logprob: -1.1433664560317993
    3. '_' → logprob: -2.0183663368225098
    4. '(abs' → logprob: -2.3933663368225098
    5. '   ' → logprob: -3.5183663368225098
    6. '=' → logprob: -4.14336633682251
    7. ' =' → logprob: -4.39336633682251
    8. '_min' → logprob: -4.51836633682251
    9. '_val' → logprob: -5.64336633682251
    10. '|' → logprob: -6.01836633682251

Token 875: ' la' (ID: 557)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.07802615314722061
    2. 'la' → logprob: -2.703026056289673
    3. 'l' → logprob: -5.328026294708252
    4. '#' → logprob: -6.578026294708252
    5. '(abs' → logprob: -6.828026294708252
    6. ' abs' → logprob: -8.328025817871094
    7. ' la' → logprob: -8.703025817871094
    8. 'val' → logprob: -9.578025817871094
    9. 'min' → logprob: -9.703025817871094
    10. '1' → logprob: -10.703025817871094

Token 876: ' valeur' (ID: 41664)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.023740718141198158
    2. 'val' → logprob: -3.773740768432617
    3. 'value' → logprob: -8.273740768432617
    4. ' abs' → logprob: -9.773740768432617
    5. 'min' → logprob: -10.273740768432617
    6. '(abs' → logprob: -10.523740768432617
    7. 'L' → logprob: -10.773740768432617
    8. 'ab' → logprob: -11.023740768432617
    9. 'Abs' → logprob: -11.398740768432617
    10. '<|end|>' → logprob: -11.648740768432617

Token 877: ' absol' (ID: 7374)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.09134552627801895
    2. 'ab' → logprob: -2.4663455486297607
    3. 'absolute' → logprob: -6.841345310211182
    4. ' absol' → logprob: -7.716345310211182
    5. 'min' → logprob: -7.966345310211182
    6. '#' → logprob: -8.71634578704834
    7. 'minimum' → logprob: -9.34134578704834
    8. 'import' → logprob: -9.96634578704834
    9. 'minimal' → logprob: -10.09134578704834
    10. '```' → logprob: -10.84134578704834

Token 878: 'ue' (ID: 466)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.18977545201778412
    2. 'abs' → logprob: -2.1897754669189453
    3. 'e' → logprob: -3.5647754669189453
    4. '=' → logprob: -5.314775466918945
    5. '(abs' → logprob: -5.939775466918945
    6. 'absolute' → logprob: -6.064775466918945
    7. 'u' → logprob: -6.189775466918945
    8. '   ' → logprob: -6.439775466918945
    9. 'value' → logprob: -6.564775466918945
    10. '  ' → logprob: -6.814775466918945

Token 879: ' est' (ID: 893)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.1451438069343567
    2. ' est' → logprob: -2.270143747329712
    3. '#' → logprob: -3.645143747329712
    4. 'min' → logprob: -6.270143985748291
    5. 'minimal' → logprob: -6.895143985748291
    6. 'le' → logprob: -7.395143985748291
    7. ' minimale' → logprob: -8.020143508911133
    8. 'la' → logprob: -8.020143508911133
    9. ' #' → logprob: -8.395143508911133
    10. ''est' → logprob: -8.645143508911133

Token 880: ' minimale' (ID: 143217)
  Prédit: 'minimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minimal' → logprob: -0.9006041288375854
    2. 'min' → logprob: -1.0256041288375854
    3. 'la' → logprob: -1.9006041288375854
    4. ' minimale' → logprob: -3.150604248046875
    5. 'le' → logprob: -3.650604248046875
    6. 'minimum' → logprob: -4.275604248046875
    7. 'mini' → logprob: -6.275604248046875
    8. ' minimal' → logprob: -8.025604248046875
    9. '#' → logprob: -8.150604248046875
    10. 'plus' → logprob: -8.650604248046875

Token 881: ' est' (ID: 893)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2148202657699585
    2. ' =' → logprob: -2.339820384979248
    3. '=' → logprob: -2.839820384979248
    4. ',' → logprob: -5.339820384979248
    5. '#' → logprob: -5.464820384979248
    6. ':' → logprob: -5.714820384979248
    7. 'est' → logprob: -5.839820384979248
    8. '_token' → logprob: -5.839820384979248
    9. ' est' → logprob: -5.964820384979248
    10. 'idx' → logprob: -6.089820384979248

Token 882: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5857130885124207
    2. 'L' → logprob: -1.0857131481170654
    3. 'min' → logprob: -2.3357131481170654
    4. '   ' → logprob: -5.335712909698486
    5. 'abs' → logprob: -6.835712909698486
    6. 'max' → logprob: -6.960712909698486
    7. ' min' → logprob: -7.460712909698486
    8. ' L' → logprob: -7.960712909698486
    9. ' ' → logprob: -8.960713386535645
    10. '(' → logprob: -8.960713386535645

Token 883: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6231701970100403
    2. 'min' → logprob: -0.8731701970100403
    3. 'L' → logprob: -3.2481701374053955
    4. 'max' → logprob: -5.373170375823975
    5. 'abs' → logprob: -6.873170375823975
    6. ' min' → logprob: -6.998170375823975
    7. '(min' → logprob: -7.873170375823975
    8. '#' → logprob: -9.623169898986816
    9. '   ' → logprob: -9.748169898986816
    10. '(' → logprob: -9.998169898986816

Token 884: ' lui' (ID: 10623)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2749168574810028
    2. '.' → logprob: -2.524916887283325
    3. '<|end|>' → logprob: -2.899916887283325
    4. ' or' → logprob: -3.149916887283325
    5. ':' → logprob: -4.024916648864746
    6. ',' → logprob: -5.399916648864746
    7. '	or' → logprob: -5.524916648864746
    8. ')' → logprob: -5.524916648864746
    9. '<|end|>' → logprob: -5.649916648864746
    10. 'or' → logprob: -5.899916648864746

Token 885: '-même' (ID: 41085)
  Prédit: '-même'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-même' → logprob: -0.5622782707214355
    2. '-' → logprob: -1.0622782707214355
    3. '+' → logprob: -2.6872782707214355
    4. '```' → logprob: -5.8122782707214355
    5. 'moins' → logprob: -5.8122782707214355
    6. ' -' → logprob: -6.3122782707214355
    7. 'plus' → logprob: -6.5622782707214355
    8. '=' → logprob: -6.6872782707214355
    9. '0' → logprob: -7.0622782707214355
    10. '-mêmes' → logprob: -7.1872782707214355

Token 886: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2188183218240738
    2. '.' → logprob: -1.9688183069229126
    3. ' or' → logprob: -4.093818187713623
    4. '0' → logprob: -4.468818187713623
    5. ',' → logprob: -4.968818187713623
    6. '
' → logprob: -5.093818187713623
    7. ':' → logprob: -5.468818187713623
    8. ':
' → logprob: -6.218818187713623
    9. ')' → logprob: -6.343818187713623
    10. '    
' → logprob: -6.468818187713623

Token 887: ' donc' (ID: 14206)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0908278226852417
    2. 'ans' → logprob: -2.9658279418945312
    3. '0' → logprob: -3.7158279418945312
    4. '#' → logprob: -5.715827941894531
    5. ' so' → logprob: -6.465827941894531
    6. ' ans' → logprob: -6.715827941894531
    7. '
' → logprob: -6.840827941894531
    8. 'which' → logprob: -7.215827941894531
    9. 'print' → logprob: -7.840827941894531
    10. '    
' → logprob: -7.965827941894531

Token 888: ' on' (ID: 402)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0006973040290176868
    2. '   ' → logprob: -7.375697135925293
    3. 'print' → logprob: -11.000697135925293
    4. '#' → logprob: -11.125697135925293
    5. ' ans' → logprob: -11.125697135925293
    6. '	ans' → logprob: -11.625697135925293
    7. '
' → logprob: -11.750697135925293
    8. '(ans' → logprob: -12.125697135925293
    9. 'answer' → logprob: -14.375697135925293
    10. 'Ans' → logprob: -15.000697135925293

Token 889: ' retire' (ID: 48410)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2427990734577179
    2. 'ans' → logprob: -1.6177990436553955
    3. '   ' → logprob: -4.367799282073975
    4. 'pr' → logprob: -6.117799282073975
    5. '#' → logprob: -7.242799282073975
    6. 'continue' → logprob: -7.492799282073975
    7. 'pas' → logprob: -8.367798805236816
    8. 'n' → logprob: -8.992798805236816
    9. 'prit' → logprob: -9.367798805236816
    10. 'pass' → logprob: -9.492798805236816

Token 890: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -14.000000953674316
    3. '```' → logprob: -14.750000953674316
    4. '   ' → logprob: -16.500001907348633
    5. '1' → logprob: -17.125001907348633
    6. '<|end|>' → logprob: -17.375001907348633
    7. '#' → logprob: -17.625001907348633
    8. ' ' → logprob: -17.625001907348633
    9. '۰' → logprob: -18.250001907348633
    10. '
' → logprob: -18.500001907348633

Token 891: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.500000953674316
    3. '```' → logprob: -16.625
    4. 'zero' → logprob: -18.75
    5. '   ' → logprob: -19.0
    6. ' ' → logprob: -19.375
    7. 'nothing' → logprob: -19.375
    8. '1' → logprob: -19.375
    9. '０' → logprob: -19.625
    10. '۰' → logprob: -20.0

Token 892: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 893: ' ce' (ID: 2357)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.29029104113578796
    2. '   ' → logprob: -2.0402910709381104
    3. '#' → logprob: -3.5402910709381104
    4. '
' → logprob: -3.7902910709381104
    5. '\n' → logprob: -3.9152910709381104
    6. ')' → logprob: -4.415290832519531
    7. 'ans' → logprob: -4.540290832519531
    8. 'print' → logprob: -4.540290832519531
    9. ' ans' → logprob: -5.915290832519531
    10. '.' → logprob: -6.165290832519531

Token 894: ' qui' (ID: 2780)
  Prédit: ' qui'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' qui' → logprob: -0.5912351012229919
    2. 'qui' → logprob: -1.5912351608276367
    3. 'n' → logprob: -2.2162351608276367
    4. '.' → logprob: -3.3412351608276367
    5. '=' → logprob: -3.7162351608276367
    6. ' that' → logprob: -4.091235160827637
    7. '#' → logprob: -4.591235160827637
    8. ' n' → logprob: -4.841235160827637
    9. 'that' → logprob: -4.841235160827637
    10. ' ' → logprob: -5.341235160827637

Token 895: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7532777786254883
    2. 'n' → logprob: -2.3782777786254883
    3. ' =' → logprob: -2.8782777786254883
    4. ' 
' → logprob: -2.8782777786254883
    5. '```' → logprob: -3.2532777786254883
    6. '
' → logprob: -3.5032777786254883
    7. 'don' → logprob: -3.6282777786254883
    8. 'equals' → logprob: -3.8782777786254883
    9. 'ans' → logprob: -3.8782777786254883
    10. 'does' → logprob: -3.8782777786254883

Token 896: ' inutile' (ID: 157748)
  Prédit: 'inut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inut' → logprob: -0.046178143471479416
    2. 'Sum' → logprob: -4.296178340911865
    3. 'sans' → logprob: -5.046178340911865
    4. 'don' → logprob: -5.421178340911865
    5. 'nul' → logprob: -5.671178340911865
    6. 'ne' → logprob: -5.671178340911865
    7. 'ans' → logprob: -5.796178340911865
    8. 'inal' → logprob: -6.046178340911865
    9. 'ins' → logprob: -6.671178340911865
    10. 'équ' → logprob: -6.796178340911865

Token 897: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 898: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.018560409545898438
    2. '   ' → logprob: -4.018560409545898
    3. '
' → logprob: -8.643560409545898
    4. 'print' → logprob: -9.393560409545898
    5. '	ans' → logprob: -10.018560409545898
    6. ' ans' → logprob: -10.393560409545898
    7. '(ans' → logprob: -10.393560409545898
    8. 'answer' → logprob: -10.768560409545898
    9. '```' → logprob: -11.268560409545898
    10. '    
' → logprob: -12.393560409545898

Token 899: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0014570204075425863
    2. '   ' → logprob: -6.626457214355469
    3. ' ans' → logprob: -9.126457214355469
    4. '	ans' → logprob: -11.501457214355469
    5. '(ans' → logprob: -12.001457214355469
    6. 'print' → logprob: -13.001457214355469
    7. 'answer' → logprob: -13.376457214355469
    8. '
' → logprob: -14.251457214355469
    9. '_ans' → logprob: -14.876457214355469
    10. '0' → logprob: -15.126457214355469

Token 900: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6329552531242371
    2. '=' → logprob: -0.7579552531242371
    3. ' -=' → logprob: -8.132955551147461
    4. '-=' → logprob: -10.507955551147461
    5. '-' → logprob: -11.382955551147461
    6. ' +=' → logprob: -11.632955551147461
    7. ' =
' → logprob: -12.757955551147461
    8. ' ' → logprob: -13.132955551147461
    9. '+=' → logprob: -13.132955551147461
    10. ',' → logprob: -13.757955551147461

Token 901: ' Sum' (ID: 34138)
  Prédit: 'Sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sum' → logprob: -1.9027791495318525e-05
    2. ' Sum' → logprob: -10.875019073486328
    3. '   ' → logprob: -19.500019073486328
    4. 'sum' → logprob: -19.625019073486328
    5. 'Ans' → logprob: -20.000019073486328
    6. '	S' → logprob: -20.375019073486328
    7. 'Summ' → logprob: -20.375019073486328
    8. '_sum' → logprob: -20.625019073486328
    9. '0' → logprob: -21.000019073486328
    10. 'SUM' → logprob: -21.625019073486328

Token 902: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 903: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.896309739408025e-07
    2. ' print' → logprob: -15.375000953674316
    3. '
' → logprob: -15.625000953674316
    4. '```' → logprob: -16.0
    5. '#' → logprob: -16.125
    6. '#print' → logprob: -16.75
    7. 'Print' → logprob: -18.375
    8. 'pr' → logprob: -19.5
    9. '`' → logprob: -19.625
    10. 'prin' → logprob: -19.75

Token 904: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -20.0
    3. 'pr' → logprob: -21.0
    4. 'prin' → logprob: -22.0
    5. '```' → logprob: -22.5
    6. '#print' → logprob: -24.125
    7. '
' → logprob: -24.625
    8. 'Print' → logprob: -24.875
    9. 'pri' → logprob: -25.125
    10. 'prit' → logprob: -25.625

Token 905: 'ichage' (ID: 118475)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00017290872347075492
    2. '#print' → logprob: -9.62517261505127
    3. 'ich' → logprob: -9.87517261505127
    4. 'prin' → logprob: -11.37517261505127
    5. '#' → logprob: -11.50017261505127
    6. '```' → logprob: -11.50017261505127
    7. 'pr' → logprob: -11.50017261505127
    8. '_print' → logprob: -12.50017261505127
    9. 'ichage' → logprob: -13.37517261505127
    10. 'im' → logprob: -13.75017261505127

Token 906: ' du' (ID: 1462)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4489772915840149
    2. '(ans' → logprob: -1.1989772319793701
    3. '(print' → logprob: -3.19897723197937
    4. '(' → logprob: -3.94897723197937
    5. 'ans' → logprob: -9.94897747039795
    6. '()' → logprob: -10.19897747039795
    7. '(
' → logprob: -10.69897747039795
    8. '(answer' → logprob: -11.94897747039795
    9. '(pr' → logprob: -12.19897747039795
    10. '(f' → logprob: -12.44897747039795

Token 907: ' résultat' (ID: 62556)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0007699632551521063
    2. '(ans' → logprob: -7.750770092010498
    3. 'print' → logprob: -8.00076961517334
    4. ' ans' → logprob: -12.50076961517334
    5. 'answer' → logprob: -15.25076961517334
    6. '	ans' → logprob: -17.000770568847656
    7. 'a' → logprob: -18.750770568847656
    8. 'ANS' → logprob: -18.750770568847656
    9. 'Ans' → logprob: -18.875770568847656
    10. '_ans' → logprob: -19.000770568847656

Token 908: ' calcul' (ID: 7559)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -8.180258191714529e-06
    2. '```' → logprob: -12.625008583068848
    3. '
' → logprob: -12.750008583068848
    4. ')
' → logprob: -14.125008583068848
    5. ' print' → logprob: -14.625008583068848
    6. '`
' → logprob: -15.250008583068848
    7. '``' → logprob: -15.500008583068848
    8. 'ans' → logprob: -16.37500762939453
    9. '`' → logprob: -17.25000762939453
    10. '\n' → logprob: -18.62500762939453

Token 909: 'é' (ID: 377)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.130032479763031
    2. '(ans' → logprob: -2.255032539367676
    3. '(' → logprob: -4.130032539367676
    4. '(
' → logprob: -8.380032539367676
    5. 'ans' → logprob: -8.630032539367676
    6. '()' → logprob: -9.130032539367676
    7. '()
' → logprob: -9.505032539367676
    8. '(print' → logprob: -9.505032539367676
    9. 'f' → logprob: -10.255032539367676
    10. 's' → logprob: -10.380032539367676

Token 910: '.' (ID: 13)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.5
    3. ' print' → logprob: -18.375
    4. '
' → logprob: -21.0
    5. '``' → logprob: -21.5
    6. '(print' → logprob: -22.375
    7. '#print' → logprob: -22.875
    8. '`' → logprob: -23.0
    9. '`
' → logprob: -23.375
    10. 'ans' → logprob: -23.5

Token 911: ' Cette' (ID: 27383)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.375
    3. ' print' → logprob: -18.0
    4. '
' → logprob: -18.375
    5. 'pr' → logprob: -21.5
    6. '`' → logprob: -21.625
    7. '`
' → logprob: -21.875
    8. '``' → logprob: -21.875
    9. '#print' → logprob: -23.5
    10. '(print' → logprob: -23.75

Token 912: ' commande' (ID: 53567)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0071906885132193565
    2. ' print' → logprob: -5.132190704345703
    3. '
' → logprob: -7.132190704345703
    4. 'n' → logprob: -9.007190704345703
    5. '```' → logprob: -9.382190704345703
    6. '.print' → logprob: -9.507190704345703
    7. '_print' → logprob: -10.632190704345703
    8. '#' → logprob: -10.757190704345703
    9. 'println' → logprob: -10.882190704345703
    10. ')' → logprob: -11.257190704345703

Token 913: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00032509511220268905
    2. ' print' → logprob: -8.375325202941895
    3. '(print' → logprob: -9.375325202941895
    4. '.print' → logprob: -12.875325202941895
    5. ')' → logprob: -13.250325202941895
    6. '#' → logprob: -13.625325202941895
    7. '#print' → logprob: -13.875325202941895
    8. '(' → logprob: -14.250325202941895
    9. '_print' → logprob: -14.500325202941895
    10. '()' → logprob: -14.875325202941895

Token 914: ' affiche' (ID: 127479)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6932359337806702
    2. '(ans' → logprob: -0.6932359337806702
    3. '()' → logprob: -9.443236351013184
    4. '(answer' → logprob: -12.693236351013184
    5. '(print' → logprob: -13.068236351013184
    6. '(
' → logprob: -13.818236351013184
    7. ' (' → logprob: -14.443236351013184
    8. '(`' → logprob: -14.693236351013184
    9. '(a' → logprob: -14.818236351013184
    10. 'ans' → logprob: -14.943236351013184

Token 915: ' le' (ID: 505)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.6240566083070007e-06
    2. 'ans' → logprob: -13.500001907348633
    3. '(' → logprob: -15.875001907348633
    4. '(answer' → logprob: -19.250001907348633
    5. ' (' → logprob: -19.875001907348633
    6. '	ans' → logprob: -20.625001907348633
    7. '(
' → logprob: -21.125001907348633
    8. '(abs' → logprob: -21.125001907348633
    9. '(a' → logprob: -21.250001907348633
    10. '()' → logprob: -21.250001907348633

Token 916: ' nombre' (ID: 9733)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.09083467721939087
    2. '(ans' → logprob: -2.715834617614746
    3. 'result' → logprob: -4.465834617614746
    4. ' résultat' → logprob: -5.715834617614746
    5. 'rés' → logprob: -5.840834617614746
    6. 'answer' → logprob: -5.965834617614746
    7. '(' → logprob: -8.715834617614746
    8. 'final' → logprob: -9.965834617614746
    9. '(answer' → logprob: -9.965834617614746
    10. 'ré' → logprob: -10.340834617614746

Token 917: ' '' (ID: 461)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.8550976164988242e-05
    2. '(' → logprob: -11.000018119812012
    3. '()' → logprob: -13.625018119812012
    4. 'ans' → logprob: -14.750018119812012
    5. '(answer' → logprob: -16.125019073486328
    6. '(
' → logprob: -16.750019073486328
    7. ' (' → logprob: -17.625019073486328
    8. '(an' → logprob: -18.000019073486328
    9. '(abs' → logprob: -18.500019073486328
    10. '(print' → logprob: -18.875019073486328

Token 918: 'ans' (ID: 616)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -5.88418151892256e-05
    2. 'ans' → logprob: -9.750059127807617
    3. '(' → logprob: -15.250059127807617
    4. ' (' → logprob: -16.125059127807617
    5. '(answer' → logprob: -17.625059127807617
    6. '(int' → logprob: -17.875059127807617
    7. '	ans' → logprob: -17.875059127807617
    8. '(abs' → logprob: -18.625059127807617
    9. '()' → logprob: -18.750059127807617
    10. '`' → logprob: -18.875059127807617

Token 919: ''' (ID: 6)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.32936015725135803
    2. '(' → logprob: -1.5793601274490356
    3. '()' → logprob: -2.829360246658325
    4. ')' → logprob: -4.454360008239746
    5. '())' → logprob: -5.579360008239746
    6. '(answer' → logprob: -10.954360008239746
    7. '(end' → logprob: -11.579360008239746
    8. '("")' → logprob: -12.204360008239746
    9. '(`' → logprob: -13.079360008239746
    10. '(a' → logprob: -13.204360008239746

Token 920: ' à' (ID: 1221)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4972749948501587
    2. '(ans' → logprob: -1.4972749948501587
    3. '(' → logprob: -2.372274875640869
    4. '()' → logprob: -2.997274875640869
    5. '(print' → logprob: -3.872274875640869
    6. '()
' → logprob: -5.997274875640869
    7. '(
' → logprob: -6.622274875640869
    8. ')' → logprob: -8.872275352478027
    9. 'ans' → logprob: -10.122275352478027
    10. '```' → logprob: -11.497275352478027

Token 921: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.3085784912109375
    2. 'l' → logprob: -1.5585784912109375
    3. 'fin' → logprob: -4.5585784912109375
    4. ' la' → logprob: -4.5585784912109375
    5. 'print' → logprob: -5.1835784912109375
    6. 'ans' → logprob: -5.1835784912109375
    7. 'end' → logprob: -5.4335784912109375
    8. 'une' → logprob: -5.5585784912109375
    9. ')' → logprob: -6.0585784912109375
    10. 'stdout' → logprob: -6.8085784912109375

Token 922: ' sortie' (ID: 52761)
  Prédit: 'stdout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdout' → logprob: -0.5157065987586975
    2. 'console' → logprob: -2.2657065391540527
    3. 'l' → logprob: -2.6407065391540527
    4. 'print' → logprob: -3.0157065391540527
    5. 'à' → logprob: -3.1407065391540527
    6. 'standard' → logprob: -3.5157065391540527
    7. 'é' → logprob: -4.390706539154053
    8. 'return' → logprob: -4.640706539154053
    9. '\n' → logprob: -4.765706539154053
    10. 'fin' → logprob: -4.890706539154053

Token 923: ' standard' (ID: 7024)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10652224719524384
    2. '()' → logprob: -2.60652232170105
    3. '(ans' → logprob: -3.60652232170105
    4. '(print' → logprob: -10.606522560119629
    5. '("")' → logprob: -10.731522560119629
    6. '(
' → logprob: -10.981522560119629
    7. '(`' → logprob: -11.481522560119629
    8. '('' → logprob: -11.856522560119629
    9. 'print' → logprob: -11.856522560119629
    10. '("' → logprob: -12.231522560119629

Token 924: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12222104519605637
    2. '()' → logprob: -2.622220993041992
    3. '()
' → logprob: -4.122220993041992
    4. '(ans' → logprob: -4.497220993041992
    5. '(' → logprob: -4.622220993041992
    6. '(print' → logprob: -5.372220993041992
    7. '(
' → logprob: -8.122220993041992
    8. ')' → logprob: -9.247220993041992
    9. 'ans' → logprob: -10.372220993041992
    10. '```' → logprob: -10.497220993041992

Token 925: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.320199877838604e-07
    2. '```' → logprob: -14.75
    3. ' print' → logprob: -19.875
    4. 'pr' → logprob: -21.125
    5. '``' → logprob: -21.75
    6. 'prin' → logprob: -22.75
    7. '`' → logprob: -22.875
    8. '
' → logprob: -23.75
    9. '#print' → logprob: -24.5
    10. 'prit' → logprob: -25.0

Token 926: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.014168446883559227
    2. '(' → logprob: -4.2641682624816895
    3. '()' → logprob: -12.889168739318848
    4. ' (' → logprob: -14.264168739318848
    5. '('' → logprob: -14.264168739318848
    6. '(f' → logprob: -15.514168739318848
    7. '(answer' → logprob: -15.764168739318848
    8. '("("' → logprob: -16.01416778564453
    9. '((' → logprob: -16.38916778564453
    10. '(a' → logprob: -16.51416778564453

Token 927: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. ' )' → logprob: -13.500001907348633
    3. ')
' → logprob: -16.500001907348633
    4. ')`' → logprob: -17.875001907348633
    5. '`)' → logprob: -18.125001907348633
    6. '')' → logprob: -18.125001907348633
    7. ')#' → logprob: -18.375001907348633
    8. '))' → logprob: -19.125001907348633
    9. '```' → logprob: -19.750001907348633
    10. '#' → logprob: -19.750001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 925
Tokens correctement prédits (1ère position, stricte): 201
Tokens correctement prédits (1ère position, avec adaptation): 204
Tokens correctement prédits (top 10): 526
Précision stricte (1ère position): 21.73%
Précision adaptée (1ère position): 22.05%
Précision (top 10): 56.86%
================================================================================
