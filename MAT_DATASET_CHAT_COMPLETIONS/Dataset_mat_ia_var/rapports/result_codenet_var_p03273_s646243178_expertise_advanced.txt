================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:10:22
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from sys import stdin
from itertools import compress

h, w = map(int, stdin.readline().split())
a = [list(stdin.readline().rstrip()) for _ in range(h)]

row_mask = [any(cell != '.' for cell in row) for row in a]
col_mask = [any(a[i][j] != '.' for i in range(h)) for j in range(w)]

output = [
    ''.join(compress(row, col_mask))
    for row, flag in zip(a, row_mask) if flag
]

print(*output, sep='\n')
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' stdin' (ID: 75143)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.05142802372574806
    2. ' argv' → logprob: -3.4264280796051025
    3. 'exit' → logprob: -4.176427841186523
    4. ' exit' → logprob: -6.801427841186523
    5. 'stdout' → logprob: -7.301427841186523
    6. 'stdin' → logprob: -8.426427841186523
    7. 'path' → logprob: -8.801427841186523
    8. 'import' → logprob: -10.176427841186523
    9. 'stderr' → logprob: -10.426427841186523
    10. 'version' → logprob: -10.676427841186523

Token 4: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0006454797694459558
    2. '.readline' → logprob: -8.250645637512207
    3. '\n' → logprob: -8.500645637512207
    4. '.
' → logprob: -10.125645637512207
    5. 'import' → logprob: -10.250645637512207
    6. '\' → logprob: -10.375645637512207
    7. '```' → logprob: -10.875645637512207
    8. '.read' → logprob: -10.875645637512207
    9. '' → logprob: -12.000645637512207
    10. ',' → logprob: -12.125645637512207

Token 5: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06321117281913757
    2. '.readline' → logprob: -3.56321120262146
    3. 'for' → logprob: -4.563210964202881
    4. '\n' → logprob: -4.688210964202881
    5. '
' → logprob: -5.938210964202881
    6. 'import' → logprob: -5.938210964202881
    7. 'print' → logprob: -6.188210964202881
    8. '.read' → logprob: -6.688210964202881
    9. '```' → logprob: -7.313210964202881
    10. ',' → logprob: -7.313210964202881

Token 6: ' itertools' (ID: 103178)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.03390835225582123
    2. ' sys' → logprob: -3.7839083671569824
    3. ' io' → logprob: -4.783908367156982
    4. ' math' → logprob: -7.283908367156982
    5. ' typing' → logprob: -7.658908367156982
    6. 'os' → logprob: -7.908908367156982
    7. ' stdout' → logprob: -9.033907890319824
    8. ' itertools' → logprob: -9.033907890319824
    9. ' subprocess' → logprob: -9.283907890319824
    10. ' space' → logprob: -9.408907890319824

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.020581480115652084
    2. 'import' → logprob: -3.8955814838409424
    3. ' ' → logprob: -11.020581245422363
    4. '	import' → logprob: -11.645581245422363
    5. '.' → logprob: -12.395581245422363
    6. '_import' → logprob: -12.770581245422363
    7. ' im' → logprob: -13.645581245422363
    8. ' itertools' → logprob: -13.770581245422363
    9. '.import' → logprob: -13.770581245422363
    10. ' .' → logprob: -14.145581245422363

Token 8: ' compress' (ID: 34112)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.0406745672225952
    2. 'is' → logprob: -1.2906745672225952
    3. 'per' → logprob: -2.2906746864318848
    4. 'product' → logprob: -2.4156746864318848
    5. 'chain' → logprob: -2.7906746864318848
    6. 'group' → logprob: -3.2906746864318848
    7. 'cycle' → logprob: -3.4156746864318848
    8. ' permutations' → logprob: -4.290674686431885
    9. 'com' → logprob: -4.540674686431885
    10. 'import' → logprob: -4.665674686431885

Token 9: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8514949083328247
    2. '
' → logprob: -1.7264949083328247
    3. '\n' → logprob: -1.7264949083328247
    4. 'newline' → logprob: -2.476494789123535
    5. '(' → logprob: -2.726494789123535
    6. '' → logprob: -4.601494789123535
    7. 'import' → logprob: -4.726494789123535
    8. '\' → logprob: -4.726494789123535
    9. 'data' → logprob: -4.851494789123535
    10. ' for' → logprob: -5.726494789123535

Token 10: 'h' (ID: 71)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.8269481658935547
    2. 'for' → logprob: -0.9519481658935547
    3. '_' → logprob: -3.3269481658935547
    4. 'def' → logprob: -3.5769481658935547
    5. 'result' → logprob: -4.076948165893555
    6. 'lines' → logprob: -4.326948165893555
    7. 'input' → logprob: -4.451948165893555
    8. '[' → logprob: -4.826948165893555
    9. 'line' → logprob: -5.076948165893555
    10. 'output' → logprob: -5.076948165893555

Token 11: ',' (ID: 11)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.06981859356164932
    2. 'eight' → logprob: -3.9448184967041016
    3. 'ead' → logprob: -4.069818496704102
    4. 'elper' → logprob: -4.319818496704102
    5. 't' → logprob: -5.069818496704102
    6. 'i' → logprob: -6.569818496704102
    7. 'igh' → logprob: -6.694818496704102
    8. 'elp' → logprob: -6.819818496704102
    9. 'ex' → logprob: -7.319818496704102
    10. 'eil' → logprob: -7.444818496704102

Token 12: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.043135639280080795
    2. ' w' → logprob: -3.168135643005371
    3. 't' → logprob: -9.293135643005371
    4. 'm' → logprob: -11.043135643005371
    5. '*w' → logprob: -11.793135643005371
    6. ' t' → logprob: -12.293135643005371
    7. 'd' → logprob: -12.543135643005371
    8. '_w' → logprob: -13.043135643005371
    9. ' =' → logprob: -13.168135643005371
    10. '=w' → logprob: -13.293135643005371

Token 13: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05999210476875305
    2. '=' → logprob: -2.9349920749664307
    3. ',' → logprob: -5.30999231338501
    4. ' ,' → logprob: -8.934991836547852
    5. ' ' → logprob: -11.934991836547852
    6. ' =
' → logprob: -12.059991836547852
    7. ')' → logprob: -12.684991836547852
    8. '<|end|>' → logprob: -12.809991836547852
    9. '=

' → logprob: -13.809991836547852
    10. ' =",' → logprob: -13.809991836547852

Token 14: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.023401426151394844
    2. 'map' → logprob: -3.7734014987945557
    3. ' list' → logprob: -9.523401260375977
    4. ' stdin' → logprob: -10.023401260375977
    5. 'stdin' → logprob: -11.273401260375977
    6. ' ' → logprob: -11.273401260375977
    7. 'list' → logprob: -11.773401260375977
    8. ' [' → logprob: -13.023401260375977
    9. '[' → logprob: -14.023401260375977
    10. ' input' → logprob: -14.398401260375977

Token 15: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.06764106452465057
    2. '(' → logprob: -2.942641019821167
    3. '(str' → logprob: -4.817641258239746
    4. '(lambda' → logprob: -5.567641258239746
    5. '(input' → logprob: -8.567641258239746
    6. '(stdin' → logprob: -8.567641258239746
    7. 'int' → logprob: -9.317641258239746
    8. '<|end|>' → logprob: -9.442641258239746
    9. '()' → logprob: -9.567641258239746
    10. '(len' → logprob: -10.567641258239746

Token 16: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008616461418569088
    2. '(stdin' → logprob: -4.8836164474487305
    3. ',input' → logprob: -7.6336164474487305
    4. '(' → logprob: -8.13361644744873
    5. ')' → logprob: -9.75861644744873
    6. 'stdin' → logprob: -10.00861644744873
    7. ',std' → logprob: -10.50861644744873
    8. ',int' → logprob: -10.50861644744873
    9. '(),' → logprob: -11.13361644744873
    10. ' ,' → logprob: -11.75861644744873

Token 17: ' stdin' (ID: 75143)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.014420519582927227
    2. ' stdin' → logprob: -4.514420509338379
    3. 'input' → logprob: -6.139420509338379
    4. '(stdin' → logprob: -6.764420509338379
    5. ' input' → logprob: -10.139420509338379
    6. 'std' → logprob: -12.014420509338379
    7. '.stdin' → logprob: -12.389420509338379
    8. ' ' → logprob: -13.264420509338379
    9. ')' → logprob: -13.514420509338379
    10. 'map' → logprob: -13.514420509338379

Token 18: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0015672342851758003
    2. '.read' → logprob: -6.501567363739014
    3. '.' → logprob: -10.001566886901855
    4. '.readlines' → logprob: -11.126566886901855
    5. ').' → logprob: -12.626566886901855
    6. '().' → logprob: -14.376566886901855
    7. ')' → logprob: -16.001567840576172
    8. '.write' → logprob: -16.001567840576172
    9. '.stdin' → logprob: -16.251567840576172
    10. '.decode' → logprob: -16.501567840576172

Token 19: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.142655611038208
    2. '().' → logprob: -2.142655611038208
    3. '()' → logprob: -4.267655372619629
    4. ')' → logprob: -6.892655372619629
    5. '(),' → logprob: -8.642655372619629
    6. '()))' → logprob: -8.767655372619629
    7. '());' → logprob: -9.517655372619629
    8. '()[' → logprob: -10.017655372619629
    9. '();)' → logprob: -10.642655372619629
    10. '()),' → logprob: -11.017655372619629

Token 20: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.12809135019779205
    2. 'strip' → logprob: -2.128091335296631
    3. 'rstrip' → logprob: -7.128091335296631
    4. 'read' → logprob: -8.003091812133789
    5. ')' → logprob: -10.753091812133789
    6. ' split' → logprob: -13.003091812133789
    7. '(split' → logprob: -13.628091812133789
    8. '```' → logprob: -14.878091812133789
    9. ' strip' → logprob: -15.878091812133789
    10. '_split' → logprob: -16.75309181213379

Token 21: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07173066586256027
    2. '))' → logprob: -2.821730613708496
    3. '())' → logprob: -4.696730613708496
    4. '()' → logprob: -8.071730613708496
    5. '()))' → logprob: -8.446730613708496
    6. '(' → logprob: -10.821730613708496
    7. '),' → logprob: -10.821730613708496
    8. ')))' → logprob: -11.696730613708496
    9. ')`' → logprob: -13.196730613708496
    10. ')
' → logprob: -13.696730613708496

Token 22: 'a' (ID: 64)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.2759510278701782
    2. 'field' → logprob: -1.9009510278701782
    3. 'matrix' → logprob: -3.0259509086608887
    4. 'board' → logprob: -3.4009509086608887
    5. 'data' → logprob: -6.150950908660889
    6. '```' → logprob: -6.400950908660889
    7. 'map' → logprob: -6.775950908660889
    8. 'a' → logprob: -7.150950908660889
    9. 'rows' → logprob: -7.400950908660889
    10. 'lines' → logprob: -7.775950908660889

Token 23: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1271912008523941
    2. '=' → logprob: -2.1271913051605225
    3. '[' → logprob: -9.252191543579102
    4. ' ' → logprob: -9.502191543579102
    5. 's' → logprob: -10.877191543579102
    6. '[i' → logprob: -11.002191543579102
    7. '[row' → logprob: -11.877191543579102
    8. ' =[' → logprob: -12.377191543579102
    9. '_rows' → logprob: -12.502191543579102
    10. '=[]' → logprob: -12.627191543579102

Token 24: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.20565275847911835
    2. '[list' → logprob: -2.0806527137756348
    3. '[' → logprob: -3.0806527137756348
    4. ' []' → logprob: -5.080652713775635
    5. '[]' → logprob: -5.455652713775635
    6. '[int' → logprob: -5.955652713775635
    7. 'list' → logprob: -7.080652713775635
    8. '[a' → logprob: -8.330653190612793
    9. '[str' → logprob: -8.580653190612793
    10. '[List' → logprob: -9.205653190612793

Token 25: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.009474740363657475
    2. 'map' → logprob: -4.884474754333496
    3. 'stdin' → logprob: -6.384474754333496
    4. 'tuple' → logprob: -8.884474754333496
    5. ' list' → logprob: -11.009474754333496
    6. '[' → logprob: -12.134474754333496
    7. 'int' → logprob: -12.384474754333496
    8. '[]' → logprob: -12.634474754333496
    9. '[list' → logprob: -13.384474754333496
    10. '(stdin' → logprob: -13.634474754333496

Token 26: '(stdin' (ID: 176594)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00015943869948387146
    2. '(' → logprob: -9.62515926361084
    3. '(stdin' → logprob: -9.62515926361084
    4. '(int' → logprob: -10.62515926361084
    5. '()' → logprob: -13.37515926361084
    6. 'map' → logprob: -13.87515926361084
    7. '(range' → logprob: -15.62515926361084
    8. ' map' → logprob: -16.375160217285156
    9. '	map' → logprob: -16.875160217285156
    10. '(st' → logprob: -17.000160217285156

Token 27: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.5928495486150496e-05
    2. '().' → logprob: -11.250016212463379
    3. '.' → logprob: -12.875016212463379
    4. ').' → logprob: -15.750016212463379
    5. '.read' → logprob: -15.875016212463379
    6. '.readlines' → logprob: -17.375015258789062
    7. ')' → logprob: -20.125015258789062
    8. '].' → logprob: -20.375015258789062
    9. '.randint' → logprob: -20.500015258789062
    10. ' readline' → logprob: -20.750015258789062

Token 28: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0025661452673375607
    2. '())' → logprob: -6.002566337585449
    3. '()' → logprob: -9.37756633758545
    4. ')' → logprob: -13.25256633758545
    5. 'rstrip' → logprob: -13.37756633758545
    6. '.rstrip' → logprob: -14.62756633758545
    7. '()]' → logprob: -15.25256633758545
    8. 'strip' → logprob: -15.37756633758545
    9. '(' → logprob: -15.50256633758545
    10. '.strip' → logprob: -15.62756633758545

Token 29: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.5761821866035461
    2. 'rstrip' → logprob: -0.8261821866035461
    3. 'split' → logprob: -8.32618236541748
    4. 'rs' → logprob: -15.45118236541748
    5. ' strip' → logprob: -15.45118236541748
    6. 'read' → logprob: -16.326181411743164
    7. '.rstrip' → logprob: -16.451181411743164
    8. 'str' → logprob: -17.826181411743164
    9. 'replace' → logprob: -18.951181411743164
    10. ')' → logprob: -19.076181411743164

Token 30: '())' (ID: 3516)
  Prédit: '('\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.28657203912734985
    2. '())' → logprob: -1.536571979522705
    3. '().' → logprob: -4.161571979522705
    4. '()' → logprob: -4.786571979522705
    5. '()\' → logprob: -4.911571979522705
    6. ''\' → logprob: -6.411571979522705
    7. '("\' → logprob: -7.161571979522705
    8. '()))' → logprob: -9.411572456359863
    9. ')' → logprob: -9.911572456359863
    10. '())
' → logprob: -10.161572456359863

Token 31: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07505498826503754
    2. ' for' → logprob: -2.950054883956909
    3. 'for' → logprob: -3.950054883956909
    4. ']' → logprob: -7.575055122375488
    5. '()' → logprob: -9.075055122375488
    6. ')]' → logprob: -9.950055122375488
    7. ' )' → logprob: -11.200055122375488
    8. '	for' → logprob: -12.075055122375488
    9. ' ' → logprob: -12.200055122375488
    10. '   ' → logprob: -12.700055122375488

Token 32: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.47686898708343506
    2. ' _' → logprob: -0.9768689870834351
    3. ' range' → logprob: -5.976869106292725
    4. '_range' → logprob: -9.101868629455566
    5. 'range' → logprob: -9.101868629455566
    6. '<|end|>' → logprob: -11.976868629455566
    7. ' ' → logprob: -12.226868629455566
    8. '(range' → logprob: -12.726868629455566
    9. ' i' → logprob: -12.726868629455566
    10. '_i' → logprob: -12.976868629455566

Token 33: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01532038301229477
    2. ' in' → logprob: -5.265320301055908
    3. ' range' → logprob: -5.265320301055908
    4. 'in' → logprob: -5.515320301055908
    5. '(range' → logprob: -7.140320301055908
    6. '	range' → logprob: -11.640320777893066
    7. 'ange' → logprob: -11.765320777893066
    8. 'i' → logprob: -12.265320777893066
    9. '```' → logprob: -12.390320777893066
    10. 'a' → logprob: -12.390320777893066

Token 34: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0006277294596657157
    2. ' range' → logprob: -7.375627517700195
    3. '(range' → logprob: -14.625627517700195
    4. ')' → logprob: -15.375627517700195
    5. '	range' → logprob: -16.000627517700195
    6. '[' → logprob: -16.125627517700195
    7. ' ' → logprob: -16.250627517700195
    8. 'a' → logprob: -16.500627517700195
    9. '```' → logprob: -17.000627517700195
    10. '(' → logprob: -17.375627517700195

Token 35: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -3.380904672667384e-05
    2. '(' → logprob: -10.500033378601074
    3. '(w' → logprob: -12.125033378601074
    4. 'h' → logprob: -14.250033378601074
    5. '(n' → logprob: -16.62503433227539
    6. ' (' → logprob: -17.12503433227539
    7. ' h' → logprob: -18.00003433227539
    8. '(
' → logprob: -18.37503433227539
    9. '(a' → logprob: -19.50003433227539
    10. ')' → logprob: -19.75003433227539

Token 36: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00030972150852903724
    2. ')' → logprob: -8.250309944152832
    3. ']' → logprob: -10.000309944152832
    4. ')])' → logprob: -14.000309944152832
    5. '])]' → logprob: -14.375309944152832
    6. '')]' → logprob: -14.875309944152832
    7. '))' → logprob: -15.250309944152832
    8. ')],' → logprob: -15.250309944152832
    9. ' )' → logprob: -15.375309944152832
    10. ')][' → logprob: -16.250308990478516

Token 37: 'row' (ID: 843)
  Prédit: 'row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.22408659756183624
    2. 'rows' → logprob: -1.7240866422653198
    3. 'col' → logprob: -4.849086761474609
    4. 'cols' → logprob: -4.849086761474609
    5. 'columns' → logprob: -6.474086761474609
    6. 'used' → logprob: -6.474086761474609
    7. 'column' → logprob: -7.724086761474609
    8. 'counts' → logprob: -7.849086761474609
    9. 'r' → logprob: -8.22408676147461
    10. 'b' → logprob: -8.34908676147461

Token 38: '_mask' (ID: 21732)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.3559225797653198
    2. '_' → logprob: -2.1059226989746094
    3. 's' → logprob: -2.8559226989746094
    4. '_mask' → logprob: -3.3559226989746094
    5. '_has' → logprob: -4.105922698974609
    6. '_counts' → logprob: -4.230922698974609
    7. '_flags' → logprob: -4.480922698974609
    8. '_sum' → logprob: -4.480922698974609
    9. '_keep' → logprob: -4.730922698974609
    10. '_used' → logprob: -4.855922698974609

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048795148730278015
    2. '=' → logprob: -3.048795223236084
    3. 's' → logprob: -8.673794746398926
    4. ',' → logprob: -10.548794746398926
    5. ' =[' → logprob: -12.548794746398926
    6. '=[]' → logprob: -13.048794746398926
    7. ' ' → logprob: -13.423794746398926
    8. '[' → logprob: -14.048794746398926
    9. '=[' → logprob: -14.548794746398926
    10. '[:]' → logprob: -14.673794746398926

Token 40: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.031115012243390083
    2. '[a' → logprob: -3.5311150550842285
    3. '[h' → logprob: -7.2811150550842285
    4. '[row' → logprob: -8.28111457824707
    5. ' [' → logprob: -8.53111457824707
    6. '[list' → logprob: -9.65611457824707
    7. '[len' → logprob: -10.53111457824707
    8. '[i' → logprob: -11.15611457824707
    9. '[]' → logprob: -11.28111457824707
    10. '[w' → logprob: -11.40611457824707

Token 41: 'any' (ID: 1252)
  Prédit: 'any'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.030615298077464104
    2. 'True' → logprob: -4.030615329742432
    3. 'False' → logprob: -4.780615329742432
    4. '1' → logprob: -7.280615329742432
    5. '(any' → logprob: -7.280615329742432
    6. ''any' → logprob: -7.280615329742432
    7. '0' → logprob: -7.405615329742432
    8. 'not' → logprob: -7.405615329742432
    9. 'all' → logprob: -8.280614852905273
    10. ' any' → logprob: -8.655614852905273

Token 42: '(cell' (ID: 46188)
  Prédit: '(row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.05318661779165268
    2. '(a' → logprob: -3.9281866550445557
    3. '(cell' → logprob: -4.053186416625977
    4. '(c' → logprob: -5.053186416625977
    5. '(x' → logprob: -5.178186416625977
    6. '(r' → logprob: -6.178186416625977
    7. '(' → logprob: -8.428186416625977
    8. '(line' → logprob: -8.553186416625977
    9. '('#' → logprob: -9.803186416625977
    10. '(ch' → logprob: -9.928186416625977

Token 43: ' !=' (ID: 1666)
  Prédit: '(cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(cell' → logprob: -0.49603796005249023
    2. '(row' → logprob: -0.9960379600524902
    3. 'for' → logprob: -3.9960379600524902
    4. ' for' → logprob: -6.62103796005249
    5. '(' → logprob: -7.24603796005249
    6. '(c' → logprob: -8.121038436889648
    7. ')' → logprob: -8.371038436889648
    8. '(line' → logprob: -8.496038436889648
    9. '==' → logprob: -8.996038436889648
    10. '!=' → logprob: -9.121038436889648

Token 44: ' '.'' (ID: 64762)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.06992465257644653
    2. ''#' → logprob: -3.4449245929718018
    3. ''' → logprob: -4.069924831390381
    4. '"."' → logprob: -4.194924831390381
    5. '"' → logprob: -6.694924831390381
    6. '"#' → logprob: -7.194924831390381
    7. '".' → logprob: -7.569924831390381
    8. ''*' → logprob: -8.444924354553223
    9. ' '.'' → logprob: -8.569924354553223
    10. ''a' → logprob: -8.819924354553223

Token 45: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.38719743490219116
    2. 'for' → logprob: -1.137197494506836
    3. ')' → logprob: -8.262197494506836
    4. ' ' → logprob: -9.762197494506836
    5. '  ' → logprob: -12.887197494506836
    6. '   ' → logprob: -13.012197494506836
    7. '	for' → logprob: -13.262197494506836
    8. '    ' → logprob: -14.262197494506836
    9. ' in' → logprob: -14.262197494506836
    10. '```' → logprob: -14.762197494506836

Token 46: ' cell' (ID: 4206)
  Prédit: ' cell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cell' → logprob: -0.31530889868736267
    2. 'cell' → logprob: -1.315308928489685
    3. ' row' → logprob: -6.440309047698975
    4. 'row' → logprob: -7.940309047698975
    5. 'cel' → logprob: -10.315308570861816
    6. '	cell' → logprob: -10.440308570861816
    7. 'Cell' → logprob: -11.565308570861816
    8. ' ' → logprob: -12.065308570861816
    9. ')' → logprob: -12.940308570861816
    10. '<|end|>' → logprob: -13.190308570861816

Token 47: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11319123208522797
    2. 'in' → logprob: -2.2381911277770996
    3. 'row' → logprob: -8.738191604614258
    4. ')' → logprob: -9.363191604614258
    5. ' row' → logprob: -9.488191604614258
    6. '<|end|>' → logprob: -10.988191604614258
    7. ' ' → logprob: -11.738191604614258
    8. 'In' → logprob: -12.613191604614258
    9. '<|end|>' → logprob: -12.738191604614258
    10. '	in' → logprob: -13.175691604614258

Token 48: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.02983170747756958
    2. ' row' → logprob: -3.529831647872925
    3. 'r' → logprob: -9.904831886291504
    4. 'a' → logprob: -11.404831886291504
    5. 'rows' → logprob: -11.529831886291504
    6. ')' → logprob: -12.029831886291504
    7. 'line' → logprob: -13.779831886291504
    8. '	row' → logprob: -13.779831886291504
    9. ' ' → logprob: -14.279831886291504
    10. ' a' → logprob: -15.029831886291504

Token 49: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.8921695047756657e-05
    2. ' )' → logprob: -10.875028610229492
    3. ')]' → logprob: -12.125028610229492
    4. ')
' → logprob: -13.125028610229492
    5. ' ' → logprob: -14.500028610229492
    6. ' for' → logprob: -14.500028610229492
    7. '),' → logprob: -14.875028610229492
    8. ']' → logprob: -15.375028610229492
    9. 'for' → logprob: -15.375028610229492
    10. '   ' → logprob: -15.375028610229492

Token 50: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06385219097137451
    2. ')' → logprob: -2.938852310180664
    3. 'for' → logprob: -4.938852310180664
    4. ' ' → logprob: -6.438852310180664
    5. ' )' → logprob: -9.313852310180664
    6. '   ' → logprob: -10.438852310180664
    7. ' in' → logprob: -10.813852310180664
    8. ']' → logprob: -11.563852310180664
    9. ')]' → logprob: -12.563852310180664
    10. ' if' → logprob: -12.938852310180664

Token 51: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.07895885407924652
    2. 'row' → logprob: -2.578958749771118
    3. ' ' → logprob: -10.578958511352539
    4. '	row' → logprob: -11.078958511352539
    5. ' _' → logprob: -11.328958511352539
    6. '_' → logprob: -12.578958511352539
    7. ')' → logprob: -13.078958511352539
    8. 'a' → logprob: -13.203958511352539
    9. ' a' → logprob: -13.328958511352539
    10. '(row' → logprob: -13.828958511352539

Token 52: ' in' (ID: 306)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08802980929613113
    2. ' in' → logprob: -2.7130298614501953
    3. ')]' → logprob: -4.338029861450195
    4. 'in' → logprob: -5.713029861450195
    5. ' ]' → logprob: -7.213029861450195
    6. ')' → logprob: -7.338029861450195
    7. '])' → logprob: -9.713029861450195
    8. 'a' → logprob: -9.963029861450195
    9. '])]' → logprob: -10.838029861450195
    10. ' ' → logprob: -11.713029861450195

Token 53: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0053107235580682755
    2. ' a' → logprob: -5.255310535430908
    3. 'range' → logprob: -10.130311012268066
    4. ' range' → logprob: -10.255311012268066
    5. ' ' → logprob: -13.630311012268066
    6. ')' → logprob: -15.005311012268066
    7. ')a' → logprob: -15.755311012268066
    8. '   ' → logprob: -15.880311012268066
    9. '	a' → logprob: -17.13031005859375
    10. '  ' → logprob: -17.38031005859375

Token 54: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004078639671206474
    2. ')' → logprob: -6.1290788650512695
    3. ')]' → logprob: -6.3790788650512695
    4. ']
' → logprob: -9.12907886505127
    5. '])' → logprob: -9.50407886505127
    6. ' ]' → logprob: -11.62907886505127
    7. ')
' → logprob: -14.12907886505127
    8. ']

' → logprob: -14.25407886505127
    9. '])]' → logprob: -14.50407886505127
    10. ')])' → logprob: -15.00407886505127

Token 55: 'col' (ID: 1798)
  Prédit: 'col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.018392935395240784
    2. 'column' → logprob: -4.018393039703369
    3. ' col' → logprob: -8.393392562866211
    4. 'colm' → logprob: -12.893392562866211
    5. '
' → logprob: -13.018392562866211
    6. '```' → logprob: -13.018392562866211
    7. '[col' → logprob: -13.393392562866211
    8. ' column' → logprob: -13.393392562866211
    9. '	col' → logprob: -13.893392562866211
    10. 'coln' → logprob: -14.518392562866211

Token 56: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.00014180023572407663
    2. '_' → logprob: -9.000142097473145
    3. '_masks' → logprob: -11.250142097473145
    4. 'mask' → logprob: -12.875142097473145
    5. '_m' → logprob: -13.625142097473145
    6. '_MASK' → logprob: -14.375142097473145
    7. ' _' → logprob: -14.750142097473145
    8. '_s' → logprob: -16.500141143798828
    9. '=_' → logprob: -16.875141143798828
    10. 's' → logprob: -17.000141143798828

Token 57: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020545978099107742
    2. '=' → logprob: -3.8955459594726562
    3. ' =[' → logprob: -13.395545959472656
    4. ')' → logprob: -14.270545959472656
    5. 's' → logprob: -14.645545959472656
    6. '[' → logprob: -14.645545959472656
    7. ' ' → logprob: -15.145545959472656
    8. ',' → logprob: -15.770545959472656
    9. '<|end|>' → logprob: -16.145545959472656
    10. '=[' → logprob: -16.145545959472656

Token 58: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1604909896850586
    2. ' [' → logprob: -1.9104909896850586
    3. '[col' → logprob: -8.785490989685059
    4. '[row' → logprob: -10.535490989685059
    5. '[cell' → logprob: -10.535490989685059
    6. '[column' → logprob: -11.160490989685059
    7. '[Any' → logprob: -11.410490989685059
    8. '[list' → logprob: -11.535490989685059
    9. ' ' → logprob: -11.785490989685059
    10. '[a' → logprob: -12.035490989685059

Token 59: 'any' (ID: 1252)
  Prédit: 'any'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.0002776630863081664
    2. ' any' → logprob: -8.250277519226074
    3. '(any' → logprob: -12.000277519226074
    4. 'not' → logprob: -12.250277519226074
    5. ''any' → logprob: -13.625277519226074
    6. '
' → logprob: -13.875277519226074
    7. ' ' → logprob: -14.000277519226074
    8. '   ' → logprob: -14.125277519226074
    9. 'True' → logprob: -14.875277519226074
    10. '<any' → logprob: -15.250277519226074

Token 60: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.3140249252319336
    2. '(row' → logprob: -1.5640249252319336
    3. '(cell' → logprob: -2.8140249252319336
    4. '(' → logprob: -9.689024925231934
    5. 'a' → logprob: -9.939024925231934
    6. '(column' → logprob: -10.064024925231934
    7. '(col' → logprob: -10.439024925231934
    8. 'row' → logprob: -10.439024925231934
    9. 'cell' → logprob: -10.814024925231934
    10. '(line' → logprob: -13.189024925231934

Token 61: '[i' (ID: 1768)
  Prédit: '[row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -0.605814516544342
    2. '[i' → logprob: -1.1058144569396973
    3. '[r' → logprob: -2.1058144569396973
    4. '[j' → logprob: -6.480814456939697
    5. 'row' → logprob: -9.230814933776855
    6. 'r' → logprob: -10.730814933776855
    7. '[h' → logprob: -11.730814933776855
    8. '```' → logprob: -11.855814933776855
    9. '[y' → logprob: -11.980814933776855
    10. '[' → logprob: -12.855814933776855

Token 62: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.7151562571525574
    2. '[j' → logprob: -0.7151562571525574
    3. '][' → logprob: -4.340156078338623
    4. '[row' → logprob: -4.840156078338623
    5. '[h' → logprob: -8.715156555175781
    6. '[r' → logprob: -8.715156555175781
    7. 'j' → logprob: -8.840156555175781
    8. '[' → logprob: -9.090156555175781
    9. ')' → logprob: -10.465156555175781
    10. 'row' → logprob: -10.590156555175781

Token 63: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -9.491498531133402e-06
    2. ' j' → logprob: -11.750009536743164
    3. 'c' → logprob: -14.000009536743164
    4. '
' → logprob: -15.250009536743164
    5. '   ' → logprob: -15.875009536743164
    6. ' ' → logprob: -15.875009536743164
    7. '	j' → logprob: -16.500009536743164
    8. '```' → logprob: -16.625009536743164
    9. ']' → logprob: -17.375009536743164
    10. '$j' → logprob: -17.375009536743164

Token 64: ']' (ID: 60)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.20036457479000092
    2. '!=' → logprob: -1.825364589691162
    3. ']' → logprob: -4.075364589691162
    4. ']!=' → logprob: -5.825364589691162
    5. ')' → logprob: -8.950364112854004
    6. 'for' → logprob: -9.450364112854004
    7. '!='' → logprob: -9.825364112854004
    8. ')!=' → logprob: -9.825364112854004
    9. ' ]' → logprob: -10.200364112854004
    10. ']!='' → logprob: -10.575364112854004

Token 65: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.1270911544561386
    2. '!=' → logprob: -2.1270911693573
    3. 'for' → logprob: -9.627091407775879
    4. ' for' → logprob: -10.252091407775879
    5. ']!=' → logprob: -11.002091407775879
    6. ')!=' → logprob: -11.127091407775879
    7. '!='' → logprob: -11.377091407775879
    8. ' ' → logprob: -12.502091407775879
    9. ')' → logprob: -12.752091407775879
    10. '[i' → logprob: -13.002091407775879

Token 66: ' '.'' (ID: 64762)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.0019657472148537636
    2. ' '.'' → logprob: -6.376965522766113
    3. '.' → logprob: -8.251965522766113
    4. '"."' → logprob: -14.001965522766113
    5. '')' → logprob: -14.876965522766113
    6. '   ' → logprob: -14.876965522766113
    7. '  ' → logprob: -15.376965522766113
    8. ' ' → logprob: -15.376965522766113
    9. '('.')' → logprob: -15.501965522766113
    10. ' '.')' → logprob: -15.751965522766113

Token 67: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20142045617103577
    2. 'for' → logprob: -1.7014204263687134
    3. '	for' → logprob: -12.451420783996582
    4. ' ' → logprob: -13.076420783996582
    5. ')' → logprob: -14.076420783996582
    6. '   ' → logprob: -16.076419830322266
    7. ' in' → logprob: -16.701419830322266
    8. '           ' → logprob: -16.701419830322266
    9. 'or' → logprob: -16.951419830322266
    10. ' or' → logprob: -17.201419830322266

Token 68: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.016037767753005028
    2. ' i' → logprob: -4.141037940979004
    3. ')' → logprob: -13.891037940979004
    4. 'a' → logprob: -14.641037940979004
    5. '	i' → logprob: -14.891037940979004
    6. ' in' → logprob: -14.891037940979004
    7. ')i' → logprob: -15.016037940979004
    8. ' ' → logprob: -15.516037940979004
    9. '<|end|>' → logprob: -15.641037940979004
    10. '```' → logprob: -16.266036987304688

Token 69: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014481144025921822
    2. 'in' → logprob: -4.264481067657471
    3. ' range' → logprob: -8.764481544494629
    4. 'range' → logprob: -8.764481544494629
    5. '<|end|>' → logprob: -12.764481544494629
    6. ' ' → logprob: -13.639481544494629
    7. ')' → logprob: -14.014481544494629
    8. ' xrange' → logprob: -15.764481544494629
    9. '(range' → logprob: -17.014480590820312
    10. ',' → logprob: -17.639480590820312

Token 70: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16022737324237823
    2. ' range' → logprob: -1.9102274179458618
    3. '(range' → logprob: -13.53522777557373
    4. 'h' → logprob: -14.28522777557373
    5. ' xrange' → logprob: -14.53522777557373
    6. ')' → logprob: -14.78522777557373
    7. '	range' → logprob: -15.41022777557373
    8. ' ' → logprob: -15.78522777557373
    9. 'row' → logprob: -17.035226821899414
    10. 'r' → logprob: -18.160226821899414

Token 71: '(h' (ID: 8120)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.011187756434082985
    2. '(h' → logprob: -4.511187553405762
    3. ' h' → logprob: -8.886187553405762
    4. '	h' → logprob: -13.886187553405762
    5. '(' → logprob: -15.386187553405762
    6. ')' → logprob: -15.511187553405762
    7. ',h' → logprob: -16.261188507080078
    8. '<h' → logprob: -16.886188507080078
    9. '   ' → logprob: -17.761188507080078
    10. '[h' → logprob: -18.011188507080078

Token 72: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00223316322080791
    2. ' )' → logprob: -6.377233028411865
    3. 'w' → logprob: -8.377233505249023
    4. ' for' → logprob: -9.502233505249023
    5. '))' → logprob: -9.502233505249023
    6. ' w' → logprob: -10.252233505249023
    7. ' ' → logprob: -10.502233505249023
    8. 'for' → logprob: -10.627233505249023
    9. ',' → logprob: -11.002233505249023
    10. '   ' → logprob: -11.127233505249023

Token 73: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.018338287249207497
    2. 'for' → logprob: -4.018338203430176
    3. ' in' → logprob: -8.643338203430176
    4. ' ' → logprob: -11.893338203430176
    5. ')' → logprob: -12.518338203430176
    6. '	for' → logprob: -14.268338203430176
    7. '   ' → logprob: -14.893338203430176
    8. ' range' → logprob: -14.893338203430176
    9. 'in' → logprob: -15.893338203430176
    10. '    ' → logprob: -16.893339157104492

Token 74: ' j' (ID: 441)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.05315122753381729
    2. 'range' → logprob: -3.3031511306762695
    3. ' j' → logprob: -4.4281511306762695
    4. 'j' → logprob: -5.8031511306762695
    5. ' w' → logprob: -10.67815113067627
    6. 'w' → logprob: -11.05315113067627
    7. ' ' → logprob: -13.92815113067627
    8. 'Range' → logprob: -14.05315113067627
    9. '(range' → logprob: -15.55315113067627
    10. ' in' → logprob: -15.67815113067627

Token 75: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004621422383934259
    2. 'in' → logprob: -5.379621505737305
    3. 'range' → logprob: -14.754621505737305
    4. ' ' → logprob: -14.879621505737305
    5. ' range' → logprob: -15.254621505737305
    6. 'w' → logprob: -15.754621505737305
    7. ')' → logprob: -16.754621505737305
    8. 'In' → logprob: -17.129621505737305
    9. ' w' → logprob: -18.004621505737305
    10. 'import' → logprob: -18.379621505737305

Token 76: ' range' (ID: 3352)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.29776713252067566
    2. ' range' → logprob: -1.797767162322998
    3. 'range' → logprob: -2.547767162322998
    4. ' w' → logprob: -4.297767162322998
    5. '(w' → logprob: -13.79776668548584
    6. '<w' → logprob: -14.79776668548584
    7. ' ' → logprob: -15.17276668548584
    8. '[w' → logprob: -15.54776668548584
    9. '(range' → logprob: -15.92276668548584
    10. ' xrange' → logprob: -15.92276668548584

Token 77: '(w' (ID: 7420)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.2521370053291321
    2. '(w' → logprob: -1.5021369457244873
    3. ' w' → logprob: -8.502137184143066
    4. '(' → logprob: -12.877137184143066
    5. ' (' → logprob: -13.377137184143066
    6. '	w' → logprob: -15.377137184143066
    7. ')' → logprob: -15.877137184143066
    8. '<w' → logprob: -16.00213623046875
    9. ',w' → logprob: -16.50213623046875
    10. '_w' → logprob: -17.12713623046875

Token 78: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.04962211847305298
    2. ']' → logprob: -3.049622058868408
    3. ')' → logprob: -7.299622058868408
    4. '])]' → logprob: -8.424622535705566
    5. '])' → logprob: -9.049622535705566
    6. ')])' → logprob: -11.299622535705566
    7. ' ]' → logprob: -12.424622535705566
    8. ')],' → logprob: -13.799622535705566
    9. ']]' → logprob: -14.174622535705566
    10. ' )' → logprob: -14.174622535705566

Token 79: 'output' (ID: 6130)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03996086120605469
    2. 'new' → logprob: -4.039960861206055
    3. 'filtered' → logprob: -4.414960861206055
    4. 'result' → logprob: -5.914960861206055
    5. 'compressed' → logprob: -6.164960861206055
    6. 'a' → logprob: -6.164960861206055
    7. 'i' → logprob: -7.289960861206055
    8. 'print' → logprob: -8.039960861206055
    9. ' for' → logprob: -8.039960861206055
    10. 'clean' → logprob: -8.414960861206055

Token 80: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2538928687572479
    2. ' =' → logprob: -1.5038928985595703
    3. '=
' → logprob: -7.25389289855957
    4. '=[]
' → logprob: -8.12889289855957
    5. 'for' → logprob: -8.50389289855957
    6. ' =
' → logprob: -8.87889289855957
    7. '
' → logprob: -8.87889289855957
    8. 'print' → logprob: -9.87889289855957
    9. '[
' → logprob: -10.00389289855957
    10. 'a' → logprob: -10.00389289855957

Token 81: ' [
' (ID: 4240)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.32733455300331116
    2. '[' → logprob: -1.3273345232009888
    3. '[
' → logprob: -4.452334403991699
    4. ' [' → logprob: -6.702334403991699
    5. 'list' → logprob: -7.952334403991699
    6. '[row' → logprob: -8.9523344039917
    7. '[List' → logprob: -8.9523344039917
    8. '['' → logprob: -9.3273344039917
    9. '[str' → logprob: -9.7023344039917
    10. '["' → logprob: -9.8273344039917

Token 82: '   ' (ID: 271)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.034017596393823624
    2. '[list' → logprob: -3.534017562866211
    3. '[' → logprob: -6.159017562866211
    4. '   ' → logprob: -7.284017562866211
    5. 'compress' → logprob: -7.659017562866211
    6. ' list' → logprob: -7.909017562866211
    7. '[
' → logprob: -8.159017562866211
    8. '['' → logprob: -9.159017562866211
    9. ' [' → logprob: -9.909017562866211
    10. ' ' → logprob: -9.909017562866211

Token 83: ' ''.' (ID: 105941)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.03576778620481491
    2. '[list' → logprob: -3.4107677936553955
    3. '[' → logprob: -6.535767555236816
    4. '['' → logprob: -8.535767555236816
    5. '[
' → logprob: -9.035767555236816
    6. ' list' → logprob: -9.285767555236816
    7. '   ' → logprob: -9.410767555236816
    8. 'compress' → logprob: -9.660767555236816
    9. '["' → logprob: -10.410767555236816
    10. '''.' (adapté à ' ''.') → logprob: -11.035767555236816

Token 84: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -6.749814019713085e-06
    2. '.' → logprob: -12.125006675720215
    3. 'jo' → logprob: -14.750006675720215
    4. '.join' → logprob: -14.875006675720215
    5. ' join' → logprob: -15.750006675720215
    6. 'j' → logprob: -16.00000762939453
    7. '''.' → logprob: -16.00000762939453
    8. ''.' → logprob: -16.50000762939453
    9. '```' → logprob: -17.50000762939453
    10. '(join' → logprob: -17.87500762939453

Token 85: '(com' (ID: 27868)
  Prédit: '(com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.06895720958709717
    2. 'compress' → logprob: -3.1939573287963867
    3. 'list' → logprob: -4.318957328796387
    4. '(list' → logprob: -4.443957328796387
    5. 'com' → logprob: -7.693957328796387
    6. '(' → logprob: -9.818957328796387
    7. '[' → logprob: -11.693957328796387
    8. '	com' → logprob: -11.693957328796387
    9. 'compressed' → logprob: -12.193957328796387
    10. ' compress' → logprob: -12.443957328796387

Token 86: 'press' (ID: 2020)
  Prédit: 'press'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'press' → logprob: -8.077528764260933e-05
    2. 'ress' → logprob: -9.500081062316895
    3. 'pressed' → logprob: -13.000081062316895
    4. '(' → logprob: -14.000081062316895
    5. 'p' → logprob: -14.375081062316895
    6. 'compress' → logprob: -14.375081062316895
    7. 'pressor' → logprob: -14.875081062316895
    8. 'pression' → logprob: -15.125081062316895
    9. 'ss' → logprob: -15.375081062316895
    10. 'pr' → logprob: -15.500081062316895

Token 87: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.00041947141289711
    2. '(a' → logprob: -8.000419616699219
    3. '(r' → logprob: -9.750419616699219
    4. '(' → logprob: -11.125419616699219
    5. 'row' → logprob: -11.750419616699219
    6. '(line' → logprob: -13.875419616699219
    7. '(rows' → logprob: -14.000419616699219
    8. ')' → logprob: -14.875419616699219
    9. '(col' → logprob: -16.00041961669922
    10. '(range' → logprob: -16.37541961669922

Token 88: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02438800223171711
    2. ',row' → logprob: -4.024387836456299
    3. '(row' → logprob: -5.524387836456299
    4. '[row' → logprob: -6.649387836456299
    5. 'row' → logprob: -8.274388313293457
    6. ',col' → logprob: -8.524388313293457
    7. ' ,' → logprob: -8.649388313293457
    8. 'a' → logprob: -10.024388313293457
    9. '(mask' → logprob: -10.149388313293457
    10. '[' → logprob: -10.524388313293457

Token 89: ' col' (ID: 996)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.21784596145153046
    2. ' col' → logprob: -1.7178459167480469
    3. 'compress' → logprob: -4.592845916748047
    4. ' compress' → logprob: -5.467845916748047
    5. 'row' → logprob: -7.092845916748047
    6. ' row' → logprob: -8.217845916748047
    7. 'column' → logprob: -8.342845916748047
    8. 'mask' → logprob: -8.967845916748047
    9. ' ' → logprob: -9.217845916748047
    10. ' column' → logprob: -9.467845916748047

Token 90: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -2.057743949990254e-05
    2. 'mask' → logprob: -10.875020980834961
    3. '_MASK' → logprob: -14.625020980834961
    4. '_masks' → logprob: -14.625020980834961
    5. '_' → logprob: -15.750020980834961
    6. 'Mask' → logprob: -16.00002098083496
    7. '_m' → logprob: -16.12502098083496
    8. ' mask' → logprob: -16.50002098083496
    9. ')' → logprob: -16.62502098083496
    10. '))' → logprob: -18.12502098083496

Token 91: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.020933866500854492
    2. '))
' → logprob: -3.8959338665008545
    3. ' ))' → logprob: -8.270934104919434
    4. '))

' → logprob: -10.020934104919434
    5. '[row' → logprob: -10.145934104919434
    6. ' ))
' → logprob: -10.645934104919434
    7. '))
' → logprob: -11.270934104919434
    8. ')' → logprob: -12.395934104919434
    9. ' ' → logprob: -12.645934104919434
    10. ')))' → logprob: -12.895934104919434

Token 92: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026065832003951073
    2. '   ' → logprob: -4.276065826416016
    3. 'for' → logprob: -5.026065826416016
    4. ' for' → logprob: -5.651065826416016
    5. ' ' → logprob: -7.026065826416016
    6. ']' → logprob: -7.651065826416016
    7. ')
' → logprob: -8.026065826416016
    8. ' )' → logprob: -10.901065826416016
    9. '')' → logprob: -11.901065826416016
    10. ',' → logprob: -12.401065826416016

Token 93: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.13945278525352478
    2. ' for' → logprob: -2.3894526958465576
    3. '   ' → logprob: -3.2644526958465576
    4. ' ' → logprob: -8.639452934265137
    5. ')' → logprob: -10.014452934265137
    6. '	for' → logprob: -10.139452934265137
    7. '       ' → logprob: -12.764452934265137
    8. '    ' → logprob: -13.639452934265137
    9. '  ' → logprob: -13.889452934265137
    10. '
' → logprob: -14.014452934265137

Token 94: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.06936080753803253
    2. 'a' → logprob: -2.9443607330322266
    3. ' row' → logprob: -4.319360733032227
    4. ' a' → logprob: -7.694360733032227
    5. 'compress' → logprob: -8.569360733032227
    6. '(row' → logprob: -8.944360733032227
    7. 'range' → logprob: -9.319360733032227
    8. '(a' → logprob: -10.069360733032227
    9. '(' → logprob: -10.694360733032227
    10. ' (' → logprob: -10.819360733032227

Token 95: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1145002692937851
    2. 'in' → logprob: -2.2395002841949463
    3. 'output' → logprob: -7.364500045776367
    4. ',' → logprob: -7.489500045776367
    5. 'row' → logprob: -8.364500045776367
    6. ',row' → logprob: -9.364500045776367
    7. 'if' → logprob: -10.239500045776367
    8. ' if' → logprob: -10.364500045776367
    9. ' ,' → logprob: -10.489500045776367
    10. ' output' → logprob: -10.614500045776367

Token 96: ' flag' (ID: 9641)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.3392660617828369
    2. 'keep' → logprob: -1.839266061782837
    3. 'rm' → logprob: -2.589266061782837
    4. 'row' → logprob: -3.339266061782837
    5. 'flag' → logprob: -5.089265823364258
    6. 'include' → logprob: -5.464265823364258
    7. ' keep' → logprob: -6.464265823364258
    8. ' mask' → logprob: -6.464265823364258
    9. ' rm' → logprob: -6.839265823364258
    10. 'in' → logprob: -7.089265823364258

Token 97: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.577120840549469
    2. ' in' → logprob: -0.827120840549469
    3. 's' → logprob: -6.827120780944824
    4. ',' → logprob: -10.327120780944824
    5. ' ' → logprob: -10.577120780944824
    6. '_in' → logprob: -11.077120780944824
    7. '1' → logprob: -12.577120780944824
    8. '	in' → logprob: -12.702120780944824
    9. 'ing' → logprob: -12.952120780944824
    10. 'e' → logprob: -13.327120780944824

Token 98: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.6931540966033936
    2. ' zip' → logprob: -0.6931540966033936
    3. '(zip' → logprob: -12.193154335021973
    4. ' ' → logprob: -13.943154335021973
    5. 'compress' → logprob: -14.693154335021973
    6. '   ' → logprob: -14.818154335021973
    7. '_zip' → logprob: -16.443153381347656
    8. '.zip' → logprob: -16.693153381347656
    9. ' compress' → logprob: -16.693153381347656
    10. '  ' → logprob: -17.568153381347656

Token 99: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0006752623594366014
    2. '(row' → logprob: -7.375675201416016
    3. '(zip' → logprob: -10.250675201416016
    4. '(' → logprob: -11.875675201416016
    5. '(output' → logprob: -12.500675201416016
    6. ' (' → logprob: -14.250675201416016
    7. 'row' → logprob: -14.500675201416016
    8. 'a' → logprob: -14.500675201416016
    9. '((' → logprob: -15.375675201416016
    10. 'zip' → logprob: -15.500675201416016

Token 100: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22337359189987183
    2. ',row' → logprob: -1.7233736515045166
    3. 'row' → logprob: -3.9733736515045166
    4. ' row' → logprob: -5.9733734130859375
    5. ' ,' → logprob: -7.9733734130859375
    6. '(row' → logprob: -11.223373413085938
    7. '[row' → logprob: -13.098373413085938
    8. '),' → logprob: -13.848373413085938
    9. ')' → logprob: -14.098373413085938
    10. ',column' → logprob: -14.348373413085938

Token 101: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.11282762885093689
    2. ' row' → logprob: -2.2378275394439697
    3. '   ' → logprob: -13.36282730102539
    4. ')' → logprob: -14.23782730102539
    5. '(row' → logprob: -14.36282730102539
    6. ' ' → logprob: -14.48782730102539
    7. '	row' → logprob: -14.48782730102539
    8. '[row' → logprob: -14.61282730102539
    9. ',row' → logprob: -14.73782730102539
    10. 'rown' → logprob: -16.36282730102539

Token 102: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -1.0280383548888494e-06
    2. 'mask' → logprob: -14.375000953674316
    3. '_MASK' → logprob: -14.750000953674316
    4. '_masks' → logprob: -17.500001907348633
    5. 'Mask' → logprob: -17.875001907348633
    6. '_row' → logprob: -19.000001907348633
    7. ' mask' → logprob: -20.250001907348633
    8. 'row' → logprob: -20.375001907348633
    9. '_filter' → logprob: -21.250001907348633
    10. 's' → logprob: -21.250001907348633

Token 103: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17142346501350403
    2. ' if' → logprob: -1.9214234352111816
    3. 'if' → logprob: -4.546423435211182
    4. '   ' → logprob: -8.42142391204834
    5. ' ' → logprob: -9.17142391204834
    6. ')]' → logprob: -9.54642391204834
    7. ']' → logprob: -10.17142391204834
    8. '       ' → logprob: -10.42142391204834
    9. '()' → logprob: -11.04642391204834
    10. ' )' → logprob: -11.42142391204834

Token 104: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.11359693855047226
    2. 'if' → logprob: -2.2385969161987305
    3. '   ' → logprob: -8.11359691619873
    4. ' ' → logprob: -8.23859691619873
    5. '	if' → logprob: -8.73859691619873
    6. '  ' → logprob: -11.23859691619873
    7. '       ' → logprob: -11.98859691619873
    8. '()' → logprob: -11.98859691619873
    9. ']' → logprob: -12.11359691619873
    10. 'If' → logprob: -12.23859691619873

Token 105: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.03804401680827141
    2. ' flag' → logprob: -3.288043975830078
    3. '   ' → logprob: -13.788043975830078
    4. '	flag' → logprob: -14.288043975830078
    5. ' ' → logprob: -14.663043975830078
    6. '(flag' → logprob: -15.288043975830078
    7. 'row' → logprob: -15.788043975830078
    8. ' row' → logprob: -17.663043975830078
    9. 'flags' → logprob: -17.663043975830078
    10. '  ' → logprob: -17.913043975830078

Token 106: '
' (ID: 198)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -2.3557529857498594e-05
    2. ' ]' → logprob: -10.87502384185791
    3. ']
' → logprob: -12.62502384185791
    4. ')' → logprob: -14.87502384185791
    5. ']

' → logprob: -14.87502384185791
    6. '   ' → logprob: -15.25002384185791
    7. ' ' → logprob: -16.500022888183594
    8. '}' → logprob: -16.500022888183594
    9. ')]' → logprob: -16.625022888183594
    10. '']' → logprob: -16.875022888183594

Token 107: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -8.537868779967539e-06
    2. ']
' → logprob: -12.000008583068848
    3. ' ]' → logprob: -13.875008583068848
    4. '   ' → logprob: -14.750008583068848
    5. ']

' → logprob: -14.750008583068848
    6. ')' → logprob: -15.125008583068848
    7. ')]' → logprob: -16.37500762939453
    8. '']' → logprob: -16.62500762939453
    9. '`]' → logprob: -16.62500762939453
    10. '}' → logprob: -17.12500762939453

Token 108: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2650242745876312
    2. 'for' → logprob: -1.6400243043899536
    3. '
' → logprob: -3.265024185180664
    4. ' for' → logprob: -8.640024185180664
    5. '<|end|>' → logprob: -9.015024185180664
    6. '  
' → logprob: -9.390024185180664
    7. '```' → logprob: -9.390024185180664
    8. ')' → logprob: -9.640024185180664
    9. '    
' → logprob: -10.890024185180664
    10. '
' → logprob: -11.015024185180664

Token 109: '(*' (ID: 9000)
  Prédit: '('\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.43667861819267273
    2. '('' → logprob: -1.1866786479949951
    3. '(' → logprob: -3.061678647994995
    4. '(*' → logprob: -6.561678409576416
    5. '()' → logprob: -8.811678886413574
    6. '("\' → logprob: -9.686678886413574
    7. '(output' → logprob: -9.936678886413574
    8. '("' → logprob: -9.936678886413574
    9. '(('' → logprob: -10.436678886413574
    10. '("("' → logprob: -11.811678886413574

Token 110: 'output' (ID: 6130)
  Prédit: 'output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' → logprob: -9.253090865968261e-06
    2. '(output' → logprob: -11.875009536743164
    3. ' output' → logprob: -13.250009536743164
    4. '('\' → logprob: -15.375009536743164
    5. '['' → logprob: -15.500009536743164
    6. '[' → logprob: -16.750009536743164
    7. '["' → logprob: -17.750009536743164
    8. '("\' → logprob: -18.375009536743164
    9. 'Output' → logprob: -18.750009536743164
    10. 'out' → logprob: -19.000009536743164

Token 111: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38950467109680176
    2. ')' → logprob: -1.2645046710968018
    3. '\n' → logprob: -4.264504432678223
    4. 'sep' → logprob: -4.639504432678223
    5. '()' → logprob: -5.264504432678223
    6. '('\' → logprob: -5.889504432678223
    7. '(' → logprob: -6.264504432678223
    8. '\' → logprob: -6.389504432678223
    9. '(separator' → logprob: -7.139504432678223
    10. ')
' → logprob: -7.514504432678223

Token 112: ' sep' (ID: 31529)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sep' → logprob: -0.00035238542477600276
    2. ' sep' → logprob: -8.00035285949707
    3. 'se' → logprob: -11.00035285949707
    4. 'separator' → logprob: -15.25035285949707
    5. ' ' → logprob: -17.87535285949707
    6. ')' → logprob: -18.62535285949707
    7. ''\' → logprob: -18.75035285949707
    8. '_sep' → logprob: -19.00035285949707
    9. '   ' → logprob: -19.12535285949707
    10. '  ' → logprob: -20.00035285949707

Token 113: '='\' (ID: 106410)
  Prédit: '='\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '='\' → logprob: -0.0003469057264737785
    2. '="\' → logprob: -8.750347137451172
    3. ''\' → logprob: -9.125347137451172
    4. '='' → logprob: -10.000347137451172
    5. '=' → logprob: -10.375347137451172
    6. '('\' → logprob: -13.375347137451172
    7. ''' → logprob: -14.375347137451172
    8. '=\' → logprob: -15.375347137451172
    9. '"\' → logprob: -15.750347137451172
    10. '+'\' → logprob: -16.000347137451172

Token 114: 'n' (ID: 77)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.03383230045437813
    2. 'n' → logprob: -3.408832311630249
    3. '')' → logprob: -9.408832550048828
    4. '\' → logprob: -10.033832550048828
    5. '
' → logprob: -11.158832550048828
    6. ''\' → logprob: -11.283832550048828
    7. '\
' → logprob: -11.533832550048828
    8. ')' → logprob: -12.408832550048828
    9. '<|end|>' → logprob: -12.533832550048828
    10. 'newline' → logprob: -12.658832550048828

Token 115: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.4849443838757e-06
    2. '')' → logprob: -13.125004768371582
    3. '))' → logprob: -13.375004768371582
    4. '")' → logprob: -15.125004768371582
    5. ')`' → logprob: -15.125004768371582
    6. '`)' → logprob: -16.000003814697266
    7. ' )' → logprob: -16.500003814697266
    8. ')")' → logprob: -16.750003814697266
    9. ')
' → logprob: -17.250003814697266
    10. '```' → logprob: -18.000003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 113
Tokens correctement prédits (1ère position, stricte): 48
Tokens correctement prédits (1ère position, avec adaptation): 49
Tokens correctement prédits (top 10): 98
Précision stricte (1ère position): 42.48%
Précision adaptée (1ère position): 43.36%
Précision (top 10): 86.73%
================================================================================
