================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:27:37
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
MODULO_PRIME = 10 ** 9 + 7

row_start, column_start, row_end, column_end = map(int, input().split())

maximum_combination_index = (2 * 10 ** 6) + 2

from math import factorial

class PrecomputedFactorials:
    """
    Class to efficiently compute combinations and permutations modulo a prime.
    Factorials are precomputed and stored in a list for fast access.
    """
    def __init__(self, max_index=10**5, modulo=10**9 + 7):
        self.modulo = modulo
        self.max_index = max_index
        self.factorial_list = [1] * (self.max_index + 1)
        for current_index in range(1, self.max_index + 1):
            self.factorial_list[current_index] = (
                self.factorial_list[current_index - 1] * current_index
            ) % self.modulo

    def combination(self, n_value, k_value):
        """
        Calculate n choose k modulo specified modulus.
        """
        if n_value < 0 or k_value < 0 or n_value < k_value:
            return 0
        if n_value == 0 or k_value == 0:
            return 1
        numerator = self.factorial_list[n_value]
        denominator_k = self.factorial_list[k_value]
        denominator_n_minus_k = self.factorial_list[n_value - k_value]
        return (
            numerator
            * self.modular_inverse(denominator_k)
            * self.modular_inverse(denominator_n_minus_k)
        ) % self.modulo

    def permutation(self, n_value, k_value):
        """
        Calculate n permute k modulo specified modulus.
        """
        if n_value < 0 or k_value < 0 or n_value < k_value:
            return 0
        if n_value == 0 or k_value == 0:
            return 1
        numerator = self.factorial_list[n_value]
        denominator = self.factorial_list[n_value - k_value]
        return (numerator * self.modular_inverse(denominator)) % self.modulo

    def modular_inverse(self, number):
        """
        Compute the modular inverse using fast exponentiation.
        Fermat's little theorem: a^(-1) ≡ a^(p-2) mod p  
        """
        return self.fast_exponentiation(number, self.modulo - 2)

    def fast_exponentiation(self, base, exponent):
        """
        Compute (base ^ exponent) modulo given modulus using binary exponentiation.
        """
        if exponent == 0:
            return 1
        elif exponent % 2 == 0:
            half_power = self.fast_exponentiation(base, exponent // 2)
            return (half_power * half_power) % self.modulo
        else:
            previous_power = self.fast_exponentiation(base, exponent - 1)
            return (base * previous_power) % self.modulo

factorial_helper = PrecomputedFactorials(maximum_combination_index, MODULO_PRIME)

def rectangle_paths_combinations(sum_x, sum_y):
    """
    Count the number of ways to move from (0,0) to (sum_x, sum_y) moving only right and down.
    """
    return factorial_helper.combination(sum_x + sum_y, sum_y)

def rectangle_paths_combinations_offset(one_past_x, one_past_y):
    """
    Helper to count paths to cell (one_past_x, one_past_y) inclusive of edges.
    Used for inclusion-exclusion.
    """
    return rectangle_paths_combinations(one_past_x + 1, one_past_y + 1)

# Calculation using the inclusion-exclusion principle for the rectangle sum
total_paths_in_rectangle = (
    rectangle_paths_combinations_offset(row_end, column_end)
    - rectangle_paths_combinations_offset(row_end, column_start - 1)
    - rectangle_paths_combinations_offset(row_start - 1, column_end)
    + rectangle_paths_combinations_offset(row_start - 1, column_start - 1)
) % MODULO_PRIME

print(total_paths_in_rectangle)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'MOD' (ID: 52135)
  → Token d'amorce (pas de prédiction)

Token 1: 'ULO' (ID: 63916)
  → Token d'amorce (pas de prédiction)

Token 2: '_PR' (ID: 22300)
  → Token d'amorce (pas de prédiction)

Token 3: 'IME' (ID: 10309)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.029927134513855
    2. '=' → logprob: -1.154927134513855
    3. '_' → logprob: -1.154927134513855
    4. '`' → logprob: -5.2799272537231445
    5. '```' → logprob: -6.0299272537231445
    6. 'E' → logprob: -6.9049272537231445
    7. 'O' → logprob: -7.6549272537231445
    8. ' _' → logprob: -7.6549272537231445
    9. ' ' → logprob: -8.029927253723145
    10. '[' → logprob: -8.029927253723145

Token 4: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.014056793414056301
    2. '=' → logprob: -5.13905668258667
    3. '```' → logprob: -5.26405668258667
    4. ' =' → logprob: -6.88905668258667
    5. '`' → logprob: -7.76405668258667
    6. '*' → logprob: -8.139057159423828
    7. ')' → logprob: -8.389057159423828
    8. '_MOD' → logprob: -8.514057159423828
    9. '#' → logprob: -8.639057159423828
    10. '_=' → logprob: -9.889057159423828

Token 5: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -8.327856630785391e-05
    2. '100' → logprob: -9.625082969665527
    3. ' ' → logprob: -11.375082969665527
    4. '`' → logprob: -12.875082969665527
    5. '104' → logprob: -13.875082969665527
    6. ' `' → logprob: -14.750082969665527
    7. '101' → logprob: -15.250082969665527
    8. ' (' → logprob: -15.750082969665527
    9. '10' → logprob: -15.875082969665527
    10. '17' → logprob: -15.875082969665527

Token 6: '10' (ID: 702)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.03419121354818344
    2. '10' → logprob: -4.534191131591797
    3. '104' → logprob: -4.909191131591797
    4. ' ' → logprob: -5.034191131591797
    5. '101' → logprob: -6.034191131591797
    6. '1' → logprob: -6.034191131591797
    7. '(' → logprob: -7.284191131591797
    8. '214' → logprob: -7.409191131591797
    9. '230' → logprob: -7.784191131591797
    10. '2' → logprob: -8.159191131591797

Token 7: ' **' (ID: 6240)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.30290406942367554
    2. '1' → logprob: -1.6779041290283203
    3. '7' → logprob: -3.9279041290283203
    4. '3' → logprob: -4.05290412902832
    5. '_' → logprob: -4.30290412902832
    6. '2' → logprob: -4.92790412902832
    7. '**' → logprob: -5.42790412902832
    8. '#' → logprob: -5.55290412902832
    9. '6' → logprob: -6.05290412902832
    10. '^' → logprob: -6.42790412902832

Token 8: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.75001049041748
    3. '09' → logprob: -13.25001049041748
    4. '18' → logprob: -16.000009536743164
    5. '+' → logprob: -16.125009536743164
    6. '6' → logprob: -16.375009536743164
    7. '19' → logprob: -16.625009536743164
    8. '10' → logprob: -16.875009536743164
    9. '```' → logprob: -16.875009536743164
    10. '7' → logprob: -17.125009536743164

Token 9: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.3856492842023727e-06
    2. '09' → logprob: -14.500000953674316
    3. '18' → logprob: -15.500000953674316
    4. '```' → logprob: -15.625000953674316
    5. ' ' → logprob: -16.000001907348633
    6. '6' → logprob: -16.125001907348633
    7. '8' → logprob: -16.250001907348633
    8. '19' → logprob: -16.625001907348633
    9. '10' → logprob: -17.625001907348633
    10. '``' → logprob: -17.750001907348633

Token 10: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0009402852156199515
    2. ' +' → logprob: -7.500940322875977
    3. '7' → logprob: -7.875940322875977
    4. '+
' → logprob: -13.250940322875977
    5. '```' → logprob: -13.250940322875977
    6. '+

' → logprob: -13.375940322875977
    7. '＋' → logprob: -14.375940322875977
    8. '\' → logprob: -14.625940322875977
    9. ' ' → logprob: -15.000940322875977
    10. ' ' → logprob: -15.375940322875977

Token 11: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -7.3458322731312364e-06
    2. ' ' → logprob: -12.000007629394531
    3. '```' → logprob: -14.625007629394531
    4. '+' → logprob: -14.750007629394531
    5. '``' → logprob: -17.06250762939453
    6. '17' → logprob: -17.06250762939453
    7. '   ' → logprob: -17.12500762939453
    8. '9' → logprob: -17.18750762939453
    9. '37' → logprob: -17.25000762939453
    10. '1' → logprob: -17.37500762939453

Token 12: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '```' → logprob: -17.125
    4. '+' → logprob: -18.75
    5. '37' → logprob: -18.875
    6. '07' → logprob: -20.0
    7. '17' → logprob: -20.125
    8. '9' → logprob: -20.3125
    9. '   ' → logprob: -20.4375
    10. '``' → logprob: -20.4375

Token 13: '

' (ID: 279)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.25327742099761963
    2. ')' → logprob: -2.37827730178833
    3. '#' → logprob: -3.50327730178833
    4. '\' → logprob: -3.75327730178833
    5. ',' → logprob: -4.00327730178833
    6. '**' → logprob: -4.25327730178833
    7. '```' → logprob: -4.75327730178833
    8. '_' → logprob: -4.75327730178833
    9. '=' → logprob: -5.25327730178833
    10. '\n' → logprob: -5.37827730178833

Token 14: 'row' (ID: 843)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.51264488697052
    2. '```' → logprob: -1.88764488697052
    3. ',' → logprob: -2.0126447677612305
    4. '_' → logprob: -2.2626447677612305
    5. '*' → logprob: -2.2626447677612305
    6. '`' → logprob: -2.8876447677612305
    7. ')' → logprob: -3.0126447677612305
    8. '\' → logprob: -3.1376447677612305
    9. '\n' → logprob: -3.3876447677612305
    10. ' =' → logprob: -3.6376447677612305

Token 15: '_start' (ID: 10949)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.030744656920433044
    2. '_' → logprob: -3.6557445526123047
    3. '_s' → logprob: -6.280744552612305
    4. '[' → logprob: -6.405744552612305
    5. '.' → logprob: -8.405744552612305
    6. ' =' → logprob: -8.780744552612305
    7. '[:]' → logprob: -9.030744552612305
    8. ' ' → logprob: -9.155744552612305
    9. ' s' → logprob: -9.405744552612305
    10. '[]' → logprob: -9.655744552612305

Token 16: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.09045077115297318
    2. '_' → logprob: -2.7154507637023926
    3. '=' → logprob: -4.465450763702393
    4. '[' → logprob: -5.590450763702393
    5. ' =' → logprob: -6.340450763702393
    6. '_s' → logprob: -6.465450763702393
    7. '[]' → logprob: -7.340450763702393
    8. ',' → logprob: -7.715450763702393
    9. '_idx' → logprob: -8.96545124053955
    10. '_indices' → logprob: -9.46545124053955

Token 17: ' column' (ID: 6000)
  Prédit: ' row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.3178909122943878
    2. 'row' → logprob: -1.9428908824920654
    3. ' col' → logprob: -2.3178908824920654
    4. 'col' → logprob: -3.6928908824920654
    5. ' column' → logprob: -6.0678911209106445
    6. 'column' → logprob: -6.4428911209106445
    7. ' =' → logprob: -7.0678911209106445
    8. '=' → logprob: -8.567891120910645
    9. ' ' → logprob: -8.942891120910645
    10. '=row' → logprob: -9.067891120910645

Token 18: '_start' (ID: 10949)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3372024893760681
    2. '_start' → logprob: -2.337202548980713
    3. '_s' → logprob: -2.462202548980713
    4. '_' → logprob: -2.712202548980713
    5. ' =' → logprob: -3.712202548980713
    6. '=' → logprob: -4.462202548980713
    7. ' _' → logprob: -7.712202548980713
    8. '_indices' → logprob: -8.087202072143555
    9. '_sizes' → logprob: -8.837202072143555
    10. ',' → logprob: -8.962202072143555

Token 19: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1822020560503006
    2. '=' → logprob: -1.8072021007537842
    3. ',' → logprob: -6.057201862335205
    4. ')' → logprob: -10.182202339172363
    5. ' ' → logprob: -10.307202339172363
    6. '<|end|>' → logprob: -11.557202339172363
    7. '_' → logprob: -11.682202339172363
    8. ' ,' → logprob: -11.807202339172363
    9. ' =
' → logprob: -11.807202339172363
    10. ' =
' → logprob: -13.182202339172363

Token 20: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.07497072219848633
    2. 'row' → logprob: -2.9499707221984863
    3. ' =' → logprob: -4.199970722198486
    4. ' ' → logprob: -6.449970722198486
    5. ' height' → logprob: -7.824970722198486
    6. ' direction' → logprob: -8.074970245361328
    7. ' rows' → logprob: -8.199970245361328
    8. '=' → logprob: -8.512470245361328
    9. ' grid' → logprob: -9.199970245361328
    10. 'n' → logprob: -9.199970245361328

Token 21: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.24775397777557373
    2. '_' → logprob: -2.6227540969848633
    3. '_start' → logprob: -3.4977540969848633
    4. '_stop' → logprob: -3.8727540969848633
    5. '_finish' → logprob: -4.247754096984863
    6. '_move' → logprob: -4.622754096984863
    7. '_size' → logprob: -4.622754096984863
    8. '_step' → logprob: -4.622754096984863
    9. '_offset' → logprob: -4.747754096984863
    10. '_count' → logprob: -4.872754096984863

Token 22: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5820806622505188
    2. ' =' → logprob: -1.207080602645874
    3. '=' → logprob: -1.957080602645874
    4. ' ,' → logprob: -7.707080841064453
    5. ')' → logprob: -8.332080841064453
    6. '_' → logprob: -9.332080841064453
    7. '```' → logprob: -10.332080841064453
    8. ' ' → logprob: -10.582080841064453
    9. '<|end|>' → logprob: -10.582080841064453
    10. '_,' → logprob: -11.082080841064453

Token 23: ' column' (ID: 6000)
  Prédit: ' column'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' column' → logprob: -0.008559374138712883
    2. 'column' → logprob: -4.883559226989746
    3. ' ' → logprob: -7.383559226989746
    4. ',column' → logprob: -9.008559226989746
    5. '	column' → logprob: -9.258559226989746
    6. ' col' → logprob: -9.883559226989746
    7. ' space' → logprob: -11.133559226989746
    8. ' ' → logprob: -11.883559226989746
    9. 'col' → logprob: -11.883559226989746
    10. ' =' → logprob: -12.008559226989746

Token 24: '_end' (ID: 13707)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03866364061832428
    2. '_start' → logprob: -4.288663864135742
    3. '_end' → logprob: -4.538663864135742
    4. 's' → logprob: -6.163663864135742
    5. '_=' → logprob: -6.163663864135742
    6. '_size' → logprob: -6.538663864135742
    7. '_finish' → logprob: -6.913663864135742
    8. '_stop' → logprob: -7.163663864135742
    9. '<|end|>' → logprob: -7.288663864135742
    10. '_s' → logprob: -7.413663864135742

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20240549743175507
    2. '=' → logprob: -1.7024054527282715
    3. ',' → logprob: -7.0774054527282715
    4. ' ' → logprob: -9.82740592956543
    5. ' =
' → logprob: -10.32740592956543
    6. '<|end|>' → logprob: -10.70240592956543
    7. ')' → logprob: -11.07740592956543
    8. ' ,' → logprob: -11.07740592956543
    9. '=
' → logprob: -12.82740592956543
    10. '=

' → logprob: -13.57740592956543

Token 26: ' map' (ID: 4014)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5762376189231873
    2. ' ' → logprob: -0.8262376189231873
    3. ' map' → logprob: -9.201237678527832
    4. ' row' → logprob: -10.201237678527832
    5. ' (' → logprob: -10.326237678527832
    6. 'map' → logprob: -10.576237678527832
    7. ' None' → logprob: -10.576237678527832
    8. 'row' → logprob: -11.076237678527832
    9. '1' → logprob: -11.451237678527832
    10. '(' → logprob: -11.451237678527832

Token 27: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.02582491561770439
    2. '(' → logprob: -3.775825023651123
    3. 'int' → logprob: -7.150825023651123
    4. '(input' → logprob: -7.400825023651123
    5. '(lambda' → logprob: -7.900825023651123
    6. '[int' → logprob: -8.525824546813965
    7. '(range' → logprob: -9.275824546813965
    8. '(str' → logprob: -9.275824546813965
    9. '<int' → logprob: -9.400824546813965
    10. '<|end|>' → logprob: -9.775824546813965

Token 28: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.021603979170322418
    2. '(' → logprob: -4.396604061126709
    3. ')' → logprob: -5.271604061126709
    4. 'input' → logprob: -5.646604061126709
    5. '()' → logprob: -9.14660358428955
    6. '[input' → logprob: -10.02160358428955
    7. ' input' → logprob: -10.39660358428955
    8. '())' → logprob: -10.89660358428955
    9. '(user' → logprob: -11.02160358428955
    10. '(
' → logprob: -11.14660358428955

Token 29: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1602610945701599
    2. ' input' → logprob: -1.9102611541748047
    3. ')' → logprob: -10.285261154174805
    4. ' )' → logprob: -13.910261154174805
    5. '	input' → logprob: -15.035261154174805
    6. ',input' → logprob: -15.160261154174805
    7. ' ' → logprob: -15.285261154174805
    8. '=input' → logprob: -15.410261154174805
    9. '(input' → logprob: -15.660261154174805
    10. '```' → logprob: -15.910261154174805

Token 30: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.03728631138801575
    2. '()' → logprob: -3.4122862815856934
    3. '())' → logprob: -5.662286281585693
    4. '(' → logprob: -9.537286758422852
    5. ')' → logprob: -10.537286758422852
    6. '());' → logprob: -10.662286758422852
    7. '()))' → logprob: -12.162286758422852
    8. '()[' → logprob: -12.287286758422852
    9. '()
' → logprob: -12.537286758422852
    10. '()`' → logprob: -12.787286758422852

Token 31: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005549400229938328
    2. 'strip' → logprob: -7.500555038452148
    3. 'rstrip' → logprob: -13.875555038452148
    4. ' split' → logprob: -14.375555038452148
    5. '(split' → logprob: -15.250555038452148
    6. 'spl' → logprob: -16.62555503845215
    7. '```' → logprob: -17.25055503845215
    8. ')' → logprob: -17.50055503845215
    9. 'read' → logprob: -17.87555503845215
    10. 'startswith' → logprob: -18.87555503845215

Token 32: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01779060810804367
    2. '))' → logprob: -4.642790794372559
    3. '())' → logprob: -5.267790794372559
    4. '(' → logprob: -6.767790794372559
    5. '('' → logprob: -7.392790794372559
    6. '`)' → logprob: -8.142790794372559
    7. '')' → logprob: -8.267790794372559
    8. '()' → logprob: -8.642790794372559
    9. '(','' → logprob: -9.642790794372559
    10. '>)' → logprob: -10.267790794372559

Token 33: 'maximum' (ID: 78601)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.3033591508865356
    2. ')' → logprob: -2.428359031677246
    3. 'def' → logprob: -2.428359031677246
    4. 'n' → logprob: -2.803359031677246
    5. '```' → logprob: -2.928359031677246
    6. '#' → logprob: -3.053359031677246
    7. 'row' → logprob: -3.178359031677246
    8. 'if' → logprob: -3.178359031677246
    9. '\' → logprob: -3.303359031677246
    10. 'a' → logprob: -3.303359031677246

Token 34: '_comb' (ID: 105956)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02329159528017044
    2. '_value' → logprob: -5.39829158782959
    3. '_space' → logprob: -5.39829158782959
    4. '_depth' → logprob: -5.77329158782959
    5. '_length' → logprob: -6.14829158782959
    6. '_height' → logprob: -6.77329158782959
    7. '_distance' → logprob: -6.77329158782959
    8. '_sum' → logprob: -6.89829158782959
    9. '_steps' → logprob: -6.89829158782959
    10. '_size' → logprob: -7.39829158782959

Token 35: 'ination' (ID: 3273)
  Prédit: 'ination'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ination' → logprob: -0.694629967212677
    2. '_' → logprob: -0.819629967212677
    3. 'ation' → logprob: -2.9446299076080322
    4. '_at' → logprob: -6.319630146026611
    5. 'inations' → logprob: -6.569630146026611
    6. '_in' → logprob: -6.569630146026611
    7. 'ations' → logprob: -7.694630146026611
    8. 'INATION' → logprob: -8.194629669189453
    9. '```' → logprob: -8.569629669189453
    10. 'at' → logprob: -8.694629669189453

Token 36: '_index' (ID: 7748)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9117788672447205
    2. '_' → logprob: -1.0367789268493652
    3. ' =' → logprob: -1.7867789268493652
    4. '(' → logprob: -3.2867789268493652
    5. '=' → logprob: -3.4117789268493652
    6. '_count' → logprob: -5.786778926849365
    7. '_s' → logprob: -6.536778926849365
    8. '_counts' → logprob: -8.786778450012207
    9. '_size' → logprob: -9.036778450012207
    10. '_space' → logprob: -9.161778450012207

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1743318736553192
    2. ' ' → logprob: -2.4243319034576416
    3. '_' → logprob: -3.1743319034576416
    4. '[' → logprob: -4.0493316650390625
    5. '=' → logprob: -4.9243316650390625
    6. ' _' → logprob: -6.2993316650390625
    7. '  ' → logprob: -7.5493316650390625
    8. ' +=' → logprob: -7.7993316650390625
    9. '<|end|>' → logprob: -7.9243316650390625
    10. 's' → logprob: -8.299331665039062

Token 38: ' (' (ID: 350)
  Prédit: ' row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.2929905354976654
    2. 'row' → logprob: -2.0429904460906982
    3. ' max' → logprob: -2.9179904460906982
    4. ' ' → logprob: -3.0429904460906982
    5. 'max' → logprob: -5.292990684509277
    6. '(row' → logprob: -5.292990684509277
    7. ' column' → logprob: -5.542990684509277
    8. ' (' → logprob: -5.792990684509277
    9. '10' → logprob: -6.792990684509277
    10. '100' → logprob: -6.917990684509277

Token 39: '2' (ID: 17)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.6574689745903015
    2. ' row' → logprob: -0.7824689745903015
    3. ' ' → logprob: -5.032468795776367
    4. ' column' → logprob: -5.157468795776367
    5. ' max' → logprob: -5.157468795776367
    6. 'column' → logprob: -6.032468795776367
    7. 'max' → logprob: -6.407468795776367
    8. ')' → logprob: -7.782468795776367
    9. '(row' → logprob: -7.782468795776367
    10. ' min' → logprob: -8.032468795776367

Token 40: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.28180068731307983
    2. '*' → logprob: -1.4068007469177246
    3. '**' → logprob: -7.906800746917725
    4. '*(' → logprob: -9.031800270080566
    5. ' **' → logprob: -9.281800270080566
    6. ' ' → logprob: -10.156800270080566
    7. '0' → logprob: -11.406800270080566
    8. ')' → logprob: -11.906800270080566
    9. ' +' → logprob: -13.156800270080566
    10. ',' → logprob: -13.656800270080566

Token 41: ' ' (ID: 220)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -1.123052716255188
    2. 'max' → logprob: -1.748052716255188
    3. ' max' → logprob: -1.998052716255188
    4. ' (' → logprob: -1.998052716255188
    5. '10' → logprob: -2.1230525970458984
    6. '(' → logprob: -3.3730525970458984
    7. ' ' → logprob: -3.4980525970458984
    8. '((' → logprob: -4.873052597045898
    9. 'row' → logprob: -5.123052597045898
    10. '(row' → logprob: -5.248052597045898

Token 42: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.3820602297782898
    2. 'max' → logprob: -1.8820602893829346
    3. '(max' → logprob: -2.2570602893829346
    4. '(' → logprob: -3.7570602893829346
    5. 'row' → logprob: -4.2570600509643555
    6. '((' → logprob: -5.5070600509643555
    7. '(row' → logprob: -5.7570600509643555
    8. 'maximum' → logprob: -6.1320600509643555
    9. 'abs' → logprob: -6.2570600509643555
    10. ' (' → logprob: -6.2570600509643555

Token 43: ' **' (ID: 6240)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.09884455800056458
    2. '**' → logprob: -2.973844528198242
    3. '8' → logprob: -3.848844528198242
    4. '9' → logprob: -4.473844528198242
    5. '5' → logprob: -5.223844528198242
    6. '7' → logprob: -5.598844528198242
    7. '18' → logprob: -6.848844528198242
    8. ' **' → logprob: -9.598844528198242
    9. '12' → logprob: -11.098844528198242
    10. '```' → logprob: -11.098844528198242

Token 44: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '6' → logprob: -0.039395201951265335
    2. '5' → logprob: -3.2893950939178467
    3. '7' → logprob: -6.789395332336426
    4. '9' → logprob: -8.789395332336426
    5. '8' → logprob: -10.664395332336426
    6. '```' → logprob: -11.039395332336426
    7. '18' → logprob: -11.414395332336426
    8. '12' → logprob: -11.664395332336426
    9. '3' → logprob: -12.414395332336426
    10. '10' → logprob: -13.226895332336426

Token 45: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.08988106995820999
    2. '5' → logprob: -2.464881181716919
    3. '7' → logprob: -7.08988094329834
    4. '9' → logprob: -9.83988094329834
    5. '8' → logprob: -11.33988094329834
    6. '18' → logprob: -11.33988094329834
    7. '```' → logprob: -11.71488094329834
    8. '3' → logprob: -12.27738094329834
    9. '12' → logprob: -12.27738094329834
    10. '``' → logprob: -12.77738094329834

Token 46: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.042585279792547226
    2. ' +' → logprob: -4.042585372924805
    3. '+' → logprob: -4.167585372924805
    4. ' )' → logprob: -4.792585372924805
    5. ')+' → logprob: -8.167585372924805
    6. ' ' → logprob: -10.667585372924805
    7. '+)' → logprob: -11.167585372924805
    8. ')
' → logprob: -12.042585372924805
    9. ')

' → logprob: -12.042585372924805
    10. ',' → logprob: -12.417585372924805

Token 47: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5760865807533264
    2. ' +' → logprob: -0.8260865807533264
    3. ' ' → logprob: -10.20108699798584
    4. ' +
' → logprob: -10.20108699798584
    5. ')' → logprob: -10.32608699798584
    6. '<|end|>' → logprob: -11.32608699798584
    7. '+
' → logprob: -11.95108699798584
    8. '
' → logprob: -12.57608699798584
    9. ' plus' → logprob: -12.70108699798584
    10. ' )' → logprob: -12.95108699798584

Token 48: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6482974290847778
    2. '10' → logprob: -1.3982974290847778
    3. '5' → logprob: -1.6482974290847778
    4. '100' → logprob: -4.273297309875488
    5. '2' → logprob: -4.398297309875488
    6. ' ' → logprob: -5.398297309875488
    7. '50' → logprob: -6.023297309875488
    8. '3' → logprob: -6.523297309875488
    9. '20' → logprob: -6.773297309875488
    10. '500' → logprob: -6.898297309875488

Token 49: '2' (ID: 17)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.42355167865753174
    2. '1' → logprob: -1.6735516786575317
    3. '5' → logprob: -2.423551559448242
    4. '100' → logprob: -3.173551559448242
    5. '50' → logprob: -4.548551559448242
    6. '2' → logprob: -4.548551559448242
    7. '7' → logprob: -6.173551559448242
    8. '20' → logprob: -6.548551559448242
    9. '3' → logprob: -7.173551559448242
    10. '500' → logprob: -7.173551559448242

Token 50: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02775498479604721
    2. '
' → logprob: -4.402754783630371
    3. '

' → logprob: -4.652754783630371
    4. ' 
' → logprob: -5.902754783630371
    5. ' 

' → logprob: -6.902754783630371
    6. '' → logprob: -7.402754783630371
    7. '<|end|>' → logprob: -7.902754783630371
    8. '\n' → logprob: -8.527754783630371
    9. '```' → logprob: -8.777754783630371
    10. ' ' → logprob: -9.402754783630371

Token 51: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0622672475874424
    2. '
' → logprob: -3.687267303466797
    3. '

' → logprob: -4.437267303466797
    4. '\n' → logprob: -5.062267303466797
    5. ' 
' → logprob: -5.187267303466797
    6. ' 

' → logprob: -5.437267303466797
    7. '#' → logprob: -6.187267303466797
    8. '' → logprob: -6.437267303466797
    9. '  
' → logprob: -7.812267303466797
    10. '<|end|>' → logprob: -8.062267303466797

Token 52: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.005210870876908302
    2. ' sys' → logprob: -5.880210876464844
    3. 'math' → logprob: -6.255210876464844
    4. ' itertools' → logprob: -8.005210876464844
    5. ' collections' → logprob: -9.755210876464844
    6. ' ' → logprob: -10.005210876464844
    7. 'sys' → logprob: -11.005210876464844
    8. ' functools' → logprob: -11.130210876464844
    9. 'collections' → logprob: -11.755210876464844
    10. ' sym' → logprob: -12.255210876464844

Token 53: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.4290541112422943
    2. 'import' → logprob: -1.0540541410446167
    3. '	import' → logprob: -8.429054260253906
    4. '_import' → logprob: -10.054054260253906
    5. '```' → logprob: -10.929054260253906
    6. '<|end|>' → logprob: -11.179054260253906
    7. 'from' → logprob: -11.304054260253906
    8. '.factor' → logprob: -11.679054260253906
    9. ' importar' → logprob: -12.304054260253906
    10. '#import' → logprob: -12.429054260253906

Token 54: ' factorial' (ID: 111204)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.44150295853614807
    2. 'factor' → logprob: -1.5665029287338257
    3. ' comb' → logprob: -2.1915030479431152
    4. 'ceil' → logprob: -4.441503047943115
    5. 'sqrt' → logprob: -4.691503047943115
    6. ' factorial' → logprob: -5.066503047943115
    7. 'pow' → logprob: -5.316503047943115
    8. 'com' → logprob: -6.066503047943115
    9. 'log' → logprob: -7.066503047943115
    10. 'prod' → logprob: -8.441502571105957

Token 55: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8676311373710632
    2. '
' → logprob: -2.367631196975708
    3. 'import' → logprob: -2.742631196975708
    4. 'n' → logprob: -2.992631196975708
    5. 'from' → logprob: -2.992631196975708
    6. '

' → logprob: -3.117631196975708
    7. '_' → logprob: -3.117631196975708
    8. '
' → logprob: -3.492631196975708
    9. '\n' → logprob: -3.492631196975708
    10. ')' → logprob: -3.742631196975708

Token 56: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2375438213348389
    2. '_' → logprob: -1.9875438213348389
    3. ')' → logprob: -2.112543821334839
    4. '#' → logprob: -2.487543821334839
    5. 'n' → logprob: -2.612543821334839
    6. '
' → logprob: -2.737543821334839
    7. '\' → logprob: -2.987543821334839
    8. '(' → logprob: -3.362543821334839
    9. 'import' → logprob: -3.487543821334839
    10. '\n' → logprob: -4.362544059753418

Token 57: ' Pre' (ID: 4659)
  Prédit: ' Combination'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Combination' → logprob: -0.06595015525817871
    2. ' Factor' → logprob: -3.1909501552581787
    3. ' Com' → logprob: -4.315950393676758
    4. 'Combination' → logprob: -5.065950393676758
    5. ' Modular' → logprob: -6.815950393676758
    6. ' Mod' → logprob: -7.440950393676758
    7. ' ' → logprob: -7.815950393676758
    8. ' Pascal' → logprob: -8.440950393676758
    9. 'Factor' → logprob: -8.690950393676758
    10. ' Comb' → logprob: -9.065950393676758

Token 58: 'computed' (ID: 157929)
  Prédit: 'computed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'computed' → logprob: -0.3934911787509918
    2. 'compute' → logprob: -1.7684911489486694
    3. 'com' → logprob: -2.768491268157959
    4. 'computer' → logprob: -3.018491268157959
    5. 'calculator' → logprob: -3.768491268157959
    6. 'processor' → logprob: -4.518491268157959
    7. 'factor' → logprob: -5.893491268157959
    8. 'comput' → logprob: -6.268491268157959
    9. 'fix' → logprob: -6.393491268157959
    10. 'f' → logprob: -6.643491268157959

Token 59: 'Factor' (ID: 23681)
  Prédit: 'Com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Com' → logprob: -0.05953553318977356
    2. 'Factor' → logprob: -3.309535503387451
    3. 'Combination' → logprob: -3.934535503387451
    4. 'Bin' → logprob: -7.684535503387451
    5. ' ' → logprob: -8.18453598022461
    6. 'com' → logprob: -8.30953598022461
    7. 'n' → logprob: -9.05953598022461
    8. '(' → logprob: -9.55953598022461
    9. 'Comb' → logprob: -9.68453598022461
    10. ':' → logprob: -9.93453598022461

Token 60: 'ials' (ID: 16596)
  Prédit: 'ials'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ials' → logprob: -0.07898419350385666
    2. 'ial' → logprob: -2.578984260559082
    3. 'ialize' → logprob: -10.328984260559082
    4. 'ization' → logprob: -10.703984260559082
    5. 'izations' → logprob: -11.578984260559082
    6. 'izer' → logprob: -11.578984260559082
    7. 'ized' → logprob: -12.078984260559082
    8. 'izers' → logprob: -12.453984260559082
    9. '```' → logprob: -12.828984260559082
    10. 'ize' → logprob: -13.078984260559082

Token 61: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015812820056453347
    2. '(' → logprob: -7.251581192016602
    3. '():' → logprob: -7.251581192016602
    4. ' :' → logprob: -9.126581192016602
    5. ':**' → logprob: -11.251581192016602
    6. '(object' → logprob: -11.251581192016602
    7. '(:' → logprob: -11.751581192016602
    8. '<|end|>' → logprob: -12.001581192016602
    9. '(":' → logprob: -12.751581192016602
    10. '):' → logprob: -12.876581192016602

Token 62: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 63: ' """
' (ID: 7037)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.3382299244403839
    2. 'def' → logprob: -1.8382298946380615
    3. '   ' → logprob: -2.0882298946380615
    4. '    
' → logprob: -5.713230133056641
    5. '	def' → logprob: -8.21323013305664
    6. ' 
' → logprob: -8.83823013305664
    7. '
' → logprob: -9.08823013305664
    8. ' ' → logprob: -10.46323013305664
    9. '    ' → logprob: -10.58823013305664
    10. ':def' → logprob: -11.33823013305664

Token 64: '   ' (ID: 271)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.2942035496234894
    2. 'def' → logprob: -1.419203519821167
    3. '   ' → logprob: -4.419203758239746
    4. '    ' → logprob: -8.169203758239746
    5. ' """' → logprob: -8.669203758239746
    6. '"""' → logprob: -8.669203758239746
    7. ' """
' → logprob: -10.169203758239746
    8. 'Initialize' → logprob: -10.669203758239746
    9. ' factorial' → logprob: -10.669203758239746
    10. 'factor' → logprob: -11.169203758239746

Token 65: ' Class' (ID: 5646)
  Prédit: 'Pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Pre' → logprob: -0.5216420292854309
    2. ' Pre' → logprob: -1.5216419696807861
    3. '   ' → logprob: -3.896641969680786
    4. 'Calcul' → logprob: -3.896641969680786
    5. ' Helper' → logprob: -3.896641969680786
    6. '"""' → logprob: -4.271642208099365
    7. ' pre' → logprob: -4.521642208099365
    8. 'Compute' → logprob: -4.646642208099365
    9. 'Helper' → logprob: -4.771642208099365
    10. 'Calculate' → logprob: -4.896642208099365

Token 66: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.5826742649078369
    2. ' for' → logprob: -0.8326742649078369
    3. ' that' → logprob: -5.207674026489258
    4. ':' → logprob: -7.957674026489258
    5. 'for' → logprob: -7.957674026489258
    6. 'to' → logprob: -8.582674026489258
    7. ' providing' → logprob: -9.582674026489258
    8. '   ' → logprob: -9.707674026489258
    9. ' provides' → logprob: -9.707674026489258
    10. ' with' → logprob: -10.707674026489258

Token 67: ' efficiently' (ID: 34229)
  Prédit: ' pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pre' → logprob: -0.2400229126214981
    2. 'pre' → logprob: -2.240022897720337
    3. ' handle' → logprob: -2.990022897720337
    4. ' efficiently' → logprob: -3.990022897720337
    5. ' compute' → logprob: -4.240023136138916
    6. ' prec' → logprob: -4.740023136138916
    7. 'compute' → logprob: -5.365023136138916
    8. ' store' → logprob: -5.615023136138916
    9. 'handle' → logprob: -5.740023136138916
    10. ' provide' → logprob: -7.490023136138916

Token 68: ' compute' (ID: 23864)
  Prédit: ' compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.6220703125
    2. ' pre' → logprob: -0.9970703125
    3. ' handle' → logprob: -2.4970703125
    4. 'compute' → logprob: -4.8720703125
    5. 'pre' → logprob: -6.3720703125
    6. ' calculate' → logprob: -6.8720703125
    7. ' manage' → logprob: -7.6220703125
    8. ' store' → logprob: -7.9970703125
    9. ' provide' → logprob: -8.3720703125
    10. 'handle' → logprob: -8.7470703125

Token 69: ' combinations' (ID: 43835)
  Prédit: ' combinations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' combinations' → logprob: -0.8966907858848572
    2. ' factorial' → logprob: -1.271690845489502
    3. ' n' → logprob: -2.146690845489502
    4. ' combination' → logprob: -2.896690845489502
    5. 'n' → logprob: -2.896690845489502
    6. ' and' → logprob: -3.146690845489502
    7. ' bin' → logprob: -3.771690845489502
    8. ' modular' → logprob: -5.271690845489502
    9. 'bin' → logprob: -6.146690845489502
    10. 'and' → logprob: -6.146690845489502

Token 70: ' and' (ID: 326)
  Prédit: ' using'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' using' → logprob: -0.5062090158462524
    2. ' and' → logprob: -2.256208896636963
    3. ',' → logprob: -2.631208896636963
    4. '(' → logprob: -3.006208896636963
    5. ' (' → logprob: -3.256208896636963
    6. ':' → logprob: -3.631208896636963
    7. '(n' → logprob: -3.881208896636963
    8. '```' → logprob: -4.006208896636963
    9. 'using' → logprob: -4.506208896636963
    10. ' with' → logprob: -4.631208896636963

Token 71: ' permutations' (ID: 174595)
  Prédit: ' permutations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -0.051990874111652374
    2. 'per' → logprob: -3.5519909858703613
    3. ' factorial' → logprob: -4.176990985870361
    4. 'factor' → logprob: -6.301990985870361
    5. ' inverse' → logprob: -6.551990985870361
    6. 'inverse' → logprob: -6.676990985870361
    7. 'perm' → logprob: -7.051990985870361
    8. ' perm' → logprob: -8.051990509033203
    9. ' pre' → logprob: -8.176990509033203
    10. ' modular' → logprob: -8.551990509033203

Token 72: ' modulo' (ID: 112372)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8486613631248474
    2. ' using' → logprob: -0.8486613631248474
    3. ' for' → logprob: -3.848661422729492
    4. ':' → logprob: -3.848661422729492
    5. ' tokens' → logprob: -3.848661422729492
    6. ',' → logprob: -4.223661422729492
    7. ' based' → logprob: -4.223661422729492
    8. ' by' → logprob: -4.348661422729492
    9. ' with' → logprob: -4.598661422729492
    10. ' in' → logprob: -5.098661422729492

Token 73: ' a' (ID: 261)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.47462818026542664
    2. ' MOD' → logprob: -0.974628210067749
    3. ' a' → logprob: -8.724628448486328
    4. ' ' → logprob: -8.849628448486328
    5. '10' → logprob: -9.474628448486328
    6. '_MOD' → logprob: -9.724628448486328
    7. '```' → logprob: -9.974628448486328
    8. ' the' → logprob: -11.349628448486328
    9. '100' → logprob: -11.849628448486328
    10. '.MOD' → logprob: -11.849628448486328

Token 74: ' prime' (ID: 9197)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.16031968593597412
    2. ' MOD' → logprob: -1.9103196859359741
    3. '_MOD' → logprob: -10.785319328308105
    4. ' ' → logprob: -11.285319328308105
    5. ' large' → logprob: -11.285319328308105
    6. 'space' → logprob: -11.410319328308105
    7. 'mod' → logprob: -11.535319328308105
    8. ' space' → logprob: -12.035319328308105
    9. ' given' → logprob: -12.535319328308105
    10. ' modulus' → logprob: -12.535319328308105

Token 75: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6734212040901184
    2. ' ' → logprob: -1.5484211444854736
    3. '```' → logprob: -1.9234211444854736
    4. ' modulus' → logprob: -3.4234211444854736
    5. ',' → logprob: -3.7984211444854736
    6. ':' → logprob: -4.298421382904053
    7. ' number' → logprob: -4.298421382904053
    8. ' and' → logprob: -5.298421382904053
    9. '100' → logprob: -5.298421382904053
    10. '<|end|>' → logprob: -5.548421382904053

Token 76: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.815811276435852
    2. '   ' → logprob: -0.940811276435852
    3. '```' → logprob: -2.3158111572265625
    4. ' """' → logprob: -2.9408111572265625
    5. ' ' → logprob: -4.8158111572265625
    6. '\n' → logprob: -5.5658111572265625
    7. '  ' → logprob: -7.3158111572265625
    8. '<|end|>' → logprob: -7.4408111572265625
    9. ' """
' → logprob: -7.8158111572265625
    10. '    
' → logprob: -8.065811157226562

Token 77: ' Factor' (ID: 63743)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.07202965021133423
    2. '   ' → logprob: -2.6970295906066895
    3. '```' → logprob: -6.6970295906066895
    4. ' """' → logprob: -7.6970295906066895
    5. '"""
' → logprob: -8.197030067443848
    6. '""' → logprob: -10.197030067443848
    7. '  ' → logprob: -10.947030067443848
    8. '"""

' → logprob: -11.072030067443848
    9. '    ' → logprob: -11.322030067443848
    10. '\n' → logprob: -11.572030067443848

Token 78: 'ials' (ID: 16596)
  Prédit: 'ial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.7155631184577942
    2. 'ials' → logprob: -0.7155631184577942
    3. 'ialize' → logprob: -4.4655632972717285
    4. '   ' → logprob: -5.2155632972717285
    5. 'MOD' → logprob: -6.3405632972717285
    6. 'mod' → logprob: -7.3405632972717285
    7. '```' → logprob: -7.4655632972717285
    8. 's' → logprob: -7.7155632972717285
    9. 'Modulo' → logprob: -8.21556282043457
    10. ' modulo' → logprob: -8.59056282043457

Token 79: ' are' (ID: 553)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2041875720024109
    2. ',' → logprob: -2.4541876316070557
    3. ' =' → logprob: -3.4541876316070557
    4. 'and' → logprob: -3.8291876316070557
    5. ' are' → logprob: -4.079187393188477
    6. '   ' → logprob: -4.579187393188477
    7. '=' → logprob: -4.829187393188477
    8. ' ' → logprob: -6.079187393188477
    9. ' for' → logprob: -6.829187393188477
    10. ' stored' → logprob: -6.954187393188477

Token 80: ' pre' (ID: 876)
  Prédit: ' pre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pre' → logprob: -0.016007384285330772
    2. 'pre' → logprob: -4.391007423400879
    3. ' computed' → logprob: -6.266007423400879
    4. ' stored' → logprob: -7.141007423400879
    5. 'computed' → logprob: -8.141007423400879
    6. ' prec' → logprob: -8.266007423400879
    7. '_pre' → logprob: -9.141007423400879
    8. 'stored' → logprob: -9.516007423400879
    9. ' calculated' → logprob: -10.516007423400879
    10. '	pre' → logprob: -11.016007423400879

Token 81: 'computed' (ID: 157929)
  Prédit: 'computed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'computed' → logprob: -0.008712430484592915
    2. ' computed' → logprob: -4.758712291717529
    3. '-com' → logprob: -10.008712768554688
    4. '   ' → logprob: -10.758712768554688
    5. '_' → logprob: -11.383712768554688
    6. ' -' → logprob: -11.758712768554688
    7. '_com' → logprob: -13.008712768554688
    8. ' ' → logprob: -13.258712768554688
    9. ' calculated' → logprob: -13.633712768554688
    10. 'cal' → logprob: -13.758712768554688

Token 82: ' and' (ID: 326)
  Prédit: ' up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' up' → logprob: -0.032245878130197525
    2. ' for' → logprob: -3.9072458744049072
    3. ' and' → logprob: -5.032246112823486
    4. ' ' → logprob: -7.032246112823486
    5. '   ' → logprob: -7.032246112823486
    6. ' to' → logprob: -7.157246112823486
    7. ')' → logprob: -7.782246112823486
    8. ',' → logprob: -7.907246112823486
    9. '.' → logprob: -8.032245635986328
    10. ' in' → logprob: -8.282245635986328

Token 83: ' stored' (ID: 16240)
  Prédit: ' stored'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stored' → logprob: -0.09680047631263733
    2. 'stored' → logprob: -2.5968005657196045
    3. ' cached' → logprob: -4.596800327301025
    4. ' inverse' → logprob: -5.971800327301025
    5. 'inverse' → logprob: -5.971800327301025
    6. ' their' → logprob: -6.721800327301025
    7. 'cached' → logprob: -7.596800327301025
    8. ' invers' → logprob: -8.346800804138184
    9. 'inv' → logprob: -8.846800804138184
    10. ' modular' → logprob: -9.221800804138184

Token 84: ' in' (ID: 306)
  Prédit: ' up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' up' → logprob: -0.4979674816131592
    2. ' for' → logprob: -1.3729674816131592
    3. ' in' → logprob: -2.997967481613159
    4. ' to' → logprob: -3.122967481613159
    5. '.' → logprob: -3.247967481613159
    6. ' ' → logprob: -6.497967720031738
    7. ',' → logprob: -7.122967720031738
    8. ' starting' → logprob: -7.247967720031738
    9. '   ' → logprob: -7.622967720031738
    10. ' upon' → logprob: -8.122967720031738

Token 85: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.36432287096977234
    2. ' an' → logprob: -1.7393229007720947
    3. 'a' → logprob: -2.1143229007720947
    4. 'an' → logprob: -5.864322662353516
    5. ' lists' → logprob: -6.739322662353516
    6. ' arrays' → logprob: -6.989322662353516
    7. ' advance' → logprob: -7.489322662353516
    8. ' the' → logprob: -7.489322662353516
    9. 'self' → logprob: -7.614322662353516
    10. 'list' → logprob: -7.739322662353516

Token 86: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.07399369776248932
    2. 'list' → logprob: -2.698993682861328
    3. '_list' → logprob: -5.698993682861328
    4. 'n' → logprob: -9.198993682861328
    5. ' ' → logprob: -9.323993682861328
    6. '[]' → logprob: -9.573993682861328
    7. '_' → logprob: -9.823993682861328
    8. '[' → logprob: -9.948993682861328
    9. 'lst' → logprob: -10.073993682861328
    10. 's' → logprob: -10.323993682861328

Token 87: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4938398003578186
    2. '.' → logprob: -1.2438397407531738
    3. ',' → logprob: -3.618839740753174
    4. 's' → logprob: -3.868839740753174
    5. ':' → logprob: -4.118839740753174
    6. ' for' → logprob: -4.368839740753174
    7. '   ' → logprob: -4.743839740753174
    8. ' to' → logprob: -4.868839740753174
    9. ']' → logprob: -5.993839740753174
    10. ' ' → logprob: -6.493839740753174

Token 88: ' fast' (ID: 5661)
  Prédit: ' memory'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' memory' → logprob: -0.09960699081420898
    2. ' advance' → logprob: -2.599606990814209
    3. ' order' → logprob: -4.724606990814209
    4. ' the' → logprob: -5.349606990814209
    5. ' a' → logprob: -6.224606990814209
    6. 'memory' → logprob: -6.349606990814209
    7. ' constant' → logprob: -7.099606990814209
    8. 'advance' → logprob: -7.224606990814209
    9. ' fast' → logprob: -7.849606990814209
    10. ' an' → logprob: -8.224607467651367

Token 89: ' access' (ID: 3158)
  Prédit: ' access'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' access' → logprob: -0.25932300090789795
    2. 'access' → logprob: -1.884323000907898
    3. ' retrieval' → logprob: -2.7593231201171875
    4. ' lookup' → logprob: -4.8843231201171875
    5. 'retr' → logprob: -6.1343231201171875
    6. 'lookup' → logprob: -6.3843231201171875
    7. ' computation' → logprob: -6.7593231201171875
    8. ' look' → logprob: -8.259323120117188
    9. 'look' → logprob: -9.634323120117188
    10. ' calculation' → logprob: -10.384323120117188

Token 90: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5657669901847839
    2. '.' → logprob: -1.0657670497894287
    3. '   ' → logprob: -2.8157670497894287
    4. '```' → logprob: -4.31576681137085
    5. ',' → logprob: -5.19076681137085
    6. '<|end|>' → logprob: -5.69076681137085
    7. '"""' → logprob: -6.56576681137085
    8. ' ' → logprob: -6.81576681137085
    9. ').' → logprob: -7.94076681137085
    10. '
' → logprob: -8.065767288208008

Token 91: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2697851359844208
    2. '"""' → logprob: -1.5197851657867432
    3. '```' → logprob: -4.144784927368164
    4. ' """' → logprob: -6.769784927368164
    5. ')' → logprob: -8.144784927368164
    6. '"""
' → logprob: -9.144784927368164
    7. '`' → logprob: -9.519784927368164
    8. '""' → logprob: -10.019784927368164
    9. '
' → logprob: -10.644784927368164
    10. '"' → logprob: -10.894784927368164

Token 92: ' """
' (ID: 7037)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.48348790407180786
    2. '   ' → logprob: -1.108487844467163
    3. '```' → logprob: -2.983487844467163
    4. ' """' → logprob: -6.358488082885742
    5. '"""
' (adapté à ' """
') → logprob: -8.358488082885742
    6. ')' → logprob: -8.483488082885742
    7. '`' → logprob: -8.858488082885742
    8. '""' → logprob: -9.233488082885742
    9. '
' → logprob: -9.483488082885742
    10. '"' → logprob: -9.858488082885742

Token 93: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3719015419483185
    2. '
' → logprob: -1.496901512145996
    3. '    
' → logprob: -2.496901512145996
    4. 'def' → logprob: -6.121901512145996
    5. '```' → logprob: -6.496901512145996
    6. '<|end|>' → logprob: -8.871901512145996
    7. '\n' → logprob: -8.996901512145996
    8. ' def' → logprob: -9.496901512145996
    9. '<|end|>' → logprob: -9.996901512145996
    10. ' 
' → logprob: -10.246901512145996

Token 94: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.7318852543830872
    2. 'def' (adapté à ' def') → logprob: -1.2318851947784424
    3. '   ' → logprob: -1.4818851947784424
    4. '    
' → logprob: -10.606884956359863
    5. '    ' → logprob: -11.106884956359863
    6. '	def' → logprob: -12.731884956359863
    7. '```' → logprob: -13.356884956359863
    8. '
' → logprob: -14.231884956359863
    9. ' ' → logprob: -14.481884956359863
    10. ' _' → logprob: -14.981884956359863

Token 95: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.042592018842697144
    2. '__' → logprob: -4.6675920486450195
    3. ' __' → logprob: -4.6675920486450195
    4. ' init' → logprob: -4.7925920486450195
    5. '_init' → logprob: -5.0425920486450195
    6. ' def' → logprob: -5.2925920486450195
    7. 'def' → logprob: -5.9175920486450195
    8. '_' → logprob: -8.91759204864502
    9. ' _' → logprob: -9.29259204864502
    10. 'n' → logprob: -9.54259204864502

Token 96: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0005607772618532181
    2. 'nit' → logprob: -7.500560760498047
    3. 'ini' → logprob: -12.750560760498047
    4. 'int' → logprob: -13.500560760498047
    5. 'inite' → logprob: -14.000560760498047
    6. 'ni' → logprob: -14.250560760498047
    7. 'in' → logprob: -14.500560760498047
    8. ' init' → logprob: -15.250560760498047
    9. 'new' → logprob: -15.250560760498047
    10. '__' → logprob: -15.625560760498047

Token 97: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.1319001317024231
    2. '(' → logprob: -2.3819000720977783
    3. ' (' → logprob: -3.7569000720977783
    4. '__(' → logprob: -5.006900310516357
    5. '_(' → logprob: -6.881900310516357
    6. '_' → logprob: -9.6318998336792
    7. ')(' → logprob: -11.2568998336792
    8. ',' → logprob: -11.7568998336792
    9. ' ' → logprob: -12.2568998336792
    10. '__' → logprob: -12.3818998336792

Token 98: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.455048449221067e-05
    2. ' self' → logprob: -9.875054359436035
    3. '(self' → logprob: -13.375054359436035
    4. '   ' → logprob: -14.500054359436035
    5. '
' → logprob: -14.625054359436035
    6. ',' → logprob: -15.875054359436035
    7. ' ' → logprob: -16.62505531311035
    8. ',self' → logprob: -16.75005531311035
    9. '	self' → logprob: -16.75005531311035
    10. ')' → logprob: -16.87505531311035

Token 99: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005264829844236374
    2. ' ,' → logprob: -5.255264759063721
    3. ',max' → logprob: -11.005265235900879
    4. ',n' → logprob: -12.130265235900879
    5. 'self' → logprob: -12.380265235900879
    6. ',self' → logprob: -13.380265235900879
    7. ',k' → logprob: -14.505265235900879
    8. ',m' → logprob: -14.630265235900879
    9. ',size' → logprob: -14.630265235900879
    10. ',int' → logprob: -14.880265235900879

Token 100: ' max' (ID: 2999)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1662977635860443
    2. 'n' → logprob: -2.666297674179077
    3. 'max' → logprob: -2.666297674179077
    4. ' self' → logprob: -5.541297912597656
    5. 'maximum' → logprob: -5.666297912597656
    6. 'limit' → logprob: -6.291297912597656
    7. ' n' → logprob: -6.416297912597656
    8. 'size' → logprob: -6.666297912597656
    9. 'mod' → logprob: -7.041297912597656
    10. ' max' → logprob: -7.166297912597656

Token 101: '_index' (ID: 7748)
  Prédit: '_comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_comb' → logprob: -0.2450576275587082
    2. '_' → logprob: -1.7450575828552246
    3. '_factor' → logprob: -3.4950575828552246
    4. 'imum' → logprob: -5.120057582855225
    5. '_size' → logprob: -5.870057582855225
    6. '_com' → logprob: -7.245057582855225
    7. '_length' → logprob: -7.245057582855225
    8. '_)' → logprob: -7.495057582855225
    9. '_len' → logprob: -8.120058059692383
    10. '_value' → logprob: -8.495058059692383

Token 102: '=' (ID: 28)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0010763956233859062
    2. ' ):' → logprob: -7.7510762214660645
    3. '):
' → logprob: -8.001076698303223
    4. ':' → logprob: -8.376076698303223
    5. '=' → logprob: -9.626076698303223
    6. ')' → logprob: -11.876076698303223
    7. '):
' → logprob: -12.876076698303223
    8. ',' → logprob: -13.876076698303223
    9. '   ' → logprob: -14.126076698303223
    10. ' ' → logprob: -14.501076698303223

Token 103: '10' (ID: 702)
  Prédit: 'maximum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'maximum' → logprob: -0.10022478550672531
    2. ' maximum' → logprob: -2.350224733352661
    3. 'max' → logprob: -10.975224494934082
    4. 'Maximum' → logprob: -15.100224494934082
    5. '.maximum' → logprob: -15.600224494934082
    6. ' ' → logprob: -15.600224494934082
    7. '2' → logprob: -15.850224494934082
    8. '100' → logprob: -16.2252254486084
    9. ')' → logprob: -16.8502254486084
    10. '10' → logprob: -17.2252254486084

Token 104: '**' (ID: 410)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.06312891840934753
    2. '**' → logprob: -3.31312894821167
    3. '7' → logprob: -3.81312894821167
    4. '+' → logprob: -7.43812894821167
    5. '000' → logprob: -7.68812894821167
    6. '9' → logprob: -7.81312894821167
    7. '^' → logprob: -8.688128471374512
    8. '```' → logprob: -8.688128471374512
    9. ')' → logprob: -9.063128471374512
    10. ' ' → logprob: -9.188128471374512

Token 105: '5' (ID: 20)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '6' → logprob: -0.07055804878473282
    2. '7' → logprob: -2.6955580711364746
    3. '9' → logprob: -7.570558071136475
    4. '8' → logprob: -9.195557594299316
    5. ' ' → logprob: -12.945557594299316
    6. '```' → logprob: -14.320557594299316
    7. '10' → logprob: -14.820557594299316
    8. '12' → logprob: -14.820557594299316
    9. '18' → logprob: -15.570557594299316
    10. '  ' → logprob: -15.695557594299316

Token 106: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.027021227404475212
    2. '):
' → logprob: -3.6520211696624756
    3. ' ):' → logprob: -8.152021408081055
    4. '):
' → logprob: -8.652021408081055
    5. ')' → logprob: -9.027021408081055
    6. ',' → logprob: -9.402021408081055
    7. '+' → logprob: -11.152021408081055
    8. '   ' → logprob: -11.277021408081055
    9. ' ):
' → logprob: -11.777021408081055
    10. '):

' → logprob: -11.777021408081055

Token 107: ' modulo' (ID: 112372)
  Prédit: ' modulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' modulo' → logprob: -0.5298591256141663
    2. 'mod' → logprob: -1.1548590660095215
    3. '                ' → logprob: -3.9048590660095215
    4. ' modulus' → logprob: -4.0298590660095215
    5. '                 ' → logprob: -4.1548590660095215
    6. ' mod' → logprob: -4.7798590660095215
    7. '                  ' → logprob: -4.9048590660095215
    8. 'MOD' → logprob: -4.9048590660095215
    9. '               ' → logprob: -5.9048590660095215
    10. ' MOD' → logprob: -5.9048590660095215

Token 108: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05550239607691765
    2. '):' → logprob: -2.930502414703369
    3. '=None' → logprob: -8.555501937866211
    4. 'MOD' → logprob: -8.930501937866211
    5. '):
' → logprob: -9.055501937866211
    6. '=M' → logprob: -9.805501937866211
    7. ' =' → logprob: -10.180501937866211
    8. '=_' → logprob: -10.555501937866211
    9. ')' → logprob: -11.180501937866211
    10. '_MOD' → logprob: -11.305501937866211

Token 109: '10' (ID: 702)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.004240566398948431
    2. ' MOD' → logprob: -5.5042405128479
    3. '10' → logprob: -8.754240989685059
    4. '100' → logprob: -13.129240989685059
    5. ' ' → logprob: -13.254240989685059
    6. 'MO' → logprob: -15.629240989685059
    7. '_MOD' → logprob: -15.879240989685059
    8. ')' → logprob: -16.629240036010742
    9. '.MOD' → logprob: -16.879240036010742
    10. '   ' → logprob: -17.004240036010742

Token 110: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.04868808388710022
    2. '_MOD' → logprob: -3.4236881732940674
    3. '_PR' → logprob: -4.923687934875488
    4. '_mod' → logprob: -5.923687934875488
    5. ' **' → logprob: -6.048687934875488
    6. '_' → logprob: -6.548687934875488
    7. '_pr' → logprob: -8.673687934875488
    8. '_Pr' → logprob: -8.673687934875488
    9. ')' → logprob: -8.798687934875488
    10. '_Mod' → logprob: -8.923687934875488

Token 111: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -2.868328920158092e-05
    2. ' ' → logprob: -10.500028610229492
    3. '_' → logprob: -15.375028610229492
    4. '_mod' → logprob: -15.625028610229492
    5. 'mod' → logprob: -15.625028610229492
    6. '```' → logprob: -15.625028610229492
    7. 'prime' → logprob: -16.125028610229492
    8. 'MOD' → logprob: -17.000028610229492
    9. '_prime' → logprob: -17.375028610229492
    10. ' ' → logprob: -17.500028610229492

Token 112: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01815205067396164
    2. ' +' → logprob: -4.018152236938477
    3. '7' → logprob: -13.893152236938477
    4. ' plus' → logprob: -15.018152236938477
    5. ')' → logprob: -15.643152236938477
    6. ' ' → logprob: -16.018152236938477
    7. '＋' → logprob: -16.018152236938477
    8. ' ' → logprob: -16.393152236938477
    9. ')+' → logprob: -16.393152236938477
    10. '+
' → logprob: -16.643152236938477

Token 113: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.00000286102295
    3. '07' → logprob: -16.875001907348633
    4. '```' → logprob: -17.000001907348633
    5. '+' → logprob: -17.187501907348633
    6. '9' → logprob: -17.937501907348633
    7. '

' → logprob: -17.937501907348633
    8. '007' → logprob: -18.125001907348633
    9. '' → logprob: -18.625001907348633
    10. ')' → logprob: -19.125001907348633

Token 114: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. '```' → logprob: -17.5
    4. '07' → logprob: -19.125
    5. '007' → logprob: -19.375
    6. '' → logprob: -19.4375
    7. '۷' → logprob: -20.0
    8. '७' → logprob: -20.25
    9. '৭' → logprob: -20.5
    10. '   ' → logprob: -20.625

Token 115: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005060884868726134
    2. '):
' → logprob: -7.7505059242248535
    3. ')' → logprob: -9.750506401062012
    4. ' ):' → logprob: -11.375506401062012
    5. '):
' → logprob: -12.250506401062012
    6. '):

' → logprob: -15.125506401062012
    7. '   ' → logprob: -15.375506401062012
    8. ',' → logprob: -15.625506401062012
    9. ''):' → logprob: -16.625505447387695
    10. ':' → logprob: -17.125505447387695

Token 116: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25508618354797363
    2. ':' → logprob: -1.7550861835479736
    3. '):' → logprob: -3.2550861835479736
    4. ')' → logprob: -5.0050859451293945
    5. '   ' → logprob: -6.0050859451293945
    6. '):
' → logprob: -6.5050859451293945
    7. '<|end|>' → logprob: -6.6300859451293945
    8. '    ' → logprob: -8.255085945129395
    9. ',' → logprob: -8.630085945129395
    10. '
' → logprob: -8.880085945129395

Token 117: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015122207812964916
    2. 'self' (adapté à ' self') → logprob: -4.640122413635254
    3. ' self' → logprob: -5.265122413635254
    4. '        ' → logprob: -9.390122413635254
    5. '   ' → logprob: -11.140122413635254
    6. '           ' → logprob: -11.265122413635254
    7. ' ' → logprob: -11.390122413635254
    8. '      ' → logprob: -11.640122413635254
    9. ' ' → logprob: -11.765122413635254
    10. '	self' → logprob: -12.015122413635254

Token 118: '.mod' (ID: 19046)
  Prédit: '.mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mod' → logprob: -0.01694382168352604
    2. '.max' → logprob: -4.76694393157959
    3. '.' → logprob: -4.89194393157959
    4. ' .' → logprob: -7.26694393157959
    5. '.maximum' → logprob: -10.51694393157959
    6. '.MOD' → logprob: -10.51694393157959
    7. '._' → logprob: -11.14194393157959
    8. '.factor' → logprob: -12.39194393157959
    9. '.module' → logprob: -12.89194393157959
    10. '.Mod' → logprob: -13.01694393157959

Token 119: 'ulo' (ID: 5953)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7530646324157715
    2. 'ulo' → logprob: -0.8780646324157715
    3. '=' → logprob: -2.2530646324157715
    4. 'ulus' → logprob: -5.2530646324157715
    5. 'ULO' → logprob: -6.6280646324157715
    6. '   ' → logprob: -7.1280646324157715
    7. 'ule' → logprob: -7.2530646324157715
    8. 'ulu' → logprob: -9.12806510925293
    9. ' ' → logprob: -10.12806510925293
    10. ',' → logprob: -10.25306510925293

Token 120: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022992134094238
    2. '=' → logprob: -1.9102299213409424
    3. '   ' → logprob: -12.785229682922363
    4. ',' → logprob: -13.910229682922363
    5. ' ' → logprob: -13.910229682922363
    6. ' =
' → logprob: -15.035229682922363
    7. '	' → logprob: -16.03523063659668
    8. '    ' → logprob: -16.03523063659668
    9. '=int' → logprob: -16.41023063659668
    10. ')' → logprob: -16.53523063659668

Token 121: ' modulo' (ID: 112372)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0004329341172706336
    2. ' modulo' → logprob: -8.000432968139648
    3. 'MOD' → logprob: -9.250432968139648
    4. '	mod' → logprob: -14.875432968139648
    5. 'Modulo' → logprob: -15.000432968139648
    6. 'mo' → logprob: -15.250432968139648
    7. 'max' → logprob: -15.250432968139648
    8. '(mod' → logprob: -16.12543296813965
    9. 'moder' → logprob: -17.12543296813965
    10. '_mod' → logprob: -17.37543296813965

Token 122: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2027713507413864
    2. '
' → logprob: -1.7027713060379028
    3. '<|end|>' → logprob: -7.202771186828613
    4. ',' → logprob: -8.702771186828613
    5. '        
' → logprob: -9.202771186828613
    6. 'self' → logprob: -9.702771186828613
    7. ',
' → logprob: -9.702771186828613
    8. '```' → logprob: -10.077771186828613
    9. '<|end|>' → logprob: -10.202771186828613
    10. '  
' → logprob: -10.327771186828613

Token 123: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15969699621200562
    2. '
' → logprob: -2.0346970558166504
    3. '<|end|>' → logprob: -4.15969705581665
    4. '<|end|>' → logprob: -8.409696578979492
    5. ',' → logprob: -8.659696578979492
    6. 'self' → logprob: -8.659696578979492
    7. '        
' → logprob: -8.784696578979492
    8. '   ' → logprob: -9.284696578979492
    9. '	' → logprob: -9.409696578979492
    10. '        ' → logprob: -9.909696578979492

Token 124: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.018635060638189316
    2. '       ' → logprob: -4.018635272979736
    3. ' self' → logprob: -7.643635272979736
    4. '	self' → logprob: -12.893634796142578
    5. '   ' → logprob: -13.768634796142578
    6. 'import' → logprob: -13.893634796142578
    7. '
' → logprob: -14.768634796142578
    8. 'def' → logprob: -15.393634796142578
    9. 'super' → logprob: -15.393634796142578
    10. 'from' → logprob: -15.893634796142578

Token 125: '.max' (ID: 11883)
  Prédit: '.factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.factor' → logprob: -0.2520352602005005
    2. '.fact' → logprob: -2.002035140991211
    3. '.max' → logprob: -2.877035140991211
    4. '.fac' → logprob: -3.502035140991211
    5. '.maximum' → logprob: -8.002035140991211
    6. 'factor' → logprob: -8.377035140991211
    7. '.' → logprob: -8.377035140991211
    8. ' .' → logprob: -9.002035140991211
    9. '._' → logprob: -9.377035140991211
    10. '_factor' → logprob: -9.502035140991211

Token 126: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -5.657694418914616e-05
    2. '_factor' → logprob: -10.750056266784668
    3. '_' → logprob: -11.375056266784668
    4. 'index' → logprob: -11.625056266784668
    5. '_comb' → logprob: -12.125056266784668
    6. '_indices' → logprob: -14.000056266784668
    7. '=' → logprob: -14.000056266784668
    8. '=_' → logprob: -14.125056266784668
    9. 'imum' → logprob: -14.250056266784668
    10. 'Index' → logprob: -14.375056266784668

Token 127: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014138251543045
    2. ' =' → logprob: -1.701413869857788
    3. '=int' → logprob: -15.951414108276367
    4. '=len' → logprob: -16.326414108276367
    5. ' ' → logprob: -16.451414108276367
    6. '   ' → logprob: -16.451414108276367
    7. ')' → logprob: -16.826414108276367
    8. '=max' → logprob: -16.951414108276367
    9. ',' → logprob: -17.826414108276367
    10. '+' → logprob: -18.576414108276367

Token 128: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.01814994215965271
    2. ' max' → logprob: -4.0181498527526855
    3. '(max' → logprob: -17.018150329589844
    4. '	max' → logprob: -17.643150329589844
    5. 'maximum' → logprob: -18.518150329589844
    6. 'int' → logprob: -18.643150329589844
    7. '[max' → logprob: -18.768150329589844
    8. '=max' → logprob: -19.768150329589844
    9. '   ' → logprob: -19.893150329589844
    10. ' ' → logprob: -20.018150329589844

Token 129: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.00036679807817563415
    2. 'dex' → logprob: -8.000367164611816
    3. 'ed' → logprob: -11.750367164611816
    4. 'index' → logprob: -11.875367164611816
    5. 'ex' → logprob: -12.375367164611816
    6. 'd' → logprob: -12.625367164611816
    7. '_' → logprob: -12.750367164611816
    8. 'Index' → logprob: -14.000367164611816
    9. '_INDEX' → logprob: -14.500367164611816
    10. 'x' → logprob: -14.500367164611816

Token 130: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020342744886875153
    2. '
' → logprob: -4.145342826843262
    3. '<|end|>' → logprob: -5.895342826843262
    4. ',' → logprob: -6.895342826843262
    5. 'self' → logprob: -8.770342826843262
    6. '<|end|>' → logprob: -9.395342826843262
    7. ',
' → logprob: -9.520342826843262
    8. '	' → logprob: -10.270342826843262
    9. ' self' → logprob: -10.395342826843262
    10. '```' → logprob: -10.520342826843262

Token 131: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.043669719249010086
    2. '
' → logprob: -3.2936697006225586
    3. ',' → logprob: -5.918669700622559
    4. '<|end|>' → logprob: -6.543669700622559
    5. 'self' → logprob: -7.543669700622559
    6. '        
' → logprob: -8.293669700622559
    7. ',
' → logprob: -9.043669700622559
    8. '<|end|>' → logprob: -9.418669700622559
    9. '	' → logprob: -9.543669700622559
    10. ' self' → logprob: -9.668669700622559

Token 132: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.020807428285479546
    2. ' self' → logprob: -4.520807266235352
    3. '       ' → logprob: -4.645807266235352
    4. '   ' → logprob: -9.270807266235352
    5. '	self' → logprob: -11.395807266235352
    6. ' ' → logprob: -14.020807266235352
    7. '(self' → logprob: -14.395807266235352
    8. '
' → logprob: -14.520807266235352
    9. '        
' → logprob: -14.645807266235352
    10. '[self' → logprob: -14.770807266235352

Token 133: '.factor' (ID: 196244)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -1.1922169923782349
    2. '.factor' → logprob: -1.4422169923782349
    3. ' =' → logprob: -1.6922169923782349
    4. '=' → logprob: -2.0672168731689453
    5. '._' → logprob: -2.8172168731689453
    6. 'factor' → logprob: -3.5672168731689453
    7. '.' → logprob: -4.192216873168945
    8. '_fact' → logprob: -4.442216873168945
    9. '.fact' → logprob: -4.567216873168945
    10. '.fac' → logprob: -5.192216873168945

Token 134: 'ial' (ID: 563)
  Prédit: 'ials'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ials' → logprob: -0.0004839385801460594
    2. 's' → logprob: -7.875483989715576
    3. 'ial' → logprob: -9.250483512878418
    4. 'als' → logprob: -12.625483512878418
    5. '_' → logprob: -13.125483512878418
    6. '=' → logprob: -13.750483512878418
    7. '```' → logprob: -15.250483512878418
    8. ' =' → logprob: -15.375483512878418
    9. '[' → logprob: -15.750483512878418
    10. 'i' → logprob: -16.000484466552734

Token 135: '_list' (ID: 4162)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.025680743157863617
    2. '=' → logprob: -3.7756807804107666
    3. ' =' → logprob: -6.0256805419921875
    4. '_s' → logprob: -11.650680541992188
    5. '=s' → logprob: -12.650680541992188
    6. ' s' → logprob: -13.025680541992188
    7. '[s' → logprob: -14.525680541992188
    8. ' ' → logprob: -14.650680541992188
    9. '[' → logprob: -14.900680541992188
    10. '   ' → logprob: -15.525680541992188

Token 136: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3870377838611603
    2. '=' → logprob: -1.137037754058838
    3. ' =[' → logprob: -9.012038230895996
    4. '=[' → logprob: -10.387038230895996
    5. '[' → logprob: -11.512038230895996
    6. '=[]' → logprob: -12.887038230895996
    7. ' ' → logprob: -14.512038230895996
    8. ',' → logprob: -15.762038230895996
    9. '＝' → logprob: -16.13703727722168
    10. '=[
' → logprob: -16.13703727722168

Token 137: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001929228543303907
    2. ' [' → logprob: -6.25192928314209
    3. '[self' → logprob: -15.00192928314209
    4. '[f' → logprob: -15.37692928314209
    5. '=[' → logprob: -16.876928329467773
    6. ' ' → logprob: -17.501928329467773
    7. '1' → logprob: -17.751928329467773
    8. ' ' → logprob: -18.001928329467773
    9. 'factor' → logprob: -18.626928329467773
    10. '[class' → logprob: -18.751928329467773

Token 138: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. 'None' → logprob: -15.375000953674316
    3. ' ' → logprob: -15.625000953674316
    4. '0' → logprob: -17.875
    5. '-' → logprob: -18.125
    6. ']' → logprob: -18.75
    7. '```' → logprob: -18.75
    8. '   ' → logprob: -18.875
    9. 'factor' → logprob: -19.0
    10. '
' → logprob: -19.375

Token 139: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -7.469590491382405e-05
    2. ']
' → logprob: -10.25007438659668
    3. ' ]' → logprob: -11.00007438659668
    4. ']*' → logprob: -12.00007438659668
    5. ']

' → logprob: -12.12507438659668
    6. ']*(' → logprob: -12.50007438659668
    7. ',' → logprob: -12.62507438659668
    8. ']+' → logprob: -13.00007438659668
    9. ' for' → logprob: -15.00007438659668
    10. ']<<' → logprob: -15.00007438659668

Token 140: ' *' (ID: 425)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6931402683258057
    2. ']' → logprob: -1.0681402683258057
    3. ' for' → logprob: -2.3181402683258057
    4. '
' → logprob: -3.1931402683258057
    5. ',' → logprob: -4.568140029907227
    6. ']+' → logprob: -6.443140029907227
    7. '*' → logprob: -7.068140029907227
    8. 'while' → logprob: -7.068140029907227
    9. '+' → logprob: -7.193140029907227
    10. 'import' → logprob: -7.568140029907227

Token 141: ' (' (ID: 350)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.014212043955922127
    2. '(self' → logprob: -4.264212131500244
    3. ' (' → logprob: -10.014211654663086
    4. 'self' → logprob: -13.514211654663086
    5. '(' → logprob: -14.014211654663086
    6. 'max' → logprob: -14.639211654663086
    7. '[max' → logprob: -14.764211654663086
    8. '((' → logprob: -15.139211654663086
    9. '(m' → logprob: -15.514211654663086
    10. '(MAX' → logprob: -16.264211654663086

Token 142: 'self' (ID: 1156)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.4939349293708801
    2. 'self' → logprob: -0.9939349293708801
    3. '(max' → logprob: -3.9939348697662354
    4. '(self' → logprob: -6.7439351081848145
    5. ' max' → logprob: -10.243934631347656
    6. ' self' → logprob: -11.243934631347656
    7. ' (' → logprob: -12.743934631347656
    8. '[max' → logprob: -13.118934631347656
    9. 'maximum' → logprob: -13.368934631347656
    10. '(' → logprob: -14.368934631347656

Token 143: '.max' (ID: 11883)
  Prédit: '.max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.max' → logprob: -0.22556151449680328
    2. 'max' → logprob: -1.600561499595642
    3. '(max' → logprob: -9.850561141967773
    4. '[max' → logprob: -10.475561141967773
    5. ' max' → logprob: -10.850561141967773
    6. '	max' → logprob: -10.975561141967773
    7. '.' → logprob: -11.725561141967773
    8. '{' → logprob: -11.975561141967773
    9. '_max' → logprob: -12.600561141967773
    10. '
' → logprob: -13.100561141967773

Token 144: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -5.0020742492051795e-05
    2. '+' → logprob: -10.250049591064453
    3. 'index' → logprob: -12.250049591064453
    4. '_' → logprob: -12.500049591064453
    5. '_max' → logprob: -13.625049591064453
    6. '_factor' → logprob: -13.875049591064453
    7. '_INDEX' → logprob: -14.500049591064453
    8. ' +' → logprob: -14.625049591064453
    9. ' _' → logprob: -14.625049591064453
    10. '
' → logprob: -15.125049591064453

Token 145: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07889385521411896
    2. ' +' → logprob: -2.5788938999176025
    3. '+
' → logprob: -13.453893661499023
    4. ' +
' → logprob: -13.828893661499023
    5. ')' → logprob: -14.203893661499023
    6. ' ' → logprob: -15.203893661499023
    7. '1' → logprob: -16.078893661499023
    8. '+)' → logprob: -16.328893661499023
    9. '[' → logprob: -16.703893661499023
    10. '＋' → logprob: -16.828893661499023

Token 146: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.957014556974173e-05
    2. ' ' → logprob: -9.625069618225098
    3. '2' → logprob: -12.625069618225098
    4. '```' → logprob: -17.37506866455078
    5. '   ' → logprob: -17.50006866455078
    6. ')' → logprob: -17.62506866455078
    7. '  ' → logprob: -17.75006866455078
    8. '+' → logprob: -18.00006866455078
    9. '3' → logprob: -19.43756866455078
    10. '[' → logprob: -19.75006866455078

Token 147: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.250006675720215
    3. '2' → logprob: -13.500006675720215
    4. '```' → logprob: -17.6250057220459
    5. ')' → logprob: -18.3750057220459
    6. '   ' → logprob: -18.3750057220459
    7. '7' → logprob: -18.5000057220459
    8. '+' → logprob: -18.6250057220459
    9. '１' → logprob: -18.8125057220459
    10. '  ' → logprob: -19.1875057220459

Token 148: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015303362160921097
    2. ')
' → logprob: -6.501530170440674
    3. ' )' → logprob: -10.751530647277832
    4. ')

' → logprob: -12.626530647277832
    5. ')
' → logprob: -13.751530647277832
    6. '<|end|>' → logprob: -13.751530647277832
    7. ' )
' → logprob: -15.501530647277832
    8. '),' → logprob: -15.751530647277832
    9. '   ' → logprob: -15.876530647277832
    10. ']' → logprob: -16.376529693603516

Token 149: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49058815836906433
    2. '
' → logprob: -1.6155881881713867
    3. '<|end|>' → logprob: -2.4905881881713867
    4. '   ' → logprob: -2.8655881881713867
    5. ' for' → logprob: -3.9905881881713867
    6. 'for' → logprob: -5.115588188171387
    7. '    
' → logprob: -5.240588188171387
    8. ' 
' → logprob: -5.615588188171387
    9. '  
' → logprob: -5.990588188171387
    10. '        
' → logprob: -5.990588188171387

Token 150: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4949065148830414
    2. 'for' (adapté à ' for') → logprob: -1.4949065446853638
    3. '       ' → logprob: -1.8699065446853638
    4. '   ' → logprob: -4.744906425476074
    5. '	for' → logprob: -6.619906425476074
    6. '
' → logprob: -6.869906425476074
    7. '	' → logprob: -7.494906425476074
    8. ' ' → logprob: -8.744906425476074
    9. '	   ' → logprob: -10.494906425476074
    10. '<|end|>' → logprob: -10.619906425476074

Token 151: ' current' (ID: 2208)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.011050177738070488
    2. 'i' → logprob: -4.511050224304199
    3. '	i' → logprob: -13.1360502243042
    4. ' ' → logprob: -15.1360502243042
    5. ' ' → logprob: -17.511049270629883
    6. '   ' → logprob: -17.761049270629883
    7. ' x' → logprob: -17.886049270629883
    8. '_i' → logprob: -17.886049270629883
    9. '  ' → logprob: -18.136049270629883
    10. 'x' → logprob: -18.261049270629883

Token 152: '_index' (ID: 7748)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5166005492210388
    2. 'in' → logprob: -1.5166006088256836
    3. 'i' → logprob: -2.2666006088256836
    4. ' i' → logprob: -2.6416006088256836
    5. '_index' → logprob: -5.766600608825684
    6. '_' → logprob: -5.891600608825684
    7. '_i' → logprob: -6.391600608825684
    8. ' ' → logprob: -7.641600608825684
    9. '_idx' → logprob: -8.141600608825684
    10. 'index' → logprob: -8.266600608825684

Token 153: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0028140286449342966
    2. 'in' → logprob: -5.877813816070557
    3. ' ' → logprob: -12.127814292907715
    4. ',' → logprob: -13.627814292907715
    5. '	in' → logprob: -13.627814292907715
    6. '1' → logprob: -15.377814292907715
    7. '<|end|>' → logprob: -15.377814292907715
    8. 'import' → logprob: -15.627814292907715
    9. 'range' → logprob: -16.2528133392334
    10. ' i' → logprob: -16.2528133392334

Token 154: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.014163747429847717
    2. 'range' → logprob: -4.264163970947266
    3. '	range' → logprob: -15.514163970947266
    4. ' ' → logprob: -16.889163970947266
    5. '(range' → logprob: -18.264163970947266
    6. '   ' → logprob: -18.389163970947266
    7. '  ' → logprob: -19.139163970947266
    8. ' xrange' → logprob: -20.639163970947266
    9. ' ' → logprob: -20.764163970947266
    10. '    ' → logprob: -21.764163970947266

Token 155: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09593202918767929
    2. '1' → logprob: -2.7209320068359375
    3. ' ' → logprob: -3.7209320068359375
    4. '   ' → logprob: -6.9709320068359375
    5. '2' → logprob: -7.9709320068359375
    6. ' (' → logprob: -8.845932006835938
    7. ',' → logprob: -10.970932006835938
    8. ' ,' → logprob: -13.595932006835938
    9. '	' → logprob: -14.220932006835938
    10. '  ' → logprob: -14.470932006835938

Token 156: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02976194955408573
    2. '2' → logprob: -3.529762029647827
    3. ' ' → logprob: -11.404762268066406
    4. '   ' → logprob: -15.529762268066406
    5. 'self' → logprob: -15.654762268066406
    6. '```' → logprob: -18.279762268066406
    7. '(' → logprob: -18.904762268066406
    8. '  ' → logprob: -18.904762268066406
    9. '
' → logprob: -19.529762268066406
    10. '0' → logprob: -19.529762268066406

Token 157: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002981624274980277
    2. ' ,' → logprob: -8.125298500061035
    3. ',
' → logprob: -14.375298500061035
    4. ',self' → logprob: -14.375298500061035
    5. ',current' → logprob: -14.375298500061035
    6. ',len' → logprob: -16.25029754638672
    7. ')' → logprob: -16.87529754638672
    8. ' ' → logprob: -17.12529754638672
    9. ',max' → logprob: -17.12529754638672
    10. ' ,
' → logprob: -18.12529754638672

Token 158: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.029765525832772255
    2. ' self' → logprob: -3.5297656059265137
    3. 'max' → logprob: -11.279765129089355
    4. ' max' → logprob: -13.154765129089355
    5. '(self' → logprob: -15.779765129089355
    6. '	self' → logprob: -16.154766082763672
    7. '```' → logprob: -16.654766082763672
    8. '   ' → logprob: -17.279766082763672
    9. '=self' → logprob: -17.404766082763672
    10. '
' → logprob: -17.404766082763672

Token 159: '.max' (ID: 11883)
  Prédit: '.max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.max' → logprob: -5.955703818472102e-05
    2. 'max' → logprob: -9.750059127807617
    3. '.' → logprob: -14.625059127807617
    4. '	max' → logprob: -15.000059127807617
    5. '_max' → logprob: -15.625059127807617
    6. ' .' → logprob: -15.750059127807617
    7. '.maximum' → logprob: -16.250059127807617
    8. ' max' → logprob: -17.000059127807617
    9. ').' → logprob: -18.625059127807617
    10. '```' → logprob: -18.750059127807617

Token 160: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -3.7697225252486533e-06
    2. 'index' → logprob: -13.125003814697266
    3. 'dex' → logprob: -13.875003814697266
    4. '_INDEX' → logprob: -16.000003814697266
    5. 'Index' → logprob: -16.000003814697266
    6. 'x' → logprob: -16.250003814697266
    7. '_factor' → logprob: -16.250003814697266
    8. '_' → logprob: -17.000003814697266
    9. '+' → logprob: -17.250003814697266
    10. '_ind' → logprob: -17.625003814697266

Token 161: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2811523377895355
    2. ' +' → logprob: -1.406152367591858
    3. ')' → logprob: -14.781152725219727
    4. ')+' → logprob: -14.906152725219727
    5. '):
' → logprob: -15.031152725219727
    6. ' +
' → logprob: -15.406152725219727
    7. ' ' → logprob: -15.906152725219727
    8. '   ' → logprob: -16.156152725219727
    9. '1' → logprob: -16.281152725219727
    10. '+
' → logprob: -16.406152725219727

Token 162: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002185472520068288
    2. ' ' → logprob: -6.127185344696045
    3. ')' → logprob: -15.752185821533203
    4. '+' → logprob: -17.002185821533203
    5. '   ' → logprob: -17.002185821533203
    6. '```' → logprob: -17.377185821533203
    7. 'current' → logprob: -17.752185821533203
    8. '
' → logprob: -18.377185821533203
    9. '=' → logprob: -19.127185821533203
    10. '):
' → logprob: -19.252185821533203

Token 163: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.368984107510187e-05
    2. ' ' → logprob: -10.375033378601074
    3. 'current' → logprob: -13.125033378601074
    4. ')' → logprob: -15.875033378601074
    5. '+' → logprob: -16.62503433227539
    6. '   ' → logprob: -16.87503433227539
    7. ' current' → logprob: -17.00003433227539
    8. '
' → logprob: -17.12503433227539
    9. '2' → logprob: -17.25003433227539
    10. '```' → logprob: -17.25003433227539

Token 164: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2016955465078354
    2. '):' → logprob: -1.7016955614089966
    3. '):
' → logprob: -8.826695442199707
    4. ' ):
' → logprob: -9.701695442199707
    5. ':' → logprob: -10.326695442199707
    6. ')' → logprob: -10.451695442199707
    7. ' ):' → logprob: -11.951695442199707
    8. ':
' → logprob: -12.451695442199707
    9. '):

' → logprob: -13.451695442199707
    10. '   ' → logprob: -15.201695442199707

Token 165: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3495989143848419
    2. '           ' → logprob: -1.5995988845825195
    3. '<|end|>' → logprob: -2.8495988845825195
    4. ',' → logprob: -4.3495988845825195
    5. ' self' → logprob: -5.0995988845825195
    6. ':' → logprob: -5.5995988845825195
    7. '               ' → logprob: -5.5995988845825195
    8. ')' → logprob: -6.5995988845825195
    9. '<|end|>' → logprob: -6.5995988845825195
    10. '   ' → logprob: -7.2245988845825195

Token 166: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3142203390598297
    2. 'self' (adapté à ' self') → logprob: -1.3142203092575073
    3. '           ' → logprob: -7.564220428466797
    4. '               ' → logprob: -8.064220428466797
    5. '            ' → logprob: -9.814220428466797
    6. '   ' → logprob: -10.064220428466797
    7. '	self' → logprob: -10.939220428466797
    8. ' ' → logprob: -12.564220428466797
    9. '    ' → logprob: -13.564220428466797
    10. '(self' → logprob: -13.814220428466797

Token 167: '.factor' (ID: 196244)
  Prédit: '.factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.factor' → logprob: -0.0005236041033640504
    2. '.' → logprob: -8.125523567199707
    3. 'factor' → logprob: -9.000523567199707
    4. ' .' → logprob: -9.250523567199707
    5. '.fact' → logprob: -12.750523567199707
    6. '.fac' → logprob: -13.125523567199707
    7. ' factorial' → logprob: -14.125523567199707
    8. '_factor' → logprob: -14.125523567199707
    9. '.factory' → logprob: -15.500523567199707
    10. ' factor' → logprob: -15.750523567199707

Token 168: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.009872130118310452
    2. 'al' → logprob: -4.634871959686279
    3. 'orial' → logprob: -9.509872436523438
    4. '   ' → logprob: -11.759872436523438
    5. '           ' → logprob: -12.259872436523438
    6. 'actor' → logprob: -12.259872436523438
    7. 'factor' → logprob: -12.509872436523438
    8. 'ional' → logprob: -12.509872436523438
    9. '       ' → logprob: -12.634872436523438
    10. ' factorial' → logprob: -12.634872436523438

Token 169: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.2664456789934775e-06
    2. 's' → logprob: -14.500000953674316
    3. '[' → logprob: -15.625000953674316
    4. '[_' → logprob: -15.750000953674316
    5. '_lists' → logprob: -16.000001907348633
    6. ' _' → logprob: -16.875001907348633
    7. 'List' → logprob: -17.250001907348633
    8. 'list' → logprob: -17.250001907348633
    9. '   ' → logprob: -17.625001907348633
    10. '_List' → logprob: -17.750001907348633

Token 170: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -3.5954712075181305e-05
    2. '[' → logprob: -10.375036239624023
    3. ' [' → logprob: -12.500036239624023
    4. '[curr' → logprob: -14.750036239624023
    5. '[cur' → logprob: -15.000036239624023
    6. 'current' → logprob: -15.875036239624023
    7. '[
' → logprob: -16.125036239624023
    8. '   ' → logprob: -16.750036239624023
    9. ' current' → logprob: -17.500036239624023
    10. '```' → logprob: -17.875036239624023

Token 171: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -9.949026571121067e-05
    2. ']' → logprob: -10.125099182128906
    3. 'index' → logprob: -10.250099182128906
    4. ']_' → logprob: -11.625099182128906
    5. ']=' → logprob: -11.875099182128906
    6. '_]' → logprob: -13.500099182128906
    7. '_' → logprob: -13.625099182128906
    8. 'dex' → logprob: -14.250099182128906
    9. '_ind' → logprob: -14.625099182128906
    10. '_factor' → logprob: -14.625099182128906

Token 172: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000519312743563205
    2. ']=' → logprob: -7.750519275665283
    3. ' ]' → logprob: -9.375519752502441
    4. '=' → logprob: -12.875519752502441
    5. ' =' → logprob: -13.750519752502441
    6. ']=(' → logprob: -16.375518798828125
    7. ' ' → logprob: -16.625518798828125
    8. '   ' → logprob: -16.625518798828125
    9. ')' → logprob: -16.875518798828125
    10. ']+=' → logprob: -17.250518798828125

Token 173: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014170562848448753
    2. ' =' → logprob: -4.2641706466674805
    3. '*=' → logprob: -12.01417064666748
    4. ' *=' → logprob: -14.76417064666748
    5. ']=' → logprob: -15.13917064666748
    6. '=

' → logprob: -16.514169692993164
    7. '   ' → logprob: -16.639169692993164
    8. '=
' → logprob: -16.764169692993164
    9. '[' → logprob: -17.014169692993164
    10. '=[' → logprob: -17.139169692993164

Token 174: ' (
' (ID: 4112)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.06246727332472801
    2. ' (' → logprob: -2.812467336654663
    3. 'self' → logprob: -8.437467575073242
    4. '(' → logprob: -8.687467575073242
    5. ' self' → logprob: -9.562467575073242
    6. '           ' → logprob: -10.187467575073242
    7. '   ' → logprob: -13.062467575073242
    8. ' ' → logprob: -13.187467575073242
    9. '(
' → logprob: -14.187467575073242
    10. '(this' → logprob: -15.562467575073242

Token 175: '               ' (ID: 506)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00023572170175611973
    2. '           ' → logprob: -9.000235557556152
    3. ' self' → logprob: -9.250235557556152
    4. '(self' → logprob: -11.500235557556152
    5. '               ' → logprob: -12.625235557556152
    6. '                   ' → logprob: -13.500235557556152
    7. '   ' → logprob: -13.750235557556152
    8. '	self' → logprob: -16.37523651123047
    9. ' ' → logprob: -16.62523651123047
    10. '             ' → logprob: -17.50023651123047

Token 176: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00036667886888608336
    2. '               ' → logprob: -8.2503662109375
    3. ' self' → logprob: -9.7503662109375
    4. '                   ' → logprob: -10.6253662109375
    5. '(self' → logprob: -10.7503662109375
    6. '           ' → logprob: -14.3753662109375
    7. '   ' → logprob: -14.5003662109375
    8. ' ' → logprob: -16.1253662109375
    9. '                       ' → logprob: -16.8753662109375
    10. '	self' → logprob: -16.8753662109375

Token 177: '.factor' (ID: 196244)
  Prédit: '.factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.factor' → logprob: -0.014181028120219707
    2. 'factor' → logprob: -4.264181137084961
    3. '.' → logprob: -11.514181137084961
    4. '_factor' → logprob: -12.514181137084961
    5. ' factorial' → logprob: -13.264181137084961
    6. '.fact' → logprob: -13.889181137084961
    7. ' .' → logprob: -14.639181137084961
    8. '-factor' → logprob: -15.514181137084961
    9. '.fac' → logprob: -15.889181137084961
    10. '_FACTOR' → logprob: -16.01418113708496

Token 178: 'ial' (ID: 563)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.0019310165662318468
    2. 'ial' → logprob: -6.251931190490723
    3. 'orial' → logprob: -14.376931190490723
    4. 'alist' → logprob: -14.751931190490723
    5. '_al' → logprob: -15.001931190490723
    6. 'arial' → logprob: -15.251931190490723
    7. '           ' → logprob: -16.001930236816406
    8. 'onal' → logprob: -16.001930236816406
    9. ' factorial' → logprob: -16.626930236816406
    10. '[' → logprob: -16.876930236816406

Token 179: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.3856492842023727e-06
    2. 'list' → logprob: -14.375000953674316
    3. '*' → logprob: -15.375000953674316
    4. 'self' → logprob: -15.875000953674316
    5. '[' → logprob: -16.250001907348633
    6. 'List' → logprob: -16.375001907348633
    7. ')' → logprob: -17.000001907348633
    8. '[_' → logprob: -17.000001907348633
    9. 's' → logprob: -17.250001907348633
    10. '   ' → logprob: -17.375001907348633

Token 180: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -4.320199877838604e-07
    2. '               ' → logprob: -15.875
    3. 'current' → logprob: -15.875
    4. '                   ' → logprob: -16.875
    5. '[cur' → logprob: -17.0
    6. '[' → logprob: -17.625
    7. '[curr' → logprob: -18.125
    8. '   ' → logprob: -18.5
    9. ' [' → logprob: -19.125
    10. '           ' → logprob: -19.875

Token 181: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.008761702105402946
    2. 'index' → logprob: -4.758761882781982
    3. 'Index' → logprob: -10.008761405944824
    4. 'nd' → logprob: -10.508761405944824
    5. '-' → logprob: -10.633761405944824
    6. 'current' → logprob: -11.383761405944824
    7. 'dex' → logprob: -11.508761405944824
    8. '   ' → logprob: -12.383761405944824
    9. '```' → logprob: -12.758761405944824
    10. 'ind' → logprob: -12.883761405944824

Token 182: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0005100222188048065
    2. ' -' → logprob: -7.625510215759277
    3. '[current' → logprob: -10.750510215759277
    4. '   ' → logprob: -15.000510215759277
    5. 'current' → logprob: -17.00050926208496
    6. ']' → logprob: -17.00050926208496
    7. '[' → logprob: -17.12550926208496
    8. ' ' → logprob: -17.25050926208496
    9. '```' → logprob: -17.75050926208496
    10. '[-' → logprob: -18.62550926208496

Token 183: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.643152740551159e-05
    2. ' ' → logprob: -10.250036239624023
    3. '           ' → logprob: -15.000036239624023
    4. '               ' → logprob: -15.375036239624023
    5. '```' → logprob: -15.625036239624023
    6. '   ' → logprob: -15.875036239624023
    7. '                   ' → logprob: -16.875036239624023
    8. ']' → logprob: -17.375036239624023
    9. ')' → logprob: -17.875036239624023
    10. 'def' → logprob: -18.375036239624023

Token 184: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.375000953674316
    3. '```' → logprob: -16.125
    4. '   ' → logprob: -18.0625
    5. '
' → logprob: -18.1875
    6. 'token' → logprob: -18.4375
    7. '<|end|>' → logprob: -18.625
    8. ']' → logprob: -19.0
    9. 'from' → logprob: -19.3125
    10. '১' → logprob: -19.4375

Token 185: ']' (ID: 60)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.09057752788066864
    2. ' *' → logprob: -2.5905776023864746
    3. '               ' → logprob: -4.465577602386475
    4. '                ' → logprob: -9.590577125549316
    5. '*object' → logprob: -11.340577125549316
    6. '              ' → logprob: -11.840577125549316
    7. '*self' → logprob: -11.965577125549316
    8. ' ' → logprob: -12.090577125549316
    9. ' ' → logprob: -12.590577125549316
    10. '                   ' → logprob: -12.715577125549316

Token 186: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.04378895461559296
    2. ' *' → logprob: -3.2937889099121094
    3. '               ' → logprob: -5.168788909912109
    4. '*object' → logprob: -11.16878890991211
    5. '                ' → logprob: -11.79378890991211
    6. '                   ' → logprob: -11.91878890991211
    7. '              ' → logprob: -13.04378890991211
    8. ' ' → logprob: -13.54378890991211
    9. '*self' → logprob: -13.54378890991211
    10. ' ' → logprob: -13.66878890991211

Token 187: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.014164221473038197
    2. ' current' → logprob: -4.264164447784424
    3. '               ' → logprob: -14.764163970947266
    4. '                   ' → logprob: -16.139163970947266
    5. '           ' → logprob: -16.639163970947266
    6. '$current' → logprob: -17.014163970947266
    7. '(current' → logprob: -17.139163970947266
    8. '	current' → logprob: -17.639163970947266
    9. '   ' → logprob: -17.764163970947266
    10. '[current' → logprob: -18.264163970947266

Token 188: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0001705246395431459
    2. 'index' → logprob: -8.750170707702637
    3. 'Index' → logprob: -12.125170707702637
    4. 'current' → logprob: -14.125170707702637
    5. '._' → logprob: -14.250170707702637
    6. '_factor' → logprob: -14.625170707702637
    7. '_current' → logprob: -14.750170707702637
    8. 'd' → logprob: -14.875170707702637
    9. 'dex' → logprob: -14.875170707702637
    10. '```' → logprob: -15.125170707702637

Token 189: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002169532235711813
    2. '%' → logprob: -7.127169609069824
    3. ' %' → logprob: -7.377169609069824
    4. ' )' → logprob: -8.127169609069824
    5. ')%' → logprob: -8.252169609069824
    6. '               ' → logprob: -8.877169609069824
    7. '           ' → logprob: -10.377169609069824
    8. '       ' → logprob: -12.252169609069824
    9. '   ' → logprob: -12.877169609069824
    10. '                   ' → logprob: -13.002169609069824

Token 190: '           ' (ID: 352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014416055753827095
    2. '%' → logprob: -4.889416217803955
    3. '               ' → logprob: -5.514416217803955
    4. ' %' → logprob: -6.764416217803955
    5. ')%' → logprob: -7.139416217803955
    6. '           ' → logprob: -7.514416217803955
    7. ' )' → logprob: -8.389415740966797
    8. '       ' → logprob: -11.764415740966797
    9. '            ' → logprob: -11.764415740966797
    10. '                   ' → logprob: -11.889415740966797

Token 191: ' )' (ID: 1546)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' (adapté à ' )') → logprob: -0.039430730044841766
    2. '%' → logprob: -3.414430618286133
    3. ' %' → logprob: -5.539430618286133
    4. ')%' → logprob: -6.414430618286133
    5. ' )' → logprob: -9.039430618286133
    6. '           ' → logprob: -9.914430618286133
    7. '               ' → logprob: -10.789430618286133
    8. '   ' → logprob: -12.789430618286133
    9. '            ' → logprob: -13.039430618286133
    10. '```' → logprob: -13.414430618286133

Token 192: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.145370215177536
    2. ' %' → logprob: -2.2703702449798584
    3. ')' → logprob: -3.5203702449798584
    4. ')%' → logprob: -6.145370006561279
    5. '           ' → logprob: -8.395370483398438
    6. '               ' → logprob: -11.020370483398438
    7. '%n' → logprob: -11.645370483398438
    8. '%s' → logprob: -12.020370483398438
    9. '%D' → logprob: -12.520370483398438
    10. '%i' → logprob: -12.520370483398438

Token 193: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04459404945373535
    2. ' self' → logprob: -3.4195940494537354
    3. 'mod' → logprob: -4.544593811035156
    4. ' modulo' → logprob: -8.919593811035156
    5. 'MOD' → logprob: -9.044593811035156
    6. ' MOD' → logprob: -12.794593811035156
    7. ' mod' → logprob: -12.794593811035156
    8. '(mod' → logprob: -13.669593811035156
    9. 'Modulo' → logprob: -13.794593811035156
    10. '(self' → logprob: -14.044593811035156

Token 194: '.mod' (ID: 19046)
  Prédit: '.mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mod' → logprob: -3.128163257315464e-07
    2. 'mod' → logprob: -16.25
    3. '.' → logprob: -17.5
    4. ' .' → logprob: -17.625
    5. '.module' → logprob: -18.125
    6. '	mod' → logprob: -18.625
    7. '.MOD' → logprob: -19.0
    8. '.modified' → logprob: -20.125
    9. '.Mod' → logprob: -20.375
    10. ').' → logprob: -20.625

Token 195: 'ulo' (ID: 5953)
  Prédit: 'ulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulo' → logprob: -0.12794849276542664
    2. 'ULO' → logprob: -2.127948522567749
    3. 'O' → logprob: -7.25294828414917
    4. 'ule' → logprob: -9.752948760986328
    5. 'u' → logprob: -9.877948760986328
    6. 'U' → logprob: -10.377948760986328
    7. ' modulo' → logprob: -10.377948760986328
    8. 'o' → logprob: -10.627948760986328
    9. '```' → logprob: -11.127948760986328
    10. 'UL' → logprob: -11.252948760986328

Token 196: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 197: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48505643010139465
    2. '       ' → logprob: -0.9850564002990723
    3. '
' → logprob: -5.610056400299072
    4. '<|end|>' → logprob: -5.610056400299072
    5. 'def' → logprob: -5.985056400299072
    6. 'from' → logprob: -8.23505687713623
    7. '        
' → logprob: -8.48505687713623
    8. '    
' → logprob: -8.61005687713623
    9. ' def' → logprob: -9.36005687713623
    10. 'import' → logprob: -9.48505687713623

Token 198: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.6544195413589478
    2. '   ' → logprob: -0.7794195413589478
    3. ' def' → logprob: -4.029419422149658
    4. '    
' → logprob: -6.404419422149658
    5. '
' → logprob: -6.654419422149658
    6. ' ' → logprob: -8.279419898986816
    7. 'import' → logprob: -8.654419898986816
    8. 'next' → logprob: -9.279419898986816
    9. 'from' → logprob: -9.529419898986816
    10. '	def' → logprob: -9.654419898986816

Token 199: ' combination' (ID: 14083)
  Prédit: ' mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.33218786120414734
    2. 'mod' → logprob: -2.2071878910064697
    3. ' factorial' → logprob: -2.3321878910064697
    4. ' modular' → logprob: -3.3321878910064697
    5. ' inverse' → logprob: -3.5821878910064697
    6. 'inverse' → logprob: -5.832187652587891
    7. 'inv' → logprob: -6.082187652587891
    8. 'n' → logprob: -6.207187652587891
    9. ' n' → logprob: -6.332187652587891
    10. ' inv' → logprob: -6.707187652587891

Token 200: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.014194532297551632
    2. '(' → logprob: -4.264194488525391
    3. ' (' → logprob: -10.63919448852539
    4. '(
' → logprob: -12.51419448852539
    5. '(s' → logprob: -13.63919448852539
    6. '(n' → logprob: -14.13919448852539
    7. 's' → logprob: -14.76419448852539
    8. 'self' → logprob: -15.01419448852539
    9. '(Self' → logprob: -16.13919448852539
    10. '_factor' → logprob: -16.51419448852539

Token 201: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07050172984600067
    2. '(self' → logprob: -2.9455018043518066
    3. ',self' → logprob: -4.945501804351807
    4. 'self' → logprob: -5.195501804351807
    5. ' ,' → logprob: -6.570501804351807
    6. ',n' → logprob: -8.070501327514648
    7. '_,' → logprob: -8.195501327514648
    8. ' (' → logprob: -8.695501327514648
    9. ')' → logprob: -8.695501327514648
    10. 's' → logprob: -10.070501327514648

Token 202: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.13989275693893433
    2. 'self' → logprob: -2.139892816543579
    3. ' n' → logprob: -4.514892578125
    4. ' self' → logprob: -6.264892578125
    5. '   ' → logprob: -11.639892578125
    6. 'a' → logprob: -12.264892578125
    7. '```' → logprob: -12.639892578125
    8. ' ' → logprob: -13.014892578125
    9. ')' → logprob: -13.139892578125
    10. '       ' → logprob: -13.139892578125

Token 203: '_value' (ID: 6734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012821101699955761
    2. ',k' → logprob: -9.125127792358398
    3. ' ,' → logprob: -11.000127792358398
    4. ',n' → logprob: -13.000127792358398
    5. ',
' → logprob: -16.3751277923584
    6. '   ' → logprob: -16.6251277923584
    7. ':' → logprob: -17.1251277923584
    8. ',K' → logprob: -17.1251277923584
    9. '‌,' → logprob: -17.2501277923584
    10. '<|end|>' → logprob: -17.6251277923584

Token 204: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013524403038900346
    2. ',n' → logprob: -9.62513542175293
    3. ' ,' → logprob: -9.62513542175293
    4. ',k' → logprob: -13.37513542175293
    5. 'self' → logprob: -14.75013542175293
    6. 'n' → logprob: -14.75013542175293
    7. '   ' → logprob: -15.00013542175293
    8. ',self' → logprob: -15.50013542175293
    9. ',
' → logprob: -16.00013542175293
    10. '       ' → logprob: -16.12513542175293

Token 205: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.26807457208633423
    2. 'r' → logprob: -1.5180745124816895
    3. ' k' → logprob: -4.7680745124816895
    4. ' r' → logprob: -4.8930745124816895
    5. '   ' → logprob: -12.143074989318848
    6. '
' → logprob: -12.268074989318848
    7. ' ' → logprob: -12.768074989318848
    8. '```' → logprob: -13.268074989318848
    9. 'm' → logprob: -13.393074989318848
    10. '  ' → logprob: -14.268074989318848

Token 206: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.14167848229408264
    2. '):' → logprob: -2.14167857170105
    3. '_' → logprob: -5.141678333282471
    4. ')' → logprob: -5.391678333282471
    5. ')_' → logprob: -5.641678333282471
    6. '_val' → logprob: -8.516678810119629
    7. '):
' → logprob: -8.891678810119629
    8. '_values' → logprob: -8.891678810119629
    9. '_n' → logprob: -10.141678810119629
    10. '_VALUE' → logprob: -10.266678810119629

Token 207: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0004821505572181195
    2. '):
' → logprob: -8.250482559204102
    3. ')' → logprob: -8.500482559204102
    4. ' ):' → logprob: -11.375482559204102
    5. '):
' → logprob: -12.625482559204102
    6. ':' → logprob: -13.625482559204102
    7. '):

' → logprob: -14.250482559204102
    8. '   ' → logprob: -15.250482559204102
    9. ')：' → logprob: -15.875482559204102
    10. '**' → logprob: -16.0004825592041

Token 208: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.030169863253831863
    2. '):' → logprob: -4.03016996383667
    3. '       ' → logprob: -5.28016996383667
    4. '<|end|>' → logprob: -5.90516996383667
    5. '():' → logprob: -6.15516996383667
    6. ',' → logprob: -7.90516996383667
    7. '   ' → logprob: -8.155169486999512
    8. ':return' → logprob: -8.280169486999512
    9. '(' → logprob: -8.530169486999512
    10. ':
' → logprob: -8.530169486999512

Token 209: ' """
' (ID: 7037)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7641317844390869
    2. 'if' → logprob: -1.014131784439087
    3. '       ' → logprob: -1.764131784439087
    4. 'return' → logprob: -9.764131546020508
    5. '	if' → logprob: -10.514131546020508
    6. ' return' → logprob: -10.639131546020508
    7. '   ' → logprob: -11.139131546020508
    8. 'n' → logprob: -11.389131546020508
    9. '```' → logprob: -11.389131546020508
    10. '    ' → logprob: -11.514131546020508

Token 210: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20780602097511292
    2. ' if' → logprob: -1.9578059911727905
    3. '       ' → logprob: -3.08280611038208
    4. '   ' → logprob: -7.58280611038208
    5. 'return' → logprob: -9.582805633544922
    6. '           ' → logprob: -10.832805633544922
    7. 'self' → logprob: -12.332805633544922
    8. 'pow' → logprob: -12.457805633544922
    9. 'n' → logprob: -12.582805633544922
    10. '    ' → logprob: -12.707805633544922

Token 211: ' Calculate' (ID: 38942)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9100090265274048
    2. 'if' → logprob: -1.1600090265274048
    3. ' if' → logprob: -1.2850090265274048
    4. 'n' → logprob: -5.660008907318115
    5. 'return' → logprob: -6.410008907318115
    6. '"""' → logprob: -7.285008907318115
    7. ')' → logprob: -7.910008907318115
    8. '   ' → logprob: -8.160009384155273
    9. ' return' → logprob: -8.410009384155273
    10. ' n' → logprob: -9.285009384155273

Token 212: ' n' (ID: 297)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.21384844183921814
    2. '(n' → logprob: -2.088848352432251
    3. '(self' → logprob: -4.33884859085083
    4. 'n' → logprob: -4.46384859085083
    5. ' n' → logprob: -4.71384859085083
    6. ' factorial' → logprob: -4.83884859085083
    7. ' self' → logprob: -5.08884859085083
    8. 'pow' → logprob: -5.58884859085083
    9. 'self' → logprob: -5.96384859085083
    10. 'comb' → logprob: -5.96384859085083

Token 213: ' choose' (ID: 5655)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.8578998446464539
    2. '_choose' → logprob: -1.4828999042510986
    3. '_' → logprob: -1.7328999042510986
    4. '   ' → logprob: -3.3578999042510986
    5. 'C' → logprob: -3.4828999042510986
    6. '!' → logprob: -3.4828999042510986
    7. 'Cr' → logprob: -3.6078999042510986
    8. '_comb' → logprob: -5.1078996658325195
    9. ' _' → logprob: -5.2328996658325195
    10. '_C' → logprob: -5.2328996658325195

Token 214: ' k' (ID: 372)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5582146644592285
    2. '(n' → logprob: -0.9332146644592285
    3. '(' → logprob: -3.5582146644592285
    4. 'n' → logprob: -6.1832146644592285
    5. ' n' → logprob: -6.4332146644592285
    6. '(
' → logprob: -7.3082146644592285
    7. ' (
' → logprob: -7.5582146644592285
    8. '(k' → logprob: -7.9332146644592285
    9. ')' → logprob: -8.18321418762207
    10. ' ' → logprob: -9.05821418762207

Token 215: ' modulo' (ID: 112372)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.795320987701416
    2. '(self' → logprob: -1.670320987701416
    3. '       ' → logprob: -2.045320987701416
    4. ' (' → logprob: -2.295320987701416
    5. ')' → logprob: -2.545320987701416
    6. '(' → logprob: -4.670320987701416
    7. ':' → logprob: -4.795320987701416
    8. '):
' → logprob: -5.170320987701416
    9. ',' → logprob: -5.420320987701416
    10. '(
' → logprob: -5.545320987701416

Token 216: ' specified' (ID: 10185)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.842500627040863
    2. ' (' → logprob: -1.5925006866455078
    3. '(self' → logprob: -1.8425006866455078
    4. ' self' → logprob: -1.9675006866455078
    5. '(n' → logprob: -3.967500686645508
    6. ' MOD' → logprob: -4.592500686645508
    7. 'MOD' → logprob: -4.717500686645508
    8. '(' → logprob: -5.342500686645508
    9. ')' → logprob: -5.592500686645508
    10. '```' → logprob: -5.592500686645508

Token 217: ' modulus' (ID: 149464)
  Prédit: '_mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_mod' → logprob: -0.20431771874427795
    2. 'mod' → logprob: -2.329317808151245
    3. ' modulo' → logprob: -2.954317808151245
    4. ' (' → logprob: -4.829317569732666
    5. ')' → logprob: -5.079317569732666
    6. 'self' → logprob: -5.329317569732666
    7. '_prime' → logprob: -6.454317569732666
    8. '(mod' → logprob: -6.579317569732666
    9. ' ' → logprob: -6.579317569732666
    10. '_MOD' → logprob: -6.704317569732666

Token 218: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14476101100444794
    2. '):' → logprob: -2.769761085510254
    3. '       ' → logprob: -3.394761085510254
    4. ',' → logprob: -4.144761085510254
    5. ':
' → logprob: -5.144761085510254
    6. ' :' → logprob: -5.269761085510254
    7. '):
' → logprob: -5.269761085510254
    8. ')' → logprob: -6.519761085510254
    9. '   ' → logprob: -6.644761085510254
    10. '.' → logprob: -7.269761085510254

Token 219: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0761455297470093
    2. '```' → logprob: -1.4511455297470093
    3. '<|end|>' → logprob: -1.7011455297470093
    4. ')' → logprob: -1.9511455297470093
    5. '\n' → logprob: -3.201145648956299
    6. '   ' → logprob: -3.701145648956299
    7. '"""' → logprob: -4.201145648956299
    8. '"""
' → logprob: -4.701145648956299
    9. '<|end|>' → logprob: -5.951145648956299
    10. ' 
' → logprob: -6.326145648956299

Token 220: ' """
' (ID: 7037)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5344336628913879
    2. '```' → logprob: -1.7844336032867432
    3. '<|end|>' → logprob: -2.534433603286743
    4. '       ' → logprob: -2.659433603286743
    5. '\n' → logprob: -2.659433603286743
    6. '   ' → logprob: -4.409433841705322
    7. '"""' → logprob: -5.534433841705322
    8. ' 
' → logprob: -5.909433841705322
    9. '<|end|>' → logprob: -6.659433841705322
    10. '")' → logprob: -7.159433841705322

Token 221: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03526628389954567
    2. ' if' → logprob: -3.660266399383545
    3. 'if' → logprob: -4.910266399383545
    4. 'n' → logprob: -7.285266399383545
    5. 'return' → logprob: -7.910266399383545
    6. ' return' → logprob: -8.660265922546387
    7. ' n' → logprob: -9.535265922546387
    8. ',' → logprob: -9.910265922546387
    9. '   ' → logprob: -10.035265922546387
    10. '```' → logprob: -10.160265922546387

Token 222: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.006327147129923105
    2. '       ' → logprob: -5.631327152252197
    3. ' if' → logprob: -6.131327152252197
    4. 'inv' → logprob: -8.256326675415039
    5. 'return' → logprob: -9.256326675415039
    6. 'n' → logprob: -9.881326675415039
    7. 'inverse' → logprob: -9.881326675415039
    8. 'den' → logprob: -10.756326675415039
    9. 'numer' → logprob: -11.006326675415039
    10. '   ' → logprob: -11.006326675415039

Token 223: ' n' (ID: 297)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.16029246151447296
    2. 'k' → logprob: -1.9102925062179565
    3. ' n' → logprob: -9.785292625427246
    4. ' not' → logprob: -12.285292625427246
    5. 'n' → logprob: -12.910292625427246
    6. '(k' → logprob: -13.160292625427246
    7. '	k' → logprob: -14.160292625427246
    8. ' (' → logprob: -14.285292625427246
    9. '   ' → logprob: -14.660292625427246
    10. '(' → logprob: -15.535292625427246

Token 224: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -7.350386295001954e-05
    2. '<' → logprob: -10.500073432922363
    3. ' <' → logprob: -10.625073432922363
    4. '_' → logprob: -11.125073432922363
    5. '<Value' → logprob: -13.125073432922363
    6. '<n' → logprob: -13.625073432922363
    7. '_VALUE' → logprob: -13.625073432922363
    8. 'value' → logprob: -13.875073432922363
    9. '_val' → logprob: -14.625073432922363
    10. '   ' → logprob: -15.875073432922363

Token 225: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.31646111607551575
    2. ' <' → logprob: -1.3164610862731934
    3. '<n' → logprob: -5.941461086273193
    4. '<|end|>' → logprob: -8.191461563110352
    5. '<int' → logprob: -9.941461563110352
    6. '[' → logprob: -10.066461563110352
    7. ')<' → logprob: -10.941461563110352
    8. '<class' → logprob: -11.066461563110352
    9. '<len' → logprob: -11.316461563110352
    10. '<num' → logprob: -11.441461563110352

Token 226: ' ' (ID: 220)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.026353362947702408
    2. '0' → logprob: -3.651353359222412
    3. ' k' → logprob: -9.90135383605957
    4. ' ' → logprob: -12.77635383605957
    5. '	k' → logprob: -16.90135383605957
    6. '   ' → logprob: -17.52635383605957
    7. '1' → logprob: -17.83885383605957
    8. '```' → logprob: -17.96385383605957
    9. '=k' → logprob: -19.15135383605957
    10. '           ' → logprob: -19.15135383605957

Token 227: '0' (ID: 15)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.07889264822006226
    2. '0' → logprob: -2.578892707824707
    3. ' k' → logprob: -13.078892707824707
    4. ' ' → logprob: -14.703892707824707
    5. '1' → logprob: -16.20389175415039
    6. '	k' → logprob: -16.57889175415039
    7. '```' → logprob: -17.32889175415039
    8. '   ' → logprob: -17.64139175415039
    9. '000' → logprob: -17.89139175415039
    10. '=' → logprob: -18.07889175415039

Token 228: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0011921331752091646
    2. 'or' → logprob: -6.751192092895508
    3. '<|end|>' → logprob: -11.001192092895508
    4. '       ' → logprob: -13.376192092895508
    5. ' ' → logprob: -13.626192092895508
    6. ')' → logprob: -14.376192092895508
    7. '	or' → logprob: -14.376192092895508
    8. ':' → logprob: -14.751192092895508
    9. '        ' → logprob: -15.376192092895508
    10. '<|end|>' → logprob: -15.376192092895508

Token 229: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.033953070640563965
    2. ' k' → logprob: -3.4089531898498535
    3. 'n' → logprob: -8.283952713012695
    4. ' n' → logprob: -9.908952713012695
    5. '   ' → logprob: -13.658952713012695
    6. ' not' → logprob: -14.408952713012695
    7. 'not' → logprob: -14.658952713012695
    8. 'or' → logprob: -14.783952713012695
    9. ' or' → logprob: -14.783952713012695
    10. ' ' → logprob: -14.908952713012695

Token 230: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -1.306760805164231e-05
    2. '>' → logprob: -12.37501335144043
    3. '_' → logprob: -12.62501335144043
    4. '<' → logprob: -12.75001335144043
    5. '_VALUE' → logprob: -13.87501335144043
    6. 'value' → logprob: -14.00001335144043
    7. ' <' → logprob: -16.12501335144043
    8. ' >' → logprob: -16.12501335144043
    9. '_Value' → logprob: -16.12501335144043
    10. '```' → logprob: -16.25001335144043

Token 231: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.2899108827114105
    2. '>' → logprob: -1.664910912513733
    3. ' <' → logprob: -3.4149107933044434
    4. '<' → logprob: -3.5399107933044434
    5. ' or' → logprob: -8.289911270141602
    6. '<|end|>' → logprob: -8.789911270141602
    7. ' ' → logprob: -9.664911270141602
    8. '```' → logprob: -11.039911270141602
    9. 'or' → logprob: -11.164911270141602
    10. ' >
' → logprob: -11.289911270141602

Token 232: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020401719666551799
    2. ' ' → logprob: -8.500204086303711
    3. 'or' → logprob: -15.000204086303711
    4. ' or' → logprob: -15.625204086303711
    5. 'k' → logprob: -16.87520408630371
    6. '۰' → logprob: -17.06270408630371
    7. '<|end|>' → logprob: -17.93770408630371
    8. '```' → logprob: -18.37520408630371
    9. '1' → logprob: -18.43770408630371
    10. ' k' → logprob: -19.00020408630371

Token 233: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.101369894575328e-05
    2. ' ' → logprob: -9.500081062316895
    3. 'or' → logprob: -12.250081062316895
    4. ' or' → logprob: -14.500081062316895
    5. 'k' → logprob: -14.625081062316895
    6. '=' → logprob: -16.250080108642578
    7. '```' → logprob: -16.625080108642578
    8. '1' → logprob: -17.312580108642578
    9. '   ' → logprob: -17.687580108642578
    10. '
' → logprob: -17.875080108642578

Token 234: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0011395039036870003
    2. 'or' → logprob: -6.8761396408081055
    3. '<|end|>' → logprob: -9.251139640808105
    4. '	or' → logprob: -12.626139640808105
    5. '<|end|>' → logprob: -12.626139640808105
    6. '       ' → logprob: -12.751139640808105
    7. ',' → logprob: -15.501139640808105
    8. '           ' → logprob: -15.501139640808105
    9. ':' → logprob: -15.626139640808105
    10. ' ' → logprob: -15.751139640808105

Token 235: ' n' (ID: 297)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.016710780560970306
    2. ' k' → logprob: -4.1417107582092285
    3. 'n' → logprob: -7.3917107582092285
    4. ' n' → logprob: -9.766711235046387
    5. '   ' → logprob: -13.766711235046387
    6. '           ' → logprob: -14.891711235046387
    7. '       ' → logprob: -15.391711235046387
    8. '	k' → logprob: -15.641711235046387
    9. ' ' → logprob: -16.07921028137207
    10. '```' → logprob: -16.20421028137207

Token 236: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -1.3856492842023727e-06
    2. 'value' → logprob: -14.500000953674316
    3. '>' → logprob: -15.250000953674316
    4. '_' → logprob: -15.625000953674316
    5. '_VALUE' → logprob: -15.625000953674316
    6. 'Value' → logprob: -16.375001907348633
    7. '_Value' → logprob: -17.250001907348633
    8. '<' → logprob: -17.625001907348633
    9. '_val' → logprob: -18.375001907348633
    10. '-value' → logprob: -18.375001907348633

Token 237: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.252580851316452
    2. ' <' → logprob: -1.5025808811187744
    3. '<n' → logprob: -8.002580642700195
    4. '<int' → logprob: -10.127580642700195
    5. '<num' → logprob: -10.127580642700195
    6. '<|end|>' → logprob: -10.127580642700195
    7. '<len' → logprob: -10.377580642700195
    8. '<Token' → logprob: -10.877580642700195
    9. '<size' → logprob: -11.127580642700195
    10. '<data' → logprob: -11.502580642700195

Token 238: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0002614550176076591
    2. ' k' → logprob: -8.250261306762695
    3. '	k' → logprob: -17.000261306762695
    4. '=k' → logprob: -17.750261306762695
    5. '   ' → logprob: -18.375261306762695
    6. '{k' → logprob: -18.750261306762695
    7. '```' → logprob: -18.875261306762695
    8. '[k' → logprob: -19.500261306762695
    9. '_k' → logprob: -19.625261306762695
    10. ' ' → logprob: -19.750261306762695

Token 239: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -3.03521392197581e-05
    2. 'value' → logprob: -10.750030517578125
    3. 'alue' → logprob: -11.750030517578125
    4. 'Value' → logprob: -14.625030517578125
    5. '_VALUE' → logprob: -15.750030517578125
    6. '_' → logprob: -16.375030517578125
    7. '\' → logprob: -17.000030517578125
    8. '-value' → logprob: -17.625030517578125
    9. '_Value' → logprob: -17.625030517578125
    10. 'al' → logprob: -18.875030517578125

Token 240: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10199242830276489
    2. ':
' → logprob: -2.72699236869812
    3. ' or' → logprob: -3.85199236869812
    4. ':return' → logprob: -4.726992607116699
    5. '       ' → logprob: -6.726992607116699
    6. '           ' → logprob: -8.7269926071167
    7. '):
' → logprob: -10.6019926071167
    8. '):' → logprob: -10.6019926071167
    9. '   ' → logprob: -11.3519926071167
    10. ' :' → logprob: -11.8519926071167

Token 241: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11743173748254776
    2. '       ' → logprob: -2.367431640625
    3. ':' → logprob: -5.242431640625
    4. ':return' → logprob: -5.867431640625
    5. ' return' → logprob: -6.242431640625
    6. ')' → logprob: -6.242431640625
    7. '):' → logprob: -6.492431640625
    8. '):
' → logprob: -7.117431640625
    9. ':
' → logprob: -7.367431640625
    10. 'return' → logprob: -7.617431640625

Token 242: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.11426837742328644
    2. '           ' → logprob: -2.8642683029174805
    3. ' return' → logprob: -2.9892683029174805
    4. '0' → logprob: -7.4892683029174805
    5. ':return' → logprob: -10.98926830291748
    6. '{return' → logprob: -11.23926830291748
    7. '
' → logprob: -11.48926830291748
    8. '       ' → logprob: -11.73926830291748
    9. 'raise' → logprob: -11.98926830291748
    10. '               ' → logprob: -12.61426830291748

Token 243: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006265374249778688
    2. ' ' → logprob: -7.375626564025879
    3. '   ' → logprob: -18.000625610351562
    4. '       ' → logprob: -18.375625610351562
    5. '           ' → logprob: -19.500625610351562
    6. ' ' → logprob: -19.500625610351562
    7. '```' → logprob: -20.375625610351562
    8. '
' → logprob: -20.375625610351562
    9. '۰' → logprob: -20.375625610351562
    10. '  ' → logprob: -20.625625610351562

Token 244: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '   ' → logprob: -18.75
    4. '
' → logprob: -19.875
    5. '۰' → logprob: -20.0
    6. '```' → logprob: -20.0
    7. '       ' → logprob: -21.0
    8. '000' → logprob: -21.125
    9. '00' → logprob: -21.75
    10. '           ' → logprob: -22.375

Token 245: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 246: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002737330214586109
    2. '
' → logprob: -8.750273704528809
    3. '   ' → logprob: -10.125273704528809
    4. '        
' → logprob: -10.750273704528809
    5. '```' → logprob: -10.875273704528809
    6. ',' → logprob: -11.375273704528809
    7. '<|end|>' → logprob: -12.000273704528809
    8. ')' → logprob: -12.250273704528809
    9. '	' → logprob: -13.375273704528809
    10. '           ' → logprob: -13.500273704528809

Token 247: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2736665904521942
    2. 'inv' → logprob: -1.6486666202545166
    3. 'numer' → logprob: -4.1486663818359375
    4. 'n' → logprob: -4.3986663818359375
    5. 'inverse' → logprob: -5.0236663818359375
    6. 'factor' → logprob: -5.6486663818359375
    7. 'if' (adapté à ' if') → logprob: -5.8986663818359375
    8. 'fact' → logprob: -6.5236663818359375
    9. 'from' → logprob: -6.7736663818359375
    10. 'den' → logprob: -7.1486663818359375

Token 248: ' n' (ID: 297)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.14086896181106567
    2. ' k' → logprob: -2.140868902206421
    3. 'n' → logprob: -4.765869140625
    4. ' n' → logprob: -5.265869140625
    5. 'self' → logprob: -9.265869140625
    6. ' self' → logprob: -9.890869140625
    7. '   ' → logprob: -12.703369140625
    8. '	k' → logprob: -12.703369140625
    9. '(k' → logprob: -12.890869140625
    10. '(n' → logprob: -13.078369140625

Token 249: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -8.180258191714529e-06
    2. 'value' → logprob: -12.125008583068848
    3. '==' → logprob: -14.375008583068848
    4. '_VALUE' → logprob: -14.875008583068848
    5. '_' → logprob: -15.250008583068848
    6. 'Value' → logprob: -15.375008583068848
    7. ' ==' → logprob: -16.00000762939453
    8. '_token' → logprob: -16.50000762939453
    9. '_values' → logprob: -16.50000762939453
    10. '   ' → logprob: -16.56250762939453

Token 250: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.48745855689048767
    2. '==' → logprob: -0.9874585866928101
    3. ' >' → logprob: -4.8624587059021
    4. '>' → logprob: -5.4874587059021
    5. ' >=' → logprob: -7.1124587059021
    6. '>=' → logprob: -7.9874587059021
    7. '<' → logprob: -8.987458229064941
    8. ' <' → logprob: -9.362458229064941
    9. ' <=' → logprob: -10.612458229064941
    10. '<=' → logprob: -10.987458229064941

Token 251: ' ' (ID: 220)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.07029785215854645
    2. '0' → logprob: -2.695297956466675
    3. ' k' → logprob: -8.070298194885254
    4. ' ' → logprob: -9.945298194885254
    5. 'n' → logprob: -14.820298194885254
    6. '	k' → logprob: -16.070297241210938
    7. '<|end|>' → logprob: -16.070297241210938
    8. '```' → logprob: -16.445297241210938
    9. '   ' → logprob: -17.507797241210938
    10. '"k' → logprob: -17.757797241210938

Token 252: '0' (ID: 15)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.018156498670578003
    2. '0' → logprob: -4.0181565284729
    3. ' k' → logprob: -12.018156051635742
    4. ' ' → logprob: -14.768156051635742
    5. 'n' → logprob: -17.393156051635742
    6. '	k' → logprob: -17.518156051635742
    7. '   ' → logprob: -18.018156051635742
    8. '```' → logprob: -18.268156051635742
    9. '{k' → logprob: -19.143156051635742
    10. '1' → logprob: -19.580656051635742

Token 253: ' or' (ID: 503)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.09221827238798141
    2. 'and' → logprob: -2.8422181606292725
    3. ' or' → logprob: -3.7172181606292725
    4. ':' → logprob: -5.967218399047852
    5. ':
' → logprob: -6.467218399047852
    6. '       ' → logprob: -6.967218399047852
    7. ':return' → logprob: -8.217218399047852
    8. 'or' → logprob: -9.967218399047852
    9. '           ' → logprob: -10.092218399047852
    10. '   ' → logprob: -10.092218399047852

Token 254: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.004348109941929579
    2. ' k' → logprob: -5.504348278045654
    3. 'n' → logprob: -8.254347801208496
    4. ' n' → logprob: -11.629347801208496
    5. '	k' → logprob: -15.004347801208496
    6. '(k' → logprob: -16.879348754882812
    7. '{k' → logprob: -17.004348754882812
    8. '   ' → logprob: -17.004348754882812
    9. ' ' → logprob: -17.379348754882812
    10. '(n' → logprob: -17.691848754882812

Token 255: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -6.2729995988775045e-06
    2. '==' → logprob: -13.125006675720215
    3. '_VALUE' → logprob: -13.625006675720215
    4. 'value' → logprob: -13.625006675720215
    5. '_' → logprob: -14.625006675720215
    6. ' ==' → logprob: -14.750006675720215
    7. '_values' → logprob: -15.375006675720215
    8. 'Value' → logprob: -15.875006675720215
    9. '_Value' → logprob: -15.875006675720215
    10. '   ' → logprob: -16.1250057220459

Token 256: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.38707423210144043
    2. ' ==' → logprob: -1.1370742321014404
    3. ' in' → logprob: -8.76207447052002
    4. ' ' → logprob: -10.88707447052002
    5. '0' → logprob: -11.26207447052002
    6. '<=' → logprob: -12.26207447052002
    7. '=' → logprob: -12.88707447052002
    8. ' <=' → logprob: -12.88707447052002
    9. 'in' → logprob: -13.63707447052002
    10. ')==' → logprob: -13.88707447052002

Token 257: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003361774142831564
    2. ' ' → logprob: -8.000336647033691
    3. 'k' → logprob: -15.187836647033691
    4. '```' → logprob: -16.625335693359375
    5. '   ' → logprob: -16.687835693359375
    6. '1' → logprob: -16.812835693359375
    7. '۰' → logprob: -17.000335693359375
    8. 'n' → logprob: -17.437835693359375
    9. ' k' → logprob: -17.562835693359375
    10. '  ' → logprob: -18.312835693359375

Token 258: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.967624019831419e-05
    2. ' ' → logprob: -9.750060081481934
    3. '1' → logprob: -14.812560081481934
    4. 'k' → logprob: -15.562560081481934
    5. '   ' → logprob: -15.625060081481934
    6. '```' → logprob: -16.000059127807617
    7. '۰' → logprob: -17.187559127807617
    8. ')' → logprob: -17.375059127807617
    9. '  ' → logprob: -18.000059127807617
    10. '...' → logprob: -18.062559127807617

Token 259: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6674458384513855
    2. ':
' → logprob: -0.7924458384513855
    3. ' or' → logprob: -3.5424458980560303
    4. '       ' → logprob: -5.917445659637451
    5. ':return' → logprob: -6.292445659637451
    6. '           ' → logprob: -7.417445659637451
    7. '):
' → logprob: -10.29244613647461
    8. '   ' → logprob: -10.41744613647461
    9. ':
' → logprob: -10.66744613647461
    10. ' and' → logprob: -10.79244613647461

Token 260: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001718496554531157
    2. '       ' → logprob: -7.001718521118164
    3. '<|end|>' → logprob: -8.376718521118164
    4. ',' → logprob: -8.501718521118164
    5. ' return' → logprob: -9.001718521118164
    6. '<|end|>' → logprob: -9.751718521118164
    7. '	       ' → logprob: -10.126718521118164
    8. ':' → logprob: -10.626718521118164
    9. ':
' → logprob: -10.751718521118164
    10. 'return' → logprob: -11.001718521118164

Token 261: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4802995026111603
    2. ' return' → logprob: -1.230299472808838
    3. '1' → logprob: -2.605299472808838
    4. '           ' → logprob: -4.230299472808838
    5. '       ' → logprob: -8.355299949645996
    6. ' ' → logprob: -8.480299949645996
    7. '	return' → logprob: -8.605299949645996
    8. '   ' → logprob: -9.355299949645996
    9. ':return' → logprob: -11.105299949645996
    10. '0' → logprob: -11.855299949645996

Token 262: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0021852378267794847
    2. ' ' → logprob: -6.127185344696045
    3. '   ' → logprob: -16.377185821533203
    4. '       ' → logprob: -18.877185821533203
    5. ' ' → logprob: -19.877185821533203
    6. '  ' → logprob: -20.377185821533203
    7. '۱' → logprob: -20.377185821533203
    8. '
' → logprob: -20.502185821533203
    9. '１' → logprob: -20.939685821533203
    10. '```' → logprob: -21.064685821533203

Token 263: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -18.375001907348633
    4. '```' → logprob: -20.250001907348633
    5. '
' → logprob: -20.375001907348633
    6. '       ' → logprob: -20.875001907348633
    7. '۱' → logprob: -21.125001907348633
    8. 'def' → logprob: -21.500001907348633
    9. '0' → logprob: -21.625001907348633
    10. 'int' → logprob: -22.000001907348633

Token 264: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43890947103500366
    2. '<|end|>' → logprob: -1.0639095306396484
    3. '<|end|>' → logprob: -5.813909530639648
    4. ')' → logprob: -6.313909530639648
    5. '   ' → logprob: -6.563909530639648
    6. ',' → logprob: -7.188909530639648
    7. '\n' → logprob: -7.313909530639648
    8. '        
' → logprob: -7.688909530639648
    9. '.' → logprob: -8.313909530639648
    10. '	' → logprob: -8.438909530639648

Token 265: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001721934968372807
    2. '
' → logprob: -10.00017261505127
    3. '        
' → logprob: -10.12517261505127
    4. ',' → logprob: -10.37517261505127
    5. '   ' → logprob: -10.62517261505127
    6. '<|end|>' → logprob: -11.75017261505127
    7. 'return' → logprob: -12.12517261505127
    8. '    
' → logprob: -13.12517261505127
    9. 'import' → logprob: -13.25017261505127
    10. ' return' → logprob: -13.25017261505127

Token 266: ' numerator' (ID: 149054)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6575023531913757
    2. 'inv' → logprob: -0.9075023531913757
    3. 'numer' → logprob: -3.5325024127960205
    4. 'inverse' → logprob: -4.157502174377441
    5. 'from' → logprob: -4.657502174377441
    6. 'n' → logprob: -4.657502174377441
    7. 'den' → logprob: -5.032502174377441
    8. 'factor' → logprob: -5.782502174377441
    9. 'k' → logprob: -6.532502174377441
    10. 'fact' → logprob: -6.907502174377441

Token 267: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0076065086759626865
    2. '=' → logprob: -4.882606506347656
    3. ',' → logprob: -15.632606506347656
    4. '    ' → logprob: -16.632606506347656
    5. '=self' → logprob: -17.257606506347656
    6. '	' → logprob: -17.382606506347656
    7. ' ' → logprob: -17.632606506347656
    8. '   ' → logprob: -18.257606506347656
    9. '_tokens' → logprob: -18.257606506347656
    10. '=n' → logprob: -18.382606506347656

Token 268: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0015106932260096073
    2. ' self' → logprob: -6.5015106201171875
    3. '(self' → logprob: -12.251510620117188
    4. '       ' → logprob: -12.626510620117188
    5. '           ' → logprob: -16.126510620117188
    6. '	self' → logprob: -16.251510620117188
    7. '   ' → logprob: -16.751510620117188
    8. '=self' → logprob: -17.126510620117188
    9. '[self' → logprob: -17.626510620117188
    10. ' ' → logprob: -19.001510620117188

Token 269: '.factor' (ID: 196244)
  Prédit: '.factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.factor' → logprob: -4.704065213445574e-05
    2. 'factor' → logprob: -10.250046730041504
    3. '.' → logprob: -11.875046730041504
    4. '.fact' → logprob: -13.125046730041504
    5. '.fac' → logprob: -13.500046730041504
    6. ' .' → logprob: -13.875046730041504
    7. '_factor' → logprob: -16.75004768371582
    8. ' factorial' → logprob: -17.00004768371582
    9. '.com' → logprob: -17.87504768371582
    10. '   ' → logprob: -18.00004768371582

Token 270: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -2.2200749754119897e-06
    2. 'al' → logprob: -14.125001907348633
    3. 'ialize' → logprob: -14.750001907348633
    4. 'rial' → logprob: -15.250001907348633
    5. 'ials' → logprob: -15.500001907348633
    6. 'ialist' → logprob: -15.750001907348633
    7. 'orial' → logprob: -16.375001907348633
    8. ' factorial' → logprob: -16.750001907348633
    9. 'factor' → logprob: -16.875001907348633
    10. 'IAL' → logprob: -17.375001907348633

Token 271: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.935296834039036e-06
    2. '[n' → logprob: -13.25000286102295
    3. 'list' → logprob: -14.50000286102295
    4. '[' → logprob: -16.000003814697266
    5. 'self' → logprob: -16.000003814697266
    6. 'List' → logprob: -16.375003814697266
    7. 's' → logprob: -16.625003814697266
    8. '[self' → logprob: -17.125003814697266
    9. '[_' → logprob: -17.125003814697266
    10. 'n' → logprob: -17.250003814697266

Token 272: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.9361264946837764e-07
    2. 'n' → logprob: -16.875
    3. '[' → logprob: -17.125
    4. ' [' → logprob: -19.625
    5. '[
' → logprob: -21.625
    6. '	n' → logprob: -21.875
    7. '(n' → logprob: -22.625
    8. '   ' → logprob: -23.375
    9. '[m' → logprob: -23.875
    10. '```' → logprob: -24.0

Token 273: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -1.1472419600977446e-06
    2. 'alue' → logprob: -14.125000953674316
    3. 'value' → logprob: -14.750000953674316
    4. '_VALUE' → logprob: -17.125001907348633
    5. '_val' → logprob: -18.750001907348633
    6. '_Value' → logprob: -19.000001907348633
    7. '_' → logprob: -19.250001907348633
    8. '-value' → logprob: -19.625001907348633
    9. 'Value' → logprob: -19.750001907348633
    10. 'o' → logprob: -20.000001907348633

Token 274: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004151649307459593
    2. ']
' → logprob: -5.504151821136475
    3. ']%' → logprob: -9.629151344299316
    4. ']
' → logprob: -12.504151344299316
    5. ']

' → logprob: -13.504151344299316
    6. ' ]' → logprob: -13.629151344299316
    7. '       ' → logprob: -14.504151344299316
    8. '   ' → logprob: -15.629151344299316
    9. 'def' → logprob: -16.129152297973633
    10. '],' → logprob: -16.879152297973633

Token 275: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15120559930801392
    2. '<|end|>' → logprob: -2.401205539703369
    3. '
' → logprob: -3.901205539703369
    4. '%' → logprob: -4.151205539703369
    5. '        
' → logprob: -6.276205539703369
    6. ')' → logprob: -6.276205539703369
    7. '   ' → logprob: -6.401205539703369
    8. '\n' → logprob: -6.776205539703369
    9. '<|end|>' → logprob: -6.776205539703369
    10. '```' → logprob: -6.901205539703369

Token 276: ' denominator' (ID: 101279)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.3548240661621094
    2. ' denominator' → logprob: -1.3548240661621094
    3. '       ' → logprob: -3.2298240661621094
    4. 'from' → logprob: -7.354824066162109
    5. ' from' → logprob: -9.22982406616211
    6. 'inverse' → logprob: -9.22982406616211
    7. ' den' → logprob: -9.35482406616211
    8. ' denom' → logprob: -9.35482406616211
    9. 'def' → logprob: -10.72982406616211
    10. '_den' → logprob: -11.22982406616211

Token 277: '_k' (ID: 11637)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.251935213804245
    2. '=' → logprob: -1.5019352436065674
    3. '_inv' → logprob: -12.376935005187988
    4. '_inverse' → logprob: -14.126935005187988
    5. '=self' → logprob: -15.001935005187988
    6. 'inv' → logprob: -15.626935005187988
    7. 'inverse' → logprob: -15.876935005187988
    8. ' =
' → logprob: -16.126935958862305
    9. '   ' → logprob: -16.501935958862305
    10. '=
' → logprob: -16.626935958862305

Token 278: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47587689757347107
    2. ' =' → logprob: -0.9758769273757935
    3. '_value' → logprob: -6.475876808166504
    4. '_inv' → logprob: -9.350876808166504
    5. '=k' → logprob: -9.725876808166504
    6. '_inverse' → logprob: -10.100876808166504
    7. '_val' → logprob: -11.100876808166504
    8. '=self' → logprob: -11.850876808166504
    9. '_factor' → logprob: -11.975876808166504
    10. '```' → logprob: -12.100876808166504

Token 279: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023773424327373505
    2. ' self' → logprob: -3.773773431777954
    3. 'pow' → logprob: -7.898773193359375
    4. '(self' → logprob: -9.273773193359375
    5. '	self' → logprob: -10.523773193359375
    6. ' pow' → logprob: -10.648773193359375
    7. '=self' → logprob: -12.773773193359375
    8. 'factor' → logprob: -12.898773193359375
    9. '(pow' → logprob: -13.148773193359375
    10. ' ' → logprob: -13.523773193359375

Token 280: '.factor' (ID: 196244)
  Prédit: '.factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.factor' → logprob: -0.007809377275407314
    2. 'factor' → logprob: -4.882809162139893
    3. 'comb' → logprob: -9.88280963897705
    4. '.com' → logprob: -10.00780963897705
    5. '.fact' → logprob: -10.13280963897705
    6. ' factorial' → logprob: -11.63280963897705
    7. '.pow' → logprob: -11.88280963897705
    8. '_factor' → logprob: -11.88280963897705
    9. '.mod' → logprob: -12.00780963897705
    10. 'def' → logprob: -12.13280963897705

Token 281: 'ial' (ID: 563)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.689373791217804
    2. 'ial' → logprob: -1.0643737316131592
    3. 'list' → logprob: -2.814373731613159
    4. 'alist' → logprob: -3.814373731613159
    5. 'atorial' → logprob: -4.064373970031738
    6. 'ator' → logprob: -4.564373970031738
    7. '_list' → logprob: -4.564373970031738
    8. 'omial' → logprob: -5.189373970031738
    9. 'onal' → logprob: -5.439373970031738
    10. 'val' → logprob: -5.689373970031738

Token 282: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.000104616025055293
    2. 'list' → logprob: -9.875104904174805
    3. '_value' → logprob: -10.750104904174805
    4. 'ist' → logprob: -11.750104904174805
    5. 'value' → logprob: -11.875104904174805
    6. 'k' → logprob: -12.250104904174805
    7. '_factor' → logprob: -12.875104904174805
    8. 'factor' → logprob: -13.125104904174805
    9. '[k' → logprob: -13.875104904174805
    10. 'List' → logprob: -13.875104904174805

Token 283: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -4.60414821645827e-06
    2. 'k' → logprob: -12.625004768371582
    3. '[' → logprob: -14.125004768371582
    4. '(k' → logprob: -16.125003814697266
    5. ' [' → logprob: -16.250003814697266
    6. '[
' → logprob: -16.750003814697266
    7. '[self' → logprob: -17.000003814697266
    8. '{k' → logprob: -17.125003814697266
    9. '[n' → logprob: -17.250003814697266
    10. '
' → logprob: -17.375003814697266

Token 284: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -4.60414821645827e-06
    2. 'value' → logprob: -12.500004768371582
    3. 'Value' → logprob: -14.625004768371582
    4. '_VALUE' → logprob: -15.500004768371582
    5. '_Value' → logprob: -16.625003814697266
    6. '-value' → logprob: -17.750003814697266
    7. 'alue' → logprob: -17.875003814697266
    8. '_val' → logprob: -18.625003814697266
    9. '_k' → logprob: -18.875003814697266
    10. '$value' → logprob: -19.125003814697266

Token 285: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012594294734299183
    2. ']
' → logprob: -4.387594223022461
    3. ']%' → logprob: -10.012594223022461
    4. ']
' → logprob: -11.262594223022461
    5. ']

' → logprob: -11.762594223022461
    6. 'def' → logprob: -12.387594223022461
    7. '
' → logprob: -12.637594223022461
    8. ' ]' → logprob: -13.012594223022461
    9. '   ' → logprob: -13.137594223022461
    10. ']*' → logprob: -13.637594223022461

Token 286: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04898076131939888
    2. '**' → logprob: -3.798980712890625
    3. '<|end|>' → logprob: -5.298980712890625
    4. '```' → logprob: -5.423980712890625
    5. '   ' → logprob: -5.923980712890625
    6. '        
' → logprob: -6.048980712890625
    7. ')' → logprob: -6.923980712890625
    8. 'pow' → logprob: -6.923980712890625
    9. '_inverse' → logprob: -7.173980712890625
    10. '*' → logprob: -7.298980712890625

Token 287: ' denominator' (ID: 101279)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.003424850758165121
    2. ' denominator' → logprob: -6.003424644470215
    3. 'from' → logprob: -7.628424644470215
    4. 'inverse' → logprob: -8.628424644470215
    5. 'pow' → logprob: -9.253424644470215
    6. '       ' → logprob: -9.753424644470215
    7. 'inv' → logprob: -10.253424644470215
    8. 'return' → logprob: -10.253424644470215
    9. 'def' → logprob: -10.753424644470215
    10. 'import' → logprob: -11.878424644470215

Token 288: '_n' (ID: 2170)
  Prédit: '_inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.5101706981658936
    2. '_inverse' → logprob: -1.3851706981658936
    3. '_k' → logprob: -2.1351706981658936
    4. ' =' → logprob: -4.010170936584473
    5. '_n' → logprob: -4.760170936584473
    6. '=' → logprob: -5.885170936584473
    7. '_' → logprob: -7.385170936584473
    8. '_value' → logprob: -7.760170936584473
    9. 'inverse' → logprob: -8.385170936584473
    10. '_factor' → logprob: -9.385170936584473

Token 289: '_minus' (ID: 101055)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -8.077528764260933e-05
    2. ' =' → logprob: -10.625081062316895
    3. '_minus' → logprob: -11.000081062316895
    4. 'value' → logprob: -11.125081062316895
    5. ' -' → logprob: -11.875081062316895
    6. '```' → logprob: -12.500081062316895
    7. 'Value' → logprob: -13.000081062316895
    8. '=' → logprob: -13.125081062316895
    9. ']' → logprob: -13.625081062316895
    10. '-value' → logprob: -13.875081062316895

Token 290: '_k' (ID: 11637)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -6.392202976712724e-06
    2. '_k' → logprob: -13.000006675720215
    3. ' k' → logprob: -13.125006675720215
    4. '[k' → logprob: -13.500006675720215
    5. 'n' → logprob: -15.000006675720215
    6. '_value' → logprob: -15.875006675720215
    7. '```' → logprob: -16.3750057220459
    8. '(k' → logprob: -16.5000057220459
    9. '{k' → logprob: -17.0000057220459
    10. '[n' → logprob: -17.6250057220459

Token 291: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326204538345337
    2. ' =' → logprob: -1.3132619857788086
    3. '=
' → logprob: -15.813261985778809
    4. ' =
' → logprob: -16.688262939453125
    5. ']' → logprob: -16.688262939453125
    6. '=self' → logprob: -16.938262939453125
    7. ' ' → logprob: -17.188262939453125
    8. ',' → logprob: -17.563262939453125
    9. '=

' → logprob: -17.813262939453125
    10. '```' → logprob: -18.188262939453125

Token 292: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.061972394585609436
    2. ' self' → logprob: -2.8119723796844482
    3. '       ' → logprob: -13.686972618103027
    4. '(self' → logprob: -13.686972618103027
    5. '[self' → logprob: -13.686972618103027
    6. '	self' → logprob: -14.061972618103027
    7. '=self' → logprob: -15.686972618103027
    8. '   ' → logprob: -16.18697166442871
    9. '           ' → logprob: -16.31197166442871
    10. '
' → logprob: -16.56197166442871

Token 293: '.factor' (ID: 196244)
  Prédit: '.factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.factor' → logprob: -0.0036100437864661217
    2. 'factor' → logprob: -5.628610134124756
    3. 'self' → logprob: -11.878609657287598
    4. ' factorial' → logprob: -13.878609657287598
    5. '.fact' → logprob: -14.253609657287598
    6. '_factor' → logprob: -15.003609657287598
    7. '.fac' → logprob: -15.128609657287598
    8. '
' → logprob: -15.378609657287598
    9. '.' → logprob: -15.503609657287598
    10. '-factor' → logprob: -16.628610610961914

Token 294: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.0008675140561535954
    2. '_list' → logprob: -7.6258673667907715
    3. 'al' → logprob: -8.00086784362793
    4. 'omial' → logprob: -11.00086784362793
    5. 'orial' → logprob: -11.75086784362793
    6. 'cial' → logprob: -12.00086784362793
    7. 'rial' → logprob: -13.00086784362793
    8. 'ialist' → logprob: -13.00086784362793
    9. '[' → logprob: -13.25086784362793
    10. 'ional' → logprob: -13.62586784362793

Token 295: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -8.125210297293961e-05
    2. 'list' → logprob: -10.125081062316895
    3. 'value' → logprob: -10.625081062316895
    4. 'self' → logprob: -11.750081062316895
    5. 'n' → logprob: -12.500081062316895
    6. '_value' → logprob: -13.250081062316895
    7. 'List' → logprob: -13.875081062316895
    8. 'factor' → logprob: -13.875081062316895
    9. '[n' → logprob: -14.750081062316895
    10. 'max' → logprob: -15.500081062316895

Token 296: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -2.5776860184123507e-06
    2. 'n' → logprob: -13.50000286102295
    3. '[
' → logprob: -14.62500286102295
    4. '[' → logprob: -14.75000286102295
    5. ' [' → logprob: -15.37500286102295
    6. '   ' → logprob: -18.000001907348633
    7. '(n' → logprob: -18.250001907348633
    8. '```' → logprob: -18.750001907348633
    9. '[(' → logprob: -19.875001907348633
    10. '[[' → logprob: -20.000001907348633

Token 297: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -9.491498531133402e-06
    2. 'value' → logprob: -11.625009536743164
    3. '_VALUE' → logprob: -15.500009536743164
    4. 'alue' → logprob: -16.250009536743164
    5. 'Value' → logprob: -16.375009536743164
    6. ']' → logprob: -17.875009536743164
    7. 'n' → logprob: -18.000009536743164
    8. '-value' → logprob: -19.500009536743164
    9. '_Value' → logprob: -19.500009536743164
    10. '_index' → logprob: -19.875009536743164

Token 298: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3992449939250946
    2. ' -' → logprob: -1.149245023727417
    3. '-k' → logprob: -4.399244785308838
    4. '-n' → logprob: -12.274245262145996
    5. 'minus' → logprob: -13.399245262145996
    6. '-
' → logprob: -13.524245262145996
    7. ' ' → logprob: -14.274245262145996
    8. '_minus' → logprob: -14.649245262145996
    9. '[k' → logprob: -14.899245262145996
    10. '[' → logprob: -14.899245262145996

Token 299: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.0206720617134124e-05
    2. ' k' → logprob: -11.50001049041748
    3. '_k' → logprob: -17.125009536743164
    4. '	k' → logprob: -17.375009536743164
    5. '{k' → logprob: -19.000009536743164
    6. ' к' → logprob: -19.125009536743164
    7. 'к' → logprob: -19.250009536743164
    8. '   ' → logprob: -19.375009536743164
    9. 'value' → logprob: -19.375009536743164
    10. ' ' → logprob: -19.750009536743164

Token 300: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -2.696889623621246e-06
    2. 'value' → logprob: -13.12500286102295
    3. '_k' → logprob: -15.50000286102295
    4. ']' → logprob: -16.000001907348633
    5. 'k' → logprob: -16.000001907348633
    6. '_VALUE' → logprob: -16.375001907348633
    7. ']_' → logprob: -16.375001907348633
    8. '_index' → logprob: -16.625001907348633
    9. 'Value' → logprob: -17.750001907348633
    10. '_key' → logprob: -17.875001907348633

Token 301: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00241572642698884
    2. ']
' → logprob: -6.252415657043457
    3. ')' → logprob: -8.127415657043457
    4. '       ' → logprob: -9.377415657043457
    5. ')]' → logprob: -10.502415657043457
    6. ']%' → logprob: -10.627415657043457
    7. ' ]' → logprob: -11.127415657043457
    8. ']
' → logprob: -11.752415657043457
    9. '   ' → logprob: -11.877415657043457
    10. '<|end|>' → logprob: -12.002415657043457

Token 302: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20482923090457916
    2. ')' → logprob: -2.079829216003418
    3. '   ' → logprob: -3.579829216003418
    4. '<|end|>' → logprob: -4.579829216003418
    5. '```' → logprob: -4.579829216003418
    6. '
' → logprob: -6.204829216003418
    7. ' return' → logprob: -6.204829216003418
    8. 'return' → logprob: -6.329829216003418
    9. ')%' → logprob: -7.204829216003418
    10. ')return' → logprob: -7.579829216003418

Token 303: ' return' (ID: 622)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.4135439097881317
    2. 'inverse' → logprob: -2.038543939590454
    3. 'den' → logprob: -2.538543939590454
    4. '       ' → logprob: -2.538543939590454
    5. 'from' → logprob: -3.538543939590454
    6. 'return' (adapté à ' return') → logprob: -3.913543939590454
    7. 'def' → logprob: -8.163543701171875
    8. ' from' → logprob: -8.413543701171875
    9. 'mod' → logprob: -8.413543701171875
    10. ' inv' → logprob: -8.413543701171875

Token 304: ' (
' (ID: 4112)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.4167661964893341
    2. ' (' → logprob: -1.1667661666870117
    3. ' numerator' → logprob: -3.7917661666870117
    4. 'numer' → logprob: -5.041766166687012
    5. '(
' → logprob: -8.666766166687012
    6. '(' → logprob: -9.041766166687012
    7. 'n' → logprob: -9.791766166687012
    8. ' numer' → logprob: -10.979266166687012
    9. ' (
' → logprob: -11.416766166687012
    10. '   ' → logprob: -11.854266166687012

Token 305: '           ' (ID: 352)
  Prédit: ' numerator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' numerator' → logprob: -0.4344734847545624
    2. 'numer' → logprob: -1.0594735145568848
    3. '(n' → logprob: -5.184473514556885
    4. ' (' → logprob: -9.559473037719727
    5. 'n' → logprob: -10.559473037719727
    6. '   ' → logprob: -11.684473037719727
    7. '       ' → logprob: -11.809473037719727
    8. ' numer' → logprob: -11.934473037719727
    9. 'umerator' → logprob: -11.934473037719727
    10. 'Numer' → logprob: -12.059473037719727

Token 306: ' numerator' (ID: 149054)
  Prédit: 'numer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numer' → logprob: -0.02333480678498745
    2. ' numerator' → logprob: -3.8983347415924072
    3. '(n' → logprob: -5.898334980010986
    4. 'n' → logprob: -10.773334503173828
    5. '   ' → logprob: -12.023334503173828
    6. 'Numer' → logprob: -12.523334503173828
    7. '           ' → logprob: -13.273334503173828
    8. 'num' → logprob: -13.398334503173828
    9. '(
' → logprob: -13.398334503173828
    10. 'umerator' → logprob: -13.398334503173828

Token 307: '
' (ID: 198)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.02325328253209591
    2. '*' → logprob: -3.7732532024383545
    3. ' *
' → logprob: -12.273253440856934
    4. '           ' → logprob: -13.023253440856934
    5. '*
' → logprob: -15.273253440856934
    6. '   ' → logprob: -15.648253440856934
    7. '**' → logprob: -16.148252487182617
    8. ' ' → logprob: -16.273252487182617
    9. '          ' → logprob: -16.398252487182617
    10. '               ' → logprob: -17.148252487182617

Token 308: '           ' (ID: 352)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.16029205918312073
    2. '*' → logprob: -1.9102920293807983
    3. ' *
' → logprob: -9.91029167175293
    4. '*
' → logprob: -11.78529167175293
    5. '           ' → logprob: -11.91029167175293
    6. '   ' → logprob: -13.16029167175293
    7. '          ' → logprob: -14.91029167175293
    8. '       ' → logprob: -15.03529167175293
    9. ' ' → logprob: -15.16029167175293
    10. '**' → logprob: -15.53529167175293

Token 309: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' (adapté à ' *') → logprob: -0.25193482637405396
    2. ' *' → logprob: -1.5019347667694092
    3. '*
' → logprob: -12.876935005187988
    4. '           ' → logprob: -13.626935005187988
    5. ' *
' → logprob: -14.251935005187988
    6. '**' → logprob: -15.126935005187988
    7. '   ' → logprob: -15.251935005187988
    8. ' ' → logprob: -16.126934051513672
    9. '*object' → logprob: -16.376934051513672
    10. '       ' → logprob: -16.501934051513672

Token 310: ' self' (ID: 1051)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.00027301779482513666
    2. ' pow' → logprob: -8.250272750854492
    3. '(pow' → logprob: -11.375272750854492
    4. '   ' → logprob: -16.250272750854492
    5. 'self' → logprob: -16.250272750854492
    6. '       ' → logprob: -17.000272750854492
    7. '_pow' → logprob: -17.125272750854492
    8. 'power' → logprob: -17.625272750854492
    9. 'Pow' → logprob: -18.000272750854492
    10. '           ' → logprob: -18.250272750854492

Token 311: '.mod' (ID: 19046)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.22110924124717712
    2. '.pow' → logprob: -1.8461092710494995
    3. '.factor' → logprob: -3.34610915184021
    4. '.mod' → logprob: -6.846109390258789
    5. 'factor' → logprob: -7.096109390258789
    6. 'def' → logprob: -7.346109390258789
    7. '_pow' → logprob: -7.471109390258789
    8. 'mod' → logprob: -7.596109390258789
    9. '.inverse' → logprob: -7.596109390258789
    10. '.power' → logprob: -8.221109390258789

Token 312: 'ular' (ID: 1492)
  Prédit: 'ulo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulo' → logprob: -0.00010759611177491024
    2. 'olo' → logprob: -9.250107765197754
    3. 'ulu' → logprob: -13.000107765197754
    4. 'ular' → logprob: -13.250107765197754
    5. 'culo' → logprob: -13.250107765197754
    6. 'ule' → logprob: -13.625107765197754
    7. 'ulos' → logprob: -13.875107765197754
    8. 'ul' → logprob: -14.000107765197754
    9. ' modulo' → logprob: -14.750107765197754
    10. 'pow' → logprob: -15.125107765197754

Token 313: '_inverse' (ID: 188797)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.8824408054351807
    2. '_pow' → logprob: -1.0074408054351807
    3. '_inverse' → logprob: -1.8824408054351807
    4. '_inv' → logprob: -3.2574408054351807
    5. '_factor' → logprob: -4.132440567016602
    6. '_in' → logprob: -5.757440567016602
    7. '_power' → logprob: -6.132440567016602
    8. ' pow' → logprob: -6.257440567016602
    9. 'inv' → logprob: -6.882440567016602
    10. '_ex' → logprob: -7.257440567016602

Token 314: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006576312007382512
    2. '(
' → logprob: -7.500657558441162
    3. ' (' → logprob: -9.87565803527832
    4. 'den' → logprob: -10.00065803527832
    5. '(pow' → logprob: -12.37565803527832
    6. '(

' → logprob: -13.62565803527832
    7. ')' → logprob: -14.37565803527832
    8. '(
' → logprob: -14.87565803527832
    9. '((' → logprob: -15.50065803527832
    10. '```' → logprob: -15.75065803527832

Token 315: 'den' (ID: 1660)
  Prédit: 'den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.0036898592952638865
    2. '(' → logprob: -5.628689765930176
    3. ' denominator' → logprob: -9.378689765930176
    4. 'factor' → logprob: -13.503689765930176
    5. '(
' → logprob: -14.003689765930176
    6. '   ' → logprob: -14.128689765930176
    7. '       ' → logprob: -14.378689765930176
    8. '           ' → logprob: -14.503689765930176
    9. ' den' → logprob: -15.503689765930176
    10. '_den' → logprob: -15.628689765930176

Token 316: 'ominator' (ID: 96399)
  Prédit: 'ominator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ominator' → logprob: -0.0002802855451591313
    2. 'om' → logprob: -9.125280380249023
    3. 'umerator' → logprob: -9.125280380249023
    4. 'omial' → logprob: -10.500280380249023
    5. '(' → logprob: -11.875280380249023
    6. ')' → logprob: -12.000280380249023
    7. '_value' → logprob: -12.000280380249023
    8. 'value' → logprob: -13.375280380249023
    9. ' denominator' → logprob: -13.500280380249023
    10. 'omin' → logprob: -13.625280380249023

Token 317: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -4.4849443838757e-06
    2. 'k' → logprob: -13.125004768371582
    3. '[k' → logprob: -14.000004768371582
    4. '```' → logprob: -14.375004768371582
    5. '_n' → logprob: -14.750004768371582
    6. 'den' → logprob: -15.750004768371582
    7. ')' → logprob: -16.125003814697266
    8. ',k' → logprob: -16.125003814697266
    9. '[' → logprob: -17.125003814697266
    10. '
' → logprob: -17.500003814697266

Token 318: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011125932214781642
    2. ')
' → logprob: -7.751112461090088
    3. ' )' → logprob: -8.001112937927246
    4. '<|end|>' → logprob: -8.376112937927246
    5. ',' → logprob: -10.751112937927246
    6. '[' → logprob: -10.751112937927246
    7. '<|end|>' → logprob: -11.501112937927246
    8. '           ' → logprob: -11.501112937927246
    9. '[token' → logprob: -11.751112937927246
    10. '       ' → logprob: -12.001112937927246

Token 319: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19677035510540009
    2. ')' → logprob: -1.9467703104019165
    3. ' *' → logprob: -3.571770429611206
    4. '<|end|>' → logprob: -5.571770191192627
    5. '*' → logprob: -6.196770191192627
    6. ' )' → logprob: -7.696770191192627
    7. '       ' → logprob: -7.696770191192627
    8. '		' → logprob: -8.571770668029785
    9. '<|end|>' → logprob: -8.946770668029785
    10. '%' → logprob: -9.321770668029785

Token 320: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' (adapté à ' *') → logprob: -0.8462211489677429
    2. '           ' → logprob: -1.3462212085723877
    3. '%' → logprob: -1.4712212085723877
    4. ' *' → logprob: -2.5962212085723877
    5. ')' → logprob: -5.471220970153809
    6. ' %' → logprob: -6.221220970153809
    7. '       ' → logprob: -9.096220970153809
    8. ' ' → logprob: -9.846220970153809
    9. ')%' → logprob: -10.096220970153809
    10. '   ' → logprob: -10.596220970153809

Token 321: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1275554895401001
    2. ' self' → logprob: -2.1275553703308105
    3. '           ' → logprob: -7.3775553703308105
    4. '               ' → logprob: -13.752555847167969
    5. '(self' → logprob: -14.252555847167969
    6. '	self' → logprob: -16.12755584716797
    7. ' ' → logprob: -16.75255584716797
    8. '[self' → logprob: -17.50255584716797
    9. '          ' → logprob: -17.50255584716797
    10. '            ' → logprob: -17.75255584716797

Token 322: '.mod' (ID: 19046)
  Prédit: '.mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mod' → logprob: -0.00019948746194131672
    2. '.' → logprob: -9.250199317932129
    3. 'mod' → logprob: -9.750199317932129
    4. ' .' → logprob: -10.875199317932129
    5. ' modular' → logprob: -11.625199317932129
    6. '.factor' → logprob: -11.750199317932129
    7. '.modal' → logprob: -12.125199317932129
    8. '	mod' → logprob: -13.875199317932129
    9. '.mult' → logprob: -14.625199317932129
    10. '```' → logprob: -15.125199317932129

Token 323: 'ular' (ID: 1492)
  Prédit: 'ulo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ulo' → logprob: -0.00015109812375158072
    2. 'olo' → logprob: -9.750150680541992
    3. 'od' → logprob: -9.875150680541992
    4. 'odu' → logprob: -11.375150680541992
    5. 'ule' → logprob: -11.500150680541992
    6. 'ulu' → logprob: -12.500150680541992
    7. 'ul' → logprob: -12.750150680541992
    8. ' modulo' → logprob: -12.875150680541992
    9. 'o' → logprob: -13.125150680541992
    10. '   ' → logprob: -14.125150680541992

Token 324: '_inverse' (ID: 188797)
  Prédit: '_inverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inverse' → logprob: -2.3438327843905427e-05
    2. 'inverse' → logprob: -11.25002384185791
    3. '_reverse' → logprob: -12.62502384185791
    4. '_factor' → logprob: -13.25002384185791
    5. '_multiplier' → logprob: -13.50002384185791
    6. '<|end|>' → logprob: -14.12502384185791
    7. '_inv' → logprob: -14.62502384185791
    8. '_previous' → logprob: -14.75002384185791
    9. '_answer' → logprob: -15.25002384185791
    10. '.inverse' → logprob: -15.25002384185791

Token 325: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.8802491215174086e-05
    2. '(
' → logprob: -11.000028610229492
    3. ' (' → logprob: -11.625028610229492
    4. '(des' → logprob: -13.750028610229492
    5. '("("' → logprob: -14.500028610229492
    6. '(parent' → logprob: -15.500028610229492
    7. '(

' → logprob: -15.750028610229492
    8. '((' → logprob: -16.000028610229492
    9. '(dec' → logprob: -16.000028610229492
    10. '(
' → logprob: -16.125028610229492

Token 326: 'den' (ID: 1660)
  Prédit: 'den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -2.641841820150148e-05
    2. ' denominator' → logprob: -10.75002670288086
    3. '(' → logprob: -12.25002670288086
    4. '_den' → logprob: -16.87502670288086
    5. '.den' → logprob: -17.62502670288086
    6. '           ' → logprob: -18.12502670288086
    7. '                   ' → logprob: -18.25002670288086
    8. 'Den' → logprob: -18.37502670288086
    9. '               ' → logprob: -18.37502670288086
    10. '-den' → logprob: -18.50002670288086

Token 327: 'ominator' (ID: 96399)
  Prédit: 'ominator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ominator' → logprob: -5.3954463510308415e-05
    2. '_value' → logprob: -10.625054359436035
    3. 'umerator' → logprob: -10.875054359436035
    4. '(' → logprob: -13.000054359436035
    5. 'omin' → logprob: -13.500054359436035
    6. '(n' → logprob: -13.625054359436035
    7. '_factor' → logprob: -13.750054359436035
    8. 'er' → logprob: -14.125054359436035
    9. '...' → logprob: -14.625054359436035
    10. '```' → logprob: -14.625054359436035

Token 328: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.38823264837265015
    2. '_k' → logprob: -1.138232707977295
    3. '_value' → logprob: -7.138232707977295
    4. 'n' → logprob: -7.888232707977295
    5. 'k' → logprob: -9.638232231140137
    6. 'value' → logprob: -10.013232231140137
    7. ')' → logprob: -10.388232231140137
    8. '```' → logprob: -11.763232231140137
    9. '-k' → logprob: -11.888232231140137
    10. '-n' → logprob: -12.263232231140137

Token 329: '_minus' (ID: 101055)
  Prédit: '_k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.14038197696208954
    2. '_value' → logprob: -2.6403820514678955
    3. 'k' → logprob: -2.8903820514678955
    4. '-k' → logprob: -5.640381813049316
    5. '_minus' → logprob: -7.640381813049316
    6. 'value' → logprob: -10.390381813049316
    7. '*k' → logprob: -12.890381813049316
    8. ' k' → logprob: -13.390381813049316
    9. 'sk' → logprob: -13.390381813049316
    10. '_vk' → logprob: -13.390381813049316

Token 330: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.0013263145228847861
    2. 'k' → logprob: -6.626326084136963
    3. '-k' → logprob: -15.251326560974121
    4. ' k' → logprob: -15.876326560974121
    5. 'K' → logprob: -18.001325607299805
    6. ',k' → logprob: -18.001325607299805
    7. '	k' → logprob: -18.501325607299805
    8. ')' → logprob: -18.876325607299805
    9. 'к' → logprob: -18.876325607299805
    10. '{k' → logprob: -18.876325607299805

Token 331: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002549623604863882
    2. '       ' → logprob: -6.127549648284912
    3. ')%' → logprob: -8.002549171447754
    4. '   ' → logprob: -11.627549171447754
    5. '%' → logprob: -11.627549171447754
    6. ')
' → logprob: -12.127549171447754
    7. ' )' → logprob: -13.127549171447754
    8. '           ' → logprob: -13.502549171447754
    9. '))' → logprob: -13.627549171447754
    10. '```' → logprob: -14.502549171447754

Token 332: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007168909069150686
    2. '       ' → logprob: -5.257168769836426
    3. ' %' → logprob: -7.132168769836426
    4. '%' → logprob: -7.382168769836426
    5. ')%' → logprob: -7.882168769836426
    6. ' )' → logprob: -9.132168769836426
    7. '           ' → logprob: -11.007168769836426
    8. '   ' → logprob: -12.132168769836426
    9. '```' → logprob: -13.757168769836426
    10. '%n' → logprob: -14.632168769836426

Token 333: ' )' (ID: 1546)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' (adapté à ' )') → logprob: -0.015367227606475353
    2. '%' → logprob: -4.265367031097412
    3. ')%' → logprob: -6.890367031097412
    4. ' %' → logprob: -8.76536750793457
    5. '       ' → logprob: -11.14036750793457
    6. ' )' → logprob: -11.51536750793457
    7. '%)' → logprob: -13.51536750793457
    8. '   ' → logprob: -13.76536750793457
    9. '```' → logprob: -13.89036750793457
    10. '%n' → logprob: -14.26536750793457

Token 334: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.0789194256067276
    2. '%' → logprob: -2.5789194107055664
    3. '       ' → logprob: -11.453919410705566
    4. ')' → logprob: -12.203919410705566
    5. '   ' → logprob: -12.953919410705566
    6. '%n' → logprob: -12.953919410705566
    7. ')%' → logprob: -12.953919410705566
    8. '	' → logprob: -13.578919410705566
    9. '%B' → logprob: -13.578919410705566
    10. '%c' → logprob: -14.203919410705566

Token 335: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0067156096920371056
    2. ' self' → logprob: -5.006715774536133
    3. 'MOD' → logprob: -15.506715774536133
    4. '(self' → logprob: -16.506715774536133
    5. ' MOD' → logprob: -19.381715774536133
    6. '       ' → logprob: -19.756715774536133
    7. '	self' → logprob: -20.381715774536133
    8. '```' → logprob: -20.756715774536133
    9. '   ' → logprob: -21.631715774536133
    10. ' ' → logprob: -22.256715774536133

Token 336: '.mod' (ID: 19046)
  Prédit: '.mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mod' → logprob: -1.3306015716807451e-05
    2. 'mod' → logprob: -11.25001335144043
    3. '.' → logprob: -16.50001335144043
    4. '	mod' → logprob: -16.87501335144043
    5. ' .' → logprob: -17.12501335144043
    6. '.module' → logprob: -18.75001335144043
    7. '```' → logprob: -19.00001335144043
    8. 'MOD' → logprob: -19.25001335144043
    9. '.MOD' → logprob: -19.37501335144043
    10. ' mod' → logprob: -19.50001335144043

Token 337: 'ulo' (ID: 5953)
  Prédit: 'ulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulo' → logprob: -0.0032342751510441303
    2. 'ULO' → logprob: -6.378234386444092
    3. 'ule' → logprob: -6.753234386444092
    4. 'o' → logprob: -9.128233909606934
    5. 'O' → logprob: -9.378233909606934
    6. 'u' → logprob: -10.503233909606934
    7. 'od' → logprob: -10.753233909606934
    8. 'odu' → logprob: -10.878233909606934
    9. 'ulu' → logprob: -10.878233909606934
    10. 'ulus' → logprob: -11.128233909606934

Token 338: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05357153341174126
    2. '   ' → logprob: -3.0535714626312256
    3. '    
' → logprob: -5.428571701049805
    4. '  
' → logprob: -8.928571701049805
    5. '<|end|>' → logprob: -9.053571701049805
    6. '

' → logprob: -9.428571701049805
    7. '   
' → logprob: -9.928571701049805
    8. ' 
' → logprob: -10.053571701049805
    9. '
' → logprob: -10.303571701049805
    10. '	
' → logprob: -10.428571701049805

Token 339: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1427670270204544
    2. '
' → logprob: -2.1427669525146484
    3. 'def' → logprob: -5.017766952514648
    4. '    
' → logprob: -5.017766952514648
    5. ' 
' → logprob: -6.892766952514648
    6. '```' → logprob: -7.392766952514648
    7. ' def' → logprob: -8.392766952514648
    8. ' ' → logprob: -8.642766952514648
    9. '  
' → logprob: -9.142766952514648
    10. '   
' → logprob: -9.392766952514648

Token 340: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.13953065872192383
    2. '   ' → logprob: -2.139530658721924
    3. ' def' → logprob: -4.389530658721924
    4. '
' → logprob: -10.264530181884766
    5. '    
' → logprob: -10.389530181884766
    6. ' ' → logprob: -10.639530181884766
    7. '```' → logprob: -11.014530181884766
    8. '	def' → logprob: -12.014530181884766
    9. ' 
' → logprob: -13.139530181884766
    10. '  ' → logprob: -14.139530181884766

Token 341: ' permutation' (ID: 135200)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.062237899750471115
    2. ' modular' → logprob: -2.8122379779815674
    3. '_mod' → logprob: -9.062237739562988
    4. ' mod' → logprob: -9.062237739562988
    5. 'pow' → logprob: -10.437237739562988
    6. 'fast' → logprob: -12.562237739562988
    7. 'power' → logprob: -13.312237739562988
    8. '	mod' → logprob: -13.437237739562988
    9. '(mod' → logprob: -14.062237739562988
    10. 'extended' → logprob: -14.937237739562988

Token 342: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0001589618914294988
    2. '(' → logprob: -8.75015926361084
    3. 'self' → logprob: -15.75015926361084
    4. ',' → logprob: -16.250158309936523
    5. ' (' → logprob: -16.625158309936523
    6. '(
' → logprob: -16.750158309936523
    7. '   ' → logprob: -18.625158309936523
    8. ' ' → logprob: -18.750158309936523
    9. '(s' → logprob: -18.750158309936523
    10. ',self' → logprob: -18.875158309936523

Token 343: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.006060097366571426
    2. ',' → logprob: -5.2560601234436035
    3. 'self' → logprob: -7.3810601234436035
    4. '(' → logprob: -8.881059646606445
    5. ',self' → logprob: -10.131059646606445
    6. ')' → logprob: -11.006059646606445
    7. ')(' → logprob: -13.131059646606445
    8. ' self' → logprob: -13.381059646606445
    9. ' (' → logprob: -14.256059646606445
    10. '(
' → logprob: -14.381059646606445

Token 344: ' n' (ID: 297)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4050288200378418
    2. 'n' → logprob: -1.1550288200378418
    3. ' self' → logprob: -4.405028820037842
    4. ' n' → logprob: -5.155028820037842
    5. '   ' → logprob: -12.530029296875
    6. '       ' → logprob: -13.905029296875
    7. ' ' → logprob: -14.155029296875
    8. '(self' → logprob: -14.280029296875
    9. ',' → logprob: -14.405029296875
    10. '	self' → logprob: -15.155029296875

Token 345: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -6.349075556499884e-05
    2. ',' → logprob: -9.8750638961792
    3. 'value' → logprob: -12.6250638961792
    4. 'self' → logprob: -12.8750638961792
    5. '_,' → logprob: -12.8750638961792
    6. ',_' → logprob: -13.7500638961792
    7. '_val' → logprob: -14.3750638961792
    8. '   ' → logprob: -15.2500638961792
    9. '_list' → logprob: -15.3750638961792
    10. ')_' → logprob: -15.3750638961792

Token 346: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016206118743866682
    2. 'self' → logprob: -8.875162124633789
    3. ' ,' → logprob: -10.875162124633789
    4. ',self' → logprob: -13.000162124633789
    5. ' self' → logprob: -14.875162124633789
    6. ',
' → logprob: -15.500162124633789
    7. '   ' → logprob: -15.625162124633789
    8. ',n' → logprob: -16.12516212463379
    9. '       ' → logprob: -16.37516212463379
    10. '(self' → logprob: -17.62516212463379

Token 347: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0001278534036828205
    2. ' k' → logprob: -9.000127792358398
    3. 'r' → logprob: -12.375127792358398
    4. 'self' → logprob: -16.7501277923584
    5. '
' → logprob: -16.8751277923584
    6. '   ' → logprob: -17.5001277923584
    7. '```' → logprob: -17.6251277923584
    8. ' ' → logprob: -18.1251277923584
    9. '           ' → logprob: -18.2501277923584
    10. ' r' → logprob: -18.7501277923584

Token 348: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -9.014684110297821e-06
    2. '_values' → logprob: -13.125008583068848
    3. '_VALUE' → logprob: -13.250008583068848
    4. ')_' → logprob: -13.625008583068848
    5. 'value' → logprob: -13.750008583068848
    6. ')' → logprob: -14.125008583068848
    7. '_Value' → logprob: -14.500008583068848
    8. '<|end|>' → logprob: -14.500008583068848
    9. 'Value' → logprob: -15.250008583068848
    10. '```' → logprob: -15.500008583068848

Token 349: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010360694490373135
    2. '):
' → logprob: -4.7603607177734375
    3. ',' → logprob: -6.3853607177734375
    4. 'self' → logprob: -10.510360717773438
    5. '):
' → logprob: -11.635360717773438
    6. ')' → logprob: -11.760360717773438
    7. '):

' → logprob: -12.010360717773438
    8. ' ):' → logprob: -12.635360717773438
    9. '   ' → logprob: -13.385360717773438
    10. ':' → logprob: -13.510360717773438

Token 350: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04948076978325844
    2. 'n' → logprob: -4.04948091506958
    3. 'if' → logprob: -4.04948091506958
    4. ' if' → logprob: -4.79948091506958
    5. '(n' → logprob: -6.54948091506958
    6. '   ' → logprob: -6.79948091506958
    7. ',' → logprob: -6.79948091506958
    8. '(' → logprob: -8.424480438232422
    9. '```' → logprob: -8.424480438232422
    10. 'def' → logprob: -8.674480438232422

Token 351: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10252922773361206
    2. '(self' → logprob: -3.227529287338257
    3. 'self' → logprob: -3.852529287338257
    4. '(' → logprob: -4.227529048919678
    5. ' self' → logprob: -4.852529048919678
    6. '(
' → logprob: -6.227529048919678
    7. '   ' → logprob: -6.352529048919678
    8. 'n' → logprob: -6.477529048919678
    9. ' if' → logprob: -6.477529048919678
    10. ',' → logprob: -6.852529048919678

Token 352: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06360925734043121
    2. 'n' → logprob: -3.3136093616485596
    3. 'if' → logprob: -4.5636091232299805
    4. 'return' → logprob: -4.9386091232299805
    5. '"""
' → logprob: -5.8136091232299805
    6. ' if' → logprob: -6.5636091232299805
    7. '        
' → logprob: -7.3136091232299805
    8. ' n' → logprob: -7.4386091232299805
    9. '
' → logprob: -7.6886091232299805
    10. ' 
' → logprob: -7.9386091232299805

Token 353: ' Calculate' (ID: 38942)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.9022244811058044
    2. 'if' → logprob: -1.1522245407104492
    3. 'numer' → logprob: -1.9022245407104492
    4. '       ' → logprob: -2.152224540710449
    5. 'result' → logprob: -4.902224540710449
    6. 'n' → logprob: -6.152224540710449
    7. 'num' → logprob: -6.402224540710449
    8. '   ' → logprob: -7.527224540710449
    9. ' if' → logprob: -8.27722454071045
    10. 'def' → logprob: -8.52722454071045

Token 354: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5980938076972961
    2. ' n' → logprob: -1.0980937480926514
    3. '(n' → logprob: -2.3480937480926514
    4. ' (' → logprob: -4.3480939865112305
    5. '(
' → logprob: -5.8480939865112305
    6. ' self' → logprob: -6.0980939865112305
    7. 'self' → logprob: -6.2230939865112305
    8. '(' → logprob: -7.5980939865112305
    9. '(self' → logprob: -7.9730939865112305
    10. ' (
' → logprob: -8.72309398651123

Token 355: ' perm' (ID: 5961)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0032879903446882963
    2. 'choose' → logprob: -6.3782877922058105
    3. ' choose' → logprob: -7.6282877922058105
    4. 'value' → logprob: -8.378288269042969
    5. '_choose' → logprob: -8.503288269042969
    6. ' _' → logprob: -9.003288269042969
    7. '_' → logprob: -9.503288269042969
    8. '   ' → logprob: -9.503288269042969
    9. 'Value' → logprob: -10.128288269042969
    10. '!' → logprob: -10.253288269042969

Token 356: 'ute' (ID: 1331)
  Prédit: 'ute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ute' → logprob: -0.6422130465507507
    2. 'utation' → logprob: -0.7672130465507507
    3. 'utate' → logprob: -5.517212867736816
    4. '(n' → logprob: -6.267212867736816
    5. '_value' → logprob: -6.517212867736816
    6. 'utations' → logprob: -6.892212867736816
    7. 'value' → logprob: -7.767212867736816
    8. 'uation' → logprob: -8.642212867736816
    9. 'ut' → logprob: -9.017212867736816
    10. 'u' → logprob: -9.517212867736816

Token 357: ' k' (ID: 372)
  Prédit: 'ation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.3942636549472809
    2. 'utation' → logprob: -1.7692636251449585
    3. '(n' → logprob: -1.8942636251449585
    4. ' (' → logprob: -6.519263744354248
    5. 'utations' → logprob: -6.769263744354248
    6. 'uation' → logprob: -7.144263744354248
    7. 'ations' → logprob: -7.769263744354248
    8. 'ution' → logprob: -8.76926326751709
    9. '(self' → logprob: -8.76926326751709
    10. 'ut' → logprob: -8.89426326751709

Token 358: ' modulo' (ID: 112372)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.1368895173072815
    2. '_value' → logprob: -2.6368894577026367
    3. ' (' → logprob: -4.011889457702637
    4. '(self' → logprob: -4.886889457702637
    5. 'value' → logprob: -5.136889457702637
    6. ')' → logprob: -5.386889457702637
    7. ' modulo' → logprob: -5.511889457702637
    8. '       ' → logprob: -5.636889457702637
    9. 'ue' → logprob: -5.761889457702637
    10. '   ' → logprob: -5.886889457702637

Token 359: ' specified' (ID: 10185)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.1429818868637085
    2. '(n' → logprob: -1.2679818868637085
    3. ' self' → logprob: -1.8929818868637085
    4. '(self' → logprob: -1.8929818868637085
    5. ' (' → logprob: -2.517982006072998
    6. 'n' → logprob: -4.392982006072998
    7. ' n' → logprob: -5.517982006072998
    8. '(' → logprob: -7.267982006072998
    9. ',' → logprob: -8.01798152923584
    10. '```' → logprob: -9.14298152923584

Token 360: ' modulus' (ID: 149464)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.004527673125267029
    2. ' (' → logprob: -5.879527568817139
    3. '(self' → logprob: -6.879527568817139
    4. '(' → logprob: -8.129528045654297
    5. '_mod' → logprob: -9.129528045654297
    6. ' n' → logprob: -10.004528045654297
    7. 'n' → logprob: -10.004528045654297
    8. 'mod' → logprob: -10.129528045654297
    9. '(mod' → logprob: -10.254528045654297
    10. 'self' → logprob: -10.629528045654297

Token 361: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40595024824142456
    2. '.' → logprob: -1.2809503078460693
    3. ',' → logprob: -3.5309503078460693
    4. '.
' → logprob: -4.78095006942749
    5. ')' → logprob: -5.40595006942749
    6. '   ' → logprob: -6.03095006942749
    7. 'self' → logprob: -6.15595006942749
    8. ':' → logprob: -6.53095006942749
    9. '):
' → logprob: -6.78095006942749
    10. ':
' → logprob: -6.90595006942749

Token 362: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04190876707434654
    2. '   ' → logprob: -3.4169087409973145
    3. '<|end|>' → logprob: -5.6669087409973145
    4. ')' → logprob: -6.1669087409973145
    5. '```' → logprob: -7.0419087409973145
    6. 'n' → logprob: -7.4169087409973145
    7. '        
' → logprob: -8.291909217834473
    8. 'def' → logprob: -8.916909217834473
    9. '(n' → logprob: -9.291909217834473
    10. '
' → logprob: -9.416909217834473

Token 363: ' """
' (ID: 7037)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.310564398765564
    2. '       ' → logprob: -1.685564398765564
    3. '   ' → logprob: -2.3105645179748535
    4. ')' → logprob: -2.4355645179748535
    5. '<|end|>' → logprob: -2.4355645179748535
    6. '```' → logprob: -2.6855645179748535
    7. ':' → logprob: -2.8105645179748535
    8. '(' → logprob: -2.8105645179748535
    9. '(self' → logprob: -3.3105645179748535
    10. '(
' → logprob: -4.5605645179748535

Token 364: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15477533638477325
    2. '   ' → logprob: -2.654775381088257
    3. 'n' → logprob: -3.279775381088257
    4. '(n' → logprob: -3.779775381088257
    5. 'return' → logprob: -5.404775142669678
    6. '(' → logprob: -5.904775142669678
    7. ' return' → logprob: -6.529775142669678
    8. ' n' → logprob: -6.779775142669678
    9. '(
' → logprob: -7.529775142669678
    10. ' (' → logprob: -7.904775142669678

Token 365: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.10173327475786209
    2. 'numer' → logprob: -2.6017332077026367
    3. '       ' → logprob: -4.226733207702637
    4. ' if' → logprob: -5.601733207702637
    5. 'return' → logprob: -5.726733207702637
    6. ' numerator' → logprob: -7.851733207702637
    7. 'n' → logprob: -8.101733207702637
    8. '   ' → logprob: -8.351733207702637
    9. '```' → logprob: -9.726733207702637
    10. 'result' → logprob: -11.351733207702637

Token 366: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.1602444350719452
    2. 'n' → logprob: -1.9102444648742676
    3. ' k' → logprob: -11.41024398803711
    4. 'k' → logprob: -11.66024398803711
    5. '(n' → logprob: -15.41024398803711
    6. '	n' → logprob: -16.16024398803711
    7. '   ' → logprob: -16.28524398803711
    8. ' not' → logprob: -17.28524398803711
    9. ' ' → logprob: -17.41024398803711
    10. ' ' → logprob: -17.66024398803711

Token 367: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -9.088346359931165e-07
    2. 'value' → logprob: -14.250000953674316
    3. '_' → logprob: -16.625
    4. '_VALUE' → logprob: -17.125
    5. 'alue' → logprob: -17.375
    6. 'Value' → logprob: -18.125
    7. '_Value' → logprob: -19.125
    8. '<' → logprob: -19.5
    9. ' _' → logprob: -19.5
    10. '_values' → logprob: -19.5

Token 368: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.1129441186785698
    2. '<' → logprob: -2.2379441261291504
    3. '<n' → logprob: -9.612943649291992
    4. '<|end|>' → logprob: -10.237943649291992
    5. '<int' → logprob: -11.987943649291992
    6. '[' → logprob: -13.112943649291992
    7. '<class' → logprob: -13.487943649291992
    8. ' ' → logprob: -13.862943649291992
    9. ',' → logprob: -13.987943649291992
    10. '   ' → logprob: -13.987943649291992

Token 369: ' ' (ID: 220)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5552412867546082
    2. '0' → logprob: -0.9302412867546082
    3. ' k' → logprob: -3.680241346359253
    4. ' ' → logprob: -5.055241107940674
    5. ' or' → logprob: -11.930241584777832
    6. '=' → logprob: -13.367741584777832
    7. 'or' → logprob: -13.992741584777832
    8. '=k' → logprob: -14.117741584777832
    9. '	k' → logprob: -14.180241584777832
    10. 'n' → logprob: -14.367741584777832

Token 370: '0' (ID: 15)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.14269065856933594
    2. '0' → logprob: -2.017690658569336
    3. ' k' → logprob: -11.267690658569336
    4. ' ' → logprob: -12.892690658569336
    5. '   ' → logprob: -17.392690658569336
    6. '	k' → logprob: -17.767690658569336
    7. 'n' → logprob: -18.017690658569336
    8. '           ' → logprob: -18.017690658569336
    9. '```' → logprob: -18.205190658569336
    10. 'or' → logprob: -18.205190658569336

Token 371: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0006272526225075126
    2. 'or' → logprob: -7.375627040863037
    3. ' ' → logprob: -15.000627517700195
    4. '<|end|>' → logprob: -15.375627517700195
    5. ' ' → logprob: -17.000627517700195
    6. ')' → logprob: -17.375627517700195
    7. '	or' → logprob: -17.375627517700195
    8. '        ' → logprob: -17.750627517700195
    9. '```' → logprob: -17.875627517700195
    10. ',' → logprob: -18.000627517700195

Token 372: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.16022484004497528
    2. ' k' → logprob: -1.9102247953414917
    3. '```' → logprob: -14.910224914550781
    4. 'n' → logprob: -16.66022491455078
    5. '	k' → logprob: -16.78522491455078
    6. ' ' → logprob: -17.16022491455078
    7. ' or' → logprob: -17.53522491455078
    8. ' n' → logprob: -17.66022491455078
    9. '{k' → logprob: -17.66022491455078
    10. '   ' → logprob: -18.03522491455078

Token 373: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -1.5048530030981055e-06
    2. 'value' → logprob: -14.375001907348633
    3. 'alue' → logprob: -14.875001907348633
    4. 'Value' → logprob: -15.625001907348633
    5. '_VALUE' → logprob: -15.750001907348633
    6. '_Value' → logprob: -16.250001907348633
    7. '_' → logprob: -17.250001907348633
    8. '-value' → logprob: -18.000001907348633
    9. '   ' → logprob: -18.250001907348633
    10. '_values' → logprob: -18.875001907348633

Token 374: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.1902981996536255
    2. '<' → logprob: -2.065298080444336
    3. ' or' → logprob: -3.815298080444336
    4. ' >' → logprob: -4.315298080444336
    5. '>' → logprob: -4.815298080444336
    6. '<|end|>' → logprob: -6.315298080444336
    7. 'or' → logprob: -7.565298080444336
    8. ' ' → logprob: -8.440298080444336
    9. '[' → logprob: -9.065298080444336
    10. ':' → logprob: -10.440298080444336

Token 375: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '1' → logprob: -18.875059127807617
    4. ' or' → logprob: -19.000059127807617
    5. 'or' → logprob: -19.250059127807617
    6. '<|end|>' → logprob: -20.000059127807617
    7. '=' → logprob: -20.125059127807617
    8. '۰' → logprob: -20.500059127807617
    9. '```' → logprob: -20.875059127807617
    10. '
' → logprob: -21.000059127807617

Token 376: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '۰' → logprob: -18.562519073486328
    4. 'k' → logprob: -18.625019073486328
    5. '=' → logprob: -18.687519073486328
    6. '```' → logprob: -19.437519073486328
    7. ' or' → logprob: -19.562519073486328
    8. 'or' → logprob: -19.687519073486328
    9. '1' → logprob: -20.187519073486328
    10. 'negative' → logprob: -20.312519073486328

Token 377: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0004331725067459047
    2. 'or' → logprob: -7.750432968139648
    3. '	or' → logprob: -13.875432968139648
    4. ':' → logprob: -14.625432968139648
    5. '       ' → logprob: -15.000432968139648
    6. '           ' → logprob: -15.500432968139648
    7. ' ' → logprob: -15.875432968139648
    8. '<|end|>' → logprob: -16.00043296813965
    9. '```' → logprob: -16.25043296813965
    10. ' ' → logprob: -16.50043296813965

Token 378: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06926681846380234
    2. ' n' → logprob: -2.8192667961120605
    3. 'k' → logprob: -4.9442667961120605
    4. ' k' → logprob: -8.819267272949219
    5. '           ' → logprob: -15.319267272949219
    6. '	n' → logprob: -15.569267272949219
    7. '(n' → logprob: -16.56926727294922
    8. 'nk' → logprob: -16.56926727294922
    9. ' ' → logprob: -17.94426727294922
    10. '       ' → logprob: -17.94426727294922

Token 379: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -3.297462171758525e-05
    2. 'value' → logprob: -10.375033378601074
    3. 'alue' → logprob: -13.875033378601074
    4. '_VALUE' → logprob: -15.125033378601074
    5. 'Value' → logprob: -15.250033378601074
    6. '_Value' → logprob: -16.875032424926758
    7. '-value' → logprob: -17.250032424926758
    8. '_' → logprob: -17.500032424926758
    9. '_values' → logprob: -17.875032424926758
    10. '.value' → logprob: -18.125032424926758

Token 380: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.10027740150690079
    2. ' <' → logprob: -2.3502774238586426
    3. '<n' → logprob: -9.725276947021484
    4. '<int' → logprob: -13.475276947021484
    5. '<num' → logprob: -13.850276947021484
    6. '<class' → logprob: -14.100276947021484
    7. '<size' → logprob: -14.100276947021484
    8. '<data' → logprob: -14.350276947021484
    9. '<|end|>' → logprob: -14.350276947021484
    10. '<th' → logprob: -14.475276947021484

Token 381: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0001398929744027555
    2. ' k' → logprob: -8.875140190124512
    3. '{k' → logprob: -17.625139236450195
    4. '=k' → logprob: -18.375139236450195
    5. '	k' → logprob: -18.500139236450195
    6. ' ' → logprob: -19.625139236450195
    7. '<|end|>' → logprob: -19.750139236450195
    8. ',k' → logprob: -20.250139236450195
    9. '(k' → logprob: -20.250139236450195
    10. '           ' → logprob: -20.250139236450195

Token 382: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -3.166338137816638e-05
    2. 'alue' → logprob: -11.000031471252441
    3. 'value' → logprob: -11.125031471252441
    4. 'Value' → logprob: -16.375032424926758
    5. '_VALUE' → logprob: -16.500032424926758
    6. '_' → logprob: -18.000032424926758
    7. '_Value' → logprob: -18.250032424926758
    8. '-value' → logprob: -18.500032424926758
    9. '```' → logprob: -18.875032424926758
    10. '_index' → logprob: -19.000032424926758

Token 383: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2607266306877136
    2. ':' → logprob: -1.5107266902923584
    3. '       ' → logprob: -4.885726451873779
    4. ':return' → logprob: -7.385726451873779
    5. ' or' → logprob: -8.135726928710938
    6. '):
' → logprob: -8.885726928710938
    7. '           ' → logprob: -9.385726928710938
    8. 'return' → logprob: -11.260726928710938
    9. ':
' → logprob: -11.385726928710938
    10. '   ' → logprob: -11.510726928710938

Token 384: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10588818043470383
    2. '       ' → logprob: -2.3558881282806396
    3. 'return' → logprob: -5.355888366699219
    4. ' return' → logprob: -7.230888366699219
    5. '   ' → logprob: -8.855888366699219
    6. '```' → logprob: -10.105888366699219
    7. '	       ' → logprob: -11.605888366699219
    8. '	return' → logprob: -12.480888366699219
    9. '               ' → logprob: -12.480888366699219
    10. '0' → logprob: -12.480888366699219

Token 385: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.33132079243659973
    2. '           ' → logprob: -1.3313207626342773
    3. '0' → logprob: -4.456320762634277
    4. ' return' → logprob: -5.206320762634277
    5. '       ' → logprob: -7.956320762634277
    6. '	return' → logprob: -8.581320762634277
    7. '	       ' → logprob: -8.956320762634277
    8. '   ' → logprob: -9.456320762634277
    9. '{return' → logprob: -10.581320762634277
    10. '
' → logprob: -11.581320762634277

Token 386: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004306692280806601
    2. ' ' → logprob: -7.750430583953857
    3. '
' → logprob: -20.625431060791016
    4. ' ' → logprob: -20.625431060791016
    5. '   ' → logprob: -21.125431060791016
    6. '۰' → logprob: -21.250431060791016
    7. '```' → logprob: -21.375431060791016
    8. '000' → logprob: -21.750431060791016
    9. '00' → logprob: -22.000431060791016
    10. '`' → logprob: -23.000431060791016

Token 387: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '00' → logprob: -21.125
    4. '000' → logprob: -21.25
    5. '   ' → logprob: -21.25
    6. '```' → logprob: -21.5
    7. '۰' → logprob: -21.75
    8. '`' → logprob: -22.875
    9. 'int' → logprob: -23.3125
    10. 'return' → logprob: -23.5

Token 388: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00023286080977413803
    2. '<|end|>' → logprob: -9.750232696533203
    3. ',' → logprob: -10.000232696533203
    4. '
' → logprob: -10.125232696533203
    5. ')' → logprob: -10.500232696533203
    6. '   ' → logprob: -10.875232696533203
    7. 'return' → logprob: -11.375232696533203
    8. ' return' → logprob: -12.250232696533203
    9. '```' → logprob: -12.250232696533203
    10. ' ' → logprob: -12.750232696533203

Token 389: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032311868853867054
    2. 'numer' → logprob: -6.628231048583984
    3. ' numerator' → logprob: -7.503231048583984
    4. 'return' → logprob: -7.503231048583984
    5. '   ' → logprob: -8.003231048583984
    6. 'per' → logprob: -8.503231048583984
    7. '
' → logprob: -9.503231048583984
    8. 'n' → logprob: -10.003231048583984
    9. '```' → logprob: -10.128231048583984
    10. 'num' → logprob: -10.253231048583984

Token 390: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.29045793414115906
    2. '       ' → logprob: -1.6654579639434814
    3. 'numer' → logprob: -2.7904579639434814
    4. 'result' → logprob: -7.540457725524902
    5. ' numerator' → logprob: -7.540457725524902
    6. ' return' → logprob: -7.790457725524902
    7. 'num' → logprob: -10.540457725524902
    8. 'per' → logprob: -10.665457725524902
    9. '   ' → logprob: -11.040457725524902
    10. 'factor' → logprob: -11.290457725524902

Token 391: ' n' (ID: 297)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.02780403010547161
    2. ' k' → logprob: -3.652804136276245
    3. 'n' → logprob: -6.652803897857666
    4. ' n' → logprob: -8.527804374694824
    5. '   ' → logprob: -12.277804374694824
    6. ' ' → logprob: -12.652804374694824
    7. '	k' → logprob: -13.715304374694824
    8. '(k' → logprob: -13.840304374694824
    9. '0' → logprob: -13.965304374694824
    10. '(n' → logprob: -14.527804374694824

Token 392: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -2.129266067640856e-05
    2. 'value' → logprob: -10.875020980834961
    3. '==' → logprob: -13.750020980834961
    4. 'Value' → logprob: -14.250020980834961
    5. '_VALUE' → logprob: -15.875020980834961
    6. 'alue' → logprob: -16.25002098083496
    7. '_' → logprob: -16.62502098083496
    8. '   ' → logprob: -17.37502098083496
    9. '```' → logprob: -17.50002098083496
    10. '_val' → logprob: -17.62502098083496

Token 393: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.14268258213996887
    2. '==' → logprob: -2.0176825523376465
    3. '==
' → logprob: -13.142683029174805
    4. ' ' → logprob: -13.642683029174805
    5. '```' → logprob: -14.517683029174805
    6. '   ' → logprob: -14.517683029174805
    7. '[' → logprob: -14.642683029174805
    8. '=' → logprob: -14.767683029174805
    9. ']==' → logprob: -15.142683029174805
    10. '0' → logprob: -15.142683029174805

Token 394: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019833561964333057
    2. ' ' → logprob: -6.251983165740967
    3. 'k' → logprob: -9.876983642578125
    4. ' k' → logprob: -12.626983642578125
    5. '   ' → logprob: -17.126983642578125
    6. 'n' → logprob: -17.814483642578125
    7. '۰' → logprob: -18.439483642578125
    8. '  ' → logprob: -18.564483642578125
    9. ' or' → logprob: -18.564483642578125
    10. 'None' → logprob: -19.064483642578125

Token 395: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004228091274853796
    2. 'k' → logprob: -8.125422477722168
    3. ' ' → logprob: -9.000422477722168
    4. ' k' → logprob: -12.750422477722168
    5. '   ' → logprob: -16.000423431396484
    6. ' or' → logprob: -16.875423431396484
    7. 'or' → logprob: -17.125423431396484
    8. 'n' → logprob: -17.375423431396484
    9. '  ' → logprob: -17.375423431396484
    10. 'None' → logprob: -17.625423431396484

Token 396: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.1602514386177063
    2. 'or' → logprob: -1.9102513790130615
    3. '       ' → logprob: -10.91025161743164
    4. '	or' → logprob: -12.03525161743164
    5. '   ' → logprob: -13.91025161743164
    6. ' ' → logprob: -13.91025161743164
    7. '           ' → logprob: -14.66025161743164
    8. '        ' → logprob: -16.03525161743164
    9. '0' → logprob: -16.03525161743164
    10. '    ' → logprob: -16.16025161743164

Token 397: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.08894884586334229
    2. ' k' → logprob: -2.4639487266540527
    3. '0' → logprob: -12.463949203491211
    4. '   ' → logprob: -13.088949203491211
    5. '	k' → logprob: -13.713949203491211
    6. ' ' → logprob: -13.963949203491211
    7. '  ' → logprob: -15.838949203491211
    8. '       ' → logprob: -15.838949203491211
    9. 'n' → logprob: -15.838949203491211
    10. '```' → logprob: -16.08894920349121

Token 398: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -2.6776029699249193e-05
    2. 'value' → logprob: -10.62502670288086
    3. 'Value' → logprob: -13.87502670288086
    4. 'alue' → logprob: -14.87502670288086
    5. '==' → logprob: -15.12502670288086
    6. '_k' → logprob: -15.25002670288086
    7. '   ' → logprob: -15.50002670288086
    8. '_VALUE' → logprob: -16.25002670288086
    9. '_start' → logprob: -16.75002670288086
    10. '       ' → logprob: -16.75002670288086

Token 399: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07889209687709808
    2. ' ==' → logprob: -2.5788919925689697
    3. '==
' → logprob: -13.70389175415039
    4. '=' → logprob: -14.70389175415039
    5. '0' → logprob: -15.70389175415039
    6. '===' → logprob: -15.82889175415039
    7. ')==' → logprob: -16.20389175415039
    8. '<=' → logprob: -16.32889175415039
    9. ']==' → logprob: -16.32889175415039
    10. ':' → logprob: -16.70389175415039

Token 400: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00671584764495492
    2. ' ' → logprob: -5.006715774536133
    3. '   ' → logprob: -15.381715774536133
    4. '  ' → logprob: -17.631715774536133
    5. '1' → logprob: -17.694215774536133
    6. '```' → logprob: -17.694215774536133
    7. '۰' → logprob: -17.881715774536133
    8. '<|end|>' → logprob: -18.194215774536133
    9. '﻿' → logprob: -18.256715774536133
    10. '=' → logprob: -18.381715774536133

Token 401: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9146995327901095e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -16.875019073486328
    4. '1' → logprob: -17.750019073486328
    5. '۰' → logprob: -18.187519073486328
    6. '  ' → logprob: -18.750019073486328
    7. '```' → logprob: -18.812519073486328
    8. '    ' → logprob: -19.312519073486328
    9. 's' → logprob: -19.375019073486328
    10. '=' → logprob: -19.375019073486328

Token 402: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.14515864849090576
    2. ':' → logprob: -2.0201587677001953
    3. '       ' → logprob: -6.270158767700195
    4. '):
' → logprob: -7.895158767700195
    5. ':return' → logprob: -8.895158767700195
    6. ':
' → logprob: -11.145158767700195
    7. ',' → logprob: -11.645158767700195
    8. '):' → logprob: -11.645158767700195
    9. '   ' → logprob: -11.770158767700195
    10. 'return' → logprob: -11.895158767700195

Token 403: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39141157269477844
    2. '           ' → logprob: -1.391411542892456
    3. 'return' → logprob: -2.641411542892456
    4. ' return' → logprob: -5.891411781311035
    5. '1' → logprob: -7.891411781311035
    6. '	       ' → logprob: -8.391411781311035
    7. '0' → logprob: -8.516411781311035
    8. '   ' → logprob: -9.016411781311035
    9. '	return' → logprob: -9.141411781311035
    10. '{return' → logprob: -10.266411781311035

Token 404: ' return' (ID: 622)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002200571121647954
    2. 'return' (adapté à ' return') → logprob: -6.252200603485107
    3. '       ' → logprob: -8.50220012664795
    4. '0' → logprob: -10.50220012664795
    5. '           ' → logprob: -10.75220012664795
    6. ' ' → logprob: -11.50220012664795
    7. ' return' → logprob: -11.87720012664795
    8. '   ' → logprob: -13.12720012664795
    9. '
' → logprob: -15.75220012664795
    10. '2' → logprob: -15.87720012664795

Token 405: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.318681188422488e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -16.00001335144043
    4. '       ' → logprob: -18.62501335144043
    5. '  ' → logprob: -20.12501335144043
    6. '           ' → logprob: -21.50001335144043
    7. '    ' → logprob: -21.75001335144043
    8. '	' → logprob: -21.87501335144043
    9. '     ' → logprob: -22.25001335144043
    10. '0' → logprob: -22.25001335144043

Token 406: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '0' → logprob: -21.875
    4. '' → logprob: -22.125
    5. '   ' → logprob: -22.25
    6. '۱' → logprob: -22.5
    7. '
' → logprob: -23.25
    8. '१' → logprob: -23.3125
    9. '```' → logprob: -23.4375
    10. '	' → logprob: -23.4375

Token 407: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00014060820103622973
    2. '
' → logprob: -10.125140190124512
    3. '   ' → logprob: -10.750140190124512
    4. '<|end|>' → logprob: -10.750140190124512
    5. '	' → logprob: -11.625140190124512
    6. ',' → logprob: -11.750140190124512
    7. 'n' → logprob: -11.875140190124512
    8. '           ' → logprob: -12.375140190124512
    9. ')' → logprob: -12.375140190124512
    10. 'return' → logprob: -12.625140190124512

Token 408: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011343818623572588
    2. 'return' → logprob: -7.376134395599365
    3. 'numer' → logprob: -8.126133918762207
    4. '   ' → logprob: -9.501133918762207
    5. ' numerator' → logprob: -9.501133918762207
    6. '```' → logprob: -10.751133918762207
    7. 'per' → logprob: -10.751133918762207
    8. ' return' → logprob: -11.501133918762207
    9. '
' → logprob: -13.126133918762207
    10. 'num' → logprob: -13.626133918762207

Token 409: ' numerator' (ID: 149054)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.004916365724056959
    2. 'numer' → logprob: -5.754916191101074
    3. '       ' → logprob: -6.504916191101074
    4. 'result' → logprob: -8.629916191101074
    5. 'den' → logprob: -10.504916191101074
    6. ' return' → logprob: -10.879916191101074
    7. 'factor' → logprob: -12.379916191101074
    8. '```' → logprob: -12.504916191101074
    9. ' numerator' → logprob: -12.754916191101074
    10. '   ' → logprob: -13.379916191101074

Token 410: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38688987493515015
    2. '=' → logprob: -1.136889934539795
    3. '=self' → logprob: -11.386889457702637
    4. '=
' → logprob: -13.011889457702637
    5. '       ' → logprob: -13.386889457702637
    6. '   ' → logprob: -13.386889457702637
    7. 'self' → logprob: -14.136889457702637
    8. ' =
' → logprob: -14.761889457702637
    9. ' ' → logprob: -15.011889457702637
    10. '=

' → logprob: -15.761889457702637

Token 411: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.026317482814192772
    2. ' self' → logprob: -3.651317596435547
    3. '       ' → logprob: -11.276317596435547
    4. '	self' → logprob: -13.276317596435547
    5. '[self' → logprob: -13.401317596435547
    6. '(self' → logprob: -14.276317596435547
    7. '   ' → logprob: -15.901317596435547
    8. ' ' → logprob: -16.276317596435547
    9. '=self' → logprob: -16.401317596435547
    10. '<|end|>' → logprob: -17.026317596435547

Token 412: '.factor' (ID: 196244)
  Prédit: '.factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.factor' → logprob: -7.994086627149954e-05
    2. 'factor' → logprob: -9.500080108642578
    3. '.fact' → logprob: -12.625080108642578
    4. '.fac' → logprob: -13.875080108642578
    5. '.' → logprob: -15.000080108642578
    6. 'self' → logprob: -16.000080108642578
    7. ' factorial' → logprob: -16.125080108642578
    8. ' .' → logprob: -16.250080108642578
    9. '.factory' → logprob: -17.000080108642578
    10. '.per' → logprob: -17.500080108642578

Token 413: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.048629600554704666
    2. 'al' → logprob: -3.0486295223236084
    3. 'cial' → logprob: -10.798629760742188
    4. 'alist' → logprob: -12.048629760742188
    5. 'cal' → logprob: -12.548629760742188
    6. 'omial' → logprob: -13.423629760742188
    7. 'factor' → logprob: -13.548629760742188
    8. 'arial' → logprob: -13.798629760742188
    9. 'atorial' → logprob: -13.923629760742188
    10. '_list' → logprob: -14.048629760742188

Token 414: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: 0.0
    2. 'list' → logprob: -17.375
    3. 's' → logprob: -20.125
    4. '[_' → logprob: -20.25
    5. '[' → logprob: -20.375
    6. 'self' → logprob: -21.0
    7. 'List' → logprob: -21.375
    8. '_lists' → logprob: -21.375
    9. '_LIST' → logprob: -22.5
    10. '```' → logprob: -22.875

Token 415: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -5.796184723294573e-06
    2. 'n' → logprob: -12.375005722045898
    3. '   ' → logprob: -14.375005722045898
    4. '[' → logprob: -14.750005722045898
    5. ' [' → logprob: -15.875005722045898
    6. '[
' → logprob: -16.1250057220459
    7. '[self' → logprob: -16.1250057220459
    8. '       ' → logprob: -16.1250057220459
    9. '
' → logprob: -18.2500057220459
    10. '	n' → logprob: -18.6250057220459

Token 416: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -2.236549335066229e-05
    2. 'value' → logprob: -10.875021934509277
    3. 'alue' → logprob: -12.625021934509277
    4. 'Value' → logprob: -16.750022888183594
    5. '_VALUE' → logprob: -17.250022888183594
    6. '-value' → logprob: -18.625022888183594
    7. '_Value' → logprob: -18.875022888183594
    8. '_val' → logprob: -19.125022888183594
    9. '_' → logprob: -19.250022888183594
    10. '```' → logprob: -19.375022888183594

Token 417: ']
' (ID: 1592)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12742546200752258
    2. ']' → logprob: -2.8774254322052
    3. 'self' → logprob: -3.2524254322052
    4. 'n' → logprob: -5.127425670623779
    5. '
' → logprob: -5.502425670623779
    6. '//' → logprob: -5.877425670623779
    7. 'def' → logprob: -6.127425670623779
    8. '   ' → logprob: -6.377425670623779
    9. ']
' → logprob: -6.502425670623779
    10. ' //' → logprob: -6.752425670623779

Token 418: '       ' (ID: 309)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.4297390282154083
    2. '       ' → logprob: -1.054738998413086
    3. ' denominator' → logprob: -6.929738998413086
    4. 'def' → logprob: -11.054738998413086
    5. '   ' → logprob: -11.429738998413086
    6. '```' → logprob: -12.054738998413086
    7. ',' → logprob: -12.179738998413086
    8. '           ' → logprob: -12.429738998413086
    9. 'return' → logprob: -12.679738998413086
    10. '_den' → logprob: -13.054738998413086

Token 419: ' denominator' (ID: 101279)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.011190700344741344
    2. ' denominator' → logprob: -4.886190891265869
    3. '       ' → logprob: -5.636190891265869
    4. '_den' → logprob: -12.636190414428711
    5. '   ' → logprob: -13.011190414428711
    6. '.den' → logprob: -13.511190414428711
    7. ' den' → logprob: -14.011190414428711
    8. 'deny' → logprob: -14.136190414428711
    9. ' denomin' → logprob: -14.386190414428711
    10. '           ' → logprob: -14.511190414428711

Token 420: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16027246415615082
    2. ' =' → logprob: -1.910272479057312
    3. '=
' → logprob: -10.035272598266602
    4. '=

' → logprob: -13.160272598266602
    5. ' =
' → logprob: -13.410272598266602
    6. '   ' → logprob: -14.785272598266602
    7. '=self' → logprob: -15.410272598266602
    8. ' ' → logprob: -15.785272598266602
    9. 'def' → logprob: -15.910272598266602
    10. 's' → logprob: -17.0352725982666

Token 421: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007118358626030385
    2. ' self' → logprob: -7.250711917877197
    3. '       ' → logprob: -13.625711441040039
    4. '(self' → logprob: -15.000711441040039
    5. '[self' → logprob: -16.12571144104004
    6. '	self' → logprob: -16.50071144104004
    7. '=self' → logprob: -16.62571144104004
    8. '           ' → logprob: -17.50071144104004
    9. '   ' → logprob: -18.00071144104004
    10. '*self' → logprob: -18.87571144104004

Token 422: '.factor' (ID: 196244)
  Prédit: '.factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.factor' → logprob: -2.5107177862082608e-05
    2. 'factor' → logprob: -11.375024795532227
    3. '.fact' → logprob: -11.625024795532227
    4. '.fac' → logprob: -12.750024795532227
    5. '.' → logprob: -13.750024795532227
    6. ' factorial' → logprob: -15.500024795532227
    7. '.per' → logprob: -16.375024795532227
    8. '_factor' → logprob: -16.500024795532227
    9. ' .' → logprob: -16.625024795532227
    10. '.factory' → logprob: -16.750024795532227

Token 423: 'ial' (ID: 563)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -8.613945101387799e-05
    2. 'ial' → logprob: -9.375085830688477
    3. 'alist' → logprob: -14.250085830688477
    4. 'val' → logprob: -15.125085830688477
    5. 'all' → logprob: -17.250085830688477
    6. 'nal' → logprob: -17.625085830688477
    7. 'alc' → logprob: -17.750085830688477
    8. '_list' → logprob: -17.750085830688477
    9. '_al' → logprob: -17.875085830688477
    10. 'AL' → logprob: -17.875085830688477

Token 424: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -8.895480277715251e-06
    2. 'list' → logprob: -11.750008583068848
    3. 's' → logprob: -14.750008583068848
    4. 'List' → logprob: -15.750008583068848
    5. '_lists' → logprob: -15.750008583068848
    6. '[' → logprob: -16.250009536743164
    7. 'n' → logprob: -17.000009536743164
    8. '```' → logprob: -17.250009536743164
    9. '[n' → logprob: -17.750009536743164
    10. 'self' → logprob: -18.125009536743164

Token 425: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.4259644558478612e-05
    2. 'n' → logprob: -11.875014305114746
    3. '[self' → logprob: -12.250014305114746
    4. '[
' → logprob: -13.750014305114746
    5. '[' → logprob: -14.000014305114746
    6. 'self' → logprob: -14.875014305114746
    7. '   ' → logprob: -16.62501335144043
    8. '
' → logprob: -17.37501335144043
    9. '(n' → logprob: -17.37501335144043
    10. '```' → logprob: -17.87501335144043

Token 426: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -1.0445127372804563e-05
    2. 'n' → logprob: -12.00001049041748
    3. 'value' → logprob: -12.50001049041748
    4. '[n' → logprob: -14.62501049041748
    5. '[' → logprob: -16.500009536743164
    6. '_VALUE' → logprob: -17.375009536743164
    7. 'Value' → logprob: -18.375009536743164
    8. '_index' → logprob: -18.750009536743164
    9. '(n' → logprob: -19.625009536743164
    10. '-' → logprob: -19.750009536743164

Token 427: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.05679551512002945
    2. ' -' → logprob: -3.056795597076416
    3. '-k' → logprob: -4.806795597076416
    4. '   ' → logprob: -15.931795120239258
    5. 'k' → logprob: -16.306795120239258
    6. ' ' → logprob: -16.431795120239258
    7. '−' → logprob: -16.556795120239258
    8. '-
' → logprob: -16.931795120239258
    9. '-K' → logprob: -17.306795120239258
    10. ' ' → logprob: -18.931795120239258

Token 428: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0001398929744027555
    2. ' k' → logprob: -8.875140190124512
    3. '	k' → logprob: -19.250139236450195
    4. '_k' → logprob: -19.875139236450195
    5. '   ' → logprob: -20.750139236450195
    6. ' ' → logprob: -20.750139236450195
    7. ' к' → logprob: -21.375139236450195
    8. '{k' → logprob: -21.750139236450195
    9. '[k' → logprob: -22.125139236450195
    10. '    ' → logprob: -22.375139236450195

Token 429: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -2.3438327843905427e-05
    2. 'value' → logprob: -10.75002384185791
    3. 'alue' → logprob: -13.25002384185791
    4. 'Value' → logprob: -16.125022888183594
    5. '_VALUE' → logprob: -17.125022888183594
    6. '-value' → logprob: -18.875022888183594
    7. '_Value' → logprob: -18.875022888183594
    8. ' value' → logprob: -19.000022888183594
    9. ']' → logprob: -19.500022888183594
    10. '$value' → logprob: -20.250022888183594

Token 430: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.437014102935791
    2. ']
' → logprob: -1.062014102935791
    3. '       ' → logprob: -4.812014102935791
    4. ')' → logprob: -10.312013626098633
    5. ']
' → logprob: -10.437013626098633
    6. 'def' → logprob: -10.562013626098633
    7. ')
' → logprob: -10.812013626098633
    8. 'self' → logprob: -11.437013626098633
    9. ']

' → logprob: -12.312013626098633
    10. 'return' → logprob: -12.312013626098633

Token 431: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10095598548650742
    2. 'return' → logprob: -2.3509559631347656
    3. ' return' → logprob: -7.225955963134766
    4. '   ' → logprob: -11.100955963134766
    5. '	return' → logprob: -12.475955963134766
    6. '           ' → logprob: -14.725955963134766
    7. '	' → logprob: -14.850955963134766
    8. '
' → logprob: -14.850955963134766
    9. ',' → logprob: -15.100955963134766
    10. '```' → logprob: -15.100955963134766

Token 432: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.006156542804092169
    2. '       ' → logprob: -5.2561564445495605
    3. ' return' → logprob: -7.0061564445495605
    4. '   ' → logprob: -11.256156921386719
    5. '```' → logprob: -13.506156921386719
    6. '	return' → logprob: -13.631156921386719
    7. 'def' → logprob: -15.881156921386719
    8. '``' → logprob: -16.25615692138672
    9. '
' → logprob: -16.63115692138672
    10. ')return' → logprob: -16.75615692138672

Token 433: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5812777876853943
    2. '(
' → logprob: -1.081277847290039
    3. '(n' → logprob: -2.331277847290039
    4. ' (
' → logprob: -5.456277847290039
    5. '(' → logprob: -8.831277847290039
    6. '(
' → logprob: -10.706277847290039
    7. ' numerator' → logprob: -11.456277847290039
    8. 'numer' → logprob: -11.831277847290039
    9. '   ' → logprob: -11.956277847290039
    10. ' ' → logprob: -12.206277847290039

Token 434: 'numer' (ID: 81553)
  Prédit: 'numer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numer' → logprob: -0.011084253899753094
    2. ' numerator' → logprob: -4.511084079742432
    3. '   ' → logprob: -10.76108455657959
    4. '           ' → logprob: -12.13608455657959
    5. '       ' → logprob: -12.38608455657959
    6. '(n' → logprob: -12.63608455657959
    7. 'umerator' → logprob: -14.51108455657959
    8. '(
' → logprob: -15.26108455657959
    9. ' ' → logprob: -15.38608455657959
    10. '  ' → logprob: -15.76108455657959

Token 435: 'ator' (ID: 1246)
  Prédit: 'ator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ator' → logprob: -4.008129963040119e-06
    2. 'umerator' → logprob: -12.500003814697266
    3. 'er' → logprob: -16.500003814697266
    4. 'ATOR' → logprob: -17.125003814697266
    5. 'inator' → logprob: -17.625003814697266
    6. 'or' → logprob: -17.625003814697266
    7. 'um' → logprob: -17.750003814697266
    8. 'r' → logprob: -18.125003814697266
    9. 'ominator' → logprob: -18.375003814697266
    10. '   ' → logprob: -18.500003814697266

Token 436: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.029753033071756363
    2. '*' → logprob: -3.5297529697418213
    3. ' ' → logprob: -13.529752731323242
    4. ' ' → logprob: -13.779752731323242
    5. '   ' → logprob: -16.904752731323242
    6. '**' → logprob: -16.904752731323242
    7. '*self' → logprob: -17.154752731323242
    8. '    ' → logprob: -18.654752731323242
    9. ' *
' → logprob: -18.654752731323242
    10. '  ' → logprob: -18.904752731323242

Token 437: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005410005105659366
    2. 'pow' → logprob: -8.000540733337402
    3. ' self' → logprob: -8.500540733337402
    4. ' pow' → logprob: -13.500540733337402
    5. '(self' → logprob: -15.000540733337402
    6. '       ' → logprob: -15.500540733337402
    7. '   ' → logprob: -16.25054168701172
    8. '	self' → logprob: -16.25054168701172
    9. '[self' → logprob: -18.62554168701172
    10. '           ' → logprob: -18.62554168701172

Token 438: '.mod' (ID: 19046)
  Prédit: '.mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mod' → logprob: -4.320199877838604e-07
    2. '.modal' → logprob: -15.25
    3. 'mod' → logprob: -16.875
    4. '.' → logprob: -17.0
    5. '.per' → logprob: -17.625
    6. '.factor' → logprob: -18.0
    7. ' .' → logprob: -18.125
    8. '.mult' → logprob: -18.25
    9. '	mod' → logprob: -19.375
    10. '```' → logprob: -20.0

Token 439: 'ular' (ID: 1492)
  Prédit: 'ular'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ular' → logprob: -4.842555426876061e-06
    2. 'od' → logprob: -12.500004768371582
    3. 'cular' → logprob: -14.500004768371582
    4. 'ULAR' → logprob: -15.750004768371582
    5. 'odal' → logprob: -15.875004768371582
    6. 'ural' → logprob: -16.5000057220459
    7. 'uler' → logprob: -17.2500057220459
    8. 'ual' → logprob: -17.2500057220459
    9. 'ultip' → logprob: -17.5000057220459
    10. 'ul' → logprob: -17.7500057220459

Token 440: '_inverse' (ID: 188797)
  Prédit: '_inverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inverse' → logprob: -3.650518920039758e-06
    2. 'inverse' → logprob: -12.750003814697266
    3. '_reverse' → logprob: -15.125003814697266
    4. '_inv' → logprob: -15.250003814697266
    5. '_factor' → logprob: -17.375003814697266
    6. '_in' → logprob: -17.375003814697266
    7. '_' → logprob: -18.125003814697266
    8. '_integer' → logprob: -18.375003814697266
    9. '.inverse' → logprob: -18.625003814697266
    10. '_inline' → logprob: -19.375003814697266

Token 441: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.2200749754119897e-06
    2. ' (' → logprob: -13.250001907348633
    3. '(
' → logprob: -15.750001907348633
    4. '(de' → logprob: -16.625001907348633
    5. '(des' → logprob: -16.750001907348633
    6. '```' → logprob: -17.125001907348633
    7. '((' → logprob: -17.750001907348633
    8. '(def' → logprob: -18.000001907348633
    9. '(operator' → logprob: -18.375001907348633
    10. '(f' → logprob: -18.750001907348633

Token 442: 'den' (ID: 1660)
  Prédit: 'den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -2.2603901015827432e-05
    2. '(' → logprob: -10.750022888183594
    3. ' denominator' → logprob: -14.000022888183594
    4. '_den' → logprob: -15.375022888183594
    5. '-den' → logprob: -17.125022888183594
    6. '.den' → logprob: -18.125022888183594
    7. ' den' → logprob: -19.750022888183594
    8. '(
' → logprob: -19.750022888183594
    9. '```' → logprob: -20.750022888183594
    10. 'Den' → logprob: -20.875022888183594

Token 443: 'ominator' (ID: 96399)
  Prédit: 'ominator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ominator' → logprob: -5.5861724831629544e-05
    2. 'inator' → logprob: -9.875056266784668
    3. 'ator' → logprob: -13.125056266784668
    4. 'on' → logprob: -13.250056266784668
    5. 'omin' → logprob: -15.250056266784668
    6. 'umerator' → logprob: -15.375056266784668
    7. 'om' → logprob: -17.37505531311035
    8. 'in' → logprob: -17.50005531311035
    9. 'imator' → logprob: -17.62505531311035
    10. 'min' → logprob: -17.87505531311035

Token 444: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00029852005536668
    2. '))' → logprob: -8.250298500061035
    3. ')%' → logprob: -10.750298500061035
    4. '(self' → logprob: -12.250298500061035
    5. ' )' → logprob: -12.625298500061035
    6. '   ' → logprob: -12.875298500061035
    7. '       ' → logprob: -13.250298500061035
    8. 'self' → logprob: -14.125298500061035
    9. '(n' → logprob: -14.250298500061035
    10. '(' → logprob: -14.875298500061035

Token 445: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.09189916402101517
    2. '%' → logprob: -2.4668991565704346
    3. ')' → logprob: -6.091899394989014
    4. '       ' → logprob: -7.966899394989014
    5. ')%' → logprob: -9.341898918151855
    6. '```' → logprob: -9.341898918151855
    7. '(' → logprob: -9.591898918151855
    8. '           ' → logprob: -10.341898918151855
    9. '   ' → logprob: -10.466898918151855
    10. '(self' → logprob: -11.091898918151855

Token 446: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.061968810856342316
    2. ' self' → logprob: -2.8119688034057617
    3. '(self' → logprob: -14.186968803405762
    4. '       ' → logprob: -15.311968803405762
    5. '	self' → logprob: -16.061969757080078
    6. '   ' → logprob: -17.436969757080078
    7. '=self' → logprob: -18.061969757080078
    8. '```' → logprob: -18.311969757080078
    9. ' ' → logprob: -18.436969757080078
    10. ' ' → logprob: -18.436969757080078

Token 447: '.mod' (ID: 19046)
  Prédit: '.mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mod' → logprob: -0.0019297054968774319
    2. 'mod' → logprob: -6.251929759979248
    3. '	mod' → logprob: -14.37692928314209
    4. 'MOD' → logprob: -16.001930236816406
    5. '.' → logprob: -16.126930236816406
    6. '(mod' → logprob: -16.626930236816406
    7. '.MOD' → logprob: -17.126930236816406
    8. '   ' → logprob: -17.251930236816406
    9. '```' → logprob: -17.251930236816406
    10. ' .' → logprob: -17.376930236816406

Token 448: 'ulo' (ID: 5953)
  Prédit: 'ulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulo' → logprob: -0.007642355747520924
    2. 'od' → logprob: -5.0076422691345215
    3. 'odu' → logprob: -7.6326422691345215
    4. 'o' → logprob: -8.75764274597168
    5. ' modulo' → logprob: -9.00764274597168
    6. 'olo' → logprob: -10.00764274597168
    7. 'ulu' → logprob: -10.50764274597168
    8. 'odule' → logprob: -11.00764274597168
    9. 'odo' → logprob: -11.00764274597168
    10. 'Modulo' → logprob: -11.13264274597168

Token 449: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.30613335967063904
    2. '   ' → logprob: -1.8061333894729614
    3. '<|end|>' → logprob: -3.431133270263672
    4. '\n' → logprob: -4.056133270263672
    5. '    
' → logprob: -4.181133270263672
    6. '```' → logprob: -4.306133270263672
    7. 'def' → logprob: -5.306133270263672
    8. ' 
' → logprob: -5.431133270263672
    9. '' → logprob: -6.056133270263672
    10. '  
' → logprob: -6.306133270263672

Token 450: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018816055729985237
    2. 'def' → logprob: -4.393815994262695
    3. '
' → logprob: -5.143815994262695
    4. ' def' → logprob: -8.268815994262695
    5. '    
' → logprob: -8.643815994262695
    6. '```' → logprob: -11.518815994262695
    7. '	def' → logprob: -12.143815994262695
    8. '  
' → logprob: -14.643815994262695
    9. '        
' → logprob: -14.768815994262695
    10. ' 
' → logprob: -14.768815994262695

Token 451: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.03505865857005119
    2. '   ' → logprob: -3.5350587368011475
    3. ' def' → logprob: -5.285058498382568
    4. '
' → logprob: -8.535058975219727
    5. '	def' → logprob: -11.160058975219727
    6. ' ' → logprob: -11.785058975219727
    7. '    
' → logprob: -11.910058975219727
    8. '```' → logprob: -13.535058975219727
    9. ' 
' → logprob: -15.285058975219727
    10. ':def' → logprob: -15.660058975219727

Token 452: ' modular' (ID: 61198)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.5766203999519348
    2. ' modular' → logprob: -0.8266203999519348
    3. ' mod' → logprob: -7.701620578765869
    4. '_mod' → logprob: -8.451620101928711
    5. 'pow' → logprob: -11.951620101928711
    6. 'def' → logprob: -12.076620101928711
    7. 'fast' → logprob: -14.076620101928711
    8. '	mod' → logprob: -14.451620101928711
    9. '@' → logprob: -14.951620101928711
    10. 'extended' → logprob: -15.201620101928711

Token 453: '_inverse' (ID: 188797)
  Prédit: '_inverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inverse' → logprob: -6.32523515378125e-05
    2. '_ex' → logprob: -10.250062942504883
    3. '_pow' → logprob: -10.750062942504883
    4. '_power' → logprob: -12.625062942504883
    5. '_factor' → logprob: -14.000062942504883
    6. '_inv' → logprob: -14.125062942504883
    7. 'inverse' → logprob: -14.875062942504883
    8. 'def' → logprob: -15.000062942504883
    9. '_exp' → logprob: -15.375062942504883
    10. '_reverse' → logprob: -15.375062942504883

Token 454: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0005541055579669774
    2. '(' → logprob: -7.500554084777832
    3. 'self' → logprob: -14.125554084777832
    4. '(
' → logprob: -15.000554084777832
    5. '   ' → logprob: -16.87555503845215
    6. ' (' → logprob: -17.00055503845215
    7. 'def' → logprob: -17.87555503845215
    8. '       ' → logprob: -18.12555503845215
    9. '(Self' → logprob: -19.12555503845215
    10. '(s' → logprob: -19.37555503845215

Token 455: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0024431929923594
    2. ',' → logprob: -6.627443313598633
    3. '(' → logprob: -6.877443313598633
    4. ',self' → logprob: -9.877443313598633
    5. 'self' → logprob: -11.002443313598633
    6. ' (' → logprob: -12.377443313598633
    7. 'def' → logprob: -13.002443313598633
    8. ')' → logprob: -13.127443313598633
    9. '(x' → logprob: -13.752443313598633
    10. ')(' → logprob: -13.752443313598633

Token 456: ' number' (ID: 2086)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6097520589828491
    2. 'x' → logprob: -1.1097520589828491
    3. 'self' → logprob: -2.3597521781921387
    4. 'number' → logprob: -3.6097521781921387
    5. 'b' → logprob: -5.609752178192139
    6. 'value' → logprob: -6.984752178192139
    7. 'n' → logprob: -8.73475170135498
    8. 'num' → logprob: -8.85975170135498
    9. 'def' → logprob: -8.85975170135498
    10. 'token' → logprob: -9.35975170135498

Token 457: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008684301748871803
    2. 'self' → logprob: -5.008684158325195
    3. '(self' → logprob: -6.383684158325195
    4. ' ,' → logprob: -9.758684158325195
    5. '):' → logprob: -9.883684158325195
    6. '   ' → logprob: -10.008684158325195
    7. ',self' → logprob: -10.508684158325195
    8. '(' → logprob: -10.633684158325195
    9. '       ' → logprob: -10.758684158325195
    10. '(number' → logprob: -11.133684158325195

Token 458: '       ' (ID: 309)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.7160205245018005
    2. 'self' → logprob: -0.8410205245018005
    3. '       ' → logprob: -3.2160205841064453
    4. ' self' → logprob: -4.091020584106445
    5. '(' → logprob: -4.716020584106445
    6. '<|end|>' → logprob: -5.216020584106445
    7. '   ' → logprob: -5.841020584106445
    8. '(
' → logprob: -6.966020584106445
    9. '	self' → logprob: -7.091020584106445
    10. ' (' → logprob: -7.466020584106445

Token 459: ' """
' (ID: 7037)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8341684341430664
    2. '       ' → logprob: -1.0841684341430664
    3. ' return' → logprob: -1.5841684341430664
    4. 'pow' → logprob: -4.709168434143066
    5. ' pow' → logprob: -5.334168434143066
    6. ':return' → logprob: -5.584168434143066
    7. '<|end|>' → logprob: -6.459168434143066
    8. '(pow' → logprob: -7.334168434143066
    9. '   ' → logprob: -7.834168434143066
    10. ',' → logprob: -7.834168434143066

Token 460: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11637108772993088
    2. 'return' → logprob: -2.4913711547851562
    3. '   ' → logprob: -4.116371154785156
    4. ' return' → logprob: -4.866371154785156
    5. '"""' → logprob: -7.491371154785156
    6. 'self' → logprob: -7.616371154785156
    7. ')' → logprob: -7.991371154785156
    8. '"""
' → logprob: -7.991371154785156
    9. '        
' → logprob: -8.491371154785156
    10. 'pow' → logprob: -8.616371154785156

Token 461: ' Compute' (ID: 45438)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.02992207743227482
    2. ' return' → logprob: -3.6549220085144043
    3. '       ' → logprob: -5.779922008514404
    4. '   ' → logprob: -8.279922485351562
    5. '#' → logprob: -8.904922485351562
    6. 'def' → logprob: -10.154922485351562
    7. 'Return' → logprob: -10.654922485351562
    8. '```' → logprob: -10.654922485351562
    9. '"""' → logprob: -11.404922485351562
    10. ':return' → logprob: -11.654922485351562

Token 462: ' the' (ID: 290)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -2.8802491215174086e-05
    2. ' pow' → logprob: -10.500028610229492
    3. '(pow' → logprob: -14.250028610229492
    4. 'power' → logprob: -15.375028610229492
    5. 'self' → logprob: -15.500028610229492
    6. '   ' → logprob: -16.250028610229492
    7. 'number' → logprob: -17.375028610229492
    8. '_pow' → logprob: -17.750028610229492
    9. 'return' → logprob: -18.000028610229492
    10. '       ' → logprob: -18.250028610229492

Token 463: ' modular' (ID: 61198)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -4.394135612528771e-05
    2. 'power' → logprob: -10.500043869018555
    3. 'return' → logprob: -11.375043869018555
    4. 'mod' → logprob: -13.000043869018555
    5. ' pow' → logprob: -13.000043869018555
    6. 'def' → logprob: -15.750043869018555
    7. 'number' → logprob: -17.125043869018555
    8. '(pow' → logprob: -17.625043869018555
    9. 'powered' → logprob: -17.875043869018555
    10. '   ' → logprob: -18.875043869018555

Token 464: ' inverse' (ID: 53743)
  Prédit: 'inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inverse' → logprob: -0.06381954252719879
    2. ' inverse' → logprob: -2.813819646835327
    3. '_inverse' → logprob: -6.438819408416748
    4. ' exponent' → logprob: -8.813819885253906
    5. 'pow' → logprob: -9.438819885253906
    6. 'ex' → logprob: -11.063819885253906
    7. 'power' → logprob: -13.063819885253906
    8. '_pow' → logprob: -13.313819885253906
    9. 'multip' → logprob: -13.813819885253906
    10. 'Inverse' → logprob: -14.063819885253906

Token 465: ' using' (ID: 2360)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.009111673571169376
    2. '(number' → logprob: -4.8841118812561035
    3. '(' → logprob: -6.8841118812561035
    4. '       ' → logprob: -8.884111404418945
    5. ' of' → logprob: -9.134111404418945
    6. ' (' → logprob: -9.259111404418945
    7. '(
' → logprob: -10.009111404418945
    8. '(pow' → logprob: -10.259111404418945
    9. ' using' → logprob: -11.009111404418945
    10. '   ' → logprob: -11.759111404418945

Token 466: ' fast' (ID: 5661)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -1.6286106983898208e-05
    2. 'def' → logprob: -11.375016212463379
    3. ' pow' → logprob: -12.750016212463379
    4. '   ' → logprob: -13.750016212463379
    5. '       ' → logprob: -14.625016212463379
    6. '(pow' → logprob: -15.500016212463379
    7. 'power' → logprob: -17.000017166137695
    8. '    ' → logprob: -18.250017166137695
    9. '           ' → logprob: -18.375017166137695
    10. '
' → logprob: -18.625017166137695

Token 467: ' exponent' (ID: 51159)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0015098588773980737
    2. 'ex' → logprob: -6.751509666442871
    3. 'power' → logprob: -8.251509666442871
    4. ' exponent' → logprob: -9.751509666442871
    5. 'mod' → logprob: -11.876509666442871
    6. 'def' → logprob: -12.126509666442871
    7. ' pow' → logprob: -12.626509666442871
    8. '_pow' → logprob: -12.876509666442871
    9. 'Exponent' → logprob: -13.751509666442871
    10. '(pow' → logprob: -15.251509666442871

Token 468: 'iation' (ID: 23408)
  Prédit: 'iation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iation' → logprob: -0.0047990381717681885
    2. 'def' → logprob: -6.379798889160156
    3. '-' → logprob: -7.379798889160156
    4. '(number' → logprob: -7.504798889160156
    5. '```' → logprob: -7.504798889160156
    6. 'number' → logprob: -7.754798889160156
    7. 'iate' → logprob: -8.629798889160156
    8. 'pow' → logprob: -9.004798889160156
    9. '(pow' → logprob: -9.129798889160156
    10. '   ' → logprob: -9.754798889160156

Token 469: '.
' (ID: 558)
  Prédit: '(number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(number' → logprob: -0.23071761429309845
    2. '(' → logprob: -2.105717658996582
    3. '(self' → logprob: -2.605717658996582
    4. '(
' → logprob: -5.230717658996582
    5. '       ' → logprob: -5.855717658996582
    6. ' (' → logprob: -6.480717658996582
    7. '   ' → logprob: -7.730717658996582
    8. '(token' → logprob: -9.730717658996582
    9. '```' → logprob: -10.230717658996582
    10. ' of' → logprob: -10.355717658996582

Token 470: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3445359766483307
    2. '(number' → logprob: -1.8445359468460083
    3. '(' → logprob: -2.969536066055298
    4. '(
' → logprob: -3.594536066055298
    5. '(self' → logprob: -3.594536066055298
    6. '   ' → logprob: -4.594535827636719
    7. 'number' → logprob: -4.594535827636719
    8. ' (' → logprob: -5.969535827636719
    9. ' number' → logprob: -6.594535827636719
    10. '        
' → logprob: -7.594535827636719

Token 471: ' Ferm' (ID: 156422)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03298928588628769
    2. '   ' → logprob: -4.407989501953125
    3. '```' → logprob: -5.032989501953125
    4. '(number' → logprob: -5.907989501953125
    5. 'return' → logprob: -5.907989501953125
    6. '{' → logprob: -6.407989501953125
    7. 'number' → logprob: -7.157989501953125
    8. '(self' → logprob: -7.282989501953125
    9. '        
' → logprob: -7.782989501953125
    10. '
' → logprob: -7.782989501953125

Token 472: 'at' (ID: 266)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -1.5472594499588013
    2. '(pow' → logprob: -1.6722594499588013
    3. '(number' → logprob: -1.6722594499588013
    4. 'number' → logprob: -2.1722593307495117
    5. 'ent' → logprob: -2.9222593307495117
    6. 'def' → logprob: -3.0472593307495117
    7. '(power' → logprob: -3.2972593307495117
    8. 'entation' → logprob: -4.047259330749512
    9. 'et' → logprob: -4.172259330749512
    10. '<|end|>' → logprob: -4.172259330749512

Token 473: ''s' (ID: 885)
  Prédit: ''s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.00020461321400944144
    2. '’s' → logprob: -8.500205039978027
    3. '`s' → logprob: -14.375205039978027
    4. '   ' → logprob: -15.875205039978027
    5. 's' → logprob: -16.37520408630371
    6. '```' → logprob: -16.62520408630371
    7. '´s' → logprob: -18.00020408630371
    8. '       ' → logprob: -18.00020408630371
    9. 'Little' → logprob: -18.12520408630371
    10. '‘s' → logprob: -18.12520408630371

Token 474: ' little' (ID: 3389)
  Prédit: 'little'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'little' → logprob: -0.1331094354391098
    2. 'Little' → logprob: -2.1331093311309814
    3. ' little' → logprob: -5.1331095695495605
    4. ' Little' → logprob: -8.258109092712402
    5. 'last' → logprob: -13.008109092712402
    6. ''s' → logprob: -14.133109092712402
    7. '"""' → logprob: -14.383109092712402
    8. 'Last' → logprob: -14.383109092712402
    9. 'lemma' → logprob: -15.383109092712402
    10. '   ' → logprob: -15.758109092712402

Token 475: ' theorem' (ID: 177750)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.0014519019750878215
    2. ' theorem' → logprob: -7.0014519691467285
    3. 'The' → logprob: -8.00145149230957
    4. '_the' → logprob: -8.50145149230957
    5. ''s' → logprob: -15.25145149230957
    6. '-the' → logprob: -15.25145149230957
    7. '_' → logprob: -15.25145149230957
    8. 'thel' → logprob: -15.75145149230957
    9. '```' → logprob: -15.75145149230957
    10. ' the' → logprob: -15.87645149230957

Token 476: ':' (ID: 25)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.8579260110855103
    2. '       ' → logprob: -1.1079260110855103
    3. '(number' → logprob: -1.7329260110855103
    4. '(' → logprob: -3.3579258918762207
    5. '(
' → logprob: -4.232925891876221
    6. ':' → logprob: -5.232925891876221
    7. '   ' → logprob: -5.357925891876221
    8. ' (' → logprob: -5.732925891876221
    9. ':
' → logprob: -6.607925891876221
    10. '
' → logprob: -6.982925891876221

Token 477: ' a' (ID: 261)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2013891637325287
    2. 'return' → logprob: -2.4513890743255615
    3. ' return' → logprob: -2.4513890743255615
    4. 'number' → logprob: -5.701389312744141
    5. ' number' → logprob: -6.076389312744141
    6. '           ' → logprob: -6.076389312744141
    7. '
' → logprob: -7.076389312744141
    8. '   ' → logprob: -7.951389312744141
    9. '(number' → logprob: -8.82638931274414
    10. '```' → logprob: -8.82638931274414

Token 478: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.5944867730140686
    2. 'pow' → logprob: -1.7194867134094238
    3. ')' → logprob: -2.844486713409424
    4. '   ' → logprob: -2.969486713409424
    5. ' pow' → logprob: -2.969486713409424
    6. ' **' → logprob: -3.344486713409424
    7. '-' → logprob: -4.469486713409424
    8. '```' → logprob: -4.469486713409424
    9. 'def' → logprob: -4.844486713409424
    10. '.pow' → logprob: -4.969486713409424

Token 479: '(-' (ID: 8087)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.8958039283752441
    2. '(-' → logprob: -1.7708039283752441
    3. '(' → logprob: -2.020803928375244
    4. '-' → logprob: -2.020803928375244
    5. 'self' → logprob: -2.145803928375244
    6. '<|end|>' → logprob: -4.270803928375244
    7. '(Mod' → logprob: -5.145803928375244
    8. '(mod' → logprob: -5.395803928375244
    9. ' (' → logprob: -5.520803928375244
    10. '{' → logprob: -6.145803928375244

Token 480: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010294506326317787
    2. '2' → logprob: -5.385294437408447
    3. '(mod' → logprob: -6.635294437408447
    4. 'self' → logprob: -7.010294437408447
    5. 'mod' → logprob: -7.385294437408447
    6. '(Mod' → logprob: -7.385294437408447
    7. '(' → logprob: -7.510294437408447
    8. 'MOD' → logprob: -7.635294437408447
    9. '<|end|>' → logprob: -7.760294437408447
    10. ' (' → logprob: -8.385294914245605

Token 481: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19292336702346802
    2. '=' → logprob: -2.6929233074188232
    3. '(' → logprob: -3.0679233074188232
    4. ' =' → logprob: -3.6929233074188232
    5. '(pow' → logprob: -4.692923545837402
    6. '   ' → logprob: -5.067923545837402
    7. '(mod' → logprob: -5.942923545837402
    8. ' (' → logprob: -5.942923545837402
    9. ' ' → logprob: -6.317923545837402
    10. '<|end|>' → logprob: -6.567923545837402

Token 482: ' �' (ID: 42308)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7838491201400757
    2. '=' → logprob: -1.7838491201400757
    3. '   ' → logprob: -2.5338492393493652
    4. ')' → logprob: -2.5338492393493652
    5. '       ' → logprob: -3.0338492393493652
    6. ' pow' → logprob: -3.5338492393493652
    7. '(pow' → logprob: -3.6588492393493652
    8. '```' → logprob: -4.158849239349365
    9. 'pow' → logprob: -4.408849239349365
    10. ' ' → logprob: -4.408849239349365

Token 483: '�' (ID: 94)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004567899741232395
    2. ' =' → logprob: -6.754568099975586
    3. ')' → logprob: -7.129568099975586
    4. '(' → logprob: -7.379568099975586
    5. '%=' → logprob: -7.504568099975586
    6. '%' → logprob: -7.879568099975586
    7. '(mod' → logprob: -8.379568099975586
    8. '(pow' → logprob: -8.754568099975586
    9. 'mod' → logprob: -9.004568099975586
    10. ' mod' → logprob: -9.754568099975586

Token 484: ' a' (ID: 261)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.46181121468544006
    2. '(self' → logprob: -1.5868111848831177
    3. ' self' → logprob: -1.9618111848831177
    4. ' (' → logprob: -3.8368113040924072
    5. 'pow' → logprob: -6.961811065673828
    6. '(pow' → logprob: -6.961811065673828
    7. 's' → logprob: -8.586811065673828
    8. ' pow' → logprob: -8.586811065673828
    9. 'number' → logprob: -8.711811065673828
    10. '(' → logprob: -9.086811065673828

Token 485: '^(' (ID: 32612)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -1.3491214513778687
    2. ' %' → logprob: -1.3491214513778687
    3. '```' → logprob: -2.099121570587158
    4. ')' → logprob: -2.474121570587158
    5. '(mod' → logprob: -2.849121570587158
    6. '%(' → logprob: -3.224121570587158
    7. '**' → logprob: -3.599121570587158
    8. 'mod' → logprob: -4.099121570587158
    9. '(self' → logprob: -4.099121570587158
    10. '(' → logprob: -4.474121570587158

Token 486: 'p' (ID: 79)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00015562419139314443
    2. ' self' → logprob: -8.875155448913574
    3. '(self' → logprob: -11.250155448913574
    4. '[self' → logprob: -13.625155448913574
    5. '<|end|>' → logprob: -14.750155448913574
    6. '	self' → logprob: -15.000155448913574
    7. '=self' → logprob: -15.500155448913574
    8. 'mod' → logprob: -15.875155448913574
    9. 'MOD' → logprob: -16.25015640258789
    10. '```' → logprob: -16.50015640258789

Token 487: '-' (ID: 12)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04252655804157257
    2. '-' → logprob: -3.5425264835357666
    3. ' self' → logprob: -4.542526721954346
    4. '(self' → logprob: -7.417526721954346
    5. '-self' → logprob: -8.417526245117188
    6. '_mod' → logprob: -8.542526245117188
    7. '```' → logprob: -8.667526245117188
    8. ' -' → logprob: -8.792526245117188
    9. '<|end|>' → logprob: -8.792526245117188
    10. 'mod' → logprob: -8.917526245117188

Token 488: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.8889261304575484e-06
    2. '```' → logprob: -13.250003814697266
    3. ' ' → logprob: -14.125003814697266
    4. 'mod' → logprob: -15.000003814697266
    5. '-' → logprob: -15.000003814697266
    6. 'MOD' → logprob: -15.375003814697266
    7. '{' → logprob: -16.625003814697266
    8. '...' → logprob: -16.625003814697266
    9. 'self' → logprob: -16.750003814697266
    10. '<|end|>' → logprob: -16.875003814697266

Token 489: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.058834999799728394
    2. ' )' → logprob: -3.558835029602051
    3. ',' → logprob: -4.433835029602051
    4. ' modulo' → logprob: -5.058835029602051
    5. ' %' → logprob: -5.183835029602051
    6. ' ,' → logprob: -6.308835029602051
    7. ' mod' → logprob: -6.933835029602051
    8. '       ' → logprob: -7.808835029602051
    9. '   ' → logprob: -7.933835029602051
    10. ')%' → logprob: -8.05883502960205

Token 490: ' mod' (ID: 1812)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03292284533381462
    2. '   ' → logprob: -4.407922744750977
    3. '
' → logprob: -5.282922744750977
    4. ')' → logprob: -5.407922744750977
    5. '```' → logprob: -5.532922744750977
    6. '	' → logprob: -6.282922744750977
    7. ',' → logprob: -7.282922744750977
    8. ' modulo' → logprob: -7.657922744750977
    9. '):
' → logprob: -7.907922744750977
    10. ':
' → logprob: -7.907922744750977

Token 491: ' p' (ID: 275)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3871512711048126
    2. ' self' → logprob: -1.1371512413024902
    3. '(self' → logprob: -8.512151718139648
    4. 'number' → logprob: -11.262151718139648
    5. '       ' → logprob: -11.387151718139648
    6. '	self' → logprob: -11.637151718139648
    7. '   ' → logprob: -11.637151718139648
    8. '```' → logprob: -11.762151718139648
    9. '[self' → logprob: -12.012151718139648
    10. ' number' → logprob: -12.012151718139648

Token 492: '  
' (ID: 4066)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.039576493203639984
    2. ')' → logprob: -3.789576530456543
    3. '   ' → logprob: -4.789576530456543
    4. ',' → logprob: -6.914576530456543
    5. ')
' → logprob: -6.914576530456543
    6. '
' → logprob: -7.164576530456543
    7. ' def' → logprob: -7.539576530456543
    8. '(self' → logprob: -7.539576530456543
    9. '=' → logprob: -7.789576530456543
    10. ' modulo' → logprob: -7.914576530456543

Token 493: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3542054295539856
    2. ')' → logprob: -1.6042053699493408
    3. '   ' → logprob: -2.604205369949341
    4. '```' → logprob: -5.47920560836792
    5. '):' → logprob: -5.60420560836792
    6. ':' → logprob: -5.60420560836792
    7. '<|end|>' → logprob: -5.97920560836792
    8. ' ' → logprob: -6.60420560836792
    9. '):
' → logprob: -6.72920560836792
    10. '  ' → logprob: -7.22920560836792

Token 494: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12234994769096375
    2. ')' → logprob: -3.122349977493286
    3. '   ' → logprob: -3.497349977493286
    4. '```' → logprob: -4.997349739074707
    5. ':
' → logprob: -5.372349739074707
    6. ':' → logprob: -5.372349739074707
    7. '):
' → logprob: -5.622349739074707
    8. ',' → logprob: -5.747349739074707
    9. ' ' → logprob: -5.872349739074707
    10. '
' → logprob: -5.872349739074707

Token 495: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004179429262876511
    2. ' return' → logprob: -6.25417947769165
    3. 'return' → logprob: -6.75417947769165
    4. '	' → logprob: -8.504179000854492
    5. ',' → logprob: -8.629179000854492
    6. '   ' → logprob: -8.754179000854492
    7. '{' → logprob: -9.129179000854492
    8. '=' → logprob: -9.504179000854492
    9. ':
' → logprob: -9.504179000854492
    10. ':' → logprob: -10.129179000854492

Token 496: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.030175182968378067
    2. '       ' → logprob: -3.53017520904541
    3. ' return' → logprob: -7.90517520904541
    4. 'pow' → logprob: -10.03017520904541
    5. 'def' → logprob: -12.03017520904541
    6. '	return' → logprob: -13.03017520904541
    7. '   ' → logprob: -13.15517520904541
    8. '
' → logprob: -14.53017520904541
    9. 'result' → logprob: -14.65517520904541
    10. '```' → logprob: -14.78017520904541

Token 497: ' self' (ID: 1051)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -7.505351095460355e-05
    2. ' pow' → logprob: -9.500075340270996
    3. '(pow' → logprob: -16.50007438659668
    4. '   ' → logprob: -18.62507438659668
    5. 'power' → logprob: -19.50007438659668
    6. 'self' → logprob: -20.87507438659668
    7. '_pow' → logprob: -20.87507438659668
    8. 'Pow' → logprob: -22.50007438659668
    9. '       ' → logprob: -22.62507438659668
    10. '.pow' → logprob: -22.75007438659668

Token 498: '.fast' (ID: 68087)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.6135714650154114
    2. '.mod' → logprob: -1.3635714054107666
    3. '.pow' → logprob: -1.6135714054107666
    4. 'mod' → logprob: -5.988571643829346
    5. '.power' → logprob: -7.613571643829346
    6. '.factor' → logprob: -7.988571643829346
    7. ' pow' → logprob: -8.988571166992188
    8. '._' → logprob: -9.488571166992188
    9. '(pow' → logprob: -10.238571166992188
    10. '_pow' → logprob: -11.613571166992188

Token 499: '_ex' (ID: 5724)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.20108570158481598
    2. '_pow' → logprob: -2.3260858058929443
    3. 'mod' → logprob: -3.3260858058929443
    4. '_mod' → logprob: -3.7010858058929443
    5. '_ex' → logprob: -4.201085567474365
    6. '_power' → logprob: -4.826085567474365
    7. 'power' → logprob: -7.576085567474365
    8. '_exp' → logprob: -8.201086044311523
    9. 'Exponent' → logprob: -11.076086044311523
    10. ' modular' → logprob: -11.326086044311523

Token 500: 'ponent' (ID: 1758)
  Prédit: 'ponent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ponent' → logprob: -0.12884323298931122
    2. 'pow' → logprob: -2.378843307495117
    3. 'p' → logprob: -4.128843307495117
    4. 'pon' → logprob: -5.003843307495117
    5. 'po' → logprob: -5.503843307495117
    6. 'pone' → logprob: -7.003843307495117
    7. 'pom' → logprob: -8.753843307495117
    8. 'power' → logprob: -9.503843307495117
    9. 'ponential' → logprob: -10.003843307495117
    10. '```' → logprob: -10.128843307495117

Token 501: 'iation' (ID: 23408)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.01716741733253002
    2. 'iate' → logprob: -4.642167568206787
    3. '```' → logprob: -6.142167568206787
    4. 'ential' → logprob: -6.642167568206787
    5. 'ial' → logprob: -6.642167568206787
    6. 'iation' → logprob: -7.142167568206787
    7. 'enti' → logprob: -7.517167568206787
    8. '(' → logprob: -7.892167568206787
    9. '_mod' → logprob: -8.767167091369629
    10. '(self' → logprob: -9.017167091369629

Token 502: '(number' (ID: 32955)
  Prédit: '(number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(number' → logprob: -2.7133641196996905e-05
    2. '(' → logprob: -10.75002670288086
    3. 'number' → logprob: -12.12502670288086
    4. '(
' → logprob: -16.25002670288086
    5. '(numbers' → logprob: -17.62502670288086
    6. ' (' → logprob: -18.37502670288086
    7. '[number' → logprob: -18.62502670288086
    8. '(numero' → logprob: -18.62502670288086
    9. '((' → logprob: -18.75002670288086
    10. '(pow' → logprob: -19.50002670288086

Token 503: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020914296328555793
    2. ' ,' → logprob: -8.500208854675293
    3. ',
' → logprob: -13.125208854675293
    4. '       ' → logprob: -13.625208854675293
    5. '   ' → logprob: -14.250208854675293
    6. ',self' → logprob: -15.000208854675293
    7. ',module' → logprob: -15.000208854675293
    8. ',n' → logprob: -15.750208854675293
    9. '```' → logprob: -15.875208854675293
    10. ',len' → logprob: -16.00020980834961

Token 504: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.517272024415433e-05
    2. ' self' → logprob: -9.500075340270996
    3. '       ' → logprob: -15.750075340270996
    4. '(self' → logprob: -16.75007438659668
    5. '           ' → logprob: -17.00007438659668
    6. '
' → logprob: -17.37507438659668
    7. '[self' → logprob: -17.87507438659668
    8. '   ' → logprob: -18.25007438659668
    9. '	self' → logprob: -18.25007438659668
    10. '=self' → logprob: -18.87507438659668

Token 505: '.mod' (ID: 19046)
  Prédit: '.mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mod' → logprob: -0.0009163398644886911
    2. 'mod' → logprob: -7.000916481018066
    3. 'MOD' → logprob: -13.250916481018066
    4. '	mod' → logprob: -13.250916481018066
    5. '```' → logprob: -14.750916481018066
    6. '-' → logprob: -15.500916481018066
    7. '_MOD' → logprob: -15.875916481018066
    8. '
' → logprob: -16.12591552734375
    9. '   ' → logprob: -16.62591552734375
    10. '_mod' → logprob: -17.00091552734375

Token 506: 'ulo' (ID: 5953)
  Prédit: 'ulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulo' → logprob: -8.673547563375905e-05
    2. 'o' → logprob: -10.250086784362793
    3. 'ule' → logprob: -10.750086784362793
    4. 'olo' → logprob: -11.375086784362793
    5. 'u' → logprob: -11.750086784362793
    6. ' modulo' → logprob: -12.250086784362793
    7. 'udo' → logprob: -13.750086784362793
    8. 'Modulo' → logprob: -13.875086784362793
    9. 'self' → logprob: -14.375086784362793
    10. 'mod' → logprob: -14.625086784362793

Token 507: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20141635835170746
    2. ' -' → logprob: -1.7014163732528687
    3. ' ' → logprob: -13.576416015625
    4. '   ' → logprob: -13.951416015625
    5. '       ' → logprob: -15.701416015625
    6. '−' → logprob: -15.826416015625
    7. '```' → logprob: -16.076416015625
    8. 'self' → logprob: -16.076416015625
    9. ')' → logprob: -16.326416015625
    10. '           ' → logprob: -16.451416015625

Token 508: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '```' → logprob: -17.875003814697266
    4. '۲' → logprob: -19.500003814697266
    5. '   ' → logprob: -20.125003814697266
    6. '２' → logprob: -20.500003814697266
    7. '  ' → logprob: -20.687503814697266
    8. 'two' → logprob: -20.812503814697266
    9. '3' → logprob: -20.875003814697266
    10. '
' → logprob: -20.875003814697266

Token 509: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '۲' → logprob: -18.062501907348633
    4. '```' → logprob: -18.062501907348633
    5. '２' → logprob: -18.500001907348633
    6. '3' → logprob: -18.812501907348633
    7. '   ' → logprob: -19.187501907348633
    8. '२' → logprob: -19.437501907348633
    9. '٢' → logprob: -19.500001907348633
    10. '২' → logprob: -19.562501907348633

Token 510: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008801760151982307
    2. ',' → logprob: -4.7588019371032715
    3. ' )' → logprob: -9.008801460266113
    4. '<|end|>' → logprob: -10.383801460266113
    5. '   ' → logprob: -11.133801460266113
    6. ' ,' → logprob: -11.758801460266113
    7. ')
' → logprob: -12.508801460266113
    8. '<|end|>' → logprob: -13.008801460266113
    9. '       ' → logprob: -13.383801460266113
    10. '),' → logprob: -14.008801460266113

Token 511: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04568380489945412
    2. 'def' → logprob: -4.420683860778809
    3. ':' → logprob: -4.545683860778809
    4. '(' → logprob: -4.795683860778809
    5. '```' → logprob: -5.045683860778809
    6. '
' → logprob: -6.170683860778809
    7. '	def' → logprob: -6.920683860778809
    8. '(
' → logprob: -7.170683860778809
    9. ' def' → logprob: -7.170683860778809
    10. '<|end|>' → logprob: -7.420683860778809

Token 512: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2123236209154129
    2. '(' → logprob: -2.3373236656188965
    3. 'def' (adapté à ' def') → logprob: -2.8373236656188965
    4. '(
' → logprob: -3.5873236656188965
    5. ' def' → logprob: -6.3373236656188965
    6. ',' → logprob: -6.3373236656188965
    7. '```' → logprob: -6.5873236656188965
    8. ' ' → logprob: -6.7123236656188965
    9. '	def' → logprob: -7.3373236656188965
    10. ' (' → logprob: -7.9623236656188965

Token 513: ' fast' (ID: 5661)
  Prédit: 'fast'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fast' → logprob: -0.005235767923295498
    2. ' fast' → logprob: -5.25523567199707
    3. '_fast' → logprob: -13.88023567199707
    4. 'def' → logprob: -14.00523567199707
    5. '.fast' → logprob: -16.13023567199707
    6. 'Fast' → logprob: -16.25523567199707
    7. 'slow' → logprob: -17.50523567199707
    8. '-fast' → logprob: -17.88023567199707
    9. 'FAST' → logprob: -18.25523567199707
    10. '
' → logprob: -18.50523567199707

Token 514: '_ex' (ID: 5724)
  Prédit: '_ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ex' → logprob: 0.0
    2. '_exp' → logprob: -17.0
    3. '_' → logprob: -17.875
    4. '_power' → logprob: -19.375
    5. '_exc' → logprob: -19.5
    6. '_execution' → logprob: -19.625
    7. ' _' → logprob: -19.75
    8. 'Exponent' → logprob: -19.75
    9. '_factor' → logprob: -19.875
    10. '_con' → logprob: -20.25

Token 515: 'ponent' (ID: 1758)
  Prédit: 'ponent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ponent' → logprob: -0.0009413579828105867
    2. 'pon' → logprob: -7.000941276550293
    3. 'ponential' → logprob: -12.000941276550293
    4. 'pot' → logprob: -12.125941276550293
    5. 'pt' → logprob: -12.875941276550293
    6. 'p' → logprob: -13.000941276550293
    7. 'pone' → logprob: -13.125941276550293
    8. 'putation' → logprob: -13.375941276550293
    9. 'pow' → logprob: -13.375941276550293
    10. 'pont' → logprob: -13.375941276550293

Token 516: 'iation' (ID: 23408)
  Prédit: 'iation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iation' → logprob: -1.9385402993066236e-05
    2. 'i' → logprob: -10.875019073486328
    3. '```' → logprob: -16.250019073486328
    4. 'ti' → logprob: -16.750019073486328
    5. 'ation' → logprob: -16.750019073486328
    6. 'antiation' → logprob: -17.125019073486328
    7. '   ' → logprob: -17.375019073486328
    8. 'enti' → logprob: -17.750019073486328
    9. 'ization' → logprob: -17.875019073486328
    10. 'iating' → logprob: -18.250019073486328

Token 517: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.07890807837247849
    2. '(' → logprob: -2.5789079666137695
    3. '(
' → logprob: -10.95390796661377
    4. '(

' → logprob: -15.07890796661377
    5. ' (' → logprob: -15.70390796661377
    6. '(number' → logprob: -16.578908920288086
    7. '(Self' → logprob: -17.078908920288086
    8. '(token' → logprob: -17.078908920288086
    9. 'self' → logprob: -17.453908920288086
    10. '(object' → logprob: -17.953908920288086

Token 518: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16057616472244263
    2. '(self' → logprob: -1.9105761051177979
    3. ',self' → logprob: -8.410575866699219
    4. '(' → logprob: -9.535575866699219
    5. 'self' → logprob: -10.410575866699219
    6. ')(' → logprob: -11.910575866699219
    7. ' ,' → logprob: -11.910575866699219
    8. '(number' → logprob: -12.660575866699219
    9. ')' → logprob: -12.785575866699219
    10. ',
' → logprob: -13.285575866699219

Token 519: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.0110534792765975
    2. ' base' → logprob: -4.511053562164307
    3. 'number' → logprob: -12.886053085327148
    4. 'self' → logprob: -13.261053085327148
    5. 'a' → logprob: -13.761053085327148
    6. '(base' → logprob: -15.761053085327148
    7. '	base' → logprob: -16.51105308532715
    8. 'Base' → logprob: -17.01105308532715
    9. 'x' → logprob: -17.38605308532715
    10. 'b' → logprob: -18.51105308532715

Token 520: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.045823566731997e-05
    2. ' ,' → logprob: -11.000020027160645
    3. ',
' → logprob: -13.500020027160645
    4. '   ' → logprob: -13.750020027160645
    5. ',self' → logprob: -14.000020027160645
    6. 'self' → logprob: -15.375020027160645
    7. '       ' → logprob: -16.37502098083496
    8. '_,' → logprob: -17.37502098083496
    9. ',b' → logprob: -17.37502098083496
    10. '    ' → logprob: -17.62502098083496

Token 521: ' exponent' (ID: 51159)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.0033539244905114174
    2. ' exponent' → logprob: -5.753354072570801
    3. 'power' → logprob: -8.7533540725708
    4. 'exp' → logprob: -11.2533540725708
    5. ' power' → logprob: -12.2533540725708
    6. 'expo' → logprob: -15.7533540725708
    7. ' ex' → logprob: -15.8783540725708
    8. 'Exponent' → logprob: -16.378353118896484
    9. ' ' → logprob: -16.878353118896484
    10. '   ' → logprob: -17.878353118896484

Token 522: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3153297007083893
    2. '):' → logprob: -1.315329670906067
    3. ',' → logprob: -6.315329551696777
    4. '):
' → logprob: -8.940329551696777
    5. '   ' → logprob: -9.315329551696777
    6. '       ' → logprob: -11.190329551696777
    7. '```' → logprob: -12.065329551696777
    8. '):

' → logprob: -12.440329551696777
    9. ' ):
' → logprob: -12.565329551696777
    10. ' ):' → logprob: -12.690329551696777

Token 523: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009931975975632668
    2. '(self' → logprob: -5.384932041168213
    3. '(' → logprob: -6.009932041168213
    4. '(
' → logprob: -7.134932041168213
    5. '   ' → logprob: -7.509932041168213
    6. ' (' → logprob: -7.634932041168213
    7. '```' → logprob: -8.009931564331055
    8. ':
' → logprob: -8.384931564331055
    9. '(base' → logprob: -8.759931564331055
    10. '{' → logprob: -9.759931564331055

Token 524: ' """
' (ID: 7037)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6149472594261169
    2. ' result' → logprob: -0.8649472594261169
    3. '       ' → logprob: -3.7399473190307617
    4. ' if' → logprob: -4.364947319030762
    5. 'if' → logprob: -6.489947319030762
    6. '```' → logprob: -8.989947319030762
    7. 'res' → logprob: -10.114947319030762
    8. ' res' → logprob: -10.239947319030762
    9. 'def' → logprob: -10.864947319030762
    10. '   ' → logprob: -10.989947319030762

Token 525: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3461519181728363
    2. 'result' → logprob: -1.3461519479751587
    3. ' result' → logprob: -3.971151828765869
    4. 'if' → logprob: -4.721151828765869
    5. ' if' → logprob: -5.846151828765869
    6. 'def' → logprob: -7.721151828765869
    7. '        ' → logprob: -7.971151828765869
    8. '   ' → logprob: -8.346152305603027
    9. '```' → logprob: -8.346152305603027
    10. '
' → logprob: -8.721152305603027

Token 526: ' Compute' (ID: 45438)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.003788323374465108
    2. ' result' → logprob: -6.003788471221924
    3. '       ' → logprob: -6.753788471221924
    4. 'def' → logprob: -9.503787994384766
    5. 'res' → logprob: -10.003787994384766
    6. 'if' → logprob: -11.378787994384766
    7. '```' → logprob: -12.003787994384766
    8. '   ' → logprob: -12.878787994384766
    9. '
' → logprob: -13.128787994384766
    10. '	result' → logprob: -13.503787994384766

Token 527: ' (' (ID: 350)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.5017789006233215
    2. ' base' → logprob: -1.0017788410186768
    3. 'result' → logprob: -4.376779079437256
    4. '(base' → logprob: -5.001779079437256
    5. 'pow' → logprob: -5.501779079437256
    6. ' result' → logprob: -6.126779079437256
    7. '1' → logprob: -7.251779079437256
    8. '   ' → logprob: -8.376778602600098
    9. '       ' → logprob: -8.501778602600098
    10. ' pow' → logprob: -8.501778602600098

Token 528: 'base' (ID: 5423)
  Prédit: 'base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -5.5577775128767826e-06
    2. ' base' → logprob: -12.250005722045898
    3. '(base' → logprob: -14.250005722045898
    4. '       ' → logprob: -16.7500057220459
    5. '           ' → logprob: -19.6250057220459
    6. '
' → logprob: -20.2500057220459
    7. '	base' → logprob: -20.5000057220459
    8. '   ' → logprob: -21.5000057220459
    9. '_base' → logprob: -21.7500057220459
    10. ')' → logprob: -22.6250057220459

Token 529: ' ^' (ID: 7602)
  Prédit: ' **'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' **' → logprob: -0.14557087421417236
    2. '**' → logprob: -2.145570755004883
    3. ',' → logprob: -4.020570755004883
    4. ' %' → logprob: -8.520570755004883
    5. '```' → logprob: -9.145570755004883
    6. '%' → logprob: -9.770570755004883
    7. ')' → logprob: -10.020570755004883
    8. ' ' → logprob: -10.520570755004883
    9. ' ,' → logprob: -10.770570755004883
    10. '^' → logprob: -10.770570755004883

Token 530: ' exponent' (ID: 51159)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -4.5491004129871726e-05
    2. ' exponent' → logprob: -10.000045776367188
    3. ' ex' → logprob: -18.125045776367188
    4. '(ex' → logprob: -19.625045776367188
    5. ')' → logprob: -20.000045776367188
    6. 'base' → logprob: -20.125045776367188
    7. ' ' → logprob: -20.375045776367188
    8. '   ' → logprob: -20.625045776367188
    9. '       ' → logprob: -21.000045776367188
    10. '	ex' → logprob: -21.500045776367188

Token 531: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014215784904081374
    2. ' )' → logprob: -9.000142097473145
    3. ')%' → logprob: -11.750142097473145
    4. '```' → logprob: -12.750142097473145
    5. ',' → logprob: -12.875142097473145
    6. ' %' → logprob: -13.875142097473145
    7. '%' → logprob: -14.250142097473145
    8. '   ' → logprob: -14.375142097473145
    9. ')
' → logprob: -14.500142097473145
    10. ')>>' → logprob: -14.625142097473145

Token 532: ' modulo' (ID: 112372)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.15395745635032654
    2. ')' → logprob: -2.1539573669433594
    3. '%' → logprob: -3.9039573669433594
    4. ' modulo' → logprob: -6.153957366943359
    5. ' ' → logprob: -6.403957366943359
    6. ')%' → logprob: -7.278957366943359
    7. ',' → logprob: -7.528957366943359
    8. '   ' → logprob: -7.778957366943359
    9. '```' → logprob: -8.02895736694336
    10. ' )' → logprob: -8.27895736694336

Token 533: ' given' (ID: 4335)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1602659672498703
    2. ' self' → logprob: -2.0352659225463867
    3. 'base' → logprob: -4.410265922546387
    4. ' base' → logprob: -5.285265922546387
    5. '(self' → logprob: -9.785265922546387
    6. 'MOD' → logprob: -9.785265922546387
    7. 'mod' → logprob: -10.660265922546387
    8. '       ' → logprob: -11.035265922546387
    9. '(base' → logprob: -11.285265922546387
    10. ' ' → logprob: -11.285265922546387

Token 534: ' modulus' (ID: 149464)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -1.0068870782852173
    2. 'self' → logprob: -1.1318870782852173
    3. ' base' → logprob: -1.7568870782852173
    4. 'mod' → logprob: -2.6318869590759277
    5. 'base' → logprob: -3.1318869590759277
    6. ' modulo' → logprob: -4.506886959075928
    7. ' modulus' → logprob: -5.006886959075928
    8. ' mod' → logprob: -5.631886959075928
    9. 'MOD' → logprob: -6.756886959075928
    10. ' MOD' → logprob: -7.256886959075928

Token 535: ' using' (ID: 2360)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03358680009841919
    2. '(self' → logprob: -3.7835867404937744
    3. ':
' → logprob: -5.5335869789123535
    4. '   ' → logprob: -5.9085869789123535
    5. ',' → logprob: -7.0335869789123535
    6. ' (' → logprob: -7.4085869789123535
    7. 'self' → logprob: -8.033586502075195
    8. ':' → logprob: -8.283586502075195
    9. '(' → logprob: -8.283586502075195
    10. '(
' → logprob: -8.533586502075195

Token 536: ' binary' (ID: 15600)
  Prédit: 'binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binary' → logprob: -1.0201579332351685
    2. 'fast' → logprob: -1.2701579332351685
    3. 'base' → logprob: -1.6451579332351685
    4. ' fast' → logprob: -3.270157814025879
    5. 'def' → logprob: -3.520157814025879
    6. ' binary' → logprob: -3.770157814025879
    7. ' base' → logprob: -3.895157814025879
    8. 'pow' → logprob: -4.145157814025879
    9. '       ' → logprob: -4.395157814025879
    10. 'iter' → logprob: -5.020157814025879

Token 537: ' exponent' (ID: 51159)
  Prédit: ' exponent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exponent' → logprob: -0.18510591983795166
    2. 'ex' → logprob: -1.8101059198379517
    3. '_ex' → logprob: -5.685105800628662
    4. 'search' → logprob: -7.685105800628662
    5. 'exp' → logprob: -7.810105800628662
    6. '```' → logprob: -8.43510627746582
    7. ' search' → logprob: -8.56010627746582
    8. 'pow' → logprob: -8.68510627746582
    9. '_search' → logprob: -8.81010627746582
    10. '
' → logprob: -8.93510627746582

Token 538: 'iation' (ID: 23408)
  Prédit: 'iation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iation' → logprob: -5.633853652398102e-05
    2. '   ' → logprob: -10.250056266784668
    3. '       ' → logprob: -11.125056266784668
    4. 'ation' → logprob: -12.500056266784668
    5. '```' → logprob: -14.000056266784668
    6. ' ' → logprob: -14.750056266784668
    7. '  ' → logprob: -14.875056266784668
    8. 'i' → logprob: -15.000056266784668
    9. '           ' → logprob: -15.750056266784668
    10. '     ' → logprob: -16.125057220458984

Token 539: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08698251098394394
    2. '(self' → logprob: -2.586982488632202
    3. '   ' → logprob: -4.961982727050781
    4. '(' → logprob: -7.711982727050781
    5. ' (' → logprob: -8.836982727050781
    6. ',' → logprob: -9.086982727050781
    7. '(
' → logprob: -9.211982727050781
    8. '```' → logprob: -9.711982727050781
    9. ':
' → logprob: -10.211982727050781
    10. '	' → logprob: -10.211982727050781

Token 540: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013233877718448639
    2. '```' → logprob: -4.763233661651611
    3. '
' → logprob: -6.763233661651611
    4. '        
' → logprob: -7.138233661651611
    5. '   ' → logprob: -7.388233661651611
    6. '(' → logprob: -7.388233661651611
    7. '``' → logprob: -8.26323413848877
    8. '    
' → logprob: -8.26323413848877
    9. '  
' → logprob: -8.38823413848877
    10. ' (' → logprob: -9.38823413848877

Token 541: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013270932249724865
    2. '```' → logprob: -4.388270854949951
    3. '   ' → logprob: -7.888270854949951
    4. '
' → logprob: -9.01327133178711
    5. '        
' → logprob: -9.26327133178711
    6. '``' → logprob: -9.76327133178711
    7. ':
' → logprob: -9.88827133178711
    8. '):
' → logprob: -11.13827133178711
    9. 'result' → logprob: -11.63827133178711
    10. ':' → logprob: -12.26327133178711

Token 542: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004746248945593834
    2. 'result' → logprob: -5.754746437072754
    3. 'if' → logprob: -7.379746437072754
    4. ' if' → logprob: -7.879746437072754
    5. '```' → logprob: -8.379746437072754
    6. ' result' → logprob: -8.504746437072754
    7. '   ' → logprob: -9.504746437072754
    8. 'def' → logprob: -11.004746437072754
    9. '        
' → logprob: -11.254746437072754
    10. '
' → logprob: -11.379746437072754

Token 543: ' if' (ID: 538)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.001171652227640152
    2. ' result' → logprob: -6.751171588897705
    3. '   ' → logprob: -14.001172065734863
    4. '       ' → logprob: -14.626172065734863
    5. '	result' → logprob: -15.876172065734863
    6. '```' → logprob: -18.251171112060547
    7. '_result' → logprob: -18.376171112060547
    8. 'res' → logprob: -19.376171112060547
    9. '
' → logprob: -20.001171112060547
    10. 'if' (adapté à ' if') → logprob: -20.251171112060547

Token 544: ' exponent' (ID: 51159)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.016051027923822403
    2. ' exponent' → logprob: -4.141050815582275
    3. 'base' → logprob: -11.516051292419434
    4. '	ex' → logprob: -13.641051292419434
    5. ' ex' → logprob: -13.766051292419434
    6. '(ex' → logprob: -13.766051292419434
    7. '   ' → logprob: -14.266051292419434
    8. '
' → logprob: -14.391051292419434
    9. ' base' → logprob: -14.766051292419434
    10. 'not' → logprob: -14.766051292419434

Token 545: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07018328458070755
    2. ' ==' → logprob: -2.695183277130127
    3. '=' → logprob: -8.945183753967285
    4. '0' → logprob: -9.195183753967285
    5. '==
' → logprob: -12.945183753967285
    6. '===' → logprob: -13.070183753967285
    7. '[' → logprob: -13.320183753967285
    8. '   ' → logprob: -13.445183753967285
    9. ')==' → logprob: -13.570183753967285
    10. '<=' → logprob: -14.070183753967285

Token 546: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.611323624383658e-05
    2. ' ' → logprob: -9.625065803527832
    3. '1' → logprob: -18.12506675720215
    4. '۰' → logprob: -19.25006675720215
    5. '   ' → logprob: -19.50006675720215
    6. '
' → logprob: -20.37506675720215
    7. '=' → logprob: -21.00006675720215
    8. '00' → logprob: -21.25006675720215
    9. ' ' → logprob: -21.37506675720215
    10. ' ' → logprob: -21.50006675720215

Token 547: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '1' → logprob: -19.625
    4. '۰' → logprob: -21.125
    5. '```' → logprob: -21.25
    6. '   ' → logprob: -21.25
    7. '-' → logprob: -21.5
    8. '00' → logprob: -21.5
    9. '000' → logprob: -21.875
    10. '
' → logprob: -22.1875

Token 548: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.07126010209321976
    2. ':' → logprob: -2.6962602138519287
    3. ':return' → logprob: -6.69625997543335
    4. '       ' → logprob: -10.321260452270508
    5. 'return' → logprob: -10.571260452270508
    6. ':
' → logprob: -11.571260452270508
    7. '           ' → logprob: -11.821260452270508
    8. '   ' → logprob: -12.571260452270508
    9. ' return' → logprob: -12.946260452270508
    10. ' :
' → logprob: -13.196260452270508

Token 549: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5674161911010742
    2. 'return' → logprob: -1.5674161911010742
    3. '1' → logprob: -2.192416191101074
    4. '       ' → logprob: -3.067416191101074
    5. '0' → logprob: -3.442416191101074
    6. ' return' → logprob: -3.692416191101074
    7. ' ' → logprob: -6.067416191101074
    8. '	       ' → logprob: -6.192416191101074
    9. '   ' → logprob: -7.067416191101074
    10. '
' → logprob: -7.192416191101074

Token 550: ' return' (ID: 622)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6957830786705017
    2. 'return' (adapté à ' return') → logprob: -0.6957830786705017
    3. ' return' → logprob: -5.9457831382751465
    4. ' ' → logprob: -11.820782661437988
    5. '           ' → logprob: -12.445782661437988
    6. '       ' → logprob: -13.070782661437988
    7. '0' → logprob: -13.945782661437988
    8. '   ' → logprob: -14.070782661437988
    9. '	return' → logprob: -15.570782661437988
    10. '2' → logprob: -15.945782661437988

Token 551: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -21.12502670288086
    4. '```' → logprob: -21.87502670288086
    5. ' ' → logprob: -22.50002670288086
    6. '       ' → logprob: -23.37502670288086
    7. '۱' → logprob: -23.62502670288086
    8. '0' → logprob: -23.62502670288086
    9. '`' → logprob: -24.25002670288086
    10. '	' → logprob: -24.25002670288086

Token 552: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '   ' → logprob: -20.0
    4. '```' → logprob: -20.375
    5. '۱' → logprob: -21.875
    6. 'def' → logprob: -21.875
    7. '`' → logprob: -22.125
    8. '' → logprob: -22.3125
    9. 'pow' → logprob: -22.625
    10. 'return' → logprob: -22.8125

Token 553: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11210877448320389
    2. '       ' → logprob: -2.3621087074279785
    3. '        
' → logprob: -5.3621087074279785
    4. '    
' → logprob: -6.6121087074279785
    5. 'return' → logprob: -6.8621087074279785
    6. ' 
' → logprob: -6.8621087074279785
    7. '  
' → logprob: -6.9871087074279785
    8. '
' → logprob: -7.4871087074279785
    9. '		
' → logprob: -7.8621087074279785
    10. '   ' → logprob: -7.9871087074279785

Token 554: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32816949486732483
    2. '
' → logprob: -1.3281694650650024
    3. '        
' → logprob: -5.078169345855713
    4. '```' → logprob: -5.078169345855713
    5. '    
' → logprob: -7.578169345855713
    6. '   ' → logprob: -7.578169345855713
    7. '	' → logprob: -8.203169822692871
    8. '		
' → logprob: -8.328169822692871
    9. ' 
' → logprob: -8.453169822692871
    10. '  
' → logprob: -8.703169822692871

Token 555: ' elif' (ID: 9497)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.7402788400650024
    2. 'result' → logprob: -0.9902788400650024
    3. 'temp' → logprob: -2.365278720855713
    4. ' half' → logprob: -3.990278720855713
    5. 'left' → logprob: -3.990278720855713
    6. 'base' → logprob: -4.990278720855713
    7. 'res' → logprob: -5.365278720855713
    8. '       ' → logprob: -5.365278720855713
    9. ' temp' → logprob: -6.740278720855713
    10. ' result' → logprob: -7.115278720855713

Token 556: ' exponent' (ID: 51159)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.035653453320264816
    2. ' exponent' → logprob: -3.4106533527374268
    3. '(ex' → logprob: -6.660653591156006
    4. 'base' → logprob: -7.785653591156006
    5. ' base' → logprob: -8.410653114318848
    6. ' ex' → logprob: -10.160653114318848
    7. ' (' → logprob: -10.660653114318848
    8. '(base' → logprob: -11.035653114318848
    9. '   ' → logprob: -12.410653114318848
    10. 'Exponent' → logprob: -13.910653114318848

Token 557: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -1.066808819770813
    2. ' &' → logprob: -1.691808819770813
    3. '%' → logprob: -2.1918087005615234
    4. '   ' → logprob: -2.1918087005615234
    5. ' ==' → logprob: -3.1918087005615234
    6. '       ' → logprob: -3.4418087005615234
    7. '==' → logprob: -3.4418087005615234
    8. ':' → logprob: -3.6918087005615234
    9. '=' → logprob: -3.9418087005615234
    10. ' ' → logprob: -4.066808700561523

Token 558: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '```' → logprob: -18.5
    4. '[' → logprob: -19.125
    5. '   ' → logprob: -20.0
    6. '=' → logprob: -20.0
    7. '
' → logprob: -20.375
    8. '۲' → logprob: -20.75
    9. '

' → logprob: -21.75
    10. '２' → logprob: -22.0

Token 559: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ' ' → logprob: -17.875
    3. '```' → logprob: -19.75
    4. '
' → logprob: -20.125
    5. '

' → logprob: -22.0
    6. '   ' → logprob: -22.125
    7. '[' → logprob: -22.375
    8. '۲' → logprob: -22.5
    9. '=' → logprob: -23.0
    10. '-' → logprob: -23.375

Token 560: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1602451354265213
    2. ' ==' → logprob: -1.9102451801300049
    3. '==
' → logprob: -12.035244941711426
    4. '===' → logprob: -12.410244941711426
    5. ')==' → logprob: -12.660244941711426
    6. ':' → logprob: -13.035244941711426
    7. '```' → logprob: -13.535244941711426
    8. '=' → logprob: -13.660244941711426
    9. '[' → logprob: -14.160244941711426
    10. '()==' → logprob: -14.410244941711426

Token 561: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010218516690656543
    2. '2' → logprob: -7.001021862030029
    3. ' ' → logprob: -9.126021385192871
    4. '1' → logprob: -13.501021385192871
    5. '```' → logprob: -17.126022338867188
    6. '   ' → logprob: -17.376022338867188
    7. '[' → logprob: -18.251022338867188
    8. '=' → logprob: -18.501022338867188
    9. '00' → logprob: -18.563522338867188
    10. '==' → logprob: -19.688522338867188

Token 562: '0' (ID: 15)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.038042984902858734
    2. '0' → logprob: -3.2880430221557617
    3. ' ' → logprob: -13.538043022155762
    4. '1' → logprob: -15.663043022155762
    5. '```' → logprob: -17.288042068481445
    6. '
' → logprob: -17.663042068481445
    7. '[' → logprob: -19.288042068481445
    8. '   ' → logprob: -19.663042068481445
    9. '``' → logprob: -20.163042068481445
    10. '4' → logprob: -20.663042068481445

Token 563: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.393215149641037
    2. ':
' → logprob: -1.1432151794433594
    3. '       ' → logprob: -5.768215179443359
    4. ':return' → logprob: -6.143215179443359
    5. '<|end|>' → logprob: -7.768215179443359
    6. 'return' → logprob: -9.01821517944336
    7. '):
' → logprob: -9.39321517944336
    8. '   ' → logprob: -9.39321517944336
    9. '           ' → logprob: -9.51821517944336
    10. '```' → logprob: -9.51821517944336

Token 564: '           ' (ID: 352)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5312216877937317
    2. '           ' → logprob: -1.531221628189087
    3. '       ' → logprob: -2.281221628189087
    4. ' return' → logprob: -2.406221628189087
    5. '	       ' → logprob: -7.031221866607666
    6. 'result' → logprob: -7.281221866607666
    7. 'base' → logprob: -7.531221866607666
    8. '   ' → logprob: -7.781221866607666
    9. '```' → logprob: -7.906221866607666
    10. ' base' → logprob: -9.031221389770508

Token 565: ' half' (ID: 6375)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' (adapté à ' half') → logprob: -0.006362670101225376
    2. 'temp' → logprob: -5.756362438201904
    3. ' half' → logprob: -5.756362438201904
    4. 'return' → logprob: -12.256362915039062
    5. 'partial' → logprob: -12.381362915039062
    6. ' temp' → logprob: -12.881362915039062
    7. 'square' → logprob: -13.006362915039062
    8. 'sub' → logprob: -13.631362915039062
    9. 'left' → logprob: -14.381362915039062
    10. 'tmp' → logprob: -14.506362915039062

Token 566: '_power' (ID: 51623)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0008496518130414188
    2. ' =' → logprob: -7.625849723815918
    3. '_result' → logprob: -8.125849723815918
    4. '=result' → logprob: -10.625849723815918
    5. 'result' → logprob: -11.000849723815918
    6. '_power' → logprob: -11.125849723815918
    7. '_pow' → logprob: -11.750849723815918
    8. 'power' → logprob: -14.375849723815918
    9. '_=' → logprob: -14.500849723815918
    10. '_value' → logprob: -15.000849723815918

Token 567: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029750952497124672
    2. ' =' → logprob: -3.5297510623931885
    3. '=
' → logprob: -14.77975082397461
    4. '=self' → logprob: -16.27975082397461
    5. 'return' → logprob: -18.02975082397461
    6. '=

' → logprob: -18.77975082397461
    7. '```' → logprob: -19.52975082397461
    8. '=}' → logprob: -19.77975082397461
    9. '	' → logprob: -19.90475082397461
    10. ' =
' → logprob: -20.15475082397461

Token 568: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.861651490908116e-05
    2. ' self' → logprob: -9.750068664550781
    3. '(self' → logprob: -11.500068664550781
    4. '	self' → logprob: -16.87506866455078
    5. '       ' → logprob: -17.37506866455078
    6. '           ' → logprob: -18.25006866455078
    7. '   ' → logprob: -18.62506866455078
    8. '[self' → logprob: -20.12506866455078
    9. '=self' → logprob: -21.12506866455078
    10. '(' → logprob: -21.37506866455078

Token 569: '.fast' (ID: 68087)
  Prédit: '.fast'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.fast' → logprob: -0.03804344683885574
    2. 'fast' → logprob: -3.28804349899292
    3. ' fast' → logprob: -13.663043022155762
    4. 'Fast' → logprob: -14.913043022155762
    5. '_fast' → logprob: -15.288043022155762
    6. '.' → logprob: -16.038043975830078
    7. '快' → logprob: -16.413043975830078
    8. 'FAST' → logprob: -17.913043975830078
    9. ' .' → logprob: -18.788043975830078
    10. '```' → logprob: -18.788043975830078

Token 570: '_ex' (ID: 5724)
  Prédit: '_ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ex' → logprob: -2.463036435074173e-05
    2. 'ex' → logprob: -10.625024795532227
    3. 'Exponent' → logprob: -15.625024795532227
    4. ' exponent' → logprob: -17.250024795532227
    5. '	ex' → logprob: -18.500024795532227
    6. '\' → logprob: -19.000024795532227
    7. 's' → logprob: -19.750024795532227
    8. '-ex' → logprob: -19.750024795532227
    9. '(ex' → logprob: -20.000024795532227
    10. '_power' → logprob: -20.125024795532227

Token 571: 'ponent' (ID: 1758)
  Prédit: 'ponent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ponent' → logprob: -0.0006759775569662452
    2. 'pot' → logprob: -8.375676155090332
    3. 'putation' → logprob: -8.625676155090332
    4. 'pow' → logprob: -8.750676155090332
    5. 'Exponent' → logprob: -10.500676155090332
    6. 'p' → logprob: -11.000676155090332
    7. 'pt' → logprob: -11.125676155090332
    8. 'pont' → logprob: -11.250676155090332
    9. 'po' → logprob: -11.625676155090332
    10. 'x' → logprob: -12.250676155090332

Token 572: 'iation' (ID: 23408)
  Prédit: 'iation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iation' → logprob: -0.0015192650025710464
    2. 'ation' → logprob: -6.501519203186035
    3. 'i' → logprob: -11.001519203186035
    4. 'ization' → logprob: -16.25152015686035
    5. 'ion' → logprob: -16.37652015686035
    6. '   ' → logprob: -17.00152015686035
    7. 'uation' → logprob: -18.00152015686035
    8. 'antiation' → logprob: -18.00152015686035
    9. '       ' → logprob: -18.25152015686035
    10. 'ti' → logprob: -18.50152015686035

Token 573: '(base' (ID: 25314)
  Prédit: '(base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(base' → logprob: -3.7697225252486533e-06
    2. '(' → logprob: -12.750003814697266
    3. 'base' → logprob: -14.250003814697266
    4. '(
' → logprob: -15.250003814697266
    5. ' base' → logprob: -18.500003814697266
    6. '(BASE' → logprob: -21.625003814697266
    7. ' (' → logprob: -22.125003814697266
    8. '```' → logprob: -22.250003814697266
    9. '	base' → logprob: -22.375003814697266
    10. '(Base' → logprob: -22.875003814697266

Token 574: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13077077269554138
    2. '(base' → logprob: -2.130770683288574
    3. ' ,' → logprob: -6.130770683288574
    4. '(' → logprob: -6.505770683288574
    5. '(
' → logprob: -9.505770683288574
    6. ' base' → logprob: -10.505770683288574
    7. 'base' → logprob: -10.630770683288574
    8. ',
' → logprob: -11.005770683288574
    9. '*' → logprob: -12.130770683288574
    10. '```' → logprob: -12.755770683288574

Token 575: ' exponent' (ID: 51159)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -1.306760805164231e-05
    2. ' exponent' → logprob: -11.25001335144043
    3. '   ' → logprob: -16.87501335144043
    4. '(ex' → logprob: -17.50001335144043
    5. ' ex' → logprob: -18.62501335144043
    6. '	ex' → logprob: -19.37501335144043
    7. ' ' → logprob: -19.75001335144043
    8. 'executor' → logprob: -19.75001335144043
    9. '```' → logprob: -21.87501335144043
    10. '     ' → logprob: -22.00001335144043

Token 576: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.009960653260350227
    2. ' //' → logprob: -4.634960651397705
    3. '#' → logprob: -9.259961128234863
    4. '>>' → logprob: -10.134961128234863
    5. '```' → logprob: -10.509961128234863
    6. '   ' → logprob: -11.259961128234863
    7. ' ' → logprob: -12.259961128234863
    8. '//=' → logprob: -12.509961128234863
    9. '2' → logprob: -12.634961128234863
    10. ' ' → logprob: -13.009961128234863

Token 577: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '```' → logprob: -18.875
    4. '   ' → logprob: -19.5
    5. '>' → logprob: -21.625
    6. '۲' → logprob: -21.875
    7. '
' → logprob: -22.125
    8. '[' → logprob: -22.375
    9. '২' → logprob: -23.25
    10. '    ' → logprob: -23.625

Token 578: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '```' → logprob: -19.875
    4. '   ' → logprob: -21.125
    5. '۲' → logprob: -21.25
    6. '[' → logprob: -22.0
    7. '
' → logprob: -22.25
    8. '>' → logprob: -22.25
    9. '<|end|>' → logprob: -22.25
    10. '>>>' → logprob: -22.625

Token 579: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005461425054818392
    2. ')
' → logprob: -5.2554612159729
    3. '       ' → logprob: -8.880461692810059
    4. ')return' → logprob: -10.505461692810059
    5. '           ' → logprob: -10.755461692810059
    6. ')**' → logprob: -11.255461692810059
    7. ')
' → logprob: -12.255461692810059
    8. ')*' → logprob: -12.255461692810059
    9. '**' → logprob: -12.380461692810059
    10. ')%' → logprob: -12.630461692810059

Token 580: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06748306751251221
    2. '       ' → logprob: -3.0674829483032227
    3. 'return' → logprob: -4.192482948303223
    4. '               ' → logprob: -6.067482948303223
    5. '```' → logprob: -8.192482948303223
    6. '	       ' → logprob: -8.317482948303223
    7. ' return' → logprob: -8.317482948303223
    8. '   ' → logprob: -9.192482948303223
    9. '<|end|>' → logprob: -9.192482948303223
    10. '		' → logprob: -9.317482948303223

Token 581: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.007717243395745754
    2. '           ' → logprob: -5.507717132568359
    3. ' return' → logprob: -5.632717132568359
    4. 'result' → logprob: -10.88271713256836
    5. '
' → logprob: -11.25771713256836
    6. '       ' → logprob: -11.75771713256836
    7. '	return' → logprob: -11.88271713256836
    8. '               ' → logprob: -13.50771713256836
    9. '(return' → logprob: -13.50771713256836
    10. '   ' → logprob: -13.63271713256836

Token 582: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1269443929195404
    2. ' (' → logprob: -2.1269443035125732
    3. '(h' → logprob: -11.126944541931152
    4. '(hidden' → logprob: -14.251944541931152
    5. '(full' → logprob: -15.876944541931152
    6. 'half' → logprob: -16.001943588256836
    7. '(
' → logprob: -16.126943588256836
    8. '           ' → logprob: -16.126943588256836
    9. '(one' → logprob: -16.126943588256836
    10. '(hand' → logprob: -16.626943588256836

Token 583: 'half' (ID: 52836)
  Prédit: 'half'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.0002043748099822551
    2. ' half' → logprob: -8.500204086303711
    3. 'hal' → logprob: -14.625204086303711
    4. '(' → logprob: -14.750204086303711
    5. '_half' → logprob: -20.25020408630371
    6. ' (' → logprob: -21.00020408630371
    7. '   ' → logprob: -21.12520408630371
    8. 'halb' → logprob: -21.50020408630371
    9. ' ' → logprob: -22.00020408630371
    10. 'halve' → logprob: -22.25020408630371

Token 584: '_power' (ID: 51623)
  Prédit: '_power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_power' → logprob: -2.47495681833243e-05
    2. 'power' → logprob: -10.625024795532227
    3. '_POWER' → logprob: -15.875024795532227
    4. 'Power' → logprob: -16.000024795532227
    5. 'pow' → logprob: -16.500024795532227
    6. '_product' → logprob: -17.875024795532227
    7. ' power' → logprob: -18.500024795532227
    8. '_pow' → logprob: -18.625024795532227
    9. 'POWER' → logprob: -18.875024795532227
    10. '_password' → logprob: -19.375024795532227

Token 585: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.47407805919647217
    2. '*' → logprob: -0.9740780591964722
    3. '**' → logprob: -14.349078178405762
    4. ' ' → logprob: -14.849078178405762
    5. ' ' → logprob: -16.099077224731445
    6. ' **' → logprob: -17.974077224731445
    7. '*object' → logprob: -18.224077224731445
    8. '```' → logprob: -18.349077224731445
    9. '   ' → logprob: -19.349077224731445
    10. '*
' → logprob: -20.349077224731445

Token 586: ' half' (ID: 6375)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.0015035520773380995
    2. ' half' → logprob: -6.5015034675598145
    3. 'hal' → logprob: -13.626503944396973
    4. '_half' → logprob: -17.501502990722656
    5. 'Half' → logprob: -20.376502990722656
    6. '   ' → logprob: -20.376502990722656
    7. ' ' → logprob: -20.501502990722656
    8. 'halve' → logprob: -20.876502990722656
    9. 'ha' → logprob: -21.251502990722656
    10. ' ' → logprob: -21.501502990722656

Token 587: '_power' (ID: 51623)
  Prédit: '_power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_power' → logprob: -3.15441757265944e-05
    2. 'power' → logprob: -10.375031471252441
    3. '_POWER' → logprob: -16.125032424926758
    4. 'pow' → logprob: -16.250032424926758
    5. 'Power' → logprob: -17.250032424926758
    6. ' power' → logprob: -17.625032424926758
    7. '-power' → logprob: -18.000032424926758
    8. '_pow' → logprob: -18.125032424926758
    9. 'POWER' → logprob: -18.625032424926758
    10. '.power' → logprob: -18.875032424926758

Token 588: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.668304245569743e-05
    2. ')%' → logprob: -10.000046730041504
    3. ' )' → logprob: -13.625046730041504
    4. ')
' → logprob: -17.625045776367188
    5. '%' → logprob: -17.750045776367188
    6. '       ' → logprob: -17.875045776367188
    7. '```' → logprob: -18.375045776367188
    8. '   ' → logprob: -19.125045776367188
    9. '),' → logprob: -19.125045776367188
    10. '%)' → logprob: -20.125045776367188

Token 589: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.25208380818367004
    2. ' %' → logprob: -1.5020837783813477
    3. '<|end|>' → logprob: -9.252083778381348
    4. ')%' → logprob: -10.752083778381348
    5. ')' → logprob: -11.002083778381348
    6. '       ' → logprob: -11.752083778381348
    7. '```' → logprob: -12.377083778381348
    8. ' ' → logprob: -12.752083778381348
    9. '%n' → logprob: -13.752083778381348
    10. '<|end|>' → logprob: -14.252083778381348

Token 590: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00020354038861114532
    2. ' self' → logprob: -8.500203132629395
    3. '       ' → logprob: -17.50020408630371
    4. '   ' → logprob: -18.87520408630371
    5. '(self' → logprob: -19.37520408630371
    6. '           ' → logprob: -19.62520408630371
    7. '	self' → logprob: -20.12520408630371
    8. ' ' → logprob: -21.37520408630371
    9. '```' → logprob: -22.12520408630371
    10. '=self' → logprob: -22.50020408630371

Token 591: '.mod' (ID: 19046)
  Prédit: '.mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mod' → logprob: -3.15441757265944e-05
    2. 'mod' → logprob: -10.375031471252441
    3. '.' → logprob: -15.875031471252441
    4. '	mod' → logprob: -16.625032424926758
    5. '.module' → logprob: -17.500032424926758
    6. ' .' → logprob: -18.125032424926758
    7. 'Modulo' → logprob: -18.750032424926758
    8. ' мод' → logprob: -19.625032424926758
    9. '_mod' → logprob: -19.750032424926758
    10. '.modal' → logprob: -19.750032424926758

Token 592: 'ulo' (ID: 5953)
  Prédit: 'ulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulo' → logprob: -0.00014966767048463225
    2. 'ule' → logprob: -9.750149726867676
    3. 'olo' → logprob: -10.125149726867676
    4. 'ulu' → logprob: -11.000149726867676
    5. 'o' → logprob: -11.125149726867676
    6. 'ULO' → logprob: -11.875149726867676
    7. 'u' → logprob: -13.000149726867676
    8. ' modulo' → logprob: -13.250149726867676
    9. 'Modulo' → logprob: -13.875149726867676
    10. 'ulus' → logprob: -14.125149726867676

Token 593: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015934066846966743
    2. 'else' → logprob: -4.265933990478516
    3. '
' → logprob: -7.515933990478516
    4. '```' → logprob: -7.515933990478516
    5. '	' → logprob: -7.890933990478516
    6. ' else' → logprob: -9.140933990478516
    7. 'return' → logprob: -9.140933990478516
    8. '   ' → logprob: -10.140933990478516
    9. '<|end|>' → logprob: -10.515933990478516
    10. 'elif' → logprob: -12.265933990478516

Token 594: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04128919914364815
    2. 'else' → logprob: -3.2912890911102295
    3. '```' → logprob: -6.291289329528809
    4. ' else' → logprob: -7.041289329528809
    5. '	' → logprob: -8.041289329528809
    6. '   ' → logprob: -8.791289329528809
    7. '``' → logprob: -11.666289329528809
    8. 'elif' → logprob: -11.791289329528809
    9. 'return' → logprob: -11.791289329528809
    10. '	else' → logprob: -11.916289329528809

Token 595: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.19324572384357452
    2. '       ' → logprob: -1.943245768547058
    3. ' else' → logprob: -3.4432456493377686
    4. '	' → logprob: -8.318245887756348
    5. '   ' → logprob: -8.443245887756348
    6. '	else' → logprob: -10.568245887756348
    7. 'return' → logprob: -11.193245887756348
    8. ' ' → logprob: -11.818245887756348
    9. ' ' → logprob: -11.818245887756348
    10. '```' → logprob: -13.193245887756348

Token 596: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.2176704406738281
    2. ' return' → logprob: -1.3426704406738281
    3. 'return' → logprob: -1.5926704406738281
    4. ':' → logprob: -1.8426704406738281
    5. ':return' → logprob: -3.592670440673828
    6. ' (' → logprob: -4.217670440673828
    7. ':
' → logprob: -4.342670440673828
    8. '       ' → logprob: -4.842670440673828
    9. '(' → logprob: -4.967670440673828
    10. '(return' → logprob: -5.217670440673828

Token 597: '           ' (ID: 352)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.39355751872062683
    2. 'return' → logprob: -1.1435575485229492
    3. '           ' → logprob: -5.393557548522949
    4. '       ' → logprob: -6.393557548522949
    5. ' (' → logprob: -8.01855754852295
    6. '(return' → logprob: -10.01855754852295
    7. '(base' → logprob: -10.76855754852295
    8. '(' → logprob: -10.89355754852295
    9. '               ' → logprob: -11.76855754852295
    10. '	return' → logprob: -12.01855754852295

Token 598: ' previous' (ID: 5880)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.10829585045576096
    2. '(base' → logprob: -3.1082959175109863
    3. ' return' → logprob: -3.4832959175109863
    4. '           ' → logprob: -3.8582959175109863
    5. ' (' → logprob: -5.358295917510986
    6. '(return' → logprob: -6.608295917510986
    7. '   ' → logprob: -9.733295440673828
    8. '(' → logprob: -11.608295440673828
    9. '       ' → logprob: -11.733295440673828
    10. '	return' → logprob: -12.108295440673828

Token 599: '_power' (ID: 51623)
  Prédit: '_result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.18515655398368835
    2. '=' → logprob: -2.5601565837860107
    3. 'result' → logprob: -3.1851565837860107
    4. ' =' → logprob: -3.4351565837860107
    5. '_power' → logprob: -4.310156345367432
    6. '_value' → logprob: -6.060156345367432
    7. 'return' → logprob: -7.185156345367432
    8. 'power' → logprob: -7.185156345367432
    9. 'self' → logprob: -8.81015682220459
    10. '_token' → logprob: -9.06015682220459

Token 600: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804149478673935
    2. ' =' → logprob: -3.288041591644287
    3. 'return' → logprob: -18.288042068481445
    4. '*' → logprob: -18.413042068481445
    5. '=self' → logprob: -19.038042068481445
    6. ',' → logprob: -19.913042068481445
    7. '	' → logprob: -20.663042068481445
    8. ')' → logprob: -20.663042068481445
    9. '*=' → logprob: -20.663042068481445
    10. '=
' → logprob: -20.788042068481445

Token 601: ' self' (ID: 1051)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.003385176183655858
    2. ' (' → logprob: -6.128385066986084
    3. 'self' → logprob: -6.753385066986084
    4. ' self' → logprob: -10.628385543823242
    5. '(base' → logprob: -11.753385543823242
    6. '(this' → logprob: -16.253385543823242
    7. '   ' → logprob: -16.753385543823242
    8. '[self' → logprob: -17.628385543823242
    9. '       ' → logprob: -17.753385543823242
    10. '           ' → logprob: -17.878385543823242

Token 602: '.fast' (ID: 68087)
  Prédit: 'fast'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fast' → logprob: -0.0009176511666737497
    2. '.fast' → logprob: -7.000917434692383
    3. ' fast' → logprob: -12.000917434692383
    4. '_fast' → logprob: -18.125917434692383
    5. 'FAST' → logprob: -19.625917434692383
    6. '
' → logprob: -21.250917434692383
    7. '快' → logprob: -21.500917434692383
    8. '-fast' → logprob: -22.000917434692383
    9. 'slow' → logprob: -22.125917434692383
    10. '```' → logprob: -22.500917434692383

Token 603: '_ex' (ID: 5724)
  Prédit: '_ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ex' → logprob: -0.0017048174049705267
    2. 'ex' → logprob: -6.376704692840576
    3. 'Exponent' → logprob: -13.001705169677734
    4. '-ex' → logprob: -15.876705169677734
    5. ' exponent' → logprob: -16.376705169677734
    6. '\' → logprob: -16.751705169677734
    7. 'self' → logprob: -16.876705169677734
    8. '	ex' → logprob: -17.126705169677734
    9. 'return' → logprob: -18.001705169677734
    10. '(ex' → logprob: -18.251705169677734

Token 604: 'ponent' (ID: 1758)
  Prédit: 'ponent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ponent' → logprob: -0.0008607231429778039
    2. 'pot' → logprob: -7.875860691070557
    3. 'pow' → logprob: -8.125861167907715
    4. 'exp' → logprob: -9.625861167907715
    5. 'Exponent' → logprob: -10.000861167907715
    6. 'putation' → logprob: -11.000861167907715
    7. 'pon' → logprob: -11.375861167907715
    8. 'pt' → logprob: -11.625861167907715
    9. 'iation' → logprob: -11.875861167907715
    10. ' exponent' → logprob: -12.500861167907715

Token 605: 'iation' (ID: 23408)
  Prédit: 'iation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iation' → logprob: -0.3166208565235138
    2. 'ation' → logprob: -1.9416208267211914
    3. 'ex' → logprob: -2.0666208267211914
    4. '_ex' → logprob: -7.191620826721191
    5. 'exp' → logprob: -7.941620826721191
    6. 'self' → logprob: -9.691620826721191
    7. 'imation' → logprob: -10.941620826721191
    8. 'ization' → logprob: -11.191620826721191
    9. 'e' → logprob: -11.316620826721191
    10. 'antiation' → logprob: -11.316620826721191

Token 606: '(base' (ID: 25314)
  Prédit: '(base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(base' → logprob: -5.512236498361744e-07
    2. 'base' → logprob: -14.500000953674316
    3. ' base' → logprob: -19.0
    4. '(' → logprob: -19.375
    5. '(
' → logprob: -21.125
    6. '```' → logprob: -22.0
    7. ';base' → logprob: -23.5
    8. '/base' → logprob: -23.5
    9. '	base' → logprob: -23.625
    10. ' (' → logprob: -24.125

Token 607: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011549479328095913
    2. '(base' → logprob: -4.636549472808838
    3. 'base' → logprob: -6.386549472808838
    4. ' ,' → logprob: -9.761549949645996
    5. ' base' → logprob: -10.136549949645996
    6. '(' → logprob: -12.511549949645996
    7. '```' → logprob: -12.636549949645996
    8. '*' → logprob: -13.386549949645996
    9. '*,' → logprob: -14.511549949645996
    10. ')' → logprob: -15.136549949645996

Token 608: ' exponent' (ID: 51159)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.0019301822176203132
    2. ' base' → logprob: -6.251930236816406
    3. '(base' → logprob: -13.376930236816406
    4. '```' → logprob: -18.251930236816406
    5. '           ' → logprob: -19.751930236816406
    6. ' ' → logprob: -20.251930236816406
    7. '   ' → logprob: -20.876930236816406
    8. 'self' → logprob: -20.876930236816406
    9. '       ' → logprob: -20.876930236816406
    10. '	base' → logprob: -21.001930236816406

Token 609: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.47410061955451965
    2. '-' → logprob: -0.9741005897521973
    3. ',' → logprob: -10.724101066589355
    4. '```' → logprob: -14.349101066589355
    5. ' ' → logprob: -14.474101066589355
    6. ' ,' → logprob: -15.349101066589355
    7. ' ' → logprob: -16.09910011291504
    8. '1' → logprob: -16.47410011291504
    9. '−' → logprob: -17.22410011291504
    10. ')' → logprob: -17.72410011291504

Token 610: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -18.500001907348633
    4. '```' → logprob: -19.125001907348633
    5. '<|end|>' → logprob: -19.625001907348633
    6. '           ' → logprob: -21.500001907348633
    7. '       ' → logprob: -21.750001907348633
    8. '  ' → logprob: -22.000001907348633
    9. '[' → logprob: -22.125001907348633
    10. ')' → logprob: -22.125001907348633

Token 611: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '```' → logprob: -19.625
    4. '   ' → logprob: -20.0
    5. '  ' → logprob: -21.75
    6. '۱' → logprob: -22.25
    7. '
' → logprob: -22.375
    8. ')' → logprob: -22.6875
    9. '-' → logprob: -23.0
    10. '১' → logprob: -23.0625

Token 612: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005985558498650789
    2. ')
' → logprob: -5.505985736846924
    3. ',' → logprob: -6.755985736846924
    4. '*' → logprob: -8.005985260009766
    5. ')*' → logprob: -9.005985260009766
    6. '           ' → logprob: -9.380985260009766
    7. ' *' → logprob: -9.505985260009766
    8. '       ' → logprob: -10.755985260009766
    9. '```' → logprob: -10.755985260009766
    10. '(base' → logprob: -11.005985260009766

Token 613: '           ' (ID: 352)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5445573925971985
    2. ' *' → logprob: -1.2945573329925537
    3. '           ' → logprob: -2.2945573329925537
    4. 'return' → logprob: -3.5445573329925537
    5. ' return' → logprob: -4.544557571411133
    6. '       ' → logprob: -5.919557571411133
    7. '               ' → logprob: -7.169557571411133
    8. '```' → logprob: -7.669557571411133
    9. '*
' → logprob: -7.794557571411133
    10. '(' → logprob: -8.294557571411133

Token 614: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.04829559847712517
    2. '(return' → logprob: -3.298295497894287
    3. ' return' → logprob: -4.798295497894287
    4. '(base' → logprob: -6.298295497894287
    5. ' (' → logprob: -10.048295974731445
    6. '           ' → logprob: -10.048295974731445
    7. '       ' → logprob: -10.798295974731445
    8. '   ' → logprob: -12.673295974731445
    9. '	return' → logprob: -12.673295974731445
    10. '```' → logprob: -13.923295974731445

Token 615: ' (' (ID: 350)
  Prédit: '(base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(base' → logprob: -0.6948772668838501
    2. '(previous' → logprob: -0.9448772668838501
    3. ' (' → logprob: -2.1948771476745605
    4. '(prev' → logprob: -7.1948771476745605
    5. '(pre' → logprob: -13.194877624511719
    6. '(last' → logprob: -13.319877624511719
    7. '(Base' → logprob: -13.569877624511719
    8. '   ' → logprob: -13.569877624511719
    9. '(return' → logprob: -13.694877624511719
    10. '(next' → logprob: -14.069877624511719

Token 616: 'base' (ID: 5423)
  Prédit: '(base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(base' → logprob: -0.04603061079978943
    2. '(previous' → logprob: -3.2960305213928223
    3. 'previous' → logprob: -5.546030521392822
    4. 'base' → logprob: -5.546030521392822
    5. ' (' → logprob: -8.92103099822998
    6. ' base' → logprob: -11.54603099822998
    7. ' previous' → logprob: -12.42103099822998
    8. '(prev' → logprob: -12.54603099822998
    9. '   ' → logprob: -15.54603099822998
    10. '/base' → logprob: -15.67103099822998

Token 617: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5759461522102356
    2. '*' → logprob: -0.8259461522102356
    3. '%' → logprob: -12.575945854187012
    4. ' ' → logprob: -12.950945854187012
    5. ' ' → logprob: -14.700945854187012
    6. '```' → logprob: -15.575945854187012
    7. '**' → logprob: -15.825945854187012
    8. ' %' → logprob: -16.950946807861328
    9. ')' → logprob: -17.200946807861328
    10. '   ' → logprob: -17.325946807861328

Token 618: ' previous' (ID: 5880)
  Prédit: 'previous'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'previous' → logprob: -4.5491004129871726e-05
    2. ' previous' → logprob: -10.000045776367188
    3. '(previous' → logprob: -20.375045776367188
    4. '.previous' → logprob: -22.000045776367188
    5. 'prev' → logprob: -24.125045776367188
    6. ' ' → logprob: -24.250045776367188
    7. '   ' → logprob: -24.250045776367188
    8. '_previous' → logprob: -24.500045776367188
    9. 'Previous' → logprob: -24.875045776367188
    10. '           ' → logprob: -25.000045776367188

Token 619: '_power' (ID: 51623)
  Prédit: '_power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_power' → logprob: -6.392202976712724e-06
    2. '_previous' → logprob: -12.250006675720215
    3. '_pow' → logprob: -14.375006675720215
    4. 'power' → logprob: -15.250006675720215
    5. '```' → logprob: -15.625006675720215
    6. '\' → logprob: -15.625006675720215
    7. 'previous' → logprob: -16.2500057220459
    8. '_' → logprob: -16.3750057220459
    9. '_POWER' → logprob: -17.2500057220459
    10. '*_' → logprob: -18.3750057220459

Token 620: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1008713702030946e-06
    2. ')%' → logprob: -13.375001907348633
    3. ' )' → logprob: -14.750001907348633
    4. '       ' → logprob: -16.750001907348633
    5. '```' → logprob: -17.750001907348633
    6. '   ' → logprob: -18.000001907348633
    7. ')
' → logprob: -19.000001907348633
    8. ']' → logprob: -19.250001907348633
    9. '           ' → logprob: -19.375001907348633
    10. '``' → logprob: -19.500001907348633

Token 621: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.3132631182670593
    2. ' %' → logprob: -1.313263177871704
    3. ')' → logprob: -14.063262939453125
    4. ' ' → logprob: -14.813262939453125
    5. ')%' → logprob: -16.063262939453125
    6. '```' → logprob: -17.313262939453125
    7. '%s' → logprob: -17.438262939453125
    8. ' ' → logprob: -17.563262939453125
    9. '%n' → logprob: -17.938262939453125
    10. '%d' → logprob: -19.063262939453125

Token 622: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0004306692280806601
    2. ' self' → logprob: -7.750430583953857
    3. '(self' → logprob: -18.875431060791016
    4. 'mod' → logprob: -20.000431060791016
    5. '```' → logprob: -20.000431060791016
    6. 'MOD' → logprob: -20.250431060791016
    7. '	self' → logprob: -20.250431060791016
    8. '[self' → logprob: -20.750431060791016
    9. '=self' → logprob: -20.875431060791016
    10. '       ' → logprob: -21.375431060791016

Token 623: '.mod' (ID: 19046)
  Prédit: '.mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mod' → logprob: -0.00033581978641450405
    2. 'mod' → logprob: -8.000335693359375
    3. '	mod' → logprob: -15.125335693359375
    4. '.' → logprob: -16.750335693359375
    5. 'MOD' → logprob: -18.250335693359375
    6. ' .' → logprob: -18.500335693359375
    7. 'omod' → logprob: -18.500335693359375
    8. '_mod' → logprob: -18.625335693359375
    9. ' mod' → logprob: -19.000335693359375
    10. ' мод' → logprob: -19.250335693359375

Token 624: 'ulo' (ID: 5953)
  Prédit: 'ulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulo' → logprob: -0.04302933067083359
    2. 'ULO' → logprob: -3.168029308319092
    3. 'O' → logprob: -11.16802978515625
    4. 'ule' → logprob: -12.91802978515625
    5. 'olo' → logprob: -12.91802978515625
    6. 'o' → logprob: -13.16802978515625
    7. 'u' → logprob: -13.54302978515625
    8. 'MOD' → logprob: -13.54302978515625
    9. 'ulu' → logprob: -13.66802978515625
    10. 'UL' → logprob: -14.41802978515625

Token 625: '

' (ID: 279)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.4058825969696045
    2. 'factor' → logprob: -1.7808825969696045
    3. 'pf' → logprob: -1.9058825969696045
    4. 'pc' → logprob: -4.655882835388184
    5. 'p' → logprob: -6.030882835388184
    6. 'mod' → logprob: -6.405882835388184
    7. 'fact' → logprob: -7.030882835388184
    8. 'max' → logprob: -8.155882835388184
    9. 'f' → logprob: -8.155882835388184
    10. 'pr' → logprob: -8.530882835388184

Token 626: 'factor' (ID: 73174)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.2194376289844513
    2. 'factor' → logprob: -1.719437599182129
    3. 'pc' → logprob: -5.094437599182129
    4. 'pf' → logprob: -5.094437599182129
    5. '#' → logprob: -6.219437599182129
    6. 'comb' → logprob: -6.594437599182129
    7. 'fact' → logprob: -7.344437599182129
    8. 'calculator' → logprob: -7.594437599182129
    9. 'max' → logprob: -8.719437599182129
    10. 'com' → logprob: -8.844437599182129

Token 627: 'ial' (ID: 563)
  Prédit: 'ials'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ials' → logprob: -0.0348353311419487
    2. 'ial' → logprob: -3.4098353385925293
    3. 'al' → logprob: -7.034835338592529
    4. '_pre' → logprob: -9.159834861755371
    5. 'computed' → logprob: -9.159834861755371
    6. ' =' → logprob: -10.409834861755371
    7. '_com' → logprob: -10.784834861755371
    8. 's' → logprob: -11.284834861755371
    9. 'als' → logprob: -11.909834861755371
    10. 'Pre' → logprob: -12.409834861755371

Token 628: '_helper' (ID: 26744)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.09957915544509888
    2. '_pre' → logprob: -2.974579095840454
    3. '_list' → logprob: -4.099579334259033
    4. '_s' → logprob: -4.224579334259033
    5. '_cal' → logprob: -5.099579334259033
    6. '_com' → logprob: -6.349579334259033
    7. 'Pre' → logprob: -6.474579334259033
    8. ' =' → logprob: -6.974579334259033
    9. '_factor' → logprob: -7.599579334259033
    10. '_prec' → logprob: -8.099578857421875

Token 629: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02056092582643032
    2. '=' → logprob: -3.8955609798431396
    3. '.' → logprob: -11.645561218261719
    4. '_factor' → logprob: -12.145561218261719
    5. '_' → logprob: -13.645561218261719
    6. '.factor' → logprob: -14.020561218261719
    7. 'factor' → logprob: -14.645561218261719
    8. 'Factor' → logprob: -14.770561218261719
    9. ')' → logprob: -14.770561218261719
    10. '=f' → logprob: -15.145561218261719

Token 630: ' Pre' (ID: 4659)
  Prédit: 'Pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pre' → logprob: -7.493430894101039e-05
    2. ' Pre' → logprob: -9.500075340270996
    3. '_Pre' → logprob: -19.75007438659668
    4. 'Pref' → logprob: -22.12507438659668
    5. '_pre' → logprob: -22.50007438659668
    6. 'Pro' → logprob: -23.25007438659668
    7. 'Pr' → logprob: -23.37507438659668
    8. 'Post' → logprob: -23.37507438659668
    9. '.Pre' → logprob: -23.50007438659668
    10. 'Per' → logprob: -23.62507438659668

Token 631: 'computed' (ID: 157929)
  Prédit: 'computed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'computed' → logprob: -6.704273118884885e-07
    2. 'Computed' → logprob: -14.750000953674316
    3. 'compiled' → logprob: -15.625000953674316
    4. 'computer' → logprob: -17.375
    5. 'com' → logprob: -17.875
    6. 'compute' → logprob: -18.625
    7. 'count' → logprob: -18.625
    8. ' computed' → logprob: -18.875
    9. 'culated' → logprob: -19.25
    10. 'completed' → logprob: -19.5

Token 632: 'Factor' (ID: 23681)
  Prédit: 'Factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Factor' → logprob: -7.3458322731312364e-06
    2. '_factor' → logprob: -12.125007629394531
    3. 'factor' → logprob: -13.375007629394531
    4. '_FACTOR' → logprob: -16.87500762939453
    5. '```' → logprob: -17.00000762939453
    6. 'Fact' → logprob: -17.37500762939453
    7. '_' → logprob: -17.75000762939453
    8. ' Factor' → logprob: -17.87500762939453
    9. '​' → logprob: -18.12500762939453
    10. 's' → logprob: -18.12500762939453

Token 633: 'ials' (ID: 16596)
  Prédit: 'ials'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ials' → logprob: -0.281610906124115
    2. 'als' → logprob: -1.4066109657287598
    3. 'al' → logprob: -8.656610488891602
    4. 'ial' → logprob: -8.906610488891602
    5. 'Factor' → logprob: -10.406610488891602
    6. '[' → logprob: -11.031610488891602
    7. 'c' → logprob: -11.031610488891602
    8. '_' → logprob: -11.531610488891602
    9. ' factorial' → logprob: -11.656610488891602
    10. 'Als' → logprob: -11.781610488891602

Token 634: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.004216351546347141
    2. '(' → logprob: -5.504216194152832
    3. '(
' → logprob: -9.004216194152832
    4. '((' → logprob: -12.254216194152832
    5. '()' → logprob: -12.754216194152832
    6. '(MAX' → logprob: -13.254216194152832
    7. ' (' → logprob: -14.004216194152832
    8. '(min' → logprob: -14.379216194152832
    9. '(`' → logprob: -14.754216194152832
    10. 'maximum' → logprob: -14.754216194152832

Token 635: 'imum' (ID: 4556)
  Prédit: 'imum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imum' → logprob: -0.0002523992152418941
    2. '_index' → logprob: -8.625252723693848
    3. 'im' → logprob: -10.375252723693848
    4. '_comb' → logprob: -11.000252723693848
    5. 'um' → logprob: -12.125252723693848
    6. 'IMUM' → logprob: -12.250252723693848
    7. 'comb' → logprob: -12.625252723693848
    8. 'maximum' → logprob: -13.125252723693848
    9. '_' → logprob: -13.375252723693848
    10. 'index' → logprob: -13.625252723693848

Token 636: '_comb' (ID: 105956)
  Prédit: '_comb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_comb' → logprob: -1.981667537620524e-06
    2. 'comb' → logprob: -13.250001907348633
    3. '_com' → logprob: -16.250001907348633
    4. '
' → logprob: -17.500001907348633
    5. '```' → logprob: -17.875001907348633
    6. 'Combination' → logprob: -18.000001907348633
    7. '_' → logprob: -18.875001907348633
    8. '_factor' → logprob: -18.875001907348633
    9. '_combo' → logprob: -19.000001907348633
    10. '\' → logprob: -19.625001907348633

Token 637: 'ination' (ID: 3273)
  Prédit: 'ination'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ination' → logprob: -0.038106437772512436
    2. 'ation' → logprob: -3.2881064414978027
    3. 'nation' → logprob: -9.788105964660645
    4. 'bination' → logprob: -11.913105964660645
    5. 'INATION' → logprob: -13.538105964660645
    6. 'in' → logprob: -15.663105964660645
    7. 'ATION' → logprob: -15.913105964660645
    8. '_' → logprob: -16.16310691833496
    9. 'lation' → logprob: -16.28810691833496
    10. 'onation' → logprob: -16.91310691833496

Token 638: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -2.7729658540920354e-05
    2. 'index' → logprob: -10.500027656555176
    3. 'Index' → logprob: -15.875027656555176
    4. 'nd' → logprob: -18.000028610229492
    5. '_INDEX' → logprob: -19.500028610229492
    6. 'n' → logprob: -19.750028610229492
    7. ' index' → logprob: -19.875028610229492
    8. 'dex' → logprob: -20.000028610229492
    9. '```' → logprob: -20.625028610229492
    10. 'ind' → logprob: -20.750028610229492

Token 639: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.184812031686306e-05
    2. ',' → logprob: -9.500082015991211
    3. '<|end|>' → logprob: -12.875082015991211
    4. ' )' → logprob: -13.250082015991211
    5. '+' → logprob: -14.000082015991211
    6. '),' → logprob: -15.125082015991211
    7. '<|end|>' → logprob: -15.250082015991211
    8. '))' → logprob: -15.375082015991211
    9. ')
' → logprob: -15.500082015991211
    10. ',)' → logprob: -15.625082015991211

Token 640: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -4.961759259458631e-06
    2. ' MOD' → logprob: -12.250004768371582
    3. '10' → logprob: -17.0000057220459
    4. 'MO' → logprob: -19.6250057220459
    5. '100' → logprob: -20.8750057220459
    6. 'mod' → logprob: -22.6250057220459
    7. 'MODULE' → logprob: -23.1250057220459
    8. '_MOD' → logprob: -23.2500057220459
    9. '   ' → logprob: -23.3750057220459
    10. 'Mod' → logprob: -23.6250057220459

Token 641: 'ULO' (ID: 63916)
  Prédit: 'ULO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ULO' → logprob: -0.001509739668108523
    2. 'O' → logprob: -6.501509666442871
    3. 'U' → logprob: -12.876509666442871
    4. 'LO' → logprob: -13.126509666442871
    5. 'UL' → logprob: -13.626509666442871
    6. '_' → logprob: -14.876509666442871
    7. 'MOD' → logprob: -15.001509666442871
    8. 'OL' → logprob: -15.376509666442871
    9. 'Modulo' → logprob: -16.001510620117188
    10. '__' → logprob: -16.251510620117188

Token 642: '_PR' (ID: 22300)
  Prédit: '_PR'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_PR' → logprob: -0.0005551783833652735
    2. 'PR' → logprob: -7.875555038452148
    3. ')' → logprob: -8.875555038452148
    4. '\' → logprob: -11.625555038452148
    5. '_Pr' → logprob: -12.250555038452148
    6. '_prime' → logprob: -12.250555038452148
    7. '```' → logprob: -12.375555038452148
    8. '_PRI' → logprob: -12.875555038452148
    9. '_MOD' → logprob: -13.000555038452148
    10. ' PRIME' → logprob: -13.625555038452148

Token 643: 'IME' (ID: 10309)
  Prédit: 'IME'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IME' → logprob: -0.04859213903546333
    2. 'ME' → logprob: -3.0485920906066895
    3. 'OME' → logprob: -13.798592567443848
    4. 'ime' → logprob: -13.923592567443848
    5. 'E' → logprob: -14.298592567443848
    6. 'IM' → logprob: -14.423592567443848
    7. 'INE' → logprob: -14.548592567443848
    8. 'I' → logprob: -14.673592567443848
    9. '\' → logprob: -15.923592567443848
    10. 'M' → logprob: -16.42359161376953

Token 644: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ' )' → logprob: -16.75
    3. ')
' → logprob: -17.125
    4. '))' → logprob: -18.625
    5. ')`' → logprob: -19.0
    6. '),' → logprob: -19.125
    7. '<|end|>' → logprob: -19.5
    8. ')#' → logprob: -20.0
    9. ')}' → logprob: -20.25
    10. ')

' → logprob: -20.5

Token 645: 'def' (ID: 1314)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' → logprob: -1.1489794254302979
    2. 'row' → logprob: -1.3989794254302979
    3. 'total' → logprob: -2.148979425430298
    4. 'distance' → logprob: -2.398979425430298
    5. 'path' → logprob: -2.648979425430298
    6. 'delta' → logprob: -3.773979425430298
    7. 'rows' → logprob: -3.898979425430298
    8. 'def' → logprob: -3.898979425430298
    9. 'start' → logprob: -4.273979187011719
    10. 'result' → logprob: -4.523979187011719

Token 646: ' rectangle' (ID: 45808)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -1.6201269626617432
    2. ' number' → logprob: -1.7451269626617432
    3. 'count' → logprob: -2.245126962661743
    4. 'number' → logprob: -2.495126962661743
    5. ' calculate' → logprob: -2.495126962661743
    6. ' unique' → logprob: -2.745126962661743
    7. ' main' → logprob: -2.995126962661743
    8. ' count' → logprob: -2.995126962661743
    9. 'main' → logprob: -3.245126962661743
    10. 'unique' → logprob: -3.245126962661743

Token 647: '_paths' (ID: 56992)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.08757297694683075
    2. '_paths' → logprob: -2.7125730514526367
    3. '_com' → logprob: -5.587573051452637
    4. '_' → logprob: -5.712573051452637
    5. '_count' → logprob: -5.837573051452637
    6. '_area' → logprob: -5.962573051452637
    7. '_sum' → logprob: -6.837573051452637
    8. '_l' → logprob: -7.337573051452637
    9. '_comb' → logprob: -7.837573051452637
    10. '_number' → logprob: -7.962573051452637

Token 648: '_com' (ID: 10828)
  Prédit: '(row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.0014604736352339387
    2. '(' → logprob: -6.626460552215576
    3. '(start' → logprob: -10.126460075378418
    4. ' (' → logprob: -10.126460075378418
    5. '(_' → logprob: -10.876460075378418
    6. '((' → logprob: -11.876460075378418
    7. '```' → logprob: -11.876460075378418
    8. '(rect' → logprob: -12.251460075378418
    9. '(r' → logprob: -12.751460075378418
    10. '(rows' → logprob: -13.251460075378418

Token 649: 'binations' (ID: 113572)
  Prédit: 'pute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pute' → logprob: -0.17156164348125458
    2. 'bination' → logprob: -2.2965617179870605
    3. 'binations' → logprob: -3.4215617179870605
    4. 'b' → logprob: -4.0465617179870605
    5. 'putation' → logprob: -5.4215617179870605
    6. 'bine' → logprob: -7.6715617179870605
    7. 'puted' → logprob: -8.046561241149902
    8. '(b' → logprob: -8.046561241149902
    9. '_b' → logprob: -8.171561241149902
    10. 'p' → logprob: -8.546561241149902

Token 650: '(sum' (ID: 45528)
  Prédit: '(row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.029804181307554245
    2. '(' → logprob: -3.529804229736328
    3. ' (' → logprob: -10.779804229736328
    4. '((' → logprob: -11.779804229736328
    5. '(_' → logprob: -12.279804229736328
    6. '(rect' → logprob: -12.279804229736328
    7. '(start' → logprob: -12.654804229736328
    8. '(r' → logprob: -12.904804229736328
    9. '(line' → logprob: -13.154804229736328
    10. '(
' → logprob: -13.279804229736328

Token 651: '_x' (ID: 7054)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6512939929962158
    2. '_indices' → logprob: -2.026293992996216
    3. '_coords' → logprob: -2.401293992996216
    4. '_coordinates' → logprob: -3.026293992996216
    5. '_start' → logprob: -3.276293992996216
    6. '_)' → logprob: -3.401293992996216
    7. ')_' → logprob: -3.776293992996216
    8. '_,' → logprob: -3.901293992996216
    9. '_of' → logprob: -4.401293754577637
    10. ')' → logprob: -4.651293754577637

Token 652: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0037789319176226854
    2. '_,' → logprob: -6.00377893447876
    3. '):' → logprob: -7.50377893447876
    4. ' ,' → logprob: -8.128778457641602
    5. '_start' → logprob: -8.503778457641602
    6. ',row' → logprob: -9.253778457641602
    7. ',_' → logprob: -10.503778457641602
    8. ',start' → logprob: -10.628778457641602
    9. '_row' → logprob: -11.003778457641602
    10. 's' → logprob: -11.253778457641602

Token 653: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.002807963639497757
    2. ' sum' → logprob: -5.877808094024658
    3. 'diff' → logprob: -13.2528076171875
    4. 'difference' → logprob: -14.6278076171875
    5. 'start' → logprob: -15.6278076171875
    6. '(sum' → logprob: -16.3778076171875
    7. 'max' → logprob: -16.5028076171875
    8. ' ' → logprob: -16.7528076171875
    9. '	sum' → logprob: -16.7528076171875
    10. '
' → logprob: -16.7528076171875

Token 654: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.0004521222144830972
    2. 'y' → logprob: -7.875452041625977
    3. '_x' → logprob: -10.750452041625977
    4. '```' → logprob: -10.875452041625977
    5. ')' → logprob: -11.375452041625977
    6. '_' → logprob: -11.875452041625977
    7. 'sum' → logprob: -12.500452041625977
    8. '_sum' → logprob: -13.250452041625977
    9. '	y' → logprob: -14.750452041625977
    10. 'Y' → logprob: -14.750452041625977

Token 655: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004744468256831169
    2. ',' → logprob: -5.504744529724121
    3. '):
' → logprob: -7.379744529724121
    4. ')' → logprob: -10.629744529724121
    5. ':' → logprob: -11.504744529724121
    6. '):
' → logprob: -12.379744529724121
    7. ' ):' → logprob: -13.379744529724121
    8. '   ' → logprob: -14.629744529724121
    9. '):

' → logprob: -15.004744529724121
    10. '}:' → logprob: -15.254744529724121

Token 656: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040088213980197906
    2. ':' → logprob: -3.290088176727295
    3. ':return' → logprob: -6.915088176727295
    4. ':
' → logprob: -8.290088653564453
    5. '```' → logprob: -8.915088653564453
    6. ' return' → logprob: -8.915088653564453
    7. 'return' → logprob: -9.290088653564453
    8. '       ' → logprob: -9.415088653564453
    9. '[' → logprob: -9.790088653564453
    10. '(' → logprob: -9.790088653564453

Token 657: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5463213324546814
    2. 'return' → logprob: -1.0463213920593262
    3. ' return' → logprob: -2.671321392059326
    4. '```' → logprob: -8.046320915222168
    5. 'result' → logprob: -9.671320915222168
    6. 'n' → logprob: -9.671320915222168
    7. '       ' → logprob: -11.171320915222168
    8. '    ' → logprob: -11.296320915222168
    9. '	return' → logprob: -11.546320915222168
    10. '    
' → logprob: -11.921320915222168

Token 658: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1735629290342331
    2. '"""' → logprob: -2.923563003540039
    3. '"""
' → logprob: -2.923563003540039
    4. ')' → logprob: -3.423563003540039
    5. 'def' → logprob: -5.298563003540039
    6. ' return' → logprob: -5.423563003540039
    7. '    ' → logprob: -5.548563003540039
    8. 'return' → logprob: -6.298563003540039
    9. '```' → logprob: -6.548563003540039
    10. '       ' → logprob: -7.298563003540039

Token 659: ' Count' (ID: 6789)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.04057517275214195
    2. ' return' → logprob: -3.5405752658843994
    3. '   ' → logprob: -4.66557502746582
    4. 'n' → logprob: -7.41557502746582
    5. 'result' → logprob: -8.16557502746582
    6. '#' → logprob: -8.54057502746582
    7. 'total' → logprob: -10.41557502746582
    8. '```' → logprob: -10.54057502746582
    9. 'count' → logprob: -10.66557502746582
    10. '"""' → logprob: -10.79057502746582

Token 660: ' the' (ID: 290)
  Prédit: '(sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sum' → logprob: -1.1552821397781372
    2. 'sum' → logprob: -1.5302821397781372
    3. ' sum' → logprob: -1.9052821397781372
    4. '(' → logprob: -2.6552820205688477
    5. ' (' → logprob: -2.6552820205688477
    6. 'return' → logprob: -2.9052820205688477
    7. ' return' → logprob: -3.4052820205688477
    8. ' number' → logprob: -3.7802820205688477
    9. '(
' → logprob: -3.9052820205688477
    10. ' the' → logprob: -4.030282020568848

Token 661: ' number' (ID: 2086)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.09284629672765732
    2. ' number' → logprob: -2.842846393585205
    3. 'return' → logprob: -4.092846393585205
    4. 'ways' → logprob: -5.092846393585205
    5. 'paths' → logprob: -5.342846393585205
    6. 'total' → logprob: -6.467846393585205
    7. ' return' → logprob: -7.717846393585205
    8. ' ways' → logprob: -7.842846393585205
    9. ' total' → logprob: -8.717845916748047
    10. ' paths' → logprob: -9.092845916748047

Token 662: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.2431298792362213
    2. '_of' → logprob: -1.868129849433899
    3. ' of' → logprob: -2.8681299686431885
    4. '_paths' → logprob: -6.868129730224609
    5. '
' → logprob: -7.243129730224609
    6. '```' → logprob: -7.368129730224609
    7. 'ofs' → logprob: -7.493129730224609
    8. '_' → logprob: -7.743129730224609
    9. 's' → logprob: -8.36812973022461
    10. 'def' → logprob: -8.36812973022461

Token 663: ' ways' (ID: 6984)
  Prédit: ' ways'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ways' → logprob: -0.5881472229957581
    2. 'ways' → logprob: -0.9631472229957581
    3. 'paths' → logprob: -2.9631471633911133
    4. ' paths' → logprob: -4.588147163391113
    5. 'steps' → logprob: -7.588147163391113
    6. '_paths' → logprob: -9.088147163391113
    7. ' lattice' → logprob: -9.213147163391113
    8. 'routes' → logprob: -9.213147163391113
    9. 'unique' → logprob: -9.338147163391113
    10. ' unique' → logprob: -10.588147163391113

Token 664: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.44848403334617615
    2. '(sum' → logprob: -1.1984840631484985
    3. ' to' → logprob: -3.073483943939209
    4. '(' → logprob: -4.823483943939209
    5. 'sum' → logprob: -5.823483943939209
    6. '   ' → logprob: -7.198483943939209
    7. 'def' → logprob: -7.448483943939209
    8. '(row' → logprob: -7.698483943939209
    9. ')' → logprob: -9.073484420776367
    10. '=' → logprob: -9.198484420776367

Token 665: ' move' (ID: 5275)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.44540736079216003
    2. 'choose' → logprob: -1.8204073905944824
    3. 'go' → logprob: -2.4454073905944824
    4. 'reach' → logprob: -2.9454073905944824
    5. 'sum' → logprob: -3.5704073905944824
    6. ' move' → logprob: -4.195407390594482
    7. ' go' → logprob: -5.695407390594482
    8. 'arr' → logprob: -6.070407390594482
    9. 'travel' → logprob: -6.320407390594482
    10. ' reach' → logprob: -6.445407390594482

Token 666: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5953552722930908
    2. 'sum' → logprob: -1.2203552722930908
    3. '(sum' → logprob: -1.9703552722930908
    4. 'right' → logprob: -4.595355033874512
    5. ' sum' → logprob: -5.970355033874512
    6. ' from' → logprob: -6.970355033874512
    7. '=sum' → logprob: -8.845355033874512
    8. '
' → logprob: -8.845355033874512
    9. ' right' → logprob: -9.595355033874512
    10. 'down' → logprob: -9.720355033874512

Token 667: ' (' (ID: 350)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.22874316573143005
    2. ' sum' → logprob: -2.228743076324463
    3. '(sum' → logprob: -2.478743076324463
    4. ' (' → logprob: -4.853743076324463
    5. '(' → logprob: -5.353743076324463
    6. '0' → logprob: -8.103743553161621
    7. 'row' → logprob: -10.103743553161621
    8. 'start' → logprob: -10.478743553161621
    9. '(row' → logprob: -10.853743553161621
    10. '(start' → logprob: -12.103743553161621

Token 668: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001752891344949603
    2. 'sum' → logprob: -6.626752853393555
    3. 'row' → logprob: -8.751752853393555
    4. '(' → logprob: -9.251752853393555
    5. ')' → logprob: -9.626752853393555
    6. ' ' → logprob: -9.751752853393555
    7. ' sum' → logprob: -11.001752853393555
    8. '
' → logprob: -12.001752853393555
    9. 'start' → logprob: -12.001752853393555
    10. '(sum' → logprob: -12.001752853393555

Token 669: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000919796759262681
    2. ' ,' → logprob: -7.375919818878174
    3. '_,' → logprob: -9.125919342041016
    4. '```' → logprob: -10.375919342041016
    5. ',x' → logprob: -10.500919342041016
    6. ',
' → logprob: -10.500919342041016
    7. ')' → logprob: -10.625919342041016
    8. '+,' → logprob: -11.250919342041016
    9. '`,' → logprob: -11.750919342041016
    10. 'x' → logprob: -11.875919342041016

Token 670: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015045057516545057
    2. ' ' → logprob: -6.501504421234131
    3. 'sum' → logprob: -14.251504898071289
    4. ',' → logprob: -14.376504898071289
    5. ')' → logprob: -14.376504898071289
    6. ' sum' → logprob: -15.876504898071289
    7. '   ' → logprob: -17.37650489807129
    8. ' ' → logprob: -18.12650489807129
    9. '
' → logprob: -18.25150489807129
    10. '  ' → logprob: -18.25150489807129

Token 671: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011055010370910168
    2. ' to' → logprob: -5.011054992675781
    3. 'to' → logprob: -5.511054992675781
    4. ' )' → logprob: -8.511054992675781
    5. ',' → logprob: -9.386054992675781
    6. ')
' → logprob: -14.261054992675781
    7. ' ' → logprob: -14.511054992675781
    8. ' ,' → logprob: -15.011054992675781
    9. '   ' → logprob: -15.136054992675781
    10. '```' → logprob: -15.511054992675781

Token 672: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.4743780195713043
    2. 'to' → logprob: -0.9743779897689819
    3. ',' → logprob: -9.099377632141113
    4. '   ' → logprob: -9.724377632141113
    5. 'def' → logprob: -10.224377632141113
    6. '```' → logprob: -10.474377632141113
    7. ')' → logprob: -11.099377632141113
    8. '
' → logprob: -11.599377632141113
    9. ' in' → logprob: -11.599377632141113
    10. ' ' → logprob: -12.224377632141113

Token 673: ' (' (ID: 350)
  Prédit: '(sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sum' → logprob: -0.007864023558795452
    2. ' (' → logprob: -5.257863998413086
    3. 'sum' → logprob: -6.132863998413086
    4. ' sum' → logprob: -7.882863998413086
    5. '(' → logprob: -9.632863998413086
    6. '
' → logprob: -12.007863998413086
    7. '(s' → logprob: -12.882863998413086
    8. '```' → logprob: -13.757863998413086
    9. '   ' → logprob: -14.507863998413086
    10. ',sum' → logprob: -14.632863998413086

Token 674: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.02656036987900734
    2. ' sum' → logprob: -3.6515603065490723
    3. '(sum' → logprob: -8.52656078338623
    4. '
' → logprob: -10.90156078338623
    5. ',sum' → logprob: -11.52656078338623
    6. ')' → logprob: -11.77656078338623
    7. ',' → logprob: -11.90156078338623
    8. '(' → logprob: -12.40156078338623
    9. ' (' → logprob: -12.52656078338623
    10. ' ' → logprob: -13.02656078338623

Token 675: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.0003613256849348545
    2. 'x' → logprob: -8.000361442565918
    3. ',' → logprob: -11.250361442565918
    4. '   ' → logprob: -12.000361442565918
    5. '```' → logprob: -13.000361442565918
    6. ')' → logprob: -13.875361442565918
    7. '_,' → logprob: -13.875361442565918
    8. '_y' → logprob: -14.125361442565918
    9. ')_' → logprob: -14.750361442565918
    10. '_' → logprob: -14.750361442565918

Token 676: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00632961792871356
    2. '+' → logprob: -5.256329536437988
    3. ' +' → logprob: -7.381329536437988
    4. ' ,' → logprob: -8.881329536437988
    5. ',
' → logprob: -9.506329536437988
    6. ')' → logprob: -9.756329536437988
    7. '```' → logprob: -9.756329536437988
    8. '+,' → logprob: -9.881329536437988
    9. ',sum' → logprob: -10.131329536437988
    10. '
' → logprob: -11.631329536437988

Token 677: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.16023072600364685
    2. ' sum' → logprob: -1.9102307558059692
    3. ',sum' → logprob: -12.66023063659668
    4. '	sum' → logprob: -14.16023063659668
    5. '
' → logprob: -14.91023063659668
    6. '(sum' → logprob: -15.16023063659668
    7. ' ' → logprob: -15.16023063659668
    8. ',' → logprob: -15.16023063659668
    9. '_sum' → logprob: -15.28523063659668
    10. '.sum' → logprob: -15.28523063659668

Token 678: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.00044127836008556187
    2. 'y' → logprob: -7.750441074371338
    3. '   ' → logprob: -12.500441551208496
    4. ')' → logprob: -12.500441551208496
    5. '_x' → logprob: -13.250441551208496
    6. '_sum' → logprob: -15.125441551208496
    7. '```' → logprob: -15.625441551208496
    8. ' ' → logprob: -15.750441551208496
    9. 'sum' → logprob: -15.875441551208496
    10. '_' → logprob: -16.00044059753418

Token 679: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003589416155591607
    2. ')
' → logprob: -8.375358581542969
    3. '):
' → logprob: -9.875358581542969
    4. '),' → logprob: -10.750358581542969
    5. ' )' → logprob: -10.875358581542969
    6. '   ' → logprob: -11.125358581542969
    7. 'with' → logprob: -12.500358581542969
    8. '):' → logprob: -12.750358581542969
    9. 'using' → logprob: -12.750358581542969
    10. '):

' → logprob: -13.375358581542969

Token 680: ' moving' (ID: 10067)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023934293538331985
    2. ':' → logprob: -4.523934364318848
    3. '):' → logprob: -5.648934364318848
    4. '):
' → logprob: -5.773934364318848
    5. ')' → logprob: -6.148934364318848
    6. ' with' → logprob: -7.273934364318848
    7. ':
' → logprob: -7.523934364318848
    8. ' using' → logprob: -7.648934364318848
    9. ',' → logprob: -7.773934364318848
    10. 'def' → logprob: -8.023934364318848

Token 681: ' only' (ID: 1606)
  Prédit: 'only'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'only' → logprob: -0.639366090297699
    2. ' only' → logprob: -0.764366090297699
    3. 'right' → logprob: -5.139366149902344
    4. 'down' → logprob: -8.139366149902344
    5. '
' → logprob: -8.264366149902344
    6. ' right' → logprob: -9.264366149902344
    7. '   ' → logprob: -9.639366149902344
    8. '_only' → logprob: -10.389366149902344
    9. '```' → logprob: -11.014366149902344
    10. ' strictly' → logprob: -11.264366149902344

Token 682: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.19453154504299164
    2. ' right' → logprob: -2.0695314407348633
    3. 'down' → logprob: -3.0695314407348633
    4. ' down' → logprob: -5.569531440734863
    5. '   ' → logprob: -9.569531440734863
    6. '
' → logprob: -9.569531440734863
    7. 'Right' → logprob: -10.444531440734863
    8. 'in' → logprob: -10.819531440734863
    9. '_right' → logprob: -10.819531440734863
    10. ' in' → logprob: -10.944531440734863

Token 683: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7185884118080139
    2. 'and' → logprob: -1.3435883522033691
    3. ' or' → logprob: -1.4685883522033691
    4. 'or' → logprob: -4.093588352203369
    5. ',' → logprob: -6.343588352203369
    6. ')' → logprob: -6.468588352203369
    7. '```' → logprob: -7.218588352203369
    8. '   ' → logprob: -7.968588352203369
    9. '<|end|>' → logprob: -8.843588829040527
    10. ' )' → logprob: -9.718588829040527

Token 684: ' down' (ID: 1917)
  Prédit: 'down'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'down' → logprob: -0.0009283758117817342
    2. ' down' → logprob: -7.0009284019470215
    3. 'up' → logprob: -11.000927925109863
    4. '```' → logprob: -16.25092887878418
    5. '
' → logprob: -16.87592887878418
    6. '_down' → logprob: -17.37592887878418
    7. ' up' → logprob: -17.62592887878418
    8. 'right' → logprob: -18.50092887878418
    9. 'Down' → logprob: -18.62592887878418
    10. ' downward' → logprob: -19.37592887878418

Token 685: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08813229948282242
    2. '):
' → logprob: -3.338132381439209
    3. '.' → logprob: -4.213132381439209
    4. '):' → logprob: -4.338132381439209
    5. ':' → logprob: -4.463132381439209
    6. '.
' → logprob: -6.338132381439209
    7. ':
' → logprob: -6.338132381439209
    8. ')' → logprob: -6.588132381439209
    9. '
' → logprob: -6.588132381439209
    10. ',' → logprob: -7.713132381439209

Token 686: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0359480194747448
    2. '"""' → logprob: -3.7859480381011963
    3. ')' → logprob: -4.785947799682617
    4. '"""
' → logprob: -5.535947799682617
    5. '```' → logprob: -8.535947799682617
    6. ')
' → logprob: -10.160947799682617
    7. '""' → logprob: -10.160947799682617
    8. '):
' → logprob: -10.910947799682617
    9. '):' → logprob: -11.160947799682617
    10. '
' → logprob: -12.285947799682617

Token 687: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006231890991330147
    2. ')' → logprob: -5.381231784820557
    3. '"""' → logprob: -6.506231784820557
    4. '```' → logprob: -9.881232261657715
    5. 'return' → logprob: -10.881232261657715
    6. '"""
' (adapté à ' """
') → logprob: -11.256232261657715
    7. '):' → logprob: -11.381232261657715
    8. '):
' → logprob: -11.756232261657715
    9. '
' → logprob: -12.631232261657715
    10. ' return' → logprob: -14.006232261657715

Token 688: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004797664878424257
    2. 'return' → logprob: -7.875479698181152
    3. ' return' → logprob: -9.250479698181152
    4. '```' → logprob: -12.875479698181152
    5. '       ' → logprob: -15.250479698181152
    6. '    ' → logprob: -15.500479698181152
    7. '   ' → logprob: -15.875479698181152
    8. 'count' → logprob: -16.37548065185547
    9. 'result' → logprob: -16.50048065185547
    10. '	return' → logprob: -17.00048065185547

Token 689: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.005801282357424498
    2. '   ' → logprob: -5.630801200866699
    3. 'total' → logprob: -6.130801200866699
    4. ' return' → logprob: -11.2558012008667
    5. 'result' → logprob: -12.2558012008667
    6. 'steps' → logprob: -13.3808012008667
    7. '```' → logprob: -13.6308012008667
    8. 'n' → logprob: -13.7558012008667
    9. '#' → logprob: -14.6308012008667
    10. 'comb' → logprob: -14.7558012008667

Token 690: ' factorial' (ID: 111204)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.038192275911569595
    2. ' factorial' → logprob: -3.2881922721862793
    3. ' factor' → logprob: -9.413192749023438
    4. '   ' → logprob: -9.788192749023438
    5. 'fact' → logprob: -11.538192749023438
    6. '  ' → logprob: -14.413192749023438
    7. ' ' → logprob: -14.538192749023438
    8. 'fraction' → logprob: -14.663192749023438
    9. '_factor' → logprob: -14.913192749023438
    10. ' ' → logprob: -15.288192749023438

Token 691: '_helper' (ID: 26744)
  Prédit: '_helper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_helper' → logprob: -1.7432603272027336e-06
    2. '_helpers' → logprob: -14.500001907348633
    3. '_factor' → logprob: -14.500001907348633
    4. 'Helper' → logprob: -15.250001907348633
    5. '```' → logprob: -15.750001907348633
    6. 'factor' → logprob: -16.250001907348633
    7. 'helper' → logprob: -16.500001907348633
    8. '._' → logprob: -16.625001907348633
    9. '_help' → logprob: -17.750001907348633
    10. '_Helper' → logprob: -18.000001907348633

Token 692: '.com' (ID: 1136)
  Prédit: '.com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.com' → logprob: -0.00013440960901789367
    2. ' .' → logprob: -9.500134468078613
    3. '.factor' → logprob: -10.625134468078613
    4. '.combine' → logprob: -10.750134468078613
    5. '.combo' → logprob: -11.750134468078613
    6. 'comb' → logprob: -13.375134468078613
    7. '.' → logprob: -14.000134468078613
    8. '.function' → logprob: -14.875134468078613
    9. '.connection' → logprob: -15.000134468078613
    10. '.con' → logprob: -15.250134468078613

Token 693: 'bination' (ID: 180524)
  Prédit: 'bination'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bination' → logprob: -0.0005543439765460789
    2. 'b' → logprob: -7.50055456161499
    3. 'ination' → logprob: -15.375554084777832
    4. '(b' → logprob: -15.625554084777832
    5. '.b' → logprob: -15.875554084777832
    6. '_b' → logprob: -15.875554084777832
    7. '```' → logprob: -15.875554084777832
    8. 'bine' → logprob: -16.12555503845215
    9. '*b' → logprob: -16.25055503845215
    10. 'bin' → logprob: -16.62555503845215

Token 694: '(sum' (ID: 45528)
  Prédit: '(sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sum' → logprob: -0.00021915239631198347
    2. 'sum' → logprob: -8.500219345092773
    3. '(' → logprob: -11.250219345092773
    4. '(
' → logprob: -13.375219345092773
    5. '((' → logprob: -14.000219345092773
    6. ' sum' → logprob: -16.125219345092773
    7. ' (' → logprob: -16.250219345092773
    8. '
' → logprob: -16.875219345092773
    9. '```' → logprob: -17.375219345092773
    10. '(abs' → logprob: -18.000219345092773

Token 695: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.002475777640938759
    2. 'x' → logprob: -6.002475738525391
    3. '(x' → logprob: -16.75247573852539
    4. '{x' → logprob: -17.12747573852539
    5. 's' → logprob: -17.50247573852539
    6. '(sum' → logprob: -17.62747573852539
    7. '[' → logprob: -17.87747573852539
    8. '```' → logprob: -18.00247573852539
    9. ')' → logprob: -18.12747573852539
    10. '(_' → logprob: -18.50247573852539

Token 696: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2520579695701599
    2. ' +' → logprob: -1.5020580291748047
    3. '+y' → logprob: -9.502058029174805
    4. '+
' → logprob: -10.877058029174805
    5. ' plus' → logprob: -11.502058029174805
    6. '   ' → logprob: -11.877058029174805
    7. '+s' → logprob: -12.752058029174805
    8. ' +
' → logprob: -12.752058029174805
    9. '
' → logprob: -13.002058029174805
    10. ' ' → logprob: -13.377058029174805

Token 697: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0001234428636962548
    2. ' sum' → logprob: -9.000123023986816
    3. '(sum' → logprob: -17.000123977661133
    4. ' ' → logprob: -19.125123977661133
    5. '	sum' → logprob: -19.625123977661133
    6. '=sum' → logprob: -20.125123977661133
    7. 'summ' → logprob: -20.250123977661133
    8. '   ' → logprob: -20.625123977661133
    9. '
' → logprob: -20.875123977661133
    10. 's' → logprob: -21.125123977661133

Token 698: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.03808292746543884
    2. 'y' → logprob: -3.2880828380584717
    3. '_x' → logprob: -10.91308307647705
    4. 'x' → logprob: -11.03808307647705
    5. 'sum' → logprob: -12.66308307647705
    6. 's' → logprob: -13.66308307647705
    7. '+y' → logprob: -14.03808307647705
    8. '```' → logprob: -14.41308307647705
    9. '_sum' → logprob: -15.03808307647705
    10. '_' → logprob: -15.91308307647705

Token 699: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022006903309375048
    2. ',sum' → logprob: -6.127200603485107
    3. ' ,' → logprob: -11.377201080322266
    4. '`,' → logprob: -13.377201080322266
    5. 'sum' → logprob: -13.627201080322266
    6. ',
' → logprob: -14.752201080322266
    7. '```' → logprob: -15.752201080322266
    8. '(sum' → logprob: -15.752201080322266
    9. ',s' → logprob: -16.252201080322266
    10. '',' → logprob: -16.252201080322266

Token 700: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0005532711511477828
    2. ' sum' → logprob: -7.500553131103516
    3. '	sum' → logprob: -16.250553131103516
    4. '   ' → logprob: -17.125553131103516
    5. '(sum' → logprob: -17.250553131103516
    6. 'summ' → logprob: -17.625553131103516
    7. ' ' → logprob: -18.625553131103516
    8. '=sum' → logprob: -18.750553131103516
    9. 'min' → logprob: -19.125553131103516
    10. ',sum' → logprob: -19.375553131103516

Token 701: '_y' (ID: 9410)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -1.981667537620524e-06
    2. 'x' → logprob: -13.875001907348633
    3. '_y' → logprob: -13.875001907348633
    4. '```' → logprob: -19.125001907348633
    5. ')' → logprob: -21.250001907348633
    6. '_' → logprob: -21.750001907348633
    7. 's' → logprob: -21.875001907348633
    8. '_)' → logprob: -22.125001907348633
    9. ')_' → logprob: -22.625001907348633
    10. '   ' → logprob: -23.000001907348633

Token 702: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.127333340875339e-06
    2. ')
' → logprob: -12.625003814697266
    3. '   ' → logprob: -15.000003814697266
    4. ' )' → logprob: -15.125003814697266
    5. ')return' → logprob: -15.750003814697266
    6. '```' → logprob: -17.000003814697266
    7. '<|end|>' → logprob: -17.500003814697266
    8. '))' → logprob: -17.625003814697266
    9. '}' → logprob: -18.125003814697266
    10. '),' → logprob: -18.125003814697266

Token 703: 'def' (ID: 1314)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'steps' → logprob: -1.2673596143722534
    2. 'result' → logprob: -1.3923596143722534
    3. 'delta' → logprob: -1.6423596143722534
    4. 'path' → logprob: -2.892359733581543
    5. 'difference' → logprob: -2.892359733581543
    6. 'diff' → logprob: -3.392359733581543
    7. 'row' → logprob: -4.017359733581543
    8. 'total' → logprob: -4.017359733581543
    9. 'start' → logprob: -4.267359733581543
    10. 'sum' → logprob: -4.267359733581543

Token 704: ' rectangle' (ID: 45808)
  Prédit: 'rectangle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rectangle' → logprob: -0.7137168049812317
    2. 'main' → logprob: -1.463716745376587
    3. ' main' → logprob: -1.838716745376587
    4. ' rectangle' → logprob: -2.338716745376587
    5. 'paths' → logprob: -5.213716983795166
    6. 'calculate' → logprob: -5.588716983795166
    7. 'path' → logprob: -6.338716983795166
    8. 'rect' → logprob: -6.463716983795166
    9. ' paths' → logprob: -6.588716983795166
    10. 'number' → logprob: -6.713716983795166

Token 705: '_paths' (ID: 56992)
  Prédit: '_paths'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_paths' → logprob: -0.0002198676229454577
    2. '_path' → logprob: -9.25022029876709
    3. '_points' → logprob: -9.25022029876709
    4. 'paths' → logprob: -12.00022029876709
    5. '_moves' → logprob: -12.62522029876709
    6. '_positions' → logprob: -12.87522029876709
    7. '_coordinates' → logprob: -13.37522029876709
    8. '_' → logprob: -13.50022029876709
    9. '_start' → logprob: -13.50022029876709
    10. '_area' → logprob: -13.75022029876709

Token 706: '_com' (ID: 10828)
  Prédit: '_com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_com' → logprob: -0.47889524698257446
    2. '(' → logprob: -1.8538951873779297
    3. '_sum' → logprob: -2.4788951873779297
    4. '(row' → logprob: -2.8538951873779297
    5. '(start' → logprob: -3.3538951873779297
    6. '_start' → logprob: -4.85389518737793
    7. '_from' → logprob: -4.97889518737793
    8. '_count' → logprob: -5.10389518737793
    9. '_' → logprob: -5.22889518737793
    10. '_rectangle' → logprob: -5.60389518737793

Token 707: 'binations' (ID: 113572)
  Prédit: 'binations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binations' → logprob: -0.0001475220051361248
    2. 'plet' → logprob: -9.875147819519043
    3. 'b' → logprob: -10.000147819519043
    4. 'bination' → logprob: -10.375147819519043
    5. '```' → logprob: -11.500147819519043
    6. 'bine' → logprob: -12.875147819519043
    7. 'positions' → logprob: -13.750147819519043
    8. '_b' → logprob: -13.875147819519043
    9. 'bin' → logprob: -14.125147819519043
    10. 'inations' → logprob: -14.500147819519043

Token 708: '_offset' (ID: 15447)
  Prédit: '(row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.07318148016929626
    2. '(' → logprob: -2.823181390762329
    3. '(column' → logprob: -4.948181629180908
    4. '(sum' → logprob: -6.573181629180908
    5. '(start' → logprob: -7.198181629180908
    6. ' (' → logprob: -7.323181629180908
    7. '(_' → logprob: -7.698181629180908
    8. '_sum' → logprob: -8.44818115234375
    9. '(_,' → logprob: -9.07318115234375
    10. '((' → logprob: -9.44818115234375

Token 709: '(one' (ID: 92717)
  Prédit: '(row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.10266423970460892
    2. '(sum' → logprob: -2.3526642322540283
    3. '(' → logprob: -6.227664470672607
    4. '(column' → logprob: -8.22766399383545
    5. '(start' → logprob: -10.35266399383545
    6. '(s' → logprob: -10.35266399383545
    7. '(rect' → logprob: -10.35266399383545
    8. ' (' → logprob: -11.10266399383545
    9. '(offset' → logprob: -11.10266399383545
    10. '(line' → logprob: -11.35266399383545

Token 710: '_p' (ID: 1359)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.40379077196121216
    2. '_based' → logprob: -2.2787907123565674
    3. '_' → logprob: -2.7787907123565674
    4. '_,' → logprob: -3.1537907123565674
    5. ' ,' → logprob: -3.7787907123565674
    6. ',_' → logprob: -4.5287909507751465
    7. '_row' → logprob: -4.6537909507751465
    8. ')' → logprob: -4.6537909507751465
    9. '_minus' → logprob: -5.2787909507751465
    10. 'based' → logprob: -5.2787909507751465

Token 711: 'ast' (ID: 629)
  Prédit: 'oint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'oint' → logprob: -0.39274075627326965
    2. 'art' → logprob: -1.5177407264709473
    3. 'os' → logprob: -3.1427407264709473
    4. 'ar' → logprob: -4.142740726470947
    5. 'aram' → logprob: -4.392740726470947
    6. 'iece' → logprob: -4.517740726470947
    7. 'osition' → logprob: -5.517740726470947
    8. 'a' → logprob: -5.767740726470947
    9. 't' → logprob: -6.392740726470947
    10. ')' → logprob: -6.392740726470947

Token 712: '_x' (ID: 7054)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0592055320739746
    2. '):' → logprob: -1.1842055320739746
    3. '_start' → logprob: -2.3092055320739746
    4. '_row' → logprob: -2.3092055320739746
    5. '_' → logprob: -3.4342055320739746
    6. '_rectangle' → logprob: -3.5592055320739746
    7. ',' → logprob: -3.9342055320739746
    8. ')_' → logprob: -4.309205532073975
    9. '_coordinates' → logprob: -4.309205532073975
    10. 'row' → logprob: -5.059205532073975

Token 713: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014168102643452585
    2. ' ,' → logprob: -9.250142097473145
    3. '_,' → logprob: -10.875142097473145
    4. '):' → logprob: -11.500142097473145
    5. ',
' → logprob: -12.750142097473145
    6. '):
' → logprob: -13.375142097473145
    7. ',column' → logprob: -13.500142097473145
    8. '_one' → logprob: -13.875142097473145
    9. '   ' → logprob: -13.875142097473145
    10. '_plus' → logprob: -14.000142097473145

Token 714: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.1031595915555954
    2. 'two' → logprob: -2.4781596660614014
    3. ' one' → logprob: -4.478159427642822
    4. ' two' → logprob: -5.978159427642822
    5. 'zero' → logprob: -9.60315990447998
    6. 'offset' → logprob: -10.60315990447998
    7. 'first' → logprob: -10.85315990447998
    8. 'y' → logprob: -11.47815990447998
    9. 'second' → logprob: -11.60315990447998
    10. '   ' → logprob: -11.60315990447998

Token 715: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.0004901225329376757
    2. 'past' → logprob: -8.000490188598633
    3. ',' → logprob: -9.500490188598633
    4. 'p' → logprob: -10.875490188598633
    5. '```' → logprob: -11.000490188598633
    6. ',_' → logprob: -11.000490188598633
    7. '_one' → logprob: -12.250490188598633
    8. 'one' → logprob: -12.375490188598633
    9. 'def' → logprob: -13.000490188598633
    10. ')' → logprob: -13.625490188598633

Token 716: 'ast' (ID: 629)
  Prédit: 'ast'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ast' → logprob: -0.13552464544773102
    2. 'one' → logprob: -2.1355247497558594
    3. 'ne' → logprob: -5.260524749755859
    4. 'aste' → logprob: -6.885524749755859
    5. '_one' → logprob: -7.260524749755859
    6. 'st' → logprob: -8.13552474975586
    7. 'past' → logprob: -8.13552474975586
    8. 'y' → logprob: -9.13552474975586
    9. '_y' → logprob: -9.26052474975586
    10. 'p' → logprob: -9.51052474975586

Token 717: '_y' (ID: 9410)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5194026827812195
    2. '_y' → logprob: -1.1444027423858643
    3. 'one' → logprob: -2.5194027423858643
    4. '_one' → logprob: -6.019402503967285
    5. ',' → logprob: -6.269402503967285
    6. 'x' → logprob: -7.519402503967285
    7. '_x' → logprob: -8.519402503967285
    8. 'Y' → logprob: -8.894402503967285
    9. ' y' → logprob: -9.144402503967285
    10. ')' → logprob: -9.394402503967285

Token 718: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000273971410933882
    2. '):' → logprob: -8.250273704528809
    3. '):
' → logprob: -12.250273704528809
    4. '   ' → logprob: -13.000273704528809
    5. ' ,' → logprob: -13.500273704528809
    6. ',column' → logprob: -13.750273704528809
    7. ',row' → logprob: -13.875273704528809
    8. ',
' → logprob: -13.875273704528809
    9. ')' → logprob: -15.250273704528809
    10. ',y' → logprob: -15.250273704528809

Token 719: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.371278315782547
    2. '(one' → logprob: -1.2462782859802246
    3. '(sum' → logprob: -3.8712782859802246
    4. '(row' → logprob: -7.371278285980225
    5. 'one' → logprob: -8.371278762817383
    6. '(' → logprob: -8.496278762817383
    7. ' one' → logprob: -8.871278762817383
    8. '(two' → logprob: -9.496278762817383
    9. '(x' → logprob: -9.746278762817383
    10. '(
' → logprob: -9.871278762817383

Token 720: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2252647429704666
    2. 'return' → logprob: -1.7252647876739502
    3. ' return' → logprob: -4.475264549255371
    4. '```' → logprob: -5.350264549255371
    5. '
' → logprob: -5.725264549255371
    6. '	return' → logprob: -6.475264549255371
    7. 'sum' → logprob: -7.225264549255371
    8. '    
' → logprob: -7.975264549255371
    9. 'offset' → logprob: -8.475264549255371
    10. '    ' → logprob: -8.725264549255371

Token 721: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014710607938468456
    2. '"""
' → logprob: -6.876471042633057
    3. '"""' → logprob: -8.501471519470215
    4. '
' → logprob: -9.501471519470215
    5. 'return' → logprob: -10.126471519470215
    6. '#' → logprob: -10.376471519470215
    7. '```' → logprob: -10.376471519470215
    8. '    ' → logprob: -10.626471519470215
    9. 'def' → logprob: -11.251471519470215
    10. ' return' → logprob: -12.251471519470215

Token 722: ' Helper' (ID: 31006)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.04734203219413757
    2. 'def' → logprob: -3.17234206199646
    3. '"""
' → logprob: -6.797341823577881
    4. '
' → logprob: -7.297341823577881
    5. 'result' → logprob: -7.297341823577881
    6. 'offset' → logprob: -7.297341823577881
    7. 'start' → logprob: -7.922341823577881
    8. 'sum' → logprob: -8.547342300415039
    9. 'count' → logprob: -8.797342300415039
    10. '   ' → logprob: -9.172342300415039

Token 723: ' to' (ID: 316)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006894043181091547
    2. '(' → logprob: -6.506894111633301
    3. '(one' → logprob: -6.881894111633301
    4. '(
' → logprob: -6.881894111633301
    5. ')' → logprob: -7.131894111633301
    6. ':' → logprob: -7.631894111633301
    7. '   ' → logprob: -7.881894111633301
    8. '<|end|>' → logprob: -8.3818941116333
    9. '):' → logprob: -8.8818941116333
    10. '
' → logprob: -8.8818941116333

Token 724: ' count' (ID: 3605)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1676170825958252
    2. 'def' → logprob: -2.917617082595825
    3. 'calculate' → logprob: -2.917617082595825
    4. 'count' → logprob: -3.417617082595825
    5. ' return' → logprob: -5.042616844177246
    6. 'compute' → logprob: -5.292616844177246
    7. ' calculate' → logprob: -7.417616844177246
    8. 'offset' → logprob: -8.042616844177246
    9. ' count' → logprob: -8.042616844177246
    10. '
' → logprob: -8.292616844177246

Token 725: ' paths' (ID: 23373)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.06488379091024399
    2. 'ways' → logprob: -3.6898837089538574
    3. 'number' → logprob: -4.189883708953857
    4. ' the' → logprob: -4.939883708953857
    5. '(' → logprob: -5.064883708953857
    6. 'def' → logprob: -5.939883708953857
    7. '(
' → logprob: -6.064883708953857
    8. '(number' → logprob: -6.064883708953857
    9. ' ways' → logprob: -8.064884185791016
    10. 'paths' → logprob: -8.189884185791016

Token 726: ' to' (ID: 316)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.09718043357133865
    2. '(one' → logprob: -2.4721803665161133
    3. 'def' → logprob: -5.847180366516113
    4. 'one' → logprob: -6.097180366516113
    5. '(' → logprob: -6.722180366516113
    6. ' from' → logprob: -7.347180366516113
    7. '   ' → logprob: -7.972180366516113
    8. '```' → logprob: -8.097180366516113
    9. 'that' → logprob: -8.472180366516113
    10. ')' → logprob: -9.597180366516113

Token 727: ' cell' (ID: 4206)
  Prédit: '(one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(one' → logprob: -0.07532977312803268
    2. 'one' → logprob: -3.2003297805786133
    3. '(' → logprob: -4.200329780578613
    4. ' (' → logprob: -5.075329780578613
    5. ' one' → logprob: -5.950329780578613
    6. '(x' → logprob: -6.200329780578613
    7. '(sum' → logprob: -6.575329780578613
    8. 'def' → logprob: -6.825329780578613
    9. 'the' → logprob: -6.950329780578613
    10. 'sum' → logprob: -7.200329780578613

Token 728: ' (' (ID: 350)
  Prédit: '(one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(one' → logprob: -0.02310885116457939
    2. 'one' → logprob: -4.398108959197998
    3. '(' → logprob: -4.898108959197998
    4. ' (' → logprob: -7.398108959197998
    5. ' one' → logprob: -7.523108959197998
    6. 'just' → logprob: -7.898108959197998
    7. 'at' → logprob: -7.898108959197998
    8. ' just' → logprob: -8.52310848236084
    9. 'with' → logprob: -9.14810848236084
    10. 'to' → logprob: -9.52310848236084

Token 729: 'one' (ID: 690)
  Prédit: 'one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.00013762809976469725
    2. ' one' → logprob: -9.500137329101562
    3. '
' → logprob: -10.250137329101562
    4. ')' → logprob: -11.250137329101562
    5. '(one' → logprob: -11.375137329101562
    6. 'x' → logprob: -14.125137329101562
    7. '   ' → logprob: -14.250137329101562
    8. ',' → logprob: -14.875137329101562
    9. '_one' → logprob: -15.250137329101562
    10. '),' → logprob: -15.250137329101562

Token 730: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.00017350474081467837
    2. ')' → logprob: -9.625173568725586
    3. ' _' → logprob: -10.500173568725586
    4. ')_' → logprob: -10.750173568725586
    5. 'past' → logprob: -11.125173568725586
    6. '_' → logprob: -11.500173568725586
    7. ' past' → logprob: -12.000173568725586
    8. '_b' → logprob: -12.250173568725586
    9. '_more' → logprob: -12.375173568725586
    10. ',' → logprob: -12.500173568725586

Token 731: 'ast' (ID: 629)
  Prédit: 'ast'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ast' → logprob: -0.028164081275463104
    2. '_p' → logprob: -3.6531641483306885
    3. '_ast' → logprob: -7.153163909912109
    4. 'past' → logprob: -8.02816390991211
    5. '_' → logprob: -8.65316390991211
    6. ')' → logprob: -8.77816390991211
    7. 'aste' → logprob: -9.65316390991211
    8. 'аст' → logprob: -10.15316390991211
    9. '_last' → logprob: -10.52816390991211
    10. '_t' → logprob: -10.65316390991211

Token 732: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.22578535974025726
    2. 'x' → logprob: -1.6007853746414185
    3. '_y' → logprob: -8.850785255432129
    4. 'one' → logprob: -9.350785255432129
    5. ',' → logprob: -10.225785255432129
    6. '```' → logprob: -10.850785255432129
    7. ')' → logprob: -11.350785255432129
    8. 'y' → logprob: -11.350785255432129
    9. '_one' → logprob: -11.475785255432129
    10. '
' → logprob: -11.475785255432129

Token 733: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019809138029813766
    2. '-' → logprob: -4.519809246063232
    3. ' -' → logprob: -5.519809246063232
    4. '+' → logprob: -6.019809246063232
    5. ' ,' → logprob: -6.644809246063232
    6. ' +' → logprob: -7.394809246063232
    7. '```' → logprob: -8.894808769226074
    8. ')' → logprob: -9.769808769226074
    9. ',
' → logprob: -10.144808769226074
    10. ' ' → logprob: -10.519808769226074

Token 734: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.07889176905155182
    2. ' one' → logprob: -2.5788917541503906
    3. '   ' → logprob: -14.70389175415039
    4. '(one' → logprob: -14.70389175415039
    5. ',' → logprob: -15.32889175415039
    6. '
' → logprob: -15.57889175415039
    7. ' ' → logprob: -15.57889175415039
    8. '_one' → logprob: -15.82889175415039
    9. ')' → logprob: -15.95389175415039
    10. 'One' → logprob: -16.07889175415039

Token 735: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.0019633667543530464
    2. 'past' → logprob: -6.251963138580322
    3. ',' → logprob: -10.87696361541748
    4. 'p' → logprob: -11.62696361541748
    5. ')' → logprob: -12.87696361541748
    6. '_y' → logprob: -14.00196361541748
    7. 'y' → logprob: -14.25196361541748
    8. ')_' → logprob: -14.50196361541748
    9. ',_' → logprob: -14.62696361541748
    10. 'Past' → logprob: -14.75196361541748

Token 736: 'ast' (ID: 629)
  Prédit: 'ast'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ast' → logprob: -0.09104137867689133
    2. '_y' → logprob: -2.841041326522827
    3. 'y' → logprob: -4.341041564941406
    4. 'one' → logprob: -5.466041564941406
    5. 'past' → logprob: -5.591041564941406
    6. 'aste' → logprob: -5.841041564941406
    7. '_one' → logprob: -6.466041564941406
    8. '_p' → logprob: -6.591041564941406
    9. 'ay' → logprob: -8.716041564941406
    10. 'asted' → logprob: -8.841041564941406

Token 737: '_y' (ID: 9410)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.39024627208709717
    2. '_y' → logprob: -1.1402462720870972
    3. '1' → logprob: -6.015246391296387
    4. 'one' → logprob: -8.015246391296387
    5. ')' → logprob: -8.390246391296387
    6. '```' → logprob: -8.890246391296387
    7. '_one' → logprob: -9.140246391296387
    8. ',' → logprob: -10.015246391296387
    9. 'x' → logprob: -11.015246391296387
    10. '_x' → logprob: -11.390246391296387

Token 738: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2596113979816437
    2. ')' → logprob: -1.5096113681793213
    3. '):
' → logprob: -4.8846116065979
    4. '):

' → logprob: -10.634611129760742
    5. ',' → logprob: -10.884611129760742
    6. '):
' → logprob: -11.259611129760742
    7. '   ' → logprob: -11.509611129760742
    8. ').' → logprob: -11.759611129760742
    9. '),' → logprob: -12.259611129760742
    10. ')
' → logprob: -12.384611129760742

Token 739: ' inclusive' (ID: 29482)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5221138596534729
    2. '   ' → logprob: -1.3971138000488281
    3. ':' → logprob: -2.022113800048828
    4. ')' → logprob: -4.647113800048828
    5. '):
' → logprob: -4.647113800048828
    6. ',' → logprob: -5.897113800048828
    7. '.' → logprob: -6.772113800048828
    8. ':return' → logprob: -7.022113800048828
    9. ':
' → logprob: -7.522113800048828
    10. '(row' → logprob: -7.772113800048828

Token 740: ' of' (ID: 328)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0505995973944664
    2. '):
' → logprob: -3.8005995750427246
    3. '   ' → logprob: -4.300599575042725
    4. ':' → logprob: -4.675599575042725
    5. ')' → logprob: -5.675599575042725
    6. 'def' → logprob: -8.300600051879883
    7. ',' → logprob: -9.175600051879883
    8. '.' → logprob: -9.300600051879883
    9. '():' → logprob: -10.050600051879883
    10. ':
' → logprob: -10.050600051879883

Token 741: ' edges' (ID: 22569)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.7853047847747803
    2. 'one' → logprob: -1.2853047847747803
    3. ' the' → logprob: -2.0353047847747803
    4. ' one' → logprob: -2.7853047847747803
    5. ')' → logprob: -3.6603047847747803
    6. 'boundary' → logprob: -5.410305023193359
    7. '1' → logprob: -5.535305023193359
    8. 'both' → logprob: -5.910305023193359
    9. '(' → logprob: -6.035305023193359
    10. ' boundaries' → logprob: -6.285305023193359

Token 742: '.
' (ID: 558)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.24180708825588226
    2. '   ' → logprob: -2.241806983947754
    3. '):
' → logprob: -2.491806983947754
    4. ':' → logprob: -3.991806983947754
    5. ')' → logprob: -5.116806983947754
    6. ',' → logprob: -8.116806983947754
    7. '
' → logprob: -8.491806983947754
    8. ':
' → logprob: -8.491806983947754
    9. '```' → logprob: -9.366806983947754
    10. '():' → logprob: -9.491806983947754

Token 743: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2660715579986572
    2. '):' → logprob: -1.6410715579986572
    3. '):
' → logprob: -3.7660715579986572
    4. ')' → logprob: -4.641071319580078
    5. ':' → logprob: -5.891071319580078
    6. '```' → logprob: -6.516071319580078
    7. '(one' → logprob: -7.016071319580078
    8. 'def' → logprob: -7.641071319580078
    9. '
' → logprob: -8.391071319580078
    10. '(' → logprob: -8.641071319580078

Token 744: ' Used' (ID: 21420)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2676391899585724
    2. '"""' → logprob: -2.01763916015625
    3. ')' → logprob: -2.76763916015625
    4. '"""
' → logprob: -3.89263916015625
    5. '```' → logprob: -4.26763916015625
    6. '):' → logprob: -6.01763916015625
    7. '):
' → logprob: -6.26763916015625
    8. '""' → logprob: -9.51763916015625
    9. '``' → logprob: -10.51763916015625
    10. 'def' → logprob: -10.76763916015625

Token 745: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9060002565383911
    2. ' to' → logprob: -1.1560002565383911
    3. '   ' → logprob: -2.0310001373291016
    4. 'for' → logprob: -2.2810001373291016
    5. 'to' → logprob: -3.4060001373291016
    6. ' in' → logprob: -5.531000137329102
    7. 'in' → logprob: -6.031000137329102
    8. 'def' → logprob: -6.156000137329102
    9. ' one' → logprob: -6.531000137329102
    10. ')' → logprob: -7.031000137329102

Token 746: ' inclusion' (ID: 42293)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -1.057734727859497
    2. ' inclusion' → logprob: -1.307734727859497
    3. 'in' → logprob: -1.432734727859497
    4. ' calculating' → logprob: -2.557734727859497
    5. 'comput' → logprob: -3.807734727859497
    6. ' computing' → logprob: -5.432734489440918
    7. 'inclusive' → logprob: -5.432734489440918
    8. 'def' → logprob: -5.557734489440918
    9. 'prefix' → logprob: -5.557734489440918
    10. 'rectangle' → logprob: -5.807734489440918

Token 747: '-ex' (ID: 15801)
  Prédit: '-ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-ex' → logprob: -0.007983008399605751
    2. '_ex' → logprob: -4.882983207702637
    3. 'ex' → logprob: -8.757983207702637
    4. '–' → logprob: -9.007983207702637
    5. ')' → logprob: -10.132983207702637
    6. '/ex' → logprob: -10.382983207702637
    7. '-' → logprob: -11.007983207702637
    8. '_exc' → logprob: -12.882983207702637
    9. '```' → logprob: -13.632983207702637
    10. '_' → logprob: -13.757983207702637

Token 748: 'clusion' (ID: 15482)
  Prédit: 'clusion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clusion' → logprob: -0.04637470096349716
    2. 'clude' → logprob: -3.546374797821045
    3. 'cluded' → logprob: -4.296374797821045
    4. 'c' → logprob: -7.046374797821045
    5. 'cerpt' → logprob: -7.421374797821045
    6. 'clusions' → logprob: -7.671374797821045
    7. 'lude' → logprob: -8.296374320983887
    8. '```' → logprob: -9.046374320983887
    9. 'ption' → logprob: -9.296374320983887
    10. 'cision' → logprob: -9.421374320983887

Token 749: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2555513381958008
    2. '):' → logprob: -1.8805513381958008
    3. '):
' → logprob: -2.880551338195801
    4. ')
' → logprob: -4.880551338195801
    5. '   ' → logprob: -5.130551338195801
    6. 'def' → logprob: -5.755551338195801
    7. ':' → logprob: -9.8805513381958
    8. '):
' → logprob: -10.2555513381958
    9. ').' → logprob: -10.7555513381958
    10. ',' → logprob: -10.8805513381958

Token 750: '   ' (ID: 271)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18240927159786224
    2. '):
' → logprob: -2.4324092864990234
    3. ')' → logprob: -3.0574092864990234
    4. '   ' → logprob: -4.057409286499023
    5. '(one' → logprob: -4.557409286499023
    6. ':' → logprob: -6.057409286499023
    7. 'def' → logprob: -7.057409286499023
    8. '```' → logprob: -8.057409286499023
    9. '(n' → logprob: -9.432409286499023
    10. 'one' → logprob: -9.432409286499023

Token 751: ' """
' (ID: 7037)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.37282872200012207
    2. '   ' → logprob: -1.622828722000122
    3. '):
' → logprob: -3.122828722000122
    4. '):' → logprob: -3.372828722000122
    5. '"""' → logprob: -3.872828722000122
    6. '"""
' (adapté à ' """
') → logprob: -4.872828483581543
    7. '```' → logprob: -5.122828483581543
    8. 'def' → logprob: -7.497828483581543
    9. ')
' → logprob: -7.997828483581543
    10. '<|end|>' → logprob: -9.622828483581543

Token 752: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00039885283331386745
    2. 'return' → logprob: -8.500398635864258
    3. ' return' → logprob: -9.250398635864258
    4. '	return' → logprob: -9.875398635864258
    5. 'def' → logprob: -10.750398635864258
    6. '```' → logprob: -10.875398635864258
    7. '   ' → logprob: -12.625398635864258
    8. '
' → logprob: -14.000398635864258
    9. '{return' → logprob: -14.125398635864258
    10. '       ' → logprob: -14.750398635864258

Token 753: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.013573103584349155
    2. '   ' → logprob: -4.388573169708252
    3. 'if' → logprob: -6.888573169708252
    4. 'result' → logprob: -11.138572692871094
    5. ' return' → logprob: -11.263572692871094
    6. '```' → logprob: -11.513572692871094
    7. '	return' → logprob: -12.638572692871094
    8. '       ' → logprob: -14.638572692871094
    9. 'total' → logprob: -15.138572692871094
    10. '
' → logprob: -15.263572692871094

Token 754: ' rectangle' (ID: 45808)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.14524836838245392
    2. 'rectangle' → logprob: -2.0202484130859375
    3. ' factorial' → logprob: -6.3952484130859375
    4. ' rectangle' → logprob: -7.6452484130859375
    5. '0' → logprob: -8.645248413085938
    6. 'fact' → logprob: -8.770248413085938
    7. 'rect' → logprob: -9.770248413085938
    8. ' factor' → logprob: -12.020248413085938
    9. 'f' → logprob: -12.895248413085938
    10. '   ' → logprob: -13.020248413085938

Token 755: '_paths' (ID: 56992)
  Prédit: '_paths'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_paths' → logprob: -1.3856492842023727e-06
    2. 'paths' → logprob: -13.875000953674316
    3. '_path' → logprob: -15.500000953674316
    4. '```' → logprob: -16.500001907348633
    5. '\' → logprob: -17.000001907348633
    6. 'path' → logprob: -17.250001907348633
    7. '_positions' → logprob: -17.500001907348633
    8. '
' → logprob: -17.875001907348633
    9. 's' → logprob: -18.500001907348633
    10. '._' → logprob: -18.625001907348633

Token 756: '_com' (ID: 10828)
  Prédit: '_com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_com' → logprob: -6.511406809295295e-06
    2. '_paths' → logprob: -12.375006675720215
    3. 'com' → logprob: -13.250006675720215
    4. '_comb' → logprob: -15.625006675720215
    5. 's' → logprob: -16.6250057220459
    6. '```' → logprob: -16.6250057220459
    7. '(com' → logprob: -17.2500057220459
    8. '`' → logprob: -18.0000057220459
    9. '
' → logprob: -18.6250057220459
    10. '_connections' → logprob: -18.8750057220459

Token 757: 'binations' (ID: 113572)
  Prédit: 'inations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inations' → logprob: -0.10870569199323654
    2. 'binations' → logprob: -2.358705759048462
    3. 'ations' → logprob: -4.983705520629883
    4. 'ination' → logprob: -6.733705520629883
    5. 'bination' → logprob: -8.858705520629883
    6. 'utations' → logprob: -9.358705520629883
    7. 'ob' → logprob: -9.608705520629883
    8. 'b' → logprob: -10.358705520629883
    9. 'on' → logprob: -11.358705520629883
    10. 'os' → logprob: -11.483705520629883

Token 758: '(one' (ID: 92717)
  Prédit: '(one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(one' → logprob: -4.11996734328568e-05
    2. '(' → logprob: -10.250041007995605
    3. 'one' → logprob: -12.875041007995605
    4. '(
' → logprob: -13.875041007995605
    5. '
' → logprob: -14.125041007995605
    6. '((' → logprob: -14.375041007995605
    7. ' (' → logprob: -15.000041007995605
    8. '(sum' → logprob: -15.875041007995605
    9. ')' → logprob: -16.250041961669922
    10. ' one' → logprob: -16.375041961669922

Token 759: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -2.339278580620885e-06
    2. 'p' → logprob: -13.125001907348633
    3. 'past' → logprob: -15.625001907348633
    4. 'one' → logprob: -17.000001907348633
    5. ' _' → logprob: -17.250001907348633
    6. '```' → logprob: -17.750001907348633
    7. '   ' → logprob: -18.250001907348633
    8. ')' → logprob: -18.250001907348633
    9. '_' → logprob: -18.625001907348633
    10. ',' → logprob: -18.625001907348633

Token 760: 'ast' (ID: 629)
  Prédit: 'ast'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ast' → logprob: -0.0004294771933928132
    2. 'past' → logprob: -8.375429153442383
    3. '_p' → logprob: -9.000429153442383
    4. '_ast' → logprob: -10.875429153442383
    5. 'as' → logprob: -11.375429153442383
    6. 'Past' → logprob: -12.000429153442383
    7. 'аст' → logprob: -12.000429153442383
    8. 'st' → logprob: -12.125429153442383
    9. 'aste' → logprob: -12.750429153442383
    10. 'last' → logprob: -13.375429153442383

Token 761: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.1272304654121399
    2. 'x' → logprob: -2.127230405807495
    3. '_y' → logprob: -8.877230644226074
    4. 'one' → logprob: -10.252230644226074
    5. '-' → logprob: -10.502230644226074
    6. '```' → logprob: -11.002230644226074
    7. ')' → logprob: -11.252230644226074
    8. ',' → logprob: -11.502230644226074
    9. '-x' → logprob: -11.627230644226074
    10. 'y' → logprob: -12.002230644226074

Token 762: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0597701296210289
    2. '-' → logprob: -3.184770107269287
    3. ' -' → logprob: -4.184770107269287
    4. ' ,' → logprob: -6.684770107269287
    5. '+' → logprob: -9.684770584106445
    6. '<|end|>' → logprob: -10.559770584106445
    7. ' one' → logprob: -11.184770584106445
    8. ')' → logprob: -11.309770584106445
    9. '<|end|>' → logprob: -11.559770584106445
    10. ',
' → logprob: -11.809770584106445

Token 763: ' ' (ID: 220)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.014203235507011414
    2. ' one' → logprob: -4.264203071594238
    3. '1' → logprob: -10.389203071594238
    4. ' ' → logprob: -12.014203071594238
    5. '   ' → logprob: -13.889203071594238
    6. '
' → logprob: -14.139203071594238
    7. '(one' → logprob: -14.389203071594238
    8. '0' → logprob: -15.639203071594238
    9. '  ' → logprob: -15.764203071594238
    10. '```' → logprob: -16.514204025268555

Token 764: '1' (ID: 16)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -1.8193366486229934e-05
    2. ' one' → logprob: -11.000018119812012
    3. '(one' → logprob: -14.125018119812012
    4. '1' → logprob: -14.500018119812012
    5. '0' → logprob: -16.500019073486328
    6. ' ' → logprob: -16.625019073486328
    7. 'One' → logprob: -18.125019073486328
    8. '(' → logprob: -18.250019073486328
    9. '
' → logprob: -18.500019073486328
    10. '   ' → logprob: -18.625019073486328

Token 765: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013262155698612332
    2. ' ,' → logprob: -9.25013256072998
    3. '   ' → logprob: -11.37513256072998
    4. ' -' → logprob: -11.75013256072998
    5. ',
' → logprob: -12.12513256072998
    6. '-' → logprob: -12.62513256072998
    7. ' one' → logprob: -13.25013256072998
    8. '<|end|>' → logprob: -13.37513256072998
    9. ')' → logprob: -13.62513256072998
    10. '<|end|>' → logprob: -13.87513256072998

Token 766: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.01416350994259119
    2. ' one' → logprob: -4.264163494110107
    3. '(one' → logprob: -17.639163970947266
    4. '
' → logprob: -19.389163970947266
    5. '   ' → logprob: -19.514163970947266
    6. 'One' → logprob: -20.014163970947266
    7. '1' → logprob: -20.639163970947266
    8. ' ' → logprob: -20.639163970947266
    9. '  ' → logprob: -20.764163970947266
    10. '_one' → logprob: -21.014163970947266

Token 767: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.0005705483490601182
    2. 'past' → logprob: -8.000570297241211
    3. 'one' → logprob: -9.000570297241211
    4. 'p' → logprob: -9.125570297241211
    5. '_one' → logprob: -13.375570297241211
    6. '_post' → logprob: -15.625570297241211
    7. '(p' → logprob: -15.750570297241211
    8. '_pass' → logprob: -16.12557029724121
    9. '-p' → logprob: -16.12557029724121
    10. '(one' → logprob: -16.25057029724121

Token 768: 'ast' (ID: 629)
  Prédit: 'ast'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ast' → logprob: -0.135246142745018
    2. '_p' → logprob: -2.3852460384368896
    3. 'past' → logprob: -3.3852460384368896
    4. 'p' → logprob: -7.760246276855469
    5. 'asted' → logprob: -10.010246276855469
    6. 'one' → logprob: -10.010246276855469
    7. 'aste' → logprob: -11.510246276855469
    8. '1' → logprob: -12.635246276855469
    9. 'asty' → logprob: -12.635246276855469
    10. 'asting' → logprob: -12.760246276855469

Token 769: '_y' (ID: 9410)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.29564163088798523
    2. '_p' → logprob: -1.7956416606903076
    3. '_y' → logprob: -2.9206416606903076
    4. 'p' → logprob: -3.9206416606903076
    5. 'y' → logprob: -4.1706414222717285
    6. 'past' → logprob: -7.5456414222717285
    7. '1' → logprob: -8.670641899108887
    8. '_one' → logprob: -11.170641899108887
    9. '(one' → logprob: -11.795641899108887
    10. ' one' → logprob: -12.045641899108887

Token 770: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.44012871384620667
    2. ')' → logprob: -1.3151286840438843
    3. '+' → logprob: -2.440128803253174
    4. '<|end|>' → logprob: -8.315128326416016
    5. '<|end|>' → logprob: -9.190128326416016
    6. '   ' → logprob: -10.315128326416016
    7. ' )' → logprob: -10.440128326416016
    8. ' -' → logprob: -10.690128326416016
    9. ')
' → logprob: -12.565128326416016
    10. '-' → logprob: -12.690128326416016

Token 771: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.829823102336377e-05
    2. ' ' → logprob: -9.25009822845459
    3. '0' → logprob: -13.25009822845459
    4. '<|end|>' → logprob: -16.562599182128906
    5. '   ' → logprob: -16.625099182128906
    6. '2' → logprob: -16.687599182128906
    7. ')' → logprob: -16.937599182128906
    8. '```' → logprob: -17.000099182128906
    9. '+' → logprob: -17.187599182128906
    10. '-' → logprob: -17.562599182128906

Token 772: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.723352049040841e-06
    2. ' ' → logprob: -12.500004768371582
    3. '0' → logprob: -13.875004768371582
    4. '-' → logprob: -18.062503814697266
    5. ')' → logprob: -18.125003814697266
    6. '<|end|>' → logprob: -18.312503814697266
    7. '```' → logprob: -18.562503814697266
    8. '   ' → logprob: -18.750003814697266
    9. '۱' → logprob: -18.875003814697266
    10. '2' → logprob: -19.625003814697266

Token 773: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.292907877039397e-06
    2. '   ' → logprob: -13.50000286102295
    3. ')
' → logprob: -13.62500286102295
    4. '<|end|>' → logprob: -15.37500286102295
    5. ' )' → logprob: -15.50000286102295
    6. ')return' → logprob: -16.000003814697266
    7. '))' → logprob: -17.375003814697266
    8. '),' → logprob: -17.625003814697266
    9. '}' → logprob: -17.625003814697266
    10. ')}' → logprob: -17.875003814697266

Token 774: '#' (ID: 2)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.0571388006210327
    2. 'def' → logprob: -1.9321388006210327
    3. 'row' → logprob: -2.1821389198303223
    4. 'total' → logprob: -2.4321389198303223
    5. 'answer' → logprob: -3.0571389198303223
    6. 'rectangle' → logprob: -3.0571389198303223
    7. 'difference' → logprob: -3.4321389198303223
    8. 'path' → logprob: -3.8071389198303223
    9. 'paths' → logprob: -4.182138919830322
    10. 'diff' → logprob: -4.432138919830322

Token 775: ' Calculation' (ID: 151266)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -2.0276381969451904
    2. 'row' → logprob: -2.1526381969451904
    3. 'total' → logprob: -2.2776381969451904
    4. 'rectangle' → logprob: -2.6526381969451904
    5. 'delta' → logprob: -2.6526381969451904
    6. 'distance' → logprob: -2.7776381969451904
    7. 'sum' → logprob: -2.9026381969451904
    8. 'path' → logprob: -3.0276381969451904
    9. 'if' → logprob: -3.1526381969451904
    10. 'diff' → logprob: -3.4026381969451904

Token 776: ' using' (ID: 2360)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'row' → logprob: -1.1882104873657227
    2. 'rectangle' → logprob: -1.8132104873657227
    3. 'total' → logprob: -1.9382104873657227
    4. 'rows' → logprob: -2.3132104873657227
    5. 'result' → logprob: -2.8132104873657227
    6. 'steps' → logprob: -2.9382104873657227
    7. 'width' → logprob: -3.4382104873657227
    8. 'number' → logprob: -3.8132104873657227
    9. 'path' → logprob: -3.8132104873657227
    10. 'rect' → logprob: -4.438210487365723

Token 777: ' the' (ID: 290)
  Prédit: 'rectangle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rectangle' → logprob: -0.33592286705970764
    2. 'row' → logprob: -1.4609228372573853
    3. 'max' → logprob: -3.960922956466675
    4. '(row' → logprob: -4.085922718048096
    5. '(max' → logprob: -5.085922718048096
    6. ' rectangle' → logprob: -5.960922718048096
    7. '(rect' → logprob: -5.960922718048096
    8. '((' → logprob: -6.835922718048096
    9. '(
' → logprob: -7.335922718048096
    10. 'abs' → logprob: -7.960922718048096

Token 778: ' inclusion' (ID: 42293)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.32658761739730835
    2. 'rectangle' → logprob: -1.8265876770019531
    3. '#' → logprob: -2.826587677001953
    4. 'difference' → logprob: -4.576587677001953
    5. '((' → logprob: -4.701587677001953
    6. '"""
' → logprob: -4.826587677001953
    7. 'result' → logprob: -4.826587677001953
    8. 'inclusive' → logprob: -5.826587677001953
    9. '(
' → logprob: -5.951587677001953
    10. 'rect' → logprob: -6.076587677001953

Token 779: '-ex' (ID: 15801)
  Prédit: '-ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-ex' → logprob: -0.0005763856461271644
    2. 'ex' → logprob: -7.500576496124268
    3. '_ex' → logprob: -11.25057601928711
    4. '–' → logprob: -12.12557601928711
    5. '#' → logprob: -12.37557601928711
    6. '/ex' → logprob: -14.87557601928711
    7. '-' → logprob: -15.75057601928711
    8. '--' → logprob: -15.87557601928711
    9. '−' → logprob: -16.75057601928711
    10. ' -' → logprob: -17.50057601928711

Token 780: 'clusion' (ID: 15482)
  Prédit: 'clusion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clusion' → logprob: -0.0909256786108017
    2. '-ex' → logprob: -3.090925693511963
    3. 'ex' → logprob: -3.215925693511963
    4. ' exclusion' → logprob: -7.965925693511963
    5. 'clude' → logprob: -8.340925216674805
    6. '-' → logprob: -8.590925216674805
    7. '#' → logprob: -9.215925216674805
    8. '...' → logprob: -9.340925216674805
    9. 'in' → logprob: -9.590925216674805
    10. 'exclude' → logprob: -9.715925216674805

Token 781: ' principle' (ID: 30540)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7656504511833191
    2. 'total' → logprob: -0.7656504511833191
    3. 'rectangle' → logprob: -3.515650510787964
    4. 'answer' → logprob: -4.140650272369385
    5. 'paths' → logprob: -4.640650272369385
    6. 'number' → logprob: -5.515650272369385
    7. 'ways' → logprob: -5.890650272369385
    8. 'path' → logprob: -7.015650272369385
    9. 'inside' → logprob: -7.140650272369385
    10. 'def' → logprob: -7.265650272369385

Token 782: ' for' (ID: 395)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5153260231018066
    2. 'total' → logprob: -1.8903260231018066
    3. 'answer' → logprob: -2.0153260231018066
    4. 'rectangle' → logprob: -2.3903260231018066
    5. 'number' → logprob: -4.765326023101807
    6. 'ways' → logprob: -5.265326023101807
    7. 'paths' → logprob: -5.765326023101807
    8. 'row' → logprob: -5.890326023101807
    9. 'rect' → logprob: -6.765326023101807
    10. 'ans' → logprob: -7.640326023101807

Token 783: ' the' (ID: 290)
  Prédit: 'rectangle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rectangle' → logprob: -0.4441765248775482
    2. 'number' → logprob: -2.319176435470581
    3. 'paths' → logprob: -2.319176435470581
    4. ' rectangle' → logprob: -3.194176435470581
    5. 'rect' → logprob: -3.694176435470581
    6. 'the' → logprob: -4.06917667388916
    7. 'row' → logprob: -4.19417667388916
    8. '#' → logprob: -4.56917667388916
    9. 'result' → logprob: -4.81917667388916
    10. 'total' → logprob: -4.94417667388916

Token 784: ' rectangle' (ID: 45808)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.7403869032859802
    2. 'result' → logprob: -1.490386962890625
    3. 'total' → logprob: -2.365386962890625
    4. 'answer' → logprob: -2.490386962890625
    5. 'paths' → logprob: -2.865386962890625
    6. 'rectangle' → logprob: -3.490386962890625
    7. 'ways' → logprob: -4.740386962890625
    8. '#' → logprob: -5.240386962890625
    9. 'valid' → logprob: -5.365386962890625
    10. 'desired' → logprob: -5.615386962890625

Token 785: ' sum' (ID: 4215)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.7497910857200623
    2. 'result' → logprob: -0.9997910857200623
    3. 'rectangle' → logprob: -3.624791145324707
    4. 'paths' → logprob: -3.749791145324707
    5. 'row' → logprob: -3.999791145324707
    6. 'width' → logprob: -4.124791145324707
    7. 'ways' → logprob: -4.624791145324707
    8. 'answer' → logprob: -4.624791145324707
    9. 'valid' → logprob: -4.749791145324707
    10. 'number' → logprob: -4.874791145324707

Token 786: '
' (ID: 198)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.2562974989414215
    2. 'answer' → logprob: -2.5062975883483887
    3. 'rectangle' → logprob: -2.7562975883483887
    4. 'total' → logprob: -2.8812975883483887
    5. 'row' → logprob: -5.256297588348389
    6. 'ways' → logprob: -5.256297588348389
    7. 'number' → logprob: -6.131297588348389
    8. 'sum' → logprob: -6.506297588348389
    9. 'paths' → logprob: -6.631297588348389
    10. 'rect' → logprob: -6.631297588348389

Token 787: 'total' (ID: 9577)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.4746055006980896
    2. 'total' → logprob: -1.7246055603027344
    3. 'rectangle' → logprob: -1.9746055603027344
    4. 'answer' → logprob: -3.2246055603027344
    5. 'row' → logprob: -5.849605560302734
    6. 'rect' → logprob: -5.974605560302734
    7. 'ways' → logprob: -6.099605560302734
    8. 'paths' → logprob: -6.224605560302734
    9. 'sum' → logprob: -6.474605560302734
    10. 'res' → logprob: -6.599605560302734

Token 788: '_paths' (ID: 56992)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5924753546714783
    2. '_paths' → logprob: -1.217475414276123
    3. ' =' → logprob: -2.592475414276123
    4. '=' → logprob: -2.717475414276123
    5. '_count' → logprob: -5.342475414276123
    6. '_=' → logprob: -6.467475414276123
    7. '_com' → logprob: -7.092475414276123
    8. '_tokens' → logprob: -7.592475414276123
    9. '_comb' → logprob: -7.717475414276123
    10. '_result' → logprob: -8.092474937438965

Token 789: '_in' (ID: 2267)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602582484483719
    2. '=' → logprob: -1.9102582931518555
    3. ',' → logprob: -11.660258293151855
    4. ' ' → logprob: -11.910258293151855
    5. '_' → logprob: -12.410258293151855
    6. '=row' → logprob: -12.785258293151855
    7. ' +=' → logprob: -12.910258293151855
    8. ')' → logprob: -13.160258293151855
    9. '   ' → logprob: -13.660258293151855
    10. ' =
' → logprob: -13.660258293151855

Token 790: '_rectangle' (ID: 166619)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15732580423355103
    2. 'rectangle' → logprob: -2.7823257446289062
    3. 'side' → logprob: -3.5323257446289062
    4. 'range' → logprob: -3.7823257446289062
    5. 'cluded' → logprob: -5.157325744628906
    6. ' =' → logprob: -5.282325744628906
    7. '_range' → logprob: -5.282325744628906
    8. '_area' → logprob: -6.282325744628906
    9. '_rectangle' → logprob: -6.532325744628906
    10. '_paths' → logprob: -6.782325744628906

Token 791: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020678490400314
    2. '=' → logprob: -2.3502068519592285
    3. ' =
' → logprob: -16.85020637512207
    4. ' +=' → logprob: -17.47520637512207
    5. ' ' → logprob: -17.47520637512207
    6. ',' → logprob: -17.60020637512207
    7. ' ' → logprob: -17.60020637512207
    8. '＝' → logprob: -18.10020637512207
    9. '   ' → logprob: -18.85020637512207
    10. ')' → logprob: -19.10020637512207

Token 792: ' (
' (ID: 4112)
  Prédit: 'rectangle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rectangle' → logprob: -0.25765514373779297
    2. '(
' → logprob: -1.507655143737793
    3. ' rectangle' → logprob: -6.007655143737793
    4. '(' → logprob: -6.382655143737793
    5. '(rect' → logprob: -7.132655143737793
    6. 'rect' → logprob: -7.632655143737793
    7. '   ' → logprob: -9.382655143737793
    8. ' (
' → logprob: -9.757655143737793
    9. '(
' → logprob: -10.632655143737793
    10. 'row' → logprob: -10.632655143737793

Token 793: '   ' (ID: 271)
  Prédit: 'rectangle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rectangle' → logprob: -0.00772055983543396
    2. ' rectangle' → logprob: -4.882720470428467
    3. '   ' → logprob: -9.132720947265625
    4. ' ' → logprob: -13.382720947265625
    5. 'row' → logprob: -14.007720947265625
    6. 'rect' → logprob: -14.007720947265625
    7. '  ' → logprob: -14.132720947265625
    8. '(
' → logprob: -14.257720947265625
    9. '+' → logprob: -14.882720947265625
    10. '       ' → logprob: -15.257720947265625

Token 794: ' rectangle' (ID: 45808)
  Prédit: 'rectangle'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rectangle' (adapté à ' rectangle') → logprob: -7.815280696377158e-05
    2. ' rectangle' → logprob: -9.500078201293945
    3. '   ' → logprob: -13.500078201293945
    4. 'rect' → logprob: -14.500078201293945
    5. 'factor' → logprob: -14.625078201293945
    6. 'row' → logprob: -15.625078201293945
    7. '(
' → logprob: -15.875078201293945
    8. '
' → logprob: -16.375078201293945
    9. '       ' → logprob: -16.375078201293945
    10. '+' → logprob: -16.625078201293945

Token 795: '_paths' (ID: 56992)
  Prédit: '_paths'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_paths' → logprob: -1.0280383548888494e-06
    2. 'paths' → logprob: -14.875000953674316
    3. '```' → logprob: -15.875000953674316
    4. '_path' → logprob: -16.125001907348633
    5. 's' → logprob: -16.375001907348633
    6. '_rows' → logprob: -16.500001907348633
    7. '_positions' → logprob: -17.000001907348633
    8. 'row' → logprob: -17.375001907348633
    9. '\' → logprob: -17.500001907348633
    10. 'path' → logprob: -17.625001907348633

Token 796: '_com' (ID: 10828)
  Prédit: '_com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_com' → logprob: -1.0802738870552275e-05
    2. 'com' → logprob: -11.50001049041748
    3. '_paths' → logprob: -15.25001049041748
    4. '(com' → logprob: -16.250011444091797
    5. 's' → logprob: -16.250011444091797
    6. '_comb' → logprob: -16.375011444091797
    7. '```' → logprob: -17.500011444091797
    8. '_in' → logprob: -17.750011444091797
    9. 'column' → logprob: -18.000011444091797
    10. 'rectangle' → logprob: -18.375011444091797

Token 797: 'binations' (ID: 113572)
  Prédit: 'binations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binations' → logprob: -0.0001757696009008214
    2. 'inations' → logprob: -8.875175476074219
    3. 'b' → logprob: -10.875175476074219
    4. 'bination' → logprob: -11.625175476074219
    5. 'bin' → logprob: -11.875175476074219
    6. 'positions' → logprob: -15.125175476074219
    7. 'com' → logprob: -15.625175476074219
    8. 'put' → logprob: -16.37517547607422
    9. 'ations' → logprob: -16.50017547607422
    10. 'bit' → logprob: -16.87517547607422

Token 798: '_offset' (ID: 15447)
  Prédit: '(row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.0012984501663595438
    2. 'row' → logprob: -7.376298427581787
    3. '(column' → logprob: -7.376298427581787
    4. '((' → logprob: -10.251298904418945
    5. 'column' → logprob: -12.376298904418945
    6. '(' → logprob: -12.876298904418945
    7. ' (' → logprob: -13.251298904418945
    8. '(rect' → logprob: -14.001298904418945
    9. '[row' → logprob: -15.251298904418945
    10. '(abs' → logprob: -15.876298904418945

Token 799: '(row' (ID: 15945)
  Prédit: '(column'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(column' → logprob: -0.20146994292736053
    2. '(row' → logprob: -1.701469898223877
    3. 'column' → logprob: -10.076470375061035
    4. '(' → logprob: -11.826470375061035
    5. 'row' → logprob: -12.076470375061035
    6. '((' → logprob: -13.951470375061035
    7. ' (' → logprob: -15.201470375061035
    8. '(
' → logprob: -15.451470375061035
    9. '(rect' → logprob: -16.57646942138672
    10. '[column' → logprob: -16.95146942138672

Token 800: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.0003957608714699745
    2. '_start' → logprob: -8.000395774841309
    3. 'end' → logprob: -9.750395774841309
    4. 'End' → logprob: -13.625395774841309
    5. 'start' → logprob: -15.875395774841309
    6. '-end' → logprob: -16.000394821166992
    7. ' end' → logprob: -16.375394821166992
    8. '(end' → logprob: -16.500394821166992
    9. '_END' → logprob: -16.750394821166992
    10. '	end' → logprob: -17.125394821166992

Token 801: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004282230511307716
    2. '-' → logprob: -6.504281997680664
    3. ' -' → logprob: -7.004281997680664
    4. ',column' → logprob: -7.004281997680664
    5. '   ' → logprob: -7.754281997680664
    6. ' ,' → logprob: -7.879281997680664
    7. ',row' → logprob: -9.379281997680664
    8. ' ' → logprob: -11.004281997680664
    9. ',
' → logprob: -11.254281997680664
    10. 'column' → logprob: -11.254281997680664

Token 802: ' column' (ID: 6000)
  Prédit: 'column'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'column' → logprob: -0.00018113377154804766
    2. ' column' → logprob: -8.625181198120117
    3. '   ' → logprob: -14.000181198120117
    4. 'col' → logprob: -15.500181198120117
    5. '	column' → logprob: -15.500181198120117
    6. ' ' → logprob: -16.000181198120117
    7. 'row' → logprob: -17.000181198120117
    8. '(column' → logprob: -17.125181198120117
    9. 'Column' → logprob: -17.625181198120117
    10. '  ' → logprob: -18.000181198120117

Token 803: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.0006160548073239625
    2. '_start' → logprob: -7.750616073608398
    3. 'end' → logprob: -8.625616073608398
    4. 'End' → logprob: -12.125616073608398
    5. 'start' → logprob: -15.625616073608398
    6. '	end' → logprob: -16.5006160736084
    7. '_END' → logprob: -16.8756160736084
    8. '-end' → logprob: -17.3756160736084
    9. '\' → logprob: -17.6256160736084
    10. '_' → logprob: -17.7506160736084

Token 804: ')
' (ID: 446)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.08462294191122055
    2. ')' → logprob: -3.209622859954834
    3. '-' → logprob: -3.709622859954834
    4. '   ' → logprob: -4.209622859954834
    5. '
' → logprob: -7.709622859954834
    6. ' ' → logprob: -8.334623336791992
    7. ' -
' → logprob: -8.334623336791992
    8. ')
' → logprob: -8.584623336791992
    9. '+' → logprob: -9.084623336791992
    10. ' )' → logprob: -9.959623336791992

Token 805: '   ' (ID: 271)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03537008538842201
    2. '   ' → logprob: -3.910370111465454
    3. '-' → logprob: -4.285369873046875
    4. '
' → logprob: -7.660369873046875
    5. ' -
' → logprob: -8.285369873046875
    6. ' ' → logprob: -9.660369873046875
    7. '-
' → logprob: -10.160369873046875
    8. ')' → logprob: -10.285369873046875
    9. '```' → logprob: -10.535369873046875
    10. '  ' → logprob: -10.785369873046875

Token 806: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.16033542156219482
    2. '-' (adapté à ' -') → logprob: -1.9103354215621948
    3. '-
' → logprob: -10.410335540771484
    4. '   ' → logprob: -10.410335540771484
    5. ' -
' → logprob: -10.410335540771484
    6. '+' → logprob: -12.035335540771484
    7. ' ' → logprob: -12.160335540771484
    8. '
' → logprob: -12.410335540771484
    9. ')' → logprob: -13.035335540771484
    10. '  ' → logprob: -13.910335540771484

Token 807: ' rectangle' (ID: 45808)
  Prédit: 'rectangle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rectangle' → logprob: -0.03897291049361229
    2. '   ' → logprob: -3.788972854614258
    3. ' rectangle' → logprob: -4.163972854614258
    4. '  ' → logprob: -10.538972854614258
    5. ' ' → logprob: -11.288972854614258
    6. 'rect' → logprob: -11.413972854614258
    7. '    ' → logprob: -13.288972854614258
    8. 'triangle' → logprob: -13.538972854614258
    9. '.rectangle' → logprob: -13.663972854614258
    10. '```' → logprob: -14.288972854614258

Token 808: '_paths' (ID: 56992)
  Prédit: '_paths'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_paths' → logprob: -1.2113979209971149e-05
    2. 's' → logprob: -12.750012397766113
    3. 'paths' → logprob: -13.250012397766113
    4. '```' → logprob: -13.375012397766113
    5. '._' → logprob: -13.750012397766113
    6. '+' → logprob: -14.250012397766113
    7. ')' → logprob: -14.500012397766113
    8. '_path' → logprob: -14.500012397766113
    9. '_positions' → logprob: -14.500012397766113
    10. '_rows' → logprob: -14.750012397766113

Token 809: '_com' (ID: 10828)
  Prédit: '_com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_com' → logprob: -9.968312951968983e-06
    2. '_paths' → logprob: -11.750009536743164
    3. 'com' → logprob: -13.375009536743164
    4. '_offsets' → logprob: -16.875009536743164
    5. '```' → logprob: -16.875009536743164
    6. 'column' → logprob: -17.250009536743164
    7. '(com' → logprob: -17.375009536743164
    8. '_comb' → logprob: -17.375009536743164
    9. '_column' → logprob: -17.500009536743164
    10. '\' → logprob: -17.625009536743164

Token 810: 'binations' (ID: 113572)
  Prédit: 'binations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binations' → logprob: -9.85366350505501e-05
    2. 'b' → logprob: -9.37509822845459
    3. 'bination' → logprob: -11.75009822845459
    4. 'inations' → logprob: -12.62509822845459
    5. 'bin' → logprob: -13.25009822845459
    6. 'positions' → logprob: -15.62509822845459
    7. 'ptions' → logprob: -16.375099182128906
    8. 'bs' → logprob: -16.500099182128906
    9. 'put' → logprob: -16.625099182128906
    10. '```' → logprob: -17.375099182128906

Token 811: '_offset' (ID: 15447)
  Prédit: '_offset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_offset' → logprob: -0.0007597190560773015
    2. 'offset' → logprob: -7.250759601593018
    3. '(row' → logprob: -10.000760078430176
    4. 'Offset' → logprob: -13.000760078430176
    5. '(offset' → logprob: -13.500760078430176
    6. '_OFFSET' → logprob: -14.625760078430176
    7. '(' → logprob: -16.25075912475586
    8. 'ffset' → logprob: -16.37575912475586
    9. '	offset' → logprob: -16.50075912475586
    10. ' offset' → logprob: -16.62575912475586

Token 812: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -4.572941179503687e-05
    2. 'row' → logprob: -10.000045776367188
    3. '(' → logprob: -15.375045776367188
    4. ' row' → logprob: -17.125045776367188
    5. '(column' → logprob: -18.250045776367188
    6. '	row' → logprob: -18.875045776367188
    7. '(
' → logprob: -19.500045776367188
    8. ' (' → logprob: -19.625045776367188
    9. '((' → logprob: -19.625045776367188
    10. '   ' → logprob: -20.250045776367188

Token 813: '_end' (ID: 13707)
  Prédit: '_start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.002469232538715005
    2. '_end' → logprob: -6.127469062805176
    3. 'start' → logprob: -8.252469062805176
    4. 'Start' → logprob: -10.752469062805176
    5. 'end' → logprob: -13.377469062805176
    6. '_START' → logprob: -15.752469062805176
    7. '_finish' → logprob: -16.627470016479492
    8. '-start' → logprob: -16.877470016479492
    9. '_' → logprob: -17.002470016479492
    10. 'End' → logprob: -17.127470016479492

Token 814: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003066718578338623
    2. ',column' → logprob: -6.003066539764404
    3. ' ,' → logprob: -7.878066539764404
    4. 'column' → logprob: -9.378067016601562
    5. ' column' → logprob: -9.753067016601562
    6. '   ' → logprob: -10.128067016601562
    7. ',
' → logprob: -11.503067016601562
    8. '(column' → logprob: -11.878067016601562
    9. '[column' → logprob: -12.128067016601562
    10. ' -' → logprob: -13.628067016601562

Token 815: ' column' (ID: 6000)
  Prédit: 'column'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'column' → logprob: -0.0004119616060052067
    2. '   ' → logprob: -8.500411987304688
    3. ' column' → logprob: -8.500411987304688
    4. '  ' → logprob: -13.500411987304688
    5. ' ' → logprob: -13.750411987304688
    6. '	column' → logprob: -13.750411987304688
    7. '(column' → logprob: -14.125411987304688
    8. '[column' → logprob: -14.875411987304688
    9. '       ' → logprob: -16.500411987304688
    10. '    ' → logprob: -16.625411987304688

Token 816: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.0002705145161598921
    2. 'start' → logprob: -8.25027084350586
    3. 'Start' → logprob: -12.37527084350586
    4. '_end' → logprob: -12.37527084350586
    5. 's' → logprob: -15.25027084350586
    6. ')' → logprob: -15.50027084350586
    7. '_START' → logprob: -16.12527084350586
    8. '-start' → logprob: -16.50027084350586
    9. '   ' → logprob: -17.75027084350586
    10. '_' → logprob: -17.87527084350586

Token 817: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06421223282814026
    2. ' -' → logprob: -2.8142123222351074
    3. ')' → logprob: -6.439212322235107
    4. '   ' → logprob: -7.439212322235107
    5. '+' → logprob: -10.18921184539795
    6. ')
' → logprob: -11.81421184539795
    7. ' ' → logprob: -12.18921184539795
    8. '```' → logprob: -12.93921184539795
    9. ' +' → logprob: -13.18921184539795
    10. '  ' → logprob: -13.68921184539795

Token 818: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023248739540576935
    2. '2' → logprob: -3.7732486724853516
    3. ' ' → logprob: -12.773248672485352
    4. '   ' → logprob: -15.273248672485352
    5. ')' → logprob: -15.773248672485352
    6. '```' → logprob: -16.27324867248535
    7. '
' → logprob: -19.27324867248535
    8. '  ' → logprob: -19.52324867248535
    9. '0' → logprob: -19.77324867248535
    10. '-' → logprob: -19.77324867248535

Token 819: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013261953135952353
    2. '2' → logprob: -6.626326084136963
    3. ' ' → logprob: -16.126325607299805
    4. '```' → logprob: -16.251325607299805
    5. '   ' → logprob: -17.751325607299805
    6. ')' → logprob: -18.563825607299805
    7. '0' → logprob: -18.813825607299805
    8. '۱' → logprob: -19.063825607299805
    9. '
' → logprob: -19.126325607299805
    10. '' → logprob: -20.063825607299805

Token 820: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14439716935157776
    2. '   ' → logprob: -2.019397258758545
    3. '<|end|>' → logprob: -6.769397258758545
    4. '```' → logprob: -8.269396781921387
    5. ')
' → logprob: -8.644396781921387
    6. '+' → logprob: -10.144396781921387
    7. '  ' → logprob: -10.519396781921387
    8. ' ' → logprob: -11.019396781921387
    9. ')\
' → logprob: -12.019396781921387
    10. ' -' → logprob: -12.019396781921387

Token 821: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004325672052800655
    2. '-' → logprob: -5.754325866699219
    3. ' -' → logprob: -7.129325866699219
    4. '+' → logprob: -8.754325866699219
    5. '```' → logprob: -9.004325866699219
    6. ')' → logprob: -10.254325866699219
    7. '  ' → logprob: -11.879325866699219
    8. '<|end|>' → logprob: -12.004325866699219
    9. ' +' → logprob: -12.754325866699219
    10. '
' → logprob: -12.879325866699219

Token 822: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0718650221824646
    2. '-' (adapté à ' -') → logprob: -2.6968650817871094
    3. ' -' → logprob: -6.446865081787109
    4. '```' → logprob: -8.19686508178711
    5. '-row' → logprob: -9.94686508178711
    6. ')' → logprob: -12.82186508178711
    7. '  ' → logprob: -13.07186508178711
    8. '+' → logprob: -13.07186508178711
    9. ' ' → logprob: -13.69686508178711
    10. '``' → logprob: -13.94686508178711

Token 823: ' rectangle' (ID: 45808)
  Prédit: 'rectangle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rectangle' → logprob: -4.727905979962088e-05
    2. ' rectangle' → logprob: -10.00004768371582
    3. '   ' → logprob: -13.25004768371582
    4. ' ' → logprob: -17.75004768371582
    5. '.rectangle' → logprob: -18.25004768371582
    6. '       ' → logprob: -18.75004768371582
    7. '_rectangle' → logprob: -19.25004768371582
    8. '           ' → logprob: -19.75004768371582
    9. 'rect' → logprob: -20.00004768371582
    10. '  ' → logprob: -20.25004768371582

Token 824: '_paths' (ID: 56992)
  Prédit: '_paths'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_paths' → logprob: -3.106736039626412e-05
    2. 'rectangle' → logprob: -10.500031471252441
    3. '```' → logprob: -13.500031471252441
    4. '_rows' → logprob: -14.500031471252441
    5. '_rectangle' → logprob: -14.625031471252441
    6. 'row' → logprob: -14.750031471252441
    7. 'paths' → logprob: -15.625031471252441
    8. '_path' → logprob: -16.375030517578125
    9. ''_' → logprob: -16.875030517578125
    10. 's' → logprob: -17.000030517578125

Token 825: '_com' (ID: 10828)
  Prédit: '_com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_com' → logprob: -1.3856492842023727e-06
    2. 'com' → logprob: -14.000000953674316
    3. '_paths' → logprob: -15.250000953674316
    4. '_comb' → logprob: -16.375001907348633
    5. '(com' → logprob: -16.750001907348633
    6. 'row' → logprob: -17.000001907348633
    7. '```' → logprob: -18.000001907348633
    8. '.com' → logprob: -18.250001907348633
    9. 'offset' → logprob: -18.625001907348633
    10. '_offsets' → logprob: -18.875001907348633

Token 826: 'binations' (ID: 113572)
  Prédit: 'binations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binations' → logprob: -0.0002489423204679042
    2. 'inations' → logprob: -8.375248908996582
    3. 'bination' → logprob: -11.375248908996582
    4. 'b' → logprob: -12.250248908996582
    5. 'bin' → logprob: -13.500248908996582
    6. 'ations' → logprob: -15.875248908996582
    7. 'bs' → logprob: -16.3752498626709
    8. 'positions' → logprob: -16.6252498626709
    9. 'com' → logprob: -16.6252498626709
    10. 'ptions' → logprob: -16.7502498626709

Token 827: '_offset' (ID: 15447)
  Prédit: '_offset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_offset' → logprob: -0.28584498167037964
    2. 'offset' → logprob: -1.7858450412750244
    3. '(row' → logprob: -2.5358450412750244
    4. '(offset' → logprob: -6.410844802856445
    5. 'Offset' → logprob: -9.410844802856445
    6. '(column' → logprob: -11.160844802856445
    7. ' offset' → logprob: -11.160844802856445
    8. '(' → logprob: -11.785844802856445
    9. '_OFFSET' → logprob: -12.910844802856445
    10. 'ffset' → logprob: -13.410844802856445

Token 828: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.0011874916963279247
    2. 'row' → logprob: -6.751187324523926
    3. '(column' → logprob: -11.251187324523926
    4. '(' → logprob: -13.001187324523926
    5. ' row' → logprob: -13.876187324523926
    6. ' (' → logprob: -14.626187324523926
    7. '(
' → logprob: -14.626187324523926
    8. 'column' → logprob: -16.001188278198242
    9. '((' → logprob: -17.001188278198242
    10. '   ' → logprob: -17.251188278198242

Token 829: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.00043674863991327584
    2. '_end' → logprob: -8.125436782836914
    3. 'start' → logprob: -8.875436782836914
    4. 'Start' → logprob: -14.250436782836914
    5. 'end' → logprob: -15.375436782836914
    6. '_START' → logprob: -18.625436782836914
    7. '_' → logprob: -18.750436782836914
    8. '   ' → logprob: -19.375436782836914
    9. 's' → logprob: -20.125436782836914
    10. '```' → logprob: -20.500436782836914

Token 830: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4810490310192108
    2. '-' → logprob: -0.9810490608215332
    3. ',' → logprob: -4.981049060821533
    4. '   ' → logprob: -10.106048583984375
    5. ' ' → logprob: -10.606048583984375
    6. ' ,' → logprob: -11.856048583984375
    7. '```' → logprob: -12.356048583984375
    8. ')' → logprob: -13.856048583984375
    9. '  ' → logprob: -13.981048583984375
    10. '`' → logprob: -15.231048583984375

Token 831: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.682846287731081e-05
    2. ' ' → logprob: -9.625066757202148
    3. '   ' → logprob: -14.500066757202148
    4. '```' → logprob: -15.250066757202148
    5. '2' → logprob: -18.00006675720215
    6. ')' → logprob: -19.12506675720215
    7. '  ' → logprob: -19.25006675720215
    8. '       ' → logprob: -19.43756675720215
    9. '``' → logprob: -19.43756675720215
    10. '۱' → logprob: -19.62506675720215

Token 832: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.625003814697266
    3. '```' → logprob: -17.000003814697266
    4. '   ' → logprob: -17.750003814697266
    5. '۱' → logprob: -19.750003814697266
    6. ')' → logprob: -20.500003814697266
    7. '2' → logprob: -20.875003814697266
    8. '१' → logprob: -21.250003814697266
    9. '১' → logprob: -21.250003814697266
    10. '<|end|>' → logprob: -21.625003814697266

Token 833: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.3954463510308415e-05
    2. ',column' → logprob: -10.125054359436035
    3. ' ,' → logprob: -11.625054359436035
    4. ',row' → logprob: -12.625054359436035
    5. ',
' → logprob: -13.875054359436035
    6. '   ' → logprob: -14.500054359436035
    7. '```' → logprob: -16.25005340576172
    8. '[column' → logprob: -17.12505340576172
    9. '(column' → logprob: -17.50005340576172
    10. '‌,' → logprob: -18.00005340576172

Token 834: ' column' (ID: 6000)
  Prédit: 'column'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'column' → logprob: -0.00015860427811276168
    2. ' column' → logprob: -8.750158309936523
    3. '   ' → logprob: -16.375158309936523
    4. '(column' → logprob: -17.625158309936523
    5. '	column' → logprob: -18.000158309936523
    6. '[column' → logprob: -18.875158309936523
    7. ' ' → logprob: -19.500158309936523
    8. ',column' → logprob: -20.000158309936523
    9. 'col' → logprob: -20.625158309936523
    10. '.column' → logprob: -20.875158309936523

Token 835: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.048374880105257034
    2. 'end' → logprob: -3.173374891281128
    3. '_start' → logprob: -5.298374652862549
    4. 'End' → logprob: -8.298375129699707
    5. 'column' → logprob: -9.548375129699707
    6. 'start' → logprob: -10.298375129699707
    7. '_END' → logprob: -13.548375129699707
    8. 'Start' → logprob: -13.548375129699707
    9. '   ' → logprob: -13.798375129699707
    10. '-end' → logprob: -14.298375129699707

Token 836: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5869687795639038
    2. '+' → logprob: -0.8369687795639038
    3. ')' → logprob: -4.586968898773193
    4. ' +' → logprob: -7.461968898773193
    5. '+
' → logprob: -9.211968421936035
    6. ')+' → logprob: -9.711968421936035
    7. '  ' → logprob: -11.086968421936035
    8. '```' → logprob: -11.211968421936035
    9. '-' → logprob: -11.836968421936035
    10. ')
' → logprob: -12.336968421936035

Token 837: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4743618965148926
    2. '   ' → logprob: -0.9743618965148926
    3. ' +' → logprob: -8.474361419677734
    4. '```' → logprob: -9.599361419677734
    5. '+
' → logprob: -12.474361419677734
    6. '  ' → logprob: -13.224361419677734
    7. ' ' → logprob: -14.474361419677734
    8. '``' → logprob: -14.599361419677734
    9. '   ' → logprob: -14.599361419677734
    10. '-' → logprob: -15.474361419677734

Token 838: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' (adapté à ' +') → logprob: -0.03864724189043045
    2. '   ' → logprob: -3.288647174835205
    3. ' +' → logprob: -7.413647174835205
    4. '```' → logprob: -13.538647651672363
    5. '+
' → logprob: -14.413647651672363
    6. '  ' → logprob: -15.163647651672363
    7. '   ' → logprob: -16.038646697998047
    8. ' ' → logprob: -16.538646697998047
    9. '+x' → logprob: -17.038646697998047
    10. '    ' → logprob: -17.038646697998047

Token 839: ' rectangle' (ID: 45808)
  Prédit: 'rectangle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rectangle' → logprob: -0.00043221889063715935
    2. ' rectangle' → logprob: -7.750432014465332
    3. '   ' → logprob: -13.375432014465332
    4. '.rectangle' → logprob: -18.25043296813965
    5. ' ' → logprob: -18.62543296813965
    6. '  ' → logprob: -19.12543296813965
    7. 'rect' → logprob: -19.12543296813965
    8. 'triangle' → logprob: -20.25043296813965
    9. '_rectangle' → logprob: -20.62543296813965
    10. '       ' → logprob: -20.75043296813965

Token 840: '_paths' (ID: 56992)
  Prédit: '_paths'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_paths' → logprob: -8.65707261255011e-06
    2. 'rectangle' → logprob: -12.125008583068848
    3. 'paths' → logprob: -12.875008583068848
    4. 'Paths' → logprob: -14.625008583068848
    5. 'row' → logprob: -16.375009536743164
    6. 'rect' → logprob: -17.375009536743164
    7. 'path' → logprob: -17.625009536743164
    8. 'column' → logprob: -18.375009536743164
    9. '_path' → logprob: -18.875009536743164
    10. '```' → logprob: -19.000009536743164

Token 841: '_com' (ID: 10828)
  Prédit: '_com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_com' → logprob: -2.4153549020411447e-05
    2. 'com' → logprob: -10.87502384185791
    3. '_paths' → logprob: -12.25002384185791
    4. 'row' → logprob: -15.87502384185791
    5. 'rectangle' → logprob: -16.875024795532227
    6. '_comb' → logprob: -17.125024795532227
    7. 's' → logprob: -17.625024795532227
    8. 'column' → logprob: -17.750024795532227
    9. 'def' → logprob: -18.000024795532227
    10. '(com' → logprob: -18.125024795532227

Token 842: 'binations' (ID: 113572)
  Prédit: 'binations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binations' → logprob: -4.5252596464706585e-05
    2. 'b' → logprob: -10.875044822692871
    3. 'inations' → logprob: -10.875044822692871
    4. 'bination' → logprob: -12.125044822692871
    5. 'bin' → logprob: -13.625044822692871
    6. 'positions' → logprob: -15.750044822692871
    7. 'ptions' → logprob: -16.125045776367188
    8. 'com' → logprob: -16.875045776367188
    9. 'bi' → logprob: -17.000045776367188
    10. 'bis' → logprob: -17.000045776367188

Token 843: '_offset' (ID: 15447)
  Prédit: '_offset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_offset' → logprob: -0.0011038987431675196
    2. 'offset' → logprob: -6.87610387802124
    3. '(row' → logprob: -9.751104354858398
    4. 'Offset' → logprob: -11.876104354858398
    5. 'def' → logprob: -13.626104354858398
    6. 'ffset' → logprob: -14.126104354858398
    7. '_OFFSET' → logprob: -14.251104354858398
    8. '(offset' → logprob: -14.251104354858398
    9. '```' → logprob: -14.376104354858398
    10. 'row' → logprob: -14.751104354858398

Token 844: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.00020377879263833165
    2. 'row' → logprob: -8.500204086303711
    3. ' row' → logprob: -16.25020408630371
    4. '(' → logprob: -16.62520408630371
    5. '[row' → logprob: -16.62520408630371
    6. '(
' → logprob: -17.12520408630371
    7. '((' → logprob: -17.37520408630371
    8. '	row' → logprob: -18.12520408630371
    9. ' (' → logprob: -19.00020408630371
    10. ',row' → logprob: -19.25020408630371

Token 845: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.0021794079802930355
    2. 'start' → logprob: -6.2521796226501465
    3. '_end' → logprob: -8.752179145812988
    4. 'Start' → logprob: -9.502179145812988
    5. '-' → logprob: -11.377179145812988
    6. 'end' → logprob: -12.877179145812988
    7. '_START' → logprob: -13.377179145812988
    8. '-start' → logprob: -13.627179145812988
    9. 's' → logprob: -14.752179145812988
    10. ' -' → logprob: -16.252180099487305

Token 846: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.048589304089546204
    2. ' -' → logprob: -3.0485892295837402
    3. ' ' → logprob: -13.798589706420898
    4. '   ' → logprob: -15.048589706420898
    5. '–' → logprob: -15.423589706420898
    6. '−' → logprob: -16.0485897064209
    7. ',' → logprob: -16.0485897064209
    8. '<|end|>' → logprob: -16.4235897064209
    9. '```' → logprob: -16.6735897064209
    10. ')' → logprob: -17.2985897064209

Token 847: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.375004768371582
    3. '```' → logprob: -14.750004768371582
    4. '<|end|>' → logprob: -16.3750057220459
    5. '2' → logprob: -16.6250057220459
    6. '   ' → logprob: -18.1250057220459
    7. '۱' → logprob: -18.6250057220459
    8. ')' → logprob: -19.1250057220459
    9. '`' → logprob: -19.1250057220459
    10. '<|end|>' → logprob: -19.5000057220459

Token 848: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. '```' → logprob: -14.000001907348633
    3. ' ' → logprob: -14.125001907348633
    4. '-' → logprob: -16.125001907348633
    5. '2' → logprob: -16.500001907348633
    6. '<|end|>' → logprob: -17.500001907348633
    7. '۱' → logprob: -17.812501907348633
    8. '   ' → logprob: -17.937501907348633
    9. 'def' → logprob: -18.187501907348633
    10. '`' → logprob: -18.562501907348633

Token 849: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.980854959692806e-05
    2. ',column' → logprob: -9.875069618225098
    3. ' ,' → logprob: -11.000069618225098
    4. '-' → logprob: -14.500069618225098
    5. '   ' → logprob: -14.875069618225098
    6. ' -' → logprob: -15.250069618225098
    7. ',
' → logprob: -15.625069618225098
    8. '```' → logprob: -16.000070571899414
    9. '`,' → logprob: -17.125070571899414
    10. 'column' → logprob: -17.250070571899414

Token 850: ' column' (ID: 6000)
  Prédit: 'column'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'column' → logprob: -0.0019287518225610256
    2. ' column' → logprob: -6.251928806304932
    3. '(column' → logprob: -16.501928329467773
    4. '[column' → logprob: -16.501928329467773
    5. '	column' → logprob: -16.751928329467773
    6. '   ' → logprob: -17.376928329467773
    7. ',column' → logprob: -18.376928329467773
    8. ' ' → logprob: -19.001928329467773
    9. 'col' → logprob: -20.376928329467773
    10. '_column' → logprob: -20.751928329467773

Token 851: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.25580981373786926
    2. '-' → logprob: -1.6308097839355469
    3. 'column' → logprob: -3.630809783935547
    4. 'start' → logprob: -6.130809783935547
    5. ')' → logprob: -8.130809783935547
    6. '_column' → logprob: -8.255809783935547
    7. ' -' → logprob: -8.505809783935547
    8. ' ' → logprob: -8.755809783935547
    9. '   ' → logprob: -9.130809783935547
    10. '```' → logprob: -9.755809783935547

Token 852: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.011048289015889168
    2. ' -' → logprob: -4.511048316955566
    3. ')' → logprob: -15.136048316955566
    4. '   ' → logprob: -15.886048316955566
    5. '```' → logprob: -16.63604736328125
    6. ' ' → logprob: -17.26104736328125
    7. '−' → logprob: -18.01104736328125
    8. '-)' → logprob: -18.88604736328125
    9. '       ' → logprob: -19.38604736328125
    10. '-
' → logprob: -19.51104736328125

Token 853: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.848420551046729e-05
    2. '2' → logprob: -9.8750581741333
    3. ' ' → logprob: -12.5000581741333
    4. '```' → logprob: -12.7500581741333
    5. ')' → logprob: -16.500059127807617
    6. '   ' → logprob: -16.875059127807617
    7. '<|end|>' → logprob: -17.187559127807617
    8. '۱' → logprob: -18.125059127807617
    9. 'def' → logprob: -18.187559127807617
    10. 'import' → logprob: -18.312559127807617

Token 854: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.318681188422488e-05
    2. '2' → logprob: -11.37501335144043
    3. ' ' → logprob: -14.12501335144043
    4. '```' → logprob: -14.25001335144043
    5. '۱' → logprob: -16.50001335144043
    6. ')' → logprob: -16.68751335144043
    7. '<|end|>' → logprob: -16.87501335144043
    8. '<|end|>' → logprob: -18.06251335144043
    9. '11' → logprob: -18.25001335144043
    10. '   ' → logprob: -18.31251335144043

Token 855: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00017076305812224746
    2. ')
' → logprob: -8.750170707702637
    3. '   ' → logprob: -11.875170707702637
    4. '))' → logprob: -13.000170707702637
    5. ')%' → logprob: -13.125170707702637
    6. '<|end|>' → logprob: -15.750170707702637
    7. ')))' → logprob: -15.875170707702637
    8. ' )' → logprob: -16.000171661376953
    9. '```' → logprob: -16.125171661376953
    10. '`)' → logprob: -16.375171661376953

Token 856: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00024275471514556557
    2. ')%' → logprob: -8.375243186950684
    3. ')
' → logprob: -12.500243186950684
    4. '```' → logprob: -12.750243186950684
    5. '%' → logprob: -12.875243186950684
    6. ' )' → logprob: -13.375243186950684
    7. '   ' → logprob: -13.750243186950684
    8. '")' → logprob: -16.500242233276367
    9. '...' → logprob: -16.875242233276367
    10. '``' → logprob: -16.875242233276367

Token 857: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.03269950672984123
    2. ' %' → logprob: -4.0326995849609375
    3. ')' → logprob: -4.2826995849609375
    4. ')%' → logprob: -7.4076995849609375
    5. '%=' → logprob: -11.407699584960938
    6. ' %=' → logprob: -11.532699584960938
    7. '
' → logprob: -12.282699584960938
    8. '%)' → logprob: -13.032699584960938
    9. '%
' → logprob: -14.157699584960938
    10. '%n' → logprob: -14.157699584960938

Token 858: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.9361264946837764e-07
    2. ' MOD' → logprob: -15.75
    3. 'MO' → logprob: -22.75
    4. '_MOD' → logprob: -23.75
    5. '10' → logprob: -24.125
    6. '.MOD' → logprob: -24.375
    7. 'MD' → logprob: -25.125
    8. '100' → logprob: -25.5
    9. 'mod' → logprob: -25.5
    10. 'Mod' → logprob: -26.375

Token 859: 'ULO' (ID: 63916)
  Prédit: 'ULO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ULO' → logprob: -5.438573680294212e-06
    2. 'MOD' → logprob: -12.750005722045898
    3. 'UL' → logprob: -13.000005722045898
    4. 'ulo' → logprob: -16.2500057220459
    5. 'Modulo' → logprob: -16.6250057220459
    6. 'ULAR' → logprob: -17.3750057220459
    7. 'ULE' → logprob: -18.2500057220459
    8. 'O' → logprob: -18.6250057220459
    9. ' modulo' → logprob: -19.2500057220459
    10. 'U' → logprob: -19.7500057220459

Token 860: '_PR' (ID: 22300)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01539914496243
    2. '<|end|>' → logprob: -4.390398979187012
    3. 'token' → logprob: -7.140398979187012
    4. '```' → logprob: -7.640398979187012
    5. '#' → logprob: -7.890398979187012
    6. '.' → logprob: -7.890398979187012
    7. ')' → logprob: -8.640398979187012
    8. 'total' → logprob: -8.765398979187012
    9. ' print' → logprob: -9.390398979187012
    10. '(' → logprob: -9.515398979187012

Token 861: 'IME' (ID: 10309)
  Prédit: 'IME'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IME' → logprob: -1.4974866644479334e-05
    2. 'ME' → logprob: -11.125015258789062
    3. 'I' → logprob: -16.625015258789062
    4. 'INE' → logprob: -17.375015258789062
    5. 'OME' → logprob: -17.375015258789062
    6. 'IM' → logprob: -17.875015258789062
    7. '
' → logprob: -17.875015258789062
    8. 'ime' → logprob: -18.125015258789062
    9. '1' → logprob: -18.375015258789062
    10. '\' → logprob: -18.875015258789062

Token 862: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.5
    3. ' print' → logprob: -17.75
    4. '#print' → logprob: -20.25
    5. '
' → logprob: -20.5
    6. '``' → logprob: -21.625
    7. 'return' → logprob: -22.125
    8. 'total' → logprob: -22.25
    9. '(print' → logprob: -23.125
    10. '#' → logprob: -23.5

Token 863: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -20.0
    3. '```' → logprob: -20.5
    4. '#print' → logprob: -22.75
    5. 'return' → logprob: -23.875
    6. '(print' → logprob: -24.5
    7. 'write' → logprob: -25.0
    8. '
' → logprob: -25.25
    9. '``' → logprob: -25.625
    10. 'pr' → logprob: -26.0

Token 864: '(total' (ID: 39744)
  Prédit: '(total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -7.982165698194876e-05
    2. 'total' → logprob: -9.750080108642578
    3. '(' → logprob: -10.750080108642578
    4. ' total' → logprob: -17.375080108642578
    5. '(
' → logprob: -17.375080108642578
    6. ',total' → logprob: -19.250080108642578
    7. ' (' → logprob: -19.500080108642578
    8. '((' → logprob: -19.625080108642578
    9. '$total' → logprob: -19.750080108642578
    10. '(t' → logprob: -20.750080108642578

Token 865: '_paths' (ID: 56992)
  Prédit: '_paths'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_paths' → logprob: -4.320199877838604e-07
    2. ')_' → logprob: -15.375
    3. '_path' → logprob: -16.625
    4. '_' → logprob: -17.75
    5. ')' → logprob: -17.875
    6. '```' → logprob: -18.0
    7. ' _' → logprob: -18.5
    8. '_routes' → logprob: -18.75
    9. '_points' → logprob: -19.0
    10. '_patterns' → logprob: -19.25

Token 866: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.0023221296723932028
    2. ')' → logprob: -6.502322196960449
    3. '_)' → logprob: -7.502322196960449
    4. '_' → logprob: -9.12732219696045
    5. '_paths' → logprob: -9.37732219696045
    6. '_total' → logprob: -10.12732219696045
    7. ')_' → logprob: -10.62732219696045
    8. 'in' → logprob: -12.25232219696045
    9. '_points' → logprob: -14.12732219696045
    10. 's' → logprob: -14.50232219696045

Token 867: '_rectangle' (ID: 166619)
  Prédit: 'rectangle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rectangle' → logprob: -0.00408053956925869
    2. '_rectangle' → logprob: -5.504080772399902
    3. '.rectangle' → logprob: -13.504080772399902
    4. 'Rectangle' → logprob: -14.754080772399902
    5. ' rectangle' → logprob: -15.379080772399902
    6. 'rect' → logprob: -16.379079818725586
    7. 't' → logprob: -18.004079818725586
    8. '```' → logprob: -18.754079818725586
    9. 're' → logprob: -19.129079818725586
    10. 'the' → logprob: -19.379079818725586

Token 868: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: 0.0
    2. ' )' → logprob: -16.875
    3. ')`' → logprob: -17.625
    4. '))' → logprob: -18.5
    5. ')
' → logprob: -18.625
    6. '`)' → logprob: -19.875
    7. '```' → logprob: -20.5
    8. '}' → logprob: -20.625
    9. '')' → logprob: -20.875
    10. ')}' → logprob: -21.0


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 866
Tokens correctement prédits (1ère position, stricte): 383
Tokens correctement prédits (1ère position, avec adaptation): 408
Tokens correctement prédits (top 10): 724
Précision stricte (1ère position): 44.23%
Précision adaptée (1ère position): 47.11%
Précision (top 10): 83.60%
================================================================================
