================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:42:27
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import bisect

def get_input():
    return input()

def parse_int(s):
    return int(s)

def parse_int_list(s):
    return list(map(int, s.split()))

def sort_list(lst):
    return sorted(lst)

def get_length(lst):
    return len(lst)

def get_element(lst, idx):
    return lst[idx]

def get_slice(lst, start, end):
    return lst[start:end]

def bisect_left_in_list(lst, value):
    return bisect.bisect_left(lst, value)

def calculate_pairs(L, N):
    ans = 0
    i = 0
    while i < N - 2:
        a = get_element(L, i)
        ans += calculate_for_i(L, N, i, a)
        i += 1
    return ans

def calculate_for_i(L, N, i, a):
    res = 0
    j = i + 1
    while j < N - 1:
        b = get_element(L, j)
        idx = bisect_left_in_list(L, a + b)
        res += idx - j - 1
        j += 1
    return res

def print_result(res):
    print(res)

def main():
    N = parse_int(get_input())
    L = parse_int_list(get_input())
    L = sort_list(L)
    ans = calculate_pairs(L, N)
    print_result(ans)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' bis' (ID: 7204)
  → Token d'amorce (pas de prédiction)

Token 2: 'ect' (ID: 534)
  → Token d'amorce (pas de prédiction)

Token 3: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00018577903392724693
    2. '(' → logprob: -8.7501859664917
    3. '\' → logprob: -12.5001859664917
    4. '\n' → logprob: -12.8751859664917
    5. '.\' → logprob: -13.0001859664917
    6. 'newline' → logprob: -13.0001859664917
    7. ' ' → logprob: -13.3751859664917
    8. '```' → logprob: -13.5001859664917
    9. '[' → logprob: -13.6251859664917
    10. '.b' → logprob: -13.6251859664917

Token 4: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0004485461104195565
    2. '(' → logprob: -7.875448703765869
    3. '.
' → logprob: -10.125448226928711
    4. '.

' → logprob: -11.500448226928711
    5. '

' → logprob: -13.000448226928711
    6. '[' → logprob: -13.125448226928711
    7. ',' → logprob: -13.125448226928711
    8. '.b' → logprob: -13.375448226928711
    9. '
' → logprob: -13.750448226928711
    10. '' → logprob: -13.750448226928711

Token 5: ' get' (ID: 717)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5831873416900635
    2. '_' → logprob: -1.3331873416900635
    3. ' _' → logprob: -2.7081873416900635
    4. ' bis' → logprob: -2.8331873416900635
    5. ' find' → logprob: -4.333187103271484
    6. ' ' → logprob: -5.083187103271484
    7. '_insert' → logprob: -5.083187103271484
    8. '_find' → logprob: -5.083187103271484
    9. ' insert' → logprob: -5.958187103271484
    10. '_sorted' → logprob: -5.958187103271484

Token 6: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.12127800285816193
    2. ' _' → logprob: -2.2462780475616455
    3. '_max' → logprob: -6.246277809143066
    4. '_sorted' → logprob: -6.621277809143066
    5. '_item' → logprob: -7.496277809143066
    6. '_space' → logprob: -7.621277809143066
    7. '_position' → logprob: -7.871277809143066
    8. '_next' → logprob: -7.996277809143066
    9. '_range' → logprob: -7.996277809143066
    10. '_target' → logprob: -8.121277809143066

Token 7: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005525203887373209
    2. '_' → logprob: -5.2555251121521
    3. 's' → logprob: -10.005525588989258
    4. '("("' → logprob: -10.130525588989258
    5. '_token' → logprob: -10.755525588989258
    6. '(
' → logprob: -11.005525588989258
    7. ' (' → logprob: -11.255525588989258
    8. '_parent' → logprob: -11.380525588989258
    9. '('' → logprob: -11.630525588989258
    10. 'a' → logprob: -11.755525588989258

Token 8: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2527627646923065
    2. '   ' → logprob: -2.002762794494629
    3. '()' → logprob: -4.252762794494629
    4. ' ' → logprob: -4.377762794494629
    5. '():' → logprob: -4.502762794494629
    6. '```' → logprob: -4.877762794494629
    7. ' (' → logprob: -5.002762794494629
    8. ' return' → logprob: -5.127762794494629
    9. ''' → logprob: -5.377762794494629
    10. 'return' → logprob: -5.627762794494629

Token 9: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.30476582050323486
    2. ' return' → logprob: -1.9297658205032349
    3. '   ' → logprob: -2.5547657012939453
    4. 'input' → logprob: -4.429765701293945
    5. 'x' → logprob: -4.804765701293945
    6. 'user' → logprob: -5.304765701293945
    7. 'n' → logprob: -6.054765701293945
    8. 'value' → logprob: -6.054765701293945
    9. 'r' → logprob: -6.304765701293945
    10. ' input' → logprob: -6.429765701293945

Token 10: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.10768387466669083
    2. ' ' → logprob: -3.1076838970184326
    3. 'input' → logprob: -3.3576838970184326
    4. ' int' → logprob: -3.9826838970184326
    5. '"' → logprob: -5.9826836585998535
    6. 'int' → logprob: -8.107684135437012
    7. ' "' → logprob: -8.232684135437012
    8. ''' → logprob: -8.607684135437012
    9. '  ' → logprob: -8.857684135437012
    10. ' list' → logprob: -9.107684135437012

Token 11: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005209209397435188
    2. '()' → logprob: -6.130209445953369
    3. '('' → logprob: -7.130209445953369
    4. '("("' → logprob: -7.255209445953369
    5. '().' → logprob: -7.755209445953369
    6. '(
' → logprob: -7.755209445953369
    7. '.' → logprob: -8.005208969116211
    8. '('.')' → logprob: -10.005208969116211
    9. '("")' → logprob: -10.130208969116211
    10. ' (' → logprob: -10.130208969116211

Token 12: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10546785593032837
    2. '
' → logprob: -3.6054677963256836
    3. 'value' → logprob: -4.105467796325684
    4. 'n' → logprob: -4.230467796325684
    5. 'x' → logprob: -4.605467796325684
    6. 'data' → logprob: -4.730467796325684
    7. 'number' → logprob: -5.480467796325684
    8. 'query' → logprob: -5.980467796325684
    9. '

' → logprob: -6.230467796325684
    10. '\n' → logprob: -6.355467796325684

Token 13: ' parse' (ID: 8420)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3919422626495361
    2. ' sort' → logprob: -1.6419422626495361
    3. ' get' → logprob: -1.8919422626495361
    4. ' calculate' → logprob: -2.516942262649536
    5. ' _' → logprob: -2.641942262649536
    6. ' find' → logprob: -2.766942262649536
    7. ' insert' → logprob: -3.516942262649536
    8. ' sorted' → logprob: -3.766942262649536
    9. ' main' → logprob: -4.016942024230957
    10. ' space' → logprob: -4.141942024230957

Token 14: '_int' (ID: 12285)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6635835766792297
    2. '_' → logprob: -0.7885835766792297
    3. '_input' → logprob: -4.288583755493164
    4. '_line' → logprob: -4.288583755493164
    5. '(_' → logprob: -7.413583755493164
    6. '(line' → logprob: -7.788583755493164
    7. '(input' → logprob: -8.038583755493164
    8. '(_)' → logprob: -8.288583755493164
    9. '_token' → logprob: -8.913583755493164
    10. '_code' → logprob: -8.913583755493164

Token 15: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004076382145285606
    2. 's' → logprob: -6.1290764808654785
    3. '(s' → logprob: -8.12907600402832
    4. '()' → logprob: -8.25407600402832
    5. '("("' → logprob: -8.37907600402832
    6. '```' → logprob: -8.75407600402832
    7. '('' → logprob: -8.87907600402832
    8. '(x' → logprob: -9.12907600402832
    9. ' ' → logprob: -9.75407600402832
    10. '32' → logprob: -9.75407600402832

Token 16: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003606005571782589
    2. ')' → logprob: -6.128605842590332
    3. '):
' → logprob: -6.878605842590332
    4. ' ):' → logprob: -8.503605842590332
    5. ':' → logprob: -8.878605842590332
    6. ':int' → logprob: -12.128605842590332
    7. '**' → logprob: -12.253605842590332
    8. '):

' → logprob: -12.253605842590332
    9. '):
' → logprob: -12.253605842590332
    10. ',' → logprob: -12.753605842590332

Token 17: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7281216382980347
    2. 'int' → logprob: -1.3531216382980347
    3. ' int' → logprob: -1.4781216382980347
    4. 'return' → logprob: -4.103121757507324
    5. '   ' → logprob: -4.728121757507324
    6. '(int' → logprob: -6.103121757507324
    7. ':int' → logprob: -6.603121757507324
    8. ' s' → logprob: -6.978121757507324
    9. '[int' → logprob: -8.728121757507324
    10. '    ' → logprob: -8.853121757507324

Token 18: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.15203382074832916
    2. '   ' → logprob: -2.652033805847168
    3. 'return' (adapté à ' return') → logprob: -2.652033805847168
    4. ' try' → logprob: -11.777033805847168
    5. 'try' → logprob: -11.902033805847168
    6. '```' → logprob: -12.152033805847168
    7. 'int' → logprob: -13.277033805847168
    8. '	return' → logprob: -13.277033805847168
    9. ' ' → logprob: -14.027033805847168
    10. ' int' → logprob: -14.527033805847168

Token 19: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.002812363440170884
    2. 'int' → logprob: -5.877812385559082
    3. ' ' → logprob: -12.377812385559082
    4. '   ' → logprob: -13.877812385559082
    5. '(int' → logprob: -14.127812385559082
    6. '[int' → logprob: -14.752812385559082
    7. '	int' → logprob: -15.252812385559082
    8. '  ' → logprob: -15.377812385559082
    9. '=int' → logprob: -15.502812385559082
    10. '<int' → logprob: -15.627812385559082

Token 20: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.5759461522102356
    2. '(' → logprob: -0.8259461522102356
    3. 's' → logprob: -12.950945854187012
    4. ' (' → logprob: -13.575945854187012
    5. '(
' → logprob: -14.075945854187012
    6. '(

' → logprob: -14.325945854187012
    7. '('' → logprob: -14.700945854187012
    8. '(ss' → logprob: -15.075945854187012
    9. '()' → logprob: -15.950945854187012
    10. '(`' → logprob: -16.700946807861328

Token 21: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. '))' → logprob: -14.625000953674316
    3. ' )' → logprob: -15.875000953674316
    4. ')))' → logprob: -17.375
    5. ')
' → logprob: -17.875
    6. '[' → logprob: -17.875
    7. ')return' → logprob: -18.5
    8. ')`' → logprob: -19.125
    9. '`)' → logprob: -19.5
    10. '')' → logprob: -19.625

Token 22: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0021079096477478743
    2. 'class' → logprob: -7.252108097076416
    3. '\' → logprob: -7.377108097076416
    4. '\n' → logprob: -8.252107620239258
    5. 'd' → logprob: -9.627107620239258
    6. '#' → logprob: -9.877107620239258
    7. '```' → logprob: -9.877107620239258
    8. '

' → logprob: -9.877107620239258
    9. 'n' → logprob: -10.127107620239258
    10. 'x' → logprob: -10.627107620239258

Token 23: ' parse' (ID: 8420)
  Prédit: ' binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' binary' → logprob: -0.5604122877120972
    2. ' main' → logprob: -1.3104122877120972
    3. ' find' → logprob: -2.9354124069213867
    4. ' get' → logprob: -3.1854124069213867
    5. ' bis' → logprob: -3.9354124069213867
    6. ' insert' → logprob: -4.935412406921387
    7. ' solve' → logprob: -4.935412406921387
    8. ' merge' → logprob: -5.060412406921387
    9. ' sort' → logprob: -5.935412406921387
    10. 'binary' → logprob: -6.060412406921387

Token 24: '_int' (ID: 12285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.024163441732525826
    2. '_int' → logprob: -3.8991634845733643
    3. '_float' → logprob: -6.899163246154785
    4. '_string' → logprob: -7.524163246154785
    5. ' _' → logprob: -8.399163246154785
    6. '_line' → logprob: -8.524163246154785
    7. '_list' → logprob: -8.524163246154785
    8. '_str' → logprob: -8.524163246154785
    9. '_i' → logprob: -8.899163246154785
    10. '_uint' → logprob: -9.149163246154785

Token 25: '_list' (ID: 4162)
  Prédit: '_array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.7463436722755432
    2. 's' → logprob: -0.8713436722755432
    3. '_list' → logprob: -2.6213436126708984
    4. '(' → logprob: -4.496343612670898
    5. '_s' → logprob: -4.621343612670898
    6. '(s' → logprob: -4.746343612670898
    7. '_' → logprob: -6.621343612670898
    8. '32' → logprob: -6.746343612670898
    9. '_line' → logprob: -7.371343612670898
    10. '_from' → logprob: -8.246343612670898

Token 26: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.04872816428542137
    2. '(' → logprob: -3.0487282276153564
    3. ' (' → logprob: -8.923727989196777
    4. '(line' → logprob: -13.298727989196777
    5. '(ss' → logprob: -13.548727989196777
    6. '(l' → logprob: -13.923727989196777
    7. '(a' → logprob: -14.048727989196777
    8. '(ls' → logprob: -14.423727989196777
    9. '("("' → logprob: -14.673727989196777
    10. '(S' → logprob: -14.798727989196777

Token 27: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005435001221485436
    2. '):
' → logprob: -7.750543594360352
    3. ')' → logprob: -9.500543594360352
    4. ' ):' → logprob: -10.625543594360352
    5. ':' → logprob: -12.000543594360352
    6. '):
' → logprob: -12.375543594360352
    7. '):

' → logprob: -13.250543594360352
    8. 's' → logprob: -15.000543594360352
    9. ')：' → logprob: -15.250543594360352
    10. '   ' → logprob: -15.875543594360352

Token 28: '   ' (ID: 271)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.9618478417396545
    2. '(' → logprob: -1.0868477821350098
    3. 's' → logprob: -1.4618477821350098
    4. ' s' → logprob: -3.7118477821350098
    5. ' list' → logprob: -4.83684778213501
    6. ' (' → logprob: -5.33684778213501
    7. ' return' → logprob: -5.58684778213501
    8. 'list' → logprob: -6.08684778213501
    9. '(list' → logprob: -6.33684778213501
    10. 'return' → logprob: -6.46184778213501

Token 29: ' return' (ID: 622)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.8651973605155945
    2. ' return' → logprob: -1.1151974201202393
    3. 'return' (adapté à ' return') → logprob: -1.7401974201202393
    4. 'list' → logprob: -2.6151974201202393
    5. '   ' → logprob: -6.36519718170166
    6. 's' → logprob: -7.99019718170166
    7. ' s' → logprob: -8.36519718170166
    8. ' [' → logprob: -9.36519718170166
    9. '[' → logprob: -10.11519718170166
    10. '[s' → logprob: -10.11519718170166

Token 30: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.08840449154376984
    2. 'list' → logprob: -2.588404417037964
    3. '[list' → logprob: -5.713404655456543
    4. ' [' → logprob: -5.838404655456543
    5. '[s' → logprob: -6.338404655456543
    6. ' s' → logprob: -7.213404655456543
    7. '[' → logprob: -7.838404655456543
    8. 's' → logprob: -7.963404655456543
    9. '[List' → logprob: -13.463404655456543
    10. '(list' → logprob: -13.588404655456543

Token 31: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0013503533555194736
    2. '(' → logprob: -6.626350402832031
    3. '(s' → logprob: -11.126350402832031
    4. '(eval' → logprob: -13.001350402832031
    5. '(int' → logprob: -13.126350402832031
    6. '(filter' → logprob: -13.251350402832031
    7. ' map' → logprob: -14.376350402832031
    8. '_map' → logprob: -14.501350402832031
    9. '(parse' → logprob: -14.501350402832031
    10. '	map' → logprob: -14.876350402832031

Token 32: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0017807336989790201
    2. '(' → logprob: -6.3767805099487305
    3. 'int' → logprob: -10.12678050994873
    4. '<int' → logprob: -11.25178050994873
    5. ',int' → logprob: -11.62678050994873
    6. '(parse' → logprob: -11.75178050994873
    7. ')' → logprob: -12.75178050994873
    8. ' (' → logprob: -13.75178050994873
    9. '(
' → logprob: -13.75178050994873
    10. ' int' → logprob: -13.87678050994873

Token 33: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11371069401502609
    2. '(s' → logprob: -2.488710641860962
    3. ',s' → logprob: -4.113710880279541
    4. 's' → logprob: -5.488710880279541
    5. ' ,' → logprob: -6.113710880279541
    6. '(' → logprob: -6.738710880279541
    7. ' s' → logprob: -8.113710403442383
    8. ',(' → logprob: -8.613710403442383
    9. ')' → logprob: -10.238710403442383
    10. ' (' → logprob: -10.863710403442383

Token 34: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.3132958710193634
    2. 's' → logprob: -1.313295841217041
    3. ')' → logprob: -11.5632963180542
    4. '(s' → logprob: -11.5632963180542
    5. ' ' → logprob: -12.1882963180542
    6. '   ' → logprob: -12.5632963180542
    7. '))' → logprob: -13.5632963180542
    8. '	s' → logprob: -13.8132963180542
    9. ')s' → logprob: -14.1257963180542
    10. '  ' → logprob: -14.3757963180542

Token 35: '.split' (ID: 10347)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.8715617060661316
    2. '.' → logprob: -1.1215617656707764
    3. '.split' → logprob: -1.3715617656707764
    4. '().' → logprob: -6.246561527252197
    5. ' .' → logprob: -8.246562004089355
    6. '.rstrip' → logprob: -12.246562004089355
    7. 'split' → logprob: -12.371562004089355
    8. '.readline' → logprob: -12.871562004089355
    9. 'strip' → logprob: -12.996562004089355
    10. '   ' → logprob: -13.246562004089355

Token 36: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.051491327583789825
    2. '('' → logprob: -3.6764912605285645
    3. '())' → logprob: -4.1764912605285645
    4. '()' → logprob: -4.8014912605285645
    5. '())))' → logprob: -7.0514912605285645
    6. '()))
' → logprob: -8.426491737365723
    7. '(' → logprob: -9.426491737365723
    8. '(','' → logprob: -10.051491737365723
    9. '()))

' → logprob: -10.301491737365723
    10. '))' → logprob: -10.426491737365723

Token 37: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0023186765611171722
    2. '

' → logprob: -6.752318859100342
    3. '\' → logprob: -7.752318859100342
    4. '
' → logprob: -8.377318382263184
    5. 'class' → logprob: -8.752318382263184
    6. 'd' → logprob: -9.002318382263184
    7. '```' → logprob: -9.127318382263184
    8. '\n' → logprob: -10.252318382263184
    9. 'de' → logprob: -11.127318382263184
    10. '
' → logprob: -12.002318382263184

Token 38: ' sort' (ID: 4506)
  Prédit: ' binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' binary' → logprob: -0.9239232540130615
    2. ' find' → logprob: -1.2989232540130615
    3. ' bis' → logprob: -2.2989232540130615
    4. 'binary' → logprob: -2.4239232540130615
    5. ' main' → logprob: -2.9239232540130615
    6. 'bis' → logprob: -4.048923492431641
    7. ' lower' → logprob: -4.173923492431641
    8. ' insert' → logprob: -4.548923492431641
    9. 'find' → logprob: -4.923923492431641
    10. 'lower' → logprob: -5.048923492431641

Token 39: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.18167056143283844
    2. '_' → logprob: -2.306670665740967
    3. '_array' → logprob: -3.306670665740967
    4. 'ed' → logprob: -4.806670665740967
    5. '(' → logprob: -5.306670665740967
    6. '_items' → logprob: -5.806670665740967
    7. '_data' → logprob: -6.181670665740967
    8. '(_' → logprob: -6.306670665740967
    9. '_arr' → logprob: -6.306670665740967
    10. '_lists' → logprob: -6.681670665740967

Token 40: '(lst' (ID: 95688)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2660370171070099
    2. '(lst' → logprob: -1.6410369873046875
    3. '(ls' → logprob: -3.8910369873046875
    4. '(l' → logprob: -4.5160369873046875
    5. '(s' → logprob: -5.7660369873046875
    6. '(ll' → logprob: -6.5160369873046875
    7. '(a' → logprob: -6.8910369873046875
    8. '(list' → logprob: -7.2660369873046875
    9. '(arr' → logprob: -7.6410369873046875
    10. '(L' → logprob: -8.266036987304688

Token 41: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0036805979907512665
    2. ')' → logprob: -5.62868070602417
    3. ',' → logprob: -10.378680229187012
    4. ' ):' → logprob: -11.003680229187012
    5. ')):' → logprob: -11.503680229187012
    6. '(lst' → logprob: -11.628680229187012
    7. '):
' → logprob: -11.878680229187012
    8. '   ' → logprob: -13.503680229187012
    9. '):
' → logprob: -14.003680229187012
    10. ':' → logprob: -14.003680229187012

Token 42: '   ' (ID: 271)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.08222503960132599
    2. ' sorted' → logprob: -3.5822250843048096
    3. 'lst' → logprob: -3.7072250843048096
    4. '   ' → logprob: -4.0822248458862305
    5. '(sorted' → logprob: -5.4572248458862305
    6. 'return' → logprob: -6.2072248458862305
    7. ' lst' → logprob: -6.4572248458862305
    8. '(lst' → logprob: -7.0822248458862305
    9. ' return' → logprob: -7.2072248458862305
    10. '```' → logprob: -9.20722484588623

Token 43: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28407663106918335
    2. 'lst' → logprob: -2.284076690673828
    3. 'return' (adapté à ' return') → logprob: -2.909076690673828
    4. ' lst' → logprob: -3.284076690673828
    5. ' return' → logprob: -3.284076690673828
    6. 'sorted' → logprob: -4.409076690673828
    7. ' sorted' → logprob: -5.784076690673828
    8. ' ' → logprob: -8.534076690673828
    9. '```' → logprob: -8.784076690673828
    10. '  ' → logprob: -9.034076690673828

Token 44: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.0548895038664341
    2. ' sorted' → logprob: -2.929889440536499
    3. '   ' → logprob: -12.929889678955078
    4. ' ' → logprob: -13.179889678955078
    5. '(sorted' → logprob: -13.304889678955078
    6. '.sorted' → logprob: -14.804889678955078
    7. 'sort' → logprob: -15.554889678955078
    8. '[]' → logprob: -15.804889678955078
    9. '  ' → logprob: -16.054889678955078
    10. 's' → logprob: -16.429889678955078

Token 45: '(lst' (ID: 95688)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20159216225147247
    2. '(lst' → logprob: -1.701592206954956
    3. '(list' → logprob: -9.076592445373535
    4. '(ls' → logprob: -10.826592445373535
    5. '(l' → logprob: -11.326592445373535
    6. '(
' → logprob: -11.451592445373535
    7. '(

' → logprob: -12.451592445373535
    8. 'lst' → logprob: -12.826592445373535
    9. '(ll' → logprob: -12.951592445373535
    10. ' (' → logprob: -13.076592445373535

Token 46: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.080963092041202e-06
    2. '))' → logprob: -12.375004768371582
    3. ' )' → logprob: -14.875004768371582
    4. ')
' → logprob: -15.250004768371582
    5. ')))' → logprob: -16.2500057220459
    6. '   ' → logprob: -17.6250057220459
    7. ')`' → logprob: -18.0000057220459
    8. ' ' → logprob: -18.1250057220459
    9. '<|end|>' → logprob: -18.6250057220459
    10. ')

' → logprob: -18.7500057220459

Token 47: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0036587452050298452
    2. '\' → logprob: -7.253658771514893
    3. '<|end|>' → logprob: -7.253658771514893
    4. '[' → logprob: -7.503658771514893
    5. ')' → logprob: -7.878658771514893
    6. '#' → logprob: -8.128658294677734
    7. '
' → logprob: -8.753658294677734
    8. '(' → logprob: -8.878658294677734
    9. '<|end|>' → logprob: -9.003658294677734
    10. ':' → logprob: -9.253658294677734

Token 48: ' get' (ID: 717)
  Prédit: ' bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.7410983443260193
    2. ' binary' → logprob: -0.7410983443260193
    3. ' main' → logprob: -3.866098403930664
    4. ' find' → logprob: -4.866098403930664
    5. ' search' → logprob: -5.616098403930664
    6. ' merge' → logprob: -5.741098403930664
    7. 'bis' → logprob: -5.741098403930664
    8. 'binary' → logprob: -5.741098403930664
    9. ' insert' → logprob: -6.616098403930664
    10. ' reverse' → logprob: -7.116098403930664

Token 49: '_length' (ID: 11514)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.10882256180047989
    2. '_list' → logprob: -3.6088225841522217
    3. '_sorted' → logprob: -3.7338225841522217
    4. '_max' → logprob: -4.233822345733643
    5. '_' → logprob: -4.358822345733643
    6. '_b' → logprob: -5.233822345733643
    7. '_item' → logprob: -5.733822345733643
    8. '_user' → logprob: -6.108822345733643
    9. '_value' → logprob: -6.483822345733643
    10. '_index' → logprob: -6.858822345733643

Token 50: '(lst' (ID: 95688)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06850280612707138
    2. '(lst' → logprob: -2.818502902984619
    3. '(s' → logprob: -5.443502902984619
    4. '()' → logprob: -7.193502902984619
    5. '(ls' → logprob: -8.318502426147461
    6. '(l' → logprob: -8.818502426147461
    7. '(obj' → logprob: -9.068502426147461
    8. '(len' → logprob: -9.068502426147461
    9. '_' → logprob: -9.193502426147461
    10. '(list' → logprob: -9.193502426147461

Token 51: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00017064384883269668
    2. '):
' → logprob: -8.750170707702637
    3. ')' → logprob: -11.500170707702637
    4. ' ):' → logprob: -13.875170707702637
    5. '):
' → logprob: -14.500170707702637
    6. '   ' → logprob: -15.125170707702637
    7. '):

' → logprob: -16.00016975402832
    8. ')):' → logprob: -16.25016975402832
    9. ')：' → logprob: -17.62516975402832
    10. '():' → logprob: -18.00016975402832

Token 52: '   ' (ID: 271)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.43247273564338684
    2. ' return' → logprob: -1.1824727058410645
    3. '   ' → logprob: -3.5574727058410645
    4. 'len' → logprob: -4.1824727058410645
    5. 'return' → logprob: -7.1824727058410645
    6. '(len' → logprob: -11.182473182678223
    7. '=len' → logprob: -11.557473182678223
    8. '    ' → logprob: -11.932473182678223
    9. '	len' → logprob: -11.932473182678223
    10. ' ' → logprob: -12.807473182678223

Token 53: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.08374340832233429
    2. 'return' (adapté à ' return') → logprob: -2.5837433338165283
    3. '   ' → logprob: -5.333743572235107
    4. ' len' → logprob: -11.58374309539795
    5. 'len' → logprob: -12.33374309539795
    6. '	return' → logprob: -13.70874309539795
    7. ' ' → logprob: -14.83374309539795
    8. '    ' → logprob: -14.95874309539795
    9. '  ' → logprob: -15.83374309539795
    10. '```' → logprob: -16.208744049072266

Token 54: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.006715728435665369
    2. 'len' → logprob: -5.006715774536133
    3. '(len' → logprob: -15.756715774536133
    4. ' ' → logprob: -16.006715774536133
    5. ' ' → logprob: -16.256715774536133
    6. '	len' → logprob: -16.881715774536133
    7. '=len' → logprob: -17.381715774536133
    8. '   ' → logprob: -18.506715774536133
    9. '[len' → logprob: -18.506715774536133
    10. ',len' → logprob: -19.881715774536133

Token 55: '(lst' (ID: 95688)
  Prédit: '(lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.0031953046564012766
    2. '(' → logprob: -5.753195285797119
    3. '(l' → logprob: -11.253195762634277
    4. '(list' → logprob: -13.253195762634277
    5. '(ls' → logprob: -13.253195762634277
    6. '(lista' → logprob: -15.378195762634277
    7. ' (' → logprob: -15.628195762634277
    8. '(
' → logprob: -15.878195762634277
    9. '(ll' → logprob: -16.12819480895996
    10. '(len' → logprob: -16.25319480895996

Token 56: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. '))' → logprob: -15.875
    3. ')
' → logprob: -16.125
    4. ' )' → logprob: -16.875
    5. '}' → logprob: -17.25
    6. ')return' → logprob: -17.375
    7. '[' → logprob: -18.25
    8. '）' → logprob: -18.625
    9. '<|end|>' → logprob: -19.0
    10. '`)' → logprob: -19.25

Token 57: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00040064091444946826
    2. 'class' → logprob: -8.62540054321289
    3. '#' → logprob: -10.12540054321289
    4. '```' → logprob: -10.12540054321289
    5. 'for' → logprob: -10.50040054321289
    6. '\' → logprob: -11.00040054321289
    7. 'x' → logprob: -11.37540054321289
    8. '<|end|>' → logprob: -11.62540054321289
    9. 'a' → logprob: -11.87540054321289
    10. 'd' → logprob: -12.25040054321289

Token 58: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.798938512802124
    2. ' get' → logprob: -1.673938512802124
    3. ' sort' → logprob: -1.923938512802124
    4. ' reverse' → logprob: -2.173938512802124
    5. ' find' → logprob: -3.423938512802124
    6. ' insert' → logprob: -3.798938512802124
    7. '_' → logprob: -4.923938751220703
    8. ' append' → logprob: -5.298938751220703
    9. ' _' → logprob: -5.548938751220703
    10. ' max' → logprob: -5.548938751220703

Token 59: '_element' (ID: 21131)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.13335640728473663
    2. '_element' → logprob: -3.0083563327789307
    3. '_' → logprob: -3.8833563327789307
    4. '_item' → logprob: -4.25835657119751
    5. '_min' → logprob: -4.50835657119751
    6. '_list' → logprob: -5.00835657119751
    7. '_last' → logprob: -5.13335657119751
    8. '_value' → logprob: -5.25835657119751
    9. '_index' → logprob: -6.00835657119751
    10. '_first' → logprob: -6.13335657119751

Token 60: '(lst' (ID: 95688)
  Prédit: '(lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.054131705313920975
    2. '_at' → logprob: -3.4291317462921143
    3. '(' → logprob: -3.9291317462921143
    4. '(ls' → logprob: -8.679131507873535
    5. '_by' → logprob: -8.804131507873535
    6. '_' → logprob: -9.304131507873535
    7. ' (' → logprob: -10.054131507873535
    8. '(l' → logprob: -10.429131507873535
    9. ' ' → logprob: -11.429131507873535
    10. '```' → logprob: -11.429131507873535

Token 61: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02320762164890766
    2. '[' → logprob: -4.523207664489746
    3. ',index' → logprob: -5.023207664489746
    4. ')' → logprob: -5.648207664489746
    5. ' ,' → logprob: -7.023207664489746
    6. '[],' → logprob: -8.023207664489746
    7. ',[' → logprob: -8.523207664489746
    8. '   ' → logprob: -9.523207664489746
    9. '[index' → logprob: -9.523207664489746
    10. ',size' → logprob: -9.773207664489746

Token 62: ' idx' (ID: 14016)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.5862146019935608
    2. ' index' → logprob: -0.8362146019935608
    3. ' idx' → logprob: -5.211214542388916
    4. 'idx' → logprob: -5.586214542388916
    5. 'i' → logprob: -7.086214542388916
    6. ' i' → logprob: -8.711215019226074
    7. '   ' → logprob: -11.586215019226074
    8. 'n' → logprob: -13.586215019226074
    9. ')' → logprob: -13.586215019226074
    10. ' ' → logprob: -13.711215019226074

Token 63: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.22554762661457062
    2. ')' → logprob: -1.6005476713180542
    3. '[' → logprob: -9.850547790527344
    4. '):
' → logprob: -10.100547790527344
    5. ' ):' → logprob: -11.225547790527344
    6. ']' → logprob: -11.725547790527344
    7. ']:' → logprob: -12.600547790527344
    8. ' )' → logprob: -12.725547790527344
    9. '   ' → logprob: -12.850547790527344
    10. ' ' → logprob: -13.100547790527344

Token 64: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7083318829536438
    2. ' return' → logprob: -1.208331823348999
    3. ' lst' → logprob: -1.583331823348999
    4. 'lst' → logprob: -6.083332061767578
    5. 'return' → logprob: -7.333332061767578
    6. '    ' → logprob: -7.458332061767578
    7. '  ' → logprob: -11.583332061767578
    8. '_lst' → logprob: -11.958332061767578
    9. ' ' → logprob: -12.083332061767578
    10. '(lst' → logprob: -12.208332061767578

Token 65: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.8649270534515381
    2. 'return' (adapté à ' return') → logprob: -1.114927053451538
    3. 'lst' → logprob: -1.989927053451538
    4. ' lst' → logprob: -2.239927053451538
    5. '   ' → logprob: -4.864927291870117
    6. '```' → logprob: -9.989927291870117
    7. ' ' → logprob: -11.489927291870117
    8. '(lst' → logprob: -11.864927291870117
    9. '_lst' → logprob: -12.114927291870117
    10. '  ' → logprob: -12.364927291870117

Token 66: ' lst' (ID: 33384)
  Prédit: ' lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lst' → logprob: -0.0019289902411401272
    2. 'lst' → logprob: -6.251928806304932
    3. '(lst' → logprob: -15.00192928314209
    4. ' ' → logprob: -16.876928329467773
    5. '_lst' → logprob: -17.001928329467773
    6. ' idx' → logprob: -17.126928329467773
    7. '   ' → logprob: -18.751928329467773
    8. '.lst' → logprob: -18.876928329467773
    9. ' list' → logprob: -19.501928329467773
    10. ' ls' → logprob: -19.626928329467773

Token 67: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.000632139970548451
    2. '[' → logprob: -7.375632286071777
    3. '```' → logprob: -13.375632286071777
    4. '[
' → logprob: -13.625632286071777
    5. '[int' → logprob: -14.125632286071777
    6. 'idx' → logprob: -14.750632286071777
    7. '\[' → logprob: -14.750632286071777
    8. ' [' → logprob: -15.375632286071777
    9. '[Index' → logprob: -15.500632286071777
    10. ' ' → logprob: -15.750632286071777

Token 68: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2521282136440277
    2. ')' → logprob: -1.50212824344635
    3. '])' → logprob: -8.877128601074219
    4. ')]' → logprob: -10.002128601074219
    5. '[' → logprob: -12.377128601074219
    6. '）' → logprob: -13.002128601074219
    7. '}' → logprob: -13.127128601074219
    8. ' ]' → logprob: -13.377128601074219
    9. '']' → logprob: -13.877128601074219
    10. ']
' → logprob: -14.377128601074219

Token 69: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00148486637044698
    2. 'd' → logprob: -7.6264848709106445
    3. 'class' → logprob: -8.251484870910645
    4. '#' → logprob: -8.501484870910645
    5. '\' → logprob: -8.751484870910645
    6. '```' → logprob: -9.626484870910645
    7. '
' → logprob: -9.876484870910645
    8. 'de' → logprob: -10.001484870910645
    9. 'n' → logprob: -10.126484870910645
    10. '\n' → logprob: -10.376484870910645

Token 70: ' get' (ID: 717)
  Prédit: ' bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.19249166548252106
    2. ' binary' → logprob: -2.0674917697906494
    3. ' find' → logprob: -4.19249153137207
    4. ' insert' → logprob: -4.44249153137207
    5. ' get' → logprob: -4.81749153137207
    6. ' main' → logprob: -4.94249153137207
    7. ' sort' → logprob: -6.69249153137207
    8. ' index' → logprob: -6.94249153137207
    9. ' append' → logprob: -6.94249153137207
    10. ' reverse' → logprob: -7.31749153137207

Token 71: '_slice' (ID: 62789)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.03368281200528145
    2. '_position' → logprob: -4.408682823181152
    3. '_element' → logprob: -5.033682823181152
    4. '_b' → logprob: -5.283682823181152
    5. '_length' → logprob: -6.283682823181152
    6. '_in' → logprob: -6.658682823181152
    7. '_max' → logprob: -6.908682823181152
    8. '_elements' → logprob: -6.908682823181152
    9. '_indices' → logprob: -7.408682823181152
    10. '_insert' → logprob: -7.408682823181152

Token 72: '(lst' (ID: 95688)
  Prédit: '(lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.0010567454155534506
    2. '(' → logprob: -6.876056671142578
    3. '(ls' → logprob: -11.751056671142578
    4. '(l' → logprob: -11.876056671142578
    5. ' (' → logprob: -13.001056671142578
    6. '(s' → logprob: -13.126056671142578
    7. '(list' → logprob: -13.376056671142578
    8. '(lista' → logprob: -13.501056671142578
    9. '_lst' → logprob: -15.126056671142578
    10. '(ll' → logprob: -15.126056671142578

Token 73: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9504606825648807e-05
    2. ' ,' → logprob: -11.875019073486328
    3. ',start' → logprob: -12.750019073486328
    4. ',l' → logprob: -13.250019073486328
    5. ',int' → logprob: -13.375019073486328
    6. ',s' → logprob: -14.125019073486328
    7. ')' → logprob: -14.250019073486328
    8. ',n' → logprob: -14.250019073486328
    9. ',
' → logprob: -14.625019073486328
    10. '‌,' → logprob: -14.625019073486328

Token 74: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.04326624795794487
    2. 'start' → logprob: -3.1682662963867188
    3. ' ' → logprob: -8.793266296386719
    4. ' idx' → logprob: -9.918266296386719
    5. '0' → logprob: -10.543266296386719
    6. ')' → logprob: -11.668266296386719
    7. ' end' → logprob: -11.793266296386719
    8. 's' → logprob: -12.543266296386719
    9. ' a' → logprob: -12.793266296386719
    10. 'idx' → logprob: -12.793266296386719

Token 75: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.698698704596609e-05
    2. ',end' → logprob: -9.500097274780273
    3. ' ,' → logprob: -11.500097274780273
    4. ',start' → logprob: -12.500097274780273
    5. ',length' → logprob: -13.625097274780273
    6. ',index' → logprob: -13.875097274780273
    7. ',int' → logprob: -14.375097274780273
    8. '‌,' → logprob: -14.375097274780273
    9. ',s' → logprob: -14.625097274780273
    10. ',
' → logprob: -14.625097274780273

Token 76: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.3180576264858246
    2. 'end' → logprob: -1.318057656288147
    3. 'stop' → logprob: -5.693057537078857
    4. ' stop' → logprob: -6.568057537078857
    5. ' ' → logprob: -13.068058013916016
    6. ',end' → logprob: -13.318058013916016
    7. ':end' → logprob: -13.318058013916016
    8. ' None' → logprob: -13.443058013916016
    9. '   ' → logprob: -13.568058013916016
    10. 'None' → logprob: -14.318058013916016

Token 77: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005002511315979064
    2. '):
' → logprob: -8.000500679016113
    3. ')' → logprob: -8.750500679016113
    4. ' ):' → logprob: -12.875500679016113
    5. '):
' → logprob: -13.000500679016113
    6. '):

' → logprob: -15.125500679016113
    7. '   ' → logprob: -15.250500679016113
    8. '=None' → logprob: -15.375500679016113
    9. ' ' → logprob: -15.875500679016113
    10. '+' → logprob: -16.125499725341797

Token 78: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18361955881118774
    2. ' return' → logprob: -2.433619499206543
    3. ' lst' → logprob: -2.558619499206543
    4. 'lst' → logprob: -6.183619499206543
    5. 'return' → logprob: -7.558619499206543
    6. '	return' → logprob: -11.558619499206543
    7. '    ' → logprob: -12.183619499206543
    8. '  ' → logprob: -12.808619499206543
    9. '_lst' → logprob: -12.933619499206543
    10. '   ' → logprob: -12.933619499206543

Token 79: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.38863134384155273
    2. ' lst' → logprob: -1.1386313438415527
    3. '   ' → logprob: -7.263631343841553
    4. 'lst' → logprob: -7.513631343841553
    5. 'return' (adapté à ' return') → logprob: -7.638631343841553
    6. ' ' → logprob: -11.388631820678711
    7. '    ' → logprob: -11.388631820678711
    8. '	return' → logprob: -13.263631820678711
    9. '_lst' → logprob: -13.388631820678711
    10. '```' → logprob: -13.513631820678711

Token 80: ' lst' (ID: 33384)
  Prédit: ' lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lst' → logprob: -0.0005532711511477828
    2. 'lst' → logprob: -7.500553131103516
    3. '(lst' → logprob: -15.750553131103516
    4. '_lst' → logprob: -16.125553131103516
    5. '.lst' → logprob: -17.500553131103516
    6. ' ' → logprob: -17.875553131103516
    7. ' ls' → logprob: -18.000553131103516
    8. 'Lst' → logprob: -18.500553131103516
    9. ' list' → logprob: -19.875553131103516
    10. ' l' → logprob: -20.125553131103516

Token 81: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.029801173135638237
    2. '[' → logprob: -3.5298011302948
    3. '[:]' → logprob: -10.904801368713379
    4. '[s' → logprob: -11.279801368713379
    5. '[end' → logprob: -11.404801368713379
    6. '[
' → logprob: -12.154801368713379
    7. '[:' → logprob: -13.404801368713379
    8. '\[' → logprob: -14.904801368713379
    9. '```' → logprob: -15.154801368713379
    10. '[int' → logprob: -15.654801368713379

Token 82: ':end' (ID: 63990)
  Prédit: ':end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':end' → logprob: -0.007140032481402159
    2. ':' → logprob: -5.007140159606934
    3. ',end' → logprob: -7.882140159606934
    4. ',' → logprob: -10.257140159606934
    5. ' :' → logprob: -11.632140159606934
    6. '	end' → logprob: -13.507140159606934
    7. ' ' → logprob: -14.632140159606934
    8. 'end' → logprob: -14.632140159606934
    9. '>end' → logprob: -15.382140159606934
    10. ':]' → logprob: -15.882140159606934

Token 83: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004931025905534625
    2. ']' → logprob: -7.625493049621582
    3. '])' → logprob: -12.875493049621582
    4. '）' → logprob: -13.375493049621582
    5. '}' → logprob: -15.000493049621582
    6. '<|end|>' → logprob: -15.500493049621582
    7. ')
' → logprob: -15.750493049621582
    8. ')]' → logprob: -15.750493049621582
    9. ' )' → logprob: -17.3754940032959
    10. '+' → logprob: -17.7504940032959

Token 84: 'def' (ID: 1314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7253336906433105
    2. 'def' → logprob: -0.9753336906433105
    3. '#' → logprob: -2.6003336906433105
    4. '\' → logprob: -3.8503336906433105
    5. 'n' → logprob: -4.3503336906433105
    6. 'b' → logprob: -4.8503336906433105
    7. 'a' → logprob: -4.9753336906433105
    8. '```' → logprob: -5.8503336906433105
    9. '[' → logprob: -5.9753336906433105
    10. 'i' → logprob: -6.4753336906433105

Token 85: ' bis' (ID: 7204)
  Prédit: ' binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' binary' → logprob: -0.21232092380523682
    2. ' main' → logprob: -2.2123208045959473
    3. ' bis' → logprob: -2.8373208045959473
    4. ' find' → logprob: -4.962320804595947
    5. ' insert' → logprob: -4.962320804595947
    6. 'binary' → logprob: -5.587320804595947
    7. ' bin' → logprob: -6.337320804595947
    8. ' search' → logprob: -6.587320804595947
    9. ' merge' → logprob: -8.337321281433105
    10. 'bis' → logprob: -8.337321281433105

Token 86: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -5.319370302458992e-06
    2. 'e' → logprob: -12.375005722045898
    3. 'sect' → logprob: -14.250005722045898
    4. 'ected' → logprob: -16.0000057220459
    5. 'ectl' → logprob: -16.2500057220459
    6. 'ects' → logprob: -17.2500057220459
    7. 'ec' → logprob: -17.3750057220459
    8. 'ecta' → logprob: -17.7500057220459
    9. 'ct' → logprob: -18.0000057220459
    10. '`' → logprob: -18.6250057220459

Token 87: '_left' (ID: 22189)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0551605150103569
    2. '_' → logprob: -3.1801605224609375
    3. '.b' → logprob: -5.4301605224609375
    4. '._' → logprob: -5.6801605224609375
    5. '_left' → logprob: -6.0551605224609375
    6. '_right' → logprob: -6.6801605224609375
    7. '_.' → logprob: -8.555160522460938
    8. '.ins' → logprob: -8.805160522460938
    9. '```' → logprob: -10.555160522460938
    10. '.c' → logprob: -10.680160522460938

Token 88: '_in' (ID: 2267)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00027897433028556406
    2. ' (' → logprob: -8.250279426574707
    3. '("("' → logprob: -12.500279426574707
    4. '()' → logprob: -12.875279426574707
    5. '('' → logprob: -12.875279426574707
    6. '<|end|>' → logprob: -13.250279426574707
    7. '(
' → logprob: -13.875279426574707
    8. '(b' → logprob: -13.875279426574707
    9. '```' → logprob: -14.000279426574707
    10. ' ' → logprob: -14.250279426574707

Token 89: '_list' (ID: 4162)
  Prédit: 'sert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sert' → logprob: -0.06837066262960434
    2. 'dex' → logprob: -2.8183705806732178
    3. 'sertion' → logprob: -5.818370819091797
    4. '```' → logprob: -6.943370819091797
    5. 'sort' → logprob: -7.443370819091797
    6. 'list' → logprob: -7.443370819091797
    7. 's' → logprob: -8.193370819091797
    8. 'def' → logprob: -8.318370819091797
    9. '_list' → logprob: -8.318370819091797
    10. 'sorted' → logprob: -8.318370819091797

Token 90: '(lst' (ID: 95688)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0582638755440712
    2. '(lst' → logprob: -2.9332637786865234
    3. ' (' → logprob: -5.933263778686523
    4. '(ls' → logprob: -8.058263778686523
    5. '(l' → logprob: -8.308263778686523
    6. '(list' → logprob: -10.058263778686523
    7. '(ll' → logprob: -10.808263778686523
    8. '<|end|>' → logprob: -10.933263778686523
    9. '(s' → logprob: -11.183263778686523
    10. '(lista' → logprob: -11.808263778686523

Token 91: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.3213025744771585e-05
    2. ',l' → logprob: -11.125033378601074
    3. ' ,' → logprob: -11.750033378601074
    4. ')' → logprob: -13.375033378601074
    5. ',
' → logprob: -13.375033378601074
    6. ',list' → logprob: -13.875033378601074
    7. ',b' → logprob: -14.250033378601074
    8. ',n' → logprob: -14.250033378601074
    9. ',s' → logprob: -14.375033378601074
    10. ',List' → logprob: -14.375033378601074

Token 92: ' value' (ID: 1432)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.649377703666687
    2. ' x' → logprob: -0.774377703666687
    3. 'value' → logprob: -4.649377822875977
    4. ' value' → logprob: -5.649377822875977
    5. 'target' → logprob: -6.399377822875977
    6. ' target' → logprob: -7.524377822875977
    7. 'item' → logprob: -8.149377822875977
    8. ' val' → logprob: -8.524377822875977
    9. ' item' → logprob: -8.774377822875977
    10. 'val' → logprob: -8.774377822875977

Token 93: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4765309989452362
    2. ')' → logprob: -1.1015310287475586
    3. ',' → logprob: -3.1015310287475586
    4. '):
' → logprob: -6.476531028747559
    5. ' ):' → logprob: -9.726531028747559
    6. ' )' → logprob: -9.976531028747559
    7. '   ' → logprob: -10.726531028747559
    8. '):

' → logprob: -11.476531028747559
    9. '),' → logprob: -12.101531028747559
    10. ')
' → logprob: -12.351531028747559

Token 94: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004147376399487257
    2. ' return' → logprob: -5.629147529602051
    3. 'return' → logprob: -7.629147529602051
    4. ' bis' → logprob: -9.87914752960205
    5. '```' → logprob: -12.25414752960205
    6. 'bis' → logprob: -12.75414752960205
    7. '	return' → logprob: -13.37914752960205
    8. '
' → logprob: -16.004146575927734
    9. '       ' → logprob: -16.129146575927734
    10. '   ' → logprob: -16.254146575927734

Token 95: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.04359976202249527
    2. 'bis' → logprob: -3.418599843978882
    3. ' return' → logprob: -4.918599605560303
    4. '   ' → logprob: -6.043599605560303
    5. ' bis' → logprob: -8.543600082397461
    6. 'b' → logprob: -11.918600082397461
    7. 'import' → logprob: -11.918600082397461
    8. '```' → logprob: -12.168600082397461
    9. '	return' → logprob: -12.668600082397461
    10. '
' → logprob: -13.043600082397461

Token 96: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.006717267446219921
    2. 'bis' → logprob: -5.006717205047607
    3. 'b' → logprob: -13.381717681884766
    4. '	b' → logprob: -15.256717681884766
    5. '   ' → logprob: -17.006717681884766
    6. ' ' → logprob: -17.006717681884766
    7. 'Bis' → logprob: -17.756717681884766
    8. ' ' → logprob: -18.006717681884766
    9. '(b' → logprob: -18.006717681884766
    10. '```' → logprob: -18.006717681884766

Token 97: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.0036439071409404278
    2. 'sect' → logprob: -5.628643989562988
    3. 'ectl' → logprob: -11.628643989562988
    4. 'e' → logprob: -12.003643989562988
    5. '   ' → logprob: -12.003643989562988
    6. 'ct' → logprob: -12.253643989562988
    7. '```' → logprob: -12.503643989562988
    8. 'ects' → logprob: -12.878643989562988
    9. 'с' → logprob: -13.003643989562988
    10. 'ec' → logprob: -13.128643989562988

Token 98: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.11290919035673141
    2. '.' → logprob: -2.2379090785980225
    3. '.left' → logprob: -9.862909317016602
    4. ' .' → logprob: -11.737909317016602
    5. '.ins' → logprob: -12.237909317016602
    6. '_left' → logprob: -12.487909317016602
    7. '._' → logprob: -12.862909317016602
    8. '.б' → logprob: -13.237909317016602
    9. '.Left' → logprob: -13.362909317016602
    10. '.
' → logprob: -13.362909317016602

Token 99: 'is' (ID: 276)
  Prédit: 'sect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sect' → logprob: -0.03454897925257683
    2. 's' → logprob: -3.7845489978790283
    3. 'n' → logprob: -5.409548759460449
    4. 'spect' → logprob: -5.659548759460449
    5. 'sc' → logprob: -6.534548759460449
    6. 'is' → logprob: -7.284548759460449
    7. 'sce' → logprob: -8.40954875946045
    8. '```' → logprob: -8.90954875946045
    9. 'sg' → logprob: -9.28454875946045
    10. '`' → logprob: -9.78454875946045

Token 100: 'ect' (ID: 534)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.1831057369709015
    2. 'ect' → logprob: -2.058105707168579
    3. 'sect' → logprob: -3.308105707168579
    4. '```' → logprob: -6.558105945587158
    5. 'n' → logprob: -7.183105945587158
    6. 'с' → logprob: -8.05810546875
    7. '   ' → logprob: -9.18310546875
    8. '`' → logprob: -9.55810546875
    9. 'rect' → logprob: -9.68310546875
    10. '<' → logprob: -10.18310546875

Token 101: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -1.6240566083070007e-06
    2. '_le' → logprob: -13.625001907348633
    3. '_' → logprob: -15.375001907348633
    4. 'left' → logprob: -17.000001907348633
    5. '_l' → logprob: -17.750001907348633
    6. '_right' → logprob: -18.625001907348633
    7. '_low' → logprob: -18.625001907348633
    8. '_LEFT' → logprob: -19.500001907348633
    9. '_Left' → logprob: -19.875001907348633
    10. ' _' → logprob: -20.625001907348633

Token 102: '(lst' (ID: 95688)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1609245389699936
    2. '(lst' → logprob: -1.9109245538711548
    3. '(
' → logprob: -7.785924434661865
    4. '(list' → logprob: -9.410924911499023
    5. ' (' → logprob: -9.535924911499023
    6. '(ls' → logprob: -9.910924911499023
    7. '(l' → logprob: -10.285924911499023
    8. '(

' → logprob: -10.785924911499023
    9. '(lhs' → logprob: -12.160924911499023
    10. '(lista' → logprob: -12.160924911499023

Token 103: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001317871210630983
    2. ',l' → logprob: -9.375131607055664
    3. ',value' → logprob: -11.250131607055664
    4. ' ,' → logprob: -11.375131607055664
    5. ',list' → logprob: -11.875131607055664
    6. '   ' → logprob: -12.625131607055664
    7. '(lst' → logprob: -12.625131607055664
    8. ',
' → logprob: -13.125131607055664
    9. '(' → logprob: -13.875131607055664
    10. ')' → logprob: -13.875131607055664

Token 104: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.07889066636562347
    2. 'value' → logprob: -2.578890562057495
    3. ')value' → logprob: -14.578890800476074
    4. ')' → logprob: -15.578890800476074
    5. '"value' → logprob: -16.203889846801758
    6. ' ' → logprob: -16.828889846801758
    7. '(value' → logprob: -16.828889846801758
    8. ' )' → logprob: -16.953889846801758
    9. ''value' → logprob: -17.328889846801758
    10. ',value' → logprob: -18.203889846801758

Token 105: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ')
' → logprob: -13.875001907348633
    3. ' )' → logprob: -14.625001907348633
    4. ')return' → logprob: -17.500001907348633
    5. '))' → logprob: -17.875001907348633
    6. ')

' → logprob: -18.500001907348633
    7. '   ' → logprob: -19.125001907348633
    8. '}' → logprob: -19.375001907348633
    9. ')`' → logprob: -19.375001907348633
    10. ')}' → logprob: -19.500001907348633

Token 106: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4257141351699829
    2. '<|end|>' → logprob: -1.675714135169983
    3. '
' → logprob: -1.925714135169983
    4. '#' → logprob: -5.550714015960693
    5. '\n' → logprob: -5.675714015960693
    6. '

' → logprob: -6.300714015960693
    7. ')' → logprob: -6.800714015960693
    8. '\' → logprob: -7.175714015960693
    9. '```' → logprob: -7.175714015960693
    10. '<|end|>' → logprob: -7.550714015960693

Token 107: ' calculate' (ID: 17950)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.6351580619812012
    2. ' bis' → logprob: -0.7601580619812012
    3. 'def' → logprob: -6.885158061981201
    4. ' main' → logprob: -7.885158061981201
    5. ' def' → logprob: -8.01015853881836
    6. 'main' → logprob: -8.26015853881836
    7. 'b' → logprob: -9.01015853881836
    8. 'sort' → logprob: -9.63515853881836
    9. 'get' → logprob: -9.88515853881836
    10. 'is' → logprob: -10.01015853881836

Token 108: '_pairs' (ID: 90005)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.04976265877485275
    2. '_' → logprob: -3.424762725830078
    3. '_average' → logprob: -5.049762725830078
    4. '(' → logprob: -5.674762725830078
    5. '_max' → logprob: -6.299762725830078
    6. '_factor' → logprob: -6.424762725830078
    7. '_total' → logprob: -7.799762725830078
    8. '_value' → logprob: -8.049762725830078
    9. '_div' → logprob: -8.049762725830078
    10. '_s' → logprob: -8.174762725830078

Token 109: '(L' (ID: 11075)
  Prédit: '(lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.25580236315727234
    2. '(' → logprob: -1.5058023929595947
    3. '(n' → logprob: -6.630802154541016
    4. '(ls' → logprob: -7.005802154541016
    5. '(s' → logprob: -7.630802154541016
    6. ' (' → logprob: -8.130802154541016
    7. '(l' → logprob: -8.255802154541016
    8. '(nums' → logprob: -8.505802154541016
    9. '(list' → logprob: -9.255802154541016
    10. '(lista' → logprob: -9.880802154541016

Token 110: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09710385650396347
    2. ',' → logprob: -2.4721038341522217
    3. 'ist' → logprob: -5.222104072570801
    4. ' ):' → logprob: -6.472104072570801
    5. ')' → logprob: -7.847104072570801
    6. '):
' → logprob: -8.8471040725708
    7. '[' → logprob: -9.5971040725708
    8. 's' → logprob: -9.8471040725708
    9. '_list' → logprob: -9.8471040725708
    10. '1' → logprob: -10.0971040725708

Token 111: ' N' (ID: 478)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.08892147243022919
    2. ' R' → logprob: -3.213921546936035
    3. 'K' → logprob: -5.088921546936035
    4. 'H' → logprob: -5.713921546936035
    5. 'X' → logprob: -5.838921546936035
    6. 'a' → logprob: -5.838921546936035
    7. 'M' → logprob: -5.838921546936035
    8. 'k' → logprob: -5.963921546936035
    9. 'x' → logprob: -5.963921546936035
    10. 'D' → logprob: -6.213921546936035

Token 112: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.038902971893548965
    2. ',' → logprob: -3.288902997970581
    3. ' ):' → logprob: -8.03890323638916
    4. ')' → logprob: -8.41390323638916
    5. '):
' → logprob: -8.53890323638916
    6. '_list' → logprob: -10.78890323638916
    7. '_' → logprob: -10.91390323638916
    8. ':' → logprob: -11.03890323638916
    9. '=' → logprob: -11.16390323638916
    10. 's' → logprob: -11.91390323638916

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05290272831916809
    2. ' pairs' → logprob: -3.3029026985168457
    3. 'pairs' → logprob: -5.552902698516846
    4. ' count' → logprob: -6.052902698516846
    5. ' res' → logprob: -6.177902698516846
    6. ' result' → logprob: -6.427902698516846
    7. ' total' → logprob: -6.677902698516846
    8. ' counts' → logprob: -7.552902698516846
    9. ' ans' → logprob: -7.927902698516846
    10. 'count' → logprob: -7.927902698516846

Token 114: ' ans' (ID: 3345)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.649986982345581
    2. ' pairs' → logprob: -1.649986982345581
    3. '   ' → logprob: -2.774986982345581
    4. 'count' → logprob: -2.774986982345581
    5. ' result' → logprob: -3.149986982345581
    6. ' count' → logprob: -3.274986982345581
    7. 'result' → logprob: -3.649986982345581
    8. ' res' → logprob: -4.14998722076416
    9. 'res' → logprob: -4.39998722076416
    10. ' L' → logprob: -5.52498722076416

Token 115: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06206314265727997
    2. '=' → logprob: -2.812063217163086
    3. ',' → logprob: -9.937063217163086
    4. '_' → logprob: -11.062063217163086
    5. ' ' → logprob: -11.687063217163086
    6. ')' → logprob: -12.312063217163086
    7. '=[]' → logprob: -12.562063217163086
    8. 's' → logprob: -13.187063217163086
    9. '   ' → logprob: -13.187063217163086
    10. '  ' → logprob: -13.312063217163086

Token 116: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014264819212257862
    2. ' ' → logprob: -4.2642645835876465
    3. '[' → logprob: -9.764265060424805
    4. ' [' → logprob: -10.764265060424805
    5. '[]' → logprob: -12.014265060424805
    6. '   ' → logprob: -12.639265060424805
    7. ' N' → logprob: -12.889265060424805
    8. '1' → logprob: -13.514265060424805
    9. 'N' → logprob: -13.514265060424805
    10. '[N' → logprob: -13.514265060424805

Token 117: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00035512709291651845
    2. ' ' → logprob: -8.875354766845703
    3. '[' → logprob: -9.500354766845703
    4. '[]' → logprob: -9.875354766845703
    5. '[]
' → logprob: -10.875354766845703
    6. 'N' → logprob: -11.000354766845703
    7. '[N' → logprob: -11.500354766845703
    8. 'L' → logprob: -11.750354766845703
    9. '1' → logprob: -11.875354766845703
    10. 'len' → logprob: -12.125354766845703

Token 118: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3546423316001892
    2. '
' → logprob: -1.229642391204834
    3. ',' → logprob: -6.104642391204834
    4. '    
' → logprob: -6.354642391204834
    5. '
' → logprob: -7.604642391204834
    6. '<|end|>' → logprob: -7.729642391204834
    7. ' for' → logprob: -7.854642391204834
    8. 'for' → logprob: -8.979641914367676
    9. ',
' → logprob: -9.104641914367676
    10. '  
' → logprob: -9.354641914367676

Token 119: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00353367836214602
    2. '
' → logprob: -5.878533840179443
    3. ' for' → logprob: -7.878533840179443
    4. '<|end|>' → logprob: -9.253533363342285
    5. 'for' → logprob: -9.378533363342285
    6. '    
' → logprob: -10.128533363342285
    7. ',' → logprob: -10.128533363342285
    8. '	for' → logprob: -10.378533363342285
    9. 'def' → logprob: -11.378533363342285
    10. '  ' → logprob: -12.003533363342285

Token 120: ' i' (ID: 575)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.48983338475227356
    2. ' for' → logprob: -1.2398333549499512
    3. 'L' → logprob: -3.114833354949951
    4. '   ' → logprob: -3.489833354949951
    5. ' L' → logprob: -4.489833354949951
    6. 'lst' → logprob: -6.114833354949951
    7. 'length' → logprob: -6.614833354949951
    8. ' length' → logprob: -6.989833354949951
    9. 'n' → logprob: -7.114833354949951
    10. 'l' → logprob: -7.114833354949951

Token 121: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2827126383781433
    2. '=' → logprob: -1.657712697982788
    3. ',' → logprob: -2.907712697982788
    4. ' ' → logprob: -7.907712459564209
    5. 'n' → logprob: -8.032712936401367
    6. ' ,' → logprob: -8.282712936401367
    7. ',n' → logprob: -9.907712936401367
    8. 's' → logprob: -11.282712936401367
    9. ')' → logprob: -11.407712936401367
    10. '  ' → logprob: -12.032712936401367

Token 122: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16087085008621216
    2. ' ' → logprob: -1.9108707904815674
    3. '1' → logprob: -7.4108710289001465
    4. '<|end|>' → logprob: -11.035870552062988
    5. ' N' → logprob: -11.660870552062988
    6. '2' → logprob: -12.535870552062988
    7. 'N' → logprob: -12.660870552062988
    8. '  ' → logprob: -13.035870552062988
    9. '[' → logprob: -13.160870552062988
    10. '   ' → logprob: -14.410870552062988

Token 123: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002707631094381213
    2. '1' → logprob: -6.127707481384277
    3. ' ' → logprob: -8.252707481384277
    4. 'N' → logprob: -8.502707481384277
    5. '-' → logprob: -10.252707481384277
    6. 'L' → logprob: -11.502707481384277
    7. 'len' → logprob: -12.627707481384277
    8. '2' → logprob: -12.752707481384277
    9. ' N' → logprob: -13.627707481384277
    10. '(' → logprob: -14.190207481384277

Token 124: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13557127118110657
    2. '<|end|>' → logprob: -2.135571241378784
    3. '   ' → logprob: -5.760571479797363
    4. '<|end|>' → logprob: -6.635571479797363
    5. ' 
' → logprob: -7.135571479797363
    6. '\n' → logprob: -7.260571479797363
    7. ',' → logprob: -7.385571479797363
    8. '    
' → logprob: -7.635571479797363
    9. '  
' → logprob: -7.885571479797363
    10. '	
' → logprob: -7.885571479797363

Token 125: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.038063984364271164
    2. '   ' → logprob: -4.288064002990723
    3. 'n' → logprob: -5.288064002990723
    4. '<|end|>' → logprob: -5.413064002990723
    5. '\n' → logprob: -5.913064002990723
    6. '	
' → logprob: -6.163064002990723
    7. ' 
' → logprob: -6.163064002990723
    8. '    
' → logprob: -6.788064002990723
    9. '\t' → logprob: -7.163064002990723
    10. '' → logprob: -7.163064002990723

Token 126: ' while' (ID: 2049)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.513730525970459
    2. 'for' → logprob: -1.388730525970459
    3. ' for' → logprob: -2.888730525970459
    4. 'n' → logprob: -3.263730525970459
    5. ' j' → logprob: -3.888730525970459
    6. 'while' (adapté à ' while') → logprob: -4.263730525970459
    7. '   ' → logprob: -4.763730525970459
    8. 'N' → logprob: -5.138730525970459
    9. ' while' → logprob: -5.513730525970459
    10. ' n' → logprob: -5.888730525970459

Token 127: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.22548435628414154
    2. ' i' → logprob: -1.6004843711853027
    3. ' True' → logprob: -11.225483894348145
    4. 'N' → logprob: -11.350483894348145
    5. 'True' → logprob: -11.350483894348145
    6. ' ' → logprob: -11.725483894348145
    7. '   ' → logprob: -11.975483894348145
    8. ' N' → logprob: -12.475483894348145
    9. '	i' → logprob: -12.600483894348145
    10. 'L' → logprob: -12.975483894348145

Token 128: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.1725935935974121
    2. '<' → logprob: -1.922593593597412
    3. '<len' → logprob: -5.047593593597412
    4. ' ' → logprob: -5.922593593597412
    5. ' <=' → logprob: -6.172593593597412
    6. '<=' → logprob: -7.922593593597412
    7. '<n' → logprob: -8.54759407043457
    8. '[' → logprob: -8.79759407043457
    9. '<N' → logprob: -9.67259407043457
    10. '+' → logprob: -9.67259407043457

Token 129: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.03167598322033882
    2. 'L' → logprob: -4.031675815582275
    3. ' N' → logprob: -4.531675815582275
    4. 'get' → logprob: -6.156675815582275
    5. ' L' → logprob: -8.156676292419434
    6. ' get' → logprob: -8.531676292419434
    7. 'len' → logprob: -10.406676292419434
    8. ' ' → logprob: -11.406676292419434
    9. '   ' → logprob: -12.281676292419434
    10. 'calculate' → logprob: -12.531676292419434

Token 130: ' -' (ID: 533)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011659766547381878
    2. ' and' → logprob: -4.761659622192383
    3. ':
' → logprob: -6.761659622192383
    4. 'and' → logprob: -6.886659622192383
    5. '):' → logprob: -7.261659622192383
    6. ',' → logprob: -10.261659622192383
    7. ' :' → logprob: -10.636659622192383
    8. '-' → logprob: -10.886659622192383
    9. ')' → logprob: -11.261659622192383
    10. '<|end|>' → logprob: -11.386659622192383

Token 131: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00013166792632546276
    2. ' ' → logprob: -9.125131607055664
    3. '2' → logprob: -10.750131607055664
    4. '-' → logprob: -15.375131607055664
    5. '   ' → logprob: -15.437631607055664
    6. '3' → logprob: -15.437631607055664
    7. '
' → logprob: -16.000131607055664
    8. 'i' → logprob: -16.562631607055664
    9. '１' → logprob: -16.875131607055664
    10. '  ' → logprob: -17.125131607055664

Token 132: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00037895687273703516
    2. '2' → logprob: -8.000378608703613
    3. ' ' → logprob: -10.250378608703613
    4. '3' → logprob: -12.500378608703613
    5. '   ' → logprob: -13.687878608703613
    6. '１' → logprob: -14.687878608703613
    7. '4' → logprob: -15.250378608703613
    8. '
' → logprob: -15.625378608703613
    9. '-' → logprob: -15.812878608703613
    10. '  ' → logprob: -15.875378608703613

Token 133: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1042935699224472
    2. ' and' → logprob: -2.7292935848236084
    3. ':
' → logprob: -3.6042935848236084
    4. 'and' → logprob: -5.229293346405029
    5. ' :' → logprob: -7.229293346405029
    6. '   ' → logprob: -8.604293823242188
    7. ' :
' → logprob: -8.854293823242188
    8. ' ' → logprob: -9.854293823242188
    9. '1' → logprob: -10.729293823242188
    10. ',' → logprob: -11.479293823242188

Token 134: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025270631536841393
    2. '    ' → logprob: -4.775270462036133
    3. '   ' → logprob: -5.150270462036133
    4. ' ' → logprob: -5.650270462036133
    5. '<|end|>' → logprob: -5.650270462036133
    6. '        
' → logprob: -7.025270462036133
    7. '        ' → logprob: -7.900270462036133
    8. '    
' → logprob: -8.150270462036133
    9. ',' → logprob: -8.150270462036133
    10. '     ' → logprob: -8.525270462036133

Token 135: ' a' (ID: 261)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.7190401554107666
    2. ' j' → logprob: -0.7190401554107666
    3. '       ' → logprob: -5.0940399169921875
    4. '   ' → logprob: -5.2190399169921875
    5. ' if' → logprob: -5.7190399169921875
    6. ' left' → logprob: -6.2190399169921875
    7. 'left' → logprob: -6.4690399169921875
    8. ' for' → logprob: -6.5940399169921875
    9. 'if' → logprob: -6.9690399169921875
    10. 'l' → logprob: -7.2190399169921875

Token 136: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029439402744174004
    2. '=' → logprob: -3.7794394493103027
    3. ',' → logprob: -5.279439449310303
    4. '_value' → logprob: -7.779439449310303
    5. '_val' → logprob: -8.404438972473145
    6. '_idx' → logprob: -9.529438972473145
    7. ',b' → logprob: -10.154438972473145
    8. '_length' → logprob: -10.279438972473145
    9. ' ' → logprob: -10.279438972473145
    10. '=a' → logprob: -10.279438972473145

Token 137: ' get' (ID: 717)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.2622227370738983
    2. 'get' → logprob: -1.5122227668762207
    3. ' L' → logprob: -4.887222766876221
    4. ' get' → logprob: -6.012222766876221
    5. '[get' → logprob: -9.887222290039062
    6. 'calculate' → logprob: -10.512222290039062
    7. 'i' → logprob: -10.637222290039062
    8. 'a' → logprob: -10.762222290039062
    9. '	L' → logprob: -11.262222290039062
    10. '=get' → logprob: -11.262222290039062

Token 138: '_element' (ID: 21131)
  Prédit: '_element'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_element' → logprob: -0.00120475422590971
    2. '_slice' → logprob: -7.251204967498779
    3. '_length' → logprob: -7.626204967498779
    4. '_elem' → logprob: -12.376204490661621
    5. 'element' → logprob: -13.876204490661621
    6. '_index' → logprob: -15.001204490661621
    7. '_list' → logprob: -15.376204490661621
    8. 'Element' → logprob: -15.751204490661621
    9. '_ELEMENT' → logprob: -15.751204490661621
    10. '_Element' → logprob: -15.751204490661621

Token 139: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -3.173704271830502e-06
    2. '(' → logprob: -12.87500286102295
    3. 'L' → logprob: -15.00000286102295
    4. '(
' → logprob: -17.125003814697266
    5. '(lst' → logprob: -17.875003814697266
    6. '(I' → logprob: -18.125003814697266
    7. '```' → logprob: -18.125003814697266
    8. '(S' → logprob: -18.250003814697266
    9. ' (' → logprob: -18.375003814697266
    10. '((' → logprob: -18.500003814697266

Token 140: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024741848930716515
    2. ',i' → logprob: -3.7747418880462646
    3. '(i' → logprob: -7.3997416496276855
    4. ')' → logprob: -8.274742126464844
    5. ' ,' → logprob: -8.649742126464844
    6. ',
' → logprob: -9.149742126464844
    7. '(' → logprob: -9.649742126464844
    8. ',l' → logprob: -10.149742126464844
    9. '),' → logprob: -10.274742126464844
    10. ',a' → logprob: -10.399742126464844

Token 141: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.5822400857578032e-05
    2. ' i' → logprob: -10.625025749206543
    3. ')' → logprob: -14.000025749206543
    4. ')i' → logprob: -15.625025749206543
    5. '0' → logprob: -15.750025749206543
    6. '   ' → logprob: -16.12502670288086
    7. ' ' → logprob: -16.37502670288086
    8. '  ' → logprob: -16.75002670288086
    9. '	i' → logprob: -17.00002670288086
    10. '(i' → logprob: -17.37502670288086

Token 142: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06287012994289398
    2. ')
' → logprob: -2.9378700256347656
    3. '+' → logprob: -4.937870025634766
    4. ' )' → logprob: -8.187870025634766
    5. '   ' → logprob: -8.937870025634766
    6. ' +' → logprob: -9.062870025634766
    7. ')+' → logprob: -9.812870025634766
    8. ')

' → logprob: -10.062870025634766
    9. ')
' → logprob: -10.687870025634766
    10. ' )
' → logprob: -10.687870025634766

Token 143: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 144: ' ans' (ID: 3345)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.13098379969596863
    2. ' j' → logprob: -2.380983829498291
    3. '   ' → logprob: -4.380983829498291
    4. '       ' → logprob: -5.380983829498291
    5. 'left' → logprob: -5.755983829498291
    6. 'if' → logprob: -6.005983829498291
    7. 'b' → logprob: -6.130983829498291
    8. ' left' → logprob: -6.630983829498291
    9. 'l' → logprob: -7.130983829498291
    10. 'for' → logprob: -7.380983829498291

Token 145: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.030046900734305382
    2. '+=' → logprob: -3.5300469398498535
    3. '+' → logprob: -8.280046463012695
    4. ' +' → logprob: -11.280046463012695
    5. ' =' → logprob: -11.905046463012695
    6. '++' → logprob: -12.655046463012695
    7. ' ' → logprob: -12.905046463012695
    8. '=' → logprob: -12.905046463012695
    9. '+=(' → logprob: -12.905046463012695
    10. ']+=' → logprob: -13.280046463012695

Token 146: ' calculate' (ID: 17950)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -1.0777662992477417
    2. 'bis' → logprob: -1.2027662992477417
    3. ' get' → logprob: -1.9527662992477417
    4. ' bis' → logprob: -2.4527664184570312
    5. 'a' → logprob: -3.7027664184570312
    6. '1' → logprob: -3.8277664184570312
    7. ' (' → logprob: -4.827766418457031
    8. '(get' → logprob: -4.827766418457031
    9. 'len' → logprob: -5.202766418457031
    10. 'b' → logprob: -5.202766418457031

Token 147: '_for' (ID: 11903)
  Prédit: '_pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -0.0014078515814617276
    2. '(a' → logprob: -7.751407623291016
    3. '(' → logprob: -8.251407623291016
    4. '(i' → logprob: -8.626407623291016
    5. 'pairs' → logprob: -9.001407623291016
    6. '(L' → logprob: -9.126407623291016
    7. '(len' → logprob: -9.751407623291016
    8. 'a' → logprob: -9.876407623291016
    9. '(N' → logprob: -10.751407623291016
    10. '(p' → logprob: -10.876407623291016

Token 148: '_i' (ID: 10853)
  Prédit: '(L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.5640556216239929
    2. '(i' → logprob: -1.0640556812286377
    3. '(a' → logprob: -2.9390556812286377
    4. '(' → logprob: -5.189055442810059
    5. '_a' → logprob: -5.564055442810059
    6. '_i' → logprob: -5.939055442810059
    7. '_pair' → logprob: -6.189055442810059
    8. '_element' → logprob: -6.314055442810059
    9. '_pairs' → logprob: -6.314055442810059
    10. 'a' → logprob: -6.439055442810059

Token 149: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.10748818516731262
    2. '(' → logprob: -2.3574881553649902
    3. '(i' → logprob: -4.98248815536499
    4. '(a' → logprob: -8.607488632202148
    5. '(
' → logprob: -9.607488632202148
    6. 's' → logprob: -10.607488632202148
    7. '((' → logprob: -10.732488632202148
    8. 'a' → logprob: -11.232488632202148
    9. '(`' → logprob: -11.357488632202148
    10. '(l' → logprob: -11.357488632202148

Token 150: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002897117054089904
    2. ',i' → logprob: -6.252897262573242
    3. ' ,' → logprob: -7.252897262573242
    4. '(' → logprob: -9.502897262573242
    5. '(i' → logprob: -9.502897262573242
    6. '[i' → logprob: -10.127897262573242
    7. ')' → logprob: -10.627897262573242
    8. '   ' → logprob: -11.127897262573242
    9. '[' → logprob: -11.252897262573242
    10. ' (' → logprob: -12.502897262573242

Token 151: ' N' (ID: 478)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06131291016936302
    2. ' i' → logprob: -3.0613129138946533
    3. 'a' → logprob: -4.936312675476074
    4. 'N' → logprob: -5.561312675476074
    5. ')' → logprob: -7.561312675476074
    6. ' N' → logprob: -7.811312675476074
    7. ' a' → logprob: -8.436312675476074
    8. ' ans' → logprob: -9.186312675476074
    9. ' ' → logprob: -9.436312675476074
    10. 'ans' → logprob: -9.436312675476074

Token 152: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015174767468124628
    2. ',i' → logprob: -7.251517295837402
    3. ' ,' → logprob: -7.376517295837402
    4. ')' → logprob: -9.501517295837402
    5. '   ' → logprob: -9.626517295837402
    6. '-' → logprob: -11.751517295837402
    7. ',
' → logprob: -12.001517295837402
    8. ' ' → logprob: -12.001517295837402
    9. '       ' → logprob: -12.251517295837402
    10. '),' → logprob: -13.501517295837402

Token 153: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7171291708946228
    2. 'i' → logprob: -0.9671291708946228
    3. 'a' → logprob: -2.3421292304992676
    4. ' a' → logprob: -3.3421292304992676
    5. ')' → logprob: -9.84212875366211
    6. ' ' → logprob: -9.96712875366211
    7. '   ' → logprob: -10.46712875366211
    8. '	i' → logprob: -12.15462875366211
    9. ' get' → logprob: -12.21712875366211
    10. '    ' → logprob: -12.34212875366211

Token 154: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1843627691268921
    2. ')
' → logprob: -1.934362769126892
    3. '+' → logprob: -3.9343628883361816
    4. ' +' → logprob: -5.934362888336182
    5. ' )' → logprob: -7.559362888336182
    6. ',' → logprob: -7.559362888336182
    7. ' )
' → logprob: -8.434362411499023
    8. '   ' → logprob: -8.684362411499023
    9. ')

' → logprob: -9.684362411499023
    10. ')
' → logprob: -10.184362411499023

Token 155: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.09262725710868835
    2. ' a' → logprob: -2.7176272869110107
    3. 'i' → logprob: -4.217627048492432
    4. ')' → logprob: -5.717627048492432
    5. ' i' → logprob: -5.842627048492432
    6. 'get' → logprob: -8.34262752532959
    7. ' get' → logprob: -8.59262752532959
    8. ' )' → logprob: -8.84262752532959
    9. 'ans' → logprob: -8.84262752532959
    10. ')a' → logprob: -9.09262752532959

Token 156: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18431557714939117
    2. ')
' → logprob: -1.80931556224823
    3. ',' → logprob: -6.0593156814575195
    4. '+' → logprob: -7.0593156814575195
    5. ' )' → logprob: -7.3093156814575195
    6. ' )
' → logprob: -7.9343156814575195
    7. ')
' → logprob: -9.43431568145752
    8. ')

' → logprob: -9.55931568145752
    9. ',
' → logprob: -9.68431568145752
    10. '   ' → logprob: -10.68431568145752

Token 157: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17099544405937195
    2. '       ' → logprob: -2.2959954738616943
    3. '    
' → logprob: -3.6709954738616943
    4. '\n' → logprob: -3.9209954738616943
    5. '\' → logprob: -5.295995235443115
    6. '
' → logprob: -6.545995235443115
    7. '    ' → logprob: -6.795995235443115
    8. '        
' → logprob: -6.920995235443115
    9. 'i' → logprob: -7.420995235443115
    10. ' 
' → logprob: -8.045995712280273

Token 158: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8186736702919006
    2. 'i' (adapté à ' i') → logprob: -1.0686736106872559
    3. ' i' → logprob: -1.5686736106872559
    4. '       ' → logprob: -5.068673610687256
    5. '
' → logprob: -7.943673610687256
    6. '    ' → logprob: -8.193674087524414
    7. '	i' → logprob: -8.943674087524414
    8. '    
' → logprob: -9.568674087524414
    9. ' ' → logprob: -11.443674087524414
    10. '  ' → logprob: -11.568674087524414

Token 159: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.41196632385253906
    2. '+=' → logprob: -1.661966323852539
    3. ' +=' → logprob: -1.911966323852539
    4. ' +' → logprob: -9.411966323852539
    5. '++' → logprob: -11.786966323852539
    6. '+='' → logprob: -12.911966323852539
    7. ' ' → logprob: -13.036966323852539
    8. '+="' → logprob: -13.536966323852539
    9. '=' → logprob: -13.661966323852539
    10. '+++' → logprob: -14.536966323852539

Token 160: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015024791937321424
    2. ' ' → logprob: -6.501502513885498
    3. '   ' → logprob: -16.876502990722656
    4. '```' → logprob: -17.626502990722656
    5. ' ' → logprob: -18.501502990722656
    6. '  ' → logprob: -20.001502990722656
    7. '
' → logprob: -20.126502990722656
    8. '１' → logprob: -20.251502990722656
    9. '	' → logprob: -20.876502990722656
    10. '0' → logprob: -21.126502990722656

Token 161: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.872261317563243e-05
    2. ' ' → logprob: -9.750059127807617
    3. '   ' → logprob: -15.750059127807617
    4. '```' → logprob: -16.062559127807617
    5. '  ' → logprob: -17.437559127807617
    6. '１' → logprob: -18.437559127807617
    7. '
' → logprob: -18.437559127807617
    8. '2' → logprob: -18.562559127807617
    9. ' ' → logprob: -18.750059127807617
    10. '۱' → logprob: -19.125059127807617

Token 162: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12458156049251556
    2. '   ' → logprob: -2.2495815753936768
    3. '<|end|>' → logprob: -5.124581336975098
    4. '    
' → logprob: -6.249581336975098
    5. 'def' → logprob: -6.624581336975098
    6. '\n' → logprob: -6.999581336975098
    7. ' 
' → logprob: -7.874581336975098
    8. '  
' → logprob: -8.124581336975098
    9. 'return' → logprob: -8.499581336975098
    10. ' ' → logprob: -9.249581336975098

Token 163: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014876770786941051
    2. 'return' → logprob: -4.764876842498779
    3. 'def' → logprob: -5.514876842498779
    4. '
' → logprob: -6.764876842498779
    5. '    
' → logprob: -7.264876842498779
    6. '	return' → logprob: -9.014876365661621
    7. ' return' → logprob: -9.014876365661621
    8. ' 
' → logprob: -10.514876365661621
    9. '```' → logprob: -11.264876365661621
    10. '  
' → logprob: -11.514876365661621

Token 164: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05363807827234268
    2. 'def' → logprob: -3.803637981414795
    3. '
' → logprob: -4.053637981414795
    4. ' ' → logprob: -5.678637981414795
    5. 'return' (adapté à ' return') → logprob: -6.178637981414795
    6. '    
' → logprob: -6.303637981414795
    7. ' return' → logprob: -7.053637981414795
    8. ' 
' → logprob: -7.178637981414795
    9. '	return' → logprob: -7.303637981414795
    10. '<|end|>' → logprob: -7.303637981414795

Token 165: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.12695194780826569
    2. 'ans' → logprob: -2.1269519329071045
    3. '(ans' → logprob: -10.876952171325684
    4. '	ans' → logprob: -12.251952171325684
    5. '_ans' → logprob: -16.001951217651367
    6. ' ' → logprob: -16.376951217651367
    7. 'anst' → logprob: -17.501951217651367
    8. ' an' → logprob: -19.501951217651367
    9. ' ' → logprob: -19.751951217651367
    10. 'answer' → logprob: -19.751951217651367

Token 166: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 167: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.43976786732673645
    2. 'def' → logprob: -1.189767837524414
    3. '<|end|>' → logprob: -3.064767837524414
    4. '+' → logprob: -6.189767837524414
    5. '\' → logprob: -6.689767837524414
    6. ' def' → logprob: -7.564767837524414
    7. '```' → logprob: -8.439767837524414
    8. '

' → logprob: -8.564767837524414
    9. '#' → logprob: -8.814767837524414
    10. '<|end|>' → logprob: -9.314767837524414

Token 168: ' calculate' (ID: 17950)
  Prédit: ' calculate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.0012042811140418053
    2. 'calculate' → logprob: -6.751204490661621
    3. ' def' → logprob: -10.626204490661621
    4. 'def' → logprob: -12.501204490661621
    5. 'alculate' → logprob: -13.251204490661621
    6. '```' → logprob: -14.001204490661621
    7. ' get' → logprob: -14.501204490661621
    8. ' ' → logprob: -14.626204490661621
    9. '
' → logprob: -15.251204490661621
    10. ' sort' → logprob: -15.376204490661621

Token 169: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -1.1756367712223437e-05
    2. '_pairs' → logprob: -11.375011444091797
    3. '_' → logprob: -16.375011444091797
    4. 'for' → logprob: -16.875011444091797
    5. '_f' → logprob: -17.375011444091797
    6. '```' → logprob: -18.500011444091797
    7. '_FOR' → logprob: -18.750011444091797
    8. '_pair' → logprob: -18.750011444091797
    9. 'For' → logprob: -19.000011444091797
    10. '_from' → logprob: -19.250011444091797

Token 170: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -2.696889623621246e-06
    2. 'i' → logprob: -13.00000286102295
    3. '_a' → logprob: -16.500001907348633
    4. '(i' → logprob: -17.250001907348633
    5. '_index' → logprob: -17.375001907348633
    6. '_it' → logprob: -17.875001907348633
    7. '_' → logprob: -18.125001907348633
    8. '```' → logprob: -18.250001907348633
    9. '_int' → logprob: -18.375001907348633
    10. '_j' → logprob: -18.375001907348633

Token 171: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.0008084330474957824
    2. '(' → logprob: -7.125808238983154
    3. '(lst' → logprob: -12.625808715820312
    4. '(List' → logprob: -14.750808715820312
    5. ' (' → logprob: -15.625808715820312
    6. '(
' → logprob: -16.250808715820312
    7. '(l' → logprob: -16.625808715820312
    8. '(

' → logprob: -18.000808715820312
    9. '(N' → logprob: -18.000808715820312
    10. '(I' → logprob: -18.125808715820312

Token 172: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.641841820150148e-05
    2. ' ,' → logprob: -11.00002670288086
    3. ',N' → logprob: -11.62502670288086
    4. '‌,' → logprob: -16.00002670288086
    5. ',i' → logprob: -16.25002670288086
    6. ',
' → logprob: -16.37502670288086
    7. ',n' → logprob: -16.50002670288086
    8. ',L' → logprob: -16.62502670288086
    9. '   ' → logprob: -16.62502670288086
    10. 'def' → logprob: -17.00002670288086

Token 173: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.004629484377801418
    2. ' N' → logprob: -5.379629611968994
    3. 'i' → logprob: -12.004629135131836
    4. 'n' → logprob: -14.004629135131836
    5. '   ' → logprob: -14.254629135131836
    6. ' ' → logprob: -14.629629135131836
    7. ')' → logprob: -14.879629135131836
    8. 'def' → logprob: -15.754629135131836
    9. ' i' → logprob: -16.004629135131836
    10. '  ' → logprob: -16.129629135131836

Token 174: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.173704271830502e-06
    2. ' ,' → logprob: -13.00000286102295
    3. ',i' → logprob: -14.25000286102295
    4. '   ' → logprob: -16.750003814697266
    5. ',
' → logprob: -17.125003814697266
    6. '‌,' → logprob: -17.250003814697266
    7. ',int' → logprob: -18.375003814697266
    8. ',a' → logprob: -18.750003814697266
    9. '_,' → logprob: -19.125003814697266
    10. ',

' → logprob: -19.625003814697266

Token 175: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5762823224067688
    2. ' i' → logprob: -0.8262823224067688
    3. '   ' → logprob: -9.201282501220703
    4. 'idx' → logprob: -9.326282501220703
    5. ' idx' → logprob: -9.701282501220703
    6. ' ' → logprob: -10.326282501220703
    7. 'index' → logprob: -10.826282501220703
    8. '	i' → logprob: -11.451282501220703
    9. '  ' → logprob: -11.701282501220703
    10. ' index' → logprob: -12.576282501220703

Token 176: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.236549335066229e-05
    2. ' ,' → logprob: -10.875021934509277
    3. ',a' → logprob: -13.750021934509277
    4. '   ' → logprob: -14.125021934509277
    5. '):' → logprob: -14.750021934509277
    6. 'a' → logprob: -14.750021934509277
    7. ',
' → logprob: -15.250021934509277
    8. '‌,' → logprob: -15.875021934509277
    9. '_,' → logprob: -16.125022888183594
    10. ',i' → logprob: -16.250022888183594

Token 177: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.058021485805511475
    2. ' a' → logprob: -2.9330215454101562
    3. 'value' → logprob: -6.683021545410156
    4. 'x' → logprob: -7.683021545410156
    5. 'val' → logprob: -8.183021545410156
    6. ' value' → logprob: -8.558021545410156
    7. 'v' → logprob: -8.558021545410156
    8. ')' → logprob: -8.683021545410156
    9. ' val' → logprob: -9.058021545410156
    10. 'b' → logprob: -9.058021545410156

Token 178: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011152864433825016
    2. '):
' → logprob: -4.761152744293213
    3. ',' → logprob: -6.011152744293213
    4. ')' → logprob: -10.386153221130371
    5. '):
' → logprob: -10.636153221130371
    6. ' ):' → logprob: -11.136153221130371
    7. ':' → logprob: -11.886153221130371
    8. '   ' → logprob: -12.886153221130371
    9. '):

' → logprob: -13.261153221130371
    10. ' ' → logprob: -14.823653221130371

Token 179: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.3582911491394043
    2. ' ans' → logprob: -1.6082911491394043
    3. 'count' → logprob: -1.9832911491394043
    4. ' count' → logprob: -1.9832911491394043
    5. '   ' → logprob: -2.1082911491394043
    6. 'j' → logprob: -2.4832911491394043
    7. ' j' → logprob: -3.9832911491394043
    8. 'pairs' → logprob: -4.483291149139404
    9. ' res' → logprob: -4.733291149139404
    10. 'res' → logprob: -5.483291149139404

Token 180: ' res' (ID: 694)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.0131645202636719
    2. ' ans' → logprob: -1.8881645202636719
    3. 'count' → logprob: -2.138164520263672
    4. ' count' → logprob: -2.138164520263672
    5. '   ' → logprob: -2.388164520263672
    6. 'j' → logprob: -2.388164520263672
    7. 'total' → logprob: -4.138164520263672
    8. 'res' (adapté à ' res') → logprob: -4.388164520263672
    9. ' j' → logprob: -4.638164520263672
    10. 'cnt' → logprob: -4.888164520263672

Token 181: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132939338684082
    2. '=' → logprob: -1.3132939338684082
    3. '   ' → logprob: -11.18829345703125
    4. ' ' → logprob: -11.43829345703125
    5. ',' → logprob: -13.06329345703125
    6. '  ' → logprob: -13.68829345703125
    7. '	' → logprob: -14.18829345703125
    8. ' ' → logprob: -14.81329345703125
    9. 'def' → logprob: -14.93829345703125
    10. '_' → logprob: -14.93829345703125

Token 182: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22543108463287354
    2. ' ' → logprob: -1.6004310846328735
    3. ' N' → logprob: -13.162931442260742
    4. '   ' → logprob: -13.162931442260742
    5. '1' → logprob: -13.350431442260742
    6. 'a' → logprob: -13.412931442260742
    7. 'N' → logprob: -13.787931442260742
    8. ' ' → logprob: -14.037931442260742
    9. 'b' → logprob: -14.475431442260742
    10. '  ' → logprob: -14.475431442260742

Token 183: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0024821963161230087
    2. ' ' → logprob: -6.0024824142456055
    3. '1' → logprob: -13.877482414245605
    4. 'a' → logprob: -14.314982414245605
    5. 'b' → logprob: -14.564982414245605
    6. '   ' → logprob: -14.627482414245605
    7. 'get' → logprob: -15.127482414245605
    8. 'bis' → logprob: -15.127482414245605
    9. 'N' → logprob: -15.252482414245605
    10. '[' → logprob: -15.314982414245605

Token 184: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 185: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00572565570473671
    2. '<|end|>' → logprob: -5.880725860595703
    3. 'j' → logprob: -7.255725860595703
    4. ' for' → logprob: -7.755725860595703
    5. ' j' → logprob: -8.005725860595703
    6. '    
' → logprob: -8.130725860595703
    7. 'for' → logprob: -8.380725860595703
    8. ',' → logprob: -8.880725860595703
    9. 'def' → logprob: -9.005725860595703
    10. '
' → logprob: -9.130725860595703

Token 186: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.15558387339115143
    2. 'for' → logprob: -2.5305838584899902
    3. 'left' → logprob: -3.0305838584899902
    4. 'l' → logprob: -5.03058385848999
    5. '   ' → logprob: -6.03058385848999
    6. 'low' → logprob: -6.03058385848999
    7. 'lo' → logprob: -6.65558385848999
    8. 'start' → logprob: -7.15558385848999
    9. ' j' → logprob: -7.28058385848999
    10. ' for' → logprob: -7.78058385848999

Token 187: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011315062642097473
    2. '=' → logprob: -4.511314868927002
    3. ' ' → logprob: -9.13631534576416
    4. '<|end|>' → logprob: -9.38631534576416
    5. ',' → logprob: -10.51131534576416
    6. '   ' → logprob: -11.01131534576416
    7. '    ' → logprob: -12.01131534576416
    8. ' =
' → logprob: -12.13631534576416
    9. ')' → logprob: -12.51131534576416
    10. '  ' → logprob: -12.76131534576416

Token 188: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.25248703360557556
    2. ' i' → logprob: -1.502487063407898
    3. '	i' → logprob: -8.627487182617188
    4. '<|end|>' → logprob: -8.752487182617188
    5. '   ' → logprob: -9.127487182617188
    6. ' ' → logprob: -9.627487182617188
    7. '(i' → logprob: -12.252487182617188
    8. '    ' → logprob: -12.502487182617188
    9. ',i' → logprob: -12.627487182617188
    10. '=i' → logprob: -12.627487182617188

Token 189: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25230252742767334
    2. ' +' → logprob: -1.5023025274276733
    3. ' ' → logprob: -8.627302169799805
    4. '1' → logprob: -9.627302169799805
    5. '   ' → logprob: -9.752302169799805
    6. '2' → logprob: -10.502302169799805
    7. '+
' → logprob: -11.502302169799805
    8. '<|end|>' → logprob: -11.502302169799805
    9. ' +
' → logprob: -12.377302169799805
    10. ' +=' → logprob: -12.377302169799805

Token 190: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0022128233686089516
    2. '2' → logprob: -6.752213001251221
    3. ' ' → logprob: -6.877213001251221
    4. '   ' → logprob: -12.127212524414062
    5. '<|end|>' → logprob: -12.502212524414062
    6. '  ' → logprob: -14.314712524414062
    7. '```' → logprob: -15.377212524414062
    8. '0' → logprob: -15.752212524414062
    9. 'def' → logprob: -15.877212524414062
    10. '+' → logprob: -15.877212524414062

Token 191: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0032774105202406645
    2. '2' → logprob: -5.75327730178833
    3. ' ' → logprob: -9.253277778625488
    4. '<|end|>' → logprob: -14.003277778625488
    5. '   ' → logprob: -14.503277778625488
    6. '0' → logprob: -14.565777778625488
    7. '3' → logprob: -15.065777778625488
    8. '```' → logprob: -15.628277778625488
    9. '  ' → logprob: -15.753277778625488
    10. 'def' → logprob: -16.628276824951172

Token 192: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 193: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 194: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.16425392031669617
    2. ' while' → logprob: -1.9142539501190186
    3. 'j' → logprob: -6.2892537117004395
    4. 'N' → logprob: -6.6642537117004395
    5. 'k' → logprob: -7.5392537117004395
    6. 'While' → logprob: -8.914254188537598
    7. ' N' → logprob: -9.414254188537598
    8. ' j' → logprob: -10.414254188537598
    9. ' ' → logprob: -10.914254188537598
    10. '   ' → logprob: -11.039254188537598

Token 195: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.06198090314865112
    2. ' j' → logprob: -2.811980962753296
    3. 'N' → logprob: -12.186981201171875
    4. '	j' → logprob: -13.186981201171875
    5. '   ' → logprob: -13.561981201171875
    6. '$j' → logprob: -13.936981201171875
    7. '(j' → logprob: -14.061981201171875
    8. ' ' → logprob: -14.811981201171875
    9. ' ' → logprob: -14.936981201171875
    10. 'get' → logprob: -15.061981201171875

Token 196: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.01831546053290367
    2. '<' → logprob: -4.018315315246582
    3. ' <=' → logprob: -9.393315315246582
    4. '<N' → logprob: -9.893315315246582
    5. ' ' → logprob: -11.893315315246582
    6. '<|end|>' → logprob: -12.143315315246582
    7. '<=' → logprob: -12.268315315246582
    8. ' <
' → logprob: -12.393315315246582
    9. '[' → logprob: -13.018315315246582
    10. ',' → logprob: -13.393315315246582

Token 197: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0011703446507453918
    2. ' N' → logprob: -6.7511701583862305
    3. '   ' → logprob: -16.001171112060547
    4. '<N' → logprob: -17.751171112060547
    5. 'n' → logprob: -17.876171112060547
    6. '	N' → logprob: -18.001171112060547
    7. ' ' → logprob: -18.751171112060547
    8. '(N' → logprob: -19.126171112060547
    9. 'Ｎ' → logprob: -19.876171112060547
    10. 'j' → logprob: -20.126171112060547

Token 198: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2016073614358902
    2. ' -' → logprob: -1.701607346534729
    3. ':' → logprob: -9.326607704162598
    4. 'and' → logprob: -10.076607704162598
    5. ' and' → logprob: -10.451607704162598
    6. ':
' → logprob: -10.826607704162598
    7. ' ' → logprob: -12.076607704162598
    8. '   ' → logprob: -12.201607704162598
    9. '<|end|>' → logprob: -14.326607704162598
    10. ' :' → logprob: -14.951607704162598

Token 199: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00031985383247956634
    2. ' ' → logprob: -8.125319480895996
    3. '2' → logprob: -11.375319480895996
    4. '   ' → logprob: -11.625319480895996
    5. '0' → logprob: -14.000319480895996
    6. 'def' → logprob: -14.375319480895996
    7. '
' → logprob: -14.625319480895996
    8. '  ' → logprob: -15.375319480895996
    9. '    ' → logprob: -15.875319480895996
    10. '...' → logprob: -16.000320434570312

Token 200: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012797261297237128
    2. '2' → logprob: -9.500127792358398
    3. ' ' → logprob: -10.250127792358398
    4. '   ' → logprob: -11.937627792358398
    5. '
' → logprob: -12.250127792358398
    6. '0' → logprob: -13.375127792358398
    7. '

' → logprob: -14.187627792358398
    8. '  ' → logprob: -14.562627792358398
    9. '```' → logprob: -15.000127792358398
    10. '    
' → logprob: -15.250127792358398

Token 201: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004211958963423967
    2. ':
' → logprob: -5.754211902618408
    3. ' and' → logprob: -7.129211902618408
    4. 'and' → logprob: -8.754212379455566
    5. '<|end|>' → logprob: -10.504212379455566
    6. ',' → logprob: -11.004212379455566
    7. ':

' → logprob: -11.379212379455566
    8. '):' → logprob: -12.004212379455566
    9. '   ' → logprob: -12.504212379455566
    10. '<|end|>' → logprob: -13.254212379455566

Token 202: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4936128556728363
    2. 'b' → logprob: -0.9936128854751587
    3. ' b' → logprob: -5.368612766265869
    4. 'if' → logprob: -5.618612766265869
    5. ' if' → logprob: -5.868612766265869
    6. 'k' → logprob: -5.868612766265869
    7. '<|end|>' → logprob: -6.618612766265869
    8. 'x' → logprob: -7.368612766265869
    9. 'c' → logprob: -7.368612766265869
    10. 'value' → logprob: -7.868612766265869

Token 203: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.02051350846886635
    2. ' b' → logprob: -4.395513534545898
    3. '       ' → logprob: -5.020513534545898
    4. '   ' → logprob: -7.770513534545898
    5. '           ' → logprob: -7.895513534545898
    6. 'if' → logprob: -8.395513534545898
    7. 'a' → logprob: -9.770513534545898
    8. 'val' → logprob: -10.145513534545898
    9. ' if' → logprob: -10.770513534545898
    10. 'c' → logprob: -10.895513534545898

Token 204: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932138800621033
    2. ' =' → logprob: -0.6932138800621033
    3. '=get' → logprob: -9.94321346282959
    4. ',' → logprob: -12.06821346282959
    5. ')' → logprob: -12.06821346282959
    6. '   ' → logprob: -13.06821346282959
    7. ' ' → logprob: -13.31821346282959
    8. 'get' → logprob: -14.44321346282959
    9. '    ' → logprob: -14.69321346282959
    10. ' =
' → logprob: -14.94321346282959

Token 205: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.009775921702384949
    2. ' get' → logprob: -4.6347761154174805
    3. '	get' → logprob: -12.00977611541748
    4. '(get' → logprob: -12.38477611541748
    5. '[get' → logprob: -13.00977611541748
    6. '=get' → logprob: -13.25977611541748
    7. 'b' → logprob: -13.38477611541748
    8. ')get' → logprob: -13.63477611541748
    9. '.get' → logprob: -14.00977611541748
    10. '@get' → logprob: -15.00977611541748

Token 206: '_element' (ID: 21131)
  Prédit: '_element'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_element' → logprob: -3.583550642360933e-05
    2. 'element' → logprob: -10.250036239624023
    3. 'Element' → logprob: -15.375036239624023
    4. '_ELEMENT' → logprob: -17.125036239624023
    5. '_list' → logprob: -17.375036239624023
    6. ' element' → logprob: -17.500036239624023
    7. '_elem' → logprob: -17.750036239624023
    8. '[' → logprob: -18.000036239624023
    9. '_Element' → logprob: -18.125036239624023
    10. 's' → logprob: -18.250036239624023

Token 207: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -2.451116051815916e-05
    2. '(' → logprob: -10.750024795532227
    3. '(lst' → logprob: -12.875024795532227
    4. '(
' → logprob: -15.625024795532227
    5. '(List' → logprob: -16.000024795532227
    6. '(I' → logprob: -17.250024795532227
    7. '(S' → logprob: -17.625024795532227
    8. '(Ljava' → logprob: -17.750024795532227
    9. ' (' → logprob: -18.500024795532227
    10. '<|end|>' → logprob: -18.500024795532227

Token 208: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002005364978685975
    2. ',j' → logprob: -6.252005577087402
    3. ' ,' → logprob: -9.627005577087402
    4. ')' → logprob: -13.002005577087402
    5. ',
' → logprob: -13.252005577087402
    6. 'j' → logprob: -13.502005577087402
    7. '[j' → logprob: -13.877005577087402
    8. ',i' → logprob: -13.877005577087402
    9. '[' → logprob: -14.002005577087402
    10. ' ' → logprob: -14.377005577087402

Token 209: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.003606959478929639
    2. ' j' → logprob: -5.628606796264648
    3. ' ' → logprob: -13.753606796264648
    4. 'lst' → logprob: -13.753606796264648
    5. ',' → logprob: -14.128606796264648
    6. '	j' → logprob: -14.253606796264648
    7. '```' → logprob: -14.378606796264648
    8. '   ' → logprob: -14.378606796264648
    9. 'L' → logprob: -14.628606796264648
    10. '[j' → logprob: -15.003606796264648

Token 210: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007615390233695507
    2. ')
' → logprob: -4.882615566253662
    3. '),' → logprob: -13.132615089416504
    4. ')
' → logprob: -13.132615089416504
    5. ',' → logprob: -13.882615089416504
    6. '       ' → logprob: -14.257615089416504
    7. ')

' → logprob: -14.382615089416504
    8. ' )' → logprob: -14.382615089416504
    9. ')`' → logprob: -14.632615089416504
    10. ')`
' → logprob: -14.882615089416504

Token 211: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013903023675084114
    2. 'if' → logprob: -5.1389031410217285
    3. ' if' → logprob: -6.0139031410217285
    4. ',' → logprob: -6.6389031410217285
    5. '        
' → logprob: -7.0139031410217285
    6. '
' → logprob: -7.0139031410217285
    7. '```' → logprob: -7.8889031410217285
    8. '<|end|>' → logprob: -8.01390266418457
    9. ')' → logprob: -8.26390266418457
    10. '   ' → logprob: -8.51390266418457

Token 212: ' idx' (ID: 14016)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.8616536259651184
    2. 'target' → logprob: -1.4866535663604736
    3. 'k' → logprob: -2.9866535663604736
    4. 'x' → logprob: -3.1116535663604736
    5. '   ' → logprob: -3.1116535663604736
    6. ' c' → logprob: -3.1116535663604736
    7. 'if' → logprob: -3.3616535663604736
    8. ' target' → logprob: -3.9866535663604736
    9. 'left' → logprob: -3.9866535663604736
    10. 'val' → logprob: -4.611653804779053

Token 213: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048601455986499786
    2. '=' → logprob: -3.0486013889312744
    3. ' ' → logprob: -12.173601150512695
    4. '_' → logprob: -13.423601150512695
    5. 's' → logprob: -14.173601150512695
    6. ')' → logprob: -14.173601150512695
    7. '=b' → logprob: -14.173601150512695
    8. '   ' → logprob: -14.423601150512695
    9. '    ' → logprob: -14.423601150512695
    10. ' =
' → logprob: -14.798601150512695

Token 214: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.3869549036026001
    2. 'bis' → logprob: -1.1369549036026
    3. '   ' → logprob: -9.886955261230469
    4. '       ' → logprob: -10.886955261230469
    5. 'b' → logprob: -12.511955261230469
    6. 'bs' → logprob: -13.136955261230469
    7. 'j' → logprob: -13.261955261230469
    8. '           ' → logprob: -13.386955261230469
    9. '	b' → logprob: -13.636955261230469
    10. ' ' → logprob: -13.761955261230469

Token 215: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -4.320199877838604e-07
    2. 'sect' → logprob: -15.5
    3. 'ct' → logprob: -17.0
    4. 'e' → logprob: -17.25
    5. 'ects' → logprob: -18.0
    6. 'lect' → logprob: -18.125
    7. 'ected' → logprob: -18.75
    8. 'ec' → logprob: -18.75
    9. 'ectl' → logprob: -19.0
    10. 'ext' → logprob: -19.625

Token 216: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.0010344763286411762
    2. '.b' → logprob: -6.876034259796143
    3. '_right' → logprob: -14.8760347366333
    4. 'left' → logprob: -15.1260347366333
    5. 'Left' → logprob: -15.3760347366333
    6. '.' → logprob: -15.3760347366333
    7. '_LEFT' → logprob: -15.6260347366333
    8. '._' → logprob: -15.8760347366333
    9. '.left' → logprob: -15.8760347366333
    10. '```' → logprob: -17.001033782958984

Token 217: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -6.153795766294934e-06
    2. '(L' → logprob: -12.750005722045898
    3. '_' → logprob: -13.375005722045898
    4. '(' → logprob: -14.625005722045898
    5. '(lst' → logprob: -14.625005722045898
    6. 'in' → logprob: -16.0000057220459
    7. '(_' → logprob: -16.1250057220459
    8. '(b' → logprob: -16.2500057220459
    9. 'In' → logprob: -16.6250057220459
    10. '_b' → logprob: -16.6250057220459

Token 218: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -8.661626634420827e-05
    2. 'list' → logprob: -9.375086784362793
    3. 'lst' → logprob: -14.125086784362793
    4. '_lst' → logprob: -14.125086784362793
    5. '_l' → logprob: -16.750085830688477
    6. 'List' → logprob: -17.000085830688477
    7. '_' → logprob: -17.250085830688477
    8. '_lists' → logprob: -17.250085830688477
    9. 'ist' → logprob: -17.375085830688477
    10. 's' → logprob: -18.125085830688477

Token 219: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -9.610702363715973e-06
    2. '(lst' → logprob: -12.125009536743164
    3. '(' → logprob: -13.000009536743164
    4. '(
' → logprob: -13.875009536743164
    5. ' (' → logprob: -14.500009536743164
    6. '<|end|>' → logprob: -16.000009536743164
    7. '(List' → logprob: -16.125009536743164
    8. '```' → logprob: -16.875009536743164
    9. '(I' → logprob: -17.000009536743164
    10. '	L' → logprob: -18.375009536743164

Token 220: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005023117642849684
    2. ',L' → logprob: -5.380023002624512
    3. ',b' → logprob: -8.005023002624512
    4. ' ,' → logprob: -10.630023002624512
    5. ',l' → logprob: -11.380023002624512
    6. ',j' → logprob: -12.005023002624512
    7. ',
' → logprob: -12.380023002624512
    8. '(L' → logprob: -12.630023002624512
    9. '),' → logprob: -12.630023002624512
    10. ',k' → logprob: -13.005023002624512

Token 221: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03073078952729702
    2. 'b' → logprob: -4.030730724334717
    3. ' a' → logprob: -4.530730724334717
    4. ' b' → logprob: -7.155730724334717
    5. '-(' → logprob: -8.530731201171875
    6. '   ' → logprob: -9.155731201171875
    7. 'get' → logprob: -9.405731201171875
    8. '(a' → logprob: -9.780731201171875
    9. '-a' → logprob: -9.780731201171875
    10. ')a' → logprob: -9.905731201171875

Token 222: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.8117044568061829
    2. '+' → logprob: -1.061704397201538
    3. '+b' → logprob: -1.561704397201538
    4. 'b' → logprob: -8.811704635620117
    5. '+
' → logprob: -10.936704635620117
    6. '-' → logprob: -11.311704635620117
    7. ' ' → logprob: -11.436704635620117
    8. '
' → logprob: -11.686704635620117
    9. ' -' → logprob: -11.811704635620117
    10. ')' → logprob: -11.936704635620117

Token 223: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.004172779619693756
    2. ' b' → logprob: -5.5041728019714355
    3. 'get' → logprob: -9.879172325134277
    4. ' get' → logprob: -11.254172325134277
    5. ' ' → logprob: -12.254172325134277
    6. '   ' → logprob: -12.754172325134277
    7. ' +' → logprob: -12.879172325134277
    8. '+b' → logprob: -12.879172325134277
    9. '*b' → logprob: -13.129172325134277
    10. ')' → logprob: -13.504172325134277

Token 224: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017134016379714012
    2. ')
' → logprob: -4.767134189605713
    3. '+' → logprob: -5.017134189605713
    4. ' )' → logprob: -7.017134189605713
    5. ',' → logprob: -7.642134189605713
    6. ' +' → logprob: -8.642133712768555
    7. '-' → logprob: -9.017133712768555
    8. ' -' → logprob: -9.892133712768555
    9. ')-' → logprob: -10.517133712768555
    10. ' )
' → logprob: -10.767133712768555

Token 225: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011287610046565533
    2. ')' → logprob: -5.511287689208984
    3. '        
' → logprob: -6.011287689208984
    4. ')
' → logprob: -6.636287689208984
    5. '
' → logprob: -6.761287689208984
    6. '<|end|>' → logprob: -7.136287689208984
    7. ',' → logprob: -7.761287689208984
    8. '	' → logprob: -8.386287689208984
    9. '```' → logprob: -9.136287689208984
    10. '   ' → logprob: -9.386287689208984

Token 226: ' res' (ID: 694)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.2468143701553345
    2. ' if' → logprob: -1.2468143701553345
    3. '       ' → logprob: -1.3718143701553345
    4. 'k' → logprob: -2.746814250946045
    5. ' k' → logprob: -3.121814250946045
    6. ' res' → logprob: -3.371814250946045
    7. 'res' (adapté à ' res') → logprob: -3.621814250946045
    8. '
' → logprob: -7.371814250946045
    9. '        
' → logprob: -7.871814250946045
    10. ')' → logprob: -8.621814727783203

Token 227: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.12700779736042023
    2. '+=' → logprob: -2.1270077228546143
    3. '+' → logprob: -9.627007484436035
    4. '+=(' → logprob: -12.752007484436035
    5. ']+=' → logprob: -12.752007484436035
    6. ' +' → logprob: -13.127007484436035
    7. ')' → logprob: -13.377007484436035
    8. '	' → logprob: -13.877007484436035
    9. '=' → logprob: -14.002007484436035
    10. ' ' → logprob: -14.252007484436035

Token 228: ' idx' (ID: 14016)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5360469818115234
    2. 'idx' → logprob: -1.0360469818115234
    3. ' max' → logprob: -3.1610469818115234
    4. ' idx' → logprob: -4.411046981811523
    5. 'get' → logprob: -5.536046981811523
    6. '(max' → logprob: -7.286046981811523
    7. '(' → logprob: -8.036046981811523
    8. ' get' → logprob: -8.286046981811523
    9. '(idx' → logprob: -8.911046981811523
    10. ' (' → logprob: -9.536046981811523

Token 229: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1003810316324234
    2. '-' → logprob: -2.3503811359405518
    3. '   ' → logprob: -9.850380897521973
    4. '       ' → logprob: -9.975380897521973
    5. ' ' → logprob: -10.100380897521973
    6. ' -
' → logprob: -11.475380897521973
    7. '-
' → logprob: -12.350380897521973
    8. '           ' → logprob: -12.475380897521973
    9. '	' → logprob: -12.975380897521973
    10. '
' → logprob: -13.100380897521973

Token 230: ' j' (ID: 441)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.03385142609477043
    2. 'j' → logprob: -3.783851385116577
    3. ' (' → logprob: -4.658851623535156
    4. ' j' → logprob: -7.283851623535156
    5. '(' → logprob: -8.033851623535156
    6. '(k' → logprob: -11.658851623535156
    7. '(get' → logprob: -11.908851623535156
    8. '1' → logprob: -12.033851623535156
    9. '   ' → logprob: -12.033851623535156
    10. '	j' → logprob: -12.158851623535156

Token 231: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14803534746170044
    2. '-' → logprob: -2.2730352878570557
    3. ' -' → logprob: -3.8980352878570557
    4. 'j' → logprob: -5.023035526275635
    5. '
' → logprob: -5.148035526275635
    6. '   ' → logprob: -6.773035526275635
    7. ' ' → logprob: -7.898035526275635
    8. ' j' → logprob: -9.773035049438477
    9. '           ' → logprob: -10.273035049438477
    10. '        
' → logprob: -10.398035049438477

Token 232: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '<|end|>' → logprob: -18.125003814697266
    4. '```' → logprob: -19.250003814697266
    5. '
' → logprob: -20.250003814697266
    6. '   ' → logprob: -20.250003814697266
    7. '0' → logprob: -20.500003814697266
    8. '[' → logprob: -20.750003814697266
    9. '...' → logprob: -20.875003814697266
    10. ' ' → logprob: -21.125003814697266

Token 233: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.625003814697266
    3. '<|end|>' → logprob: -16.125003814697266
    4. '```' → logprob: -17.500003814697266
    5. '
' → logprob: -18.000003814697266
    6. '0' → logprob: -18.250003814697266
    7. 'def' → logprob: -18.750003814697266
    8. '[' → logprob: -19.000003814697266
    9. '   ' → logprob: -19.187503814697266
    10. '۱' → logprob: -19.375003814697266

Token 234: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01023043505847454
    2. '
' → logprob: -4.635230541229248
    3. '\n' → logprob: -9.13523006439209
    4. 'j' → logprob: -9.26023006439209
    5. '```' → logprob: -9.63523006439209
    6. '   ' → logprob: -9.88523006439209
    7. 'return' → logprob: -10.26023006439209
    8. '        
' → logprob: -10.38523006439209
    9. '<|end|>' → logprob: -11.26023006439209
    10. '	' → logprob: -11.26023006439209

Token 235: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008336895843967795
    2. 'j' → logprob: -7.625833511352539
    3. '   ' → logprob: -8.250833511352539
    4. '	' → logprob: -10.375833511352539
    5. '```' → logprob: -10.375833511352539
    6. '           ' → logprob: -11.875833511352539
    7. '	j' → logprob: -12.375833511352539
    8. '
' → logprob: -12.750833511352539
    9. ' j' → logprob: -13.250833511352539
    10. ' ' → logprob: -13.625833511352539

Token 236: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.10514425486326218
    2. '       ' → logprob: -2.3551442623138428
    3. ' j' → logprob: -5.855144023895264
    4. '   ' → logprob: -6.230144023895264
    5. '           ' → logprob: -9.480144500732422
    6. '	j' → logprob: -12.480144500732422
    7. ' ' → logprob: -12.730144500732422
    8. '
' → logprob: -12.980144500732422
    9. '```' → logprob: -13.605144500732422
    10. '     ' → logprob: -13.605144500732422

Token 237: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3878098726272583
    2. ' +=' → logprob: -1.1378098726272583
    3. '+' → logprob: -7.012809753417969
    4. '=' → logprob: -10.262809753417969
    5. '++' → logprob: -14.012809753417969
    6. ' +' → logprob: -14.387809753417969
    7. '<|end|>' → logprob: -14.637809753417969
    8. ')' → logprob: -14.887809753417969
    9. ']+=' → logprob: -14.887809753417969
    10. '+='' → logprob: -15.512809753417969

Token 238: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '```' → logprob: -19.37500762939453
    4. '   ' → logprob: -19.87500762939453
    5. '<|end|>' → logprob: -20.00000762939453
    6. '
' → logprob: -20.75000762939453
    7. '۱' → logprob: -22.00000762939453
    8. '１' → logprob: -22.25000762939453
    9. '  ' → logprob: -22.37500762939453
    10. 'def' → logprob: -22.50000762939453

Token 239: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.375001907348633
    3. '```' → logprob: -17.000001907348633
    4. '<|end|>' → logprob: -17.750001907348633
    5. '۱' → logprob: -20.062501907348633
    6. '   ' → logprob: -20.125001907348633
    7. '１' → logprob: -20.375001907348633
    8. 'def' → logprob: -20.625001907348633
    9. '
' → logprob: -20.687501907348633
    10. '0' → logprob: -21.062501907348633

Token 240: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007238718098960817
    2. '
' → logprob: -7.625723838806152
    3. 'return' → logprob: -9.000723838806152
    4. ' return' → logprob: -9.875723838806152
    5. '	return' → logprob: -10.250723838806152
    6. '    
' → logprob: -11.250723838806152
    7. '```' → logprob: -12.500723838806152
    8. '<|end|>' → logprob: -12.500723838806152
    9. '   ' → logprob: -12.875723838806152
    10. '       ' → logprob: -14.500723838806152

Token 241: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011257546953856945
    2. 'return' → logprob: -4.511257648468018
    3. ' return' → logprob: -8.51125717163086
    4. '	return' → logprob: -12.38625717163086
    5. '```' → logprob: -12.76125717163086
    6. '
' → logprob: -14.63625717163086
    7. '    
' → logprob: -15.26125717163086
    8. ':return' → logprob: -15.26125717163086
    9. '   ' → logprob: -15.88625717163086
    10. ' ' → logprob: -16.01125717163086

Token 242: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.477398157119751
    2. '   ' → logprob: -0.977398157119751
    3. ' return' → logprob: -5.727397918701172
    4. '	return' → logprob: -9.852397918701172
    5. ' ' → logprob: -12.102397918701172
    6. '```' → logprob: -13.977397918701172
    7. '  ' → logprob: -14.727397918701172
    8. 'eturn' → logprob: -15.977397918701172
    9. '{return' → logprob: -16.352397918701172
    10. '
' → logprob: -16.352397918701172

Token 243: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.001170225441455841
    2. ' res' → logprob: -6.7511701583862305
    3. '(res' → logprob: -19.626171112060547
    4. '	res' → logprob: -20.876171112060547
    5. 'r' → logprob: -22.626171112060547
    6. 're' → logprob: -22.751171112060547
    7. '$res' → logprob: -22.751171112060547
    8. '_res' → logprob: -22.876171112060547
    9. '   ' → logprob: -23.251171112060547
    10. ',res' → logprob: -24.126171112060547

Token 244: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 245: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.17213557660579681
    2. 'def' → logprob: -2.672135591506958
    3. '<|end|>' → logprob: -2.922135591506958
    4. 'n' → logprob: -4.047135353088379
    5. '```' → logprob: -4.922135353088379
    6. 'a' → logprob: -5.797135353088379
    7. 'if' → logprob: -6.547135353088379
    8. 'i' → logprob: -6.922135353088379
    9. 'N' → logprob: -7.047135353088379
    10. '<|end|>' → logprob: -7.172135353088379

Token 246: ' print' (ID: 2123)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.00862119346857071
    2. 'main' → logprob: -4.7586212158203125
    3. ' solve' → logprob: -12.258621215820312
    4. ' calculate' → logprob: -14.383621215820312
    5. '__' → logprob: -15.258621215820312
    6. 'solve' → logprob: -15.383621215820312
    7. ' __' → logprob: -15.633621215820312
    8. ' process' → logprob: -15.883621215820312
    9. ' find' → logprob: -16.383621215820312
    10. '	main' → logprob: -16.508621215820312

Token 247: '_result' (ID: 11623)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0037859429139643908
    2. '_' → logprob: -6.753786087036133
    3. '_result' → logprob: -7.253786087036133
    4. '_results' → logprob: -7.878786087036133
    5. '()' → logprob: -8.003786087036133
    6. '(ans' → logprob: -8.003786087036133
    7. '_ans' → logprob: -9.128786087036133
    8. '("("' → logprob: -9.128786087036133
    9. '_answer' → logprob: -9.253786087036133
    10. '(
' → logprob: -9.253786087036133

Token 248: '(res' (ID: 8331)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.5302574038505554
    2. '(' → logprob: -1.0302574634552002
    3. '(ans' → logprob: -3.1552574634552
    4. '():' → logprob: -4.655257225036621
    5. '(output' → logprob: -7.155257225036621
    6. '(answer' → logprob: -7.530257225036621
    7. '(results' → logprob: -8.155257225036621
    8. '()' → logprob: -8.655257225036621
    9. '(res' → logprob: -9.155257225036621
    10. ' (' → logprob: -9.155257225036621

Token 249: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11289524286985397
    2. '(res' → logprob: -3.2378952503204346
    3. '):
' → logprob: -3.2378952503204346
    4. ')' → logprob: -3.7378952503204346
    5. ',' → logprob: -5.9878950119018555
    6. ',res' → logprob: -6.3628950119018555
    7. 'res' → logprob: -8.862895011901855
    8. '   ' → logprob: -10.737895011901855
    9. '):
' → logprob: -10.987895011901855
    10. '):

' → logprob: -11.487895011901855

Token 250: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02567574568092823
    2. 'print' → logprob: -3.7756757736206055
    3. ' print' → logprob: -6.0256757736206055
    4. '```' → logprob: -11.400675773620605
    5. '    
' → logprob: -16.65067481994629
    6. '   ' → logprob: -17.02567481994629
    7. '`' → logprob: -17.27567481994629
    8. '	print' → logprob: -17.40067481994629
    9. '
' → logprob: -18.77567481994629
    10. '.print' → logprob: -20.02567481994629

Token 251: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -2.339278580620885e-06
    2. ' print' → logprob: -13.000001907348633
    3. '   ' → logprob: -16.750001907348633
    4. '```' → logprob: -19.500001907348633
    5. 'pr' → logprob: -21.500001907348633
    6. '
' → logprob: -22.875001907348633
    7. '`' → logprob: -23.250001907348633
    8. '    
' → logprob: -23.375001907348633
    9. 'prin' → logprob: -23.750001907348633
    10. 'def' → logprob: -24.375001907348633

Token 252: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.00016361083544325083
    2. '(' → logprob: -8.750164031982422
    3. 'res' → logprob: -12.250164031982422
    4. '(result' → logprob: -15.250164031982422
    5. ' res' → logprob: -17.000164031982422
    6. '(
' → logprob: -17.125164031982422
    7. ' (' → logprob: -18.375164031982422
    8. '	res' → logprob: -18.625164031982422
    9. ',res' → logprob: -19.250164031982422
    10. '=res' → logprob: -19.250164031982422

Token 253: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ')
' → logprob: -15.75
    3. ' )' → logprob: -16.5
    4. ')`' → logprob: -18.25
    5. '()' → logprob: -19.375
    6. '())' → logprob: -20.0
    7. '`)' → logprob: -20.375
    8. '')' → logprob: -20.5
    9. '))' → logprob: -20.5
    10. '),' → logprob: -21.25

Token 254: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.038250334560871124
    2. 'if' → logprob: -3.28825044631958
    3. 'n' → logprob: -8.913249969482422
    4. 'N' → logprob: -10.038249969482422
    5. '#' → logprob: -11.413249969482422
    6. 'L' → logprob: -11.913249969482422
    7. 'a' → logprob: -12.538249969482422
    8. 'for' → logprob: -13.288249969482422
    9. 'import' → logprob: -13.538249969482422
    10. '```' → logprob: -13.538249969482422

Token 255: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.4591839015483856
    2. 'def' → logprob: -1.459183931350708
    3. 'main' → logprob: -2.209183931350708
    4. ' def' → logprob: -3.709183931350708
    5. '__' → logprob: -7.084183692932129
    6. ' __' → logprob: -8.209183692932129
    7. 'if' → logprob: -8.709183692932129
    8. '_main' → logprob: -9.959183692932129
    9. ' ' → logprob: -10.084183692932129
    10. ' get' → logprob: -10.334183692932129

Token 256: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -2.816093228830141e-06
    2. '():
' → logprob: -13.12500286102295
    3. ' ():' → logprob: -14.25000286102295
    4. '()' → logprob: -15.87500286102295
    5. '(' → logprob: -18.000001907348633
    6. '():
' → logprob: -19.250001907348633
    7. '():

' → logprob: -19.375001907348633
    8. '()>' → logprob: -20.875001907348633
    9. '_' → logprob: -21.000001907348633
    10. '(":' → logprob: -21.500001907348633

Token 257: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3725602924823761
    2. 'N' → logprob: -1.8725602626800537
    3. 'n' → logprob: -1.9975602626800537
    4. ' N' → logprob: -4.372560501098633
    5. ' n' → logprob: -4.747560501098633
    6. 's' → logprob: -8.372560501098633
    7. 'import' → logprob: -10.247560501098633
    8. ' ' → logprob: -10.497560501098633
    9. ' s' → logprob: -11.122560501098633
    10. '	n' → logprob: -11.622560501098633

Token 258: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.03423706814646721
    2. 'n' → logprob: -3.6592371463775635
    3. '   ' → logprob: -5.284236907958984
    4. ' N' → logprob: -6.034236907958984
    5. 's' → logprob: -8.034236907958984
    6. ' n' → logprob: -9.409236907958984
    7. 't' → logprob: -11.909236907958984
    8. 'import' → logprob: -11.909236907958984
    9. 'S' → logprob: -12.159236907958984
    10. ' ' → logprob: -12.659236907958984

Token 259: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20153272151947021
    2. '=' → logprob: -1.7015327215194702
    3. '=int' → logprob: -9.326532363891602
    4. ',' → logprob: -10.576532363891602
    5. ' =
' → logprob: -12.951532363891602
    6. '=input' → logprob: -14.326532363891602
    7. ' ' → logprob: -14.451532363891602
    8. '   ' → logprob: -14.826532363891602
    9. ' ' → logprob: -15.451532363891602
    10. ')' → logprob: -15.451532363891602

Token 260: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.045779816806316376
    2. 'int' → logprob: -3.2957797050476074
    3. ' parse' → logprob: -5.045779705047607
    4. ' int' → logprob: -6.670779705047607
    5. '   ' → logprob: -13.045780181884766
    6. '  ' → logprob: -13.420780181884766
    7. ' ' → logprob: -14.920780181884766
    8. '	parse' → logprob: -14.920780181884766
    9. '(parse' → logprob: -15.920780181884766
    10. '=parse' → logprob: -16.045780181884766

Token 261: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -6.52788148727268e-05
    2. 'int' → logprob: -9.750064849853516
    3. '_input' → logprob: -12.000064849853516
    4. '```' → logprob: -14.750064849853516
    5. '_in' → logprob: -16.250064849853516
    6. '(_' → logprob: -16.750064849853516
    7. '_' → logprob: -16.875064849853516
    8. '_get' → logprob: -17.750064849853516
    9. 'Int' → logprob: -17.875064849853516
    10. '(' → logprob: -18.000064849853516

Token 262: '(get' (ID: 7119)
  Prédit: '(get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(get' → logprob: -4.1080467781284824e-05
    2. '(input' → logprob: -10.250041007995605
    3. '(' → logprob: -12.250041007995605
    4. 'get' → logprob: -14.125041007995605
    5. '()' → logprob: -16.750041961669922
    6. '(
' → logprob: -17.250041961669922
    7. '((' → logprob: -19.250041961669922
    8. ' (' → logprob: -19.875041961669922
    9. 'input' → logprob: -20.250041961669922
    10. '```' → logprob: -20.625041961669922

Token 263: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.019534332677721977
    2. '()' → logprob: -4.644534111022949
    3. '())' → logprob: -5.394534111022949
    4. 'input' → logprob: -5.519534111022949
    5. '_' → logprob: -7.019534111022949
    6. ')' → logprob: -9.01953411102295
    7. '()
' → logprob: -9.76953411102295
    8. '())
' → logprob: -10.14453411102295
    9. '()))' → logprob: -10.76953411102295
    10. ' input' → logprob: -12.39453411102295

Token 264: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0068413494154810905
    2. '()' → logprob: -5.00684118270874
    3. '())
' → logprob: -9.006841659545898
    4. '()
' → logprob: -13.756841659545898
    5. ')' → logprob: -14.006841659545898
    6. '())

' → logprob: -14.256841659545898
    7. ' ())' → logprob: -14.631841659545898
    8. '().' → logprob: -15.881841659545898
    9. '();)' → logprob: -16.1318416595459
    10. '())
' → logprob: -16.6318416595459

Token 265: '   ' (ID: 271)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.028029851615428925
    2. '   ' → logprob: -3.7780299186706543
    3. ' L' → logprob: -5.403029918670654
    4. '	L' → logprob: -8.778029441833496
    5. 'lst' → logprob: -10.153029441833496
    6. '```' → logprob: -10.653029441833496
    7. '  ' → logprob: -12.028029441833496
    8. 'A' → logprob: -12.028029441833496
    9. '    
' → logprob: -12.278029441833496
    10. 's' → logprob: -12.278029441833496

Token 266: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' (adapté à ' L') → logprob: -0.0011797507759183645
    2. 'lst' → logprob: -7.3761796951293945
    3. 's' → logprob: -7.8761796951293945
    4. '   ' → logprob: -9.751179695129395
    5. ' L' → logprob: -10.001179695129395
    6. 'S' → logprob: -10.251179695129395
    7. 'arr' → logprob: -11.126179695129395
    8. 'A' → logprob: -12.126179695129395
    9. '    
' → logprob: -12.376179695129395
    10. 'Ls' → logprob: -13.126179695129395

Token 267: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407862544059753
    2. ' =' → logprob: -0.9740786552429199
    3. '_' → logprob: -14.724078178405762
    4. ')' → logprob: -14.974078178405762
    5. '.' → logprob: -15.349078178405762
    6. '[' → logprob: -15.599078178405762
    7. ',' → logprob: -15.724078178405762
    8. '=[]' → logprob: -16.099079132080078
    9. ' ' → logprob: -16.474079132080078
    10. ' ' → logprob: -16.849079132080078

Token 268: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.01429008785635233
    2. 'sort' → logprob: -4.264289855957031
    3. ' parse' → logprob: -9.014289855957031
    4. ' sort' → logprob: -13.139289855957031
    5. 'sorted' → logprob: -13.139289855957031
    6. '(parse' → logprob: -14.764289855957031
    7. 'get' → logprob: -16.01428985595703
    8. '=parse' → logprob: -16.13928985595703
    9. '   ' → logprob: -16.51428985595703
    10. 'split' → logprob: -16.63928985595703

Token 269: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -4.36574100604048e-06
    2. 'int' → logprob: -12.500004768371582
    3. '```' → logprob: -15.500004768371582
    4. '_list' → logprob: -15.875004768371582
    5. 'list' → logprob: -16.625003814697266
    6. '
' → logprob: -17.250003814697266
    7. '_in' → logprob: -17.500003814697266
    8. '_input' → logprob: -17.625003814697266
    9. '(_' → logprob: -17.750003814697266
    10. '_str' → logprob: -18.375003814697266

Token 270: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0010106575209647417
    2. '(get' → logprob: -7.001010894775391
    3. 'list' → logprob: -9.25101089477539
    4. 'get' → logprob: -13.12601089477539
    5. 's' → logprob: -14.75101089477539
    6. 'List' → logprob: -14.87601089477539
    7. '(list' → logprob: -15.50101089477539
    8. '(' → logprob: -16.75101089477539
    9. '```' → logprob: -16.75101089477539
    10. '(_' → logprob: -17.12601089477539

Token 271: '(get' (ID: 7119)
  Prédit: '(get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(get' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -15.75
    3. 'get' → logprob: -16.375
    4. ' (' → logprob: -18.0
    5. '((' → logprob: -18.5
    6. '(input' → logprob: -18.625
    7. '[get' → logprob: -19.625
    8. '()' → logprob: -19.75
    9. '```' → logprob: -20.5
    10. ',get' → logprob: -20.625

Token 272: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.003198035294190049
    2. 'input' → logprob: -5.753198146820068
    3. '(input' → logprob: -11.37819766998291
    4. '()' → logprob: -12.87819766998291
    5. ' input' → logprob: -13.37819766998291
    6. 'Input' → logprob: -13.50319766998291
    7. '())' → logprob: -13.87819766998291
    8. '()
' → logprob: -14.62819766998291
    9. ')' → logprob: -14.87819766998291
    10. '```' → logprob: -15.25319766998291

Token 273: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.004159722477197647
    2. '()' → logprob: -5.504159927368164
    3. '())
' → logprob: -10.129159927368164
    4. ')' → logprob: -10.379159927368164
    5. ' ())' → logprob: -11.754159927368164
    6. '())

' → logprob: -14.004159927368164
    7. '(' → logprob: -14.879159927368164
    8. '()
' → logprob: -15.004159927368164
    9. '();)' → logprob: -15.004159927368164
    10. '()))' → logprob: -15.504159927368164

Token 274: '   ' (ID: 271)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.39123713970184326
    2. '   ' → logprob: -1.1412371397018433
    3. ' L' → logprob: -5.516237258911133
    4. '
' → logprob: -9.391237258911133
    5. '    
' → logprob: -9.641237258911133
    6. '  ' → logprob: -9.641237258911133
    7. '```' → logprob: -10.141237258911133
    8. 'sorted' → logprob: -10.391237258911133
    9. ' ' → logprob: -11.391237258911133
    10. 'res' → logprob: -12.016237258911133

Token 275: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' (adapté à ' L') → logprob: -0.001680059707723558
    2. '   ' → logprob: -6.50167989730835
    3. ' L' → logprob: -8.751680374145508
    4. '
' → logprob: -11.626680374145508
    5. 'res' → logprob: -12.876680374145508
    6. '```' → logprob: -13.001680374145508
    7. 'ans' → logprob: -13.376680374145508
    8. 'result' → logprob: -14.126680374145508
    9. '  ' → logprob: -14.251680374145508
    10. ' ' → logprob: -14.501680374145508

Token 276: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16026322543621063
    2. ' =' → logprob: -1.910263180732727
    3. '.sort' → logprob: -10.285263061523438
    4. '.' → logprob: -13.410263061523438
    5. 'sorted' → logprob: -13.785263061523438
    6. 'sort' → logprob: -14.410263061523438
    7. ')' → logprob: -14.535263061523438
    8. '_sorted' → logprob: -14.785263061523438
    9. ',' → logprob: -15.535263061523438
    10. '=
' → logprob: -16.035263061523438

Token 277: ' sort' (ID: 4506)
  Prédit: ' sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sort' → logprob: -0.6947586536407471
    2. 'sort' → logprob: -0.6947586536407471
    3. ' sorted' → logprob: -6.819758415222168
    4. 'sorted' → logprob: -7.569758415222168
    5. '   ' → logprob: -14.319758415222168
    6. '	sort' → logprob: -14.569758415222168
    7. '(sort' → logprob: -14.819758415222168
    8. ' ' → logprob: -15.069758415222168
    9. '.sort' → logprob: -15.569758415222168
    10. 's' → logprob: -16.319759368896484

Token 278: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0025785129982978106
    2. '(L' → logprob: -6.2525787353515625
    3. '(_' → logprob: -8.002578735351562
    4. '_' → logprob: -8.252578735351562
    5. '```' → logprob: -11.502578735351562
    6. '_L' → logprob: -12.002578735351562
    7. '(' → logprob: -12.252578735351562
    8. '\' → logprob: -12.377578735351562
    9. '_lst' → logprob: -12.377578735351562
    10. '_List' → logprob: -12.377578735351562

Token 279: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -14.75
    3. '(lst' → logprob: -17.875
    4. 'L' → logprob: -18.625
    5. '(List' → logprob: -19.25
    6. ' (' → logprob: -19.75
    7. '(
' → logprob: -21.625
    8. '(N' → logprob: -21.875
    9. '```' → logprob: -21.875
    10. '(list' → logprob: -22.0

Token 280: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.200166469876422e-06
    2. ')
' → logprob: -12.250004768371582
    3. ')

' → logprob: -15.750004768371582
    4. ' )' → logprob: -16.6250057220459
    5. '())' → logprob: -18.0000057220459
    6. ')
' → logprob: -18.1250057220459
    7. ')#' → logprob: -18.2500057220459
    8. '()' → logprob: -18.5000057220459
    9. ')L' → logprob: -18.7500057220459
    10. ')`' → logprob: -19.0000057220459

Token 281: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031658779829740524
    2. '
' → logprob: -3.656658887863159
    3. 'res' → logprob: -5.78165864944458
    4. ' res' → logprob: -6.90665864944458
    5. '    
' → logprob: -7.03165864944458
    6. '```' → logprob: -8.156659126281738
    7. 'result' → logprob: -10.281659126281738
    8. '  
' → logprob: -11.406659126281738
    9. '``' → logprob: -11.781659126281738
    10. '	res' → logprob: -11.906659126281738

Token 282: ' ans' (ID: 3345)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.07025406509637833
    2. 'result' → logprob: -3.32025408744812
    3. '   ' → logprob: -3.82025408744812
    4. 'print' → logprob: -4.820253849029541
    5. 'ans' (adapté à ' ans') → logprob: -6.445253849029541
    6. ' res' → logprob: -9.4452543258667
    7. 'answer' → logprob: -10.9452543258667
    8. '```' → logprob: -11.0702543258667
    9. '    
' → logprob: -12.3202543258667
    10. 'r' → logprob: -12.8202543258667

Token 283: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026302039623260498
    2. '=' → logprob: -3.6513020992279053
    3. ' +=' → logprob: -14.026302337646484
    4. ' ' → logprob: -15.026302337646484
    5. ' =
' → logprob: -15.776302337646484
    6. ' ' → logprob: -16.026302337646484
    7. '  ' → logprob: -16.026302337646484
    8. ',' → logprob: -16.026302337646484
    9. ' =)' → logprob: -16.901302337646484
    10. '   ' → logprob: -17.026302337646484

Token 284: ' calculate' (ID: 17950)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -0.20141363143920898
    2. ' calculate' → logprob: -1.701413631439209
    3. '   ' → logprob: -15.451414108276367
    4. '.calculate' → logprob: -16.326414108276367
    5. 'calcul' → logprob: -17.826414108276367
    6. ' calcular' → logprob: -18.326414108276367
    7. 'cal' → logprob: -18.326414108276367
    8. 'calc' → logprob: -18.326414108276367
    9. 'compute' → logprob: -19.826414108276367
    10. 'alculate' → logprob: -19.826414108276367

Token 285: '_pairs' (ID: 90005)
  Prédit: '_pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -4.320199877838604e-07
    2. '_for' → logprob: -15.875
    3. 'pairs' → logprob: -16.0
    4. ' _' → logprob: -17.375
    5. '_' → logprob: -17.5
    6. 's' → logprob: -17.625
    7. '```' → logprob: -17.625
    8. '_positions' → logprob: -18.375
    9. '_groups' → logprob: -18.375
    10. '\' → logprob: -18.625

Token 286: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -14.875
    3. ' (' → logprob: -17.25
    4. '(
' → logprob: -18.125
    5. '```' → logprob: -19.0
    6. '(List' → logprob: -19.5
    7. '(Line' → logprob: -20.25
    8. 'L' → logprob: -20.625
    9. '(lst' → logprob: -20.625
    10. '(S' → logprob: -20.875

Token 287: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.08944896562025e-05
    2. ',N' → logprob: -9.750081062316895
    3. ' ,' → logprob: -10.750081062316895
    4. ',
' → logprob: -14.000081062316895
    5. '   ' → logprob: -16.375080108642578
    6. ',n' → logprob: -16.625080108642578
    7. 'N' → logprob: -17.500080108642578
    8. '‌,' → logprob: -17.875080108642578
    9. ',L' → logprob: -18.375080108642578
    10. '```' → logprob: -18.500080108642578

Token 288: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0001234428636962548
    2. ' N' → logprob: -9.000123023986816
    3. '   ' → logprob: -17.375123977661133
    4. 'len' → logprob: -20.875123977661133
    5. ')' → logprob: -22.000123977661133
    6. '	N' → logprob: -22.375123977661133
    7. 'get' → logprob: -22.500123977661133
    8. ' ' → logprob: -23.250123977661133
    9. '    ' → logprob: -23.750123977661133
    10. '
' → logprob: -24.375123977661133

Token 289: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014230971224606037
    2. ')
' → logprob: -4.264231204986572
    3. '   ' → logprob: -9.639230728149414
    4. ')
' → logprob: -13.014230728149414
    5. ' )' → logprob: -17.139230728149414
    6. ')

' → logprob: -17.389230728149414
    7. '),' → logprob: -17.889230728149414
    8. ')`' → logprob: -18.139230728149414
    9. ')`
' → logprob: -18.514230728149414
    10. ')\
' → logprob: -18.889230728149414

Token 290: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27084070444107056
    2. 'print' → logprob: -2.020840644836426
    3. '
' → logprob: -2.270840644836426
    4. ' print' → logprob: -7.395840644836426
    5. '    
' → logprob: -7.770840644836426
    6. '```' → logprob: -8.020840644836426
    7. '	print' → logprob: -10.020840644836426
    8. '
' → logprob: -10.020840644836426
    9. '(print' → logprob: -11.520840644836426
    10. '  
' → logprob: -11.645840644836426

Token 291: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -8.017927029868588e-05
    2. '   ' → logprob: -9.500080108642578
    3. ' print' → logprob: -12.500080108642578
    4. '
' → logprob: -13.500080108642578
    5. '	print' → logprob: -16.500080108642578
    6. '    
' → logprob: -17.500080108642578
    7. '```' → logprob: -18.250080108642578
    8. '  ' → logprob: -19.250080108642578
    9. '_print' → logprob: -19.625080108642578
    10. '(print' → logprob: -20.125080108642578

Token 292: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -2.236549335066229e-05
    2. '_' → logprob: -11.000021934509277
    3. '(' → logprob: -13.125021934509277
    4. '_results' → logprob: -13.750021934509277
    5. '```' → logprob: -14.000021934509277
    6. '(_' → logprob: -14.375021934509277
    7. ' _' → logprob: -15.250021934509277
    8. '_res' → logprob: -15.625021934509277
    9. '_answer' → logprob: -16.000022888183594
    10. '_Result' → logprob: -16.375022888183594

Token 293: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.00018744789122138172
    2. '(' → logprob: -8.625187873840332
    3. ' (' → logprob: -12.000187873840332
    4. '(answer' → logprob: -13.625187873840332
    5. '(res' → logprob: -15.375187873840332
    6. '(an' → logprob: -16.250186920166016
    7. '(
' → logprob: -16.875186920166016
    8. '(`' → logprob: -18.125186920166016
    9. '```' → logprob: -18.375186920166016
    10. '(ord' → logprob: -18.500186920166016

Token 294: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.700132997939363e-05
    2. ')
' → logprob: -11.000017166137695
    3. ' )' → logprob: -15.625017166137695
    4. '())' → logprob: -16.625017166137695
    5. '()' → logprob: -16.875017166137695
    6. ')

' → logprob: -17.625017166137695
    7. ')`' → logprob: -17.875017166137695
    8. '`)' → logprob: -18.875017166137695
    9. '))' → logprob: -19.250017166137695
    10. ')#' → logprob: -20.000017166137695

Token 295: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -3.5597102396423e-05
    2. 'main' → logprob: -10.625035285949707
    3. ' if' → logprob: -12.250035285949707
    4. '```' → logprob: -12.875035285949707
    5. '
' → logprob: -13.000035285949707
    6. '#' → logprob: -14.000035285949707
    7. '<|end|>' → logprob: -14.625035285949707
    8. '\' → logprob: -15.750035285949707
    9. 'If' → logprob: -16.750036239624023
    10. '    
' → logprob: -17.000036239624023

Token 296: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 294
Tokens correctement prédits (1ère position, stricte): 127
Tokens correctement prédits (1ère position, avec adaptation): 139
Tokens correctement prédits (top 10): 254
Précision stricte (1ère position): 43.20%
Précision adaptée (1ère position): 47.28%
Précision (top 10): 86.39%
================================================================================
