================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:49:54
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
h = [int(x) for x in input().split()]
result = 'Yes'
i = 0
while i < n-1:
    if not (h[i] <= h[i+1]):
        result = 'No'
        break
    if h[i] != h[i+1]:
        h[i+1] -= 1
    i += 1
def output(r): print(r)
output(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00038134094211272895
    2. '(n' → logprob: -9.000381469726562
    3. ''' → logprob: -9.500381469726562
    4. '('' → logprob: -10.125381469726562
    5. '```' → logprob: -10.125381469726562
    6. '`' → logprob: -10.750381469726562
    7. '("("' → logprob: -10.750381469726562
    8. '()' → logprob: -11.250381469726562
    9. 'n' → logprob: -11.625381469726562
    10. ')' → logprob: -12.000381469726562

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7192649245262146
    2. ')' → logprob: -0.7192649245262146
    3. '()' → logprob: -3.9692649841308594
    4. '())' → logprob: -5.219264984130859
    5. '(
' → logprob: -8.09426498413086
    6. '```' → logprob: -8.71926498413086
    7. '[' → logprob: -9.21926498413086
    8. '))' → logprob: -9.34426498413086
    9. '(()' → logprob: -9.34426498413086
    10. '")' → logprob: -9.46926498413086

Token 5: 'h' (ID: 71)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3530406951904297
    2. 'i' → logprob: -1.4780406951904297
    3. 'if' → logprob: -1.8530406951904297
    4. 's' → logprob: -2.2280406951904297
    5. ' ' → logprob: -3.1030406951904297
    6. ''' → logprob: -3.1030406951904297
    7. 'f' → logprob: -3.8530406951904297
    8. '`' → logprob: -3.9780406951904297
    9. 'a' → logprob: -3.9780406951904297
    10. 'x' → logprob: -4.10304069519043

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16057433187961578
    2. 'e' → logprob: -2.410574436187744
    3. '[i' → logprob: -3.160574436187744
    4. 'i' → logprob: -5.285574436187744
    5. ' =' → logprob: -6.160574436187744
    6. 'a' → logprob: -6.160574436187744
    7. '=' → logprob: -6.660574436187744
    8. '[e' → logprob: -6.785574436187744
    9. 't' → logprob: -7.410574436187744
    10. ')' → logprob: -7.410574436187744

Token 7: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4647060632705688
    2. ' n' → logprob: -1.8397060632705688
    3. 'n' → logprob: -1.8397060632705688
    4. ' []' → logprob: -1.9647060632705688
    5. '[]' → logprob: -2.0897059440612793
    6. '[int' → logprob: -3.2147059440612793
    7. 'int' → logprob: -3.3397059440612793
    8. ' [' → logprob: -3.3397059440612793
    9. '[' → logprob: -3.9647059440612793
    10. ' ' → logprob: -4.214705944061279

Token 8: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.20250102877616882
    2. '0' → logprob: -1.7025010585784912
    3. ' int' → logprob: -7.702500820159912
    4. ']' → logprob: -8.20250129699707
    5. '(int' → logprob: -8.82750129699707
    6. ']int' → logprob: -8.95250129699707
    7. 'list' → logprob: -10.82750129699707
    8. ' ' → logprob: -10.95250129699707
    9. 'i' → logprob: -11.57750129699707
    10. '[int' → logprob: -12.07750129699707

Token 9: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023282751441001892
    2. '(x' → logprob: -3.898282766342163
    3. '(input' → logprob: -6.648282527923584
    4. '(i' → logprob: -7.273282527923584
    5. '()' → logprob: -8.398283004760742
    6. '()]' → logprob: -8.398283004760742
    7. ']' → logprob: -8.898283004760742
    8. '(a' → logprob: -9.898283004760742
    9. '(n' → logprob: -10.773283004760742
    10. '(token' → logprob: -10.898283004760742

Token 10: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007952491752803326
    2. '(input' → logprob: -5.257952690124512
    3. '())' → logprob: -6.507952690124512
    4. ')]' → logprob: -7.257952690124512
    5. '(x' → logprob: -8.757952690124512
    6. ')])' → logprob: -9.132952690124512
    7. 'input' → logprob: -9.382952690124512
    8. '()' → logprob: -9.882952690124512
    9. 'for' → logprob: -10.507952690124512
    10. '(' → logprob: -10.507952690124512

Token 11: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7111927270889282
    2. ')' → logprob: -1.9611927270889282
    3. ' for' → logprob: -1.9611927270889282
    4. '(input' → logprob: -2.2111926078796387
    5. 'input' → logprob: -2.2111926078796387
    6. ' input' → logprob: -5.086192607879639
    7. ']' → logprob: -7.586192607879639
    8. '=input' → logprob: -7.711192607879639
    9. '(' → logprob: -8.211193084716797
    10. ',input' → logprob: -8.586193084716797

Token 12: ' x' (ID: 1215)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.0064958082512021065
    2. 'input' → logprob: -5.131495952606201
    3. '(input' → logprob: -8.131495475769043
    4. ' ' → logprob: -8.881495475769043
    5. ' x' → logprob: -9.881495475769043
    6. ' range' → logprob: -10.131495475769043
    7. '=input' → logprob: -11.381495475769043
    8. '<|end|>' → logprob: -11.506495475769043
    9. '_input' → logprob: -12.381495475769043
    10. ' ' → logprob: -12.756495475769043

Token 13: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023362061008810997
    2. 'in' → logprob: -3.773362159729004
    3. 'input' → logprob: -9.273362159729004
    4. '(input' → logprob: -12.523362159729004
    5. ' ' → logprob: -12.773362159729004
    6. 'import' → logprob: -12.898362159729004
    7. ' input' → logprob: -13.023362159729004
    8. '	in' → logprob: -13.398362159729004
    9. '=input' → logprob: -13.648362159729004
    10. 's' → logprob: -14.023362159729004

Token 14: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2014172375202179
    2. ' input' → logprob: -1.7014172077178955
    3. 'range' → logprob: -12.701416969299316
    4. ' range' → logprob: -14.076416969299316
    5. '(input' → logprob: -16.326417922973633
    6. '=input' → logprob: -18.076417922973633
    7. '<input' → logprob: -18.326417922973633
    8. ' ' → logprob: -18.451417922973633
    9. '	input' → logprob: -19.326417922973633
    10. 'list' → logprob: -19.326417922973633

Token 15: '().' (ID: 1454)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.37028637528419495
    2. '()' → logprob: -1.3702863454818726
    3. '())' → logprob: -3.245286464691162
    4. '().' → logprob: -4.120286464691162
    5. '(' → logprob: -8.745285987854004
    6. '()].' → logprob: -10.495285987854004
    7. ')]' → logprob: -10.745285987854004
    8. '()][' → logprob: -12.620285987854004
    9. '()],' → logprob: -12.870285987854004
    10. '()))' → logprob: -13.370285987854004

Token 16: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.718606891809031e-05
    2. 'strip' → logprob: -9.750066757202148
    3. 'rstrip' → logprob: -11.750066757202148
    4. ' split' → logprob: -14.000066757202148
    5. 'spl' → logprob: -16.37506675720215
    6. '(split' → logprob: -17.00006675720215
    7. 's' → logprob: -19.12506675720215
    8. 'sp' → logprob: -19.75006675720215
    9. ')' → logprob: -20.37506675720215
    10. 'plit' → logprob: -21.75006675720215

Token 17: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.07927309721708298
    2. '())' → logprob: -3.079272985458374
    3. '(' → logprob: -3.829272985458374
    4. '()' → logprob: -5.079273223876953
    5. '('' → logprob: -6.204273223876953
    6. ')]' → logprob: -8.704273223876953
    7. ']' → logprob: -10.329273223876953
    8. '("' → logprob: -11.829273223876953
    9. ')' → logprob: -12.204273223876953
    10. '])' → logprob: -12.579273223876953

Token 18: 'result' (ID: 2521)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.8402547240257263
    2. ']' → logprob: -1.715254783630371
    3. 'm' → logprob: -1.965254783630371
    4. 'max' → logprob: -2.590254783630371
    5. 'd' → logprob: -2.840254783630371
    6. 'c' → logprob: -3.840254783630371
    7. '_' → logprob: -3.965254783630371
    8. ')' → logprob: -3.965254783630371
    9. 'a' → logprob: -4.465254783630371
    10. 's' → logprob: -4.590254783630371

Token 19: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0691481828689575
    2. '_' → logprob: -1.1941481828689575
    3. '=' → logprob: -1.3191481828689575
    4. '.' → logprob: -2.819148063659668
    5. '[' → logprob: -4.444148063659668
    6. 's' → logprob: -5.069148063659668
    7. '[:]' → logprob: -5.944148063659668
    8. '.append' → logprob: -6.194148063659668
    9. ' ' → logprob: -6.694148063659668
    10. ')' → logprob: -7.569148063659668

Token 20: ' '' (ID: 461)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12007731944322586
    2. ' ' → logprob: -2.99507737159729
    3. 'max' → logprob: -3.99507737159729
    4. ' max' → logprob: -4.245077133178711
    5. ' h' → logprob: -4.495077133178711
    6. 'h' → logprob: -4.620077133178711
    7. '[' → logprob: -6.245077133178711
    8. ' [' → logprob: -6.495077133178711
    9. ' []' → logprob: -6.620077133178711
    10. '[]' → logprob: -6.745077133178711

Token 21: 'Yes' (ID: 13022)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.29086703062057495
    2. 'I' → logprob: -3.4158670902252197
    3. 'N' → logprob: -3.5408670902252197
    4. '"' → logprob: -3.7908670902252197
    5. '-' → logprob: -3.7908670902252197
    6. 'P' → logprob: -3.7908670902252197
    7. '0' → logprob: -4.290866851806641
    8. 'YES' → logprob: -4.665866851806641
    9. 'Possible' → logprob: -4.790866851806641
    10. ''N' → logprob: -4.790866851806641

Token 22: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5696197748184204
    2. '\n' → logprob: -1.1946197748184204
    3. 'if' → logprob: -2.319619655609131
    4. ' if' → logprob: -4.444619655609131
    5. '<|end|>' → logprob: -4.694619655609131
    6. '')' → logprob: -5.569619655609131
    7. 'print' → logprob: -6.069619655609131
    8. ' or' → logprob: -7.194619655609131
    9. '"' → logprob: -7.194619655609131
    10. '<|end|>' → logprob: -7.319619655609131

Token 23: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.047580536454916
    2. ' for' → logprob: -3.4225804805755615
    3. '\n' → logprob: -4.672580718994141
    4. 'if' → logprob: -5.922580718994141
    5. '
' → logprob: -7.172580718994141
    6. '' → logprob: -7.672580718994141
    7. 'i' → logprob: -8.54758071899414
    8. '```' → logprob: -8.92258071899414
    9. 'n' → logprob: -9.29758071899414
    10. '\' → logprob: -10.04758071899414

Token 24: ' =' (ID: 314)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.010288724675774574
    2. 'n' → logprob: -4.885288715362549
    3. '=' → logprob: -6.260288715362549
    4. '+' → logprob: -8.010289192199707
    5. 'nd' → logprob: -9.010289192199707
    6. ' =' → logprob: -9.010289192199707
    7. ' ' → logprob: -9.635289192199707
    8. 'F' → logprob: -10.885289192199707
    9. 's' → logprob: -10.885289192199707
    10. ' n' → logprob: -11.260289192199707

Token 25: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12778788805007935
    2. '0' → logprob: -2.1277878284454346
    3. '1' → logprob: -7.127788066864014
    4. ' n' → logprob: -10.502787590026855
    5. '2' → logprob: -11.002787590026855
    6. ' len' → logprob: -12.127787590026855
    7. 'n' → logprob: -12.502787590026855
    8. 'len' → logprob: -14.002787590026855
    9. ' ' → logprob: -15.252787590026855
    10. ' -' → logprob: -15.377787590026855

Token 26: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22673195600509644
    2. '1' → logprob: -1.6017320156097412
    3. ' ' → logprob: -7.226731777191162
    4. 'n' → logprob: -7.976731777191162
    5. 'len' → logprob: -8.47673225402832
    6. '2' → logprob: -10.72673225402832
    7. ' n' → logprob: -12.35173225402832
    8. ' len' → logprob: -12.47673225402832
    9. '-' → logprob: -12.60173225402832
    10. 'i' → logprob: -14.28923225402832

Token 27: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8988919258117676
    2. 'while' → logprob: -1.5238919258117676
    3. '<|end|>' → logprob: -2.1488919258117676
    4. ' while' → logprob: -2.3988919258117676
    5. ' 
' → logprob: -2.5238919258117676
    6. ' ' → logprob: -3.1488919258117676
    7. '  
' → logprob: -4.648891925811768
    8. ':' → logprob: -4.773891925811768
    9. '\n' → logprob: -4.773891925811768
    10. '```' → logprob: -5.773891925811768

Token 28: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.09388793259859085
    2. ' while' → logprob: -2.9688880443573
    3. 'w' → logprob: -4.343887805938721
    4. '<|end|>' → logprob: -4.843887805938721
    5. '```' → logprob: -5.343887805938721
    6. ' ' → logprob: -5.343887805938721
    7. ':' → logprob: -5.468887805938721
    8. ',' → logprob: -6.468887805938721
    9. ')' → logprob: -7.843887805938721
    10. ''' → logprob: -8.468888282775879

Token 29: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0028236585203558207
    2. 'i' → logprob: -6.002823829650879
    3. ' ' → logprob: -8.002823829650879
    4. ' n' → logprob: -12.002823829650879
    5. ' ' → logprob: -13.502823829650879
    6. '  ' → logprob: -13.627823829650879
    7. '(i' → logprob: -13.877823829650879
    8. ' h' → logprob: -13.877823829650879
    9. ' (' → logprob: -14.127823829650879
    10. '	i' → logprob: -14.502823829650879

Token 30: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.03869736194610596
    2. '<' → logprob: -3.2886972427368164
    3. ' ' → logprob: -8.163697242736816
    4. ' <=' → logprob: -8.413697242736816
    5. '<len' → logprob: -9.163697242736816
    6. '+' → logprob: -11.163697242736816
    7. '<=' → logprob: -11.788697242736816
    8. '<n' → logprob: -12.163697242736816
    9. ' <
' → logprob: -12.288697242736816
    10. '<size' → logprob: -12.663697242736816

Token 31: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.11975207179784775
    2. 'n' → logprob: -2.2447521686553955
    3. ' len' → logprob: -5.244751930236816
    4. 'len' → logprob: -6.619751930236816
    5. ' ' → logprob: -8.244751930236816
    6. '1' → logprob: -11.244751930236816
    7. '(n' → logprob: -12.369751930236816
    8. ' (' → logprob: -12.744751930236816
    9. '  ' → logprob: -12.869751930236816
    10. '   ' → logprob: -13.119751930236816

Token 32: '-' (ID: 12)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09863092750310898
    2. ' :' → logprob: -3.098630905151367
    3. ' and' → logprob: -3.223630905151367
    4. ' ' → logprob: -5.473630905151367
    5. ':
' → logprob: -6.348630905151367
    6. 'and' → logprob: -6.723630905151367
    7. '+' → logprob: -7.348630905151367
    8. ' :
' → logprob: -7.598630905151367
    9. '   ' → logprob: -7.973630905151367
    10. '+:' → logprob: -9.223630905151367

Token 33: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.6895233531831764e-05
    2. ' ' → logprob: -10.62502670288086
    3. '2' → logprob: -13.00002670288086
    4. '１' → logprob: -16.00002670288086
    5. '-' → logprob: -16.56252670288086
    6. '```' → logprob: -17.31252670288086
    7. '१' → logprob: -18.18752670288086
    8. '১' → logprob: -18.37502670288086
    9. '3' → logprob: -18.37502670288086
    10. '۱' → logprob: -18.43752670288086

Token 34: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01110324077308178
    2. ':
' → logprob: -5.13610315322876
    3. ' and' → logprob: -5.88610315322876
    4. ' :' → logprob: -6.13610315322876
    5. ' :
' → logprob: -9.386103630065918
    6. 'and' → logprob: -9.886103630065918
    7. ' ' → logprob: -10.136103630065918
    8. '   ' → logprob: -10.386103630065918
    9. ':**' → logprob: -13.261103630065918
    10. ' if' → logprob: -13.261103630065918

Token 35: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15495026111602783
    2. ' ' → logprob: -2.7799501419067383
    3. ' if' → logprob: -3.2799501419067383
    4. ' 
' → logprob: -3.9049501419067383
    5. '    
' → logprob: -5.029950141906738
    6. '    ' → logprob: -5.154950141906738
    7. '  
' → logprob: -5.779950141906738
    8. '  ' → logprob: -6.654950141906738
    9. '<|end|>' → logprob: -6.654950141906738
    10. '```' → logprob: -6.904950141906738

Token 36: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7949865460395813
    2. '   ' → logprob: -1.1699864864349365
    3. 'if' (adapté à ' if') → logprob: -2.0449864864349365
    4. ' ' → logprob: -2.4199864864349365
    5. '    ' → logprob: -4.169986724853516
    6. '  ' → logprob: -6.419986724853516
    7. '       ' → logprob: -7.419986724853516
    8. '```' → logprob: -7.794986724853516
    9. '<|end|>' → logprob: -7.919986724853516
    10. ' ```' → logprob: -8.294986724853516

Token 37: ' not' (ID: 625)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.021423006430268288
    2. 'h' → logprob: -3.896423101425171
    3. ' ' → logprob: -7.146422863006592
    4. ' abs' → logprob: -9.89642333984375
    5. 'abs' → logprob: -11.64642333984375
    6. '    ' → logprob: -11.89642333984375
    7. ' (' → logprob: -12.39642333984375
    8. '  ' → logprob: -12.52142333984375
    9. '   ' → logprob: -12.64642333984375
    10. ' ' → logprob: -13.02142333984375

Token 38: ' (' (ID: 350)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.32483965158462524
    2. '(h' → logprob: -1.9498395919799805
    3. ' (' → logprob: -2.4498395919799805
    4. 'h' → logprob: -3.0748395919799805
    5. '(' → logprob: -6.0748395919799805
    6. ' ' → logprob: -8.82483959197998
    7. ' abs' → logprob: -10.57483959197998
    8. '(abs' → logprob: -10.69983959197998
    9. '(i' → logprob: -11.07483959197998
    10. '((' → logprob: -11.94983959197998

Token 39: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.017177382484078407
    2. ' h' → logprob: -4.142177581787109
    3. '(h' → logprob: -7.017177581787109
    4. 'abs' → logprob: -9.51717758178711
    5. '   ' → logprob: -10.01717758178711
    6. ' (' → logprob: -10.14217758178711
    7. ' abs' → logprob: -10.39217758178711
    8. ')' → logprob: -10.89217758178711
    9. ' ' → logprob: -11.26717758178711
    10. '(' → logprob: -11.76717758178711

Token 40: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.372294698550832e-06
    2. '[' → logprob: -12.250009536743164
    3. ' [' → logprob: -12.500009536743164
    4. '[h' → logprob: -15.125009536743164
    5. '```' → logprob: -15.500009536743164
    6. '[
' → logprob: -15.625009536743164
    7. 'i' → logprob: -16.125009536743164
    8. '[index' → logprob: -17.375009536743164
    9. '\[' → logprob: -17.750009536743164
    10. ')' → logprob: -17.875009536743164

Token 41: ']' (ID: 60)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -1.0880317687988281
    2. ' >=' → logprob: -1.3380317687988281
    3. ']' → logprob: -1.4630317687988281
    4. ']>=' → logprob: -2.213031768798828
    5. '>' → logprob: -3.838031768798828
    6. '+' → logprob: -4.213031768798828
    7. '-' → logprob: -4.963031768798828
    8. ' <=' → logprob: -5.088031768798828
    9. '<=' → logprob: -5.338031768798828
    10. ' >' → logprob: -6.588031768798828

Token 42: ' <=' (ID: 5017)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.46260684728622437
    2. ' >=' → logprob: -1.0876069068908691
    3. '<=' → logprob: -4.337606906890869
    4. ' <=' → logprob: -4.712606906890869
    5. '-' → logprob: -5.087606906890869
    6. '+' → logprob: -5.962606906890869
    7. '>' → logprob: -7.337606906890869
    8. ' -' → logprob: -7.337606906890869
    9. '==' → logprob: -7.712606906890869
    10. ' ' → logprob: -7.712606906890869

Token 43: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.05497594550251961
    2. ' h' → logprob: -2.929975986480713
    3. ' ' → logprob: -9.804975509643555
    4. '	h' → logprob: -11.054975509643555
    5. '1' → logprob: -11.804975509643555
    6. ' ' → logprob: -12.867475509643555
    7. '(h' → logprob: -13.367475509643555
    8. 'max' → logprob: -13.429975509643555
    9. '   ' → logprob: -13.742475509643555
    10. '<h' → logprob: -13.929975509643555

Token 44: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00033951509976759553
    2. '+' → logprob: -8.50033950805664
    3. '[' → logprob: -9.12533950805664
    4. '[j' → logprob: -10.87533950805664
    5. ']' → logprob: -13.62533950805664
    6. ' [' → logprob: -13.62533950805664
    7. '1' → logprob: -14.00033950805664
    8. ' ' → logprob: -14.12533950805664
    9. ' or' → logprob: -14.25033950805664
    10. '   ' → logprob: -14.62533950805664

Token 45: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.13117502629756927
    2. ']' → logprob: -2.3811750411987305
    3. ' +' → logprob: -4.2561750411987305
    4. ']+' → logprob: -4.3811750411987305
    5. ' or' → logprob: -6.0061750411987305
    6. ' ]' → logprob: -7.7561750411987305
    7. '   ' → logprob: -7.8811750411987305
    8. '[i' → logprob: -8.38117504119873
    9. ' ' → logprob: -9.00617504119873
    10. '1' → logprob: -9.75617504119873

Token 46: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00402283389121294
    2. ']' → logprob: -6.004022598266602
    3. ' ' → logprob: -6.629022598266602
    4. ']+' → logprob: -9.254022598266602
    5. '+' → logprob: -10.254022598266602
    6. '])' → logprob: -10.504022598266602
    7. '0' → logprob: -10.754022598266602
    8. '-' → logprob: -11.004022598266602
    9. '   ' → logprob: -11.754022598266602
    10. 'i' → logprob: -12.129022598266602

Token 47: ']):
' (ID: 51989)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.015913065522909164
    2. 'or' → logprob: -4.265913009643555
    3. ')' → logprob: -7.140913009643555
    4. ' ' → logprob: -7.890913009643555
    5. '):' → logprob: -8.015913009643555
    6. ' and' → logprob: -9.265913009643555
    7. '+' → logprob: -9.515913009643555
    8. '   ' → logprob: -11.015913009643555
    9. '):
' → logprob: -11.640913009643555
    10. ' +' → logprob: -11.765913009643555

Token 48: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33732151985168457
    2. ' or' → logprob: -1.7123215198516846
    3. '   ' → logprob: -2.7123215198516846
    4. ':' → logprob: -4.2123212814331055
    5. ':
' → logprob: -4.7123212814331055
    6. '    ' → logprob: -5.7123212814331055
    7. ' i' → logprob: -6.0873212814331055
    8. ' and' → logprob: -6.0873212814331055
    9. '
' → logprob: -7.0873212814331055
    10. '[i' → logprob: -7.0873212814331055

Token 49: ' result' (ID: 1534)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.307121604681015
    2. 'if' → logprob: -2.057121515274048
    3. ' break' → logprob: -2.932121515274048
    4. '   ' → logprob: -3.932121515274048
    5. '       ' → logprob: -4.057121753692627
    6. ' result' → logprob: -4.307121753692627
    7. 'result' (adapté à ' result') → logprob: -4.557121753692627
    8. ' i' → logprob: -4.932121753692627
    9. 'break' → logprob: -5.432121753692627
    10. '           ' → logprob: -5.682121753692627

Token 50: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.001078302855603397
    2. '=' → logprob: -6.876078128814697
    3. ' +=' → logprob: -10.251078605651855
    4. ' ==' → logprob: -12.501078605651855
    5. ' ' → logprob: -12.626078605651855
    6. ' ='' → logprob: -14.126078605651855
    7. ')' → logprob: -14.751078605651855
    8. ' !=' → logprob: -14.876078605651855
    9. '```' → logprob: -15.251078605651855
    10. '  ' → logprob: -15.626078605651855

Token 51: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.004951951093971729
    2. ' '' → logprob: -5.3799519538879395
    3. ' ' → logprob: -8.879951477050781
    4. '"' → logprob: -9.504951477050781
    5. '"No' → logprob: -9.754951477050781
    6. ' No' → logprob: -11.129951477050781
    7. '`' → logprob: -11.379951477050781
    8. 'No' → logprob: -11.754951477050781
    9. ' "' → logprob: -12.879951477050781
    10. '''' → logprob: -12.942451477050781

Token 52: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.0004612935590557754
    2. 'Yes' → logprob: -7.750461101531982
    3. ' No' → logprob: -10.87546157836914
    4. ''' → logprob: -13.00046157836914
    5. '"No' → logprob: -13.25046157836914
    6. 'NO' → logprob: -13.37546157836914
    7. 'Impossible' → logprob: -13.75046157836914
    8. ' ' → logprob: -14.00046157836914
    9. '```' → logprob: -14.00046157836914
    10. '_No' → logprob: -14.87546157836914

Token 53: ''
' (ID: 2207)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025861237663775682
    2. ')' → logprob: -7.5025858879089355
    3. '   ' → logprob: -7.5025858879089355
    4. '           ' → logprob: -7.7525858879089355
    5. '
' → logprob: -7.8775858879089355
    6. '')' → logprob: -7.8775858879089355
    7. '')
' → logprob: -9.252586364746094
    8. ')
' → logprob: -9.752586364746094
    9. '               ' → logprob: -10.377586364746094
    10. '        ' → logprob: -11.252586364746094

Token 54: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01361590065062046
    2. '
' → logprob: -4.76361608505249
    3. '   ' → logprob: -5.51361608505249
    4. '        
' → logprob: -8.763615608215332
    5. '    
' → logprob: -9.013615608215332
    6. ' 
' → logprob: -9.013615608215332
    7. '	' → logprob: -9.138615608215332
    8. '  
' → logprob: -9.388615608215332
    9. '\n' → logprob: -9.513615608215332
    10. ' ' → logprob: -9.888615608215332

Token 55: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010651722550392151
    2. ' break' → logprob: -4.760651588439941
    3. '   ' → logprob: -7.135651588439941
    4. '	break' → logprob: -7.385651588439941
    5. 'break' (adapté à ' break') → logprob: -7.635651588439941
    6. ' ' → logprob: -10.635651588439941
    7. '           ' → logprob: -11.135651588439941
    8. '	' → logprob: -11.385651588439941
    9. '        
' → logprob: -11.510651588439941
    10. ' 
' → logprob: -11.510651588439941

Token 56: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015454208478331566
    2. '
' → logprob: -4.265454292297363
    3. ' i' → logprob: -8.015454292297363
    4. '    
' → logprob: -8.015454292297363
    5. ' 
' → logprob: -8.640454292297363
    6. '  
' → logprob: -8.640454292297363
    7. ' ' → logprob: -9.140454292297363
    8. 'i' → logprob: -9.765454292297363
    9. '  ' → logprob: -10.265454292297363
    10. '\n' → logprob: -10.765454292297363

Token 57: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11446570605039597
    2. '
' → logprob: -2.3644657135009766
    3. '\n' → logprob: -4.739465713500977
    4. '    
' → logprob: -6.114465713500977
    5. '  
' → logprob: -6.489465713500977
    6. ' 
' → logprob: -7.489465713500977
    7. '```' → logprob: -7.864465713500977
    8. '\' → logprob: -8.989465713500977
    9. ' ' → logprob: -9.114465713500977
    10. '   
' → logprob: -9.239465713500977

Token 58: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.058133065700531006
    2. 'i' → logprob: -3.558133125305176
    3. ' i' → logprob: -4.308133125305176
    4. '
' → logprob: -4.558133125305176
    5. '  
' → logprob: -6.683133125305176
    6. '\n' → logprob: -7.308133125305176
    7. '    
' → logprob: -7.308133125305176
    8. ' ' → logprob: -7.433133125305176
    9. ' 
' → logprob: -7.808133125305176
    10. '  ' → logprob: -8.558133125305176

Token 59: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.12638522684574127
    2. 'h' → logprob: -2.25138521194458
    3. ' (' → logprob: -5.00138521194458
    4. ' i' → logprob: -5.75138521194458
    5. ' ' → logprob: -6.50138521194458
    6. '(h' → logprob: -7.12638521194458
    7. 'i' → logprob: -7.50138521194458
    8. ' not' → logprob: -7.62638521194458
    9. '(' → logprob: -9.751385688781738
    10. '(i' → logprob: -10.501385688781738

Token 60: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.4974866644479334e-05
    2. '[' → logprob: -12.000015258789062
    3. '[h' → logprob: -12.375015258789062
    4. '[I' → logprob: -14.125015258789062
    5. '```' → logprob: -14.375015258789062
    6. '[j' → logprob: -14.750015258789062
    7. '[a' → logprob: -15.125015258789062
    8. '[int' → logprob: -15.375015258789062
    9. ' [' → logprob: -15.375015258789062
    10. '\[' → logprob: -15.500015258789062

Token 61: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.239981546998024
    2. '+' → logprob: -1.8649815320968628
    3. ']+' → logprob: -4.239981651306152
    4. ' ]' → logprob: -4.614981651306152
    5. ']==' → logprob: -4.614981651306152
    6. ' ==' → logprob: -4.864981651306152
    7. ' +' → logprob: -4.989981651306152
    8. '==' → logprob: -5.864981651306152
    9. '[i' → logprob: -6.614981651306152
    10. ' <=' → logprob: -6.739981651306152

Token 62: ' !=' (ID: 1666)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6274064779281616
    2. '+' → logprob: -1.8774064779281616
    3. ' <=' → logprob: -2.627406597137451
    4. '==' → logprob: -2.627406597137451
    5. ' >' → logprob: -2.752406597137451
    6. ' +' → logprob: -2.877406597137451
    7. ' <' → logprob: -3.502406597137451
    8. '>' → logprob: -5.377406597137451
    9. ' >=' → logprob: -5.377406597137451
    10. '<=' → logprob: -5.877406597137451

Token 63: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.576652467250824
    2. ' h' → logprob: -0.826652467250824
    3. ' ' → logprob: -7.701652526855469
    4. '0' → logprob: -9.451652526855469
    5. 'i' → logprob: -10.201652526855469
    6. ' i' → logprob: -10.451652526855469
    7. '9' → logprob: -10.576652526855469
    8. '	h' → logprob: -10.951652526855469
    9. 'n' → logprob: -11.576652526855469
    10. '<|end|>' → logprob: -11.826652526855469

Token 64: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00016241880075540394
    2. '[' → logprob: -9.000162124633789
    3. 'i' → logprob: -10.875162124633789
    4. '[j' → logprob: -11.750162124633789
    5. '```' → logprob: -12.500162124633789
    6. ' ' → logprob: -13.875162124633789
    7. '[++' → logprob: -14.000162124633789
    8. ' [' → logprob: -14.000162124633789
    9. '[
' → logprob: -14.125162124633789
    10. '1' → logprob: -14.125162124633789

Token 65: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0011616500560194254
    2. ']+' → logprob: -7.001161575317383
    3. ']' → logprob: -8.751161575317383
    4. '+]' → logprob: -9.626161575317383
    5. ' +' → logprob: -11.501161575317383
    6. '1' → logprob: -11.501161575317383
    7. '-' → logprob: -13.126161575317383
    8. '+"]' → logprob: -14.251161575317383
    9. '+
' → logprob: -14.626161575317383
    10. '   ' → logprob: -14.626161575317383

Token 66: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7146746763028204e-05
    2. ' ' → logprob: -10.37503719329834
    3. '+' → logprob: -13.00003719329834
    4. ']' → logprob: -13.75003719329834
    5. '<|end|>' → logprob: -14.12503719329834
    6. '0' → logprob: -14.75003719329834
    7. '   ' → logprob: -15.12503719329834
    8. '```' → logprob: -15.25003719329834
    9. '[' → logprob: -15.50003719329834
    10. ']+' → logprob: -15.87503719329834

Token 67: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5559965968132019
    2. '+' → logprob: -1.0559966564178467
    3. ')' → logprob: -3.6809966564178467
    4. ':' → logprob: -3.8059966564178467
    5. '-' → logprob: -4.305996417999268
    6. ' +' → logprob: -4.930996417999268
    7. ']:' → logprob: -5.805996417999268
    8. ' ):' → logprob: -6.305996417999268
    9. ']' → logprob: -6.805996417999268
    10. ' -' → logprob: -6.930996417999268

Token 68: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.608197808265686
    2. '   ' → logprob: -0.858197808265686
    3. ' i' → logprob: -3.8581976890563965
    4. '    ' → logprob: -5.8581976890563965
    5. '```' → logprob: -6.2331976890563965
    6. 'i' → logprob: -6.4831976890563965
    7. ':' → logprob: -6.8581976890563965
    8. ' ' → logprob: -6.9831976890563965
    9. '	i' → logprob: -7.7331976890563965
    10. '<|end|>' → logprob: -8.233198165893555

Token 69: ' h' (ID: 312)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3801586329936981
    2. 'i' → logprob: -1.3801586627960205
    3. '   ' → logprob: -3.1301586627960205
    4. ' 
' → logprob: -5.005158424377441
    5. '       ' → logprob: -5.380158424377441
    6. '    ' → logprob: -5.630158424377441
    7. '```' → logprob: -6.380158424377441
    8. '	i' → logprob: -6.630158424377441
    9. '    
' → logprob: -7.255158424377441
    10. '\n' → logprob: -7.880158424377441

Token 70: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0018304655095562339
    2. '[' → logprob: -6.501830577850342
    3. 'i' → logprob: -8.501830101013184
    4. '[++' → logprob: -9.876830101013184
    5. '=' → logprob: -11.251830101013184
    6. '.pop' → logprob: -11.626830101013184
    7. '```' → logprob: -11.876830101013184
    8. '+' → logprob: -12.001830101013184
    9. '.remove' → logprob: -12.001830101013184
    10. '[I' → logprob: -12.751830101013184

Token 71: '+' (ID: 10)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14158599078655243
    2. '+' → logprob: -2.5165860652923584
    3. ']+=' → logprob: -3.1415860652923584
    4. ' ]' → logprob: -5.766585826873779
    5. '+]' → logprob: -6.516585826873779
    6. ']+' → logprob: -6.766585826873779
    7. ' +=' → logprob: -7.391585826873779
    8. '+=' → logprob: -7.516585826873779
    9. '[i' → logprob: -7.766585826873779
    10. '++]' → logprob: -8.391586303710938

Token 72: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0839783325791359
    2. 'i' → logprob: -2.8339784145355225
    3. '+' → logprob: -4.583978176116943
    4. ']' → logprob: -4.833978176116943
    5. ']+' → logprob: -6.333978176116943
    6. ']+=' → logprob: -7.083978176116943
    7. ' ' → logprob: -7.708978176116943
    8. ' i' → logprob: -8.708978652954102
    9. '+=' → logprob: -9.333978652954102
    10. '=' → logprob: -10.208978652954102

Token 73: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5345286726951599
    2. '-' → logprob: -1.2845287322998047
    3. ' -=' → logprob: -2.4095287322998047
    4. '-=' → logprob: -4.034528732299805
    5. ' ]' → logprob: -4.284528732299805
    6. ']-' → logprob: -4.909528732299805
    7. ' -' → logprob: -5.534528732299805
    8. ']+=' → logprob: -6.159528732299805
    9. ')' → logprob: -6.784528732299805
    10. ' +=' → logprob: -7.409528732299805

Token 74: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.10370069742202759
    2. ' -=' → logprob: -2.603700637817383
    3. '-' → logprob: -4.478700637817383
    4. '=' → logprob: -4.728700637817383
    5. '+=' → logprob: -5.603700637817383
    6. ' +=' → logprob: -7.853700637817383
    7. ' =' → logprob: -8.478700637817383
    8. ' -' → logprob: -11.103700637817383
    9. '>' → logprob: -11.978700637817383
    10. '	' → logprob: -12.853700637817383

Token 75: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016146517009474337
    2. ' ' → logprob: -8.750161170959473
    3. '   ' → logprob: -13.500161170959473
    4. '0' → logprob: -14.500161170959473
    5. '2' → logprob: -14.625161170959473
    6. '  ' → logprob: -15.125161170959473
    7. ' ' → logprob: -16.93766212463379
    8. '10' → logprob: -17.00016212463379
    9. '	' → logprob: -17.18766212463379
    10. '```' → logprob: -17.31266212463379

Token 76: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.0100624169572257e-05
    2. ' ' → logprob: -10.875020027160645
    3. '   ' → logprob: -14.625020027160645
    4. '0' → logprob: -15.125020027160645
    5. '2' → logprob: -15.125020027160645
    6. '  ' → logprob: -16.12502098083496
    7. '```' → logprob: -17.50002098083496
    8. '       ' → logprob: -17.75002098083496
    9. ' ' → logprob: -17.75002098083496
    10. '	' → logprob: -17.93752098083496

Token 77: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08012256026268005
    2. '\n' → logprob: -2.705122470855713
    3. ' 
' → logprob: -5.830122470855713
    4. '  
' → logprob: -6.330122470855713
    5. '    
' → logprob: -6.955122470855713
    6. '```' → logprob: -7.080122470855713
    7. 'i' → logprob: -7.205122470855713
    8. '\' → logprob: -7.205122470855713
    9. '   ' → logprob: -7.205122470855713
    10. '
' → logprob: -7.205122470855713

Token 78: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5799990892410278
    2. '   ' → logprob: -1.0799990892410278
    3. ' 
' → logprob: -3.0799989700317383
    4. 'i' → logprob: -4.079998970031738
    5. '\n' → logprob: -4.329998970031738
    6. '    
' → logprob: -4.579998970031738
    7. '  
' → logprob: -5.079998970031738
    8. ' i' → logprob: -5.204998970031738
    9. '```' → logprob: -6.954998970031738
    10. '   
' → logprob: -7.204998970031738

Token 79: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.405452847480774
    2. '\n' → logprob: -1.405452847480774
    3. 'i' (adapté à ' i') → logprob: -1.780452847480774
    4. ' 
' → logprob: -1.905452847480774
    5. ' i' → logprob: -2.4054527282714844
    6. '```' → logprob: -3.1554527282714844
    7. '
' → logprob: -3.5304527282714844
    8. '    
' → logprob: -4.780452728271484
    9. '  
' → logprob: -4.905452728271484
    10. '\' → logprob: -5.030452728271484

Token 80: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.024081405252218246
    2. '+=' → logprob: -4.024081230163574
    3. ' +=' → logprob: -5.149081230163574
    4. ' +' → logprob: -9.524081230163574
    5. '=' → logprob: -10.899081230163574
    6. '++' → logprob: -11.149081230163574
    7. '+++' → logprob: -13.649081230163574
    8. ' ' → logprob: -14.274081230163574
    9. '+='' → logprob: -14.649081230163574
    10. '+="' → logprob: -15.149081230163574

Token 81: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00861456897109747
    2. ' ' → logprob: -4.758614540100098
    3. '+' → logprob: -17.758615493774414
    4. '```' → logprob: -17.758615493774414
    5. ' ' → logprob: -18.008615493774414
    6. '   ' → logprob: -18.258615493774414
    7. '2' → logprob: -18.383615493774414
    8. '0' → logprob: -18.821115493774414
    9. '１' → logprob: -19.258615493774414
    10. ' +' → logprob: -19.321115493774414

Token 82: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1756367712223437e-05
    2. ' ' → logprob: -11.375011444091797
    3. '2' → logprob: -15.250011444091797
    4. '0' → logprob: -17.312511444091797
    5. '```' → logprob: -17.500011444091797
    6. '   ' → logprob: -18.875011444091797
    7. '１' → logprob: -19.125011444091797
    8. '3' → logprob: -19.437511444091797
    9. '+' → logprob: -19.500011444091797
    10. '۱' → logprob: -19.812511444091797

Token 83: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4485844373703003
    2. '
' → logprob: -1.8235844373703003
    3. '<|end|>' → logprob: -2.19858455657959
    4. '\n' → logprob: -3.07358455657959
    5. '```' → logprob: -3.44858455657959
    6. ')' → logprob: -6.19858455657959
    7. 'n' → logprob: -6.57358455657959
    8. '\' → logprob: -6.57358455657959
    9. '#' → logprob: -6.69858455657959
    10. '' → logprob: -7.19858455657959

Token 84: 'def' (ID: 1314)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.002907465910539031
    2. '
' → logprob: -6.0029072761535645
    3. '```' → logprob: -8.752907752990723
    4. ')' → logprob: -9.252907752990723
    5. '<|end|>' → logprob: -10.002907752990723
    6. '\n' → logprob: -10.002907752990723
    7. ' print' → logprob: -10.127907752990723
    8. 'p' → logprob: -11.877907752990723
    9. ' 
' → logprob: -12.127907752990723
    10. '(print' → logprob: -12.502907752990723

Token 85: ' output' (ID: 4733)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.025218205526471138
    2. ' main' → logprob: -4.4002180099487305
    3. ' check' → logprob: -5.5252180099487305
    4. ' h' → logprob: -6.0252180099487305
    5. ' space' → logprob: -7.1502180099487305
    6. ' f' → logprob: -7.4002180099487305
    7. ' a' → logprob: -7.4002180099487305
    8. ' process' → logprob: -8.02521800994873
    9. ' solve' → logprob: -8.02521800994873
    10. ' test' → logprob: -8.15021800994873

Token 86: '(r' (ID: 4729)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03293968737125397
    2. '():' → logprob: -4.032939910888672
    3. '()' → logprob: -4.282939910888672
    4. '('' → logprob: -7.907939910888672
    5. '(result' → logprob: -9.282939910888672
    6. ':' → logprob: -9.282939910888672
    7. '_' → logprob: -9.657939910888672
    8. '("("' → logprob: -10.032939910888672
    9. '("")' → logprob: -10.657939910888672
    10. '(
' → logprob: -10.907939910888672

Token 87: '):' (ID: 3127)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.2417319118976593
    2. '):' → logprob: -1.741731882095337
    3. ')' → logprob: -3.366731882095337
    4. 'e' → logprob: -5.741732120513916
    5. 'ef' → logprob: -7.241732120513916
    6. '):
' → logprob: -8.366731643676758
    7. 'eturn' → logprob: -8.616731643676758
    8. 'ult' → logprob: -8.616731643676758
    9. 'u' → logprob: -9.491731643676758
    10. ' es' → logprob: -9.616731643676758

Token 88: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1217622384428978
    2. '<|end|>' → logprob: -2.246762275695801
    3. ' return' → logprob: -5.996762275695801
    4. '\n' → logprob: -6.496762275695801
    5. '\' → logprob: -6.621762275695801
    6. ' print' → logprob: -7.246762275695801
    7. '    
' → logprob: -7.496762275695801
    8. '
' → logprob: -7.621762275695801
    9. 'print' → logprob: -7.621762275695801
    10. ' ' → logprob: -7.871762275695801

Token 89: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.16104143857955933
    2. '(' → logprob: -1.911041498184204
    3. '(result' → logprob: -7.161041259765625
    4. '((' → logprob: -11.161041259765625
    5. '(f' → logprob: -11.411041259765625
    6. '('' → logprob: -12.161041259765625
    7. '()' → logprob: -12.661041259765625
    8. ' (' → logprob: -13.161041259765625
    9. '(
' → logprob: -13.536041259765625
    10. '(output' → logprob: -14.161041259765625

Token 90: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ')
' → logprob: -15.625
    3. ' )' → logprob: -16.0
    4. '))' → logprob: -16.375
    5. ')}' → logprob: -17.625
    6. '')' → logprob: -17.625
    7. ')`' → logprob: -17.625
    8. '}' → logprob: -18.875
    9. ')

' → logprob: -19.25
    10. '),' → logprob: -19.25

Token 91: 'output' (ID: 6130)
  Prédit: 'output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.6436306238174438
    2. '
' → logprob: -0.7686306238174438
    3. '  
' → logprob: -5.643630504608154
    4. '(output' → logprob: -6.018630504608154
    5. '\' → logprob: -6.893630504608154
    6. '\n' → logprob: -7.143630504608154
    7. ' 
' → logprob: -7.268630504608154
    8. '
' → logprob: -7.643630504608154
    9. '<|end|>' → logprob: -7.768630504608154
    10. '' → logprob: -8.268630981445312

Token 92: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47484588623046875
    2. '(result' → logprob: -0.9748458862304688
    3. '(r' → logprob: -7.349845886230469
    4. '((' → logprob: -10.849845886230469
    5. '('' → logprob: -10.974845886230469
    6. '(results' → logprob: -11.224845886230469
    7. '("("' → logprob: -11.474845886230469
    8. '(resultado' → logprob: -11.849845886230469
    9. '()' → logprob: -11.974845886230469
    10. '<|end|>' → logprob: -11.974845886230469

Token 93: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. '))' → logprob: -15.375
    3. ' )' → logprob: -16.125
    4. ')
' → logprob: -17.625
    5. ')}' → logprob: -18.0
    6. ')`' → logprob: -18.25
    7. ')**' → logprob: -19.625
    8. '),' → logprob: -19.875
    9. ')}}' → logprob: -20.0
    10. ')...' → logprob: -20.0


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 91
Tokens correctement prédits (1ère position, stricte): 41
Tokens correctement prédits (1ère position, avec adaptation): 41
Tokens correctement prédits (top 10): 72
Précision stricte (1ère position): 45.05%
Précision adaptée (1ère position): 45.05%
Précision (top 10): 79.12%
================================================================================
