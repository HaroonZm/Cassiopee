================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:09:10
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
input_value = int(input())
if input_value % 2 == 0:
    result_value = (input_value ** 2) // 4
else:
    result_value = (input_value ** 2 - 1) // 4
print(result_value)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'input' (ID: 2586)
  → Token d'amorce (pas de prédiction)

Token 1: '_value' (ID: 6734)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2533738315105438
    2. '"' → logprob: -2.628373861312866
    3. 'input' → logprob: -2.628373861312866
    4. ' input' → logprob: -3.253373861312866
    5. ' "' → logprob: -4.003373622894287
    6. ''' → logprob: -4.503373622894287
    7. ' '' → logprob: -5.753373622894287
    8. '0' → logprob: -6.003373622894287
    9. ' a' → logprob: -6.753373622894287
    10. '_' → logprob: -7.003373622894287

Token 4: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002594799967482686
    2. '(input' → logprob: -6.377594947814941
    3. '```' → logprob: -7.877594947814941
    4. '('' → logprob: -9.252594947814941
    5. '[' → logprob: -9.502594947814941
    6. '`' → logprob: -9.752594947814941
    7. '("("' → logprob: -10.252594947814941
    8. ''' → logprob: -10.252594947814941
    9. '()' → logprob: -10.377594947814941
    10. ' (' → logprob: -10.502594947814941

Token 5: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11737767606973648
    2. '(' → logprob: -2.742377758026123
    3. '())' → logprob: -3.242377758026123
    4. '()' → logprob: -4.992377758026123
    5. '))' → logprob: -8.492377281188965
    6. '")' → logprob: -9.867377281188965
    7. '')' → logprob: -9.992377281188965
    8. '[' → logprob: -10.992377281188965
    9. '`)' → logprob: -11.117377281188965
    10. ' )' → logprob: -11.242377281188965

Token 6: 'if' (ID: 366)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.22554591298103333
    2. '*' → logprob: -2.225545883178711
    3. '%' → logprob: -2.725545883178711
    4. 'if' → logprob: -4.475545883178711
    5. ')' → logprob: -5.600545883178711
    6. ' if' → logprob: -5.850545883178711
    7. '#' → logprob: -5.975545883178711
    8. '```' → logprob: -6.350545883178711
    9. '+
' → logprob: -6.975545883178711
    10. '\' → logprob: -7.350545883178711

Token 7: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14424218237400055
    2. ' input' → logprob: -2.019242286682129
    3. 'input' → logprob: -6.519242286682129
    4. ' not' → logprob: -10.894242286682129
    5. ' (' → logprob: -11.144242286682129
    6. ' ' → logprob: -11.394242286682129
    7. '  ' → logprob: -11.644242286682129
    8. ''' → logprob: -11.894242286682129
    9. ' space' → logprob: -12.269242286682129
    10. '_input' → logprob: -12.394242286682129

Token 8: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.055553827434778214
    2. '_' → logprob: -2.930553913116455
    3. ' _' → logprob: -7.680553913116455
    4. '_val' → logprob: -8.930553436279297
    5. ' ' → logprob: -11.055553436279297
    6. '```' → logprob: -11.430553436279297
    7. '_v' → logprob: -12.055553436279297
    8. '_Value' → logprob: -12.430553436279297
    9. '_space' → logprob: -12.555553436279297
    10. ')_' → logprob: -12.555553436279297

Token 9: ' %' (ID: 1851)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.11055795848369598
    2. '>' → logprob: -3.110558032989502
    3. ' ==' → logprob: -3.735558032989502
    4. ' >=' → logprob: -3.735558032989502
    5. ' ' → logprob: -5.235558032989502
    6. ' <' → logprob: -5.735558032989502
    7. '  ' → logprob: -7.235558032989502
    8. ' !=' → logprob: -7.235558032989502
    9. '==' → logprob: -7.485558032989502
    10. ' <=' → logprob: -8.110557556152344

Token 10: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10021539777517319
    2. '2' → logprob: -2.350215435028076
    3. '3' → logprob: -12.475214958190918
    4. '4' → logprob: -13.225214958190918
    5. '```' → logprob: -13.600214958190918
    6. '1' → logprob: -14.475214958190918
    7. '10' → logprob: -14.975214958190918
    8. '32' → logprob: -15.975214958190918
    9. '  ' → logprob: -15.975214958190918
    10. '=' → logprob: -16.100215911865234

Token 11: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00036834771162830293
    2. ' ' → logprob: -8.250368118286133
    3. '3' → logprob: -9.250368118286133
    4. '10' → logprob: -12.375368118286133
    5. '4' → logprob: -12.750368118286133
    6. '5' → logprob: -12.750368118286133
    7. '1' → logprob: -14.750368118286133
    8. '```' → logprob: -15.375368118286133
    9. '7' → logprob: -16.125368118286133
    10. '100' → logprob: -16.375368118286133

Token 12: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.006319324020296335
    2. '==' → logprob: -5.131319522857666
    3. ' ' → logprob: -8.256319046020508
    4. ' !=' → logprob: -9.756319046020508
    5. '=' → logprob: -10.506319046020508
    6. ' =' → logprob: -10.506319046020508
    7. ')' → logprob: -11.131319046020508
    8. ' ===' → logprob: -13.631319046020508
    9. ' ' → logprob: -14.756319046020508
    10. ' )' → logprob: -14.881319046020508

Token 13: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.016034720465540886
    2. '0' → logprob: -4.1410346031188965
    3. '1' → logprob: -15.766035079956055
    4. ' ' → logprob: -16.641035079956055
    5. '2' → logprob: -16.891035079956055
    6. '```' → logprob: -17.141035079956055
    7. ')' → logprob: -17.953535079956055
    8. '=' → logprob: -18.203535079956055
    9. '<|end|>' → logprob: -18.953535079956055
    10. '  ' → logprob: -19.078535079956055

Token 14: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06993965804576874
    2. ' ' → logprob: -2.694939613342285
    3. '1' → logprob: -13.069939613342285
    4. '2' → logprob: -13.694939613342285
    5. '```' → logprob: -17.0699405670166
    6. ' ' → logprob: -17.7574405670166
    7. '==' → logprob: -18.1949405670166
    8. '  ' → logprob: -18.2574405670166
    9. '4' → logprob: -18.2574405670166
    10. '   ' → logprob: -19.1324405670166

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.9153885558771435e-06
    2. ' :' → logprob: -12.500005722045898
    3. ':**' → logprob: -13.875005722045898
    4. '):' → logprob: -15.125005722045898
    5. '':'' → logprob: -15.375005722045898
    6. '':' → logprob: -15.500005722045898
    7. '>:' → logprob: -16.0000057220459
    8. ':return' → logprob: -16.1250057220459
    9. ':
' → logprob: -16.3750057220459
    10. '():' → logprob: -16.5000057220459

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01979464292526245
    2. '\n' → logprob: -5.019794464111328
    3. ' print' → logprob: -5.019794464111328
    4. 'print' → logprob: -5.394794464111328
    5. '    
' → logprob: -7.269794464111328
    6. '\' → logprob: -7.519794464111328
    7. '    ' → logprob: -8.644794464111328
    8. '```' → logprob: -9.144794464111328
    9. ' ' → logprob: -9.769794464111328
    10. ''' → logprob: -10.019794464111328

Token 17: ' result' (ID: 1534)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.025080209597945213
    2. 'print' → logprob: -3.9000802040100098
    3. '   ' → logprob: -5.40008020401001
    4. '    ' → logprob: -12.025080680847168
    5. ' ' → logprob: -13.525080680847168
    6. '	print' → logprob: -13.900080680847168
    7. '```' → logprob: -14.275080680847168
    8. '       ' → logprob: -14.775080680847168
    9. ' \' → logprob: -14.775080680847168
    10. '\' → logprob: -14.775080680847168

Token 18: '_value' (ID: 6734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.028051525354385376
    2. '=' → logprob: -3.6530516147613525
    3. ' ' → logprob: -6.403051376342773
    4. ' +=' → logprob: -10.153051376342773
    5. ')' → logprob: -10.778051376342773
    6. 's' → logprob: -11.778051376342773
    7. '_' → logprob: -11.903051376342773
    8. 'space' → logprob: -13.028051376342773
    9. ' ==' → logprob: -13.153051376342773
    10. ' =
' → logprob: -13.278051376342773

Token 19: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0019073354778811336
    2. '=' → logprob: -7.0019073486328125
    3. ' +=' → logprob: -7.1269073486328125
    4. ' ' → logprob: -8.626907348632812
    5. ' |=' → logprob: -12.376907348632812
    6. ')' → logprob: -12.876907348632812
    7. '<|end|>' → logprob: -13.876907348632812
    8. ' ==' → logprob: -14.126907348632812
    9. ' *=' → logprob: -14.376907348632812
    10. ' =
' → logprob: -14.376907348632812

Token 20: ' (' (ID: 350)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3099156618118286
    2. ' "' → logprob: -1.4349156618118286
    3. ''' → logprob: -4.184915542602539
    4. ' input' → logprob: -4.934915542602539
    5. ' '' → logprob: -5.809915542602539
    6. 'input' → logprob: -6.184915542602539
    7. ' ' → logprob: -8.059915542602539
    8. ''s' → logprob: -8.434915542602539
    9. ' True' → logprob: -9.184915542602539
    10. '"value' → logprob: -9.184915542602539

Token 21: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.02328984998166561
    2. ' input' → logprob: -3.773289918899536
    3. '2' → logprob: -11.773289680480957
    4. ')' → logprob: -11.898289680480957
    5. '   ' → logprob: -11.898289680480957
    6. '(input' → logprob: -11.898289680480957
    7. ' ' → logprob: -11.898289680480957
    8. 'result' → logprob: -13.273289680480957
    9. 'int' → logprob: -13.398289680480957
    10. '  ' → logprob: -14.273289680480957

Token 22: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -8.895480277715251e-06
    2. ')_' → logprob: -12.625008583068848
    3. '_' → logprob: -13.125008583068848
    4. '_val' → logprob: -13.125008583068848
    5. ' _' → logprob: -14.000008583068848
    6. 'value' → logprob: -14.750008583068848
    7. ')' → logprob: -16.000009536743164
    8. '```' → logprob: -17.125009536743164
    9. '_v' → logprob: -17.375009536743164
    10. '\' → logprob: -17.500009536743164

Token 23: ' **' (ID: 6240)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.1465667337179184
    2. ' +' → logprob: -3.02156662940979
    3. ' *' → logprob: -3.39656662940979
    4. ' ' → logprob: -3.64656662940979
    5. ')' → logprob: -4.396566867828369
    6. '//' → logprob: -5.396566867828369
    7. ' )' → logprob: -5.646566867828369
    8. ' **' → logprob: -6.021566867828369
    9. '+' → logprob: -6.146566867828369
    10. '*' → logprob: -6.396566867828369

Token 24: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002601341577246785
    2. ' ' → logprob: -6.002601146697998
    3. '3' → logprob: -9.127601623535156
    4. ')' → logprob: -11.377601623535156
    5. '0' → logprob: -12.627601623535156
    6. '4' → logprob: -14.002601623535156
    7. '1' → logprob: -14.752601623535156
    8. '   ' → logprob: -14.877601623535156
    9. ' )' → logprob: -15.002601623535156
    10. '  ' → logprob: -15.940101623535156

Token 25: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00042567000491544604
    2. '3' → logprob: -8.000425338745117
    3. ' ' → logprob: -9.625425338745117
    4. ')' → logprob: -11.125425338745117
    5. '0' → logprob: -12.375425338745117
    6. '4' → logprob: -12.875425338745117
    7. '1' → logprob: -14.375425338745117
    8. '   ' → logprob: -14.625425338745117
    9. '```' → logprob: -15.000425338745117
    10. '  ' → logprob: -15.437925338745117

Token 26: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005561320576816797
    2. ' )' → logprob: -7.625555992126465
    3. '   ' → logprob: -11.125555992126465
    4. '+' → logprob: -11.250555992126465
    5. ' +' → logprob: -11.625555992126465
    6. ')**' → logprob: -11.625555992126465
    7. ' ' → logprob: -12.000555992126465
    8. ')
' → logprob: -12.000555992126465
    9. ')+' → logprob: -12.500555992126465
    10. '**' → logprob: -13.250555992126465

Token 27: ' //' (ID: 602)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.1022258773446083
    2. ' else' → logprob: -2.7272257804870605
    3. '
' → logprob: -3.8522257804870605
    4. '\n' → logprob: -4.8522257804870605
    5. '    
' → logprob: -6.9772257804870605
    6. '<|end|>' → logprob: -7.2272257804870605
    7. '   ' → logprob: -8.227226257324219
    8. ')' → logprob: -8.727226257324219
    9. ' 
' → logprob: -9.477226257324219
    10. '\' → logprob: -9.477226257324219

Token 28: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0936325415968895
    2. ' ' → logprob: -2.843632459640503
    3. '4' → logprob: -3.468632459640503
    4. '1' → logprob: -12.093632698059082
    5. '3' → logprob: -13.093632698059082
    6. '8' → logprob: -14.593632698059082
    7. '16' → logprob: -15.343632698059082
    8. '  ' → logprob: -15.406132698059082
    9. '10' → logprob: -15.531132698059082
    10. '   ' → logprob: -15.593632698059082

Token 29: '4' (ID: 19)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.003249127883464098
    2. '4' → logprob: -5.753249168395996
    3. ' ' → logprob: -9.628249168395996
    4. '3' → logprob: -12.378249168395996
    5. '1' → logprob: -13.878249168395996
    6. '8' → logprob: -15.378249168395996
    7. '(' → logprob: -17.00324821472168
    8. '10' → logprob: -17.12824821472168
    9. '  ' → logprob: -17.50324821472168
    10. '   ' → logprob: -17.62824821472168

Token 30: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.07510652393102646
    2. '
' → logprob: -3.200106620788574
    3. '\n' → logprob: -4.075106620788574
    4. ' else' → logprob: -5.200106620788574
    5. '    
' → logprob: -5.950106620788574
    6. 'e' → logprob: -6.825106620788574
    7. '```' → logprob: -6.825106620788574
    8. '' → logprob: -6.950106620788574
    9. 'n' → logprob: -7.075106620788574
    10. '\' → logprob: -7.200106620788574

Token 31: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.14772266149520874
    2. '
' → logprob: -2.1477227210998535
    3. '\n' → logprob: -4.8977227210998535
    4. 'e' → logprob: -5.3977227210998535
    5. ' else' → logprob: -5.6477227210998535
    6. '    
' → logprob: -6.3977227210998535
    7. '```' → logprob: -7.1477227210998535
    8. '' → logprob: -7.6477227210998535
    9. 'n' → logprob: -8.022722244262695
    10. '\' → logprob: -8.272722244262695

Token 32: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.438573680294212e-06
    2. ':
' → logprob: -12.875005722045898
    3. ' :' → logprob: -12.875005722045898
    4. '   ' → logprob: -15.875005722045898
    5. '<|end|>' → logprob: -17.1250057220459
    6. '):' → logprob: -17.2500057220459
    7. ':**' → logprob: -17.7500057220459
    8. ':

' → logprob: -17.7500057220459
    9. ':return' → logprob: -17.7500057220459
    10. ',' → logprob: -17.7500057220459

Token 33: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01656998321413994
    2. '\n' → logprob: -4.641570091247559
    3. '    ' → logprob: -5.641570091247559
    4. '    
' → logprob: -7.016570091247559
    5. '\' → logprob: -7.266570091247559
    6. '       ' → logprob: -8.016570091247559
    7. ' 
' → logprob: -8.266570091247559
    8. '
' → logprob: -8.391570091247559
    9. 'n' → logprob: -8.391570091247559
    10. ''' → logprob: -9.141570091247559

Token 34: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.12040784955024719
    2. 'result' (adapté à ' result') → logprob: -2.620407819747925
    3. '   ' → logprob: -3.370407819747925
    4. '    ' → logprob: -5.495408058166504
    5. ' 
' → logprob: -7.245408058166504
    6. '    
' → logprob: -8.370408058166504
    7. ' ' → logprob: -8.495408058166504
    8. '     
' → logprob: -8.495408058166504
    9. ' (' → logprob: -9.245408058166504
    10. ' \' → logprob: -9.620408058166504

Token 35: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.00037013579276390374
    2. '_' → logprob: -8.500370025634766
    3. '_val' → logprob: -8.750370025634766
    4. ' _' → logprob: -12.750370025634766
    5. ')_' → logprob: -13.125370025634766
    6. '_values' → logprob: -14.625370025634766
    7. '_Value' → logprob: -14.875370025634766
    8. '__' → logprob: -15.000370025634766
    9. '_va' → logprob: -15.125370025634766
    10. '_output' → logprob: -15.250370025634766

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0014288094826042652
    2. '=' → logprob: -6.626428604125977
    3. ' ' → logprob: -9.751428604125977
    4. ' +=' → logprob: -10.126428604125977
    5. ' *=' → logprob: -13.126428604125977
    6. '_' → logprob: -14.001428604125977
    7. ')' → logprob: -14.876428604125977
    8. ' *' → logprob: -15.251428604125977
    9. ' |=' → logprob: -15.626428604125977
    10. ' +' → logprob: -16.126428604125977

Token 37: ' (' (ID: 350)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.11122780293226242
    2. ' (' → logprob: -2.4862277507781982
    3. '(input' → logprob: -4.361227989196777
    4. 'input' → logprob: -4.736227989196777
    5. '(' → logprob: -8.486227989196777
    6. '3' → logprob: -9.361227989196777
    7. ' ' → logprob: -9.861227989196777
    8. ' ((' → logprob: -10.111227989196777
    9. '2' → logprob: -10.111227989196777
    10. '1' → logprob: -10.736227989196777

Token 38: 'input' (ID: 2586)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3908401131629944
    2. 'input' → logprob: -1.1408400535583496
    3. '(input' → logprob: -6.01584005355835
    4. '3' → logprob: -7.14084005355835
    5. ' (' → logprob: -7.89084005355835
    6. ' ' → logprob: -8.765840530395508
    7. '2' → logprob: -9.390840530395508
    8. '(' → logprob: -10.265840530395508
    9. '4' → logprob: -11.140840530395508
    10. '   ' → logprob: -11.140840530395508

Token 39: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.00013166792632546276
    2. '_val' → logprob: -9.500131607055664
    3. '_' → logprob: -10.000131607055664
    4. ' _' → logprob: -12.250131607055664
    5. '_v' → logprob: -12.500131607055664
    6. 'value' → logprob: -14.000131607055664
    7. 'put' → logprob: -14.500131607055664
    8. ')_' → logprob: -14.625131607055664
    9. '_put' → logprob: -14.875131607055664
    10. '_va' → logprob: -15.125131607055664

Token 40: ' **' (ID: 6240)
  Prédit: ' **'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' **' → logprob: -0.3127387464046478
    2. ' *' → logprob: -1.6877387762069702
    3. ' ' → logprob: -2.6877386569976807
    4. '*' → logprob: -4.93773889541626
    5. '**' → logprob: -5.18773889541626
    6. ' +' → logprob: -6.93773889541626
    7. ')' → logprob: -8.062738418579102
    8. '-' → logprob: -8.187738418579102
    9. ' )' → logprob: -8.312738418579102
    10. ' %' → logprob: -8.562738418579102

Token 41: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.26949864625930786
    2. ' ' → logprob: -1.644498586654663
    3. '2' → logprob: -3.144498586654663
    4. '1' → logprob: -10.519498825073242
    5. ' ' → logprob: -12.769498825073242
    6. '  ' → logprob: -13.081998825073242
    7. '(' → logprob: -13.456998825073242
    8. '   ' → logprob: -13.581998825073242
    9. '4' → logprob: -13.769498825073242
    10. '0' → logprob: -13.956998825073242

Token 42: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.08911371976137161
    2. '2' → logprob: -2.464113712310791
    3. '1' → logprob: -9.08911418914795
    4. ' ' → logprob: -9.96411418914795
    5. '   ' → logprob: -12.77661418914795
    6. '```' → logprob: -12.77661418914795
    7. '  ' → logprob: -13.58911418914795
    8. '0' → logprob: -13.90161418914795
    9. '4' → logprob: -14.08911418914795
    10. '(' → logprob: -14.15161418914795

Token 43: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20147736370563507
    2. ' )' → logprob: -2.576477289199829
    3. ' +' → logprob: -2.826477289199829
    4. ' -' → logprob: -3.951477289199829
    5. '+' → logprob: -4.076477527618408
    6. '-' → logprob: -5.576477527618408
    7. ' *' → logprob: -5.701477527618408
    8. '*' → logprob: -6.201477527618408
    9. ' ' → logprob: -6.826477527618408
    10. ' //' → logprob: -8.20147705078125

Token 44: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.523129403591156
    2. '1' → logprob: -0.898129403591156
    3. '  ' → logprob: -12.3981294631958
    4. ')' → logprob: -14.8981294631958
    5. '2' → logprob: -15.1481294631958
    6. '   ' → logprob: -15.1481294631958
    7. ' ' → logprob: -15.5856294631958
    8. '3' → logprob: -15.9606294631958
    9. '-' → logprob: -16.085628509521484
    10. '9' → logprob: -16.210628509521484

Token 45: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004083266947418451
    2. ' ' → logprob: -5.504083156585693
    3. '   ' → logprob: -13.129083633422852
    4. '  ' → logprob: -13.129083633422852
    5. '2' → logprob: -15.754083633422852
    6. '-' → logprob: -16.50408363342285
    7. ')' → logprob: -16.50408363342285
    8. '4' → logprob: -16.69158363342285
    9. ' ' → logprob: -16.75408363342285
    10. '```' → logprob: -16.94158363342285

Token 46: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00032354547875002027
    2. ' )' → logprob: -8.625323295593262
    3. ')//' → logprob: -8.875323295593262
    4. '   ' → logprob: -13.500323295593262
    5. ')/' → logprob: -14.000323295593262
    6. ')
' → logprob: -14.625323295593262
    7. ' ' → logprob: -14.875323295593262
    8. '))' → logprob: -15.250323295593262
    9. '）' → logprob: -15.625323295593262
    10. '}' → logprob: -16.250324249267578

Token 47: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.5306999087333679
    2. ')' → logprob: -1.2806999683380127
    3. ' ' → logprob: -3.0306999683380127
    4. '<|end|>' → logprob: -3.7806999683380127
    5. '   ' → logprob: -4.280699729919434
    6. '```' → logprob: -4.530699729919434
    7. '**' → logprob: -5.030699729919434
    8. '//' → logprob: -5.030699729919434
    9. ' )' → logprob: -5.280699729919434
    10. '
' → logprob: -5.405699729919434

Token 48: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.012214821763336658
    2. '2' → logprob: -4.637214660644531
    3. ' ' → logprob: -6.012214660644531
    4. '8' → logprob: -12.262214660644531
    5. '1' → logprob: -13.137214660644531
    6. '3' → logprob: -15.262214660644531
    7. '16' → logprob: -16.01221466064453
    8. '6' → logprob: -18.19971466064453
    9. '  ' → logprob: -18.32471466064453
    10. '```' → logprob: -18.32471466064453

Token 49: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -3.309382373117842e-05
    2. '2' → logprob: -10.375033378601074
    3. ' ' → logprob: -13.250033378601074
    4. '1' → logprob: -16.625032424926758
    5. '8' → logprob: -18.125032424926758
    6. '```' → logprob: -19.375032424926758
    7. '٤' → logprob: -20.125032424926758
    8. '۴' → logprob: -20.125032424926758
    9. '４' → logprob: -20.875032424926758
    10. '' → logprob: -20.875032424926758

Token 50: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.06623180210590363
    2. '
' → logprob: -2.9412317276000977
    3. '\' → logprob: -4.941231727600098
    4. '<|end|>' → logprob: -6.691231727600098
    5. 'print' → logprob: -7.316231727600098
    6. '```' → logprob: -7.441231727600098
    7. ' ' → logprob: -8.191231727600098
    8. '' → logprob: -8.316231727600098
    9. ' 
' → logprob: -8.566231727600098
    10. '\r' → logprob: -8.691231727600098

Token 51: 'print' (ID: 1598)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.17168202996253967
    2. '
' → logprob: -2.421682119369507
    3. 'print' → logprob: -3.546682119369507
    4. '\' → logprob: -3.796682119369507
    5. '#' → logprob: -5.296681880950928
    6. '```' → logprob: -5.796681880950928
    7. ' ' → logprob: -6.046681880950928
    8. '<|end|>' → logprob: -6.671681880950928
    9. ' 
' → logprob: -6.796681880950928
    10. '\r' → logprob: -7.046681880950928

Token 52: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0011847536079585552
    2. '(result' → logprob: -6.751184940338135
    3. '(input' → logprob: -12.376184463500977
    4. '("("' → logprob: -12.376184463500977
    5. '('' → logprob: -12.876184463500977
    6. ' (' → logprob: -13.501184463500977
    7. '(output' → logprob: -15.001184463500977
    8. '(
' → logprob: -15.376184463500977
    9. '(print' → logprob: -15.376184463500977
    10. '(

' → logprob: -15.751184463500977

Token 53: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0027953723911195993
    2. '_val' → logprob: -7.002795219421387
    3. '_v' → logprob: -7.127795219421387
    4. ')_' → logprob: -7.627795219421387
    5. '_' → logprob: -8.127795219421387
    6. '_va' → logprob: -8.252795219421387
    7. ')' → logprob: -11.002795219421387
    8. '_)' → logprob: -11.002795219421387
    9. ' _' → logprob: -13.627795219421387
    10. '_Value' → logprob: -14.252795219421387

Token 54: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -16.0
    3. '))' → logprob: -16.125
    4. ')
' → logprob: -16.5
    5. ')`' → logprob: -17.125
    6. '')' → logprob: -18.0
    7. '#' → logprob: -18.875
    8. '`)' → logprob: -18.875
    9. '(' → logprob: -19.0
    10. ')#' → logprob: -19.375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 52
Tokens correctement prédits (1ère position, stricte): 26
Tokens correctement prédits (1ère position, avec adaptation): 26
Tokens correctement prédits (top 10): 45
Précision stricte (1ère position): 50.00%
Précision adaptée (1ère position): 50.00%
Précision (top 10): 86.54%
================================================================================
