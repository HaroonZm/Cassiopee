================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:20:29
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import mul

def pairwise_sum(x):
    return (lambda y: reduce(mul, y, 1)//2)([x, x-1])

n, m = map(int, input().split())
res = (
    0 if all([n == 1, m == 1]) else
    pairwise_sum(m)*(n == 1) +
    pairwise_sum(n)*(m == 1) +
    ((pairwise_sum(n) + pairwise_sum(m)) * (n != 1 and m != 1))
)
print(res)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.1271289438009262
    2. 'partial' → logprob: -2.627128839492798
    3. ' wraps' → logprob: -3.627128839492798
    4. 'reduce' → logprob: -4.002129077911377
    5. 'l' → logprob: -6.752129077911377
    6. ' partial' → logprob: -7.627129077911377
    7. 'cached' → logprob: -9.127128601074219
    8. 'cmp' → logprob: -9.252128601074219
    9. 'cache' → logprob: -9.252128601074219
    10. '```' → logprob: -9.377128601074219

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010317044332623482
    2. '(lambda' → logprob: -4.760316848754883
    3. ' (' → logprob: -7.385316848754883
    4. ',' → logprob: -7.885316848754883
    5. 'def' → logprob: -8.135316848754883
    6. '.' → logprob: -8.635316848754883
    7. '```' → logprob: -10.135316848754883
    8. '(
' → logprob: -10.385316848754883
    9. 'lambda' → logprob: -10.635316848754883
    10. ' ' → logprob: -10.760316848754883

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0320768803358078
    2. 'def' → logprob: -4.157076835632324
    3. '\' → logprob: -4.657076835632324
    4. ' ' → logprob: -6.032076835632324
    5. '(
' → logprob: -6.907076835632324
    6. ',' → logprob: -7.157076835632324
    7. '(lambda' → logprob: -7.907076835632324
    8. '```' → logprob: -8.282076835632324
    9. ' (' → logprob: -8.407076835632324
    10. 'd' → logprob: -8.657076835632324

Token 6: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.15557193756103516
    2. ' itertools' → logprob: -2.405571937561035
    3. ' math' → logprob: -3.905571937561035
    4. ' collections' → logprob: -3.905571937561035
    5. 'operator' → logprob: -4.405571937561035
    6. 'collections' → logprob: -7.780571937561035
    7. 'math' → logprob: -8.030571937561035
    8. ' typing' → logprob: -8.030571937561035
    9. ' os' → logprob: -8.655571937561035
    10. ' ' → logprob: -9.655571937561035

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.022971155121922493
    2. 'import' → logprob: -3.8979711532592773
    3. ' ' → logprob: -6.397971153259277
    4. '.' → logprob: -7.397971153259277
    5. ' .' → logprob: -9.147971153259277
    6. '.import' → logprob: -10.647971153259277
    7. '	import' → logprob: -11.772971153259277
    8. '<|end|>' → logprob: -13.022971153259277
    9. '_import' → logprob: -13.397971153259277
    10. ' ' → logprob: -13.522971153259277

Token 8: ' mul' (ID: 9975)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.1486223042011261
    2. ' import' → logprob: -2.5236222743988037
    3. ' mul' → logprob: -3.2736222743988037
    4. 'add' → logprob: -4.398622512817383
    5. ' ' → logprob: -5.523622512817383
    6. 'import' → logprob: -6.773622512817383
    7. 'mul' → logprob: -6.773622512817383
    8. ' item' → logprob: -6.898622512817383
    9. ' icon' → logprob: -9.148622512817383
    10. 'item' → logprob: -9.898622512817383

Token 9: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018789611756801605
    2. '(
' → logprob: -4.643789768218994
    3. '*' → logprob: -5.018789768218994
    4. '\' → logprob: -7.143789768218994
    5. '\n' → logprob: -8.018789291381836
    6. ',' → logprob: -8.268789291381836
    7. '\(' → logprob: -8.768789291381836
    8. '`' → logprob: -9.143789291381836
    9. 'a' → logprob: -9.143789291381836
    10. '#' → logprob: -9.393789291381836

Token 10: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5133150219917297
    2. 'def' → logprob: -2.013314962387085
    3. '(
' → logprob: -2.263314962387085
    4. '\' → logprob: -2.638314962387085
    5. 'a' → logprob: -4.138315200805664
    6. 'result' → logprob: -4.138315200805664
    7. '#' → logprob: -4.513315200805664
    8. '`' → logprob: -4.763315200805664
    9. '\n' → logprob: -5.013315200805664
    10. 'x' → logprob: -5.263315200805664

Token 11: ' pair' (ID: 10610)
  Prédit: ' factorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -0.5611723065376282
    2. ' reduce' → logprob: -1.5611722469329834
    3. ' product' → logprob: -1.8111722469329834
    4. ' calculate' → logprob: -4.1861724853515625
    5. ' ' → logprob: -4.3111724853515625
    6. ' prod' → logprob: -4.5611724853515625
    7. ' factor' → logprob: -5.5611724853515625
    8. ' space' → logprob: -5.8111724853515625
    9. ' multiply' → logprob: -6.1861724853515625
    10. ' fact' → logprob: -7.0611724853515625

Token 12: 'wise' (ID: 7480)
  Prédit: 'wise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wise' → logprob: -0.15013624727725983
    2. 's' → logprob: -2.6501362323760986
    3. '_s' → logprob: -3.4001362323760986
    4. '_w' → logprob: -4.150136470794678
    5. '_' → logprob: -4.400136470794678
    6. 'w' → logprob: -5.525136470794678
    7. '_sum' → logprob: -7.525136470794678
    8. '(' → logprob: -7.650136470794678
    9. 'wis' → logprob: -8.15013599395752
    10. ' s' → logprob: -8.52513599395752

Token 13: '_sum' (ID: 29859)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008034685626626015
    2. '_' → logprob: -5.383034706115723
    3. '(_' → logprob: -6.258034706115723
    4. '_pairs' → logprob: -8.133034706115723
    5. '(iter' → logprob: -8.758034706115723
    6. '_pair' → logprob: -8.758034706115723
    7. ' (' → logprob: -9.008034706115723
    8. '(a' → logprob: -9.758034706115723
    9. '(lambda' → logprob: -9.883034706115723
    10. '(_)' → logprob: -10.133034706115723

Token 14: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007141007808968425
    2. '_' → logprob: -8.250714302062988
    3. '_pairs' → logprob: -8.625714302062988
    4. 's' → logprob: -9.500714302062988
    5. ' (' → logprob: -10.000714302062988
    6. '_pair' → logprob: -10.750714302062988
    7. '(x' → logprob: -11.000714302062988
    8. '(a' → logprob: -11.000714302062988
    9. '(pair' → logprob: -11.125714302062988
    10. '()' → logprob: -11.500714302062988

Token 15: '):
' (ID: 1883)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.11412746459245682
    2. ',' → logprob: -2.3641273975372314
    3. '):' → logprob: -4.9891276359558105
    4. ')' → logprob: -5.4891276359558105
    5. '[' → logprob: -6.8641276359558105
    6. ' ,' → logprob: -7.9891276359558105
    7. '1' → logprob: -8.114127159118652
    8. ')s' → logprob: -8.239127159118652
    9. ' s' → logprob: -8.864127159118652
    10. '_,' → logprob: -9.239127159118652

Token 16: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04941224306821823
    2. '   ' → logprob: -3.174412250518799
    3. ' :' → logprob: -6.424412250518799
    4. '():' → logprob: -7.049412250518799
    5. ' ' → logprob: -7.549412250518799
    6. '(' → logprob: -7.549412250518799
    7. ':
' → logprob: -7.799412250518799
    8. '):' → logprob: -7.799412250518799
    9. ':return' → logprob: -7.924412250518799
    10. ',' → logprob: -8.29941177368164

Token 17: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.11368100345134735
    2. ' reduce' → logprob: -2.8636810779571533
    3. '   ' → logprob: -3.6136810779571533
    4. ' sum' → logprob: -4.988680839538574
    5. 'return' (adapté à ' return') → logprob: -4.988680839538574
    6. ' ' → logprob: -5.863680839538574
    7. 'reduce' → logprob: -6.363680839538574
    8. ' []' → logprob: -7.363680839538574
    9. ' pair' → logprob: -7.363680839538574
    10. 'sum' → logprob: -7.488680839538574

Token 18: ' (' (ID: 350)
  Prédit: ' reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' reduce' → logprob: -0.2153870016336441
    2. 'reduce' → logprob: -2.7153871059417725
    3. ' sum' → logprob: -2.8403871059417725
    4. ' x' → logprob: -3.3403871059417725
    5. 'x' → logprob: -4.465386867523193
    6. 'sum' → logprob: -5.215386867523193
    7. ' [' → logprob: -5.465386867523193
    8. ' list' → logprob: -5.465386867523193
    9. '[' → logprob: -5.590386867523193
    10. ' pair' → logprob: -6.715386867523193

Token 19: 'lambda' (ID: 35280)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.28926607966423035
    2. 'reduce' → logprob: -1.7892661094665527
    3. ' x' → logprob: -3.2892661094665527
    4. 'a' → logprob: -4.039266109466553
    5. ' reduce' → logprob: -4.414266109466553
    6. 'sum' → logprob: -4.664266109466553
    7. 'i' → logprob: -6.164266109466553
    8. '(x' → logprob: -6.414266109466553
    9. ' a' → logprob: -7.289266109466553
    10. ')' → logprob: -7.414266109466553

Token 20: ' y' (ID: 342)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.7669724225997925
    2. 'a' → logprob: -1.0169724225997925
    3. ' i' → logprob: -2.641972541809082
    4. ' x' → logprob: -3.141972541809082
    5. 'i' → logprob: -3.766972541809082
    6. 'x' → logprob: -4.391972541809082
    7. ' y' → logprob: -4.891972541809082
    8. ' lambda' → logprob: -5.891972541809082
    9. 'y' → logprob: -6.141972541809082
    10. ' acc' → logprob: -6.391972541809082

Token 21: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11285936087369919
    2. ',' → logprob: -2.3628592491149902
    3. ' :' → logprob: -4.61285924911499
    4. ',y' → logprob: -7.11285924911499
    5. ' y' → logprob: -7.98785924911499
    6. ' ,' → logprob: -8.737859725952148
    7. 'y' → logprob: -8.862859725952148
    8. '[i' → logprob: -8.862859725952148
    9. 'x' → logprob: -8.987859725952148
    10. ',i' → logprob: -9.112859725952148

Token 22: ' reduce' (ID: 10389)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.9492166638374329
    2. ' x' → logprob: -1.324216604232788
    3. 'x' → logprob: -2.199216604232788
    4. ' sum' → logprob: -2.949216604232788
    5. ' reduce' → logprob: -3.074216604232788
    6. 'reduce' → logprob: -3.074216604232788
    7. 'y' → logprob: -3.324216604232788
    8. 'sum' → logprob: -3.574216604232788
    9. ' [' → logprob: -4.824216842651367
    10. '[' → logprob: -5.324216842651367

Token 23: '(m' (ID: 2145)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.6115797758102417
    2. '(m' → logprob: -1.1115797758102417
    3. '(' → logprob: -2.2365798950195312
    4. '(operator' → logprob: -3.8615798950195312
    5. '(mult' → logprob: -8.986579895019531
    6. ' (' → logprob: -8.986579895019531
    7. ')' → logprob: -9.736579895019531
    8. '(add' → logprob: -9.986579895019531
    9. '(mu' → logprob: -9.986579895019531
    10. '+' → logprob: -10.611579895019531

Token 24: 'ul' (ID: 361)
  Prédit: 'ul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ul' → logprob: -1.8624639324116288e-06
    2. '<ul' → logprob: -13.500001907348633
    3. 'u' → logprob: -15.250001907348633
    4. ' ul' → logprob: -16.000001907348633
    5. 'ул' → logprob: -17.500001907348633
    6. 'ultiply' → logprob: -17.875001907348633
    7. 'ult' → logprob: -18.625001907348633
    8. '.ul' → logprob: -18.750001907348633
    9. '_ul' → logprob: -18.875001907348633
    10. '-ul' → logprob: -19.125001907348633

Token 25: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13845786452293396
    2. '(lambda' → logprob: -2.263457775115967
    3. '(' → logprob: -5.013457775115967
    4. ' ,' → logprob: -5.138457775115967
    5. '(y' → logprob: -5.263457775115967
    6. ' y' → logprob: -6.638457775115967
    7. ',y' → logprob: -6.638457775115967
    8. 'y' → logprob: -7.013457775115967
    9. '(operator' → logprob: -7.013457775115967
    10. 'lambda' → logprob: -7.138457775115967

Token 26: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.11110983043909073
    2. 'y' → logprob: -2.611109733581543
    3. ' x' → logprob: -4.486109733581543
    4. 'x' → logprob: -4.611109733581543
    5. '(x' → logprob: -5.986109733581543
    6. '[' → logprob: -6.361109733581543
    7. '[y' → logprob: -6.361109733581543
    8. ' [' → logprob: -6.611109733581543
    9. '(y' → logprob: -6.861109733581543
    10. ')' → logprob: -7.111109733581543

Token 27: ',' (ID: 11)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.2638630270957947
    2. ',' → logprob: -2.0138630867004395
    3. ')' → logprob: -2.7638630867004395
    4. '(x' → logprob: -3.7638630867004395
    5. ')))' → logprob: -6.1388630867004395
    6. '))(' → logprob: -6.3888630867004395
    7. '(' → logprob: -6.5138630867004395
    8. '[' → logprob: -6.6388630867004395
    9. ',x' → logprob: -7.6388630867004395
    10. '),' → logprob: -7.8888630867004395

Token 28: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7003679871559143
    2. ' ' → logprob: -0.7003679871559143
    3. 'x' → logprob: -5.7003679275512695
    4. ' x' → logprob: -5.7003679275512695
    5. '2' → logprob: -8.70036792755127
    6. '  ' → logprob: -9.32536792755127
    7. '   ' → logprob: -10.07536792755127
    8. ')' → logprob: -10.20036792755127
    9. ' y' → logprob: -10.38786792755127
    10. '10' → logprob: -11.13786792755127

Token 29: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0041448804549872875
    2. 'x' → logprob: -5.879144668579102
    3. '2' → logprob: -7.004144668579102
    4. ' ' → logprob: -7.879144668579102
    5. ' x' → logprob: -11.754144668579102
    6. '10' → logprob: -12.191644668579102
    7. '   ' → logprob: -12.191644668579102
    8. 'y' → logprob: -12.441644668579102
    9. '3' → logprob: -12.566644668579102
    10. ')' → logprob: -12.691644668579102

Token 30: ')//' (ID: 60375)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.861445963382721
    2. '))' → logprob: -0.861445963382721
    3. '(x' → logprob: -2.111445903778076
    4. '(' → logprob: -4.736445903778076
    5. ',' → logprob: -4.986445903778076
    6. ' +' → logprob: -6.111445903778076
    7. '(y' → logprob: -6.236445903778076
    8. '[' → logprob: -6.361445903778076
    9. ')))' → logprob: -6.736445903778076
    10. '),' → logprob: -6.736445903778076

Token 31: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7445458173751831
    2. 'x' → logprob: -0.7445458173751831
    3. 'sum' → logprob: -3.9945459365844727
    4. ' x' → logprob: -4.119545936584473
    5. ' ' → logprob: -5.119545936584473
    6. 'len' → logprob: -6.244545936584473
    7. 'y' → logprob: -6.494545936584473
    8. ' sum' → logprob: -6.744545936584473
    9. 'reduce' → logprob: -7.244545936584473
    10. '(x' → logprob: -7.244545936584473

Token 32: ')(' (ID: 4898)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.5242385864257812
    2. ')' → logprob: -1.0242385864257812
    3. '(' → logprob: -4.024238586425781
    4. ')(' → logprob: -4.399238586425781
    5. '(y' → logprob: -5.274238586425781
    6. ' )' → logprob: -5.899238586425781
    7. '**' → logprob: -6.149238586425781
    8. ' +' → logprob: -6.274238586425781
    9. '+' → logprob: -6.774238586425781
    10. '[' → logprob: -6.899238586425781

Token 33: '[' (ID: 58)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.004374343901872635
    2. ' x' → logprob: -6.1293745040893555
    3. '[x' → logprob: -7.0043745040893555
    4. '(x' → logprob: -7.1293745040893555
    5. '[' → logprob: -8.254374504089355
    6. ' [' → logprob: -10.254374504089355
    7. '(' → logprob: -10.254374504089355
    8. ' (' → logprob: -10.504374504089355
    9. 'range' → logprob: -10.504374504089355
    10. ')' → logprob: -10.754374504089355

Token 34: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6393954753875732
    2. 'a' → logprob: -1.2643954753875732
    3. 'i' → logprob: -1.8893954753875732
    4. 'xi' → logprob: -4.514395713806152
    5. ' x' → logprob: -5.139395713806152
    6. '(x' → logprob: -5.139395713806152
    7. ' i' → logprob: -6.139395713806152
    8. ' a' → logprob: -6.139395713806152
    9. 'elem' → logprob: -6.264395713806152
    10. 'sum' → logprob: -6.514395713806152

Token 35: ',' (ID: 11)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5707299113273621
    2. ',' → logprob: -1.0707299709320068
    3. 'i' → logprob: -3.695729970932007
    4. '+' → logprob: -3.695729970932007
    5. '[' → logprob: -4.070729732513428
    6. ',i' → logprob: -5.070729732513428
    7. '+i' → logprob: -5.320729732513428
    8. ' ,' → logprob: -5.695729732513428
    9. '])' → logprob: -5.945729732513428
    10. '-' → logprob: -6.195729732513428

Token 36: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.38671639561653137
    2. 'x' → logprob: -1.261716365814209
    3. '2' → logprob: -3.636716365814209
    4. ' ' → logprob: -4.886716365814209
    5. '1' → logprob: -6.261716365814209
    6. '(x' → logprob: -7.386716365814209
    7. ' (' → logprob: -7.636716365814209
    8. '3' → logprob: -8.261716842651367
    9. '(' → logprob: -9.386716842651367
    10. '0' → logprob: -9.636716842651367

Token 37: '-' (ID: 12)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11206677556037903
    2. ' +' → logprob: -2.7370667457580566
    3. ',' → logprob: -3.2370667457580566
    4. ' ,' → logprob: -6.987066745758057
    5. '-' → logprob: -8.112067222595215
    6. '])' → logprob: -8.862067222595215
    7. '+x' → logprob: -8.987067222595215
    8. '[' → logprob: -9.487067222595215
    9. '+,' → logprob: -9.487067222595215
    10. ' ' → logprob: -9.487067222595215

Token 38: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008335703751072288
    2. ' ' → logprob: -7.125833511352539
    3. '2' → logprob: -10.750833511352539
    4. '3' → logprob: -13.375833511352539
    5. '4' → logprob: -13.375833511352539
    6. '   ' → logprob: -14.125833511352539
    7. '    ' → logprob: -14.250833511352539
    8. '0' → logprob: -14.375833511352539
    9. '5' → logprob: -14.375833511352539
    10. '<|end|>' → logprob: -14.500833511352539

Token 39: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0162299033254385
    2. ')' → logprob: -4.39123010635376
    3. ' ])' → logprob: -6.01623010635376
    4. ',' → logprob: -7.14123010635376
    5. ']' → logprob: -8.891229629516602
    6. ')])' → logprob: -9.266229629516602
    7. ' )' → logprob: -9.641229629516602
    8. '))' → logprob: -10.391229629516602
    9. '   ' → logprob: -10.391229629516602
    10. '})' → logprob: -10.641229629516602

Token 40: 'n' (ID: 77)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.035034485161304474
    2. '<|end|>' → logprob: -3.785034418106079
    3. '(' → logprob: -5.035034656524658
    4. ':' → logprob: -6.535034656524658
    5. '*' → logprob: -7.035034656524658
    6. '
' → logprob: -7.535034656524658
    7. '\n' → logprob: -7.535034656524658
    8. '[' → logprob: -8.2850341796875
    9. '+' → logprob: -8.5350341796875
    10. ',' → logprob: -8.6600341796875

Token 41: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1946093589067459
    2. ' =' → logprob: -1.9446094036102295
    3. '<|end|>' → logprob: -4.44460916519165
    4. '=' → logprob: -4.81960916519165
    5. '+' → logprob: -5.81960916519165
    6. '  ' → logprob: -5.94460916519165
    7. ')' → logprob: -6.44460916519165
    8. 's' → logprob: -7.31960916519165
    9. 'u' → logprob: -7.44460916519165
    10. ' ,' → logprob: -7.69460916519165

Token 42: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.0578739643096924
    2. 'k' → logprob: -1.5578739643096924
    3. ' k' → logprob: -1.6828739643096924
    4. ' m' → logprob: -2.1828739643096924
    5. 'x' → logprob: -3.0578739643096924
    6. '=' → logprob: -3.9328739643096924
    7. ' =' → logprob: -4.057873725891113
    8. ' ' → logprob: -4.432873725891113
    9. 'n' → logprob: -4.557873725891113
    10. 'a' → logprob: -4.557873725891113

Token 43: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.017084211111068726
    2. '=' → logprob: -4.142084121704102
    3. ',' → logprob: -7.017084121704102
    4. ' ' → logprob: -10.017084121704102
    5. ' ,' → logprob: -10.267084121704102
    6. '<|end|>' → logprob: -10.267084121704102
    7. ')' → logprob: -10.517084121704102
    8. '<|end|>' → logprob: -12.767084121704102
    9. '  ' → logprob: -13.642084121704102
    10. '[' → logprob: -14.267084121704102

Token 44: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.6566136479377747
    2. 'map' → logprob: -1.1566135883331299
    3. ' ' → logprob: -2.53161358833313
    4. '10' → logprob: -2.78161358833313
    5. '5' → logprob: -4.656613826751709
    6. 'input' → logprob: -5.406613826751709
    7. ' input' → logprob: -5.531613826751709
    8. 'int' → logprob: -6.156613826751709
    9. ' int' → logprob: -7.031613826751709
    10. '100' → logprob: -7.156613826751709

Token 45: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0008560742135159671
    2. '(' → logprob: -7.500855922698975
    3. 'int' → logprob: -8.750856399536133
    4. '(input' → logprob: -9.375856399536133
    5. '[int' → logprob: -10.625856399536133
    6. '(lambda' → logprob: -11.625856399536133
    7. '(str' → logprob: -11.875856399536133
    8. '<|end|>' → logprob: -11.875856399536133
    9. '<int' → logprob: -12.000856399536133
    10. 'input' → logprob: -12.875856399536133

Token 46: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2044180929660797
    2. ',input' → logprob: -1.7044180631637573
    3. '(input' → logprob: -6.329418182373047
    4. 'input' → logprob: -6.954418182373047
    5. '(' → logprob: -8.954418182373047
    6. ' ,' → logprob: -10.079418182373047
    7. ' input' → logprob: -10.454418182373047
    8. '(),' → logprob: -10.829418182373047
    9. ')' → logprob: -11.204418182373047
    10. ',int' → logprob: -11.454418182373047

Token 47: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2014756053686142
    2. ' input' → logprob: -1.7014756202697754
    3. '(input' → logprob: -9.951475143432617
    4. ' ' → logprob: -12.326475143432617
    5. ')' → logprob: -12.951475143432617
    6. ',input' → logprob: -13.076475143432617
    7. '=input' → logprob: -13.326475143432617
    8. 'str' → logprob: -13.701475143432617
    9. '	input' → logprob: -13.826475143432617
    10. '```' → logprob: -14.451475143432617

Token 48: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0008366696420125663
    2. '()' → logprob: -7.6258368492126465
    3. '())' → logprob: -8.000836372375488
    4. '(' → logprob: -12.125836372375488
    5. ')' → logprob: -13.250836372375488
    6. '());' → logprob: -13.500836372375488
    7. '()>' → logprob: -14.250836372375488
    8. '()`' → logprob: -14.500836372375488
    9. '()).' → logprob: -14.750836372375488
    10. '()
' → logprob: -15.000836372375488

Token 49: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0003391574718989432
    2. 'strip' → logprob: -8.00033950805664
    3. ' split' → logprob: -13.00033950805664
    4. 'rstrip' → logprob: -14.12533950805664
    5. ')' → logprob: -14.62533950805664
    6. '(split' → logprob: -16.37533950805664
    7. ' ' → logprob: -16.50033950805664
    8. 'spl' → logprob: -16.87533950805664
    9. 'read' → logprob: -17.12533950805664
    10. 'replace' → logprob: -18.25033950805664

Token 50: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20008666813373566
    2. '())' → logprob: -2.2000865936279297
    3. '))' → logprob: -2.7000865936279297
    4. '()' → logprob: -6.20008659362793
    5. '()))' → logprob: -6.70008659362793
    6. ')))' → logprob: -10.70008659362793
    7. '),' → logprob: -11.45008659362793
    8. '(' → logprob: -11.45008659362793
    9. ')")' → logprob: -11.95008659362793
    10. '`)' → logprob: -12.45008659362793

Token 51: 'res' (ID: 430)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.33693674206733704
    2. 'pairs' → logprob: -2.0869367122650146
    3. 'for' → logprob: -2.9619367122650146
    4. 'factor' → logprob: -3.7119367122650146
    5. 'total' → logprob: -4.461936950683594
    6. 'answer' → logprob: -4.586936950683594
    7. 'print' → logprob: -4.711936950683594
    8. 'a' → logprob: -4.836936950683594
    9. 'res' → logprob: -4.836936950683594
    10. 'k' → logprob: -5.086936950683594

Token 52: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2974534034729004
    2. '=' → logprob: -1.6724534034729004
    3. 'ult' → logprob: -2.7974534034729004
    4. 'ults' → logprob: -5.4224534034729
    5. 'ul' → logprob: -6.6724534034729
    6. 'u' → logprob: -6.7974534034729
    7. 'ultat' → logprob: -7.5474534034729
    8. 'ault' → logprob: -8.297452926635742
    9. 's' → logprob: -8.422452926635742
    10. 'olt' → logprob: -8.547452926635742

Token 53: ' (
' (ID: 4112)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.19952106475830078
    2. ' pair' → logprob: -2.199521064758301
    3. '(pair' → logprob: -2.949521064758301
    4. 'sum' → logprob: -5.699521064758301
    5. 'min' → logprob: -6.324521064758301
    6. ' (' → logprob: -6.324521064758301
    7. 'pow' → logprob: -6.324521064758301
    8. 'n' → logprob: -6.449521064758301
    9. ' n' → logprob: -6.699521064758301
    10. ' sum' → logprob: -6.699521064758301

Token 54: '   ' (ID: 271)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.0835547149181366
    2. 'reduce' → logprob: -3.208554744720459
    3. '(pair' → logprob: -4.208554744720459
    4. ' pair' → logprob: -4.958554744720459
    5. 'sum' → logprob: -5.083554744720459
    6. 'n' → logprob: -5.458554744720459
    7. 'pow' → logprob: -6.708554744720459
    8. '   ' → logprob: -6.708554744720459
    9. 'min' → logprob: -6.958554744720459
    10. '(n' → logprob: -7.333554744720459

Token 55: ' ' (ID: 220)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.11512943357229233
    2. 'n' → logprob: -3.8651294708251953
    3. 'sum' → logprob: -3.9901294708251953
    4. '(pair' → logprob: -3.9901294708251953
    5. 'reduce' → logprob: -4.240129470825195
    6. 'pow' → logprob: -4.240129470825195
    7. ' pair' → logprob: -4.740129470825195
    8. '(n' → logprob: -5.740129470825195
    9. 'min' → logprob: -6.615129470825195
    10. ' n' → logprob: -6.865129470825195

Token 56: '0' (ID: 15)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.20954862236976624
    2. ' pair' → logprob: -2.7095487117767334
    3. '(pair' → logprob: -3.3345487117767334
    4. 'reduce' → logprob: -3.4595487117767334
    5. 'n' → logprob: -4.459548473358154
    6. 'pow' → logprob: -4.459548473358154
    7. 'sum' → logprob: -4.959548473358154
    8. ' n' → logprob: -5.209548473358154
    9. '(n' → logprob: -5.584548473358154
    10. ' (' → logprob: -5.959548473358154

Token 57: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6418454051017761
    2. '+' → logprob: -1.641845464706421
    3. ',' → logprob: -2.516845464706421
    4. ' if' → logprob: -2.766845464706421
    5. ' )' → logprob: -3.016845464706421
    6. ' +' → logprob: -3.391845464706421
    7. 'if' → logprob: -3.891845464706421
    8. '
' → logprob: -4.266845226287842
    9. 'for' → logprob: -5.141845226287842
    10. ' for' → logprob: -5.516845226287842

Token 58: ' all' (ID: 722)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.9058845639228821
    2. ' m' → logprob: -1.2808845043182373
    3. ' n' → logprob: -1.7808845043182373
    4. 'n' → logprob: -1.9058845043182373
    5. 'min' → logprob: -8.905884742736816
    6. ' min' → logprob: -9.155884742736816
    7. ' ' → logprob: -9.155884742736816
    8. '(n' → logprob: -9.155884742736816
    9. '   ' → logprob: -9.530884742736816
    10. ' not' → logprob: -9.530884742736816

Token 59: '([' (ID: 5194)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.49787437915802
    2. '(x' → logprob: -1.49787437915802
    3. '([' → logprob: -1.62287437915802
    4. '((' → logprob: -2.8728742599487305
    5. '(a' → logprob: -2.8728742599487305
    6. '(v' → logprob: -2.9978742599487305
    7. '(not' → logprob: -2.9978742599487305
    8. '(' → logprob: -3.4978742599487305
    9. '(val' → logprob: -3.6228742599487305
    10. '(n' → logprob: -3.7478742599487305

Token 60: 'n' (ID: 77)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6978899836540222
    2. 'n' → logprob: -1.447890043258667
    3. 'i' → logprob: -2.697890043258667
    4. 'a' → logprob: -2.947890043258667
    5. 'v' → logprob: -3.697890043258667
    6. 'm' → logprob: -3.947890043258667
    7. 'not' → logprob: -3.947890043258667
    8. '   ' → logprob: -4.197889804840088
    9. 'c' → logprob: -5.072889804840088
    10. '[' → logprob: -5.197889804840088

Token 61: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.8081936836242676
    2. ' %' → logprob: -2.1831936836242676
    3. ',' → logprob: -2.3081936836242676
    4. '==' → logprob: -2.3081936836242676
    5. ' <=' → logprob: -2.3081936836242676
    6. ' >' → logprob: -3.1831936836242676
    7. ' ,' → logprob: -3.4331936836242676
    8. '%' → logprob: -3.9331936836242676
    9. ' <' → logprob: -4.308193683624268
    10. ' ' → logprob: -4.308193683624268

Token 62: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3194921016693115
    2. ' ' → logprob: -2.0694921016693115
    3. '1' → logprob: -2.6944921016693115
    4. 'm' → logprob: -2.8194921016693115
    5. ' m' → logprob: -3.9444921016693115
    6. '   ' → logprob: -8.19449234008789
    7. 'n' → logprob: -9.69449234008789
    8. '    ' → logprob: -9.75699234008789
    9. '  ' → logprob: -9.81949234008789
    10. ' n' → logprob: -10.00699234008789

Token 63: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2059820145368576
    2. 'm' → logprob: -2.080981969833374
    3. '1' → logprob: -2.830981969833374
    4. ' ' → logprob: -6.455982208251953
    5. ' m' → logprob: -8.330982208251953
    6. '   ' → logprob: -8.830982208251953
    7. 'n' → logprob: -9.080982208251953
    8. 'x' → logprob: -10.205982208251953
    9. '  ' → logprob: -10.268482208251953
    10. '2' → logprob: -10.830982208251953

Token 64: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005530900321900845
    2. ',m' → logprob: -5.755530834197998
    3. ' ,' → logprob: -6.380530834197998
    4. ',
' → logprob: -7.630530834197998
    5. ',n' → logprob: -9.380531311035156
    6. ',

' → logprob: -10.505531311035156
    7. '   ' → logprob: -11.630531311035156
    8. 'm' → logprob: -11.880531311035156
    9. ' or' → logprob: -12.005531311035156
    10. ',x' → logprob: -13.005531311035156

Token 65: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.6362622380256653
    2. 'm' → logprob: -0.7612622380256653
    3. '   ' → logprob: -5.7612624168396
    4. ' n' → logprob: -9.136261940002441
    5. '    ' → logprob: -9.261261940002441
    6. ' ' → logprob: -9.261261940002441
    7. 'n' → logprob: -9.511261940002441
    8. '  ' → logprob: -10.261261940002441
    9. '       ' → logprob: -10.636261940002441
    10. '1' → logprob: -11.386261940002441

Token 66: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.20167703926563263
    2. '==' → logprob: -1.7016770839691162
    3. ' ' → logprob: -9.201677322387695
    4. ' <=' → logprob: -10.326677322387695
    5. ' >' → logprob: -10.576677322387695
    6. '  ' → logprob: -10.951677322387695
    7. '   ' → logprob: -11.076677322387695
    8. '>' → logprob: -11.326677322387695
    9. '=' → logprob: -11.701677322387695
    10. ' !=' → logprob: -11.701677322387695

Token 67: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014540718868374825
    2. ' ' → logprob: -4.264540672302246
    3. '   ' → logprob: -8.389540672302246
    4. '  ' → logprob: -9.389540672302246
    5. '0' → logprob: -10.639540672302246
    6. '    ' → logprob: -11.014540672302246
    7. '2' → logprob: -11.639540672302246
    8. 'n' → logprob: -13.389540672302246
    9. '     ' → logprob: -13.452040672302246
    10. '<|end|>' → logprob: -13.702040672302246

Token 68: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009931975975632668
    2. ' ' → logprob: -4.634932041168213
    3. '   ' → logprob: -9.634931564331055
    4. '  ' → logprob: -9.884931564331055
    5. '0' → logprob: -10.509931564331055
    6. '2' → logprob: -11.697431564331055
    7. '    ' → logprob: -12.197431564331055
    8. 'n' → logprob: -12.572431564331055
    9. 'm' → logprob: -12.822431564331055
    10. '     ' → logprob: -13.447431564331055

Token 69: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.012805456295609474
    2. '])
' → logprob: -4.387805461883545
    3. ' ])' → logprob: -9.512804985046387
    4. ')' → logprob: -9.762804985046387
    5. '])
' → logprob: -9.762804985046387
    6. '   ' → logprob: -10.637804985046387
    7. ',' → logprob: -10.637804985046387
    8. ')])' → logprob: -11.637804985046387
    9. '])

' → logprob: -11.762804985046387
    10. '       ' → logprob: -12.137804985046387

Token 70: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.12992604076862335
    2. 'else' → logprob: -2.1299259662628174
    3. '   ' → logprob: -6.3799262046813965
    4. ')' → logprob: -7.5049262046813965
    5. '    ' → logprob: -7.8799262046813965
    6. '  ' → logprob: -9.254925727844238
    7. ' ' → logprob: -9.504925727844238
    8. ' or' → logprob: -9.629925727844238
    9. '        ' → logprob: -10.504925727844238
    10. '
' → logprob: -10.879925727844238

Token 71: '
' (ID: 198)
  Prédit: ' pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pair' → logprob: -0.20177212357521057
    2. 'pair' → logprob: -2.5767722129821777
    3. ' (' → logprob: -3.4517722129821777
    4. '   ' → logprob: -3.5767722129821777
    5. ' n' → logprob: -4.326772212982178
    6. '(pair' → logprob: -4.951772212982178
    7. ' sum' → logprob: -5.076772212982178
    8. ' min' → logprob: -5.451772212982178
    9. 'n' → logprob: -5.826772212982178
    10. ' ' → logprob: -5.951772212982178

Token 72: '   ' (ID: 271)
  Prédit: ' pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pair' → logprob: -0.90028315782547
    2. 'pair' → logprob: -1.0252830982208252
    3. '   ' → logprob: -2.275283098220825
    4. ' n' → logprob: -3.525283098220825
    5. ' (' → logprob: -3.650283098220825
    6. ' min' → logprob: -4.400283336639404
    7. '(pair' → logprob: -4.400283336639404
    8. 'n' → logprob: -4.525283336639404
    9. 'min' → logprob: -4.525283336639404
    10. ' max' → logprob: -5.400283336639404

Token 73: ' pair' (ID: 10610)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' (adapté à ' pair') → logprob: -0.3196747303009033
    2. ' pair' → logprob: -1.9446747303009033
    3. '(pair' → logprob: -3.3196747303009033
    4. 'n' → logprob: -4.194674491882324
    5. '   ' → logprob: -4.319674491882324
    6. ' n' → logprob: -4.569674491882324
    7. 'min' → logprob: -4.569674491882324
    8. 'sum' → logprob: -4.944674491882324
    9. '(n' → logprob: -5.069674491882324
    10. ' (' → logprob: -5.444674491882324

Token 74: 'wise' (ID: 7480)
  Prédit: 'wise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wise' → logprob: -1.652451464906335e-05
    2. '-wise' → logprob: -11.750016212463379
    3. 'w' → logprob: -12.375016212463379
    4. 'ise' → logprob: -13.625016212463379
    5. '```' → logprob: -14.250016212463379
    6. 'weise' → logprob: -14.250016212463379
    7. 'wide' → logprob: -14.375016212463379
    8. 'ewise' → logprob: -15.000016212463379
    9. ' wise' → logprob: -15.250016212463379
    10. '   ' → logprob: -16.375017166137695

Token 75: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.2664456789934775e-06
    2. 'sum' → logprob: -14.625000953674316
    3. '_mul' → logprob: -14.750000953674316
    4. '_' → logprob: -15.500000953674316
    5. ' _' → logprob: -16.000001907348633
    6. '_s' → logprob: -16.000001907348633
    7. '_product' → logprob: -18.250001907348633
    8. ' sum' → logprob: -18.875001907348633
    9. '_pair' → logprob: -19.250001907348633
    10. '_m' → logprob: -19.375001907348633

Token 76: '(m' (ID: 2145)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.03237675875425339
    2. '(m' → logprob: -4.157376766204834
    3. '(min' → logprob: -5.032376766204834
    4. '(max' → logprob: -5.282376766204834
    5. '(' → logprob: -5.407376766204834
    6. ')(' → logprob: -10.032376289367676
    7. '((' → logprob: -10.157376289367676
    8. '(abs' → logprob: -11.032376289367676
    9. '(int' → logprob: -11.782376289367676
    10. ' (' → logprob: -12.907376289367676

Token 77: ')*(' (ID: 44406)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011193300597369671
    2. ' )' → logprob: -5.38619327545166
    3. ')*' → logprob: -6.51119327545166
    4. '+' → logprob: -6.76119327545166
    5. '-' → logprob: -7.13619327545166
    6. '))' → logprob: -7.38619327545166
    7. '   ' → logprob: -8.01119327545166
    8. ')
' → logprob: -8.01119327545166
    9. ' +' → logprob: -8.01119327545166
    10. ' -' → logprob: -8.38619327545166

Token 78: 'n' (ID: 77)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.4030012786388397
    2. 'n' → logprob: -1.153001308441162
    3. ' pair' → logprob: -4.403001308441162
    4. ' n' → logprob: -6.528001308441162
    5. '(pair' → logprob: -6.778001308441162
    6. '(n' → logprob: -7.528001308441162
    7. '   ' → logprob: -8.153000831604004
    8. '    ' → logprob: -9.653000831604004
    9. 'm' → logprob: -9.653000831604004
    10. ' ' → logprob: -10.278000831604004

Token 79: ' ==' (ID: 951)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.057553425431251526
    2. ' -' → logprob: -2.93255352973938
    3. ')' → logprob: -6.057553291320801
    4. '+' → logprob: -9.3075532913208
    5. '<|end|>' → logprob: -9.3075532913208
    6. '-)' → logprob: -10.0575532913208
    7. ' ' → logprob: -10.8075532913208
    8. ' )' → logprob: -11.0575532913208
    9. '*' → logprob: -11.5575532913208
    10. ')-' → logprob: -11.6825532913208

Token 80: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04413678124547005
    2. '2' → logprob: -3.1691367626190186
    3. ' ' → logprob: -7.294137001037598
    4. '0' → logprob: -8.544137001037598
    5. '3' → logprob: -8.919137001037598
    6. 'm' → logprob: -9.544137001037598
    7. ')' → logprob: -10.794137001037598
    8. '   ' → logprob: -11.419137001037598
    9. 'n' → logprob: -12.419137001037598
    10. '4' → logprob: -12.481637001037598

Token 81: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02369297854602337
    2. '2' → logprob: -3.773693084716797
    3. ' ' → logprob: -8.398693084716797
    4. 'm' → logprob: -9.398693084716797
    5. '0' → logprob: -9.523693084716797
    6. '3' → logprob: -11.023693084716797
    7. '   ' → logprob: -11.273693084716797
    8. 'n' → logprob: -11.461193084716797
    9. ')' → logprob: -11.898693084716797
    10. '  ' → logprob: -12.398693084716797

Token 82: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.037427324801683426
    2. ' else' → logprob: -4.5374274253845215
    3. ' or' → logprob: -5.0374274253845215
    4. '-' → logprob: -5.4124274253845215
    5. ' )' → logprob: -5.5374274253845215
    6. '+' → logprob: -6.0374274253845215
    7. ')+' → logprob: -6.2874274253845215
    8. 'else' → logprob: -6.4124274253845215
    9. '   ' → logprob: -6.6624274253845215
    10. ' ' → logprob: -6.7874274253845215

Token 83: ' +
' (ID: 6119)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2956187427043915
    2. 'else' → logprob: -2.295618772506714
    3. ' +' → logprob: -2.420618772506714
    4. ' else' → logprob: -3.045618772506714
    5. ')' → logprob: -4.545618534088135
    6. '   ' → logprob: -5.295618534088135
    7. '+
' → logprob: -7.170618534088135
    8. ' or' → logprob: -7.420618534088135
    9. ' +
' → logprob: -8.045619010925293
    10. ')+' → logprob: -8.045619010925293

Token 84: '   ' (ID: 271)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.028631731867790222
    2. ' pair' → logprob: -3.7786316871643066
    3. '   ' → logprob: -5.278631687164307
    4. '(pair' → logprob: -8.778632164001465
    5. '  ' → logprob: -9.903632164001465
    6. ' ' → logprob: -10.653632164001465
    7. '    ' → logprob: -11.278632164001465
    8. 'm' → logprob: -11.653632164001465
    9. 'n' → logprob: -12.028632164001465
    10. '2' → logprob: -12.153632164001465

Token 85: ' pair' (ID: 10610)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' (adapté à ' pair') → logprob: -0.0943458154797554
    2. ' pair' → logprob: -2.594345808029175
    3. '   ' → logprob: -4.219346046447754
    4. '(pair' → logprob: -8.344346046447754
    5. '  ' → logprob: -8.719346046447754
    6. ' ' → logprob: -9.719346046447754
    7. '    ' → logprob: -10.219346046447754
    8. 'm' → logprob: -10.344346046447754
    9. '2' → logprob: -10.719346046447754
    10. 'n' → logprob: -10.844346046447754

Token 86: 'wise' (ID: 7480)
  Prédit: 'wise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wise' → logprob: -0.0001552665780764073
    2. 'w' → logprob: -8.875155448913574
    3. 'wis' → logprob: -12.625155448913574
    4. 'ise' → logprob: -12.750155448913574
    5. '-wise' → logprob: -13.625155448913574
    6. 'weise' → logprob: -13.750155448913574
    7. '   ' → logprob: -14.000155448913574
    8. '```' → logprob: -14.000155448913574
    9. 'wi' → logprob: -14.250155448913574
    10. 'way' → logprob: -14.375155448913574

Token 87: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.009843088686466217
    2. 'sum' → logprob: -4.634842872619629
    3. '_s' → logprob: -10.884842872619629
    4. '_' → logprob: -11.759842872619629
    5. 'w' → logprob: -11.759842872619629
    6. 'e' → logprob: -11.884842872619629
    7. '_split' → logprob: -12.509842872619629
    8. 'wise' → logprob: -12.509842872619629
    9. '_view' → logprob: -12.634842872619629
    10. 's' → logprob: -13.009842872619629

Token 88: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.91732100979425e-05
    2. '(' → logprob: -10.250039100646973
    3. '(m' → logprob: -12.750039100646973
    4. 'n' → logprob: -15.125039100646973
    5. ' (' → logprob: -15.500039100646973
    6. ')(' → logprob: -15.750039100646973
    7. '(s' → logprob: -17.00004005432129
    8. '((' → logprob: -17.12504005432129
    9. ')' → logprob: -18.12504005432129
    10. '(x' → logprob: -18.75004005432129

Token 89: ')*(' (ID: 44406)
  Prédit: ')*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*(' → logprob: -0.016330884769558907
    2. ')*' → logprob: -4.766330718994141
    3. ')' → logprob: -4.891330718994141
    4. '-' → logprob: -9.76633071899414
    5. ' )' → logprob: -10.01633071899414
    6. ')(' → logprob: -11.14133071899414
    7. '*(' → logprob: -11.26633071899414
    8. ' -' → logprob: -11.64133071899414
    9. ' ' → logprob: -12.01633071899414
    10. ']*(' → logprob: -12.01633071899414

Token 90: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0041188886389136314
    2. ' m' → logprob: -6.004118919372559
    3. '   ' → logprob: -6.504118919372559
    4. '(m' → logprob: -9.379118919372559
    5. '1' → logprob: -10.379118919372559
    6. '  ' → logprob: -11.754118919372559
    7. '    ' → logprob: -12.254118919372559
    8. ' ' → logprob: -12.629118919372559
    9. ' (' → logprob: -13.129118919372559
    10. '	m' → logprob: -13.754118919372559

Token 91: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3962833881378174
    2. ' ==' → logprob: -1.1462833881378174
    3. '>' → logprob: -5.021283149719238
    4. ' >' → logprob: -6.021283149719238
    5. ' ' → logprob: -9.146283149719238
    6. '1' → logprob: -9.521283149719238
    7. '   ' → logprob: -10.146283149719238
    8. ' !=' → logprob: -10.271283149719238
    9. ')' → logprob: -10.646283149719238
    10. '-' → logprob: -10.896283149719238

Token 92: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010752035304903984
    2. ' ' → logprob: -7.126075267791748
    3. '   ' → logprob: -8.25107479095459
    4. ')' → logprob: -13.06357479095459
    5. '2' → logprob: -13.06357479095459
    6. '  ' → logprob: -13.31357479095459
    7. '0' → logprob: -14.00107479095459
    8. '```' → logprob: -14.31357479095459
    9. '    ' → logprob: -14.62607479095459
    10. '       ' → logprob: -15.62607479095459

Token 93: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.672236824873835e-05
    2. ' ' → logprob: -9.625076293945312
    3. '   ' → logprob: -12.000076293945312
    4. '2' → logprob: -13.375076293945312
    5. '0' → logprob: -13.500076293945312
    6. ')' → logprob: -14.125076293945312
    7. '  ' → logprob: -15.125076293945312
    8. '```' → logprob: -15.750076293945312
    9. '       ' → logprob: -17.187576293945312
    10. '１' → logprob: -17.250076293945312

Token 94: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009446164593100548
    2. '))' → logprob: -5.009446144104004
    3. ')+' → logprob: -6.509446144104004
    4. ' )' → logprob: -7.509446144104004
    5. '+' → logprob: -8.134446144104004
    6. '   ' → logprob: -9.009446144104004
    7. ')))' → logprob: -9.509446144104004
    8. ' ' → logprob: -10.134446144104004
    9. ')
' → logprob: -10.384446144104004
    10. '+)' → logprob: -10.509446144104004

Token 95: ' +
' (ID: 6119)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20420750975608826
    2. ' +' → logprob: -2.079207420349121
    3. ')' → logprob: -3.079207420349121
    4. '   ' → logprob: -5.329207420349121
    5. ' +
' → logprob: -5.704207420349121
    6. '+
' → logprob: -5.829207420349121
    7. '+)' → logprob: -7.079207420349121
    8. ')+' → logprob: -7.079207420349121
    9. ' )' → logprob: -8.454207420349121
    10. ' else' → logprob: -8.454207420349121

Token 96: '   ' (ID: 271)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.48039954900741577
    2. ' pair' → logprob: -1.2303996086120605
    3. '   ' → logprob: -3.1053996086120605
    4. '(pair' → logprob: -3.9803996086120605
    5. ' (' → logprob: -4.2303996086120605
    6. '0' → logprob: -5.7303996086120605
    7. ' ' → logprob: -6.3553996086120605
    8. '(' → logprob: -6.8553996086120605
    9. '(m' → logprob: -6.9803996086120605
    10. '2' → logprob: -7.1053996086120605

Token 97: ' ((' (ID: 3536)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.3326871395111084
    2. ' pair' → logprob: -1.4576871395111084
    3. '(pair' → logprob: -3.8326871395111084
    4. ' (' → logprob: -4.4576873779296875
    5. '(m' → logprob: -5.4576873779296875
    6. '2' → logprob: -6.0826873779296875
    7. '(n' → logprob: -6.3326873779296875
    8. '((' (adapté à ' ((') → logprob: -6.4576873779296875
    9. '0' → logprob: -6.7076873779296875
    10. 'm' → logprob: -6.9576873779296875

Token 98: 'pair' (ID: 25488)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5136879682540894
    2. 'pair' → logprob: -1.6386879682540894
    3. 'm' → logprob: -1.8886879682540894
    4. '(n' → logprob: -3.888688087463379
    5. '(m' → logprob: -4.263688087463379
    6. 'max' → logprob: -4.763688087463379
    7. '(pair' → logprob: -5.763688087463379
    8. ' pair' → logprob: -5.763688087463379
    9. ' n' → logprob: -6.138688087463379
    10. '   ' → logprob: -7.138688087463379

Token 99: 'wise' (ID: 7480)
  Prédit: 'wise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wise' → logprob: -8.923874702304602e-05
    2. 'w' → logprob: -9.625089645385742
    3. ')' → logprob: -11.875089645385742
    4. 'weise' → logprob: -12.500089645385742
    5. 'pair' → logprob: -12.750089645385742
    6. '-wise' → logprob: -13.125089645385742
    7. 'way' → logprob: -14.000089645385742
    8. 'wire' → logprob: -14.000089645385742
    9. '   ' → logprob: -14.375089645385742
    10. 'ewise' → logprob: -14.625089645385742

Token 100: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.001061867456883192
    2. 'sum' → logprob: -6.876061916351318
    3. '_mul' → logprob: -11.00106143951416
    4. '_s' → logprob: -13.00106143951416
    5. ' sum' → logprob: -13.00106143951416
    6. 'mul' → logprob: -13.75106143951416
    7. ')' → logprob: -13.75106143951416
    8. 'Sum' → logprob: -14.25106143951416
    9. '_pair' → logprob: -14.25106143951416
    10. 'a' → logprob: -14.50106143951416

Token 101: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.16045372188091278
    2. '(m' → logprob: -1.9104536771774292
    3. '(' → logprob: -9.660453796386719
    4. 'n' → logprob: -9.785453796386719
    5. '(max' → logprob: -10.035453796386719
    6. '((' → logprob: -10.660453796386719
    7. '(min' → logprob: -11.160453796386719
    8. 'm' → logprob: -11.285453796386719
    9. '(x' → logprob: -12.535453796386719
    10. '(abs' → logprob: -12.910453796386719

Token 102: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4180299937725067
    2. ')*' → logprob: -1.918030023574829
    3. '-' → logprob: -2.043030023574829
    4. ' -' → logprob: -3.543030023574829
    5. ')-' → logprob: -3.668030023574829
    6. ')*(' → logprob: -5.79302978515625
    7. ' )' → logprob: -6.04302978515625
    8. ' ' → logprob: -6.16802978515625
    9. '   ' → logprob: -7.16802978515625
    10. ')+' → logprob: -7.41802978515625

Token 103: ' +' (ID: 659)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.9359365105628967
    2. '*' → logprob: -1.310936450958252
    3. ' -' → logprob: -2.185936450958252
    4. '-' → logprob: -2.310936450958252
    5. ')*(' → logprob: -2.810936450958252
    6. ')*' → logprob: -3.685936450958252
    7. ')' → logprob: -3.810936450958252
    8. '*)' → logprob: -5.685936450958252
    9. '*(' → logprob: -5.810936450958252
    10. ' )' → logprob: -6.185936450958252

Token 104: ' pair' (ID: 10610)
  Prédit: ' pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pair' → logprob: -0.14297236502170563
    2. 'pair' → logprob: -2.017972469329834
    3. '1' → logprob: -8.767971992492676
    4. '(pair' → logprob: -9.767971992492676
    5. '    ' → logprob: -10.517971992492676
    6. '   ' → logprob: -11.267971992492676
    7. '            ' → logprob: -11.642971992492676
    8. '           ' → logprob: -11.767971992492676
    9. ' ' → logprob: -11.892971992492676
    10. '2' → logprob: -12.892971992492676

Token 105: 'wise' (ID: 7480)
  Prédit: 'wise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wise' → logprob: -1.282920129597187e-05
    2. 'w' → logprob: -11.500012397766113
    3. 'sum' → logprob: -14.000012397766113
    4. 'ise' → logprob: -14.125012397766113
    5. 'wire' → logprob: -14.500012397766113
    6. 'weise' → logprob: -16.75001335144043
    7. '-wise' → logprob: -17.12501335144043
    8. 'wis' → logprob: -17.25001335144043
    9. 'ws' → logprob: -17.25001335144043
    10. 'se' → logprob: -17.37501335144043

Token 106: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0067778960801661015
    2. 'sum' → logprob: -5.006777763366699
    3. 'm' → logprob: -10.0067777633667
    4. 'Sum' → logprob: -12.0067777633667
    5. 'um' → logprob: -12.2567777633667
    6. 'n' → logprob: -14.0067777633667
    7. ' sum' → logprob: -14.0067777633667
    8. ')' → logprob: -14.2567777633667
    9. '(m' → logprob: -14.3817777633667
    10. 'mul' → logprob: -14.5067777633667

Token 107: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -8.268254896393046e-05
    2. 'm' → logprob: -10.250082969665527
    3. ' (' → logprob: -10.250082969665527
    4. '(' → logprob: -11.625082969665527
    5. '   ' → logprob: -13.500082969665527
    6. '((' → logprob: -14.750082969665527
    7. ')(' → logprob: -15.250082969665527
    8. 'def' → logprob: -16.12508201599121
    9. '[m' → logprob: -16.25008201599121
    10. '    ' → logprob: -16.37508201599121

Token 108: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7238672375679016
    2. '-' → logprob: -0.9738672375679016
    3. ' -' → logprob: -2.098867177963257
    4. ')-' → logprob: -4.598867416381836
    5. ' )' → logprob: -6.223867416381836
    6. '   ' → logprob: -6.723867416381836
    7. ' ' → logprob: -7.098867416381836
    8. ')*' → logprob: -8.348867416381836
    9. '  ' → logprob: -8.848867416381836
    10. '()' → logprob: -9.598867416381836

Token 109: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.9446365237236023
    2. '-' → logprob: -1.069636583328247
    3. ' -' → logprob: -1.444636583328247
    4. ')' → logprob: -4.694636344909668
    5. ' *' → logprob: -4.694636344909668
    6. '+' → logprob: -5.194636344909668
    7. '   ' → logprob: -6.319636344909668
    8. '*(' → logprob: -6.319636344909668
    9. ')*' → logprob: -6.444636344909668
    10. ' +' → logprob: -6.819636344909668

Token 110: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5327035188674927
    2. '((' → logprob: -1.5327035188674927
    3. ' (' → logprob: -1.7827035188674927
    4. ' ((' → logprob: -4.157703399658203
    5. '(max' → logprob: -6.032703399658203
    6. '2' → logprob: -6.407703399658203
    7. '   ' → logprob: -6.532703399658203
    8. ' ' → logprob: -6.532703399658203
    9. '(m' → logprob: -6.782703399658203
    10. '    ' → logprob: -6.782703399658203

Token 111: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.4994395971298218
    2. ' (' → logprob: -1.2494395971298218
    3. '((' → logprob: -2.7494397163391113
    4. ' ((' → logprob: -3.9994397163391113
    5. '(m' → logprob: -5.124439716339111
    6. 'n' → logprob: -5.249439716339111
    7. ' n' → logprob: -5.874439716339111
    8. '   ' → logprob: -5.874439716339111
    9. '1' → logprob: -6.624439716339111
    10. '(' → logprob: -6.624439716339111

Token 112: ' !=' (ID: 1666)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.4983266294002533
    2. '>' → logprob: -0.9983266592025757
    3. '-' → logprob: -4.373326778411865
    4. ' -' → logprob: -4.623326778411865
    5. ' ' → logprob: -6.998326778411865
    6. ' !=' → logprob: -8.373326301574707
    7. '!=' → logprob: -8.748326301574707
    8. '   ' → logprob: -9.248326301574707
    9. '==' → logprob: -10.373326301574707
    10. ' not' → logprob: -10.873326301574707

Token 113: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001335359294898808
    2. ' ' → logprob: -6.626335144042969
    3. '   ' → logprob: -11.751335144042969
    4. '```' → logprob: -14.626335144042969
    5. '    ' → logprob: -15.376335144042969
    6. '           ' → logprob: -15.501335144042969
    7. '  ' → logprob: -15.501335144042969
    8. '       ' → logprob: -15.626335144042969
    9. '     ' → logprob: -16.37633514404297
    10. '>' → logprob: -16.62633514404297

Token 114: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.945094355614856e-05
    2. ' ' → logprob: -9.625069618225098
    3. '   ' → logprob: -13.125069618225098
    4. '0' → logprob: -15.062569618225098
    5. '```' → logprob: -15.125069618225098
    6. '  ' → logprob: -15.562569618225098
    7. '2' → logprob: -15.625069618225098
    8. '    ' → logprob: -16.87506866455078
    9. ')' → logprob: -16.87506866455078
    10. '     ' → logprob: -17.00006866455078

Token 115: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.8684831857681274
    2. ')' → logprob: -1.4934831857681274
    3. 'and' → logprob: -1.9934831857681274
    4. ')*(' → logprob: -2.368483066558838
    5. '*' → logprob: -3.118483066558838
    6. ' *' → logprob: -3.243483066558838
    7. '))' → logprob: -4.368483066558838
    8. ')*' → logprob: -4.743483066558838
    9. '-' → logprob: -4.868483066558838
    10. '   ' → logprob: -5.618483066558838

Token 116: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.11108049005270004
    2. ' m' → logprob: -2.3610804080963135
    3. '1' → logprob: -4.861080646514893
    4. '   ' → logprob: -6.111080646514893
    5. ' ' → logprob: -7.736080646514893
    6. '    ' → logprob: -8.736080169677734
    7. '  ' → logprob: -9.111080169677734
    8. 'n' → logprob: -10.611080169677734
    9. '     ' → logprob: -10.861080169677734
    10. '(m' → logprob: -10.986080169677734

Token 117: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.044556427747011185
    2. '!=' → logprob: -3.1695563793182373
    3. ')' → logprob: -6.794556617736816
    4. ' ' → logprob: -8.919556617736816
    5. ')!=' → logprob: -9.044556617736816
    6. '   ' → logprob: -9.419556617736816
    7. '```' → logprob: -10.794556617736816
    8. '()!=' → logprob: -10.794556617736816
    9. '>' → logprob: -10.919556617736816
    10. '1' → logprob: -11.544556617736816

Token 118: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003224771935492754
    2. ' ' → logprob: -5.753224849700928
    3. '   ' → logprob: -10.12822437286377
    4. '  ' → logprob: -13.12822437286377
    5. '```' → logprob: -13.50322437286377
    6. '    ' → logprob: -14.12822437286377
    7. '       ' → logprob: -14.62822437286377
    8. '     ' → logprob: -14.87822437286377
    9. '           ' → logprob: -15.06572437286377
    10. '0' → logprob: -15.44072437286377

Token 119: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016194197814911604
    2. ' ' → logprob: -8.750162124633789
    3. '   ' → logprob: -12.875162124633789
    4. '```' → logprob: -15.000162124633789
    5. '  ' → logprob: -15.250162124633789
    6. '    ' → logprob: -16.75016212463379
    7. ')' → logprob: -17.00016212463379
    8. '0' → logprob: -17.18766212463379
    9. '１' → logprob: -17.18766212463379
    10. '     ' → logprob: -17.43766212463379

Token 120: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.2656598687171936
    2. ')' → logprob: -1.6406598091125488
    3. ')))' → logprob: -3.390659809112549
    4. '   ' → logprob: -6.140659809112549
    5. '))
' → logprob: -6.640659809112549
    6. ' ' → logprob: -7.515659809112549
    7. ' ))' → logprob: -8.015660285949707
    8. ' -' → logprob: -8.390660285949707
    9. ' )' → logprob: -8.515660285949707
    10. '+' → logprob: -8.890660285949707

Token 121: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012683282839134336
    2. ')
' → logprob: -6.75126838684082
    3. '**' → logprob: -10.25126838684082
    4. '#' → logprob: -10.75126838684082
    5. '```' → logprob: -11.37626838684082
    6. '*' → logprob: -12.25126838684082
    7. 'print' → logprob: -12.50126838684082
    8. ')

' → logprob: -12.62626838684082
    9. '`)' → logprob: -13.12626838684082
    10. ')#' → logprob: -13.25126838684082

Token 122: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.246537173457909e-06
    2. '
' → logprob: -12.625003814697266
    3. ' print' → logprob: -14.625003814697266
    4. '```' → logprob: -15.250003814697266
    5. '#print' → logprob: -17.500003814697266
    6. '\' → logprob: -17.750003814697266
    7. '\n' → logprob: -18.250003814697266
    8. ')
' → logprob: -18.625003814697266
    9. '``' → logprob: -18.750003814697266
    10. '(print' → logprob: -18.750003814697266

Token 123: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.0022818150464445353
    2. '(' → logprob: -6.127281665802002
    3. 'res' → logprob: -9.87728214263916
    4. '(print' → logprob: -10.12728214263916
    5. '()' → logprob: -13.12728214263916
    6. ' (' → logprob: -14.12728214263916
    7. 'print' → logprob: -14.50228214263916
    8. '(result' → logprob: -15.12728214263916
    9. '((' → logprob: -15.25228214263916
    10. '(sum' → logprob: -15.25228214263916

Token 124: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.696889623621246e-06
    2. '))' → logprob: -13.25000286102295
    3. ')`' → logprob: -15.00000286102295
    4. '`)' → logprob: -16.000001907348633
    5. '())' → logprob: -16.250001907348633
    6. ')
' → logprob: -16.750001907348633
    7. ' )' → logprob: -16.750001907348633
    8. '})' → logprob: -16.875001907348633
    9. ')**' → logprob: -17.250001907348633
    10. ')}' → logprob: -17.250001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 122
Tokens correctement prédits (1ère position, stricte): 53
Tokens correctement prédits (1ère position, avec adaptation): 55
Tokens correctement prédits (top 10): 99
Précision stricte (1ère position): 43.44%
Précision adaptée (1ère position): 45.08%
Précision (top 10): 81.15%
================================================================================
