================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:27:39
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def compute_min_attacks(h, a):
    """
    Calcule le nombre minimal d'attaques nécessaires pour réduire la santé 'h' à zéro ou moins,
    sachant que chaque attaque inflige 'a' points de dégâts.

    Paramètres:
    h (int): La santé totale de l'ennemi.
    a (int): Le nombre de dégâts par attaque.

    Retourne:
    int: Le nombre minimal d'attaques nécessaires.
    """
    # Si la santé est exactement divisible par les dégâts,
    # le nombre d'attaques est la division entière.
    if h % a == 0:
        return h // a
    else:
        # Sinon, il faut une attaque supplémentaire pour finir l'ennemi.
        return h // a + 1

def main():
    """
    Lit l'entrée standard pour obtenir la santé de l'ennemi et les dégâts par attaque,
    puis affiche le nombre minimal d'attaques nécessaires.
    """
    # Lire deux entiers depuis l'entrée séparés par un espace
    h, a = map(int, input().split())

    # Calculer et afficher le résultat
    print(compute_min_attacks(h, a))

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' compute' (ID: 23864)
  → Token d'amorce (pas de prédiction)

Token 2: '_min' (ID: 15950)
  → Token d'amorce (pas de prédiction)

Token 3: '_att' (ID: 35618)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0035192950163036585
    2. 'imum' → logprob: -6.253519058227539
    3. '_val' → logprob: -8.003519058227539
    4. ' _' → logprob: -8.378519058227539
    5. '_distance' → logprob: -8.753519058227539
    6. '(_' → logprob: -8.878519058227539
    7. '```' → logprob: -9.378519058227539
    8. '__' → logprob: -10.003519058227539
    9. '(' → logprob: -10.003519058227539
    10. '_token' → logprob: -10.128519058227539

Token 4: 'acks' (ID: 7367)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.2427759170532227
    2. 'endance' → logprob: -1.2427759170532227
    3. '_r' → logprob: -1.3677759170532227
    4. 'ention' → logprob: -2.6177759170532227
    5. '_' → logprob: -3.7427759170532227
    6. 'ach' → logprob: -4.117775917053223
    7. 'ack' → logprob: -4.617775917053223
    8. 'achment' → logprob: -4.617775917053223
    9. 'en' → logprob: -5.242775917053223
    10. '_distance' → logprob: -5.617775917053223

Token 5: '(h' (ID: 8120)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05288780853152275
    2. '_' → logprob: -4.177887916564941
    3. '(_:' → logprob: -4.177887916564941
    4. '(:' → logprob: -4.927887916564941
    5. '():' → logprob: -5.302887916564941
    6. '_:' → logprob: -5.677887916564941
    7. '(_' → logprob: -5.677887916564941
    8. '(def' → logprob: -7.802887916564941
    9. '```' → logprob: -7.927887916564941
    10. ':' → logprob: -8.177887916564941

Token 6: ',' (ID: 11)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.21216416358947754
    2. 'p' → logprob: -1.9621641635894775
    3. 'it' → logprob: -3.5871641635894775
    4. ')e' → logprob: -5.337163925170898
    5. ',' → logprob: -5.712163925170898
    6. '):' → logprob: -5.837163925170898
    7. '_' → logprob: -5.962163925170898
    8. '_e' → logprob: -6.337163925170898
    9. 'elper' → logprob: -6.837163925170898
    10. 'a' → logprob: -7.462163925170898

Token 7: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.3129996061325073
    2. 'd' → logprob: -1.3129996061325073
    3. 'm' → logprob: -1.6879996061325073
    4. ' d' → logprob: -2.937999725341797
    5. 'w' → logprob: -2.937999725341797
    6. ' a' → logprob: -3.187999725341797
    7. ' m' → logprob: -3.312999725341797
    8. ' w' → logprob: -4.312999725341797
    9. 't' → logprob: -4.437999725341797
    10. 'n' → logprob: -4.437999725341797

Token 8: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009313768707215786
    2. ',' → logprob: -4.884313583374023
    3. ')' → logprob: -6.634313583374023
    4. '_' → logprob: -8.634313583374023
    5. '):
' → logprob: -10.009313583374023
    6. '=' → logprob: -10.259313583374023
    7. ' ):' → logprob: -10.759313583374023
    8. ':' → logprob: -10.884313583374023
    9. 's' → logprob: -11.009313583374023
    10. '):

' → logprob: -11.759313583374023

Token 9: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008729918859899044
    2. '   ' → logprob: -5.508729934692383
    3. '():' → logprob: -6.258729934692383
    4. '):' → logprob: -7.633729934692383
    5. '_:' → logprob: -7.758729934692383
    6. '':' → logprob: -7.758729934692383
    7. '```' → logprob: -8.133729934692383
    8. '":' → logprob: -8.383729934692383
    9. '_' → logprob: -8.508729934692383
    10. ':
' → logprob: -8.508729934692383

Token 10: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46887022256851196
    2. '```' → logprob: -1.9688701629638672
    3. ':' → logprob: -2.093870162963867
    4. '`' → logprob: -3.718870162963867
    5. ' ' → logprob: -3.968870162963867
    6. 'i' → logprob: -4.343870162963867
    7. ''' → logprob: -4.718870162963867
    8. '       ' → logprob: -4.718870162963867
    9. '    ' → logprob: -4.843870162963867
    10. '``' → logprob: -5.093870162963867

Token 11: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -1.342476725578308
    2. '"""
' → logprob: -1.467476725578308
    3. 'n' → logprob: -2.5924768447875977
    4. '#' → logprob: -2.7174768447875977
    5. 'i' → logprob: -2.7174768447875977
    6. '\n' → logprob: -2.7174768447875977
    7. ''''
' → logprob: -3.4674768447875977
    8. ' """
' → logprob: -3.5924768447875977
    9. ''''' → logprob: -3.7174768447875977
    10. '"' → logprob: -3.8424768447875977

Token 12: ' Cal' (ID: 4453)
  Prédit: 'Calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Calculate' → logprob: -0.6154763102531433
    2. '"""' → logprob: -1.240476369857788
    3. 'Calcul' → logprob: -2.740476369857788
    4. '"""
' → logprob: -3.740476369857788
    5. 'Returns' → logprob: -4.490476131439209
    6. '""' → logprob: -4.615476131439209
    7. ' Calculate' → logprob: -4.740476131439209
    8. 'C' → logprob: -4.865476131439209
    9. ' Calculates' → logprob: -4.990476131439209
    10. ''''' → logprob: -5.240476131439209

Token 13: 'cule' (ID: 45017)
  Prédit: 'culate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'culate' → logprob: -0.1122685968875885
    2. 'cul' → logprob: -2.7372686862945557
    3. 'c' → logprob: -3.9872686862945557
    4. 'l' → logprob: -4.612268447875977
    5. 'cu' → logprob: -4.862268447875977
    6. 'cula' → logprob: -5.487268447875977
    7. 'culated' → logprob: -8.112268447875977
    8. '   ' → logprob: -8.987268447875977
    9. 'cular' → logprob: -9.112268447875977
    10. 'cule' → logprob: -9.362268447875977

Token 14: ' le' (ID: 505)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.766891360282898
    2. 'te' → logprob: -0.891891360282898
    3. 's' → logprob: -2.3918914794921875
    4. 't' → logprob: -4.1418914794921875
    5. 'tes' → logprob: -4.1418914794921875
    6. 'z' → logprob: -6.5168914794921875
    7. '_' → logprob: -8.766891479492188
    8. 'ter' → logprob: -9.266891479492188
    9. 'tion' → logprob: -9.266891479492188
    10. '```' → logprob: -9.266891479492188

Token 15: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.022924678400158882
    2. ' ' → logprob: -4.647924900054932
    3. '   ' → logprob: -4.897924900054932
    4. '  ' → logprob: -6.022924900054932
    5. ' minimum' → logprob: -6.897924900054932
    6. 'nombre' → logprob: -7.022924900054932
    7. ' nombres' → logprob: -7.647924900054932
    8. 's' → logprob: -8.772924423217773
    9. ' nb' → logprob: -9.147924423217773
    10. ' nbr' → logprob: -9.147924423217773

Token 16: ' minimal' (ID: 19957)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8770626187324524
    2. ' ' → logprob: -0.8770626187324524
    3. '  ' → logprob: -2.2520625591278076
    4. ' de' → logprob: -3.3770625591278076
    5. ' d' → logprob: -4.002062797546387
    6. 's' → logprob: -5.877062797546387
    7. '   ' → logprob: -6.127062797546387
    8. ' _' → logprob: -7.127062797546387
    9. ' des' → logprob: -7.502062797546387
    10. '_tokens' → logprob: -7.752062797546387

Token 17: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.28815415501594543
    2. '_' → logprob: -2.163154125213623
    3. ' de' → logprob: -2.538154125213623
    4. ' d' → logprob: -3.538154125213623
    5. '  ' → logprob: -3.913154125213623
    6. ' des' → logprob: -5.413154125213623
    7. '```' → logprob: -7.538154125213623
    8. '   ' → logprob: -7.663154125213623
    9. ')' → logprob: -7.913154125213623
    10. 's' → logprob: -8.288154602050781

Token 18: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.02359297126531601
    2. 'e' → logprob: -3.898592948913574
    3. '_' → logprob: -6.148592948913574
    4. 'a' → logprob: -8.273592948913574
    5. ''espace' → logprob: -8.773592948913574
    6. '’' → logprob: -8.898592948913574
    7. ''esp' → logprob: -8.898592948913574
    8. ''é' → logprob: -9.398592948913574
    9. ''a' → logprob: -10.398592948913574
    10. ''e' → logprob: -11.523592948913574

Token 19: 'atta' (ID: 21246)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.024285148829221725
    2. 'atta' → logprob: -4.149285316467285
    3. 'a' → logprob: -6.149285316467285
    4. ' attaques' → logprob: -6.524285316467285
    5. ''at' → logprob: -6.649285316467285
    6. 'attaque' → logprob: -7.524285316467285
    7. ''a' → logprob: -8.149285316467285
    8. '''' → logprob: -8.274285316467285
    9. ''ass' → logprob: -8.399285316467285
    10. '’' → logprob: -8.774285316467285

Token 20: 'ques' (ID: 3531)
  Prédit: 'ques'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ques' → logprob: -0.29459625482559204
    2. 'q' → logprob: -1.4195961952209473
    3. 'que' → logprob: -4.669596195220947
    4. 'qu' → logprob: -5.919596195220947
    5. 'c' → logprob: -7.294596195220947
    6. '``' → logprob: -9.294596672058105
    7. '```' → logprob: -9.419596672058105
    8. 'quer' → logprob: -9.544596672058105
    9. 'quez' → logprob: -9.794596672058105
    10. 'quent' → logprob: -10.044596672058105

Token 21: ' nécessaires' (ID: 74402)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2285805344581604
    2. ' nécessaires' → logprob: -1.9785804748535156
    3. '   ' → logprob: -4.103580474853516
    4. 's' → logprob: -4.603580474853516
    5. ' nécessaire' → logprob: -4.728580474853516
    6. '  ' → logprob: -4.978580474853516
    7. ' pour' → logprob: -5.103580474853516
    8. '_' → logprob: -5.603580474853516
    9. ' necess' → logprob: -5.603580474853516
    10. ' ,' → logprob: -6.478580474853516

Token 22: ' pour' (ID: 1930)
  Prédit: ' pour'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pour' → logprob: -0.6634904742240906
    2. ' ' → logprob: -0.7884904742240906
    3. ' to' → logprob: -4.538490295410156
    4. '   ' → logprob: -5.038490295410156
    5. 'pour' → logprob: -5.038490295410156
    6. '  ' → logprob: -6.288490295410156
    7. ' for' → logprob: -6.913490295410156
    8. ',' → logprob: -7.663490295410156
    9. ' ,' → logprob: -7.788490295410156
    10. ' avant' → logprob: -7.913490295410156

Token 23: ' réduire' (ID: 78295)
  Prédit: ' vain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vain' → logprob: -1.306408166885376
    2. '_' → logprob: -1.806408166885376
    3. ' élim' → logprob: -2.056408166885376
    4. ' réduire' → logprob: -2.556408166885376
    5. '   ' → logprob: -3.056408166885376
    6. ' ' → logprob: -3.306408166885376
    7. '```' → logprob: -3.431408166885376
    8. ' sauver' → logprob: -3.931408166885376
    9. ' derrot' → logprob: -4.056407928466797
    10. ' que' → logprob: -4.181407928466797

Token 24: ' la' (ID: 557)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.6299987435340881
    2. ' ' → logprob: -1.6299986839294434
    3. ' la' → logprob: -1.6299986839294434
    4. 'l' → logprob: -3.8799986839294434
    5. ' le' → logprob: -4.004998683929443
    6. '_' → logprob: -4.254998683929443
    7. 'le' → logprob: -5.754998683929443
    8. ' a' → logprob: -5.879998683929443
    9. ' au' → logprob: -6.129998683929443
    10. ' ' → logprob: -6.129998683929443

Token 25: ' santé' (ID: 33201)
  Prédit: 'vie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vie' → logprob: -0.6914482116699219
    2. ' vie' → logprob: -1.6914482116699219
    3. 'hp' → logprob: -2.066448211669922
    4. ' hp' → logprob: -3.566448211669922
    5. ' points' → logprob: -3.691448211669922
    6. ' santé' → logprob: -3.816448211669922
    7. ' ' → logprob: -3.941448211669922
    8. 'h' → logprob: -4.066448211669922
    9. 'points' → logprob: -4.566448211669922
    10. 's' → logprob: -5.066448211669922

Token 26: ' '' (ID: 461)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.255458265542984
    2. ' d' → logprob: -2.380458354949951
    3. ' à' → logprob: -2.755458354949951
    4. '_' → logprob: -3.630458354949951
    5. '   ' → logprob: -4.005458354949951
    6. ' au' → logprob: -4.505458354949951
    7. ' de' → logprob: -5.255458354949951
    8. '```' → logprob: -6.255458354949951
    9. '  ' → logprob: -6.755458354949951
    10. ' du' → logprob: -6.755458354949951

Token 27: 'h' (ID: 71)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2762787342071533
    2. ' d' → logprob: -1.6512787342071533
    3. ' du' → logprob: -1.7762787342071533
    4. ' à' → logprob: -1.9012787342071533
    5. ' de' → logprob: -2.1512787342071533
    6. ''' → logprob: -4.026278495788574
    7. '_' → logprob: -4.276278495788574
    8. ' la' → logprob: -4.776278495788574
    9. ' '' → logprob: -4.776278495788574
    10. 'd' → logprob: -5.151278495788574

Token 28: ''' (ID: 6)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.9129412174224854
    2. ''' → logprob: -1.6629412174224854
    3. ' d' → logprob: -1.7879412174224854
    4. ' ' → logprob: -2.5379412174224854
    5. ' de' → logprob: -2.6629412174224854
    6. ' '' → logprob: -3.2879412174224854
    7. ' au' → logprob: -3.7879412174224854
    8. ' du' → logprob: -4.787940979003906
    9. ''à' → logprob: -5.412940979003906
    10. ' a' → logprob: -5.787940979003906

Token 29: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.22334325313568115
    2. ' ' → logprob: -2.0983433723449707
    3. ' de' → logprob: -3.3483433723449707
    4. '   ' → logprob: -4.098343372344971
    5. ' au' → logprob: -4.848343372344971
    6. ' d' → logprob: -5.098343372344971
    7. ' a' → logprob: -5.598343372344971
    8. '  ' → logprob: -6.348343372344971
    9. ' to' → logprob: -6.723343372344971
    10. ' en' → logprob: -6.848343372344971

Token 30: ' zéro' (ID: 182040)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18499110639095306
    2. '0' → logprob: -1.8099911212921143
    3. ' zéro' → logprob: -6.309990882873535
    4. ' z' → logprob: -6.559990882873535
    5. 'z' → logprob: -7.059990882873535
    6. ' au' → logprob: -7.684990882873535
    7. 'au' → logprob: -8.184990882873535
    8. '1' → logprob: -8.309990882873535
    9. '  ' → logprob: -10.184990882873535
    10. ' ' → logprob: -10.809990882873535

Token 31: ' ou' (ID: 2031)
  Prédit: ' ou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ou' → logprob: -0.9073837399482727
    2. '.' → logprob: -1.282383680343628
    3. '   ' → logprob: -1.907383680343628
    4. ':' → logprob: -2.532383680343628
    5. ' ' → logprob: -3.532383680343628
    6. ' :' → logprob: -4.157383918762207
    7. ' or' → logprob: -4.782383918762207
    8. ',' → logprob: -4.907383918762207
    9. '\' → logprob: -5.282383918762207
    10. '  ' → logprob: -6.157383918762207

Token 32: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.352468878030777
    2. 'en' → logprob: -1.4774688482284546
    3. '```' → logprob: -4.102468967437744
    4. 'au' → logprob: -4.102468967437744
    5. ' en' → logprob: -4.477468967437744
    6. 'plus' → logprob: -4.602468967437744
    7. ' moins' → logprob: -4.852468967437744
    8. 'below' → logprob: -6.227468967437744
    9. 'less' → logprob: -6.852468967437744
    10. 'import' → logprob: -7.602468967437744

Token 33: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18977545201778412
    2. '.' → logprob: -2.1897754669189453
    3. ':' → logprob: -3.3147754669189453
    4. ' :' → logprob: -4.939775466918945
    5. ',' → logprob: -5.689775466918945
    6. ':
' → logprob: -5.814775466918945
    7. '.
' → logprob: -6.439775466918945
    8. '```' → logprob: -6.439775466918945
    9. ' en' → logprob: -6.814775466918945
    10. ' ' → logprob: -6.814775466918945

Token 34: '   ' (ID: 271)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.31692934036254883
    2. ' ' → logprob: -1.6919293403625488
    3. '   ' → logprob: -3.191929340362549
    4. ' :' → logprob: -4.691929340362549
    5. ',' → logprob: -4.941929340362549
    6. ' ,' → logprob: -4.941929340362549
    7. '.' → logprob: -5.566929340362549
    8. ' et' → logprob: -5.941929340362549
    9. ' à' → logprob: -6.066929340362549
    10. ' )' → logprob: -6.566929340362549

Token 35: ' sachant' (ID: 174239)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.1382606327533722
    2. ' ' → logprob: -2.26326060295105
    3. '   ' → logprob: -5.013260841369629
    4. ' à' → logprob: -6.263260841369629
    5. ' i' → logprob: -6.513260841369629
    6. '  ' → logprob: -6.638260841369629
    7. ' et' → logprob: -6.638260841369629
    8. ' ' → logprob: -6.763260841369629
    9. ' ,' → logprob: -7.138260841369629
    10. ' avec' → logprob: -7.138260841369629

Token 36: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.3457688093185425
    2. ' ' → logprob: -2.345768928527832
    3. ' d' → logprob: -2.845768928527832
    4. ' la' → logprob: -3.595768928527832
    5. ' qu' → logprob: -3.720768928527832
    6. ' de' → logprob: -4.095768928527832
    7. '    ' → logprob: -4.095768928527832
    8. '```' → logprob: -5.095768928527832
    9. ' des' → logprob: -5.220768928527832
    10. ' a' → logprob: -5.345768928527832

Token 37: ' chaque' (ID: 21194)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.31669843196868896
    2. ' chaque' → logprob: -1.566698431968689
    3. ' l' → logprob: -3.1916985511779785
    4. ' a' → logprob: -4.3166985511779785
    5. ' each' → logprob: -6.0666985511779785
    6. ' la' → logprob: -6.5666985511779785
    7. 'l' → logprob: -6.9416985511779785
    8. 'a' → logprob: -7.1916985511779785
    9. ' every' → logprob: -7.5666985511779785
    10. ' ' → logprob: -7.9416985511779785

Token 38: ' attaque' (ID: 166229)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7222931981086731
    2. ' attaque' → logprob: -0.8472931981086731
    3. 'attaque' → logprob: -3.3472931385040283
    4. '_' → logprob: -3.4722931385040283
    5. ' atta' → logprob: -5.347293376922607
    6. ' _' → logprob: -5.472293376922607
    7. ' a' → logprob: -5.597293376922607
    8. ' ' → logprob: -6.347293376922607
    9. ' frappe' → logprob: -6.972293376922607
    10. ' espace' → logprob: -7.347293376922607

Token 39: ' infl' (ID: 5732)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08987344801425934
    2. '_' → logprob: -2.7148735523223877
    3. ' _' → logprob: -5.464873313903809
    4. ' a' → logprob: -5.964873313903809
    5. ' est' → logprob: -5.964873313903809
    6. ' s' → logprob: -6.214873313903809
    7. '  ' → logprob: -7.339873313903809
    8. 's' → logprob: -7.339873313903809
    9. ' ' → logprob: -7.589873313903809
    10. '_s' → logprob: -7.714873313903809

Token 40: 'ige' (ID: 2609)
  Prédit: 'ige'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ige' → logprob: -0.0020515278447419405
    2. 'ue' → logprob: -6.62705135345459
    3. 'e' → logprob: -8.37705135345459
    4. 'igit' → logprob: -8.75205135345459
    5. 'u' → logprob: -9.87705135345459
    6. 'ict' → logprob: -10.12705135345459
    7. 'ig' → logprob: -10.12705135345459
    8. '   ' → logprob: -10.75205135345459
    9. 'igent' → logprob: -11.12705135345459
    10. 'iges' → logprob: -11.25205135345459

Token 41: ' '' (ID: 461)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16186833381652832
    2. ' a' → logprob: -2.1618683338165283
    3. ' au' → logprob: -4.161868095397949
    4. ' une' → logprob: -4.411868095397949
    5. ' un' → logprob: -5.411868095397949
    6. ' an' → logprob: -6.911868095397949
    7. '1' → logprob: -8.03686809539795
    8. 'au' → logprob: -8.28686809539795
    9. ' exactement' → logprob: -8.66186809539795
    10. ' à' → logprob: -9.91186809539795

Token 42: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6937459111213684
    2. ' a' → logprob: -0.6937459111213684
    3. ' ' → logprob: -7.818746089935303
    4. ' '' → logprob: -9.318745613098145
    5. ''a' → logprob: -9.818745613098145
    6. ' ' → logprob: -10.693745613098145
    7. ''' → logprob: -11.693745613098145
    8. '	a' → logprob: -12.693745613098145
    9. '1' → logprob: -12.818745613098145
    10. ' ')' → logprob: -13.193745613098145

Token 43: ''' (ID: 6)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.47726577520370483
    2. ''' → logprob: -0.9772657752037048
    3. ' '>' → logprob: -7.47726583480835
    4. ' dégâts' → logprob: -7.47726583480835
    5. ' ')' → logprob: -7.85226583480835
    6. ''>' → logprob: -8.102265357971191
    7. ' a' → logprob: -8.477265357971191
    8. ' ' → logprob: -8.602265357971191
    9. ' ').' → logprob: -8.977265357971191
    10. '<|end|>' → logprob: -8.977265357971191

Token 44: ' points' (ID: 5571)
  Prédit: ' dégâts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dégâts' → logprob: -0.7106099724769592
    2. ' points' → logprob: -0.8356099724769592
    3. ' dommages' → logprob: -3.3356099128723145
    4. ' de' → logprob: -3.7106099128723145
    5. ' ' → logprob: -5.0856099128723145
    6. 'points' → logprob: -6.0856099128723145
    7. ' d' → logprob: -6.4606099128723145
    8. ' au' → logprob: -7.2106099128723145
    9. ' point' → logprob: -7.4606099128723145
    10. '.' → logprob: -8.085610389709473

Token 45: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.26236826181411743
    2. ' d' → logprob: -2.1373682022094727
    3. '<|end|>' → logprob: -2.3873682022094727
    4. 'd' → logprob: -5.137368202209473
    5. '.' → logprob: -5.387368202209473
    6. '   ' → logprob: -5.637368202209473
    7. '<|end|>' → logprob: -6.262368202209473
    8. 'de' → logprob: -6.512368202209473
    9. ' ' → logprob: -6.887368202209473
    10. '  ' → logprob: -6.887368202209473

Token 46: ' dégâts' (ID: 195715)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.654822826385498
    2. ' dégâts' → logprob: -0.779822826385498
    3. 'dom' → logprob: -4.404822826385498
    4. ' dommage' → logprob: -5.279822826385498
    5. ' dommages' → logprob: -5.779822826385498
    6. ' dég' → logprob: -7.154822826385498
    7. 'dé' → logprob: -8.279823303222656
    8. 'deg' → logprob: -8.404823303222656
    9. ' d' → logprob: -9.154823303222656
    10. 'damage' → logprob: -9.279823303222656

Token 47: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8761603832244873
    2. ':' → logprob: -1.1261603832244873
    3. '):' → logprob: -1.6261603832244873
    4. '.' → logprob: -3.6261603832244873
    5. ')' → logprob: -3.8761603832244873
    6. ' :' → logprob: -5.126160621643066
    7. ':
' → logprob: -5.876160621643066
    8. '):
' → logprob: -6.001160621643066
    9. ',' → logprob: -6.376160621643066
    10. ' ' → logprob: -7.001160621643066

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02228960394859314
    2. '"""' → logprob: -3.897289514541626
    3. '"""
' → logprob: -7.397289752960205
    4. '"' → logprob: -8.272289276123047
    5. ')' → logprob: -8.272289276123047
    6. '```' → logprob: -8.272289276123047
    7. '\n' → logprob: -8.772289276123047
    8. '""' → logprob: -10.147289276123047
    9. ' ' → logprob: -10.397289276123047
    10. '    
' → logprob: -10.397289276123047

Token 49: ' Param' (ID: 14796)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006948141381144524
    2. '"""' → logprob: -5.381947994232178
    3. '\n' → logprob: -7.256947994232178
    4. ' """' → logprob: -8.006948471069336
    5. '```' → logprob: -8.131948471069336
    6. 'n' → logprob: -8.256948471069336
    7. '
' → logprob: -8.881948471069336
    8. ' if' → logprob: -9.256948471069336
    9. '    
' → logprob: -9.381948471069336
    10. '    ' → logprob: -9.506948471069336

Token 50: 'ètres' (ID: 40427)
  Prédit: 'ètres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ètres' → logprob: -0.14343206584453583
    2. 'ètre' → logprob: -2.268432140350342
    3. 'eters' → logprob: -4.268432140350342
    4. 'et' → logprob: -4.518432140350342
    5. 'è' → logprob: -5.768432140350342
    6. 'èt' → logprob: -7.643432140350342
    7. 'etre' → logprob: -7.893432140350342
    8. 'e' → logprob: -8.393431663513184
    9. 'etros' → logprob: -8.393431663513184
    10. '`' → logprob: -8.643431663513184

Token 51: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7942136526107788
    2. ' :' → logprob: -1.2942136526107788
    3. ':' → logprob: -2.0442137718200684
    4. ' :
' → logprob: -2.6692137718200684
    5. ':
' → logprob: -3.1692137718200684
    6. '):
' → logprob: -5.044213771820068
    7. 's' → logprob: -5.044213771820068
    8. '```' → logprob: -5.294213771820068
    9. '\n' → logprob: -5.419213771820068
    10. '
' → logprob: -6.169213771820068

Token 52: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006869178730994463
    2. ' h' → logprob: -6.131869316101074
    3. '```' → logprob: -6.131869316101074
    4. '
' → logprob: -6.881869316101074
    5. '    
' → logprob: -7.631869316101074
    6. '    ' → logprob: -7.881869316101074
    7. ' 
' → logprob: -9.006869316101074
    8. '\n' → logprob: -9.131869316101074
    9. '       ' → logprob: -9.881869316101074
    10. ' """
' → logprob: -10.506869316101074

Token 53: ' h' (ID: 312)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0820331946015358
    2. ' h' → logprob: -2.957033157348633
    3. '```' → logprob: -4.457033157348633
    4. '
' → logprob: -6.082033157348633
    5. '    
' → logprob: -6.332033157348633
    6. '\n' → logprob: -6.457033157348633
    7. ' 
' → logprob: -6.457033157348633
    8. ' """' → logprob: -6.707033157348633
    9. ' """
' → logprob: -6.832033157348633
    10. 'n' → logprob: -6.832033157348633

Token 54: ' (' (ID: 350)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.5218642950057983
    2. ',' → logprob: -2.271864414215088
    3. '   ' → logprob: -2.271864414215088
    4. ':' → logprob: -2.271864414215088
    5. '):' → logprob: -3.271864414215088
    6. ' >=' → logprob: -4.271864414215088
    7. ' <=' → logprob: -4.646864414215088
    8. ' (' → logprob: -4.896864414215088
    9. ' ,' → logprob: -5.146864414215088
    10. ' -' → logprob: -5.271864414215088

Token 55: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07000023871660233
    2. ' int' → logprob: -2.695000171661377
    3. '   ' → logprob: -10.070000648498535
    4. ':int' → logprob: -11.570000648498535
    5. ')' → logprob: -12.820000648498535
    6. '```' → logprob: -13.070000648498535
    7. '(int' → logprob: -13.445000648498535
    8. '[int' → logprob: -13.445000648498535
    9. '):' → logprob: -13.695000648498535
    10. '=int' → logprob: -14.695000648498535

Token 56: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28251010179519653
    2. '):' → logprob: -1.4075100421905518
    3. ',' → logprob: -7.157510280609131
    4. ' ):' → logprob: -8.282509803771973
    5. ' )' → logprob: -9.282509803771973
    6. '):
' → logprob: -9.782509803771973
    7. '<|end|>' → logprob: -9.907509803771973
    8. '   ' → logprob: -10.282509803771973
    9. ' ' → logprob: -11.032509803771973
    10. '),' → logprob: -11.157509803771973

Token 57: ' La' (ID: 3038)
  Prédit: ' La'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' La' → logprob: -0.2763421833515167
    2. ' la' → logprob: -2.2763421535491943
    3. ' santé' → logprob: -2.9013421535491943
    4. 'La' → logprob: -3.6513421535491943
    5. ' Santé' → logprob: -4.151342391967773
    6. '   ' → logprob: -4.401342391967773
    7. ' points' → logprob: -4.901342391967773
    8. ' Le' → logprob: -5.151342391967773
    9. ' Points' → logprob: -5.776342391967773
    10. ' int' → logprob: -6.276342391967773

Token 58: ' santé' (ID: 33201)
  Prédit: ' santé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' santé' → logprob: -0.5586543083190918
    2. 's' → logprob: -1.1836543083190918
    3. ' sant' → logprob: -2.933654308319092
    4. '   ' → logprob: -3.808654308319092
    5. ' s' → logprob: -4.433654308319092
    6. ' ' → logprob: -4.433654308319092
    7. ' vie' → logprob: -5.058654308319092
    8. ' quantité' → logprob: -5.183654308319092
    9. 'vie' → logprob: -6.183654308319092
    10. '  ' → logprob: -6.183654308319092

Token 59: ' totale' (ID: 52898)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26539352536201477
    2. ' à' → logprob: -1.8903934955596924
    3. ')' → logprob: -3.6403934955596924
    4. ' restante' → logprob: -4.7653937339782715
    5. ' du' → logprob: -5.2653937339782715
    6. ' de' → logprob: -5.3903937339782715
    7. ' initial' → logprob: -5.3903937339782715
    8. ' ' → logprob: -5.5153937339782715
    9. ',' → logprob: -5.6403937339782715
    10. ' nécessaire' → logprob: -5.7653937339782715

Token 60: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2250836193561554
    2. ')' → logprob: -1.975083589553833
    3. ' à' → logprob: -3.100083589553833
    4. ' )' → logprob: -5.850083827972412
    5. '):' → logprob: -6.100083827972412
    6. ' nécessaire' → logprob: -6.475083827972412
    7. ' de' → logprob: -6.725083827972412
    8. '):
' → logprob: -6.725083827972412
    9. '```' → logprob: -7.100083827972412
    10. ' du' → logprob: -7.225083827972412

Token 61: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.35767677426338196
    2. ' l' → logprob: -1.2326767444610596
    3. ' la' → logprob: -4.857676982879639
    4. 'la' → logprob: -7.232676982879639
    5. '	l' → logprob: -8.60767650604248
    6. ' ' → logprob: -8.73267650604248
    7. ''l' → logprob: -9.85767650604248
    8. ''' → logprob: -10.35767650604248
    9. '   ' → logprob: -10.42017650604248
    10. ' cible' → logprob: -10.48267650604248

Token 62: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.17597289383411407
    2. ''ent' → logprob: -2.1759729385375977
    3. 'e' → logprob: -3.4259729385375977
    4. ''utilisateur' → logprob: -5.175972938537598
    5. 'a' → logprob: -5.925972938537598
    6. ''ad' → logprob: -6.550972938537598
    7. ''objet' → logprob: -6.675972938537598
    8. ''objectif' → logprob: -6.925972938537598
    9. ''en' → logprob: -7.300972938537598
    10. ''un' → logprob: -7.675972938537598

Token 63: 'enn' (ID: 2362)
  Prédit: 'enn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enn' → logprob: -0.0665365681052208
    2. ''' → logprob: -2.8165366649627686
    3. ''ent' → logprob: -7.3165364265441895
    4. 'ad' → logprob: -7.3165364265441895
    5. 'ent' → logprob: -7.6915364265441895
    6. 'enemy' → logprob: -7.6915364265441895
    7. 'en' → logprob: -7.8165364265441895
    8. ' enn' → logprob: -7.9415364265441895
    9. ''ad' → logprob: -8.066536903381348
    10. 'c' → logprob: -8.691536903381348

Token 64: 'emi' (ID: 18504)
  Prédit: 'emi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'emi' → logprob: -0.0004269812779966742
    2. 'e' → logprob: -8.00042724609375
    3. 'emy' → logprob: -10.12542724609375
    4. 'emie' → logprob: -10.75042724609375
    5. ' emi' → logprob: -11.37542724609375
    6. 'é' → logprob: -11.87542724609375
    7. 'em' → logprob: -12.50042724609375
    8. 'emis' → logprob: -12.62542724609375
    9. '```' → logprob: -14.00042724609375
    10. '   ' → logprob: -14.25042724609375

Token 65: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05289888754487038
    2. ')' → logprob: -3.30289888381958
    3. '):' → logprob: -5.80289888381958
    4. ')
' → logprob: -6.05289888381958
    5. '```' → logprob: -6.05289888381958
    6. '
' → logprob: -6.42789888381958
    7. '):
' → logprob: -6.42789888381958
    8. '    
' → logprob: -6.80289888381958
    9. ',' → logprob: -7.67789888381958
    10. ':' → logprob: -7.92789888381958

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023036742582917213
    2. '```' → logprob: -4.898036956787109
    3. ')' → logprob: -5.773036956787109
    4. '\n' → logprob: -5.898036956787109
    5. '    
' → logprob: -6.148036956787109
    6. '"""
' → logprob: -6.398036956787109
    7. '\' → logprob: -6.773036956787109
    8. '    ' → logprob: -7.398036956787109
    9. '
' → logprob: -7.523036956787109
    10. ''' → logprob: -7.523036956787109

Token 67: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1339203268289566
    2. '```' → logprob: -3.883920431137085
    3. '"""
' → logprob: -4.008920192718506
    4. ' if' → logprob: -4.383920192718506
    5. '\n' → logprob: -4.633920192718506
    6. '    
' → logprob: -4.758920192718506
    7. ' a' → logprob: -4.758920192718506
    8. 'a' (adapté à ' a') → logprob: -5.258920192718506
    9. ' 
' → logprob: -5.258920192718506
    10. ' """
' → logprob: -5.258920192718506

Token 68: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.0055528320372104645
    2. '(int' → logprob: -5.255552768707275
    3. ')' → logprob: -9.255553245544434
    4. ' ' → logprob: -9.630553245544434
    5. '   ' → logprob: -10.005553245544434
    6. '):' → logprob: -10.130553245544434
    7. ':' → logprob: -10.630553245544434
    8. ':int' → logprob: -11.005553245544434
    9. '```' → logprob: -12.255553245544434
    10. 'int' → logprob: -12.255553245544434

Token 69: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.023262951523065567
    2. ' int' → logprob: -3.7732629776000977
    3. '   ' → logprob: -11.773262977600098
    4. ')' → logprob: -12.148262977600098
    5. ' ' → logprob: -13.398262977600098
    6. '  ' → logprob: -14.148262977600098
    7. ':int' → logprob: -15.023262977600098
    8. ' )' → logprob: -15.148262977600098
    9. '=int' → logprob: -15.148262977600098
    10. '(int' → logprob: -15.398262977600098

Token 70: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011133896186947823
    2. ')' → logprob: -4.511133670806885
    3. ' ):' → logprob: -9.886134147644043
    4. ':' → logprob: -10.636134147644043
    5. '*' → logprob: -12.886134147644043
    6. '   ' → logprob: -13.261134147644043
    7. ' ' → logprob: -13.261134147644043
    8. '):
' → logprob: -13.386134147644043
    9. ',' → logprob: -14.386134147644043
    10. '>' → logprob: -14.386134147644043

Token 71: ' Le' (ID: 2018)
  Prédit: ' points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.4530603885650635
    2. ' l' → logprob: -1.2030603885650635
    3. 'points' → logprob: -3.4530603885650635
    4. ' les' → logprob: -4.578060150146484
    5. 'l' → logprob: -4.703060150146484
    6. ' dégâts' → logprob: -5.703060150146484
    7. ' la' → logprob: -5.953060150146484
    8. '   ' → logprob: -6.953060150146484
    9. ' ' → logprob: -7.078060150146484
    10. 'int' → logprob: -7.578060150146484

Token 72: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.25371938943862915
    2. 'nombre' → logprob: -2.2537193298339844
    3. 'd' → logprob: -2.6287193298339844
    4. ' dégâts' → logprob: -3.7537193298339844
    5. ' dommage' → logprob: -4.753719329833984
    6. ' montant' → logprob: -5.128719329833984
    7. ' points' → logprob: -6.003719329833984
    8. 'dom' → logprob: -6.253719329833984
    9. ' dommages' → logprob: -7.003719329833984
    10. 'points' → logprob: -7.378719329833984

Token 73: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.07262833416461945
    2. ' de' → logprob: -2.9476282596588135
    3. ' maximal' → logprob: -5.072628498077393
    4. 'd' → logprob: -5.197628498077393
    5. ' ' → logprob: -6.697628498077393
    6. ' total' → logprob: -6.822628498077393
    7. '  ' → logprob: -7.197628498077393
    8. ' minimum' → logprob: -7.697628498077393
    9. '   ' → logprob: -7.822628498077393
    10. 'de' → logprob: -8.197628021240234

Token 74: ' dégâts' (ID: 195715)
  Prédit: ' dégâts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dégâts' → logprob: -0.27556005120277405
    2. ' points' → logprob: -1.9005600214004517
    3. 'd' → logprob: -2.775560140609741
    4. 'points' → logprob: -3.650560140609741
    5. ' dommages' → logprob: -6.150559902191162
    6. ' d' → logprob: -8.27556037902832
    7. '_points' → logprob: -8.90056037902832
    8. ' dég' → logprob: -9.02556037902832
    9. 'atta' → logprob: -9.02556037902832
    10. ' attaques' → logprob: -9.15056037902832

Token 75: ' par' (ID: 686)
  Prédit: ' infl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' infl' → logprob: -0.424502968788147
    2. 'infl' → logprob: -1.174502968788147
    3. '   ' → logprob: -4.049502849578857
    4. ' par' → logprob: -4.424502849578857
    5. 'par' → logprob: -6.299502849578857
    6. ')' → logprob: -6.799502849578857
    7. ' inflicted' → logprob: -6.799502849578857
    8. ' ' → logprob: -7.424502849578857
    9. ' que' → logprob: -7.549502849578857
    10. 's' → logprob: -7.924502849578857

Token 76: ' attaque' (ID: 166229)
  Prédit: 'attaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'attaque' → logprob: -0.4873017966747284
    2. ' attaque' → logprob: -0.9873018264770508
    3. ' ' → logprob: -4.487301826477051
    4. 'att' → logprob: -7.237301826477051
    5. 'atta' → logprob: -7.862301826477051
    6. ' atta' → logprob: -8.36230182647705
    7. '   ' → logprob: -9.48730182647705
    8. ' ataque' → logprob: -9.73730182647705
    9. '  ' → logprob: -9.73730182647705
    10. ' attaques' → logprob: -9.86230182647705

Token 77: '.

' (ID: 364)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5991255044937134
    2. '):' → logprob: -1.3491255044937134
    3. '   ' → logprob: -1.9741255044937134
    4. '):
' → logprob: -2.974125385284424
    5. '):

' → logprob: -7.974125385284424
    6. '):
' → logprob: -8.599125862121582
    7. ')
' → logprob: -8.724125862121582
    8. '```' → logprob: -8.724125862121582
    9. '
' → logprob: -9.599125862121582
    10. '.' → logprob: -9.724125862121582

Token 78: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07854104787111282
    2. ')' → logprob: -3.0785410404205322
    3. '"""' → logprob: -3.8285410404205322
    4. '"""
' → logprob: -5.828541278839111
    5. '
' → logprob: -5.953541278839111
    6. ')
' → logprob: -6.953541278839111
    7. '"' → logprob: -7.453541278839111
    8. '```' → logprob: -8.328540802001953
    9. '""' → logprob: -8.828540802001953
    10. '\n' → logprob: -9.703540802001953

Token 79: ' Retour' (ID: 146830)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03076026774942875
    2. '"""' → logprob: -3.6557602882385254
    3. '"""
' → logprob: -6.280760288238525
    4. '
' → logprob: -7.280760288238525
    5. '\n' → logprob: -7.655760288238525
    6. '    
' → logprob: -7.655760288238525
    7. '""' → logprob: -8.030759811401367
    8. ' """' → logprob: -8.905759811401367
    9. '```' → logprob: -8.905759811401367
    10. ')' → logprob: -9.780759811401367

Token 80: 'ne' (ID: 611)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.008280038833618164
    2. 'ne' → logprob: -5.008279800415039
    3. '   ' → logprob: -7.508279800415039
    4. ':' → logprob: -8.383279800415039
    5. ' n' → logprob: -8.633279800415039
    6. 's' → logprob: -8.883279800415039
    7. 'ns' → logprob: -9.008279800415039
    8. 'ner' → logprob: -9.383279800415039
    9. 'nera' → logprob: -9.883279800415039
    10. '  ' → logprob: -10.508279800415039

Token 81: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7348398566246033
    2. ' :' → logprob: -0.7348398566246033
    3. ' le' → logprob: -3.359839916229248
    4. '   ' → logprob: -5.984839916229248
    5. '  ' → logprob: -6.859839916229248
    6. ' ' → logprob: -6.984839916229248
    7. ' int' → logprob: -7.109839916229248
    8. ' Le' → logprob: -8.85983943939209
    9. ' la' → logprob: -8.98483943939209
    10. ' ' → logprob: -9.10983943939209

Token 82: '   ' (ID: 271)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.2841065227985382
    2. '   ' → logprob: -1.4091064929962158
    3. 'int' → logprob: -5.909106731414795
    4. ' le' → logprob: -9.034106254577637
    5. '    ' → logprob: -10.034106254577637
    6. '(int' → logprob: -10.909106254577637
    7. ' un' → logprob: -11.659106254577637
    8. ' (' → logprob: -11.909106254577637
    9. '  ' → logprob: -12.159106254577637
    10. ' nombre' → logprob: -12.284106254577637

Token 83: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.00976199097931385
    2. '   ' → logprob: -5.134761810302734
    3. 'int' (adapté à ' int') → logprob: -6.134761810302734
    4. ' h' → logprob: -6.884761810302734
    5. ' (' → logprob: -7.634761810302734
    6. ' ceil' → logprob: -10.134761810302734
    7. '(int' → logprob: -10.384761810302734
    8. ' le' → logprob: -10.634761810302734
    9. ' n' → logprob: -11.384761810302734
    10. ' ' → logprob: -12.009761810302734

Token 84: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20110304653644562
    2. ' :' → logprob: -2.7011029720306396
    3. ':
' → logprob: -3.0761029720306396
    4. ' :
' → logprob: -3.8261029720306396
    5. '   ' → logprob: -4.451103210449219
    6. '\' → logprob: -4.576103210449219
    7. '\n' → logprob: -5.076103210449219
    8. ' 
' → logprob: -5.201103210449219
    9. '  
' → logprob: -5.951103210449219
    10. '.' → logprob: -6.201103210449219

Token 85: ' Le' (ID: 2018)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6526917219161987
    2. ' h' → logprob: -0.7776917219161987
    3. '(h' → logprob: -4.402691841125488
    4. ' le' → logprob: -5.777691841125488
    5. '   ' → logprob: -5.902691841125488
    6. ' ' → logprob: -7.277691841125488
    7. 'h' → logprob: -7.652691841125488
    8. ' Le' → logprob: -8.652691841125488
    9. ' la' → logprob: -8.777691841125488
    10. '(' → logprob: -9.152691841125488

Token 86: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.0013510684948414564
    2. 'nombre' → logprob: -7.1263508796691895
    3. '   ' → logprob: -8.126351356506348
    4. ' ' → logprob: -8.501351356506348
    5. ' nombres' → logprob: -11.001351356506348
    6. '  ' → logprob: -11.626351356506348
    7. ' ' → logprob: -12.001351356506348
    8. ' minimum' → logprob: -12.626351356506348
    9. 'n' → logprob: -13.126351356506348
    10. ' nombr' → logprob: -13.626351356506348

Token 87: ' minimal' (ID: 19957)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.2021681070327759
    2. ' ' → logprob: -1.3271681070327759
    3. ' de' → logprob: -1.5771681070327759
    4. '_' → logprob: -1.8271681070327759
    5. ' minimum' → logprob: -4.202167987823486
    6. ' minimal' → logprob: -4.452167987823486
    7. ' maximal' → logprob: -4.577167987823486
    8. ' nécessaire' → logprob: -4.952167987823486
    9. ' ' → logprob: -5.077167987823486
    10. ' 
' → logprob: -5.327167987823486

Token 88: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.1544562727212906
    2. ' ' → logprob: -2.029456377029419
    3. '_' → logprob: -5.27945613861084
    4. ' de' → logprob: -5.27945613861084
    5. '  ' → logprob: -7.90445613861084
    6. '   ' → logprob: -8.40445613861084
    7. 's' → logprob: -8.77945613861084
    8. ' 
' → logprob: -8.77945613861084
    9. ' nécessaire' → logprob: -9.02945613861084
    10. 'd' → logprob: -9.40445613861084

Token 89: ''' (ID: 6)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.49857860803604126
    2. '_' → logprob: -0.9985786080360413
    3. ''' → logprob: -4.1235785484313965
    4. ' d' → logprob: -5.9985785484313965
    5. ' espaces' → logprob: -6.6235785484313965
    6. ' a' → logprob: -7.3735785484313965
    7. '  ' → logprob: -7.8735785484313965
    8. ' attaques' → logprob: -7.9985785484313965
    9. '   ' → logprob: -8.123579025268555
    10. '```' → logprob: -8.248579025268555

Token 90: 'atta' (ID: 21246)
  Prédit: 'atta'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atta' → logprob: -0.0003210422000847757
    2. ' attaques' → logprob: -9.125321388244629
    3. ''' → logprob: -9.375321388244629
    4. 'attaque' → logprob: -10.000321388244629
    5. 'a' → logprob: -10.125321388244629
    6. 'att' → logprob: -10.500321388244629
    7. 'atte' → logprob: -12.250321388244629
    8. '```' → logprob: -13.125321388244629
    9. 'at' → logprob: -13.625321388244629
    10. 'ata' → logprob: -13.875321388244629

Token 91: 'ques' (ID: 3531)
  Prédit: 'ques'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ques' → logprob: -0.005479556508362293
    2. 'q' → logprob: -5.380479335784912
    3. 'c' → logprob: -7.630479335784912
    4. 'qu' → logprob: -8.25547981262207
    5. 'que' → logprob: -9.75547981262207
    6. 't' → logprob: -10.75547981262207
    7. 's' → logprob: -11.13047981262207
    8. 'quer' → logprob: -12.88047981262207
    9. '``' → logprob: -12.88047981262207
    10. '```' → logprob: -12.88047981262207

Token 92: ' nécessaires' (ID: 74402)
  Prédit: ' nécessaires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nécessaires' → logprob: -0.509297251701355
    2. '   ' → logprob: -1.009297251701355
    3. ' nécessaire' → logprob: -3.5092973709106445
    4. '.' → logprob: -7.1342973709106445
    5. ' ' → logprob: -7.3842973709106445
    6. '```' → logprob: -7.5092973709106445
    7. ' necess' → logprob: -7.8842973709106445
    8. '    
' → logprob: -8.134297370910645
    9. '.
' → logprob: -8.384297370910645
    10. '_' → logprob: -8.634297370910645

Token 93: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5744588375091553
    2. ':' → logprob: -1.0744588375091553
    3. ':
' → logprob: -3.1994588375091553
    4. '\n' → logprob: -3.9494588375091553
    5. '```' → logprob: -4.699459075927734
    6. ')' → logprob: -4.824459075927734
    7. '\' → logprob: -5.199459075927734
    8. '):' → logprob: -5.199459075927734
    9. '):
' → logprob: -5.949459075927734
    10. '.' → logprob: -6.699459075927734

Token 94: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01187950000166893
    2. '
' → logprob: -5.1368794441223145
    3. '"""' → logprob: -5.7618794441223145
    4. '\n' → logprob: -6.5118794441223145
    5. '    
' → logprob: -7.8868794441223145
    6. '```' → logprob: -8.011879920959473
    7. ')' → logprob: -8.136879920959473
    8. '"""
' → logprob: -9.261879920959473
    9. '"' → logprob: -9.761879920959473
    10. '' → logprob: -10.636879920959473

Token 95: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08569330722093582
    2. '\n' → logprob: -3.085693359375
    3. '
' → logprob: -3.585693359375
    4. '    
' → logprob: -5.085693359375
    5. '\' → logprob: -7.210693359375
    6. ' 
' → logprob: -7.835693359375
    7. '    ' → logprob: -7.960693359375
    8. '   
' → logprob: -8.210693359375
    9. 'n' → logprob: -8.460693359375
    10. '     
' → logprob: -8.585693359375

Token 96: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1146237924695015
    2. '
' → logprob: -2.239623785018921
    3. '    
' → logprob: -6.7396240234375
    4. '\n' → logprob: -8.2396240234375
    5. '' → logprob: -9.1146240234375
    6. ' 
' → logprob: -9.8646240234375
    7. '\' → logprob: -9.8646240234375
    8. '    ' → logprob: -9.9896240234375
    9. 'n' → logprob: -10.2396240234375
    10. '```' → logprob: -11.1146240234375

Token 97: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08335961401462555
    2. ' if' → logprob: -3.333359718322754
    3. 'if' → logprob: -4.583359718322754
    4. ' return' → logprob: -4.833359718322754
    5. 'return' → logprob: -5.083359718322754
    6. 'n' → logprob: -5.083359718322754
    7. '    
' → logprob: -5.333359718322754
    8. '
' → logprob: -5.583359718322754
    9. 'import' → logprob: -6.458359718322754
    10. ' 
' → logprob: -7.208359718322754

Token 98: ' Si' (ID: 7832)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9812032580375671
    2. ' return' → logprob: -1.106203317642212
    3. ' attacks' → logprob: -2.356203317642212
    4. 'import' → logprob: -2.481203317642212
    5. ' import' → logprob: -3.356203317642212
    6. ' if' → logprob: -3.481203317642212
    7. 'return' → logprob: -3.731203317642212
    8. ' (' → logprob: -5.606203079223633
    9. 'att' → logprob: -5.606203079223633
    10. ' n' → logprob: -5.731203079223633

Token 99: ' la' (ID: 557)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.002239946974441409
    2. 'h' → logprob: -6.502240180969238
    3. ' a' → logprob: -7.877240180969238
    4. ' ' → logprob: -8.252240180969238
    5. '  ' → logprob: -10.377240180969238
    6. '   ' → logprob: -10.627240180969238
    7. '	h' → logprob: -11.002240180969238
    8. ' ' → logprob: -11.627240180969238
    9. 'a' → logprob: -12.002240180969238
    10. ' (' → logprob: -12.564740180969238

Token 100: ' santé' (ID: 33201)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.09040089696645737
    2. 'h' → logprob: -2.4654009342193604
    3. ' ' → logprob: -7.090400695800781
    4. '   ' → logprob: -7.840400695800781
    5. ' valeur' → logprob: -9.465400695800781
    6. '  ' → logprob: -10.090400695800781
    7. 's' → logprob: -10.902900695800781
    8. '	h' → logprob: -11.215400695800781
    9. 'a' → logprob: -11.840400695800781
    10. '    ' → logprob: -11.965400695800781

Token 101: ' est' (ID: 893)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.24536222219467163
    2. '   ' → logprob: -2.6203622817993164
    3. ' ==' → logprob: -2.6203622817993164
    4. ' ' → logprob: -3.4953622817993164
    5. '_' → logprob: -3.7453622817993164
    6. ' <' → logprob: -4.370362281799316
    7. '    ' → logprob: -6.995362281799316
    8. '  ' → logprob: -7.245362281799316
    9. ' /' → logprob: -7.245362281799316
    10. ' >=' → logprob: -7.745362281799316

Token 102: ' exactement' (ID: 108701)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.2922903895378113
    2. ' inf' → logprob: -2.167290449142456
    3. ' ' → logprob: -3.417290449142456
    4. ' divisible' → logprob: -3.542290449142456
    5. '0' → logprob: -3.667290449142456
    6. '   ' → logprob: -4.042290210723877
    7. 'inf' → logprob: -4.417290210723877
    8. '<=' → logprob: -5.542290210723877
    9. ' inférieur' → logprob: -5.667290210723877
    10. 'h' → logprob: -5.792290210723877

Token 103: ' divisible' (ID: 167813)
  Prédit: ' divisible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' divisible' → logprob: -0.022804193198680878
    2. 'div' → logprob: -4.272804260253906
    3. '0' → logprob: -5.647804260253906
    4. '   ' → logprob: -6.147804260253906
    5. ' divis' → logprob: -6.272804260253906
    6. ' inf' → logprob: -8.397804260253906
    7. ' div' → logprob: -8.522804260253906
    8. ' a' → logprob: -8.647804260253906
    9. ' h' → logprob: -9.022804260253906
    10. '1' → logprob: -9.647804260253906

Token 104: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.1000659242272377
    2. '   ' → logprob: -2.9750659465789795
    3. 'par' → logprob: -3.6000659465789795
    4. ' ' → logprob: -4.4750657081604
    5. ' h' → logprob: -5.9750657081604
    6. '    ' → logprob: -6.3500657081604
    7. '  ' → logprob: -7.4750657081604
    8. 'h' → logprob: -8.475066184997559
    9. ' by' → logprob: -9.100066184997559
    10. '	par' → logprob: -9.725066184997559

Token 105: ' les' (ID: 1341)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.17999807000160217
    2. 'a' → logprob: -1.8049980401992798
    3. ' l' → logprob: -9.429998397827148
    4. ' ' → logprob: -9.804998397827148
    5. '	a' → logprob: -9.929998397827148
    6. ' ' → logprob: -10.429998397827148
    7. 'l' → logprob: -11.054998397827148
    8. ' la' → logprob: -12.054998397827148
    9. '   ' → logprob: -12.367498397827148
    10. '_a' → logprob: -13.492498397827148

Token 106: ' dégâts' (ID: 195715)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8833398222923279
    2. ' dégâts' → logprob: -0.8833398222923279
    3. ' attaques' → logprob: -2.5083398818969727
    4. ' a' → logprob: -2.7583398818969727
    5. 'atta' → logprob: -4.633339881896973
    6. 'd' → logprob: -4.633339881896973
    7. ' dommages' → logprob: -5.883339881896973
    8. 'attaque' → logprob: -6.633339881896973
    9. ' points' → logprob: -6.758339881896973
    10. ' atta' → logprob: -7.008339881896973

Token 107: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7451050877571106
    2. ':' → logprob: -1.1201050281524658
    3. ',' → logprob: -2.120105028152466
    4. ' :' → logprob: -2.745105028152466
    5. '    
' → logprob: -5.245105266571045
    6. ' :
' → logprob: -5.620105266571045
    7. ' ,' → logprob: -6.370105266571045
    8. ':
' → logprob: -6.495105266571045
    9. '    ' → logprob: -7.245105266571045
    10. '\' → logprob: -7.995105266571045

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010554377222433686
    2. '    ' → logprob: -7.7510552406311035
    3. '    
' → logprob: -8.126055717468262
    4. 'n' → logprob: -9.876055717468262
    5. ' return' → logprob: -9.876055717468262
    6. '  ' → logprob: -10.001055717468262
    7. ' ' → logprob: -10.626055717468262
    8. '   
' → logprob: -10.751055717468262
    9. '       ' → logprob: -11.251055717468262
    10. ' n' → logprob: -11.376055717468262

Token 109: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01083969883620739
    2. ' return' → logprob: -4.635839462280273
    3. 'return' → logprob: -7.510839462280273
    4. '    ' → logprob: -8.635839462280273
    5. '  ' → logprob: -9.135839462280273
    6. '       ' → logprob: -10.385839462280273
    7. '   ' → logprob: -10.385839462280273
    8. ' ' → logprob: -10.635839462280273
    9. '    
' → logprob: -10.885839462280273
    10. 'n' → logprob: -10.885839462280273

Token 110: ' le' (ID: 505)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4907858073711395
    2. ' return' → logprob: -0.9907858371734619
    3. 'return' → logprob: -4.240785598754883
    4. '    ' → logprob: -6.740785598754883
    5. '       ' → logprob: -8.490785598754883
    6. '  ' → logprob: -8.990785598754883
    7. '   ' → logprob: -9.115785598754883
    8. ' n' → logprob: -9.365785598754883
    9. '    
' → logprob: -9.365785598754883
    10. '	return' → logprob: -9.865785598754883

Token 111: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.0699373260140419
    2. ' return' → logprob: -2.944937229156494
    3. 'nombre' → logprob: -5.069937229156494
    4. '   ' → logprob: -5.069937229156494
    5. 'return' → logprob: -6.819937229156494
    6. ' nombres' → logprob: -7.694937229156494
    7. ' nb' → logprob: -8.194937705993652
    8. ' retour' → logprob: -9.069937705993652
    9. ' result' → logprob: -9.069937705993652
    10. ' n' → logprob: -9.194937705993652

Token 112: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.4150080680847168
    2. '_' → logprob: -1.6650080680847168
    3. '   ' → logprob: -2.165008068084717
    4. '_d' → logprob: -4.290008068084717
    5. ' ' → logprob: -5.165008068084717
    6. 'd' → logprob: -5.415008068084717
    7. '    ' → logprob: -5.415008068084717
    8. ' de' → logprob: -5.540008068084717
    9. '  ' → logprob: -6.665008068084717
    10. '_de' → logprob: -7.040008068084717

Token 113: ''' (ID: 6)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.6891016364097595
    2. '_' → logprob: -1.4391016960144043
    3. '   ' → logprob: -1.9391016960144043
    4. ' ' → logprob: -2.9391016960144043
    5. '    ' → logprob: -4.064101696014404
    6. ' /' → logprob: -4.189101696014404
    7. ' _' → logprob: -4.314101696014404
    8. ' de' → logprob: -5.189101696014404
    9. '  ' → logprob: -5.439101696014404
    10. ' attaques' → logprob: -6.689101696014404

Token 114: 'atta' (ID: 21246)
  Prédit: 'atta'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atta' → logprob: -0.14974252879619598
    2. ' attaques' → logprob: -2.024742603302002
    3. 'att' → logprob: -5.399742603302002
    4. ' atta' → logprob: -7.274742603302002
    5. 'attaque' → logprob: -7.524742603302002
    6. ' attacks' → logprob: -7.774742603302002
    7. '   ' → logprob: -8.899742126464844
    8. ' ' → logprob: -9.024742126464844
    9. ' ataques' → logprob: -9.399742126464844
    10. '```' → logprob: -9.524742126464844

Token 115: 'ques' (ID: 3531)
  Prédit: 'ques'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ques' → logprob: -0.34874609112739563
    2. 't' → logprob: -1.7237460613250732
    3. 'q' → logprob: -2.4737460613250732
    4. 'c' → logprob: -4.848746299743652
    5. 'que' → logprob: -4.973746299743652
    6. 'qu' → logprob: -5.098746299743652
    7. '   ' → logprob: -5.973746299743652
    8. 'ta' → logprob: -6.223746299743652
    9. '	' → logprob: -7.223746299743652
    10. '       ' → logprob: -7.473746299743652

Token 116: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08782598376274109
    2. '=' → logprob: -3.5878260135650635
    3. ' nécessaires' → logprob: -3.8378260135650635
    4. '   ' → logprob: -4.712825775146484
    5. ' nécessaire' → logprob: -4.962825775146484
    6. ' est' → logprob: -4.962825775146484
    7. ' ' → logprob: -5.087825775146484
    8. ' égal' → logprob: -6.712825775146484
    9. '    ' → logprob: -6.962825775146484
    10. ' ég' → logprob: -7.212825775146484

Token 117: ' la' (ID: 557)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.006029992830008268
    2. 'h' → logprob: -5.131030082702637
    3. ' ' → logprob: -9.631030082702637
    4. '   ' → logprob: -11.006030082702637
    5. ' ' → logprob: -11.506030082702637
    6. ' (' → logprob: -13.006030082702637
    7. '	h' → logprob: -13.256030082702637
    8. '    ' → logprob: -13.506030082702637
    9. ' equal' → logprob: -14.818530082702637
    10. '  ' → logprob: -15.006030082702637

Token 118: ' division' (ID: 21629)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.1541631668806076
    2. ' h' → logprob: -2.779163122177124
    3. ' division' → logprob: -2.904163122177124
    4. 'division' → logprob: -4.779163360595703
    5. 's' → logprob: -5.154163360595703
    6. '   ' → logprob: -5.529163360595703
    7. ' santé' → logprob: -6.029163360595703
    8. 'int' → logprob: -6.529163360595703
    9. 'div' → logprob: -6.904163360595703
    10. ' ' → logprob: -7.154163360595703

Token 119: ' entière' (ID: 61583)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -1.0071783065795898
    2. '   ' → logprob: -1.1321783065795898
    3. ' entière' → logprob: -1.6321783065795898
    4. 'h' → logprob: -2.75717830657959
    5. ' ent' → logprob: -3.88217830657959
    6. ' ' → logprob: -4.13217830657959
    7. 'ent' → logprob: -6.00717830657959
    8. ' integer' → logprob: -6.25717830657959
    9. '    ' → logprob: -6.38217830657959
    10. 'int' → logprob: -6.38217830657959

Token 120: '.
' (ID: 558)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.22878101468086243
    2. 'h' → logprob: -2.35378098487854
    3. '   ' → logprob: -2.35378098487854
    4. ' return' → logprob: -5.478781223297119
    5. ' de' → logprob: -6.103781223297119
    6. ' ' → logprob: -6.103781223297119
    7. 'return' → logprob: -6.853781223297119
    8. '    ' → logprob: -7.103781223297119
    9. ' suivante' → logprob: -7.603781223297119
    10. 'de' → logprob: -7.853781223297119

Token 121: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002532379236072302
    2. '    
' → logprob: -6.252532482147217
    3. ' 
' → logprob: -8.127532005310059
    4. '
' → logprob: -9.627532005310059
    5. '   
' → logprob: -9.752532005310059
    6. '  
' → logprob: -10.127532005310059
    7. ' return' → logprob: -10.377532005310059
    8. '\n' → logprob: -10.627532005310059
    9. '    ' → logprob: -10.627532005310059
    10. 'n' → logprob: -11.127532005310059

Token 122: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012935701524838805
    2. '    
' → logprob: -7.126293659210205
    3. 'return' → logprob: -9.001293182373047
    4. ' 
' → logprob: -9.126293182373047
    5. ' return' → logprob: -9.626293182373047
    6. '
' → logprob: -10.376293182373047
    7. 'if' (adapté à ' if') → logprob: -10.501293182373047
    8. ' if' → logprob: -10.626293182373047
    9. '    ' → logprob: -10.751293182373047
    10. '   
' → logprob: -10.751293182373047

Token 123: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.00010187433508690447
    2. 'h' → logprob: -10.000102043151855
    3. ' ' → logprob: -10.250102043151855
    4. ' ' → logprob: -10.875102043151855
    5. ' (' → logprob: -13.625102043151855
    6. '	h' → logprob: -14.125102043151855
    7. ' ‌' → logprob: -16.00010108947754
    8. ' ' → logprob: -16.12510108947754
    9. '  ' → logprob: -16.75010108947754
    10. '(h' → logprob: -17.62510108947754

Token 124: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.02517670765519142
    2. ' ' → logprob: -3.775176763534546
    3. '%' → logprob: -6.275176525115967
    4. '  ' → logprob: -11.775177001953125
    5. ' <=' → logprob: -11.775177001953125
    6. ' ' → logprob: -12.275177001953125
    7. '   ' → logprob: -12.275177001953125
    8. ' //' → logprob: -12.525177001953125
    9. ' %
' → logprob: -12.775177001953125
    10. ' ==' → logprob: -12.900177001953125

Token 125: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.20143507421016693
    2. 'a' → logprob: -1.7014350891113281
    3. ' ' → logprob: -11.451435089111328
    4. '	a' → logprob: -11.576435089111328
    5. ' ' → logprob: -15.076435089111328
    6. '  ' → logprob: -15.076435089111328
    7. '>a' → logprob: -15.201435089111328
    8. '_a' → logprob: -15.576435089111328
    9. ' а' → logprob: -15.826435089111328
    10. '   ' → logprob: -15.888935089111328

Token 126: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.011057846248149872
    2. '==' → logprob: -4.5110578536987305
    3. ' =' → logprob: -13.01105785369873
    4. ' ' → logprob: -13.01105785369873
    5. ':' → logprob: -13.26105785369873
    6. '=' → logprob: -13.63605785369873
    7. ')' → logprob: -14.01105785369873
    8. ')==' → logprob: -14.13605785369873
    9. ' ===' → logprob: -15.13605785369873
    10. '0' → logprob: -15.38605785369873

Token 127: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.061967797577381134
    2. ' ' → logprob: -2.8119678497314453
    3. '   ' → logprob: -16.186967849731445
    4. '۰' → logprob: -17.186967849731445
    5. ' ' → logprob: -17.186967849731445
    6. '  ' → logprob: -17.311967849731445
    7. '```' → logprob: -17.811967849731445
    8. '<|end|>' → logprob: -17.936967849731445
    9. '	' → logprob: -18.936967849731445
    10. '٠' → logprob: -19.374467849731445

Token 128: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012356207298580557
    2. ' ' → logprob: -9.000123977661133
    3. '   ' → logprob: -16.500123977661133
    4. '```' → logprob: -17.125123977661133
    5. '۰' → logprob: -17.562623977661133
    6. '  ' → logprob: -18.187623977661133
    7. '  ' → logprob: -18.625123977661133
    8. ' ' → logprob: -19.250123977661133
    9. 'o' → logprob: -19.312623977661133
    10. '০' → logprob: -19.312623977661133

Token 129: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00041863700607791543
    2. ':
' → logprob: -7.875418663024902
    3. ':return' → logprob: -10.500418663024902
    4. ' :' → logprob: -12.000418663024902
    5. '):' → logprob: -12.750418663024902
    6. '   ' → logprob: -14.250418663024902
    7. ',' → logprob: -14.750418663024902
    8. '       ' → logprob: -15.875418663024902
    9. ':

' → logprob: -16.000417709350586
    10. ')' → logprob: -16.500417709350586

Token 130: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010259343311190605
    2. '   ' → logprob: -5.26025915145874
    3. 'return' → logprob: -6.51025915145874
    4. '\n' → logprob: -6.76025915145874
    5. ' return' → logprob: -7.38525915145874
    6. '
' → logprob: -7.38525915145874
    7. ' h' → logprob: -8.385259628295898
    8. ':return' → logprob: -8.635259628295898
    9. 'n' → logprob: -8.760259628295898
    10. ':' → logprob: -9.135259628295898

Token 131: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0939267948269844
    2. 'return' (adapté à ' return') → logprob: -2.4689269065856934
    3. ' return' → logprob: -5.343926906585693
    4. '
' → logprob: -8.718926429748535
    5. '   ' → logprob: -10.593926429748535
    6. '           ' → logprob: -13.218926429748535
    7. '	return' → logprob: -13.468926429748535
    8. '        
' → logprob: -13.718926429748535
    9. '      ' → logprob: -13.968926429748535
    10. '    ' → logprob: -13.968926429748535

Token 132: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.47407835721969604
    2. 'h' → logprob: -0.974078357219696
    3. ' ' → logprob: -14.474078178405762
    4. '	h' → logprob: -14.724078178405762
    5. ' ' → logprob: -15.099078178405762
    6. '   ' → logprob: -17.474079132080078
    7. '(h' → logprob: -17.849079132080078
    8. ' ' → logprob: -18.099079132080078
    9. '"h' → logprob: -18.349079132080078
    10. ' (' → logprob: -18.724079132080078

Token 133: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.00462688785046339
    2. ' ' → logprob: -5.754626750946045
    3. '//' → logprob: -6.754626750946045
    4. ' ' → logprob: -9.004627227783203
    5. '   ' → logprob: -9.879627227783203
    6. 'a' → logprob: -10.004627227783203
    7. ' /' → logprob: -10.629627227783203
    8. '  ' → logprob: -11.879627227783203
    9. ' a' → logprob: -12.004627227783203
    10. '    ' → logprob: -12.004627227783203

Token 134: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004078401252627373
    2. ' a' → logprob: -5.504078388214111
    3. '	a' → logprob: -17.004077911376953
    4. ' ' → logprob: -17.504077911376953
    5. '   ' → logprob: -19.129077911376953
    6. '  ' → logprob: -19.629077911376953
    7. '_a' → logprob: -19.629077911376953
    8. 'а' → logprob: -20.754077911376953
    9. ' ' → logprob: -20.754077911376953
    10. '    ' → logprob: -21.629077911376953

Token 135: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08638852834701538
    2. '
' → logprob: -2.58638858795166
    3. '    
' → logprob: -4.96138858795166
    4. ' 
' → logprob: -8.71138858795166
    5. '  
' → logprob: -8.71138858795166
    6. '   
' → logprob: -9.71138858795166
    7. 'return' → logprob: -11.08638858795166
    8. 'else' → logprob: -11.71138858795166
    9. '
' → logprob: -12.08638858795166
    10. '\n' → logprob: -12.08638858795166

Token 136: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003099599271081388
    2. '    
' → logprob: -8.500309944152832
    3. '
' → logprob: -9.375309944152832
    4. 'return' → logprob: -11.375309944152832
    5. 'else' → logprob: -12.250309944152832
    6. '  
' → logprob: -13.750309944152832
    7. ' else' → logprob: -13.750309944152832
    8. ' return' → logprob: -14.000309944152832
    9. '   ' → logprob: -14.625309944152832
    10. '   
' → logprob: -14.875309944152832

Token 137: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027112659066915512
    2. 'else' (adapté à ' else') → logprob: -4.2771124839782715
    3. '
' → logprob: -4.9021124839782715
    4. ' else' → logprob: -5.5271124839782715
    5. 'return' → logprob: -7.0271124839782715
    6. '    
' → logprob: -7.9021124839782715
    7. ' 
' → logprob: -9.65211296081543
    8. '  
' → logprob: -10.15211296081543
    9. ' return' → logprob: -10.27711296081543
    10. '1' → logprob: -10.90211296081543

Token 138: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7876532673835754
    2. '       ' → logprob: -0.9126532673835754
    3. ':
' → logprob: -2.4126532077789307
    4. '   ' → logprob: -3.4126532077789307
    5. ' :
' → logprob: -4.78765344619751
    6. '    ' → logprob: -5.28765344619751
    7. '
' → logprob: -6.03765344619751
    8. ' :' → logprob: -6.66265344619751
    9. ':return' → logprob: -6.66265344619751
    10. ' return' → logprob: -7.28765344619751

Token 139: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23199503123760223
    2. ' return' → logprob: -2.231995105743408
    3. 'return' → logprob: -2.981995105743408
    4. '   ' → logprob: -3.981995105743408
    5. ' (' → logprob: -4.106995105743408
    6. '(h' → logprob: -4.606995105743408
    7. ' h' → logprob: -6.231995105743408
    8. '    ' → logprob: -6.606995105743408
    9. 'h' → logprob: -7.981995105743408
    10. '(' → logprob: -9.23199462890625

Token 140: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.026388194411993027
    2. ' return' → logprob: -3.776388168334961
    3. '       ' → logprob: -5.776388168334961
    4. '   ' → logprob: -10.276388168334961
    5. '	return' → logprob: -13.526388168334961
    6. '    ' → logprob: -14.651388168334961
    7. 'ret' → logprob: -15.401388168334961
    8. '
' → logprob: -15.776388168334961
    9. ' (' → logprob: -16.02638816833496
    10. 'import' → logprob: -16.15138816833496

Token 141: ' Sinon' (ID: 154924)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2300681173801422
    2. ' return' → logprob: -1.6050680875778198
    3. '       ' → logprob: -5.855068206787109
    4. '   ' → logprob: -6.355068206787109
    5. '
' → logprob: -11.23006820678711
    6. '    ' → logprob: -11.48006820678711
    7. 'ret' → logprob: -12.23006820678711
    8. '	return' → logprob: -12.98006820678711
    9. ' ' → logprob: -13.98006820678711
    10. '```' → logprob: -13.98006820678711

Token 142: ',' (ID: 11)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.04231461137533188
    2. 'return' → logprob: -3.6673145294189453
    3. '       ' → logprob: -4.292314529418945
    4. '   ' → logprob: -7.167314529418945
    5. '    ' → logprob: -7.667314529418945
    6. ' 
' → logprob: -8.667314529418945
    7. '    
' → logprob: -8.792314529418945
    8. ' ' → logprob: -8.917314529418945
    9. '
' → logprob: -9.042314529418945
    10. '        
' → logprob: -9.292314529418945

Token 143: ' il' (ID: 1793)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.09099587798118591
    2. 'return' → logprob: -2.4659957885742188
    3. '       ' → logprob: -6.465995788574219
    4. '    ' → logprob: -7.965995788574219
    5. '   ' → logprob: -9.215995788574219
    6. '        ' → logprob: -11.340995788574219
    7. '	return' → logprob: -11.590995788574219
    8. ' (' → logprob: -12.340995788574219
    9. ' ' → logprob: -12.590995788574219
    10. ' ' → logprob: -12.715995788574219

Token 144: ' faut' (ID: 17821)
  Prédit: ' faut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' faut' → logprob: -0.03414398059248924
    2. '   ' → logprob: -4.284143924713135
    3. ' faudra' → logprob: -4.659143924713135
    4. ' return' → logprob: -5.159143924713135
    5. ' faudrait' → logprob: -6.534143924713135
    6. ' f' → logprob: -6.659143924713135
    7. 'f' → logprob: -6.784143924713135
    8. 'return' → logprob: -8.409144401550293
    9. ' ' → logprob: -9.034144401550293
    10. ' faud' → logprob: -9.159144401550293

Token 145: ' une' (ID: 2463)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.912214457988739
    2. ' h' → logprob: -1.4122145175933838
    3. ' ajouter' → logprob: -1.9122145175933838
    4. ' return' → logprob: -2.662214517593384
    5. 'h' → logprob: -2.662214517593384
    6. 'return' → logprob: -3.412214517593384
    7. '   ' → logprob: -4.537214279174805
    8. ' ' → logprob: -5.037214279174805
    9. ' add' → logprob: -5.412214279174805
    10. '(h' → logprob: -6.037214279174805

Token 146: ' attaque' (ID: 166229)
  Prédit: 'attaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'attaque' → logprob: -0.056540943682193756
    2. ' attaque' → logprob: -2.9315409660339355
    3. 'atta' → logprob: -7.3065409660339355
    4. 'att' → logprob: -7.5565409660339355
    5. ' atta' → logprob: -8.806540489196777
    6. '1' → logprob: -9.056540489196777
    7. 'attack' → logprob: -9.806540489196777
    8. '   ' → logprob: -10.806540489196777
    9. 'atk' → logprob: -11.181540489196777
    10. '+' → logprob: -11.181540489196777

Token 147: ' supplémentaire' (ID: 111252)
  Prédit: ' supplémentaire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' supplémentaire' → logprob: -0.358094185590744
    2. '   ' → logprob: -1.6080942153930664
    3. ' de' → logprob: -2.4830942153930664
    4. 'de' → logprob: -4.983094215393066
    5. 'supp' → logprob: -5.358094215393066
    6. '    ' → logprob: -6.358094215393066
    7. ' ' → logprob: -6.983094215393066
    8. ' supplémentaires' → logprob: -7.608094215393066
    9. 's' → logprob: -7.733094215393066
    10. 'sup' → logprob: -8.108094215393066

Token 148: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.572577178478241
    2. 'return' → logprob: -1.8225772380828857
    3. '   ' → logprob: -1.8225772380828857
    4. ' return' → logprob: -2.5725772380828857
    5. '
' → logprob: -4.322576999664307
    6. '    ' → logprob: -4.697576999664307
    7. '.' → logprob: -6.322576999664307
    8. ' pour' → logprob: -6.322576999664307
    9. '<|end|>' → logprob: -6.447576999664307
    10. '1' → logprob: -6.572576999664307

Token 149: ' finir' (ID: 97022)
  Prédit: ' réduire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' réduire' → logprob: -0.8378759622573853
    2. ' couvrir' → logprob: -0.9628759622573853
    3. ' atteindre' → logprob: -2.4628758430480957
    4. ' atta' → logprob: -4.212875843048096
    5. ' assurer' → logprob: -4.587875843048096
    6. ' math' → logprob: -4.962875843048096
    7. ' comp' → logprob: -4.962875843048096
    8. 'int' → logprob: -4.962875843048096
    9. ' élim' → logprob: -5.087875843048096
    10. ' garantir' → logprob: -5.212875843048096

Token 150: ' l' (ID: 305)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11055988073348999
    2. '<|end|>' → logprob: -3.2355599403381348
    3. '  ' → logprob: -4.360559940338135
    4. '       ' → logprob: -4.485559940338135
    5. ' ' → logprob: -4.735559940338135
    6. '    ' → logprob: -4.860559940338135
    7. ' l' → logprob: -4.860559940338135
    8. ' la' → logprob: -5.610559940338135
    9. 'h' → logprob: -5.610559940338135
    10. ')' → logprob: -6.360559940338135

Token 151: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.08545496314764023
    2. 'e' → logprob: -3.0854549407958984
    3. ''ad' → logprob: -3.8354549407958984
    4. 'enn' → logprob: -5.585454940795898
    5. ''en' → logprob: -5.960454940795898
    6. 'a' → logprob: -6.210454940795898
    7. 'enemy' → logprob: -6.335454940795898
    8. ' enn' → logprob: -6.710454940795898
    9. 'es' → logprob: -7.460454940795898
    10. 'ad' → logprob: -7.835454940795898

Token 152: 'enn' (ID: 2362)
  Prédit: 'enn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enn' → logprob: -0.11477110534906387
    2. ''' → logprob: -2.4897711277008057
    3. ' enn' → logprob: -4.614770889282227
    4. 'h' → logprob: -5.114770889282227
    5. 'enemy' → logprob: -5.864770889282227
    6. 'ad' → logprob: -6.239770889282227
    7. ''ad' → logprob: -6.364770889282227
    8. 'e' → logprob: -8.364770889282227
    9. 'enem' → logprob: -8.364770889282227
    10. 'n' → logprob: -8.489770889282227

Token 153: 'emi' (ID: 18504)
  Prédit: 'emi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'emi' → logprob: -0.0003337969828862697
    2. ' emi' → logprob: -8.750333786010742
    3. 'emis' → logprob: -9.625333786010742
    4. 'e' → logprob: -10.375333786010742
    5. 'mi' → logprob: -10.875333786010742
    6. 'emie' → logprob: -11.125333786010742
    7. 'emy' → logprob: -12.000333786010742
    8. '   ' → logprob: -12.125333786010742
    9. 'em' → logprob: -12.250333786010742
    10. 'еми' → logprob: -12.875333786010742

Token 154: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19651073217391968
    2. '
' → logprob: -1.9465107917785645
    3. ' 
' → logprob: -4.1965107917785645
    4. '   ' → logprob: -5.1965107917785645
    5. 'return' → logprob: -5.5715107917785645
    6. ' return' → logprob: -5.9465107917785645
    7. '    
' → logprob: -5.9465107917785645
    8. '  
' → logprob: -6.5715107917785645
    9. '        
' → logprob: -6.6965107917785645
    10. '1' → logprob: -6.6965107917785645

Token 155: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012940469896420836
    2. ' return' → logprob: -7.501294136047363
    3. 'return' → logprob: -7.751294136047363
    4. '
' → logprob: -8.376294136047363
    5. '   ' → logprob: -9.501294136047363
    6. '           ' → logprob: -13.876294136047363
    7. '        
' → logprob: -14.251294136047363
    8. ' 
' → logprob: -14.376294136047363
    9. '      ' → logprob: -14.501294136047363
    10. '     ' → logprob: -14.876294136047363

Token 156: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.008159794844686985
    2. '       ' → logprob: -5.508159637451172
    3. ' return' → logprob: -5.508159637451172
    4. '   ' → logprob: -10.883159637451172
    5. '	return' → logprob: -14.758159637451172
    6. ' ' → logprob: -17.008159637451172
    7. '    ' → logprob: -17.258159637451172
    8. ':return' → logprob: -17.633159637451172
    9. '     ' → logprob: -17.758159637451172
    10. '
' → logprob: -17.758159637451172

Token 157: ' h' (ID: 312)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.778045117855072
    2. 'h' → logprob: -0.903045117855072
    3. ' h' → logprob: -2.528045177459717
    4. ' (' → logprob: -2.903045177459717
    5. '   ' → logprob: -7.653045177459717
    6. '(' → logprob: -9.778044700622559
    7. ' ' → logprob: -9.778044700622559
    8. '	h' → logprob: -9.903044700622559
    9. ' ' → logprob: -10.528044700622559
    10. '  ' → logprob: -11.715544700622559

Token 158: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.25199782848358154
    2. '//' → logprob: -1.5019978284835815
    3. ' ' → logprob: -9.626997947692871
    4. '   ' → logprob: -13.376997947692871
    5. ' ' → logprob: -14.626997947692871
    6. 'a' → logprob: -15.126997947692871
    7. '```' → logprob: -15.876997947692871
    8. '  ' → logprob: -16.251996994018555
    9. '#' → logprob: -16.251996994018555
    10. '	' → logprob: -16.751996994018555

Token 159: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -9.615255839889869e-05
    2. ' a' → logprob: -9.250096321105957
    3. '   ' → logprob: -19.00009536743164
    4. '	a' → logprob: -20.37509536743164
    5. ' ' → logprob: -21.00009536743164
    6. '  ' → logprob: -21.75009536743164
    7. '_a' → logprob: -22.37509536743164
    8. 'а' → logprob: -22.62509536743164
    9. ' ' → logprob: -23.25009536743164
    10. ''a' → logprob: -23.62509536743164

Token 160: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4740801155567169
    2. '+' → logprob: -0.9740800857543945
    3. ' plus' → logprob: -13.849080085754395
    4. '1' → logprob: -14.349080085754395
    5. '+
' → logprob: -14.474080085754395
    6. ' +
' → logprob: -14.724080085754395
    7. '   ' → logprob: -15.099080085754395
    8. '+a' → logprob: -16.22408103942871
    9. ' ' → logprob: -16.47408103942871
    10. '＋' → logprob: -16.97408103942871

Token 161: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '   ' → logprob: -17.625009536743164
    4. '```' → logprob: -20.625009536743164
    5. '  ' → logprob: -21.500009536743164
    6. ' ' → logprob: -22.750009536743164
    7. '۱' → logprob: -23.625009536743164
    8. '    ' → logprob: -24.125009536743164
    9. '' → logprob: -24.125009536743164
    10. '１' → logprob: -24.500009536743164

Token 162: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '```' → logprob: -18.375
    4. '   ' → logprob: -19.125
    5. '
' → logprob: -21.0
    6. '۱' → logprob: -21.375
    7. '১' → logprob: -22.0
    8. '  ' → logprob: -22.125
    9. '<|end|>' → logprob: -22.1875
    10. '१' → logprob: -22.5

Token 163: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39084964990615845
    2. '<|end|>' → logprob: -1.5158495903015137
    3. '\n' → logprob: -2.5158495903015137
    4. '```' → logprob: -4.140849590301514
    5. 'newline' → logprob: -6.140849590301514
    6. '\' → logprob: -6.515849590301514
    7. '<|end|>' → logprob: -6.890849590301514
    8. '#' → logprob: -7.140849590301514
    9. '' → logprob: -7.515849590301514
    10. ')' → logprob: -8.140850067138672

Token 164: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13794364035129547
    2. '\n' → logprob: -2.637943744659424
    3. '<|end|>' → logprob: -3.262943744659424
    4. 'def' → logprob: -5.137943744659424
    5. '```' → logprob: -5.512943744659424
    6. '\' → logprob: -5.887943744659424
    7. '#' → logprob: -6.012943744659424
    8. '  
' → logprob: -7.262943744659424
    9. '<|end|>' → logprob: -7.512943744659424
    10. 'newline' → logprob: -7.512943744659424

Token 165: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.17305362224578857
    2. ' calculate' → logprob: -2.548053741455078
    3. ' max' → logprob: -3.548053741455078
    4. ' simulate' → logprob: -4.423053741455078
    5. ' compute' → logprob: -5.173053741455078
    6. ' solve' → logprob: -5.423053741455078
    7. ' is' → logprob: -5.548053741455078
    8. ' attack' → logprob: -5.673053741455078
    9. ' total' → logprob: -5.923053741455078
    10. ' damage' → logprob: -6.173053741455078

Token 166: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0003825293097179383
    2. '(' → logprob: -8.875382423400879
    3. ' ():' → logprob: -9.000382423400879
    4. '_' → logprob: -9.500382423400879
    5. ':' → logprob: -11.125382423400879
    6. '():
' → logprob: -11.250382423400879
    7. '()' → logprob: -11.875382423400879
    8. '_:' → logprob: -12.000382423400879
    9. '(:' → logprob: -14.125382423400879
    10. '(":' → logprob: -14.500382423400879

Token 167: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5453653335571289
    2. ' 
' → logprob: -0.9203653335571289
    3. '    
' → logprob: -4.795365333557129
    4. '
' → logprob: -5.170365333557129
    5. ' h' → logprob: -6.045365333557129
    6. ' ' → logprob: -6.420365333557129
    7. 'n' → logprob: -6.545365333557129
    8. '    ' → logprob: -7.795365333557129
    9. '  
' → logprob: -7.920365333557129
    10. 'h' → logprob: -8.295365333557129

Token 168: ' """
' (ID: 7037)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.18216924369335175
    2. 'h' → logprob: -1.8071691989898682
    3. '   ' → logprob: -6.807169437408447
    4. ' n' → logprob: -7.807169437408447
    5. ' import' → logprob: -8.057168960571289
    6. ' while' → logprob: -8.682168960571289
    7. 'n' → logprob: -9.182168960571289
    8. 'import' → logprob: -9.557168960571289
    9. ' ' → logprob: -10.557168960571289
    10. ' 
' → logprob: -10.807168960571289

Token 169: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6819344162940979
    2. ' h' → logprob: -1.3069343566894531
    3. 'h' → logprob: -1.6819343566894531
    4. '#' → logprob: -4.056934356689453
    5. ' #' → logprob: -4.431934356689453
    6. ' n' → logprob: -6.431934356689453
    7. ' print' → logprob: -6.806934356689453
    8. '    ' → logprob: -7.056934356689453
    9. ' import' → logprob: -7.306934356689453
    10. 'n' → logprob: -7.619434356689453

Token 170: ' Lit' (ID: 45595)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.6397745609283447
    2. ' h' → logprob: -1.3897745609283447
    3. '#' → logprob: -2.5147745609283447
    4. '   ' → logprob: -3.1397745609283447
    5. ' #' → logprob: -3.6397745609283447
    6. ' print' → logprob: -4.264774322509766
    7. 'print' → logprob: -4.514774322509766
    8. ' n' → logprob: -5.389774322509766
    9. 'n' → logprob: -5.389774322509766
    10. ' nombre' → logprob: -5.639774322509766

Token 171: ' l' (ID: 305)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.6486161351203918
    2. ' l' → logprob: -1.648616075515747
    3. ' la' → logprob: -2.148616075515747
    4. ' le' → logprob: -3.023616075515747
    5. ' ' → logprob: -3.273616075515747
    6. ' un' → logprob: -4.023616313934326
    7. ' h' → logprob: -4.148616313934326
    8. ' des' → logprob: -4.148616313934326
    9. ' une' → logprob: -4.398616313934326
    10. 's' → logprob: -5.773616313934326

Token 172: ''entrée' (ID: 115820)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0235464572906494
    2. 'e' → logprob: -1.1485464572906494
    3. 'a' → logprob: -1.3985464572906494
    4. 'es' → logprob: -3.1485464572906494
    5. ' a' → logprob: -4.02354621887207
    6. ''' → logprob: -6.39854621887207
    7. 'import' → logprob: -6.39854621887207
    8. ' e' → logprob: -6.64854621887207
    9. ' nombre' → logprob: -6.64854621887207
    10. ' input' → logprob: -6.77354621887207

Token 173: ' standard' (ID: 7024)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03437770903110504
    2. ' h' → logprob: -4.659377574920654
    3. ',' → logprob: -4.909377574920654
    4. ':' → logprob: -5.534377574920654
    5. 'h' → logprob: -6.034377574920654
    6. '    
' → logprob: -6.534377574920654
    7. '()' → logprob: -6.784377574920654
    8. 'def' → logprob: -6.909377574920654
    9. '    ' → logprob: -7.034377574920654
    10. ' et' → logprob: -7.159377574920654

Token 174: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13841228187084198
    2. ',' → logprob: -2.3884122371673584
    3. ' et' → logprob: -3.7634122371673584
    4. ' ,' → logprob: -4.8884124755859375
    5. '    
' → logprob: -6.1384124755859375
    6. ' h' → logprob: -6.5134124755859375
    7. '
' → logprob: -7.3884124755859375
    8. ' pour' → logprob: -7.5134124755859375
    9. ':' → logprob: -8.388412475585938
    10. 'h' → logprob: -8.388412475585938

Token 175: ' obtenir' (ID: 54423)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.10420829802751541
    2. ' ' → logprob: -4.229208469390869
    3. ' récupérer' → logprob: -4.354208469390869
    4. ' la' → logprob: -4.604208469390869
    5. 'h' → logprob: -4.854208469390869
    6. ' nombre' → logprob: -5.104208469390869
    7. ' obtenir' → logprob: -5.604208469390869
    8. ' les' → logprob: -5.604208469390869
    9. ' recevoir' → logprob: -5.729208469390869
    10. ' n' → logprob: -5.729208469390869

Token 176: ' la' (ID: 557)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.39688265323638916
    2. ' h' → logprob: -1.6468826532363892
    3. ' la' → logprob: -2.5218825340270996
    4. ' deux' → logprob: -3.7718825340270996
    5. ' le' → logprob: -4.5218825340271
    6. ' l' → logprob: -4.6468825340271
    7. 'les' → logprob: -5.7718825340271
    8. 'h' → logprob: -5.8968825340271
    9. ' ' → logprob: -6.7718825340271
    10. 's' → logprob: -7.3968825340271

Token 177: ' santé' (ID: 33201)
  Prédit: ' nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.5207805633544922
    2. 's' → logprob: -1.8957805633544922
    3. 'nombre' → logprob: -1.8957805633544922
    4. ' valeur' → logprob: -3.520780563354492
    5. ' santé' → logprob: -3.770780563354492
    6. 'val' → logprob: -3.895780563354492
    7. 't' → logprob: -4.895780563354492
    8. ' ' → logprob: -5.395780563354492
    9. 'h' → logprob: -5.645780563354492
    10. '   ' → logprob: -5.770780563354492

Token 178: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.593672513961792
    2. ' et' → logprob: -0.968672513961792
    3. ',' → logprob: -3.218672513961792
    4. 'et' → logprob: -4.218672752380371
    5. '    ' → logprob: -5.843672752380371
    6. ' ,' → logprob: -6.093672752380371
    7. ' de' → logprob: -6.218672752380371
    8. ' ' → logprob: -6.593672752380371
    9. ' h' → logprob: -6.843672752380371
    10. ' and' → logprob: -7.093672752380371

Token 179: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.07885816693305969
    2. 'l' → logprob: -2.7038581371307373
    3. ' ' → logprob: -5.078858375549316
    4. ' la' → logprob: -7.828858375549316
    5. ')' → logprob: -8.328858375549316
    6. ' enemy' → logprob: -8.328858375549316
    7. '   ' → logprob: -8.453858375549316
    8. ' '' → logprob: -8.453858375549316
    9. ''' → logprob: -8.703858375549316
    10. 'enemy' → logprob: -9.078858375549316

Token 180: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.029543226584792137
    2. ' enn' → logprob: -4.279543399810791
    3. 'enn' → logprob: -4.779543399810791
    4. ''utilisateur' → logprob: -6.654543399810791
    5. ''ad' → logprob: -7.154543399810791
    6. 'enemy' → logprob: -7.154543399810791
    7. 'e' → logprob: -7.279543399810791
    8. '   ' → logprob: -7.529543399810791
    9. ' ' → logprob: -7.779543399810791
    10. ''ent' → logprob: -8.279542922973633

Token 181: 'enn' (ID: 2362)
  Prédit: 'enn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enn' → logprob: -0.16213537752628326
    2. ''' → logprob: -2.412135362625122
    3. ' enn' → logprob: -2.912135362625122
    4. 'enemy' → logprob: -6.037135601043701
    5. ' ' → logprob: -7.787135601043701
    6. ' ennem' → logprob: -7.912135601043701
    7. ''ad' → logprob: -8.037135124206543
    8. ''utilisateur' → logprob: -8.287135124206543
    9. 'en' → logprob: -8.287135124206543
    10. '   ' → logprob: -8.599635124206543

Token 182: 'emi' (ID: 18504)
  Prédit: 'emi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'emi' → logprob: -6.372916686814278e-05
    2. 'emy' → logprob: -10.8750638961792
    3. 'emie' → logprob: -11.1250638961792
    4. 'emis' → logprob: -11.3750638961792
    5. ' emi' → logprob: -11.8750638961792
    6. 'e' → logprob: -12.2500638961792
    7. 'mi' → logprob: -13.2500638961792
    8. 'em' → logprob: -13.5000638961792
    9. 'emies' → logprob: -13.6250638961792
    10. 'еми' → logprob: -14.0000638961792

Token 183: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17437385022640228
    2. ',' → logprob: -1.9243738651275635
    3. ' et' → logprob: -4.674373626708984
    4. ' ,' → logprob: -5.924373626708984
    5. 'et' → logprob: -7.549373626708984
    6. ')' → logprob: -8.049373626708984
    7. ' (' → logprob: -8.299373626708984
    8. ',
' → logprob: -8.799373626708984
    9. '    ' → logprob: -8.924373626708984
    10. ' and' → logprob: -9.174373626708984

Token 184: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.9085320234298706
    2. 'les' → logprob: -1.4085320234298706
    3. 'le' → logprob: -1.7835320234298706
    4. ' le' → logprob: -1.7835320234298706
    5. 'l' → logprob: -5.15853214263916
    6. 'la' → logprob: -5.40853214263916
    7. ' l' → logprob: -6.03353214263916
    8. ' la' → logprob: -6.90853214263916
    9. 'd' → logprob: -7.28353214263916
    10. 'a' → logprob: -8.03353214263916

Token 185: ' dégâts' (ID: 195715)
  Prédit: ' dégâts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dégâts' → logprob: -0.0029129309114068747
    2. 'd' → logprob: -6.377912998199463
    3. ' dommages' → logprob: -7.002912998199463
    4. ' dég' → logprob: -9.252912521362305
    5. ' points' → logprob: -9.377912521362305
    6. ' attaques' → logprob: -9.752912521362305
    7. '_d' → logprob: -11.127912521362305
    8. 'deg' → logprob: -11.627912521362305
    9. 'a' → logprob: -12.252912521362305
    10. ' données' → logprob: -12.252912521362305

Token 186: ' par' (ID: 686)
  Prédit: ' infl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' infl' → logprob: -0.33729684352874756
    2. ',' → logprob: -1.8372968435287476
    3. '   ' → logprob: -2.462296962738037
    4. ' par' → logprob: -4.087296962738037
    5. 'infl' → logprob: -4.337296962738037
    6. ' ,' → logprob: -5.212296962738037
    7. ' inflicted' → logprob: -6.837296962738037
    8. 'par' → logprob: -7.087296962738037
    9. ' de' → logprob: -7.087296962738037
    10. ' et' → logprob: -7.337296962738037

Token 187: ' attaque' (ID: 166229)
  Prédit: 'attaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'attaque' → logprob: -0.5839449763298035
    2. ' attaque' → logprob: -0.8339449763298035
    3. ' ' → logprob: -5.958944797515869
    4. ' atta' → logprob: -6.083944797515869
    5. ' une' → logprob: -6.833944797515869
    6. 'att' → logprob: -7.583944797515869
    7. 'atta' → logprob: -7.708944797515869
    8. 'une' → logprob: -8.458945274353027
    9. ' attaques' → logprob: -8.833945274353027
    10. ' espace' → logprob: -8.958945274353027

Token 188: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.050591208040714264
    2. '   ' → logprob: -3.300591230392456
    3. ',
' → logprob: -5.050590991973877
    4. '.' → logprob: -5.175590991973877
    5. ' ,' → logprob: -8.925591468811035
    6. 'def' → logprob: -10.050591468811035
    7. '
' → logprob: -10.175591468811035
    8. '    
' → logprob: -10.300591468811035
    9. 's' → logprob: -10.425591468811035
    10. ' puis' → logprob: -10.675591468811035

Token 189: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14034819602966309
    2. ' puis' → logprob: -2.390348196029663
    3. 'p' → logprob: -3.265348196029663
    4. ' et' → logprob: -7.890348434448242
    5. '    ' → logprob: -8.265348434448242
    6. ' les' → logprob: -8.765348434448242
    7. 'et' → logprob: -9.515348434448242
    8. '    
' → logprob: -9.765348434448242
    9. ' p' → logprob: -10.515348434448242
    10. '  ' → logprob: -10.640348434448242

Token 190: ' puis' (ID: 18766)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1856672614812851
    2. ' puis' → logprob: -1.9356672763824463
    3. 'p' → logprob: -4.185667037963867
    4. ' les' → logprob: -5.185667037963867
    5. 'ens' → logprob: -6.935667037963867
    6. ' et' → logprob: -7.810667037963867
    7. ' p' → logprob: -8.060667037963867
    8. ' ensuite' → logprob: -8.310667037963867
    9. '    
' → logprob: -8.560667037963867
    10. '    ' → logprob: -8.560667037963867

Token 191: ' affiche' (ID: 127479)
  Prédit: ' appelle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' appelle' → logprob: -0.14423690736293793
    2. ' calc' → logprob: -3.1442368030548096
    3. ' affiche' → logprob: -3.1442368030548096
    4. '   ' → logprob: -3.7692368030548096
    5. ' utilise' → logprob: -4.644237041473389
    6. ' imprime' → logprob: -5.394237041473389
    7. ' calcul' → logprob: -6.644237041473389
    8. 'cal' → logprob: -6.894237041473389
    9. ' appel' → logprob: -7.019237041473389
    10. '
' → logprob: -7.019237041473389

Token 192: ' le' (ID: 505)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.32570603489875793
    2. ' le' → logprob: -1.3257060050964355
    3. '("' → logprob: -5.3257060050964355
    4. '('' → logprob: -5.7007060050964355
    5. '(
' → logprob: -6.3257060050964355
    6. ' la' → logprob: -7.3257060050964355
    7. ' ' → logprob: -7.5757060050964355
    8. ' (' → logprob: -8.325706481933594
    9. '(le' → logprob: -8.700706481933594
    10. 'le' → logprob: -8.950706481933594

Token 193: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.040214866399765015
    2. ' résultat' → logprob: -3.415214776992798
    3. 'nombre' → logprob: -5.040215015411377
    4. 'rés' → logprob: -10.415214538574219
    5. ' ' → logprob: -12.040214538574219
    6. ' résultats' → logprob: -12.165214538574219
    7. ' resultat' → logprob: -12.165214538574219
    8. ' nombres' → logprob: -12.290214538574219
    9. 'result' → logprob: -12.540214538574219
    10. '_nombre' → logprob: -12.665214538574219

Token 194: ' minimal' (ID: 19957)
  Prédit: ' minimal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimal' → logprob: -0.004620353225618601
    2. ' minimum' → logprob: -5.879620552062988
    3. ' d' → logprob: -7.504620552062988
    4. ' maximal' → logprob: -7.754620552062988
    5. ' de' → logprob: -7.879620552062988
    6. 'minimal' → logprob: -8.129620552062988
    7. ' minimale' → logprob: -9.504620552062988
    8. ' min' → logprob: -10.504620552062988
    9. ' total' → logprob: -11.129620552062988
    10. ' optimal' → logprob: -11.754620552062988

Token 195: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.0007363698096014559
    2. 'd' → logprob: -7.250736236572266
    3. '   ' → logprob: -11.375736236572266
    4. ' de' → logprob: -12.375736236572266
    5. ' nécessaire' → logprob: -12.375736236572266
    6. ' ' → logprob: -12.875736236572266
    7. ' ' → logprob: -13.125736236572266
    8. '  ' → logprob: -14.625736236572266
    9. '	d' → logprob: -15.000736236572266
    10. '    ' → logprob: -15.125736236572266

Token 196: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.016866575926542282
    2. ' ' → logprob: -4.391866683959961
    3. ' d' → logprob: -5.891866683959961
    4. ' '' → logprob: -7.516866683959961
    5. '_' → logprob: -7.891866683959961
    6. '  ' → logprob: -8.141866683959961
    7. ' a' → logprob: -9.641866683959961
    8. ''espace' → logprob: -10.266866683959961
    9. ''é' → logprob: -10.766866683959961
    10. '   ' → logprob: -10.766866683959961

Token 197: 'atta' (ID: 21246)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.18673914670944214
    2. 'atta' → logprob: -1.811739206314087
    3. ' attaques' → logprob: -5.061738967895508
    4. ''att' → logprob: -9.311738967895508
    5. '"' → logprob: -9.436738967895508
    6. '’' → logprob: -9.561738967895508
    7. '_' → logprob: -9.811738967895508
    8. '   ' → logprob: -9.936738967895508
    9. '```' → logprob: -10.436738967895508
    10. ''''' → logprob: -10.561738967895508

Token 198: 'ques' (ID: 3531)
  Prédit: 'ques'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ques' → logprob: -0.003209918737411499
    2. 'q' → logprob: -6.878210067749023
    3. 'qu' → logprob: -7.503210067749023
    4. 'que' → logprob: -7.753210067749023
    5. 'tes' → logprob: -7.878210067749023
    6. 't' → logprob: -8.753210067749023
    7. '```' → logprob: -9.003210067749023
    8. 'c' → logprob: -9.128210067749023
    9. '``' → logprob: -9.253210067749023
    10. 'u' → logprob: -10.378210067749023

Token 199: ' nécessaires' (ID: 74402)
  Prédit: ' nécessaires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nécessaires' → logprob: -0.09670752286911011
    2. ' nécessaire' → logprob: -2.846707582473755
    3. '   ' → logprob: -3.596707582473755
    4. ' necess' → logprob: -6.346707344055176
    5. ' necessary' → logprob: -6.846707344055176
    6. ' ' → logprob: -6.846707344055176
    7. 'né' → logprob: -7.221707344055176
    8. 'necess' → logprob: -8.096707344055176
    9. ' ' → logprob: -8.096707344055176
    10. 'necessary' → logprob: -8.346707344055176

Token 200: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13538357615470886
    2. '.' → logprob: -2.1353836059570312
    3. '.
' → logprob: -5.760383605957031
    4. 'if' → logprob: -6.010383605957031
    5. '
' → logprob: -7.135383605957031
    6. 'def' → logprob: -7.635383605957031
    7. ' en' → logprob: -7.760383605957031
    8. ' à' → logprob: -8.385383605957031
    9. ',' → logprob: -8.635383605957031
    10. ' if' → logprob: -8.760383605957031

Token 201: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2610880732536316
    2. '
' → logprob: -1.5110881328582764
    3. '    
' → logprob: -4.886087894439697
    4. ' 
' → logprob: -7.636087894439697
    5. '  
' → logprob: -7.636087894439697
    6. '   
' → logprob: -8.761088371276855
    7. '\n' → logprob: -8.886088371276855
    8. ' ' → logprob: -9.511088371276855
    9. '```' → logprob: -9.636088371276855
    10. '\' → logprob: -10.636088371276855

Token 202: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4765918552875519
    2. '
' → logprob: -0.9765918254852295
    3. '    
' → logprob: -6.726592063903809
    4. 'import' → logprob: -7.476592063903809
    5. 'n' → logprob: -8.726592063903809
    6. 'input' → logprob: -9.101592063903809
    7. '  
' → logprob: -9.226592063903809
    8. '```' → logprob: -9.601592063903809
    9. 'h' → logprob: -9.726592063903809
    10. '\n' → logprob: -9.726592063903809

Token 203: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.046047456562519073
    2. ' h' → logprob: -3.2960474491119385
    3. 'h' → logprob: -5.546047687530518
    4. '
' → logprob: -6.546047687530518
    5. 'import' → logprob: -7.296047687530518
    6. '    
' → logprob: -7.671047687530518
    7. ' import' → logprob: -7.671047687530518
    8. ' 
' → logprob: -7.921047687530518
    9. 'n' → logprob: -8.17104721069336
    10. ' input' → logprob: -9.29604721069336

Token 204: ' #' (ID: 1069)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.11716743558645248
    2. ' h' → logprob: -2.2421674728393555
    3. '   ' → logprob: -6.1171674728393555
    4. 'import' → logprob: -6.6171674728393555
    5. ' import' → logprob: -7.8671674728393555
    6. 'n' → logprob: -8.742167472839355
    7. ' n' → logprob: -9.742167472839355
    8. 'inputs' → logprob: -10.242167472839355
    9. 'input' → logprob: -10.867167472839355
    10. ' inputs' → logprob: -10.992167472839355

Token 205: ' Lire' (ID: 57624)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.18278446793556213
    2. ' h' → logprob: -1.9327844381332397
    3. 'input' → logprob: -5.182784557342529
    4. 'inputs' → logprob: -5.432784557342529
    5. 'import' → logprob: -5.932784557342529
    6. ' input' → logprob: -6.057784557342529
    7. ' inputs' → logprob: -6.307784557342529
    8. ' import' → logprob: -7.057784557342529
    9. '   ' → logprob: -7.182784557342529
    10. 'n' → logprob: -7.432784557342529

Token 206: ' deux' (ID: 10301)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.01939578726887703
    2. ' l' → logprob: -4.14439582824707
    3. 'h' → logprob: -6.76939582824707
    4. ' ' → logprob: -7.01939582824707
    5. ' la' → logprob: -7.14439582824707
    6. ' les' → logprob: -9.01939582824707
    7. '   ' → logprob: -9.89439582824707
    8. ' le' → logprob: -9.89439582824707
    9. '_' → logprob: -10.26939582824707
    10. ' n' → logprob: -10.76939582824707

Token 207: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.253446489572525
    2. 'ent' → logprob: -2.128446578979492
    3. ' integers' → logprob: -2.503446578979492
    4. ' nombres' → logprob: -4.128446578979492
    5. ' ' → logprob: -6.253446578979492
    6. 'int' → logprob: -6.253446578979492
    7. ' entier' → logprob: -6.878446578979492
    8. ' valeurs' → logprob: -7.503446578979492
    9. ' espaces' → logprob: -7.753446578979492
    10. ' int' → logprob: -8.003446578979492

Token 208: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.01078475546091795
    2. 'rees' → logprob: -5.26078462600708
    3. 'ier' → logprob: -5.63578462600708
    4. 'r' → logprob: -6.63578462600708
    5. 'ières' → logprob: -7.76078462600708
    6. 'ires' → logprob: -10.260785102844238
    7. '   ' → logprob: -10.260785102844238
    8. 'ers' → logprob: -10.260785102844238
    9. 'er' → logprob: -10.760785102844238
    10. 'res' → logprob: -11.010785102844238

Token 209: ' depuis' (ID: 16277)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6689009070396423
    2. ',' → logprob: -1.543900966644287
    3. ' h' → logprob: -1.543900966644287
    4. 'h' → logprob: -4.043900966644287
    5. '(h' → logprob: -4.793900966644287
    6. '(' → logprob: -4.918900966644287
    7. 's' → logprob: -4.918900966644287
    8. '   ' → logprob: -5.293900966644287
    9. ' =' → logprob: -5.418900966644287
    10. ' (' → logprob: -6.168900966644287

Token 210: ' l' (ID: 305)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.2768914997577667
    2. 'input' → logprob: -1.9018914699554443
    3. ' l' → logprob: -2.5268914699554443
    4. 'l' → logprob: -4.651891708374023
    5. ' la' → logprob: -6.151891708374023
    6. '(input' → logprob: -8.026891708374023
    7. ' ' → logprob: -8.776891708374023
    8. '=input' → logprob: -9.026891708374023
    9. ' une' → logprob: -9.651891708374023
    10. ' ' → logprob: -9.651891708374023

Token 211: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.35101935267448425
    2. 'input' → logprob: -1.4760193824768066
    3. 'entrée' → logprob: -3.7260193824768066
    4. 'a' → logprob: -4.226019382476807
    5. ' input' → logprob: -4.226019382476807
    6. 'e' → logprob: -4.976019382476807
    7. 'es' → logprob: -6.226019382476807
    8. ''' → logprob: -6.226019382476807
    9. '=input' → logprob: -6.851019382476807
    10. '’entrée' → logprob: -7.476019382476807

Token 212: ' sépar' (ID: 97160)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.48512402176856995
    2. ',' → logprob: -1.7351239919662476
    3. ' h' → logprob: -2.985124111175537
    4. '   ' → logprob: -3.235124111175537
    5. 'h' → logprob: -3.485124111175537
    6. ' ' → logprob: -4.235124111175537
    7. ' =' → logprob: -4.235124111175537
    8. ' standard' → logprob: -4.360124111175537
    9. ' ,' → logprob: -4.860124111175537
    10. 's' → logprob: -5.235124111175537

Token 213: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.02330615743994713
    2. 'é' → logprob: -4.023306369781494
    3. 'e' → logprob: -5.648306369781494
    4. 'es' → logprob: -7.398306369781494
    5. ' par' → logprob: -8.273305892944336
    6. 'ée' → logprob: -9.023305892944336
    7. 'er' → logprob: -9.398305892944336
    8. 'ées' → logprob: -9.523305892944336
    9. ',' → logprob: -9.773305892944336
    10. 's' → logprob: -9.898305892944336

Token 214: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.25346702337265015
    2. 'par' → logprob: -1.503467082977295
    3. '_par' → logprob: -7.628467082977295
    4. ' ' → logprob: -8.628466606140137
    5. 'es' → logprob: -8.878466606140137
    6. 'space' → logprob: -9.128466606140137
    7. ' by' → logprob: -9.128466606140137
    8. 'by' → logprob: -9.628466606140137
    9. 'e' → logprob: -10.253466606140137
    10. ',' → logprob: -10.378466606140137

Token 215: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.09981200098991394
    2. 'un' → logprob: -3.2248120307922363
    3. ' espace' → logprob: -3.5998120307922363
    4. 'space' → logprob: -4.849812030792236
    5. ''espace' → logprob: -5.474812030792236
    6. ' espaces' → logprob: -5.599812030792236
    7. ''un' → logprob: -5.724812030792236
    8. ' ' → logprob: -6.224812030792236
    9. ' l' → logprob: -6.474812030792236
    10. ' une' → logprob: -6.599812030792236

Token 216: ' espace' (ID: 66004)
  Prédit: ' espace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espace' → logprob: -0.5649099349975586
    2. 'es' → logprob: -1.3149099349975586
    3. ''espace' → logprob: -1.9399099349975586
    4. 'esp' → logprob: -4.689909934997559
    5. '’espace' → logprob: -5.689909934997559
    6. 'space' → logprob: -5.939909934997559
    7. ' ' → logprob: -6.814909934997559
    8. 'e' → logprob: -6.939909934997559
    9. ''esp' → logprob: -7.064909934997559
    10. ''' → logprob: -7.939909934997559

Token 217: '
' (ID: 198)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.9254881143569946
    2. ' h' → logprob: -1.3004881143569946
    3. '   ' → logprob: -1.5504881143569946
    4. 's' → logprob: -2.925487995147705
    5. ' line' → logprob: -4.175487995147705
    6. 'n' → logprob: -4.300487995147705
    7. 'input' → logprob: -4.425487995147705
    8. ' =' → logprob: -5.300487995147705
    9. '    
' → logprob: -5.425487995147705
    10. 'line' → logprob: -6.050487995147705

Token 218: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030685000121593475
    2. 'input' → logprob: -5.155684947967529
    3. ' line' → logprob: -5.780684947967529
    4. 'h' → logprob: -5.905684947967529
    5. 'n' → logprob: -5.905684947967529
    6. '    
' → logprob: -6.030684947967529
    7. ':' → logprob: -6.280684947967529
    8. ',' → logprob: -6.280684947967529
    9. 's' → logprob: -6.280684947967529
    10. ' h' → logprob: -6.280684947967529

Token 219: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' (adapté à ' h') → logprob: -0.38737013936042786
    2. ' h' → logprob: -1.1373701095581055
    3. '   ' → logprob: -7.7623701095581055
    4. ' line' → logprob: -10.637370109558105
    5. ' input' → logprob: -11.887370109558105
    6. 'input' → logprob: -12.012370109558105
    7. ' inputs' → logprob: -12.012370109558105
    8. 'line' → logprob: -12.012370109558105
    9. 'inputs' → logprob: -12.012370109558105
    10. '	h' → logprob: -12.262370109558105

Token 220: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020532844064291567
    2. ',a' → logprob: -8.625205039978027
    3. ' ,' → logprob: -10.625205039978027
    4. 'a' → logprob: -13.625205039978027
    5. '_,' → logprob: -16.250205993652344
    6. ',h' → logprob: -16.500205993652344
    7. 's' → logprob: -17.125205993652344
    8. ',input' → logprob: -17.500205993652344
    9. ',
' → logprob: -17.750205993652344
    10. ',b' → logprob: -17.750205993652344

Token 221: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3869136571884155
    2. 'a' → logprob: -1.1369136571884155
    3. ' ' → logprob: -10.261913299560547
    4. '<|end|>' → logprob: -12.511913299560547
    5. ' ' → logprob: -13.636913299560547
    6. '	a' → logprob: -13.886913299560547
    7. '  ' → logprob: -14.386913299560547
    8. ',a' → logprob: -14.886913299560547
    9. ' =' → logprob: -15.386913299560547
    10. '_a' → logprob: -16.636913299560547

Token 222: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02324839122593403
    2. '=' → logprob: -3.7732484340667725
    3. '=input' → logprob: -13.023248672485352
    4. '=int' → logprob: -15.648248672485352
    5. ')' → logprob: -15.898248672485352
    6. ',' → logprob: -16.27324867248535
    7. ' ' → logprob: -16.39824867248535
    8. ' =
' → logprob: -16.39824867248535
    9. ' ' → logprob: -16.77324867248535
    10. 'input' → logprob: -17.14824867248535

Token 223: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.1602281779050827
    2. 'map' → logprob: -1.9102281332015991
    3. '	map' → logprob: -13.03522777557373
    4. ' ' → logprob: -14.66022777557373
    5. '(map' → logprob: -15.03522777557373
    6. ' ' → logprob: -15.16022777557373
    7. '[' → logprob: -15.28522777557373
    8. 'm' → logprob: -15.28522777557373
    9. '   ' → logprob: -16.035228729248047
    10. '.map' → logprob: -16.410228729248047

Token 224: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0017557413084432483
    2. '(' → logprob: -6.376755714416504
    3. 'int' → logprob: -9.876755714416504
    4. ' int' → logprob: -14.501755714416504
    5. '<int' → logprob: -14.751755714416504
    6. '(input' → logprob: -14.751755714416504
    7. '[int' → logprob: -14.876755714416504
    8. '(
' → logprob: -15.501755714416504
    9. ' (' → logprob: -15.876755714416504
    10. '=int' → logprob: -16.50175666809082

Token 225: ',' (ID: 11)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07631842792034149
    2. '(input' → logprob: -2.8263185024261475
    3. ' input' → logprob: -4.701318264007568
    4. ',input' → logprob: -5.701318264007568
    5. ')' → logprob: -6.826318264007568
    6. ',' → logprob: -7.326318264007568
    7. '(' → logprob: -10.451318740844727
    8. '   ' → logprob: -10.451318740844727
    9. '=input' → logprob: -11.076318740844727
    10. '	input' → logprob: -13.076318740844727

Token 226: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.023247109726071358
    2. ' input' → logprob: -3.773247003555298
    3. '   ' → logprob: -13.773246765136719
    4. '(input' → logprob: -15.523246765136719
    5. ' ' → logprob: -15.773246765136719
    6. '	input' → logprob: -16.02324676513672
    7. '=input' → logprob: -17.02324676513672
    8. '<input' → logprob: -17.52324676513672
    9. ')' → logprob: -17.64824676513672
    10. ',input' → logprob: -17.77324676513672

Token 227: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00023476807109545916
    2. '()' → logprob: -8.375234603881836
    3. ' ().' → logprob: -12.750234603881836
    4. ')' → logprob: -14.375234603881836
    5. '())' → logprob: -15.000234603881836
    6. '(' → logprob: -15.625234603881836
    7. '()
' → logprob: -16.875234603881836
    8. '   ' → logprob: -17.750234603881836
    9. ' ()' → logprob: -18.125234603881836
    10. '("' → logprob: -18.125234603881836

Token 228: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.003178071230649948
    2. 'strip' → logprob: -5.753178119659424
    3. ' split' → logprob: -15.753177642822266
    4. 'rstrip' → logprob: -15.878177642822266
    5. '(split' → logprob: -16.753177642822266
    6. '().' → logprob: -17.128177642822266
    7. 'spl' → logprob: -18.128177642822266
    8. '.split' → logprob: -18.878177642822266
    9. 'read' → logprob: -21.003177642822266
    10. ' strip' → logprob: -21.003177642822266

Token 229: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.007408562116324902
    2. ')' → logprob: -5.632408618927002
    3. '()))' → logprob: -6.007408618927002
    4. '()' → logprob: -6.882408618927002
    5. '))' → logprob: -8.132408142089844
    6. '())
' → logprob: -11.632408142089844
    7. '(' → logprob: -12.132408142089844
    8. ' ())' → logprob: -12.632408142089844
    9. '('' → logprob: -14.007408142089844
    10. '()))
' → logprob: -14.382408142089844

Token 230: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2520073652267456
    2. 'print' → logprob: -1.5020073652267456
    3. ' print' → logprob: -9.502007484436035
    4. '
' → logprob: -13.627007484436035
    5. '    
' → logprob: -13.627007484436035
    6. '```' → logprob: -14.127007484436035
    7. '	print' → logprob: -15.377007484436035
    8. 'result' → logprob: -17.37700653076172
    9. '   ' → logprob: -17.37700653076172
    10. '       ' → logprob: -17.87700653076172

Token 231: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00010843054042197764
    2. ' print' → logprob: -9.62510871887207
    3. 'result' → logprob: -10.50010871887207
    4. 'att' → logprob: -11.75010871887207
    5. '   ' → logprob: -12.12510871887207
    6. ' attacks' → logprob: -14.62510871887207
    7. 'attack' → logprob: -14.62510871887207
    8. '#' (adapté à ' #') → logprob: -15.62510871887207
    9. 'prints' → logprob: -16.37510871887207
    10. 'min' → logprob: -16.50010871887207

Token 232: ' Calcul' (ID: 57243)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03850661590695381
    2. ' print' → logprob: -3.288506507873535
    3. 'result' → logprob: -8.288506507873535
    4. 'att' → logprob: -9.038506507873535
    5. ' attacks' → logprob: -9.663506507873535
    6. ' result' → logprob: -10.913506507873535
    7. '#' → logprob: -12.538506507873535
    8. 'attack' → logprob: -12.663506507873535
    9. 'min' → logprob: -13.163506507873535
    10. '   ' → logprob: -13.538506507873535

Token 233: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.5787593126296997
    2. '   ' → logprob: -0.8287593126296997
    3. '_min' → logprob: -6.45375919342041
    4. '_' → logprob: -7.45375919342041
    5. 'min' → logprob: -8.95375919342041
    6. '  ' → logprob: -8.95375919342041
    7. '    ' → logprob: -9.57875919342041
    8. '    
' → logprob: -9.57875919342041
    9. 'result' → logprob: -9.82875919342041
    10. 'print' → logprob: -10.57875919342041

Token 234: ' et' (ID: 859)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7160036563873291
    2. 'min' → logprob: -1.341003656387329
    3. 'result' → logprob: -1.966003656387329
    4. '   ' → logprob: -2.966003656387329
    5. 'le' → logprob: -3.341003656387329
    6. '(' → logprob: -4.71600341796875
    7. '(min' → logprob: -5.34100341796875
    8. ' le' → logprob: -6.21600341796875
    9. '_min' → logprob: -6.71600341796875
    10. 'et' → logprob: -7.09100341796875

Token 235: ' afficher' (ID: 146524)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.693149983882904
    2. ' print' → logprob: -0.693149983882904
    3. '   ' → logprob: -12.81814956665039
    4. '	print' → logprob: -17.31814956665039
    5. '_print' → logprob: -17.81814956665039
    6. ' afficher' → logprob: -18.06814956665039
    7. '.print' → logprob: -18.44314956665039
    8. '#print' → logprob: -18.56814956665039
    9. '
' → logprob: -19.06814956665039
    10. '#' → logprob: -19.19314956665039

Token 236: ' le' (ID: 505)
  Prédit: '(com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.03817862272262573
    2. '(' → logprob: -3.2881786823272705
    3. 'compute' → logprob: -9.288178443908691
    4. ' compute' → logprob: -10.163178443908691
    5. '(
' → logprob: -13.288178443908691
    6. ' (' → logprob: -13.538178443908691
    7. '()' → logprob: -14.038178443908691
    8. '(comp' → logprob: -14.663178443908691
    9. '   ' → logprob: -14.913178443908691
    10. '("' → logprob: -15.163178443908691

Token 237: ' résultat' (ID: 62556)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.10021152347326279
    2. ' compute' → logprob: -2.3502116203308105
    3. 'result' → logprob: -13.100211143493652
    4. 'nombre' → logprob: -13.850211143493652
    5. ' nombre' → logprob: -14.225211143493652
    6. 'print' → logprob: -14.850211143493652
    7. 'calculate' → logprob: -16.10021209716797
    8. 'comput' → logprob: -16.22521209716797
    9. 'minimum' → logprob: -16.35021209716797
    10. '.compute' → logprob: -16.35021209716797

Token 238: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03867052495479584
    2. 'print' → logprob: -3.413670539855957
    3. '
' → logprob: -5.663670539855957
    4. ' print' → logprob: -6.538670539855957
    5. '    
' → logprob: -9.538670539855957
    6. ',' → logprob: -11.538670539855957
    7. ')' → logprob: -12.788670539855957
    8. '  
' → logprob: -13.163670539855957
    9. '
' → logprob: -13.413670539855957
    10. '	print' → logprob: -13.413670539855957

Token 239: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014286551624536514
    2. 'print' → logprob: -4.264286518096924
    3. ' print' → logprob: -9.014286994934082
    4. '    
' → logprob: -14.639286994934082
    5. '```' → logprob: -14.764286994934082
    6. '
' → logprob: -15.014286994934082
    7. '	print' → logprob: -16.014286041259766
    8. '       ' → logprob: -17.264286041259766
    9. '   ' → logprob: -17.639286041259766
    10. '(print' → logprob: -17.764286041259766

Token 240: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.842555426876061e-06
    2. ' print' → logprob: -12.250004768371582
    3. '   ' → logprob: -18.5000057220459
    4. '
' → logprob: -20.6250057220459
    5. 'pr' → logprob: -21.0000057220459
    6. 'prin' → logprob: -21.0000057220459
    7. '```' → logprob: -21.0000057220459
    8. 'result' → logprob: -22.0000057220459
    9. '	print' → logprob: -23.1250057220459
    10. 'printf' → logprob: -23.7500057220459

Token 241: '(com' (ID: 27868)
  Prédit: '(com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.0011715330183506012
    2. '(' → logprob: -6.751171588897705
    3. 'compute' → logprob: -14.376171112060547
    4. ' (' → logprob: -14.626171112060547
    5. '()' → logprob: -17.376171112060547
    6. '("("' → logprob: -17.376171112060547
    7. '(comp' → logprob: -17.501171112060547
    8. ' compute' → logprob: -17.501171112060547
    9. '((' → logprob: -18.251171112060547
    10. '(
' → logprob: -18.376171112060547

Token 242: 'pute' (ID: 13605)
  Prédit: 'pute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pute' → logprob: -0.00024358915106859058
    2. 'ute' → logprob: -9.000243186950684
    3. 'put' → logprob: -9.125243186950684
    4. 'p' → logprob: -12.250243186950684
    5. '```' → logprob: -12.750243186950684
    6. '_' → logprob: -14.250243186950684
    7. '
' → logprob: -14.250243186950684
    8. '_put' → logprob: -14.375243186950684
    9. '``' → logprob: -15.125243186950684
    10. 'putate' → logprob: -15.500243186950684

Token 243: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -3.531315314830863e-06
    2. '_' → logprob: -12.625003814697266
    3. '_max' → logprob: -16.875003814697266
    4. '_m' → logprob: -17.000003814697266
    5. ' _' → logprob: -17.250003814697266
    6. 'min' → logprob: -18.875003814697266
    7. '_MIN' → logprob: -19.000003814697266
    8. '_Min' → logprob: -20.375003814697266
    9. ')_' → logprob: -20.625003814697266
    10. '_
' → logprob: -20.750003814697266

Token 244: '_att' (ID: 35618)
  Prédit: '_att'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_att' → logprob: -0.00014764121442567557
    2. '_attack' → logprob: -9.375147819519043
    3. '_min' → logprob: -10.375147819519043
    4. '_' → logprob: -11.125147819519043
    5. '_at' → logprob: -11.375147819519043
    6. 'att' → logprob: -12.750147819519043
    7. '_Att' → logprob: -14.375147819519043
    8. ' _' → logprob: -15.125147819519043
    9. '```' → logprob: -15.125147819519043
    10. '   ' → logprob: -15.625147819519043

Token 245: 'acks' (ID: 7367)
  Prédit: 'acks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acks' → logprob: -1.9981420336989686e-05
    2. 'ack' → logprob: -12.000020027160645
    3. 'a' → logprob: -12.250020027160645
    4. 'acts' → logprob: -12.750020027160645
    5. 'acs' → logprob: -13.750020027160645
    6. '```' → logprob: -13.750020027160645
    7. 's' → logprob: -14.000020027160645
    8. 'cks' → logprob: -14.125020027160645
    9. '   ' → logprob: -15.000020027160645
    10. '
' → logprob: -15.750020027160645

Token 246: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -1.7120533811976202e-05
    2. '(' → logprob: -11.000017166137695
    3. ' (' → logprob: -15.375017166137695
    4. ')' → logprob: -16.000017166137695
    5. '(
' → logprob: -17.125017166137695
    6. ')(' → logprob: -18.875017166137695
    7. '(H' → logprob: -19.000017166137695
    8. 'h' → logprob: -20.625017166137695
    9. ',h' → logprob: -21.125017166137695
    10. '   ' → logprob: -21.500017166137695

Token 247: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023774817236699164
    2. ',a' → logprob: -8.375237464904785
    3. ' ,' → logprob: -12.250237464904785
    4. 'a' → logprob: -13.250237464904785
    5. ',
' → logprob: -14.375237464904785
    6. ',h' → logprob: -17.6252384185791
    7. '   ' → logprob: -18.3752384185791
    8. '‌,' → logprob: -18.5002384185791
    9. ',A' → logprob: -18.7502384185791
    10. ',

' → logprob: -19.1252384185791

Token 248: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10020796209573746
    2. ' a' → logprob: -2.350208044052124
    3. ')' → logprob: -14.600208282470703
    4. '    ' → logprob: -15.600208282470703
    5. '	a' → logprob: -15.600208282470703
    6. ')a' → logprob: -15.725208282470703
    7. ' ' → logprob: -15.975208282470703
    8. ' ' → logprob: -16.225208282470703
    9. ' )' → logprob: -16.475208282470703
    10. '   ' → logprob: -16.975208282470703

Token 249: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.06196925416588783
    2. ')' → logprob: -2.81196928024292
    3. '))
' → logprob: -13.936968803405762
    4. ')))' → logprob: -15.311968803405762
    5. ' ))' → logprob: -15.811968803405762
    6. ')
' → logprob: -16.561969757080078
    7. '()))' → logprob: -16.686969757080078
    8. '())' → logprob: -16.811969757080078
    9. ' )' → logprob: -17.186969757080078
    10. '))

' → logprob: -17.561969757080078

Token 250: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0001170132018160075
    2. '
' → logprob: -9.500117301940918
    3. ' if' → logprob: -10.875117301940918
    4. '```' → logprob: -11.500117301940918
    5. 'main' → logprob: -12.250117301940918
    6. '<|end|>' → logprob: -12.375117301940918
    7. '\n' → logprob: -12.750117301940918
    8. '#' → logprob: -14.375117301940918
    9. '\' → logprob: -15.750117301940918
    10. '

' → logprob: -16.3751163482666

Token 251: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.002893440192565322
    2. '__' → logprob: -5.877893447875977
    3. '_' → logprob: -9.627893447875977
    4. '_name' → logprob: -11.752893447875977
    5. ' _' → logprob: -11.877893447875977
    6. ' ' → logprob: -12.502893447875977
    7. ' ___' → logprob: -13.002893447875977
    8. '___' → logprob: -14.002893447875977
    9. ' ' → logprob: -14.377893447875977
    10. 'name' → logprob: -15.127893447875977

Token 252: 'name' (ID: 897)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3256494700908661
    2. '__' → logprob: -1.7006494998931885
    3. ' __' → logprob: -2.4506494998931885
    4. '==' → logprob: -5.075649261474609
    5. 'name' → logprob: -7.325649261474609
    6. ' =="' → logprob: -7.450649261474609
    7. ' ' → logprob: -8.20064926147461
    8. ' _' → logprob: -8.20064926147461
    9. '_' → logprob: -8.57564926147461
    10. '=="' → logprob: -8.82564926147461

Token 253: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -4.961759259458631e-06
    2. '==' → logprob: -13.375004768371582
    3. '__.__' → logprob: -13.625004768371582
    4. '_' → logprob: -14.250004768371582
    5. ' ==' → logprob: -14.500004768371582
    6. ' __' → logprob: -15.625004768371582
    7. '___' → logprob: -15.625004768371582
    8. '__
' → logprob: -15.625004768371582
    9. '____' → logprob: -16.3750057220459
    10. '=="' → logprob: -16.3750057220459

Token 254: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.007573381066322327
    2. '==' → logprob: -5.13257360458374
    3. ' ==' → logprob: -6.50757360458374
    4. '=="' → logprob: -8.882573127746582
    5. '=='' → logprob: -12.257573127746582
    6. '_' → logprob: -12.632573127746582
    7. '___' → logprob: -13.507573127746582
    8. '"' → logprob: -14.132573127746582
    9. '=' → logprob: -14.507573127746582
    10. ' __' → logprob: -14.882573127746582

Token 255: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.006955126766115427
    2. ''' → logprob: -5.006955146789551
    3. ' "__' → logprob: -8.38195514678955
    4. '__' → logprob: -11.75695514678955
    5. ' '__' → logprob: -13.38195514678955
    6. '"user' → logprob: -14.63195514678955
    7. '"_' → logprob: -15.13195514678955
    8. '"name' → logprob: -15.38195514678955
    9. ' "' → logprob: -15.50695514678955
    10. ' ' → logprob: -17.131954193115234

Token 256: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.688212614681106e-05
    2. 'name' → logprob: -11.000017166137695
    3. '__' → logprob: -17.000017166137695
    4. 'ma' → logprob: -17.375017166137695
    5. '_main' → logprob: -18.125017166137695
    6. ' main' → logprob: -18.125017166137695
    7. 'm' → logprob: -18.250017166137695
    8. '	main' → logprob: -21.250017166137695
    9. '-main' → logprob: -22.625017166137695
    10. 'mai' → logprob: -22.875017166137695

Token 257: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.008616581559181213
    2. '__' → logprob: -4.7586164474487305
    3. '__":
' → logprob: -13.38361644744873
    4. '_' → logprob: -15.00861644744873
    5. ''' → logprob: -16.508617401123047
    6. '':
' → logprob: -17.508617401123047
    7. '__:' → logprob: -17.508617401123047
    8. '___' → logprob: -18.133617401123047
    9. '':' → logprob: -18.258617401123047
    10. '__('' → logprob: -19.258617401123047

Token 258: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.1654634028673172
    2. 'main' → logprob: -1.9154634475708008
    3. '	main' → logprob: -6.165463447570801
    4. '   ' → logprob: -6.790463447570801
    5. ''' → logprob: -7.415463447570801
    6. ' ' → logprob: -8.1654634475708
    7. ' __' → logprob: -8.2904634475708
    8. ' 
' → logprob: -8.9154634475708
    9. '_main' → logprob: -8.9154634475708
    10. ' ' → logprob: -9.0404634475708

Token 259: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.0005532711511477828
    2. ' main' → logprob: -7.500553131103516
    3. '	main' → logprob: -15.750553131103516
    4. '   ' → logprob: -17.125553131103516
    5. '_main' → logprob: -21.625553131103516
    6. '(main' → logprob: -22.250553131103516
    7. ' ' → logprob: -22.250553131103516
    8. '.main' → logprob: -23.125553131103516
    9. '  ' → logprob: -23.375553131103516
    10. '    
' → logprob: -24.750553131103516

Token 260: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0028895139694213867
    2. '
' → logprob: -6.752889633178711
    3. '()
' → logprob: -7.127889633178711
    4. '(' → logprob: -7.877889633178711
    5. '<|end|>' → logprob: -8.127889633178711
    6. '```' → logprob: -9.502889633178711
    7. '\n' → logprob: -9.752889633178711
    8. ')' → logprob: -10.377889633178711
    9. '#' → logprob: -10.752889633178711
    10. '()\' → logprob: -11.002889633178711


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 258
Tokens correctement prédits (1ère position, stricte): 111
Tokens correctement prédits (1ère position, avec adaptation): 115
Tokens correctement prédits (top 10): 197
Précision stricte (1ère position): 43.02%
Précision adaptée (1ère position): 44.57%
Précision (top 10): 76.36%
================================================================================
