================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:02:59
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from functools import reduce
from itertools import chain, starmap, repeat, islice, accumulate, count, permutations
from operator import itemgetter, add, or_, mul

class IP:
    def __init__(self):
        self.input = sys.stdin.readline

    def I(self):
        return reduce(lambda x, _: x, map(int, repeat(self.input(), 1)))

    def S(self):
        return reduce(lambda x, _: x, map(str, repeat(self.input(), 1)))

    def IL(self):
        return list(starmap(int, zip(self.input().split(), repeat(None))))

    def SL(self):
        return list(starmap(str, zip(self.input().split(), repeat(None))))

    def ILS(self, n):
        return list(islice(map(int, (self.input() for _ in count())), n))

    def SLS(self, n):
        return list(islice(map(str, (self.input() for _ in count())), n))

    def SILS(self, n):
        return list(islice(map(lambda _: self.IL(), repeat(None)), n))

    def SSLS(self, n):
        return list(islice(map(lambda _: self.SL(), repeat(None)), n))

class Idea:
    def __init__(self):
        pass

    def HF(self, p):
        return sorted(set(map(lambda t: add(*t), ((p[i], p[j]) for i in range(len(p)) for j in range(i, len(p))))))

    def Bfs2(self, a):
        N = len(a)
        masks = list(range(1 << N))
        def subsets(mask):
            return [a[j] for j in range(N) if ((mask >> j) & 1)]
        value = list(starmap(lambda i, v: [format(i, '016b'), sum(v)], zip(masks, map(subsets, masks))))
        value.sort(key=itemgetter(1))
        bin = list(starmap(itemgetter(0), value))
        val = list(starmap(itemgetter(1), value))
        return bin, val

    def S(self, s, r=0, m=-1):
        (lambda x: s.sort(reverse=bool(r), key=(itemgetter(m) if m != -1 else None)))(None)

    def bit_n(self, a, b):
        return bool(list(map(lambda ab: (ab[0] >> ab[1] & 1) > 0, zip([a], [b])))[0])

    def bit_o(self, a, b):
        return bool(list(map(lambda ab: ((ab[0] >> ab[1]) & 1) == 1, zip([a], [b])))[0])

    def ceil(self, x, y):
        return reduce(lambda _, __: -(-x // y), repeat(None, 1))

    def ave(self, a):
        return reduce(add, a) / len(a)

    def gcd(self, x, y):
        return reduce(lambda f, _: f(*_) if _[1]!=0 else _[0], repeat((lambda a,b:(b,a%b), [x, y]), len(bin(max(x,y)))))
        
def main():
    r, e, p = range, enumerate, print
    ip = IP()
    id = Idea()
    mod = pow(10, 9, 10 ** 18 // 17 + 1) + 7 if all([True]) else 10 ** 9 + 7

    a, b = ip.IL()
    # Now a needlessly complex approach for simple max-sum-of-max operation
    candidates = list(permutations([a, b], 2))
    first = max(map(itemgetter(0), candidates))
    second = max(map(itemgetter(1), [max(candidates), min(candidates)]))
    answer = list(accumulate([first, second]))[-1]
    p(answer)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3440817594528198
    2. '.' → logprob: -1.5940817594528198
    3. '<|end|>' → logprob: -2.9690818786621094
    4. '\' → logprob: -4.469081878662109
    5. 'import' → logprob: -5.094081878662109
    6. 'newline' → logprob: -5.094081878662109
    7. '' → logprob: -5.844081878662109
    8. '<|end|>' → logprob: -5.969081878662109
    9. '\r' → logprob: -6.094081878662109
    10. '
' → logprob: -6.344081878662109

Token 4: ' functools' (ID: 142636)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.011964310891926289
    2. 'os' → logprob: -4.761964321136475
    3. ' collections' → logprob: -6.761964321136475
    4. ' math' → logprob: -7.386964321136475
    5. ' pathlib' → logprob: -7.386964321136475
    6. ' datetime' → logprob: -8.761963844299316
    7. ' typing' → logprob: -8.886963844299316
    8. ' ' → logprob: -9.011963844299316
    9. 'collections' → logprob: -9.261963844299316
    10. ' Py' → logprob: -9.511963844299316

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.20354998111724854
    2. 'import' → logprob: -1.7035499811172485
    3. '.' → logprob: -6.828549861907959
    4. ' ' → logprob: -7.453549861907959
    5. '_import' → logprob: -8.078550338745117
    6. '_' → logprob: -9.578550338745117
    7. '	import' → logprob: -10.203550338745117
    8. '.import' → logprob: -11.203550338745117
    9. '```' → logprob: -11.578550338745117
    10. ' .' → logprob: -11.703550338745117

Token 6: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.6477278470993042
    2. ' wraps' → logprob: -1.0227278470993042
    3. 'partial' → logprob: -2.6477279663085938
    4. 'l' → logprob: -4.272727966308594
    5. ' l' → logprob: -4.272727966308594
    6. ' partial' → logprob: -4.647727966308594
    7. 'reduce' → logprob: -4.897727966308594
    8. 'cmp' → logprob: -7.772727966308594
    9. ' reduce' → logprob: -7.897727966308594
    10. 'cache' → logprob: -8.647727966308594

Token 7: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.067592740058899
    2. ',' → logprob: -1.192592740058899
    3. '(' → logprob: -1.442592740058899
    4. ' ' → logprob: -2.6925926208496094
    5. '\' → logprob: -4.567592620849609
    6. '.' → logprob: -4.692592620849609
    7. '\n' → logprob: -5.317592620849609
    8. '' → logprob: -5.817592620849609
    9. '```' → logprob: -6.067592620849609
    10. '(
' → logprob: -6.317592620849609

Token 8: 'from' (ID: 2845)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.14457307755947113
    2. 'def' → logprob: -2.8945729732513428
    3. ',' → logprob: -3.1445729732513428
    4. '```' → logprob: -4.519573211669922
    5. '\n' → logprob: -5.144573211669922
    6. ' 

' → logprob: -5.144573211669922
    7. '\' → logprob: -6.019573211669922
    8. '
' → logprob: -6.394573211669922
    9. '

' → logprob: -6.394573211669922
    10. '.' → logprob: -7.144573211669922

Token 9: ' itertools' (ID: 103178)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.7981787323951721
    2. ' math' → logprob: -0.9231787323951721
    3. ' itertools' → logprob: -2.0481786727905273
    4. ' collections' → logprob: -4.173178672790527
    5. 'operator' → logprob: -5.548178672790527
    6. ' os' → logprob: -5.798178672790527
    7. 'math' → logprob: -7.173178672790527
    8. ' ' → logprob: -8.423178672790527
    9. ' typing' → logprob: -8.923178672790527
    10. 'collections' → logprob: -9.548178672790527

Token 10: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.18747808039188385
    2. 'import' → logprob: -1.9374780654907227
    3. '.' → logprob: -3.6874780654907227
    4. ' .' → logprob: -7.062478065490723
    5. '.import' → logprob: -7.437478065490723
    6. ' ' → logprob: -9.187478065490723
    7. '<|end|>' → logprob: -9.187478065490723
    8. '	import' → logprob: -9.312478065490723
    9. '.im' → logprob: -10.187478065490723
    10. '_import' → logprob: -10.937478065490723

Token 11: ' chain' (ID: 13464)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.2023519277572632
    2. 'group' → logprob: -1.3273519277572632
    3. 'cycle' → logprob: -1.9523519277572632
    4. 'acc' → logprob: -2.3273520469665527
    5. 'chain' → logprob: -2.5773520469665527
    6. 'com' → logprob: -3.4523520469665527
    7. ' group' → logprob: -3.5773520469665527
    8. ' cycle' → logprob: -4.452352046966553
    9. 'product' → logprob: -4.702352046966553
    10. 'per' → logprob: -4.827352046966553

Token 12: ',' (ID: 11)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.34471848607063293
    2. ',' → logprob: -1.9697184562683105
    3. '<|end|>' → logprob: -2.5947184562683105
    4. '\n' → logprob: -3.5947184562683105
    5. '
' → logprob: -4.2197184562683105
    6. '```' → logprob: -4.5947184562683105
    7. 'def' → logprob: -5.2197184562683105
    8. '

' → logprob: -5.5947184562683105
    9. '<|end|>' → logprob: -5.5947184562683105
    10. '.' → logprob: -5.7197184562683105

Token 13: ' st' (ID: 420)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.330763041973114
    2. 'is' → logprob: -2.580763101577759
    3. ' is' → logprob: -2.830763101577759
    4. 'count' → logprob: -3.080763101577759
    5. 'cycle' → logprob: -3.455763101577759
    6. 'product' → logprob: -4.20576286315918
    7. 'group' → logprob: -4.33076286315918
    8. ' product' → logprob: -5.20576286315918
    9. ' group' → logprob: -5.33076286315918
    10. ' cycle' → logprob: -5.33076286315918

Token 14: 'arm' (ID: 2218)
  Prédit: 'arm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arm' → logprob: -0.6355509161949158
    2. 'ar' → logprob: -0.7605509161949158
    3. 'art' → logprob: -6.6355509757995605
    4. 'a' → logprob: -7.7605509757995605
    5. 'arp' → logprob: -7.8855509757995605
    6. 'arl' → logprob: -8.135550498962402
    7. 'eep' → logprob: -8.635550498962402
    8. 'ate' → logprob: -10.260550498962402
    9. 'er' → logprob: -10.260550498962402
    10. 'arb' → logprob: -10.385550498962402

Token 15: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -2.1008713702030946e-06
    2. 'ep' → logprob: -14.375001907348633
    3. 'apse' → logprob: -14.500001907348633
    4. ' ap' → logprob: -15.250001907348633
    5. 'ethod' → logprob: -15.500001907348633
    6. 'e' → logprob: -15.625001907348633
    7. 'ап' → logprob: -16.375001907348633
    8. 'up' → logprob: -16.625001907348633
    9. '_ap' → logprob: -16.625001907348633
    10. '	ap' → logprob: -16.875001907348633

Token 16: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6099974513053894
    2. '\n' → logprob: -2.234997510910034
    3. 'import' → logprob: -2.234997510910034
    4. '(' → logprob: -2.484997510910034
    5. '(
' → logprob: -3.359997510910034
    6. '
' → logprob: -3.484997510910034
    7. 'def' → logprob: -3.609997510910034
    8. '\' → logprob: -3.734997510910034
    9. ',
' → logprob: -3.984997510910034
    10. '

' → logprob: -4.984997272491455

Token 17: ' repeat' (ID: 22962)
  Prédit: ' product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' product' → logprob: -1.2665107250213623
    2. 'tee' → logprob: -1.7665107250213623
    3. 'product' → logprob: -2.1415107250213623
    4. 'com' → logprob: -2.1415107250213623
    5. ' group' → logprob: -2.6415107250213623
    6. ' tee' → logprob: -2.8915107250213623
    7. 'group' → logprob: -3.0165107250213623
    8. ' accumulate' → logprob: -3.6415107250213623
    9. ' is' → logprob: -3.7665107250213623
    10. 'acc' → logprob: -4.016510963439941

Token 18: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12063325196504593
    2. '(' → logprob: -3.620633363723755
    3. '\n' → logprob: -3.745633363723755
    4. 'import' → logprob: -4.120633125305176
    5. '```' → logprob: -4.870633125305176
    6. '<|end|>' → logprob: -4.870633125305176
    7. '\' → logprob: -4.995633125305176
    8. ',
' → logprob: -5.245633125305176
    9. '
' → logprob: -5.745633125305176
    10. '(
' → logprob: -5.870633125305176

Token 19: ' is' (ID: 382)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -1.8446122407913208
    2. 'product' → logprob: -1.8446122407913208
    3. 'com' → logprob: -1.9696122407913208
    4. ' product' → logprob: -2.0946121215820312
    5. 'cycle' → logprob: -2.5946121215820312
    6. 'tee' → logprob: -2.7196121215820312
    7. 'count' → logprob: -3.0946121215820312
    8. 'group' → logprob: -3.3446121215820312
    9. ' is' → logprob: -3.5946121215820312
    10. 'is' → logprob: -3.7196121215820312

Token 20: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -5.676981345459353e-06
    2. 'lic' → logprob: -12.375005722045898
    3. 'l' → logprob: -14.125005722045898
    4. 'liced' → logprob: -15.000005722045898
    5. 'li' → logprob: -16.6250057220459
    6. 'lices' → logprob: -16.7500057220459
    7. 'licing' → logprob: -16.7500057220459
    8. '

' → logprob: -17.3750057220459
    9. 'a' → logprob: -18.0000057220459
    10. '```' → logprob: -18.1250057220459

Token 21: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.28782469034194946
    2. '\n' → logprob: -2.7878246307373047
    3. 'import' → logprob: -2.7878246307373047
    4. ',
' → logprob: -3.5378246307373047
    5. '```' → logprob: -3.7878246307373047
    6. '\' → logprob: -4.037824630737305
    7. '
' → logprob: -4.162824630737305
    8. '

' → logprob: -4.787824630737305
    9. '' → logprob: -4.787824630737305
    10. 'def' → logprob: -5.287824630737305

Token 22: ' accumulate' (ID: 74226)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -1.9832017421722412
    2. 'group' → logprob: -2.108201742172241
    3. 'tee' → logprob: -2.108201742172241
    4. 'com' → logprob: -2.233201742172241
    5. 'filter' → logprob: -2.233201742172241
    6. 'take' → logprob: -2.358201742172241
    7. 'zip' → logprob: -2.858201742172241
    8. 'product' → logprob: -2.983201742172241
    9. 'compress' → logprob: -3.233201742172241
    10. 'cycle' → logprob: -3.358201742172241

Token 23: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23241287469863892
    2. '
' → logprob: -2.732412815093994
    3. ',
' → logprob: -3.607412815093994
    4. 'import' → logprob: -3.607412815093994
    5. '

' → logprob: -3.857412815093994
    6. '<|end|>' → logprob: -3.982412815093994
    7. '```' → logprob: -4.607412815093994
    8. '\n' → logprob: -4.607412815093994
    9. 'def' → logprob: -4.982412815093994
    10. ',

' → logprob: -5.482412815093994

Token 24: ' count' (ID: 3605)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'group' → logprob: -1.0911601781845093
    2. 'com' → logprob: -1.9661601781845093
    3. 'product' → logprob: -2.216160297393799
    4. ' group' → logprob: -2.466160297393799
    5. ' product' → logprob: -2.716160297393799
    6. 'filter' → logprob: -2.841160297393799
    7. 'take' → logprob: -2.966160297393799
    8. 'tee' → logprob: -3.091160297393799
    9. 'compress' → logprob: -4.091160297393799
    10. 'count' → logprob: -4.091160297393799

Token 25: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06300311535596848
    2. ',
' → logprob: -4.313003063201904
    3. '<|end|>' → logprob: -4.438003063201904
    4. 'import' → logprob: -4.688003063201904
    5. '
' → logprob: -4.813003063201904
    6. ' ' → logprob: -5.438003063201904
    7. '\n' → logprob: -5.563003063201904
    8. '

' → logprob: -6.438003063201904
    9. '\' → logprob: -6.688003063201904
    10. '' → logprob: -6.938003063201904

Token 26: ' permutations' (ID: 174595)
  Prédit: ' cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cycle' → logprob: -0.6426284313201904
    2. 'cycle' → logprob: -1.1426284313201904
    3. 'take' → logprob: -3.3926284313201904
    4. ' take' → logprob: -3.8926284313201904
    5. ' group' → logprob: -4.0176286697387695
    6. 'filter' → logprob: -4.3926286697387695
    7. 'group' → logprob: -4.7676286697387695
    8. 'tee' → logprob: -4.7676286697387695
    9. ' tee' → logprob: -4.7676286697387695
    10. ' product' → logprob: -4.8926286697387695

Token 27: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1193971037864685
    2. '<|end|>' → logprob: -3.2443971633911133
    3. 'import' → logprob: -3.9943971633911133
    4. '\n' → logprob: -4.244397163391113
    5. ',
' → logprob: -4.244397163391113
    6. '
' → logprob: -4.869397163391113
    7. '(' → logprob: -5.494397163391113
    8. '\' → logprob: -5.994397163391113
    9. 'def' → logprob: -6.244397163391113
    10. '(
' → logprob: -6.494397163391113

Token 28: 'from' (ID: 2845)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14681009948253632
    2. '

' → logprob: -3.0218100547790527
    3. ',

' → logprob: -3.6468100547790527
    4. 'import' → logprob: -3.7718100547790527
    5. ',
' → logprob: -4.396810054779053
    6. '\n' → logprob: -5.146810054779053
    7. '
' → logprob: -5.521810054779053
    8. '```' → logprob: -5.646810054779053
    9. '(' → logprob: -6.146810054779053
    10. 'def' → logprob: -6.271810054779053

Token 29: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -1.009055495262146
    2. 'operator' → logprob: -1.009055495262146
    3. ' math' → logprob: -2.2590556144714355
    4. 'math' → logprob: -2.7590556144714355
    5. 'collections' → logprob: -2.7590556144714355
    6. ' collections' → logprob: -3.3840556144714355
    7. ' ' → logprob: -5.6340556144714355
    8. 'os' → logprob: -7.8840556144714355
    9. ' typing' → logprob: -8.134055137634277
    10. 'heap' → logprob: -8.509055137634277

Token 30: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.007119318470358849
    2. 'import' → logprob: -5.007119178771973
    3. ' ' → logprob: -8.257119178771973
    4. '.' → logprob: -9.632119178771973
    5. ' .' → logprob: -10.757119178771973
    6. '	import' → logprob: -10.882119178771973
    7. '<|end|>' → logprob: -11.132119178771973
    8. '  ' → logprob: -12.007119178771973
    9. ' ,' → logprob: -12.132119178771973
    10. ' as' → logprob: -12.632119178771973

Token 31: ' item' (ID: 2169)
  Prédit: ' item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' item' → logprob: -0.7545135021209717
    2. ' mul' → logprob: -0.8795135021209717
    3. ' add' → logprob: -2.5045135021209717
    4. ' ' → logprob: -4.004513740539551
    5. ' import' → logprob: -5.504513740539551
    6. 'mul' → logprob: -5.879513740539551
    7. ' method' → logprob: -6.004513740539551
    8. 'item' → logprob: -6.504513740539551
    9. ' attr' → logprob: -6.629513740539551
    10. ' is' → logprob: -7.754513740539551

Token 32: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -0.0017515801591798663
    2. 'get' → logprob: -6.37675142288208
    3. 'getitem' → logprob: -10.251751899719238
    4. 'gett' → logprob: -11.251751899719238
    5. '_get' → logprob: -15.126751899719238
    6. 'g' → logprob: -15.751751899719238
    7. 'Getter' → logprob: -16.251750946044922
    8. 'item' → logprob: -16.376750946044922
    9. 'attr' → logprob: -16.376750946044922
    10. '#get' → logprob: -16.626750946044922

Token 33: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.36413976550102234
    2. '<|end|>' → logprob: -2.2391397953033447
    3. '

' → logprob: -2.9891397953033447
    4. '
' → logprob: -3.1141397953033447
    5. 'import' → logprob: -3.2391397953033447
    6. '\n' → logprob: -4.114139556884766
    7. ',
' → logprob: -4.489139556884766
    8. '\' → logprob: -5.114139556884766
    9. '.' → logprob: -5.239139556884766
    10. ',

' → logprob: -5.614139556884766

Token 34: ' add' (ID: 1147)
  Prédit: ' mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mul' → logprob: -0.8152867555618286
    2. 'attr' → logprob: -1.8152867555618286
    3. ' attr' → logprob: -2.065286636352539
    4. 'mul' → logprob: -2.065286636352539
    5. 'add' → logprob: -2.440286636352539
    6. 'method' → logprob: -3.815286636352539
    7. ' add' → logprob: -4.440286636352539
    8. ' method' → logprob: -4.440286636352539
    9. '```' → logprob: -6.440286636352539
    10. ' ' → logprob: -6.690286636352539

Token 35: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5715927481651306
    2. '

' → logprob: -1.4465928077697754
    3. '
' → logprob: -2.3215928077697754
    4. 'import' → logprob: -3.1965928077697754
    5. ',
' → logprob: -4.196592807769775
    6. ',

' → logprob: -4.446592807769775
    7. '<|end|>' → logprob: -4.821592807769775
    8. ' 

' → logprob: -5.321592807769775
    9. 'def' → logprob: -5.571592807769775
    10. '


' → logprob: -5.946592807769775

Token 36: ' or' (ID: 503)
  Prédit: ' mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mul' → logprob: -0.24404174089431763
    2. 'mul' → logprob: -1.6190416812896729
    3. 'sub' → logprob: -4.744041919708252
    4. ' sub' → logprob: -4.744041919708252
    5. 'eq' → logprob: -8.619041442871094
    6. 'operator' → logprob: -9.619041442871094
    7. 'attr' → logprob: -9.619041442871094
    8. ' attr' → logprob: -9.744041442871094
    9. '```' → logprob: -9.744041442871094
    10. 'method' → logprob: -9.994041442871094

Token 37: '_,' (ID: 14152)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.012373087927699089
    2. '_|' → logprob: -4.512372970581055
    3. '|' → logprob: -7.512372970581055
    4. '_),' → logprob: -8.637372970581055
    5. '_)' → logprob: -8.762372970581055
    6. '__' → logprob: -8.762372970581055
    7. '_operator' → logprob: -9.012372970581055
    8. '_,' → logprob: -9.887372970581055
    9. '_

' → logprob: -10.637372970581055
    10. '_)
' → logprob: -11.512372970581055

Token 38: ' mul' (ID: 9975)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -1.0308115482330322
    2. 'mul' → logprob: -1.4058115482330322
    3. 'and' → logprob: -1.6558115482330322
    4. ' mul' → logprob: -1.9058115482330322
    5. ' and' → logprob: -4.030811309814453
    6. ' xor' → logprob: -4.280811309814453
    7. 'eq' → logprob: -5.280811309814453
    8. '```' → logprob: -5.530811309814453
    9. 'i' → logprob: -5.780811309814453
    10. 'sub' → logprob: -6.530811309814453

Token 39: '

' (ID: 279)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.405615895986557
    2. '<|end|>' → logprob: -1.9056159257888794
    3. '
' → logprob: -2.65561580657959
    4. 'import' → logprob: -3.90561580657959
    5. ' ' → logprob: -4.28061580657959
    6. '

' → logprob: -4.65561580657959
    7. ',
' → logprob: -4.78061580657959
    8. '.' → logprob: -4.90561580657959
    9. '\n' → logprob: -4.90561580657959
    10. ' 

' → logprob: -5.15561580657959

Token 40: 'class' (ID: 1444)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8741130828857422
    2. ',' → logprob: -1.3741130828857422
    3. '#' → logprob: -2.874113082885742
    4. 'def' → logprob: -3.249113082885742
    5. '(
' → logprob: -3.499113082885742
    6. '.' → logprob: -3.499113082885742
    7. '_' → logprob: -3.749113082885742
    8. '`' → logprob: -3.749113082885742
    9. '*' → logprob: -3.874113082885742
    10. '=' → logprob: -4.249113082885742

Token 41: ' IP' (ID: 10108)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.4458222389221191
    2. ' My' → logprob: -1.4458222389221191
    3. ' Counter' → logprob: -2.445822238922119
    4. ' Multi' → logprob: -2.570822238922119
    5. ' Mult' → logprob: -2.695822238922119
    6. ' Data' → logprob: -2.820822238922119
    7. ' Complex' → logprob: -2.945822238922119
    8. ' Chain' → logprob: -3.445822238922119
    9. ' Parser' → logprob: -3.695822238922119
    10. ' Default' → logprob: -4.695822238922119

Token 42: ':
' (ID: 734)
  Prédit: 'Address'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Address' → logprob: -0.29182732105255127
    2. 'v' → logprob: -1.5418273210525513
    3. 'Network' → logprob: -4.166827201843262
    4. 'ython' → logprob: -4.416827201843262
    5. 'Range' → logprob: -5.666827201843262
    6. ':' → logprob: -6.666827201843262
    7. 'Version' → logprob: -6.791827201843262
    8. 'address' → logprob: -6.916827201843262
    9. 'Filter' → logprob: -7.541827201843262
    10. 'Set' → logprob: -8.041827201843262

Token 43: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3210029602050781
    2. '(' → logprob: -1.4460029602050781
    3. ':' → logprob: -1.4460029602050781
    4. '(object' → logprob: -1.9460029602050781
    5. ' (' → logprob: -3.696002960205078
    6. '   ' → logprob: -3.946002960205078
    7. '<|end|>' → logprob: -4.196002960205078
    8. ' def' → logprob: -4.196002960205078
    9. ' :' → logprob: -4.821002960205078
    10. '_' → logprob: -4.946002960205078

Token 44: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.049034226685762405
    2. 'def' (adapté à ' def') → logprob: -3.0490341186523438
    3. ' __' → logprob: -8.424034118652344
    4. '   ' → logprob: -9.549034118652344
    5. '__' → logprob: -9.799034118652344
    6. 'class' → logprob: -10.174034118652344
    7. ' pass' → logprob: -10.799034118652344
    8. ' _' → logprob: -11.924034118652344
    9. 'pass' → logprob: -12.049034118652344
    10. ' class' → logprob: -12.174034118652344

Token 45: ' __' (ID: 2516)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.020885072648525238
    2. 'init' → logprob: -4.520884990692139
    3. ' __' → logprob: -5.645884990692139
    4. ' init' → logprob: -5.770884990692139
    5. 'itialize' → logprob: -7.270884990692139
    6. 't' → logprob: -7.395884990692139
    7. 'nit' → logprob: -7.770884990692139
    8. 'i' → logprob: -7.895884990692139
    9. '_init' → logprob: -8.395885467529297
    10. 'itial' → logprob: -8.520885467529297

Token 46: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -9.088346359931165e-07
    2. 'new' → logprob: -14.625000953674316
    3. ' init' → logprob: -14.875000953674316
    4. 'ini' → logprob: -16.875
    5. '_init' → logprob: -17.625
    6. 'int' → logprob: -19.875
    7. '```' → logprob: -20.375
    8. '	init' → logprob: -20.5
    9. 'call' → logprob: -20.625
    10. '   ' → logprob: -21.0

Token 47: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.4008405804634094
    2. '(' → logprob: -1.2758405208587646
    3. '__' → logprob: -4.150840759277344
    4. '_' → logprob: -4.525840759277344
    5. ' (' → logprob: -4.775840759277344
    6. '_(' → logprob: -5.025840759277344
    7. '(self' → logprob: -5.275840759277344
    8. '<|end|>' → logprob: -6.400840759277344
    9. '__(
' → logprob: -6.775840759277344
    10. '```' → logprob: -7.900840759277344

Token 48: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.08900446444749832
    2. ' self' → logprob: -2.4640045166015625
    3. ' ' → logprob: -9.839004516601562
    4. ')' → logprob: -12.839004516601562
    5. '   ' → logprob: -13.714004516601562
    6. ',' → logprob: -13.839004516601562
    7. '	self' → logprob: -13.839004516601562
    8. '(self' → logprob: -13.964004516601562
    9. 'ip' → logprob: -14.339004516601562
    10. '  ' → logprob: -14.464004516601562

Token 49: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03645756468176842
    2. ' ,' → logprob: -3.5364575386047363
    3. 'self' → logprob: -5.411457538604736
    4. ' ' → logprob: -6.411457538604736
    5. ')' → logprob: -8.661458015441895
    6. ' self' → logprob: -8.661458015441895
    7. '  ' → logprob: -9.786458015441895
    8. ' )' → logprob: -9.911458015441895
    9. ',self' → logprob: -10.161458015441895
    10. '_' → logprob: -10.911458015441895

Token 50: '       ' (ID: 309)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5776053071022034
    2. ' ip' → logprob: -1.5776052474975586
    3. 'self' → logprob: -1.9526052474975586
    4. '    ' → logprob: -3.4526052474975586
    5. '       ' → logprob: -4.702605247497559
    6. '        ' → logprob: -4.702605247497559
    7. '0' → logprob: -4.702605247497559
    8. ' ' → logprob: -5.077605247497559
    9. 'ip' → logprob: -5.202605247497559
    10. '   ' → logprob: -5.577605247497559

Token 51: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.024627864360809326
    2. ' self' → logprob: -3.899627923965454
    3. 'pass' → logprob: -6.024627685546875
    4. ' pass' → logprob: -6.899627685546875
    5. '       ' → logprob: -8.274627685546875
    6. '0' → logprob: -8.274627685546875
    7. '   ' → logprob: -9.274627685546875
    8. ' ' → logprob: -11.149627685546875
    9. 'def' → logprob: -12.149627685546875
    10. 's' → logprob: -12.649627685546875

Token 52: '.input' (ID: 18322)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1691167652606964
    2. '.ip' → logprob: -2.294116735458374
    3. '._' → logprob: -3.919116735458374
    4. '.data' → logprob: -4.419116973876953
    5. '.value' → logprob: -4.919116973876953
    6. ' .' → logprob: -5.544116973876953
    7. '.values' → logprob: -6.544116973876953
    8. '.address' → logprob: -6.919116973876953
    9. '.tokens' → logprob: -7.669116973876953
    10. '.val' → logprob: -7.794116973876953

Token 53: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2861045598983765
    2. '_data' → logprob: -1.2861045598983765
    3. '_buffer' → logprob: -1.6611045598983765
    4. ' =' → logprob: -2.036104679107666
    5. '_' → logprob: -3.661104679107666
    6. 's' → logprob: -3.911104679107666
    7. '_stream' → logprob: -4.286104679107666
    8. '_lines' → logprob: -4.411104679107666
    9. '_bytes' → logprob: -4.911104679107666
    10. '_str' → logprob: -5.036104679107666

Token 54: ' sys' (ID: 12228)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.7755085229873657
    2. ' []' → logprob: -1.1505085229873657
    3. ' sys' → logprob: -2.775508403778076
    4. 'sys' → logprob: -3.025508403778076
    5. '""' → logprob: -3.900508403778076
    6. ' ''' → logprob: -4.025508403778076
    7. ' None' → logprob: -4.275508403778076
    8. ' ""' → logprob: -4.400508403778076
    9. '''' → logprob: -4.525508403778076
    10. 'None' → logprob: -5.150508403778076

Token 55: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.032023318111896515
    2. '.argv' → logprob: -3.9070234298706055
    3. '.' → logprob: -5.2820234298706055
    4. '.stdout' → logprob: -5.7820234298706055
    5. '.input' → logprob: -7.1570234298706055
    6. ' .' → logprob: -7.2820234298706055
    7. '.version' → logprob: -7.2820234298706055
    8. '.path' → logprob: -7.7820234298706055
    9. '.modules' → logprob: -8.532023429870605
    10. '._' → logprob: -8.532023429870605

Token 56: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.01656493917107582
    2. '.read' → logprob: -4.391564846038818
    3. 'read' → logprob: -6.391564846038818
    4. '.readlines' → logprob: -6.891564846038818
    5. '.' → logprob: -7.141564846038818
    6. '<|end|>' → logprob: -7.766564846038818
    7. '_read' → logprob: -10.016565322875977
    8. ' readline' → logprob: -11.391565322875977
    9. '_reader' → logprob: -11.516565322875977
    10. '<|end|>' → logprob: -11.516565322875977

Token 57: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04342091456055641
    2. '().' → logprob: -3.1684210300445557
    3. '()
' → logprob: -8.918420791625977
    4. '(' → logprob: -9.043420791625977
    5. '<|end|>' → logprob: -10.168420791625977
    6. ' ()' → logprob: -10.793420791625977
    7. '()\' → logprob: -11.043420791625977
    8. '())' → logprob: -11.168420791625977
    9. ')' → logprob: -11.168420791625977
    10. '.rstrip' → logprob: -11.418420791625977

Token 58: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35735657811164856
    2. '()' → logprob: -1.4823565483093262
    3. '<|end|>' → logprob: -3.732356548309326
    4. 'def' → logprob: -4.357356548309326
    5. '(' → logprob: -4.482356548309326
    6. '    
' → logprob: -5.232356548309326
    7. '       ' → logprob: -5.357356548309326
    8. '(
' → logprob: -5.857356548309326
    9. '
' → logprob: -6.107356548309326
    10. '()
' → logprob: -6.232356548309326

Token 59: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.16614997386932373
    2. ' def' → logprob: -2.2911500930786133
    3. '()' → logprob: -3.6661500930786133
    4. '   ' → logprob: -3.7911500930786133
    5. ' ' → logprob: -6.791150093078613
    6. '	def' → logprob: -7.166150093078613
    7. '()
' → logprob: -7.916150093078613
    8. '<|end|>' → logprob: -8.166150093078613
    9. '(' → logprob: -8.291150093078613
    10. '
' → logprob: -8.666150093078613

Token 60: ' I' (ID: 357)
  Prédit: ' read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' read' → logprob: -1.0131566524505615
    2. ' process' → logprob: -1.8881566524505615
    3. 'read' → logprob: -2.3881566524505615
    4. ' parse' → logprob: -2.8881566524505615
    5. ' solve' → logprob: -3.0131566524505615
    6. ' readline' → logprob: -3.1381566524505615
    7. 'parse' → logprob: -3.2631566524505615
    8. 'process' → logprob: -3.7631566524505615
    9. ' get' → logprob: -4.013156890869141
    10. 'solve' → logprob: -4.013156890869141

Token 61: '(self' (ID: 2402)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.014953932724893093
    2. 'nit' → logprob: -4.639954090118408
    3. 'N' → logprob: -5.764954090118408
    4. 'P' → logprob: -7.639954090118408
    5. 'np' → logprob: -7.639954090118408
    6. 'nt' → logprob: -8.26495361328125
    7. 'p' → logprob: -8.88995361328125
    8. 'm' → logprob: -9.13995361328125
    9. '()' → logprob: -9.26495361328125
    10. 'nner' → logprob: -9.38995361328125

Token 62: '):
' (ID: 1883)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10478212684392929
    2. 'nit' → logprob: -2.4797821044921875
    3. '):' → logprob: -5.4797821044921875
    4. 'N' → logprob: -5.4797821044921875
    5. 'nt' → logprob: -5.6047821044921875
    6. 'np' → logprob: -6.4797821044921875
    7. '_n' → logprob: -7.4797821044921875
    8. 'ns' → logprob: -8.229782104492188
    9. 'put' → logprob: -8.729782104492188
    10. ')' → logprob: -8.979782104492188

Token 63: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5278074741363525
    2. 'return' → logprob: -1.6528074741363525
    3. ' return' → logprob: -2.4028074741363525
    4. '()' → logprob: -2.6528074741363525
    5. 'n' → logprob: -4.152807235717773
    6. '   ' → logprob: -4.777807235717773
    7. '    ' → logprob: -4.777807235717773
    8. ' ' → logprob: -5.152807235717773
    9. '        ' → logprob: -5.652807235717773
    10. ' ()' → logprob: -5.902807235717773

Token 64: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6394610404968262
    2. ' return' → logprob: -0.7644610404968262
    3. '       ' → logprob: -5.389461040496826
    4. 'int' → logprob: -7.014461040496826
    5. '   ' → logprob: -8.389461517333984
    6. ' self' → logprob: -8.389461517333984
    7. 'self' → logprob: -8.514461517333984
    8. ' ' → logprob: -8.764461517333984
    9. ' int' → logprob: -8.889461517333984
    10. '    ' → logprob: -9.389461517333984

Token 65: ' reduce' (ID: 10389)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.031419333070516586
    2. 'int' → logprob: -3.531419277191162
    3. ' map' → logprob: -6.906419277191162
    4. ' list' → logprob: -8.03141975402832
    5. ' ' → logprob: -9.28141975402832
    6. ' self' → logprob: -9.40641975402832
    7. 'map' → logprob: -10.03141975402832
    8. 'self' → logprob: -10.53141975402832
    9. 'list' → logprob: -10.78141975402832
    10. '   ' → logprob: -10.90641975402832

Token 66: '(lambda' (ID: 43341)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17725805938243866
    2. '(lambda' → logprob: -2.052258014678955
    3. '(add' → logprob: -4.427258014678955
    4. '(or' → logprob: -4.552258014678955
    5. '(int' → logprob: -4.677258014678955
    6. '(m' → logprob: -7.052258014678955
    7. '(operator' → logprob: -7.052258014678955
    8. '(
' → logprob: -9.677258491516113
    9. '(ord' → logprob: -9.677258491516113
    10. ' or' → logprob: -9.802258491516113

Token 67: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.4242842495441437
    2. ' or' → logprob: -1.4242842197418213
    3. ' a' → logprob: -2.7992842197418213
    4. ' ' → logprob: -4.1742844581604
    5. 'x' → logprob: -4.5492844581604
    6. ' add' → logprob: -4.9242844581604
    7. ' acc' → logprob: -4.9242844581604
    8. 'a' → logprob: -6.6742844581604
    9. ' lambda' → logprob: -7.6742844581604
    10. ' o' → logprob: -7.9242844581604

Token 68: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002326055895537138
    2. ' ,' → logprob: -6.752326011657715
    3. ',x' → logprob: -6.877326011657715
    4. ',int' → logprob: -10.377326011657715
    5. ',m' → logprob: -11.377326011657715
    6. ',y' → logprob: -11.502326011657715
    7. ',n' → logprob: -12.002326011657715
    8. ',a' → logprob: -12.127326011657715
    9. ',item' → logprob: -12.127326011657715
    10. ',i' → logprob: -12.127326011657715

Token 69: ' _:' (ID: 133568)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.5307884812355042
    2. 'y' → logprob: -1.7807884216308594
    3. ' acc' → logprob: -2.1557884216308594
    4. ' x' → logprob: -3.2807884216308594
    5. ' ' → logprob: -3.7807884216308594
    6. ' or' → logprob: -4.030788421630859
    7. 'x' → logprob: -4.405788421630859
    8. 'acc' → logprob: -4.905788421630859
    9. ' a' → logprob: -5.155788421630859
    10. 'a' → logprob: -5.905788421630859

Token 70: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1844409853219986
    2. ' x' → logprob: -2.809441089630127
    3. '(x' → logprob: -3.184441089630127
    4. '10' → logprob: -3.184441089630127
    5. 'add' → logprob: -4.809441089630127
    6. 'int' → logprob: -5.059441089630127
    7. ' ' → logprob: -6.059441089630127
    8. '(' → logprob: -6.434441089630127
    9. ' (' → logprob: -6.434441089630127
    10. '(int' → logprob: -6.559441089630127

Token 71: ',' (ID: 11)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.25338900089263916
    2. ' *' → logprob: -1.5033890008926392
    3. ' +' → logprob: -7.50338888168335
    4. '+' → logprob: -7.50338888168335
    5. ' |' → logprob: -9.503389358520508
    6. ' ' → logprob: -9.628389358520508
    7. '<<' → logprob: -9.628389358520508
    8. ' or' → logprob: -10.253389358520508
    9. ' <<' → logprob: -11.128389358520508
    10. '10' → logprob: -11.503389358520508

Token 72: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.5825112462043762
    2. ' map' → logprob: -0.9575112462043762
    3. 'self' → logprob: -3.5825111865997314
    4. ' self' → logprob: -3.9575111865997314
    5. ' chain' → logprob: -6.0825114250183105
    6. 'chain' → logprob: -6.2075114250183105
    7. ' range' → logprob: -6.5825114250183105
    8. 'range' → logprob: -6.8325114250183105
    9. ' iter' → logprob: -7.5825114250183105
    10. 'iter' → logprob: -7.7075114250183105

Token 73: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.003821814199909568
    2. '(' → logprob: -6.128821849822998
    3. '(str' → logprob: -6.628821849822998
    4. '(lambda' → logprob: -9.12882137298584
    5. '(ord' → logprob: -9.12882137298584
    6. '(sys' → logprob: -10.75382137298584
    7. '(chr' → logprob: -10.87882137298584
    8. '(input' → logprob: -11.37882137298584
    9. '(self' → logprob: -11.75382137298584
    10. '(eval' → logprob: -11.75382137298584

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08423347026109695
    2. ',self' → logprob: -2.959233522415161
    3. '(self' → logprob: -4.084233283996582
    4. '(sys' → logprob: -4.834233283996582
    5. '(' → logprob: -5.959233283996582
    6. ' ,' → logprob: -7.709233283996582
    7. ',input' → logprob: -7.834233283996582
    8. ' (' → logprob: -8.209233283996582
    9. ',(' → logprob: -8.459233283996582
    10. 'self' → logprob: -9.959233283996582

Token 75: ' repeat' (ID: 22962)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.07950389385223389
    2. 'self' → logprob: -2.5795040130615234
    3. ')' → logprob: -7.954504013061523
    4. ' ' → logprob: -9.454504013061523
    5. ' sys' → logprob: -9.579504013061523
    6. '(self' → logprob: -10.829504013061523
    7. 'sys' → logprob: -11.329504013061523
    8. '	self' → logprob: -11.454504013061523
    9. ',' → logprob: -11.704504013061523
    10. '   ' → logprob: -11.954504013061523

Token 76: '(self' (ID: 2402)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.40900227427482605
    2. '(self' → logprob: -1.2840023040771484
    3. '(' → logprob: -3.4090023040771484
    4. '(sys' → logprob: -3.9090023040771484
    5. '("' → logprob: -5.659002304077148
    6. '(lambda' → logprob: -7.284002304077148
    7. '(','' → logprob: -8.534002304077148
    8. '('\' → logprob: -8.659002304077148
    9. '("("' → logprob: -9.034002304077148
    10. '(s' → logprob: -9.034002304077148

Token 77: '.input' (ID: 18322)
  Prédit: '.input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.input' → logprob: -0.00145475915633142
    2. '().' → logprob: -7.126454830169678
    3. '.' → logprob: -7.501454830169678
    4. 'input' → logprob: -10.75145435333252
    5. ').' → logprob: -11.25145435333252
    6. ' .' → logprob: -11.37645435333252
    7. ' ' → logprob: -11.87645435333252
    8. '   ' → logprob: -12.12645435333252
    9. '.in' → logprob: -12.37645435333252
    10. '(input' → logprob: -12.50145435333252

Token 78: '(),' (ID: 2547)
  Prédit: '(),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.35687246918678284
    2. '().' → logprob: -1.4818724393844604
    3. '()' → logprob: -2.98187255859375
    4. ',' → logprob: -4.60687255859375
    5. '())))' → logprob: -5.23187255859375
    6. '(' → logprob: -5.73187255859375
    7. '()),' → logprob: -6.35687255859375
    8. '()))' → logprob: -7.10687255859375
    9. ' ' → logprob: -8.73187255859375
    10. ' (),' → logprob: -8.85687255859375

Token 79: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6572583913803101
    2. '1' → logprob: -0.7822583913803101
    3. '2' → logprob: -4.4072585105896
    4. '0' → logprob: -5.7822585105896
    5. '3' → logprob: -6.2822585105896
    6. '  ' → logprob: -6.5322585105896
    7. '4' → logprob: -7.1572585105896
    8. '   ' → logprob: -7.5322585105896
    9. '5' → logprob: -7.6572585105896
    10. '6' → logprob: -7.7822585105896

Token 80: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05224580690264702
    2. '0' → logprob: -3.302245855331421
    3. ' ' → logprob: -4.802245616912842
    4. '2' → logprob: -6.052245616912842
    5. '"' → logprob: -7.052245616912842
    6. ')' → logprob: -7.552245616912842
    7. '))' → logprob: -8.05224609375
    8. 'len' → logprob: -8.42724609375
    9. '3' → logprob: -8.55224609375
    10. ''' → logprob: -8.80224609375

Token 81: ')))

' (ID: 46526)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.1770261824131012
    2. ')' → logprob: -2.1770262718200684
    3. '))' → logprob: -3.8020262718200684
    4. ')),' → logprob: -4.052026271820068
    5. '))),' → logprob: -5.552026271820068
    6. '),' → logprob: -5.802026271820068
    7. '())))' → logprob: -7.552026271820068
    8. '()' → logprob: -7.552026271820068
    9. '))))' → logprob: -7.802026271820068
    10. '()))' → logprob: -8.92702579498291

Token 82: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02397596463561058
    2. '[' → logprob: -4.273975849151611
    3. '()' → logprob: -5.398975849151611
    4. '.' → logprob: -5.898975849151611
    5. '(
' → logprob: -6.773975849151611
    6. ')' → logprob: -7.148975849151611
    7. ',' → logprob: -8.77397632598877
    8. '(

' → logprob: -8.77397632598877
    9. ' ' → logprob: -10.27397632598877
    10. '()[' → logprob: -10.39897632598877

Token 83: ' def' (ID: 1056)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09243925660848618
    2. '[' → logprob: -3.3424391746520996
    3. '()' → logprob: -3.3424391746520996
    4. '.' → logprob: -4.5924391746521
    5. ')' → logprob: -5.9674391746521
    6. ',' → logprob: -6.2174391746521
    7. '(
' → logprob: -7.0924391746521
    8. ' ' → logprob: -7.7174391746521
    9. '()[' → logprob: -7.7174391746521
    10. '().' → logprob: -8.717439651489258

Token 84: ' S' (ID: 336)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2147027254104614
    2. 'I' → logprob: -2.089702606201172
    3. '()' → logprob: -2.214702606201172
    4. '(' → logprob: -2.339702606201172
    5. 's' → logprob: -3.089702606201172
    6. 'n' → logprob: -3.214702606201172
    7. 'J' → logprob: -3.464702606201172
    8. 'N' → logprob: -3.714702606201172
    9. 'split' → logprob: -3.839702606201172
    10. 'A' → logprob: -3.964702606201172

Token 85: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8873235583305359
    2. 'elf' → logprob: -1.1373236179351807
    3. '(self' → logprob: -1.3873236179351807
    4. '()' → logprob: -5.137323379516602
    5. '():' → logprob: -6.387323379516602
    6. '(t' → logprob: -6.512323379516602
    7. 'tring' → logprob: -6.637323379516602
    8. 'e' → logprob: -7.012323379516602
    9. 't' → logprob: -7.262323379516602
    10. '(s' → logprob: -7.387323379516602

Token 86: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010870719328522682
    2. '():' → logprob: -5.385870933532715
    3. ')' → logprob: -5.510870933532715
    4. '()' → logprob: -7.135870933532715
    5. ' ):' → logprob: -7.135870933532715
    6. '):
' → logprob: -8.385870933532715
    7. '(self' → logprob: -9.510870933532715
    8. '(' → logprob: -9.760870933532715
    9. '   ' → logprob: -9.885870933532715
    10. ':' → logprob: -10.010870933532715

Token 87: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6471765637397766
    2. '()' → logprob: -0.7721765637397766
    3. 'return' → logprob: -5.022176742553711
    4. '().' → logprob: -6.647176742553711
    5. ' ()' → logprob: -6.647176742553711
    6. ' return' → logprob: -7.272176742553711
    7. '   ' → logprob: -7.522176742553711
    8. '[]' → logprob: -7.522176742553711
    9. '<|end|>' → logprob: -7.897176742553711
    10. '(' → logprob: -7.897176742553711

Token 88: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.12838557362556458
    2. 'self' → logprob: -2.378385543823242
    3. ' return' → logprob: -3.753385543823242
    4. ' self' → logprob: -5.503385543823242
    5. '       ' → logprob: -8.628385543823242
    6. '   ' → logprob: -10.128385543823242
    7. 'sys' → logprob: -11.253385543823242
    8. '```' → logprob: -11.628385543823242
    9. ' ' → logprob: -12.128385543823242
    10. '        
' → logprob: -12.253385543823242

Token 89: ' reduce' (ID: 10389)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5768176317214966
    2. ' self' → logprob: -0.8268176317214966
    3. 'list' → logprob: -9.201817512512207
    4. '   ' → logprob: -9.451817512512207
    5. ' list' → logprob: -9.451817512512207
    6. 'int' → logprob: -9.451817512512207
    7. ' ' → logprob: -9.701817512512207
    8. ' sys' → logprob: -9.701817512512207
    9. 'sys' → logprob: -9.826817512512207
    10. ' ' → logprob: -9.826817512512207

Token 90: '(lambda' (ID: 43341)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28179070353507996
    2. '(lambda' → logprob: -1.4067907333374023
    3. '(
' → logprob: -7.906790733337402
    4. '<|end|>' → logprob: -8.781790733337402
    5. '(str' → logprob: -10.406790733337402
    6. '(chain' → logprob: -10.906790733337402
    7. ' (' → logprob: -11.656790733337402
    8. '((' → logprob: -11.656790733337402
    9. '(operator' → logprob: -11.906790733337402
    10. 'lambda' → logprob: -11.906790733337402

Token 91: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.24327804148197174
    2. 'lambda' → logprob: -2.1182780265808105
    3. ' x' → logprob: -3.1182780265808105
    4. ' lambda' → logprob: -4.1182780265808105
    5. 'or' → logprob: -4.2432780265808105
    6. ' or' → logprob: -4.3682780265808105
    7. '(lambda' → logprob: -5.9932780265808105
    8. ' ' → logprob: -6.7432780265808105
    9. 's' → logprob: -6.8682780265808105
    10. 'str' → logprob: -7.1182780265808105

Token 92: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006723771803081036
    2. ' ,' → logprob: -5.631723880767822
    3. '+' → logprob: -7.506723880767822
    4. 'x' → logprob: -7.756723880767822
    5. ' or' → logprob: -7.881723880767822
    6. ' +' → logprob: -8.256723403930664
    7. ' ' → logprob: -8.256723403930664
    8. ':' → logprob: -8.256723403930664
    9. 'lambda' → logprob: -8.506723403930664
    10. ' x' → logprob: -8.756723403930664

Token 93: ' _:' (ID: 133568)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -1.0143696069717407
    2. ' lambda' → logprob: -1.2643696069717407
    3. ' or' → logprob: -2.389369487762451
    4. '_' → logprob: -2.639369487762451
    5. '_:' → logprob: -2.889369487762451
    6. 'or' → logprob: -3.014369487762451
    7. 'y' → logprob: -3.639369487762451
    8. 'x' → logprob: -3.889369487762451
    9. ' ' → logprob: -4.764369487762451
    10. '_,' → logprob: -5.014369487762451

Token 94: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.3539272546768188
    2. ' self' → logprob: -1.6039272546768188
    3. 'self' → logprob: -1.7289272546768188
    4. 'x' → logprob: -1.9789272546768188
    5. 'str' → logprob: -2.2289271354675293
    6. ' str' → logprob: -2.6039271354675293
    7. ' ' → logprob: -4.853927135467529
    8. ' chain' → logprob: -4.978927135467529
    9. 'chain' → logprob: -5.228927135467529
    10. ' (' → logprob: -5.603927135467529

Token 95: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0276156663894653
    2. ',' → logprob: -1.0276156663894653
    3. ' +' → logprob: -2.027615547180176
    4. '()' → logprob: -2.902615547180176
    5. '(),' → logprob: -2.902615547180176
    6. '()+' → logprob: -3.402615547180176
    7. '().' → logprob: -6.152615547180176
    8. '.strip' → logprob: -6.652615547180176
    9. '+self' → logprob: -6.777615547180176
    10. ' ,' → logprob: -6.902615547180176

Token 96: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.418143630027771
    2. 'self' → logprob: -1.793143630027771
    3. ' map' → logprob: -1.918143630027771
    4. ' self' → logprob: -3.7931437492370605
    5. 'chain' → logprob: -5.9181437492370605
    6. ' chain' → logprob: -6.9181437492370605
    7. 'iter' → logprob: -8.043143272399902
    8. '[self' → logprob: -8.168143272399902
    9. '(map' → logprob: -8.418143272399902
    10. ' iter' → logprob: -8.668143272399902

Token 97: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.015231987461447716
    2. '(int' → logprob: -4.390232086181641
    3. '(ord' → logprob: -6.765232086181641
    4. 'str' → logprob: -7.140232086181641
    5. '(lambda' → logprob: -7.765232086181641
    6. '(' → logprob: -8.14023208618164
    7. '(list' → logprob: -11.39023208618164
    8. 'list' → logprob: -11.89023208618164
    9. '	str' → logprob: -12.01523208618164
    10. '(
' → logprob: -12.14023208618164

Token 98: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.008129963040119e-06
    2. ' ,' → logprob: -13.375003814697266
    3. ',self' → logprob: -13.500003814697266
    4. ',int' → logprob: -14.750003814697266
    5. '<|end|>' → logprob: -16.250003814697266
    6. 'self' → logprob: -16.375003814697266
    7. ',map' → logprob: -16.625003814697266
    8. '.strip' → logprob: -16.875003814697266
    9. '(),' → logprob: -17.000003814697266
    10. ',str' → logprob: -17.125003814697266

Token 99: ' repeat' (ID: 22962)
  Prédit: 'repeat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repeat' → logprob: -0.039723046123981476
    2. ' repeat' → logprob: -3.2897231578826904
    3. 'chain' → logprob: -7.539722919464111
    4. 'self' → logprob: -8.28972339630127
    5. 'map' → logprob: -8.41472339630127
    6. ' chain' → logprob: -8.78972339630127
    7. '   ' → logprob: -9.28972339630127
    8. 'range' → logprob: -9.66472339630127
    9. ' map' → logprob: -9.91472339630127
    10. ' self' → logprob: -10.03972339630127

Token 100: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00018792471382766962
    2. '(' → logprob: -8.625187873840332
    3. 'self' → logprob: -11.875187873840332
    4. '(
' → logprob: -14.875187873840332
    5. '(lambda' → logprob: -15.125187873840332
    6. '(this' → logprob: -15.250187873840332
    7. '(s' → logprob: -15.875187873840332
    8. ' (' → logprob: -16.62518882751465
    9. '((' → logprob: -16.75018882751465
    10. '(sys' → logprob: -16.87518882751465

Token 101: '.input' (ID: 18322)
  Prédit: '.input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.input' → logprob: -0.0384516678750515
    2. '().' → logprob: -3.663451671600342
    3. '()' → logprob: -4.913451671600342
    4. 'input' → logprob: -5.663451671600342
    5. '.' → logprob: -6.788451671600342
    6. '())' → logprob: -10.038451194763184
    7. ' .' → logprob: -10.663451194763184
    8. '(),' → logprob: -10.913451194763184
    9. ' input' → logprob: -11.163451194763184
    10. ')' → logprob: -11.413451194763184

Token 102: '(),' (ID: 2547)
  Prédit: '(),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.007809731177985668
    2. '()' → logprob: -5.007809638977051
    3. '()),' → logprob: -7.257809638977051
    4. '(),"' → logprob: -8.50780963897705
    5. '(),'' → logprob: -9.25780963897705
    6. '())))' → logprob: -10.88280963897705
    7. '()],' → logprob: -11.25780963897705
    8. '(),
' → logprob: -11.25780963897705
    9. '()},' → logprob: -11.38280963897705
    10. '()))' → logprob: -12.00780963897705

Token 103: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07889430224895477
    2. ' ' → logprob: -2.5788943767547607
    3. '   ' → logprob: -13.07889461517334
    4. '  ' → logprob: -14.57889461517334
    5. '```' → logprob: -14.76639461517334
    6. ')' → logprob: -14.82889461517334
    7. '0' → logprob: -15.70389461517334
    8. '    ' → logprob: -16.078893661499023
    9. '))' → logprob: -16.141393661499023
    10. ' ' → logprob: -16.203893661499023

Token 104: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005993809318169951
    2. ' ' → logprob: -7.625599384307861
    3. ')))' → logprob: -10.125598907470703
    4. '   ' → logprob: -10.500598907470703
    5. '))' → logprob: -10.625598907470703
    6. ')' → logprob: -11.875598907470703
    7. ')),' → logprob: -12.500598907470703
    8. '  ' → logprob: -13.125598907470703
    9. '0' → logprob: -13.625598907470703
    10. '),' → logprob: -13.625598907470703

Token 105: ')))

' (ID: 46526)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.002424767706543207
    2. ')' → logprob: -6.627424716949463
    3. '))' → logprob: -6.877424716949463
    4. '())))' → logprob: -10.502425193786621
    5. '))))' → logprob: -10.627425193786621
    6. '   ' → logprob: -12.252425193786621
    7. ')));' → logprob: -12.627425193786621
    8. '()' → logprob: -13.377425193786621
    9. '),' → logprob: -13.377425193786621
    10. ' ' → logprob: -13.377425193786621

Token 106: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7170110940933228
    2. '   ' → logprob: -1.7170110940933228
    3. '(
' → logprob: -3.092010974884033
    4. '()' → logprob: -3.217010974884033
    5. '<|end|>' → logprob: -3.217010974884033
    6. '_' → logprob: -3.342010974884033
    7. '\n' → logprob: -3.342010974884033
    8. '\' → logprob: -3.592010974884033
    9. '.' → logprob: -3.717010974884033
    10. ')' → logprob: -3.967010974884033

Token 107: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4475552439689636
    2. ' ' → logprob: -2.0725553035736084
    3. '_' → logprob: -2.3225553035736084
    4. 'n' → logprob: -2.8225553035736084
    5. ' 
' → logprob: -4.572555065155029
    6. '    
' → logprob: -4.947555065155029
    7. '<|end|>' → logprob: -4.947555065155029
    8. ',' → logprob: -5.322555065155029
    9. '\n' → logprob: -5.447555065155029
    10. ')' → logprob: -5.447555065155029

Token 108: ' IL' (ID: 16067)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.1173561811447144
    2. 'I' → logprob: -1.7423561811447144
    3. 'i' → logprob: -1.7423561811447144
    4. 'N' → logprob: -1.7423561811447144
    5. ' N' → logprob: -3.492356300354004
    6. 'int' → logprob: -3.617356300354004
    7. ' n' → logprob: -4.367356300354004
    8. '_' → logprob: -4.367356300354004
    9. ' I' → logprob: -4.617356300354004
    10. '_n' → logprob: -4.867356300354004

Token 109: '(self' (ID: 2402)
  Prédit: 'ine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.6204590797424316
    2. 'ist' → logprob: -1.2454590797424316
    3. '(self' → logprob: -1.9954590797424316
    4. '()' → logprob: -3.8704590797424316
    5. 'ines' → logprob: -4.995459079742432
    6. '(' → logprob: -5.370459079742432
    7. 'oad' → logprob: -6.620459079742432
    8. 'oop' → logprob: -6.745459079742432
    9. 'st' → logprob: -7.370459079742432
    10. '():' → logprob: -7.620459079742432

Token 110: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.29869207739830017
    2. 'ist' → logprob: -2.173691987991333
    3. 'f' → logprob: -2.548691987991333
    4. '):' → logprob: -3.048691987991333
    5. 'ine' → logprob: -5.423692226409912
    6. 'self' → logprob: -5.673692226409912
    7. '):
' → logprob: -5.673692226409912
    8. ')' → logprob: -6.173692226409912
    9. '():' → logprob: -6.923692226409912
    10. 'ines' → logprob: -7.173692226409912

Token 111: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12450598925352097
    2. ' return' → logprob: -2.3745059967041016
    3. 'return' → logprob: -3.7495059967041016
    4. ' ' → logprob: -9.249505996704102
    5. '	' → logprob: -9.749505996704102
    6. '   ' → logprob: -9.874505996704102
    7. '	return' → logprob: -9.999505996704102
    8. ' ' → logprob: -9.999505996704102
    9. '      ' → logprob: -10.124505996704102
    10. '        ' → logprob: -10.374505996704102

Token 112: ' return' (ID: 622)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.3023202121257782
    2. 'list' → logprob: -2.3023202419281006
    3. ' return' → logprob: -2.3023202419281006
    4. 'return' (adapté à ' return') → logprob: -2.9273202419281006
    5. ' map' → logprob: -5.5523200035095215
    6. '       ' → logprob: -6.1773200035095215
    7. 'map' → logprob: -6.8023200035095215
    8. '   ' → logprob: -8.80232048034668
    9. ' ' → logprob: -10.17732048034668
    10. '    ' → logprob: -10.17732048034668

Token 113: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.12701104581356049
    2. ' list' → logprob: -2.1270110607147217
    3. '[list' → logprob: -10.0020112991333
    4. 'map' → logprob: -10.3770112991333
    5. '[' → logprob: -12.8770112991333
    6. '	list' → logprob: -13.7520112991333
    7. ' [' → logprob: -14.5020112991333
    8. ' map' → logprob: -14.5020112991333
    9. '=list' → logprob: -15.1270112991333
    10. '(list' → logprob: -15.2520112991333

Token 114: '(st' (ID: 4065)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.002491945633664727
    2. '(' → logprob: -6.0024919509887695
    3. 'map' → logprob: -11.37749195098877
    4. '(
' → logprob: -13.00249195098877
    5. '(m' → logprob: -14.50249195098877
    6. '(int' → logprob: -14.62749195098877
    7. '(chain' → logprob: -14.75249195098877
    8. '()' → logprob: -15.00249195098877
    9. '	map' → logprob: -15.25249195098877
    10. ' (' → logprob: -16.002490997314453

Token 115: 'arm' (ID: 2218)
  Prédit: 'arm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arm' → logprob: -3.166338137816638e-05
    2. 'map' → logprob: -10.375031471252441
    3. 'r' → logprob: -16.375032424926758
    4. '(map' → logprob: -16.625032424926758
    5. 'erm' → logprob: -16.750032424926758
    6. 'ar' → logprob: -17.125032424926758
    7. '_map' → logprob: -17.250032424926758
    8. 'ermap' → logprob: -17.500032424926758
    9. 'arp' → logprob: -17.625032424926758
    10. 'ram' → logprob: -17.750032424926758

Token 116: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -5.512236498361744e-07
    2. '   ' → logprob: -15.875000953674316
    3. 'a' → logprob: -16.0
    4. 'map' → logprob: -16.125
    5. 'apped' → logprob: -16.875
    6. ' ap' → logprob: -17.5
    7. '
' → logprob: -17.5
    8. '```' → logprob: -17.5
    9. '(ap' → logprob: -17.625
    10. 'app' → logprob: -17.75

Token 117: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0004497381451074034
    2. '(' → logprob: -8.125450134277344
    3. '(map' → logprob: -9.750450134277344
    4. '(lambda' → logprob: -9.875450134277344
    5. 'int' → logprob: -10.625450134277344
    6. '(
' → logprob: -11.875450134277344
    7. '   ' → logprob: -12.375450134277344
    8. '```' → logprob: -13.250450134277344
    9. '(item' → logprob: -13.375450134277344
    10. '(tuple' → logprob: -13.750450134277344

Token 118: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006517479196190834
    2. ',map' → logprob: -5.13151741027832
    3. ',self' → logprob: -8.00651741027832
    4. ' ,' → logprob: -9.25651741027832
    5. ',int' → logprob: -9.38151741027832
    6. 'self' → logprob: -10.38151741027832
    7. ',str' → logprob: -11.13151741027832
    8. '(),' → logprob: -12.13151741027832
    9. '   ' → logprob: -12.38151741027832
    10. ',
' → logprob: -12.88151741027832

Token 119: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.1797560751438141
    2. '[' → logprob: -2.6797561645507812
    3. 'map' → logprob: -3.3047561645507812
    4. ' zip' → logprob: -4.304756164550781
    5. '[(' → logprob: -4.429756164550781
    6. 'chain' → logprob: -4.554756164550781
    7. 'lambda' → logprob: -4.804756164550781
    8. '(zip' → logprob: -5.304756164550781
    9. ' [' → logprob: -6.179756164550781
    10. 'enumer' → logprob: -6.304756164550781

Token 120: '(self' (ID: 2402)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.49311563372612
    2. '(' → logprob: -2.3681156635284424
    3. '(self' → logprob: -2.3681156635284424
    4. '(*' → logprob: -2.4931156635284424
    5. '(chain' → logprob: -2.4931156635284424
    6. '(sys' → logprob: -4.368115425109863
    7. '(is' → logprob: -4.493115425109863
    8. '(iter' → logprob: -5.368115425109863
    9. '(*(' → logprob: -5.618115425109863
    10. '(re' → logprob: -6.368115425109863

Token 121: '.input' (ID: 18322)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0519760437309742
    2. '(' → logprob: -3.426975965499878
    3. '(re' → logprob: -4.676976203918457
    4. '(chain' → logprob: -6.051976203918457
    5. '(range' → logprob: -6.426976203918457
    6. '(*' → logprob: -6.551976203918457
    7. 'repeat' → logprob: -7.176976203918457
    8. '(iter' → logprob: -7.801976203918457
    9. 'self' → logprob: -7.801976203918457
    10. '(
' → logprob: -8.301976203918457

Token 122: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.11426093429327011
    2. '()' → logprob: -3.1142609119415283
    3. '(),' → logprob: -3.3642609119415283
    4. '()))' → logprob: -3.8642609119415283
    5. '())))' → logprob: -5.114261150360107
    6. '()[' → logprob: -7.239261150360107
    7. '()));' → logprob: -7.614261150360107
    8. '().__' → logprob: -8.98926067352295
    9. ',' → logprob: -9.36426067352295
    10. '(),'' → logprob: -9.48926067352295

Token 123: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.07910557836294174
    2. 'split' → logprob: -2.5791056156158447
    3. 'rstrip' → logprob: -9.079105377197266
    4. ' strip' → logprob: -9.329105377197266
    5. ' split' → logprob: -12.204105377197266
    6. 'str' → logprob: -12.204105377197266
    7. 'replace' → logprob: -13.204105377197266
    8. 'map' → logprob: -15.329105377197266
    9. '(strip' → logprob: -15.704105377197266
    10. 'read' → logprob: -15.954105377197266

Token 124: '(),' (ID: 2547)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.25000089406967163
    2. '(),' → logprob: -2.0000009536743164
    3. '()' → logprob: -2.7500009536743164
    4. '())))' → logprob: -4.000000953674316
    5. '()));' → logprob: -6.750000953674316
    6. '())' → logprob: -7.000000953674316
    7. '))' → logprob: -8.000000953674316
    8. ',' → logprob: -8.375000953674316
    9. '(' → logprob: -8.625000953674316
    10. '(()' → logprob: -9.000000953674316

Token 125: ' repeat' (ID: 22962)
  Prédit: 'repeat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repeat' → logprob: -0.005785512272268534
    2. ' repeat' → logprob: -5.2557854652404785
    3. 'count' → logprob: -8.255785942077637
    4. '[' → logprob: -8.505785942077637
    5. 'range' → logprob: -11.505785942077637
    6. ' ' → logprob: -11.505785942077637
    7. 'cycle' → logprob: -11.755785942077637
    8. '[]' → logprob: -11.755785942077637
    9. '   ' → logprob: -11.880785942077637
    10. ')' → logprob: -12.005785942077637

Token 126: '(None' (ID: 65126)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.4453731179237366
    2. '(str' → logprob: -2.070373058319092
    3. '(int' → logprob: -2.570373058319092
    4. '('',' → logprob: -2.570373058319092
    5. '(lambda' → logprob: -3.695373058319092
    6. '(' → logprob: -3.695373058319092
    7. '(('' → logprob: -4.070373058319092
    8. '(len' → logprob: -5.320373058319092
    9. '((' → logprob: -6.070373058319092
    10. '("' → logprob: -6.445373058319092

Token 127: '))))

' (ID: 161772)
  Prédit: '))))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))))' → logprob: -0.5867642164230347
    2. ')))' → logprob: -0.8367642164230347
    3. ')' → logprob: -4.711764335632324
    4. '))' → logprob: -6.461764335632324
    5. ')));' → logprob: -9.211764335632324
    6. '))))

' → logprob: -10.336764335632324
    7. ')))),' → logprob: -10.461764335632324
    8. ' ' → logprob: -11.336764335632324
    9. '())))' → logprob: -11.586764335632324
    10. '))),' → logprob: -11.586764335632324

Token 128: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03150954842567444
    2. '())' → logprob: -4.6565093994140625
    3. '[' → logprob: -4.7815093994140625
    4. '(' → logprob: -4.7815093994140625
    5. '[])' → logprob: -6.1565093994140625
    6. '()' → logprob: -6.6565093994140625
    7. '[]' → logprob: -8.406509399414062
    8. '))' → logprob: -8.406509399414062
    9. '   ' → logprob: -8.406509399414062
    10. '[:' → logprob: -9.281509399414062

Token 129: ' def' (ID: 1056)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08707428723573685
    2. '()' → logprob: -3.2120742797851562
    3. '())' → logprob: -3.4620742797851562
    4. '(' → logprob: -4.712074279785156
    5. ':' → logprob: -7.087074279785156
    6. '[' → logprob: -7.337074279785156
    7. ' ' → logprob: -8.962074279785156
    8. '[])' → logprob: -9.087074279785156
    9. '()
' → logprob: -9.212074279785156
    10. '   ' → logprob: -9.212074279785156

Token 130: ' SL' (ID: 30659)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.47751161456108093
    2. ' L' → logprob: -1.9775116443634033
    3. 'IL' → logprob: -2.1025116443634033
    4. 'OL' → logprob: -2.8525116443634033
    5. 'I' → logprob: -4.227511405944824
    6. 'SL' → logprob: -4.227511405944824
    7. ' IL' → logprob: -4.852511405944824
    8. ' OL' → logprob: -5.477511405944824
    9. 'IS' → logprob: -5.852511405944824
    10. 'AL' → logprob: -6.352511405944824

Token 131: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.020507676526904106
    2. '(' → logprob: -4.0205078125
    3. '()' → logprob: -6.1455078125
    4. '():' → logprob: -9.1455078125
    5. '(
' → logprob: -9.8955078125
    6. '():
' → logprob: -10.8955078125
    7. '(s' → logprob: -11.6455078125
    8. ')' → logprob: -12.3955078125
    9. '()(' → logprob: -12.5205078125
    10. '())' → logprob: -12.6455078125

Token 132: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0012873788364231586
    2. '(' → logprob: -7.626287460327148
    3. 'self' → logprob: -7.876287460327148
    4. ')' → logprob: -8.126287460327148
    5. '):' → logprob: -9.501287460327148
    6. ')(' → logprob: -10.751287460327148
    7. '(
' → logprob: -11.876287460327148
    8. ' (' → logprob: -12.501287460327148
    9. '):
' → logprob: -12.626287460327148
    10. '   ' → logprob: -12.626287460327148

Token 133: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10435328632593155
    2. 'return' → logprob: -2.604353189468384
    3. ' return' → logprob: -4.104353427886963
    4. '   ' → logprob: -5.729353427886963
    5. '()' → logprob: -5.854353427886963
    6. 'list' → logprob: -6.604353427886963
    7. ' list' → logprob: -7.729353427886963
    8. '[]' → logprob: -8.729352951049805
    9. ')' → logprob: -9.479352951049805
    10. '        ' → logprob: -9.604352951049805

Token 134: ' return' (ID: 622)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10114821791648865
    2. 'list' → logprob: -2.3511481285095215
    3. ' self' → logprob: -7.2261481285095215
    4. ' list' → logprob: -8.97614860534668
    5. 'return' (adapté à ' return') → logprob: -9.60114860534668
    6. 'lambda' → logprob: -11.60114860534668
    7. '[self' → logprob: -12.72614860534668
    8. ' ' → logprob: -13.35114860534668
    9. '   ' → logprob: -13.47614860534668
    10. '       ' → logprob: -14.60114860534668

Token 135: ' list' (ID: 1562)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3287724554538727
    2. 'list' → logprob: -1.3287724256515503
    3. ' self' → logprob: -4.70377254486084
    4. ' list' → logprob: -5.07877254486084
    5. '[self' → logprob: -9.32877254486084
    6. '[]' → logprob: -13.57877254486084
    7. '[list' → logprob: -13.57877254486084
    8. '   ' → logprob: -13.70377254486084
    9. 'split' → logprob: -13.82877254486084
    10. ' [' → logprob: -13.82877254486084

Token 136: '(st' (ID: 4065)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.8535279631614685
    2. '(map' → logprob: -1.3535280227661133
    3. '(str' → logprob: -1.6035280227661133
    4. '(st' → logprob: -2.2285280227661133
    5. '(' → logprob: -5.478528022766113
    6. '(chain' → logprob: -6.603528022766113
    7. '(s' → logprob: -6.978528022766113
    8. 'map' → logprob: -8.603528022766113
    9. 'self' → logprob: -8.978528022766113
    10. 'str' → logprob: -10.353528022766113

Token 137: 'arm' (ID: 2218)
  Prédit: 'arm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arm' → logprob: -0.00018983196059707552
    2. 'map' → logprob: -9.375189781188965
    3. 'am' → logprob: -9.625189781188965
    4. 'r' → logprob: -11.500189781188965
    5. 'ram' → logprob: -11.500189781188965
    6. 'ap' → logprob: -12.125189781188965
    7. 'rap' → logprob: -12.875189781188965
    8. '(map' → logprob: -13.000189781188965
    9. '(self' → logprob: -13.375189781188965
    10. 'ar' → logprob: -13.375189781188965

Token 138: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -2.236549335066229e-05
    2. 'map' → logprob: -11.125021934509277
    3. 'ап' → logprob: -13.000021934509277
    4. '(ap' → logprob: -13.625021934509277
    5. 'apped' → logprob: -13.750021934509277
    6. '(map' → logprob: -14.750021934509277
    7. '_map' → logprob: -14.750021934509277
    8. 'app' → logprob: -15.250021934509277
    9. 'at' → logprob: -15.250021934509277
    10. '()' → logprob: -15.500021934509277

Token 139: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.0005617309361696243
    2. 'str' → logprob: -7.500561714172363
    3. '(lambda' → logprob: -11.875561714172363
    4. '(' → logprob: -13.500561714172363
    5. '=str' → logprob: -15.625561714172363
    6. '```' → logprob: -16.50056266784668
    7. '(int' → logprob: -17.25056266784668
    8. ' str' → logprob: -17.37556266784668
    9. '[str' → logprob: -17.75056266784668
    10. '(chr' → logprob: -18.25056266784668

Token 140: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.895480277715251e-06
    2. ',self' → logprob: -12.375008583068848
    3. ' ,' → logprob: -13.500008583068848
    4. ',(' → logprob: -13.500008583068848
    5. '(' → logprob: -13.625008583068848
    6. 'self' → logprob: -15.500008583068848
    7. ',
' → logprob: -15.875008583068848
    8. '(self' → logprob: -16.375009536743164
    9. '),' → logprob: -16.875009536743164
    10. 's' → logprob: -17.125009536743164

Token 141: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.3506411910057068
    2. ' zip' → logprob: -1.3506412506103516
    3. 'self' → logprob: -4.100641250610352
    4. '(self' → logprob: -4.975641250610352
    5. ' self' → logprob: -5.225641250610352
    6. '(zip' → logprob: -5.225641250610352
    7. 'chain' → logprob: -6.850641250610352
    8. ' chain' → logprob: -7.725641250610352
    9. 'map' → logprob: -8.100641250610352
    10. ')' → logprob: -8.725641250610352

Token 142: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00010902655776590109
    2. '(' → logprob: -10.00010871887207
    3. 'self' → logprob: -10.37510871887207
    4. '(sys' → logprob: -10.87510871887207
    5. '(this' → logprob: -11.87510871887207
    6. '(map' → logprob: -13.25010871887207
    7. '((' → logprob: -13.37510871887207
    8. '(input' → logprob: -13.87510871887207
    9. '(chain' → logprob: -14.25010871887207
    10. '(s' → logprob: -15.12510871887207

Token 143: '.input' (ID: 18322)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.35039764642715454
    2. '(input' → logprob: -1.7253975868225098
    3. '.input' → logprob: -2.4753975868225098
    4. '(self' → logprob: -3.6003975868225098
    5. 'self' → logprob: -5.35039758682251
    6. '(' → logprob: -7.35039758682251
    7. ' input' → logprob: -8.475398063659668
    8. '().' → logprob: -9.725398063659668
    9. '<input' → logprob: -9.850398063659668
    10. ')' → logprob: -10.225398063659668

Token 144: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00021509946964215487
    2. '()' → logprob: -8.500215530395508
    3. '(),' → logprob: -12.500215530395508
    4. '().'' → logprob: -12.750215530395508
    5. '().__' → logprob: -13.250215530395508
    6. '()))' → logprob: -13.875215530395508
    7. '()[' → logprob: -14.250215530395508
    8. '(' → logprob: -15.000215530395508
    9. ' ().' → logprob: -15.375215530395508
    10. '.' → logprob: -15.375215530395508

Token 145: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0045120082795619965
    2. '().' → logprob: -5.504511833190918
    3. '.split' → logprob: -8.004511833190918
    4. ' split' → logprob: -10.004511833190918
    5. '()' → logprob: -10.754511833190918
    6. ')' → logprob: -11.629511833190918
    7. '(split' → logprob: -11.629511833190918
    8. 'repeat' → logprob: -12.004511833190918
    9. 'chain' → logprob: -12.629511833190918
    10. '()[' → logprob: -13.879511833190918

Token 146: '(),' (ID: 2547)
  Prédit: '(),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.007473636418581009
    2. '()' → logprob: -5.257473468780518
    3. '())))' → logprob: -6.507473468780518
    4. ',' → logprob: -8.007473945617676
    5. '()))' → logprob: -8.132473945617676
    6. '(),
' → logprob: -10.382473945617676
    7. ')))' → logprob: -11.007473945617676
    8. '()),' → logprob: -11.132473945617676
    9. '(' → logprob: -11.132473945617676
    10. '())' → logprob: -11.257473945617676

Token 147: ' repeat' (ID: 22962)
  Prédit: ' repeat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' repeat' → logprob: -0.2254280298948288
    2. 'repeat' → logprob: -1.6004279851913452
    3. ' ' → logprob: -12.975427627563477
    4. '        ' → logprob: -13.100427627563477
    5. 're' → logprob: -13.225427627563477
    6. ' repeated' → logprob: -13.350427627563477
    7. '_repeat' → logprob: -13.600427627563477
    8. '.repeat' → logprob: -13.975427627563477
    9. '      ' → logprob: -14.350427627563477
    10. '    ' → logprob: -14.350427627563477

Token 148: '(None' (ID: 65126)
  Prédit: '(None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(None' → logprob: -8.537868779967539e-06
    2. '(str' → logprob: -12.500008583068848
    3. '(lambda' → logprob: -12.750008583068848
    4. 'None' → logprob: -13.375008583068848
    5. '(' → logprob: -16.25000762939453
    6. '()))' → logprob: -16.37500762939453
    7. '((' → logprob: -16.50000762939453
    8. '()' → logprob: -17.37500762939453
    9. ',None' → logprob: -17.50000762939453
    10. '(False' → logprob: -18.25000762939453

Token 149: '))))

' (ID: 161772)
  Prédit: '))))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))))' → logprob: -0.3225786089897156
    2. ')))' → logprob: -1.3225786685943604
    3. ')' → logprob: -4.697578430175781
    4. '))' → logprob: -8.822578430175781
    5. '))))

' → logprob: -12.822578430175781
    6. '))))
' → logprob: -12.947578430175781
    7. ')));' → logprob: -13.572578430175781
    8. ')))),' → logprob: -14.447578430175781
    9. '())))' → logprob: -14.947578430175781
    10. ' ' → logprob: -15.197578430175781

Token 150: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06401747465133667
    2. '(' → logprob: -3.4390175342559814
    3. '#' → logprob: -4.439017295837402
    4. '[' → logprob: -4.939017295837402
    5. ':' → logprob: -5.439017295837402
    6. '<|end|>' → logprob: -6.189017295837402
    7. '()' → logprob: -6.564017295837402
    8. '   ' → logprob: -6.689017295837402
    9. ' ' → logprob: -7.814017295837402
    10. '(
' → logprob: -8.064017295837402

Token 151: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4572588801383972
    2. '<|end|>' → logprob: -1.457258939743042
    3. ')' → logprob: -2.582258939743042
    4. '#' → logprob: -3.582258939743042
    5. 'def' (adapté à ' def') → logprob: -5.457258701324463
    6. ' ' → logprob: -5.582258701324463
    7. '
' → logprob: -5.707258701324463
    8. '(' → logprob: -5.832258701324463
    9. '```' → logprob: -6.332258701324463
    10. 'newline' → logprob: -6.582258701324463

Token 152: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -1.1272034645080566
    2. 'L' → logprob: -1.2522034645080566
    3. 'A' → logprob: -2.6272034645080566
    4. 'M' → logprob: -3.0022034645080566
    5. 'N' → logprob: -3.0022034645080566
    6. 'F' → logprob: -3.2522034645080566
    7. 'T' → logprob: -3.3772034645080566
    8. 'LI' → logprob: -4.002203464508057
    9. 'LS' → logprob: -4.127203464508057
    10. 'D' → logprob: -4.127203464508057

Token 153: 'LS' (ID: 10172)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4420824944972992
    2. 'N' → logprob: -1.3170825242996216
    3. 'n' → logprob: -3.442082405090332
    4. 'L' → logprob: -3.942082405090332
    5. '():' → logprob: -4.817082405090332
    6. 'P' → logprob: -4.942082405090332
    7. '1' → logprob: -5.317082405090332
    8. '(' → logprob: -5.442082405090332
    9. 'D' → logprob: -6.567082405090332
    10. 'nt' → logprob: -6.692082405090332

Token 154: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002337589394301176
    2. '():' → logprob: -6.627337455749512
    3. '(' → logprob: -7.127337455749512
    4. 'elf' → logprob: -9.877337455749512
    5. '()' → logprob: -10.127337455749512
    6. 'L' → logprob: -10.377337455749512
    7. '():
' → logprob: -10.502337455749512
    8. 'self' → logprob: -11.002337455749512
    9. '):' → logprob: -11.127337455749512
    10. '(s' → logprob: -12.752337455749512

Token 155: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.32158127427101135
    2. '):' → logprob: -1.571581244468689
    3. '):
' → logprob: -2.9465813636779785
    4. 'self' → logprob: -4.3215813636779785
    5. ')' → logprob: -7.6965813636779785
    6. ')(' → logprob: -8.32158088684082
    7. '(' → logprob: -8.57158088684082
    8. '():' → logprob: -8.69658088684082
    9. '):

' → logprob: -9.19658088684082
    10. '   ' → logprob: -9.32158088684082

Token 156: ' n' (ID: 297)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3166111409664154
    2. 'n' → logprob: -1.8166111707687378
    3. ' self' → logprob: -3.0666110515594482
    4. ' n' → logprob: -3.6916110515594482
    5. '):' → logprob: -4.816611289978027
    6. ')' → logprob: -5.066611289978027
    7. '):
' → logprob: -5.566611289978027
    8. 'sep' → logprob: -5.566611289978027
    9. 'delimiter' → logprob: -6.191611289978027
    10. 'size' → logprob: -6.191611289978027

Token 157: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0031027307268232107
    2. '):
' → logprob: -6.378102779388428
    3. ')' → logprob: -7.378102779388428
    4. ':' → logprob: -8.12810230255127
    5. '=' → logprob: -8.50310230255127
    6. ')):' → logprob: -9.12810230255127
    7. ' ):' → logprob: -9.50310230255127
    8. ',' → logprob: -9.87810230255127
    9. '=None' → logprob: -10.62810230255127
    10. '1' → logprob: -13.00310230255127

Token 158: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020469363778829575
    2. '[]' → logprob: -4.3954691886901855
    3. '[' → logprob: -5.3954691886901855
    4. '   ' → logprob: -7.0204691886901855
    5. ' return' → logprob: -7.3954691886901855
    6. 'return' → logprob: -7.7704691886901855
    7. '	' → logprob: -7.8954691886901855
    8. ':' → logprob: -8.770469665527344
    9. '(' → logprob: -8.895469665527344
    10. ' [' → logprob: -9.020469665527344

Token 159: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4248259663581848
    2. ' return' → logprob: -1.17482590675354
    3. '       ' → logprob: -3.29982590675354
    4. '   ' → logprob: -8.424825668334961
    5. '	return' → logprob: -9.299825668334961
    6. '
' → logprob: -11.174825668334961
    7. ' ' → logprob: -11.924825668334961
    8. '[' → logprob: -12.674825668334961
    9. ' [' → logprob: -12.924825668334961
    10. '    ' → logprob: -12.924825668334961

Token 160: ' list' (ID: 1562)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.4111706018447876
    2. 'list' → logprob: -1.5361706018447876
    3. '[' → logprob: -2.786170482635498
    4. ' [' → logprob: -3.536170482635498
    5. ' list' → logprob: -4.161170482635498
    6. '[self' → logprob: -4.411170482635498
    7. '[item' → logprob: -7.536170482635498
    8. '[i' → logprob: -8.286170959472656
    9. '[line' → logprob: -8.286170959472656
    10. '[I' → logprob: -8.411170959472656

Token 161: '(is' (ID: 16171)
  Prédit: '(chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(chain' → logprob: -0.902456521987915
    2. '(st' → logprob: -1.277456521987915
    3. '(map' → logprob: -1.652456521987915
    4. '(is' → logprob: -2.152456521987915
    5. '(' → logprob: -5.777456283569336
    6. '(self' → logprob: -6.402456283569336
    7. '(range' → logprob: -6.777456283569336
    8. '(int' → logprob: -7.277456283569336
    9. '(re' → logprob: -7.402456283569336
    10. 'is' → logprob: -9.027456283569336

Token 162: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -1.9027791495318525e-05
    2. 'slice' → logprob: -11.125019073486328
    3. '```' → logprob: -14.250019073486328
    4. 'chain' → logprob: -14.625019073486328
    5. 'liced' → logprob: -14.625019073486328
    6. '(slice' → logprob: -15.000019073486328
    7. 'ice' → logprob: -15.000019073486328
    8. 'lices' → logprob: -15.125019073486328
    9. '(' → logprob: -15.250019073486328
    10. 'lace' → logprob: -15.375019073486328

Token 163: '(map' (ID: 16946)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5512794852256775
    2. '(count' → logprob: -1.1762795448303223
    3. '(re' → logprob: -2.9262795448303223
    4. '(chain' → logprob: -2.9262795448303223
    5. '(' → logprob: -5.051279544830322
    6. '(lambda' → logprob: -6.926279544830322
    7. '(per' → logprob: -8.426279067993164
    8. '(map' → logprob: -9.426279067993164
    9. '(it' → logprob: -9.426279067993164
    10. 'count' → logprob: -9.551279067993164

Token 164: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.03565505892038345
    2. '(str' → logprob: -3.4106550216674805
    3. '(' → logprob: -7.0356550216674805
    4. '(self' → logprob: -7.2856550216674805
    5. '(lambda' → logprob: -8.16065502166748
    6. '(item' → logprob: -9.41065502166748
    7. 'int' → logprob: -10.41065502166748
    8. '(input' → logprob: -12.03565502166748
    9. '<int' → logprob: -12.16065502166748
    10. 'str' → logprob: -12.16065502166748

Token 165: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07822637259960175
    2. '(self' → logprob: -2.828226327896118
    3. ',self' → logprob: -4.203226566314697
    4. '),' → logprob: -7.578226566314697
    5. 'self' → logprob: -7.828226566314697
    6. '(),' → logprob: -9.203226089477539
    7. '(' → logprob: -9.953226089477539
    8. ' ,' → logprob: -10.078226089477539
    9. ',(' → logprob: -10.328226089477539
    10. ' self' → logprob: -10.953226089477539

Token 166: ' (' (ID: 350)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2947625517845154
    2. 'repeat' → logprob: -1.9197626113891602
    3. ' self' → logprob: -2.91976261138916
    4. 'chain' → logprob: -3.04476261138916
    5. ' chain' → logprob: -5.41976261138916
    6. ' repeat' → logprob: -6.16976261138916
    7. 'count' → logprob: -8.29476261138916
    8. '(self' → logprob: -9.79476261138916
    9. '   ' → logprob: -9.91976261138916
    10. '       ' → logprob: -10.04476261138916

Token 167: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.012658209539949894
    2. ' self' → logprob: -5.13765811920166
    3. 'repeat' → logprob: -5.51265811920166
    4. 'chain' → logprob: -6.26265811920166
    5. '   ' → logprob: -8.26265811920166
    6. '(self' → logprob: -8.38765811920166
    7. ' ' → logprob: -9.38765811920166
    8. 'sys' → logprob: -10.13765811920166
    9. '  ' → logprob: -10.76265811920166
    10. ' chain' → logprob: -10.88765811920166

Token 168: '.input' (ID: 18322)
  Prédit: '.input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.input' → logprob: -0.07482129335403442
    2. '().' → logprob: -2.9498212337493896
    3. 'input' → logprob: -4.074821472167969
    4. '.' → logprob: -6.574821472167969
    5. '()' → logprob: -6.949821472167969
    6. ')' → logprob: -9.699821472167969
    7. ')))' → logprob: -9.949821472167969
    8. '))' → logprob: -10.074821472167969
    9. ').' → logprob: -10.199821472167969
    10. '()))' → logprob: -10.199821472167969

Token 169: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.019636966288089752
    2. '().' → logprob: -4.394637107849121
    3. '()),' → logprob: -5.269637107849121
    4. '())))' → logprob: -7.519637107849121
    5. '()).' → logprob: -7.894637107849121
    6. ')' → logprob: -8.019637107849121
    7. '()))' → logprob: -8.269637107849121
    8. ')),' → logprob: -8.394637107849121
    9. '())' → logprob: -9.269637107849121
    10. '())),
' → logprob: -10.769637107849121

Token 170: ' for' (ID: 395)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.07635641098022461
    2. '()' → logprob: -3.0763564109802246
    3. ').' → logprob: -3.8263564109802246
    4. '()).' → logprob: -6.076356410980225
    5. '()),' → logprob: -6.201356410980225
    6. ')),' → logprob: -7.326356410980225
    7. '),' → logprob: -7.951356410980225
    8. ')' → logprob: -9.201356887817383
    9. 'for' → logprob: -9.951356887817383
    10. ' ' → logprob: -10.826356887817383

Token 171: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0054674712009727955
    2. 'range' → logprob: -5.630467414855957
    3. ' range' → logprob: -6.505467414855957
    4. ' _' → logprob: -8.130467414855957
    5. '_n' → logprob: -10.755467414855957
    6. '__' → logprob: -11.755467414855957
    7. 'None' → logprob: -11.880467414855957
    8. '_repeat' → logprob: -11.880467414855957
    9. '_None' → logprob: -12.130467414855957
    10. '_range' → logprob: -12.130467414855957

Token 172: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3152400255203247
    2. 'range' → logprob: -1.3152400255203247
    3. ' in' → logprob: -6.940239906311035
    4. '(range' → logprob: -7.065239906311035
    5. 'in' → logprob: -9.315239906311035
    6. '	range' → logprob: -10.440239906311035
    7. ' ' → logprob: -11.065239906311035
    8. ' xrange' → logprob: -11.440239906311035
    9. '  ' → logprob: -12.940239906311035
    10. '_' → logprob: -13.440239906311035

Token 173: ' count' (ID: 3605)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004079589620232582
    2. ' range' → logprob: -5.504079818725586
    3. '	range' → logprob: -14.379079818725586
    4. '(range' → logprob: -15.504079818725586
    5. ' ' → logprob: -16.254079818725586
    6. 'n' → logprob: -16.254079818725586
    7. '[' → logprob: -17.129079818725586
    8. 'rang' → logprob: -17.254079818725586
    9. 'repeat' → logprob: -17.629079818725586
    10. ')' → logprob: -17.629079818725586

Token 174: '()' (ID: 416)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.006349761504679918
    2. '()' → logprob: -5.381349563598633
    3. '(' → logprob: -6.756349563598633
    4. '()),' → logprob: -7.756349563598633
    5. 'n' → logprob: -10.006349563598633
    6. '())),
' → logprob: -10.256349563598633
    7. '(None' → logprob: -10.631349563598633
    8. '()))' → logprob: -11.256349563598633
    9. '()
' → logprob: -11.631349563598633
    10. '()),
' → logprob: -13.381349563598633

Token 175: ')),' (ID: 12098)
  Prédit: ')),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')),' → logprob: -0.2789463698863983
    2. '),' → logprob: -2.0289463996887207
    3. '()' → logprob: -2.2789463996887207
    4. '()),' → logprob: -5.153946399688721
    5. ' ' → logprob: -6.403946399688721
    6. ')' → logprob: -6.653946399688721
    7. '(n' → logprob: -8.528945922851562
    8. '   ' → logprob: -8.903945922851562
    9. ' ),' → logprob: -8.903945922851562
    10. '))),' → logprob: -9.528945922851562

Token 176: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.008618946187198162
    2. ' n' → logprob: -4.7586188316345215
    3. '	n' → logprob: -12.88361930847168
    4. ' ' → logprob: -14.13361930847168
    5. '  ' → logprob: -15.00861930847168
    6. '   ' → logprob: -15.25861930847168
    7. ')n' → logprob: -15.25861930847168
    8. '    ' → logprob: -15.88361930847168
    9. '(n' → logprob: -16.00861930847168
    10. '0' → logprob: -17.00861930847168

Token 177: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0008868030272424221
    2. ')' → logprob: -7.250886917114258
    3. ')))' → logprob: -8.875886917114258
    4. '),' → logprob: -11.125886917114258
    5. '))
' → logprob: -11.500886917114258
    6. '()))' → logprob: -12.125886917114258
    7. ' ))' → logprob: -12.875886917114258
    8. '   ' → logprob: -13.875886917114258
    9. '));' → logprob: -14.375886917114258
    10. ' ' → logprob: -14.875886917114258

Token 178: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5455291271209717
    2. '(' → logprob: -1.1705291271209717
    3. ':' → logprob: -2.4205291271209717
    4. '[' → logprob: -4.670529365539551
    5. '.' → logprob: -5.295529365539551
    6. '#' → logprob: -6.670529365539551
    7. ' ' → logprob: -6.920529365539551
    8. '
' → logprob: -7.045529365539551
    9. ',' → logprob: -7.170529365539551
    10. '(
' → logprob: -7.670529365539551

Token 179: ' def' (ID: 1056)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4606001377105713
    2. ')' → logprob: -1.5856001377105713
    3. '(' → logprob: -2.5856001377105713
    4. '<|end|>' → logprob: -2.7106001377105713
    5. '_' → logprob: -5.710599899291992
    6. '
' → logprob: -5.835599899291992
    7. '   ' → logprob: -6.210599899291992
    8. '[' → logprob: -6.210599899291992
    9. '#' → logprob: -6.335599899291992
    10. ' ' → logprob: -6.585599899291992

Token 180: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.4901072382926941
    2. 'ILS' → logprob: -2.240107297897339
    3. 'SL' → logprob: -2.365107297897339
    4. 'LS' → logprob: -2.990107297897339
    5. 'IS' → logprob: -3.115107297897339
    6. 'OL' → logprob: -3.615107297897339
    7. 'IL' → logprob: -3.740107297897339
    8. 'OLS' → logprob: -4.49010705947876
    9. 'L' → logprob: -4.86510705947876
    10. 'O' → logprob: -5.36510705947876

Token 181: 'LS' (ID: 10172)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0026031259912997484
    2. '(self' → logprob: -6.127603054046631
    3. '(' → logprob: -8.127603530883789
    4. '()' → logprob: -9.877603530883789
    5. 'LS' → logprob: -10.127603530883789
    6. 'Ls' → logprob: -11.002603530883789
    7. '```' → logprob: -13.252603530883789
    8. 'EL' → logprob: -13.252603530883789
    9. '():' → logprob: -13.377603530883789
    10. 'List' → logprob: -13.502603530883789

Token 182: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0015652115689590573
    2. '(' → logprob: -6.501564979553223
    3. '(s' → logprob: -10.626564979553223
    4. ' (' → logprob: -10.626564979553223
    5. '(
' → logprob: -11.876564979553223
    6. 'self' → logprob: -12.876564979553223
    7. '(n' → logprob: -13.626564979553223
    8. '(se' → logprob: -14.126564979553223
    9. '(sel' → logprob: -14.126564979553223
    10. '(Self' → logprob: -15.126564979553223

Token 183: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012187495827674866
    2. '(self' → logprob: -5.137187480926514
    3. 'self' → logprob: -5.387187480926514
    4. ',self' → logprob: -7.512187480926514
    5. ',
' → logprob: -7.637187480926514
    6. '):' → logprob: -8.387187957763672
    7. ',n' → logprob: -8.512187957763672
    8. '(' → logprob: -9.262187957763672
    9. ' ,' → logprob: -9.762187957763672
    10. '(n' → logprob: -11.012187957763672

Token 184: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.14289507269859314
    2. ' n' → logprob: -2.017894983291626
    3. 'self' → logprob: -9.142894744873047
    4. ')' → logprob: -10.142894744873047
    5. '):
' → logprob: -10.642894744873047
    6. ' self' → logprob: -11.142894744873047
    7. '1' → logprob: -11.642894744873047
    8. '):' → logprob: -11.892894744873047
    9. ' ' → logprob: -12.267894744873047
    10. '   ' → logprob: -12.767894744873047

Token 185: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00022082125360611826
    2. '):
' → logprob: -8.500221252441406
    3. ')' → logprob: -11.500221252441406
    4. 'self' → logprob: -12.500221252441406
    5. '   ' → logprob: -13.750221252441406
    6. ' ):' → logprob: -14.125221252441406
    7. ')):' → logprob: -14.875221252441406
    8. ':' → logprob: -14.875221252441406
    9. '(self' → logprob: -15.250221252441406
    10. '=' → logprob: -15.625221252441406

Token 186: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8657762408256531
    2. ' return' → logprob: -0.9907762408256531
    3. '       ' → logprob: -1.6157763004302979
    4. ' list' → logprob: -5.615776062011719
    5. '   ' → logprob: -6.240776062011719
    6. 'list' → logprob: -6.365776062011719
    7. '[' → logprob: -7.365776062011719
    8. '[]' → logprob: -7.490776062011719
    9. '(list' → logprob: -8.240776062011719
    10. ' [' → logprob: -8.865776062011719

Token 187: ' return' (ID: 622)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.013264224864542484
    2. 'return' (adapté à ' return') → logprob: -4.513264179229736
    3. '[list' → logprob: -6.388264179229736
    4. ' list' → logprob: -7.638264179229736
    5. '[' → logprob: -10.513264656066895
    6. ' return' → logprob: -10.888264656066895
    7. ' [' → logprob: -13.388264656066895
    8. '[]' → logprob: -14.138264656066895
    9. '[self' → logprob: -14.513264656066895
    10. '[s' → logprob: -14.888264656066895

Token 188: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0497053824365139
    2. ' list' → logprob: -3.0497052669525146
    3. '[list' → logprob: -7.424705505371094
    4. '[self' → logprob: -8.674705505371094
    5. 'self' → logprob: -8.799705505371094
    6. '[' → logprob: -9.049705505371094
    7. ' [' → logprob: -9.924705505371094
    8. '[S' → logprob: -10.924705505371094
    9. 'List' → logprob: -12.799705505371094
    10. ' self' → logprob: -12.924705505371094

Token 189: '(is' (ID: 16171)
  Prédit: '(is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(is' → logprob: -0.058875009417533875
    2. '(map' → logprob: -3.68387508392334
    3. '(st' → logprob: -3.68387508392334
    4. 'is' → logprob: -5.68387508392334
    5. '(str' → logprob: -5.80887508392334
    6. '(chain' → logprob: -8.30887508392334
    7. '(' → logprob: -9.05887508392334
    8. 'st' → logprob: -9.80887508392334
    9. 'map' → logprob: -10.18387508392334
    10. 'str' → logprob: -10.80887508392334

Token 190: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -0.1197545975446701
    2. 'slice' → logprob: -2.6197545528411865
    3. 'is' → logprob: -3.2447545528411865
    4. '(is' → logprob: -7.119754791259766
    5. '(slice' → logprob: -9.994754791259766
    6. 'st' → logprob: -10.119754791259766
    7. 'map' → logprob: -10.119754791259766
    8. 'list' → logprob: -10.494754791259766
    9. '(map' → logprob: -10.994754791259766
    10. 'ile' → logprob: -11.369754791259766

Token 191: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -7.219262624857947e-05
    2. '(str' → logprob: -10.250072479248047
    3. '(' → logprob: -10.750072479248047
    4. 'map' → logprob: -11.250072479248047
    5. '(chain' → logprob: -13.750072479248047
    6. '(lambda' → logprob: -15.250072479248047
    7. '(st' → logprob: -15.375072479248047
    8. 'str' → logprob: -15.500072479248047
    9. '(m' → logprob: -15.750072479248047
    10. '(list' → logprob: -16.250072479248047

Token 192: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -9.746380237629637e-05
    2. 'str' → logprob: -9.250097274780273
    3. '(' → logprob: -14.000097274780273
    4. '(lambda' → logprob: -15.375097274780273
    5. '=str' → logprob: -15.625097274780273
    6. '(sys' → logprob: -16.375097274780273
    7. ' str' → logprob: -17.375097274780273
    8. '	str' → logprob: -17.375097274780273
    9. '[str' → logprob: -18.625097274780273
    10. '(self' → logprob: -18.750097274780273

Token 193: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8550976164988242e-05
    2. '(' → logprob: -11.375018119812012
    3. ' ,' → logprob: -12.625018119812012
    4. ',(' → logprob: -13.375018119812012
    5. '(self' → logprob: -14.125018119812012
    6. '),' → logprob: -14.375018119812012
    7. ',self' → logprob: -14.750018119812012
    8. ' (' → logprob: -16.000019073486328
    9. ')' → logprob: -16.125019073486328
    10. 'self' → logprob: -16.500019073486328

Token 194: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0010673471260815859
    2. ' (' → logprob: -7.126067161560059
    3. 'chain' → logprob: -9.626067161560059
    4. 'self' → logprob: -9.751067161560059
    5. '(chain' → logprob: -10.251067161560059
    6. '(it' → logprob: -10.501067161560059
    7. 'repeat' → logprob: -10.626067161560059
    8. '(re' → logprob: -11.501067161560059
    9. '(is' → logprob: -11.501067161560059
    10. '(this' → logprob: -12.001067161560059

Token 195: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007450680714100599
    2. '(self' → logprob: -7.2507452964782715
    3. ' self' → logprob: -10.375744819641113
    4. '   ' → logprob: -13.250744819641113
    5. '
' → logprob: -14.750744819641113
    6. 'sys' → logprob: -14.875744819641113
    7. '           ' → logprob: -15.000744819641113
    8. '       ' → logprob: -15.375744819641113
    9. ' ' → logprob: -15.500744819641113
    10. '```' → logprob: -16.37574577331543

Token 196: '.input' (ID: 18322)
  Prédit: '.input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.input' → logprob: -0.000925753265619278
    2. 'input' → logprob: -7.000925540924072
    3. '.' → logprob: -11.50092601776123
    4. '().' → logprob: -12.87592601776123
    5. '<input' → logprob: -14.50092601776123
    6. ' .' → logprob: -15.50092601776123
    7. ' input' → logprob: -15.50092601776123
    8. 'self' → logprob: -15.62592601776123
    9. '.user' → logprob: -16.375925064086914
    10. '_input' → logprob: -16.625925064086914

Token 197: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.842555426876061e-06
    2. ' ()' → logprob: -13.125004768371582
    3. ')' → logprob: -13.625004768371582
    4. 'for' → logprob: -14.500004768371582
    5. '(' → logprob: -14.875004768371582
    6. '()),' → logprob: -15.625004768371582
    7. '()
' → logprob: -15.875004768371582
    8. '(),' → logprob: -15.875004768371582
    9. ' for' → logprob: -16.2500057220459
    10. ' ' → logprob: -16.3750057220459

Token 198: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03225754201412201
    2. ' for' → logprob: -3.907257556915283
    3. 'for' → logprob: -4.532257556915283
    4. ' ()' → logprob: -7.157257556915283
    5. ')' → logprob: -9.407257080078125
    6. ' ' → logprob: -11.032257080078125
    7. '   ' → logprob: -12.532257080078125
    8. '(' → logprob: -12.782257080078125
    9. '    ' → logprob: -13.782257080078125
    10. '  ' → logprob: -14.032257080078125

Token 199: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -8.506661833962426e-05
    2. ' _' → logprob: -9.37508487701416
    3. '_
' → logprob: -17.375085830688477
    4. ' range' → logprob: -17.625085830688477
    5. '(' → logprob: -18.125085830688477
    6. '_range' → logprob: -18.250085830688477
    7. ' ' → logprob: -18.375085830688477
    8. ' ' → logprob: -18.500085830688477
    9. 'range' → logprob: -18.750085830688477
    10. '_),' → logprob: -19.000085830688477

Token 200: ' in' (ID: 306)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.002083166502416134
    2. ' count' → logprob: -6.5020833015441895
    3. 'range' → logprob: -7.8770833015441895
    4. '(count' → logprob: -8.752082824707031
    5. '=count' → logprob: -11.002082824707031
    6. '
' → logprob: -12.252082824707031
    7. '<count' → logprob: -12.377082824707031
    8. ' range' → logprob: -12.377082824707031
    9. '_' → logprob: -12.877082824707031
    10. 'in' → logprob: -13.252082824707031

Token 201: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.014241892844438553
    2. ' count' → logprob: -4.264241695404053
    3. 'range' → logprob: -9.639242172241211
    4. ' range' → logprob: -12.014242172241211
    5. '	count' → logprob: -12.764242172241211
    6. '(count' → logprob: -13.889242172241211
    7. 'repeat' → logprob: -13.889242172241211
    8. '_count' → logprob: -14.139242172241211
    9. 'chain' → logprob: -14.639242172241211
    10. '[count' → logprob: -14.889242172241211

Token 202: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00030900631099939346
    2. ')),' → logprob: -8.625308990478516
    3. '()))' → logprob: -9.875308990478516
    4. '(' → logprob: -10.000308990478516
    5. '())),
' → logprob: -11.375308990478516
    6. '()),' → logprob: -11.500308990478516
    7. ' ' → logprob: -13.000308990478516
    8. '()
' → logprob: -13.250308990478516
    9. '   ' → logprob: -13.250308990478516
    10. '())).' → logprob: -13.875308990478516

Token 203: ')),' (ID: 12098)
  Prédit: ')),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')),' → logprob: -0.00015514736878685653
    2. ')' → logprob: -10.250155448913574
    3. ' ' → logprob: -10.375155448913574
    4. '()' → logprob: -10.500155448913574
    5. '))' → logprob: -10.625155448913574
    6. '),' → logprob: -10.875155448913574
    7. '))),' → logprob: -11.125155448913574
    8. '   ' → logprob: -14.625155448913574
    9. '(' → logprob: -14.750155448913574
    10. ')):' → logprob: -14.875155448913574

Token 204: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.25194576382637024
    2. ' n' → logprob: -1.5019457340240479
    3. '	n' → logprob: -11.376945495605469
    4. '(n' → logprob: -13.626945495605469
    5. ' ' → logprob: -13.751945495605469
    6. '   ' → logprob: -14.126945495605469
    7. '    ' → logprob: -14.376945495605469
    8. ')n' → logprob: -14.876945495605469
    9. '       ' → logprob: -15.251945495605469
    10. '_n' → logprob: -15.626945495605469

Token 205: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0003884894831571728
    2. ')' → logprob: -7.8753886222839355
    3. ')))' → logprob: -11.875388145446777
    4. '()))' → logprob: -14.625388145446777
    5. '))
' → logprob: -14.750388145446777
    6. '()' → logprob: -16.250389099121094
    7. '),' → logprob: -16.375389099121094
    8. ' ))' → logprob: -16.625389099121094
    9. '));' → logprob: -16.750389099121094
    10. '   ' → logprob: -16.875389099121094

Token 206: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.4827731847763062
    2. '(' → logprob: -1.6077731847763062
    3. ')' → logprob: -1.6077731847763062
    4. ':' → logprob: -1.7327731847763062
    5. '<|end|>' → logprob: -2.3577733039855957
    6. '.' → logprob: -3.4827733039855957
    7. '   ' → logprob: -4.357773303985596
    8. '
' → logprob: -4.482773303985596
    9. '[' → logprob: -4.482773303985596
    10. 'def' → logprob: -4.982773303985596

Token 207: ' def' (ID: 1056)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6704868674278259
    2. 'def' (adapté à ' def') → logprob: -1.7954869270324707
    3. '   ' → logprob: -2.4204869270324707
    4. '<|end|>' → logprob: -2.4204869270324707
    5. ')' → logprob: -2.7954869270324707
    6. ':' → logprob: -3.9204869270324707
    7. '(' → logprob: -4.045486927032471
    8. '```' → logprob: -4.545486927032471
    9. '[' → logprob: -5.170486927032471
    10. ' ' → logprob: -5.670486927032471

Token 208: ' SIL' (ID: 94808)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -1.5826029777526855
    2. 'I' → logprob: -1.8326029777526855
    3. 'L' → logprob: -2.4576029777526855
    4. 'F' → logprob: -2.5826029777526855
    5. 'M' → logprob: -2.9576029777526855
    6. 'C' → logprob: -2.9576029777526855
    7. 'T' → logprob: -2.9576029777526855
    8. 'A' → logprob: -3.3326029777526855
    9. 'O' → logprob: -3.3326029777526855
    10. 'S' → logprob: -3.5201029777526855

Token 209: 'S' (ID: 50)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.38091832399368286
    2. '():' → logprob: -2.005918264389038
    3. '():
' → logprob: -2.630918264389038
    4. '(self' → logprob: -3.005918264389038
    5. 'L' → logprob: -4.255918502807617
    6. 'ist' → logprob: -4.255918502807617
    7. '()):
' → logprob: -4.630918502807617
    8. '())' → logprob: -4.880918502807617
    9. 'def' → logprob: -5.255918502807617
    10. 'T' → logprob: -6.005918502807617

Token 210: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.016508186236023903
    2. '(' → logprob: -4.141508102416992
    3. '(n' → logprob: -8.141508102416992
    4. 'self' → logprob: -8.891508102416992
    5. ',' → logprob: -11.266508102416992
    6. ' (' → logprob: -12.266508102416992
    7. ')' → logprob: -12.516508102416992
    8. '(s' → logprob: -12.641508102416992
    9. '(
' → logprob: -13.016508102416992
    10. 'n' → logprob: -13.141508102416992

Token 211: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011444359086453915
    2. 'self' → logprob: -4.511444568634033
    3. 'n' → logprob: -8.761444091796875
    4. ',n' → logprob: -9.136444091796875
    5. ' ,' → logprob: -9.886444091796875
    6. '(self' → logprob: -10.761444091796875
    7. '):' → logprob: -11.011444091796875
    8. ',self' → logprob: -11.136444091796875
    9. ',
' → logprob: -11.386444091796875
    10. ' self' → logprob: -12.386444091796875

Token 212: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.17147237062454224
    2. 'self' → logprob: -2.0464723110198975
    3. ' n' → logprob: -3.7964723110198975
    4. ' self' → logprob: -5.171472549438477
    5. ')' → logprob: -8.796472549438477
    6. 's' → logprob: -10.796472549438477
    7. '(self' → logprob: -11.546472549438477
    8. '):' → logprob: -11.921472549438477
    9. 'def' → logprob: -11.983972549438477
    10. 'elf' → logprob: -12.171472549438477

Token 213: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1269938349723816
    2. '):
' → logprob: -2.1269938945770264
    3. ')' → logprob: -10.376994132995605
    4. '   ' → logprob: -11.251994132995605
    5. '):
' → logprob: -12.001994132995605
    6. ',' → logprob: -12.251994132995605
    7. '):

' → logprob: -12.501994132995605
    8. ':' → logprob: -13.251994132995605
    9. '():' → logprob: -13.626994132995605
    10. ' ):' → logprob: -13.751994132995605

Token 214: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3655587434768677
    2. '       ' → logprob: -1.3655587434768677
    3. 'return' → logprob: -3.240558624267578
    4. ' return' → logprob: -4.490558624267578
    5. '	return' → logprob: -7.615558624267578
    6. '[]' → logprob: -10.865558624267578
    7. '     ' → logprob: -10.990558624267578
    8. ' ' → logprob: -11.240558624267578
    9. '    ' → logprob: -11.240558624267578
    10. '
' → logprob: -11.865558624267578

Token 215: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.005535758566111326
    2. ' return' → logprob: -5.38053560256958
    3. 'list' → logprob: -7.13053560256958
    4. '       ' → logprob: -9.755536079406738
    5. '   ' → logprob: -11.380536079406738
    6. '
' → logprob: -11.630536079406738
    7. '[]' → logprob: -11.880536079406738
    8. ' list' → logprob: -11.880536079406738
    9. 'def' → logprob: -12.380536079406738
    10. '[]
' → logprob: -12.755536079406738

Token 216: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.15072013437747955
    2. ' list' → logprob: -2.0257201194763184
    3. 'self' → logprob: -5.650720119476318
    4. ' [' → logprob: -6.900720119476318
    5. '[list' → logprob: -7.025720119476318
    6. '[self' → logprob: -7.275720119476318
    7. ' self' → logprob: -7.525720119476318
    8. '[' → logprob: -7.650720119476318
    9. '[]' → logprob: -8.150720596313477
    10. ' tuple' → logprob: -9.150720596313477

Token 217: '(is' (ID: 16171)
  Prédit: '(is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(is' → logprob: -0.09376464039087296
    2. '(st' → logprob: -3.093764543533325
    3. '(chain' → logprob: -3.718764543533325
    4. '(map' → logprob: -4.468764781951904
    5. 'is' → logprob: -4.968764781951904
    6. '(' → logprob: -7.093764781951904
    7. 'chain' → logprob: -8.843764305114746
    8. '(int' → logprob: -9.343764305114746
    9. '(acc' → logprob: -9.468764305114746
    10. 'map' → logprob: -9.718764305114746

Token 218: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -0.603887677192688
    2. 'slice' → logprob: -1.353887677192688
    3. 'ice' → logprob: -1.853887677192688
    4. '(map' → logprob: -4.353887557983398
    5. 'map' → logprob: -4.478887557983398
    6. 'is' → logprob: -5.728887557983398
    7. 'sce' → logprob: -5.978887557983398
    8. '(slice' → logprob: -6.728887557983398
    9. 'ce' → logprob: -6.853887557983398
    10. '(is' → logprob: -7.103887557983398

Token 219: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.002904847264289856
    2. '(chain' → logprob: -6.752904891967773
    3. 'map' → logprob: -7.127904891967773
    4. '(str' → logprob: -7.627904891967773
    5. '(self' → logprob: -9.002904891967773
    6. '(st' → logprob: -9.127904891967773
    7. '(' → logprob: -9.252904891967773
    8. 'chain' → logprob: -10.002904891967773
    9. '(lambda' → logprob: -10.377904891967773
    10. 'str' → logprob: -11.752904891967773

Token 220: '(lambda' (ID: 43341)
  Prédit: '(str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.10344426333904266
    2. '(int' → logprob: -2.3534443378448486
    3. '(lambda' → logprob: -5.9784440994262695
    4. '(' → logprob: -7.8534440994262695
    5. 'str' → logprob: -9.35344409942627
    6. '(float' → logprob: -10.10344409942627
    7. '(eval' → logprob: -10.35344409942627
    8. '(s' → logprob: -10.60344409942627
    9. '(sys' → logprob: -10.72844409942627
    10. 'int' → logprob: -11.22844409942627

Token 221: ' _:' (ID: 133568)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4138219952583313
    2. 's' → logprob: -1.4138219356536865
    3. 'int' → logprob: -3.0388219356536865
    4. 'lambda' → logprob: -3.7888219356536865
    5. 'str' → logprob: -4.038822174072266
    6. 'line' → logprob: -5.288822174072266
    7. ' x' → logprob: -8.163822174072266
    8. 'sys' → logprob: -8.538822174072266
    9. '_' → logprob: -8.663822174072266
    10. 'input' → logprob: -8.788822174072266

Token 222: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2880883812904358
    2. 'str' → logprob: -1.538088321685791
    3. 'int' → logprob: -4.413088321685791
    4. 'sys' → logprob: -4.538088321685791
    5. '_.' → logprob: -4.663088321685791
    6. 's' → logprob: -6.413088321685791
    7. '_' → logprob: -7.163088321685791
    8. '__.' → logprob: -8.66308879852295
    9. ' self' → logprob: -9.28808879852295
    10. 'tuple' → logprob: -9.91308879852295

Token 223: '.' (ID: 13)
  Prédit: '.input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.input' → logprob: -0.006251680664718151
    2. '.S' → logprob: -5.256251811981201
    3. 'input' → logprob: -7.256251811981201
    4. '.I' → logprob: -8.631251335144043
    5. '.' → logprob: -9.381251335144043
    6. ' .' → logprob: -11.131251335144043
    7. '.INPUT' → logprob: -11.756251335144043
    8. 'S' → logprob: -12.131251335144043
    9. ' input' → logprob: -12.256251335144043
    10. '	input' → logprob: -12.881251335144043

Token 224: 'IL' (ID: 2654)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.007832207717001438
    2. 'I' → logprob: -5.257832050323486
    3. 'S' → logprob: -6.007832050323486
    4. 'IL' → logprob: -9.757832527160645
    5. 'int' → logprob: -11.257832527160645
    6. ' input' → logprob: -11.257832527160645
    7. 'strip' → logprob: -11.257832527160645
    8. 'split' → logprob: -11.632832527160645
    9. 'IP' → logprob: -11.757832527160645
    10. '(input' → logprob: -12.507832527160645

Token 225: '(),' (ID: 2547)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03741332143545151
    2. '(n' → logprob: -3.5374133586883545
    3. '(self' → logprob: -6.412413120269775
    4. '(_' → logprob: -6.537413120269775
    5. '(None' → logprob: -6.912413120269775
    6. 's' → logprob: -7.037413120269775
    7. '1' → logprob: -7.412413120269775
    8. '),' → logprob: -7.662413120269775
    9. 'S' → logprob: -8.037413597106934
    10. '(i' → logprob: -8.162413597106934

Token 226: ' repeat' (ID: 22962)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04459884762763977
    2. ' n' → logprob: -3.1695988178253174
    3. 'range' → logprob: -7.4195990562438965
    4. '   ' → logprob: -7.9195990562438965
    5. ' range' → logprob: -9.294598579406738
    6. ' ' → logprob: -9.294598579406738
    7. '	n' → logprob: -9.419598579406738
    8. 'count' → logprob: -9.669598579406738
    9. '       ' → logprob: -9.794598579406738
    10. '1' → logprob: -10.294598579406738

Token 227: '(None' (ID: 65126)
  Prédit: '(None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(None' → logprob: -0.2709246277809143
    2. '(' → logprob: -2.1459245681762695
    3. '(n' → logprob: -2.1459245681762695
    4. 'None' → logprob: -6.2709245681762695
    5. '(_,' → logprob: -6.8959245681762695
    6. '_' → logprob: -8.39592456817627
    7. 'n' → logprob: -9.14592456817627
    8. '(_' → logprob: -10.02092456817627
    9. '```' → logprob: -10.64592456817627
    10. '(_)' → logprob: -11.27092456817627

Token 228: ')),' (ID: 12098)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7072526216506958
    2. ')),' → logprob: -0.7072526216506958
    3. '))),' → logprob: -4.832252502441406
    4. ')' → logprob: -5.582252502441406
    5. ')))' → logprob: -7.082252502441406
    6. '),' → logprob: -7.582252502441406
    7. '))' → logprob: -7.832252502441406
    8. ')))),' → logprob: -8.457252502441406
    9. ' ,' → logprob: -8.957252502441406
    10. ',n' → logprob: -9.832252502441406

Token 229: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0619683600962162
    2. ' n' → logprob: -2.8119683265686035
    3. '	n' → logprob: -14.186968803405762
    4. ' ' → logprob: -16.936967849731445
    5. '   ' → logprob: -17.436967849731445
    6. '    ' → logprob: -18.061967849731445
    7. ')n' → logprob: -18.436967849731445
    8. '(n' → logprob: -18.811967849731445
    9. '  ' → logprob: -18.811967849731445
    10. ' ' → logprob: -19.311967849731445

Token 230: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0017123052384704351
    2. ')' → logprob: -6.376712322235107
    3. ')))' → logprob: -11.87671184539795
    4. '))
' → logprob: -13.25171184539795
    5. '));' → logprob: -14.75171184539795
    6. '),' → logprob: -15.00171184539795
    7. '()))' → logprob: -15.25171184539795
    8. ' ))' → logprob: -16.001712799072266
    9. ')
' → logprob: -17.126712799072266
    10. ')}' → logprob: -17.126712799072266

Token 231: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06304609030485153
    2. '<|end|>' → logprob: -3.1880459785461426
    3. ':' → logprob: -4.438045978546143
    4. ' ' → logprob: -6.063045978546143
    5. '
' → logprob: -6.563045978546143
    6. '   ' → logprob: -6.938045978546143
    7. '#' → logprob: -7.063045978546143
    8. '\n' → logprob: -7.063045978546143
    9. ' )' → logprob: -8.3130464553833
    10. ':return' → logprob: -8.5630464553833

Token 232: ' def' (ID: 1056)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.45099937915802
    2. ':' → logprob: -1.95099937915802
    3. '   ' → logprob: -2.5759992599487305
    4. '<|end|>' → logprob: -3.3259992599487305
    5. '#' → logprob: -3.4509992599487305
    6. 'def' (adapté à ' def') → logprob: -4.0759992599487305
    7. ']' → logprob: -4.0759992599487305
    8. ' ' → logprob: -4.2009992599487305
    9. '(' → logprob: -5.2009992599487305
    10. '}' → logprob: -5.3259992599487305

Token 233: ' SS' (ID: 30354)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.012006244622170925
    2. 'SS' → logprob: -5.5120062828063965
    3. ' SIL' → logprob: -5.5120062828063965
    4. 'SL' → logprob: -6.8870062828063965
    5. ' S' → logprob: -7.2620062828063965
    6. 'IS' → logprob: -8.012005805969238
    7. 'SQL' → logprob: -8.012005805969238
    8. 'SSL' → logprob: -8.262005805969238
    9. 'SIM' → logprob: -8.887005805969238
    10. 'SV' → logprob: -9.012005805969238

Token 234: 'LS' (ID: 10172)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.4750949740409851
    2. 'LS' → logprob: -0.9750949740409851
    3. '(self' → logprob: -7.225094795227051
    4. '(' → logprob: -8.85009479522705
    5. 'Ls' → logprob: -9.35009479522705
    6. 'S' → logprob: -10.22509479522705
    7. '(L' → logprob: -12.10009479522705
    8. '()' → logprob: -12.72509479522705
    9. '   ' → logprob: -12.97509479522705
    10. ' L' → logprob: -13.35009479522705

Token 235: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -9.090760431718081e-05
    2. '(' → logprob: -9.500090599060059
    3. ' (' → logprob: -12.000090599060059
    4. '(s' → logprob: -12.250090599060059
    5. 'self' → logprob: -13.000090599060059
    6. '   ' → logprob: -14.250090599060059
    7. ' ' → logprob: -14.875090599060059
    8. '```' → logprob: -15.000090599060059
    9. 'def' → logprob: -15.250090599060059
    10. '(Self' → logprob: -15.500090599060059

Token 236: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47494834661483765
    2. '(self' → logprob: -0.9749483466148376
    3. ',self' → logprob: -7.599948406219482
    4. 'self' → logprob: -8.224947929382324
    5. '(' → logprob: -10.474947929382324
    6. ' ,' → logprob: -10.599947929382324
    7. ' (' → logprob: -11.349947929382324
    8. ')' → logprob: -11.599947929382324
    9. ' self' → logprob: -11.974947929382324
    10. '),' → logprob: -11.974947929382324

Token 237: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.043013233691453934
    2. ' n' → logprob: -3.168013334274292
    3. 'self' → logprob: -11.668013572692871
    4. '(n' → logprob: -13.293013572692871
    5. ' self' → logprob: -13.418013572692871
    6. '	n' → logprob: -14.668013572692871
    7. ')' → logprob: -15.043013572692871
    8. '<|end|>' → logprob: -15.043013572692871
    9. ')n' → logprob: -15.043013572692871
    10. ' ' → logprob: -15.168013572692871

Token 238: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0032069424632936716
    2. '):
' → logprob: -5.753206729888916
    3. ':' → logprob: -11.128207206726074
    4. ')' → logprob: -11.878207206726074
    5. ' ):' → logprob: -12.628207206726074
    6. '):

' → logprob: -13.503207206726074
    7. '   ' → logprob: -14.003207206726074
    8. '):
' → logprob: -14.003207206726074
    9. ',' → logprob: -15.003207206726074
    10. '():' → logprob: -15.128207206726074

Token 239: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09564930945634842
    2. 'return' → logprob: -3.345649242401123
    3. ' return' → logprob: -3.595649242401123
    4. '   ' → logprob: -3.595649242401123
    5. '	return' → logprob: -6.970649242401123
    6. '	' → logprob: -9.220649719238281
    7. '	   ' → logprob: -10.845649719238281
    8. '     ' → logprob: -11.095649719238281
    9. '    ' → logprob: -11.345649719238281
    10. '      ' → logprob: -13.220649719238281

Token 240: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0020254701375961304
    2. ' return' → logprob: -6.252025604248047
    3. '       ' → logprob: -9.377025604248047
    4. '   ' → logprob: -11.502025604248047
    5. '	return' → logprob: -13.377025604248047
    6. 'list' → logprob: -15.127025604248047
    7. '    ' → logprob: -16.627025604248047
    8. '     ' → logprob: -16.627025604248047
    9. ' ' → logprob: -17.127025604248047
    10. '
' → logprob: -17.627025604248047

Token 241: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0056077116169035435
    2. ' list' → logprob: -5.880607604980469
    3. 'self' → logprob: -6.005607604980469
    4. '[self' → logprob: -8.255607604980469
    5. '[list' → logprob: -10.005607604980469
    6. ' [' → logprob: -11.380607604980469
    7. ' self' → logprob: -11.505607604980469
    8. '[' → logprob: -12.005607604980469
    9. '[]' → logprob: -15.005607604980469
    10. '[S' → logprob: -15.255607604980469

Token 242: '(is' (ID: 16171)
  Prédit: '(is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(is' → logprob: -0.002366370754316449
    2. 'is' → logprob: -6.127366542816162
    3. '(map' → logprob: -9.252366065979004
    4. '(st' → logprob: -9.752366065979004
    5. '(' → logprob: -10.877366065979004
    6. '(chain' → logprob: -13.002366065979004
    7. '(list' → logprob: -13.377366065979004
    8. '```' → logprob: -13.877366065979004
    9. '(lambda' → logprob: -14.377366065979004
    10. '(
' → logprob: -14.502366065979004

Token 243: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -8.745069499127567e-05
    2. 'slice' → logprob: -9.50008773803711
    3. 'list' → logprob: -11.62508773803711
    4. '(slice' → logprob: -14.12508773803711
    5. 'lite' → logprob: -14.37508773803711
    6. 'lices' → logprob: -14.87508773803711
    7. 'lide' → logprob: -15.37508773803711
    8. 'ile' → logprob: -15.62508773803711
    9. 'c' → logprob: -15.75008773803711
    10. '(' → logprob: -15.75008773803711

Token 244: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0006945623317733407
    2. '(lambda' → logprob: -8.125694274902344
    3. 'map' → logprob: -8.250694274902344
    4. '(chain' → logprob: -9.250694274902344
    5. '(' → logprob: -10.250694274902344
    6. '(st' → logprob: -13.500694274902344
    7. 'chain' → logprob: -13.500694274902344
    8. '(m' → logprob: -13.750694274902344
    9. '(self' → logprob: -14.375694274902344
    10. ',map' → logprob: -15.000694274902344

Token 245: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.0021023214794695377
    2. '(str' → logprob: -6.252102375030518
    3. '(' → logprob: -9.50210189819336
    4. 'lambda' → logprob: -9.50210189819336
    5. '(self' → logprob: -10.75210189819336
    6. 'str' → logprob: -13.37710189819336
    7. '=lambda' → logprob: -14.75210189819336
    8. 'self' → logprob: -15.00210189819336
    9. ' lambda' → logprob: -15.50210189819336
    10. 's' → logprob: -15.87710189819336

Token 246: ' _:' (ID: 133568)
  Prédit: '_:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_:' → logprob: -0.015064319595694542
    2. '_' → logprob: -4.515064239501953
    3. '(_:' → logprob: -5.890064239501953
    4. ' _:' → logprob: -7.140064239501953
    5. '_=' → logprob: -9.265064239501953
    6. 's' → logprob: -9.390064239501953
    7. '(lambda' → logprob: -9.640064239501953
    8. ':' → logprob: -9.890064239501953
    9. 'lambda' → logprob: -9.890064239501953
    10. '(_' → logprob: -11.390064239501953

Token 247: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0059622181579470634
    2. ' self' → logprob: -5.130962371826172
    3. '   ' → logprob: -11.130962371826172
    4. 's' → logprob: -11.880962371826172
    5. '       ' → logprob: -12.630962371826172
    6. ' ' → logprob: -12.880962371826172
    7. '(self' → logprob: -13.755962371826172
    8. '	self' → logprob: -13.755962371826172
    9. '    ' → logprob: -13.880962371826172
    10. '           ' → logprob: -13.880962371826172

Token 248: '.S' (ID: 1242)
  Prédit: '.S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.S' → logprob: -0.0021974791307002306
    2. '.' → logprob: -6.127197265625
    3. ' .' → logprob: -12.127197265625
    4. '().' → logprob: -13.502197265625
    5. '.I' → logprob: -14.127197265625
    6. '   ' → logprob: -14.377197265625
    7. '.IS' → logprob: -14.377197265625
    8. '.input' → logprob: -14.502197265625
    9. '.INPUT' → logprob: -14.752197265625
    10. '.IP' → logprob: -15.002197265625

Token 249: 'L' (ID: 43)
  Prédit: '()),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()),' → logprob: -0.2197207361459732
    2. 'L' → logprob: -2.3447208404541016
    3. '(),' → logprob: -3.0947208404541016
    4. '()' → logprob: -3.0947208404541016
    5. '()))' → logprob: -5.219720840454102
    6. 'LS' → logprob: -5.844720840454102
    7. '(' → logprob: -6.969720840454102
    8. 'IL' → logprob: -7.594720840454102
    9. '())' → logprob: -8.094720840454102
    10. '()},' → logprob: -8.844720840454102

Token 250: '(),' (ID: 2547)
  Prédit: '(),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.0008089098846539855
    2. ',' → logprob: -7.2508087158203125
    3. '()' → logprob: -9.250808715820312
    4. '(' → logprob: -13.875808715820312
    5. '(),
' → logprob: -14.375808715820312
    6. '()),' → logprob: -14.375808715820312
    7. ' ,' → logprob: -15.125808715820312
    8. ' (),' → logprob: -15.375808715820312
    9. '),' → logprob: -16.250808715820312
    10. '())' → logprob: -16.375808715820312

Token 251: ' repeat' (ID: 22962)
  Prédit: 'repeat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repeat' → logprob: -0.018153805285692215
    2. ' repeat' → logprob: -4.018153667449951
    3. '       ' → logprob: -13.76815414428711
    4. '_repeat' → logprob: -14.26815414428711
    5. '.repeat' → logprob: -14.51815414428711
    6. ' ' → logprob: -14.76815414428711
    7. '   ' → logprob: -14.89315414428711
    8. 'n' → logprob: -15.26815414428711
    9. '    ' → logprob: -15.89315414428711
    10. '        ' → logprob: -16.14315414428711

Token 252: '(None' (ID: 65126)
  Prédit: '(None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(None' → logprob: -1.6047699318733066e-05
    2. 'None' → logprob: -11.125016212463379
    3. '(' → logprob: -14.125016212463379
    4. ',None' → logprob: -14.750016212463379
    5. '_None' → logprob: -17.000015258789062
    6. '=None' → logprob: -17.125015258789062
    7. '.None' → logprob: -18.250015258789062
    8. '```' → logprob: -18.750015258789062
    9. ' None' → logprob: -19.000015258789062
    10. '(nil' → logprob: -19.000015258789062

Token 253: ')),' (ID: 12098)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.1603797972202301
    2. ')),' → logprob: -1.9103797674179077
    3. '()),' → logprob: -9.660379409790039
    4. ' ),' → logprob: -10.660379409790039
    5. ',' → logprob: -10.910379409790039
    6. ')' → logprob: -11.410379409790039
    7. '       ' → logprob: -11.660379409790039
    8. '))),' → logprob: -12.035379409790039
    9. '   ' → logprob: -12.160379409790039
    10. ' ' → logprob: -12.535379409790039

Token 254: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08894633501768112
    2. ' n' → logprob: -2.4639463424682617
    3. '	n' → logprob: -12.963946342468262
    4. 'None' → logprob: -13.088946342468262
    5. '(n' → logprob: -14.463946342468262
    6. ' None' → logprob: -15.338946342468262
    7. ')n' → logprob: -15.338946342468262
    8. ' ' → logprob: -15.463946342468262
    9. '   ' → logprob: -15.588946342468262
    10. '_n' → logprob: -15.713946342468262

Token 255: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0003831252979580313
    2. ')))' → logprob: -8.250383377075195
    3. ')' → logprob: -9.625383377075195
    4. '),' → logprob: -10.125383377075195
    5. '()))' → logprob: -12.000383377075195
    6. ' ))' → logprob: -12.875383377075195
    7. '   ' → logprob: -13.250383377075195
    8. ')),' → logprob: -13.750383377075195
    9. '));' → logprob: -13.875383377075195
    10. '))
' → logprob: -13.875383377075195

Token 256: 'class' (ID: 1444)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.40471673011779785
    2. '<|end|>' → logprob: -1.6547167301177979
    3. '#' → logprob: -2.779716730117798
    4. '   ' → logprob: -3.279716730117798
    5. 'def' → logprob: -4.779716491699219
    6. ':' → logprob: -4.779716491699219
    7. '```' → logprob: -5.279716491699219
    8. '
' → logprob: -5.529716491699219
    9. ' ' → logprob: -5.904716491699219
    10. '(' → logprob: -6.029716491699219

Token 257: ' Idea' (ID: 74190)
  Prédit: ' IP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' IP' → logprob: -0.6630804538726807
    2. ' Solution' → logprob: -1.1630804538726807
    3. ' Solver' → logprob: -2.4130804538726807
    4. 'Solution' → logprob: -3.4130804538726807
    5. ' Union' → logprob: -4.788080215454102
    6. ' Main' → logprob: -4.788080215454102
    7. 'IP' → logprob: -5.538080215454102
    8. ' My' → logprob: -5.538080215454102
    9. 'Solver' → logprob: -5.663080215454102
    10. ' ' → logprob: -5.913080215454102

Token 258: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00441587483510375
    2. '():' → logprob: -5.504415988922119
    3. ':
' → logprob: -8.879415512084961
    4. '(' → logprob: -10.254415512084961
    5. '>:' → logprob: -10.629415512084961
    6. '):' → logprob: -10.754415512084961
    7. '_:' → logprob: -11.004415512084961
    8. '<|end|>' → logprob: -11.129415512084961
    9. ' :' → logprob: -11.629415512084961
    10. 'A' → logprob: -11.629415512084961

Token 259: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4584675431251526
    2. '<|end|>' → logprob: -1.0834674835205078
    3. '    ' → logprob: -4.583467483520508
    4. ' def' → logprob: -4.958467483520508
    5. '    
' → logprob: -5.708467483520508
    6. ' ' → logprob: -5.833467483520508
    7. '<|end|>' → logprob: -6.458467483520508
    8. 'class' → logprob: -6.583467483520508
    9. 'def' → logprob: -6.958467483520508
    10. ' 
' → logprob: -8.333467483520508

Token 260: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.04480859637260437
    2. 'def' (adapté à ' def') → logprob: -3.1698086261749268
    3. '   ' → logprob: -6.544808387756348
    4. 'class' → logprob: -8.669808387756348
    5. '    ' → logprob: -9.294808387756348
    6. ' pass' → logprob: -9.794808387756348
    7. ' ' → logprob: -11.044808387756348
    8. ' class' → logprob: -11.294808387756348
    9. '	def' → logprob: -11.794808387756348
    10. ' de' → logprob: -12.669808387756348

Token 261: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.000546122610103339
    2. ' init' → logprob: -7.875545978546143
    3. '__' → logprob: -9.7505464553833
    4. ' _' → logprob: -9.7505464553833
    5. ' def' → logprob: -10.8755464553833
    6. '_' → logprob: -11.6255464553833
    7. ' ' → logprob: -11.8755464553833
    8. ' ___' → logprob: -12.2505464553833
    9. 'init' → logprob: -12.2505464553833
    10. '_init' → logprob: -12.6255464553833

Token 262: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -7.896309739408025e-07
    2. ' init' → logprob: -14.875000953674316
    3. 'int' → logprob: -16.0
    4. 'ini' → logprob: -16.0
    5. 'new' → logprob: -16.5
    6. 'i' → logprob: -17.0
    7. 'call' → logprob: -18.125
    8. 'def' → logprob: -18.125
    9. 'in' → logprob: -18.25
    10. '   ' → logprob: -18.375

Token 263: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0002819544170051813
    2. '(self' → logprob: -8.500282287597656
    3. '__' → logprob: -10.125282287597656
    4. '__(
' → logprob: -10.375282287597656
    5. '(' → logprob: -13.125282287597656
    6. '_(' → logprob: -13.375282287597656
    7. '__((' → logprob: -13.625282287597656
    8. '__(*' → logprob: -14.125282287597656
    9. '__("' → logprob: -14.875282287597656
    10. '__('' → logprob: -15.125282287597656

Token 264: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.05499910004437e-05
    2. ' self' → logprob: -9.875090599060059
    3. ')' → logprob: -10.500090599060059
    4. '):
' → logprob: -12.500090599060059
    5. '
' → logprob: -12.875090599060059
    6. '   ' → logprob: -13.000090599060059
    7. '(self' → logprob: -14.000090599060059
    8. '       ' → logprob: -14.500090599060059
    9. 's' → logprob: -14.625090599060059
    10. ' ' → logprob: -15.500090599060059

Token 265: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2184598296880722
    2. '):' → logprob: -1.7184598445892334
    3. 'self' → logprob: -4.718459606170654
    4. '):
' → logprob: -5.468459606170654
    5. '(self' → logprob: -6.218459606170654
    6. '   ' → logprob: -7.843459606170654
    7. ')' → logprob: -7.968459606170654
    8. ',self' → logprob: -8.093460083007812
    9. ' ,' → logprob: -8.218460083007812
    10. ' self' → logprob: -9.093460083007812

Token 266: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.35138556361198425
    2. '       ' → logprob: -1.2263855934143066
    3. '   ' → logprob: -6.226385593414307
    4. ' self' → logprob: -7.601385593414307
    5. '0' → logprob: -8.351385116577148
    6. ')' → logprob: -9.726385116577148
    7. '<|end|>' → logprob: -9.726385116577148
    8. '
' → logprob: -10.226385116577148
    9. '):
' → logprob: -11.851385116577148
    10. '(self' → logprob: -11.851385116577148

Token 267: ' pass' (ID: 1853)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01373559981584549
    2. 'pass' (adapté à ' pass') → logprob: -4.388735771179199
    3. '       ' → logprob: -7.388735771179199
    4. ' self' → logprob: -8.1387357711792
    5. '   ' → logprob: -8.5137357711792
    6. 'def' → logprob: -10.0137357711792
    7. ' pass' → logprob: -10.2637357711792
    8. 'ip' → logprob: -10.5137357711792
    9. '    ' → logprob: -13.6387357711792
    10. 'import' → logprob: -13.8887357711792

Token 268: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09561334550380707
    2. '<|end|>' → logprob: -2.5956132411956787
    3. '
' → logprob: -5.470613479614258
    4. '    
' → logprob: -5.845613479614258
    5. ':' → logprob: -5.970613479614258
    6. '    ' → logprob: -6.095613479614258
    7. 'def' → logprob: -6.345613479614258
    8. '\' → logprob: -7.470613479614258
    9. ' def' → logprob: -7.845613479614258
    10. '\n' → logprob: -8.095613479614258

Token 269: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04139420762658119
    2. '<|end|>' → logprob: -3.2913942337036133
    3. 'def' → logprob: -6.666394233703613
    4. '    ' → logprob: -7.541394233703613
    5. '    
' → logprob: -7.916394233703613
    6. '#' → logprob: -8.166394233703613
    7. '
' → logprob: -8.166394233703613
    8. ')' → logprob: -8.791394233703613
    9. '<|end|>' → logprob: -9.166394233703613
    10. '       ' → logprob: -9.166394233703613

Token 270: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.001263567479327321
    2. ' def' → logprob: -7.001263618469238
    3. '   ' → logprob: -8.126263618469238
    4. '#' → logprob: -11.251263618469238
    5. 'pass' → logprob: -11.501263618469238
    6. '    ' → logprob: -11.751263618469238
    7. '@' → logprob: -11.876263618469238
    8. 'class' → logprob: -12.001263618469238
    9. '...' → logprob: -12.501263618469238
    10. '<|end|>' → logprob: -12.626263618469238

Token 271: ' HF' (ID: 87046)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.28737369179725647
    2. ' main' → logprob: -1.912373661994934
    3. 'solve' → logprob: -2.7873737812042236
    4. ' process' → logprob: -3.7873737812042236
    5. ' solution' → logprob: -5.0373735427856445
    6. ' run' → logprob: -5.1623735427856445
    7. 'process' → logprob: -6.5373735427856445
    8. 'main' → logprob: -7.0373735427856445
    9. ' calculate' → logprob: -7.6623735427856445
    10. 'run' → logprob: -8.287373542785645

Token 272: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.030159108340740204
    2. '():' → logprob: -4.405158996582031
    3. '(' → logprob: -5.155158996582031
    4. '_' → logprob: -5.655158996582031
    5. 'C' → logprob: -6.155158996582031
    6. 'S' → logprob: -6.780158996582031
    7. 'P' → logprob: -7.280158996582031
    8. 'F' → logprob: -7.405158996582031
    9. 'L' → logprob: -7.780158996582031
    10. 'E' → logprob: -7.905158996582031

Token 273: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2929740846157074
    2. ')(' → logprob: -1.7929741144180298
    3. '(self' → logprob: -3.2929739952087402
    4. 'self' → logprob: -4.29297399520874
    5. ')' → logprob: -4.54297399520874
    6. ' ):' → logprob: -4.66797399520874
    7. '(' → logprob: -5.41797399520874
    8. ',' → logprob: -5.66797399520874
    9. '_' → logprob: -6.16797399520874
    10. '):
' → logprob: -6.41797399520874

Token 274: ' p' (ID: 275)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.601518154144287
    2. 'x' → logprob: -1.851518154144287
    3. 'n' → logprob: -1.976518154144287
    4. 'self' → logprob: -1.976518154144287
    5. ' self' → logprob: -2.601518154144287
    6. ' x' → logprob: -2.726518154144287
    7. ' n' → logprob: -2.851518154144287
    8. ' a' → logprob: -3.226518154144287
    9. 'arr' → logprob: -3.601518154144287
    10. 's' → logprob: -3.851518154144287

Token 275: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.053149644285440445
    2. 'aram' → logprob: -4.303149700164795
    3. 'ar' → logprob: -4.553149700164795
    4. 'r' → logprob: -4.553149700164795
    5. ',' → logprob: -5.053149700164795
    6. ')' → logprob: -5.928149700164795
    7. '):
' → logprob: -5.928149700164795
    8. 'ro' → logprob: -6.053149700164795
    9. ' ):' → logprob: -6.928149700164795
    10. ':' → logprob: -7.303149700164795

Token 276: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07453698664903641
    2. ':' → logprob: -2.6995370388031006
    3. '(' → logprob: -6.4495368003845215
    4. '.' → logprob: -8.07453727722168
    5. '#' → logprob: -8.19953727722168
    6. ' :' → logprob: -8.32453727722168
    7. ' pass' → logprob: -8.32453727722168
    8. ')' → logprob: -8.44953727722168
    9. '<|end|>' → logprob: -8.44953727722168
    10. '):' → logprob: -8.82453727722168

Token 277: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1520242989063263
    2. ' return' → logprob: -2.402024269104004
    3. 'pass' → logprob: -4.277024269104004
    4. 'result' → logprob: -4.777024269104004
    5. '       ' → logprob: -5.277024269104004
    6. ' pass' → logprob: -5.527024269104004
    7. 'res' → logprob: -5.527024269104004
    8. 'p' → logprob: -6.027024269104004
    9. 'r' → logprob: -6.402024269104004
    10. 's' → logprob: -6.402024269104004

Token 278: ' sorted' (ID: 20099)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.1048252582550049
    2. 'mul' → logprob: -1.4798252582550049
    3. ' p' → logprob: -1.6048252582550049
    4. ' or' → logprob: -3.229825258255005
    5. 'pow' → logprob: -3.229825258255005
    6. ' mul' → logprob: -3.229825258255005
    7. 'reduce' → logprob: -3.729825258255005
    8. 'or' → logprob: -4.104825019836426
    9. '(p' → logprob: -4.604825019836426
    10. '[' → logprob: -4.729825019836426

Token 279: '(set' (ID: 25904)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.003474509110674262
    2. '(' → logprob: -5.878474712371826
    3. '(per' → logprob: -7.878474712371826
    4. '(chain' → logprob: -8.378474235534668
    5. '(list' → logprob: -10.753474235534668
    6. '(range' → logprob: -10.878474235534668
    7. '((' → logprob: -11.503474235534668
    8. '(lambda' → logprob: -13.253474235534668
    9. '(count' → logprob: -13.753474235534668
    10. '(
' → logprob: -13.878474235534668

Token 280: '(map' (ID: 16946)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0370679572224617
    2. '(chain' → logprob: -3.4120678901672363
    3. '(' → logprob: -5.787067890167236
    4. 'p' → logprob: -9.287068367004395
    5. 'chain' → logprob: -9.662068367004395
    6. ')' → logprob: -10.037068367004395
    7. '(
' → logprob: -10.662068367004395
    8. '(range' → logprob: -10.787068367004395
    9. '(map' → logprob: -11.162068367004395
    10. '((' → logprob: -11.412068367004395

Token 281: '(lambda' (ID: 43341)
  Prédit: '(item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(item' → logprob: -0.32150834798812866
    2. '(p' → logprob: -2.1965084075927734
    3. '(lambda' → logprob: -2.1965084075927734
    4. '(int' → logprob: -4.196508407592773
    5. '(tuple' → logprob: -5.196508407592773
    6. '(add' → logprob: -5.196508407592773
    7. '(chain' → logprob: -5.446508407592773
    8. '(' → logprob: -5.446508407592773
    9. '(per' → logprob: -5.446508407592773
    10. '(ord' → logprob: -5.821508407592773

Token 282: ' t' (ID: 260)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.4941463768482208
    2. 'x' → logprob: -0.9941463470458984
    3. ' or' → logprob: -5.619146347045898
    4. 'tuple' → logprob: -5.869146347045898
    5. ':' → logprob: -6.244146347045898
    6. ' tuple' → logprob: -6.744146347045898
    7. 'e' → logprob: -6.869146347045898
    8. ' p' → logprob: -6.869146347045898
    9. 't' → logprob: -6.994146347045898
    10. 'p' → logprob: -7.494146347045898

Token 283: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006509594968520105
    2. ' :' → logprob: -7.500650882720947
    3. ':t' → logprob: -10.375651359558105
    4. ':p' → logprob: -10.750651359558105
    5. ':item' → logprob: -11.000651359558105
    6. ':
' → logprob: -12.000651359558105
    7. ':_' → logprob: -12.625651359558105
    8. ':list' → logprob: -12.875651359558105
    9. 't' → logprob: -13.125651359558105
    10. ':int' → logprob: -13.375651359558105

Token 284: ' add' (ID: 1147)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -1.5156556367874146
    2. ' tuple' → logprob: -1.8906556367874146
    3. ' p' → logprob: -2.140655517578125
    4. 'p' → logprob: -2.265655517578125
    5. 't' → logprob: -2.390655517578125
    6. 'mul' → logprob: -2.390655517578125
    7. 'tuple' → logprob: -2.515655517578125
    8. ' mul' → logprob: -3.890655517578125
    9. ' add' → logprob: -4.015655517578125
    10. ' or' → logprob: -4.015655517578125

Token 285: '(*' (ID: 9000)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.07384546101093292
    2. '(p' → logprob: -3.448845386505127
    3. '(*' → logprob: -3.573845386505127
    4. '(' → logprob: -4.698845386505127
    5. '(item' → logprob: -7.323845386505127
    6. '((' → logprob: -7.323845386505127
    7. 'or' → logprob: -8.448845863342285
    8. '(
' → logprob: -8.823845863342285
    9. '(or' → logprob: -9.198845863342285
    10. '   ' → logprob: -9.448845863342285

Token 286: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0010586526477709413
    2. ' t' → logprob: -7.126058578491211
    3. '(t' → logprob: -9.126058578491211
    4. 'tuple' → logprob: -9.501058578491211
    5. 'item' → logprob: -10.001058578491211
    6. '(' → logprob: -12.376058578491211
    7. 'p' → logprob: -12.501058578491211
    8. ')' → logprob: -13.001058578491211
    9. 'reverse' → logprob: -13.001058578491211
    10. '   ' → logprob: -13.001058578491211

Token 287: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.4008030593395233
    2. ',' → logprob: -1.6508030891418457
    3. '(p' → logprob: -2.2758030891418457
    4. '(t' → logprob: -3.7758030891418457
    5. ',p' → logprob: -5.525803089141846
    6. ')' → logprob: -5.775803089141846
    7. ',t' → logprob: -6.775803089141846
    8. '   ' → logprob: -7.150803089141846
    9. ' ,' → logprob: -7.650803089141846
    10. '(' → logprob: -7.775803089141846

Token 288: ' ((' (ID: 3536)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.43186095356941223
    2. ' permutations' → logprob: -1.0568609237670898
    3. ' chain' → logprob: -7.43186092376709
    4. ' zip' → logprob: -7.93186092376709
    5. '	per' → logprob: -7.93186092376709
    6. '   ' → logprob: -8.18186092376709
    7. 'chain' → logprob: -8.43186092376709
    8. ' per' → logprob: -8.55686092376709
    9. ' ' → logprob: -8.55686092376709
    10. ' p' → logprob: -8.68186092376709

Token 289: 'p' (ID: 79)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0589616298675537
    2. 'x' → logprob: -1.0589616298675537
    3. 'a' → logprob: -1.9339616298675537
    4. 'p' → logprob: -2.1839616298675537
    5. '(i' → logprob: -4.683961868286133
    6. 'per' → logprob: -5.058961868286133
    7. 'pair' → logprob: -5.183961868286133
    8. 'item' → logprob: -5.558961868286133
    9. 'chain' → logprob: -5.683961868286133
    10. 'div' → logprob: -6.183961868286133

Token 290: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2172788828611374
    2. '[' → logprob: -1.7172788381576538
    3. ',' → logprob: -4.592278957366943
    4. ',i' → logprob: -6.717278957366943
    5. '[x' → logprob: -7.217278957366943
    6. '[a' → logprob: -7.467278957366943
    7. '[k' → logprob: -7.717278957366943
    8. '[j' → logprob: -8.592278480529785
    9. '[:' → logprob: -8.592278480529785
    10. '[:-' → logprob: -8.592278480529785

Token 291: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0020385603420436382
    2. '+' → logprob: -8.002038955688477
    3. ',i' → logprob: -8.252038955688477
    4. ',' → logprob: -8.252038955688477
    5. ']' → logprob: -8.377038955688477
    6. '[i' → logprob: -8.502038955688477
    7. '],[' → logprob: -8.502038955688477
    8. '][' → logprob: -9.127038955688477
    9. '],
' → logprob: -9.627038955688477
    10. '   ' → logprob: -9.752038955688477

Token 292: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5901016592979431
    2. 'i' → logprob: -1.715101718902588
    3. ' p' → logprob: -2.215101718902588
    4. 'len' → logprob: -3.090101718902588
    5. ' i' → logprob: -3.590101718902588
    6. ' len' → logprob: -4.090101718902588
    7. '-' → logprob: -4.340101718902588
    8. ' -' → logprob: -4.340101718902588
    9. 'j' → logprob: -4.840101718902588
    10. '-i' → logprob: -4.840101718902588

Token 293: '[j' (ID: 7895)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.13362479209899902
    2. '[j' → logprob: -2.258624792098999
    3. '+' → logprob: -4.133625030517578
    4. '[' → logprob: -6.758625030517578
    5. 'i' → logprob: -7.133625030517578
    6. '+i' → logprob: -7.508625030517578
    7. '+j' → logprob: -7.633625030517578
    8. '-' → logprob: -8.133625030517578
    9. '1' → logprob: -8.383625030517578
    10. 'j' → logprob: -8.633625030517578

Token 294: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.08919092267751694
    2. ')' → logprob: -2.46419095993042
    3. '))' → logprob: -9.464190483093262
    4. '})' → logprob: -9.589190483093262
    5. ']' → logprob: -10.589190483093262
    6. ')]' → logprob: -10.839190483093262
    7. '   ' → logprob: -11.464190483093262
    8. ' )' → logprob: -11.714190483093262
    9. ' ])' → logprob: -11.839190483093262
    10. '       ' → logprob: -12.339190483093262

Token 295: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06999335438013077
    2. 'for' → logprob: -3.069993257522583
    3. ')' → logprob: -3.944993257522583
    4. '       ' → logprob: -7.694993495941162
    5. '           ' → logprob: -7.944993495941162
    6. ' ' → logprob: -8.444993019104004
    7. '        ' → logprob: -8.944993019104004
    8. '   ' → logprob: -9.069993019104004
    9. '               ' → logprob: -9.069993019104004
    10. '	for' → logprob: -9.319993019104004

Token 296: ' i' (ID: 575)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.4531313478946686
    2. 'j' → logprob: -1.3281313180923462
    3. ' i' → logprob: -2.4531314373016357
    4. 'i' → logprob: -4.328131198883057
    5. ' ' → logprob: -9.453131675720215
    6. '	j' → logprob: -10.828131675720215
    7. '<|end|>' → logprob: -11.203131675720215
    8. '0' → logprob: -11.578131675720215
    9. ' (' → logprob: -11.703131675720215
    10. ' range' → logprob: -11.703131675720215

Token 297: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001995012629777193
    2. 'in' → logprob: -6.376995086669922
    3. '<|end|>' → logprob: -9.251995086669922
    4. ' ' → logprob: -9.876995086669922
    5. ' j' → logprob: -10.001995086669922
    6. ' i' → logprob: -10.501995086669922
    7. 'range' → logprob: -10.501995086669922
    8. ' range' → logprob: -11.251995086669922
    9. ',' → logprob: -11.501995086669922
    10. ',j' → logprob: -11.501995086669922

Token 298: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1440800428390503
    2. ' range' → logprob: -2.01908016204834
    3. 'chain' → logprob: -7.14408016204834
    4. 'count' → logprob: -7.76908016204834
    5. ' chain' → logprob: -8.89408016204834
    6. ' count' → logprob: -10.76908016204834
    7. ' xrange' → logprob: -11.64408016204834
    8. '	range' → logprob: -11.64408016204834
    9. '(range' → logprob: -12.14408016204834
    10. ' ' → logprob: -12.26908016204834

Token 299: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.00020830852736253291
    2. 'len' → logprob: -8.750207901000977
    3. '(' → logprob: -10.375207901000977
    4. '(i' → logprob: -11.625207901000977
    5. ' len' → logprob: -12.000207901000977
    6. '(j' → logprob: -14.000207901000977
    7. '	len' → logprob: -14.250207901000977
    8. '(
' → logprob: -14.750207901000977
    9. '   ' → logprob: -15.125207901000977
    10. '=len' → logprob: -15.375207901000977

Token 300: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0002266622323077172
    2. '(' → logprob: -9.000226974487305
    3. 'p' → logprob: -9.250226974487305
    4. ')' → logprob: -13.125226974487305
    5. ' p' → logprob: -13.625226974487305
    6. ')p' → logprob: -13.625226974487305
    7. '<p' → logprob: -14.375226974487305
    8. ' (' → logprob: -14.750226974487305
    9. '(
' → logprob: -14.875226974487305
    10. ' ' → logprob: -15.625226974487305

Token 301: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012458281125873327
    2. '))' → logprob: -6.876245975494385
    3. '   ' → logprob: -10.001245498657227
    4. ' ' → logprob: -10.251245498657227
    5. '       ' → logprob: -10.751245498657227
    6. ')))' → logprob: -10.751245498657227
    7. '),' → logprob: -11.126245498657227
    8. '())' → logprob: -11.126245498657227
    9. ')
' → logprob: -11.376245498657227
    10. ' )' → logprob: -11.501245498657227

Token 302: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07478600740432739
    2. 'for' → logprob: -2.8247859477996826
    3. '           ' → logprob: -4.574786186218262
    4. '               ' → logprob: -7.199786186218262
    5. '            ' → logprob: -7.949786186218262
    6. '	for' → logprob: -8.074786186218262
    7. '       ' → logprob: -8.449786186218262
    8. '   ' → logprob: -8.824786186218262
    9. '          ' → logprob: -9.199786186218262
    10. '                ' → logprob: -9.449786186218262

Token 303: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.06997400522232056
    2. ' j' → logprob: -2.694973945617676
    3. '   ' → logprob: -11.194973945617676
    4. '	j' → logprob: -11.194973945617676
    5. '    ' → logprob: -12.069973945617676
    6. ' ' → logprob: -13.319973945617676
    7. '  ' → logprob: -13.819973945617676
    8. '     ' → logprob: -14.569973945617676
    9. '       ' → logprob: -14.694973945617676
    10. '           ' → logprob: -15.694973945617676

Token 304: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07036896795034409
    2. 'in' → logprob: -2.695369005203247
    3. 'range' → logprob: -8.070368766784668
    4. '(range' → logprob: -9.695368766784668
    5. ' range' → logprob: -10.195368766784668
    6. '<|end|>' → logprob: -11.320368766784668
    7. ' i' → logprob: -12.695368766784668
    8. ' ' → logprob: -13.195368766784668
    9. ')' → logprob: -13.945368766784668
    10. 'i' → logprob: -14.070368766784668

Token 305: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3485366106033325
    2. ' range' → logprob: -1.2235366106033325
    3. '(range' → logprob: -9.473536491394043
    4. '	range' → logprob: -12.598536491394043
    5. 'i' → logprob: -12.723536491394043
    6. 'chain' → logprob: -13.098536491394043
    7. ' xrange' → logprob: -13.098536491394043
    8. ' i' → logprob: -13.473536491394043
    9. ' ' → logprob: -13.723536491394043
    10. ' chain' → logprob: -14.473536491394043

Token 306: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.3869260847568512
    2. '(len' → logprob: -1.1369260549545288
    3. '(' → logprob: -10.38692569732666
    4. 'len' → logprob: -10.76192569732666
    5. 'i' → logprob: -13.51192569732666
    6. '(range' → logprob: -14.51192569732666
    7. ' (' → logprob: -15.01192569732666
    8. '((' → logprob: -15.26192569732666
    9. 'range' → logprob: -16.011926651000977
    10. ' i' → logprob: -16.511926651000977

Token 307: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005058110225945711
    2. ' +' → logprob: -5.380058288574219
    3. ',' → logprob: -7.880058288574219
    4. '1' → logprob: -11.005058288574219
    5. ',len' → logprob: -11.130058288574219
    6. '+,' → logprob: -12.130058288574219
    7. ' ,' → logprob: -13.130058288574219
    8. '   ' → logprob: -13.255058288574219
    9. '           ' → logprob: -13.255058288574219
    10. '+j' → logprob: -13.505058288574219

Token 308: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0011715330183506012
    2. ' len' → logprob: -6.751171588897705
    3. '(len' → logprob: -14.001171112060547
    4. 'i' → logprob: -15.126171112060547
    5. '	len' → logprob: -15.751171112060547
    6. '<len' → logprob: -16.626171112060547
    7. ',len' → logprob: -17.751171112060547
    8. ' ' → logprob: -18.501171112060547
    9. '   ' → logprob: -18.876171112060547
    10. '[len' → logprob: -19.001171112060547

Token 309: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0002715873415581882
    2. 'p' → logprob: -8.250271797180176
    3. '(' → logprob: -11.750271797180176
    4. ' p' → logprob: -14.000271797180176
    5. ')p' → logprob: -15.000271797180176
    6. '<p' → logprob: -15.500271797180176
    7. '(
' → logprob: -15.500271797180176
    8. '))' → logprob: -15.875271797180176
    9. ')' → logprob: -16.00027084350586
    10. '   ' → logprob: -16.50027084350586

Token 310: '))))' (ID: 57459)
  Prédit: '))))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))))' → logprob: -0.4134000241756439
    2. '))' → logprob: -1.2884000539779663
    3. ')))),' → logprob: -3.4133999347686768
    4. ')' → logprob: -4.163400173187256
    5. ')))' → logprob: -4.913400173187256
    6. ')))))
' → logprob: -5.538400173187256
    7. '))),' → logprob: -6.663400173187256
    8. '()))' → logprob: -7.538400173187256
    9. ')+' → logprob: -8.163399696350098
    10. ' ))' → logprob: -8.788399696350098

Token 311: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.028066013008356094
    2. ')))' → logprob: -3.6530659198760986
    3. ')' → logprob: -6.528066158294678
    4. '),' → logprob: -9.02806568145752
    5. '       ' → logprob: -9.90306568145752
    6. '))
' → logprob: -10.02806568145752
    7. '))))' → logprob: -10.40306568145752
    8. '   ' → logprob: -10.90306568145752
    9. ')),' → logprob: -11.40306568145752
    10. ' ))' → logprob: -12.15306568145752

Token 312: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017167085316032171
    2. '<|end|>' → logprob: -7.376716613769531
    3. '   ' → logprob: -7.501716613769531
    4. ' )' → logprob: -8.501716613769531
    5. ',' → logprob: -8.751716613769531
    6. '       ' → logprob: -10.251716613769531
    7. ')
' → logprob: -10.376716613769531
    8. '))' → logprob: -10.876716613769531
    9. '  ' → logprob: -11.251716613769531
    10. ')}' → logprob: -11.501716613769531

Token 313: ' def' (ID: 1056)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004608961287885904
    2. '   ' → logprob: -5.629609107971191
    3. '<|end|>' → logprob: -7.504609107971191
    4. ' )' → logprob: -8.629609107971191
    5. '       ' → logprob: -9.504609107971191
    6. ')
' → logprob: -10.504609107971191
    7. '  ' → logprob: -10.504609107971191
    8. '    ' → logprob: -10.504609107971191
    9. '))' → logprob: -11.004609107971191
    10. ',' → logprob: -11.129609107971191

Token 314: ' B' (ID: 418)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6145433187484741
    2. '(' → logprob: -1.9895433187484741
    3. '):' → logprob: -2.7395434379577637
    4. ':' → logprob: -2.9895434379577637
    5. ' ' → logprob: -3.1145434379577637
    6. 'S' → logprob: -3.3645434379577637
    7. '<|end|>' → logprob: -3.7395434379577637
    8. 'p' → logprob: -4.239543437957764
    9. ' )' → logprob: -4.364543437957764
    10. '[' → logprob: -4.364543437957764

Token 315: 'fs' (ID: 6469)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.9030420184135437
    2. 'r' → logprob: -1.4030420780181885
    3. 'R' → logprob: -1.9030420780181885
    4. '(' → logprob: -3.9030420780181885
    5. '   ' → logprob: -3.9030420780181885
    6. 'range' → logprob: -4.153041839599609
    7. ')' → logprob: -4.653041839599609
    8. 'B' → logprob: -4.778041839599609
    9. 'FS' → logprob: -4.778041839599609
    10. '_' → logprob: -4.778041839599609

Token 316: '2' (ID: 17)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.029927633702754974
    2. '(' → logprob: -3.5299277305603027
    3. '(
' → logprob: -9.529927253723145
    4. ' (' → logprob: -10.279927253723145
    5. 'self' → logprob: -11.154927253723145
    6. '(s' → logprob: -11.404927253723145
    7. 'f' → logprob: -12.279927253723145
    8. ')' → logprob: -12.279927253723145
    9. '(p' → logprob: -12.279927253723145
    10. '   ' → logprob: -12.654927253723145

Token 317: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.02650173380970955
    2. '(' → logprob: -3.6515016555786133
    3. ' (' → logprob: -9.401501655578613
    4. 'self' → logprob: -10.401501655578613
    5. '(
' → logprob: -10.526501655578613
    6. '(s' → logprob: -10.526501655578613
    7. '(p' → logprob: -11.276501655578613
    8. ')(' → logprob: -12.651501655578613
    9. '(Self' → logprob: -12.776501655578613
    10. '   ' → logprob: -13.651501655578613

Token 318: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18993279337882996
    2. '):' → logprob: -2.1899328231811523
    3. '(' → logprob: -3.1899328231811523
    4. '(self' → logprob: -4.439932823181152
    5. 'self' → logprob: -6.064932823181152
    6. ')' → logprob: -6.814932823181152
    7. ' ,' → logprob: -7.189932823181152
    8. '   ' → logprob: -7.314932823181152
    9. ' (' → logprob: -7.314932823181152
    10. ':' → logprob: -7.439932823181152

Token 319: ' a' (ID: 261)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' graph' → logprob: -1.341032862663269
    2. ' s' → logprob: -1.966032862663269
    3. ' self' → logprob: -2.3410329818725586
    4. ' start' → logprob: -2.5910329818725586
    5. 's' → logprob: -2.5910329818725586
    6. ' p' → logprob: -2.8410329818725586
    7. 'graph' → logprob: -2.9660329818725586
    8. 'p' → logprob: -3.0910329818725586
    9. 'self' → logprob: -3.2160329818725586
    10. 'q' → logprob: -3.3410329818725586

Token 320: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47770050168037415
    2. '):' → logprob: -0.9777004718780518
    3. '):
' → logprob: -5.727700710296631
    4. ')' → logprob: -8.352700233459473
    5. ':' → logprob: -10.727700233459473
    6. ' ):' → logprob: -10.727700233459473
    7. ' ,' → logprob: -10.852700233459473
    8. '   ' → logprob: -11.602700233459473
    9. ',p' → logprob: -11.852700233459473
    10. '[]):' → logprob: -12.227700233459473

Token 321: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02833964303135872
    2. '       ' → logprob: -4.153339862823486
    3. '):' → logprob: -5.278339862823486
    4. ':
' → logprob: -5.653339862823486
    5. ',' → logprob: -6.153339862823486
    6. '):
' → logprob: -7.653339862823486
    7. '<|end|>' → logprob: -8.153339385986328
    8. ')' → logprob: -8.528339385986328
    9. '   ' → logprob: -8.903339385986328
    10. '():' → logprob: -9.153339385986328

Token 322: ' N' (ID: 478)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6197918057441711
    2. ':' → logprob: -1.4947917461395264
    3. '):' → logprob: -1.9947917461395264
    4. '):
' → logprob: -2.9947917461395264
    5. ':
' → logprob: -4.3697919845581055
    6. ')' → logprob: -5.1197919845581055
    7. ',' → logprob: -5.2447919845581055
    8. 'def' → logprob: -5.3697919845581055
    9. 'visited' → logprob: -5.3697919845581055
    10. '<|end|>' → logprob: -5.6197919845581055

Token 323: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22587361931800842
    2. '=' → logprob: -1.850873589515686
    3. ',' → logprob: -3.1008737087249756
    4. ' ,' → logprob: -11.225873947143555
    5. ')' → logprob: -11.600873947143555
    6. '  ' → logprob: -11.725873947143555
    7. '=len' → logprob: -11.975873947143555
    8. '=int' → logprob: -12.100873947143555
    9. '   ' → logprob: -12.350873947143555
    10. ',N' → logprob: -12.350873947143555

Token 324: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.023267723619937897
    2. ' len' → logprob: -3.7732677459716797
    3. 'a' → logprob: -10.77326774597168
    4. ' a' → logprob: -14.14826774597168
    5. '(len' → logprob: -15.27326774597168
    6. ' ' → logprob: -15.89826774597168
    7. '[len' → logprob: -17.02326774597168
    8. '0' → logprob: -17.02326774597168
    9. '   ' → logprob: -17.39826774597168
    10. '=len' → logprob: -17.64826774597168

Token 325: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.2664456789934775e-06
    2. 'a' → logprob: -14.125000953674316
    3. '(' → logprob: -14.500000953674316
    4. '(
' → logprob: -19.625001907348633
    5. '(A' → logprob: -20.125001907348633
    6. '```' → logprob: -20.750001907348633
    7. '(ai' → logprob: -21.375001907348633
    8. '(s' → logprob: -21.500001907348633
    9. '((' → logprob: -21.625001907348633
    10. ')a' → logprob: -21.625001907348633

Token 326: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20170627534389496
    2. ')
' → logprob: -1.7017062902450562
    3. '       ' → logprob: -8.451705932617188
    4. ')
' → logprob: -10.201705932617188
    5. ')

' → logprob: -12.076705932617188
    6. '   ' → logprob: -12.326705932617188
    7. ' )' → logprob: -12.701705932617188
    8. '),' → logprob: -12.951705932617188
    9. ')return' → logprob: -12.951705932617188
    10. ')+' → logprob: -13.201705932617188

Token 327: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.112180233001709
    2. '       ' → logprob: -1.112180233001709
    3. ')' → logprob: -1.237180233001709
    4. '<|end|>' → logprob: -3.612180233001709
    5. ')
' → logprob: -5.112180233001709
    6. ',' → logprob: -5.737180233001709
    7. '        
' → logprob: -5.737180233001709
    8. 'def' → logprob: -6.487180233001709
    9. '   ' → logprob: -6.612180233001709
    10. ':' → logprob: -6.737180233001709

Token 328: ' masks' (ID: 40028)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7226373553276062
    2. 'dist' → logprob: -1.347637414932251
    3. 'd' → logprob: -2.097637414932251
    4. ' d' → logprob: -3.472637414932251
    5. 'visited' → logprob: -3.847637414932251
    6. '
' → logprob: -4.222637176513672
    7. 'q' → logprob: -4.347637176513672
    8. ' dist' → logprob: -4.347637176513672
    9. 'dp' → logprob: -5.472637176513672
    10. ' visited' → logprob: -5.597637176513672

Token 329: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6998064517974854
    2. ' =' → logprob: -0.6998064517974854
    3. ',' → logprob: -5.074806213378906
    4. ')' → logprob: -8.824806213378906
    5. '   ' → logprob: -9.324806213378906
    6. ' ' → logprob: -10.574806213378906
    7. '=[]' → logprob: -10.574806213378906
    8. ']' → logprob: -10.949806213378906
    9. '<|end|>' → logprob: -11.449806213378906
    10. ' ,' → logprob: -11.449806213378906

Token 330: ' list' (ID: 1562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04546991363167763
    2. '(' → logprob: -4.295469760894775
    3. '[(' → logprob: -4.545469760894775
    4. ' [' → logprob: -5.170469760894775
    5. '[]' → logprob: -5.420469760894775
    6. '[a' → logprob: -5.795469760894775
    7. '{' → logprob: -5.920469760894775
    8. '1' → logprob: -6.545469760894775
    9. '0' → logprob: -6.920469760894775
    10. '[N' → logprob: -7.670469760894775

Token 331: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.06022198870778084
    2. '(acc' → logprob: -3.6852219104766846
    3. '(chain' → logprob: -3.8102219104766846
    4. '(re' → logprob: -5.935222148895264
    5. '(product' → logprob: -6.060222148895264
    6. '(map' → logprob: -6.185222148895264
    7. '(' → logprob: -6.310222148895264
    8. '(per' → logprob: -7.060222148895264
    9. '()' → logprob: -7.935222148895264
    10. '(count' → logprob: -7.935222148895264

Token 332: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38702309131622314
    2. '(N' → logprob: -1.1370230913162231
    3. '1' → logprob: -9.012022972106934
    4. '((' → logprob: -11.512022972106934
    5. 'N' → logprob: -11.637022972106934
    6. '(len' → logprob: -12.012022972106934
    7. '(n' → logprob: -12.887022972106934
    8. '(M' → logprob: -14.762022972106934
    9. ' ' → logprob: -14.887022972106934
    10. '(
' → logprob: -15.387022972106934

Token 333: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6357848048210144
    2. 'N' → logprob: -0.7607848048210144
    3. '2' → logprob: -6.63578462600708
    4. '(' → logprob: -7.13578462600708
    5. '0' → logprob: -7.13578462600708
    6. '(N' → logprob: -9.010785102844238
    7. '32' → logprob: -10.010785102844238
    8. '16' → logprob: -11.135785102844238
    9. ' ' → logprob: -11.385785102844238
    10. ' N' → logprob: -11.385785102844238

Token 334: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.06542057543992996
    2. ' <<' → logprob: -2.940420627593994
    3. ',' → logprob: -4.565420627593994
    4. ' ,' → logprob: -10.315420150756836
    5. '<<(' → logprob: -10.940420150756836
    6. '1' → logprob: -11.315420150756836
    7. ')' → logprob: -12.565420150756836
    8. ',N' → logprob: -13.440420150756836
    9. '>>' → logprob: -13.440420150756836
    10. '(' → logprob: -13.565420150756836

Token 335: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -2.7729658540920354e-05
    2. '(N' → logprob: -11.625027656555176
    3. ' N' → logprob: -11.750027656555176
    4. '   ' → logprob: -12.625027656555176
    5. '(' → logprob: -12.750027656555176
    6. '	N' → logprob: -13.750027656555176
    7. 'len' → logprob: -14.500027656555176
    8. '20' → logprob: -14.625027656555176
    9. ' ' → logprob: -15.000027656555176
    10. '10' → logprob: -15.375027656555176

Token 336: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00025311444187536836
    2. ' ))' → logprob: -9.000252723693848
    3. '))
' → logprob: -9.750252723693848
    4. ')' → logprob: -9.875252723693848
    5. ',' → logprob: -12.125252723693848
    6. ')))' → logprob: -12.250252723693848
    7. '()))' → logprob: -13.125252723693848
    8. '));' → logprob: -13.625252723693848
    9. ')),' → logprob: -13.625252723693848
    10. '))

' → logprob: -13.625252723693848

Token 337: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015085223130881786
    2. ')
' → logprob: -4.515085220336914
    3. '       ' → logprob: -6.140085220336914
    4. '
' → logprob: -7.140085220336914
    5. ',' → logprob: -7.640085220336914
    6. '<|end|>' → logprob: -8.265085220336914
    7. ' )' → logprob: -9.015085220336914
    8. '[' → logprob: -9.640085220336914
    9. ',
' → logprob: -10.265085220336914
    10. '   ' → logprob: -10.765085220336914

Token 338: ' def' (ID: 1056)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3610360622406006
    2. ')' → logprob: -1.6110360622406006
    3. 'visited' → logprob: -1.8610360622406006
    4. ')
' → logprob: -2.1110360622406006
    5. 'dist' → logprob: -2.4860360622406006
    6. ',' → logprob: -2.4860360622406006
    7. 'dp' → logprob: -3.8610360622406006
    8. 'distance' → logprob: -4.11103630065918
    9. ' distances' → logprob: -4.11103630065918
    10. ' visited' → logprob: -4.48603630065918

Token 339: ' subsets' (ID: 165377)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.7980378270149231
    2. ' bfs' → logprob: -0.9230378270149231
    3. ' dp' → logprob: -2.5480377674102783
    4. 'dfs' → logprob: -3.9230377674102783
    5. 'B' → logprob: -4.798038005828857
    6. ' helper' → logprob: -4.798038005828857
    7. 'dp' → logprob: -5.048038005828857
    8. ' B' → logprob: -5.548038005828857
    9. ' ' → logprob: -5.923038005828857
    10. ' queue' → logprob: -5.923038005828857

Token 340: '(mask' (ID: 80748)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.6940656304359436
    2. '(k' → logprob: -1.8190655708312988
    3. '(' → logprob: -2.194065570831299
    4. '(mask' → logprob: -2.444065570831299
    5. '():' → logprob: -3.069065570831299
    6. '(s' → logprob: -3.319065570831299
    7. '(n' → logprob: -4.069065570831299
    8. '(idx' → logprob: -4.444065570831299
    9. '(self' → logprob: -5.069065570831299
    10. '(N' → logprob: -5.319065570831299

Token 341: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.020861484110355377
    2. '):
' → logprob: -3.8958613872528076
    3. ',' → logprob: -8.270861625671387
    4. ':' → logprob: -10.645861625671387
    5. ')' → logprob: -11.145861625671387
    6. '):
' → logprob: -11.395861625671387
    7. ' ):' → logprob: -12.395861625671387
    8. '   ' → logprob: -12.645861625671387
    9. ')):' → logprob: -13.520861625671387
    10. '):

' → logprob: -13.645861625671387

Token 342: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014778360724449158
    2. '       ' → logprob: -4.514778137207031
    3. ' for' → logprob: -6.264778137207031
    4. ',' → logprob: -7.639778137207031
    5. '   ' → logprob: -7.639778137207031
    6. 'for' → logprob: -8.139778137207031
    7. 'yield' → logprob: -8.389778137207031
    8. '	       ' → logprob: -9.389778137207031
    9. ':' → logprob: -10.139778137207031
    10. '         ' → logprob: -10.764778137207031

Token 343: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.161239743232727
    2. '   ' → logprob: -1.536239743232727
    3. 'yield' → logprob: -2.7862396240234375
    4. '           ' → logprob: -2.9112396240234375
    5. 'subset' → logprob: -3.1612396240234375
    6. 's' → logprob: -3.1612396240234375
    7. ' for' → logprob: -3.4112396240234375
    8. ' s' → logprob: -3.4112396240234375
    9. 'for' → logprob: -3.5362396240234375
    10. ' subset' → logprob: -3.5362396240234375

Token 344: ' [' (ID: 723)
  Prédit: '[m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.9558191299438477
    2. '[i' → logprob: -1.0808191299438477
    3. '[' → logprob: -1.7058191299438477
    4. '(mask' → logprob: -3.3308191299438477
    5. '[(' → logprob: -4.705819129943848
    6. '(i' → logprob: -4.705819129943848
    7. '(m' → logprob: -5.080819129943848
    8. '[count' → logprob: -5.205819129943848
    9. '(chain' → logprob: -5.330819129943848
    10. '[x' → logprob: -5.955819129943848

Token 345: 'a' (ID: 64)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7103557586669922
    2. 'x' → logprob: -1.5853557586669922
    3. 'sub' → logprob: -2.085355758666992
    4. 'mask' → logprob: -3.085355758666992
    5. 'm' → logprob: -3.210355758666992
    6. 'subset' → logprob: -3.335355758666992
    7. 's' → logprob: -3.835355758666992
    8. 'j' → logprob: -4.335355758666992
    9. 'k' → logprob: -4.585355758666992
    10. '(i' → logprob: -5.960355758666992

Token 346: '[j' (ID: 7895)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.08004597574472427
    2. '[k' → logprob: -2.5800459384918213
    3. '[j' → logprob: -7.2050461769104
    4. '[s' → logprob: -9.455045700073242
    5. '[m' → logprob: -9.705045700073242
    6. '[x' → logprob: -9.830045700073242
    7. 'k' → logprob: -9.955045700073242
    8. '[idx' → logprob: -9.955045700073242
    9. '[' → logprob: -10.080045700073242
    10. '[q' → logprob: -11.330045700073242

Token 347: ']' (ID: 60)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12741497159004211
    2. ' for' → logprob: -2.1274149417877197
    3. ']' → logprob: -7.877415180206299
    4. ' ' → logprob: -10.12741470336914
    5. '>>' → logprob: -10.62741470336914
    6. '&' → logprob: -11.50241470336914
    7. '	for' → logprob: -11.87741470336914
    8. '
' → logprob: -12.25241470336914
    9. '   ' → logprob: -12.37741470336914
    10. ')' → logprob: -12.50241470336914

Token 348: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07890212535858154
    2. ' for' → logprob: -2.578902244567871
    3. '	for' → logprob: -12.203902244567871
    4. ' ' → logprob: -12.328902244567871
    5. '   ' → logprob: -13.703902244567871
    6. '
' → logprob: -14.953902244567871
    7. '>>' → logprob: -15.453902244567871
    8. '           ' → logprob: -15.703902244567871
    9. '  ' → logprob: -15.703902244567871
    10. '    ' → logprob: -15.828902244567871

Token 349: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.06197149679064751
    2. ' j' → logprob: -2.811971426010132
    3. ' ' → logprob: -13.436971664428711
    4. 'mask' → logprob: -14.186971664428711
    5. ',j' → logprob: -15.186971664428711
    6. '0' → logprob: -15.311971664428711
    7. '	j' → logprob: -15.311971664428711
    8. ' mask' → logprob: -16.18697166442871
    9. 'i' → logprob: -16.31197166442871
    10. 'range' → logprob: -16.43697166442871

Token 350: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.07116629183292389
    2. ' in' → logprob: -2.6961662769317627
    3. 'n' → logprob: -7.321166515350342
    4. ' ' → logprob: -7.946166515350342
    5. 'j' → logprob: -9.571166038513184
    6. ' j' → logprob: -9.946166038513184
    7. '	in' → logprob: -11.196166038513184
    8. '   ' → logprob: -11.696166038513184
    9. '    ' → logprob: -12.071166038513184
    10. ')' → logprob: -12.071166038513184

Token 351: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005156210972927511
    2. ' range' → logprob: -7.750515460968018
    3. '[' → logprob: -9.625515937805176
    4. 'chain' → logprob: -11.750515937805176
    5. 'filter' → logprob: -12.375515937805176
    6. 'mask' → logprob: -13.125515937805176
    7. '(range' → logprob: -13.500515937805176
    8. 'bin' → logprob: -13.625515937805176
    9. 'count' → logprob: -15.000515937805176
    10. ']' → logprob: -15.000515937805176

Token 352: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0047126649878919125
    2. 'N' → logprob: -5.8797125816345215
    3. '(len' → logprob: -7.0047125816345215
    4. 'len' → logprob: -7.6297125816345215
    5. '(' → logprob: -7.7547125816345215
    6. '   ' → logprob: -10.25471305847168
    7. '(mask' → logprob: -11.62971305847168
    8. ' N' → logprob: -12.00471305847168
    9. '(
' → logprob: -12.12971305847168
    10. ')' → logprob: -12.37971305847168

Token 353: ')' (ID: 8)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3414963483810425
    2. 'if' → logprob: -1.5914963483810425
    3. ')' → logprob: -2.466496467590332
    4. ' ' → logprob: -7.716496467590332
    5. '   ' → logprob: -9.091496467590332
    6. ' )' → logprob: -9.716496467590332
    7. '	if' → logprob: -10.216496467590332
    8. '    ' → logprob: -10.591496467590332
    9. '       ' → logprob: -10.716496467590332
    10. '           ' → logprob: -10.841496467590332

Token 354: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6350938081741333
    2. ' if' → logprob: -0.7600938081741333
    3. '           ' → logprob: -6.635093688964844
    4. '               ' → logprob: -8.010093688964844
    5. '   ' → logprob: -8.635093688964844
    6. '       ' → logprob: -8.760093688964844
    7. '          ' → logprob: -8.885093688964844
    8. '	if' → logprob: -9.635093688964844
    9. '              ' → logprob: -9.760093688964844
    10. ' ' → logprob: -10.260093688964844

Token 355: ' ((' (ID: 3536)
  Prédit: '(mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mask' → logprob: -0.5688950419425964
    2. 'mask' → logprob: -1.3188951015472412
    3. ' mask' → logprob: -2.318895101547241
    4. ' (' → logprob: -2.693895101547241
    5. ' ' → logprob: -9.06889533996582
    6. '(m' → logprob: -9.44389533996582
    7. '((' → logprob: -9.56889533996582
    8. '   ' → logprob: -9.81889533996582
    9. '	mask' → logprob: -10.56889533996582
    10. ' ((' → logprob: -10.81889533996582

Token 356: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.009228495880961418
    2. ' mask' → logprob: -5.009228706359863
    3. '(mask' → logprob: -6.009228706359863
    4. '1' → logprob: -10.634228706359863
    5. ' (' → logprob: -11.634228706359863
    6. 'm' → logprob: -11.759228706359863
    7. '	mask' → logprob: -12.634228706359863
    8. '(' → logprob: -13.509228706359863
    9. 'a' → logprob: -13.634228706359863
    10. ')' → logprob: -13.634228706359863

Token 357: ' >>' (ID: 6832)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.03812938928604126
    2. '&' → logprob: -3.4131293296813965
    3. ' &' → logprob: -5.7881293296813965
    4. ' >>' → logprob: -7.5381293296813965
    5. ')' → logprob: -7.6631293296813965
    6. ')&' → logprob: -8.538129806518555
    7. '&gt' → logprob: -10.038129806518555
    8. '>>&' → logprob: -10.163129806518555
    9. ')>>' → logprob: -10.288129806518555
    10. '&
' → logprob: -10.913129806518555

Token 358: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -5.2166411478538066e-05
    2. ' j' → logprob: -9.875052452087402
    3. '   ' → logprob: -14.875052452087402
    4. 'a' → logprob: -16.125051498413086
    5. ' ' → logprob: -16.625051498413086
    6. '	j' → logprob: -16.750051498413086
    7. '    ' → logprob: -17.500051498413086
    8. '```' → logprob: -18.000051498413086
    9. '_j' → logprob: -18.125051498413086
    10. '<|end|>' → logprob: -18.750051498413086

Token 359: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005494376178830862
    2. ')&' → logprob: -5.255494594573975
    3. ' )' → logprob: -8.255494117736816
    4. '&' → logprob: -15.130494117736816
    5. ')
' → logprob: -15.630494117736816
    6. '))' → logprob: -16.880495071411133
    7. ' ' → logprob: -17.380495071411133
    8. '   ' → logprob: -17.880495071411133
    9. '

' → logprob: -18.130495071411133
    10. '
' → logprob: -18.255495071411133

Token 360: ' &' (ID: 827)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10121715813875198
    2. ')&' → logprob: -2.351217269897461
    3. ' )' → logprob: -7.226217269897461
    4. '&' → logprob: -8.226217269897461
    5. ' &' → logprob: -11.476217269897461
    6. '&amp' → logprob: -13.226217269897461
    7. ')
' → logprob: -14.226217269897461
    8. '&)' → logprob: -14.476217269897461
    9. '1' → logprob: -14.726217269897461
    10. 'and' → logprob: -15.476217269897461

Token 361: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007100477814674377
    2. ' ' → logprob: -7.2507100105285645
    3. '   ' → logprob: -16.000709533691406
    4. ')' → logprob: -18.063209533691406
    5. '0' → logprob: -18.125709533691406
    6. '  ' → logprob: -18.625709533691406
    7. '    ' → logprob: -18.938209533691406
    8. '' → logprob: -19.000709533691406
    9. '```' → logprob: -19.188209533691406
    10. 'a' → logprob: -19.438209533691406

Token 362: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.12127808178775e-05
    2. ' ' → logprob: -10.000051498413086
    3. 'j' → logprob: -12.125051498413086
    4. '0' → logprob: -15.375051498413086
    5. '   ' → logprob: -17.375051498413086
    6. '
' → logprob: -18.375051498413086
    7. '3' → logprob: -18.500051498413086
    8. '7' → logprob: -18.750051498413086
    9. '2' → logprob: -18.750051498413086
    10. ')' → logprob: -19.000051498413086

Token 363: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0912884995341301
    2. ')' → logprob: -2.4662885665893555
    3. ')==' → logprob: -6.2162885665893555
    4. ']' → logprob: -8.716288566589355
    5. ')]
' → logprob: -9.716288566589355
    6. ')!=' → logprob: -9.966288566589355
    7. ']==' → logprob: -10.716288566589355
    8. ')>' → logprob: -11.091288566589355
    9. ' )' → logprob: -11.716288566589355
    10. ')])' → logprob: -11.841288566589355

Token 364: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14045894145965576
    2. ']' → logprob: -2.7654590606689453
    3. '<|end|>' → logprob: -2.8904590606689453
    4. '
' → logprob: -5.140459060668945
    5. '])' → logprob: -5.890459060668945
    6. '       ' → logprob: -7.015459060668945
    7. ' )' → logprob: -7.640459060668945
    8. '<|end|>' → logprob: -8.015459060668945
    9. ',' → logprob: -8.140459060668945
    10. '[' → logprob: -8.640459060668945

Token 365: ' value' (ID: 1432)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38847970962524414
    2. '
' → logprob: -1.6384797096252441
    3. '<|end|>' → logprob: -2.138479709625244
    4. ')
' → logprob: -5.638479709625244
    5. '       ' → logprob: -6.888479709625244
    6. '<|end|>' → logprob: -7.388479709625244
    7. ',' → logprob: -7.638479709625244
    8. '),' → logprob: -7.888479709625244
    9. ':' → logprob: -7.888479709625244
    10. ']' → logprob: -8.013479232788086

Token 366: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.17152731120586395
    2. '=' → logprob: -2.29652738571167
    3. ' =' → logprob: -2.92152738571167
    4. ')' → logprob: -6.79652738571167
    5. ',' → logprob: -7.42152738571167
    6. '(' → logprob: -7.54652738571167
    7. '   ' → logprob: -8.171526908874512
    8. '_' → logprob: -8.421526908874512
    9. ' s' → logprob: -9.671526908874512
    10. ' ' → logprob: -9.796526908874512

Token 367: ' list' (ID: 1562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.39056259393692017
    2. ' [' → logprob: -1.5155625343322754
    3. '0' → logprob: -3.1405625343322754
    4. '{' → logprob: -3.6405625343322754
    5. '{}' → logprob: -4.140562534332275
    6. ' {' → logprob: -5.390562534332275
    7. '[m' → logprob: -5.515562534332275
    8. ' ' → logprob: -6.015562534332275
    9. ' {}' → logprob: -6.515562534332275
    10. '[max' → logprob: -7.140562534332275

Token 368: '(st' (ID: 4065)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1199208498001099
    2. '(map' → logprob: -1.1199208498001099
    3. '(chain' → logprob: -1.9949208498001099
    4. '(range' → logprob: -2.3699207305908203
    5. '(m' → logprob: -3.1199207305908203
    6. '(re' → logprob: -3.4949207305908203
    7. '(acc' → logprob: -4.11992073059082
    8. '(value' → logprob: -5.11992073059082
    9. '(it' → logprob: -5.49492073059082
    10. '(mask' → logprob: -5.74492073059082

Token 369: 'arm' (ID: 2218)
  Prédit: 'arm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arm' → logprob: -1.1160349458805285e-05
    2. 'map' → logprob: -11.625011444091797
    3. 'ar' → logprob: -15.000011444091797
    4. 'arp' → logprob: -15.000011444091797
    5. 'ermap' → logprob: -15.625011444091797
    6. '(map' → logprob: -16.000011444091797
    7. 'armac' → logprob: -16.125011444091797
    8. '[' → logprob: -16.125011444091797
    9. ' arm' → logprob: -16.375011444091797
    10. 'urm' → logprob: -16.375011444091797

Token 370: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.00011045700375689194
    2. 'map' → logprob: -9.250110626220703
    3. 'ul' → logprob: -12.125110626220703
    4. '   ' → logprob: -13.250110626220703
    5. 'apper' → logprob: -13.750110626220703
    6. 'apped' → logprob: -13.875110626220703
    7. '<|end|>' → logprob: -14.000110626220703
    8. 'app' → logprob: -14.000110626220703
    9. 'mul' → logprob: -14.125110626220703
    10. 'apply' → logprob: -14.375110626220703

Token 371: '(lambda' (ID: 43341)
  Prédit: '(or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(or' → logprob: -0.3061007261276245
    2. '(add' → logprob: -2.181100845336914
    3. '(m' → logprob: -2.931100845336914
    4. '(lambda' → logprob: -3.306100845336914
    5. '(max' → logprob: -4.056100845336914
    6. 'or' → logprob: -4.556100845336914
    7. '(' → logprob: -4.806100845336914
    8. '(item' → logprob: -4.931100845336914
    9. 'add' → logprob: -5.181100845336914
    10. '(sum' → logprob: -5.431100845336914

Token 372: ' i' (ID: 575)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -1.362393856048584
    2. 'add' → logprob: -1.487393856048584
    3. 'mul' → logprob: -1.987393856048584
    4. ' or' → logprob: -2.112393856048584
    5. ' add' → logprob: -2.487393856048584
    6. 'lambda' → logprob: -2.612393856048584
    7. ' lambda' → logprob: -3.237393856048584
    8. 'item' → logprob: -3.612393856048584
    9. ' item' → logprob: -5.237393856048584
    10. '(lambda' → logprob: -5.237393856048584

Token 373: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02066158875823021
    2. ',x' → logprob: -5.145661354064941
    3. ',j' → logprob: -5.895661354064941
    4. 'x' → logprob: -6.145661354064941
    5. ',k' → logprob: -6.270661354064941
    6. ',n' → logprob: -6.645661354064941
    7. 'mask' → logprob: -7.645661354064941
    8. ',m' → logprob: -7.645661354064941
    9. ',d' → logprob: -7.770661354064941
    10. '_,' → logprob: -7.895661354064941

Token 374: ' v' (ID: 323)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.4261367619037628
    2. 'x' → logprob: -2.0511367321014404
    3. 'mask' → logprob: -2.8011367321014404
    4. 'v' → logprob: -2.8011367321014404
    5. ' j' → logprob: -3.3011367321014404
    6. 'm' → logprob: -4.1761369705200195
    7. ' mask' → logprob: -5.0511369705200195
    8. 'sub' → logprob: -5.3011369705200195
    9. 'val' → logprob: -5.3011369705200195
    10. ' x' → logprob: -5.3011369705200195

Token 375: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002224602736532688
    2. ',' → logprob: -6.627224445343018
    3. ' :' → logprob: -7.252224445343018
    4. '=' → logprob: -10.127224922180176
    5. 'a' → logprob: -10.127224922180176
    6. ',:' → logprob: -10.752224922180176
    7. 's' → logprob: -11.002224922180176
    8. ':value' → logprob: -11.377224922180176
    9. 'value' → logprob: -11.877224922180176
    10. 't' → logprob: -12.252224922180176

Token 376: ' [' (ID: 723)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.029366010800004005
    2. '(m' → logprob: -4.9043660163879395
    3. ' (' → logprob: -5.0293660163879395
    4. '(value' → logprob: -5.4043660163879395
    5. '(' → logprob: -6.0293660163879395
    6. '(add' → logprob: -6.4043660163879395
    7. '   ' → logprob: -6.7793660163879395
    8. '(or' → logprob: -7.1543660163879395
    9. '(a' → logprob: -7.2793660163879395
    10. '(v' → logprob: -7.4043660163879395

Token 377: 'format' (ID: 4078)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.4939364790916443
    2. 'i' → logprob: -1.993936538696289
    3. '(i' → logprob: -2.118936538696289
    4. '(' → logprob: -3.368936538696289
    5. '(v' → logprob: -3.868936538696289
    6. '0' → logprob: -4.243936538696289
    7. 'or' → logprob: -4.243936538696289
    8. 'value' → logprob: -4.493936538696289
    9. '(value' → logprob: -5.243936538696289
    10. 'mul' → logprob: -5.243936538696289

Token 378: '(i' (ID: 3649)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.4437529742717743
    2. '(i' → logprob: -1.0687530040740967
    3. 'v' → logprob: -4.818752765655518
    4. '(value' → logprob: -5.568752765655518
    5. '(' → logprob: -6.318752765655518
    6. 'i' → logprob: -7.818752765655518
    7. '(mask' → logprob: -8.318753242492676
    8. 'value' → logprob: -8.568753242492676
    9. '((' → logprob: -8.943753242492676
    10. '(bin' → logprob: -9.318753242492676

Token 379: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17730727791786194
    2. '(v' → logprob: -2.677307367324829
    3. ','' → logprob: -3.177307367324829
    4. '(' → logprob: -4.67730712890625
    5. '(mask' → logprob: -4.92730712890625
    6. ',v' → logprob: -5.17730712890625
    7. '(value' → logprob: -5.42730712890625
    8. '('' → logprob: -5.55230712890625
    9. ',b' → logprob: -5.92730712890625
    10. '(len' → logprob: -5.92730712890625

Token 380: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.800169825553894
    2. ''b' → logprob: -0.925169825553894
    3. ''f' → logprob: -1.925169825553894
    4. '"' → logprob: -5.675169944763184
    5. ''#' → logprob: -6.300169944763184
    6. ''o' → logprob: -7.425169944763184
    7. ''x' → logprob: -7.675169944763184
    8. ''n' → logprob: -7.800169944763184
    9. ''a' → logprob: -8.050169944763184
    10. ''r' → logprob: -8.675169944763184

Token 381: '016' (ID: 28653)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5086380243301392
    2. ''' → logprob: -1.0086380243301392
    3. 'b' → logprob: -3.8836379051208496
    4. ''b' → logprob: -5.13363790512085
    5. '{}' → logprob: -5.50863790512085
    6. 'f' → logprob: -6.88363790512085
    7. ''f' → logprob: -7.38363790512085
    8. ''{' → logprob: -8.758638381958008
    9. '#' → logprob: -9.008638381958008
    10. ''o' → logprob: -9.008638381958008

Token 382: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -8.900034299585968e-05
    2. 'x' → logprob: -9.500088691711426
    3. 'd' → logprob: -12.375088691711426
    4. '016' → logprob: -12.500088691711426
    5. 'o' → logprob: -13.625088691711426
    6. ''b' → logprob: -13.750088691711426
    7. ''))' → logprob: -14.000088691711426
    8. '')]' → logprob: -14.125088691711426
    9. '')' → logprob: -14.500088691711426
    10. 'X' → logprob: -15.000088691711426

Token 383: ''),' (ID: 10047)
  Prédit: ''),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''),' → logprob: -0.002931106835603714
    2. '')' → logprob: -6.752931118011475
    3. '),' → logprob: -7.002931118011475
    4. ')'),' → logprob: -8.627930641174316
    5. ')' → logprob: -9.002930641174316
    6. ''),'' → logprob: -9.252930641174316
    7. '').' → logprob: -9.377930641174316
    8. '')]' → logprob: -9.502930641174316
    9. '')),' → logprob: -9.877930641174316
    10. '"),' → logprob: -9.877930641174316

Token 384: ' sum' (ID: 4215)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.060631558299064636
    2. ' v' → logprob: -2.935631513595581
    3. 'value' → logprob: -6.06063175201416
    4. '[v' → logprob: -7.06063175201416
    5. '[' → logprob: -7.81063175201416
    6. ' value' → logprob: -8.31063175201416
    7. ' [' → logprob: -8.43563175201416
    8. 'list' → logprob: -8.81063175201416
    9. ']' → logprob: -9.06063175201416
    10. 'int' → logprob: -9.18563175201416

Token 385: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.9212853908538818
    2. '(sub' → logprob: -1.0462853908538818
    3. '(value' → logprob: -1.7962853908538818
    4. 'v' → logprob: -3.421285390853882
    5. 'sub' → logprob: -3.921285390853882
    6. '((' → logprob: -4.546285629272461
    7. '([' → logprob: -5.296285629272461
    8. '(' → logprob: -5.421285629272461
    9. '(s' → logprob: -5.671285629272461
    10. '(map' → logprob: -5.796285629272461

Token 386: ')],' (ID: 60559)
  Prédit: ')])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.04418855905532837
    2. ')],' → logprob: -3.6691884994506836
    3. ')' → logprob: -4.169188499450684
    4. '),' → logprob: -7.169188499450684
    5. ')]' → logprob: -7.419188499450684
    6. ')])
' → logprob: -8.169188499450684
    7. ')])

' → logprob: -8.544188499450684
    8. ')+' → logprob: -9.919188499450684
    9. '(' → logprob: -9.919188499450684
    10. '(a' → logprob: -10.044188499450684

Token 387: ' zip' (ID: 16216)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.17210477590560913
    2. ' enumerate' → logprob: -1.922104835510254
    3. 'zip' → logprob: -5.047104835510254
    4. 'm' → logprob: -6.422104835510254
    5. ' zip' → logprob: -6.547104835510254
    6. 'chain' → logprob: -7.172104835510254
    7. '   ' → logprob: -7.672104835510254
    8. 'mask' → logprob: -8.422104835510254
    9. ' chain' → logprob: -8.797104835510254
    10. 'per' → logprob: -8.922104835510254

Token 388: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.02472754381597042
    2. 'm' → logprob: -3.7747275829315186
    3. '(' → logprob: -7.0247273445129395
    4. '(range' → logprob: -7.6497273445129395
    5. '(
' → logprob: -9.399727821350098
    6. '(mask' → logprob: -11.149727821350098
    7. '(chain' → logprob: -11.899727821350098
    8. 'range' → logprob: -13.524727821350098
    9. ')(' → logprob: -13.774727821350098
    10. 'mask' → logprob: -13.774727821350098

Token 389: 'asks' (ID: 9523)
  Prédit: 'asks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'asks' → logprob: -0.00043448375072330236
    2. 'ask' → logprob: -8.000434875488281
    3. 'range' → logprob: -9.875434875488281
    4. '[' → logprob: -10.500434875488281
    5. 'm' → logprob: -12.625434875488281
    6. '(range' → logprob: -13.000434875488281
    7. 'aks' → logprob: -13.625434875488281
    8. '(' → logprob: -13.750434875488281
    9. ']' → logprob: -14.125434875488281
    10. 'as' → logprob: -14.250434875488281

Token 390: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006235683336853981
    2. ',a' → logprob: -5.631235599517822
    3. ' ,' → logprob: -6.506235599517822
    4. '   ' → logprob: -8.25623607635498
    5. ',
' → logprob: -9.00623607635498
    6. ',m' → logprob: -9.00623607635498
    7. ',[' → logprob: -9.00623607635498
    8. '       ' → logprob: -9.25623607635498
    9. '      ' → logprob: -9.63123607635498
    10. '  ' → logprob: -9.75623607635498

Token 391: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.2641122341156006
    2. 'sub' → logprob: -2.5141122341156006
    3. '[' → logprob: -3.3891122341156006
    4. 'm' → logprob: -3.5141122341156006
    5. '[sub' → logprob: -4.13911247253418
    6. 'a' → logprob: -4.26411247253418
    7. 'list' → logprob: -4.63911247253418
    8. '[[' → logprob: -4.76411247253418
    9. 'chain' → logprob: -4.88911247253418
    10. '(map' → logprob: -5.13911247253418

Token 392: '(sub' (ID: 19764)
  Prédit: '(sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sub' → logprob: -0.07578029483556747
    2. '(lambda' → logprob: -3.3257803916931152
    3. '(sum' → logprob: -3.5757803916931152
    4. 'sub' → logprob: -5.950780391693115
    5. '(part' → logprob: -6.325780391693115
    6. '(list' → logprob: -6.450780391693115
    7. '(' → logprob: -6.575780391693115
    8. 'sum' → logprob: -7.700780391693115
    9. '(len' → logprob: -7.950780391693115
    10. '(s' → logprob: -8.575779914855957

Token 393: 'sets' (ID: 7234)
  Prédit: 'sets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sets' → logprob: -0.002400505356490612
    2. '(lambda' → logprob: -6.2524003982543945
    3. 'set' → logprob: -8.127400398254395
    4. 'ets' → logprob: -9.252400398254395
    5. 'lambda' → logprob: -9.502400398254395
    6. ' lambda' → logprob: -13.252400398254395
    7. 's' → logprob: -14.377400398254395
    8. 'se' → logprob: -14.377400398254395
    9. 'sts' → logprob: -14.877400398254395
    10. '(' → logprob: -15.002400398254395

Token 394: ',' (ID: 11)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.6899510025978088
    2. ',' → logprob: -1.064950942993164
    3. ',a' → logprob: -2.064950942993164
    4. '(mask' → logprob: -4.814950942993164
    5. 'a' → logprob: -5.189950942993164
    6. ')))' → logprob: -5.689950942993164
    7. ' ,' → logprob: -5.814950942993164
    8. ',m' → logprob: -6.689950942993164
    9. 'mask' → logprob: -6.814950942993164
    10. '(m' → logprob: -6.939950942993164

Token 395: ' masks' (ID: 40028)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.02924411930143833
    2. ' masks' → logprob: -4.1542439460754395
    3. 'a' → logprob: -4.7792439460754395
    4. 'range' → logprob: -6.7792439460754395
    5. 'value' → logprob: -7.4042439460754395
    6. 'mask' → logprob: -7.6542439460754395
    7. '[m' → logprob: -7.9042439460754395
    8. '[' → logprob: -8.029244422912598
    9. ' a' → logprob: -8.154244422912598
    10. '[a' → logprob: -8.154244422912598

Token 396: '))))
' (ID: 55084)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.12394355982542038
    2. '))))' → logprob: -2.248943567276001
    3. ')))
' → logprob: -4.998943328857422
    4. '))))
' → logprob: -6.248943328857422
    5. '))' → logprob: -6.373943328857422
    6. ')' → logprob: -8.123943328857422
    7. ')))

' → logprob: -9.248943328857422
    8. ')))))
' → logprob: -9.748943328857422
    9. ')));' → logprob: -9.748943328857422
    10. '))))

' → logprob: -10.248943328857422

Token 397: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00469451118260622
    2. '))' → logprob: -5.50469446182251
    3. ')
' → logprob: -8.004694938659668
    4. '       ' → logprob: -8.504694938659668
    5. ')))' → logprob: -10.254694938659668
    6. ' )' → logprob: -11.254694938659668
    7. '   ' → logprob: -11.629694938659668
    8. '))
' → logprob: -12.379694938659668
    9. '[' → logprob: -12.629694938659668
    10. '
' → logprob: -13.129694938659668

Token 398: ' value' (ID: 1432)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005836487747728825
    2. ')
' → logprob: -5.505836486816406
    3. '       ' → logprob: -6.755836486816406
    4. '
' → logprob: -8.130836486816406
    5. ' )' → logprob: -8.505836486816406
    6. '   ' → logprob: -11.005836486816406
    7. '[' → logprob: -11.380836486816406
    8. '))' → logprob: -11.380836486816406
    9. '<|end|>' → logprob: -11.755836486816406
    10. ')

' → logprob: -11.880836486816406

Token 399: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.36217930912971497
    2. '<|end|>' → logprob: -2.1121792793273926
    3. '.pop' → logprob: -2.9871792793273926
    4. ' =' → logprob: -3.2371792793273926
    5. '[' → logprob: -3.6121792793273926
    6. '=' → logprob: -3.6121792793273926
    7. ',' → logprob: -3.9871792793273926
    8. '.reverse' → logprob: -5.237179279327393
    9. ')' → logprob: -5.362179279327393
    10. '.append' → logprob: -6.237179279327393

Token 400: '(key' (ID: 8932)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3941405415534973
    2. '(key' → logprob: -1.1441404819488525
    3. '(reverse' → logprob: -5.144140720367432
    4. '()
' → logprob: -7.019140720367432
    5. '(' → logprob: -7.769140720367432
    6. '(
' → logprob: -10.269140243530273
    7. ',key' → logprob: -11.394140243530273
    8. '(),' → logprob: -11.644140243530273
    9. 'reverse' → logprob: -11.644140243530273
    10. '(lambda' → logprob: -11.644140243530273

Token 401: '=item' (ID: 76091)
  Prédit: '=lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.16168257594108582
    2. '=' → logprob: -1.9116826057434082
    3. '=item' → logprob: -6.536682605743408
    4. '=value' → logprob: -12.78668212890625
    5. '=
' → logprob: -13.16168212890625
    6. '=len' → logprob: -13.66168212890625
    7. 'lambda' → logprob: -14.53668212890625
    8. '=

' → logprob: -15.03668212890625
    9. '=}' → logprob: -15.16168212890625
    10. ' =' → logprob: -15.16168212890625

Token 402: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -8.41866585687967e-06
    2. 'get' → logprob: -11.875008583068848
    3. 'g' → logprob: -15.250008583068848
    4. 'getitem' → logprob: -15.375008583068848
    5. 'generator' → logprob: -15.500008583068848
    6. 'giver' → logprob: -16.00000762939453
    7. 'Getter' → logprob: -16.37500762939453
    8. 'setter' → logprob: -16.62500762939453
    9. 'operator' → logprob: -16.62500762939453
    10. '=get' → logprob: -17.00000762939453

Token 403: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5561507344245911
    2. '1' → logprob: -1.0561506748199463
    3. '0' → logprob: -2.5561506748199463
    4. 'lambda' → logprob: -7.806150913238525
    5. '(lambda' → logprob: -8.181150436401367
    6. '
' → logprob: -8.806150436401367
    7. '```' → logprob: -9.056150436401367
    8. '(
' → logprob: -9.431150436401367
    9. ' ' → logprob: -10.056150436401367
    10. '=lambda' → logprob: -10.681150436401367

Token 404: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04415891319513321
    2. '0' → logprob: -3.169158935546875
    3. ' ' → logprob: -6.794158935546875
    4. '
' → logprob: -10.919158935546875
    5. '   ' → logprob: -11.669158935546875
    6. '[' → logprob: -13.044158935546875
    7. '    ' → logprob: -13.419158935546875
    8. '-' → logprob: -13.481658935546875
    9. '```' → logprob: -13.606658935546875
    10. '

' → logprob: -13.981658935546875

Token 405: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.12467248737812042
    2. ',' → logprob: -2.6246724128723145
    3. ')' → logprob: -3.1246724128723145
    4. '),' → logprob: -7.9996724128723145
    5. '))
' → logprob: -8.499672889709473
    6. ')))' → logprob: -9.249672889709473
    7. ' ))' → logprob: -9.999672889709473
    8. ' ,' → logprob: -10.874672889709473
    9. ',)' → logprob: -10.999672889709473
    10. ',
' → logprob: -11.249672889709473

Token 406: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005699523026123643
    2. ')
' → logprob: -8.500570297241211
    3. '
' → logprob: -9.000570297241211
    4. '<|end|>' → logprob: -9.125570297241211
    5. '       ' → logprob: -9.625570297241211
    6. ' )' → logprob: -11.000570297241211
    7. '[' → logprob: -11.250570297241211
    8. ',' → logprob: -11.625570297241211
    9. '   ' → logprob: -11.750570297241211
    10. '))' → logprob: -13.500570297241211

Token 407: ' bin' (ID: 6958)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0062549114227295
    2. '<|end|>' → logprob: -1.0062549114227295
    3. '       ' → logprob: -1.6312549114227295
    4. '
' → logprob: -2.7562549114227295
    5. ',' → logprob: -6.006255149841309
    6. ')
' → logprob: -6.881255149841309
    7. 'return' → logprob: -6.881255149841309
    8. '#' → logprob: -7.131255149841309
    9. '[' → logprob: -7.756255149841309
    10. '<|end|>' → logprob: -7.756255149841309

Token 408: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5856407880783081
    2. '_value' → logprob: -2.2106409072875977
    3. '_values' → logprob: -2.8356409072875977
    4. 'value' → logprob: -2.8356409072875977
    5. '_repr' → logprob: -3.0856409072875977
    6. '(value' → logprob: -3.4606409072875977
    7. 'ary' → logprob: -3.8356409072875977
    8. '_masks' → logprob: -3.9606409072875977
    9. '_strings' → logprob: -4.085640907287598
    10. ')' → logprob: -4.460640907287598

Token 409: ' list' (ID: 1562)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.34226879477500916
    2. '[]' → logprob: -2.592268705368042
    3. '''' → logprob: -2.842268705368042
    4. ' value' → logprob: -2.842268705368042
    5. '""' → logprob: -3.717268705368042
    6. '[' → logprob: -4.092268943786621
    7. '[value' → logprob: -4.717268943786621
    8. '0' → logprob: -4.967268943786621
    9. ' []' → logprob: -5.092268943786621
    10. ''value' → logprob: -5.342268943786621

Token 410: '(st' (ID: 4065)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.04996294900774956
    2. '(chain' → logprob: -3.9249629974365234
    3. '(st' → logprob: -4.549962997436523
    4. '(value' → logprob: -5.049962997436523
    5. '(' → logprob: -5.174962997436523
    6. '()' → logprob: -5.674962997436523
    7. '(item' → logprob: -6.674962997436523
    8. '(zip' → logprob: -7.049962997436523
    9. '(format' → logprob: -8.299962997436523
    10. '(range' → logprob: -8.924962997436523

Token 411: 'arm' (ID: 2218)
  Prédit: 'arm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arm' → logprob: -7.946405094116926e-05
    2. 'map' → logprob: -9.875079154968262
    3. '(map' → logprob: -11.250079154968262
    4. 'am' → logprob: -11.875079154968262
    5. 'ar' → logprob: -12.875079154968262
    6. 'r' → logprob: -13.125079154968262
    7. 'range' → logprob: -14.125079154968262
    8. 'rm' → logprob: -14.375079154968262
    9. '(value' → logprob: -15.250079154968262
    10. 'm' → logprob: -15.625079154968262

Token 412: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -4.7755875129951164e-05
    2. 'map' → logprob: -11.37504768371582
    3. '   ' → logprob: -11.50004768371582
    4. 'aps' → logprob: -11.62504768371582
    5. 'ask' → logprob: -12.62504768371582
    6. 'ап' → logprob: -12.87504768371582
    7. 'at' → logprob: -13.25004768371582
    8. 'p' → logprob: -13.62504768371582
    9. 'app' → logprob: -13.62504768371582
    10. 'format' → logprob: -13.62504768371582

Token 413: '(item' (ID: 10016)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.21432635188102722
    2. '(str' → logprob: -2.2143263816833496
    3. '(format' → logprob: -3.0893263816833496
    4. '(item' → logprob: -4.33932638168335
    5. '(' → logprob: -4.58932638168335
    6. '(bin' → logprob: -5.08932638168335
    7. '(int' → logprob: -5.46432638168335
    8. '(list' → logprob: -6.46432638168335
    9. 'str' → logprob: -7.58932638168335
    10. '(bool' → logprob: -7.83932638168335

Token 414: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -2.176947600673884e-05
    2. 'get' → logprob: -10.750021934509277
    3. 'gett' → logprob: -16.00002098083496
    4. 'getitem' → logprob: -16.37502098083496
    5. 'setter' → logprob: -18.37502098083496
    6. 'g' → logprob: -18.62502098083496
    7. 'Getter' → logprob: -18.87502098083496
    8. 'finder' → logprob: -18.87502098083496
    9. '@Getter' → logprob: -19.37502098083496
    10. 'selector' → logprob: -19.62502098083496

Token 415: '(' (ID: 7)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16045574843883514
    2. '(' → logprob: -1.9104557037353516
    3. ',' → logprob: -9.910455703735352
    4. ' (' → logprob: -10.160455703735352
    5. '[' → logprob: -10.285455703735352
    6. '   ' → logprob: -10.785455703735352
    7. '
' → logprob: -10.910455703735352
    8. ' ' → logprob: -10.910455703735352
    9. '```' → logprob: -10.910455703735352
    10. '	' → logprob: -11.535455703735352

Token 416: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001968649885384366
    2. '1' → logprob: -8.75019645690918
    3. ' ' → logprob: -11.00019645690918
    4. '[' → logprob: -11.62519645690918
    5. '   ' → logprob: -12.81269645690918
    6. ',' → logprob: -13.37519645690918
    7. '(' → logprob: -13.75019645690918
    8. '```' → logprob: -14.00019645690918
    9. ')' → logprob: -14.25019645690918
    10. '
' → logprob: -14.68769645690918

Token 417: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.030768707394599915
    2. ',' → logprob: -3.530768632888794
    3. ' ),' → logprob: -8.155768394470215
    4. '   ' → logprob: -8.655768394470215
    5. '0' → logprob: -9.155768394470215
    6. ')' → logprob: -9.405768394470215
    7. '1' → logprob: -9.530768394470215
    8. ' ,' → logprob: -9.655768394470215
    9. ',),' → logprob: -10.030768394470215
    10. '[' → logprob: -10.280768394470215

Token 418: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.0031974392477422953
    2. ' value' → logprob: -5.75319766998291
    3. '(value' → logprob: -11.62819766998291
    4. ')' → logprob: -12.62819766998291
    5. ',value' → logprob: -12.75319766998291
    6. ')value' → logprob: -13.12819766998291
    7. ' ' → logprob: -14.50319766998291
    8. '"value' → logprob: -14.62819766998291
    9. '	value' → logprob: -14.87819766998291
    10. '   ' → logprob: -14.87819766998291

Token 419: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0021484773606061935
    2. ',' → logprob: -6.252148628234863
    3. '))
' → logprob: -9.252148628234863
    4. ' ))' → logprob: -9.502148628234863
    5. ')' → logprob: -11.752148628234863
    6. '   ' → logprob: -11.877148628234863
    7. ')))' → logprob: -11.877148628234863
    8. '));' → logprob: -12.002148628234863
    9. '  ' → logprob: -12.627148628234863
    10. ' ' → logprob: -12.627148628234863

Token 420: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8947728872299194
    2. '<|end|>' → logprob: -1.0197728872299194
    3. '
' → logprob: -1.6447728872299194
    4. ')
' → logprob: -4.019773006439209
    5. '       ' → logprob: -4.394773006439209
    6. '<|end|>' → logprob: -5.769773006439209
    7. ',' → logprob: -6.144773006439209
    8. '[' → logprob: -7.394773006439209
    9. '        
' → logprob: -8.64477252960205
    10. '),' → logprob: -8.89477252960205

Token 421: ' val' (ID: 1459)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 422: ' =' (ID: 314)
  Prédit: 'ue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.017260445281863213
    2. 'ues' → logprob: -4.142260551452637
    3. '=' → logprob: -7.267260551452637
    4. ' =' → logprob: -7.642260551452637
    5. 's' → logprob: -10.642260551452637
    6. 'uer' → logprob: -11.017260551452637
    7. 'uel' → logprob: -12.892260551452637
    8. '=[]' → logprob: -14.017260551452637
    9. '   ' → logprob: -14.767260551452637
    10. 'e' → logprob: -15.017260551452637

Token 423: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.6931893825531006
    2. 'list' → logprob: -0.6931893825531006
    3. '[' → logprob: -10.56818962097168
    4. ' [' → logprob: -11.69318962097168
    5. '(list' → logprob: -12.94318962097168
    6. '[list' → logprob: -12.94318962097168
    7. 'item' → logprob: -14.56818962097168
    8. 'value' → logprob: -14.69318962097168
    9. '=list' → logprob: -14.94318962097168
    10. ' ' → logprob: -15.19318962097168

Token 424: '(st' (ID: 4065)
  Prédit: '(st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -0.0017720464384183288
    2. 'st' → logprob: -6.376771926879883
    3. '(map' → logprob: -9.751771926879883
    4. '	st' → logprob: -12.251771926879883
    5. 'map' → logprob: -12.626771926879883
    6. '(' → logprob: -13.751771926879883
    7. '_st' → logprob: -14.501771926879883
    8. ' st' → logprob: -14.626771926879883
    9. 'item' → logprob: -15.376771926879883
    10. '```' → logprob: -15.626771926879883

Token 425: 'arm' (ID: 2218)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.004887058399617672
    2. 'map' → logprob: -5.379887104034424
    3. 'am' → logprob: -8.754886627197266
    4. '(map' → logprob: -10.129886627197266
    5. 'app' → logprob: -10.504886627197266
    6. 'apper' → logprob: -11.004886627197266
    7. 'getter' → logprob: -12.129886627197266
    8. 'item' → logprob: -12.254886627197266
    9. '_map' → logprob: -12.879886627197266
    10. 'getitem' → logprob: -13.004886627197266

Token 426: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.0003167545364703983
    2. 'map' → logprob: -8.125316619873047
    3. 'app' → logprob: -12.000316619873047
    4. 'at' → logprob: -13.250316619873047
    5. 'apped' → logprob: -13.250316619873047
    6. '_map' → logprob: -13.500316619873047
    7. 'ап' → logprob: -13.750316619873047
    8. '   ' → logprob: -13.875316619873047
    9. 'apper' → logprob: -13.875316619873047
    10. '(map' → logprob: -14.000316619873047

Token 427: '(item' (ID: 10016)
  Prédit: '(item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(item' → logprob: -0.011062316596508026
    2. 'item' → logprob: -4.511062145233154
    3. '=item' → logprob: -12.136062622070312
    4. ' item' → logprob: -12.386062622070312
    5. ')item' → logprob: -13.636062622070312
    6. '	item' → logprob: -13.886062622070312
    7. '(' → logprob: -14.136062622070312
    8. ':item' → logprob: -14.261062622070312
    9. ',item' → logprob: -14.636062622070312
    10. '$item' → logprob: -15.136062622070312

Token 428: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -0.0009196776081807911
    2. '(' → logprob: -7.125919818878174
    3. 'get' → logprob: -10.000919342041016
    4. '1' → logprob: -10.125919342041016
    5. 'got' → logprob: -11.750919342041016
    6. 'getitem' → logprob: -12.000919342041016
    7. 'or' → logprob: -12.250919342041016
    8. 'operator' → logprob: -12.500919342041016
    9. 'er' → logprob: -13.750919342041016
    10. 'setter' → logprob: -13.750919342041016

Token 429: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.370294846012257e-05
    2. '1' → logprob: -10.250043869018555
    3. ' (' → logprob: -12.625043869018555
    4. ',' → logprob: -13.125043869018555
    5. '[' → logprob: -14.250043869018555
    6. '```' → logprob: -14.500043869018555
    7. '(
' → logprob: -15.125043869018555
    8. 's' → logprob: -15.500043869018555
    9. ')(' → logprob: -15.500043869018555
    10. ')' → logprob: -15.875043869018555

Token 430: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.93448489275761e-05
    2. ' ' → logprob: -10.500079154968262
    3. '(' → logprob: -11.125079154968262
    4. '```' → logprob: -11.750079154968262
    5. '   ' → logprob: -12.000079154968262
    6. '[' → logprob: -12.375079154968262
    7. ')' → logprob: -12.750079154968262
    8. ',' → logprob: -12.875079154968262
    9. '    ' → logprob: -13.312579154968262
    10. '  ' → logprob: -13.312579154968262

Token 431: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11730261892080307
    2. '),' → logprob: -2.242302656173706
    3. ',value' → logprob: -5.492302417755127
    4. ' ,' → logprob: -8.992302894592285
    5. ')),' → logprob: -9.617302894592285
    6. ',),' → logprob: -9.867302894592285
    7. ' ),' → logprob: -10.242302894592285
    8. 'value' → logprob: -10.742302894592285
    9. ',val' → logprob: -11.367302894592285
    10. '))' → logprob: -11.867302894592285

Token 432: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.02325444668531418
    2. ' value' → logprob: -3.77325439453125
    3. ')' → logprob: -12.52325439453125
    4. ')value' → logprob: -12.77325439453125
    5. '(value' → logprob: -13.89825439453125
    6. '	value' → logprob: -15.14825439453125
    7. ',value' → logprob: -15.39825439453125
    8. '"value' → logprob: -15.52325439453125
    9. 'alue' → logprob: -15.64825439453125
    10. '$value' → logprob: -15.77325439453125

Token 433: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0002481078845448792
    2. '))
' → logprob: -8.375247955322266
    3. '()))' → logprob: -11.625247955322266
    4. '));' → logprob: -13.125247955322266
    5. ' ))' → logprob: -13.125247955322266
    6. ')))' → logprob: -13.875247955322266
    7. ')' → logprob: -14.250247955322266
    8. '))[' → logprob: -14.375247955322266
    9. '   ' → logprob: -14.750247955322266
    10. ' ' → logprob: -15.000247955322266

Token 434: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 435: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 436: ' bin' (ID: 6958)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.7069976925849915
    2. ' bin' → logprob: -0.9569976925849915
    3. 'val' → logprob: -2.9569976329803467
    4. ' val' → logprob: -3.2069976329803467
    5. '(bin' → logprob: -3.9569976329803467
    6. '[' → logprob: -6.456997871398926
    7. 'value' → logprob: -6.706997871398926
    8. ' value' → logprob: -6.956997871398926
    9. '[val' → logprob: -6.956997871398926
    10. ' [' → logprob: -7.331997871398926

Token 437: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 438: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.023245712742209435
    2. ' val' → logprob: -3.7732458114624023
    3. '[val' → logprob: -15.273245811462402
    4. '(val' → logprob: -18.148244857788086
    5. '	val' → logprob: -18.398244857788086
    6. ',val' → logprob: -19.273244857788086
    7. ' ' → logprob: -19.898244857788086
    8. '   ' → logprob: -21.148244857788086
    9. '_val' → logprob: -21.523244857788086
    10. '  ' → logprob: -21.648244857788086

Token 439: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2925005555152893
    2. '<|end|>' → logprob: -1.4175004959106445
    3. '
' → logprob: -4.7925004959106445
    4. ')
' → logprob: -7.1675004959106445
    5. '.' → logprob: -8.042500495910645
    6. ']' → logprob: -8.167500495910645
    7. '[' → logprob: -8.292500495910645
    8. '\n' → logprob: -8.292500495910645
    9. '<|end|>' → logprob: -8.542500495910645
    10. ',' → logprob: -8.542500495910645

Token 440: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003611355321481824
    2. '<|end|>' → logprob: -5.8786115646362305
    3. ':' → logprob: -8.37861156463623
    4. ')
' → logprob: -9.00361156463623
    5. '[' → logprob: -9.25361156463623
    6. ']' → logprob: -9.62861156463623
    7. '
' → logprob: -10.00361156463623
    8. '   ' → logprob: -10.25361156463623
    9. ' ' → logprob: -10.25361156463623
    10. '):' → logprob: -10.62861156463623

Token 441: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 442: ' S' (ID: 336)
  Prédit: ' B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -1.311514973640442
    2. ' HF' → logprob: -2.0615148544311523
    3. ' DP' → logprob: -2.1865148544311523
    4. 'B' → logprob: -2.5615148544311523
    5. ' H' → logprob: -3.2490148544311523
    6. ' D' → logprob: -3.8115148544311523
    7. ' S' → logprob: -3.8740148544311523
    8. ' M' → logprob: -3.9990148544311523
    9. 'HF' → logprob: -3.9990148544311523
    10. 'DP' → logprob: -4.186514854431152

Token 443: '(self' (ID: 2402)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'um' → logprob: -1.3713529109954834
    2. 'et' → logprob: -1.4963529109954834
    3. 'ub' → logprob: -2.2463529109954834
    4. 'F' → logprob: -2.7463529109954834
    5. 'ort' → logprob: -3.4963529109954834
    6. 'B' → logprob: -3.6213529109954834
    7. 'u' → logprob: -3.6213529109954834
    8. 'U' → logprob: -3.7463529109954834
    9. 'olve' → logprob: -3.8713529109954834
    10. 'HF' → logprob: -3.9963529109954834

Token 444: ',' (ID: 11)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -1.4575412273406982
    2. 'F' → logprob: -1.7075412273406982
    3. 'e' → logprob: -2.4575412273406982
    4. 'elf' → logprob: -2.9575412273406982
    5. '(self' → logprob: -3.0825412273406982
    6. 'et' → logprob: -3.0825412273406982
    7. ')' → logprob: -3.0825412273406982
    8. 'T' → logprob: -3.2075412273406982
    9. '):' → logprob: -3.7075412273406982
    10. 'EL' → logprob: -4.082541465759277

Token 445: ' s' (ID: 265)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.3694038689136505
    2. 'a' → logprob: -2.119403839111328
    3. ' p' → logprob: -2.244403839111328
    4. 'self' → logprob: -2.869403839111328
    5. ' self' → logprob: -4.369403839111328
    6. ' a' → logprob: -4.744403839111328
    7. 'n' → logprob: -6.744403839111328
    8. '):' → logprob: -7.494403839111328
    9. ')' → logprob: -7.619403839111328
    10. 's' → logprob: -7.869403839111328

Token 446: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07947030663490295
    2. '):
' → logprob: -2.57947039604187
    3. ',' → logprob: -7.579470157623291
    4. '   ' → logprob: -11.07947063446045
    5. ')' → logprob: -11.32947063446045
    6. ' ):' → logprob: -11.82947063446045
    7. '):
' → logprob: -11.82947063446045
    8. ':' → logprob: -11.95447063446045
    9. '       ' → logprob: -12.20447063446045
    10. '(' → logprob: -12.82947063446045

Token 447: ' r' (ID: 428)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.8466391563415527
    2. ' t' → logprob: -2.0966391563415527
    3. ' k' → logprob: -2.2216391563415527
    4. 'p' → logprob: -2.2216391563415527
    5. ' p' → logprob: -2.2216391563415527
    6. 't' → logprob: -2.4716391563415527
    7. 'i' → logprob: -3.4716391563415527
    8. ' n' → logprob: -3.4716391563415527
    9. 'n' → logprob: -3.7216391563415527
    10. ' i' → logprob: -4.096639156341553

Token 448: '=' (ID: 28)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1318165510892868
    2. '):
' → logprob: -2.1318166255950928
    3. ',' → logprob: -5.506816387176514
    4. '=' → logprob: -8.506816864013672
    5. ' ):' → logprob: -8.506816864013672
    6. 'e' → logprob: -9.381816864013672
    7. 'eturn' → logprob: -9.756816864013672
    8. 's' → logprob: -10.381816864013672
    9. '):
' → logprob: -10.381816864013672
    10. ')' → logprob: -10.381816864013672

Token 449: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1582208126783371
    2. 'None' → logprob: -2.6582207679748535
    3. '1' → logprob: -3.5332207679748535
    4. 'False' → logprob: -4.7832207679748535
    5. 'len' → logprob: -4.9082207679748535
    6. ')' → logprob: -5.2832207679748535
    7. ' ' → logprob: -5.5332207679748535
    8. '-' → logprob: -5.5332207679748535
    9. ''' → logprob: -5.6582207679748535
    10. '100' → logprob: -6.1582207679748535

Token 450: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023436587303876877
    2. '):
' → logprob: -3.8984365463256836
    3. ',' → logprob: -5.898436546325684
    4. ')' → logprob: -9.273436546325684
    5. ':' → logprob: -10.648436546325684
    6. '   ' → logprob: -11.398436546325684
    7. '):
' → logprob: -12.398436546325684
    8. ' ):' → logprob: -12.398436546325684
    9. '):

' → logprob: -12.523436546325684
    10. '       ' → logprob: -13.273436546325684

Token 451: ' m' (ID: 284)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.7395362854003906
    2. 'p' → logprob: -1.8645362854003906
    3. 'i' → logprob: -2.1145362854003906
    4. 'e' → logprob: -2.4895362854003906
    5. ')' → logprob: -2.7395362854003906
    6. 'd' → logprob: -3.2395362854003906
    7. 't' → logprob: -3.2395362854003906
    8. 'n' → logprob: -3.3645362854003906
    9. 'm' → logprob: -3.7395362854003906
    10. 'k' → logprob: -3.7395362854003906

Token 452: '=-' (ID: 21714)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14147639274597168
    2. '=' → logprob: -2.5164763927459717
    3. '):
' → logprob: -3.5164763927459717
    4. '=None' → logprob: -4.141476631164551
    5. ',' → logprob: -6.141476631164551
    6. ')' → logprob: -6.516476631164551
    7. 'ax' → logprob: -8.39147663116455
    8. '   ' → logprob: -8.51647663116455
    9. '0' → logprob: -8.64147663116455
    10. '):
' → logprob: -8.76647663116455

Token 453: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016027313540689647
    2. 'r' → logprob: -9.375160217285156
    3. '2' → logprob: -10.375160217285156
    4. '-' → logprob: -11.250160217285156
    5. 'float' → logprob: -12.000160217285156
    6. '(' → logprob: -12.250160217285156
    7. 's' → logprob: -12.875160217285156
    8. ' ' → logprob: -12.875160217285156
    9. '999' → logprob: -13.125160217285156
    10. '10' → logprob: -13.250160217285156

Token 454: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11476068198680878
    2. '):
' → logprob: -2.239760637283325
    3. ',' → logprob: -6.739760875701904
    4. ')' → logprob: -7.364760875701904
    5. '):
' → logprob: -10.114760398864746
    6. '):

' → logprob: -10.239760398864746
    7. '**' → logprob: -11.489760398864746
    8. ' ):' → logprob: -11.614760398864746
    9. '*' → logprob: -11.864760398864746
    10. '   ' → logprob: -12.114760398864746

Token 455: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6695377826690674
    2. '       ' → logprob: -1.0445377826690674
    3. '(' → logprob: -3.1695377826690674
    4. '[' → logprob: -3.9195377826690674
    5. '   ' → logprob: -3.9195377826690674
    6. '):' → logprob: -4.419537544250488
    7. ')' → logprob: -4.794537544250488
    8. ' :' → logprob: -5.169537544250488
    9. '<|end|>' → logprob: -5.294537544250488
    10. ',' → logprob: -5.419537544250488

Token 456: ' (' (ID: 350)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.43388277292251587
    2. 'if' → logprob: -1.183882713317871
    3. ' s' → logprob: -4.433882713317871
    4. '   ' → logprob: -4.933882713317871
    5. '       ' → logprob: -4.933882713317871
    6. 's' → logprob: -5.058882713317871
    7. '    ' → logprob: -6.058882713317871
    8. ' []' → logprob: -6.058882713317871
    9. '[]' → logprob: -6.183882713317871
    10. 'r' → logprob: -6.183882713317871

Token 457: 'lambda' (ID: 35280)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.49502813816070557
    2. 's' → logprob: -0.9950281381607056
    3. ' s' → logprob: -4.870028018951416
    4. ')' → logprob: -5.245028018951416
    5. ' r' → logprob: -5.370028018951416
    6. 'len' → logprob: -7.120028018951416
    7. 'lambda' → logprob: -7.745028018951416
    8. '0' → logprob: -7.870028018951416
    9. '   ' → logprob: -7.870028018951416
    10. '       ' → logprob: -8.370028495788574

Token 458: ' x' (ID: 1215)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.7827193140983582
    2. ' x' → logprob: -2.282719373703003
    3. ' f' → logprob: -2.407719373703003
    4. 's' → logprob: -2.407719373703003
    5. ' self' → logprob: -2.657719373703003
    6. ' n' → logprob: -2.782719373703003
    7. 'f' → logprob: -3.282719373703003
    8. 'x' → logprob: -4.032719135284424
    9. 'n' → logprob: -4.532719135284424
    10. ' l' → logprob: -4.907719135284424

Token 459: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03300543501973152
    2. ',' → logprob: -4.408005237579346
    3. ' :' → logprob: -4.908005237579346
    4. ':x' → logprob: -4.908005237579346
    5. ',x' → logprob: -6.658005237579346
    6. '=' → logprob: -6.783005237579346
    7. ':s' → logprob: -7.283005237579346
    8. ':
' → logprob: -7.908005237579346
    9. ',n' → logprob: -8.533005714416504
    10. ':n' → logprob: -8.658005714416504

Token 460: ' s' (ID: 265)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7131251096725464
    2. ' x' → logprob: -1.2131251096725464
    3. 's' → logprob: -2.963125228881836
    4. 'r' → logprob: -3.463125228881836
    5. ' s' → logprob: -3.963125228881836
    6. ' self' → logprob: -4.338125228881836
    7. 'self' → logprob: -4.338125228881836
    8. ' (' → logprob: -4.713125228881836
    9. 'print' → logprob: -4.713125228881836
    10. ' None' → logprob: -4.838125228881836

Token 461: '.sort' (ID: 19551)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[r' → logprob: -1.3170807361602783
    2. ')' → logprob: -1.5670807361602783
    3. '[:' → logprob: -2.0670807361602783
    4. '[x' → logprob: -2.4420807361602783
    5. '[' → logprob: -3.3170807361602783
    6. '.split' → logprob: -3.5670807361602783
    7. '.replace' → logprob: -3.5670807361602783
    8. '.startswith' → logprob: -3.5670807361602783
    9. ',' → logprob: -3.6920807361602783
    10. '==' → logprob: -3.9420807361602783

Token 462: '(reverse' (ID: 110806)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.13749240338802338
    2. '(key' → logprob: -2.3874924182891846
    3. '(reverse' → logprob: -3.7624924182891846
    4. '()' → logprob: -4.3874921798706055
    5. '(),' → logprob: -8.262492179870605
    6. '());' → logprob: -8.637492179870605
    7. '();)' → logprob: -9.262492179870605
    8. 'reverse' → logprob: -9.387492179870605
    9. '())
' → logprob: -9.637492179870605
    10. '(' → logprob: -9.887492179870605

Token 463: '=' (ID: 28)
  Prédit: '=True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.020577624440193176
    2. '=' → logprob: -4.145577430725098
    3. '())' → logprob: -6.145577430725098
    4. '()' → logprob: -6.770577430725098
    5. '(True' → logprob: -7.270577430725098
    6. '()))' → logprob: -8.520577430725098
    7. '(' → logprob: -9.145577430725098
    8. '=x' → logprob: -9.645577430725098
    9. ')' → logprob: -10.020577430725098
    10. '(x' → logprob: -10.270577430725098

Token 464: 'bool' (ID: 9037)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.003788323374465108
    2. 'x' → logprob: -6.128788471221924
    3. '(True' → logprob: -6.878788471221924
    4. ' True' → logprob: -8.378787994384766
    5. '=True' → logprob: -8.878787994384766
    6. ')' → logprob: -9.003787994384766
    7. '1' → logprob: -9.878787994384766
    8. 's' → logprob: -11.253787994384766
    9. '))' → logprob: -12.378787994384766
    10. ')x' → logprob: -12.503787994384766

Token 465: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.43165990710258484
    2. '(m' → logprob: -1.1816599369049072
    3. '(x' → logprob: -3.5566599369049072
    4. '(' → logprob: -4.431659698486328
    5. '((' → logprob: -6.556659698486328
    6. 'r' → logprob: -7.306659698486328
    7. 'm' → logprob: -7.931659698486328
    8. '(~' → logprob: -8.431659698486328
    9. '(not' → logprob: -8.431659698486328
    10. '(int' → logprob: -8.681659698486328

Token 466: '),' (ID: 936)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.10650628060102463
    2. '))' → logprob: -2.35650634765625
    3. '))))' → logprob: -6.35650634765625
    4. ')' → logprob: -6.48150634765625
    5. '),' → logprob: -6.60650634765625
    6. ')),' → logprob: -7.85650634765625
    7. ' ' → logprob: -7.98150634765625
    8. ')));' → logprob: -8.10650634765625
    9. '))
' → logprob: -8.73150634765625
    10. ')))
' → logprob: -8.98150634765625

Token 467: ' key' (ID: 2140)
  Prédit: ' key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.369085431098938
    2. 'reverse' → logprob: -2.2440853118896484
    3. 'key' → logprob: -2.3690853118896484
    4. ' reverse' → logprob: -2.4940853118896484
    5. 'm' → logprob: -4.244085311889648
    6. ' m' → logprob: -4.494085311889648
    7. '   ' → logprob: -8.494085311889648
    8. '       ' → logprob: -9.369085311889648
    9. '      ' → logprob: -9.619085311889648
    10. '           ' → logprob: -9.619085311889648

Token 468: '=(' (ID: 9893)
  Prédit: '=m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=m' → logprob: -0.06591176241636276
    2. '=' → logprob: -3.0659117698669434
    3. '=lambda' → logprob: -4.190911769866943
    4. 'm' → logprob: -6.690911769866943
    5. '=x' → logprob: -7.815911769866943
    6. '=item' → logprob: -8.565911293029785
    7. '=(' → logprob: -9.440911293029785
    8. '=
' → logprob: -10.815911293029785
    9. ' =' → logprob: -10.940911293029785
    10. '=len' → logprob: -11.190911293029785

Token 469: 'item' (ID: 2057)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.3352147340774536
    2. 'lambda' → logprob: -1.8352147340774536
    3. 'len' → logprob: -3.210214614868164
    4. 'abs' → logprob: -3.960214614868164
    5. 'int' → logprob: -4.210214614868164
    6. 'm' → logprob: -4.210214614868164
    7. '(lambda' → logprob: -4.710214614868164
    8. 's' → logprob: -4.960214614868164
    9. 'x' → logprob: -5.585214614868164
    10. '(None' → logprob: -5.835214614868164

Token 470: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -4.3226136767771095e-05
    2. 'get' → logprob: -10.750042915344238
    3. '_' → logprob: -11.875042915344238
    4. 'getitem' → logprob: -12.250042915344238
    5. '_get' → logprob: -12.750042915344238
    6. 'g' → logprob: -13.125042915344238
    7. ')' → logprob: -14.375042915344238
    8. '__' → logprob: -14.500042915344238
    9. 'Getter' → logprob: -15.000042915344238
    10. 'finder' → logprob: -15.125042915344238

Token 471: '(m' (ID: 2145)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.22995389997959137
    2. '(' → logprob: -2.2299540042877197
    3. '0' → logprob: -3.1049540042877197
    4. '(m' → logprob: -3.1049540042877197
    5. '1' → logprob: -5.229953765869141
    6. '
' → logprob: -7.979953765869141
    7. '(lambda' → logprob: -7.979953765869141
    8. '   ' → logprob: -8.47995376586914
    9. '(
' → logprob: -8.47995376586914
    10. ')' → logprob: -8.47995376586914

Token 472: ')' (ID: 8)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.09811589866876602
    2. '))' → logprob: -2.723115921020508
    3. '))))' → logprob: -4.348115921020508
    4. ')' → logprob: -4.723115921020508
    5. ')),' → logprob: -6.848115921020508
    6. '(' → logprob: -6.973115921020508
    7. '0' → logprob: -7.098115921020508
    8. ' ' → logprob: -7.223115921020508
    9. ')));' → logprob: -7.348115921020508
    10. ')))
' → logprob: -7.848115921020508

Token 473: ' if' (ID: 538)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.2622988522052765
    2. '))' → logprob: -1.512298822402954
    3. ')' → logprob: -4.762299060821533
    4. '))))' → logprob: -8.012298583984375
    5. ' ' → logprob: -8.137298583984375
    6. ')));' → logprob: -8.387298583984375
    7. '),' → logprob: -8.762298583984375
    8. ' if' → logprob: -8.887298583984375
    9. '));' → logprob: -9.137298583984375
    10. '   ' → logprob: -9.262298583984375

Token 474: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5760570764541626
    2. ' m' → logprob: -0.8260570764541626
    3. ' ' → logprob: -10.576057434082031
    4. '(m' → logprob: -10.701057434082031
    5. '  ' → logprob: -11.701057434082031
    6. ')' → logprob: -11.701057434082031
    7. ' isinstance' → logprob: -11.701057434082031
    8. ' not' → logprob: -11.951057434082031
    9. '   ' → logprob: -12.326057434082031
    10. ' (' → logprob: -12.451057434082031

Token 475: ' !=' (ID: 1666)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.7630419731140137
    2. ' else' → logprob: -0.7630419731140137
    3. 'else' → logprob: -3.3880419731140137
    4. ')' → logprob: -3.5130419731140137
    5. 'is' → logprob: -6.388041973114014
    6. '!=' → logprob: -7.138041973114014
    7. ' ' → logprob: -7.513041973114014
    8. ' )' → logprob: -7.763041973114014
    9. '<|end|>' → logprob: -8.638042449951172
    10. ' !=' → logprob: -9.388042449951172

Token 476: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -7.576873758807778e-05
    2. ' -' → logprob: -9.500075340270996
    3. ' ' → logprob: -14.625075340270996
    4. '   ' → logprob: -15.125075340270996
    5. '  ' → logprob: -16.625076293945312
    6. '-m' → logprob: -17.250076293945312
    7. '(-' → logprob: -17.750076293945312
    8. 'None' → logprob: -17.750076293945312
    9. '```' → logprob: -17.875076293945312
    10. '−' → logprob: -18.000076293945312

Token 477: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10820074379444122
    2. 'm' → logprob: -2.733200788497925
    3. ')' → logprob: -3.858200788497925
    4. ' ' → logprob: -4.608200550079346
    5. ' m' → logprob: -5.858200550079346
    6. '-' → logprob: -6.358200550079346
    7. '0' → logprob: -7.358200550079346
    8. 'None' → logprob: -7.858200550079346
    9. ' else' → logprob: -8.983201026916504
    10. 'else' → logprob: -9.108201026916504

Token 478: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.02571757137775421
    2. 'else' → logprob: -3.9007174968719482
    3. ')' → logprob: -5.275717735290527
    4. ' ' → logprob: -11.025717735290527
    5. ' )' → logprob: -11.275717735290527
    6. '))' → logprob: -12.400717735290527
    7. '<|end|>' → logprob: -12.400717735290527
    8. '	else' → logprob: -12.775717735290527
    9. '),' → logprob: -13.775717735290527
    10. '        ' → logprob: -13.900717735290527

Token 479: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0019474374130368233
    2. 'lambda' → logprob: -7.126947402954102
    3. 'len' → logprob: -7.376947402954102
    4. ' None' → logprob: -8.626947402954102
    5. '(None' → logprob: -9.126947402954102
    6. 'abs' → logprob: -9.751947402954102
    7. 'int' → logprob: -10.001947402954102
    8. 'str' → logprob: -10.126947402954102
    9. 'id' → logprob: -10.751947402954102
    10. '(lambda' → logprob: -11.126947402954102

Token 480: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.2545241415500641
    2. ')))' → logprob: -1.5045241117477417
    3. ')' → logprob: -6.754524230957031
    4. '))(' → logprob: -7.254524230957031
    5. '))))' → logprob: -8.379524230957031
    6. ')));' → logprob: -9.379524230957031
    7. '),' → logprob: -9.504524230957031
    8. ')),' → logprob: -9.629524230957031
    9. '))
' → logprob: -9.879524230957031
    10. '));' → logprob: -10.004524230957031

Token 481: ')(' (ID: 4898)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04747811332345009
    2. ')(' → logprob: -3.297478199005127
    3. '))' → logprob: -5.047478199005127
    4. '))(' → logprob: -6.297478199005127
    5. ')(
' → logprob: -7.797478199005127
    6. '   ' → logprob: -8.422477722167969
    7. ')))' → logprob: -8.797477722167969
    8. '       ' → logprob: -9.672477722167969
    9. ')((' → logprob: -9.797477722167969
    10. ')
' → logprob: -10.422477722167969

Token 482: 'None' (ID: 8505)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02089056372642517
    2. ' s' → logprob: -4.270890712738037
    3. ')' → logprob: -6.020890712738037
    4. '[]' → logprob: -6.520890712738037
    5. 'x' → logprob: -6.645890712738037
    6. '[' → logprob: -7.770890712738037
    7. '[])' → logprob: -7.895890712738037
    8. '[s' → logprob: -7.895890712738037
    9. ' x' → logprob: -9.645890235900879
    10. '(s' → logprob: -9.895890235900879

Token 483: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.014684110297821e-06
    2. ')
' → logprob: -11.750008583068848
    3. ' )' → logprob: -14.750008583068848
    4. '<|end|>' → logprob: -15.125008583068848
    5. ')

' → logprob: -16.000009536743164
    6. ')return' → logprob: -16.000009536743164
    7. '))' → logprob: -16.375009536743164
    8. ')#' → logprob: -17.375009536743164
    9. '),' → logprob: -17.750009536743164
    10. '   ' → logprob: -17.750009536743164

Token 484: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14016035199165344
    2. '<|end|>' → logprob: -2.140160322189331
    3. '
' → logprob: -4.39016056060791
    4. ':' → logprob: -9.01516056060791
    5. ')
' → logprob: -9.01516056060791
    6. '<|end|>' → logprob: -9.39016056060791
    7. '\n' → logprob: -9.64016056060791
    8. '   ' → logprob: -10.01516056060791
    9. ' ' → logprob: -10.26516056060791
    10. '```' → logprob: -10.39016056060791

Token 485: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 486: ' bit' (ID: 3546)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9852586984634399
    2. ' ' → logprob: -1.86025869846344
    3. ' S' → logprob: -2.6102585792541504
    4. ' H' → logprob: -2.8602585792541504
    5. ' B' → logprob: -3.2352585792541504
    6. 'S' → logprob: -3.6102585792541504
    7. 'H' → logprob: -3.7352585792541504
    8. ' D' → logprob: -3.9852585792541504
    9. ' _' → logprob: -4.11025857925415
    10. ' T' → logprob: -4.29775857925415

Token 487: '_n' (ID: 2170)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.9537770748138428
    2. '_count' → logprob: -1.4537770748138428
    3. '_' → logprob: -1.5787770748138428
    4. 'count' → logprob: -2.3287770748138428
    5. 's' → logprob: -4.078777313232422
    6. ')' → logprob: -4.078777313232422
    7. 'wise' → logprob: -4.578777313232422
    8. '_length' → logprob: -5.203777313232422
    9. 'array' → logprob: -5.453777313232422
    10. 'mask' → logprob: -5.703777313232422

Token 488: '(self' (ID: 2402)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.2996549606323242
    2. 'umber' → logprob: -2.049654960632324
    3. '_' → logprob: -2.549654960632324
    4. 'ext' → logprob: -4.299654960632324
    5. '()' → logprob: -4.674654960632324
    6. '=' → logprob: -4.674654960632324
    7. ')' → logprob: -5.799654960632324
    8. 'ame' → logprob: -6.424654960632324
    9. '   ' → logprob: -6.424654960632324
    10. 'count' → logprob: -6.549654960632324

Token 489: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6954404711723328
    2. ')' → logprob: -1.3204405307769775
    3. '_' → logprob: -2.4454405307769775
    4. ':' → logprob: -3.4454405307769775
    5. '(' → logprob: -3.5704405307769775
    6. '[' → logprob: -4.320440292358398
    7. 'umber' → logprob: -4.570440292358398
    8. '<|end|>' → logprob: -5.070440292358398
    9. 's' → logprob: -5.320440292358398
    10. '=' → logprob: -5.445440292358398

Token 490: ' a' (ID: 261)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.37464505434036255
    2. 'self' → logprob: -2.1246449947357178
    3. ' n' → logprob: -2.2496449947357178
    4. ' self' → logprob: -2.9996449947357178
    5. 'x' → logprob: -3.7496449947357178
    6. ' ' → logprob: -5.249645233154297
    7. ')' → logprob: -5.999645233154297
    8. ' x' → logprob: -6.249645233154297
    9. 's' → logprob: -6.499645233154297
    10. 'N' → logprob: -7.124645233154297

Token 491: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08396429568529129
    2. ',' → logprob: -2.7089643478393555
    3. '):
' → logprob: -4.4589643478393555
    4. ')' → logprob: -6.8339643478393555
    5. '[' → logprob: -7.7089643478393555
    6. 'self' → logprob: -8.708964347839355
    7. '   ' → logprob: -8.958964347839355
    8. ':' → logprob: -8.958964347839355
    9. '[]):' → logprob: -9.208964347839355
    10. ',
' → logprob: -9.958964347839355

Token 492: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.9891061186790466
    2. 'n' → logprob: -0.9891061186790466
    3. ' n' → logprob: -2.1141061782836914
    4. ' b' → logprob: -2.3641061782836914
    5. 'k' → logprob: -4.864106178283691
    6. ')' → logprob: -4.989106178283691
    7. 'N' → logprob: -5.364106178283691
    8. 'x' → logprob: -5.864106178283691
    9. ' ' → logprob: -6.114106178283691
    10. 'i' → logprob: -6.114106178283691

Token 493: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023476185277104378
    2. '):
' → logprob: -3.7734761238098145
    3. ',' → logprob: -8.648476600646973
    4. ')' → logprob: -11.148476600646973
    5. '   ' → logprob: -11.523476600646973
    6. '=' → logprob: -11.648476600646973
    7. ':' → logprob: -12.148476600646973
    8. '):
' → logprob: -12.398476600646973
    9. ' ):' → logprob: -12.398476600646973
    10. '       ' → logprob: -13.273476600646973

Token 494: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37423455715179443
    2. ':' → logprob: -1.4992345571517944
    3. ' :' → logprob: -3.374234676361084
    4. '   ' → logprob: -3.874234676361084
    5. ':
' → logprob: -4.249234676361084
    6. '):' → logprob: -5.374234676361084
    7. ' :
' → logprob: -5.499234676361084
    8. '    ' → logprob: -6.124234676361084
    9. ' return' → logprob: -6.624234676361084
    10. ':return' → logprob: -6.749234676361084

Token 495: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1278838813304901
    2. ' return' → logprob: -2.1278839111328125
    3. '   ' → logprob: -7.6278839111328125
    4. 'a' → logprob: -8.502883911132812
    5. 'r' → logprob: -9.252883911132812
    6. '       ' → logprob: -9.627883911132812
    7. ' a' → logprob: -10.377883911132812
    8. 'ret' → logprob: -11.002883911132812
    9. 'for' → logprob: -11.752883911132812
    10. '    ' → logprob: -11.877883911132812

Token 496: ' bool' (ID: 3792)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05705351009964943
    2. ' a' → logprob: -3.182053565979004
    3. 'or' → logprob: -4.807053565979004
    4. ' or' → logprob: -6.307053565979004
    5. '(a' → logprob: -6.682053565979004
    6. 'mul' → logprob: -7.057053565979004
    7. 'b' → logprob: -7.932053565979004
    8. 'bin' → logprob: -8.057053565979004
    9. '[' → logprob: -8.182053565979004
    10. '[a' → logprob: -8.307053565979004

Token 497: '(list' (ID: 13116)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.010195991024374962
    2. '((' → logprob: -5.260196208953857
    3. 'a' → logprob: -5.385196208953857
    4. '(' → logprob: -8.0101957321167
    5. '(((' → logprob: -10.8851957321167
    6. '(b' → logprob: -12.5101957321167
    7. ' (' → logprob: -12.7601957321167
    8. '(int' → logprob: -13.2601957321167
    9. ' a' → logprob: -13.3851957321167
    10. '   ' → logprob: -14.0101957321167

Token 498: '(map' (ID: 16946)
  Prédit: '(filter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(filter' → logprob: -0.5216509699821472
    2. '(chain' → logprob: -2.021651029586792
    3. '(map' → logprob: -2.521651029586792
    4. '(set' → logprob: -2.521651029586792
    5. '(a' → logprob: -3.021651029586792
    6. '(bin' → logprob: -3.271651029586792
    7. '(range' → logprob: -4.521650791168213
    8. '(st' → logprob: -5.396650791168213
    9. '(is' → logprob: -6.021650791168213
    10. '(bit' → logprob: -6.271650791168213

Token 499: '(lambda' (ID: 43341)
  Prédit: '(or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(or' → logprob: -0.04218605160713196
    2. '(lambda' → logprob: -3.2921860218048096
    3. 'or' → logprob: -6.667186260223389
    4. '(bin' → logprob: -7.042186260223389
    5. '(and' → logprob: -7.417186260223389
    6. '(operator' → logprob: -7.667186260223389
    7. '(' → logprob: -8.04218578338623
    8. '(int' → logprob: -9.04218578338623
    9. ' or' → logprob: -9.16718578338623
    10. '(part' → logprob: -9.66718578338623

Token 500: ' ab' (ID: 692)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.07576669752597809
    2. 'lambda' → logprob: -3.8257668018341064
    3. ' or' → logprob: -4.075766563415527
    4. 'int' → logprob: -4.325766563415527
    5. 'a' → logprob: -5.450766563415527
    6. '(lambda' → logprob: -5.450766563415527
    7. 'add' → logprob: -5.700766563415527
    8. '   ' → logprob: -5.950766563415527
    9. 'xor' → logprob: -6.200766563415527
    10. 'mul' → logprob: -6.825766563415527

Token 501: ':' (ID: 25)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.7683539986610413
    2. 'lambda' → logprob: -1.5183539390563965
    3. ',' → logprob: -1.6433539390563965
    4. ':' → logprob: -2.6433539390563965
    5. '=lambda' → logprob: -3.7683539390563965
    6. 'ab' → logprob: -4.7683539390563965
    7. '   ' → logprob: -5.0183539390563965
    8. ',a' → logprob: -5.5183539390563965
    9. 'ambda' → logprob: -6.0183539390563965
    10. 'a' → logprob: -6.5183539390563965

Token 502: ' (' (ID: 350)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.4153074026107788
    2. 'a' → logprob: -2.0403075218200684
    3. 'ab' → logprob: -2.1653075218200684
    4. ' or' → logprob: -3.4153075218200684
    5. 'and' → logprob: -3.4153075218200684
    6. 'lambda' → logprob: -5.040307521820068
    7. ' ab' → logprob: -5.415307521820068
    8. '(lambda' → logprob: -5.790307521820068
    9. '(a' → logprob: -5.915307521820068
    10. 'int' → logprob: -5.915307521820068

Token 503: 'ab' (ID: 378)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0545841455459595
    2. 'or' → logprob: -1.0545841455459595
    3. 'ab' → logprob: -1.4295841455459595
    4. 'lambda' → logprob: -4.05458402633667
    5. 'and' → logprob: -4.42958402633667
    6. 'int' → logprob: -4.80458402633667
    7. ' or' → logprob: -4.80458402633667
    8. '(lambda' → logprob: -5.30458402633667
    9. '(a' → logprob: -5.67958402633667
    10. ' ab' → logprob: -6.17958402633667

Token 504: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4992995262145996
    2. 'a' → logprob: -1.4992995262145996
    3. '&' → logprob: -1.8742995262145996
    4. ' &' → logprob: -1.8742995262145996
    5. 'and' → logprob: -2.9992995262145996
    6. 'or' → logprob: -3.1242995262145996
    7. '   ' → logprob: -3.9992995262145996
    8. '&a' → logprob: -3.9992995262145996
    9. '(a' → logprob: -3.9992995262145996
    10. ' or' → logprob: -4.1242995262146

Token 505: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10261259973049164
    2. 'a' → logprob: -2.3526124954223633
    3. '[' → logprob: -6.977612495422363
    4. 'and' → logprob: -7.727612495422363
    5. '1' → logprob: -8.477612495422363
    6. 'or' → logprob: -8.727612495422363
    7. 'b' → logprob: -8.977612495422363
    8. '&' → logprob: -9.477612495422363
    9. '_' → logprob: -9.477612495422363
    10. ' ' → logprob: -9.477612495422363

Token 506: ']' (ID: 60)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '&' → logprob: -0.22362296283245087
    2. '|' → logprob: -2.223623037338257
    3. ' &' → logprob: -2.473623037338257
    4. '>>' → logprob: -6.348622798919678
    5. ' |' → logprob: -6.348622798919678
    6. ')' → logprob: -6.723622798919678
    7. ')&' → logprob: -6.848622798919678
    8. 'and' → logprob: -7.598622798919678
    9. '&a' → logprob: -8.223623275756836
    10. 'b' → logprob: -8.348623275756836

Token 507: ' >>' (ID: 6832)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '&' → logprob: -0.41638466715812683
    2. '|' → logprob: -1.1663846969604492
    3. ' &' → logprob: -3.791384696960449
    4. ' |' → logprob: -6.041384696960449
    5. ',' → logprob: -6.916384696960449
    6. 'and' → logprob: -7.041384696960449
    7. 'or' → logprob: -7.791384696960449
    8. '&a' → logprob: -7.791384696960449
    9. ' or' → logprob: -8.16638469696045
    10. '&,' → logprob: -8.66638469696045

Token 508: ' ab' (ID: 692)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.09348153322935104
    2. '1' → logprob: -2.4684815406799316
    3. ' ab' → logprob: -5.718481540679932
    4. ' ' → logprob: -6.968481540679932
    5. 'b' → logprob: -9.093481063842773
    6. '0' → logprob: -10.218481063842773
    7. 'a' → logprob: -11.343481063842773
    8. '7' → logprob: -11.343481063842773
    9. '   ' → logprob: -11.343481063842773
    10. '(' → logprob: -11.343481063842773

Token 509: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004961800761520863
    2. '[' → logprob: -5.379961967468262
    3. '0' → logprob: -8.754961967468262
    4. ' ' → logprob: -9.129961967468262
    5. '   ' → logprob: -10.879961967468262
    6. ',' → logprob: -11.504961967468262
    7. '
' → logprob: -11.629961967468262
    8. ')' → logprob: -11.754961967468262
    9. '=' → logprob: -12.879961967468262
    10. '  ' → logprob: -13.004961967468262

Token 510: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007081442163325846
    2. 'b' → logprob: -7.500708103179932
    3. ' ' → logprob: -9.50070858001709
    4. '0' → logprob: -9.87570858001709
    5. '   ' → logprob: -12.00070858001709
    6. '[' → logprob: -12.56320858001709
    7. 'bit' → logprob: -12.75070858001709
    8. ' b' → logprob: -12.81320858001709
    9. '```' → logprob: -12.87570858001709
    10. 'a' → logprob: -13.25070858001709

Token 511: ']' (ID: 60)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09212956577539444
    2. '),' → logprob: -2.8421294689178467
    3. ')' → logprob: -4.217129707336426
    4. '[' → logprob: -4.842129707336426
    5. ' ,' → logprob: -5.342129707336426
    6. ')[' → logprob: -7.842129707336426
    7. ',a' → logprob: -8.092129707336426
    8. ')&' → logprob: -8.217129707336426
    9. ',b' → logprob: -8.467129707336426
    10. '       ' → logprob: -8.967129707336426

Token 512: ' &' (ID: 827)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8001313209533691
    2. ')' → logprob: -1.4251313209533691
    3. ')&' → logprob: -2.300131320953369
    4. '&' → logprob: -2.425131320953369
    5. ' &' → logprob: -2.425131320953369
    6. '&a' → logprob: -4.675131320953369
    7. ' ,' → logprob: -5.300131320953369
    8. 'and' → logprob: -5.425131320953369
    9. '),' → logprob: -5.675131320953369
    10. '&,' → logprob: -5.675131320953369

Token 513: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.025826551020145416
    2. 'a' → logprob: -4.025826454162598
    3. ' ' → logprob: -5.275826454162598
    4. 'b' → logprob: -6.525826454162598
    5. 'ab' → logprob: -7.025826454162598
    6. ' a' → logprob: -9.775826454162598
    7. '7' → logprob: -10.150826454162598
    8. '31' → logprob: -10.525826454162598
    9. '0' → logprob: -10.900826454162598
    10. ' b' → logprob: -11.525826454162598

Token 514: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003720503766089678
    2. 'a' → logprob: -5.753720283508301
    3. ' ' → logprob: -7.628720283508301
    4. 'b' → logprob: -10.0037202835083
    5. ' a' → logprob: -11.7537202835083
    6. '0' → logprob: -13.1287202835083
    7. ' b' → logprob: -14.8787202835083
    8. '   ' → logprob: -15.3787202835083
    9. 'ab' → logprob: -16.128721237182617
    10. '7' → logprob: -16.128721237182617

Token 515: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021861877758055925
    2. ',a' → logprob: -6.752186298370361
    3. '),' → logprob: -7.877186298370361
    4. ' ,' → logprob: -8.252185821533203
    5. ',[' → logprob: -8.377185821533203
    6. ',b' → logprob: -9.377185821533203
    7. ')' → logprob: -11.752185821533203
    8. '   ' → logprob: -11.877185821533203
    9. ',list' → logprob: -11.877185821533203
    10. 'a' → logprob: -12.377185821533203

Token 516: ' >' (ID: 1424)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012358223320916295
    2. ',(' → logprob: -7.3762359619140625
    3. ' ,' → logprob: -8.751235961914062
    4. ',[' → logprob: -9.001235961914062
    5. ',a' → logprob: -9.126235961914062
    6. '(a' → logprob: -9.126235961914062
    7. ',b' → logprob: -10.501235961914062
    8. '   ' → logprob: -10.501235961914062
    9. '(' → logprob: -11.126235961914062
    10. '((' → logprob: -11.376235961914062

Token 517: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0034095358569175005
    2. ' ' → logprob: -5.753409385681152
    3. '1' → logprob: -8.878409385681152
    4. 'ab' → logprob: -9.753409385681152
    5. 'a' → logprob: -10.878409385681152
    6. 'b' → logprob: -11.253409385681152
    7. '   ' → logprob: -14.753409385681152
    8. '  ' → logprob: -14.878409385681152
    9. ' a' → logprob: -15.503409385681152
    10. ' ab' → logprob: -15.503409385681152

Token 518: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002579940017312765
    2. ' ' → logprob: -6.002580165863037
    3. 'a' → logprob: -9.752579689025879
    4. '=' → logprob: -10.752579689025879
    5. 'b' → logprob: -10.877579689025879
    6. '1' → logprob: -12.627579689025879
    7. '  ' → logprob: -14.252579689025879
    8. 'ab' → logprob: -14.752579689025879
    9. '   ' → logprob: -15.127579689025879
    10. '<|end|>' → logprob: -15.877579689025879

Token 519: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004604334011673927
    2. ',[' → logprob: -6.129604339599609
    3. ',(' → logprob: -6.629604339599609
    4. ' ,' → logprob: -7.504604339599609
    5. ',a' → logprob: -8.00460433959961
    6. ',b' → logprob: -9.50460433959961
    7. '   ' → logprob: -10.00460433959961
    8. '),' → logprob: -11.50460433959961
    9. '[' → logprob: -11.50460433959961
    10. ' ,[' → logprob: -11.50460433959961

Token 520: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.004633164964616299
    2. '[(' → logprob: -6.004632949829102
    3. ' zip' → logprob: -6.379632949829102
    4. 'list' → logprob: -8.629632949829102
    5. 'enumer' → logprob: -9.004632949829102
    6. 'per' → logprob: -10.129632949829102
    7. '(zip' → logprob: -10.254632949829102
    8. 'range' → logprob: -11.004632949829102
    9. 'chain' → logprob: -11.379632949829102
    10. ' [(' → logprob: -11.379632949829102

Token 521: '([' (ID: 5194)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -2.8206473871250637e-05
    2. '([' → logprob: -11.000028610229492
    3. '((' → logprob: -12.250028610229492
    4. '(' → logprob: -12.875028610229492
    5. 'a' → logprob: -12.875028610229492
    6. '(range' → logprob: -13.750028610229492
    7. '(
' → logprob: -16.000028610229492
    8. '[a' → logprob: -16.625028610229492
    9. '(b' → logprob: -16.875028610229492
    10. '(list' → logprob: -17.125028610229492

Token 522: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.8206473871250637e-05
    2. ' a' → logprob: -10.750028610229492
    3. '[a' → logprob: -12.250028610229492
    4. '(a' → logprob: -13.875028610229492
    5. '[' → logprob: -14.750028610229492
    6. 'b' → logprob: -15.250028610229492
    7. ')a' → logprob: -16.250028610229492
    8. '   ' → logprob: -16.250028610229492
    9. '	a' → logprob: -17.250028610229492
    10. ' [' → logprob: -17.375028610229492

Token 523: '],' (ID: 2155)
  Prédit: ',b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.6356568932533264
    2. ',' → logprob: -0.7606568932533264
    3. ' ,' → logprob: -6.260656833648682
    4. 'b' → logprob: -7.135656833648682
    5. '[' → logprob: -9.51065731048584
    6. ' b' → logprob: -9.76065731048584
    7. '   ' → logprob: -9.88565731048584
    8. '],[' → logprob: -10.13565731048584
    9. ',[' → logprob: -10.26065731048584
    10. '],' → logprob: -10.76065731048584

Token 524: ' [' (ID: 723)
  Prédit: '[b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.015338235534727573
    2. 'repeat' → logprob: -4.89033842086792
    3. '[' → logprob: -5.26533842086792
    4. ' [' → logprob: -6.26533842086792
    5. 'range' → logprob: -8.140337944030762
    6. '[count' → logprob: -9.140337944030762
    7. '[a' → logprob: -9.140337944030762
    8. 'b' → logprob: -10.015337944030762
    9. 're' → logprob: -10.765337944030762
    10. ' repeat' → logprob: -11.015337944030762

Token 525: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0003336777735967189
    2. ' b' → logprob: -8.375333786010742
    3. '   ' → logprob: -9.750333786010742
    4. '0' → logprob: -10.750333786010742
    5. '  ' → logprob: -12.000333786010742
    6. ' ' → logprob: -12.625333786010742
    7. '    ' → logprob: -12.875333786010742
    8. '       ' → logprob: -13.000333786010742
    9. '1' → logprob: -13.375333786010742
    10. '
' → logprob: -13.875333786010742

Token 526: ']))' (ID: 20259)
  Prédit: ']))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.557144284248352
    2. '])))' → logprob: -0.932144284248352
    3. '0' → logprob: -4.0571441650390625
    4. ']' → logprob: -4.6821441650390625
    5. '[' → logprob: -5.5571441650390625
    6. '))))' → logprob: -7.0571441650390625
    7. ',' → logprob: -7.8071441650390625
    8. '])))
' → logprob: -8.057144165039062
    9. '])[' → logprob: -8.182144165039062
    10. '])),' → logprob: -8.682144165039062

Token 527: ')[' (ID: 13637)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -1.213294506072998
    2. ')[' → logprob: -1.213294506072998
    3. '[' → logprob: -1.338294506072998
    4. '))[' → logprob: -1.963294506072998
    5. ')))' → logprob: -7.088294506072998
    6. ')' → logprob: -7.213294506072998
    7. '0' → logprob: -7.338294506072998
    8. ').' → logprob: -8.588294982910156
    9. '   ' → logprob: -8.963294982910156
    10. '       ' → logprob: -9.588294982910156

Token 528: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00013858173042535782
    2. ' ' → logprob: -9.000138282775879
    3. '-' → logprob: -11.625138282775879
    4. '   ' → logprob: -13.625138282775879
    5. '
' → logprob: -14.062638282775879
    6. '[' → logprob: -14.125138282775879
    7. ' -' → logprob: -14.187638282775879
    8. ':' → logprob: -14.250138282775879
    9. ')' → logprob: -14.562638282775879
    10. '(' → logprob: -15.187638282775879

Token 529: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005245379637926817
    2. '))' → logprob: -5.255245208740234
    3. '])' → logprob: -12.505245208740234
    4. ')))' → logprob: -12.880245208740234
    5. ' )' → logprob: -13.130245208740234
    6. '})' → logprob: -13.880245208740234
    7. ')}' → logprob: -14.380245208740234
    8. ')
' → logprob: -14.630245208740234
    9. ')`' → logprob: -15.130245208740234
    10. '())' → logprob: -15.380245208740234

Token 530: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12875896692276
    2. ':' → logprob: -2.2537589073181152
    3. '<|end|>' → logprob: -4.628758907318115
    4. '(' → logprob: -6.253758907318115
    5. '
' → logprob: -6.503758907318115
    6. '.' → logprob: -7.503758907318115
    7. '[' → logprob: -7.628758907318115
    8. ',' → logprob: -8.003759384155273
    9. '```' → logprob: -8.128759384155273
    10. '):' → logprob: -8.628759384155273

Token 531: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 532: ' bit' (ID: 3546)
  Prédit: ' bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bit' → logprob: -1.5855698585510254
    2. 'bit' → logprob: -2.2105698585510254
    3. ' B' → logprob: -2.3355698585510254
    4. 'B' → logprob: -3.0855698585510254
    5. ' DFS' → logprob: -3.6480698585510254
    6. ' BFS' → logprob: -3.8355698585510254
    7. ' DP' → logprob: -4.148069858551025
    8. ' ' → logprob: -4.273069858551025
    9. ' BF' → logprob: -4.273069858551025
    10. ' pop' → logprob: -4.335569858551025

Token 533: '_o' (ID: 28960)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.007758053485304117
    2. '_n' → logprob: -4.882758140563965
    3. '(' → logprob: -10.507758140563965
    4. '_,' → logprob: -10.507758140563965
    5. '```' → logprob: -10.882758140563965
    6. '_
' → logprob: -11.382758140563965
    7. ' _' → logprob: -11.757758140563965
    8. '_(' → logprob: -11.882758140563965
    9. '_count' → logprob: -12.257758140563965
    10. '(n' → logprob: -12.382758140563965

Token 534: '(self' (ID: 2402)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.038992978632450104
    2. '(self' → logprob: -3.5389928817749023
    3. 'f' → logprob: -5.538992881774902
    4. 'R' → logprob: -6.413992881774902
    5. '(r' → logprob: -6.788992881774902
    6. '_' → logprob: -7.538992881774902
    7. '(' → logprob: -7.788992881774902
    8. 'p' → logprob: -8.788992881774902
    9. '_r' → logprob: -8.788992881774902
    10. 'ut' → logprob: -8.788992881774902

Token 535: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028916557785123587
    2. '(self' → logprob: -6.752891540527344
    3. 'self' → logprob: -7.377891540527344
    4. '_,' → logprob: -8.127891540527344
    5. ',self' → logprob: -8.127891540527344
    6. ' ,' → logprob: -8.752891540527344
    7. 'a' → logprob: -9.377891540527344
    8. '   ' → logprob: -10.002891540527344
    9. ',a' → logprob: -10.377891540527344
    10. ')' → logprob: -10.502891540527344

Token 536: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.009920408017933369
    2. ' a' → logprob: -4.634920597076416
    3. 'self' → logprob: -9.384920120239258
    4. 'lambda' → logprob: -11.134920120239258
    5. ' self' → logprob: -11.259920120239258
    6. ' lambda' → logprob: -11.509920120239258
    7. ')' → logprob: -11.884920120239258
    8. ' ' → logprob: -12.009920120239258
    9. '   ' → logprob: -12.509920120239258
    10. '*' → logprob: -12.634920120239258

Token 537: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002150380751118064
    2. ',b' → logprob: -6.877150535583496
    3. '|' → logprob: -7.627150535583496
    4. ' ,' → logprob: -7.752150535583496
    5. ',a' → logprob: -8.877150535583496
    6. ')' → logprob: -11.127150535583496
    7. 'a' → logprob: -11.877150535583496
    8. '<|end|>' → logprob: -12.127150535583496
    9. '  ' → logprob: -12.252150535583496
    10. '[' → logprob: -12.252150535583496

Token 538: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0005604196921922266
    2. ' b' → logprob: -7.500560283660889
    3. '[' → logprob: -12.500560760498047
    4. '1' → logprob: -14.250560760498047
    5. '...' → logprob: -14.625560760498047
    6. ' ' → logprob: -14.750560760498047
    7. 'a' → logprob: -14.875560760498047
    8. '  ' → logprob: -15.125560760498047
    9. '   ' → logprob: -15.375560760498047
    10. '7' → logprob: -15.375560760498047

Token 539: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2272801250219345
    2. '):' → logprob: -1.6022801399230957
    3. '   ' → logprob: -6.852280139923096
    4. ',' → logprob: -7.852280139923096
    5. '):
' → logprob: -9.227279663085938
    6. ')' → logprob: -9.352279663085938
    7. '       ' → logprob: -9.602279663085938
    8. '  ' → logprob: -9.977279663085938
    9. ' ):
' → logprob: -10.102279663085938
    10. ' ):' → logprob: -10.352279663085938

Token 540: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6329857110977173
    2. 'return' → logprob: -1.3829857110977173
    3. '=' → logprob: -2.1329855918884277
    4. ' return' → logprob: -2.6329855918884277
    5. '   ' → logprob: -4.132985591888428
    6. '(' → logprob: -5.507985591888428
    7. ' =' → logprob: -5.882985591888428
    8. ':' → logprob: -7.007985591888428
    9. ':return' → logprob: -7.507985591888428
    10. ')' → logprob: -7.757985591888428

Token 541: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0007392307161353528
    2. ' return' → logprob: -7.500739097595215
    3. 'a' → logprob: -9.500739097595215
    4. 'or' → logprob: -9.500739097595215
    5. 'def' → logprob: -11.500739097595215
    6. '       ' → logprob: -11.750739097595215
    7. '   ' → logprob: -11.875739097595215
    8. '	return' → logprob: -13.500739097595215
    9. '           ' → logprob: -14.000739097595215
    10. 'b' → logprob: -14.000739097595215

Token 542: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.7524633407592773
    2. 'a' → logprob: -1.0024633407592773
    3. '(a' → logprob: -2.3774633407592773
    4. ' bool' → logprob: -3.6274633407592773
    5. ' a' → logprob: -3.8774633407592773
    6. 'or' → logprob: -4.377463340759277
    7. ' (' → logprob: -5.252463340759277
    8. '((' → logprob: -6.752463340759277
    9. ' or' → logprob: -7.127463340759277
    10. '(bool' → logprob: -7.127463340759277

Token 543: '(list' (ID: 13116)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0019626514986157417
    2. '((' → logprob: -6.376962661743164
    3. '(list' → logprob: -9.376962661743164
    4. '(' → logprob: -9.376962661743164
    5. '([' → logprob: -9.626962661743164
    6. 'a' → logprob: -11.376962661743164
    7. '(((' → logprob: -11.876962661743164
    8. '([(' → logprob: -14.001962661743164
    9. '(bool' → logprob: -14.126962661743164
    10. '(int' → logprob: -14.251962661743164

Token 544: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -4.0722858102526516e-05
    2. '(' → logprob: -10.375041007995605
    3. 'map' → logprob: -11.750041007995605
    4. '(
' → logprob: -14.875041007995605
    5. '(chain' → logprob: -15.125041007995605
    6. '(filter' → logprob: -15.250041007995605
    7. '(zip' → logprob: -15.375041007995605
    8. '	map' → logprob: -16.62504005432129
    9. '(lambda' → logprob: -16.62504005432129
    10. ',map' → logprob: -16.75004005432129

Token 545: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -6.0391463193809614e-05
    2. '(' → logprob: -9.750060081481934
    3. '(operator' → logprob: -14.250060081481934
    4. 'lambda' → logprob: -14.375060081481934
    5. '(
' → logprob: -14.625060081481934
    6. '(zip' → logprob: -16.00006103515625
    7. '(or' → logprob: -16.75006103515625
    8. '=lambda' → logprob: -17.00006103515625
    9. '(ab' → logprob: -17.75006103515625
    10. '(range' → logprob: -18.00006103515625

Token 546: ' ab' (ID: 692)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.004764041863381863
    2. 'lambda' → logprob: -6.004764080047607
    3. '(ab' → logprob: -6.129764080047607
    4. '(' → logprob: -9.75476360321045
    5. 'ab' → logprob: -10.00476360321045
    6. ' lambda' → logprob: -12.87976360321045
    7. '=lambda' → logprob: -13.12976360321045
    8. '   ' → logprob: -15.75476360321045
    9. '(
' → logprob: -16.004764556884766
    10. ' (' → logprob: -16.129764556884766

Token 547: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017319408943876624
    2. '(lambda' → logprob: -6.626731872558594
    3. '=lambda' → logprob: -8.501731872558594
    4. '[' → logprob: -9.501731872558594
    5. ' :' → logprob: -10.126731872558594
    6. '(ab' → logprob: -10.876731872558594
    7. '([' → logprob: -11.126731872558594
    8. 'lambda' → logprob: -11.251731872558594
    9. '(' → logprob: -11.376731872558594
    10. '=' → logprob: -11.626731872558594

Token 548: ' ((' (ID: 3536)
  Prédit: '(ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ab' → logprob: -0.030204789713025093
    2. '(' → logprob: -4.155204772949219
    3. ' (' → logprob: -5.155204772949219
    4. 'ab' → logprob: -5.530204772949219
    5. '(or' → logprob: -6.030204772949219
    6. 'or' → logprob: -6.905204772949219
    7. ' ab' → logprob: -7.405204772949219
    8. ' or' → logprob: -8.780204772949219
    9. '(add' → logprob: -10.155204772949219
    10. ' ' → logprob: -10.530204772949219

Token 549: 'ab' (ID: 378)
  Prédit: 'ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.000981839606538415
    2. 'a' → logprob: -7.25098180770874
    3. ' ab' → logprob: -8.500982284545898
    4. '[' → logprob: -10.375982284545898
    5. 'b' → logprob: -11.125982284545898
    6. '   ' → logprob: -11.750982284545898
    7. ' ' → logprob: -13.250982284545898
    8. '0' → logprob: -13.375982284545898
    9. '    ' → logprob: -13.375982284545898
    10. ' a' → logprob: -13.500982284545898

Token 550: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0011771318968385458
    2. '0' → logprob: -6.7511773109436035
    3. ' ' → logprob: -13.501176834106445
    4. '   ' → logprob: -13.876176834106445
    5. '[
' → logprob: -13.876176834106445
    6. ' [' → logprob: -14.376176834106445
    7. '(' → logprob: -14.501176834106445
    8. ')' → logprob: -14.626176834106445
    9. ')[' → logprob: -15.126176834106445
    10. '#' → logprob: -15.251176834106445

Token 551: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.024604277219623e-05
    2. '[' → logprob: -11.125040054321289
    3. ' ' → logprob: -11.500040054321289
    4. '1' → logprob: -11.625040054321289
    5. 'a' → logprob: -12.937540054321289
    6. '   ' → logprob: -14.187540054321289
    7. 'b' → logprob: -15.187540054321289
    8. '
' → logprob: -15.687540054321289
    9. '```' → logprob: -15.750040054321289
    10. '  ' → logprob: -15.812540054321289

Token 552: ']' (ID: 60)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.15277141332626343
    2. ' |' → logprob: -2.777771472930908
    3. '>>' → logprob: -3.277771472930908
    4. ')' → logprob: -4.027771472930908
    5. '[' → logprob: -4.402771472930908
    6. ' >>' → logprob: -5.277771472930908
    7. ']' → logprob: -5.777771472930908
    8. ' ' → logprob: -6.777771472930908
    9. 'or' → logprob: -7.527771472930908
    10. ' or' → logprob: -7.902771472930908

Token 553: ' >>' (ID: 6832)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.01745656505227089
    2. ' |' → logprob: -4.642456531524658
    3. '>>' → logprob: -5.267456531524658
    4. 'or' → logprob: -7.017456531524658
    5. '&' → logprob: -8.142457008361816
    6. ')' → logprob: -8.142457008361816
    7. '[' → logprob: -8.142457008361816
    8. ' >>' → logprob: -8.142457008361816
    9. ' or' → logprob: -8.267457008361816
    10. ' ' → logprob: -10.142457008361816

Token 554: ' ab' (ID: 692)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.0001017551330733113
    2. ' ab' → logprob: -9.375102043151855
    3. '1' → logprob: -11.375102043151855
    4. '7' → logprob: -13.000102043151855
    5. 'b' → logprob: -13.250102043151855
    6. '2' → logprob: -15.375102043151855
    7. '(ab' → logprob: -15.500102043151855
    8. '9' → logprob: -15.750102043151855
    9. '0' → logprob: -15.875102043151855
    10. '8' → logprob: -16.00010108947754

Token 555: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006087580695748329
    2. '[' → logprob: -5.131087779998779
    3. ' ' → logprob: -9.006087303161621
    4. '   ' → logprob: -11.756087303161621
    5. '0' → logprob: -12.006087303161621
    6. '
' → logprob: -12.506087303161621
    7. '][' → logprob: -12.506087303161621
    8. ')' → logprob: -13.443587303161621
    9. '     ' → logprob: -14.006087303161621
    10. 'b' → logprob: -14.131087303161621

Token 556: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00035274302354082465
    2. 'ab' → logprob: -8.25035285949707
    3. ' ' → logprob: -9.87535285949707
    4. '0' → logprob: -11.62535285949707
    5. '   ' → logprob: -11.75035285949707
    6. '[' → logprob: -12.00035285949707
    7. ' ab' → logprob: -12.25035285949707
    8. 'b' → logprob: -13.00035285949707
    9. '
' → logprob: -13.62535285949707
    10. '    ' → logprob: -13.81285285949707

Token 557: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08023478835821152
    2. ']' → logprob: -2.9552347660064697
    3. ')&' → logprob: -4.205235004425049
    4. '&' → logprob: -5.830235004425049
    5. '])' → logprob: -5.830235004425049
    6. ' )' → logprob: -6.455235004425049
    7. ' &' → logprob: -6.830235004425049
    8. '|' → logprob: -7.330235004425049
    9. ']&' → logprob: -7.330235004425049
    10. ' |' → logprob: -9.95523452758789

Token 558: ' &' (ID: 827)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.14980144798755646
    2. ')' → logprob: -2.64980149269104
    3. ' |' → logprob: -3.14980149269104
    4. '&' → logprob: -3.89980149269104
    5. ' &' → logprob: -5.899801254272461
    6. ')|' → logprob: -7.149801254272461
    7. ')&' → logprob: -7.274801254272461
    8. 'or' → logprob: -7.399801254272461
    9. ' )' → logprob: -8.399801254272461
    10. ' or' → logprob: -8.649801254272461

Token 559: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00041970983147621155
    2. ' ' → logprob: -7.875419616699219
    3. 'ab' → logprob: -10.750419616699219
    4. 'b' → logprob: -12.000419616699219
    5. '0' → logprob: -13.000419616699219
    6. '(' → logprob: -13.000419616699219
    7. 'a' → logprob: -13.125419616699219
    8. '   ' → logprob: -13.375419616699219
    9. '7' → logprob: -14.000419616699219
    10. '2' → logprob: -14.375419616699219

Token 560: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005094261723570526
    2. ' ' → logprob: -7.625509262084961
    3. '   ' → logprob: -12.375509262084961
    4. '3' → logprob: -12.875509262084961
    5. '0' → logprob: -13.063009262084961
    6. 'or' → logprob: -13.125509262084961
    7. '2' → logprob: -13.313009262084961
    8. '(' → logprob: -13.500509262084961
    9. '  ' → logprob: -13.563009262084961
    10. '7' → logprob: -13.875509262084961

Token 561: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0738796666264534
    2. ')>' → logprob: -3.3238797187805176
    3. '),' → logprob: -4.448879718780518
    4. ' )' → logprob: -4.948879718780518
    5. '|' → logprob: -5.198879718780518
    6. ')==' → logprob: -5.198879718780518
    7. ',' → logprob: -6.948879718780518
    8. ')!=' → logprob: -6.948879718780518
    9. ')|' → logprob: -7.073879718780518
    10. ' |' → logprob: -7.573879718780518

Token 562: ' ==' (ID: 951)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '|' → logprob: -0.06049233302474022
    2. 'or' → logprob: -3.9354922771453857
    3. ' |' → logprob: -4.435492515563965
    4. ',' → logprob: -4.435492515563965
    5. ' or' → logprob: -5.185492515563965
    6. '==' → logprob: -5.810492515563965
    7. '>' → logprob: -5.935492515563965
    8. '!=' → logprob: -6.560492515563965
    9. ')' → logprob: -7.185492515563965
    10. ' >' → logprob: -8.060492515563965

Token 563: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09078840911388397
    2. '0' → logprob: -2.4657883644104004
    3. ' ' → logprob: -6.4657883644104
    4. 'ab' → logprob: -8.965788841247559
    5. 'b' → logprob: -9.340788841247559
    6. '((' → logprob: -11.215788841247559
    7. '   ' → logprob: -11.340788841247559
    8. '(ab' → logprob: -11.465788841247559
    9. 'a' → logprob: -11.590788841247559
    10. '(' → logprob: -11.965788841247559

Token 564: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04920957237482071
    2. '0' → logprob: -3.0492095947265625
    3. ' ' → logprob: -7.4242095947265625
    4. 'ab' → logprob: -11.549209594726562
    5. 'b' → logprob: -12.174209594726562
    6. '   ' → logprob: -12.549209594726562
    7. '((' → logprob: -13.549209594726562
    8. '(' → logprob: -14.111709594726562
    9. '  ' → logprob: -14.486709594726562
    10. '[' → logprob: -14.549209594726562

Token 565: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.621933451038785e-05
    2. ',[' → logprob: -10.375056266784668
    3. ' ,' → logprob: -10.875056266784668
    4. '   ' → logprob: -13.750056266784668
    5. ',map' → logprob: -13.875056266784668
    6. '[' → logprob: -14.000056266784668
    7. 'ab' → logprob: -14.750056266784668
    8. '),' → logprob: -15.000056266784668
    9. ',list' → logprob: -15.375056266784668
    10. '       ' → logprob: -15.375056266784668

Token 566: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.07889242470264435
    2. ' zip' → logprob: -2.578892469406128
    3. '(zip' → logprob: -12.953892707824707
    4. '.zip' → logprob: -16.07889175415039
    5. '[(' → logprob: -16.45389175415039
    6. ' ' → logprob: -17.32889175415039
    7. '   ' → logprob: -17.95389175415039
    8. '[' → logprob: -18.32889175415039
    9. '    ' → logprob: -18.45389175415039
    10. '      ' → logprob: -18.95389175415039

Token 567: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.00012928384239785373
    2. '[a' → logprob: -9.625129699707031
    3. '[' → logprob: -10.375129699707031
    4. '(a' → logprob: -11.250129699707031
    5. '   ' → logprob: -11.375129699707031
    6. '       ' → logprob: -13.125129699707031
    7. '(' → logprob: -13.750129699707031
    8. ' ' → logprob: -14.500129699707031
    9. '           ' → logprob: -14.750129699707031
    10. '    ' → logprob: -14.875129699707031

Token 568: 'a' (ID: 64)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.0002028251619776711
    2. 'a' → logprob: -8.875203132629395
    3. '[b' → logprob: -9.875203132629395
    4. '[' → logprob: -12.125203132629395
    5. ' [' → logprob: -12.375203132629395
    6. '(a' → logprob: -13.750203132629395
    7. '   ' → logprob: -15.750203132629395
    8. '([' → logprob: -15.875203132629395
    9. ' a' → logprob: -16.625202178955078
    10. ' ' → logprob: -17.000202178955078

Token 569: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0004505725810304284
    2. '],[' → logprob: -8.125450134277344
    3. ' ],' → logprob: -9.375450134277344
    4. ',' → logprob: -9.625450134277344
    5. '>,' → logprob: -14.500450134277344
    6. '   ' → logprob: -14.500450134277344
    7. 'a' → logprob: -14.875450134277344
    8. '},' → logprob: -15.250450134277344
    9. '       ' → logprob: -15.250450134277344
    10. ''],' → logprob: -15.375450134277344

Token 570: ' [' (ID: 723)
  Prédit: '[b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.647899329662323
    2. '[' → logprob: -1.0228993892669678
    3. ' [' → logprob: -2.1478993892669678
    4. 'b' → logprob: -9.022899627685547
    5. ' ' → logprob: -9.147899627685547
    6. '[a' → logprob: -9.272899627685547
    7. '   ' → logprob: -9.647899627685547
    8. '  ' → logprob: -10.397899627685547
    9. '[B' → logprob: -10.522899627685547
    10. '([' → logprob: -10.772899627685547

Token 571: 'b' (ID: 65)
  Prédit: '[b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.02285907045006752
    2. 'b' → logprob: -3.8978590965270996
    3. '[' → logprob: -6.3978590965271
    4. ' [' → logprob: -7.3978590965271
    5. '[a' → logprob: -10.897858619689941
    6. '   ' → logprob: -11.522858619689941
    7. ' b' → logprob: -12.397858619689941
    8. '(b' → logprob: -14.772858619689941
    9. ' ' → logprob: -14.897858619689941
    10. '  ' → logprob: -15.022858619689941

Token 572: ']))' (ID: 20259)
  Prédit: ']))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.00830155424773693
    2. '))' → logprob: -5.008301734924316
    3. ']' → logprob: -7.508301734924316
    4. '))[' → logprob: -7.758301734924316
    5. '))))' → logprob: -8.633301734924316
    6. ' ]' → logprob: -9.008301734924316
    7. '   ' → logprob: -9.508301734924316
    8. ')))' → logprob: -10.133301734924316
    9. '])))' → logprob: -10.508301734924316
    10. ')]' → logprob: -10.508301734924316

Token 573: ')[' (ID: 13637)
  Prédit: '))['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))[' → logprob: -0.0037500830367207527
    2. '))' → logprob: -6.128749847412109
    3. ')[' → logprob: -6.503749847412109
    4. ')))' → logprob: -10.62874984741211
    5. '[' → logprob: -11.37874984741211
    6. '   ' → logprob: -11.62874984741211
    7. ')' → logprob: -11.75374984741211
    8. ' ' → logprob: -13.12874984741211
    9. ' ))' → logprob: -13.12874984741211
    10. '])[' → logprob: -13.25374984741211

Token 574: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.127333340875339e-06
    2. '[' → logprob: -13.125003814697266
    3. ' ' → logprob: -13.250003814697266
    4. '
' → logprob: -17.000003814697266
    5. '(' → logprob: -17.125003814697266
    6. '   ' → logprob: -17.562503814697266
    7. '1' → logprob: -17.812503814697266
    8. '۰' → logprob: -18.375003814697266
    9. '][' → logprob: -18.437503814697266
    10. '  ' → logprob: -18.812503814697266

Token 575: '])

' (ID: 21045)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00022451656695920974
    2. ')' → logprob: -8.500224113464355
    3. ')))' → logprob: -11.125224113464355
    4. ' ))' → logprob: -12.750224113464355
    5. '))
' → logprob: -13.250224113464355
    6. '   ' → logprob: -14.875224113464355
    7. '))[' → logprob: -15.000224113464355
    8. '));' → logprob: -15.250224113464355
    9. ' ' → logprob: -15.625224113464355
    10. '       ' → logprob: -15.750224113464355

Token 576: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7235641479492188
    2. '<|end|>' → logprob: -0.7235641479492188
    3. '
' → logprob: -3.5985641479492188
    4. ':' → logprob: -7.848564147949219
    5. '[' → logprob: -7.973564147949219
    6. '#' → logprob: -8.223564147949219
    7. '```' → logprob: -8.348564147949219
    8. '(
' → logprob: -8.598564147949219
    9. ')
' → logprob: -8.598564147949219
    10. '<|end|>' → logprob: -8.723564147949219

Token 577: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 578: ' ceil' (ID: 35964)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -1.1633716821670532
    2. ' B' → logprob: -1.5383716821670532
    3. 'bit' → logprob: -2.0383715629577637
    4. ' bit' → logprob: -2.7883715629577637
    5. '_' → logprob: -3.6633715629577637
    6. 'H' → logprob: -3.9758715629577637
    7. 'S' → logprob: -4.038371562957764
    8. 'F' → logprob: -4.288371562957764
    9. ' ' → logprob: -4.350871562957764
    10. 'C' → logprob: -4.413371562957764

Token 579: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003191501135006547
    2. ' (' → logprob: -6.3781914710998535
    3. '_' → logprob: -7.2531914710998535
    4. '_div' → logprob: -8.503191947937012
    5. '<|end|>' → logprob: -9.003191947937012
    6. ')' → logprob: -9.253191947937012
    7. 's' → logprob: -9.878191947937012
    8. 'div' → logprob: -9.878191947937012
    9. ',' → logprob: -10.003191947937012
    10. '((' → logprob: -10.878191947937012

Token 580: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.459398090839386
    2. '(' → logprob: -1.3343980312347412
    3. '   ' → logprob: -3.084398031234741
    4. '<|end|>' → logprob: -4.45939826965332
    5. '    ' → logprob: -4.95939826965332
    6. ' (' → logprob: -4.95939826965332
    7. '  ' → logprob: -4.95939826965332
    8. ')' → logprob: -5.08439826965332
    9. '       ' → logprob: -5.20939826965332
    10. ' ,' → logprob: -6.08439826965332

Token 581: ' x' (ID: 1215)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04206857085227966
    2. ' a' → logprob: -3.9170684814453125
    3. 'lambda' → logprob: -4.6670684814453125
    4. 'self' → logprob: -5.0420684814453125
    5. ' lambda' → logprob: -6.0420684814453125
    6. ' self' → logprob: -6.9170684814453125
    7. ')' → logprob: -7.4170684814453125
    8. 'x' → logprob: -7.6670684814453125
    9. '   ' → logprob: -8.542068481445312
    10. ' ' → logprob: -8.667068481445312

Token 582: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007427250035107136
    2. '   ' → logprob: -5.757427215576172
    3. '):' → logprob: -6.007427215576172
    4. '):
' → logprob: -6.757427215576172
    5. ' ,' → logprob: -8.632427215576172
    6. ',x' → logprob: -9.132427215576172
    7. '       ' → logprob: -9.882427215576172
    8. '<|end|>' → logprob: -10.007427215576172
    9. ',
' → logprob: -10.507427215576172
    10. '(' → logprob: -10.507427215576172

Token 583: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.05496353656053543
    2. ' y' → logprob: -2.9299635887145996
    3. ' ' → logprob: -9.554963111877441
    4. 'b' → logprob: -12.554963111877441
    5. '  ' → logprob: -13.429963111877441
    6. 'div' → logprob: -14.304963111877441
    7. '2' → logprob: -14.304963111877441
    8. '10' → logprob: -14.429963111877441
    9. '    ' → logprob: -14.429963111877441
    10. 'd' → logprob: -14.554963111877441

Token 584: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002335804980248213
    2. '):
' → logprob: -6.127336025238037
    3. ')' → logprob: -9.377335548400879
    4. ':' → logprob: -10.752335548400879
    5. ' ):' → logprob: -10.877335548400879
    6. '=' → logprob: -11.627335548400879
    7. '):
' → logprob: -11.627335548400879
    8. ',' → logprob: -13.002335548400879
    9. '   ' → logprob: -13.377335548400879
    10. 'def' → logprob: -14.002335548400879

Token 585: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11936250329017639
    2. ':' → logprob: -2.4943625926971436
    3. '):' → logprob: -4.8693623542785645
    4. ':
' → logprob: -4.8693623542785645
    5. '):
' → logprob: -5.2443623542785645
    6. ':return' → logprob: -5.7443623542785645
    7. ')' → logprob: -6.3693623542785645
    8. '   ' → logprob: -6.7443623542785645
    9. ',' → logprob: -6.9943623542785645
    10. ' return' → logprob: -7.6193623542785645

Token 586: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4965120851993561
    2. ' return' → logprob: -1.9965120553970337
    3. '(x' → logprob: -2.1215121746063232
    4. ' (' → logprob: -2.4965121746063232
    5. '       ' → logprob: -2.9965121746063232
    6. '   ' → logprob: -6.246511936187744
    7. '-' → logprob: -7.621511936187744
    8. ' -' → logprob: -7.871511936187744
    9. '(return' → logprob: -9.121512413024902
    10. '        ' → logprob: -9.496512413024902

Token 587: ' reduce' (ID: 10389)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0364299938082695
    2. '-' → logprob: -3.7864298820495605
    3. '-(' → logprob: -4.7864298820495605
    4. ' (' → logprob: -5.7864298820495605
    5. ' -' → logprob: -6.5364298820495605
    6. '-x' → logprob: -8.786430358886719
    7. 'x' → logprob: -10.036430358886719
    8. ' ' → logprob: -11.036430358886719
    9. ' -(' → logprob: -11.786430358886719
    10. '   ' → logprob: -11.911430358886719

Token 588: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.006318254861980677
    2. '   ' → logprob: -5.506318092346191
    3. '(or' → logprob: -7.131318092346191
    4. '(' → logprob: -7.506318092346191
    5. 'lambda' → logprob: -8.006318092346191
    6. '(add' → logprob: -8.631318092346191
    7. 'or' → logprob: -9.256318092346191
    8. '(operator' → logprob: -9.381318092346191
    9. '    ' → logprob: -10.256318092346191
    10. '(div' → logprob: -10.381318092346191

Token 589: ' _,' (ID: 18042)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.16623932123184204
    2. ' lambda' → logprob: -2.0412392616271973
    3. 'x' → logprob: -4.166239261627197
    4. '(lambda' → logprob: -5.916239261627197
    5. ' x' → logprob: -6.416239261627197
    6. '   ' → logprob: -6.541239261627197
    7. ' ' → logprob: -7.166239261627197
    8. '=lambda' → logprob: -8.041239738464355
    9. 'a' → logprob: -8.291239738464355
    10. 'int' → logprob: -8.666239738464355

Token 590: ' __' (ID: 2516)
  Prédit: '__:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__:' → logprob: -0.7045832872390747
    2. '__' → logprob: -1.7045832872390747
    3. 'a' → logprob: -2.079583168029785
    4. ':' → logprob: -2.704583168029785
    5. 'x' → logprob: -2.829583168029785
    6. ' __' → logprob: -3.079583168029785
    7. '__,' → logprob: -4.704583168029785
    8. '_:' → logprob: -5.704583168029785
    9. '   ' → logprob: -6.329583168029785
    10. 'z' → logprob: -6.454583168029785

Token 591: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002354714320972562
    2. ' :' → logprob: -6.502354621887207
    3. ',' → logprob: -7.127354621887207
    4. ':x' → logprob: -10.627354621887207
    5. '=' → logprob: -11.752354621887207
    6. 'x' → logprob: -12.752354621887207
    7. ',x' → logprob: -13.127354621887207
    8. '   ' → logprob: -13.377354621887207
    9. ':add' → logprob: -13.502354621887207
    10. ' ,' → logprob: -13.752354621887207

Token 592: ' -' (ID: 533)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.05123528465628624
    2. '-' → logprob: -3.0512351989746094
    3. '-(' → logprob: -7.051235198974609
    4. ' (' → logprob: -7.801235198974609
    5. 'x' → logprob: -7.801235198974609
    6. '-x' → logprob: -8.30123519897461
    7. '((' → logprob: -8.42623519897461
    8. '(' → logprob: -8.55123519897461
    9. '(-' → logprob: -8.92623519897461
    10. ' -' → logprob: -9.05123519897461

Token 593: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.0382690355181694
    2. '(-(' → logprob: -4.16326904296875
    3. '-' → logprob: -4.28826904296875
    4. '(' → logprob: -5.16326904296875
    5. '(x' → logprob: -6.78826904296875
    6. '-(' → logprob: -7.28826904296875
    7. '((-' → logprob: -7.91326904296875
    8. '((' → logprob: -8.16326904296875
    9. '(__' → logprob: -10.91326904296875
    10. '(_' → logprob: -10.91326904296875

Token 594: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.723973582556937e-05
    2. ' x' → logprob: -11.000017166137695
    3. '(x' → logprob: -15.000017166137695
    4. 'int' → logprob: -15.750017166137695
    5. ' ' → logprob: -17.250017166137695
    6. '	x' → logprob: -18.125017166137695
    7. '
' → logprob: -18.250017166137695
    8. 'y' → logprob: -18.625017166137695
    9. '(' → logprob: -18.750017166137695
    10. '{x' → logprob: -18.875017166137695

Token 595: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.142769917845726
    2. '//' → logprob: -2.0177698135375977
    3. ' ' → logprob: -9.767769813537598
    4. 'y' → logprob: -11.142769813537598
    5. ' y' → logprob: -11.767769813537598
    6. ' ' → logprob: -12.517769813537598
    7. '/' → logprob: -12.517769813537598
    8. ' /' → logprob: -12.892769813537598
    9. '   ' → logprob: -13.267769813537598
    10. '  ' → logprob: -14.392769813537598

Token 596: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -3.547789674485102e-05
    2. ' y' → logprob: -10.250035285949707
    3. '   ' → logprob: -18.750036239624023
    4. ' ' → logprob: -18.875036239624023
    5. '	y' → logprob: -19.000036239624023
    6. '  ' → logprob: -19.625036239624023
    7. '_y' → logprob: -20.625036239624023
    8. '    ' → logprob: -20.875036239624023
    9. ')y' → logprob: -21.250036239624023
    10. 'yj' → logprob: -21.875036239624023

Token 597: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0226054191589355
    2. ',' → logprob: -1.0226054191589355
    3. '),' → logprob: -1.2726054191589355
    4. '))' → logprob: -8.522605895996094
    5. ' ,' → logprob: -8.647605895996094
    6. ',x' → logprob: -10.272605895996094
    7. '<|end|>' → logprob: -10.272605895996094
    8. ')x' → logprob: -10.647605895996094
    9. '   ' → logprob: -10.897605895996094
    10. ',None' → logprob: -11.397605895996094

Token 598: ' repeat' (ID: 22962)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6837033033370972
    2. '[' → logprob: -0.9337033033370972
    3. 'map' → logprob: -3.0587034225463867
    4. 'repeat' → logprob: -3.4337034225463867
    5. '(' → logprob: -5.308703422546387
    6. '[(' → logprob: -5.433703422546387
    7. ' range' → logprob: -5.933703422546387
    8. ' [' → logprob: -6.433703422546387
    9. '[],' → logprob: -6.558703422546387
    10. '_,' → logprob: -6.933703422546387

Token 599: '(None' (ID: 65126)
  Prédit: '(None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(None' → logprob: -0.19870667159557343
    2. 'None' → logprob: -1.8237066268920898
    3. '(' → logprob: -4.44870662689209
    4. '(_,' → logprob: -5.69870662689209
    5. '1' → logprob: -6.44870662689209
    6. '(lambda' → logprob: -7.07370662689209
    7. ' None' → logprob: -8.32370662689209
    8. '(x' → logprob: -8.44870662689209
    9. '(self' → logprob: -8.69870662689209
    10. '_,' → logprob: -8.82370662689209

Token 600: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.266944157890975e-05
    2. '(),' → logprob: -10.250072479248047
    3. ' ,' → logprob: -10.250072479248047
    4. '))' → logprob: -14.250072479248047
    5. '   ' → logprob: -14.750072479248047
    6. '),' → logprob: -15.250072479248047
    7. ' ' → logprob: -15.250072479248047
    8. ')' → logprob: -15.500072479248047
    9. '       ' → logprob: -16.500072479248047
    10. '  ' → logprob: -17.625072479248047

Token 601: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012201975914649665
    2. ' ' → logprob: -9.1251220703125
    3. '   ' → logprob: -11.5001220703125
    4. '  ' → logprob: -13.3751220703125
    5. '2' → logprob: -14.7501220703125
    6. '    ' → logprob: -15.6251220703125
    7. '       ' → logprob: -15.6251220703125
    8. '```' → logprob: -15.6251220703125
    9. '           ' → logprob: -15.8751220703125
    10. '     ' → logprob: -16.5626220703125

Token 602: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.839121826691553e-05
    2. ' ' → logprob: -9.500078201293945
    3. '2' → logprob: -13.125078201293945
    4. '   ' → logprob: -13.750078201293945
    5. '  ' → logprob: -15.375078201293945
    6. '    ' → logprob: -17.437578201293945
    7. '```' → logprob: -17.562578201293945
    8. '       ' → logprob: -17.625078201293945
    9. '3' → logprob: -17.875078201293945
    10. '           ' → logprob: -18.062578201293945

Token 603: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.5577775128767826e-06
    2. ')}' → logprob: -13.125005722045898
    3. '))' → logprob: -13.750005722045898
    4. ' )' → logprob: -14.250005722045898
    5. '   ' → logprob: -14.500005722045898
    6. '       ' → logprob: -14.625005722045898
    7. ')}}' → logprob: -15.375005722045898
    8. '<|end|>' → logprob: -15.750005722045898
    9. ')
' → logprob: -15.875005722045898
    10. '),' → logprob: -16.1250057220459

Token 604: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 605: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 606: ' ave' (ID: 22175)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.30479782819747925
    2. 'g' → logprob: -2.179797887802124
    3. 'pow' → logprob: -2.929797887802124
    4. ' floor' → logprob: -3.429797887802124
    5. 'ceil' → logprob: -4.054797649383545
    6. 'max' → logprob: -5.054797649383545
    7. 'abs' → logprob: -5.554797649383545
    8. 'l' → logprob: -5.679797649383545
    9. 'log' → logprob: -5.929797649383545
    10. 'mod' → logprob: -5.929797649383545

Token 607: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.07100585848093033
    2. 'rage' → logprob: -2.9460058212280273
    3. 'r' → logprob: -4.321005821228027
    4. '(' → logprob: -6.071005821228027
    5. '(
' → logprob: -9.071005821228027
    6. 'l' → logprob: -9.571005821228027
    7. ' (' → logprob: -10.071005821228027
    8. ',' → logprob: -10.196005821228027
    9. '(r' → logprob: -10.446005821228027
    10. '   ' → logprob: -10.446005821228027

Token 608: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.20218318700790405
    2. ',' → logprob: -1.7021832466125488
    3. ',self' → logprob: -8.70218276977539
    4. ')(' → logprob: -8.82718276977539
    5. 'self' → logprob: -9.20218276977539
    6. '       ' → logprob: -9.32718276977539
    7. '(' → logprob: -9.70218276977539
    8. ')' → logprob: -9.95218276977539
    9. '   ' → logprob: -9.95218276977539
    10. ' (' → logprob: -10.07718276977539

Token 609: ' a' (ID: 261)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.3355541229248047
    2. 'self' → logprob: -1.3355541229248047
    3. ' self' → logprob: -1.8355541229248047
    4. 'a' → logprob: -1.9605541229248047
    5. ' x' → logprob: -1.9605541229248047
    6. ' a' → logprob: -3.5855541229248047
    7. '*' → logprob: -6.960554122924805
    8. ' ' → logprob: -7.085554122924805
    9. '   ' → logprob: -7.710554122924805
    10. '*self' → logprob: -8.085554122924805

Token 610: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005831766175106168
    2. '   ' → logprob: -8.75058364868164
    3. ' ,' → logprob: -9.00058364868164
    4. ',self' → logprob: -9.37558364868164
    5. 'self' → logprob: -9.50058364868164
    6. '):
' → logprob: -10.00058364868164
    7. '       ' → logprob: -10.00058364868164
    8. '(self' → logprob: -10.50058364868164
    9. '):' → logprob: -11.50058364868164
    10. ',a' → logprob: -12.62558364868164

Token 611: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1163937896490097
    2. ' return' → logprob: -2.616393804550171
    3. 'return' → logprob: -3.366393804550171
    4. '   ' → logprob: -6.116393566131592
    5. '	return' → logprob: -9.74139404296875
    6. '    ' → logprob: -11.61639404296875
    7. ' sum' → logprob: -12.36639404296875
    8. ' ' → logprob: -12.49139404296875
    9. '     ' → logprob: -12.86639404296875
    10. '      ' → logprob: -12.86639404296875

Token 612: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.038433659821748734
    2. ' return' → logprob: -3.28843355178833
    3. '   ' → logprob: -8.538434028625488
    4. '       ' → logprob: -8.538434028625488
    5. '	return' → logprob: -15.288434028625488
    6. ' ' → logprob: -16.038433074951172
    7. 'def' → logprob: -16.788433074951172
    8. '    ' → logprob: -17.288433074951172
    9. '  ' → logprob: -17.663433074951172
    10. '     ' → logprob: -17.913433074951172

Token 613: ' reduce' (ID: 10389)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.7803110480308533
    2. 'reduce' → logprob: -0.7803110480308533
    3. ' sum' → logprob: -2.905311107635498
    4. ' reduce' → logprob: -4.155311107635498
    5. 'a' → logprob: -5.030311107635498
    6. 'add' → logprob: -5.780311107635498
    7. '(sum' → logprob: -6.405311107635498
    8. 'float' → logprob: -8.03031063079834
    9. ' a' → logprob: -8.15531063079834
    10. ' add' → logprob: -8.40531063079834

Token 614: '(add' (ID: 40159)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.04890788346529007
    2. '(add' → logprob: -3.048907995223999
    3. '(' → logprob: -8.298908233642578
    4. '(operator' → logprob: -10.048908233642578
    5. '(or' → logprob: -11.298908233642578
    6. '```' → logprob: -12.423908233642578
    7. 'lambda' → logprob: -12.798908233642578
    8. '(div' → logprob: -13.048908233642578
    9. '(m' → logprob: -13.548908233642578
    10. '(item' → logprob: -13.798908233642578

Token 615: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01424460206180811
    2. ',a' → logprob: -4.264244556427002
    3. ' ,' → logprob: -9.76424503326416
    4. 'a' → logprob: -11.26424503326416
    5. '(a' → logprob: -12.01424503326416
    6. '   ' → logprob: -13.38924503326416
    7. ',x' → logprob: -14.51424503326416
    8. ',
' → logprob: -14.63924503326416
    9. '    ' → logprob: -15.01424503326416
    10. ',[' → logprob: -15.13924503326416

Token 616: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.011056075803935528
    2. ' a' → logprob: -4.511055946350098
    3. '(a' → logprob: -12.511055946350098
    4. '	a' → logprob: -13.136055946350098
    5. '[a' → logprob: -13.386055946350098
    6. '   ' → logprob: -15.136055946350098
    7. ')a' → logprob: -15.636055946350098
    8. ' ' → logprob: -15.761055946350098
    9. ')' → logprob: -15.761055946350098
    10. 'map' → logprob: -15.886055946350098

Token 617: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011162848677486181
    2. ')/' → logprob: -6.8761162757873535
    3. ',' → logprob: -9.751116752624512
    4. ' )' → logprob: -11.126116752624512
    5. '   ' → logprob: -12.251116752624512
    6. ' ' → logprob: -13.251116752624512
    7. '`)' → logprob: -14.001116752624512
    8. ')
' → logprob: -14.751116752624512
    9. ')//' → logprob: -14.876116752624512
    10. '  ' → logprob: -15.001116752624512

Token 618: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.8069639205932617
    2. '/' → logprob: -1.4319639205932617
    3. ' //' → logprob: -1.4319639205932617
    4. '//' → logprob: -2.6819639205932617
    5. '(len' → logprob: -5.681963920593262
    6. ')' → logprob: -6.431963920593262
    7. ' ' → logprob: -7.306963920593262
    8. '()' → logprob: -7.556963920593262
    9. ' ' → logprob: -7.931963920593262
    10. '   ' → logprob: -8.431963920593262

Token 619: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.002479581395164132
    2. ' len' → logprob: -6.002479553222656
    3. '(len' → logprob: -12.502479553222656
    4. '   ' → logprob: -16.252479553222656
    5. 'max' → logprob: -16.752479553222656
    6. '    ' → logprob: -17.252479553222656
    7. ' ' → logprob: -17.627479553222656
    8. '	len' → logprob: -17.627479553222656
    9. '  ' → logprob: -17.752479553222656
    10. '(' → logprob: -19.252479553222656

Token 620: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.2664456789934775e-06
    2. '(' → logprob: -14.000000953674316
    3. 'a' → logprob: -15.000000953674316
    4. '(
' → logprob: -17.000001907348633
    5. ' (' → logprob: -19.500001907348633
    6. '[a' → logprob: -21.250001907348633
    7. '```' → logprob: -21.375001907348633
    8. '((' → logprob: -21.500001907348633
    9. '(an' → logprob: -21.750001907348633
    10. '(ai' → logprob: -21.875001907348633

Token 621: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.5941604690160602e-05
    2. '<|end|>' → logprob: -11.000025749206543
    3. ')
' → logprob: -12.375025749206543
    4. ' )' → logprob: -13.500025749206543
    5. '   ' → logprob: -13.750025749206543
    6. '       ' → logprob: -14.500025749206543
    7. ')return' → logprob: -14.750025749206543
    8. '[' → logprob: -14.750025749206543
    9. ')}' → logprob: -16.12502670288086
    10. ' ' → logprob: -16.12502670288086

Token 622: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 623: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 624: ' gcd' (ID: 106918)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.8753418326377869
    2. ' max' → logprob: -1.7503418922424316
    3. ' M' → logprob: -3.0003418922424316
    4. 'M' → logprob: -3.2503418922424316
    5. 'min' → logprob: -3.3753418922424316
    6. ' min' → logprob: -3.9378418922424316
    7. 'sum' → logprob: -4.062841892242432
    8. ' L' → logprob: -4.250341892242432
    9. ' sum' → logprob: -4.625341892242432
    10. 'F' → logprob: -4.750341892242432

Token 625: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.54161137342453
    2. '(' → logprob: -1.0416114330291748
    3. ' (' → logprob: -4.041611194610596
    4. '(lambda' → logprob: -4.166611194610596
    5. '<|end|>' → logprob: -4.541611194610596
    6. ',' → logprob: -4.791611194610596
    7. '(a' → logprob: -5.291611194610596
    8. '   ' → logprob: -6.541611194610596
    9. 'def' → logprob: -7.041611194610596
    10. '(
' → logprob: -7.416611194610596

Token 626: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021071143448352814
    2. '(self' → logprob: -4.271070957183838
    3. ',self' → logprob: -5.646070957183838
    4. 'self' → logprob: -6.771070957183838
    5. '   ' → logprob: -7.146070957183838
    6. ' ,' → logprob: -7.771070957183838
    7. ',a' → logprob: -7.771070957183838
    8. '       ' → logprob: -8.146071434020996
    9. ',
' → logprob: -10.021071434020996
    10. '(a' → logprob: -10.396071434020996

Token 627: ' x' (ID: 1215)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.008500520139932632
    2. ' a' → logprob: -5.008500576019287
    3. ' lambda' → logprob: -6.758500576019287
    4. 'lambda' → logprob: -7.508500576019287
    5. '   ' → logprob: -10.883500099182129
    6. '	a' → logprob: -11.383500099182129
    7. 'self' → logprob: -11.508500099182129
    8. '*a' → logprob: -11.758500099182129
    9. ' ' → logprob: -11.883500099182129
    10. 'x' → logprob: -12.383500099182129

Token 628: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.3120038501219824e-05
    2. ',y' → logprob: -10.875053405761719
    3. ' ,' → logprob: -10.875053405761719
    4. ',b' → logprob: -11.750053405761719
    5. ',x' → logprob: -12.375053405761719
    6. '   ' → logprob: -13.375053405761719
    7. ',a' → logprob: -14.000053405761719
    8. ',
' → logprob: -15.000053405761719
    9. ',q' → logprob: -15.750053405761719
    10. ',p' → logprob: -16.75005340576172

Token 629: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.002482315758243203
    2. ' y' → logprob: -6.0024824142456055
    3. '   ' → logprob: -12.127482414245605
    4. '	y' → logprob: -15.002482414245605
    5. 'lambda' → logprob: -15.252482414245605
    6. '    ' → logprob: -15.502482414245605
    7. '       ' → logprob: -16.12748146057129
    8. ' ' → logprob: -16.12748146057129
    9. 'b' → logprob: -16.25248146057129
    10. '  ' → logprob: -16.25248146057129

Token 630: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07926131039857864
    2. '):
' → logprob: -3.079261302947998
    3. '):' → logprob: -3.704261302947998
    4. '   ' → logprob: -5.454261302947998
    5. ',
' → logprob: -7.329261302947998
    6. '       ' → logprob: -7.954261302947998
    7. ' ,' → logprob: -8.954261779785156
    8. '):
' → logprob: -10.079261779785156
    9. '=' → logprob: -10.704261779785156
    10. ',x' → logprob: -10.954261779785156

Token 631: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02691657841205597
    2. ':
' → logprob: -4.15191650390625
    3. ':' → logprob: -4.90191650390625
    4. '):
' → logprob: -6.02691650390625
    5. ':return' → logprob: -8.02691650390625
    6. 'return' → logprob: -8.40191650390625
    7. ' return' → logprob: -8.77691650390625
    8. '):' → logprob: -9.52691650390625
    9. '   ' → logprob: -9.65191650390625
    10. ' if' → logprob: -10.65191650390625

Token 632: ' return' (ID: 622)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.06198807805776596
    2. 'return' (adapté à ' return') → logprob: -3.561988115310669
    3. '       ' → logprob: -3.811988115310669
    4. ' while' → logprob: -4.93698787689209
    5. 'if' → logprob: -6.18698787689209
    6. ' return' → logprob: -8.06198787689209
    7. 'x' → logprob: -10.43698787689209
    8. '	while' → logprob: -11.68698787689209
    9. '        ' → logprob: -12.06198787689209
    10. ' ' → logprob: -12.18698787689209

Token 633: ' reduce' (ID: 10389)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.018228139728307724
    2. 'y' → logprob: -4.143228054046631
    3. 'g' → logprob: -7.018228054046631
    4. 'self' → logprob: -7.143228054046631
    5. ' x' → logprob: -8.143228530883789
    6. 'reduce' → logprob: -8.893228530883789
    7. ' y' → logprob: -10.268228530883789
    8. '(x' → logprob: -10.518228530883789
    9. 'add' → logprob: -12.518228530883789
    10. '(y' → logprob: -12.768228530883789

Token 634: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.12643688917160034
    2. '(or' → logprob: -2.501436948776245
    3. '(m' → logprob: -3.501436948776245
    4. '(g' → logprob: -5.626436710357666
    5. '(int' → logprob: -6.876436710357666
    6. '(' → logprob: -6.876436710357666
    7. 'or' → logprob: -7.751436710357666
    8. '((' → logprob: -9.001437187194824
    9. '(math' → logprob: -9.751437187194824
    10. 'lambda' → logprob: -9.751437187194824

Token 635: ' f' (ID: 285)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.10346780717372894
    2. 'x' → logprob: -2.4784677028656006
    3. ' lambda' → logprob: -4.60346794128418
    4. 'a' → logprob: -5.97846794128418
    5. '(lambda' → logprob: -6.85346794128418
    6. '   ' → logprob: -7.60346794128418
    7. ' x' → logprob: -8.60346794128418
    8. 'g' → logprob: -10.10346794128418
    9. 'l' → logprob: -10.60346794128418
    10. '_lambda' → logprob: -10.97846794128418

Token 636: ',' (ID: 11)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.09633581340312958
    2. ' lambda' → logprob: -3.4713358879089355
    3. '   ' → logprob: -3.5963358879089355
    4. 'a' → logprob: -4.5963358879089355
    5. '(lambda' → logprob: -4.7213358879089355
    6. ',' → logprob: -4.8463358879089355
    7. 'x' → logprob: -5.4713358879089355
    8. '=lambda' → logprob: -7.3463358879089355
    9. '       ' → logprob: -7.4713358879089355
    10. '           ' → logprob: -8.471335411071777

Token 637: ' _:' (ID: 133568)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7216947674751282
    2. '_:' → logprob: -1.8466947078704834
    3. 'b' → logprob: -1.9716947078704834
    4. 'x' → logprob: -2.5966947078704834
    5. 'g' → logprob: -2.7216947078704834
    6. 'lambda' → logprob: -3.3466947078704834
    7. 'z' → logprob: -4.4716949462890625
    8. 'f' → logprob: -4.8466949462890625
    9. '_,' → logprob: -5.3466949462890625
    10. 'y' → logprob: -5.8466949462890625

Token 638: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.7517707347869873
    2. 'g' → logprob: -0.7517707347869873
    3. 'or' → logprob: -4.126770973205566
    4. '(g' → logprob: -4.751770973205566
    5. 'x' → logprob: -5.001770973205566
    6. '(f' → logprob: -5.251770973205566
    7. 'mul' → logprob: -5.376770973205566
    8. ' f' → logprob: -5.626770973205566
    9. 'lambda' → logprob: -6.126770973205566
    10. '(or' → logprob: -6.251770973205566

Token 639: '(*' (ID: 9000)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2179444134235382
    2. ' %' → logprob: -1.8429443836212158
    3. '%x' → logprob: -4.467944622039795
    4. 'if' → logprob: -4.592944622039795
    5. '%' → logprob: -4.717944622039795
    6. ',' → logprob: -6.217944622039795
    7. ' x' → logprob: -6.967944622039795
    8. 'x' → logprob: -7.342944622039795
    9. ' ' → logprob: -7.467944622039795
    10. ':' → logprob: -7.842944622039795

Token 640: '_)' (ID: 35080)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.302531361579895
    2. '(' → logprob: -1.677531361579895
    3. '[' → logprob: -2.1775312423706055
    4. '(lambda' → logprob: -2.8025312423706055
    5. '(y' → logprob: -3.1775312423706055
    6. 'div' → logprob: -3.1775312423706055
    7. '(f' → logprob: -3.4275312423706055
    8. '(chain' → logprob: -3.5525312423706055
    9. '[x' → logprob: -3.6775312423706055
    10. 'x' → logprob: -3.9275312423706055

Token 641: ' if' (ID: 538)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1447339951992035
    2. '((' → logprob: -3.0197339057922363
    3. '(lambda' → logprob: -3.6447339057922363
    4. '([' → logprob: -3.7697339057922363
    5. ' if' → logprob: -4.269733905792236
    6. ' (' → logprob: -5.394733905792236
    7. ',(' → logprob: -5.769733905792236
    8. '(range' → logprob: -5.894733905792236
    9. '   ' → logprob: -6.394733905792236
    10. '(x' → logprob: -6.519733905792236

Token 642: ' _' (ID: 1175)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.26135119795799255
    2. 'y' → logprob: -2.6363511085510254
    3. 'lambda' → logprob: -2.6363511085510254
    4. 'x' → logprob: -3.7613511085510254
    5. '_' → logprob: -4.136351108551025
    6. '(' → logprob: -4.386351108551025
    7. '(x' → logprob: -4.886351108551025
    8. '(y' → logprob: -4.886351108551025
    9. 'f' → logprob: -5.136351108551025
    10. '(f' → logprob: -5.511351108551025

Token 643: '[' (ID: 58)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -1.4720604419708252
    2. '([' → logprob: -1.7220604419708252
    3. ' else' → logprob: -1.8470604419708252
    4. '(x' → logprob: -1.8470604419708252
    5. '((' → logprob: -3.347060441970825
    6. ',' → logprob: -3.472060441970825
    7. '(range' → logprob: -3.722060441970825
    8. '[' → logprob: -3.722060441970825
    9. ' not' → logprob: -3.972060441970825
    10. ' in' → logprob: -3.972060441970825

Token 644: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5731258392333984
    2. '(x' → logprob: -1.5731258392333984
    3. '[' → logprob: -2.5731258392333984
    4. 'x' → logprob: -3.6981258392333984
    5. '(),' → logprob: -3.8231258392333984
    6. ' (' → logprob: -4.073125839233398
    7. '(y' → logprob: -4.448125839233398
    8. '()' → logprob: -4.573125839233398
    9. '(lambda' → logprob: -5.073125839233398
    10. 'y' → logprob: -5.198125839233398

Token 645: ']!=' (ID: 85780)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.6741692423820496
    2. ' else' → logprob: -0.7991692423820496
    3. '!=' → logprob: -4.049169063568115
    4. 'and' → logprob: -4.924169063568115
    5. ' and' → logprob: -5.424169063568115
    6. ' !=' → logprob: -5.424169063568115
    7. ' ' → logprob: -6.299169063568115
    8. '[' → logprob: -6.549169063568115
    9. '   ' → logprob: -6.799169063568115
    10. '(x' → logprob: -7.549169063568115

Token 646: '0' (ID: 15)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17925319075584412
    2. '0' → logprob: -2.554253101348877
    3. '(lambda' → logprob: -3.054253101348877
    4. 'lambda' → logprob: -4.304253101348877
    5. '(x' → logprob: -5.179253101348877
    6. '[' → logprob: -5.429253101348877
    7. '(f' → logprob: -6.054253101348877
    8. 'x' → logprob: -6.054253101348877
    9. ' (' → logprob: -6.179253101348877
    10. '(y' → logprob: -6.429253101348877

Token 647: ' else' (ID: 1203)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22087576985359192
    2. ' else' → logprob: -2.4708757400512695
    3. '(lambda' → logprob: -2.7208757400512695
    4. 'else' → logprob: -4.0958757400512695
    5. ' (' → logprob: -5.0958757400512695
    6. ' and' → logprob: -5.4708757400512695
    7. ' ,' → logprob: -5.5958757400512695
    8. ' or' → logprob: -5.7208757400512695
    9. 'lambda' → logprob: -5.7208757400512695
    10. ' lambda' → logprob: -6.2208757400512695

Token 648: ' _' (ID: 1175)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.7081347703933716
    2. 'lambda' → logprob: -1.2081347703933716
    3. 'f' → logprob: -2.083134651184082
    4. '(f' → logprob: -3.208134651184082
    5. '(' → logprob: -3.833134651184082
    6. ' (' → logprob: -4.583134651184082
    7. '(x' → logprob: -5.458134651184082
    8. 'x' → logprob: -6.208134651184082
    9. ' lambda' → logprob: -6.833134651184082
    10. 'g' → logprob: -7.208134651184082

Token 649: '[' (ID: 58)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2530744671821594
    2. '(lambda' → logprob: -2.3780744075775146
    3. ',(' → logprob: -3.1280744075775146
    4. '(x' → logprob: -3.7530744075775146
    5. ' (' → logprob: -4.503074645996094
    6. ' ,' → logprob: -4.628074645996094
    7. ',x' → logprob: -4.878074645996094
    8. '(f' → logprob: -5.003074645996094
    9. '(' → logprob: -5.128074645996094
    10. ',f' → logprob: -5.253074645996094

Token 650: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16192562878131866
    2. '1' → logprob: -1.9119256734848022
    3. '2' → logprob: -7.536925792694092
    4. '(' → logprob: -7.536925792694092
    5. ':' → logprob: -8.161925315856934
    6. '::-' → logprob: -9.161925315856934
    7. ']' → logprob: -9.911925315856934
    8. '],' → logprob: -9.911925315856934
    9. ' ' → logprob: -10.286925315856934
    10. '[' → logprob: -10.661925315856934

Token 651: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7072440385818481
    2. '(x' → logprob: -1.4572440385818481
    3. '(lambda' → logprob: -1.7072440385818481
    4. '(f' → logprob: -3.0822439193725586
    5. ' (' → logprob: -3.9572439193725586
    6. '((' → logprob: -4.082243919372559
    7. ')(' → logprob: -5.457243919372559
    8. '(' → logprob: -6.457243919372559
    9. ':' → logprob: -7.582243919372559
    10. ' ,' → logprob: -7.707243919372559

Token 652: ' repeat' (ID: 22962)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.04040173813700676
    2. 'zip' → logprob: -4.790401935577393
    3. '[((' → logprob: -4.915401935577393
    4. 'repeat' → logprob: -5.165401935577393
    5. ' [(' → logprob: -5.290401935577393
    6. '([(' → logprob: -6.040401935577393
    7. '((' → logprob: -6.165401935577393
    8. '[' → logprob: -6.540401935577393
    9. 'lambda' → logprob: -6.540401935577393
    10. '[[' → logprob: -7.165401935577393

Token 653: '((' (ID: 2054)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.03825492411851883
    2. '(g' → logprob: -4.038254737854004
    3. '(math' → logprob: -5.038254737854004
    4. '(' → logprob: -5.413254737854004
    5. '((' → logprob: -5.413254737854004
    6. '(None' → logprob: -6.288254737854004
    7. '(tuple' → logprob: -6.788254737854004
    8. '(int' → logprob: -7.538254737854004
    9. '(
' → logprob: -8.288254737854004
    10. 'g' → logprob: -8.538254737854004

Token 654: 'lambda' (ID: 35280)
  Prédit: 'lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.6898937821388245
    2. '(lambda' → logprob: -1.3148937225341797
    3. 'g' → logprob: -2.3148937225341797
    4. 'x' → logprob: -2.8148937225341797
    5. 'div' → logprob: -3.5648937225341797
    6. '(x' → logprob: -5.06489372253418
    7. 'self' → logprob: -5.06489372253418
    8. '(g' → logprob: -5.06489372253418
    9. 'int' → logprob: -5.31489372253418
    10. '[' → logprob: -5.68989372253418

Token 655: ' a' (ID: 261)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.39873528480529785
    2. 'x' → logprob: -1.7737352848052979
    3. 'g' → logprob: -1.8987352848052979
    4. ' lambda' → logprob: -5.148735046386719
    5. '(lambda' → logprob: -6.398735046386719
    6. 'a' → logprob: -6.773735046386719
    7. ' x' → logprob: -8.398735046386719
    8. ' gcd' → logprob: -8.648735046386719
    9. 'div' → logprob: -9.273735046386719
    10. '   ' → logprob: -9.648735046386719

Token 656: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21952980756759644
    2. ',b' → logprob: -1.7195298671722412
    3. 'b' → logprob: -4.094529628753662
    4. 'x' → logprob: -7.219529628753662
    5. ',x' → logprob: -8.09453010559082
    6. 'a' → logprob: -9.59453010559082
    7. ' ,' → logprob: -9.84453010559082
    8. '   ' → logprob: -10.34453010559082
    9. ',
' → logprob: -10.71953010559082
    10. 'def' → logprob: -10.96953010559082

Token 657: ':(' (ID: 7990)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2859557867050171
    2. ',' → logprob: -2.1609559059143066
    3. ',a' → logprob: -2.1609559059143066
    4. ' :' → logprob: -4.785955905914307
    5. ':a' → logprob: -5.410955905914307
    6. 'a' → logprob: -5.660955905914307
    7. ',b' → logprob: -6.785955905914307
    8. ' a' → logprob: -8.285955429077148
    9. '   ' → logprob: -9.035955429077148
    10. ' ,' → logprob: -9.160955429077148

Token 658: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.005435931961983442
    2. 'a' → logprob: -5.255435943603516
    3. 'lambda' → logprob: -9.255435943603516
    4. '(b' → logprob: -10.005435943603516
    5. ' b' → logprob: -11.005435943603516
    6. 'g' → logprob: -11.130435943603516
    7. '(lambda' → logprob: -11.755435943603516
    8. '(a' → logprob: -12.005435943603516
    9. 'x' → logprob: -12.505435943603516
    10. '   ' → logprob: -12.880435943603516

Token 659: ',a' (ID: 26776)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4980316460132599
    2. ',a' → logprob: -1.1230316162109375
    3. ',' → logprob: -2.7480316162109375
    4. ' if' → logprob: -6.8730316162109375
    5. 'if' → logprob: -7.7480316162109375
    6. '%' → logprob: -7.7480316162109375
    7. ' a' → logprob: -7.8730316162109375
    8. ' ,' → logprob: -7.8730316162109375
    9. ',b' → logprob: -9.373031616210938
    10. '(a' → logprob: -10.373031616210938

Token 660: '%b' (ID: 148937)
  Prédit: '%b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%b' → logprob: -0.05653587728738785
    2. '[' → logprob: -3.4315359592437744
    3. 'b' → logprob: -4.306535720825195
    4. '%' → logprob: -5.556535720825195
    5. ',b' → logprob: -5.806535720825195
    6. ' %' → logprob: -7.056535720825195
    7. '[b' → logprob: -7.181535720825195
    8. ')' → logprob: -8.806535720825195
    9. ':b' → logprob: -9.181535720825195
    10. 'mod' → logprob: -9.681535720825195

Token 661: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.29246461391448975
    2. ')' → logprob: -1.9174646139144897
    3. ')),' → logprob: -2.2924647331237793
    4. ')[' → logprob: -6.167464733123779
    5. '))' → logprob: -6.792464733123779
    6. '),(' → logprob: -7.417464733123779
    7. ' if' → logprob: -7.417464733123779
    8. ' ),' → logprob: -8.042464256286621
    9. 'if' → logprob: -8.417464256286621
    10. ')))' → logprob: -8.792464256286621

Token 662: ' [' (ID: 723)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.1322230100631714
    2. '(' → logprob: -2.757223129272461
    3. '(lambda' → logprob: -3.382223129272461
    4. ' (' → logprob: -3.757223129272461
    5. 'x' → logprob: -6.882223129272461
    6. 'lambda' → logprob: -7.007223129272461
    7. '[' → logprob: -8.257223129272461
    8. ')' → logprob: -8.882223129272461
    9. ' lambda' → logprob: -9.132223129272461
    10. ' x' → logprob: -9.257223129272461

Token 663: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.25292453169822693
    2. '(x' → logprob: -1.5029245615005493
    3. '[x' → logprob: -7.75292444229126
    4. ' x' → logprob: -8.502924919128418
    5. '(' → logprob: -9.002924919128418
    6. ' (' → logprob: -9.127924919128418
    7. '0' → logprob: -10.002924919128418
    8. '   ' → logprob: -11.627924919128418
    9. '{x' → logprob: -11.877924919128418
    10. ''x' → logprob: -12.002924919128418

Token 664: ',' (ID: 11)
  Prédit: ',y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.38789454102516174
    2. ',' → logprob: -1.1378945112228394
    3. ',x' → logprob: -7.512894630432129
    4. ' ,' → logprob: -7.762894630432129
    5. '[' → logprob: -10.762894630432129
    6. '0' → logprob: -11.762894630432129
    7. 'y' → logprob: -12.637894630432129
    8. ',[' → logprob: -12.887894630432129
    9. ',b' → logprob: -13.137894630432129
    10. '1' → logprob: -13.262894630432129

Token 665: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0021885682363063097
    2. ' y' → logprob: -6.127188682556152
    3. ' ' → logprob: -13.877188682556152
    4. '   ' → logprob: -14.502188682556152
    5. '  ' → logprob: -14.752188682556152
    6. 'x' → logprob: -14.877188682556152
    7. '	y' → logprob: -15.627188682556152
    8. '0' → logprob: -15.877188682556152
    9. '(y' → logprob: -15.877188682556152
    10. ')y' → logprob: -16.002187728881836

Token 666: ']),' (ID: 19560)
  Prédit: ']),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']),' → logprob: -0.31362712383270264
    2. '])),' → logprob: -1.8136271238327026
    3. ']))' → logprob: -2.563627243041992
    4. '])))' → logprob: -5.188627243041992
    5. ']' → logprob: -5.313627243041992
    6. ')),' → logprob: -5.438627243041992
    7. '])[' → logprob: -5.688627243041992
    8. '),' → logprob: -5.813627243041992
    9. '],' → logprob: -5.938627243041992
    10. '])' → logprob: -6.313627243041992

Token 667: ' len' (ID: 4631)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.45747941732406616
    2. '2' → logprob: -1.582479476928711
    3. '10' → logprob: -2.457479476928711
    4. '1' → logprob: -3.207479476928711
    5. '999' → logprob: -4.582479476928711
    6. '50' → logprob: -5.207479476928711
    7. 'sys' → logprob: -5.207479476928711
    8. 'float' → logprob: -5.707479476928711
    9. ' ' → logprob: -5.957479476928711
    10. 'int' → logprob: -6.082479476928711

Token 668: '(bin' (ID: 117327)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.32591512799263
    2. '(x' → logprob: -2.2009150981903076
    3. '(a' → logprob: -3.0759150981903076
    4. '(str' → logprob: -3.0759150981903076
    5. '(range' → logprob: -3.3259150981903076
    6. '(bin' → logprob: -3.8259150981903076
    7. '((' → logprob: -4.575915336608887
    8. '([(' → logprob: -5.950915336608887
    9. '(f' → logprob: -7.200915336608887
    10. '(list' → logprob: -7.325915336608887

Token 669: '(max' (ID: 17178)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.3506607115268707
    2. '(x' → logprob: -1.2256606817245483
    3. '(max' → logprob: -7.225660800933838
    4. '(' → logprob: -7.850660800933838
    5. '(a' → logprob: -8.10066032409668
    6. '(bin' → logprob: -8.22566032409668
    7. 'y' → logprob: -8.47566032409668
    8. '(b' → logprob: -9.47566032409668
    9. '(g' → logprob: -9.60066032409668
    10. '(int' → logprob: -10.35066032409668

Token 670: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0034957698080688715
    2. '(max' → logprob: -6.253495693206787
    3. '(y' → logprob: -6.753495693206787
    4. 'x' → logprob: -8.253496170043945
    5. '(' → logprob: -9.628496170043945
    6. '(a' → logprob: -10.753496170043945
    7. 'max' → logprob: -10.878496170043945
    8. 'y' → logprob: -12.128496170043945
    9. '((' → logprob: -12.128496170043945
    10. '(int' → logprob: -12.503496170043945

Token 671: ',y' (ID: 16103)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.039710208773612976
    2. '(y' → logprob: -3.414710283279419
    3. 'x' → logprob: -5.53971004486084
    4. 'y' → logprob: -6.41471004486084
    5. '(' → logprob: -8.28971004486084
    6. ',y' → logprob: -9.91471004486084
    7. '(max' → logprob: -10.16471004486084
    8. ')' → logprob: -10.66471004486084
    9. ',' → logprob: -10.78971004486084
    10. ')))' → logprob: -11.03971004486084

Token 672: ')))))
' (ID: 190633)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.4114358425140381
    2. '))-' → logprob: -1.536435842514038
    3. '))' → logprob: -2.786435842514038
    4. '(' → logprob: -3.661435842514038
    5. ')))' → logprob: -4.286436080932617
    6. '))+' → logprob: -4.786436080932617
    7. '))[' → logprob: -5.536436080932617
    8. '[' → logprob: -5.911436080932617
    9. ')[' → logprob: -6.036436080932617
    10. '(y' → logprob: -6.911436080932617

Token 673: '        
' (ID: 3564)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1554000973701477
    2. '   ' → logprob: -2.655400037765503
    3. '<|end|>' → logprob: -2.655400037765503
    4. '  ' → logprob: -7.030400276184082
    5. '       ' → logprob: -7.655400276184082
    6. '    ' → logprob: -8.030400276184082
    7. '[' → logprob: -8.030400276184082
    8. '(' → logprob: -8.655400276184082
    9. '<|end|>' → logprob: -8.905400276184082
    10. ':' → logprob: -9.030400276184082

Token 674: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10206001996994019
    2. '<|end|>' → logprob: -2.352060079574585
    3. '   ' → logprob: -6.977059841156006
    4. '+' → logprob: -9.102060317993164
    5. '<|end|>' → logprob: -9.227060317993164
    6. '[' → logprob: -9.227060317993164
    7. '```' → logprob: -9.352060317993164
    8. '(' → logprob: -9.977060317993164
    9. '()' → logprob: -10.227060317993164
    10. '  ' → logprob: -10.352060317993164

Token 675: ' main' (ID: 2758)
  Prédit: ' Idea'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Idea' → logprob: -0.21036052703857422
    2. ' IP' → logprob: -2.335360527038574
    3. ' ' → logprob: -2.835360527038574
    4. 'Idea' → logprob: -4.460360527038574
    5. ' __' → logprob: -5.335360527038574
    6. ' B' → logprob: -5.585360527038574
    7. ' Ideas' → logprob: -5.835360527038574
    8. '  ' → logprob: -6.085360527038574
    9. ' idea' → logprob: -6.460360527038574
    10. ' def' → logprob: -6.585360527038574

Token 676: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -3.47626737493556e-05
    2. '(' → logprob: -11.37503433227539
    3. ' ():' → logprob: -12.00003433227539
    4. '():
' → logprob: -12.12503433227539
    5. ':' → logprob: -12.12503433227539
    6. '()' → logprob: -12.50003433227539
    7. '(":' → logprob: -14.00003433227539
    8. '(:' → logprob: -14.37503433227539
    9. '(args' → logprob: -14.87503433227539
    10. '):' → logprob: -16.00003433227539

Token 677: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008606038754805923
    2. '<|end|>' → logprob: -7.875860691070557
    3. 'def' → logprob: -8.375860214233398
    4. ' pass' → logprob: -10.250860214233398
    5. ':' → logprob: -10.250860214233398
    6. '    ' → logprob: -10.500860214233398
    7. '#' → logprob: -10.625860214233398
    8. 'import' → logprob: -10.625860214233398
    9. '():' → logprob: -11.250860214233398
    10. ')' → logprob: -11.250860214233398

Token 678: ' r' (ID: 428)
  Prédit: 'ip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ip' → logprob: -0.7298105955123901
    2. ' ip' → logprob: -1.1048105955123901
    3. ' pass' → logprob: -2.2298107147216797
    4. '   ' → logprob: -2.8548107147216797
    5. 'pass' → logprob: -3.9798107147216797
    6. ' IP' → logprob: -6.97981071472168
    7. 'IP' → logprob: -7.35481071472168
    8. '	ip' → logprob: -8.22981071472168
    9. '    ' → logprob: -8.85481071472168
    10. 'i' → logprob: -9.35481071472168

Token 679: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5670204162597656
    2. ' =' → logprob: -1.1920204162597656
    3. 'e' → logprob: -2.8170204162597656
    4. 'ange' → logprob: -3.0670204162597656
    5. '   ' → logprob: -4.817020416259766
    6. 'eturn' → logprob: -4.817020416259766
    7. '  ' → logprob: -6.942020416259766
    8. ' ' → logprob: -7.067020416259766
    9. 'ef' → logprob: -7.192020416259766
    10. ',' → logprob: -7.567020416259766

Token 680: ' e' (ID: 319)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.06721414625644684
    2. 'g' → logprob: -3.317214250564575
    3. 'k' → logprob: -4.442214012145996
    4. 's' → logprob: -5.567214012145996
    5. 'l' → logprob: -5.692214012145996
    6. 'd' → logprob: -5.942214012145996
    7. 'b' → logprob: -6.067214012145996
    8. ' c' → logprob: -6.317214012145996
    9. 'n' → logprob: -7.317214012145996
    10. 'w' → logprob: -7.567214012145996

Token 681: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018727028742432594
    2. ' =' → logprob: -4.518726825714111
    3. ',' → logprob: -4.893726825714111
    4. 'x' → logprob: -10.01872730255127
    5. 'q' → logprob: -10.14372730255127
    6. 'v' → logprob: -10.76872730255127
    7. 'n' → logprob: -10.89372730255127
    8. '=sys' → logprob: -12.01872730255127
    9. 'm' → logprob: -12.39372730255127
    10. 'd' → logprob: -12.39372730255127

Token 682: ' p' (ID: 275)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.057152703404426575
    2. 'x' → logprob: -3.30715274810791
    3. 'p' → logprob: -5.55715274810791
    4. 'b' → logprob: -5.80715274810791
    5. 'c' → logprob: -5.93215274810791
    6. 'd' → logprob: -6.05715274810791
    7. 'q' → logprob: -6.55715274810791
    8. 'g' → logprob: -6.93215274810791
    9. '``' → logprob: -7.43215274810791
    10. '```' → logprob: -7.43215274810791

Token 683: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11295274645090103
    2. ' =' → logprob: -2.237952709197998
    3. ',' → logprob: -8.987953186035156
    4. '=sys' → logprob: -12.987953186035156
    5. ' ' → logprob: -13.737953186035156
    6. '  ' → logprob: -14.487953186035156
    7. ')' → logprob: -15.112953186035156
    8. '=input' → logprob: -15.362953186035156
    9. '   ' → logprob: -15.987953186035156
    10. ')=' → logprob: -16.737953186035156

Token 684: ' range' (ID: 3352)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.5838296413421631
    2. ' map' → logprob: -0.8338296413421631
    3. 'IP' → logprob: -5.333829879760742
    4. 'list' → logprob: -6.708829879760742
    5. ' IP' → logprob: -6.958829879760742
    6. ' list' → logprob: -8.083829879760742
    7. '[' → logprob: -8.708829879760742
    8. '0' → logprob: -8.958829879760742
    9. ' ' → logprob: -9.458829879760742
    10. '(map' → logprob: -10.708829879760742

Token 685: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00010509284038562328
    2. '3' → logprob: -9.375104904174805
    3. '(r' → logprob: -11.000104904174805
    4. '(-' → logprob: -13.875104904174805
    5. '(p' → logprob: -14.750104904174805
    6. '(e' → logprob: -14.875104904174805
    7. '((' → logprob: -15.000104904174805
    8. 'r' → logprob: -15.375104904174805
    9. 's' → logprob: -16.000104904174805
    10. '(len' → logprob: -16.000104904174805

Token 686: ' enumerate' (ID: 29671)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.10559903830289841
    2. 'p' → logprob: -3.7305989265441895
    3. 'map' → logprob: -3.8555989265441895
    4. 'e' → logprob: -3.9805989265441895
    5. 'int' → logprob: -4.8555989265441895
    6. ' ' → logprob: -4.9805989265441895
    7. '1' → logprob: -5.7305989265441895
    8. '0' → logprob: -5.8555989265441895
    9. 'r' → logprob: -6.1055989265441895
    10. '10' → logprob: -6.2305989265441895

Token 687: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7786915898323059
    2. '<|end|>' → logprob: -1.2786915302276611
    3. '   ' → logprob: -1.7786915302276611
    4. 'def' → logprob: -2.778691530227661
    5. ' ' → logprob: -5.15369176864624
    6. ',r' → logprob: -5.77869176864624
    7. ':' → logprob: -5.77869176864624
    8. ')' → logprob: -6.02869176864624
    9. 'r' → logprob: -6.15369176864624
    10. ',e' → logprob: -6.27869176864624

Token 688: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.34671661257743835
    2. 'map' → logprob: -1.9717166423797607
    3. 'input' → logprob: -2.4717166423797607
    4. 'zip' → logprob: -3.2217166423797607
    5. 'len' → logprob: -4.096716403961182
    6. 'pow' → logprob: -5.221716403961182
    7. 'sorted' → logprob: -6.346716403961182
    8. 'list' → logprob: -6.721716403961182
    9. 'range' → logprob: -6.971716403961182
    10. 'filter' → logprob: -7.596716403961182

Token 689: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7858062386512756
    2. '<|end|>' → logprob: -0.7858062386512756
    3. '   ' → logprob: -2.660806179046631
    4. '<|end|>' → logprob: -5.785806179046631
    5. '    
' → logprob: -5.910806179046631
    6. ':' → logprob: -6.035806179046631
    7. 'def' → logprob: -6.160806179046631
    8. ')' → logprob: -6.285806179046631
    9. ' ' → logprob: -6.535806179046631
    10. '  
' → logprob: -7.410806179046631

Token 690: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08585643023252487
    2. '<|end|>' → logprob: -3.0858564376831055
    3. ':' → logprob: -4.0858564376831055
    4. 'def' → logprob: -5.2108564376831055
    5. '    
' → logprob: -5.8358564376831055
    6. '
' → logprob: -6.2108564376831055
    7. ',' → logprob: -6.7108564376831055
    8. ':
' → logprob: -6.7108564376831055
    9. ')' → logprob: -6.8358564376831055
    10. '(' → logprob: -6.9608564376831055

Token 691: ' ip' (ID: 7993)
  Prédit: 'ip'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ip' (adapté à ' ip') → logprob: -0.2973272204399109
    2. '   ' → logprob: -1.6723272800445557
    3. 'i' → logprob: -2.9223272800445557
    4. ' ip' → logprob: -5.047327041625977
    5. 'n' → logprob: -7.172327041625977
    6. 's' → logprob: -7.297327041625977
    7. 'a' → logprob: -7.422327041625977
    8. 'I' → logprob: -7.422327041625977
    9. '_ip' → logprob: -7.797327041625977
    10. ' i' → logprob: -7.797327041625977

Token 692: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269376575946808
    2. ' =' → logprob: -2.1269376277923584
    3. 'er' → logprob: -12.251937866210938
    4. ' ' → logprob: -13.751937866210938
    5. '   ' → logprob: -14.001937866210938
    6. 'u' → logprob: -14.376937866210938
    7. 'r' → logprob: -14.626937866210938
    8. '_=' → logprob: -14.751937866210938
    9. 't' → logprob: -15.626937866210938
    10. '_' → logprob: -15.751937866210938

Token 693: ' IP' (ID: 10108)
  Prédit: 'IP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IP' → logprob: -0.0031777136027812958
    2. ' IP' → logprob: -5.753177642822266
    3. '(IP' → logprob: -17.878177642822266
    4. ' ' → logprob: -17.878177642822266
    5. '_IP' → logprob: -18.128177642822266
    6. 'IPAddress' → logprob: -18.253177642822266
    7. 'ip' → logprob: -19.628177642822266
    8. 'Ip' → logprob: -19.753177642822266
    9. '.IP' → logprob: -19.878177642822266
    10. '_ip' → logprob: -20.628177642822266

Token 694: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.012520721182227135
    2. '()
' → logprob: -4.387520790100098
    3. '   ' → logprob: -12.512520790100098
    4. '()
' → logprob: -12.762520790100098
    5. '()

' → logprob: -12.887520790100098
    6. '();' → logprob: -14.637520790100098
    7. 'def' → logprob: -14.762520790100098
    8. '()\' → logprob: -14.887520790100098
    9. '())' → logprob: -15.887520790100098
    10. ')' → logprob: -16.01251983642578

Token 695: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017578504979610443
    2. '<|end|>' → logprob: -4.392578601837158
    3. 'a' → logprob: -6.892578601837158
    4. '    
' → logprob: -7.017578601837158
    5. 'data' → logprob: -7.892578601837158
    6. 'e' → logprob: -7.892578601837158
    7. '```' → logprob: -7.892578601837158
    8. 'ip' → logprob: -8.267578125
    9. '#' → logprob: -8.392578125
    10. 'x' → logprob: -8.517578125

Token 696: ' id' (ID: 1211)
  Prédit: 'idea'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idea' → logprob: -0.08193545043468475
    2. 'i' → logprob: -3.581935405731201
    3. 'a' → logprob: -3.706935405731201
    4. ' idea' → logprob: -3.956935405731201
    5. 'n' → logprob: -6.206935405731201
    6. 'ideas' → logprob: -6.581935405731201
    7. 'Idea' → logprob: -7.206935405731201
    8. '   ' → logprob: -7.331935405731201
    9. 'ide' → logprob: -8.08193588256836
    10. ' a' → logprob: -8.58193588256836

Token 697: ' =' (ID: 314)
  Prédit: 'ea'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ea' → logprob: -0.00012154294381616637
    2. 'e' → logprob: -9.500121116638184
    3. '=' → logprob: -10.125121116638184
    4. ' =' → logprob: -12.125121116638184
    5. 'EA' → logprob: -14.500121116638184
    6. 'a' → logprob: -14.625121116638184
    7. ' ea' → logprob: -15.500121116638184
    8. 'Ea' → logprob: -17.1251220703125
    9. 'ia' → logprob: -17.6251220703125
    10. '```' → logprob: -18.3751220703125

Token 698: ' Idea' (ID: 74190)
  Prédit: 'Idea'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Idea' → logprob: -0.029754657298326492
    2. ' Idea' → logprob: -3.529754638671875
    3. ' ' → logprob: -13.529754638671875
    4. 'IP' → logprob: -13.779754638671875
    5. 'IDE' → logprob: -14.529754638671875
    6. '  ' → logprob: -15.029754638671875
    7. 'Ide' → logprob: -15.029754638671875
    8. 'I' → logprob: -15.279754638671875
    9. ' IP' → logprob: -15.404754638671875
    10. 'Ideal' → logprob: -16.654754638671875

Token 699: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00038169484469108284
    2. '()
' → logprob: -7.8753814697265625
    3. '()

' → logprob: -14.750381469726562
    4. '()]' → logprob: -15.375381469726562
    5. ' ()' → logprob: -15.375381469726562
    6. '()
' → logprob: -15.750381469726562
    7. '();' → logprob: -15.875381469726562
    8. '()\' → logprob: -16.500381469726562
    9. '   ' → logprob: -16.625381469726562
    10. '()}' → logprob: -16.750381469726562

Token 700: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 701: ' mod' (ID: 1812)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7950438261032104
    2. '   ' → logprob: -0.7950438261032104
    3. 'r' → logprob: -2.9200439453125
    4. 'x' → logprob: -4.1700439453125
    5. ' n' → logprob: -4.9200439453125
    6. 'a' → logprob: -5.4200439453125
    7. 't' → logprob: -5.7950439453125
    8. 'l' → logprob: -5.7950439453125
    9. 'q' → logprob: -6.0450439453125
    10. 'd' → logprob: -6.5450439453125

Token 702: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16038304567337036
    2. '=' → logprob: -1.9103829860687256
    3. ',' → logprob: -9.285383224487305
    4. 'ulus' → logprob: -10.785383224487305
    5. ' ' → logprob: -11.160383224487305
    6. '   ' → logprob: -11.535383224487305
    7. 'ulo' → logprob: -11.660383224487305
    8. '  ' → logprob: -13.035383224487305
    9. 'ular' → logprob: -13.410383224487305
    10. '=int' → logprob: -13.785383224487305

Token 703: ' pow' (ID: 9779)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.003705419832840562
    2. '100' → logprob: -5.6287055015563965
    3. '998' → logprob: -10.253705024719238
    4. ' ' → logprob: -10.378705024719238
    5. '1' → logprob: -10.753705024719238
    6. 'int' → logprob: -11.003705024719238
    7. 'pow' → logprob: -15.503705024719238
    8. '0' → logprob: -15.753705024719238
    9. '109' → logprob: -15.753705024719238
    10. '2' → logprob: -16.003705978393555

Token 704: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00037621514638885856
    2. '2' → logprob: -8.375375747680664
    3. '10' → logprob: -9.500375747680664
    4. '<|end|>' → logprob: -10.375375747680664
    5. '(pow' → logprob: -11.375375747680664
    6. '(
' → logprob: -11.375375747680664
    7. 'mod' → logprob: -12.000375747680664
    8. '3' → logprob: -13.750375747680664
    9. '```' → logprob: -13.750375747680664
    10. '1' → logprob: -14.125375747680664

Token 705: '10' (ID: 702)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6743918657302856
    2. '10' → logprob: -1.0493918657302856
    3. '2' → logprob: -2.049391746520996
    4. ')' → logprob: -4.549391746520996
    5. '1' → logprob: -8.424391746520996
    6. ',' → logprob: -8.799391746520996
    7. '100' → logprob: -9.049391746520996
    8. '7' → logprob: -9.049391746520996
    9. ' ' → logprob: -9.549391746520996
    10. ')(' → logprob: -10.174391746520996

Token 706: ',' (ID: 11)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -5.967624019831419e-05
    2. ',' → logprob: -10.000060081481934
    3. ' ' → logprob: -11.750060081481934
    4. '```' → logprob: -12.500060081481934
    5. '   ' → logprob: -13.625060081481934
    6. '**' → logprob: -14.625060081481934
    7. ')' → logprob: -15.625060081481934
    8. '09' → logprob: -15.875060081481934
    9. '    ' → logprob: -16.000059127807617
    10. '(' → logprob: -16.000059127807617

Token 707: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.750000953674316
    3. '```' → logprob: -15.125000953674316
    4. '6' → logprob: -16.250001907348633
    5. '09' → logprob: -17.000001907348633
    6. '+' → logprob: -17.125001907348633
    7. '10' → logprob: -17.750001907348633
    8. '18' → logprob: -17.875001907348633
    9. '8' → logprob: -18.000001907348633
    10. '
' → logprob: -18.250001907348633

Token 708: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -2.45848218582978e-06
    2. '8' → logprob: -14.75000286102295
    3. '6' → logprob: -14.87500286102295
    4. '7' → logprob: -15.12500286102295
    5. '```' → logprob: -15.12500286102295
    6. '10' → logprob: -15.25000286102295
    7. '+' → logprob: -15.37500286102295
    8. ' ' → logprob: -15.50000286102295
    9. '18' → logprob: -15.62500286102295
    10. '09' → logprob: -16.625001907348633

Token 709: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00043233807082287967
    2. '7' → logprob: -8.500432014465332
    3. ')+' → logprob: -8.875432014465332
    4. ')' → logprob: -10.250432014465332
    5. ' +' → logprob: -10.625432014465332
    6. 'plus' → logprob: -11.250432014465332
    7. ',' → logprob: -11.625432014465332
    8. '9' → logprob: -13.125432014465332
    9. '```' → logprob: -13.500432014465332
    10. ' plus' → logprob: -13.625432014465332

Token 710: ' ' (ID: 220)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3133077025413513
    2. '7' → logprob: -1.313307762145996
    3. '```' → logprob: -10.188307762145996
    4. ' +' → logprob: -13.063307762145996
    5. ')+' → logprob: -13.188307762145996
    6. 'plus' → logprob: -13.688307762145996
    7. '9' → logprob: -13.688307762145996
    8. '+
' → logprob: -14.563307762145996
    9. '＋' → logprob: -14.813307762145996
    10. '``' → logprob: -14.813307762145996

Token 711: '10' (ID: 702)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.12694847583770752
    2. '+' → logprob: -2.126948356628418
    3. ' +' → logprob: -11.876948356628418
    4. '9' → logprob: -12.001948356628418
    5. '```' → logprob: -12.376948356628418
    6. 'plus' → logprob: -14.126948356628418
    7. ')+' → logprob: -14.251948356628418
    8. ''+' → logprob: -14.876948356628418
    9. ' ' → logprob: -15.376948356628418
    10. '"+' → logprob: -15.501948356628418

Token 712: ' **' (ID: 6240)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004941154737025499
    2. '7' → logprob: -5.754940986633301
    3. '9' → logprob: -6.379940986633301
    4. ')+' → logprob: -10.2549409866333
    5. '```' → logprob: -10.8799409866333
    6. ' +' → logprob: -12.2549409866333
    7. '09' → logprob: -13.2549409866333
    8. '07' → logprob: -13.3799409866333
    9. ']+' → logprob: -14.1299409866333
    10. '0' → logprob: -14.2549409866333

Token 713: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0019380348967388272
    2. '+' → logprob: -6.2519378662109375
    3. '```' → logprob: -12.376937866210938
    4. '09' → logprob: -12.626937866210938
    5. '10' → logprob: -13.501937866210938
    6. ' ' → logprob: -15.251937866210938
    7. ' +' → logprob: -15.876937866210938
    8. '18' → logprob: -16.626937866210938
    9. '7' → logprob: -16.751937866210938
    10. '``' → logprob: -17.001937866210938

Token 714: '18' (ID: 1157)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0003297440707683563
    2. '+' → logprob: -8.125329971313477
    3. '7' → logprob: -10.625329971313477
    4. '10' → logprob: -12.000329971313477
    5. '```' → logprob: -13.000329971313477
    6. '18' → logprob: -14.875329971313477
    7. '09' → logprob: -16.375329971313477
    8. '``' → logprob: -16.500329971313477
    9. ' ' → logprob: -16.625329971313477
    10. '8' → logprob: -16.750329971313477

Token 715: ' //' (ID: 602)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.013580618426203728
    2. ')' → logprob: -4.513580799102783
    3. '7' → logprob: -6.888580799102783
    4. ')+' → logprob: -7.138580799102783
    5. '+)' → logprob: -8.013580322265625
    6. '9' → logprob: -8.388580322265625
    7. ' +' → logprob: -9.138580322265625
    8. '6' → logprob: -10.388580322265625
    9. '```' → logprob: -12.138580322265625
    10. '),' → logprob: -12.388580322265625

Token 716: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.1025916188955307
    2. '7' → logprob: -2.3525915145874023
    3. '+' → logprob: -6.102591514587402
    4. '10' → logprob: -9.602591514587402
    5. '18' → logprob: -10.977591514587402
    6. '```' → logprob: -10.977591514587402
    7. '6' → logprob: -11.352591514587402
    8. '``' → logprob: -11.977591514587402
    9. '19' → logprob: -12.227591514587402
    10. '15' → logprob: -12.602591514587402

Token 717: '17' (ID: 1422)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.18367910385131836
    2. '7' → logprob: -1.8086791038513184
    3. '10' → logprob: -5.683679103851318
    4. '6' → logprob: -8.808679580688477
    5. '+' → logprob: -9.058679580688477
    6. '19' → logprob: -10.183679580688477
    7. '18' → logprob: -10.183679580688477
    8. '20' → logprob: -10.308679580688477
    9. '``' → logprob: -10.683679580688477
    10. '15' → logprob: -10.808679580688477

Token 718: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6072463393211365
    2. '+' → logprob: -0.8572463393211365
    3. '9' → logprob: -4.232246398925781
    4. ' +' → logprob: -4.982246398925781
    5. ')+' → logprob: -5.232246398925781
    6. '7' → logprob: -6.107246398925781
    7. '+)' → logprob: -6.857246398925781
    8. '0' → logprob: -8.982246398925781
    9. '1' → logprob: -9.357246398925781
    10. '```' → logprob: -9.482246398925781

Token 719: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.11492075026035309
    2. '9' → logprob: -2.2399208545684814
    3. '1' → logprob: -7.864920616149902
    4. '+' → logprob: -8.364920616149902
    5. '19' → logprob: -8.614920616149902
    6. '18' → logprob: -8.614920616149902
    7. '6' → logprob: -8.739920616149902
    8. '17' → logprob: -9.239920616149902
    9. '10' → logprob: -9.364920616149902
    10. '13' → logprob: -9.489920616149902

Token 720: '1' (ID: 16)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.6093848943710327
    2. '9' → logprob: -1.4843848943710327
    3. '1' → logprob: -2.1093850135803223
    4. '3' → logprob: -2.7343850135803223
    5. '5' → logprob: -4.609385013580322
    6. '6' → logprob: -4.859385013580322
    7. '11' → logprob: -5.609385013580322
    8. '8' → logprob: -5.734385013580322
    9. '2' → logprob: -5.734385013580322
    10. '13' → logprob: -5.734385013580322

Token 721: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009955235756933689
    2. '+' → logprob: -4.884955406188965
    3. '7' → logprob: -7.509955406188965
    4. '9' → logprob: -7.884955406188965
    5. '1' → logprob: -8.009955406188965
    6. ')+' → logprob: -8.259955406188965
    7. '()' → logprob: -9.259955406188965
    8. ' +' → logprob: -9.259955406188965
    9. '**' → logprob: -9.509955406188965
    10. '6' → logprob: -9.509955406188965

Token 722: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09442533552646637
    2. '<|end|>' → logprob: -2.8444254398345947
    3. '
' → logprob: -4.344425201416016
    4. '(' → logprob: -5.219425201416016
    5. '   ' → logprob: -5.719425201416016
    6. '%' → logprob: -6.219425201416016
    7. '(
' → logprob: -6.594425201416016
    8. '+' → logprob: -6.594425201416016
    9. ')
' → logprob: -6.844425201416016
    10. '[' → logprob: -7.344425201416016

Token 723: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6620386242866516
    2. ' ' → logprob: -0.9120386242866516
    3. '0' → logprob: -3.787038564682007
    4. '7' → logprob: -4.662038803100586
    5. '2' → logprob: -4.912038803100586
    6. '10' → logprob: -4.912038803100586
    7. 'pow' → logprob: -4.912038803100586
    8. '17' → logprob: -5.537038803100586
    9. '3' → logprob: -5.662038803100586
    10. '6' → logprob: -6.037038803100586

Token 724: '7' (ID: 22)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6175330281257629
    2. '7' → logprob: -1.2425329685211182
    3. '10' → logprob: -3.117532968521118
    4. '17' → logprob: -3.617532968521118
    5. '0' → logprob: -4.367533206939697
    6. 'pow' → logprob: -4.492533206939697
    7. '6' → logprob: -4.617533206939697
    8. '8' → logprob: -4.992533206939697
    9. '9' → logprob: -5.117533206939697
    10. '3' → logprob: -5.117533206939697

Token 725: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 726: ' all' (ID: 722)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.6507923603057861
    2. ' False' → logprob: -1.2757923603057861
    3. ' p' → logprob: -3.650792360305786
    4. ' __' → logprob: -3.775792360305786
    5. ' ' → logprob: -4.150792121887207
    6. 'pow' → logprob: -4.275792121887207
    7. '0' → logprob: -4.525792121887207
    8. '__' → logprob: -4.650792121887207
    9. 'True' → logprob: -4.650792121887207
    10. 'p' → logprob: -4.650792121887207

Token 727: '([' (ID: 5194)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -1.2594590187072754
    2. '([' → logprob: -1.2594590187072754
    3. '(map' → logprob: -1.8844590187072754
    4. '(x' → logprob: -2.0094590187072754
    5. '(' → logprob: -2.8844590187072754
    6. '(i' → logprob: -3.6344590187072754
    7. '(r' → logprob: -4.009459018707275
    8. '(range' → logprob: -4.634459018707275
    9. '(False' → logprob: -5.259459018707275
    10. '(is' → logprob: -5.384459018707275

Token 728: 'True' (ID: 4710)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3648037314414978
    2. 'x' → logprob: -1.6148037910461426
    3. 'p' → logprob: -3.1148037910461426
    4. 'False' → logprob: -4.114803791046143
    5. 'i' → logprob: -4.614803791046143
    6. 'e' → logprob: -4.614803791046143
    7. '(r' → logprob: -4.739803791046143
    8. '(x' → logprob: -5.739803791046143
    9. 'a' → logprob: -5.739803791046143
    10. '0' → logprob: -5.739803791046143

Token 729: '])' (ID: 4636)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06702219694852829
    2. '])' → logprob: -3.4420220851898193
    3. ')' → logprob: -4.067022323608398
    4. ')]' → logprob: -5.442022323608398
    5. ')])' → logprob: -5.942022323608398
    6. ' ,' → logprob: -6.317022323608398
    7. ',
' → logprob: -6.567022323608398
    8. ' for' → logprob: -6.692022323608398
    9. ' ])' → logprob: -7.442022323608398
    10. ' and' → logprob: -7.567022323608398

Token 730: ' else' (ID: 1203)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5141190886497498
    2. '<|end|>' → logprob: -1.3891191482543945
    3. ' else' → logprob: -2.6391191482543945
    4. ')' → logprob: -3.0141191482543945
    5. 'else' → logprob: -4.8891191482543945
    6. '+' → logprob: -5.0141191482543945
    7. '<|end|>' → logprob: -5.3891191482543945
    8. '   ' → logprob: -5.6391191482543945
    9. '
' → logprob: -5.8891191482543945
    10. ' ' → logprob: -6.5141191482543945

Token 731: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.7632696032524109
    2. '0' → logprob: -1.5132696628570557
    3. '1' → logprob: -1.5132696628570557
    4. 'None' → logprob: -3.2632696628570557
    5. '100' → logprob: -3.3882696628570557
    6. 'pow' → logprob: -4.638269424438477
    7. ' ' → logprob: -5.638269424438477
    8. 'mod' → logprob: -6.138269424438477
    9. '2' → logprob: -6.138269424438477
    10. ' None' → logprob: -6.763269424438477

Token 732: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.7645014524459839
    2. '1' → logprob: -1.0145014524459839
    3. '0' → logprob: -2.7645015716552734
    4. '100' → logprob: -3.0145015716552734
    5. 'None' → logprob: -3.1395015716552734
    6. 'pow' → logprob: -4.889501571655273
    7. 'int' → logprob: -5.389501571655273
    8. 'mod' → logprob: -6.639501571655273
    9. '998' → logprob: -7.014501571655273
    10. '2' → logprob: -7.389501571655273

Token 733: ' **' (ID: 6240)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6228117346763611
    2. '<|end|>' → logprob: -1.4978117942810059
    3. ')' → logprob: -1.6228117942810059
    4. '):' → logprob: -4.747811794281006
    5. '<|end|>' → logprob: -5.122811794281006
    6. '   ' → logprob: -5.247811794281006
    7. '**' → logprob: -5.497811794281006
    8. ':
' → logprob: -5.497811794281006
    9. ')
' → logprob: -5.622811794281006
    10. '):
' → logprob: -6.122811794281006

Token 734: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0013409581733867526
    2. '18' → logprob: -6.626340866088867
    3. '19' → logprob: -11.501340866088867
    4. '```' → logprob: -13.501340866088867
    5. '10' → logprob: -14.251340866088867
    6. '12' → logprob: -14.376340866088867
    7. '09' → logprob: -14.751340866088867
    8. ' ' → logprob: -15.001340866088867
    9. '15' → logprob: -15.251340866088867
    10. '20' → logprob: -16.126340866088867

Token 735: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.03056291863322258
    2. '18' → logprob: -3.5305628776550293
    3. '19' → logprob: -7.905562877655029
    4. '7' → logprob: -9.905563354492188
    5. '15' → logprob: -10.030563354492188
    6. '10' → logprob: -10.030563354492188
    7. '20' → logprob: -10.155563354492188
    8. '8' → logprob: -10.155563354492188
    9. '12' → logprob: -10.155563354492188
    10. '17' → logprob: -10.405563354492188

Token 736: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004651911091059446
    2. ' +' → logprob: -5.37965202331543
    3. '7' → logprob: -10.50465202331543
    4. '6' → logprob: -13.12965202331543
    5. '   ' → logprob: -14.25465202331543
    6. '+
' → logprob: -14.50465202331543
    7. '```' → logprob: -15.50465202331543
    8. ' ' → logprob: -15.62965202331543
    9. ' ' → logprob: -15.87965202331543
    10. '＋' → logprob: -16.00465202331543

Token 737: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.6047699318733066e-05
    2. '9' → logprob: -11.125016212463379
    3. ' ' → logprob: -14.375016212463379
    4. '+' → logprob: -15.125016212463379
    5. '```' → logprob: -15.875016212463379
    6. '19' → logprob: -16.500015258789062
    7. '   ' → logprob: -16.625015258789062
    8. '07' → logprob: -17.562515258789062
    9. '1' → logprob: -17.625015258789062
    10. '67' → logprob: -17.937515258789062

Token 738: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.4140441635390744e-05
    2. '9' → logprob: -11.250014305114746
    3. '19' → logprob: -14.750014305114746
    4. '+' → logprob: -16.12501335144043
    5. '```' → logprob: -16.25001335144043
    6. '8' → logprob: -16.68751335144043
    7. ' ' → logprob: -16.93751335144043
    8. '67' → logprob: -17.00001335144043
    9. '6' → logprob: -17.12501335144043
    10. '07' → logprob: -17.18751335144043

Token 739: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 740: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6900247931480408
    2. '   ' → logprob: -1.6900248527526855
    3. '<|end|>' → logprob: -2.0650248527526855
    4. ')' → logprob: -2.1900248527526855
    5. '
' → logprob: -3.5650248527526855
    6. '[' → logprob: -4.8150248527526855
    7. '#' → logprob: -4.9400248527526855
    8. 'r' → logprob: -5.4400248527526855
    9. '(p' → logprob: -5.8150248527526855
    10. '(r' → logprob: -5.8150248527526855

Token 741: ' a' (ID: 261)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.3406177759170532
    2. 'r' → logprob: -1.7156177759170532
    3. ')' → logprob: -1.8406177759170532
    4. '   ' → logprob: -2.4656176567077637
    5. '#' → logprob: -2.8406176567077637
    6. 'n' → logprob: -3.0906176567077637
    7. 'for' → logprob: -3.0906176567077637
    8. '<|end|>' → logprob: -3.2156176567077637
    9. 'a' (adapté à ' a') → logprob: -3.5906176567077637
    10. 'data' → logprob: -3.7156176567077637

Token 742: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3168978989124298
    2. ',' → logprob: -1.4418978691101074
    3. '=' → logprob: -3.6918978691101074
    4. ' ,' → logprob: -6.191897869110107
    5. 'r' → logprob: -6.316897869110107
    6. '   ' → logprob: -6.316897869110107
    7. '[' → logprob: -6.566897869110107
    8. ' ' → logprob: -7.566897869110107
    9. ',b' → logprob: -7.816897869110107
    10. ' =[' → logprob: -7.816897869110107

Token 743: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.15604537725448608
    2. 'ip' → logprob: -2.406045436859131
    3. ' b' → logprob: -3.406045436859131
    4. ' ip' → logprob: -4.781045436859131
    5. '*' → logprob: -5.281045436859131
    6. 'a' → logprob: -5.531045436859131
    7. 'e' → logprob: -7.281045436859131
    8. 'i' → logprob: -7.781045436859131
    9. 'int' → logprob: -7.781045436859131
    10. ' =' → logprob: -8.031044960021973

Token 744: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11010252684354782
    2. ' =' → logprob: -2.735102415084839
    3. ',' → logprob: -3.235102415084839
    4. ' ,' → logprob: -11.985102653503418
    5. '<|end|>' → logprob: -13.235102653503418
    6. '=input' → logprob: -13.360102653503418
    7. ' ' → logprob: -14.235102653503418
    8. ',b' → logprob: -14.735102653503418
    9. '=int' → logprob: -14.860102653503418
    10. ')' → logprob: -15.360102653503418

Token 745: ' ip' (ID: 7993)
  Prédit: 'ip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ip' → logprob: -0.5346218347549438
    2. ' ip' → logprob: -1.1596218347549438
    3. 'map' → logprob: -2.6596217155456543
    4. ' map' → logprob: -3.5346217155456543
    5. '(ip' → logprob: -8.284622192382812
    6. '0' → logprob: -8.534622192382812
    7. 'list' → logprob: -8.784622192382812
    8. ' ' → logprob: -9.409622192382812
    9. 'IP' → logprob: -9.534622192382812
    10. 'int' → logprob: -9.534622192382812

Token 746: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6228118538856506
    2. '.I' → logprob: -0.8728118538856506
    3. '().' → logprob: -3.372811794281006
    4. '.S' → logprob: -4.622811794281006
    5. '()' → logprob: -7.372811794281006
    6. '.IP' → logprob: -8.247812271118164
    7. ' .' → logprob: -8.497812271118164
    8. 'IL' → logprob: -8.747812271118164
    9. '	IL' → logprob: -9.372812271118164
    10. 'ILS' → logprob: -10.247812271118164

Token 747: 'IL' (ID: 2654)
  Prédit: 'ILS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ILS' → logprob: -0.12069982290267944
    2. 'IL' → logprob: -2.370699882507324
    3. 'I' → logprob: -3.995699882507324
    4. 'S' → logprob: -6.495699882507324
    5. 'ILLS' → logprob: -9.870699882507324
    6. 'ILL' → logprob: -10.308199882507324
    7. '	IL' → logprob: -10.370699882507324
    8. 'ILI' → logprob: -10.433199882507324
    9. 'IFS' → logprob: -10.433199882507324
    10. 'ILES' → logprob: -10.870699882507324

Token 748: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00033272415748797357
    2. '(' → logprob: -8.500332832336426
    3. '(),' → logprob: -9.750332832336426
    4. '().' → logprob: -10.125332832336426
    5. '()
' → logprob: -11.375332832336426
    6. ' ()' → logprob: -11.625332832336426
    7. '()[' → logprob: -12.875332832336426
    8. '()]' → logprob: -13.375332832336426
    9. '()(' → logprob: -13.500332832336426
    10. '();' → logprob: -13.750332832336426

Token 749: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 750: ' #' (ID: 1069)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.900127649307251
    2. '<|end|>' → logprob: -1.400127649307251
    3. '   ' → logprob: -1.900127649307251
    4. ' p' → logprob: -2.400127649307251
    5. '
' → logprob: -3.025127649307251
    6. ')' → logprob: -3.775127649307251
    7. ',p' → logprob: -5.150127410888672
    8. ',' → logprob: -5.525127410888672
    9. ' ' → logprob: -5.650127410888672
    10. 'a' → logprob: -5.775127410888672

Token 751: ' Now' (ID: 6549)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.0715965032577515
    2. 'c' → logprob: -1.5715965032577515
    3. '   ' → logprob: -1.9465965032577515
    4. ' p' → logprob: -2.071596622467041
    5. ' for' → logprob: -2.946596622467041
    6. ' c' → logprob: -3.446596622467041
    7. ' if' → logprob: -3.696596622467041
    8. 'if' → logprob: -4.946596622467041
    9. 'print' → logprob: -5.071596622467041
    10. 'a' → logprob: -5.071596622467041

Token 752: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3247677981853485
    2. '<|end|>' → logprob: -1.574767827987671
    3. '
' → logprob: -4.324767589569092
    4. 'p' → logprob: -4.449767589569092
    5. 'c' → logprob: -4.824767589569092
    6. ' p' → logprob: -4.949767589569092
    7. ',' → logprob: -5.199767589569092
    8. ')' → logprob: -5.574767589569092
    9. ' if' → logprob: -5.824767589569092
    10. '#' → logprob: -6.449767589569092

Token 753: ' need' (ID: 1309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019827015697956085
    2. ',b' → logprob: -4.644826889038086
    3. '+' → logprob: -5.269826889038086
    4. ' ,' → logprob: -6.019826889038086
    5. '=' → logprob: -7.519826889038086
    6. ')' → logprob: -7.894826889038086
    7. '<|end|>' → logprob: -8.519826889038086
    8. '+=' → logprob: -8.894826889038086
    9. '+b' → logprob: -9.019826889038086
    10. ' and' → logprob: -9.019826889038086

Token 754: 'lessly' (ID: 24550)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.050176795572042465
    2. ',b' → logprob: -3.9251768589019775
    3. '=' → logprob: -4.050176620483398
    4. ' ,' → logprob: -5.425176620483398
    5. '   ' → logprob: -5.925176620483398
    6. ' =' → logprob: -6.300176620483398
    7. 'b' → logprob: -7.425176620483398
    8. '  ' → logprob: -7.800176620483398
    9. ' to' → logprob: -8.175176620483398
    10. 'd' → logprob: -8.425176620483398

Token 755: ' complex' (ID: 8012)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6202833652496338
    2. '=' → logprob: -1.2452833652496338
    3. '+=' → logprob: -1.9952833652496338
    4. '+' → logprob: -3.870283365249634
    5. 'b' → logprob: -5.870283126831055
    6. 'a' → logprob: -5.995283126831055
    7. '*=' → logprob: -5.995283126831055
    8. ',b' → logprob: -6.370283126831055
    9. ' =' → logprob: -6.870283126831055
    10. ' +=' → logprob: -6.995283126831055

Token 756: ' approach' (ID: 7139)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5397520065307617
    2. '<|end|>' → logprob: -1.9147520065307617
    3. ' expression' → logprob: -2.4147520065307617
    4. ' code' → logprob: -2.6647520065307617
    5. '+' → logprob: -3.0397520065307617
    6. 'a' → logprob: -3.1647520065307617
    7. ')' → logprob: -3.4147520065307617
    8. 'expression' → logprob: -3.7897520065307617
    9. '.' → logprob: -3.9147520065307617
    10. ' approach' → logprob: -3.9147520065307617

Token 757: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2922421395778656
    2. '<|end|>' → logprob: -1.417242169380188
    3. ')' → logprob: -5.917242050170898
    4. '<|end|>' → logprob: -6.292242050170898
    5. ',' → logprob: -6.542242050170898
    6. '
' → logprob: -6.917242050170898
    7. 'def' → logprob: -7.042242050170898
    8. '.' → logprob: -7.917242050170898
    9. ' for' → logprob: -8.167242050170898
    10. 'a' → logprob: -8.292242050170898

Token 758: ' simple' (ID: 4705)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.6635564565658569
    2. 'p' → logprob: -2.5385565757751465
    3. 'finding' → logprob: -2.7885565757751465
    4. 'a' → logprob: -2.7885565757751465
    5. 'b' → logprob: -3.0385565757751465
    6. 'mod' → logprob: -3.5385565757751465
    7. 'the' → logprob: -3.6635565757751465
    8. 'sum' → logprob: -3.9135565757751465
    9. 'comb' → logprob: -4.0385565757751465
    10. 'reading' → logprob: -4.1635565757751465

Token 759: ' max' (ID: 2999)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8623151183128357
    2. 'p' → logprob: -2.1123151779174805
    3. ' operation' → logprob: -2.2373151779174805
    4. ' calculation' → logprob: -3.1123151779174805
    5. 'operation' → logprob: -3.2373151779174805
    6. 'b' → logprob: -3.4873151779174805
    7. ' addition' → logprob: -3.6123151779174805
    8. ' a' → logprob: -3.7373151779174805
    9. ' p' → logprob: -3.8623151779174805
    10. 's' → logprob: -4.1123151779174805

Token 760: '-s' (ID: 2011)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.2712758779525757
    2. '(' → logprob: -3.1462759971618652
    3. 'a' → logprob: -3.2712759971618652
    4. '_value' → logprob: -3.5212759971618652
    5. '_,' → logprob: -3.7712759971618652
    6. 'imum' → logprob: -4.021275997161865
    7. ' =' → logprob: -4.146275997161865
    8. 'def' → logprob: -4.771275997161865
    9. '_' → logprob: -4.771275997161865
    10. ',' → logprob: -4.896275997161865

Token 761: 'um' (ID: 394)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1770365238189697
    2. 'plit' → logprob: -1.3020365238189697
    3. 'ub' → logprob: -2.5520365238189697
    4. 'um' → logprob: -2.9270365238189697
    5. 'e' → logprob: -3.1770365238189697
    6. '(a' → logprob: -3.4270365238189697
    7. '_' → logprob: -3.8020365238189697
    8. 'entence' → logprob: -3.9270365238189697
    9. '...' → logprob: -4.427036285400391
    10. 'plits' → logprob: -4.427036285400391

Token 762: '-of' (ID: 13108)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08736392855644226
    2. '<|end|>' → logprob: -2.8373639583587646
    3. ',' → logprob: -4.9623637199401855
    4. ')' → logprob: -5.2123637199401855
    5. '<|end|>' → logprob: -6.0873637199401855
    6. 'a' → logprob: -6.2123637199401855
    7. ' =' → logprob: -7.0873637199401855
    8. 's' → logprob: -7.0873637199401855
    9. '
' → logprob: -7.7123637199401855
    10. 'max' → logprob: -7.7123637199401855

Token 763: '-max' (ID: 102577)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -1.0438709259033203
    2. 'sub' → logprob: -1.4188709259033203
    3. 'a' → logprob: -1.5438709259033203
    4. 'two' → logprob: -1.9188709259033203
    5. 'pair' → logprob: -4.16887092590332
    6. 'adj' → logprob: -5.16887092590332
    7. 's' → logprob: -5.54387092590332
    8. '2' → logprob: -5.79387092590332
    9. 'range' → logprob: -6.16887092590332
    10. 'ranges' → logprob: -6.29387092590332

Token 764: ' operation' (ID: 9506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 765: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.121126689016819
    2. '<|end|>' → logprob: -2.371126651763916
    3. '
' → logprob: -4.621126651763916
    4. ')' → logprob: -5.621126651763916
    5. '<|end|>' → logprob: -6.496126651763916
    6. ',' → logprob: -6.871126651763916
    7. 'a' → logprob: -6.996126651763916
    8. '...' → logprob: -7.371126651763916
    9. '    
' → logprob: -7.496126651763916
    10. '#' → logprob: -7.746126651763916

Token 766: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08675596117973328
    2. '<|end|>' → logprob: -2.7117559909820557
    3. ')' → logprob: -5.086755752563477
    4. '
' → logprob: -5.336755752563477
    5. 'a' → logprob: -6.961755752563477
    6. 'max' → logprob: -7.586755752563477
    7. '<|end|>' → logprob: -7.586755752563477
    8. '[' → logprob: -7.711755752563477
    9. '    
' → logprob: -7.836755752563477
    10. 'p' → logprob: -7.961755752563477

Token 767: ' candidates' (ID: 18116)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003842828795313835
    2. '<|end|>' → logprob: -6.503842830657959
    3. 'c' → logprob: -7.253842830657959
    4. 'max' → logprob: -7.753842830657959
    5. 's' → logprob: -8.5038423538208
    6. ')' → logprob: -8.5038423538208
    7. '
' → logprob: -9.0038423538208
    8. 'p' → logprob: -9.2538423538208
    9. 'def' → logprob: -9.2538423538208
    10. 'a' → logprob: -9.3788423538208

Token 768: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47438305616378784
    2. '=' → logprob: -0.9743830561637878
    3. ',' → logprob: -8.224383354187012
    4. '=[]' → logprob: -11.224383354187012
    5. 's' → logprob: -12.349383354187012
    6. ' =[' → logprob: -12.474383354187012
    7. '<|end|>' → logprob: -12.849383354187012
    8. '   ' → logprob: -13.099383354187012
    9. ' ' → logprob: -13.099383354187012
    10. '=[' → logprob: -13.224383354187012

Token 769: ' list' (ID: 1562)
  Prédit: '[id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[id' → logprob: -0.20650792121887207
    2. 'id' → logprob: -2.206507921218872
    3. '[(' → logprob: -3.581507921218872
    4. '[' → logprob: -3.706507921218872
    5. '[ip' → logprob: -5.081507682800293
    6. '[a' → logprob: -5.456507682800293
    7. ' [' → logprob: -5.956507682800293
    8. 'list' → logprob: -6.081507682800293
    9. '(id' → logprob: -6.581507682800293
    10. '[]' → logprob: -6.581507682800293

Token 770: '(per' (ID: 96497)
  Prédit: '(per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(per' → logprob: -0.3105679452419281
    2. '(chain' → logprob: -1.5605679750442505
    3. '(range' → logprob: -3.435567855834961
    4. '(map' → logprob: -4.060567855834961
    5. '(acc' → logprob: -6.435567855834961
    6. 'per' → logprob: -6.560567855834961
    7. '(it' → logprob: -6.935567855834961
    8. 'chain' → logprob: -7.185567855834961
    9. '(filter' → logprob: -7.560567855834961
    10. '(' → logprob: -7.810567855834961

Token 771: 'mut' (ID: 10522)
  Prédit: 'mut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mut' → logprob: -0.0003032881941180676
    2. 'per' → logprob: -8.375303268432617
    3. 'utations' → logprob: -10.000303268432617
    4. 'ermut' → logprob: -11.125303268432617
    5. 'r' → logprob: -12.250303268432617
    6. 'm' → logprob: -13.500303268432617
    7. 't' → logprob: -14.000303268432617
    8. 'range' → logprob: -14.125303268432617
    9. ' permutations' → logprob: -14.375303268432617
    10. 'amut' → logprob: -14.375303268432617

Token 772: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.014208288863301277
    2. 'utations' → logprob: -4.2642083168029785
    3. 'utions' → logprob: -10.51420783996582
    4. 'mut' → logprob: -11.51420783996582
    5. 'ut' → logprob: -12.63920783996582
    6. 'u' → logprob: -13.38920783996582
    7. '```' → logprob: -14.76420783996582
    8. 't' → logprob: -14.76420783996582
    9. 's' → logprob: -15.26420783996582
    10. 'ections' → logprob: -15.38920783996582

Token 773: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.2272919863462448
    2. '(a' → logprob: -1.8522919416427612
    3. '((' → logprob: -3.102292060852051
    4. '(range' → logprob: -6.727292060852051
    5. '[a' → logprob: -8.72729206085205
    6. '(([' → logprob: -9.97729206085205
    7. '(' → logprob: -10.22729206085205
    8. 'a' → logprob: -11.10229206085205
    9. 'range' → logprob: -11.60229206085205
    10. '([(' → logprob: -12.60229206085205

Token 774: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -8.0536883615423e-05
    2. ' a' → logprob: -10.125080108642578
    3. '   ' → logprob: -10.875080108642578
    4. 'b' → logprob: -12.125080108642578
    5. '(a' → logprob: -12.500080108642578
    6. '0' → logprob: -13.250080108642578
    7. '
' → logprob: -13.375080108642578
    8. '1' → logprob: -13.500080108642578
    9. '[a' → logprob: -13.750080108642578
    10. '*a' → logprob: -14.250080108642578

Token 775: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.043602392077445984
    2. ',b' → logprob: -3.168602466583252
    3. ' ,' → logprob: -7.793602466583252
    4. ',a' → logprob: -9.918601989746094
    5. 'b' → logprob: -10.043601989746094
    6. 'a' → logprob: -10.293601989746094
    7. '[' → logprob: -11.043601989746094
    8. '+' → logprob: -11.293601989746094
    9. '+b' → logprob: -11.543601989746094
    10. ',p' → logprob: -11.918601989746094

Token 776: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00376005913130939
    2. ' b' → logprob: -5.628759860992432
    3. 'a' → logprob: -9.12876033782959
    4. '   ' → logprob: -11.00376033782959
    5. '0' → logprob: -12.00376033782959
    6. ' ' → logprob: -12.37876033782959
    7. 'e' → logprob: -12.50376033782959
    8. 'mod' → logprob: -12.62876033782959
    9. '-b' → logprob: -13.37876033782959
    10. 'p' → logprob: -13.62876033782959

Token 777: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.2775404453277588
    2. ']))' → logprob: -1.5275404453277588
    3. ',' → logprob: -3.777540445327759
    4. ']))
' → logprob: -6.40254020690918
    5. '),' → logprob: -8.27754020690918
    6. ']' → logprob: -9.02754020690918
    7. '   ' → logprob: -9.77754020690918
    8. '])' → logprob: -10.15254020690918
    9. ' ' → logprob: -10.27754020690918
    10. ']))

' → logprob: -10.52754020690918

Token 778: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005620885640382767
    2. ' ' → logprob: -7.5005621910095215
    3. '1' → logprob: -11.750561714172363
    4. '   ' → logprob: -14.375561714172363
    5. 'r' → logprob: -15.500561714172363
    6. ')' → logprob: -15.625561714172363
    7. '  ' → logprob: -15.750561714172363
    8. '    ' → logprob: -16.25056266784668
    9. '0' → logprob: -17.37556266784668
    10. ' r' → logprob: -17.50056266784668

Token 779: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003944496565964073
    2. ' ' → logprob: -7.875394344329834
    3. '1' → logprob: -11.250394821166992
    4. '   ' → logprob: -14.250394821166992
    5. ')' → logprob: -14.750394821166992
    6. '  ' → logprob: -15.500394821166992
    7. 'r' → logprob: -16.875394821166992
    8. 'len' → logprob: -17.125394821166992
    9. '    ' → logprob: -17.250394821166992
    10. '0' → logprob: -17.687894821166992

Token 780: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00026169343618676066
    2. ')' → logprob: -8.500261306762695
    3. '))
' → logprob: -10.125261306762695
    4. ')))' → logprob: -12.125261306762695
    5. ' ))' → logprob: -12.125261306762695
    6. '()))' → logprob: -13.125261306762695
    7. ',' → logprob: -13.625261306762695
    8. '))[' → logprob: -14.125261306762695
    9. '),' → logprob: -14.625261306762695
    10. '));' → logprob: -14.875261306762695

Token 781: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24652564525604248
    2. '   ' → logprob: -2.371525764465332
    3. '<|end|>' → logprob: -2.621525764465332
    4. '[' → logprob: -3.621525764465332
    5. ',' → logprob: -4.871525764465332
    6. 'a' → logprob: -5.746525764465332
    7. ' ' → logprob: -5.746525764465332
    8. ':' → logprob: -5.871525764465332
    9. 'p' → logprob: -6.621525764465332
    10. '(' → logprob: -6.996525764465332

Token 782: ' first' (ID: 1577)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9029300808906555
    2. 'p' → logprob: -0.9029300808906555
    3. ' p' → logprob: -2.7779300212860107
    4. ' ' → logprob: -3.1529300212860107
    5. '<|end|>' → logprob: -3.1529300212860107
    6. '   ' → logprob: -4.27793025970459
    7. '[' → logprob: -4.77793025970459
    8. '(p' → logprob: -5.65293025970459
    9. 'token' → logprob: -5.90293025970459
    10. ',' → logprob: -5.90293025970459

Token 783: ' =' (ID: 314)
  Prédit: '_token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_token' → logprob: -1.187815546989441
    2. '_' → logprob: -1.312815546989441
    3. ',' → logprob: -1.937815546989441
    4. '=' → logprob: -2.1878156661987305
    5. ' =' → logprob: -2.6878156661987305
    6. '_max' → logprob: -4.1878156661987305
    7. '_p' → logprob: -4.3128156661987305
    8. '_candidate' → logprob: -4.3128156661987305
    9. '_val' → logprob: -4.4378156661987305
    10. '_sum' → logprob: -4.8128156661987305

Token 784: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.00614433828741312
    2. ' max' → logprob: -5.1311445236206055
    3. '(max' → logprob: -9.881144523620605
    4. '0' → logprob: -10.131144523620605
    5. 'a' → logprob: -10.506144523620605
    6. 'reduce' → logprob: -11.256144523620605
    7. 'list' → logprob: -11.506144523620605
    8. '[max' → logprob: -11.631144523620605
    9. 'c' → logprob: -11.756144523620605
    10. 'sorted' → logprob: -11.881144523620605

Token 785: '(map' (ID: 16946)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0712798610329628
    2. '(a' → logprob: -3.446279764175415
    3. '([' → logprob: -4.321280002593994
    4. '(max' → logprob: -4.946280002593994
    5. '(first' → logprob: -5.321280002593994
    6. '(map' → logprob: -5.571280002593994
    7. '(' → logprob: -5.571280002593994
    8. '(sum' → logprob: -6.196280002593994
    9. '((' → logprob: -6.946280002593994
    10. '(chain' → logprob: -8.071279525756836

Token 786: '(item' (ID: 10016)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.5594491362571716
    2. '(lambda' → logprob: -0.9344491362571716
    3. '(sum' → logprob: -3.8094491958618164
    4. 'max' → logprob: -4.559449195861816
    5. 'lambda' → logprob: -6.559449195861816
    6. 'sum' → logprob: -7.184449195861816
    7. '(item' → logprob: -7.309449195861816
    8. '(' → logprob: -9.184449195861816
    9. '(add' → logprob: -10.934449195861816
    10. '(abs' → logprob: -11.309449195861816

Token 787: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -9.817902173381299e-05
    2. 'max' → logprob: -10.37509822845459
    3. 'getitem' → logprob: -10.50009822845459
    4. 'get' → logprob: -10.62509822845459
    5. '(lambda' → logprob: -12.62509822845459
    6. 'lambda' → logprob: -13.00009822845459
    7. '(max' → logprob: -13.00009822845459
    8. '(' → logprob: -14.00009822845459
    9. '=lambda' → logprob: -14.12509822845459
    10. '(get' → logprob: -14.25009822845459

Token 788: '(' (ID: 7)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1812429279088974
    2. '(' → logprob: -2.0562429428100586
    3. '1' → logprob: -3.3062429428100586
    4. '(-' → logprob: -7.056242942810059
    5. '-' → logprob: -8.931242942810059
    6. ' ' → logprob: -9.556242942810059
    7. '
' → logprob: -10.431242942810059
    8. ' (' → logprob: -10.931242942810059
    9. '   ' → logprob: -11.306242942810059
    10. '```' → logprob: -11.431242942810059

Token 789: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5782588124275208
    2. '1' → logprob: -0.8282588124275208
    3. '-' → logprob: -6.203258991241455
    4. '(' → logprob: -9.078258514404297
    5. ' ' → logprob: -9.078258514404297
    6. ')' → logprob: -11.578258514404297
    7. '
' → logprob: -11.640758514404297
    8. ' -' → logprob: -11.890758514404297
    9. '```' → logprob: -12.078258514404297
    10. '[' → logprob: -12.203258514404297

Token 790: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.18033625185489655
    2. ',' → logprob: -1.9303362369537354
    3. ',c' → logprob: -3.9303362369537354
    4. 'c' → logprob: -9.680335998535156
    5. ',),' → logprob: -9.930335998535156
    6. '   ' → logprob: -10.180335998535156
    7. '(c' → logprob: -10.430335998535156
    8. ')' → logprob: -11.180335998535156
    9. '>,' → logprob: -11.305335998535156
    10. ' ,' → logprob: -11.555335998535156

Token 791: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.001587462262250483
    2. ' candidates' → logprob: -6.501587390899658
    3. '[c' → logprob: -10.126587867736816
    4. '[' → logprob: -10.626587867736816
    5. '   ' → logprob: -12.376587867736816
    6. ' ' → logprob: -12.751587867736816
    7. ')' → logprob: -13.501587867736816
    8. '(c' → logprob: -13.626587867736816
    9. '[(' → logprob: -13.751587867736816
    10. 'first' → logprob: -13.751587867736816

Token 792: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.013448669575154781
    2. '))
' → logprob: -4.388448715209961
    3. ')))' → logprob: -7.888448715209961
    4. '   ' → logprob: -8.638448715209961
    5. ')' → logprob: -8.888448715209961
    6. '),' → logprob: -9.138448715209961
    7. '()))' → logprob: -9.513448715209961
    8. ' ))' → logprob: -10.763448715209961
    9. '  ' → logprob: -11.513448715209961
    10. ' ' → logprob: -11.763448715209961

Token 793: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0510113462805748
    2. '<|end|>' → logprob: -3.176011323928833
    3. ' ' → logprob: -5.801011562347412
    4. '   ' → logprob: -6.176011562347412
    5. '[' → logprob: -7.551011562347412
    6. ' )' → logprob: -7.676011562347412
    7. '#' → logprob: -7.801011562347412
    8. 'a' → logprob: -8.176011085510254
    9. ',' → logprob: -8.301011085510254
    10. ':' → logprob: -9.176011085510254

Token 794: ' second' (ID: 3099)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02334459312260151
    2. '(' → logprob: -4.77334451675415
    3. 'a' → logprob: -5.27334451675415
    4. '[' → logprob: -5.89834451675415
    5. 'p' → logprob: -5.89834451675415
    6. ' ' → logprob: -7.27334451675415
    7. '<|end|>' → logprob: -7.27334451675415
    8. '(p' → logprob: -7.39834451675415
    9. '#' → logprob: -8.273344993591309
    10. ' )' → logprob: -8.273344993591309

Token 795: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2015644907951355
    2. '=' → logprob: -1.7015645503997803
    3. ',' → logprob: -8.82656478881836
    4. '=max' → logprob: -13.82656478881836
    5. ' ' → logprob: -14.07656478881836
    6. '_' → logprob: -14.20156478881836
    7. ')' → logprob: -14.32656478881836
    8. ' ,' → logprob: -14.57656478881836
    9. 'max' → logprob: -15.57656478881836
    10. 's' → logprob: -15.95156478881836

Token 796: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.5760625004768372
    2. 'max' → logprob: -0.8260625004768372
    3. ' min' → logprob: -9.701062202453613
    4. 'min' → logprob: -10.701062202453613
    5. 'map' → logprob: -11.076062202453613
    6. ' map' → logprob: -11.576062202453613
    7. ' ' → logprob: -12.701062202453613
    8. 'a' → logprob: -12.826062202453613
    9. '(max' → logprob: -13.576062202453613
    10. 'b' → logprob: -13.951062202453613

Token 797: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.012566512450575829
    2. 'map' → logprob: -4.387566566467285
    3. '(' → logprob: -10.762566566467285
    4. 'a' → logprob: -11.387566566467285
    5. '([' → logprob: -11.887566566467285
    6. '(a' → logprob: -12.012566566467285
    7. '(c' → logprob: -13.262566566467285
    8. 'c' → logprob: -13.387566566467285
    9. '(item' → logprob: -13.762566566467285
    10. '(list' → logprob: -14.012566566467285

Token 798: '(item' (ID: 10016)
  Prédit: '(item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(item' → logprob: -5.5027299822540954e-05
    2. 'item' → logprob: -9.875055313110352
    3. '(lambda' → logprob: -13.375055313110352
    4. '=item' → logprob: -13.625055313110352
    5. 'lambda' → logprob: -15.125055313110352
    6. ' item' → logprob: -16.00005531311035
    7. '(' → logprob: -16.25005531311035
    8. ')item' → logprob: -16.37505531311035
    9. '[item' → logprob: -16.87505531311035
    10. '	item' → logprob: -17.25005531311035

Token 799: 'getter' (ID: 132812)
  Prédit: 'item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: -0.3804489076137543
    2. '(item' → logprob: -2.005448818206787
    3. 'getter' → logprob: -2.255448818206787
    4. 'getitem' → logprob: -3.005448818206787
    5. '=item' → logprob: -3.630448818206787
    6. 'er' → logprob: -8.880449295043945
    7. 'em' → logprob: -8.880449295043945
    8. ':item' → logprob: -9.005449295043945
    9. ')item' → logprob: -9.005449295043945
    10. ' item' → logprob: -9.130449295043945

Token 800: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04876131936907768
    2. '(' → logprob: -3.0487613677978516
    3. '[' → logprob: -9.423761367797852
    4. '(-' → logprob: -11.173761367797852
    5. ' ' → logprob: -11.423761367797852
    6. '-' → logprob: -11.423761367797852
    7. '
' → logprob: -11.548761367797852
    8. ' (' → logprob: -11.923761367797852
    9. '   ' → logprob: -12.048761367797852
    10. '0' → logprob: -12.048761367797852

Token 801: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. '-' → logprob: -12.750004768371582
    3. ' ' → logprob: -13.750004768371582
    4. '0' → logprob: -14.375004768371582
    5. ' -' → logprob: -16.1250057220459
    6. '   ' → logprob: -16.1250057220459
    7. '  ' → logprob: -17.1875057220459
    8. ')' → logprob: -17.7500057220459
    9. '```' → logprob: -18.0625057220459
    10. '۱' → logprob: -18.1875057220459

Token 802: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016334053361788392
    2. ',c' → logprob: -6.501633167266846
    3. '),' → logprob: -9.251633644104004
    4. ' ,' → logprob: -11.001633644104004
    5. 'c' → logprob: -11.126633644104004
    6. '(c' → logprob: -14.126633644104004
    7. '   ' → logprob: -14.251633644104004
    8. ')))' → logprob: -14.376633644104004
    9. '))' → logprob: -15.376633644104004
    10. ')' → logprob: -15.501633644104004

Token 803: ' [' (ID: 723)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0007081442163325846
    2. ' candidates' → logprob: -7.375708103179932
    3. '[' → logprob: -9.62570858001709
    4. '[c' → logprob: -11.87570858001709
    5. 'candidate' → logprob: -13.12570858001709
    6. ')' → logprob: -13.87570858001709
    7. 'first' → logprob: -13.87570858001709
    8. '[S' → logprob: -14.62570858001709
    9. 'chain' → logprob: -15.00070858001709
    10. '   ' → logprob: -15.00070858001709

Token 804: 'max' (ID: 3228)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.6992077231407166
    2. '(c' → logprob: -1.4492077827453613
    3. 'c' → logprob: -1.6992077827453613
    4. '[a' → logprob: -3.8242077827453613
    5. '(x' → logprob: -3.9492077827453613
    6. '[c' → logprob: -5.449207782745361
    7. '(i' → logprob: -5.699207782745361
    8. '*' → logprob: -5.699207782745361
    9. 'candidate' → logprob: -5.699207782745361
    10. 't' → logprob: -5.824207782745361

Token 805: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.2694445550441742
    2. 'c' → logprob: -2.019444465637207
    3. '([' → logprob: -3.144444465637207
    4. '(a' → logprob: -3.769444465637207
    5. '((' → logprob: -5.519444465637207
    6. 'a' → logprob: -5.644444465637207
    7. 'per' → logprob: -5.644444465637207
    8. '(p' → logprob: -5.894444465637207
    9. '[' → logprob: -6.519444465637207
    10. '(x' → logprob: -6.519444465637207

Token 806: 'andidates' (ID: 38168)
  Prédit: 'andidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'andidates' → logprob: -0.0009882692247629166
    2. 'and' → logprob: -7.500988483428955
    3. '[' → logprob: -8.625988006591797
    4. 'for' → logprob: -9.375988006591797
    5. 'c' → logprob: -9.875988006591797
    6. ')' → logprob: -10.375988006591797
    7. ' for' → logprob: -11.500988006591797
    8. '[c' → logprob: -11.750988006591797
    9. 'hat' → logprob: -11.875988006591797
    10. '(c' → logprob: -12.000988006591797

Token 807: '),' (ID: 936)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.30642783641815186
    2. ')' → logprob: -1.8064278364181519
    3. ')])' → logprob: -2.6814279556274414
    4. '),' → logprob: -3.9314279556274414
    5. ')],' → logprob: -5.181427955627441
    6. ',' → logprob: -5.806427955627441
    7. '   ' → logprob: -6.806427955627441
    8. ')][' → logprob: -8.181427955627441
    9. ' ' → logprob: -8.306427955627441
    10. '[' → logprob: -8.431427955627441

Token 808: ' min' (ID: 1349)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.2602855861186981
    2. 'min' → logprob: -1.8852856159210205
    3. '(' → logprob: -3.6352856159210205
    4. ' max' → logprob: -3.8852856159210205
    5. 'c' → logprob: -4.260285377502441
    6. '(c' → logprob: -5.510285377502441
    7. '(a' → logprob: -6.010285377502441
    8. ' min' → logprob: -6.135285377502441
    9. '[' → logprob: -6.510285377502441
    10. '(max' → logprob: -6.510285377502441

Token 809: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.00027134892297908664
    2. 'c' → logprob: -8.250271797180176
    3. '(per' → logprob: -12.625271797180176
    4. '([' → logprob: -13.125271797180176
    5. 'per' → logprob: -13.500271797180176
    6. '(' → logprob: -13.750271797180176
    7. '(candidate' → logprob: -14.375271797180176
    8. '([(' → logprob: -15.125271797180176
    9. '[c' → logprob: -15.250271797180176
    10. '((' → logprob: -15.375271797180176

Token 810: 'andidates' (ID: 38168)
  Prédit: 'andidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'andidates' → logprob: -0.0004224515287205577
    2. 'and' → logprob: -8.375422477722168
    3. '[' → logprob: -8.875422477722168
    4. '[(' → logprob: -11.000422477722168
    5. '(' → logprob: -11.625422477722168
    6. '([' → logprob: -11.875422477722168
    7. '[c' → logprob: -12.250422477722168
    8. ')' → logprob: -12.875422477722168
    9. 'andid' → logprob: -13.125422477722168
    10. '(c' → logprob: -13.125422477722168

Token 811: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.27546563744544983
    2. ']))' → logprob: -2.025465726852417
    3. '])))' → logprob: -2.525465726852417
    4. '])' → logprob: -4.275465488433838
    5. '])))
' → logprob: -5.150465488433838
    6. ')])' → logprob: -5.275465488433838
    7. ']))
' → logprob: -6.900465488433838
    8. ']' → logprob: -7.150465488433838
    9. ')' → logprob: -7.650465488433838
    10. '])]' → logprob: -7.775465488433838

Token 812: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.18207447230815887
    2. '))
' → logprob: -1.8070744276046753
    3. ')))' → logprob: -6.307074546813965
    4. ')' → logprob: -8.682074546813965
    5. '))
' → logprob: -9.307074546813965
    6. ')))
' → logprob: -9.307074546813965
    7. '   ' → logprob: -9.807074546813965
    8. ' ))' → logprob: -10.682074546813965
    9. ' ' → logprob: -10.807074546813965
    10. ' ))
' → logprob: -11.182074546813965

Token 813: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028699003159999847
    2. '   ' → logprob: -6.627870082855225
    3. '<|end|>' → logprob: -7.127870082855225
    4. ')
' → logprob: -8.627869606018066
    5. ':' → logprob: -8.627869606018066
    6. ' ' → logprob: -9.002869606018066
    7. '
' → logprob: -10.002869606018066
    8. ' )' → logprob: -10.377869606018066
    9. '#' → logprob: -10.502869606018066
    10. '(' → logprob: -10.877869606018066

Token 814: ' answer' (ID: 6052)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002643079496920109
    2. ':' → logprob: -7.25264310836792
    3. '(' → logprob: -8.002642631530762
    4. '<|end|>' → logprob: -8.002642631530762
    5. '(p' → logprob: -8.502642631530762
    6. ' ' → logprob: -8.877642631530762
    7. ' )' → logprob: -9.002642631530762
    8. ')
' → logprob: -9.127642631530762
    9. '   ' → logprob: -9.252642631530762
    10. '
' → logprob: -9.377642631530762

Token 815: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5266132354736328
    2. ' =' → logprob: -0.9016132354736328
    3. '(' → logprob: -6.401613235473633
    4. ')' → logprob: -8.151613235473633
    5. '   ' → logprob: -8.276613235473633
    6. ',' → logprob: -8.526613235473633
    7. '<|end|>' → logprob: -8.526613235473633
    8. '()' → logprob: -8.651613235473633
    9. ' +=' → logprob: -8.901613235473633
    10. '[' → logprob: -9.026613235473633

Token 816: ' list' (ID: 1562)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.7013792991638184
    2. ' first' → logprob: -1.0763792991638184
    3. ' max' → logprob: -2.2013792991638184
    4. 'max' → logprob: -2.9513792991638184
    5. ' ' → logprob: -9.201379776000977
    6. 'add' → logprob: -10.076379776000977
    7. '(first' → logprob: -10.201379776000977
    8. '(max' → logprob: -10.701379776000977
    9. '	first' → logprob: -10.701379776000977
    10. ' add' → logprob: -11.201379776000977

Token 817: '(acc' (ID: 82668)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.4065793454647064
    2. '(chain' → logprob: -1.7815793752670288
    3. '(sorted' → logprob: -3.2815792560577393
    4. '(per' → logprob: -3.2815792560577393
    5. '(filter' → logprob: -3.5315792560577393
    6. '({' → logprob: -5.031579494476318
    7. '(range' → logprob: -5.156579494476318
    8. '(set' → logprob: -5.281579494476318
    9. '([' → logprob: -5.281579494476318
    10. '(' → logprob: -5.406579494476318

Token 818: 'umulate' (ID: 134636)
  Prédit: 'umulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulate' → logprob: -3.011373155459296e-05
    2. 'umul' → logprob: -11.375030517578125
    3. 'um' → logprob: -11.625030517578125
    4. 'om' → logprob: -12.500030517578125
    5. 'ulate' → logprob: -12.625030517578125
    6. '(' → logprob: -14.375030517578125
    7. 'umulator' → logprob: -14.500030517578125
    8. '```' → logprob: -15.250030517578125
    9. 'umal' → logprob: -15.375030517578125
    10. '([' → logprob: -15.500030517578125

Token 819: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.05430300161242485
    2. '(lambda' → logprob: -3.929302930831909
    3. '(c' → logprob: -4.054303169250488
    4. '((' → logprob: -5.179303169250488
    5. '(sorted' → logprob: -5.429303169250488
    6. '(map' → logprob: -5.804303169250488
    7. '(candidate' → logprob: -6.804303169250488
    8. '[' → logprob: -7.929303169250488
    9. '(max' → logprob: -8.304303169250488
    10. '(' → logprob: -8.429303169250488

Token 820: 'first' (ID: 7743)
  Prédit: 'first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.0005913979839533567
    2. 'a' → logprob: -7.625591278076172
    3. ' first' → logprob: -9.875591278076172
    4. '(first' → logprob: -11.250591278076172
    5. '[first' → logprob: -11.250591278076172
    6. ' ' → logprob: -11.500591278076172
    7. '   ' → logprob: -11.625591278076172
    8. 'max' → logprob: -13.000591278076172
    9. '  ' → logprob: -13.500591278076172
    10. '[' → logprob: -14.000591278076172

Token 821: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008572661899961531
    2. ' ,' → logprob: -7.250857353210449
    3. ' +' → logprob: -9.75085735321045
    4. '+' → logprob: -10.50085735321045
    5. ',b' → logprob: -10.87585735321045
    6. ',max' → logprob: -11.37585735321045
    7. 'second' → logprob: -11.50085735321045
    8. '   ' → logprob: -12.50085735321045
    9. ',
' → logprob: -12.62585735321045
    10. ' and' → logprob: -13.37585735321045

Token 822: ' second' (ID: 3099)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.0010370950913056731
    2. ' second' → logprob: -6.876037120819092
    3. '   ' → logprob: -13.001036643981934
    4. ' ' → logprob: -13.626036643981934
    5. '	second' → logprob: -15.251036643981934
    6. '
' → logprob: -15.376036643981934
    7. '  ' → logprob: -15.501036643981934
    8. '(second' → logprob: -16.50103759765625
    9. '.second' → logprob: -17.25103759765625
    10. 'third' → logprob: -17.37603759765625

Token 823: ']))' (ID: 20259)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8225192427635193
    2. ']))' → logprob: -0.8225192427635193
    3. '],' → logprob: -2.197519302368164
    4. ']))
' → logprob: -5.572519302368164
    5. '])[' → logprob: -5.697519302368164
    6. '))' → logprob: -6.947519302368164
    7. '])' → logprob: -7.447519302368164
    8. '))[' → logprob: -7.572519302368164
    9. '),' → logprob: -8.322519302368164
    10. ',m' → logprob: -8.947519302368164

Token 824: '[-' (ID: 17503)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02642964757978916
    2. '[p' → logprob: -4.901429653167725
    3. '[' → logprob: -5.401429653167725
    4. ' p' → logprob: -5.526429653167725
    5. 'p' → logprob: -5.901429653167725
    6. ')' → logprob: -5.901429653167725
    7. '(p' → logprob: -6.526429653167725
    8. ',p' → logprob: -7.276429653167725
    9. ',' → logprob: -7.276429653167725
    10. '
' → logprob: -7.526429653167725

Token 825: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.127333340875339e-06
    2. ' ' → logprob: -13.250003814697266
    3. '2' → logprob: -13.500003814697266
    4. '   ' → logprob: -14.812503814697266
    5. '  ' → logprob: -16.500003814697266
    6. '```' → logprob: -16.500003814697266
    7. '１' → logprob: -16.750003814697266
    8. '3' → logprob: -16.875003814697266
    9. '۱' → logprob: -17.625003814697266
    10. '0' → logprob: -17.687503814697266

Token 826: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001882823125924915
    2. ']' → logprob: -8.875187873840332
    3. '+' → logprob: -10.500187873840332
    4. ')]' → logprob: -11.875187873840332
    5. '])' → logprob: -12.625187873840332
    6. '<|end|>' → logprob: -12.750187873840332
    7. ' )' → logprob: -13.125187873840332
    8. '}' → logprob: -13.250187873840332
    9. ')
' → logprob: -13.375187873840332
    10. ' +' → logprob: -15.000187873840332

Token 827: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13956932723522186
    2. '   ' → logprob: -2.6395692825317383
    3. '<|end|>' → logprob: -3.5145692825317383
    4. ':' → logprob: -4.514569282531738
    5. '
' → logprob: -5.014569282531738
    6. '(' → logprob: -5.139569282531738
    7. '#' → logprob: -7.264569282531738
    8. '+' → logprob: -7.264569282531738
    9. '\' → logprob: -7.264569282531738
    10. '```' → logprob: -7.514569282531738

Token 828: ' p' (ID: 275)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.531025230884552
    2. ')' → logprob: -1.0310251712799072
    3. 'p' (adapté à ' p') → logprob: -3.5310251712799072
    4. '<|end|>' → logprob: -4.031025409698486
    5. ' p' → logprob: -5.531025409698486
    6. '
' → logprob: -5.906025409698486
    7. ')
' → logprob: -7.656025409698486
    8. ')p' → logprob: -7.781025409698486
    9. '    
' → logprob: -9.281024932861328
    10. '}' → logprob: -9.281024932861328

Token 829: '(answer' (ID: 78433)
  Prédit: '(answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(answer' → logprob: -9.460291767027229e-05
    2. '(' → logprob: -9.375094413757324
    3. '(ans' → logprob: -12.000094413757324
    4. 'answer' → logprob: -13.500094413757324
    5. '(f' → logprob: -13.750094413757324
    6. '('' → logprob: -15.125094413757324
    7. '("("' → logprob: -15.375094413757324
    8. '(a' → logprob: -15.500094413757324
    9. '((' → logprob: -16.00009536743164
    10. '(question' → logprob: -16.12509536743164

Token 830: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9743012671824545e-05
    2. ')`' → logprob: -11.250020027160645
    3. ')
' → logprob: -13.000020027160645
    4. '())' → logprob: -13.375020027160645
    5. '()' → logprob: -14.000020027160645
    6. '))' → logprob: -14.500020027160645
    7. '(' → logprob: -14.625020027160645
    8. ' )' → logprob: -15.125020027160645
    9. ')**' → logprob: -15.750020027160645
    10. ')}' → logprob: -16.000019073486328

Token 831: 'main' (ID: 7731)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008499335497617722
    2. '(' → logprob: -5.2584991455078125
    3. ':' → logprob: -6.2584991455078125
    4. '<|end|>' → logprob: -7.8834991455078125
    5. '
' → logprob: -8.008499145507812
    6. '#' → logprob: -8.758499145507812
    7. '\n' → logprob: -9.008499145507812
    8. '\' → logprob: -9.508499145507812
    9. '}' → logprob: -9.508499145507812
    10. '.' → logprob: -10.383499145507812

Token 832: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7136327028274536
    2. '()' → logprob: -0.9636327028274536
    3. ')' → logprob: -2.338632583618164
    4. '<|end|>' → logprob: -4.213632583618164
    5. '(
' → logprob: -5.338632583618164
    6. '#' → logprob: -5.463632583618164
    7. '```' → logprob: -5.588632583618164
    8. '
' → logprob: -6.338632583618164
    9. '\' → logprob: -6.963632583618164
    10. '()
' → logprob: -7.838632583618164


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 830
Tokens correctement prédits (1ère position, stricte): 273
Tokens correctement prédits (1ère position, avec adaptation): 287
Tokens correctement prédits (top 10): 606
Précision stricte (1ère position): 32.89%
Précision adaptée (1ère position): 34.58%
Précision (top 10): 73.01%
================================================================================
