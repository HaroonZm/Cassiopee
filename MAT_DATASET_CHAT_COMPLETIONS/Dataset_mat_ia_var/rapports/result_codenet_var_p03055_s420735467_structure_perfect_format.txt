================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:01:42
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import queue

n = int(input())
tree = {i: [] for i in range(n)}

for _ in range(n - 1):
    t = input().split()
    u, v = int(t[0]), int(t[1])
    tree[u - 1].append(v - 1)
    tree[v - 1].append(u - 1)

a = 0
q = queue.Queue()
q.put(a)
v = [0 for _ in range(n)]
v[a] = 1

while not q.empty():
    a = q.get()
    for b in tree[a]:
        if v[b] == 0 and len(tree[b]) > 1:
            q.put(b)
            v[b] = 1

s = a
q = queue.Queue()
q.put([a, 1])
v = [0 for _ in range(n)]
v[a] = 1

while not q.empty():
    a = q.get()
    for b in tree[a[0]]:
        if v[b] == 0 and len(tree[b]) > 1:
            q.put([b, a[1] + 1])
            v[b] = 1

if n <= 3:
    l = n
else:
    l = a[1] + 2

if l % 3 == 2:
    print("Second")
else:
    print("First")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' queue' (ID: 13661)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'n' (ID: 77)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.01306399516761303
    2. '.Queue' → logprob: -4.388063907623291
    3. '\' → logprob: -8.38806438446045
    4. '\n' → logprob: -9.51306438446045
    5. '.\' → logprob: -10.13806438446045
    6. '```' → logprob: -10.76306438446045
    7. '

' → logprob: -10.88806438446045
    8. '.Q' → logprob: -11.01306438446045
    9. '.
' → logprob: -11.13806438446045
    10. ',' → logprob: -11.13806438446045

Token 4: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6910529136657715
    2. '=' → logprob: -1.6910529136657715
    3. '.' → logprob: -1.9410529136657715
    4. '_' → logprob: -2.4410529136657715
    5. ' ' → logprob: -3.0660529136657715
    6. 'u' → logprob: -3.6910529136657715
    7. 'a' → logprob: -5.8160529136657715
    8. 'e' → logprob: -6.3160529136657715
    9. 'q' → logprob: -6.8160529136657715
    10. '  ' → logprob: -7.1910529136657715

Token 5: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.020542005077004433
    2. ' int' → logprob: -4.270542144775391
    3. '10' → logprob: -5.895542144775391
    4. ' queue' → logprob: -6.270542144775391
    5. '5' → logprob: -7.270542144775391
    6. '1' → logprob: -7.895542144775391
    7. 'int' → logprob: -8.52054214477539
    8. '0' → logprob: -9.39554214477539
    9. 'queue' → logprob: -9.39554214477539
    10. '  ' → logprob: -9.89554214477539

Token 6: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.277553620748222e-05
    2. '('' → logprob: -11.125062942504883
    3. ' (' → logprob: -11.250062942504883
    4. '(n' → logprob: -11.375062942504883
    5. '(queue' → logprob: -12.375062942504883
    6. '(`' → logprob: -12.500062942504883
    7. '()' → logprob: -12.750062942504883
    8. '(input' → logprob: -13.000062942504883
    9. '(
' → logprob: -13.125062942504883
    10. '("("' → logprob: -13.500062942504883

Token 7: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4987523853778839
    2. ')' → logprob: -0.9987523555755615
    3. '()' → logprob: -3.8737523555755615
    4. '())' → logprob: -5.748752593994141
    5. '(
' → logprob: -8.99875259399414
    6. '')' → logprob: -9.99875259399414
    7. '(

' → logprob: -10.12375259399414
    8. '")' → logprob: -10.24875259399414
    9. '))' → logprob: -10.24875259399414
    10. '('' → logprob: -10.87375259399414

Token 8: 'tree' (ID: 19816)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.12274521589279175
    2. 'for' → logprob: -2.9977452754974365
    3. 's' → logprob: -4.122745037078857
    4. '\n' → logprob: -4.622745037078857
    5. ')' → logprob: -4.872745037078857
    6. '\' → logprob: -4.997745037078857
    7. ' q' → logprob: -5.122745037078857
    8. ' for' → logprob: -5.372745037078857
    9. 'r' → logprob: -5.747745037078857
    10. 'i' → logprob: -6.497745037078857

Token 9: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08186592906713486
    2. '.' → logprob: -2.5818660259246826
    3. ' =' → logprob: -6.7068657875061035
    4. '=' → logprob: -7.7068657875061035
    5. '_' → logprob: -8.081866264343262
    6. 's' → logprob: -8.331866264343262
    7. '[node' → logprob: -8.706866264343262
    8. '[]' → logprob: -8.956866264343262
    9. '.setdefault' → logprob: -10.081866264343262
    10. '\[' → logprob: -10.081866264343262

Token 10: ' {' (ID: 354)
  Prédit: ' {}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {}' → logprob: -0.6429364085197449
    2. '{}' → logprob: -1.2679364681243896
    3. ' queue' → logprob: -2.2679364681243896
    4. ' []' → logprob: -3.0179364681243896
    5. 'queue' → logprob: -3.6429364681243896
    6. '[]' → logprob: -5.0179362297058105
    7. ' [' → logprob: -6.3929362297058105
    8. ' {' → logprob: -7.0179362297058105
    9. 'dict' → logprob: -7.1429362297058105
    10. 'deque' → logprob: -7.3929362297058105

Token 11: 'i' (ID: 72)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0014173806412145495
    2. '[]}' → logprob: -7.00141716003418
    3. 'n' → logprob: -8.50141716003418
    4. 'i' → logprob: -9.25141716003418
    5. '   ' → logprob: -9.50141716003418
    6. ' }' → logprob: -10.00141716003418
    7. 'k' → logprob: -10.50141716003418
    8. '0' → logprob: -10.75141716003418
    9. ' ' → logprob: -11.37641716003418
    10. '    ' → logprob: -12.50141716003418

Token 12: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.9862216504407115e-05
    2. ' :' → logprob: -11.250020027160645
    3. ':list' → logprob: -12.500020027160645
    4. ':i' → logprob: -13.500020027160645
    5. ':set' → logprob: -14.875020027160645
    6. ':{}' → logprob: -15.250020027160645
    7. ':[' → logprob: -15.375020027160645
    8. ':index' → logprob: -15.875020027160645
    9. ':n' → logprob: -16.500019073486328
    10. '```' → logprob: -16.875019073486328

Token 13: ' []' (ID: 6126)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.2868534028530121
    2. ' []' → logprob: -1.5368534326553345
    3. '[]}' → logprob: -3.411853313446045
    4. 'set' → logprob: -7.786853313446045
    5. ' set' → logprob: -8.411853790283203
    6. ' queue' → logprob: -8.661853790283203
    7. 'None' → logprob: -8.786853790283203
    8. 'queue' → logprob: -9.036853790283203
    9. ' None' → logprob: -9.286853790283203
    10. ' ' → logprob: -10.161853790283203

Token 14: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11688421666622162
    2. '}' → logprob: -2.741884231567383
    3. 'for' → logprob: -3.241884231567383
    4. ')' → logprob: -5.616884231567383
    5. ',' → logprob: -6.116884231567383
    6. ' }' → logprob: -7.741884231567383
    7. ' ' → logprob: -8.241884231567383
    8. '	for' → logprob: -9.366884231567383
    9. '<|end|>' → logprob: -9.616884231567383
    10. '```' → logprob: -10.741884231567383

Token 15: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.40688344836235046
    2. ' i' → logprob: -1.1568834781646729
    3. 'range' → logprob: -4.156883239746094
    4. 'i' → logprob: -5.531883239746094
    5. ' ' → logprob: -8.781883239746094
    6. ' in' → logprob: -11.531883239746094
    7. ' _' → logprob: -11.781883239746094
    8. ' ' → logprob: -11.781883239746094
    9. '(range' → logprob: -11.906883239746094
    10. '_' → logprob: -12.656883239746094

Token 16: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03373583033680916
    2. 'in' → logprob: -3.408735752105713
    3. 'n' → logprob: -10.033736228942871
    4. ' ' → logprob: -10.408736228942871
    5. 'range' → logprob: -12.158736228942871
    6. ',' → logprob: -13.846236228942871
    7. '	in' → logprob: -14.033736228942871
    8. ')' → logprob: -14.221236228942871
    9. 'In' → logprob: -14.346236228942871
    10. '```' → logprob: -14.408736228942871

Token 17: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.06196970492601395
    2. 'range' → logprob: -2.811969757080078
    3. ' ' → logprob: -13.936969757080078
    4. '	range' → logprob: -14.936969757080078
    5. '(range' → logprob: -15.061969757080078
    6. '  ' → logprob: -15.686969757080078
    7. ' ' → logprob: -16.311969757080078
    8. 'Range' → logprob: -16.311969757080078
    9. '```' → logprob: -16.561969757080078
    10. '   ' → logprob: -16.936969757080078

Token 18: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.10023277252912521
    2. '(' → logprob: -2.3502328395843506
    3. ' (' → logprob: -10.72523307800293
    4. 'n' → logprob: -13.35023307800293
    5. '(
' → logprob: -14.22523307800293
    6. '1' → logprob: -14.85023307800293
    7. ' n' → logprob: -15.22523307800293
    8. ' ' → logprob: -15.35023307800293
    9. '((' → logprob: -15.60023307800293
    10. '(len' → logprob: -16.10023307800293

Token 19: ')}

' (ID: 184554)
  Prédit: ')}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')}' → logprob: -0.0005113297956995666
    2. ')' → logprob: -7.625511169433594
    3. ')}

' → logprob: -11.250511169433594
    4. ' )' → logprob: -12.875511169433594
    5. '}' → logprob: -12.875511169433594
    6. ')}
' → logprob: -13.000511169433594
    7. '+' → logprob: -14.375511169433594
    8. '")}' → logprob: -14.375511169433594
    9. '})' → logprob: -14.875511169433594
    10. '))' → logprob: -15.000511169433594

Token 20: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006415386218577623
    2. 'parent' → logprob: -5.256415367126465
    3. ' for' → logprob: -7.381415367126465
    4. 'u' → logprob: -8.881415367126465
    5. 'node' → logprob: -8.881415367126465
    6. '```' → logprob: -9.631415367126465
    7. 'b' → logprob: -9.881415367126465
    8. 'root' → logprob: -10.506415367126465
    9. 'edges' → logprob: -11.006415367126465
    10. 'v' → logprob: -11.006415367126465

Token 21: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.30264076590538025
    2. ' _' → logprob: -1.6776407957077026
    3. ' ' → logprob: -2.802640676498413
    4. '_' → logprob: -4.802640914916992
    5. ' node' → logprob: -5.302640914916992
    6. 'i' → logprob: -8.302640914916992
    7. ' x' → logprob: -10.177640914916992
    8. ' ‌' → logprob: -10.427640914916992
    9. ' line' → logprob: -10.552640914916992
    10. '  ' → logprob: -10.677640914916992

Token 22: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0067448546178638935
    2. 'in' → logprob: -5.006744861602783
    3. ' ' → logprob: -11.006744384765625
    4. 'n' → logprob: -12.631744384765625
    5. ' i' → logprob: -12.881744384765625
    6. 'i' → logprob: -13.631744384765625
    7. 'range' → logprob: -13.756744384765625
    8. 'import' → logprob: -14.006744384765625
    9. '	in' → logprob: -14.631744384765625
    10. '```' → logprob: -14.756744384765625

Token 23: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10021217912435532
    2. ' range' → logprob: -2.3502120971679688
    3. '(range' → logprob: -13.225212097167969
    4. 'input' → logprob: -14.600212097167969
    5. '	range' → logprob: -14.600212097167969
    6. 'put' → logprob: -14.850212097167969
    7. 'queue' → logprob: -14.850212097167969
    8. 'n' → logprob: -15.100212097167969
    9. ' ' → logprob: -15.225212097167969
    10. 'tree' → logprob: -15.600212097167969

Token 24: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.57855623960495
    2. '(' → logprob: -0.82855623960495
    3. ' (' → logprob: -6.203556060791016
    4. ' n' → logprob: -7.953556060791016
    5. 'n' → logprob: -8.578556060791016
    6. ' ' → logprob: -11.078556060791016
    7. '(int' → logprob: -11.703556060791016
    8. '(
' → logprob: -12.203556060791016
    9. '(len' → logprob: -12.703556060791016
    10. '1' → logprob: -12.703556060791016

Token 25: ' -' (ID: 533)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.058133967220783234
    2. '-' → logprob: -3.433134078979492
    3. ')' → logprob: -3.933134078979492
    4. ' -' → logprob: -5.558134078979492
    5. '):
' → logprob: -7.558134078979492
    6. ' ):' → logprob: -8.683134078979492
    7. '   ' → logprob: -10.683134078979492
    8. ' )' → logprob: -11.433134078979492
    9. '1' → logprob: -11.558134078979492
    10. ':' → logprob: -12.808134078979492

Token 26: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5231305956840515
    2. ' ' → logprob: -0.8981305956840515
    3. '<|end|>' → logprob: -12.523130416870117
    4. ' ' → logprob: -14.273130416870117
    5. ')' → logprob: -14.335630416870117
    6. '  ' → logprob: -14.398130416870117
    7. '2' → logprob: -14.960630416870117
    8. '   ' → logprob: -15.023130416870117
    9. '```' → logprob: -15.210630416870117
    10. '۱' → logprob: -16.210630416870117

Token 27: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010950337309623137
    2. ' ' → logprob: -9.125109672546387
    3. '2' → logprob: -14.875109672546387
    4. '   ' → logprob: -17.25010871887207
    5. ')' → logprob: -17.87510871887207
    6. '```' → logprob: -18.12510871887207
    7. '  ' → logprob: -18.43760871887207
    8. ' ' → logprob: -18.81260871887207
    9. '۱' → logprob: -18.81260871887207
    10. '<|end|>' → logprob: -19.00010871887207

Token 28: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010100039653480053
    2. ')' → logprob: -5.2600998878479
    3. ':' → logprob: -5.7600998878479
    4. ' ):' → logprob: -6.5100998878479
    5. '):
' → logprob: -9.135100364685059
    6. ' )' → logprob: -9.885100364685059
    7. ',' → logprob: -10.260100364685059
    8. ' :' → logprob: -11.635100364685059
    9. '():' → logprob: -12.635100364685059
    10. '):
' → logprob: -13.510100364685059

Token 29: '   ' (ID: 271)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.1949523538351059
    2. 'u' → logprob: -2.1949522495269775
    3. 'a' → logprob: -3.6949522495269775
    4. ' a' → logprob: -4.194952487945557
    5. ' line' → logprob: -4.569952487945557
    6. '   ' → logprob: -4.944952487945557
    7. ' node' → logprob: -5.194952487945557
    8. ' parent' → logprob: -7.444952487945557
    9. ' 
' → logprob: -7.944952487945557
    10. '<|end|>' → logprob: -8.319952011108398

Token 30: ' t' (ID: 260)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.1674737185239792
    2. ' u' → logprob: -1.9174736738204956
    3. 'a' → logprob: -5.042473793029785
    4. ' a' → logprob: -8.167473793029785
    5. 'parent' → logprob: -8.417473793029785
    6. ' parent' → logprob: -8.792473793029785
    7. ' node' → logprob: -10.292473793029785
    8. 'node' → logprob: -10.792473793029785
    9. 'p' → logprob: -11.417473793029785
    10. ' line' → logprob: -11.417473793029785

Token 31: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02761409990489483
    2. ' ,' → logprob: -4.777614116668701
    3. ' =' → logprob: -5.277614116668701
    4. 'ree' → logprob: -5.527614116668701
    5. 'arget' → logprob: -5.652614116668701
    6. 'o' → logprob: -6.527614116668701
    7. 'a' → logprob: -7.027614116668701
    8. '1' → logprob: -7.902614116668701
    9. '=' → logprob: -7.902614116668701
    10. '_,' → logprob: -7.902614116668701

Token 32: ' input' (ID: 3422)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.8410161137580872
    2. 'tuple' → logprob: -0.9660161137580872
    3. ' tuple' → logprob: -2.3410160541534424
    4. 'int' → logprob: -3.2160160541534424
    5. 'uple' → logprob: -3.4660160541534424
    6. 'input' → logprob: -4.3410162925720215
    7. ' list' → logprob: -5.2160162925720215
    8. 'map' → logprob: -6.7160162925720215
    9. ' int' → logprob: -7.8410162925720215
    10. ' input' → logprob: -8.466015815734863

Token 33: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3511374294757843
    2. '().' → logprob: -1.226137399673462
    3. '(' → logprob: -6.351137638092041
    4. '('' → logprob: -8.476137161254883
    5. '())' → logprob: -8.726137161254883
    6. ')' → logprob: -9.101137161254883
    7. '.' → logprob: -9.351137161254883
    8. ' ()' → logprob: -9.851137161254883
    9. '.split' → logprob: -10.101137161254883
    10. '("' → logprob: -10.101137161254883

Token 34: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0011777279432862997
    2. 'strip' → logprob: -6.751177787780762
    3. 'rstrip' → logprob: -12.251177787780762
    4. 'spl' → logprob: -13.376177787780762
    5. ' split' → logprob: -14.501177787780762
    6. 's' → logprob: -14.751177787780762
    7. 'sp' → logprob: -15.626177787780762
    8. '(split' → logprob: -17.001176834106445
    9. '_split' → logprob: -17.376176834106445
    10. 'replace' → logprob: -17.751176834106445

Token 35: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.010388544760644436
    2. '('' → logprob: -5.010388374328613
    3. '(' → logprob: -5.635388374328613
    4. '("' → logprob: -10.010388374328613
    5. '("("' → logprob: -10.885388374328613
    6. '()]' → logprob: -11.885388374328613
    7. '())' → logprob: -12.135388374328613
    8. '(',' → logprob: -12.260388374328613
    9. '()
' → logprob: -12.885388374328613
    10. '()[' → logprob: -13.135388374328613

Token 36: '   ' (ID: 271)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.29537686705589294
    2. ' u' → logprob: -2.045376777648926
    3. '   ' → logprob: -2.420376777648926
    4. 'a' → logprob: -3.545376777648926
    5. ' a' → logprob: -5.795376777648926
    6. 'p' → logprob: -6.295376777648926
    7. 'parent' → logprob: -7.170376777648926
    8. ' p' → logprob: -7.295376777648926
    9. ',' → logprob: -7.420376777648926
    10. ' parent' → logprob: -7.545376777648926

Token 37: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' (adapté à ' u') → logprob: -0.12133132666349411
    2. ' u' → logprob: -2.996331214904785
    3. 'a' → logprob: -3.371331214904785
    4. 'p' → logprob: -3.871331214904785
    5. '   ' → logprob: -6.121331214904785
    6. 'parent' → logprob: -6.371331214904785
    7. 'tree' → logprob: -6.621331214904785
    8. ' p' → logprob: -6.871331214904785
    9. ' tree' → logprob: -6.996331214904785
    10. ' a' → logprob: -7.246331214904785

Token 38: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04895034432411194
    2. ' =' → logprob: -3.173950433731079
    3. '=' → logprob: -5.6739501953125
    4. ' ,' → logprob: -6.0489501953125
    5. ',u' → logprob: -9.5489501953125
    6. '=int' → logprob: -10.7989501953125
    7. ' ' → logprob: -11.4239501953125
    8. ',int' → logprob: -12.1739501953125
    9. '   ' → logprob: -12.2989501953125
    10. '<|end|>' → logprob: -12.6739501953125

Token 39: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.06483843177556992
    2. ' v' → logprob: -2.814838409423828
    3. ' =' → logprob: -6.564838409423828
    4. '=' → logprob: -7.314838409423828
    5. 'int' → logprob: -7.814838409423828
    6. ' ' → logprob: -8.814838409423828
    7. '=int' → logprob: -8.939838409423828
    8. ',v' → logprob: -10.189838409423828
    9. '=v' → logprob: -10.564838409423828
    10. ' int' → logprob: -11.314838409423828

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08899322897195816
    2. '=' → logprob: -2.4639933109283447
    3. ',' → logprob: -9.963993072509766
    4. ' ' → logprob: -12.713993072509766
    5. '=int' → logprob: -13.213993072509766
    6. ' ,' → logprob: -14.338993072509766
    7. ')' → logprob: -15.213993072509766
    8. ' =
' → logprob: -15.588993072509766
    9. '   ' → logprob: -15.838993072509766
    10. ' =
' → logprob: -16.338993072509766

Token 41: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.6788270473480225
    2. 'int' → logprob: -1.4288270473480225
    3. ' map' → logprob: -1.4288270473480225
    4. 'map' → logprob: -4.303827285766602
    5. '[int' → logprob: -10.178827285766602
    6. '   ' → logprob: -10.928827285766602
    7. '=int' → logprob: -11.178827285766602
    8. ' ' → logprob: -11.928827285766602
    9. '  ' → logprob: -12.553827285766602
    10. ' list' → logprob: -12.678827285766602

Token 42: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.012964092195034027
    2. '(' → logprob: -4.512964248657227
    3. '(u' → logprob: -6.262964248657227
    4. 't' → logprob: -12.512964248657227
    5. ' (' → logprob: -13.262964248657227
    6. '(
' → logprob: -14.012964248657227
    7. '(s' → logprob: -14.387964248657227
    8. '(tokens' → logprob: -14.512964248657227
    9. '(v' → logprob: -14.637964248657227
    10. 'u' → logprob: -15.762964248657227

Token 43: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.869017852295656e-06
    2. '0' → logprob: -12.000006675720215
    3. ')' → logprob: -14.875006675720215
    4. ' [' → logprob: -16.12500762939453
    5. '1' → logprob: -16.75000762939453
    6. ' ' → logprob: -17.00000762939453
    7. '   ' → logprob: -17.50000762939453
    8. '(' → logprob: -17.62500762939453
    9. '),' → logprob: -17.62500762939453
    10. '[-' → logprob: -17.75000762939453

Token 44: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001170132018160075
    2. ' ' → logprob: -9.125117301940918
    3. '1' → logprob: -12.000117301940918
    4. '   ' → logprob: -14.250117301940918
    5. '[' → logprob: -15.000117301940918
    6. ')' → logprob: -15.312617301940918
    7. '  ' → logprob: -15.500117301940918
    8. '-' → logprob: -16.1251163482666
    9. '])' → logprob: -16.3126163482666
    10. '2' → logprob: -16.6876163482666

Token 45: ']),' (ID: 19560)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.21279898285865784
    2. ']),' → logprob: -1.7127989530563354
    3. ')' → logprob: -4.962799072265625
    4. '],' → logprob: -6.212799072265625
    5. '])' → logprob: -6.337799072265625
    6. ',' → logprob: -8.337799072265625
    7. ')],' → logprob: -8.837799072265625
    8. ']' → logprob: -9.712799072265625
    9. ' ),' → logprob: -9.712799072265625
    10. ' ' → logprob: -11.087799072265625

Token 46: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.25195521116256714
    2. 'int' → logprob: -1.501955270767212
    3. '=int' → logprob: -11.001955032348633
    4. '<int' → logprob: -12.876955032348633
    5. '[int' → logprob: -12.876955032348633
    6. ':int' → logprob: -14.001955032348633
    7. '	int' → logprob: -14.001955032348633
    8. ',int' → logprob: -14.001955032348633
    9. '(int' → logprob: -14.126955032348633
    10. ']int' → logprob: -14.876955032348633

Token 47: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.0004985823179595172
    2. '(' → logprob: -7.6254987716674805
    3. 't' → logprob: -11.87549877166748
    4. ' (' → logprob: -12.87549877166748
    5. '1' → logprob: -14.37549877166748
    6. ')' → logprob: -15.50049877166748
    7. ' ' → logprob: -16.375497817993164
    8. '   ' → logprob: -16.500497817993164
    9. ' t' → logprob: -17.500497817993164
    10. '	t' → logprob: -17.875497817993164

Token 48: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08465328812599182
    2. '1' → logprob: -2.584653377532959
    3. '-' → logprob: -5.209653377532959
    4. ' ' → logprob: -9.2096529006958
    5. '])' → logprob: -9.8346529006958
    6. '[-' → logprob: -10.3346529006958
    7. ' -' → logprob: -10.5846529006958
    8. ' [' → logprob: -10.8346529006958
    9. ')' → logprob: -10.8346529006958
    10. ']' → logprob: -12.0846529006958

Token 49: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8193366486229934e-05
    2. '2' → logprob: -11.625018119812012
    3. ' ' → logprob: -11.750018119812012
    4. '])' → logprob: -14.625018119812012
    5. '   ' → logprob: -14.875018119812012
    6. '```' → logprob: -16.125019073486328
    7. '  ' → logprob: -16.250019073486328
    8. '0' → logprob: -16.937519073486328
    9. '4' → logprob: -17.062519073486328
    10. '-' → logprob: -17.500019073486328

Token 50: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0043260264210402966
    2. '])' → logprob: -5.504325866699219
    3. ')]' → logprob: -8.879325866699219
    4. ')])' → logprob: -10.129325866699219
    5. ')
' → logprob: -10.629325866699219
    6. '),' → logprob: -11.129325866699219
    7. '   ' → logprob: -11.879325866699219
    8. ' )' → logprob: -12.004325866699219
    9. ']' → logprob: -12.129325866699219
    10. '])]' → logprob: -12.879325866699219

Token 51: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08729366958141327
    2. 'tree' → logprob: -2.8372936248779297
    3. ')' → logprob: -4.33729362487793
    4. ' tree' → logprob: -5.46229362487793
    5. '	tree' → logprob: -5.96229362487793
    6. '
' → logprob: -6.83729362487793
    7. '<|end|>' → logprob: -7.21229362487793
    8. '    
' → logprob: -7.21229362487793
    9. ' 
' → logprob: -7.71229362487793
    10. ' ' → logprob: -7.71229362487793

Token 52: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' (adapté à ' tree') → logprob: -0.0817190557718277
    2. ' tree' → logprob: -2.581719160079956
    3. ' 
' → logprob: -7.206718921661377
    4. '   ' → logprob: -7.456718921661377
    5. '	tree' → logprob: -7.581718921661377
    6. '
' → logprob: -8.081719398498535
    7. '(tree' → logprob: -9.206719398498535
    8. ' ' → logprob: -9.456719398498535
    9. '```' → logprob: -9.581719398498535
    10. '    
' → logprob: -9.581719398498535

Token 53: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -5.200166469876422e-06
    2. '[' → logprob: -12.625004768371582
    3. '[v' → logprob: -13.250004768371582
    4. 'u' → logprob: -17.3750057220459
    5. '```' → logprob: -18.0000057220459
    6. ' [' → logprob: -18.1250057220459
    7. '[user' → logprob: -18.2500057220459
    8. '[t' → logprob: -18.3750057220459
    9. '[i' → logprob: -18.7500057220459
    10. '.setdefault' → logprob: -19.6250057220459

Token 54: ' -' (ID: 533)
  Prédit: '].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0009199160267598927
    2. ']' → logprob: -7.000919818878174
    3. ' ].' → logprob: -12.500920295715332
    4. '.append' → logprob: -13.125920295715332
    5. '.' → logprob: -13.750920295715332
    6. '[' → logprob: -14.250920295715332
    7. ').' → logprob: -14.625920295715332
    8. '][' → logprob: -15.625920295715332
    9. '   ' → logprob: -16.250919342041016
    10. '],' → logprob: -16.375919342041016

Token 55: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005230080569162965
    2. ' ' → logprob: -7.625523090362549
    3. '<|end|>' → logprob: -10.50052261352539
    4. ')' → logprob: -13.25052261352539
    5. '>' → logprob: -13.75052261352539
    6. ']' → logprob: -13.87552261352539
    7. ':' → logprob: -14.37552261352539
    8. '<|end|>' → logprob: -14.50052261352539
    9. ',' → logprob: -14.62552261352539
    10. '2' → logprob: -15.12552261352539

Token 56: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.318681188422488e-05
    2. ' ' → logprob: -11.25001335144043
    3. '<|end|>' → logprob: -15.87501335144043
    4. '2' → logprob: -16.75001335144043
    5. '>' → logprob: -17.62501335144043
    6. ')' → logprob: -18.25001335144043
    7. '```' → logprob: -18.37501335144043
    8. 'to' → logprob: -18.68751335144043
    9. '0' → logprob: -19.18751335144043
    10. '=' → logprob: -19.25001335144043

Token 57: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0022232949268072844
    2. ']' → logprob: -6.127223491668701
    3. ' ].' → logprob: -10.252223014831543
    4. '.' → logprob: -13.627223014831543
    5. ').' → logprob: -14.252223014831543
    6. '.append' → logprob: -14.752223014831543
    7. '   ' → logprob: -15.002223014831543
    8. ''].' → logprob: -16.25222396850586
    9. '][' → logprob: -17.00222396850586
    10. '],' → logprob: -17.00222396850586

Token 58: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.2664456789934775e-06
    2. ' append' → logprob: -14.375000953674316
    3. '.append' → logprob: -14.875000953674316
    4. 'appen' → logprob: -15.000000953674316
    5. '	append' → logprob: -17.500001907348633
    6. 'add' → logprob: -18.750001907348633
    7. '_append' → logprob: -18.875001907348633
    8. 'app' → logprob: -19.125001907348633
    9. 'Append' → logprob: -20.125001907348633
    10. 'appe' → logprob: -21.250001907348633

Token 59: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -9.710618905955926e-05
    2. '(' → logprob: -9.250097274780273
    3. '((' → logprob: -14.500097274780273
    4. 'v' → logprob: -14.750097274780273
    5. '(
' → logprob: -16.375097274780273
    6. ' (' → logprob: -17.125097274780273
    7. '	v' → logprob: -20.000097274780273
    8. '(u' → logprob: -20.125097274780273
    9. ')v' → logprob: -20.625097274780273
    10. '(n' → logprob: -20.875097274780273

Token 60: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1277952343225479
    2. '-' → logprob: -2.1277952194213867
    3. ' ' → logprob: -7.627795219421387
    4. ')' → logprob: -8.002795219421387
    5. '   ' → logprob: -11.252795219421387
    6. ' ' → logprob: -11.502795219421387
    7. '[' → logprob: -11.502795219421387
    8. '<|end|>' → logprob: -13.002795219421387
    9. ' )' → logprob: -13.127795219421387
    10. '  ' → logprob: -13.627795219421387

Token 61: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.877503907773644e-05
    2. ' ' → logprob: -9.250099182128906
    3. '<|end|>' → logprob: -13.375099182128906
    4. '<|end|>' → logprob: -15.187599182128906
    5. ')' → logprob: -15.750099182128906
    6. '```' → logprob: -16.187599182128906
    7. '１' → logprob: -16.375099182128906
    8. '   ' → logprob: -16.812599182128906
    9. '۱' → logprob: -16.937599182128906
    10. '2' → logprob: -17.312599182128906

Token 62: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.292907877039397e-06
    2. ' ' → logprob: -12.75000286102295
    3. '<|end|>' → logprob: -16.250003814697266
    4. '１' → logprob: -16.875003814697266
    5. '```' → logprob: -17.062503814697266
    6. '۱' → logprob: -17.375003814697266
    7. '2' → logprob: -17.562503814697266
    8. '१' → logprob: -17.625003814697266
    9. '১' → logprob: -17.937503814697266
    10. '11' → logprob: -18.187503814697266

Token 63: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.015305552864447e-05
    2. ')
' → logprob: -10.375060081481934
    3. ' )' → logprob: -10.875060081481934
    4. '   ' → logprob: -11.625060081481934
    5. '),' → logprob: -15.125060081481934
    6. ')

' → logprob: -16.00006103515625
    7. '))' → logprob: -16.37506103515625
    8. ')`' → logprob: -16.75006103515625
    9. ')#' → logprob: -16.87506103515625
    10. ' ' → logprob: -16.87506103515625

Token 64: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2072007805109024
    2. '<|end|>' → logprob: -1.8322007656097412
    3. '
' → logprob: -4.45720100402832
    4. '    
' → logprob: -5.33220100402832
    5. '```' → logprob: -5.95720100402832
    6. ')' → logprob: -6.20720100402832
    7. ' ' → logprob: -6.45720100402832
    8. '  
' → logprob: -6.58220100402832
    9. ' 
' → logprob: -7.08220100402832
    10. 'tree' → logprob: -7.83220100402832

Token 65: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' (adapté à ' tree') → logprob: -0.0003111519617959857
    2. ' tree' → logprob: -8.625310897827148
    3. '   ' → logprob: -9.000310897827148
    4. '	tree' → logprob: -12.000310897827148
    5. '(tree' → logprob: -14.625310897827148
    6. '.tree' → logprob: -14.750310897827148
    7. ')' → logprob: -15.125310897827148
    8. ' ' → logprob: -15.375310897827148
    9. 'u' → logprob: -15.500310897827148
    10. '```' → logprob: -15.875310897827148

Token 66: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.00041994822095148265
    2. '[u' → logprob: -7.875420093536377
    3. '[' → logprob: -10.250419616699219
    4. 'v' → logprob: -12.375419616699219
    5. ' [' → logprob: -16.87541961669922
    6. '```' → logprob: -17.37541961669922
    7. '[
' → logprob: -17.50041961669922
    8. '	v' → logprob: -17.62541961669922
    9. '[val' → logprob: -18.00041961669922
    10. '[V' → logprob: -18.37541961669922

Token 67: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1479564905166626
    2. '-' → logprob: -2.147956371307373
    3. '[' → logprob: -3.897956371307373
    4. ' ' → logprob: -8.647956848144531
    5. '<|end|>' → logprob: -8.647956848144531
    6. '[-' → logprob: -9.397956848144531
    7. ')' → logprob: -10.272956848144531
    8. '   ' → logprob: -11.522956848144531
    9. '<|end|>' → logprob: -11.772956848144531
    10. ' [' → logprob: -11.772956848144531

Token 68: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00193149340339005
    2. ' ' → logprob: -6.251931667327881
    3. '<|end|>' → logprob: -13.626931190490723
    4. '   ' → logprob: -14.751931190490723
    5. '>' → logprob: -15.439431190490723
    6. '```' → logprob: -15.626931190490723
    7. '<|end|>' → logprob: -15.689431190490723
    8. ')' → logprob: -16.00193214416504
    9. '-' → logprob: -16.31443214416504
    10. '[' → logprob: -17.06443214416504

Token 69: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002613358374219388
    2. ' ' → logprob: -8.250261306762695
    3. '0' → logprob: -18.250261306762695
    4. '   ' → logprob: -18.875261306762695
    5. '2' → logprob: -18.937761306762695
    6. '１' → logprob: -18.937761306762695
    7. '```' → logprob: -19.062761306762695
    8. 'u' → logprob: -19.562761306762695
    9. '۱' → logprob: -19.750261306762695
    10. '<|end|>' → logprob: -19.812761306762695

Token 70: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.07974201440811157
    2. ').' → logprob: -2.579741954803467
    3. ']' → logprob: -7.579741954803467
    4. ')' → logprob: -8.329742431640625
    5. '.' → logprob: -10.079742431640625
    6. '.append' → logprob: -10.579742431640625
    7. ' ].' → logprob: -10.954742431640625
    8. '}.' → logprob: -11.954742431640625
    9. ')].' → logprob: -12.829742431640625
    10. '   ' → logprob: -13.579742431640625

Token 71: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -4.8232690460281447e-05
    2. 'appen' → logprob: -10.000048637390137
    3. ' append' → logprob: -13.500048637390137
    4. '.append' → logprob: -14.250048637390137
    5. '	append' → logprob: -15.000048637390137
    6. 'appe' → logprob: -15.125048637390137
    7. 'app' → logprob: -16.37504768371582
    8. 'add' → logprob: -17.12504768371582
    9. 'ap' → logprob: -17.62504768371582
    10. ' ' → logprob: -18.37504768371582

Token 72: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.00010926496179308742
    2. '(' → logprob: -9.125109672546387
    3. 'u' → logprob: -15.125109672546387
    4. '((' → logprob: -17.25010871887207
    5. '(s' → logprob: -18.50010871887207
    6. ' (' → logprob: -18.62510871887207
    7. '(
' → logprob: -18.75010871887207
    8. '(ui' → logprob: -19.00010871887207
    9. '	u' → logprob: -19.25010871887207
    10. '(n' → logprob: -19.50010871887207

Token 73: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007815150311216712
    2. '-' → logprob: -8.125781059265137
    3. ' )' → logprob: -8.250781059265137
    4. '-)' → logprob: -9.000781059265137
    5. ' -' → logprob: -10.250781059265137
    6. '])' → logprob: -10.875781059265137
    7. '[' → logprob: -11.000781059265137
    8. ']' → logprob: -11.375781059265137
    9. '   ' → logprob: -12.375781059265137
    10. ')}' → logprob: -12.750781059265137

Token 74: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004623322281986475
    2. ' ' → logprob: -5.3796234130859375
    3. ')' → logprob: -13.254623413085938
    4. '<|end|>' → logprob: -14.254623413085938
    5. '```' → logprob: -16.004623413085938
    6. '   ' → logprob: -16.254623413085938
    7. ' ' → logprob: -16.567123413085938
    8. '0' → logprob: -17.129623413085938
    9. '<|end|>' → logprob: -17.254623413085938
    10. ' )' → logprob: -17.317123413085938

Token 75: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '<|end|>' → logprob: -18.62500762939453
    4. '0' → logprob: -18.75000762939453
    5. ')' → logprob: -19.25000762939453
    6. '```' → logprob: -19.75000762939453
    7. '   ' → logprob: -20.25000762939453
    8. '１' → logprob: -20.37500762939453
    9. '১' → logprob: -21.50000762939453
    10. '۱' → logprob: -21.68750762939453

Token 76: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0802738870552275e-05
    2. ')
' → logprob: -11.50001049041748
    3. ' )' → logprob: -14.37501049041748
    4. ')}' → logprob: -17.750011444091797
    5. ')

' → logprob: -17.875011444091797
    6. '}' → logprob: -17.875011444091797
    7. '),' → logprob: -18.500011444091797
    8. '```' → logprob: -18.875011444091797
    9. ')`' → logprob: -18.875011444091797
    10. '))' → logprob: -19.000011444091797

Token 77: 'a' (ID: 64)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5172966122627258
    2. 'visited' → logprob: -1.517296552658081
    3. 'q' → logprob: -2.017296552658081
    4. 'start' → logprob: -4.14229679107666
    5. 'd' → logprob: -4.64229679107666
    6. 'distance' → logprob: -5.01729679107666
    7. 'color' → logprob: -5.64229679107666
    8. 'vis' → logprob: -5.89229679107666
    9. 'used' → logprob: -6.01729679107666
    10. 'depth' → logprob: -6.14229679107666

Token 78: ' =' (ID: 314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.23030827939510345
    2. 'ns' → logprob: -2.7303082942962646
    3. 'n' → logprob: -3.4803082942962646
    4. '=' → logprob: -3.6053082942962646
    5. 'q' → logprob: -3.8553082942962646
    6. ' =' → logprob: -4.1053080558776855
    7. 's' → logprob: -5.1053080558776855
    8. 'a' → logprob: -5.3553080558776855
    9. 'queue' → logprob: -5.4803080558776855
    10. 'l' → logprob: -5.4803080558776855

Token 79: ' ' (ID: 220)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -1.4140045642852783
    2. ' queue' → logprob: -1.6640045642852783
    3. 'queue' → logprob: -1.7890045642852783
    4. '[]' → logprob: -1.7890045642852783
    5. '[' → logprob: -2.0390045642852783
    6. ' []' → logprob: -2.7890045642852783
    7. '0' → logprob: -4.164004325866699
    8. ' ' → logprob: -4.914004325866699
    9. '[int' → logprob: -5.039004325866699
    10. 'deque' → logprob: -5.789004325866699

Token 80: '0' (ID: 15)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.06112923473119736
    2. '[]' → logprob: -3.561129331588745
    3. '[' → logprob: -4.061129093170166
    4. '0' → logprob: -4.561129093170166
    5. 'n' → logprob: -7.061129093170166
    6. ' queue' → logprob: -7.311129093170166
    7. 'deque' → logprob: -7.436129093170166
    8. 'que' → logprob: -8.311129570007324
    9. '[int' → logprob: -8.811129570007324
    10. 'int' → logprob: -9.186129570007324

Token 81: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1280871480703354
    2. 'b' → logprob: -2.753087043762207
    3. 'q' → logprob: -4.503087043762207
    4. '<|end|>' → logprob: -4.503087043762207
    5. 'n' → logprob: -4.878087043762207
    6. ' ' → logprob: -5.128087043762207
    7. '  
' → logprob: -5.753087043762207
    8. 'while' → logprob: -5.753087043762207
    9. 'queue' → logprob: -6.003087043762207
    10. ' 
' → logprob: -6.128087043762207

Token 82: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.10518685728311539
    2. 'b' → logprob: -3.105186939239502
    3. 'd' → logprob: -3.855186939239502
    4. 'visited' → logprob: -3.855186939239502
    5. 'queue' → logprob: -5.730186939239502
    6. 'dist' → logprob: -6.105186939239502
    7. '
' → logprob: -6.480186939239502
    8. ' ' → logprob: -7.230186939239502
    9. 'v' → logprob: -7.230186939239502
    10. 'distance' → logprob: -7.605186939239502

Token 83: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.48844388127326965
    2. '=' → logprob: -1.2384438514709473
    3. 'ue' → logprob: -2.3634438514709473
    4. '.' → logprob: -6.238443851470947
    5. ' ' → logprob: -8.363444328308105
    6. 'u' → logprob: -8.488444328308105
    7. 'e' → logprob: -10.488444328308105
    8. ' ue' → logprob: -10.988444328308105
    9. ',' → logprob: -11.113444328308105
    10. '.=' → logprob: -11.863444328308105

Token 84: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.47411423921585083
    2. ' queue' → logprob: -0.9741142392158508
    3. 'que' → logprob: -11.474114418029785
    4. '(queue' → logprob: -11.724114418029785
    5. '	queue' → logprob: -11.974114418029785
    6. 'deque' → logprob: -12.224114418029785
    7. '.queue' → logprob: -12.599114418029785
    8. ' que' → logprob: -14.099114418029785
    9. 'q' → logprob: -14.599114418029785
    10. '```' → logprob: -14.599114418029785

Token 85: '.Queue' (ID: 97551)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3875473439693451
    2. '.Queue' → logprob: -1.1375473737716675
    3. ' .' → logprob: -7.762547492980957
    4. '.Q' → logprob: -8.887547492980957
    5. '.Priority' → logprob: -10.012547492980957
    6. '.q' → logprob: -11.262547492980957
    7. '.Enqueue' → logprob: -12.387547492980957
    8. '.Point' → logprob: -12.387547492980957
    9. '.Simple' → logprob: -12.512547492980957
    10. '.queue' → logprob: -12.762547492980957

Token 86: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.016167035326361656
    2. '(' → logprob: -4.141167163848877
    3. '()
' → logprob: -9.266166687011719
    4. ' ()' → logprob: -11.391166687011719
    5. '()

' → logprob: -11.891166687011719
    6. '().' → logprob: -12.641166687011719
    7. '()<' → logprob: -13.516166687011719
    8. '(
' → logprob: -13.641166687011719
    9. '()`' → logprob: -13.766166687011719
    10. '()]' → logprob: -13.891166687011719

Token 87: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0011414075270295143
    2. '
' → logprob: -7.126141548156738
    3. ' q' → logprob: -8.501141548156738
    4. ' 
' → logprob: -9.376141548156738
    5. '	q' → logprob: -11.126141548156738
    6. '' → logprob: -11.751141548156738
    7. '
' → logprob: -12.751141548156738
    8. '    
' → logprob: -12.876141548156738
    9. '   
' → logprob: -13.126141548156738
    10. '```' → logprob: -13.126141548156738

Token 88: '.put' (ID: 5133)
  Prédit: '.put'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.put' → logprob: -0.4742729067802429
    2. '.' → logprob: -0.9742729067802429
    3. '.enqueue' → logprob: -9.349272727966309
    4. '.q' → logprob: -10.224272727966309
    5. ' .' → logprob: -10.224272727966309
    6. '.append' → logprob: -11.849272727966309
    7. '.get' → logprob: -11.974272727966309
    8. '.Put' → logprob: -12.724272727966309
    9. ').' → logprob: -13.099272727966309
    10. '.add' → logprob: -13.599272727966309

Token 89: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04864618554711342
    2. '(a' → logprob: -3.0486462116241455
    3. '((' → logprob: -10.048645973205566
    4. ' (' → logprob: -11.548645973205566
    5. '(n' → logprob: -13.798645973205566
    6. '(q' → logprob: -13.798645973205566
    7. '(s' → logprob: -13.923645973205566
    8. '()' → logprob: -14.298645973205566
    9. 'a' → logprob: -14.298645973205566
    10. '(()' → logprob: -15.298645973205566

Token 90: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4140441635390744e-05
    2. ' )' → logprob: -11.375014305114746
    3. '))' → logprob: -14.000014305114746
    4. ')
' → logprob: -14.250014305114746
    5. ',' → logprob: -14.375014305114746
    6. '),' → logprob: -16.00001335144043
    7. ')`' → logprob: -16.62501335144043
    8. ',)' → logprob: -16.75001335144043
    9. '(' → logprob: -17.00001335144043
    10. '`)' → logprob: -17.25001335144043

Token 91: 'v' (ID: 85)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.00693689426407218
    2. 'dist' → logprob: -6.006937026977539
    3. ' visited' → logprob: -6.381937026977539
    4. 'used' → logprob: -6.881937026977539
    5. 'v' → logprob: -7.506937026977539
    6. 'distance' → logprob: -8.131937026977539
    7. 'seen' → logprob: -8.631937026977539
    8. 'd' → logprob: -8.756937026977539
    9. 'vis' → logprob: -8.881937026977539
    10. 'b' → logprob: -9.881937026977539

Token 92: ' =' (ID: 314)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0004885728703811765
    2. 'isit' → logprob: -8.37548828125
    3. 'isted' → logprob: -8.75048828125
    4. '[' → logprob: -10.25048828125
    5. 'isible' → logprob: -10.37548828125
    6. 'i' → logprob: -11.75048828125
    7. '[i' → logprob: -12.00048828125
    8. 'visited' → logprob: -12.62548828125
    9. '(is' → logprob: -12.75048828125
    10. '=' → logprob: -13.12548828125

Token 93: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.25550103187561035
    2. ' [' → logprob: -1.7555010318756104
    3. '{' → logprob: -3.2555010318756104
    4. 'set' → logprob: -4.630500793457031
    5. ' {' → logprob: -6.005500793457031
    6. ' set' → logprob: -6.630500793457031
    7. '[n' → logprob: -8.130500793457031
    8. '[a' → logprob: -8.505500793457031
    9. ' ' → logprob: -10.505500793457031
    10. '[s' → logprob: -11.880500793457031

Token 94: '0' (ID: 15)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.007008044049143791
    2. 'True' → logprob: -5.007008075714111
    3. ' False' → logprob: -8.507007598876953
    4. 'F' → logprob: -10.007007598876953
    5. '0' → logprob: -10.132007598876953
    6. ' True' → logprob: -12.382007598876953
    7. 'Fal' → logprob: -14.382007598876953
    8. 'Fa' → logprob: -15.007007598876953
    9. '1' → logprob: -15.257007598876953
    10. '(False' → logprob: -16.132007598876953

Token 95: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02505650371313095
    2. ']*' → logprob: -3.9000566005706787
    3. ' ]' → logprob: -5.7750563621521
    4. ' for' → logprob: -6.7750563621521
    5. ']*(' → logprob: -8.525056838989258
    6. 'for' → logprob: -10.275056838989258
    7. ']+' → logprob: -11.275056838989258
    8. ',' → logprob: -12.525056838989258
    9. ')' → logprob: -12.775056838989258
    10. ' ' → logprob: -13.025056838989258

Token 96: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3362058699131012
    2. 'range' → logprob: -1.3362058401107788
    3. '_' → logprob: -3.9612059593200684
    4. '(range' → logprob: -6.211205959320068
    5. ' _' → logprob: -6.836205959320068
    6. '_range' → logprob: -7.961205959320068
    7. 'i' → logprob: -9.21120548248291
    8. ' i' → logprob: -10.08620548248291
    9. ' in' → logprob: -10.58620548248291
    10. ' ' → logprob: -10.71120548248291

Token 97: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.09226926416158676
    2. ' range' → logprob: -2.4672691822052
    3. 'in' → logprob: -6.467269420623779
    4. ' in' → logprob: -6.467269420623779
    5. '(range' → logprob: -8.967268943786621
    6. ' ' → logprob: -10.092268943786621
    7. 'ange' → logprob: -11.592268943786621
    8. 'n' → logprob: -11.967268943786621
    9. 'r' → logprob: -11.967268943786621
    10. '(' → logprob: -12.342268943786621

Token 98: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.14270128309726715
    2. ' range' → logprob: -2.0177013874053955
    3. 'tree' → logprob: -11.892701148986816
    4. 'r' → logprob: -12.142701148986816
    5. 'ran' → logprob: -12.267701148986816
    6. ' ' → logprob: -13.017701148986816
    7. 'rang' → logprob: -13.517701148986816
    8. ' tree' → logprob: -13.892701148986816
    9. '(range' → logprob: -13.892701148986816
    10. ' ran' → logprob: -14.142701148986816

Token 99: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.014406540431082249
    2. 'n' → logprob: -4.264406681060791
    3. ' n' → logprob: -9.139406204223633
    4. '(' → logprob: -9.389406204223633
    5. ' (' → logprob: -9.889406204223633
    6. ')n' → logprob: -14.139406204223633
    7. '(
' → logprob: -15.889406204223633
    8. '	n' → logprob: -16.514406204223633
    9. ')' → logprob: -16.639406204223633
    10. '   ' → logprob: -16.889406204223633

Token 100: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.31384867429733276
    2. ']' → logprob: -1.3138487339019775
    3. ' ]' → logprob: -8.063848495483398
    4. ')' → logprob: -8.563848495483398
    5. '])' → logprob: -9.563848495483398
    6. '])]' → logprob: -13.063848495483398
    7. ')])' → logprob: -13.438848495483398
    8. ']
' → logprob: -13.563848495483398
    9. ']}' → logprob: -13.688848495483398
    10. ' )' → logprob: -13.813848495483398

Token 101: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.000650125031825155
    2. ' 
' → logprob: -8.875650405883789
    3. '```' → logprob: -9.000650405883789
    4. '   ' → logprob: -9.375650405883789
    5. ' ' → logprob: -9.375650405883789
    6. 'while' → logprob: -9.875650405883789
    7. ' v' → logprob: -10.125650405883789
    8. '
' → logprob: -10.250650405883789
    9. ' while' → logprob: -11.250650405883789
    10. '    
' → logprob: -11.375650405883789

Token 102: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.23173627257347107
    2. '[' → logprob: -1.6067363023757935
    3. '[q' → logprob: -5.606736183166504
    4. 'a' → logprob: -6.481736183166504
    5. '[v' → logprob: -7.106736183166504
    6. '[u' → logprob: -10.106736183166504
    7. '0' → logprob: -10.231736183166504
    8. 'v' → logprob: -10.231736183166504
    9. '\[' → logprob: -10.356736183166504
    10. 'q' → logprob: -10.856736183166504

Token 103: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00018697108316700906
    2. ']=' → logprob: -8.875186920166016
    3. ' ]' → logprob: -10.000186920166016
    4. '=' → logprob: -13.625186920166016
    5. ']+=' → logprob: -15.625186920166016
    6. ']
' → logprob: -15.750186920166016
    7. ')]' → logprob: -16.625186920166016
    8. '`]' → logprob: -17.125186920166016
    9. ' ' → logprob: -17.375186920166016
    10. ')' → logprob: -17.375186920166016

Token 104: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740835428237915
    2. '=' → logprob: -0.9740835428237915
    3. ' ' → logprob: -12.34908390045166
    4. ' +=' → logprob: -14.59908390045166
    5. '<|end|>' → logprob: -14.59908390045166
    6. ']' → logprob: -15.22408390045166
    7. ' |=' → logprob: -15.22408390045166
    8. '+=' → logprob: -15.47408390045166
    9. '=True' → logprob: -15.59908390045166
    10. '[' → logprob: -16.724082946777344

Token 105: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003132976416964084
    2. ' ' → logprob: -8.375313758850098
    3. 'True' → logprob: -9.625313758850098
    4. ' True' → logprob: -11.000313758850098
    5. '   ' → logprob: -17.50031280517578
    6. '  ' → logprob: -18.37531280517578
    7. '(True' → logprob: -18.87531280517578
    8. '0' → logprob: -18.87531280517578
    9. '=True' → logprob: -20.25031280517578
    10. '2' → logprob: -20.62531280517578

Token 106: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3425219549390022e-05
    2. 'True' → logprob: -11.37501335144043
    3. ' ' → logprob: -13.25001335144043
    4. ' True' → logprob: -15.75001335144043
    5. '0' → logprob: -19.87501335144043
    6. '(True' → logprob: -20.87501335144043
    7. '-' → logprob: -21.12501335144043
    8. '   ' → logprob: -21.37501335144043
    9. '2' → logprob: -21.50001335144043
    10. '7' → logprob: -21.87501335144043

Token 107: '

' (ID: 279)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.09808660298585892
    2. '
' → logprob: -2.4730865955352783
    3. ' while' → logprob: -4.848086833953857
    4. '<|end|>' → logprob: -6.973086833953857
    5. '

' → logprob: -9.4730863571167
    6. '\n' → logprob: -9.7230863571167
    7. '```' → logprob: -9.8480863571167
    8. ',' → logprob: -10.2230863571167
    9. 'While' → logprob: -10.3480863571167
    10. ' 
' → logprob: -10.8480863571167

Token 108: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.5094070477061905e-05
    2. ' while' → logprob: -11.125015258789062
    3. 'While' → logprob: -16.625015258789062
    4. 'w' → logprob: -17.375015258789062
    5. 'b' → logprob: -17.625015258789062
    6. '```' → logprob: -17.750015258789062
    7. 'distance' → logprob: -17.875015258789062
    8. '	while' → logprob: -18.250015258789062
    9. 'prev' → logprob: -18.625015258789062
    10. '
' → logprob: -18.875015258789062

Token 109: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.12695898115634918
    2. 'not' → logprob: -2.1269590854644775
    3. 'q' → logprob: -11.001958847045898
    4. ' q' → logprob: -12.001958847045898
    5. 'n' → logprob: -12.751958847045898
    6. '(not' → logprob: -13.626958847045898
    7. '!' → logprob: -14.001958847045898
    8. ' no' → logprob: -14.001958847045898
    9. '
' → logprob: -14.376958847045898
    10. ' n' → logprob: -15.251958847045898

Token 110: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.043008435517549515
    2. 'q' → logprob: -3.168008327484131
    3. '(q' → logprob: -12.418008804321289
    4. '	q' → logprob: -13.043008804321289
    5. ' ' → logprob: -13.418008804321289
    6. ' ' → logprob: -14.918008804321289
    7. '.q' → logprob: -15.043008804321289
    8. '_q' → logprob: -15.168008804321289
    9. '?q' → logprob: -16.04300880432129
    10. '-q' → logprob: -16.29300880432129

Token 111: '.empty' (ID: 18962)
  Prédit: '.empty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.empty' → logprob: -0.002864319598302245
    2. '.q' → logprob: -6.252864360809326
    3. '.' → logprob: -7.002864360809326
    4. '.put' → logprob: -11.252863883972168
    5. ' .' → logprob: -12.877863883972168
    6. '.Empty' → logprob: -13.252863883972168
    7. '.full' → logprob: -13.502863883972168
    8. '.is' → logprob: -13.627863883972168
    9. '.queue' → logprob: -13.627863883972168
    10. '.get' → logprob: -13.752863883972168

Token 112: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.01107329223304987
    2. '()' → logprob: -4.511073112487793
    3. '():
' → logprob: -11.261073112487793
    4. ':' → logprob: -12.011073112487793
    5. '(' → logprob: -12.886073112487793
    6. ' ():' → logprob: -13.011073112487793
    7. '()>' → logprob: -14.261073112487793
    8. '()">' → logprob: -15.136073112487793
    9. ' ()' → logprob: -15.636073112487793
    10. '())' → logprob: -16.01107406616211

Token 113: '   ' (ID: 271)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.40034517645835876
    2. '   ' → logprob: -1.5253452062606812
    3. ' node' → logprob: -3.2753450870513916
    4. ' current' → logprob: -3.5253450870513916
    5. ' x' → logprob: -3.7753450870513916
    6. 'u' → logprob: -4.525345325469971
    7. ' v' → logprob: -5.525345325469971
    8. ' c' → logprob: -6.775345325469971
    9. ' t' → logprob: -6.775345325469971
    10. ' cur' → logprob: -7.650345325469971

Token 114: ' a' (ID: 261)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.11608655005693436
    2. 'u' → logprob: -2.366086483001709
    3. ' node' → logprob: -4.991086483001709
    4. ' current' → logprob: -5.241086483001709
    5. ' x' → logprob: -6.491086483001709
    6. 'x' → logprob: -7.366086483001709
    7. ' cur' → logprob: -8.491086959838867
    8. ' a' → logprob: -8.616086959838867
    9. 'node' → logprob: -8.866086959838867
    10. ' curr' → logprob: -8.991086959838867

Token 115: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.315531462430954
    2. '=' → logprob: -1.3155314922332764
    3. ',' → logprob: -6.815531253814697
    4. ' ' → logprob: -7.190531253814697
    5. ')' → logprob: -8.065531730651855
    6. '_' → logprob: -10.065531730651855
    7. '   ' → logprob: -10.940531730651855
    8. '.' → logprob: -11.940531730651855
    9. ' )' → logprob: -11.940531730651855
    10. '2' → logprob: -12.690531730651855

Token 116: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.07889099419116974
    2. ' q' → logprob: -2.5788910388946533
    3. '	q' → logprob: -13.703890800476074
    4. '_q' → logprob: -16.70389175415039
    5. '   ' → logprob: -16.95389175415039
    6. ' ' → logprob: -17.20389175415039
    7. 'queue' → logprob: -17.20389175415039
    8. '.q' → logprob: -17.95389175415039
    9. '[q' → logprob: -18.07889175415039
    10. '<|end|>' → logprob: -18.07889175415039

Token 117: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -2.2842308680992573e-05
    2. '.' → logprob: -11.000022888183594
    3. '.put' → logprob: -12.250022888183594
    4. ').' → logprob: -14.625022888183594
    5. ' .' → logprob: -14.750022888183594
    6. '.q' → logprob: -15.375022888183594
    7. 'get' → logprob: -15.875022888183594
    8. '.queue' → logprob: -16.750022888183594
    9. '().' → logprob: -16.875022888183594
    10. '.dequeue' → logprob: -17.750022888183594

Token 118: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.643152740551159e-05
    2. '()
' → logprob: -10.500036239624023
    3. '(' → logprob: -11.750036239624023
    4. '()
' → logprob: -14.875036239624023
    5. '()

' → logprob: -15.625036239624023
    6. ' ()' → logprob: -15.750036239624023
    7. '()`' → logprob: -15.875036239624023
    8. '()\' → logprob: -17.250036239624023
    9. '())' → logprob: -17.375036239624023
    10. '（）' → logprob: -17.500036239624023

Token 119: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3014194071292877
    2. ' for' → logprob: -1.4264193773269653
    3. '    
' → logprob: -4.176419258117676
    4. 'for' → logprob: -5.551419258117676
    5. '
' → logprob: -7.801419258117676
    6. ' 
' → logprob: -9.051419258117676
    7. '<|end|>' → logprob: -9.426419258117676
    8. ' ' → logprob: -9.551419258117676
    9. '   
' → logprob: -10.051419258117676
    10. '  
' → logprob: -10.551419258117676

Token 120: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.13472390174865723
    2. 'for' (adapté à ' for') → logprob: -2.3847239017486572
    3. '   ' → logprob: -3.3847239017486572
    4. '
' → logprob: -10.884723663330078
    5. '    
' → logprob: -11.259723663330078
    6. '	for' → logprob: -12.134723663330078
    7. ' 
' → logprob: -12.759723663330078
    8. ' ' → logprob: -13.634723663330078
    9. ' if' → logprob: -16.884723663330078
    10. '  ' → logprob: -17.259723663330078

Token 121: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.7508376836776733
    2. ' i' → logprob: -1.7508376836776733
    3. 'b' → logprob: -2.250837802886963
    4. ' w' → logprob: -2.875837802886963
    5. ' e' → logprob: -3.500837802886963
    6. ' u' → logprob: -3.750837802886963
    7. ' x' → logprob: -4.000837802886963
    8. 'i' → logprob: -4.000837802886963
    9. 'e' → logprob: -4.125837802886963
    10. 'x' → logprob: -4.250837802886963

Token 122: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023328283801674843
    2. 'in' → logprob: -3.7733283042907715
    3. ' ' → logprob: -9.523327827453613
    4. '	in' → logprob: -11.898327827453613
    5. '<|end|>' → logprob: -13.398327827453613
    6. ' ' → logprob: -15.148327827453613
    7. 's' → logprob: -15.398327827453613
    8. '<|end|>' → logprob: -15.648327827453613
    9. '  ' → logprob: -16.27332878112793
    10. 'In' → logprob: -16.39832878112793

Token 123: ' tree' (ID: 8165)
  Prédit: ' tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tree' → logprob: -0.6932432055473328
    2. 'tree' → logprob: -0.6932432055473328
    3. '	tree' → logprob: -9.943243026733398
    4. '(tree' → logprob: -10.318243026733398
    5. ' ' → logprob: -11.568243026733398
    6. 'tre' → logprob: -13.318243026733398
    7. '   ' → logprob: -13.318243026733398
    8. ' range' → logprob: -14.568243026733398
    9. 'range' → logprob: -14.693243026733398
    10. '.tree' → logprob: -15.068243026733398

Token 124: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -2.999452772201039e-05
    2. 'a' → logprob: -11.000029563903809
    3. '[' → logprob: -11.375029563903809
    4. ' [' → logprob: -14.000029563903809
    5. '[
' → logprob: -15.000029563903809
    6. '[A' → logprob: -15.500029563903809
    7. '[u' → logprob: -16.500030517578125
    8. ' a' → logprob: -16.625030517578125
    9. '[b' → logprob: -17.375030517578125
    10. '[i' → logprob: -17.375030517578125

Token 125: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.004385252017527819
    2. ']' → logprob: -6.129385471343994
    3. ':' → logprob: -6.754385471343994
    4. '):' → logprob: -7.129385471343994
    5. ']:
' → logprob: -8.629384994506836
    6. '>:' → logprob: -11.254384994506836
    7. ' ]' → logprob: -11.504384994506836
    8. '   ' → logprob: -11.629384994506836
    9. '}:' → logprob: -12.129384994506836
    10. ':]' → logprob: -12.629384994506836

Token 126: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03469924256205559
    2. ' if' → logprob: -3.5346992015838623
    3. '   ' → logprob: -5.534699440002441
    4. '    ' → logprob: -7.159699440002441
    5. 'if' → logprob: -9.034699440002441
    6. '    
' → logprob: -10.534699440002441
    7. '     ' → logprob: -11.409699440002441
    8. ' ' → logprob: -11.409699440002441
    9. '      ' → logprob: -11.784699440002441
    10. '        
' → logprob: -11.909699440002441

Token 127: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2186175286769867
    2. '           ' → logprob: -1.843617558479309
    3. '        ' → logprob: -4.4686174392700195
    4. 'if' (adapté à ' if') → logprob: -4.5936174392700195
    5. '       ' → logprob: -4.9686174392700195
    6. ' 
' → logprob: -5.8436174392700195
    7. '
' → logprob: -6.3436174392700195
    8. ' ' → logprob: -6.4686174392700195
    9. '    ' → logprob: -6.5936174392700195
    10. '   ' → logprob: -7.3436174392700195

Token 128: ' v' (ID: 323)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.02845296449959278
    2. ' v' → logprob: -3.6534528732299805
    3. 'not' → logprob: -6.4034528732299805
    4. 'v' → logprob: -7.7784528732299805
    5. ' ' → logprob: -9.77845287322998
    6. ' ' → logprob: -11.15345287322998
    7. '	not' → logprob: -13.52845287322998
    8. ' no' → logprob: -14.02845287322998
    9. '(not' → logprob: -14.27845287322998
    10. '	v' → logprob: -15.02845287322998

Token 129: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -14.750000953674316
    3. 'b' → logprob: -14.875000953674316
    4. '[v' → logprob: -16.625
    5. '[a' → logprob: -18.125
    6. '	b' → logprob: -19.125
    7. '[
' → logprob: -19.625
    8. ' [' → logprob: -20.125
    9. '
' → logprob: -20.375
    10. '```' → logprob: -20.625

Token 130: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4277712404727936
    2. '==' → logprob: -1.5527712106704712
    3. ']==' → logprob: -2.4277713298797607
    4. ' ==' → logprob: -3.0527713298797607
    5. ' ]' → logprob: -7.552771091461182
    6. '[' → logprob: -8.17777156829834
    7. ')' → logprob: -10.30277156829834
    8. '[]' → logprob: -10.55277156829834
    9. ' ' → logprob: -10.92777156829834
    10. '']==' → logprob: -11.55277156829834

Token 131: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.47410833835601807
    2. ' ==' → logprob: -0.9741083383560181
    3. '=' → logprob: -11.224108695983887
    4. ' ' → logprob: -11.474108695983887
    5. ']==' → logprob: -13.099108695983887
    6. '==
' → logprob: -13.099108695983887
    7. '0' → logprob: -13.599108695983887
    8. ')==' → logprob: -14.724108695983887
    9. ')' → logprob: -14.974108695983887
    10. ' =' → logprob: -15.099108695983887

Token 132: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01814994215965271
    2. ' ' → logprob: -4.0181498527526855
    3. '  ' → logprob: -17.643150329589844
    4. '   ' → logprob: -17.643150329589844
    5. '۰' → logprob: -18.643150329589844
    6. ' ' → logprob: -19.643150329589844
    7. '    ' → logprob: -19.955650329589844
    8. '<|end|>' → logprob: -20.643150329589844
    9. '	' → logprob: -20.830650329589844
    10. '
' → logprob: -20.830650329589844

Token 133: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.615255839889869e-05
    2. ' ' → logprob: -9.250096321105957
    3. '   ' → logprob: -17.37509536743164
    4. '<|end|>' → logprob: -18.37509536743164
    5. '  ' → logprob: -18.62509536743164
    6. '۰' → logprob: -18.62509536743164
    7. ' ' → logprob: -20.37509536743164
    8. 'False' → logprob: -20.37509536743164
    9. '```' → logprob: -20.50009536743164
    10. '０' → logprob: -20.56259536743164

Token 134: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02651822194457054
    2. ':
' → logprob: -3.6515181064605713
    3. '       ' → logprob: -9.026517868041992
    4. '):' → logprob: -10.026517868041992
    5. '           ' → logprob: -10.276517868041992
    6. '):
' → logprob: -11.901517868041992
    7. ')' → logprob: -12.776517868041992
    8. ':
' → logprob: -13.276517868041992
    9. ' :' → logprob: -13.401517868041992
    10. '   ' → logprob: -13.526517868041992

Token 135: ' len' (ID: 4631)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6431222558021545
    2. ' b' → logprob: -1.0181221961975098
    3. 'a' → logprob: -3.2681221961975098
    4. ' a' → logprob: -4.01812219619751
    5. 'len' → logprob: -4.51812219619751
    6. 'v' → logprob: -5.26812219619751
    7. 'tree' → logprob: -5.26812219619751
    8. ' v' → logprob: -5.39312219619751
    9. '   ' → logprob: -5.39312219619751
    10. ' len' → logprob: -5.76812219619751

Token 136: '(tree' (ID: 44909)
  Prédit: '(tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -0.00477187242358923
    2. '(' → logprob: -5.379771709442139
    3. '(queue' → logprob: -9.129772186279297
    4. '(q' → logprob: -11.504772186279297
    5. '(t' → logprob: -11.504772186279297
    6. '(s' → logprob: -12.254772186279297
    7. ' (' → logprob: -12.254772186279297
    8. '(
' → logprob: -13.254772186279297
    9. '	tree' → logprob: -13.504772186279297
    10. 'tree' → logprob: -13.629772186279297

Token 137: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.0014526135055348277
    2. '[a' → logprob: -6.876452445983887
    3. ')' → logprob: -8.751452445983887
    4. '[' → logprob: -9.001452445983887
    5. 'b' → logprob: -9.251452445983887
    6. '[v' → logprob: -11.501452445983887
    7. ' [' → logprob: -12.126452445983887
    8. ')b' → logprob: -13.001452445983887
    9. '[u' → logprob: -13.001452445983887
    10. 'a' → logprob: -13.188952445983887

Token 138: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0036345154512673616
    2. ')==' → logprob: -7.253634452819824
    3. '[' → logprob: -7.378634452819824
    4. '[b' → logprob: -7.503634452819824
    5. ')>' → logprob: -7.503634452819824
    6. '])' → logprob: -7.753634452819824
    7. ' )' → logprob: -7.753634452819824
    8. '[a' → logprob: -9.128634452819824
    9. '   ' → logprob: -10.003634452819824
    10. ')!=' → logprob: -10.253634452819824

Token 139: ' >' (ID: 1424)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7214074730873108
    2. ' >' → logprob: -1.471407413482666
    3. '==' → logprob: -2.096407413482666
    4. ' !=' → logprob: -2.846407413482666
    5. '>' → logprob: -2.971407413482666
    6. ' <=' → logprob: -3.846407413482666
    7. '!=' → logprob: -4.721407413482666
    8. ' <' → logprob: -5.221407413482666
    9. ' >=' → logprob: -5.346407413482666
    10. ' ' → logprob: -5.596407413482666

Token 140: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.021424762904644012
    2. '2' → logprob: -4.271424770355225
    3. '0' → logprob: -5.271424770355225
    4. ' ' → logprob: -6.271424770355225
    5. '3' → logprob: -8.771424293518066
    6. '   ' → logprob: -11.708924293518066
    7. '4' → logprob: -11.896424293518066
    8. '=' → logprob: -12.521424293518066
    9. '.' → logprob: -12.708924293518066
    10. '
' → logprob: -12.958924293518066

Token 141: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03238288313150406
    2. '0' → logprob: -3.9073829650878906
    3. '2' → logprob: -4.907382965087891
    4. ' ' → logprob: -5.532382965087891
    5. '3' → logprob: -8.40738296508789
    6. '<|end|>' → logprob: -10.28238296508789
    7. '4' → logprob: -10.40738296508789
    8. '   ' → logprob: -10.53238296508789
    9. '  ' → logprob: -11.28238296508789
    10. '.' → logprob: -11.90738296508789

Token 142: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04877357929944992
    2. ':
' → logprob: -3.0487735271453857
    3. '       ' → logprob: -9.423773765563965
    4. '):' → logprob: -10.048773765563965
    5. '):
' → logprob: -10.923773765563965
    6. ' and' → logprob: -11.798773765563965
    7. '   ' → logprob: -11.798773765563965
    8. '           ' → logprob: -11.923773765563965
    9. ' :' → logprob: -12.048773765563965
    10. ':

' → logprob: -12.423773765563965

Token 143: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18488040566444397
    2. '       ' → logprob: -1.9348803758621216
    3. 'v' → logprob: -4.809880256652832
    4. ':' → logprob: -5.309880256652832
    5. ':
' → logprob: -6.184880256652832
    6. ' v' → logprob: -6.434880256652832
    7. '   ' → logprob: -6.809880256652832
    8. 'q' → logprob: -7.059880256652832
    9. '
' → logprob: -7.184880256652832
    10. '<|end|>' → logprob: -7.184880256652832

Token 144: ' q' (ID: 2335)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.7040382623672485
    2. 'v' → logprob: -0.8290382623672485
    3. ' q' → logprob: -3.954038143157959
    4. 'q' (adapté à ' q') → logprob: -4.079038143157959
    5. '               ' → logprob: -4.204038143157959
    6. '           ' → logprob: -4.329038143157959
    7. '   ' → logprob: -6.204038143157959
    8. '       ' → logprob: -6.329038143157959
    9. ' ' → logprob: -8.454038619995117
    10. '	v' → logprob: -8.829038619995117

Token 145: '.put' (ID: 5133)
  Prédit: '.put'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.put' → logprob: -0.03806283324956894
    2. '.' → logprob: -3.288062810897827
    3. ' .' → logprob: -11.413063049316406
    4. ').' → logprob: -12.913063049316406
    5. '.enqueue' → logprob: -13.413063049316406
    6. ' put' → logprob: -13.538063049316406
    7. 'put' → logprob: -13.538063049316406
    8. '.Put' → logprob: -13.663063049316406
    9. '.q' → logprob: -14.288063049316406
    10. '>.' → logprob: -14.413063049316406

Token 146: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -5.157039049663581e-05
    2. '(' → logprob: -9.875051498413086
    3. 'b' → logprob: -17.125051498413086
    4. '(
' → logprob: -17.875051498413086
    5. '((' → logprob: -18.500051498413086
    6. '(B' → logprob: -19.125051498413086
    7. ' (' → logprob: -19.625051498413086
    8. '(a' → logprob: -19.750051498413086
    9. '()' → logprob: -20.375051498413086
    10. ')b' → logprob: -20.375051498413086

Token 147: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.005536943208426237
    2. ')' → logprob: -5.505537033081055
    3. '           ' → logprob: -6.630537033081055
    4. ')
' → logprob: -9.130537033081055
    5. '       ' → logprob: -11.005537033081055
    6. '               ' → logprob: -11.630537033081055
    7. ' )
' → logprob: -13.005537033081055
    8. ')v' → logprob: -14.380537033081055
    9. '
' → logprob: -15.255537033081055
    10. ')

' → logprob: -15.380537033081055

Token 148: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13050788640975952
    2. '
' → logprob: -2.1305079460144043
    3. '       ' → logprob: -6.755507946014404
    4. ')' → logprob: -7.505507946014404
    5. ',' → logprob: -8.005507469177246
    6. '```' → logprob: -8.130507469177246
    7. '<|end|>' → logprob: -8.255507469177246
    8. '   ' → logprob: -8.255507469177246
    9. ')
' → logprob: -8.505507469177246
    10. 'v' → logprob: -9.130507469177246

Token 149: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.0012167827226221561
    2. ' v' → logprob: -6.751216888427734
    3. '           ' → logprob: -10.001216888427734
    4. '   ' → logprob: -14.001216888427734
    5. '       ' → logprob: -15.376216888427734
    6. '	v' → logprob: -16.126216888427734
    7. '  ' → logprob: -18.126216888427734
    8. '
' → logprob: -18.251216888427734
    9. '               ' → logprob: -18.501216888427734
    10. ' ' → logprob: -18.626216888427734

Token 150: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -4.1318875446449965e-05
    2. '[' → logprob: -10.125041007995605
    3. '[v' → logprob: -14.500041007995605
    4. ' [' → logprob: -15.375041007995605
    5. 'b' → logprob: -15.625041007995605
    6. '```' → logprob: -16.500041961669922
    7. '[a' → logprob: -16.625041961669922
    8. '[
' → logprob: -17.125041961669922
    9. ')[' → logprob: -17.750041961669922
    10. '[B' → logprob: -17.875041961669922

Token 151: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001628956088097766
    2. ']=' → logprob: -8.750163078308105
    3. '=' → logprob: -12.875163078308105
    4. '[' → logprob: -14.250163078308105
    5. ' ]' → logprob: -14.250163078308105
    6. ')' → logprob: -15.750163078308105
    7. '[b' → logprob: -17.00016212463379
    8. 's' → logprob: -17.12516212463379
    9. ' =' → logprob: -17.25016212463379
    10. ']
' → logprob: -17.50016212463379

Token 152: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759405493736267
    2. ' =' → logprob: -0.8259405493736267
    3. ' ' → logprob: -14.200940132141113
    4. '[' → logprob: -15.825940132141113
    5. ']' → logprob: -16.32594108581543
    6. '＝' → logprob: -16.45094108581543
    7. ')' → logprob: -17.20094108581543
    8. ']=' → logprob: -17.45094108581543
    9. '<|end|>' → logprob: -17.57594108581543
    10. ' =
' → logprob: -18.32594108581543

Token 153: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00152009935118258
    2. ' ' → logprob: -6.501520156860352
    3. 'v' → logprob: -11.251520156860352
    4. '2' → logprob: -13.126520156860352
    5. '   ' → logprob: -13.751520156860352
    6. ' v' → logprob: -14.501520156860352
    7. 'a' → logprob: -14.689020156860352
    8. '  ' → logprob: -15.939020156860352
    9. 'True' → logprob: -16.50152015686035
    10. 't' → logprob: -16.62652015686035

Token 154: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015705463010817766
    2. 'v' → logprob: -9.250157356262207
    3. ' ' → logprob: -10.000157356262207
    4. '2' → logprob: -11.375157356262207
    5. 'a' → logprob: -13.375157356262207
    6. 'True' → logprob: -14.250157356262207
    7. '   ' → logprob: -14.312657356262207
    8. ' v' → logprob: -15.875157356262207
    9. '  ' → logprob: -16.18765640258789
    10. 't' → logprob: -16.18765640258789

Token 155: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 156: 's' (ID: 82)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 157: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1281421184539795
    2. 'um' → logprob: -2.6281421184539795
    3. '=' → logprob: -3.5031421184539795
    4. 'u' → logprob: -5.003142356872559
    5. ' ' → logprob: -5.503142356872559
    6. '[' → logprob: -5.878142356872559
    7. 't' → logprob: -6.753142356872559
    8. 'e' → logprob: -7.628142356872559
    9. '(' → logprob: -7.878142356872559
    10. '[u' → logprob: -8.128142356872559

Token 158: ' a' (ID: 261)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7355782389640808
    2. '[]' → logprob: -1.4855782985687256
    3. 'sum' → logprob: -1.6105782985687256
    4. ' ' → logprob: -3.8605782985687256
    5. ' sum' → logprob: -4.3605780601501465
    6. ' []' → logprob: -4.3605780601501465
    7. '[' → logprob: -4.3605780601501465
    8. ' [' → logprob: -5.4855780601501465
    9. '[]
' → logprob: -5.4855780601501465
    10. '[n' → logprob: -5.6105780601501465

Token 159: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15831178426742554
    2. '<|end|>' → logprob: -2.1583118438720703
    3. '+' → logprob: -4.78331184387207
    4. 'while' → logprob: -5.40831184387207
    5. 'for' → logprob: -5.65831184387207
    6. ' 
' → logprob: -6.03331184387207
    7. '  
' → logprob: -6.15831184387207
    8. ' ' → logprob: -6.53331184387207
    9. '.' → logprob: -6.53331184387207
    10. 'print' → logprob: -6.65831184387207

Token 160: 'q' (ID: 80)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.9563071727752686
    2. 'while' → logprob: -1.0813071727752686
    3. '
' → logprob: -1.9563071727752686
    4. '<|end|>' → logprob: -3.2063071727752686
    5. 's' → logprob: -4.081307411193848
    6. 'for' → logprob: -4.581307411193848
    7. 'v' → logprob: -4.706307411193848
    8. '#' → logprob: -4.831307411193848
    9. ' while' → logprob: -4.831307411193848
    10. '+' → logprob: -4.956307411193848

Token 161: ' =' (ID: 314)
  Prédit: '.put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.put' → logprob: -0.12812238931655884
    2. '.' → logprob: -2.128122329711914
    3. '.get' → logprob: -7.253122329711914
    4. ' .' → logprob: -8.253122329711914
    5. '.clear' → logprob: -9.378122329711914
    6. '().' → logprob: -10.878122329711914
    7. '.queue' → logprob: -11.128122329711914
    8. '.q' → logprob: -11.128122329711914
    9. '.empty' → logprob: -11.128122329711914
    10. '.enqueue' → logprob: -11.253122329711914

Token 162: ' queue' (ID: 13661)
  Prédit: ' queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.6326786875724792
    2. 'queue' → logprob: -0.7576786875724792
    3. '	queue' → logprob: -10.382678985595703
    4. '.queue' → logprob: -11.257678985595703
    5. ' ' → logprob: -11.507678985595703
    6. '(queue' → logprob: -11.882678985595703
    7. 'que' → logprob: -12.257678985595703
    8. '```' → logprob: -12.632678985595703
    9. 'deque' → logprob: -13.507678985595703
    10. ' que' → logprob: -13.632678985595703

Token 163: '.Queue' (ID: 97551)
  Prédit: '.Queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Queue' → logprob: -0.06215892359614372
    2. '.' → logprob: -2.8121588230133057
    3. '.Priority' → logprob: -9.437158584594727
    4. '().' → logprob: -9.687158584594727
    5. '.Enqueue' → logprob: -11.562158584594727
    6. '()' → logprob: -11.937158584594727
    7. '.Q' → logprob: -12.187158584594727
    8. '.Empty' → logprob: -12.187158584594727
    9. ' .' → logprob: -12.187158584594727
    10. '.Point' → logprob: -13.062158584594727

Token 164: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.3869839310646057
    2. '()' → logprob: -1.136983871459961
    3. '()
' → logprob: -9.261983871459961
    4. '()

' → logprob: -11.636983871459961
    5. '(' → logprob: -12.886983871459961
    6. '()\' → logprob: -13.136983871459961
    7. '
' → logprob: -14.261983871459961
    8. '(q' → logprob: -14.261983871459961
    9. 's' → logprob: -14.386983871459961
    10. '(
' → logprob: -14.511983871459961

Token 165: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.941161776310764e-05
    2. 's' → logprob: -10.500039100646973
    3. '[q' → logprob: -12.250039100646973
    4. '[' → logprob: -13.125039100646973
    5. ' q' → logprob: -14.125039100646973
    6. '
' → logprob: -14.500039100646973
    7. '(q' → logprob: -14.625039100646973
    8. '0' → logprob: -15.125039100646973
    9. '{' → logprob: -15.125039100646973
    10. '?q' → logprob: -15.250039100646973

Token 166: '.put' (ID: 5133)
  Prédit: '.put'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.put' → logprob: -0.00046832661610096693
    2. '.' → logprob: -7.7504682540893555
    3. ' .' → logprob: -10.375468254089355
    4. '().' → logprob: -12.750468254089355
    5. '.enqueue' → logprob: -13.250468254089355
    6. ').' → logprob: -15.125468254089355
    7. 'put' → logprob: -15.125468254089355
    8. '.append' → logprob: -15.375468254089355
    9. '.push' → logprob: -16.125469207763672
    10. '<|end|>' → logprob: -16.250469207763672

Token 167: '([' (ID: 5194)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0007827070076018572
    2. 's' → logprob: -7.375782489776611
    3. '(' → logprob: -8.87578296661377
    4. '((' → logprob: -11.75078296661377
    5. '(a' → logprob: -12.00078296661377
    6. '(n' → logprob: -14.25078296661377
    7. '(
' → logprob: -15.50078296661377
    8. '(b' → logprob: -15.50078296661377
    9. 'a' → logprob: -15.50078296661377
    10. '(start' → logprob: -15.75078296661377

Token 168: 'a' (ID: 64)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00020592445798683912
    2. '(s' → logprob: -8.875205993652344
    3. 'a' → logprob: -10.500205993652344
    4. '[s' → logprob: -11.375205993652344
    5. '0' → logprob: -11.750205993652344
    6. '(' → logprob: -12.000205993652344
    7. ' s' → logprob: -12.875205993652344
    8. '[' → logprob: -13.125205993652344
    9. '{s' → logprob: -13.375205993652344
    10. '(a' → logprob: -13.875205993652344

Token 169: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004757135466206819
    2. ' ,' → logprob: -8.250475883483887
    3. '])' → logprob: -8.500475883483887
    4. ']' → logprob: -12.125475883483887
    5. ',s' → logprob: -13.875475883483887
    6. 's' → logprob: -14.125475883483887
    7. ',
' → logprob: -14.375475883483887
    8. ')' → logprob: -14.500475883483887
    9. ' ])' → logprob: -14.750475883483887
    10. '1' → logprob: -15.125475883483887

Token 170: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010819538496434689
    2. ' ' → logprob: -4.885819435119629
    3. '1' → logprob: -5.760819435119629
    4. 's' → logprob: -11.260819435119629
    5. '[' → logprob: -11.635819435119629
    6. '2' → logprob: -11.760819435119629
    7. ' [' → logprob: -12.073319435119629
    8. '-' → logprob: -12.260819435119629
    9. 'a' → logprob: -12.448319435119629
    10. ' s' → logprob: -13.573319435119629

Token 171: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001284640864469111
    2. '1' → logprob: -6.751284599304199
    3. ' ' → logprob: -9.2512845993042
    4. 's' → logprob: -12.0012845993042
    5. '2' → logprob: -13.0012845993042
    6. '[' → logprob: -13.0012845993042
    7. 'a' → logprob: -13.4387845993042
    8. '-' → logprob: -13.5012845993042
    9. '[]' → logprob: -14.3137845993042
    10. 'v' → logprob: -15.1262845993042

Token 172: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0006990921101532876
    2. ')' → logprob: -7.500699043273926
    3. ' ])' → logprob: -9.625699043273926
    4. ']' → logprob: -10.000699043273926
    5. ',' → logprob: -10.875699043273926
    6. ')])' → logprob: -12.125699043273926
    7. '])
' → logprob: -12.625699043273926
    8. ')]' → logprob: -12.875699043273926
    9. '))' → logprob: -13.625699043273926
    10. '],' → logprob: -14.750699043273926

Token 173: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.12092463672161102
    2. 'while' → logprob: -3.745924711227417
    3. ' while' → logprob: -3.870924711227417
    4. '<|end|>' → logprob: -4.120924472808838
    5. ' ' → logprob: -4.495924472808838
    6. 'd' → logprob: -4.620924472808838
    7. 's' → logprob: -4.995924472808838
    8. ' 
' → logprob: -5.245924472808838
    9. 'b' → logprob: -5.870924472808838
    10. 'c' → logprob: -6.120924472808838

Token 174: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12840025126934052
    2. '=' → logprob: -2.1284003257751465
    3. '=[' → logprob: -7.7534003257751465
    4. ' =[' → logprob: -7.8784003257751465
    5. '[s' → logprob: -8.503399848937988
    6. '[a' → logprob: -8.628399848937988
    7. '[' → logprob: -8.753399848937988
    8. '2' → logprob: -10.253399848937988
    9. 's' → logprob: -10.253399848937988
    10. 'a' → logprob: -11.378399848937988

Token 175: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.048936039209365845
    2. ' [' → logprob: -3.048936128616333
    3. '[-' → logprob: -8.923935890197754
    4. '[s' → logprob: -9.423935890197754
    5. '[a' → logprob: -9.673935890197754
    6. '0' → logprob: -10.423935890197754
    7. '[n' → logprob: -11.423935890197754
    8. ' ' → logprob: -11.673935890197754
    9. '[v' → logprob: -12.548935890197754
    10. ' [-' → logprob: -12.673935890197754

Token 176: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003658864414319396
    2. ' ' → logprob: -5.628658771514893
    3. 'False' → logprob: -10.00365924835205
    4. '1' → logprob: -12.12865924835205
    5. '[' → logprob: -12.75365924835205
    6. '-' → logprob: -13.37865924835205
    7. ' False' → logprob: -14.00365924835205
    8. '   ' → logprob: -14.00365924835205
    9. '  ' → logprob: -14.81615924835205
    10. ' [' → logprob: -15.37865924835205

Token 177: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.012532137334346771
    2. 'for' → logprob: -4.3875322341918945
    3. ' ' → logprob: -11.262532234191895
    4. ']' → logprob: -12.512532234191895
    5. '	for' → logprob: -12.637532234191895
    6. ')' → logprob: -13.262532234191895
    7. ']*' → logprob: -15.262532234191895
    8. '<|end|>' → logprob: -15.512532234191895
    9. ' ]' → logprob: -15.887532234191895
    10. ',' → logprob: -16.137531280517578

Token 178: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.2817467153072357
    2. '_' → logprob: -1.406746745109558
    3. ' range' → logprob: -7.656746864318848
    4. 'range' → logprob: -10.031746864318848
    5. ' in' → logprob: -10.156746864318848
    6. ' ' → logprob: -10.656746864318848
    7. '_range' → logprob: -11.281746864318848
    8. '<|end|>' → logprob: -12.906746864318848
    9. '_in' → logprob: -14.156746864318848
    10. 'in' → logprob: -14.531746864318848

Token 179: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.47429728507995605
    2. ' range' → logprob: -0.974297285079956
    3. ' in' → logprob: -9.099297523498535
    4. ' _' → logprob: -9.974297523498535
    5. '(range' → logprob: -10.349297523498535
    6. '_' → logprob: -11.224297523498535
    7. '_range' → logprob: -11.474297523498535
    8. ' ' → logprob: -12.974297523498535
    9. 'in' → logprob: -13.349297523498535
    10. '	range' → logprob: -13.599297523498535

Token 180: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3328757584095001
    2. 'range' → logprob: -1.3328757286071777
    3. '_' → logprob: -3.9578757286071777
    4. ' _' → logprob: -8.457876205444336
    5. '_range' → logprob: -9.332876205444336
    6. '(range' → logprob: -11.582876205444336
    7. '	range' → logprob: -12.707876205444336
    8. ' ' → logprob: -12.957876205444336
    9. '_
' → logprob: -14.457876205444336
    10. '[' → logprob: -14.957876205444336

Token 181: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.13487359881401062
    2. 'range' → logprob: -2.384873628616333
    3. ' range' → logprob: -3.509873628616333
    4. '(range' → logprob: -6.009873390197754
    5. 'n' → logprob: -6.509873390197754
    6. '(' → logprob: -8.759873390197754
    7. 's' → logprob: -10.259873390197754
    8. '(s' → logprob: -11.009873390197754
    9. ' n' → logprob: -11.634873390197754
    10. ' (' → logprob: -12.384873390197754

Token 182: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.09024178236722946
    2. '])' → logprob: -2.9652416706085205
    3. ']' → logprob: -3.4652416706085205
    4. ')' → logprob: -5.8402419090271
    5. ')]
' → logprob: -8.215241432189941
    6. '])
' → logprob: -9.465241432189941
    7. ')])' → logprob: -9.590241432189941
    8. '])]' → logprob: -9.590241432189941
    9. ']
' → logprob: -9.715241432189941
    10. ')
' → logprob: -12.090241432189941

Token 183: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.5213274309644476e-05
    2. '
' → logprob: -11.875015258789062
    3. ' v' → logprob: -13.000015258789062
    4. '   ' → logprob: -13.125015258789062
    5. '```' → logprob: -13.375015258789062
    6. '<|end|>' → logprob: -14.625015258789062
    7. '0' → logprob: -15.000015258789062
    8. '	v' → logprob: -15.375015258789062
    9. '``' → logprob: -15.625015258789062
    10. '    
' → logprob: -15.625015258789062

Token 184: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.22889386117458344
    2. '[s' → logprob: -2.228893756866455
    3. '[' → logprob: -2.353893756866455
    4. 'a' → logprob: -6.853893756866455
    5. '[q' → logprob: -7.228893756866455
    6. 's' → logprob: -10.228894233703613
    7. '[
' → logprob: -10.728894233703613
    8. '[v' → logprob: -11.228894233703613
    9. ' [' → logprob: -11.353894233703613
    10. '0' → logprob: -12.228894233703613

Token 185: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002165299083571881
    2. ' ]' → logprob: -9.000216484069824
    3. ']=' → logprob: -9.375216484069824
    4. '=' → logprob: -11.875216484069824
    5. ' =' → logprob: -14.750216484069824
    6. '[' → logprob: -15.375216484069824
    7. ']
' → logprob: -15.875216484069824
    8. '`]' → logprob: -16.62521743774414
    9. ']]' → logprob: -16.87521743774414
    10. ']

' → logprob: -17.12521743774414

Token 186: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03870388865470886
    2. ' =' → logprob: -3.2887039184570312
    3. '[' → logprob: -7.538703918457031
    4. ']' → logprob: -9.038703918457031
    5. ']=' → logprob: -11.663703918457031
    6. ' ' → logprob: -14.413703918457031
    7. 's' → logprob: -14.413703918457031
    8. '=

' → logprob: -15.038703918457031
    9. ')' → logprob: -15.413703918457031
    10. '=
' → logprob: -15.663703918457031

Token 187: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01816340535879135
    2. ' ' → logprob: -4.018163204193115
    3. '0' → logprob: -11.518163681030273
    4. 'True' → logprob: -13.518163681030273
    5. ' True' → logprob: -14.018163681030273
    6. '  ' → logprob: -14.455663681030273
    7. '   ' → logprob: -15.268163681030273
    8. ' ' → logprob: -15.893163681030273
    9. '2' → logprob: -16.518163681030273
    10. '
' → logprob: -16.893163681030273

Token 188: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.416665640543215e-05
    2. ' ' → logprob: -10.37503433227539
    3. '0' → logprob: -13.25003433227539
    4. 'True' → logprob: -14.37503433227539
    5. '   ' → logprob: -16.31253433227539
    6. '2' → logprob: -16.43753433227539
    7. '  ' → logprob: -16.93753433227539
    8. '
' → logprob: -17.00003433227539
    9. '

' → logprob: -17.43753433227539
    10. '１' → logprob: -17.62503433227539

Token 189: '

' (ID: 279)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0026844448875635862
    2. ' while' → logprob: -6.127684593200684
    3. 'max' → logprob: -8.252684593200684
    4. '
' → logprob: -8.752684593200684
    5. 'distance' → logprob: -10.127684593200684
    6. 'd' → logprob: -10.502684593200684
    7. 'length' → logprob: -12.502684593200684
    8. 'depth' → logprob: -13.252684593200684
    9. 'dist' → logprob: -14.252684593200684
    10. 'w' → logprob: -14.252684593200684

Token 190: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0014285710640251637
    2. ' while' → logprob: -7.126428604125977
    3. '   ' → logprob: -7.876428604125977
    4. 'a' → logprob: -8.376428604125977
    5. 'w' → logprob: -12.376428604125977
    6. '```' → logprob: -13.251428604125977
    7. ')' → logprob: -13.376428604125977
    8. 's' → logprob: -13.501428604125977
    9. '[' → logprob: -13.876428604125977
    10. '	while' → logprob: -14.001428604125977

Token 191: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.47408413887023926
    2. ' not' → logprob: -0.9740841388702393
    3. '(not' → logprob: -12.22408390045166
    4. ' ' → logprob: -14.47408390045166
    5. '!' → logprob: -14.47408390045166
    6. '	not' → logprob: -14.59908390045166
    7. '```' → logprob: -15.59908390045166
    8. 'n' → logprob: -16.349084854125977
    9. '_not' → logprob: -16.474084854125977
    10. ' ' → logprob: -16.599084854125977

Token 192: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.31326720118522644
    2. 'q' → logprob: -1.3132672309875488
    3. ' ' → logprob: -13.31326675415039
    4. '(q' → logprob: -13.93826675415039
    5. 'not' → logprob: -14.43826675415039
    6. '	q' → logprob: -14.43826675415039
    7. ' not' → logprob: -14.56326675415039
    8. 's' → logprob: -14.68826675415039
    9. ' ' → logprob: -15.56326675415039
    10. '[q' → logprob: -15.93826675415039

Token 193: '.empty' (ID: 18962)
  Prédit: '.empty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.empty' → logprob: -2.236549335066229e-05
    2. '.' → logprob: -10.750021934509277
    3. 'empty' → logprob: -14.625021934509277
    4. ' .' → logprob: -16.000022888183594
    5. '.em' → logprob: -16.000022888183594
    6. '.emp' → logprob: -16.625022888183594
    7. '.EMPTY' → logprob: -16.750022888183594
    8. '.q' → logprob: -16.750022888183594
    9. '.Empty' → logprob: -16.875022888183594
    10. '```' → logprob: -17.750022888183594

Token 194: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0001305950863752514
    2. '():
' → logprob: -9.000130653381348
    3. '()' → logprob: -12.000130653381348
    4. '():
' → logprob: -14.250130653381348
    5. '():

' → logprob: -15.125130653381348
    6. ' ():' → logprob: -16.12512969970703
    7. ':' → logprob: -18.25012969970703
    8. '(' → logprob: -18.75012969970703
    9. '().' → logprob: -20.12512969970703
    10. '()[' → logprob: -20.87512969970703

Token 195: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21996206045150757
    2. 'a' → logprob: -2.0949621200561523
    3. 'x' → logprob: -4.094962120056152
    4. 'p' → logprob: -4.219962120056152
    5. 'current' → logprob: -4.844962120056152
    6. 'data' → logprob: -5.094962120056152
    7. '[' → logprob: -5.844962120056152
    8. 'node' → logprob: -5.969962120056152
    9. ' p' → logprob: -6.094962120056152
    10. ' a' → logprob: -6.094962120056152

Token 196: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.5757657289505005
    2. 'x' → logprob: -2.825765609741211
    3. '   ' → logprob: -2.825765609741211
    4. 'node' → logprob: -2.950765609741211
    5. ' node' → logprob: -3.450765609741211
    6. ' a' → logprob: -3.450765609741211
    7. 'current' → logprob: -3.575765609741211
    8. ' current' → logprob: -3.700765609741211
    9. 'p' → logprob: -3.825765609741211
    10. 'pair' → logprob: -3.950765609741211

Token 197: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004071971052326262
    2. ',b' → logprob: -8.625407218933105
    3. '=' → logprob: -10.250407218933105
    4. ' ,' → logprob: -10.375407218933105
    5. ',
' → logprob: -10.500407218933105
    6. '_,' → logprob: -11.000407218933105
    7. ',q' → logprob: -11.375407218933105
    8. 's' → logprob: -11.500407218933105
    9. ',s' → logprob: -11.500407218933105
    10. ',data' → logprob: -11.625407218933105

Token 198: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.023253517225384712
    2. ' q' → logprob: -3.7732534408569336
    3. '   ' → logprob: -13.023253440856934
    4. '[q' → logprob: -13.898253440856934
    5. ')' → logprob: -14.148253440856934
    6. '
' → logprob: -14.648253440856934
    7. '[' → logprob: -14.773253440856934
    8. ' ' → logprob: -14.898253440856934
    9. 'None' → logprob: -15.023253440856934
    10. 'b' → logprob: -15.023253440856934

Token 199: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.000983743229880929
    2. '.' → logprob: -7.000983715057373
    3. '.put' → logprob: -10.250984191894531
    4. ' .' → logprob: -11.125984191894531
    5. ').' → logprob: -12.125984191894531
    6. '().' → logprob: -12.250984191894531
    7. '```' → logprob: -12.750984191894531
    8. 'get' → logprob: -12.875984191894531
    9. '
' → logprob: -14.000984191894531
    10. '   ' → logprob: -14.000984191894531

Token 200: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10158748179674149
    2. '()
' → logprob: -2.3515875339508057
    3. '()[' → logprob: -6.601587295532227
    4. '()
' → logprob: -11.726587295532227
    5. '()

' → logprob: -12.351587295532227
    6. '()\' → logprob: -12.726587295532227
    7. '[' → logprob: -13.226587295532227
    8. '(' → logprob: -13.851587295532227
    9. '())' → logprob: -14.601587295532227
    10. '[]' → logprob: -14.601587295532227

Token 201: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8915613889694214
    2. '
' → logprob: -1.3915613889694214
    3. '   ' → logprob: -1.5165613889694214
    4. ')' → logprob: -3.516561508178711
    5. '    
' → logprob: -3.641561508178711
    6. ')
' → logprob: -4.016561508178711
    7. '[
' → logprob: -5.016561508178711
    8. '()
' → logprob: -5.141561508178711
    9. '```' → logprob: -5.391561508178711
    10. ')[' → logprob: -5.641561508178711

Token 202: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.6191185116767883
    2. 'a' → logprob: -1.8691184520721436
    3. 'b' → logprob: -1.9941184520721436
    4. '[' → logprob: -2.6191184520721436
    5. '[node' → logprob: -3.7441184520721436
    6. 'node' → logprob: -4.119118690490723
    7. ' for' → logprob: -4.119118690490723
    8. 'if' → logprob: -4.494118690490723
    9. '[a' → logprob: -4.494118690490723
    10. 'u' → logprob: -5.119118690490723

Token 203: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.1602608859539032
    2. ' b' → logprob: -1.9102609157562256
    3. '[b' → logprob: -10.785261154174805
    4. '(b' → logprob: -11.285261154174805
    5. ' (' → logprob: -13.410261154174805
    6. 'c' → logprob: -14.410261154174805
    7. ' [' → logprob: -15.285261154174805
    8. '   ' → logprob: -15.535261154174805
    9. ' ' → logprob: -15.660261154174805
    10. 'x' → logprob: -15.910261154174805

Token 204: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020632397383451462
    2. 'in' → logprob: -3.89563250541687
    3. ' ' → logprob: -9.39563274383545
    4. '  ' → logprob: -13.39563274383545
    5. '	in' → logprob: -13.89563274383545
    6. '[' → logprob: -14.27063274383545
    7. 's' → logprob: -14.39563274383545
    8. '   ' → logprob: -14.39563274383545
    9. ' ' → logprob: -14.39563274383545
    10. ',' → logprob: -14.39563274383545

Token 205: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.20145368576049805
    2. ' tree' → logprob: -1.701453685760498
    3. '(tree' → logprob: -10.701454162597656
    4. '	tree' → logprob: -11.451454162597656
    5. 'range' → logprob: -13.451454162597656
    6. ' ' → logprob: -13.451454162597656
    7. '   ' → logprob: -13.826454162597656
    8. '[' → logprob: -14.451454162597656
    9. 'tre' → logprob: -14.576454162597656
    10. ' range' → logprob: -14.826454162597656

Token 206: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.0006527475197799504
    2. '[' → logprob: -7.87565279006958
    3. 'a' → logprob: -8.250652313232422
    4. ' [' → logprob: -12.750652313232422
    5. '[
' → logprob: -12.750652313232422
    6. '(a' → logprob: -13.750652313232422
    7. '[s' → logprob: -14.000652313232422
    8. ' a' → logprob: -14.250652313232422
    9. '[b' → logprob: -14.500652313232422
    10. '[A' → logprob: -14.875652313232422

Token 207: '[' (ID: 58)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.030155746266245842
    2. ']:
' → logprob: -3.655155658721924
    3. '[' → logprob: -5.780155658721924
    4. ']' → logprob: -7.905155658721924
    5. ':' → logprob: -9.030156135559082
    6. ']:
' → logprob: -9.530156135559082
    7. '][' → logprob: -9.780156135559082
    8. ']:

' → logprob: -9.780156135559082
    9. ' ]' → logprob: -10.905156135559082
    10. '   ' → logprob: -11.655156135559082

Token 208: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9404295682907104
    2. ']:' → logprob: -1.5654295682907104
    3. ']:
' → logprob: -1.6904295682907104
    4. ']' → logprob: -2.1904296875
    5. '][' → logprob: -2.8154296875
    6. '[' → logprob: -4.4404296875
    7. ']):' → logprob: -4.5654296875
    8. ']):
' → logprob: -5.3154296875
    9. ' ' → logprob: -6.0654296875
    10. ' ]' → logprob: -6.1904296875

Token 209: ']]:
' (ID: 183340)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0012901169247925282
    2. ']:
' → logprob: -6.876290321350098
    3. ']' → logprob: -8.376290321350098
    4. ']:
' → logprob: -11.376290321350098
    5. ' ]' → logprob: -11.876290321350098
    6. ']:

' → logprob: -12.751290321350098
    7. ']>' → logprob: -13.501290321350098
    8. '   ' → logprob: -13.626290321350098
    9. '       ' → logprob: -14.251290321350098
    10. '"]:' → logprob: -14.501290321350098

Token 210: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015829646959900856
    2. 'if' → logprob: -4.640829563140869
    3. ' if' → logprob: -5.390829563140869
    4. '   ' → logprob: -6.515829563140869
    5. '    ' → logprob: -12.515830039978027
    6. '           ' → logprob: -12.890830039978027
    7. '	if' → logprob: -13.140830039978027
    8. '      ' → logprob: -13.140830039978027
    9. '[' → logprob: -13.265830039978027
    10. '
' → logprob: -13.515830039978027

Token 211: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.06364203244447708
    2. 'if' (adapté à ' if') → logprob: -2.8136420249938965
    3. '       ' → logprob: -6.8136420249938965
    4. '           ' → logprob: -7.6886420249938965
    5. '        ' → logprob: -9.313642501831055
    6. '   ' → logprob: -10.938642501831055
    7. ' ' → logprob: -13.063642501831055
    8. '    ' → logprob: -13.188642501831055
    9. '[' → logprob: -13.188642501831055
    10. '	if' → logprob: -14.188642501831055

Token 212: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.43060702085494995
    2. 'v' → logprob: -1.0556070804595947
    3. ' not' → logprob: -6.555606842041016
    4. 'not' → logprob: -7.805606842041016
    5. '   ' → logprob: -10.180606842041016
    6. ' ' → logprob: -11.055606842041016
    7. 'b' → logprob: -12.055606842041016
    8. '(v' → logprob: -12.680606842041016
    9. '    ' → logprob: -13.118106842041016
    10. '	v' → logprob: -13.305606842041016

Token 213: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -4.320199877838604e-07
    2. 'b' → logprob: -15.0
    3. '[' → logprob: -17.0
    4. '[
' → logprob: -18.5
    5. ' [' → logprob: -18.875
    6. '	b' → logprob: -19.25
    7. '[a' → logprob: -19.875
    8. '
' → logprob: -20.625
    9. '[v' → logprob: -20.75
    10. '```' → logprob: -21.375

Token 214: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10187433660030365
    2. '==' → logprob: -2.976874351501465
    3. ' ==' → logprob: -3.726874351501465
    4. ']==' → logprob: -3.851874351501465
    5. '[' → logprob: -7.726874351501465
    6. ' ]' → logprob: -9.476874351501465
    7. ')' → logprob: -10.101874351501465
    8. ' ' → logprob: -11.851874351501465
    9. '==
' → logprob: -11.851874351501465
    10. '[]' → logprob: -11.976874351501465

Token 215: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6932368278503418
    2. ' ==' → logprob: -0.6932368278503418
    3. ' ' → logprob: -10.5682373046875
    4. '==
' → logprob: -10.5682373046875
    5. '=' → logprob: -10.6932373046875
    6. ']==' → logprob: -12.0682373046875
    7. '[' → logprob: -12.5682373046875
    8. ')' → logprob: -13.3182373046875
    9. ')==' → logprob: -13.8182373046875
    10. '0' → logprob: -13.9432373046875

Token 216: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016045277938246727
    2. ' ' → logprob: -4.141045093536377
    3. '   ' → logprob: -12.266045570373535
    4. '
' → logprob: -12.641045570373535
    5. '  ' → logprob: -14.516045570373535
    6. 'False' → logprob: -14.891045570373535
    7. ' 
' → logprob: -15.266045570373535
    8. '    ' → logprob: -15.578545570373535
    9. '```' → logprob: -15.953545570373535
    10. ' ' → logprob: -16.01604461669922

Token 217: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005549400229938328
    2. ' ' → logprob: -7.500555038452148
    3. '   ' → logprob: -14.250555038452148
    4. '
' → logprob: -14.500555038452148
    5. '```' → logprob: -15.563055038452148
    6. '1' → logprob: -15.938055038452148
    7. '  ' → logprob: -16.06305503845215
    8. 'False' → logprob: -16.56305503845215
    9. '<|end|>' → logprob: -17.18805503845215
    10. '۰' → logprob: -17.50055503845215

Token 218: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.015892770141363144
    2. 'and' → logprob: -4.51589298248291
    3. ':' → logprob: -5.76589298248291
    4. '           ' → logprob: -7.26589298248291
    5. ':
' → logprob: -7.51589298248291
    6. '   ' → logprob: -9.01589298248291
    7. ' ' → logprob: -9.39089298248291
    8. '       ' → logprob: -9.51589298248291
    9. '	and' → logprob: -10.26589298248291
    10. ')' → logprob: -10.51589298248291

Token 219: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.28153300285339355
    2. '(len' → logprob: -2.1565330028533936
    3. ' len' → logprob: -2.6565330028533936
    4. 'b' → logprob: -4.281533241271973
    5. ' b' → logprob: -4.531533241271973
    6. 'True' → logprob: -5.031533241271973
    7. '(b' → logprob: -5.031533241271973
    8. ' (' → logprob: -5.156533241271973
    9. ' True' → logprob: -5.156533241271973
    10. '(True' → logprob: -5.781533241271973

Token 220: '(tree' (ID: 44909)
  Prédit: '(tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -0.0028290078043937683
    2. '(' → logprob: -5.877829074859619
    3. ' (' → logprob: -11.377828598022461
    4. '(
' → logprob: -11.752828598022461
    5. '(t' → logprob: -13.502828598022461
    6. '(queue' → logprob: -14.002828598022461
    7. 'tree' → logprob: -14.002828598022461
    8. '(table' → logprob: -14.877828598022461
    9. '	tree' → logprob: -15.002828598022461
    10. '(Tree' → logprob: -15.002828598022461

Token 221: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -9.729906196298543e-06
    2. 'b' → logprob: -11.625009536743164
    3. ' [' → logprob: -15.125009536743164
    4. '[' → logprob: -15.875009536743164
    5. '	b' → logprob: -16.125009536743164
    6. '
' → logprob: -16.500009536743164
    7. '(b' → logprob: -17.125009536743164
    8. ')' → logprob: -17.250009536743164
    9. '[
' → logprob: -17.500009536743164
    10. '[v' → logprob: -17.750009536743164

Token 222: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20271313190460205
    2. '])' → logprob: -1.702713131904602
    3. ')>' → logprob: -7.0777130126953125
    4. ' )' → logprob: -9.452713012695312
    5. '）' → logprob: -9.577713012695312
    6. '>)' → logprob: -9.827713012695312
    7. '[' → logprob: -9.827713012695312
    8. '[b' → logprob: -10.202713012695312
    9. ']' → logprob: -10.702713012695312
    10. '`)' → logprob: -10.952713012695312

Token 223: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.42892470955848694
    2. ' >' → logprob: -1.0539246797561646
    3. ' ' → logprob: -9.303924560546875
    4. ')' → logprob: -10.178924560546875
    5. ')>' → logprob: -10.428924560546875
    6. '[' → logprob: -10.553924560546875
    7. '   ' → logprob: -12.053924560546875
    8. '()>' → logprob: -12.803924560546875
    9. ' ' → logprob: -13.053924560546875
    10. '==' → logprob: -13.116424560546875

Token 224: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05300664156675339
    2. ' ' → logprob: -3.053006649017334
    3. '0' → logprob: -5.428006649017334
    4. '   ' → logprob: -11.990506172180176
    5. '<|end|>' → logprob: -13.240506172180176
    6. '  ' → logprob: -13.740506172180176
    7. '
' → logprob: -13.990506172180176
    8. '2' → logprob: -14.365506172180176
    9. '```' → logprob: -14.553006172180176
    10. ' ' → logprob: -14.615506172180176

Token 225: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0033579664304852486
    2. '0' → logprob: -6.128357887268066
    3. ' ' → logprob: -6.753357887268066
    4. '   ' → logprob: -13.753357887268066
    5. '2' → logprob: -14.003357887268066
    6. '```' → logprob: -14.565857887268066
    7. '
' → logprob: -14.628357887268066
    8. '=' → logprob: -15.315857887268066
    9. '-' → logprob: -15.378357887268066
    10. '  ' → logprob: -15.440857887268066

Token 226: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08269257098436356
    2. ':
' → logprob: -2.7076926231384277
    3. '           ' → logprob: -4.582692623138428
    4. ' and' → logprob: -7.207692623138428
    5. '       ' → logprob: -7.332692623138428
    6. ',' → logprob: -7.832692623138428
    7. '   ' → logprob: -8.45769214630127
    8. '):' → logprob: -9.33269214630127
    9. ' :
' → logprob: -9.95769214630127
    10. ' :' → logprob: -10.08269214630127

Token 227: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2346644252538681
    2. ':' → logprob: -1.7346644401550293
    3. ':
' → logprob: -4.484664440155029
    4. '       ' → logprob: -5.109664440155029
    5. '   ' → logprob: -5.234664440155029
    6. '		' → logprob: -6.109664440155029
    7. ',' → logprob: -6.359664440155029
    8. ' and' → logprob: -6.859664440155029
    9. '               ' → logprob: -7.484664440155029
    10. ' ' → logprob: -7.609664440155029

Token 228: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.25971710681915283
    2. ' q' → logprob: -1.5097171068191528
    3. '               ' → logprob: -5.259716987609863
    4. '           ' → logprob: -6.884716987609863
    5. '   ' → logprob: -7.009716987609863
    6. '	q' → logprob: -8.634716987609863
    7. '       ' → logprob: -9.009716987609863
    8. ' ' → logprob: -9.634716987609863
    9. '              ' → logprob: -10.259716987609863
    10. '                   ' → logprob: -10.384716987609863

Token 229: '.put' (ID: 5133)
  Prédit: '.put'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.put' → logprob: -0.02330196276307106
    2. '.' → logprob: -3.7733020782470703
    3. 'put' → logprob: -10.14830207824707
    4. ' .' → logprob: -11.39830207824707
    5. '.
' → logprob: -13.27330207824707
    6. ').' → logprob: -14.27330207824707
    7. '.q' → logprob: -14.27330207824707
    8. ' put' → logprob: -14.27330207824707
    9. '.Put' → logprob: -14.89830207824707
    10. '.append' → logprob: -15.14830207824707

Token 230: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.014187009073793888
    2. '[b' → logprob: -4.264186859130859
    3. '[' → logprob: -10.76418685913086
    4. '[a' → logprob: -13.51418685913086
    5. ' [' → logprob: -14.63918685913086
    6. '[(' → logprob: -15.76418685913086
    7. '(b' → logprob: -15.88918685913086
    8. ' ([' → logprob: -16.26418685913086
    9. '(' → logprob: -16.38918685913086
    10. '[B' → logprob: -17.01418685913086

Token 231: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -3.054500666621607e-06
    2. ' b' → logprob: -13.25000286102295
    3. '[b' → logprob: -13.87500286102295
    4. '[' → logprob: -15.37500286102295
    5. '   ' → logprob: -18.500003814697266
    6. '	b' → logprob: -18.875003814697266
    7. ' ' → logprob: -19.625003814697266
    8. ''b' → logprob: -20.125003814697266
    9. '```' → logprob: -20.250003814697266
    10. ',b' → logprob: -20.750003814697266

Token 232: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015454530948773026
    2. ',a' → logprob: -7.126545429229736
    3. 'a' → logprob: -7.626545429229736
    4. ' ,' → logprob: -8.376545906066895
    5. ' a' → logprob: -11.126545906066895
    6. ',
' → logprob: -12.376545906066895
    7. '[' → logprob: -13.501545906066895
    8. ',b' → logprob: -13.751545906066895
    9. 's' → logprob: -15.001545906066895
    10. ' ' → logprob: -15.251545906066895

Token 233: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.026302389800548553
    2. ' a' → logprob: -3.6513023376464844
    3. ' ' → logprob: -13.901302337646484
    4. '   ' → logprob: -14.401302337646484
    5. '	a' → logprob: -16.151302337646484
    6. '(a' → logprob: -16.526302337646484
    7. '  ' → logprob: -16.651302337646484
    8. ' ' → logprob: -16.901302337646484
    9. '+' → logprob: -17.088802337646484
    10. '+a' → logprob: -17.463802337646484

Token 234: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00013762809976469725
    2. '1' → logprob: -9.125137329101562
    3. '][' → logprob: -11.375137329101562
    4. ' [' → logprob: -11.500137329101562
    5. '0' → logprob: -12.250137329101562
    6. '[
' → logprob: -14.625137329101562
    7. ' ' → logprob: -15.000137329101562
    8. '```' → logprob: -15.125137329101562
    9. '
' → logprob: -15.250137329101562
    10. '[-' → logprob: -15.625137329101562

Token 235: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. '
' → logprob: -14.125000953674316
    3. '```' → logprob: -16.125001907348633
    4. '' → logprob: -17.000001907348633
    5. '-' → logprob: -17.125001907348633
    6. ' ' → logprob: -17.500001907348633
    7. '
' → logprob: -18.000001907348633
    8. '

' → logprob: -18.375001907348633
    9. '[' → logprob: -18.437501907348633
    10. '   ' → logprob: -19.062501907348633

Token 236: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.013850942254066467
    2. ' +' → logprob: -4.763851165771484
    3. '[' → logprob: -5.263851165771484
    4. ']+' → logprob: -10.513851165771484
    5. '0' → logprob: -12.138851165771484
    6. '+
' → logprob: -12.513851165771484
    7. ']' → logprob: -12.888851165771484
    8. ' ' → logprob: -13.388851165771484
    9. ' plus' → logprob: -13.388851165771484
    10. '+]' → logprob: -13.888851165771484

Token 237: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0076242536306381226
    2. ' +' → logprob: -4.88262414932251
    3. '[' → logprob: -11.632624626159668
    4. '+
' → logprob: -12.132624626159668
    5. ']+' → logprob: -13.757624626159668
    6. '+]' → logprob: -14.257624626159668
    7. ' plus' → logprob: -15.132624626159668
    8. '
' → logprob: -15.257624626159668
    9. '＋' → logprob: -15.257624626159668
    10. ' ' → logprob: -15.382624626159668

Token 238: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004079470410943031
    2. ' ' → logprob: -5.504079341888428
    3. '   ' → logprob: -14.504079818725586
    4. ']' → logprob: -16.254079818725586
    5. ' ' → logprob: -16.566579818725586
    6. ' 
' → logprob: -16.754079818725586
    7. '```' → logprob: -16.879079818725586
    8. '  ' → logprob: -17.066579818725586
    9. '
' → logprob: -17.191579818725586
    10. ' ]' → logprob: -17.254079818725586

Token 239: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.613945101387799e-05
    2. ' ' → logprob: -9.375085830688477
    3. '   ' → logprob: -14.375085830688477
    4. '-' → logprob: -15.937585830688477
    5. '  ' → logprob: -15.937585830688477
    6. '```' → logprob: -16.187585830688477
    7. '])' → logprob: -16.812585830688477
    8. '2' → logprob: -16.937585830688477
    9. '１' → logprob: -17.312585830688477
    10. ']' → logprob: -17.312585830688477

Token 240: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.005267315078526735
    2. '])
' → logprob: -5.255267143249512
    3. ')' → logprob: -11.005267143249512
    4. ' ])' → logprob: -11.255267143249512
    5. '])

' → logprob: -13.880267143249512
    6. ')
' → logprob: -14.505267143249512
    7. ']' → logprob: -14.755267143249512
    8. '       ' → logprob: -14.880267143249512
    9. ')])' → logprob: -15.255267143249512
    10. '])
' → logprob: -15.255267143249512

Token 241: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002213777042925358
    2. 'v' → logprob: -6.127213954925537
    3. ' v' → logprob: -11.627213478088379
    4. '       ' → logprob: -11.877213478088379
    5. '```' → logprob: -12.002213478088379
    6. '   ' → logprob: -13.002213478088379
    7. '
' → logprob: -13.127213478088379
    8. '          ' → logprob: -14.252213478088379
    9. ',v' → logprob: -14.252213478088379
    10. '               ' → logprob: -15.002213478088379

Token 242: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -3.607391408877447e-05
    2. ' v' → logprob: -10.250036239624023
    3. '           ' → logprob: -14.375036239624023
    4. '       ' → logprob: -17.875036239624023
    5. '	v' → logprob: -18.875036239624023
    6. '   ' → logprob: -19.000036239624023
    7. '          ' → logprob: -19.875036239624023
    8. '
' → logprob: -20.375036239624023
    9. '               ' → logprob: -20.500036239624023
    10. '_v' → logprob: -21.375036239624023

Token 243: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -1.981667537620524e-06
    2. '[' → logprob: -13.375001907348633
    3. 'b' → logprob: -15.250001907348633
    4. ' [' → logprob: -17.125001907348633
    5. '[v' → logprob: -17.125001907348633
    6. '```' → logprob: -17.500001907348633
    7. ')[' → logprob: -18.125001907348633
    8. '[
' → logprob: -18.125001907348633
    9. '[a' → logprob: -18.750001907348633
    10. '	b' → logprob: -19.000001907348633

Token 244: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03263387084007263
    2. '=' → logprob: -3.5326337814331055
    3. ']=' → logprob: -6.1576337814331055
    4. ' =' → logprob: -7.4076337814331055
    5. '[b' → logprob: -9.282633781433105
    6. ' ]' → logprob: -10.282633781433105
    7. '[' → logprob: -11.532633781433105
    8. ')' → logprob: -12.032633781433105
    9. 'b' → logprob: -12.157633781433105
    10. '][' → logprob: -12.532633781433105

Token 245: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02975500375032425
    2. ' =' → logprob: -3.529755115509033
    3. '[' → logprob: -13.029754638671875
    4. '[b' → logprob: -13.529754638671875
    5. '=b' → logprob: -14.654754638671875
    6. ')' → logprob: -15.029754638671875
    7. '=
' → logprob: -16.779754638671875
    8. ']' → logprob: -16.904754638671875
    9. ' ' → logprob: -17.029754638671875
    10. ')=' → logprob: -17.654754638671875

Token 246: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003357006062287837
    2. ' ' → logprob: -8.000335693359375
    3. '   ' → logprob: -15.500335693359375
    4. '  ' → logprob: -17.500335693359375
    5. '           ' → logprob: -18.875335693359375
    6. '    ' → logprob: -19.187835693359375
    7. 'True' → logprob: -19.312835693359375
    8. '[' → logprob: -19.625335693359375
    9. '	' → logprob: -19.750335693359375
    10. '' → logprob: -20.187835693359375

Token 247: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -17.312509536743164
    4. '
' → logprob: -17.687509536743164
    5. '0' → logprob: -18.000009536743164
    6. 'True' → logprob: -18.125009536743164
    7. '```' → logprob: -18.187509536743164
    8. '  ' → logprob: -18.562509536743164
    9. '[' → logprob: -18.625009536743164
    10. '' → logprob: -19.062509536743164

Token 248: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7358097434043884
    2. ')' → logprob: -1.3608098030090332
    3. '<|end|>' → logprob: -2.360809803009033
    4. 'if' → logprob: -2.860809803009033
    5. 'max' → logprob: -3.360809803009033
    6. '
' → logprob: -3.860809803009033
    7. 'result' → logprob: -4.485809803009033
    8. '[' → logprob: -4.985809803009033
    9. 's' → logprob: -5.110809803009033
    10. 'length' → logprob: -5.235809803009033

Token 249: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0028879677411168814
    2. 'if' → logprob: -6.627888202667236
    3. ')' → logprob: -7.002888202667236
    4. 'max' → logprob: -8.002887725830078
    5. 'a' → logprob: -10.002887725830078
    6. '[' → logprob: -10.002887725830078
    7. 'result' → logprob: -10.127887725830078
    8. 'pr' → logprob: -10.377887725830078
    9. 'c' → logprob: -10.752887725830078
    10. '#' → logprob: -10.877887725830078

Token 250: ' n' (ID: 297)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.1226016953587532
    2. 'a' → logprob: -2.2476017475128174
    3. ' s' → logprob: -5.497601509094238
    4. 's' → logprob: -6.872601509094238
    5. ' q' → logprob: -6.872601509094238
    6. '(a' → logprob: -7.122601509094238
    7. ' n' → logprob: -7.247601509094238
    8. ' len' → logprob: -7.622601509094238
    9. ' ' → logprob: -7.997601509094238
    10. 'len' → logprob: -8.247601509094238

Token 251: ' <=' (ID: 5017)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.7159755825996399
    2. ' ==' → logprob: -1.0909755229949951
    3. ' <=' → logprob: -2.340975522994995
    4. '>' → logprob: -3.465975522994995
    5. ' ' → logprob: -4.090975761413574
    6. '==' → logprob: -4.215975761413574
    7. ' %' → logprob: -4.965975761413574
    8. ' <' → logprob: -5.340975761413574
    9. '<=' → logprob: -6.465975761413574
    10. '%' → logprob: -6.840975761413574

Token 252: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.007720320951193571
    2. '1' → logprob: -4.882720470428467
    3. ' ' → logprob: -9.257719993591309
    4. '3' → logprob: -11.507719993591309
    5. '```' → logprob: -13.632719993591309
    6. '4' → logprob: -14.195219993591309
    7. '   ' → logprob: -14.195219993591309
    8. '0' → logprob: -14.195219993591309
    9. '
' → logprob: -14.382719993591309
    10. '
' → logprob: -14.570219993591309

Token 253: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.030022375285625458
    2. '1' → logprob: -3.530022382736206
    3. '3' → logprob: -8.530022621154785
    4. '4' → logprob: -11.155022621154785
    5. ' ' → logprob: -11.530022621154785
    6. '

' → logprob: -12.092522621154785
    7. '
' → logprob: -12.217522621154785
    8. '```' → logprob: -12.342522621154785
    9. '100' → logprob: -12.405022621154785
    10. '0' → logprob: -12.467522621154785

Token 254: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0014371353900060058
    2. ':
' → logprob: -6.626437187194824
    3. ' :' → logprob: -9.251437187194824
    4. ' or' → logprob: -11.376437187194824
    5. ' and' → logprob: -13.626437187194824
    6. ':return' → logprob: -14.376437187194824
    7. 'or' → logprob: -14.501437187194824
    8. ' :
' → logprob: -15.001437187194824
    9. 'print' → logprob: -15.376437187194824
    10. '==' → logprob: -15.876437187194824

Token 255: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25209882855415344
    2. 'print' → logprob: -2.252098798751831
    3. ' print' → logprob: -2.752098798751831
    4. ':
' → logprob: -3.502098798751831
    5. '
' → logprob: -4.00209903717041
    6. ':' → logprob: -5.50209903717041
    7. '    
' → logprob: -8.00209903717041
    8. ' 
' → logprob: -8.62709903717041
    9. '\n' → logprob: -8.62709903717041
    10. '	print' → logprob: -8.87709903717041

Token 256: ' l' (ID: 305)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.000320565392030403
    2. '   ' → logprob: -8.875320434570312
    3. ' print' → logprob: -9.125320434570312
    4. '
' → logprob: -9.875320434570312
    5. 'prin' → logprob: -12.250320434570312
    6. 'for' → logprob: -12.500320434570312
    7. '    
' → logprob: -13.250320434570312
    8. 'if' → logprob: -13.250320434570312
    9. 'pr' → logprob: -13.625320434570312
    10. '	print' → logprob: -13.750320434570312

Token 257: ' =' (ID: 314)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.05855497717857361
    2. 'print' → logprob: -3.3085548877716064
    3. 'e' → logprob: -4.0585551261901855
    4. '=' → logprob: -6.8085551261901855
    5. 'ength' → logprob: -7.3085551261901855
    6. '   ' → logprob: -7.9335551261901855
    7. ' =' → logprob: -8.183554649353027
    8. 'eng' → logprob: -9.433554649353027
    9. 'n' → logprob: -9.933554649353027
    10. '(en' → logprob: -10.058554649353027

Token 258: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.15424256026744843
    2. ' n' → logprob: -2.654242515563965
    3. '1' → logprob: -3.529242515563965
    4. '2' → logprob: -4.154242515563965
    5. '3' → logprob: -4.279242515563965
    6. '0' → logprob: -4.904242515563965
    7. ' ' → logprob: -5.154242515563965
    8. 'len' → logprob: -8.529242515563965
    9. 'max' → logprob: -9.654242515563965
    10. '4' → logprob: -9.904242515563965

Token 259: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.09699783474206924
    2. 'elif' → logprob: -2.8469977378845215
    3. '-' → logprob: -3.8469977378845215
    4. ' else' → logprob: -5.2219977378845215
    5. '
' → logprob: -5.3469977378845215
    6. '+' → logprob: -7.3469977378845215
    7. 'e' → logprob: -7.8469977378845215
    8. 'lse' → logprob: -7.9719977378845215
    9. ' elif' → logprob: -8.09699821472168
    10. ' -' → logprob: -8.34699821472168

Token 260: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.003710411721840501
    2. 'elif' → logprob: -5.6287102699279785
    3. ' else' → logprob: -9.378710746765137
    4. 'e' → logprob: -11.753710746765137
    5. 'el' → logprob: -12.503710746765137
    6. 'print' → logprob: -12.628710746765137
    7. ')' → logprob: -13.253710746765137
    8. 'l' → logprob: -13.378710746765137
    9. 'els' → logprob: -13.378710746765137
    10. '.' → logprob: -13.878710746765137

Token 261: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015074179507791996
    2. ':
' → logprob: -4.390074253082275
    3. ' if' → logprob: -7.015074253082275
    4. ' :' → logprob: -7.140074253082275
    5. '   ' → logprob: -7.390074253082275
    6. 'if' → logprob: -8.890073776245117
    7. ' :
' → logprob: -10.140073776245117
    8. ',' → logprob: -11.390073776245117
    9. ' ' → logprob: -11.515073776245117
    10. ' l' → logprob: -11.640073776245117

Token 262: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10486907511949539
    2. ' l' → logprob: -2.3548691272735596
    3. 'l' → logprob: -5.9798688888549805
    4. ' if' → logprob: -7.2298688888549805
    5. ' ' → logprob: -8.10486888885498
    6. ' n' → logprob: -8.22986888885498
    7. 'n' → logprob: -9.10486888885498
    8. '
' → logprob: -9.10486888885498
    9. 'if' → logprob: -9.35486888885498
    10. ' max' → logprob: -9.47986888885498

Token 263: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.06812114268541336
    2. ' l' → logprob: -2.8181211948394775
    3. '   ' → logprob: -5.943120956420898
    4. 'if' → logprob: -7.318120956420898
    5. 'print' → logprob: -7.818120956420898
    6. 'n' → logprob: -7.943120956420898
    7. 's' → logprob: -8.193120956420898
    8. 'max' → logprob: -8.568120956420898
    9. 'import' → logprob: -8.818120956420898
    10. 'for' → logprob: -8.943120956420898

Token 264: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22723102569580078
    2. '=' → logprob: -1.6022310256958008
    3. ' -=' → logprob: -6.602231025695801
    4. '-' → logprob: -9.2272310256958
    5. '-=' → logprob: -9.2272310256958
    6. ' ' → logprob: -9.6022310256958
    7. '   ' → logprob: -9.6022310256958
    8. ' +=' → logprob: -10.3522310256958
    9. ' //' → logprob: -10.4772310256958
    10. '//' → logprob: -11.6022310256958

Token 265: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.021414022892713547
    2. ' a' → logprob: -3.896414041519165
    3. 'max' → logprob: -8.396413803100586
    4. '2' → logprob: -8.646413803100586
    5. ' ' → logprob: -9.146413803100586
    6. '(a' → logprob: -9.146413803100586
    7. '   ' → logprob: -9.396413803100586
    8. ' max' → logprob: -9.646413803100586
    9. ' (' → logprob: -9.896413803100586
    10. 's' → logprob: -11.271413803100586

Token 266: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.306760805164231e-05
    2. ' [' → logprob: -12.12501335144043
    3. '1' → logprob: -12.62501335144043
    4. '
' → logprob: -13.37501335144043
    5. '[
' → logprob: -13.37501335144043
    6. '```' → logprob: -15.37501335144043
    7. '[-' → logprob: -15.62501335144043
    8. ' ' → logprob: -15.75001335144043
    9. '\[' → logprob: -16.62501335144043
    10. '"[' → logprob: -16.75001335144043

Token 267: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.723352049040841e-06
    2. ' ' → logprob: -12.750004768371582
    3. '
' → logprob: -14.375004768371582
    4. ']' → logprob: -14.625004768371582
    5. '][' → logprob: -15.750004768371582
    6. '[' → logprob: -16.125003814697266
    7. '```' → logprob: -16.250003814697266
    8. '-' → logprob: -16.250003814697266
    9. '   ' → logprob: -16.312503814697266
    10. ')' → logprob: -17.250003814697266

Token 268: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1612395942211151
    2. '-' → logprob: -2.1612396240234375
    3. '+' → logprob: -4.0362396240234375
    4. ' -' → logprob: -4.4112396240234375
    5. ' +' → logprob: -6.6612396240234375
    6. ' )' → logprob: -6.7862396240234375
    7. ']' → logprob: -7.2862396240234375
    8. ')+' → logprob: -8.286239624023438
    9. '   ' → logprob: -8.661239624023438
    10. '}' → logprob: -9.036239624023438

Token 269: ' +' (ID: 659)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1048833504319191
    2. '
' → logprob: -2.3548834323883057
    3. '+' → logprob: -6.229883193969727
    4. ' print' → logprob: -7.354883193969727
    5. 'if' → logprob: -7.604883193969727
    6. '*' → logprob: -8.354883193969727
    7. 'l' → logprob: -8.604883193969727
    8. '-' → logprob: -8.729883193969727
    9. '\n' → logprob: -8.729883193969727
    10. '<|end|>' → logprob: -8.854883193969727

Token 270: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10520241409540176
    2. '2' → logprob: -2.3552024364471436
    3. ' ' → logprob: -5.9802021980285645
    4. '3' → logprob: -6.3552021980285645
    5. '4' → logprob: -7.4802021980285645
    6. '5' → logprob: -9.980202674865723
    7. '0' → logprob: -10.480202674865723
    8. '-' → logprob: -10.980202674865723
    9. '6' → logprob: -11.230202674865723
    10. '   ' → logprob: -11.355202674865723

Token 271: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0809040293097496
    2. '2' → logprob: -2.580904006958008
    3. '3' → logprob: -6.705904006958008
    4. '4' → logprob: -7.955904006958008
    5. ' ' → logprob: -8.205904006958008
    6. 'n' → logprob: -9.705904006958008
    7. '0' → logprob: -10.705904006958008
    8. '-' → logprob: -10.955904006958008
    9. '5' → logprob: -11.205904006958008
    10. '(' → logprob: -11.455904006958008

Token 272: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0049850475043058395
    2. '
' → logprob: -5.3799848556518555
    3. ')' → logprob: -8.629984855651855
    4. ' print' → logprob: -10.129984855651855
    5. '\n' → logprob: -10.254984855651855
    6. 'if' → logprob: -10.879984855651855
    7. 'l' → logprob: -11.254984855651855
    8. '<|end|>' → logprob: -11.754984855651855
    9. 'pr' → logprob: -12.129984855651855
    10. ' 
' → logprob: -12.129984855651855

Token 273: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.061676347395405e-05
    2. 'l' → logprob: -10.87505054473877
    3. 'pr' → logprob: -11.50005054473877
    4. 'p' → logprob: -12.25005054473877
    5. '
' → logprob: -12.37505054473877
    6. ' print' → logprob: -12.50005054473877
    7. '#' → logprob: -12.87505054473877
    8. ')' → logprob: -13.37505054473877
    9. '```' → logprob: -14.12505054473877
    10. '#print' → logprob: -14.25005054473877

Token 274: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.12285064905881882
    2. ' n' → logprob: -2.2478506565093994
    3. 'l' → logprob: -5.24785041809082
    4. 'n' → logprob: -6.24785041809082
    5. ' __' → logprob: -6.99785041809082
    6. ' ' → logprob: -7.62285041809082
    7. ' a' → logprob: -7.87285041809082
    8. ' tree' → logprob: -8.37285041809082
    9. ' len' → logprob: -8.49785041809082
    10. ' _' → logprob: -9.12285041809082

Token 275: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.15657444298267365
    2. ' <=' → logprob: -2.7815744876861572
    3. '%' → logprob: -3.0315744876861572
    4. ' ' → logprob: -4.281574249267578
    5. ' >' → logprob: -4.281574249267578
    6. ' >=' → logprob: -5.406574249267578
    7. ' <' → logprob: -7.031574249267578
    8. ' ==' → logprob: -7.156574249267578
    9. '>' → logprob: -7.531574249267578
    10. '<=' → logprob: -8.406574249267578

Token 276: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4741190969944
    2. ' ' → logprob: -0.9741190671920776
    3. '4' → logprob: -10.599119186401367
    4. '3' → logprob: -11.599119186401367
    5. '6' → logprob: -12.474119186401367
    6. '=' → logprob: -13.849119186401367
    7. '  ' → logprob: -14.661619186401367
    8. '```' → logprob: -14.849119186401367
    9. '1' → logprob: -14.911619186401367
    10. '==' → logprob: -15.161619186401367

Token 277: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.0948158382670954e-05
    2. ' ' → logprob: -11.000030517578125
    3. '3' → logprob: -11.250030517578125
    4. '4' → logprob: -14.500030517578125
    5. '```' → logprob: -15.625030517578125
    6. '

' → logprob: -16.250030517578125
    7. '=' → logprob: -16.750030517578125
    8. '   ' → logprob: -17.000030517578125
    9. '  ' → logprob: -17.125030517578125
    10. '!' → logprob: -17.500030517578125

Token 278: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5249541401863098
    2. '==' → logprob: -0.8999541401863098
    3. ' !=' → logprob: -6.774954319000244
    4. '!=' → logprob: -7.774954319000244
    5. '=' → logprob: -8.524953842163086
    6. ' =' → logprob: -10.649953842163086
    7. ' ' → logprob: -11.024953842163086
    8. ':' → logprob: -11.524953842163086
    9. ' :' → logprob: -12.149953842163086
    10. ' in' → logprob: -12.899953842163086

Token 279: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03504357859492302
    2. ' ' → logprob: -3.535043478012085
    3. '1' → logprob: -6.160043716430664
    4. '2' → logprob: -6.285043716430664
    5. '=' → logprob: -6.660043716430664
    6. '
' → logprob: -11.035043716430664
    7. '==' → logprob: -13.035043716430664
    8. ' =' → logprob: -13.910043716430664
    9. '=
' → logprob: -14.347543716430664
    10. '_' → logprob: -15.347543716430664

Token 280: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028355419635772705
    2. '1' → logprob: -6.502835750579834
    3. '2' → logprob: -6.752835750579834
    4. ' ' → logprob: -8.752835273742676
    5. '=' → logprob: -12.502835273742676
    6. '
' → logprob: -13.377835273742676
    7. '```' → logprob: -14.252835273742676
    8. '   ' → logprob: -16.002836227416992
    9. '  ' → logprob: -16.190336227416992
    10. 'o' → logprob: -16.252836227416992

Token 281: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05492979288101196
    2. ':
' → logprob: -2.929929733276367
    3. ' :' → logprob: -10.804929733276367
    4. ' :
' → logprob: -11.554929733276367
    5. ' and' → logprob: -11.679929733276367
    6. ' or' → logprob: -12.804929733276367
    7. ':
' → logprob: -13.679929733276367
    8. '.' → logprob: -14.304929733276367
    9. '=' → logprob: -14.429929733276367
    10. ',' → logprob: -14.429929733276367

Token 282: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10837115347385406
    2. ' print' → logprob: -3.2333712577819824
    3. 'print' → logprob: -3.8583712577819824
    4. ':
' → logprob: -3.9833712577819824
    5. ':' → logprob: -4.233371257781982
    6. ' l' → logprob: -4.858371257781982
    7. '
' → logprob: -8.233370780944824
    8. 'l' → logprob: -8.483370780944824
    9. '\n' → logprob: -8.608370780944824
    10. '	print' → logprob: -9.233370780944824

Token 283: ' print' (ID: 2123)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.18148426711559296
    2. 'print' (adapté à ' print') → logprob: -2.1814842224121094
    3. ' print' → logprob: -3.6814842224121094
    4. ' l' → logprob: -3.6814842224121094
    5. '   ' → logprob: -6.306484222412109
    6. 'pr' → logprob: -8.30648422241211
    7. '-' → logprob: -9.05648422241211
    8. ' ' → logprob: -9.18148422241211
    9. '
' → logprob: -9.55648422241211
    10. ':' → logprob: -9.93148422241211

Token 284: '("' (ID: 568)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.6190633773803711
    2. '(' → logprob: -0.8690633773803711
    3. '((' → logprob: -3.869063377380371
    4. '("' → logprob: -3.994063377380371
    5. '(n' → logprob: -6.744063377380371
    6. '('' → logprob: -7.244063377380371
    7. '(
' → logprob: -8.494063377380371
    8. '(a' → logprob: -8.744063377380371
    9. '(((' → logprob: -8.994063377380371
    10. 'l' → logprob: -9.119063377380371

Token 285: 'Second' (ID: 17422)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7814251780509949
    2. '1' → logprob: -1.0314252376556396
    3. 'Second' → logprob: -2.5314252376556396
    4. '"' → logprob: -3.2814252376556396
    5. '0' → logprob: -3.7814252376556396
    6. 'm' → logprob: -4.1564249992370605
    7. 'No' → logprob: -4.9064249992370605
    8. 'Yes' → logprob: -5.4064249992370605
    9. 'First' → logprob: -5.5314249992370605
    10. 'Alice' → logprob: -6.2814249992370605

Token 286: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.06951350718736649
    2. ' Player' → logprob: -2.8195135593414307
    3. ' player' → logprob: -5.694513320922852
    4. 'Player' → logprob: -5.694513320922852
    5. '")
' → logprob: -7.819513320922852
    6. '"' → logprob: -8.944513320922852
    7. '_player' → logprob: -10.194513320922852
    8. ' Winner' → logprob: -10.444513320922852
    9. '_Player' → logprob: -10.569513320922852
    10. 'player' → logprob: -10.819513320922852

Token 287: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.16342605650424957
    2. 'elif' → logprob: -1.9134260416030884
    3. ' else' → logprob: -5.913425922393799
    4. 'el' → logprob: -8.663426399230957
    5. ' elif' → logprob: -8.788426399230957
    6. '_' → logprob: -9.288426399230957
    7. ' ' → logprob: -10.413426399230957
    8. 'e' → logprob: -11.663426399230957
    9. '
' → logprob: -11.788426399230957
    10. '_else' → logprob: -12.288426399230957

Token 288: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16254906356334686
    2. ':
' → logprob: -2.2875490188598633
    3. '   ' → logprob: -3.0375490188598633
    4. ' :
' → logprob: -8.162549018859863
    5. ' :' → logprob: -8.662549018859863
    6. '    ' → logprob: -10.412549018859863
    7. '():
' → logprob: -11.162549018859863
    8. ' if' → logprob: -11.412549018859863
    9. '():' → logprob: -11.912549018859863
    10. '  ' → logprob: -12.162549018859863

Token 289: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19706179201602936
    2. ' print' → logprob: -1.9470617771148682
    3. 'print' → logprob: -3.322061777114868
    4. '	print' → logprob: -10.322061538696289
    5. ' ' → logprob: -10.822061538696289
    6. '   ' → logprob: -10.822061538696289
    7. '    ' → logprob: -12.322061538696289
    8. '```' → logprob: -12.697061538696289
    9. ' ' → logprob: -12.822061538696289
    10. '   ' → logprob: -13.447061538696289

Token 290: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.6931511759757996
    2. ' print' → logprob: -0.6931511759757996
    3. ' ' → logprob: -13.568151473999023
    4. '   ' → logprob: -14.193151473999023
    5. '	print' → logprob: -14.193151473999023
    6. ' 
' → logprob: -14.818151473999023
    7. '.print' → logprob: -14.818151473999023
    8. '    ' → logprob: -15.693151473999023
    9. ' ' → logprob: -15.943151473999023
    10. '(print' → logprob: -16.568151473999023

Token 291: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.048698872327804565
    2. '(' → logprob: -3.048698902130127
    3. '("("' → logprob: -9.298698425292969
    4. '('' → logprob: -12.048698425292969
    5. '("")' → logprob: -12.048698425292969
    6. '(
' → logprob: -12.923698425292969
    7. '(""' → logprob: -13.173698425292969
    8. '("""' → logprob: -13.298698425292969
    9. '()' → logprob: -13.798698425292969
    10. '("(' → logprob: -14.298698425292969

Token 292: 'First' (ID: 7127)
  Prédit: 'First'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'First' → logprob: -0.001951945130713284
    2. '"' → logprob: -6.251952171325684
    3. 'Second' → logprob: -11.001952171325684
    4. ' First' → logprob: -12.751952171325684
    5. 'F' → logprob: -12.876952171325684
    6. 'first' → logprob: -14.876952171325684
    7. ''' → logprob: -15.126952171325684
    8. 'Third' → logprob: -15.876952171325684
    9. '"D' → logprob: -16.126951217651367
    10. '_First' → logprob: -16.501951217651367

Token 293: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.00046177039621397853
    2. ')' → logprob: -7.750461578369141
    3. ')")' → logprob: -10.50046157836914
    4. '")
' → logprob: -13.00046157836914
    5. '!")' → logprob: -14.87546157836914
    6. ' ")' → logprob: -15.12546157836914
    7. '()' → logprob: -15.37546157836914
    8. '')' → logprob: -15.62546157836914
    9. '"' → logprob: -16.25046157836914
    10. '}")' → logprob: -16.50046157836914


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 291
Tokens correctement prédits (1ère position, stricte): 140
Tokens correctement prédits (1ère position, avec adaptation): 150
Tokens correctement prédits (top 10): 267
Précision stricte (1ère position): 48.11%
Précision adaptée (1ère position): 51.55%
Précision (top 10): 91.75%
================================================================================
