================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:02:50
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def read_input():
    return input().split()

def convert_to_ints(str_list):
    return [int(x) for x in str_list]

def assign_values(int_list):
    return int_list[0], int_list[1], int_list[2]

def make_list(a, b, c):
    return [a, b, c]

def sort_list(lst):
    return sorted(lst)

def get_middle_value(sorted_lst):
    return sorted_lst[1]

def compare_values(val1, val2):
    return val1 == val2

def print_yes():
    print("Yes")

def print_no():
    print("No")

def main():
    str_values = read_input()
    int_values = convert_to_ints(str_values)
    A, B, C = assign_values(int_values)
    values_list = make_list(A, B, C)
    sorted_values = sort_list(values_list)
    middle_value = get_middle_value(sorted_values)
    is_equal = compare_values(middle_value, C)
    if is_equal:
        print_yes()
    else:
        print_no()

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' read' (ID: 1729)
  → Token d'amorce (pas de prédiction)

Token 2: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0022091392893344164
    2. '_' → logprob: -7.002209186553955
    3. '():' → logprob: -7.252209186553955
    4. '(:' → logprob: -8.377208709716797
    5. '```' → logprob: -9.002208709716797
    6. '(_:' → logprob: -9.502208709716797
    7. ':' → logprob: -9.752208709716797
    8. ' (' → logprob: -10.127208709716797
    9. '(_' → logprob: -11.002208709716797
    10. '()' → logprob: -12.627208709716797

Token 4: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9125446677207947
    2. '\' → logprob: -1.2875447273254395
    3. '\n' → logprob: -1.4125447273254395
    4. '   ' → logprob: -3.1625447273254395
    5. '    
' → logprob: -4.9125447273254395
    6. '
' → logprob: -5.1625447273254395
    7. ' 
' → logprob: -5.6625447273254395
    8. '``' → logprob: -5.7875447273254395
    9. ':' → logprob: -6.1625447273254395
    10. ''\' → logprob: -6.6625447273254395

Token 5: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.913108229637146
    2. '   ' → logprob: -1.038108229637146
    3. 'input' → logprob: -2.0381083488464355
    4. 'r' → logprob: -4.1631083488464355
    5. '```' → logprob: -4.1631083488464355
    6. 'data' → logprob: -4.1631083488464355
    7. 'x' → logprob: -4.2881083488464355
    8. ' ' → logprob: -4.5381083488464355
    9. 'user' → logprob: -4.6631083488464355
    10. 'n' → logprob: -5.4131083488464355

Token 6: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16390419006347656
    2. ' input' → logprob: -2.5389041900634766
    3. 'input' → logprob: -3.2889041900634766
    4. '"' → logprob: -3.5389041900634766
    5. ''' → logprob: -5.538904190063477
    6. '  ' → logprob: -7.038904190063477
    7. ' "' → logprob: -8.413904190063477
    8. ' []' → logprob: -8.913904190063477
    9. '(input' → logprob: -9.163904190063477
    10. '(' → logprob: -9.163904190063477

Token 7: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001021736185066402
    2. '()' → logprob: -7.001021862030029
    3. '.' → logprob: -10.751021385192871
    4. '('' → logprob: -11.001021385192871
    5. '(
' → logprob: -11.126021385192871
    6. '```' → logprob: -11.501021385192871
    7. ''' → logprob: -11.626021385192871
    8. ' (' → logprob: -11.626021385192871
    9. '("("' → logprob: -12.001021385192871
    10. '(.)' → logprob: -12.626021385192871

Token 8: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0003208037815056741
    2. 'rstrip' → logprob: -8.250320434570312
    3. 'split' → logprob: -9.750320434570312
    4. 'replace' → logprob: -14.250320434570312
    5. '```' → logprob: -15.750320434570312
    6. 'lower' → logprob: -15.875320434570312
    7. ' strip' → logprob: -16.625320434570312
    8. '-strip' → logprob: -16.625320434570312
    9. 'read' → logprob: -17.000320434570312
    10. 'str' → logprob: -17.000320434570312

Token 9: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01313234306871891
    2. '()' → logprob: -4.388132572174072
    3. '('' → logprob: -8.388132095336914
    4. '("("' → logprob: -9.263132095336914
    5. '(`' → logprob: -10.013132095336914
    6. '`' → logprob: -10.138132095336914
    7. '`()' → logprob: -10.388132095336914
    8. ' (' → logprob: -10.388132095336914
    9. '"' → logprob: -10.513132095336914
    10. '```' → logprob: -10.513132095336914

Token 10: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7785654067993164
    2. 'def' → logprob: -2.0285654067993164
    3. '[' → logprob: -2.1535654067993164
    4. '<|end|>' → logprob: -2.1535654067993164
    5. '(' → logprob: -2.7785654067993164
    6. '```' → logprob: -3.2785654067993164
    7. '\n' → logprob: -4.028565406799316
    8. '
' → logprob: -4.403565406799316
    9. 'newline' → logprob: -4.653565406799316
    10. 'a' → logprob: -4.778565406799316

Token 11: ' convert' (ID: 8452)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.6735789179801941
    2. ' process' → logprob: -1.6735789775848389
    3. ' calculate' → logprob: -1.6735789775848389
    4. ' write' → logprob: -2.548578977584839
    5. ' read' → logprob: -4.04857873916626
    6. ' compute' → logprob: -4.67357873916626
    7. ' parse' → logprob: -6.04857873916626
    8. ' print' → logprob: -6.79857873916626
    9. ' solve' → logprob: -7.29857873916626
    10. ' user' → logprob: -7.67357873916626

Token 12: '_to' (ID: 5089)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.013928420841693878
    2. '_to' → logprob: -4.388928413391113
    3. '_value' → logprob: -8.138928413391113
    4. '(' → logprob: -8.638928413391113
    5. '_(' → logprob: -9.013928413391113
    6. '_name' → logprob: -9.138928413391113
    7. '_token' → logprob: -9.513928413391113
    8. '```' → logprob: -9.888928413391113
    9. '_string' → logprob: -10.013928413391113
    10. '_data' → logprob: -10.013928413391113

Token 13: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.0035360404290258884
    2. '_' → logprob: -6.628536224365234
    3. 'int' → logprob: -7.253536224365234
    4. '_list' → logprob: -8.253536224365234
    5. '_tokens' → logprob: -8.253536224365234
    6. '_float' → logprob: -8.378536224365234
    7. '_in' → logprob: -8.378536224365234
    8. '_string' → logprob: -8.753536224365234
    9. '_integer' → logprob: -9.128536224365234
    10. '_numbers' → logprob: -9.253536224365234

Token 14: 's' (ID: 82)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31891557574272156
    2. 's' → logprob: -1.693915605545044
    3. '_' → logprob: -2.693915605545044
    4. '()' → logprob: -4.443915367126465
    5. 'def' → logprob: -6.818915367126465
    6. '_s' → logprob: -6.818915367126465
    7. '```' → logprob: -6.818915367126465
    8. '(s' → logprob: -7.193915367126465
    9. '(_' → logprob: -7.193915367126465
    10. '("("' → logprob: -7.443915367126465

Token 15: '(str' (ID: 7946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008367887930944562
    2. ' (' → logprob: -7.3758368492126465
    3. '("("' → logprob: -9.750836372375488
    4. '<|end|>' → logprob: -10.125836372375488
    5. '```' → logprob: -11.750836372375488
    6. '(tokens' → logprob: -11.750836372375488
    7. '(user' → logprob: -11.875836372375488
    8. '<|end|>' → logprob: -12.125836372375488
    9. '   ' → logprob: -12.250836372375488
    10. '()' → logprob: -12.250836372375488

Token 16: '_list' (ID: 4162)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3806842267513275
    2. 'ing' → logprob: -1.50568425655365
    3. 'ings' → logprob: -2.5056841373443604
    4. ')' → logprob: -5.0056843757629395
    5. '_' → logprob: -6.3806843757629395
    6. '):' → logprob: -6.5056843757629395
    7. ')s' → logprob: -7.8806843757629395
    8. '_)' → logprob: -8.005683898925781
    9. 'ingss' → logprob: -8.005683898925781
    10. ' )' → logprob: -8.630683898925781

Token 17: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0011399771319702268
    2. ')' → logprob: -7.001140117645264
    3. '):
' → logprob: -9.126139640808105
    4. ' ):' → logprob: -9.876139640808105
    5. '[]):' → logprob: -10.751139640808105
    6. '   ' → logprob: -11.251139640808105
    7. '[' → logprob: -12.001139640808105
    8. ',' → logprob: -12.251139640808105
    9. '):

' → logprob: -12.376139640808105
    10. ':' → logprob: -12.376139640808105

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32030725479125977
    2. '[' → logprob: -1.3203072547912598
    3. '[int' → logprob: -5.69530725479126
    4. ' return' → logprob: -6.94530725479126
    5. 'return' → logprob: -7.19530725479126
    6. '(' → logprob: -7.69530725479126
    7. '    ' → logprob: -7.82030725479126
    8. '[]' → logprob: -7.94530725479126
    9. '[
' → logprob: -8.695306777954102
    10. ' [' → logprob: -8.820306777954102

Token 19: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.061402708292007446
    2. ' return' → logprob: -3.5614027976989746
    3. 'return' (adapté à ' return') → logprob: -3.8114027976989746
    4. '[int' → logprob: -5.186402797698975
    5. '[' → logprob: -5.811402797698975
    6. ' [' → logprob: -8.311402320861816
    7. 'int' → logprob: -9.436402320861816
    8. ' ' → logprob: -10.811402320861816
    9. '[i' → logprob: -10.811402320861816
    10. '  ' → logprob: -11.061402320861816

Token 20: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.19430305063724518
    2. ' list' → logprob: -2.194303035736084
    3. '[list' → logprob: -2.944303035736084
    4. '[' → logprob: -4.694303035736084
    5. '[int' → logprob: -5.819303035736084
    6. 'list' → logprob: -7.944303035736084
    7. '[List' → logprob: -11.069303512573242
    8. ' map' → logprob: -11.444303512573242
    9. '[len' → logprob: -11.819303512573242
    10. '[i' → logprob: -13.194303512573242

Token 21: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -6.392202976712724e-06
    2. ' int' → logprob: -12.000006675720215
    3. '   ' → logprob: -16.6250057220459
    4. '(int' → logprob: -19.2500057220459
    5. '```' → logprob: -20.0000057220459
    6. '<int' → logprob: -21.1250057220459
    7. '  ' → logprob: -21.1250057220459
    8. '	int' → logprob: -21.3750057220459
    9. '=int' → logprob: -21.5000057220459
    10. '[int' → logprob: -21.6250057220459

Token 22: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.20910577476024628
    2. '(s' → logprob: -1.7091057300567627
    3. '(item' → logprob: -5.459105968475342
    4. '(i' → logprob: -6.334105968475342
    5. '(' → logprob: -6.834105968475342
    6. '(elem' → logprob: -8.084105491638184
    7. '(token' → logprob: -9.334105491638184
    8. '(element' → logprob: -9.709105491638184
    9. 'x' → logprob: -10.334105491638184
    10. 's' → logprob: -10.834105491638184

Token 23: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.941850526549388e-06
    2. ' )' → logprob: -11.875007629394531
    3. ')]' → logprob: -15.125007629394531
    4. '')' → logprob: -15.500007629394531
    5. 'for' → logprob: -16.00000762939453
    6. '))' → logprob: -16.37500762939453
    7. ')
' → logprob: -17.00000762939453
    8. ')`' → logprob: -17.00000762939453
    9. ')x' → logprob: -17.12500762939453
    10. ')...' → logprob: -17.75000762939453

Token 24: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006581439170986414
    2. ' for' → logprob: -5.5065813064575195
    3. 'for' → logprob: -6.6315813064575195
    4. ' )' → logprob: -6.7565813064575195
    5. ' in' → logprob: -12.13158130645752
    6. 'in' → logprob: -12.38158130645752
    7. ']' → logprob: -12.75658130645752
    8. ')]' → logprob: -12.88158130645752
    9. '   ' → logprob: -13.88158130645752
    10. ' x' → logprob: -14.88158130645752

Token 25: ' x' (ID: 1215)
  Prédit: ' str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.09830619394779205
    2. ' x' → logprob: -2.473306179046631
    3. 'str' → logprob: -4.973306179046631
    4. 'x' → logprob: -6.598306179046631
    5. ' ' → logprob: -7.098306179046631
    6. '	str' → logprob: -9.098306655883789
    7. '_str' → logprob: -10.098306655883789
    8. '<|end|>' → logprob: -10.598306655883789
    9. '  ' → logprob: -11.223306655883789
    10. '<|end|>' → logprob: -12.223306655883789

Token 26: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07539675384759903
    2. 'in' → logprob: -2.700396776199341
    3. ')' → logprob: -6.325396537780762
    4. ' ' → logprob: -6.700396537780762
    5. ' )' → logprob: -7.200396537780762
    6. 's' → logprob: -7.575396537780762
    7. 'n' → logprob: -7.700396537780762
    8. '_' → logprob: -8.825396537780762
    9. ')]' → logprob: -9.200396537780762
    10. '  ' → logprob: -9.325396537780762

Token 27: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.4740896224975586
    2. 'str' → logprob: -0.9740896224975586
    3. '(str' → logprob: -11.724089622497559
    4. 'stra' → logprob: -13.974089622497559
    5. 's' → logprob: -14.224089622497559
    6. '	str' → logprob: -14.349089622497559
    7. '_str' → logprob: -14.349089622497559
    8. '[str' → logprob: -14.974089622497559
    9. ':str' → logprob: -15.224089622497559
    10. 'stri' → logprob: -15.599089622497559

Token 28: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0021019638516008854
    2. '_' → logprob: -6.877101898193359
    3. '_l' → logprob: -6.877101898193359
    4. '_li' → logprob: -10.75210189819336
    5. '_lst' → logprob: -12.25210189819336
    6. '_)' → logprob: -12.62710189819336
    7. ')]' → logprob: -13.00210189819336
    8. ')_' → logprob: -13.00210189819336
    9. '_]' → logprob: -13.37710189819336
    10. ')' → logprob: -14.25210189819336

Token 29: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03828924149274826
    2. ')]' → logprob: -3.2882893085479736
    3. '])' → logprob: -8.663289070129395
    4. ')' → logprob: -9.788289070129395
    5. '])]' → logprob: -11.788289070129395
    6. ' ]' → logprob: -12.038289070129395
    7. ']
' → logprob: -13.413289070129395
    8. ')])' → logprob: -13.538289070129395
    9. '`]' → logprob: -13.663289070129395
    10. '']' → logprob: -14.913289070129395

Token 30: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.025300733745098114
    2. 'd' → logprob: -3.9003007411956787
    3. 'n' → logprob: -6.0253005027771
    4. '#' → logprob: -7.2753005027771
    5. '\' → logprob: -7.4003005027771
    6. '```' → logprob: -7.7753005027771
    7. '
' → logprob: -8.400300979614258
    8. 'a' → logprob: -9.150300979614258
    9. 'de' → logprob: -9.525300979614258
    10. 'data' → logprob: -9.900300979614258

Token 31: ' assign' (ID: 14975)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.6137754917144775
    2. ' main' → logprob: -1.4887754917144775
    3. ' solve' → logprob: -2.7387754917144775
    4. ' find' → logprob: -2.9887754917144775
    5. ' process' → logprob: -3.2387754917144775
    6. ' compute' → logprob: -3.4887754917144775
    7. ' count' → logprob: -3.6137754917144775
    8. ' sum' → logprob: -4.863775253295898
    9. ' check' → logprob: -5.738775253295898
    10. ' sort' → logprob: -6.238775253295898

Token 32: '_values' (ID: 20393)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.020354894921183586
    2. '_values' → logprob: -4.895354747772217
    3. '(' → logprob: -6.145354747772217
    4. '_parent' → logprob: -6.520354747772217
    5. '_numbers' → logprob: -6.895354747772217
    6. '_variables' → logprob: -7.020354747772217
    7. '_value' → logprob: -7.270354747772217
    8. '_variable' → logprob: -7.270354747772217
    9. '_ids' → logprob: -7.395354747772217
    10. '_positions' → logprob: -7.895354747772217

Token 33: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1291249841451645
    2. '():' → logprob: -2.129124879837036
    3. '()' → logprob: -6.629125118255615
    4. '(params' → logprob: -8.879124641418457
    5. '(:' → logprob: -9.254124641418457
    6. '(()' → logprob: -9.504124641418457
    7. '("("' → logprob: -9.504124641418457
    8. '()(' → logprob: -10.129124641418457
    9. '(a' → logprob: -10.379124641418457
    10. '(**' → logprob: -10.379124641418457

Token 34: '_list' (ID: 4162)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3106148838996887
    2. '_list' → logprob: -1.935614824295044
    3. '_s' → logprob: -2.560614824295044
    4. '_values' → logprob: -3.685614824295044
    5. '(' → logprob: -4.935615062713623
    6. '_' → logprob: -5.685615062713623
    7. ' s' → logprob: -5.685615062713623
    8. '_lists' → logprob: -5.935615062713623
    9. ')' → logprob: -6.810615062713623
    10. '(s' → logprob: -7.435615062713623

Token 35: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006223951932042837
    2. ',' → logprob: -5.256224155426025
    3. ' ):' → logprob: -7.631224155426025
    4. ')' → logprob: -7.756224155426025
    5. ':' → logprob: -10.881223678588867
    6. ']:' → logprob: -11.256223678588867
    7. '   ' → logprob: -11.756223678588867
    8. '(' → logprob: -11.756223678588867
    9. '[' → logprob: -12.131223678588867
    10. '[]):' → logprob: -12.256223678588867

Token 36: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05602023005485535
    2. ':' → logprob: -3.3060202598571777
    3. '    
' → logprob: -5.556020259857178
    4. '    ' → logprob: -5.681020259857178
    5. ':
' → logprob: -5.931020259857178
    6. ' :' → logprob: -6.806020259857178
    7. '       ' → logprob: -7.306020259857178
    8. ' ' → logprob: -7.431020259857178
    9. ' return' → logprob: -7.431020259857178
    10. ' 
' → logprob: -7.556020259857178

Token 37: ' return' (ID: 622)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.850014328956604
    2. '   ' → logprob: -1.225014328956604
    3. 'a' → logprob: -1.850014328956604
    4. ' values' → logprob: -3.1000142097473145
    5. ' if' → logprob: -3.4750142097473145
    6. ' return' → logprob: -4.2250142097473145
    7. ' max' → logprob: -5.1000142097473145
    8. ' result' → logprob: -5.7250142097473145
    9. ' n' → logprob: -5.9750142097473145
    10. 'values' → logprob: -6.1000142097473145

Token 38: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.02696102298796177
    2. 'int' → logprob: -3.901961088180542
    3. ' [' → logprob: -5.526960849761963
    4. '[int' → logprob: -7.526960849761963
    5. ' ' → logprob: -8.026961326599121
    6. '[' → logprob: -8.151961326599121
    7. '(int' → logprob: -8.276961326599121
    8. ' (' → logprob: -8.276961326599121
    9. ' []' → logprob: -8.276961326599121
    10. ' tuple' → logprob: -8.776961326599121

Token 39: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0009627926629036665
    2. '_' → logprob: -7.000962734222412
    3. 's' → logprob: -11.25096321105957
    4. '[' → logprob: -11.50096321105957
    5. 'List' → logprob: -11.50096321105957
    6. '(' → logprob: -12.62596321105957
    7. ' _' → logprob: -12.75096321105957
    8. '[]' → logprob: -13.25096321105957
    9. '_l' → logprob: -13.37596321105957
    10. '[_' → logprob: -13.37596321105957

Token 40: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0668833255767822
    2. 'def' → logprob: -1.4418833255767822
    3. '<|end|>' → logprob: -1.6918833255767822
    4. '(' → logprob: -1.9418833255767822
    5. 'newline' → logprob: -3.6918833255767822
    6. '```' → logprob: -4.566883087158203
    7. '.' → logprob: -4.691883087158203
    8. '
' → logprob: -4.941883087158203
    9. '<|end|>' → logprob: -5.191883087158203
    10. '\n' → logprob: -5.191883087158203

Token 41: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02758823335170746
    2. ':' → logprob: -3.652588129043579
    3. ' :' → logprob: -7.402588367462158
    4. ' ' → logprob: -7.652588367462158
    5. ':]' → logprob: -8.652587890625
    6. ' :]' → logprob: -11.402587890625
    7. '1' → logprob: -12.152587890625
    8. '-' → logprob: -12.652587890625
    9. ':index' → logprob: -13.652587890625
    10. '::' → logprob: -14.027587890625

Token 42: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2179398089647293
    2. ' ]' → logprob: -2.342939853668213
    3. '],' → logprob: -2.467939853668213
    4. ' ],' → logprob: -4.592939853668213
    5. ',' → logprob: -5.592939853668213
    6. ' ,' → logprob: -7.342939853668213
    7. ' :]' → logprob: -8.967939376831055
    8. ':]' → logprob: -9.092939376831055
    9. ':' → logprob: -9.592939376831055
    10. '],
' → logprob: -9.967939376831055

Token 43: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.06227150186896324
    2. 'int' → logprob: -2.8122715950012207
    3. ' ' → logprob: -8.187271118164062
    4. ' *' → logprob: -12.312271118164062
    5. ' ' → logprob: -12.312271118164062
    6. '(int' → logprob: -12.687271118164062
    7. '[int' → logprob: -13.187271118164062
    8. 'space' → logprob: -13.562271118164062
    9. ',int' → logprob: -13.812271118164062
    10. '<int' → logprob: -13.812271118164062

Token 44: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -6.704273118884885e-07
    2. 'List' → logprob: -14.875000953674316
    3. 'list' → logprob: -15.625000953674316
    4. '_LIST' → logprob: -16.5
    5. '_' → logprob: -17.5
    6. 'ist' → logprob: -18.125
    7. 'alist' → logprob: -18.125
    8. '_List' → logprob: -18.375
    9. '_lists' → logprob: -18.5
    10. 's' → logprob: -18.5

Token 45: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00040636269841343164
    2. '[-' → logprob: -8.625406265258789
    3. '1' → logprob: -9.500406265258789
    4. ' [' → logprob: -9.875406265258789
    5. '[:]' → logprob: -10.375406265258789
    6. '0' → logprob: -11.000406265258789
    7. '[:' → logprob: -11.000406265258789
    8. '```' → logprob: -11.125406265258789
    9. '2' → logprob: -12.500406265258789
    10. '   ' → logprob: -12.625406265258789

Token 46: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00013810492237098515
    2. '0' → logprob: -9.250138282775879
    3. '-' → logprob: -11.000138282775879
    4. '2' → logprob: -11.750138282775879
    5. ' ' → logprob: -11.750138282775879
    6. ':' → logprob: -12.750138282775879
    7. ']' → logprob: -12.875138282775879
    8. '])' → logprob: -13.625138282775879
    9. '   ' → logprob: -14.250138282775879
    10. ':]' → logprob: -14.500138282775879

Token 47: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010330495424568653
    2. ' ]' → logprob: -7.001032829284668
    3. '],' → logprob: -9.501032829284668
    4. ')' → logprob: -11.376032829284668
    5. ':]' → logprob: -11.376032829284668
    6. ',' → logprob: -11.751032829284668
    7. '<|end|>' → logprob: -12.626032829284668
    8. ']
' → logprob: -12.876032829284668
    9. ')]' → logprob: -13.376032829284668
    10. '   ' → logprob: -13.626032829284668

Token 48: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.34860697388648987
    2. ' int' → logprob: -1.2236069440841675
    3. ',int' → logprob: -9.973607063293457
    4. '<int' → logprob: -10.723607063293457
    5. ' ' → logprob: -10.973607063293457
    6. '=int' → logprob: -11.098607063293457
    7. ':int' → logprob: -11.348607063293457
    8. '(int' → logprob: -11.723607063293457
    9. '[int' → logprob: -11.973607063293457
    10. '	int' → logprob: -12.098607063293457

Token 49: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -3.054500666621607e-06
    2. 'List' → logprob: -12.87500286102295
    3. 'list' → logprob: -16.375003814697266
    4. '_' → logprob: -16.375003814697266
    5. '(_' → logprob: -16.875003814697266
    6. '   ' → logprob: -17.000003814697266
    7. 'alist' → logprob: -17.250003814697266
    8. 'ist' → logprob: -17.375003814697266
    9. ' _' → logprob: -17.500003814697266
    10. '_l' → logprob: -18.000003814697266

Token 50: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00016432604752480984
    2. '[
' → logprob: -9.750164031982422
    3. '[:]' → logprob: -10.375164031982422
    4. '```' → logprob: -10.625164031982422
    5. '[:' → logprob: -11.250164031982422
    6. '   ' → logprob: -11.875164031982422
    7. '.' → logprob: -12.250164031982422
    8. ' ' → logprob: -12.500164031982422
    9. '[]' → logprob: -12.500164031982422
    10. '0' → logprob: -12.625164031982422

Token 51: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03406725451350212
    2. '0' → logprob: -3.409067153930664
    3. '])' → logprob: -8.034067153930664
    4. '1' → logprob: -10.284067153930664
    5. '-' → logprob: -10.409067153930664
    6. ':' → logprob: -11.534067153930664
    7. ']' → logprob: -11.909067153930664
    8. ')' → logprob: -12.159067153930664
    9. ' ' → logprob: -12.534067153930664
    10. '3' → logprob: -12.659067153930664

Token 52: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20157580077648163
    2. ')' → logprob: -1.701575756072998
    3. ')]' → logprob: -9.201576232910156
    4. ' ]' → logprob: -10.576576232910156
    5. '])' → logprob: -10.701576232910156
    6. ' )' → logprob: -12.826576232910156
    7. '']' → logprob: -12.826576232910156
    8. '}' → logprob: -12.826576232910156
    9. ',' → logprob: -13.326576232910156
    10. '）' → logprob: -13.951576232910156

Token 53: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011379771865904331
    2. '
' → logprob: -4.761379718780518
    3. '

' → logprob: -6.386379718780518
    4. '\' → logprob: -7.261379718780518
    5. '```' → logprob: -8.511380195617676
    6. '\n' → logprob: -10.011380195617676
    7. '<|end|>' → logprob: -10.261380195617676
    8. '#' → logprob: -11.261380195617676
    9. 'n' → logprob: -11.386380195617676
    10. 'newline' → logprob: -11.386380195617676

Token 54: ' make' (ID: 1520)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.2447536140680313
    2. ' calculate' → logprob: -2.11975359916687
    3. ' solve' → logprob: -2.74475359916687
    4. ' compute' → logprob: -4.119753837585449
    5. ' find' → logprob: -4.994753837585449
    6. ' space' → logprob: -5.244753837585449
    7. ' process' → logprob: -6.369753837585449
    8. ' check' → logprob: -7.244753837585449
    9. ' max' → logprob: -8.24475383758545
    10. ' solution' → logprob: -8.49475383758545

Token 55: '_list' (ID: 4162)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.13500629365444183
    2. '_tuple' → logprob: -4.010006427764893
    3. '_function' → logprob: -4.010006427764893
    4. '_array' → logprob: -4.385006427764893
    5. '_list' → logprob: -4.635006427764893
    6. '_triangle' → logprob: -4.885006427764893
    7. '_pair' → logprob: -5.260006427764893
    8. '_table' → logprob: -5.635006427764893
    9. ' _' → logprob: -5.635006427764893
    10. '_p' → logprob: -5.635006427764893

Token 56: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010874846950173378
    2. 's' → logprob: -5.0108747482299805
    3. '()' → logprob: -7.1358747482299805
    4. '(n' → logprob: -7.2608747482299805
    5. '_' → logprob: -7.5108747482299805
    6. '(s' → logprob: -7.7608747482299805
    7. '(size' → logprob: -8.01087474822998
    8. '_of' → logprob: -8.51087474822998
    9. '(_' → logprob: -9.26087474822998
    10. '(a' → logprob: -9.38587474822998

Token 57: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.036874379962682724
    2. ',b' → logprob: -4.161874294281006
    3. ')' → logprob: -5.161874294281006
    4. 's' → logprob: -5.411874294281006
    5. ',a' → logprob: -6.161874294281006
    6. ',n' → logprob: -6.286874294281006
    7. '_list' → logprob: -6.911874294281006
    8. ',)' → logprob: -6.911874294281006
    9. ',s' → logprob: -7.161874294281006
    10. ' ,' → logprob: -7.661874294281006

Token 58: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.14272993803024292
    2. ' b' → logprob: -2.0177299976348877
    3. 'n' → logprob: -10.517729759216309
    4. ' n' → logprob: -11.392729759216309
    5. ' ' → logprob: -12.017729759216309
    6. 'l' → logprob: -13.392729759216309
    7. ')' → logprob: -13.642729759216309
    8. ',b' → logprob: -13.642729759216309
    9. 'N' → logprob: -13.892729759216309
    10. ' l' → logprob: -14.142729759216309

Token 59: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005041812546551228
    2. ')' → logprob: -8.125504493713379
    3. ' ,' → logprob: -9.750504493713379
    4. ',b' → logprob: -10.375504493713379
    5. '):' → logprob: -10.875504493713379
    6. '_,' → logprob: -10.875504493713379
    7. 's' → logprob: -11.000504493713379
    8. '=' → logprob: -11.500504493713379
    9. ',)' → logprob: -11.625504493713379
    10. ',c' → logprob: -11.875504493713379

Token 60: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.25649669766426086
    2. ' c' → logprob: -1.5064966678619385
    3. 'n' → logprob: -6.381496906280518
    4. ' n' → logprob: -7.006496906280518
    5. 'N' → logprob: -7.881496906280518
    6. 'l' → logprob: -8.13149642944336
    7. ' N' → logprob: -8.25649642944336
    8. 'k' → logprob: -8.88149642944336
    9. ' l' → logprob: -8.94399642944336
    10. 'm' → logprob: -9.25649642944336

Token 61: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005493545439094305
    2. ')' → logprob: -5.380493640899658
    3. ',' → logprob: -7.130493640899658
    4. ' ):' → logprob: -10.3804931640625
    5. ':' → logprob: -11.0054931640625
    6. '):
' → logprob: -11.2554931640625
    7. '=' → logprob: -12.2554931640625
    8. '_' → logprob: -13.8804931640625
    9. '   ' → logprob: -14.0054931640625
    10. ' ' → logprob: -14.2554931640625

Token 62: '   ' (ID: 271)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.5119240880012512
    2. ' []' → logprob: -1.3869240283966064
    3. '   ' → logprob: -2.7619240283966064
    4. '[]' → logprob: -2.8869240283966064
    5. '[' → logprob: -4.1369242668151855
    6. '[a' → logprob: -4.8869242668151855
    7. ' return' → logprob: -5.2619242668151855
    8. ' [
' → logprob: -7.2619242668151855
    9. '    ' → logprob: -7.6369242668151855
    10. 'return' → logprob: -8.011923789978027

Token 63: ' return' (ID: 622)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.26899412274360657
    2. '[]' → logprob: -2.393994092941284
    3. ' []' → logprob: -2.768994092941284
    4. '[a' → logprob: -3.268994092941284
    5. '[' → logprob: -3.518994092941284
    6. ' list' → logprob: -5.143994331359863
    7. ' range' → logprob: -6.393994331359863
    8. ' return' → logprob: -6.393994331359863
    9. 'list' → logprob: -6.893994331359863
    10. 'range' → logprob: -7.018994331359863

Token 64: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.7770270109176636
    2. '[a' → logprob: -0.7770270109176636
    3. '[' → logprob: -3.152027130126953
    4. '[]' → logprob: -3.652027130126953
    5. ' []' → logprob: -4.777027130126953
    6. '[list' → logprob: -6.902027130126953
    7. ' list' → logprob: -7.027027130126953
    8. 'list' → logprob: -8.402027130126953
    9. '[b' → logprob: -8.527027130126953
    10. ' a' → logprob: -8.902027130126953

Token 65: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.003955986350774765
    2. '0' → logprob: -6.378955841064453
    3. 'i' → logprob: -6.628955841064453
    4. ' a' → logprob: -7.503955841064453
    5. 'x' → logprob: -9.378955841064453
    6. ']' → logprob: -10.128955841064453
    7. '1' → logprob: -10.503955841064453
    8. '[' → logprob: -10.503955841064453
    9. '   ' → logprob: -10.503955841064453
    10. '[a' → logprob: -10.628955841064453

Token 66: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010293210856616497
    2. ' ,' → logprob: -4.635293006896973
    3. ',b' → logprob: -7.885293006896973
    4. '+' → logprob: -9.385293006896973
    5. ' ' → logprob: -10.010293006896973
    6. ' +' → logprob: -11.385293006896973
    7. ',
' → logprob: -11.635293006896973
    8. '*' → logprob: -13.260293006896973
    9. '   ' → logprob: -13.635293006896973
    10. ')' → logprob: -13.635293006896973

Token 67: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.1128930076956749
    2. 'b' → logprob: -2.2378931045532227
    3. ' ' → logprob: -9.737893104553223
    4. ' ' → logprob: -12.362893104553223
    5. ',' → logprob: -13.362893104553223
    6. ' ,' → logprob: -13.737893104553223
    7. 'c' → logprob: -13.862893104553223
    8. 'space' → logprob: -14.362893104553223
    9. ''' → logprob: -14.612893104553223
    10. ' б' → logprob: -14.737893104553223

Token 68: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015415230300277472
    2. ' ,' → logprob: -6.626541614532471
    3. ',c' → logprob: -8.876541137695312
    4. ')' → logprob: -10.376541137695312
    5. ',
' → logprob: -11.126541137695312
    6. ' ' → logprob: -12.126541137695312
    7. '+' → logprob: -12.251541137695312
    8. '),' → logprob: -12.626541137695312
    9. ']' → logprob: -12.876541137695312
    10. ')]' → logprob: -13.001541137695312

Token 69: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.16022706031799316
    2. 'c' → logprob: -1.9102270603179932
    3. ' ' → logprob: -13.160226821899414
    4. ')c' → logprob: -15.660226821899414
    5. '	c' → logprob: -15.910226821899414
    6. ',c' → logprob: -16.285226821899414
    7. ',' → logprob: -16.785226821899414
    8. ' ' → logprob: -16.910226821899414
    9. '.c' → logprob: -17.160226821899414
    10. '    ' → logprob: -17.472726821899414

Token 70: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16048863530158997
    2. ')' → logprob: -1.9104886054992676
    3. ' ]' → logprob: -9.285489082336426
    4. ')]' → logprob: -9.410489082336426
    5. '])' → logprob: -10.035489082336426
    6. '}' → logprob: -10.535489082336426
    7. ']
' → logprob: -12.535489082336426
    8. '   ' → logprob: -12.660489082336426
    9. '']' → logprob: -12.660489082336426
    10. ',' → logprob: -13.035489082336426

Token 71: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0025520040653645992
    2. 'a' → logprob: -6.377552032470703
    3. 'n' → logprob: -8.127552032470703
    4. 'print' → logprob: -8.752552032470703
    5. '```' → logprob: -9.377552032470703
    6. '\' → logprob: -9.627552032470703
    7. 'data' → logprob: -10.002552032470703
    8. 'result' → logprob: -10.002552032470703
    9. 'for' → logprob: -10.502552032470703
    10. '#' → logprob: -10.627552032470703

Token 72: ' sort' (ID: 4506)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.2709127962589264
    2. ' calculate' → logprob: -2.6459128856658936
    3. ' sum' → logprob: -2.6459128856658936
    4. ' process' → logprob: -4.1459126472473145
    5. ' check' → logprob: -4.1459126472473145
    6. ' sort' → logprob: -4.3959126472473145
    7. ' add' → logprob: -4.5209126472473145
    8. ' find' → logprob: -5.1459126472473145
    9. ' compute' → logprob: -5.1459126472473145
    10. ' max' → logprob: -5.3959126472473145

Token 73: '_list' (ID: 4162)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7052688002586365
    2. '(' → logprob: -0.8302688002586365
    3. '_list' → logprob: -2.8302688598632812
    4. '(_' → logprob: -5.455268859863281
    5. '_(' → logprob: -5.830268859863281
    6. '```' → logprob: -6.955268859863281
    7. '(_)' → logprob: -7.455268859863281
    8. '_lists' → logprob: -7.455268859863281
    9. 'ed' → logprob: -8.455268859863281
    10. ' _' → logprob: -8.705268859863281

Token 74: '(lst' (ID: 95688)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001676852349191904
    2. '(lst' → logprob: -7.1266770362854
    3. '(ls' → logprob: -7.8766770362854
    4. '(l' → logprob: -8.876676559448242
    5. '(list' → logprob: -9.751676559448242
    6. '(List' → logprob: -9.751676559448242
    7. '(s' → logprob: -10.251676559448242
    8. ' (' → logprob: -10.251676559448242
    9. '(lista' → logprob: -10.876676559448242
    10. '(a' → logprob: -11.001676559448242

Token 75: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07039963454008102
    2. ')' → logprob: -2.695399522781372
    3. '):
' → logprob: -8.820399284362793
    4. '   ' → logprob: -9.570399284362793
    5. '():' → logprob: -9.820399284362793
    6. ' ):' → logprob: -10.070399284362793
    7. '(' → logprob: -10.320399284362793
    8. ',' → logprob: -10.945399284362793
    9. '[]):' → logprob: -11.070399284362793
    10. '[' → logprob: -11.070399284362793

Token 76: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.883047342300415
    2. 'return' → logprob: -1.258047342300415
    3. ' return' → logprob: -1.383047342300415
    4. 'sorted' → logprob: -3.508047342300415
    5. ' sorted' → logprob: -3.883047342300415
    6. 'lst' → logprob: -8.133047103881836
    7. ' lst' → logprob: -8.633047103881836
    8. '```' → logprob: -8.758047103881836
    9. ' ' → logprob: -9.008047103881836
    10. '    
' → logprob: -9.758047103881836

Token 77: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.04506421089172363
    2. ' return' → logprob: -3.7950642108917236
    3. '   ' → logprob: -3.9200642108917236
    4. 'sorted' → logprob: -6.4200639724731445
    5. ' ' → logprob: -9.795063972473145
    6. ' sorted' → logprob: -10.670063972473145
    7. '```' → logprob: -11.170063972473145
    8. 'lst' → logprob: -11.545063972473145
    9. '  ' → logprob: -12.170063972473145
    10. 'ret' → logprob: -13.545063972473145

Token 78: ' sorted' (ID: 20099)
  Prédit: ' sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -0.31337255239486694
    2. 'sorted' → logprob: -1.3133726119995117
    3. ' ' → logprob: -9.438372611999512
    4. '   ' → logprob: -11.438372611999512
    5. '(sorted' → logprob: -12.313372611999512
    6. 's' → logprob: -12.563372611999512
    7. ' ' → logprob: -12.813372611999512
    8. '[]' → logprob: -13.188372611999512
    9. 'sort' → logprob: -13.313372611999512
    10. '  ' → logprob: -13.563372611999512

Token 79: '(lst' (ID: 95688)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0790959969162941
    2. '(lst' → logprob: -2.5790960788726807
    3. '(list' → logprob: -9.704095840454102
    4. '(ls' → logprob: -9.829095840454102
    5. '(l' → logprob: -9.954095840454102
    6. '(
' → logprob: -10.704095840454102
    7. '(

' → logprob: -11.579095840454102
    8. '(ll' → logprob: -13.454095840454102
    9. ' (' → logprob: -13.454095840454102
    10. '(lista' → logprob: -13.954095840454102

Token 80: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.7697225252486533e-06
    2. ' )' → logprob: -12.625003814697266
    3. ')
' → logprob: -15.125003814697266
    4. ' ' → logprob: -17.375003814697266
    5. '))' → logprob: -17.500003814697266
    6. '   ' → logprob: -18.125003814697266
    7. '[' → logprob: -18.250003814697266
    8. '}' → logprob: -18.750003814697266
    9. ']' → logprob: -19.000003814697266
    10. ')

' → logprob: -19.250003814697266

Token 81: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0010264969896525145
    2. 'a' → logprob: -7.876026630401611
    3. '```' → logprob: -8.126026153564453
    4. '\' → logprob: -9.376026153564453
    5. '<|end|>' → logprob: -9.876026153564453
    6. 'print' → logprob: -10.001026153564453
    7. 'if' → logprob: -10.501026153564453
    8. '
' → logprob: -10.626026153564453
    9. '#' → logprob: -11.001026153564453
    10. 'data' → logprob: -11.001026153564453

Token 82: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.007996606640517712
    2. 'main' → logprob: -5.382996559143066
    3. ' calculate' → logprob: -6.882996559143066
    4. ' def' → logprob: -7.507996559143066
    5. ' process' → logprob: -8.007996559143066
    6. ' sum' → logprob: -8.007996559143066
    7. ' print' → logprob: -8.632996559143066
    8. ' find' → logprob: -8.882996559143066
    9. ' is' → logprob: -9.257996559143066
    10. ' combine' → logprob: -9.257996559143066

Token 83: '_middle' (ID: 155207)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.37150296568870544
    2. '_' → logprob: -1.8715029954910278
    3. '_min' → logprob: -2.4965028762817383
    4. '_unique' → logprob: -4.371502876281738
    5. '_sum' → logprob: -4.496502876281738
    6. ' _' → logprob: -4.621502876281738
    7. '_l' → logprob: -5.246502876281738
    8. '_middle' → logprob: -5.246502876281738
    9. '_difference' → logprob: -5.496502876281738
    10. '_m' → logprob: -5.496502876281738

Token 84: '_value' (ID: 6734)
  Prédit: '_element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_element' → logprob: -0.05676904320716858
    2. '_value' → logprob: -2.9317691326141357
    3. '_index' → logprob: -7.306768894195557
    4. '_' → logprob: -7.431768894195557
    5. '_item' → logprob: -8.806769371032715
    6. '_elements' → logprob: -8.806769371032715
    7. 'element' → logprob: -9.431769371032715
    8. '_token' → logprob: -9.681769371032715
    9. '_elem' → logprob: -9.931769371032715
    10. '(lst' → logprob: -11.056769371032715

Token 85: '(sorted' (ID: 92488)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31398215889930725
    2. '(lst' → logprob: -1.3139821290969849
    3. '(l' → logprob: -8.188982009887695
    4. ' (' → logprob: -8.938982009887695
    5. '(ls' → logprob: -8.938982009887695
    6. '()' → logprob: -10.188982009887695
    7. '(s' → logprob: -10.688982009887695
    8. '(list' → logprob: -10.813982009887695
    9. '("("' → logprob: -11.313982009887695
    10. '(lista' → logprob: -11.688982009887695

Token 86: '_lst' (ID: 72474)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7142910361289978
    2. '_list' → logprob: -1.0892910957336426
    3. '(lst' → logprob: -2.2142910957336426
    4. '_lst' → logprob: -3.3392910957336426
    5. '(_' → logprob: -4.214291095733643
    6. '_' → logprob: -5.214291095733643
    7. ')' → logprob: -6.214291095733643
    8. '_l' → logprob: -6.714291095733643
    9. '(list' → logprob: -7.089291095733643
    10. '_ls' → logprob: -7.464291095733643

Token 87: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006548931705765426
    2. '[' → logprob: -8.000655174255371
    3. ')' → logprob: -8.250655174255371
    4. '):
' → logprob: -10.625655174255371
    5. ' ):' → logprob: -11.000655174255371
    6. '   ' → logprob: -12.750655174255371
    7. '[]):' → logprob: -12.750655174255371
    8. ':' → logprob: -12.875655174255371
    9. ' ' → logprob: -13.250655174255371
    10. ',' → logprob: -13.250655174255371

Token 88: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1980506181716919
    2. ' sorted' → logprob: -2.5730504989624023
    3. ' return' → logprob: -2.6980504989624023
    4. '    ' → logprob: -4.323050498962402
    5. 'sorted' → logprob: -4.573050498962402
    6. 'return' → logprob: -4.698050498962402
    7. '    
' → logprob: -5.948050498962402
    8. ' 
' → logprob: -8.323050498962402
    9. '```' → logprob: -9.323050498962402
    10. '     
' → logprob: -9.573050498962402

Token 89: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.019182978197932243
    2. ' return' → logprob: -4.019183158874512
    3. '   ' → logprob: -6.894183158874512
    4. 'def' → logprob: -11.644183158874512
    5. 'sorted' → logprob: -12.144183158874512
    6. '```' → logprob: -13.394183158874512
    7. '    ' → logprob: -13.894183158874512
    8. '{return' → logprob: -14.769183158874512
    9. '	return' → logprob: -15.019183158874512
    10. ' ' → logprob: -15.019183158874512

Token 90: ' sorted' (ID: 20099)
  Prédit: ' sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -0.04858839511871338
    2. 'sorted' → logprob: -3.048588275909424
    3. '(sorted' → logprob: -13.923588752746582
    4. '.sorted' → logprob: -16.298587799072266
    5. '_sorted' → logprob: -17.173587799072266
    6. ' ' → logprob: -17.298587799072266
    7. '   ' → logprob: -17.423587799072266
    8. 'sort' → logprob: -18.798587799072266
    9. ' ' → logprob: -19.048587799072266
    10. 's' → logprob: -19.048587799072266

Token 91: '_lst' (ID: 72474)
  Prédit: '_lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lst' → logprob: -0.002796318382024765
    2. '_' → logprob: -7.377796173095703
    3. '(_' → logprob: -7.502796173095703
    4. '(' → logprob: -7.502796173095703
    5. '_ls' → logprob: -8.002796173095703
    6. '(lst' → logprob: -8.877796173095703
    7. '```' → logprob: -9.002796173095703
    8. '_list' → logprob: -9.252796173095703
    9. '_l' → logprob: -9.502796173095703
    10. '[_' → logprob: -9.627796173095703

Token 92: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00013440960901789367
    2. '1' → logprob: -9.000134468078613
    3. '[len' → logprob: -12.000134468078613
    4. '[
' → logprob: -13.500134468078613
    5. '\[' → logprob: -13.500134468078613
    6. ' [' → logprob: -13.625134468078613
    7. '```' → logprob: -15.375134468078613
    8. '[int' → logprob: -16.000133514404297
    9. 'def' → logprob: -16.250133514404297
    10. ' ' → logprob: -16.250133514404297

Token 93: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -14.12500286102295
    3. '```' → logprob: -14.62500286102295
    4. '-' → logprob: -14.81250286102295
    5. '   ' → logprob: -15.43750286102295
    6. '
' → logprob: -15.56250286102295
    7. '0' → logprob: -15.81250286102295
    8. '{' → logprob: -16.437501907348633
    9. ']' → logprob: -16.562501907348633
    10. '2' → logprob: -16.625001907348633

Token 94: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0046921381726861
    2. ']' → logprob: -5.379692077636719
    3. '}' → logprob: -9.879692077636719
    4. ' )' → logprob: -11.754692077636719
    5. ')
' → logprob: -12.254692077636719
    6. '[' → logprob: -12.254692077636719
    7. ')]' → logprob: -13.504692077636719
    8. '）' → logprob: -15.129692077636719
    9. ' ]' → logprob: -15.254692077636719
    10. ' ' → logprob: -15.504692077636719

Token 95: 'def' (ID: 1314)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.314255952835083
    2. 'n' → logprob: -1.439255952835083
    3. '#' → logprob: -1.939255952835083
    4. 'def' → logprob: -2.314255952835083
    5. '\n' → logprob: -2.814255952835083
    6. 'd' → logprob: -3.064255952835083
    7. '\' → logprob: -3.439255952835083
    8. '
' → logprob: -3.564255952835083
    9. '```' → logprob: -4.064255714416504
    10. 'm' → logprob: -4.189255714416504

Token 96: ' compare' (ID: 12221)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.8699338436126709
    2. ' ' → logprob: -1.369933843612671
    3. ' main' → logprob: -1.869933843612671
    4. '_' → logprob: -2.369933843612671
    5. ' _' → logprob: -3.744933843612671
    6. ' d' → logprob: -4.11993408203125
    7. ' space' → logprob: -4.49493408203125
    8. ' a' → logprob: -4.74493408203125
    9. ' __' → logprob: -5.86993408203125
    10. ' ▁' → logprob: -6.36993408203125

Token 97: '_values' (ID: 20393)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5186793208122253
    2. '_values' → logprob: -1.7686793804168701
    3. '_' → logprob: -2.01867938041687
    4. '(a' → logprob: -2.39367938041687
    5. 's' → logprob: -5.268679141998291
    6. '(_' → logprob: -7.268679141998291
    7. '(s' → logprob: -7.268679141998291
    8. '_s' → logprob: -7.518679141998291
    9. '_(' → logprob: -8.01867961883545
    10. '_lists' → logprob: -8.01867961883545

Token 98: '(val' (ID: 17391)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.38700148463249207
    2. '(' → logprob: -1.1370015144348145
    3. '():' → logprob: -9.262001037597656
    4. '()' → logprob: -12.012001037597656
    5. ' (' → logprob: -12.387001037597656
    6. ':' → logprob: -12.637001037597656
    7. '(x' → logprob: -12.762001037597656
    8. '(b' → logprob: -13.012001037597656
    9. '(s' → logprob: -13.137001037597656
    10. '(u' → logprob: -13.637001037597656

Token 99: '1' (ID: 16)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4010946452617645
    2. '1' → logprob: -1.526094675064087
    3. '(a' → logprob: -3.026094675064087
    4. '(' → logprob: -3.651094675064087
    5. ')' → logprob: -4.151094436645508
    6. 'ues' → logprob: -4.526094436645508
    7. '):' → logprob: -5.776094436645508
    8. 'a' → logprob: -5.776094436645508
    9. ',' → logprob: -6.026094436645508
    10. '(s' → logprob: -6.526094436645508

Token 100: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015097891446202993
    2. ' ,' → logprob: -9.375150680541992
    3. ',val' → logprob: -10.125150680541992
    4. '):' → logprob: -11.500150680541992
    5. ')' → logprob: -11.625150680541992
    6. ',
' → logprob: -12.875150680541992
    7. ' ' → logprob: -13.625150680541992
    8. ',)' → logprob: -14.000150680541992
    9. '=' → logprob: -14.625150680541992
    10. '1' → logprob: -14.875150680541992

Token 101: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.0008054602658376098
    2. 'val' → logprob: -7.125805377960205
    3. ' va' → logprob: -14.500805854797363
    4. ' v' → logprob: -16.250804901123047
    5. ' ' → logprob: -16.375804901123047
    6. ',val' → logprob: -16.375804901123047
    7. ' value' → logprob: -16.625804901123047
    8. '	val' → logprob: -16.750804901123047
    9. 'v' → logprob: -17.375804901123047
    10. '_val' → logprob: -17.625804901123047

Token 102: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00032163821742869914
    2. 'al' → logprob: -9.000321388244629
    3. '1' → logprob: -9.250321388244629
    4. 'alue' → logprob: -9.375321388244629
    5. ' ' → logprob: -12.000321388244629
    6. 'ue' → logprob: -12.250321388244629
    7. '' → logprob: -13.750321388244629
    8. 'e' → logprob: -14.125321388244629
    9. '   ' → logprob: -14.250321388244629
    10. 's' → logprob: -14.750321388244629

Token 103: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00182857655454427
    2. ')' → logprob: -6.376828670501709
    3. ':' → logprob: -9.37682819366455
    4. ' ):' → logprob: -11.00182819366455
    5. '):
' → logprob: -11.37682819366455
    6. ',' → logprob: -11.50182819366455
    7. '=' → logprob: -13.75182819366455
    8. '_' → logprob: -14.37682819366455
    9. ' ' → logprob: -14.50182819366455
    10. '>' → logprob: -15.25182819366455

Token 104: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01573636569082737
    2. ' :' → logprob: -4.6407365798950195
    3. ':
' → logprob: -6.2657365798950195
    4. '   ' → logprob: -6.5157365798950195
    5. '>' → logprob: -6.7657365798950195
    6. ' >' → logprob: -8.26573657989502
    7. '):' → logprob: -8.39073657989502
    8. '(' → logprob: -9.01573657989502
    9. ':return' → logprob: -9.14073657989502
    10. ',' → logprob: -9.26573657989502

Token 105: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2995421290397644
    2. ' if' → logprob: -2.549542188644409
    3. '   ' → logprob: -2.549542188644409
    4. ' ' → logprob: -3.549542188644409
    5. 'return' (adapté à ' return') → logprob: -3.549542188644409
    6. '    ' → logprob: -4.17454195022583
    7. 'if' → logprob: -4.92454195022583
    8. ' >' → logprob: -5.29954195022583
    9. '>' → logprob: -5.42454195022583
    10. ':' → logprob: -5.92454195022583

Token 106: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.024629492312669754
    2. 'val' → logprob: -3.774629592895508
    3. ' abs' → logprob: -6.899629592895508
    4. ' ' → logprob: -8.774629592895508
    5. 'abs' → logprob: -9.149629592895508
    6. '"' → logprob: -9.774629592895508
    7. ''' → logprob: -10.774629592895508
    8. ' "' → logprob: -11.649629592895508
    9. ' int' → logprob: -12.524629592895508
    10. '   ' → logprob: -12.774629592895508

Token 107: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015671150758862495
    2. '2' → logprob: -6.5015668869018555
    3. ' ' → logprob: -11.314066886901855
    4. 'q' → logprob: -11.376566886901855
    5. 'val' → logprob: -12.001566886901855
    6. '```' → logprob: -12.126566886901855
    7. 'quality' → logprob: -12.376566886901855
    8. 's' → logprob: -13.126566886901855
    9. '==' → logprob: -13.189066886901855
    10. '_' → logprob: -13.564066886901855

Token 108: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.34617242217063904
    2. ' !=' → logprob: -2.346172332763672
    3. ' >' → logprob: -2.471172332763672
    4. ' <' → logprob: -3.221172332763672
    5. ' <=' → logprob: -3.721172332763672
    6. ' ' → logprob: -4.221172332763672
    7. ' >=' → logprob: -4.346172332763672
    8. '==' → logprob: -4.471172332763672
    9. '>' → logprob: -5.346172332763672
    10. '<' → logprob: -6.721172332763672

Token 109: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.10020710527896881
    2. 'val' → logprob: -2.3502070903778076
    3. '	val' → logprob: -15.475207328796387
    4. '(val' → logprob: -16.72520637512207
    5. 'v' → logprob: -16.85020637512207
    6. ' ' → logprob: -16.97520637512207
    7. '[val' → logprob: -17.10020637512207
    8. '_val' → logprob: -17.22520637512207
    9. '2' → logprob: -17.60020637512207
    10. ',val' → logprob: -18.22520637512207

Token 110: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00023393364972434938
    2. 'al' → logprob: -9.00023365020752
    3. 'alue' → logprob: -11.00023365020752
    4. '_' → logprob: -11.00023365020752
    5. 'o' → logprob: -11.12523365020752
    6. '_val' → logprob: -11.25023365020752
    7. 'val' → logprob: -11.37523365020752
    8. '   ' → logprob: -11.37523365020752
    9. ' ' → logprob: -12.00023365020752
    10. 'u' → logprob: -12.37523365020752

Token 111: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.4456103444099426
    2. 'def' → logprob: -1.4456102848052979
    3. '
' → logprob: -2.195610284805298
    4. '<|end|>' → logprob: -5.070610523223877
    5. '```' → logprob: -6.570610523223877
    6. '\n' → logprob: -7.070610523223877
    7. '#' → logprob: -7.320610523223877
    8. ' 

' → logprob: -7.445610523223877
    9. '



' → logprob: -7.820610523223877
    10. '\' → logprob: -7.945610523223877

Token 112: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8361334800720215
    2. 'd' → logprob: -1.7111334800720215
    3. '
' → logprob: -1.8361334800720215
    4. 'n' → logprob: -3.0861334800720215
    5. '

' → logprob: -3.0861334800720215
    6. 'a' → logprob: -3.7111334800720215
    7. '\n' → logprob: -3.7111334800720215
    8. '#' → logprob: -3.8361334800720215
    9. '\' → logprob: -4.0861334800720215
    10. '' → logprob: -4.3361334800720215

Token 113: ' print' (ID: 2123)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0006699055666103959
    2. 'main' → logprob: -7.875669956207275
    3. ' check' → logprob: -8.625669479370117
    4. ' process' → logprob: -9.750669479370117
    5. ' is' → logprob: -11.125669479370117
    6. ' calculate' → logprob: -12.250669479370117
    7. ' solve' → logprob: -12.375669479370117
    8. ' print' → logprob: -12.375669479370117
    9. '_main' → logprob: -12.500669479370117
    10. ' find' → logprob: -12.625669479370117

Token 114: '_yes' (ID: 151898)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0034803354647010565
    2. '_' → logprob: -5.878480434417725
    3. '_values' → logprob: -8.753479957580566
    4. '()' → logprob: -8.878479957580566
    5. '('' → logprob: -10.003479957580566
    6. '("")' → logprob: -10.003479957580566
    7. '_value' → logprob: -10.128479957580566
    8. '_parent' → logprob: -10.253479957580566
    9. '("("' → logprob: -10.753479957580566
    10. '("' → logprob: -10.878479957580566

Token 115: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.002014167606830597
    2. '(' → logprob: -6.25201416015625
    3. '('' → logprob: -10.12701416015625
    4. '("' → logprob: -11.00201416015625
    5. ' ()' → logprob: -11.12701416015625
    6. '():' → logprob: -12.25201416015625
    7. '("")' → logprob: -12.37701416015625
    8. '()
' → logprob: -13.50201416015625
    9. '（）' → logprob: -14.75201416015625
    10. '("("' → logprob: -14.87701416015625

Token 116: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.034037064760923386
    2. 'print' → logprob: -3.7840371131896973
    3. '(' → logprob: -4.909037113189697
    4. '()' → logprob: -6.034037113189697
    5. ' print' → logprob: -7.159037113189697
    6. 'p' → logprob: -10.409036636352539
    7. '(
' → logprob: -10.534036636352539
    8. '('' → logprob: -11.409036636352539
    9. '```' → logprob: -11.409036636352539
    10. '    ' → logprob: -11.534036636352539

Token 117: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -5.073596548754722e-05
    2. '   ' → logprob: -10.00005054473877
    3. ' print' → logprob: -12.50005054473877
    4. '```' → logprob: -14.12505054473877
    5. 'pr' → logprob: -14.62505054473877
    6. 'p' → logprob: -15.62505054473877
    7. 'prin' → logprob: -15.75005054473877
    8. 'pri' → logprob: -18.000051498413086
    9. 'prit' → logprob: -18.375051498413086
    10. '	print' → logprob: -19.000051498413086

Token 118: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.2114206850528717
    2. '(' → logprob: -1.7114206552505493
    3. '("("' → logprob: -4.96142053604126
    4. '('' → logprob: -5.83642053604126
    5. '("(' → logprob: -11.336421012878418
    6. '("")' → logprob: -12.211421012878418
    7. ' ("' → logprob: -12.336421012878418
    8. '()' → logprob: -12.961421012878418
    9. '   ' → logprob: -13.086421012878418
    10. '"' → logprob: -13.461421012878418

Token 119: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.07641009241342545
    2. 'YES' → logprob: -2.7014100551605225
    3. 'yes' → logprob: -5.326410293579102
    4. 'Y' → logprob: -6.576410293579102
    5. ' Yes' → logprob: -9.701410293579102
    6. 'YA' → logprob: -10.076410293579102
    7. 'Ya' → logprob: -10.576410293579102
    8. ' yes' → logprob: -10.576410293579102
    9. 'はい' → logprob: -11.326410293579102
    10. '_yes' → logprob: -11.701410293579102

Token 120: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -1.2113979209971149e-05
    2. ')' → logprob: -12.000012397766113
    3. '")
' → logprob: -12.750012397766113
    4. ')")' → logprob: -13.125012397766113
    5. '"' → logprob: -14.250012397766113
    6. '!")' → logprob: -15.500012397766113
    7. '")

' → logprob: -16.000011444091797
    8. ' ")' → logprob: -17.000011444091797
    9. '\")' → logprob: -17.625011444091797
    10. 'def' → logprob: -18.000011444091797

Token 121: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0008822843083180487
    2. '
' → logprob: -7.125882148742676
    3. ' def' → logprob: -11.125882148742676
    4. '<|end|>' → logprob: -11.125882148742676
    5. ' 
' → logprob: -11.250882148742676
    6. 'd' → logprob: -11.625882148742676
    7. '  
' → logprob: -11.625882148742676
    8. '

' → logprob: -12.000882148742676
    9. '```' → logprob: -13.000882148742676
    10. '    
' → logprob: -13.000882148742676

Token 122: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6221166849136353
    2. ' print' → logprob: -0.8721166849136353
    3. 'def' → logprob: -3.6221165657043457
    4. ' def' → logprob: -4.122116565704346
    5. '_print' → logprob: -6.497116565704346
    6. '_' → logprob: -7.372116565704346
    7. ' ' → logprob: -10.872117042541504
    8. '
' → logprob: -11.872117042541504
    9. '.print' → logprob: -11.997117042541504
    10. '	print' → logprob: -12.372117042541504

Token 123: '_no' (ID: 13575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.39534327387809753
    2. '("' → logprob: -1.52034330368042
    3. '_no' → logprob: -3.27034330368042
    4. '(' → logprob: -3.52034330368042
    5. '("_' → logprob: -4.02034330368042
    6. '_No' → logprob: -4.52034330368042
    7. 'No' → logprob: -5.52034330368042
    8. '_("' → logprob: -6.02034330368042
    9. ' ' → logprob: -6.64534330368042
    10. '()' → logprob: -7.02034330368042

Token 124: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00023917861108202487
    2. '():
' → logprob: -8.750239372253418
    3. '()' → logprob: -9.500239372253418
    4. ' ():' → logprob: -12.125239372253418
    5. '(' → logprob: -15.750239372253418
    6. ':' → logprob: -16.7502384185791
    7. '():
' → logprob: -16.8752384185791
    8. '():

' → logprob: -17.3752384185791
    9. ' ()' → logprob: -17.5002384185791
    10. '()>' → logprob: -18.8752384185791

Token 125: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.127113938331604
    2. 'print' → logprob: -2.1271138191223145
    3. ' print' → logprob: -8.627114295959473
    4. '(print' → logprob: -13.002114295959473
    5. '	print' → logprob: -13.377114295959473
    6. '(' → logprob: -13.752114295959473
    7. '```' → logprob: -13.877114295959473
    8. ' ' → logprob: -14.877114295959473
    9. '       ' → logprob: -15.502114295959473
    10. '()' → logprob: -16.377113342285156

Token 126: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.464347173576243e-05
    2. '   ' → logprob: -10.50003433227539
    3. ' print' → logprob: -11.87503433227539
    4. '	print' → logprob: -16.87503433227539
    5. '```' → logprob: -16.87503433227539
    6. 'pr' → logprob: -17.62503433227539
    7. '(print' → logprob: -17.75003433227539
    8. '.print' → logprob: -19.50003433227539
    9. ' ' → logprob: -19.62503433227539
    10. 'prin' → logprob: -20.12503433227539

Token 127: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.041142888367176056
    2. '(' → logprob: -3.2911429405212402
    3. '()' → logprob: -5.79114294052124
    4. '("")' → logprob: -10.291142463684082
    5. '('' → logprob: -12.791142463684082
    6. '(None' → logprob: -14.166142463684082
    7. '"' → logprob: -14.416142463684082
    8. '(False' → logprob: -14.541142463684082
    9. '(""' → logprob: -14.791142463684082
    10. '("""' → logprob: -14.791142463684082

Token 128: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -4.143808109802194e-05
    2. '"No' → logprob: -10.125041007995605
    3. '")' → logprob: -14.500041007995605
    4. '"' → logprob: -15.000041007995605
    5. ' No' → logprob: -15.125041007995605
    6. 'N' → logprob: -16.500041961669922
    7. 'NO' → logprob: -16.500041961669922
    8. 'Yes' → logprob: -17.000041961669922
    9. '“No' → logprob: -18.750041961669922
    10. '>No' → logprob: -19.250041961669922

Token 129: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -1.9743012671824545e-05
    2. ')' → logprob: -11.625020027160645
    3. '")
' → logprob: -11.875020027160645
    4. '()' → logprob: -12.750020027160645
    5. ')")' → logprob: -14.375020027160645
    6. '"' → logprob: -15.250020027160645
    7. '")

' → logprob: -16.000019073486328
    8. '')' → logprob: -17.500019073486328
    9. ' ")' → logprob: -18.500019073486328
    10. '```' → logprob: -18.875019073486328

Token 130: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00042888117604888976
    2. 'a' → logprob: -8.250429153442383
    3. 'if' → logprob: -8.750429153442383
    4. 'for' → logprob: -12.875429153442383
    5. 'd' → logprob: -13.000429153442383
    6. 'n' → logprob: -13.375429153442383
    7. 'while' → logprob: -13.875429153442383
    8. '```' → logprob: -14.375429153442383
    9. 'x' → logprob: -14.625429153442383
    10. ' def' → logprob: -14.750429153442383

Token 131: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.6470361351966858
    2. 'main' → logprob: -0.7720361351966858
    3. 'def' → logprob: -4.272036075592041
    4. ' def' → logprob: -8.0220365524292
    5. '
' → logprob: -11.1470365524292
    6. '_main' → logprob: -12.0220365524292
    7. 'run' → logprob: -12.3970365524292
    8. 'check' → logprob: -12.6470365524292
    9. ' is' → logprob: -12.8970365524292
    10. ' check' → logprob: -12.8970365524292

Token 132: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.2948405128554441e-05
    2. '(' → logprob: -12.25001335144043
    3. ' ():' → logprob: -12.62501335144043
    4. '()' → logprob: -13.00001335144043
    5. '():
' → logprob: -13.50001335144043
    6. '_' → logprob: -14.50001335144043
    7. '(:' → logprob: -14.62501335144043
    8. ':' → logprob: -16.00001335144043
    9. '(":' → logprob: -16.87501335144043
    10. '_:' → logprob: -18.12501335144043

Token 133: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021252065896987915
    2. 'a' → logprob: -4.521252155303955
    3. 'input' → logprob: -5.271252155303955
    4. ' input' → logprob: -6.646252155303955
    5. ' a' → logprob: -6.896252155303955
    6. ' lst' → logprob: -6.896252155303955
    7. '    
' → logprob: -7.146252155303955
    8. 'lst' → logprob: -7.896252155303955
    9. '    ' → logprob: -9.396251678466797
    10. ' ' → logprob: -9.646251678466797

Token 134: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' (adapté à ' str') → logprob: -1.5159940719604492
    2. 'values' → logprob: -1.7659940719604492
    3. ' values' → logprob: -2.015994071960449
    4. 'lst' → logprob: -2.015994071960449
    5. 'input' → logprob: -3.015994071960449
    6. ' str' → logprob: -3.140994071960449
    7. 'inputs' → logprob: -3.140994071960449
    8. 'a' → logprob: -3.265994071960449
    9. ' inputs' → logprob: -3.390994071960449
    10. '   ' → logprob: -3.390994071960449

Token 135: '_values' (ID: 20393)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.11067589372396469
    2. '_' → logprob: -3.110675811767578
    3. '_lst' → logprob: -3.485675811767578
    4. '_input' → logprob: -4.110675811767578
    5. '_vals' → logprob: -5.110675811767578
    6. '_values' → logprob: -5.110675811767578
    7. 's' → logprob: -7.360675811767578
    8. '_val' → logprob: -9.235675811767578
    9. '_inputs' → logprob: -9.360675811767578
    10. '_l' → logprob: -9.610675811767578

Token 136: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009762698784470558
    2. '=' → logprob: -4.634762763977051
    3. '_' → logprob: -13.25976276397705
    4. ' ' → logprob: -13.25976276397705
    5. '=input' → logprob: -14.50976276397705
    6. ')' → logprob: -14.75976276397705
    7. ' ' → logprob: -14.88476276397705
    8. ' =)' → logprob: -15.13476276397705
    9. ',' → logprob: -15.25976276397705
    10. 's' → logprob: -15.38476276397705

Token 137: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.47413623332977295
    2. 'read' → logprob: -0.974136233329773
    3. ' input' → logprob: -10.224136352539062
    4. 'input' → logprob: -10.724136352539062
    5. '	read' → logprob: -14.599136352539062
    6. ' ' → logprob: -15.099136352539062
    7. '(read' → logprob: -16.099136352539062
    8. '_read' → logprob: -17.849136352539062
    9. '  ' → logprob: -18.349136352539062
    10. 'Read' → logprob: -18.724136352539062

Token 138: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0004990590969100595
    2. '_' → logprob: -7.625499248504639
    3. ' _' → logprob: -12.50049877166748
    4. '_inputs' → logprob: -12.50049877166748
    5. '_in' → logprob: -13.87549877166748
    6. '_value' → logprob: -14.50049877166748
    7. '_output' → logprob: -14.87549877166748
    8. '```' → logprob: -15.12549877166748
    9. '_Input' → logprob: -15.25049877166748
    10. '_values' → logprob: -15.75049877166748

Token 139: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -7.3458322731312364e-06
    2. '()
' → logprob: -12.375007629394531
    3. '(' → logprob: -13.375007629394531
    4. ' ()' → logprob: -14.375007629394531
    5. '()

' → logprob: -14.500007629394531
    6. '();' → logprob: -16.62500762939453
    7. '()`' → logprob: -16.75000762939453
    8. '().' → logprob: -16.87500762939453
    9. '()]' → logprob: -16.87500762939453
    10. '(),' → logprob: -17.00000762939453

Token 140: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3033006191253662
    2. '
' → logprob: -2.303300619125366
    3. 'int' → logprob: -2.803300619125366
    4. '    
' → logprob: -3.428300619125366
    5. 'a' → logprob: -3.553300619125366
    6. '<|end|>' → logprob: -4.428300857543945
    7. ' ' → logprob: -5.428300857543945
    8. '  ' → logprob: -5.678300857543945
    9. '  
' → logprob: -5.803300857543945
    10. 'val' → logprob: -6.178300857543945

Token 141: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' (adapté à ' int') → logprob: -0.5954400300979614
    2. ' int' → logprob: -0.8454400300979614
    3. 'ints' → logprob: -4.470439910888672
    4. ' ints' → logprob: -5.220439910888672
    5. '   ' → logprob: -7.095439910888672
    6. ' integers' → logprob: -8.095439910888672
    7. '<int' → logprob: -8.220439910888672
    8. 'inte' → logprob: -8.720439910888672
    9. '<|end|>' → logprob: -9.095439910888672
    10. '_int' → logprob: -9.095439910888672

Token 142: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.00012761499965563416
    2. '_' → logprob: -9.375127792358398
    3. '_list' → logprob: -10.750127792358398
    4. '_vals' → logprob: -10.875127792358398
    5. 's' → logprob: -14.125127792358398
    6. '_value' → logprob: -14.875127792358398
    7. 'values' → logprob: -15.250127792358398
    8. '_s' → logprob: -15.500127792358398
    9. '_lists' → logprob: -15.750127792358398
    10. '_numbers' → logprob: -16.0001277923584

Token 143: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005234002135694027
    2. '=' → logprob: -5.2552337646484375
    3. ' =)' → logprob: -16.755233764648438
    4. ' =
' → logprob: -16.880233764648438
    5. ')' → logprob: -17.380233764648438
    6. ' ' → logprob: -17.630233764648438
    7. ',' → logprob: -17.880233764648438
    8. ' ' → logprob: -18.255233764648438
    9. '   ' → logprob: -18.255233764648438
    10. '＝' → logprob: -18.380233764648438

Token 144: ' convert' (ID: 8452)
  Prédit: ' convert'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convert' → logprob: -0.023245826363563538
    2. 'convert' → logprob: -3.7732458114624023
    3. '(convert' → logprob: -15.398245811462402
    4. '_convert' → logprob: -16.02324676513672
    5. '.convert' → logprob: -17.64824676513672
    6. ' conversion' → logprob: -18.89824676513672
    7. ' ' → logprob: -18.89824676513672
    8. ' ' → logprob: -19.02324676513672
    9. ' convertir' → logprob: -19.64824676513672
    10. ' convertible' → logprob: -20.14824676513672

Token 145: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.00020187153131701052
    2. '_' → logprob: -8.625202178955078
    3. '_t' → logprob: -11.250202178955078
    4. '```' → logprob: -12.500202178955078
    5. ' _' → logprob: -13.125202178955078
    6. '_values' → logprob: -14.375202178955078
    7. 'To' → logprob: -14.875202178955078
    8. '##_' → logprob: -15.125202178955078
    9. '__' → logprob: -15.250202178955078
    10. 'to' → logprob: -15.500202178955078

Token 146: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.4196203351020813
    2. 'int' → logprob: -1.4196202754974365
    3. 'ints' → logprob: -2.2946202754974365
    4. 'Ints' → logprob: -9.919620513916016
    5. 't' → logprob: -10.544620513916016
    6. 's' → logprob: -12.419620513916016
    7. 'nt' → logprob: -12.919620513916016
    8. 'nts' → logprob: -12.919620513916016
    9. '```' → logprob: -13.294620513916016
    10. '_t' → logprob: -13.544620513916016

Token 147: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.8193366486229934e-05
    2. 'ts' → logprob: -11.500018119812012
    3. 'sts' → logprob: -12.500018119812012
    4. 'ints' → logprob: -13.125018119812012
    5. ' s' → logprob: -14.000018119812012
    6. '_s' → logprob: -15.125018119812012
    7. '```' → logprob: -15.625018119812012
    8. '_values' → logprob: -16.000019073486328
    9. '(s' → logprob: -16.000019073486328
    10. 't' → logprob: -16.125019073486328

Token 148: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.002521680435165763
    2. '(' → logprob: -6.002521514892578
    3. ' (' → logprob: -10.002521514892578
    4. '(st' → logprob: -15.127521514892578
    5. '(Str' → logprob: -16.002521514892578
    6. '(s' → logprob: -16.502521514892578
    7. '(int' → logprob: -17.002521514892578
    8. '(string' → logprob: -17.252521514892578
    9. '[str' → logprob: -17.252521514892578
    10. '(
' → logprob: -17.502521514892578

Token 149: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -2.069664333248511e-05
    2. 'values' → logprob: -11.000020980834961
    3. '_' → logprob: -12.625020980834961
    4. 'al' → logprob: -14.875020980834961
    5. '_VALUES' → logprob: -16.12502098083496
    6. 'alue' → logprob: -16.25002098083496
    7. 'Values' → logprob: -17.62502098083496
    8. '	values' → logprob: -18.00002098083496
    9. '_value' → logprob: -18.12502098083496
    10. 'als' → logprob: -18.12502098083496

Token 150: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002398938377154991
    2. ')
' → logprob: -8.375240325927734
    3. ' )' → logprob: -12.250240325927734
    4. '   ' → logprob: -13.000240325927734
    5. '()' → logprob: -13.625240325927734
    6. '())' → logprob: -14.500240325927734
    7. '[' → logprob: -15.250240325927734
    8. ' ' → logprob: -16.250240325927734
    9. '))' → logprob: -16.625240325927734
    10. ')

' → logprob: -17.125240325927734

Token 151: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.765242874622345
    2. '   ' → logprob: -1.3902428150177002
    3. ' a' → logprob: -2.0152428150177
    4. '    
' → logprob: -2.5152428150177
    5. '
' → logprob: -3.3902428150177
    6. '<|end|>' → logprob: -3.7652428150177
    7. '	a' → logprob: -6.015243053436279
    8. '  
' → logprob: -6.515243053436279
    9. '[a' → logprob: -6.640243053436279
    10. '  ' → logprob: -6.765243053436279

Token 152: ' A' (ID: 355)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.02326679229736328
    2. ' a' → logprob: -3.7732667922973633
    3. '   ' → logprob: -11.898266792297363
    4. 'values' → logprob: -12.898266792297363
    5. 'abc' → logprob: -13.148266792297363
    6. '    
' → logprob: -13.648266792297363
    7. ' ' → logprob: -13.648266792297363
    8. '  ' → logprob: -13.773266792297363
    9. '(a' → logprob: -13.898266792297363
    10. '	a' → logprob: -14.023266792297363

Token 153: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.229872087715194e-05
    2. ',B' → logprob: -9.875061988830566
    3. ' ,' → logprob: -11.625061988830566
    4. ',b' → logprob: -14.250061988830566
    5. 'B' → logprob: -15.000061988830566
    6. '1' → logprob: -15.125061988830566
    7. ',A' → logprob: -16.250062942504883
    8. 'a' → logprob: -16.375062942504883
    9. 'A' → logprob: -16.375062942504883
    10. ' ' → logprob: -16.875062942504883

Token 154: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.3868778944015503
    2. ' B' → logprob: -1.1368778944015503
    3. ' ' → logprob: -12.38687801361084
    4. 'b' → logprob: -13.26187801361084
    5. '    ' → logprob: -15.26187801361084
    6. ' ' → logprob: -15.63687801361084
    7. '<|end|>' → logprob: -15.63687801361084
    8. '   ' → logprob: -16.136877059936523
    9. '  ' → logprob: -16.261877059936523
    10. '`' → logprob: -17.011877059936523

Token 155: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002601438027340919
    2. ' ,' → logprob: -8.375260353088379
    3. ' =' → logprob: -10.750260353088379
    4. ',C' → logprob: -12.375260353088379
    5. '=' → logprob: -12.625260353088379
    6. '<|end|>' → logprob: -15.625260353088379
    7. ',B' → logprob: -15.875260353088379
    8. ',c' → logprob: -16.000259399414062
    9. '‌,' → logprob: -17.750259399414062
    10. ',b' → logprob: -17.875259399414062

Token 156: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.018151111900806427
    2. ' C' → logprob: -4.01815128326416
    3. ' ' → logprob: -14.26815128326416
    4. '   ' → logprob: -15.89315128326416
    5. 'and' → logprob: -16.393150329589844
    6. '  ' → logprob: -16.518150329589844
    7. 'c' → logprob: -16.768150329589844
    8. ' and' → logprob: -17.018150329589844
    9. '<|end|>' → logprob: -17.018150329589844
    10. '	C' → logprob: -17.268150329589844

Token 157: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021809488534927
    2. '=' → logprob: -2.3502180576324463
    3. ',' → logprob: -11.475217819213867
    4. ')' → logprob: -15.225217819213867
    5. '=A' → logprob: -15.350217819213867
    6. '<|end|>' → logprob: -15.975217819213867
    7. ' ' → logprob: -16.100217819213867
    8. ' =)' → logprob: -16.225217819213867
    9. '=create' → logprob: -16.475217819213867
    10. '  ' → logprob: -16.725217819213867

Token 158: ' assign' (ID: 14975)
  Prédit: ' assign'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' assign' → logprob: -0.4740808606147766
    2. 'assign' → logprob: -0.9740808606147766
    3. '	assign' → logprob: -13.224081039428711
    4. '(assign' → logprob: -13.599081039428711
    5. '_assign' → logprob: -14.724081039428711
    6. '   ' → logprob: -16.47408103942871
    7. ' asign' → logprob: -16.47408103942871
    8. ' assigned' → logprob: -16.59908103942871
    9. ' assignment' → logprob: -16.72408103942871
    10. '.assign' → logprob: -16.97408103942871

Token 159: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -6.704273118884885e-07
    2. 'values' → logprob: -14.625000953674316
    3. '_' → logprob: -15.875000953674316
    4. '_VALUES' → logprob: -17.625
    5. '_vals' → logprob: -17.875
    6. '(values' → logprob: -17.875
    7. 'Values' → logprob: -18.75
    8. '_value' → logprob: -19.25
    9. ' values' → logprob: -19.375
    10. '
' → logprob: -20.0

Token 160: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -6.869017852295656e-06
    2. '(' → logprob: -12.000006675720215
    3. ' (' → logprob: -14.750006675720215
    4. '(intent' → logprob: -16.00000762939453
    5. ',int' → logprob: -17.25000762939453
    6. '(Int' → logprob: -17.75000762939453
    7. '(in' → logprob: -17.87500762939453
    8. '<int' → logprob: -18.37500762939453
    9. '(INT' → logprob: -18.37500762939453
    10. '(i' → logprob: -18.62500762939453

Token 161: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.00010306637705070898
    2. '_list' → logprob: -9.250102996826172
    3. 's' → logprob: -12.750102996826172
    4. 'values' → logprob: -13.000102996826172
    5. '_vals' → logprob: -13.500102996826172
    6. '(values' → logprob: -15.625102996826172
    7. '_' → logprob: -16.125102996826172
    8. ')' → logprob: -17.000102996826172
    9. '_VALUES' → logprob: -17.250102996826172
    10. 'Values' → logprob: -17.500102996826172

Token 162: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ')
' → logprob: -13.625000953674316
    3. ' )' → logprob: -17.000001907348633
    4. '),' → logprob: -17.375001907348633
    5. ')

' → logprob: -17.500001907348633
    6. '()' → logprob: -18.250001907348633
    7. '   ' → logprob: -18.500001907348633
    8. ')`' → logprob: -18.875001907348633
    9. '))' → logprob: -19.000001907348633
    10. '}' → logprob: -19.250001907348633

Token 163: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6773272752761841
    2. '   ' → logprob: -0.8023272752761841
    3. '    
' → logprob: -3.5523271560668945
    4. '```' → logprob: -5.4273271560668945
    5. 'lst' → logprob: -5.5523271560668945
    6. '  
' → logprob: -6.1773271560668945
    7. '<|end|>' → logprob: -6.8023271560668945
    8. ' lst' → logprob: -7.1773271560668945
    9. '   
' → logprob: -7.3023271560668945
    10. '  ' → logprob: -8.427327156066895

Token 164: ' values' (ID: 4824)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.8906188011169434
    2. ' lst' → logprob: -1.0156188011169434
    3. 'values' (adapté à ' values') → logprob: -2.6406188011169434
    4. ' values' → logprob: -2.6406188011169434
    5. 'sorted' → logprob: -3.2656188011169434
    6. ' sorted' → logprob: -4.140618801116943
    7. 'my' → logprob: -5.265618801116943
    8. 'vals' → logprob: -5.390618801116943
    9. ' numbers' → logprob: -5.390618801116943
    10. ' my' → logprob: -5.890618801116943

Token 165: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.3410641849040985
    2. ' =' → logprob: -1.341064214706421
    3. '_' → logprob: -4.216063976287842
    4. '=' → logprob: -4.466063976287842
    5. '_lst' → logprob: -6.841063976287842
    6. 's' → logprob: -9.841064453125
    7. '_lists' → logprob: -11.591064453125
    8. '=_' → logprob: -11.716064453125
    9. '=[]' → logprob: -11.966064453125
    10. '=list' → logprob: -12.091064453125

Token 166: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02324652671813965
    2. '=' → logprob: -3.7732465267181396
    3. ')' → logprob: -15.273246765136719
    4. ' =)' → logprob: -15.898246765136719
    5. ' =
' → logprob: -16.14824676513672
    6. '(' → logprob: -16.27324676513672
    7. '<|end|>' → logprob: -16.27324676513672
    8. 's' → logprob: -16.39824676513672
    9. '  ' → logprob: -16.64824676513672
    10. '=create' → logprob: -17.02324676513672

Token 167: ' make' (ID: 1520)
  Prédit: ' make'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' make' → logprob: -0.07889407873153687
    2. 'make' → logprob: -2.5788941383361816
    3. '	make' → logprob: -13.078893661499023
    4. '(make' → logprob: -13.328893661499023
    5. ' [' → logprob: -15.703893661499023
    6. ' mak' → logprob: -16.078893661499023
    7. '[' → logprob: -16.828893661499023
    8. '_make' → logprob: -16.953893661499023
    9. ' ' → logprob: -17.078893661499023
    10. ' ' → logprob: -17.203893661499023

Token 168: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0002466774603817612
    2. '_' → logprob: -8.50024700164795
    3. '_values' → logprob: -10.12524700164795
    4. '_l' → logprob: -13.75024700164795
    5. '_lists' → logprob: -15.12524700164795
    6. '```' → logprob: -15.12524700164795
    7. '(_' → logprob: -15.37524700164795
    8. '(' → logprob: -15.50024700164795
    9. '_li' → logprob: -15.75024700164795
    10. '_value' → logprob: -16.000246047973633

Token 169: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.005237429868429899
    2. '(' → logprob: -5.255237579345703
    3. '(B' → logprob: -13.130237579345703
    4. ' (' → logprob: -14.130237579345703
    5. '(a' → logprob: -15.255237579345703
    6. '(
' → logprob: -15.380237579345703
    7. '(C' → logprob: -15.380237579345703
    8. '((' → logprob: -16.005237579345703
    9. '```' → logprob: -17.005237579345703
    10. '\(' → logprob: -17.380237579345703

Token 170: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.6789137084269896e-05
    2. ',B' → logprob: -10.25003719329834
    3. ' ,' → logprob: -15.00003719329834
    4. ',b' → logprob: -15.12503719329834
    5. ',",' → logprob: -15.12503719329834
    6. '`,' → logprob: -15.87503719329834
    7. '',' → logprob: -15.87503719329834
    8. ',
' → logprob: -16.125036239624023
    9. ',,' → logprob: -16.375036239624023
    10. '",' → logprob: -17.000036239624023

Token 171: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.47408124804496765
    2. ' B' → logprob: -0.97408127784729
    3. ' ' → logprob: -12.849081039428711
    4. '	B' → logprob: -14.974081039428711
    5. '   ' → logprob: -15.349081039428711
    6. ' ' → logprob: -15.349081039428711
    7. 'b' → logprob: -15.724081039428711
    8. '    ' → logprob: -15.974081039428711
    9. '>B' → logprob: -16.53658103942871
    10. ',' → logprob: -16.53658103942871

Token 172: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.45848218582978e-06
    2. ' ,' → logprob: -13.25000286102295
    3. ',C' → logprob: -15.00000286102295
    4. ',B' → logprob: -16.000001907348633
    5. '‌,' → logprob: -16.625001907348633
    6. ',
' → logprob: -16.750001907348633
    7. ')' → logprob: -17.000001907348633
    8. 'C' → logprob: -17.500001907348633
    9. '`,' → logprob: -17.750001907348633
    10. '',' → logprob: -18.875001907348633

Token 173: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.03364811837673187
    2. ' C' → logprob: -3.4086480140686035
    3. ' ' → logprob: -14.033648490905762
    4. '   ' → logprob: -14.408648490905762
    5. '	C' → logprob: -14.908648490905762
    6. 'c' → logprob: -15.783648490905762
    7. ' ' → logprob: -15.908648490905762
    8. ')' → logprob: -16.033647537231445
    9. '
' → logprob: -16.533647537231445
    10. '>C' → logprob: -16.908647537231445

Token 174: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.8889261304575484e-06
    2. ')
' → logprob: -12.500003814697266
    3. ')

' → logprob: -17.625003814697266
    4. '))' → logprob: -17.750003814697266
    5. ')`' → logprob: -17.750003814697266
    6. ' )' → logprob: -18.125003814697266
    7. '),' → logprob: -18.500003814697266
    8. ')#' → logprob: -19.125003814697266
    9. ')
' → logprob: -19.875003814697266
    10. ')}' → logprob: -19.875003814697266

Token 175: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23735740780830383
    2. 'sorted' → logprob: -1.7373573780059814
    3. ' sorted' → logprob: -3.3623573780059814
    4. '```' → logprob: -8.612357139587402
    5. ' ' → logprob: -9.112357139587402
    6. '_sorted' → logprob: -9.612357139587402
    7. '
' → logprob: -9.862357139587402
    8. '    
' → logprob: -9.987357139587402
    9. '  ' → logprob: -10.112357139587402
    10. 's' → logprob: -10.112357139587402

Token 176: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' (adapté à ' sorted') → logprob: -0.06383652985095978
    2. ' sorted' → logprob: -2.8138365745544434
    3. '   ' → logprob: -6.313836574554443
    4. 's' → logprob: -11.188836097717285
    5. ' ' → logprob: -11.563836097717285
    6. '    
' → logprob: -11.688836097717285
    7. '
' → logprob: -11.813836097717285
    8. '_sorted' → logprob: -12.438836097717285
    9. '```' → logprob: -12.688836097717285
    10. '(sorted' → logprob: -13.063836097717285

Token 177: '_values' (ID: 20393)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.05238429084420204
    2. '_values' → logprob: -3.552384376525879
    3. '_' → logprob: -3.802384376525879
    4. '_lst' → logprob: -10.177384376525879
    5. '_vals' → logprob: -11.427384376525879
    6. '_l' → logprob: -12.677384376525879
    7. ' _' → logprob: -13.427384376525879
    8. '_val' → logprob: -13.427384376525879
    9. '_sorted' → logprob: -13.677384376525879
    10. '_value' → logprob: -13.802384376525879

Token 178: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13133759796619415
    2. ' =' → logprob: -2.3813376426696777
    3. '_' → logprob: -3.5063376426696777
    4. '(' → logprob: -8.13133716583252
    5. ')' → logprob: -8.88133716583252
    6. '_list' → logprob: -9.25633716583252
    7. '_=' → logprob: -10.38133716583252
    8. '_values' → logprob: -10.63133716583252
    9. ',' → logprob: -11.00633716583252
    10. 's' → logprob: -11.25633716583252

Token 179: ' sort' (ID: 4506)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.31327250599861145
    2. ' sort' → logprob: -1.313272476196289
    3. '(sort' → logprob: -12.313272476196289
    4. 'sorted' → logprob: -12.563272476196289
    5. ' sorted' → logprob: -12.938272476196289
    6. '	sort' → logprob: -15.313272476196289
    7. '_sort' → logprob: -16.56327247619629
    8. ' ' → logprob: -16.68827247619629
    9. 's' → logprob: -17.18827247619629
    10. ' ' → logprob: -17.31327247619629

Token 180: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -9.491498531133402e-06
    2. '_' → logprob: -12.250009536743164
    3. '_values' → logprob: -12.625009536743164
    4. '(values' → logprob: -14.250009536743164
    5. '(' → logprob: -15.375009536743164
    6. '(sorted' → logprob: -15.750009536743164
    7. '_sorted' → logprob: -16.000009536743164
    8. 'list' → logprob: -16.125009536743164
    9. 's' → logprob: -16.625009536743164
    10. 'values' → logprob: -16.750009536743164

Token 181: '(values' (ID: 40883)
  Prédit: '(values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(values' → logprob: -0.0015056940028443933
    2. '(' → logprob: -6.5015058517456055
    3. '(sorted' → logprob: -12.751505851745605
    4. 'values' → logprob: -15.126505851745605
    5. '(numbers' → logprob: -16.87650489807129
    6. '(vals' → logprob: -16.87650489807129
    7. ' (' → logprob: -17.25150489807129
    8. '(results' → logprob: -17.50150489807129
    9. ' values' → logprob: -17.75150489807129
    10. '	values' → logprob: -18.12650489807129

Token 182: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0021287298295646906
    2. '(values' → logprob: -6.752128601074219
    3. ')' → logprob: -7.627128601074219
    4. '_values' → logprob: -8.377128601074219
    5. 'values' → logprob: -8.877128601074219
    6. 'ist' → logprob: -9.752128601074219
    7. 's' → logprob: -11.502128601074219
    8. 'list' → logprob: -11.627128601074219
    9. '_)' → logprob: -12.377128601074219
    10. '(' → logprob: -12.502128601074219

Token 183: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00029708960209973156
    2. ')
' → logprob: -8.125297546386719
    3. ' )' → logprob: -14.375297546386719
    4. '   ' → logprob: -15.375297546386719
    5. ')

' → logprob: -16.50029754638672
    6. '[' → logprob: -17.37529754638672
    7. ' ' → logprob: -17.62529754638672
    8. ')
' → logprob: -18.00029754638672
    9. ')`' → logprob: -18.12529754638672
    10. '()' → logprob: -18.25029754638672

Token 184: '   ' (ID: 271)
  Prédit: 'middle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'middle' → logprob: -0.5057660341262817
    2. '   ' → logprob: -1.8807660341262817
    3. ' middle' → logprob: -2.005765914916992
    4. 'm' → logprob: -2.755765914916992
    5. 'mid' → logprob: -3.380765914916992
    6. ' mid' → logprob: -6.005765914916992
    7. 'M' → logprob: -6.130765914916992
    8. '
' → logprob: -6.755765914916992
    9. 'result' → logprob: -6.880765914916992
    10. 'midd' → logprob: -7.255765914916992

Token 185: ' middle' (ID: 10006)
  Prédit: 'middle'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'middle' (adapté à ' middle') → logprob: -0.005676110740751028
    2. 'mid' → logprob: -5.38067626953125
    3. ' middle' → logprob: -8.13067626953125
    4. 'median' → logprob: -8.13067626953125
    5. 'm' → logprob: -8.25567626953125
    6. '   ' → logprob: -9.63067626953125
    7. 'if' → logprob: -10.00567626953125
    8. 'midd' → logprob: -10.25567626953125
    9. 'result' → logprob: -11.00567626953125
    10. '
' → logprob: -11.25567626953125

Token 186: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.007179440930485725
    2. '_' → logprob: -5.257179260253906
    3. '_val' → logprob: -6.257179260253906
    4. '_values' → logprob: -10.632179260253906
    5. '_Value' → logprob: -13.382179260253906
    6. '_index' → logprob: -14.757179260253906
    7. '_v' → logprob: -15.382179260253906
    8. '_VALUE' → logprob: -16.257179260253906
    9. ' _' → logprob: -16.382179260253906
    10. '_key' → logprob: -16.757179260253906

Token 187: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018950464203953743
    2. '=' → logprob: -4.018950462341309
    3. '_' → logprob: -7.143950462341309
    4. ' ' → logprob: -11.893950462341309
    5. ' _' → logprob: -13.768950462341309
    6. ')' → logprob: -14.518950462341309
    7. ',' → logprob: -14.643950462341309
    8. ' ' → logprob: -14.768950462341309
    9. ' =
' → logprob: -15.143950462341309
    10. 's' → logprob: -15.143950462341309

Token 188: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.0008713211864233017
    2. 'get' → logprob: -7.125871181488037
    3. ' sorted' → logprob: -9.625871658325195
    4. 'sorted' → logprob: -14.625871658325195
    5. ' ' → logprob: -15.500871658325195
    6. ' sort' → logprob: -16.125871658325195
    7. '_get' → logprob: -17.250871658325195
    8. '(get' → logprob: -17.250871658325195
    9. ' ' → logprob: -17.875871658325195
    10. '	get' → logprob: -18.000871658325195

Token 189: '_middle' (ID: 155207)
  Prédit: '_middle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_middle' → logprob: -0.10276760905981064
    2. '_' → logprob: -2.4777677059173584
    3. '_sorted' → logprob: -4.477767467498779
    4. '_value' → logprob: -6.852767467498779
    5. '_m' → logprob: -7.227767467498779
    6. 'middle' → logprob: -8.727767944335938
    7. '_values' → logprob: -9.227767944335938
    8. '_mid' → logprob: -9.477767944335938
    9. '_medium' → logprob: -9.602767944335938
    10. '```' → logprob: -10.102767944335938

Token 190: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -1.1472419600977446e-06
    2. '_values' → logprob: -14.875000953674316
    3. '_val' → logprob: -14.875000953674316
    4. 'value' → logprob: -15.375000953674316
    5. '_' → logprob: -15.750000953674316
    6. '_VALUE' → logprob: -18.250001907348633
    7. '_Value' → logprob: -19.000001907348633
    8. 'alue' → logprob: -20.125001907348633
    9. 'valu' → logprob: -20.250001907348633
    10. '```' → logprob: -20.250001907348633

Token 191: '(sorted' (ID: 92488)
  Prédit: '(sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -0.0005582740413956344
    2. '(' → logprob: -7.500558376312256
    3. '(sort' → logprob: -12.500557899475098
    4. '(s' → logprob: -13.500557899475098
    5. '(
' → logprob: -16.375558853149414
    6. 'sorted' → logprob: -17.000558853149414
    7. ' (' → logprob: -17.750558853149414
    8. '(

' → logprob: -18.500558853149414
    9. '_sorted' → logprob: -18.750558853149414
    10. '(saved' → logprob: -18.750558853149414

Token 192: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -8.77627644513268e-06
    2. '_value' → logprob: -12.125008583068848
    3. '_' → logprob: -13.375008583068848
    4. 'values' → logprob: -13.875008583068848
    5. 'ed' → logprob: -14.250008583068848
    6. '_VALUES' → logprob: -17.000009536743164
    7. '_val' → logprob: -17.125009536743164
    8. '_vals' → logprob: -18.250009536743164
    9. '_list' → logprob: -18.375009536743164
    10. '(values' → logprob: -18.375009536743164

Token 193: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.825890159234405e-05
    2. ')
' → logprob: -9.750068664550781
    3. ',' → logprob: -12.125068664550781
    4. ' )' → logprob: -12.750068664550781
    5. ' ' → logprob: -14.125068664550781
    6. '   ' → logprob: -14.250068664550781
    7. ')

' → logprob: -15.875068664550781
    8. '),' → logprob: -17.12506866455078
    9. ',)' → logprob: -17.87506866455078
    10. '#' → logprob: -17.87506866455078

Token 194: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04633372649550438
    2. '   ' → logprob: -3.4213337898254395
    3. '<|end|>' → logprob: -5.6713337898254395
    4. 'if' → logprob: -5.7963337898254395
    5. '  
' → logprob: -6.2963337898254395
    6. ' if' → logprob: -6.2963337898254395
    7. '    
' → logprob: -6.6713337898254395
    8. ' 
' → logprob: -7.5463337898254395
    9. ')
' → logprob: -9.421333312988281
    10. ' ' → logprob: -9.671333312988281

Token 195: ' is' (ID: 382)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.002463167766109109
    2. 'compare' → logprob: -6.127463340759277
    3. '   ' → logprob: -9.002463340759277
    4. 'print' → logprob: -9.502463340759277
    5. ' if' → logprob: -10.002463340759277
    6. '
' → logprob: -11.502463340759277
    7. 'result' → logprob: -12.377463340759277
    8. 'for' → logprob: -12.377463340759277
    9. '    
' → logprob: -12.627463340759277
    10. 'i' → logprob: -12.877463340759277

Token 196: '_equal' (ID: 27882)
  Prédit: '_equal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_equal' → logprob: -0.03892005234956741
    2. '_same' → logprob: -4.163919925689697
    3. '_middle' → logprob: -4.413919925689697
    4. '_' → logprob: -4.788919925689697
    5. '_duplicate' → logprob: -7.413919925689697
    6. '_match' → logprob: -8.163920402526855
    7. '_unique' → logprob: -8.288920402526855
    8. 'equal' → logprob: -8.413920402526855
    9. '_mid' → logprob: -8.913920402526855
    10. '_valid' → logprob: -9.163920402526855

Token 197: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24287137389183044
    2. '=' → logprob: -1.6178714036941528
    3. '(' → logprob: -4.117871284484863
    4. '_' → logprob: -7.117871284484863
    5. '1' → logprob: -9.742871284484863
    6. ' ' → logprob: -9.867871284484863
    7. '(m' → logprob: -11.367871284484863
    8. ' (' → logprob: -11.617871284484863
    9. ')' → logprob: -11.742871284484863
    10. '(equal' → logprob: -11.742871284484863

Token 198: ' compare' (ID: 12221)
  Prédit: 'compare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compare' → logprob: -0.062429655343294144
    2. ' compare' → logprob: -2.812429666519165
    3. '(compare' → logprob: -7.687429428100586
    4. '   ' → logprob: -13.062429428100586
    5. '.compare' → logprob: -14.562429428100586
    6. ' ' → logprob: -15.437429428100586
    7. '_compare' → logprob: -15.562429428100586
    8. '  ' → logprob: -16.437429428100586
    9. 'cmp' → logprob: -17.062429428100586
    10. '
' → logprob: -17.062429428100586

Token 199: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -7.100059156073257e-05
    2. '_' → logprob: -9.625070571899414
    3. 's' → logprob: -13.250070571899414
    4. '_vals' → logprob: -14.000070571899414
    5. '_(' → logprob: -14.750070571899414
    6. '_
' → logprob: -15.000070571899414
    7. 'values' → logprob: -15.250070571899414
    8. '_value' → logprob: -15.375070571899414
    9. '_VALUES' → logprob: -15.625070571899414
    10. ' _' → logprob: -15.625070571899414

Token 200: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.27622389793395996
    2. '(A' → logprob: -1.77622389793396
    3. '(B' → logprob: -2.65122389793396
    4. '(' → logprob: -7.276224136352539
    5. '(C' → logprob: -7.401224136352539
    6. '(M' → logprob: -9.401224136352539
    7. '(s' → logprob: -9.401224136352539
    8. '(b' → logprob: -11.026224136352539
    9. '(mid' → logprob: -11.151224136352539
    10. '(a' → logprob: -12.401224136352539

Token 201: 'iddle' (ID: 5321)
  Prédit: 'iddle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iddle' → logprob: -6.718606891809031e-05
    2. 'id' → logprob: -10.375066757202148
    3. 'idd' → logprob: -10.625066757202148
    4. '_id' → logprob: -12.375066757202148
    5. 'middle' → logprob: -13.500066757202148
    6. '(id' → logprob: -14.125066757202148
    7. 'iddel' → logprob: -14.250066757202148
    8. ' id' → logprob: -14.500066757202148
    9. 'idden' → logprob: -14.750066757202148
    10. '.id' → logprob: -14.875066757202148

Token 202: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -6.432518421206623e-05
    2. '_' → logprob: -10.0000638961792
    3. '_values' → logprob: -11.5000638961792
    4. 'alue' → logprob: -12.6250638961792
    5. 'value' → logprob: -12.8750638961792
    6. '_val' → logprob: -14.1250638961792
    7. '_
' → logprob: -14.6250638961792
    8. '_Value' → logprob: -15.1250638961792
    9. '__' → logprob: -15.2500638961792
    10. ' _' → logprob: -15.8750638961792

Token 203: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.032954223453998566
    2. ' ,' → logprob: -3.657954216003418
    3. ',B' → logprob: -6.032954216003418
    4. ' ' → logprob: -6.532954216003418
    5. ' B' → logprob: -7.282954216003418
    6. 'B' → logprob: -7.282954216003418
    7. ',C' → logprob: -8.157954216003418
    8. ',A' → logprob: -8.157954216003418
    9. ',
' → logprob: -8.532954216003418
    10. 'C' → logprob: -9.407954216003418

Token 204: ' C' (ID: 363)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.026204612106084824
    2. 'A' → logprob: -4.276204586029053
    3. ' B' → logprob: -5.026204586029053
    4. 'C' → logprob: -5.276204586029053
    5. ' A' → logprob: -8.776205062866211
    6. ' C' → logprob: -10.026205062866211
    7. ' ' → logprob: -11.026205062866211
    8. ')' → logprob: -11.713705062866211
    9. '10' → logprob: -12.401205062866211
    10. '	B' → logprob: -12.463705062866211

Token 205: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.983476436696947e-05
    2. ')
' → logprob: -9.875089645385742
    3. ' )' → logprob: -10.250089645385742
    4. ')

' → logprob: -13.625089645385742
    5. '   ' → logprob: -14.250089645385742
    6. '))' → logprob: -15.000089645385742
    7. ' ' → logprob: -15.625089645385742
    8. '),' → logprob: -16.000089645385742
    9. ',' → logprob: -16.250089645385742
    10. ')`' → logprob: -16.375089645385742

Token 206: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0065270764753222466
    2. '   ' → logprob: -5.381526947021484
    3. ' 
' → logprob: -7.506526947021484
    4. '  
' → logprob: -7.506526947021484
    5. '    
' → logprob: -7.756526947021484
    6. '<|end|>' → logprob: -9.131526947021484
    7. '\n' → logprob: -9.631526947021484
    8. '' → logprob: -10.381526947021484
    9. '```' → logprob: -10.381526947021484
    10. '\' → logprob: -10.506526947021484

Token 207: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012542021460831165
    2. 'if' (adapté à ' if') → logprob: -4.637542247772217
    3. ' if' → logprob: -7.012542247772217
    4. '	if' → logprob: -7.012542247772217
    5. '
' → logprob: -7.137542247772217
    6. '    
' → logprob: -8.762541770935059
    7. '   ' → logprob: -12.137541770935059
    8. '\t' → logprob: -12.387541770935059
    9. 'If' → logprob: -12.762541770935059
    10. '       ' → logprob: -13.012541770935059

Token 208: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -4.8351892473874614e-05
    2. 'is' → logprob: -10.250048637390137
    3. ' ' → logprob: -11.875048637390137
    4. ' ' → logprob: -13.000048637390137
    5. ' not' → logprob: -13.500048637390137
    6. '	is' → logprob: -13.875048637390137
    7. ' True' → logprob: -14.250048637390137
    8. '_' → logprob: -15.625048637390137
    9. ' ‌' → logprob: -15.875048637390137
    10. '(is' → logprob: -16.25004768371582

Token 209: '_equal' (ID: 27882)
  Prédit: '_equal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_equal' → logprob: -0.07901889830827713
    2. 'qual' → logprob: -2.5790188312530518
    3. '_' → logprob: -9.329018592834473
    4. 'qu' → logprob: -11.579018592834473
    5. 'equal' → logprob: -11.954018592834473
    6. 's' → logprob: -12.329018592834473
    7. 'q' → logprob: -12.454018592834473
    8. '_equ' → logprob: -12.454018592834473
    9. '_EQUAL' → logprob: -12.704018592834473
    10. '_e' → logprob: -12.829018592834473

Token 210: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004822697374038398
    2. ' :' → logprob: -7.750482082366943
    3. '():' → logprob: -10.000482559204102
    4. ':
' → logprob: -12.625482559204102
    5. ':**' → logprob: -13.875482559204102
    6. '):' → logprob: -14.000482559204102
    7. '<|end|>' → logprob: -15.375482559204102
    8. '：' → logprob: -16.2504825592041
    9. ' ():' → logprob: -16.2504825592041
    10. '(' → logprob: -16.2504825592041

Token 211: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006000844296067953
    2. '   ' → logprob: -5.881000995635986
    3. '
' → logprob: -6.881000995635986
    4. '<|end|>' → logprob: -7.131000995635986
    5. '    
' → logprob: -7.881000995635986
    6. '        
' → logprob: -8.006000518798828
    7. '```' → logprob: -9.131000518798828
    8. '	' → logprob: -9.381000518798828
    9. 'print' → logprob: -9.506000518798828
    10. ':' → logprob: -9.756000518798828

Token 212: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.6256264448165894
    2. 'print' (adapté à ' print') → logprob: -0.8756264448165894
    3. '   ' → logprob: -3.750626564025879
    4. '    
' → logprob: -4.250626564025879
    5. ' 
' → logprob: -4.750626564025879
    6. '       ' → logprob: -7.750626564025879
    7. '        
' → logprob: -7.750626564025879
    8. '(print' → logprob: -7.875626564025879
    9. '	print' → logprob: -8.250626564025879
    10. '
' → logprob: -8.375626564025879

Token 213: '_yes' (ID: 151898)
  Prédit: '_yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_yes' → logprob: -0.0003091254911851138
    2. '_' → logprob: -8.625308990478516
    3. '_no' → logprob: -9.000308990478516
    4. '(' → logprob: -12.625308990478516
    5. '_y' → logprob: -14.000308990478516
    6. '```' → logprob: -14.500308990478516
    7. '("_' → logprob: -14.625308990478516
    8. 'Yes' → logprob: -15.250308990478516
    9. ' _' → logprob: -15.625308990478516
    10. '_you' → logprob: -15.625308990478516

Token 214: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0052432413212955
    2. '()
' → logprob: -5.255243301391602
    3. '(' → logprob: -12.130243301391602
    4. '()

' → logprob: -12.755243301391602
    5. '()
' → logprob: -14.880243301391602
    6. '()`' → logprob: -15.505243301391602
    7. '(
' → logprob: -15.505243301391602
    8. '()\' → logprob: -15.755243301391602
    9. ' ()' → logprob: -16.2552433013916
    10. '()"' → logprob: -17.1302433013916

Token 215: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.35601934790611267
    2. ' else' → logprob: -1.731019377708435
    3. '   ' → logprob: -2.1060192584991455
    4. 'e' → logprob: -8.106019020080566
    5. ' ' → logprob: -8.856019020080566
    6. '	else' → logprob: -9.106019020080566
    7. '    
' → logprob: -9.856019020080566
    8. ')' → logprob: -10.731019020080566
    9. 'el' → logprob: -10.981019020080566
    10. 'elif' → logprob: -11.481019020080566

Token 216: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.03147212788462639
    2. ' else' → logprob: -3.5314722061157227
    3. '   ' → logprob: -6.406472206115723
    4. 'e' → logprob: -10.031472206115723
    5. ' ' → logprob: -11.156472206115723
    6. 'el' → logprob: -11.906472206115723
    7. '	else' → logprob: -13.531472206115723
    8. 'elif' → logprob: -14.406472206115723
    9. 'els' → logprob: -14.531472206115723
    10. 'elser' → logprob: -14.656472206115723

Token 217: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005239326041191816
    2. ':
' → logprob: -5.255239486694336
    3. ' :' → logprob: -12.880239486694336
    4. '   ' → logprob: -13.755239486694336
    5. '():' → logprob: -14.505239486694336
    6. ' :
' → logprob: -14.505239486694336
    7. '():
' → logprob: -15.755239486694336
    8. ':

' → logprob: -15.880239486694336
    9. '(' → logprob: -16.130239486694336
    10. '       ' → logprob: -16.380239486694336

Token 218: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017228922806680202
    2. 'print' → logprob: -7.001722812652588
    3. ' print' → logprob: -7.251722812652588
    4. '   ' → logprob: -9.376723289489746
    5. '(print' → logprob: -11.501723289489746
    6. '	print' → logprob: -12.751723289489746
    7. '<|end|>' → logprob: -14.001723289489746
    8. '	' → logprob: -14.251723289489746
    9. '      ' → logprob: -14.751723289489746
    10. '     ' → logprob: -14.751723289489746

Token 219: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.47408199310302734
    2. 'print' (adapté à ' print') → logprob: -0.9740819931030273
    3. '   ' → logprob: -12.599081993103027
    4. '	print' → logprob: -14.474081993103027
    5. '(print' → logprob: -14.974081993103027
    6. '    ' → logprob: -15.099081993103027
    7. '       ' → logprob: -15.224081993103027
    8. '.print' → logprob: -15.599081993103027
    9. '_print' → logprob: -17.224082946777344
    10. '```' → logprob: -17.974082946777344

Token 220: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -7.107425062713446e-06
    2. '_' → logprob: -12.125006675720215
    3. '_n' → logprob: -14.000006675720215
    4. '("_' → logprob: -15.375006675720215
    5. '_No' → logprob: -15.750006675720215
    6. '```' → logprob: -16.25000762939453
    7. '_NO' → logprob: -16.62500762939453
    8. ' _' → logprob: -16.75000762939453
    9. 'No' → logprob: -16.87500762939453
    10. '"_' → logprob: -17.25000762939453

Token 221: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.029779190197587013
    2. '(' → logprob: -3.9047791957855225
    3. '()
' → logprob: -5.029778957366943
    4. '
' → logprob: -6.154778957366943
    5. '(
' → logprob: -8.404779434204102
    6. '<|end|>' → logprob: -8.904779434204102
    7. '```' → logprob: -10.029779434204102
    8. '\n' → logprob: -10.279779434204102
    9. ')' → logprob: -10.529779434204102
    10. '()\' → logprob: -11.154779434204102

Token 222: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12643752992153168
    2. '
' → logprob: -2.2514374256134033
    3. '\n' → logprob: -4.751437664031982
    4. 'i' → logprob: -6.126437664031982
    5. '#' → logprob: -6.751437664031982
    6. '<|end|>' → logprob: -7.501437664031982
    7. '\' → logprob: -8.626437187194824
    8. 'main' → logprob: -8.751437187194824
    9. '```' → logprob: -8.751437187194824
    10. ' if' → logprob: -8.876437187194824

Token 223: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3133183419704437
    2. '()' → logprob: -1.3133183717727661
    3. '(
' → logprob: -10.188318252563477
    4. '()
' → logprob: -12.688318252563477
    5. '(

' → logprob: -12.688318252563477
    6. '.' → logprob: -13.188318252563477
    7. '();' → logprob: -13.313318252563477
    8. ')' → logprob: -13.688318252563477
    9. '().' → logprob: -13.688318252563477
    10. ' (' → logprob: -13.813318252563477


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 221
Tokens correctement prédits (1ère position, stricte): 113
Tokens correctement prédits (1ère position, avec adaptation): 123
Tokens correctement prédits (top 10): 198
Précision stricte (1ère position): 51.13%
Précision adaptée (1ère position): 55.66%
Précision (top 10): 89.59%
================================================================================
