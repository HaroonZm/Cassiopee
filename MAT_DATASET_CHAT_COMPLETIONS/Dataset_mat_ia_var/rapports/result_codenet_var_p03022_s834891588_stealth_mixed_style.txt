================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:58:14
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
import sys
from functools import reduce
from operator import mul
A = list(map(int, sys.stdin.readline().split()))
P = 998244353
SZ = 1<<N

# Imperatif + fonctionnelle + list comprehensions sauvages

def WHT(s):
    def core(a):
        l = 1
        while l < len(a):
            m = l << 1
            for i in range(0,len(a),m):
                for j in range(l):
                    u,v = a[i+j],a[i+j+l]
                    a[i+j]   = (u+v)%P
                    a[i+j+l] = (u-v)%P
            l <<= 1
    # Effet de bord
    core(s)

inv = lambda x: pow(x, P-2, P)
norm = inv(sum(A)%P)
A = [(z*norm)%P for z in A]
A[0] = (A[0]-1)%P
WHT(A)

# Constructeur style déclaration C
B = [-1 for _ in range(SZ)]
B[0] = SZ-1
WHT(B)

# Funky composition d'ordre supérieur
def combine(u, v): return (inv(u)*v)%P
C = list(map(combine, A, B))
WHT(C)

for ix in range(SZ):
    C[ix] = C[ix]*inv(SZ)%P

for j in range(SZ):
    print((C[j]-C[0])%P)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003567959647625685
    2. '(N' → logprob: -9.000356674194336
    3. '('' → logprob: -9.500356674194336
    4. ''' → logprob: -9.875356674194336
    5. '`' → logprob: -10.500356674194336
    6. '```' → logprob: -10.500356674194336
    7. '("("' → logprob: -11.375356674194336
    8. '()' → logprob: -11.500356674194336
    9. '(input' → logprob: -11.625356674194336
    10. '(
' → logprob: -12.250356674194336

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.032420966774225235
    2. ')' → logprob: -3.7824208736419678
    3. '()' → logprob: -4.782421112060547
    4. '())' → logprob: -7.907421112060547
    5. '(
' → logprob: -9.032421112060547
    6. '```' → logprob: -10.282421112060547
    7. '(

' → logprob: -10.407421112060547
    8. '("("' → logprob: -10.657421112060547
    9. '(()' → logprob: -10.782421112060547
    10. '<|end|>' → logprob: -10.907421112060547

Token 5: 'import' (ID: 561)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31470787525177
    2. 'if' → logprob: -2.1897077560424805
    3. 'i' → logprob: -3.3147077560424805
    4. 'a' → logprob: -3.6897077560424805
    5. 's' → logprob: -3.9397077560424805
    6. 'x' → logprob: -4.3147077560424805
    7. '*' → logprob: -4.8147077560424805
    8. 'f' → logprob: -4.9397077560424805
    9. '`' → logprob: -4.9397077560424805
    10. ')' → logprob: -4.9397077560424805

Token 6: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.6569812297821045
    2. ' ' → logprob: -0.9069812297821045
    3. ' math' → logprob: -3.0319812297821045
    4. ' numpy' → logprob: -3.7819812297821045
    5. '_' → logprob: -5.406981468200684
    6. ' os' → logprob: -7.531981468200684
    7. ' random' → logprob: -7.781981468200684
    8. ' space' → logprob: -8.531981468200684
    9. 'sys' → logprob: -8.656981468200684
    10. 'numpy' → logprob: -9.031981468200684

Token 7: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.049383990466594696
    2. '
' → logprob: -3.4243838787078857
    3. 'newline' → logprob: -5.174384117126465
    4. '\' → logprob: -5.924384117126465
    5. '.' → logprob: -6.174384117126465
    6. '.readline' → logprob: -6.674384117126465
    7. '' → logprob: -7.549384117126465
    8. '  
' → logprob: -7.799384117126465
    9. 'sys' → logprob: -8.049384117126465
    10. '```' → logprob: -8.049384117126465

Token 8: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5840857028961182
    2. '\n' → logprob: -2.084085702896118
    3. 'sys' → logprob: -2.334085702896118
    4. 'print' → logprob: -3.209085702896118
    5. '.stdout' → logprob: -3.209085702896118
    6. '.readline' → logprob: -3.334085702896118
    7. 'import' → logprob: -3.959085702896118
    8. '
' → logprob: -4.459085464477539
    9. 'stdout' → logprob: -4.584085464477539
    10. '.stdin' → logprob: -4.584085464477539

Token 9: ' functools' (ID: 142636)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.5958845019340515
    2. ' collections' → logprob: -1.4708845615386963
    3. ' sys' → logprob: -2.0958845615386963
    4. 'collections' → logprob: -3.7208845615386963
    5. ' itertools' → logprob: -3.7208845615386963
    6. ' os' → logprob: -3.8458845615386963
    7. 'sys' → logprob: -4.095884323120117
    8. 'math' → logprob: -5.470884323120117
    9. 'os' → logprob: -5.595884323120117
    10. ' io' → logprob: -7.095884323120117

Token 10: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0824696347117424
    2. 'import' → logprob: -2.5824697017669678
    3. '.' → logprob: -6.832469463348389
    4. '_import' → logprob: -6.832469463348389
    5. '_' → logprob: -7.457469463348389
    6. ' .' → logprob: -8.207469940185547
    7. '	import' → logprob: -8.332469940185547
    8. ' ' → logprob: -8.957469940185547
    9. ' _' → logprob: -9.832469940185547
    10. '.import' → logprob: -9.832469940185547

Token 11: ' reduce' (ID: 10389)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.46663200855255127
    2. 'reduce' → logprob: -1.3416320085525513
    3. ' l' → logprob: -2.3416318893432617
    4. 'partial' → logprob: -5.216631889343262
    5. 'wrap' → logprob: -5.341631889343262
    6. ' reduce' → logprob: -6.216631889343262
    7. 'cmp' → logprob: -6.466631889343262
    8. 'cache' → logprob: -6.716631889343262
    9. ' wraps' → logprob: -8.716631889343262
    10. ' partial' → logprob: -9.716631889343262

Token 12: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7195264101028442
    2. 'def' → logprob: -1.7195264101028442
    3. 'for' → logprob: -2.3445262908935547
    4. '\n' → logprob: -2.3445262908935547
    5. 'import' → logprob: -3.3445262908935547
    6. '\' → logprob: -4.094526290893555
    7. '(' → logprob: -4.344526290893555
    8. ' for' → logprob: -4.469526290893555
    9. '```' → logprob: -4.594526290893555
    10. ' 
' → logprob: -5.094526290893555

Token 13: 'from' (ID: 2845)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.969006359577179
    2. 'def' → logprob: -1.7190062999725342
    3. 'result' → logprob: -2.344006299972534
    4. 'data' → logprob: -2.469006299972534
    5. 'from' → logprob: -3.344006299972534
    6. 'print' → logprob: -3.469006299972534
    7. 'a' → logprob: -3.594006299972534
    8. 'res' → logprob: -3.969006299972534
    9. 's' → logprob: -4.094006538391113
    10. 'x' → logprob: -4.594006538391113

Token 14: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.5741775631904602
    2. ' math' → logprob: -1.4491775035858154
    3. ' itertools' → logprob: -1.8241775035858154
    4. 'operator' → logprob: -3.3241775035858154
    5. 'math' → logprob: -5.8241777420043945
    6. ' collections' → logprob: -6.4491777420043945
    7. 'collections' → logprob: -9.449177742004395
    8. '_operator' → logprob: -10.324177742004395
    9. ' ' → logprob: -10.699177742004395
    10. ' functools' → logprob: -10.949177742004395

Token 15: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.18640895187854767
    2. 'import' → logprob: -2.0614089965820312
    3. '.' → logprob: -3.3114089965820312
    4. ' ' → logprob: -5.561408996582031
    5. '<|end|>' → logprob: -6.436408996582031
    6. ' .' → logprob: -7.311408996582031
    7. '<|end|>' → logprob: -9.686408996582031
    8. '	import' → logprob: -9.936408996582031
    9. '.import' → logprob: -11.061408996582031
    10. ')' → logprob: -11.311408996582031

Token 16: ' mul' (ID: 9975)
  Prédit: ' mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mul' → logprob: -0.13797789812088013
    2. 'mul' → logprob: -2.1379778385162354
    3. ' add' → logprob: -5.2629780769348145
    4. '.mul' → logprob: -6.0129780769348145
    5. ' ' → logprob: -7.1379780769348145
    6. 'add' → logprob: -7.5129780769348145
    7. '_mul' → logprob: -7.6379780769348145
    8. '*' → logprob: -8.137977600097656
    9. ' xor' → logprob: -8.387977600097656
    10. ' icon' → logprob: -8.512977600097656

Token 17: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.280815452337265
    2. '(
' → logprob: -2.655815362930298
    3. '*' → logprob: -2.905815362930298
    4. ')' → logprob: -3.155815362930298
    5. '()' → logprob: -4.530815601348877
    6. '#' → logprob: -4.905815601348877
    7. 'def' → logprob: -5.030815601348877
    8. '\' → logprob: -5.280815601348877
    9. 'a' → logprob: -5.405815601348877
    10. 'for' → logprob: -5.405815601348877

Token 18: 'A' (ID: 32)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3232922554016113
    2. '(' → logprob: -1.4482922554016113
    3. 'def' → logprob: -2.0732922554016113
    4. 'print' → logprob: -2.8232922554016113
    5. '(
' → logprob: -3.4482922554016113
    6. 'result' → logprob: -3.4482922554016113
    7. ')' → logprob: -3.6982922554016113
    8. 'n' → logprob: -3.9482922554016113
    9. 'a' → logprob: -4.073292255401611
    10. 'if' → logprob: -4.073292255401611

Token 19: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.007503102067857981
    2. '=' → logprob: -6.257503032684326
    3. '[:]' → logprob: -6.507503032684326
    4. ' =' → logprob: -6.882503032684326
    5. ',' → logprob: -7.632503032684326
    6. '[]' → logprob: -7.882503032684326
    7. '.' → logprob: -7.882503032684326
    8. '[:' → logprob: -8.007503509521484
    9. '[int' → logprob: -8.132503509521484
    10. 'A' → logprob: -8.257503509521484

Token 20: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.26028546690940857
    2. ' list' → logprob: -1.885285496711731
    3. '[' → logprob: -3.5102853775024414
    4. '[list' → logprob: -4.010285377502441
    5. '[]' → logprob: -4.385285377502441
    6. ' [' → logprob: -4.385285377502441
    7. '[int' → logprob: -5.760285377502441
    8. ' []' → logprob: -7.260285377502441
    9. 'map' → logprob: -9.135285377502441
    10. '[len' → logprob: -9.385285377502441

Token 21: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0708712711930275
    2. '(int' → logprob: -3.320871353149414
    3. '(input' → logprob: -3.945871353149414
    4. '(map' → logprob: -5.070871353149414
    5. '(range' → logprob: -5.195871353149414
    6. '(lambda' → logprob: -7.945871353149414
    7. '(eval' → logprob: -8.820871353149414
    8. '(A' → logprob: -9.320871353149414
    9. '(list' → logprob: -9.820871353149414
    10. '(filter' → logprob: -10.195871353149414

Token 22: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0013234536163508892
    2. '(' → logprob: -7.251323223114014
    3. 'int' → logprob: -7.626323223114014
    4. '(lambda' → logprob: -10.126323699951172
    5. '=int' → logprob: -10.501323699951172
    6. ',int' → logprob: -10.751323699951172
    7. '[int' → logprob: -11.251323699951172
    8. '<int' → logprob: -11.251323699951172
    9. '(str' → logprob: -12.376323699951172
    10. ')' → logprob: -13.751323699951172

Token 23: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.09291268140077591
    2. ',input' → logprob: -2.4679126739501953
    3. ',' → logprob: -6.217912673950195
    4. '(' → logprob: -6.342912673950195
    5. 'input' → logprob: -9.092912673950195
    6. '(sys' → logprob: -9.967912673950195
    7. ' ,' → logprob: -11.592912673950195
    8. '=input' → logprob: -11.592912673950195
    9. '))' → logprob: -12.092912673950195
    10. ' input' → logprob: -12.342912673950195

Token 24: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1835283786058426
    2. ' input' → logprob: -1.8085284233093262
    3. 'sys' → logprob: -5.933528423309326
    4. ' sys' → logprob: -6.808528423309326
    5. '(input' → logprob: -11.933527946472168
    6. ',input' → logprob: -12.558527946472168
    7. ' ' → logprob: -12.683527946472168
    8. '(sys' → logprob: -13.058527946472168
    9. '	input' → logprob: -13.683527946472168
    10. 'stdin' → logprob: -13.683527946472168

Token 25: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.001446545124053955
    2. '.' → logprob: -6.626446723937988
    3. '.argv' → logprob: -9.251446723937988
    4. '.input' → logprob: -11.501446723937988
    5. '.stdout' → logprob: -12.001446723937988
    6. '.std' → logprob: -12.626446723937988
    7. '.readline' → logprob: -13.251446723937988
    8. ' .' → logprob: -13.626446723937988
    9. '.st' → logprob: -14.251446723937988
    10. '.stderr' → logprob: -14.501446723937988

Token 26: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.002916499972343445
    2. '.read' → logprob: -6.25291633605957
    3. '.readlines' → logprob: -7.50291633605957
    4. '.' → logprob: -7.75291633605957
    5. '.stdin' → logprob: -12.87791633605957
    6. ' .' → logprob: -13.50291633605957
    7. '.buffer' → logprob: -14.00291633605957
    8. ').' → logprob: -14.25291633605957
    9. 'read' → logprob: -14.87791633605957
    10. ' readline' → logprob: -15.25291633605957

Token 27: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.010671536438167095
    2. '()))' → logprob: -4.635671615600586
    3. '(),' → logprob: -7.635671615600586
    4. '()' → logprob: -8.135671615600586
    5. '))' → logprob: -9.760671615600586
    6. '())' → logprob: -11.010671615600586
    7. '()));' → logprob: -11.010671615600586
    8. ',' → logprob: -11.510671615600586
    9. ' ().' → logprob: -11.635671615600586
    10. '(' → logprob: -11.760671615600586

Token 28: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.6965159177780151
    2. 'strip' → logprob: -0.6965159177780151
    3. 'rstrip' → logprob: -5.696516036987305
    4. 'read' → logprob: -12.571516036987305
    5. ' split' → logprob: -13.696516036987305
    6. ' strip' → logprob: -14.071516036987305
    7. 'spl' → logprob: -16.446516036987305
    8. 'rs' → logprob: -16.821516036987305
    9. '(split' → logprob: -17.446516036987305
    10. ')' → logprob: -18.071516036987305

Token 29: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.03082180581986904
    2. '()))' → logprob: -3.9058218002319336
    3. ')' → logprob: -4.780821800231934
    4. ')))' → logprob: -6.655821800231934
    5. '())' → logprob: -8.655821800231934
    6. '()' → logprob: -8.905821800231934
    7. '(' → logprob: -9.030821800231934
    8. '),' → logprob: -9.780821800231934
    9. ',' → logprob: -10.655821800231934
    10. '())))' → logprob: -11.530821800231934

Token 30: 'P' (ID: 47)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23137851059436798
    2. '
' → logprob: -3.4813785552978516
    3. '*' → logprob: -3.7313785552978516
    4. 'a' → logprob: -4.106378555297852
    5. 'n' → logprob: -4.231378555297852
    6. '[' → logprob: -4.231378555297852
    7. 'for' → logprob: -4.731378555297852
    8. '#' → logprob: -4.856378555297852
    9. 's' → logprob: -4.856378555297852
    10. 'p' → logprob: -4.856378555297852

Token 31: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6715759634971619
    2. ' =' → logprob: -1.2965760231018066
    3. '(' → logprob: -2.6715760231018066
    4. 'R' → logprob: -2.9215760231018066
    5. 'r' → logprob: -3.7965760231018066
    6. '_' → logprob: -4.296576023101807
    7. '[:]' → logprob: -4.421576023101807
    8. '[' → logprob: -4.921576023101807
    9. 'RO' → logprob: -5.171576023101807
    10. '[]' → logprob: -5.171576023101807

Token 32: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8559616804122925
    2. ' ' → logprob: -1.1059616804122925
    3. ' [' → logprob: -2.230961799621582
    4. '[' → logprob: -2.480961799621582
    5. '100' → logprob: -4.105961799621582
    6. 'reduce' → logprob: -4.980961799621582
    7. ' []' → logprob: -5.105961799621582
    8. '[]' → logprob: -5.230961799621582
    9. '0' → logprob: -5.355961799621582
    10. '10' → logprob: -5.980961799621582

Token 33: '998' (ID: 34589)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.8271529674530029
    2. '10' → logprob: -1.077152967453003
    3. '[' → logprob: -2.327152967453003
    4. '1' → logprob: -2.702152967453003
    5. '[]' → logprob: -4.452153205871582
    6. '(' → logprob: -4.577153205871582
    7. '[A' → logprob: -4.952153205871582
    8. '[int' → logprob: -5.577153205871582
    9. 'reduce' → logprob: -5.577153205871582
    10. 'int' → logprob: -5.702153205871582

Token 34: '244' (ID: 25291)
  Prédit: '244'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '244' → logprob: -1.735893965815194e-05
    2. '457' → logprob: -12.250017166137695
    3. '243' → logprob: -12.375017166137695
    4. '_' → logprob: -13.250017166137695
    5. '247' → logprob: -13.375017166137695
    6. '344' → logprob: -14.500017166137695
    7. '374' → logprob: -14.625017166137695
    8. ''' → logprob: -14.875017166137695
    9. '7' → logprob: -15.125017166137695
    10. '444' → logprob: -15.250017166137695

Token 35: '353' (ID: 32996)
  Prédit: '353'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '353' → logprob: -0.005968138575553894
    2. '853' → logprob: -5.13096809387207
    3. '857' → logprob: -10.88096809387207
    4. '357' → logprob: -11.00596809387207
    5. '3' → logprob: -13.63096809387207
    6. '```' → logprob: -14.00596809387207
    7. '7' → logprob: -14.75596809387207
    8. '53' → logprob: -14.88096809387207
    9. 'c' → logprob: -15.75596809387207
    10. '257' → logprob: -15.88096809387207

Token 36: '
' (ID: 198)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.8266348838806152
    2. ' 
' → logprob: -1.7016348838806152
    3. ' ' → logprob: -2.7016348838806152
    4. '\n' → logprob: -2.8266348838806152
    5. '
' → logprob: -2.9516348838806152
    6. '' → logprob: -3.2016348838806152
    7. '\' → logprob: -3.3266348838806152
    8. ')' → logprob: -3.4516348838806152
    9. '<|end|>' → logprob: -3.4516348838806152
    10. '#' → logprob: -3.9516348838806152

Token 37: 'SZ' (ID: 115254)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7261994481086731
    2. 'res' → logprob: -2.4761993885040283
    3. '*' → logprob: -3.1011993885040283
    4. 'def' → logprob: -3.2261993885040283
    5. '\n' → logprob: -3.2261993885040283
    6. ' 
' → logprob: -3.4761993885040283
    7. 'f' → logprob: -3.4761993885040283
    8. '\' → logprob: -3.7261993885040283
    9. 'ans' → logprob: -3.8511993885040283
    10. 'dp' → logprob: -3.9761993885040283

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.43421536684036255
    2. '=' → logprob: -1.0592153072357178
    3. 'A' → logprob: -6.059215545654297
    4. 'I' → logprob: -6.934215545654297
    5. ' ' → logprob: -7.184215545654297
    6. 'O' → logprob: -7.559215545654297
    7. 'E' → logprob: -8.059215545654297
    8. '_' → logprob: -8.559215545654297
    9. 'L' → logprob: -9.309215545654297
    10. '   ' → logprob: -10.059215545654297

Token 39: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.3237925171852112
    2. ' ' → logprob: -2.0737924575805664
    3. 'N' → logprob: -3.4487924575805664
    4. '1' → logprob: -3.4487924575805664
    5. '20' → logprob: -3.5737924575805664
    6. 'len' → logprob: -3.8237924575805664
    7. '100' → logprob: -4.448792457580566
    8. '2' → logprob: -4.948792457580566
    9. '200' → logprob: -5.948792457580566
    10. '3' → logprob: -6.073792457580566

Token 40: '1' (ID: 16)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5661618709564209
    2. '20' → logprob: -2.191161870956421
    3. 'N' → logprob: -2.441161870956421
    4. '1' → logprob: -2.941161870956421
    5. '2' → logprob: -3.191161870956421
    6. 'len' → logprob: -3.441161870956421
    7. '200' → logprob: -3.816161870956421
    8. '100' → logprob: -3.816161870956421
    9. '18' → logprob: -4.066162109375
    10. '3' → logprob: -4.816162109375

Token 41: '<<' (ID: 5354)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07056871801614761
    2. '<|end|>' → logprob: -3.070568799972534
    3. '0' → logprob: -5.195568561553955
    4. ' 
' → logprob: -5.820568561553955
    5. '+' → logprob: -5.820568561553955
    6. '1' → logprob: -5.945568561553955
    7. '*' → logprob: -6.695568561553955
    8. 'for' → logprob: -6.820568561553955
    9. '
' → logprob: -7.445568561553955
    10. ')' → logprob: -7.570568561553955

Token 42: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.18542268872261047
    2. '20' → logprob: -1.810422658920288
    3. '18' → logprob: -5.810422897338867
    4. '17' → logprob: -6.435422897338867
    5. '19' → logprob: -7.560422897338867
    6. '21' → logprob: -7.810422897338867
    7. '22' → logprob: -10.685422897338867
    8. '0' → logprob: -11.060422897338867
    9. '30' → logprob: -11.435422897338867
    10. '10' → logprob: -11.435422897338867

Token 43: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2572892904281616
    2. '<|end|>' → logprob: -1.3822892904281616
    3. '[' → logprob: -1.5072892904281616
    4. '*' → logprob: -1.8822892904281616
    5. '[
' → logprob: -3.757289409637451
    6. ')' → logprob: -4.632289409637451
    7. '```' → logprob: -4.757289409637451
    8. ' ' → logprob: -4.882289409637451
    9. '<|end|>' → logprob: -4.882289409637451
    10. ':' → logprob: -5.507289409637451

Token 44: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1540144830942154
    2. ' dp' → logprob: -3.0290145874023438
    3. 'DP' → logprob: -3.9040145874023438
    4. 'd' → logprob: -4.654014587402344
    5. 'f' → logprob: -4.779014587402344
    6. 'count' → logprob: -5.029014587402344
    7. '(' → logprob: -5.154014587402344
    8. '_' → logprob: -5.404014587402344
    9. 'a' → logprob: -5.404014587402344
    10. ' DP' → logprob: -5.654014587402344

Token 45: ' Imper' (ID: 42716)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.5240328907966614
    2. 'dp' → logprob: -1.0240328311920166
    3. ' for' → logprob: -4.024033069610596
    4. ' f' → logprob: -4.899033069610596
    5. 'for' → logprob: -4.899033069610596
    6. ' cnt' → logprob: -5.649033069610596
    7. 'f' → logprob: -6.149033069610596
    8. 'cnt' → logprob: -6.399033069610596
    9. 'count' → logprob: -7.149033069610596
    10. 'def' → logprob: -7.149033069610596

Token 46: 'atif' (ID: 23984)
  Prédit: 'fect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fect' → logprob: -0.1298108696937561
    2. 'ative' → logprob: -2.6298108100891113
    3. 'f' → logprob: -3.5048108100891113
    4. 'ate' → logprob: -5.504810810089111
    5. 'mut' → logprob: -5.754810810089111
    6. 'at' → logprob: -6.004810810089111
    7. '```' → logprob: -6.004810810089111
    8. 'mutable' → logprob: -6.629810810089111
    9. 'ator' → logprob: -6.754810810089111
    10. 'm' → logprob: -6.879810810089111

Token 47: ' +' (ID: 659)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7620033025741577
    2. ' for' → logprob: -0.8870033025741577
    3. ' ' → logprob: -2.7620034217834473
    4. '_' → logprob: -3.7620034217834473
    5. 'f' → logprob: -5.262003421783447
    6. ' code' → logprob: -5.512003421783447
    7. ':' → logprob: -6.012003421783447
    8. '
' → logprob: -6.012003421783447
    9. ',' → logprob: -6.387003421783447
    10. 's' → logprob: -6.387003421783447

Token 48: ' fonction' (ID: 17610)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.26663699746131897
    2. ' for' → logprob: -1.6416369676589966
    3. 'dp' → logprob: -4.266636848449707
    4. 'def' → logprob: -4.766636848449707
    5. ' ' → logprob: -6.016636848449707
    6. ')' → logprob: -6.391636848449707
    7. ' dp' → logprob: -6.391636848449707
    8. ' def' → logprob: -7.016636848449707
    9. 's' → logprob: -7.329136848449707
    10. ' =' → logprob: -7.329136848449707

Token 49: 'nelle' (ID: 30805)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5787230730056763
    2. 's' → logprob: -1.8287230730056763
    3. 'for' → logprob: -2.9537229537963867
    4. '_' → logprob: -3.4537229537963867
    5. ':' → logprob: -3.5787229537963867
    6. '=' → logprob: -3.8287229537963867
    7. 'n' → logprob: -4.078722953796387
    8. 'al' → logprob: -4.203722953796387
    9. 'f' → logprob: -4.453722953796387
    10. 'a' → logprob: -4.578722953796387

Token 50: ' +' (ID: 659)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.04912819713354111
    2. 'for' → logprob: -4.54912805557251
    3. 'DP' → logprob: -4.67412805557251
    4. 'f' → logprob: -4.79912805557251
    5. 'res' → logprob: -5.54912805557251
    6. 'def' → logprob: -5.54912805557251
    7. ' for' → logprob: -6.29912805557251
    8. ' dp' → logprob: -6.54912805557251
    9. 'result' → logprob: -6.79912805557251
    10. 's' → logprob: -7.42412805557251

Token 51: ' list' (ID: 1562)
  Prédit: ' memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' memo' → logprob: -2.324885845184326
    2. 'memo' → logprob: -2.324885845184326
    3. ' recursion' → logprob: -2.324885845184326
    4. ' recursive' → logprob: -2.574885845184326
    5. 'python' → logprob: -2.574885845184326
    6. 'rec' → logprob: -2.699885845184326
    7. ' python' → logprob: -2.699885845184326
    8. ' bit' → logprob: -2.949885845184326
    9. 'r' → logprob: -3.074885845184326
    10. '```' → logprob: -3.199885845184326

Token 52: ' compreh' (ID: 13576)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.3519097566604614
    2. '_com' → logprob: -1.8519097566604614
    3. '(range' → logprob: -2.351909637451172
    4. 'com' → logprob: -2.726909637451172
    5. 'def' → logprob: -2.726909637451172
    6. 'al' → logprob: -2.851909637451172
    7. '_' → logprob: -3.101909637451172
    8. ' comprehension' → logprob: -3.101909637451172
    9. 'range' → logprob: -3.476909637451172
    10. 'es' → logprob: -3.976909637451172

Token 53: 'ensions' (ID: 7401)
  Prédit: 'ension'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ension' → logprob: -0.18116196990013123
    2. 'ensions' → logprob: -1.8061619997024536
    3. 'ensive' → logprob: -7.306161880493164
    4. 'ens' → logprob: -8.181161880493164
    5. 's' → logprob: -8.306161880493164
    6. 'ention' → logprob: -9.806161880493164
    7. 'entions' → logprob: -10.181161880493164
    8. 'ansion' → logprob: -10.806161880493164
    9. '```' → logprob: -10.931161880493164
    10. 'ensie' → logprob: -11.306161880493164

Token 54: ' sauv' (ID: 98569)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.12669424712657928
    2. 'f' → logprob: -3.6266942024230957
    3. 'res' → logprob: -4.126694202423096
    4. 'DP' → logprob: -4.251694202423096
    5. 'for' → logprob: -4.501694202423096
    6. 'result' → logprob: -4.751694202423096
    7. 'ans' → logprob: -4.876694202423096
    8. 'count' → logprob: -5.751694202423096
    9. 'prod' → logprob: -5.751694202423096
    10. 'B' → logprob: -6.251694202423096

Token 55: 'ages' (ID: 1461)
  Prédit: 'iv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'iv' → logprob: -0.06814474612474442
    2. 'ivant' → logprob: -3.5681447982788086
    3. 'ive' → logprob: -3.8181447982788086
    4. 'e' → logprob: -5.193144798278809
    5. 'ives' → logprob: -6.068144798278809
    6. 'i' → logprob: -6.318144798278809
    7. 'ivée' → logprob: -7.068144798278809
    8. '```' → logprob: -7.318144798278809
    9. 'ie' → logprob: -7.443144798278809
    10. '{' → logprob: -8.068144798278809

Token 56: '

' (ID: 279)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2960977852344513
    2. 'res' → logprob: -2.796097755432129
    3. 'f' → logprob: -3.046097755432129
    4. 'ans' → logprob: -4.046097755432129
    5. 'result' → logprob: -4.046097755432129
    6. 'prod' → logprob: -4.296097755432129
    7. 'DP' → logprob: -4.421097755432129
    8. 'F' → logprob: -4.671097755432129
    9. 'count' → logprob: -4.796097755432129
    10. 'B' → logprob: -5.296097755432129

Token 57: 'def' (ID: 1314)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1814042180776596
    2. 'res' → logprob: -3.3064041137695312
    3. 'f' → logprob: -3.4314041137695312
    4. 'prod' → logprob: -3.8064041137695312
    5. 'ans' → logprob: -4.556404113769531
    6. 'F' → logprob: -4.931404113769531
    7. 'DP' → logprob: -5.056404113769531
    8. 'count' → logprob: -5.306404113769531
    9. 'fact' → logprob: -5.306404113769531
    10. 'result' → logprob: -5.431404113769531

Token 58: ' W' (ID: 486)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.4311385154724121
    2. ' solve' → logprob: -2.431138515472412
    3. ' count' → logprob: -2.931138515472412
    4. ' ' → logprob: -3.431138515472412
    5. ' factorial' → logprob: -3.556138515472412
    6. ' prod' → logprob: -3.681138515472412
    7. ' factor' → logprob: -3.681138515472412
    8. ' pow' → logprob: -4.181138515472412
    9. ' comb' → logprob: -4.181138515472412
    10. ' main' → logprob: -4.431138515472412

Token 59: 'HT' (ID: 4145)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -1.0594966411590576
    2. '(n' → logprob: -2.0594966411590576
    3. 'eight' → logprob: -2.4344966411590576
    4. 'n' → logprob: -2.6844966411590576
    5. 'ht' → logprob: -3.0594966411590576
    6. 'HT' → logprob: -3.4344966411590576
    7. 'el' → logprob: -3.5594966411590576
    8. 'alk' → logprob: -3.5594966411590576
    9. 'N' → logprob: -3.8094966411590576
    10. 'h' → logprob: -3.8094966411590576

Token 60: '(s' (ID: 1858)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.6726623773574829
    2. '(' → logprob: -2.0476622581481934
    3. '(f' → logprob: -2.1726622581481934
    4. '(arr' → logprob: -2.2976622581481934
    5. '(a' → logprob: -2.6726622581481934
    6. '(x' → logprob: -3.0476622581481934
    7. '(lst' → logprob: -4.172662258148193
    8. '(array' → logprob: -5.297662258148193
    9. '(S' → logprob: -6.297662258148193
    10. ' (' → logprob: -6.672662258148193

Token 61: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018002435564994812
    2. ')' → logprob: -4.518002510070801
    3. ',' → logprob: -5.768002510070801
    4. 'e' → logprob: -6.143002510070801
    5. ' ):' → logprob: -8.2680025100708
    6. 'z' → logprob: -8.3930025100708
    7. '[]):' → logprob: -8.6430025100708
    8. '):
' → logprob: -8.7680025100708
    9. '):
' → logprob: -9.0180025100708
    10. ')):' → logprob: -9.0180025100708

Token 62: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28824281692504883
    2. 'n' → logprob: -1.7882428169250488
    3. ' n' → logprob: -2.538242816925049
    4. '	n' → logprob: -6.663242816925049
    5. ' if' → logprob: -6.788242816925049
    6. ' for' → logprob: -7.038242816925049
    7. ' ' → logprob: -8.28824234008789
    8. '  ' → logprob: -9.16324234008789
    9. 'for' → logprob: -9.41324234008789
    10. 'L' → logprob: -9.53824234008789

Token 63: ' def' (ID: 1056)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.7725101113319397
    2. 'n' → logprob: -1.522510051727295
    3. ' if' → logprob: -2.147510051727295
    4. '   ' → logprob: -2.272510051727295
    5. ' for' → logprob: -3.147510051727295
    6. 'if' → logprob: -3.272510051727295
    7. 'for' → logprob: -4.272510051727295
    8. ' ' → logprob: -7.022510051727295
    9. ' length' → logprob: -7.272510051727295
    10. 'l' → logprob: -7.272510051727295

Token 64: ' core' (ID: 10089)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.5170296430587769
    2. ' W' → logprob: -2.1420297622680664
    3. 'W' → logprob: -2.2670297622680664
    4. 'f' → logprob: -2.6420297622680664
    5. ' w' → logprob: -3.7670297622680664
    6. ' s' → logprob: -4.517029762268066
    7. ' step' → logprob: -4.642029762268066
    8. ' h' → logprob: -4.767029762268066
    9. ' inner' → logprob: -4.767029762268066
    10. '_w' → logprob: -5.267029762268066

Token 65: '(a' (ID: 6271)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.09789638221263885
    2. '(x' → logprob: -3.0978963375091553
    3. '(i' → logprob: -3.5978963375091553
    4. '(a' → logprob: -4.597896575927734
    5. '(f' → logprob: -5.722896575927734
    6. '(arr' → logprob: -6.347896575927734
    7. '(v' → logprob: -7.472896575927734
    8. '(k' → logprob: -7.597896575927734
    9. '(S' → logprob: -7.722896575927734
    10. '(l' → logprob: -7.722896575927734

Token 66: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11997095495462418
    2. '):' → logprob: -2.3699710369110107
    3. ',i' → logprob: -5.119970798492432
    4. ',a' → logprob: -5.744970798492432
    5. ',b' → logprob: -5.869970798492432
    6. ',n' → logprob: -5.994970798492432
    7. ',f' → logprob: -6.619970798492432
    8. ',k' → logprob: -6.869970798492432
    9. '):
' → logprob: -7.869970798492432
    10. ',x' → logprob: -8.11997127532959

Token 67: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21829013526439667
    2. ' n' → logprob: -2.343290090560913
    3. ' for' → logprob: -2.718290090560913
    4. ' if' → logprob: -3.593290090560913
    5. 'n' → logprob: -5.468290328979492
    6. '   ' → logprob: -7.093290328979492
    7. '      ' → logprob: -8.218290328979492
    8. '    ' → logprob: -8.343290328979492
    9. '     ' → logprob: -8.593290328979492
    10. ' ' → logprob: -8.718290328979492

Token 68: ' l' (ID: 305)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.19362731277942657
    2. 'n' → logprob: -1.8186273574829102
    3. ' for' → logprob: -4.81862735748291
    4. ' if' → logprob: -6.69362735748291
    5. 'for' → logprob: -6.69362735748291
    6. '       ' → logprob: -7.56862735748291
    7. ' l' → logprob: -7.81862735748291
    8. '   ' → logprob: -7.94362735748291
    9. ' L' → logprob: -7.94362735748291
    10. ' length' → logprob: -8.31862735748291

Token 69: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5729382634162903
    2. ' =' → logprob: -1.0729382038116455
    3. 'en' → logprob: -2.5729382038116455
    4. '=len' → logprob: -4.947938442230225
    5. '   ' → logprob: -5.572938442230225
    6. '=n' → logprob: -5.822938442230225
    7. 'n' → logprob: -6.572938442230225
    8. '=a' → logprob: -6.822938442230225
    9. '=en' → logprob: -7.697938442230225
    10. '=int' → logprob: -8.197937965393066

Token 70: ' ' (ID: 220)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.07936493307352066
    2. ' len' → logprob: -2.5793650150299072
    3. '(len' → logprob: -8.329364776611328
    4. '1' → logprob: -9.579364776611328
    5. '=len' → logprob: -9.704364776611328
    6. 'en' → logprob: -10.079364776611328
    7. ' ' → logprob: -10.829364776611328
    8. '	len' → logprob: -11.329364776611328
    9. '[len' → logprob: -11.704364776611328
    10. '0' → logprob: -12.079364776611328

Token 71: '1' (ID: 16)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0004285235481802374
    2. '(len' → logprob: -8.750428199768066
    3. ' len' → logprob: -9.250428199768066
    4. '1' → logprob: -9.625428199768066
    5. '0' → logprob: -9.750428199768066
    6. '[len' → logprob: -11.000428199768066
    7. 'a' → logprob: -11.500428199768066
    8. '=len' → logprob: -11.750428199768066
    9. '2' → logprob: -12.500428199768066
    10. '<len' → logprob: -12.875428199768066

Token 72: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.010379576124250889
    2. 'while' → logprob: -4.760379791259766
    3. ' while' → logprob: -7.385379791259766
    4. '
' → logprob: -7.885379791259766
    5. '<|end|>' → logprob: -8.135379791259766
    6. ' 
' → logprob: -8.760379791259766
    7. '<<' → logprob: -8.885379791259766
    8. '	while' → logprob: -9.635379791259766
    9. '       ' → logprob: -10.635379791259766
    10. '<|end|>' → logprob: -10.885379791259766

Token 73: '       ' (ID: 309)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6298205852508545
    2. '
' → logprob: -1.0048205852508545
    3. ' while' → logprob: -2.6298205852508545
    4. '	while' → logprob: -3.8798205852508545
    5. '<|end|>' → logprob: -5.379820823669434
    6. '<<' → logprob: -6.629820823669434
    7. '   ' → logprob: -7.254820823669434
    8. '
' → logprob: -7.754820823669434
    9. '       ' → logprob: -7.879820823669434
    10. ' 
' → logprob: -8.504820823669434

Token 74: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.08092689514160156
    2. ' while' → logprob: -2.5809268951416016
    3. '       ' → logprob: -6.955926895141602
    4. '	while' → logprob: -6.955926895141602
    5. '
' → logprob: -10.205926895141602
    6. '   ' → logprob: -10.455926895141602
    7. 'While' → logprob: -11.205926895141602
    8. ' ' → logprob: -11.455926895141602
    9. '        ' → logprob: -12.080926895141602
    10. '    ' → logprob: -12.330926895141602

Token 75: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.16033288836479187
    2. ' l' → logprob: -1.9103329181671143
    3. ' ' → logprob: -9.535332679748535
    4. '	l' → logprob: -11.535332679748535
    5. '2' → logprob: -11.910332679748535
    6. '   ' → logprob: -12.160332679748535
    7. ' ' → logprob: -12.160332679748535
    8. '  ' → logprob: -13.347832679748535
    9. '    ' → logprob: -14.160332679748535
    10. '```' → logprob: -14.222832679748535

Token 76: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.0019005554495379329
    2. ' <' → logprob: -6.376900672912598
    3. '<len' → logprob: -9.001900672912598
    4. '<n' → logprob: -10.751900672912598
    5. '<size' → logprob: -10.751900672912598
    6. '<<' → logprob: -11.626900672912598
    7. '<N' → logprob: -11.876900672912598
    8. '<=' → logprob: -12.251900672912598
    9. '<s' → logprob: -13.376900672912598
    10. '<S' → logprob: -13.376900672912598

Token 77: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.08596889674663544
    2. 'SZ' → logprob: -2.5859689712524414
    3. ' len' → logprob: -5.335968971252441
    4. ' SZ' → logprob: -6.960968971252441
    5. 'sz' → logprob: -7.335968971252441
    6. '(len' → logprob: -8.585968971252441
    7. 'a' → logprob: -8.710968971252441
    8. 's' → logprob: -9.210968971252441
    9. '=len' → logprob: -10.585968971252441
    10. '_SZ' → logprob: -10.710968971252441

Token 78: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0003221150254830718
    2. 'a' → logprob: -8.125322341918945
    3. '(' → logprob: -11.125322341918945
    4. '(s' → logprob: -11.500322341918945
    5. ' a' → logprob: -14.125322341918945
    6. 's' → logprob: -15.875322341918945
    7. '(A' → logprob: -16.875322341918945
    8. ' (' → logprob: -16.875322341918945
    9. ')a' → logprob: -17.250322341918945
    10. '(
' → logprob: -17.875322341918945

Token 79: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.028111685067415237
    2. '):
' → logprob: -3.653111696243286
    3. ' ):' → logprob: -6.653111457824707
    4. ')' → logprob: -8.028111457824707
    5. '):
' → logprob: -9.278111457824707
    6. ':' → logprob: -9.778111457824707
    7. ' ):
' → logprob: -10.778111457824707
    8. '):

' → logprob: -11.528111457824707
    9. '   ' → logprob: -12.903111457824707
    10. ' ' → logprob: -13.278111457824707

Token 80: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03212029114365578
    2. ' for' → logprob: -3.7821202278137207
    3. 'for' → logprob: -5.532120227813721
    4. 'u' → logprob: -6.532120227813721
    5. 'n' → logprob: -7.407120227813721
    6. '	       ' → logprob: -7.657120227813721
    7. ':' → logprob: -7.907120227813721
    8. ' ' → logprob: -7.907120227813721
    9. '   ' → logprob: -8.032120704650879
    10. '2' → logprob: -8.907120704650879

Token 81: ' m' (ID: 284)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.44356250762939453
    2. 'for' → logprob: -1.0685625076293945
    3. 'i' → logprob: -5.1935625076293945
    4. '           ' → logprob: -5.3185625076293945
    5. ' i' → logprob: -6.5685625076293945
    6. '   ' → logprob: -6.5685625076293945
    7. 'k' → logprob: -7.5685625076293945
    8. ' ' → logprob: -8.318562507629395
    9. 'r' → logprob: -8.818562507629395
    10. '    ' → logprob: -9.068562507629395

Token 82: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1610325127840042
    2. ' =' → logprob: -1.9110325574874878
    3. '=l' → logprob: -8.161032676696777
    4. '=len' → logprob: -8.661032676696777
    5. '   ' → logprob: -9.036032676696777
    6. '=int' → logprob: -9.411032676696777
    7. '=m' → logprob: -9.786032676696777
    8. '=a' → logprob: -10.411032676696777
    9. '=i' → logprob: -11.661032676696777
    10. 'a' → logprob: -11.661032676696777

Token 83: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.14299198985099792
    2. ' l' → logprob: -2.0179920196533203
    3. '[' → logprob: -9.51799201965332
    4. ' ' → logprob: -9.64299201965332
    5. '2' → logprob: -9.76799201965332
    6. 'len' → logprob: -10.64299201965332
    7. '0' → logprob: -10.76799201965332
    8. '[l' → logprob: -11.26799201965332
    9. ' [' → logprob: -11.64299201965332
    10. 'm' → logprob: -11.89299201965332

Token 84: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.010930033400654793
    2. '*' → logprob: -4.635930061340332
    3. ' <<' → logprob: -6.760930061340332
    4. ' *' → logprob: -11.885930061340332
    5. '2' → logprob: -12.510930061340332
    6. ' <<=' → logprob: -13.010930061340332
    7. '*l' → logprob: -14.260930061340332
    8. ' ' → logprob: -14.510930061340332
    9. '1' → logprob: -15.260930061340332
    10. '>>' → logprob: -15.635930061340332

Token 85: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.623244553338736e-05
    2. ' ' → logprob: -9.625065803527832
    3. '   ' → logprob: -16.50006675720215
    4. '```' → logprob: -17.37506675720215
    5. '  ' → logprob: -17.75006675720215
    6. '2' → logprob: -18.00006675720215
    7. ' ' → logprob: -18.37506675720215
    8. '' → logprob: -18.62506675720215
    9. '0' → logprob: -19.25006675720215
    10. '	' → logprob: -19.50006675720215

Token 86: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.259079363080673e-05
    2. ' ' → logprob: -11.375012397766113
    3. '   ' → logprob: -15.750012397766113
    4. '0' → logprob: -15.750012397766113
    5. '2' → logprob: -15.937512397766113
    6. '' → logprob: -16.00001335144043
    7. '```' → logprob: -16.43751335144043
    8. '     ' → logprob: -16.93751335144043
    9. '  ' → logprob: -17.43751335144043
    10. '4' → logprob: -17.81251335144043

Token 87: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00044496997725218534
    2. '
' → logprob: -8.750445365905762
    3. 'for' → logprob: -9.375445365905762
    4. ' for' → logprob: -9.500445365905762
    5. '       ' → logprob: -9.750445365905762
    6. ',' → logprob: -10.750445365905762
    7. 'a' → logprob: -11.250445365905762
    8. '            
' → logprob: -12.375445365905762
    9. '<|end|>' → logprob: -12.500445365905762
    10. '               ' → logprob: -12.625445365905762

Token 88: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005102002993226051
    2. 'for' → logprob: -5.755102157592773
    3. '       ' → logprob: -6.630102157592773
    4. ' for' → logprob: -8.130102157592773
    5. '
' → logprob: -8.505102157592773
    6. '<|end|>' → logprob: -10.505102157592773
    7. 'a' → logprob: -11.005102157592773
    8. '   ' → logprob: -11.380102157592773
    9. ',' → logprob: -12.005102157592773
    10. '               ' → logprob: -12.130102157592773

Token 89: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03739655390381813
    2. '           ' → logprob: -3.7873966693878174
    3. ' for' → logprob: -4.287396430969238
    4. 'i' → logprob: -8.662396430969238
    5. 'b' → logprob: -9.537396430969238
    6. 'a' → logprob: -10.037396430969238
    7. '       ' → logprob: -11.912396430969238
    8. '	for' → logprob: -12.912396430969238
    9. '   ' → logprob: -13.162396430969238
    10. 'tmp' → logprob: -13.412396430969238

Token 90: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.28124743700027466
    2. ' i' → logprob: -1.4062473773956299
    3. 'j' → logprob: -10.28124713897705
    4. 'b' → logprob: -11.03124713897705
    5. '	i' → logprob: -11.28124713897705
    6. ' j' → logprob: -11.78124713897705
    7. ' b' → logprob: -12.03124713897705
    8. ' start' → logprob: -12.28124713897705
    9. 'start' → logprob: -12.28124713897705
    10. '   ' → logprob: -12.53124713897705

Token 91: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03378654271364212
    2. 'in' → logprob: -3.4087865352630615
    3. ' ' → logprob: -9.28378677368164
    4. 'range' → logprob: -11.65878677368164
    5. 'to' → logprob: -11.78378677368164
    6. '	in' → logprob: -12.03378677368164
    7. 'n' → logprob: -12.65878677368164
    8. ',' → logprob: -12.84628677368164
    9. '0' → logprob: -12.97128677368164
    10. '<|end|>' → logprob: -13.09628677368164

Token 92: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2519461214542389
    2. 'range' → logprob: -1.5019460916519165
    3. ' ' → logprob: -12.001946449279785
    4. '	range' → logprob: -12.251946449279785
    5. '0' → logprob: -12.751946449279785
    6. '   ' → logprob: -13.126946449279785
    7. ' xrange' → logprob: -14.376946449279785
    8. '  ' → logprob: -14.876946449279785
    9. '(range' → logprob: -15.626946449279785
    10. '[' → logprob: -17.37694549560547

Token 93: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.727905979962088e-05
    2. '(l' → logprob: -10.00004768371582
    3. '0' → logprob: -13.50004768371582
    4. ' (' → logprob: -14.87504768371582
    5. '(
' → logprob: -17.75004768371582
    6. ' ' → logprob: -18.00004768371582
    7. '   ' → logprob: -18.00004768371582
    8. '(m' → logprob: -18.00004768371582
    9. 'l' → logprob: -18.62504768371582
    10. '	' → logprob: -19.62504768371582

Token 94: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007760772947221994
    2. 'l' → logprob: -4.882761001586914
    3. ' ' → logprob: -9.257761001586914
    4. ' l' → logprob: -10.632761001586914
    5. 'len' → logprob: -11.257761001586914
    6. '           ' → logprob: -11.632761001586914
    7. '   ' → logprob: -12.007761001586914
    8. '       ' → logprob: -12.507761001586914
    9. '    ' → logprob: -14.632761001586914
    10. '     ' → logprob: -14.632761001586914

Token 95: ',len' (ID: 73338)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15531733632087708
    2. ',l' → logprob: -2.2803173065185547
    3. ' ,' → logprob: -3.2803173065185547
    4. 'l' → logprob: -6.530317306518555
    5. ',m' → logprob: -7.030317306518555
    6. ' ' → logprob: -7.405317306518555
    7. ' l' → logprob: -7.780317306518555
    8. '0' → logprob: -9.280317306518555
    9. '	l' → logprob: -9.405317306518555
    10. ',len' → logprob: -9.655317306518555

Token 96: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -6.392202976712724e-06
    2. 'a' → logprob: -12.375006675720215
    3. '(' → logprob: -13.625006675720215
    4. ' (' → logprob: -14.250006675720215
    5. '(s' → logprob: -15.750006675720215
    6. '(
' → logprob: -16.7500057220459
    7. '(A' → logprob: -17.2500057220459
    8. '```' → logprob: -17.3750057220459
    9. '   ' → logprob: -17.8750057220459
    10. ' ' → logprob: -18.5000057220459

Token 97: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.11174573004245758
    2. ',' → logprob: -2.611745834350586
    3. ',m' → logprob: -3.611745834350586
    4. ' ,' → logprob: -6.111745834350586
    5. ' ),' → logprob: -6.611745834350586
    6. ',l' → logprob: -6.986745834350586
    7. ',i' → logprob: -7.486745834350586
    8. 'm' → logprob: -9.986745834350586
    9. ')' → logprob: -10.111745834350586
    10. ',),' → logprob: -10.111745834350586

Token 98: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -4.5491004129871726e-05
    2. ' m' → logprob: -10.000045776367188
    3. '   ' → logprob: -17.125045776367188
    4. '	m' → logprob: -18.000045776367188
    5. '    ' → logprob: -18.750045776367188
    6. ' ' → logprob: -19.250045776367188
    7. '           ' → logprob: -19.250045776367188
    8. ')m' → logprob: -21.125045776367188
    9. '```' → logprob: -21.125045776367188
    10. '  ' → logprob: -21.250045776367188

Token 99: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.14524444937705994
    2. '):' → logprob: -2.0202443599700928
    3. ',' → logprob: -7.145244598388672
    4. '):
' → logprob: -7.395244598388672
    5. ')' → logprob: -7.645244598388672
    6. ' ):
' → logprob: -7.770244598388672
    7. ' ):' → logprob: -8.895244598388672
    8. '+' → logprob: -10.395244598388672
    9. '):

' → logprob: -10.895244598388672
    10. ',l' → logprob: -11.270244598388672

Token 100: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07806375622749329
    2. ' for' → logprob: -2.703063726425171
    3. 'for' → logprob: -5.20306396484375
    4. '           ' → logprob: -6.95306396484375
    5. ' ' → logprob: -8.45306396484375
    6. '                ' → logprob: -8.57806396484375
    7. '	           ' → logprob: -8.70306396484375
    8. '		       ' → logprob: -9.07806396484375
    9. ' j' → logprob: -9.32806396484375
    10. '	       ' → logprob: -9.32806396484375

Token 101: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08248203992843628
    2. 'for' (adapté à ' for') → logprob: -2.582482099533081
    3. ' j' → logprob: -5.707481861114502
    4. 'j' → logprob: -8.33248233795166
    5. '               ' → logprob: -11.45748233795166
    6. '   ' → logprob: -12.08248233795166
    7. ' ' → logprob: -12.70748233795166
    8. '    ' → logprob: -13.33248233795166
    9. '                   ' → logprob: -13.83248233795166
    10. '           ' → logprob: -14.20748233795166

Token 102: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.062002088874578476
    2. 'j' → logprob: -2.812002182006836
    3. ' ' → logprob: -11.187002182006836
    4. '	j' → logprob: -11.312002182006836
    5. ' k' → logprob: -13.062002182006836
    6. 'k' → logprob: -13.687002182006836
    7. ' i' → logprob: -13.812002182006836
    8. '   ' → logprob: -14.187002182006836
    9. 'i' → logprob: -14.812002182006836
    10. '    ' → logprob: -14.937002182006836

Token 103: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002959631150588393
    2. 'in' → logprob: -5.877959728240967
    3. ' ' → logprob: -9.377959251403809
    4. '<|end|>' → logprob: -9.752959251403809
    5. '	in' → logprob: -12.877959251403809
    6. '<|end|>' → logprob: -13.252959251403809
    7. '  ' → logprob: -14.252959251403809
    8. ' j' → logprob: -14.252959251403809
    9. 'range' → logprob: -14.252959251403809
    10. 'j' → logprob: -14.252959251403809

Token 104: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2014198750257492
    2. ' range' → logprob: -1.7014198303222656
    3. '(range' → logprob: -13.201419830322266
    4. '	range' → logprob: -13.201419830322266
    5. '0' → logprob: -13.451419830322266
    6. ' ' → logprob: -13.826419830322266
    7. ' xrange' → logprob: -14.951419830322266
    8. '(' → logprob: -16.951419830322266
    9. '   ' → logprob: -17.576419830322266
    10. '[' → logprob: -17.701419830322266

Token 105: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -1.0592268705368042
    2. '(range' → logprob: -1.0592268705368042
    3. 'range' → logprob: -1.8092268705368042
    4. ' range' → logprob: -2.3092269897460938
    5. '(s' → logprob: -3.6842269897460938
    6. '(' → logprob: -4.309226989746094
    7. ' in' → logprob: -5.934226989746094
    8. ' (' → logprob: -7.184226989746094
    9. ',l' → logprob: -7.684226989746094
    10. '(i' → logprob: -8.434226989746094

Token 106: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3158559799194336
    2. '):' → logprob: -1.3158559799194336
    3. ' ):
' → logprob: -6.815855979919434
    4. ' ):' → logprob: -7.565855979919434
    5. ',' → logprob: -7.815855979919434
    6. ':' → logprob: -9.190855979919434
    7. '+' → logprob: -9.440855979919434
    8. '):

' → logprob: -9.690855979919434
    9. '
' → logprob: -10.190855979919434
    10. '+i' → logprob: -10.190855979919434

Token 107: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004213974345475435
    2. ' a' → logprob: -6.129213809967041
    3. 'a' → logprob: -7.129213809967041
    4. '                       ' → logprob: -8.3792142868042
    5. ':' → logprob: -8.7542142868042
    6. '		           ' → logprob: -8.8792142868042
    7. ':
' → logprob: -9.1292142868042
    8. '           ' → logprob: -9.2542142868042
    9. '               ' → logprob: -9.2542142868042
    10. '                  ' → logprob: -9.6292142868042

Token 108: ' u' (ID: 337)
  Prédit: ' u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -1.1870102882385254
    2. ' a' → logprob: -1.3120102882385254
    3. ' x' → logprob: -1.8120102882385254
    4. 'x' → logprob: -2.1870102882385254
    5. 'u' (adapté à ' u') → logprob: -2.4370102882385254
    6. 'a' → logprob: -2.8120102882385254
    7. '                   ' → logprob: -6.812010288238525
    8. '   ' → logprob: -8.312009811401367
    9. 'y' → logprob: -8.687009811401367
    10. ' y' → logprob: -8.812009811401367

Token 109: ',v' (ID: 30680)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05428425967693329
    2. '=' → logprob: -3.0542843341827393
    3. '=a' → logprob: -5.55428409576416
    4. '=u' → logprob: -6.42928409576416
    5. ',' → logprob: -9.42928409576416
    6. '=i' → logprob: -10.42928409576416
    7. ',a' → logprob: -10.67928409576416
    8. '=A' → logprob: -10.80428409576416
    9. ',u' → logprob: -11.55428409576416
    10. '=j' → logprob: -11.92928409576416

Token 110: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.44439399242401123
    2. '=' → logprob: -1.0693939924240112
    3. '=a' → logprob: -4.194394111633301
    4. '=u' → logprob: -7.819394111633301
    5. '=A' → logprob: -10.3193941116333
    6. '=i' → logprob: -10.5693941116333
    7. '=j' → logprob: -11.8193941116333
    8. '=

' → logprob: -12.5693941116333
    9. '=s' → logprob: -12.6943941116333
    10. '=
' → logprob: -13.0693941116333

Token 111: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05492504686117172
    2. ' a' → logprob: -2.929924964904785
    3. '(a' → logprob: -10.179924964904785
    4. '	a' → logprob: -13.429924964904785
    5. ' (' → logprob: -13.429924964904785
    6. ' ' → logprob: -13.679924964904785
    7. 'A' → logprob: -15.742424964904785
    8. ')a' → logprob: -16.3049259185791
    9. '_a' → logprob: -16.6174259185791
    10. '(' → logprob: -16.7424259185791

Token 112: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.000250491953920573
    2. 'i' → logprob: -8.375250816345215
    3. '[' → logprob: -11.500250816345215
    4. '[
' → logprob: -12.000250816345215
    5. '[j' → logprob: -13.000250816345215
    6. ' i' → logprob: -15.250250816345215
    7. '
' → logprob: -15.500250816345215
    8. '{i' → logprob: -15.750250816345215
    9. '(i' → logprob: -16.0002498626709
    10. '[s' → logprob: -16.2502498626709

Token 113: '+j' (ID: 71365)
  Prédit: '+j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+j' → logprob: -0.0018828235333785415
    2. ' +' → logprob: -6.626883029937744
    3. '+' → logprob: -7.501883029937744
    4. '[j' → logprob: -13.251882553100586
    5. 'j' → logprob: -13.376882553100586
    6. ' ' → logprob: -14.751882553100586
    7. ' j' → logprob: -15.501882553100586
    8. '+
' → logprob: -15.751882553100586
    9. ':j' → logprob: -15.751882553100586
    10. ',j' → logprob: -16.001882553100586

Token 114: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0012664210516959429
    2. ']' → logprob: -7.2512664794921875
    3. ' ],' → logprob: -7.6262664794921875
    4. ',' → logprob: -10.251266479492188
    5. ',a' → logprob: -11.876266479492188
    6. '],[' → logprob: -11.876266479492188
    7. 'a' → logprob: -12.126266479492188
    8. ']+' → logprob: -13.126266479492188
    9. ' ' → logprob: -13.501266479492188
    10. ']
' → logprob: -13.751266479492188

Token 115: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03809565305709839
    2. ' a' → logprob: -3.288095712661743
    3. ' ' → logprob: -10.913095474243164
    4. '   ' → logprob: -11.413095474243164
    5. 'u' → logprob: -11.913095474243164
    6. '(a' → logprob: -12.288095474243164
    7. '	a' → logprob: -12.663095474243164
    8. ' u' → logprob: -12.663095474243164
    9. ' (' → logprob: -12.913095474243164
    10. '    ' → logprob: -13.288095474243164

Token 116: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00026538874953985214
    2. 'i' → logprob: -8.250265121459961
    3. '[' → logprob: -13.625265121459961
    4. '[j' → logprob: -13.750265121459961
    5. '[l' → logprob: -14.625265121459961
    6. '   ' → logprob: -14.875265121459961
    7. '```' → logprob: -15.125265121459961
    8. '[
' → logprob: -15.625265121459961
    9. '{i' → logprob: -15.625265121459961
    10. ' i' → logprob: -15.875265121459961

Token 117: '+j' (ID: 71365)
  Prédit: '+j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+j' → logprob: -0.0925646722316742
    2. '+l' → logprob: -2.467564582824707
    3. 'j' → logprob: -5.842564582824707
    4. 'l' → logprob: -7.717564582824707
    5. '+' → logprob: -8.467564582824707
    6. ' +' → logprob: -10.717564582824707
    7. '[j' → logprob: -11.092564582824707
    8. '+m' → logprob: -11.592564582824707
    9. '_j' → logprob: -12.217564582824707
    10. '+
' → logprob: -13.467564582824707

Token 118: '+l' (ID: 187706)
  Prédit: '+l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+l' → logprob: -0.02946082316339016
    2. '+' → logprob: -4.029460906982422
    3. ']+' → logprob: -4.904460906982422
    4. ']' → logprob: -5.654460906982422
    5. ' +' → logprob: -8.779460906982422
    6. 'l' → logprob: -8.779460906982422
    7. '+m' → logprob: -10.904460906982422
    8. '   ' → logprob: -13.654460906982422
    9. '[l' → logprob: -14.279460906982422
    10. ':l' → logprob: -14.529460906982422

Token 119: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0069056409411132336
    2. ']
' → logprob: -5.256905555725098
    3. ' ]' → logprob: -7.256905555725098
    4. ']+' → logprob: -7.506905555725098
    5. '+' → logprob: -9.256905555725098
    6. ']=' → logprob: -10.256905555725098
    7. '])' → logprob: -10.381905555725098
    8. '-' → logprob: -10.631905555725098
    9. ']+=' → logprob: -10.631905555725098
    10. ')' → logprob: -10.756905555725098

Token 120: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.08148854970932007
    2. 'a' → logprob: -2.581488609313965
    3. ' a' → logprob: -6.456488609313965
    4. '           ' → logprob: -7.206488609313965
    5. 'u' → logprob: -9.706488609313965
    6. '               ' → logprob: -9.831488609313965
    7. '
' → logprob: -10.331488609313965
    8. 's' → logprob: -10.456488609313965
    9. '   ' → logprob: -10.456488609313965
    10. 'b' → logprob: -10.706488609313965

Token 121: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2549639642238617
    2. 'a' (adapté à ' a') → logprob: -1.504963994026184
    3. '                   ' → logprob: -5.8799638748168945
    4. '
' → logprob: -9.879963874816895
    5. '	a' → logprob: -10.254963874816895
    6. ' u' → logprob: -10.254963874816895
    7. ' ' → logprob: -10.379963874816895
    8. '           ' → logprob: -10.754963874816895
    9. 'u' → logprob: -11.004963874816895
    10. '   ' → logprob: -11.879963874816895

Token 122: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.286852345103398e-05
    2. 'i' → logprob: -11.000042915344238
    3. '[' → logprob: -11.250042915344238
    4. '[j' → logprob: -11.750042915344238
    5. '[
' → logprob: -12.500042915344238
    6. ' i' → logprob: -15.125042915344238
    7. ' [' → logprob: -15.125042915344238
    8. '```' → logprob: -15.625042915344238
    9. '=' → logprob: -15.750042915344238
    10. 'import' → logprob: -16.125041961669922

Token 123: '+j' (ID: 71365)
  Prédit: '+j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+j' → logprob: -5.9153885558771435e-06
    2. '+' → logprob: -13.000005722045898
    3. '[j' → logprob: -13.375005722045898
    4. '_j' → logprob: -13.750005722045898
    5. '<|end|>' → logprob: -15.000005722045898
    6. 'j' → logprob: -16.0000057220459
    7. ' +' → logprob: -16.2500057220459
    8. '-j' → logprob: -17.0000057220459
    9. '<|end|>' → logprob: -17.0000057220459
    10. '	j' → logprob: -17.2500057220459

Token 124: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5699979066848755
    2. ']' → logprob: -1.5699979066848755
    3. ']=' → logprob: -2.069997787475586
    4. ' =' → logprob: -2.944997787475586
    5. ']+=' → logprob: -4.194997787475586
    6. '],' → logprob: -4.444997787475586
    7. '+=' → logprob: -4.569997787475586
    8. '+' → logprob: -5.569997787475586
    9. '=u' → logprob: -5.944997787475586
    10. ',' → logprob: -6.319997787475586

Token 125: '  ' (ID: 256)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.024717770516872406
    2. '=u' → logprob: -3.7747178077697754
    3. '+=' → logprob: -6.774717807769775
    4. ' =' → logprob: -8.774717330932617
    5. '=(' → logprob: -8.899717330932617
    6. '=v' → logprob: -11.149717330932617
    7. '=

' → logprob: -11.649717330932617
    8. '%=' → logprob: -11.899717330932617
    9. ',u' → logprob: -13.399717330932617
    10. '+' → logprob: -13.649717330932617

Token 126: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' (adapté à ' =') → logprob: -0.03931039199233055
    2. '=u' → logprob: -3.2893104553222656
    3. '=(' → logprob: -6.789310455322266
    4. '=v' → logprob: -10.039310455322266
    5. '+=' → logprob: -10.289310455322266
    6. '=

' → logprob: -10.789310455322266
    7. ',u' → logprob: -11.164310455322266
    8. ' =' → logprob: -11.414310455322266
    9. ',' → logprob: -11.539310455322266
    10. '%=' → logprob: -12.539310455322266

Token 127: ' (' (ID: 350)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.007518603932112455
    2. 'u' → logprob: -5.007518768310547
    3. ' (' → logprob: -7.257518768310547
    4. '(' → logprob: -10.757518768310547
    5. ' u' → logprob: -10.757518768310547
    6. '(v' → logprob: -11.132518768310547
    7. '[u' → logprob: -11.507518768310547
    8. '((' → logprob: -11.882518768310547
    9. ' ' → logprob: -12.507518768310547
    10. '   ' → logprob: -12.507518768310547

Token 128: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.6934157013893127
    2. '(u' → logprob: -0.6934157013893127
    3. ' u' → logprob: -8.818415641784668
    4. ' (' → logprob: -9.318415641784668
    5. '(' → logprob: -11.568415641784668
    6. '[u' → logprob: -11.818415641784668
    7. '
' → logprob: -13.193415641784668
    8. '_u' → logprob: -13.255915641784668
    9. '	u' → logprob: -13.443415641784668
    10. '   ' → logprob: -13.693415641784668

Token 129: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0003391574718989432
    2. ' +' → logprob: -8.00033950805664
    3. '+
' → logprob: -12.62533950805664
    4. '
' → logprob: -16.25033950805664
    5. 'v' → logprob: -16.25033950805664
    6. '+

' → logprob: -17.00033950805664
    7. '%' → logprob: -17.12533950805664
    8. 'plus' → logprob: -17.37533950805664
    9. ' plus' → logprob: -17.62533950805664
    10. '+(' → logprob: -17.75033950805664

Token 130: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0003811025235336274
    2. ' v' → logprob: -7.875380992889404
    3. ' ' → logprob: -15.125381469726562
    4. 'u' → logprob: -15.250381469726562
    5. '(v' → logprob: -16.000381469726562
    6. 'P' → logprob: -16.625381469726562
    7. '	v' → logprob: -16.750381469726562
    8. ')v' → logprob: -16.750381469726562
    9. '                   ' → logprob: -17.375381469726562
    10. 'vq' → logprob: -17.812881469726562

Token 131: ')%' (ID: 57656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005426681134849787
    2. ' )' → logprob: -5.75542688369751
    3. ')%' → logprob: -6.13042688369751
    4. ')&' → logprob: -10.130426406860352
    5. ')a' → logprob: -11.380426406860352
    6. ')>>' → logprob: -12.005426406860352
    7. ')
' → logprob: -12.380426406860352
    8. 'a' → logprob: -13.380426406860352
    9. ' ' → logprob: -13.630426406860352
    10. ')

' → logprob: -13.755426406860352

Token 132: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -1.676292231422849e-05
    2. ' P' → logprob: -11.000017166137695
    3. '>P' → logprob: -18.500017166137695
    4. '\P' → logprob: -19.000017166137695
    5. '	P' → logprob: -19.250017166137695
    6. 'p' → logprob: -19.250017166137695
    7. ' ' → logprob: -19.375017166137695
    8. '
' → logprob: -19.500017166137695
    9. '(P' → logprob: -19.625017166137695
    10. ',P' → logprob: -20.750017166137695

Token 133: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.33705374598503113
    2. '<|end|>' → logprob: -2.0870537757873535
    3. '                   ' → logprob: -2.5870537757873535
    4. 'a' → logprob: -3.2120537757873535
    5. ' 
' → logprob: -3.7120537757873535
    6. '  
' → logprob: -5.2120537757873535
    7. '                    
' → logprob: -5.3370537757873535
    8. ',' → logprob: -6.7120537757873535
    9. '<|end|>' → logprob: -6.7120537757873535
    10. 'v' → logprob: -6.8370537757873535

Token 134: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2080320417881012
    2. 'a' → logprob: -1.7080320119857788
    3. ' a' → logprob: -5.333032131195068
    4. '<|end|>' → logprob: -7.833032131195068
    5. '           ' → logprob: -7.958032131195068
    6. '
' → logprob: -8.58303165435791
    7. '               ' → logprob: -8.58303165435791
    8. 'b' → logprob: -9.33303165435791
    9. '       ' → logprob: -9.33303165435791
    10. 'v' → logprob: -9.33303165435791

Token 135: ' a' (ID: 261)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.010154918767511845
    2. ' (' → logprob: -4.635154724121094
    3. 'u' → logprob: -8.635154724121094
    4. '(' → logprob: -8.885154724121094
    5. '(v' → logprob: -10.135154724121094
    6. '<|end|>' → logprob: -11.135154724121094
    7. '                   ' → logprob: -11.510154724121094
    8. ' ' → logprob: -12.260154724121094
    9. ' u' → logprob: -12.260154724121094
    10. '(s' → logprob: -12.510154724121094

Token 136: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.200166469876422e-06
    2. '[' → logprob: -12.500004768371582
    3. 'i' → logprob: -14.125004768371582
    4. '(i' → logprob: -15.250004768371582
    5. '```' → logprob: -15.750004768371582
    6. '[j' → logprob: -16.0000057220459
    7. '[
' → logprob: -16.6250057220459
    8. '<|end|>' → logprob: -17.2500057220459
    9. '{i' → logprob: -17.6250057220459
    10. ',i' → logprob: -17.8750057220459

Token 137: '+j' (ID: 71365)
  Prédit: '+j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+j' → logprob: -0.00010187433508690447
    2. '[j' → logprob: -9.250102043151855
    3. '_j' → logprob: -12.750102043151855
    4. '+' → logprob: -13.750102043151855
    5. 'j' → logprob: -13.750102043151855
    6. '[' → logprob: -16.62510108947754
    7. 'vj' → logprob: -17.00010108947754
    8. '-j' → logprob: -17.00010108947754
    9. '+l' → logprob: -17.00010108947754
    10. ':j' → logprob: -17.50010108947754

Token 138: '+l' (ID: 187706)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8621905446052551
    2. '=' → logprob: -1.8621904850006104
    3. '  ' → logprob: -2.1121904850006104
    4. '-l' → logprob: -2.1121904850006104
    5. '   ' → logprob: -2.9871904850006104
    6. ' ' → logprob: -3.9871904850006104
    7. ' -' → logprob: -4.1121907234191895
    8. 'l' → logprob: -4.1121907234191895
    9. ' =' → logprob: -4.2371907234191895
    10. ']=' → logprob: -4.2371907234191895

Token 139: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0900626927614212
    2. ' =' → logprob: -2.5900626182556152
    3. ']' → logprob: -4.715062618255615
    4. ']=' → logprob: -6.590062618255615
    5. '  ' → logprob: -8.340063095092773
    6. ')' → logprob: -8.590063095092773
    7. ' =(' → logprob: -9.215063095092773
    8. '   ' → logprob: -9.590063095092773
    9. ']=(' → logprob: -9.840063095092773
    10. '=(' → logprob: -9.965063095092773

Token 140: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3133206069469452
    2. ' =' → logprob: -1.3133206367492676
    3. ' =(' → logprob: -10.18832015991211
    4. '=(' → logprob: -10.81332015991211
    5. ' ' → logprob: -14.68832015991211
    6. '=((' → logprob: -15.68832015991211
    7. '  ' → logprob: -15.81332015991211
    8. '=(-' → logprob: -16.81332015991211
    9. '=int' → logprob: -17.06332015991211
    10. '   ' → logprob: -17.06332015991211

Token 141: ' (' (ID: 350)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.009773443453013897
    2. ' (' → logprob: -4.634773254394531
    3. '(' → logprob: -11.259773254394531
    4. '((' → logprob: -13.509773254394531
    5. ' ' → logprob: -14.009773254394531
    6. '(un' → logprob: -14.759773254394531
    7. '(s' → logprob: -14.884773254394531
    8. '
' → logprob: -15.259773254394531
    9. '(v' → logprob: -15.384773254394531
    10. '   ' → logprob: -15.634773254394531

Token 142: 'u' (ID: 84)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.009723742492496967
    2. 'u' → logprob: -5.134723663330078
    3. ' (' → logprob: -5.634723663330078
    4. '(' → logprob: -9.759723663330078
    5. '((' → logprob: -10.009723663330078
    6. ' u' → logprob: -10.384723663330078
    7. '[u' → logprob: -10.884723663330078
    8. ' ' → logprob: -11.009723663330078
    9. '   ' → logprob: -11.509723663330078
    10. 'P' → logprob: -11.634723663330078

Token 143: '-v' (ID: 9827)
  Prédit: '-v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-v' → logprob: -0.020800774917006493
    2. ' -' → logprob: -3.895800828933716
    3. '-' → logprob: -9.020800590515137
    4. 'v' → logprob: -9.270800590515137
    5. '-j' → logprob: -11.395800590515137
    6. ' ' → logprob: -12.145800590515137
    7. '(v' → logprob: -12.395800590515137
    8. ' v' → logprob: -12.645800590515137
    9. ',v' → logprob: -12.895800590515137
    10. '<v' → logprob: -12.895800590515137

Token 144: ')%' (ID: 57656)
  Prédit: ')%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.0007454255828633904
    2. ')' → logprob: -7.3757452964782715
    3. ' )' → logprob: -9.37574577331543
    4. '+' → logprob: -10.37574577331543
    5. '%' → logprob: -13.25074577331543
    6. ']%' → logprob: -15.37574577331543
    7. ' +' → logprob: -15.50074577331543
    8. '   ' → logprob: -15.62574577331543
    9. 'P' → logprob: -15.87574577331543
    10. ')
' → logprob: -16.62574577331543

Token 145: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -7.896309739408025e-07
    2. ' P' → logprob: -14.250000953674316
    3. ')' → logprob: -17.625
    4. '```' → logprob: -17.625
    5. '<|end|>' → logprob: -18.25
    6. ' ' → logprob: -18.5
    7. '>P' → logprob: -18.75
    8. '`' → logprob: -18.875
    9. '(P' → logprob: -19.125
    10. '   ' → logprob: -19.25

Token 146: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002188329817727208
    2. '                   ' → logprob: -7.252188205718994
    3. '
' → logprob: -7.502188205718994
    4. '               ' → logprob: -7.627188205718994
    5. '       ' → logprob: -9.002188682556152
    6. 'return' → logprob: -9.252188682556152
    7. '   ' → logprob: -10.002188682556152
    8. '		' → logprob: -10.127188682556152
    9. ')' → logprob: -10.752188682556152
    10. '            
' → logprob: -11.127188682556152

Token 147: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01610100269317627
    2. '               ' → logprob: -4.766100883483887
    3. 'return' → logprob: -6.016100883483887
    4. '                   ' → logprob: -6.516100883483887
    5. ' return' → logprob: -6.766100883483887
    6. '       ' → logprob: -7.141100883483887
    7. '
' → logprob: -7.391100883483887
    8. '   ' → logprob: -8.391100883483887
    9. '            
' → logprob: -8.391100883483887
    10. '                    
' → logprob: -9.266100883483887

Token 148: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.11170798540115356
    2. '           ' → logprob: -2.361707925796509
    3. '       ' → logprob: -4.736708164215088
    4. ' l' → logprob: -6.611708164215088
    5. '   ' → logprob: -7.611708164215088
    6. '               ' → logprob: -7.611708164215088
    7. '                   ' → logprob: -8.48670768737793
    8. '	l' → logprob: -9.86170768737793
    9. '          ' → logprob: -10.48670768737793
    10. '      ' → logprob: -11.73670768737793

Token 149: ' <<=' (ID: 134025)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.11837039887905121
    2. '=' → logprob: -2.368370294570923
    3. ' <<=' → logprob: -4.118370532989502
    4. '*=' → logprob: -6.368370532989502
    5. '<' → logprob: -11.493370056152344
    6. '+=' → logprob: -13.493370056152344
    7. '<<<' → logprob: -14.368370056152344
    8. '<=' → logprob: -14.868370056152344
    9. ' =' → logprob: -15.368370056152344
    10. '=<' → logprob: -15.618370056152344

Token 150: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '```' → logprob: -17.500001907348633
    4. '0' → logprob: -18.875001907348633
    5. '2' → logprob: -19.062501907348633
    6. '' → logprob: -19.750001907348633
    7. ' ' → logprob: -20.062501907348633
    8. '１' → logprob: -20.125001907348633
    9. '=' → logprob: -20.375001907348633
    10. '   ' → logprob: -20.562501907348633

Token 151: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '2' → logprob: -18.0625
    4. '0' → logprob: -18.4375
    5. '```' → logprob: -18.5625
    6. '' → logprob: -20.0625
    7. '4' → logprob: -20.25
    8. '１' → logprob: -20.6875
    9. '   ' → logprob: -20.875
    10. ' ' → logprob: -21.125

Token 152: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02360694669187069
    2. '   ' → logprob: -3.898607015609741
    3. '
' → logprob: -6.148606777191162
    4. 'return' → logprob: -7.023606777191162
    5. '           ' → logprob: -11.77360725402832
    6. '
' → logprob: -11.89860725402832
    7. '	return' → logprob: -11.89860725402832
    8. ' return' → logprob: -12.02360725402832
    9. '	' → logprob: -13.14860725402832
    10. 's' → logprob: -14.39860725402832

Token 153: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026028316468000412
    2. '   ' → logprob: -3.7760283946990967
    3. 'return' → logprob: -5.901028156280518
    4. ' return' → logprob: -10.776028633117676
    5. '           ' → logprob: -11.776028633117676
    6. '	return' → logprob: -12.151028633117676
    7. '
' → logprob: -12.276028633117676
    8. '	' → logprob: -13.776028633117676
    9. 's' → logprob: -14.776028633117676
    10. '               ' → logprob: -14.901028633117676

Token 154: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025271326303482056
    2. ' return' → logprob: -5.025271415710449
    3. '	return' → logprob: -5.400271415710449
    4. '
' → logprob: -5.400271415710449
    5. 'return' → logprob: -5.900271415710449
    6. 'a' → logprob: -6.400271415710449
    7. '       ' → logprob: -6.525271415710449
    8. ' a' → logprob: -7.025271415710449
    9. '	a' → logprob: -7.150271415710449
    10. ' ' → logprob: -7.275271415710449

Token 155: ' Eff' (ID: 33330)
  Prédit: 'core'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'core' → logprob: -0.4382782578468323
    2. ' core' → logprob: -1.0632781982421875
    3. 'return' → logprob: -5.3132781982421875
    4. 'a' → logprob: -6.1882781982421875
    5. '   ' → logprob: -6.8132781982421875
    6. ' return' → logprob: -6.8132781982421875
    7. ' a' → logprob: -8.438278198242188
    8. ' ' → logprob: -9.813278198242188
    9. '(core' → logprob: -10.563278198242188
    10. '	core' → logprob: -10.813278198242188

Token 156: 'et' (ID: 292)
  Prédit: 'ect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.03216531127691269
    2. 'ective' → logprob: -4.28216552734375
    3. 'icient' → logprob: -4.40716552734375
    4. 'ector' → logprob: -6.90716552734375
    5. 'ic' → logprob: -7.03216552734375
    6. 'a' → logprob: -7.28216552734375
    7. 'ace' → logprob: -7.28216552734375
    8. 'iciency' → logprob: -8.03216552734375
    9. ' a' → logprob: -8.40716552734375
    10. 'ecta' → logprob: -8.40716552734375

Token 157: ' de' (ID: 334)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2373470515012741
    2. 'a' → logprob: -1.7373470067977905
    3. 's' → logprob: -4.48734712600708
    4. ' ' → logprob: -4.61234712600708
    5. ' s' → logprob: -5.23734712600708
    6. '(a' → logprob: -5.36234712600708
    7. ' core' → logprob: -6.61234712600708
    8. '   ' → logprob: -7.86234712600708
    9. 'core' → logprob: -8.237346649169922
    10. ':' → logprob: -8.737346649169922

Token 158: ' bord' (ID: 26431)
  Prédit: 'core'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'core' → logprob: -0.18820607662200928
    2. ' core' → logprob: -2.313206195831299
    3. 'b' → logprob: -2.813206195831299
    4. ' b' → logprob: -5.188206195831299
    5. 'a' → logprob: -5.688206195831299
    6. 's' → logprob: -6.688206195831299
    7. ' bord' → logprob: -6.813206195831299
    8. 'bord' → logprob: -7.438206195831299
    9. ' a' → logprob: -8.56320571899414
    10. ' ' → logprob: -8.81320571899414

Token 159: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7139304280281067
    2. '
' → logprob: -1.088930368423462
    3. '(a' → logprob: -2.838930368423462
    4. 'a' → logprob: -3.338930368423462
    5. '(' → logprob: -3.713930368423462
    6. '<|end|>' → logprob: -4.213930606842041
    7. ' a' → logprob: -5.213930606842041
    8. ' ' → logprob: -5.463930606842041
    9. ' 
' → logprob: -5.588930606842041
    10. '  
' → logprob: -5.713930606842041

Token 160: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.037780143320560455
    2. ' core' → logprob: -3.4127800464630127
    3. '
' → logprob: -6.537780284881592
    4. 'core' → logprob: -6.537780284881592
    5. '(core' → logprob: -8.162779808044434
    6. ' a' → logprob: -8.287779808044434
    7. ' s' → logprob: -8.537779808044434
    8. 'a' → logprob: -8.662779808044434
    9. 's' → logprob: -9.037779808044434
    10. ' ' → logprob: -9.412779808044434

Token 161: ' core' (ID: 10089)
  Prédit: ' core'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' core' → logprob: -0.17010316252708435
    2. 'core' (adapté à ' core') → logprob: -2.420103073120117
    3. '   ' → logprob: -2.795103073120117
    4. ' a' → logprob: -5.795103073120117
    5. 'a' → logprob: -6.670103073120117
    6. ' s' → logprob: -6.795103073120117
    7. '(core' → logprob: -8.170103073120117
    8. 's' → logprob: -8.670103073120117
    9. ' return' → logprob: -9.295103073120117
    10. ' ' → logprob: -9.295103073120117

Token 162: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00021343429398257285
    2. '(a' → logprob: -8.500213623046875
    3. '(A' → logprob: -11.625213623046875
    4. '(' → logprob: -14.625213623046875
    5. '(S' → logprob: -14.625213623046875
    6. 's' → logprob: -17.875213623046875
    7. '((' → logprob: -18.375213623046875
    8. '(
' → logprob: -19.500213623046875
    9. ' (' → logprob: -19.750213623046875
    10. '(arr' → logprob: -20.250213623046875

Token 163: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006781688891351223
    2. ')
' → logprob: -5.006781578063965
    3. ')return' → logprob: -10.006781578063965
    4. ')s' → logprob: -11.256781578063965
    5. ' )' → logprob: -12.256781578063965
    6. ')
' → logprob: -13.381781578063965
    7. ')

' → logprob: -14.131781578063965
    8. 'return' → logprob: -15.256781578063965
    9. ')#' → logprob: -15.631781578063965
    10. ')a' → logprob: -15.756781578063965

Token 164: 'inv' (ID: 31086)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 165: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06094195321202278
    2. '=' → logprob: -3.3109419345855713
    3. ' =' → logprob: -4.06094217300415
    4. 'P' → logprob: -6.31094217300415
    5. '_P' → logprob: -6.56094217300415
    6. 's' → logprob: -7.56094217300415
    7. '_inv' → logprob: -7.68594217300415
    8. '_=' → logprob: -8.060941696166992
    9. '_sz' → logprob: -9.185941696166992
    10. 'sz' → logprob: -9.560941696166992

Token 166: ' lambda' (ID: 27871)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.01688743568956852
    2. '(pow' → logprob: -5.391887664794922
    3. '998' → logprob: -5.641887664794922
    4. '499' → logprob: -5.641887664794922
    5. '(' → logprob: -7.516887664794922
    6. ' pow' → logprob: -7.766887664794922
    7. '[' → logprob: -8.266887664794922
    8. '799' → logprob: -8.516887664794922
    9. 'P' → logprob: -8.641887664794922
    10. '598' → logprob: -9.266887664794922

Token 167: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.008899010717868805
    2. ' x' → logprob: -4.758899211883545
    3. 'a' → logprob: -8.633898735046387
    4. 'pow' → logprob: -10.133898735046387
    5. 'P' → logprob: -10.508898735046387
    6. 'n' → logprob: -11.133898735046387
    7. '(x' → logprob: -11.633898735046387
    8. 'lambda' → logprob: -11.883898735046387
    9. 'k' → logprob: -12.508898735046387
    10. ' a' → logprob: -13.383898735046387

Token 168: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00037371189682744443
    2. 'pow' → logprob: -8.500373840332031
    3. ' :' → logprob: -9.000373840332031
    4. ':(' → logprob: -10.375373840332031
    5. ':x' → logprob: -12.125373840332031
    6. ',' → logprob: -12.875373840332031
    7. ':p' → logprob: -13.000373840332031
    8. ':
' → logprob: -13.250373840332031
    9. ':P' → logprob: -13.875373840332031
    10. 'p' → logprob: -14.000373840332031

Token 169: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0007110013975761831
    2. ' pow' → logprob: -7.250710964202881
    3. '(pow' → logprob: -13.750711441040039
    4. '_pow' → logprob: -18.00071144104004
    5. 'power' → logprob: -19.50071144104004
    6. 'Pow' → logprob: -19.75071144104004
    7. '   ' → logprob: -20.75071144104004
    8. '.pow' → logprob: -21.37571144104004
    9. 'mod' → logprob: -21.62571144104004
    10. ' ' → logprob: -21.62571144104004

Token 170: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.011106656864285469
    2. '(' → logprob: -4.511106491088867
    3. 'x' → logprob: -9.761106491088867
    4. '(
' → logprob: -14.261106491088867
    5. '<|end|>' → logprob: -15.011106491088867
    6. ',x' → logprob: -15.886106491088867
    7. ' ' → logprob: -17.261106491088867
    8. ' (' → logprob: -17.636106491088867
    9. '```' → logprob: -17.886106491088867
    10. ',' → logprob: -17.886106491088867

Token 171: ',' (ID: 11)
  Prédit: ',P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',P' → logprob: -0.3884384036064148
    2. ',' → logprob: -1.1384384632110596
    3. 'P' → logprob: -6.5134382247924805
    4. ',p' → logprob: -9.63843822479248
    5. ',-' → logprob: -11.76343822479248
    6. ' ,' → logprob: -12.76343822479248
    7. ',
' → logprob: -12.88843822479248
    8. ',v' → logprob: -14.01343822479248
    9. ',%' → logprob: -14.26343822479248
    10. '(P' → logprob: -14.26343822479248

Token 172: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -5.407366916188039e-05
    2. ' P' → logprob: -10.625054359436035
    3. ' ' → logprob: -12.000054359436035
    4. '997' → logprob: -12.125054359436035
    5. '998' → logprob: -12.500054359436035
    6. '<P' → logprob: -12.750054359436035
    7. '(P' → logprob: -12.875054359436035
    8. '-' → logprob: -13.125054359436035
    9. '	P' → logprob: -13.375054359436035
    10. '.P' → logprob: -13.875054359436035

Token 173: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -7.941850526549388e-06
    2. ' -' → logprob: -11.750007629394531
    3. '2' → logprob: -18.62500762939453
    4. '```' → logprob: -19.37500762939453
    5. '−' → logprob: -19.62500762939453
    6. '–' → logprob: -19.62500762939453
    7. '-P' → logprob: -20.50000762939453
    8. '7' → logprob: -20.62500762939453
    9. ' ' → logprob: -21.37500762939453
    10. ')' → logprob: -21.75000762939453

Token 174: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.3557529857498594e-05
    2. '-' → logprob: -10.87502384185791
    3. ' -' → logprob: -14.68752384185791
    4. '```' → logprob: -14.68752384185791
    5. ' ' → logprob: -15.12502384185791
    6. '3' → logprob: -15.18752384185791
    7. '

' → logprob: -15.37502384185791
    8. '
' → logprob: -15.37502384185791
    9. '22' → logprob: -15.37502384185791
    10. 'two' → logprob: -15.56252384185791

Token 175: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0023838533088564873
    2. ' ,' → logprob: -6.252383708953857
    3. ')' → logprob: -8.002384185791016
    4. ',P' → logprob: -9.377384185791016
    5. ',p' → logprob: -10.877384185791016
    6. ',s' → logprob: -13.002384185791016
    7. ',x' → logprob: -13.002384185791016
    8. ',N' → logprob: -13.252384185791016
    9. ',n' → logprob: -13.502384185791016
    10. ',b' → logprob: -13.877384185791016

Token 176: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.00021521867893170565
    2. ' P' → logprob: -8.875215530395508
    3. ')' → logprob: -9.500215530395508
    4. 'x' → logprob: -16.000215530395508
    5. ' ' → logprob: -16.500215530395508
    6. ' )' → logprob: -16.875215530395508
    7. '   ' → logprob: -17.375215530395508
    8. '```' → logprob: -17.750215530395508
    9. '998' → logprob: -17.875215530395508
    10. ')
' → logprob: -18.250215530395508

Token 177: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -14.500000953674316
    3. ')
' → logprob: -17.875
    4. '))' → logprob: -17.875
    5. ')

' → logprob: -18.0
    6. '),' → logprob: -18.5
    7. ')#' → logprob: -19.375
    8. '}' → logprob: -20.0
    9. ')`' → logprob: -20.25
    10. ' ' → logprob: -20.375

Token 178: 'norm' (ID: 30970)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0290510654449463
    2. '#' → logprob: -1.7790510654449463
    3. ')' → logprob: -2.5290510654449463
    4. 'for' → logprob: -2.7790510654449463
    5. '*' → logprob: -3.1540510654449463
    6. 'W' → logprob: -3.4040510654449463
    7. 'res' → logprob: -3.4040510654449463
    8. 'inv' → logprob: -3.7790510654449463
    9. '_' → logprob: -4.279050827026367
    10. 's' → logprob: -4.279050827026367

Token 179: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07998809963464737
    2. '=' → logprob: -2.5799880027770996
    3. 'al' → logprob: -7.3299880027771
    4. '_' → logprob: -8.454988479614258
    5. 's' → logprob: -9.704988479614258
    6. '_factor' → logprob: -10.204988479614258
    7. 'a' → logprob: -10.454988479614258
    8. ' ' → logprob: -11.204988479614258
    9. '   ' → logprob: -11.204988479614258
    10. '_=' → logprob: -11.579988479614258

Token 180: ' inv' (ID: 1827)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.907834529876709
    2. ' lambda' → logprob: -1.157834529876709
    3. 'inv' → logprob: -2.157834529876709
    4. 'pow' → logprob: -2.532834529876709
    5. '(lambda' → logprob: -3.282834529876709
    6. 'SZ' → logprob: -4.282834529876709
    7. ' inv' → logprob: -4.657834529876709
    8. '1' → logprob: -4.907834529876709
    9. ' SZ' → logprob: -5.282834529876709
    10. '(' → logprob: -5.407834529876709

Token 181: '(sum' (ID: 45528)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.02387494035065174
    2. '(' → logprob: -3.7738749980926514
    3. '(s' → logprob: -8.27387523651123
    4. '((' → logprob: -9.14887523651123
    5. '(sz' → logprob: -9.27387523651123
    6. '(len' → logprob: -9.89887523651123
    7. '(
' → logprob: -10.14887523651123
    8. ' (' → logprob: -10.27387523651123
    9. '(N' → logprob: -10.39887523651123
    10. 'SZ' → logprob: -11.89887523651123

Token 182: '(A' (ID: 10706)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0033661695197224617
    2. '(A' → logprob: -6.128365993499756
    3. '(' → logprob: -7.628365993499756
    4. '([' → logprob: -7.878365993499756
    5. '(S' → logprob: -8.878366470336914
    6. 'A' → logprob: -9.503366470336914
    7. '((' → logprob: -10.503366470336914
    8. 's' → logprob: -10.753366470336914
    9. '(a' → logprob: -11.003366470336914
    10. ')' → logprob: -11.253366470336914

Token 183: ')%' (ID: 57656)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.015354543924331665
    2. '(s' → logprob: -4.890354633331299
    3. '(A' → logprob: -5.515354633331299
    4. '(S' → logprob: -6.015354633331299
    5. ')' → logprob: -7.390354633331299
    6. '))
' → logprob: -8.64035415649414
    7. '(' → logprob: -9.14035415649414
    8. ' ))' → logprob: -9.14035415649414
    9. ')))' → logprob: -9.26535415649414
    10. 'A' → logprob: -9.76535415649414

Token 184: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.0005542247672565281
    2. ' P' → logprob: -7.500554084777832
    3. ' ' → logprob: -14.750554084777832
    4. ')' → logprob: -15.375554084777832
    5. '>P' → logprob: -15.875554084777832
    6. '(P' → logprob: -16.12555503845215
    7. '\P' → logprob: -16.12555503845215
    8. '   ' → logprob: -16.62555503845215
    9. '	P' → logprob: -16.87555503845215
    10. '`' → logprob: -16.87555503845215

Token 185: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004605783324223012
    2. '))' → logprob: -8.250460624694824
    3. ' )' → logprob: -8.750460624694824
    4. ')
' → logprob: -11.375460624694824
    5. ')))' → logprob: -11.375460624694824
    6. '*' → logprob: -12.375460624694824
    7. ',' → logprob: -12.875460624694824
    8. '**' → logprob: -13.250460624694824
    9. '*)' → logprob: -13.625460624694824
    10. '),' → logprob: -14.000460624694824

Token 186: 'A' (ID: 32)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5842356085777283
    2. 'S' → logprob: -1.959235668182373
    3. 'W' → logprob: -1.959235668182373
    4. 'A' → logprob: -2.584235668182373
    5. 's' → logprob: -3.709235668182373
    6. 'B' → logprob: -4.209235668182373
    7. '#' → logprob: -4.709235668182373
    8. 'def' → logprob: -4.959235668182373
    9. 'res' → logprob: -5.209235668182373
    10. 'result' → logprob: -5.584235668182373

Token 187: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19059786200523376
    2. ' =' → logprob: -1.8155978918075562
    3. '=[' → logprob: -5.565598011016846
    4. '[:]' → logprob: -5.815598011016846
    5. '=A' → logprob: -6.190598011016846
    6. '[' → logprob: -6.815598011016846
    7. '<|end|>' → logprob: -8.440597534179688
    8. 'A' → logprob: -9.315597534179688
    9. '*' → logprob: -9.440597534179688
    10. ' =[' → logprob: -9.565597534179688

Token 188: ' [(' (ID: 43900)
  Prédit: '[A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[A' → logprob: -0.07557781785726547
    2. '[(' → logprob: -2.825577735900879
    3. ' [' → logprob: -5.325577735900879
    4. '[' → logprob: -5.700577735900879
    5. '[s' → logprob: -5.950577735900879
    6. '[list' → logprob: -6.325577735900879
    7. '[a' → logprob: -7.575577735900879
    8. ' [(' → logprob: -9.075577735900879
    9. 'A' → logprob: -9.075577735900879
    10. 'list' → logprob: -10.075577735900879

Token 189: 'z' (ID: 89)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5781552195549011
    2. 'a' → logprob: -0.8281552195549011
    3. ' x' → logprob: -7.203155040740967
    4. ' a' → logprob: -7.703155040740967
    5. '(a' → logprob: -7.828155040740967
    6. '(x' → logprob: -8.203155517578125
    7. 'i' → logprob: -9.453155517578125
    8. 'v' → logprob: -9.453155517578125
    9. 'ai' → logprob: -10.203155517578125
    10. '   ' → logprob: -10.203155517578125

Token 190: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.11417096108198166
    2. ' *' → logprob: -2.239171028137207
    3. '*z' → logprob: -7.864171028137207
    4. '*w' → logprob: -8.239171028137207
    5. '*n' → logprob: -8.739171028137207
    6. '*s' → logprob: -8.864171028137207
    7. '*N' → logprob: -9.364171028137207
    8. '*p' → logprob: -9.864171028137207
    9. '*A' → logprob: -9.864171028137207
    10. '*num' → logprob: -9.864171028137207

Token 191: 'norm' (ID: 30970)
  Prédit: 'norm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'norm' → logprob: -0.011052416637539864
    2. ' norm' → logprob: -4.51105260848999
    3. '(norm' → logprob: -12.386052131652832
    4. '_norm' → logprob: -15.386052131652832
    5. 'n' → logprob: -16.51105308532715
    6. ' ' → logprob: -17.26105308532715
    7. '
' → logprob: -17.51105308532715
    8. '.norm' → logprob: -17.76105308532715
    9. 'Norm' → logprob: -18.13605308532715
    10. 'pow' → logprob: -18.51105308532715

Token 192: ')%' (ID: 57656)
  Prédit: ')%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.12701000273227692
    2. ')' → logprob: -2.1270101070404053
    3. ' )' → logprob: -9.502010345458984
    4. '%' → logprob: -11.877010345458984
    5. '   ' → logprob: -16.752010345458984
    6. ' %' → logprob: -16.877010345458984
    7. ')>>' → logprob: -17.002010345458984
    8. '%)' → logprob: -17.252010345458984
    9. ')&' → logprob: -17.502010345458984
    10. ')
' → logprob: -17.752010345458984

Token 193: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.00012451570364646614
    2. ' P' → logprob: -9.00012493133545
    3. ' ' → logprob: -15.50012493133545
    4. '>P' → logprob: -15.62512493133545
    5. '`' → logprob: -16.000123977661133
    6. '(P' → logprob: -16.375123977661133
    7. '```' → logprob: -16.500123977661133
    8. 'p' → logprob: -16.625123977661133
    9. '\P' → logprob: -16.875123977661133
    10. '
' → logprob: -17.125123977661133

Token 194: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.010307956486940384
    2. 'for' → logprob: -4.635307788848877
    3. ' ' → logprob: -7.510307788848877
    4. '	for' → logprob: -12.885308265686035
    5. ']' → logprob: -14.260308265686035
    6. ')' → logprob: -14.635308265686035
    7. ' ' → logprob: -15.760308265686035
    8. '<|end|>' → logprob: -15.760308265686035
    9. ' ]' → logprob: -15.885308265686035
    10. '   ' → logprob: -16.13530731201172

Token 195: ' z' (ID: 579)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6931589245796204
    2. ' A' → logprob: -0.6931589245796204
    3. '	A' → logprob: -12.443159103393555
    4. ' ' → logprob: -12.443159103393555
    5. ' z' → logprob: -13.443159103393555
    6. 'z' → logprob: -13.568159103393555
    7. 'a' → logprob: -14.818159103393555
    8. ',A' → logprob: -15.568159103393555
    9. ' ' → logprob: -16.193159103393555
    10. ' a' → logprob: -16.443159103393555

Token 196: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04859963804483414
    2. 'in' → logprob: -3.0485997200012207
    3. 'A' → logprob: -11.798599243164062
    4. ' ' → logprob: -13.423599243164062
    5. 'In' → logprob: -13.423599243164062
    6. 's' → logprob: -14.673599243164062
    7. ' A' → logprob: -14.798599243164062
    8. ',' → logprob: -15.423599243164062
    9. ',A' → logprob: -15.673599243164062
    10. ' ,' → logprob: -16.298599243164062

Token 197: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.014163628220558167
    2. ' A' → logprob: -4.264163494110107
    3. ' ' → logprob: -16.264163970947266
    4. '	A' → logprob: -17.389163970947266
    5. ',A' → logprob: -18.764163970947266
    6. '(A' → logprob: -19.139163970947266
    7. '_A' → logprob: -19.264163970947266
    8. '=A' → logprob: -19.764163970947266
    9. '>A' → logprob: -19.889163970947266
    10. '
' → logprob: -20.014163970947266

Token 198: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008064138819463551
    2. ' ]' → logprob: -7.1258063316345215
    3. ')]' → logprob: -13.50080680847168
    4. ']
' → logprob: -14.62580680847168
    5. ']

' → logprob: -17.25080680847168
    6. ']
' → logprob: -17.62580680847168
    7. '],' → logprob: -17.62580680847168
    8. ' ' → logprob: -18.12580680847168
    9. '()]' → logprob: -18.25080680847168
    10. '`]' → logprob: -18.25080680847168

Token 199: 'A' (ID: 32)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.03190913051366806
    2. '<|end|>' → logprob: -4.281908988952637
    3. '
' → logprob: -4.531908988952637
    4. 'A' → logprob: -6.031908988952637
    5. ')' → logprob: -6.656908988952637
    6. 's' → logprob: -7.531908988952637
    7. 'def' → logprob: -8.281908988952637
    8. '#' → logprob: -8.406908988952637
    9. '  
' → logprob: -8.531908988952637
    10. '^' → logprob: -8.781908988952637

Token 200: '[' (ID: 58)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 201: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00016444525681436062
    2. 'SZ' → logprob: -9.750164031982422
    3. ' ' → logprob: -9.875164031982422
    4. '-' → logprob: -10.500164031982422
    5. '1' → logprob: -11.125164031982422
    6. '(' → logprob: -12.625164031982422
    7. '-S' → logprob: -13.312664031982422
    8. ']' → logprob: -13.750164031982422
    9. ':' → logprob: -14.000164031982422
    10. '
' → logprob: -14.687664031982422

Token 202: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009714908665046096
    2. ']+=' → logprob: -7.62597131729126
    3. ']=' → logprob: -8.250971794128418
    4. ' ]' → logprob: -8.500971794128418
    5. ']-' → logprob: -11.875971794128418
    6. ']=(' → logprob: -12.250971794128418
    7. ']*' → logprob: -12.750971794128418
    8. ']^' → logprob: -14.250971794128418
    9. ']%' → logprob: -14.375971794128418
    10. ']!=' → logprob: -14.500971794128418

Token 203: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 204: ' (' (ID: 350)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4548279643058777
    2. '1' → logprob: -1.2048280239105225
    3. '(' → logprob: -2.8298280239105225
    4. '(P' → logprob: -5.829827785491943
    5. '(A' → logprob: -6.204827785491943
    6. 'P' → logprob: -7.704827785491943
    7. '(norm' → logprob: -7.829827785491943
    8. ' (' → logprob: -8.079828262329102
    9. '(sum' → logprob: -8.829828262329102
    10. ' ' → logprob: -9.204828262329102

Token 205: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.03957592323422432
    2. '0' → logprob: -4.039576053619385
    3. '1' → logprob: -4.039576053619385
    4. '(A' → logprob: -5.664576053619385
    5. ' A' → logprob: -10.289575576782227
    6. '(' → logprob: -10.539575576782227
    7. 'P' → logprob: -10.914575576782227
    8. '2' → logprob: -11.539575576782227
    9. ' (' → logprob: -11.914575576782227
    10. '100' → logprob: -12.039575576782227

Token 206: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0006280870293267071
    2. '0' → logprob: -7.3756279945373535
    3. 'A' → logprob: -14.125628471374512
    4. '1' → logprob: -15.250628471374512
    5. '-' → logprob: -15.625628471374512
    6. ' [' → logprob: -15.875628471374512
    7. '
' → logprob: -17.125627517700195
    8. '```' → logprob: -17.125627517700195
    9. '   ' → logprob: -17.875627517700195
    10. '01' → logprob: -18.000627517700195

Token 207: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.627176768844947e-05
    2. ' ' → logprob: -9.625096321105957
    3. '[' → logprob: -10.750096321105957
    4. '1' → logprob: -13.187596321105957
    5. '
' → logprob: -13.750096321105957
    6. '   ' → logprob: -14.375096321105957
    7. ']' → logprob: -14.562596321105957
    8. '

' → logprob: -14.687596321105957
    9. 'A' → logprob: -14.875096321105957
    10. '۰' → logprob: -14.875096321105957

Token 208: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.21640534698963165
    2. ' -' → logprob: -2.0914053916931152
    3. '+' → logprob: -2.7164053916931152
    4. ' +' → logprob: -5.341405391693115
    5. '*' → logprob: -9.091404914855957
    6. '-P' → logprob: -10.591404914855957
    7. ' ' → logprob: -11.966404914855957
    8. ' *' → logprob: -12.091404914855957
    9. ')' → logprob: -12.091404914855957
    10. '+-' → logprob: -12.341404914855957

Token 209: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.013369270600378513
    2. 'norm' → logprob: -4.388369083404541
    3. ' norm' → logprob: -7.763369083404541
    4. ' ' → logprob: -8.1383695602417
    5. 'inv' → logprob: -9.5133695602417
    6. 'int' → logprob: -10.8883695602417
    7. '(norm' → logprob: -10.8883695602417
    8. '0' → logprob: -12.2633695602417
    9. 'SZ' → logprob: -12.5133695602417
    10. '   ' → logprob: -12.8258695602417

Token 210: ')%' (ID: 57656)
  Prédit: ')%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.1602998673915863
    2. ')' → logprob: -1.9102998971939087
    3. ' )' → logprob: -10.035300254821777
    4. '+' → logprob: -10.410300254821777
    5. '+p' → logprob: -14.035300254821777
    6. ' +' → logprob: -15.285300254821777
    7. ']%' → logprob: -16.16029930114746
    8. ')p' → logprob: -16.28529930114746
    9. ')*' → logprob: -16.41029930114746
    10. '%' → logprob: -16.41029930114746

Token 211: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -3.128163257315464e-07
    2. ' P' → logprob: -15.125
    3. '998' → logprob: -19.5
    4. '>P' → logprob: -20.0
    5. '`' → logprob: -20.375
    6. '\P' → logprob: -20.375
    7. '```' → logprob: -20.625
    8. '<P' → logprob: -21.0
    9. 'p' → logprob: -21.125
    10. '	P' → logprob: -21.5

Token 212: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 213: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0035986406728625298
    2. 'A' → logprob: -6.253598690032959
    3. '<|end|>' → logprob: -7.378598690032959
    4. 'for' → logprob: -8.2535982131958
    5. 's' → logprob: -8.6285982131958
    6. 'B' → logprob: -8.8785982131958
    7. '#' → logprob: -9.2535982131958
    8. ')' → logprob: -9.6285982131958
    9. 'w' → logprob: -9.7535982131958
    10. 'def' → logprob: -10.2535982131958

Token 214: 'HT' (ID: 4145)
  Prédit: 'HT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HT' → logprob: -0.00015038289711810648
    2. 'H' → logprob: -8.875150680541992
    3. 'T' → logprob: -12.125150680541992
    4. 'TH' → logprob: -13.500150680541992
    5. '(' → logprob: -13.875150680541992
    6. '_HT' → logprob: -14.125150680541992
    7. 'A' → logprob: -14.250150680541992
    8. '(H' → logprob: -14.750150680541992
    9. '(T' → logprob: -14.875150680541992
    10. '(A' → logprob: -16.000150680541992

Token 215: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0019882326014339924
    2. '(' → logprob: -6.251988410949707
    3. '(S' → logprob: -10.001988410949707
    4. '(
' → logprob: -12.376988410949707
    5. '((' → logprob: -13.126988410949707
    6. '<|end|>' → logprob: -13.376988410949707
    7. '([' → logprob: -13.876988410949707
    8. '(s' → logprob: -13.876988410949707
    9. ' (' → logprob: -13.876988410949707
    10. '(P' → logprob: -14.501988410949707

Token 216: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011069540778407827
    2. ')
' → logprob: -9.125110626220703
    3. ' )' → logprob: -14.375110626220703
    4. '))' → logprob: -15.000110626220703
    5. '[' → logprob: -15.375110626220703
    6. ')`' → logprob: -15.625110626220703
    7. ']' → logprob: -16.125110626220703
    8. ')

' → logprob: -16.250110626220703
    9. '),' → logprob: -16.750110626220703
    10. ')
' → logprob: -16.750110626220703

Token 217: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6630721092224121
    2. 'A' → logprob: -0.7880721092224121
    3. 'B' → logprob: -4.288072109222412
    4. 'R' → logprob: -5.788072109222412
    5. 'inv' → logprob: -5.788072109222412
    6. 'res' → logprob: -5.913072109222412
    7. 'def' → logprob: -7.038072109222412
    8. ' for' → logprob: -7.538072109222412
    9. 'result' → logprob: -7.538072109222412
    10. 'S' → logprob: -7.663072109222412

Token 218: ' Construct' (ID: 36230)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6403478980064392
    2. 'for' → logprob: -1.015347957611084
    3. 'B' → logprob: -2.390347957611084
    4. 'res' → logprob: -6.015347957611084
    5. 'R' → logprob: -6.140347957611084
    6. 'r' → logprob: -6.390347957611084
    7. 'C' → logprob: -6.515347957611084
    8. 'U' → logprob: -6.765347957611084
    9. 'def' → logprob: -6.890347957611084
    10. 'inv' → logprob: -7.015347957611084

Token 219: 'eur' (ID: 8671)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -1.162906289100647
    2. ' res' → logprob: -1.912906289100647
    3. 'res' → logprob: -2.0379061698913574
    4. 'ion' → logprob: -2.0379061698913574
    5. ' ans' → logprob: -2.5379061698913574
    6. ' B' → logprob: -2.9129061698913574
    7. 'result' → logprob: -3.2879061698913574
    8. ' result' → logprob: -4.037906169891357
    9. 'ans' → logprob: -4.287906169891357
    10. 'r' → logprob: -4.287906169891357

Token 220: ' style' (ID: 2713)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.3272741436958313
    2. 'C' → logprob: -2.4522740840911865
    3. ' ans' → logprob: -3.8272740840911865
    4. 'def' → logprob: -3.9522740840911865
    5. ' B' → logprob: -4.077274322509766
    6. ' =' → logprob: -4.077274322509766
    7. ' res' → logprob: -4.327274322509766
    8. 'res' → logprob: -4.452274322509766
    9. 'A' → logprob: -4.827274322509766
    10. 'S' → logprob: -4.952274322509766

Token 221: ' déclaration' (ID: 122013)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.3902975618839264
    2. 'C' → logprob: -2.6402976512908936
    3. 'R' → logprob: -3.0152976512908936
    4. 'dp' → logprob: -3.5152976512908936
    5. 'def' → logprob: -3.6402976512908936
    6. 'res' → logprob: -3.7652976512908936
    7. 'F' → logprob: -3.8902976512908936
    8. ' B' → logprob: -4.2652974128723145
    9. 'f' → logprob: -4.7652974128723145
    10. 'D' → logprob: -4.8902974128723145

Token 222: ' C' (ID: 363)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.3872174322605133
    2. 'res' → logprob: -2.8872175216674805
    3. 'C' → logprob: -3.1372175216674805
    4. 'def' → logprob: -3.2622175216674805
    5. 'F' → logprob: -3.6372175216674805
    6. 'R' → logprob: -3.6372175216674805
    7. 'ans' → logprob: -3.7622175216674805
    8. 'dp' → logprob: -4.2622175216674805
    9. 'f' → logprob: -4.5122175216674805
    10. 'A' → logprob: -5.0122175216674805

Token 223: '
' (ID: 198)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.8714181780815125
    2. 'A' → logprob: -1.9964182376861572
    3. 'res' → logprob: -2.6214182376861572
    4. 'ans' → logprob: -3.2464182376861572
    5. 'f' → logprob: -3.2464182376861572
    6. 'def' → logprob: -3.6214182376861572
    7. 'C' → logprob: -3.6214182376861572
    8. 'F' → logprob: -3.7464182376861572
    9. ' =' → logprob: -3.9964182376861572
    10. ' ans' → logprob: -3.9964182376861572

Token 224: 'B' (ID: 33)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7755011320114136
    2. 'B' → logprob: -1.1505011320114136
    3. 'F' → logprob: -3.400501251220703
    4. 'res' → logprob: -3.400501251220703
    5. 'R' → logprob: -3.525501251220703
    6. 'C' → logprob: -3.775501251220703
    7. 'A' → logprob: -4.025501251220703
    8. 'dp' → logprob: -4.275501251220703
    9. 'def' → logprob: -4.400501251220703
    10. 'ans' → logprob: -4.900501251220703

Token 225: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4291010797023773
    2. '=' → logprob: -1.0541011095046997
    3. '=[' → logprob: -8.17910099029541
    4. ' =[' → logprob: -9.67910099029541
    5. '[' → logprob: -10.92910099029541
    6. '=[]' → logprob: -11.30410099029541
    7. '=A' → logprob: -11.92910099029541
    8. 'A' → logprob: -12.42910099029541
    9. ',' → logprob: -12.92910099029541
    10. '=B' → logprob: -13.30410099029541

Token 226: ' [-' (ID: 20191)
  Prédit: '[A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[A' → logprob: -0.2743789851665497
    2. '[' → logprob: -1.524379014968872
    3. '[(' → logprob: -4.399378776550293
    4. 'A' → logprob: -5.274378776550293
    5. ' [' → logprob: -5.649378776550293
    6. '[a' → logprob: -8.149378776550293
    7. '[s' → logprob: -8.149378776550293
    8. '[len' → logprob: -9.024378776550293
    9. '[-' → logprob: -9.274378776550293
    10. '[i' → logprob: -9.899378776550293

Token 227: '1' (ID: 16)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.7749267816543579
    2. '1' → logprob: -0.8999267816543579
    3. 'a' → logprob: -2.2749266624450684
    4. 'x' → logprob: -3.8999266624450684
    5. '(A' → logprob: -6.024926662445068
    6. '(a' → logprob: -6.274926662445068
    7. '((' → logprob: -6.524926662445068
    8. '(' → logprob: -7.024926662445068
    9. '(x' → logprob: -7.524926662445068
    10. 'P' → logprob: -7.649926662445068

Token 228: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4394552707672119
    2. ']*' → logprob: -1.189455270767212
    3. ']*(' → logprob: -3.064455270767212
    4. ' for' → logprob: -5.689455032348633
    5. 'for' → logprob: -7.939455032348633
    6. ']+' → logprob: -8.439455032348633
    7. '1' → logprob: -8.439455032348633
    8. ']%' → logprob: -8.689455032348633
    9. '%' → logprob: -9.939455032348633
    10. ',' → logprob: -10.314455032348633

Token 229: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.35533076524734497
    2. ' range' → logprob: -1.7303307056427002
    3. ' _' → logprob: -2.3553307056427
    4. 'range' → logprob: -3.7303307056427
    5. '_range' → logprob: -6.855330944061279
    6. ' ' → logprob: -6.855330944061279
    7. ' i' → logprob: -7.855330944061279
    8. ' in' → logprob: -8.730330467224121
    9. 'i' → logprob: -8.730330467224121
    10. '_i' → logprob: -10.355330467224121

Token 230: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07222873717546463
    2. 'in' → logprob: -2.8222286701202393
    3. ' range' → logprob: -5.072228908538818
    4. ' in' → logprob: -5.697228908538818
    5. 'A' → logprob: -7.947228908538818
    6. ' ' → logprob: -8.82222843170166
    7. '  ' → logprob: -11.19722843170166
    8. 'B' → logprob: -11.19722843170166
    9. '_' → logprob: -11.44722843170166
    10. ' A' → logprob: -11.94722843170166

Token 231: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0017284912755712867
    2. ' range' → logprob: -6.376728534698486
    3. 'A' → logprob: -10.626728057861328
    4. ' ' → logprob: -14.376728057861328
    5. '	range' → logprob: -15.251728057861328
    6. 'rang' → logprob: -15.876728057861328
    7. '[' → logprob: -16.001728057861328
    8. ' A' → logprob: -16.126728057861328
    9. '  ' → logprob: -16.126728057861328
    10. 'B' → logprob: -16.251728057861328

Token 232: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.1615438163280487
    2. 'SZ' → logprob: -1.911543846130371
    3. 'S' → logprob: -6.911543846130371
    4. '(' → logprob: -8.661543846130371
    5. ' SZ' → logprob: -9.786543846130371
    6. ' (' → logprob: -10.411543846130371
    7. 'Sz' → logprob: -11.036543846130371
    8. '   ' → logprob: -11.411543846130371
    9. '	S' → logprob: -12.036543846130371
    10. '_SZ' → logprob: -12.286543846130371

Token 233: 'Z' (ID: 57)
  Prédit: 'Z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Z' → logprob: -6.575563020305708e-05
    2. 'SZ' → logprob: -10.125065803527832
    3. '(' → logprob: -12.500065803527832
    4. '(Z' → logprob: -12.625065803527832
    5. ' Z' → logprob: -12.750065803527832
    6. '1' → logprob: -13.125065803527832
    7. ')' → logprob: -13.125065803527832
    8. '2' → logprob: -13.250065803527832
    9. 'З' → logprob: -13.875065803527832
    10. '   ' → logprob: -14.125065803527832

Token 234: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00223185564391315
    2. ']' → logprob: -6.127232074737549
    3. ')' → logprob: -10.25223159790039
    4. ')]
' → logprob: -12.00223159790039
    5. ' ]' → logprob: -13.12723159790039
    6. ']]' → logprob: -14.37723159790039
    7. ']
' → logprob: -14.62723159790039
    8. '])' → logprob: -14.87723159790039
    9. ' )' → logprob: -15.00223159790039
    10. ')],' → logprob: -15.12723159790039

Token 235: 'B' (ID: 33)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7704352736473083
    2. 'for' → logprob: -1.2704353332519531
    3. '<|end|>' → logprob: -1.6454353332519531
    4. 'B' → logprob: -4.020435333251953
    5. ')' → logprob: -4.395435333251953
    6. ']' → logprob: -4.645435333251953
    7. '[' → logprob: -4.895435333251953
    8. ' ' → logprob: -5.395435333251953
    9. '
' → logprob: -5.520435333251953
    10. ' B' → logprob: -6.020435333251953

Token 236: '[' (ID: 58)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 237: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.256334695033729e-05
    2. ' ' → logprob: -9.625082969665527
    3. ']' → logprob: -12.125082969665527
    4. '[' → logprob: -12.375082969665527
    5. '1' → logprob: -13.125082969665527
    6. 'A' → logprob: -14.125082969665527
    7. ')' → logprob: -14.687582969665527
    8. '   ' → logprob: -14.812582969665527
    9. '000' → logprob: -15.062582969665527
    10. '#' → logprob: -15.125082969665527

Token 238: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004038745071738958
    2. ']=' → logprob: -5.6290388107299805
    3. ' ]' → logprob: -7.7540388107299805
    4. '=' → logprob: -12.50403881072998
    5. '0' → logprob: -13.87903881072998
    6. '[' → logprob: -14.25403881072998
    7. ']=(' → logprob: -14.37903881072998
    8. ']=-' → logprob: -14.62903881072998
    9. ' ' → logprob: -14.75403881072998
    10. ']+=' → logprob: -14.87903881072998

Token 239: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04312467202544212
    2. ' =' → logprob: -3.1681246757507324
    3. ']' → logprob: -9.543124198913574
    4. ']=' → logprob: -10.918124198913574
    5. ',' → logprob: -11.793124198913574
    6. ' ' → logprob: -11.918124198913574
    7. '=
' → logprob: -12.043124198913574
    8. '=

' → logprob: -12.543124198913574
    9. '<|end|>' → logprob: -12.793124198913574
    10. '0' → logprob: -13.543124198913574

Token 240: ' SZ' (ID: 121269)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05569183826446533
    2. '1' → logprob: -3.430691719055176
    3. '(' → logprob: -5.180691719055176
    4. '(P' → logprob: -6.055691719055176
    5. 'A' → logprob: -6.180691719055176
    6. 'N' → logprob: -6.305691719055176
    7. '(N' → logprob: -6.305691719055176
    8. 'SZ' → logprob: -6.430691719055176
    9. 'P' → logprob: -6.555691719055176
    10. '(A' → logprob: -6.930691719055176

Token 241: '-' (ID: 12)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 242: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001718019717372954
    2. '2' → logprob: -6.376718044281006
    3. ' ' → logprob: -11.751717567443848
    4. 'A' → logprob: -13.314217567443848
    5. 'N' → logprob: -14.001717567443848
    6. 'B' → logprob: -14.251717567443848
    7. '0' → logprob: -14.314217567443848
    8. '3' → logprob: -14.564217567443848
    9. '```' → logprob: -14.876717567443848
    10. '4' → logprob: -15.001717567443848

Token 243: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 244: 'W' (ID: 54)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5753728151321411
    2. ' for' → logprob: -1.2003728151321411
    3. '<|end|>' → logprob: -3.0753726959228516
    4. 'B' → logprob: -3.4503726959228516
    5. 'i' → logprob: -4.075372695922852
    6. 'idx' → logprob: -4.700372695922852
    7. ')' → logprob: -4.825372695922852
    8. ' ' → logprob: -5.075372695922852
    9. '
' → logprob: -5.825372695922852
    10. '[' → logprob: -5.950372695922852

Token 245: 'HT' (ID: 4145)
  Prédit: 'HT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HT' → logprob: -0.0002502535644453019
    2. 'H' → logprob: -8.375249862670898
    3. 'T' → logprob: -11.625249862670898
    4. 'A' → logprob: -12.625249862670898
    5. 'TH' → logprob: -13.000249862670898
    6. 'B' → logprob: -13.500249862670898
    7. '(' → logprob: -14.250249862670898
    8. '(H' → logprob: -14.375249862670898
    9. '(A' → logprob: -14.750249862670898
    10. '(T' → logprob: -14.875249862670898

Token 246: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.0008126051397994161
    2. '(A' → logprob: -7.125812530517578
    3. 'B' → logprob: -12.125812530517578
    4. '(' → logprob: -13.875812530517578
    5. '(
' → logprob: -14.750812530517578
    6. '(b' → logprob: -14.875812530517578
    7. ' (' → logprob: -15.000812530517578
    8. 'A' → logprob: -15.000812530517578
    9. ' B' → logprob: -16.625812530517578
    10. '[B' → logprob: -16.750812530517578

Token 247: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3135940432548523
    2. ')
' → logprob: -1.313594102859497
    3. ')

' → logprob: -8.063593864440918
    4. ')
' → logprob: -11.563593864440918
    5. ')


' → logprob: -13.438593864440918
    6. ')#' → logprob: -13.438593864440918
    7. ')`' → logprob: -14.063593864440918
    8. '#' → logprob: -14.063593864440918
    9. ' )' → logprob: -14.313593864440918
    10. '[' → logprob: -14.438593864440918

Token 248: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09412699192762375
    2. 'B' → logprob: -3.0941269397735596
    3. ')' → logprob: -4.094127178192139
    4. '[' → logprob: -4.344127178192139
    5. ' for' → logprob: -4.469127178192139
    6. 'def' → logprob: -6.719127178192139
    7. 'W' → logprob: -7.844127178192139
    8. '#' → logprob: -8.46912670135498
    9. 'A' → logprob: -8.59412670135498
    10. ']' → logprob: -8.71912670135498

Token 249: ' Funk' (ID: 36107)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.5465149283409119
    2. 'for' → logprob: -0.9215149283409119
    3. 'C' → logprob: -4.171514987945557
    4. 'A' → logprob: -5.796514987945557
    5. 'def' → logprob: -6.546514987945557
    6. 'b' → logprob: -7.671514987945557
    7. 'res' → logprob: -7.921514987945557
    8. ' for' → logprob: -8.171514511108398
    9. 'D' → logprob: -8.421514511108398
    10. 'W' → logprob: -8.796514511108398

Token 250: 'y' (ID: 88)
  Prédit: 'tion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tion' → logprob: -0.3330783545970917
    2. 'ction' → logprob: -1.958078384399414
    3. 'def' → logprob: -2.333078384399414
    4. 't' → logprob: -4.333078384399414
    5. ' def' → logprob: -4.958078384399414
    6. 'A' → logprob: -5.333078384399414
    7. 'ion' → logprob: -5.333078384399414
    8. 'B' → logprob: -5.708078384399414
    9. '```' → logprob: -5.833078384399414
    10. 'cion' → logprob: -6.583078384399414

Token 251: ' composition' (ID: 27524)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6874374747276306
    2. 'C' → logprob: -1.4374375343322754
    3. 'B' → logprob: -1.6874375343322754
    4. ' for' → logprob: -2.9374375343322754
    5. 'def' → logprob: -5.062437534332275
    6. 'A' → logprob: -5.187437534332275
    7. 'W' → logprob: -6.187437534332275
    8. 'res' → logprob: -6.687437534332275
    9. 'R' → logprob: -7.312437534332275
    10. ' B' → logprob: -7.562437534332275

Token 252: ' d' (ID: 272)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2773834764957428
    2. 'C' → logprob: -2.15238356590271
    3. ' for' → logprob: -2.27738356590271
    4. 'B' → logprob: -5.027383327484131
    5. 'def' → logprob: -5.152383327484131
    6. ')' → logprob: -5.527383327484131
    7. 'res' → logprob: -5.777383327484131
    8. 'result' → logprob: -7.527383327484131
    9. '*' → logprob: -7.777383327484131
    10. ' =' → logprob: -7.902383327484131

Token 253: ''ordre' (ID: 124753)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.8475965261459351
    2. 'A' → logprob: -1.222596526145935
    3. 'for' → logprob: -2.2225966453552246
    4. '[i' → logprob: -3.0975966453552246
    5. 'lambda' → logprob: -3.3475966453552246
    6. 'C' → logprob: -4.097596645355225
    7. '[' → logprob: -4.347596645355225
    8. '[A' → logprob: -4.472596645355225
    9. 'a' → logprob: -4.722596645355225
    10. 'def' → logprob: -4.722596645355225

Token 254: ' supérieur' (ID: 98491)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1083695888519287
    2. 'B' → logprob: -1.7333695888519287
    3. 'def' → logprob: -1.7333695888519287
    4. 'A' → logprob: -2.4833695888519287
    5. ' for' → logprob: -2.9833695888519287
    6. '2' → logprob: -3.3583695888519287
    7. 'C' → logprob: -3.3583695888519287
    8. '=' → logprob: -4.233369827270508
    9. '(' → logprob: -4.608369827270508
    10. ' ' → logprob: -4.733369827270508

Token 255: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.26655691862106323
    2. 'for' → logprob: -1.516556978225708
    3. 'C' → logprob: -4.891556739807129
    4. 'B' → logprob: -5.266556739807129
    5. ' for' → logprob: -6.891556739807129
    6. 'F' → logprob: -8.516556739807129
    7. 'A' → logprob: -8.641556739807129
    8. 'f' → logprob: -9.266556739807129
    9. 'D' → logprob: -9.641556739807129
    10. 'W' → logprob: -10.141556739807129

Token 256: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3512740135192871
    2. 'def' → logprob: -1.601274013519287
    3. 'B' → logprob: -2.851274013519287
    4. 'C' → logprob: -3.476274013519287
    5. 'A' → logprob: -5.476274013519287
    6. ' for' → logprob: -7.976274013519287
    7. 'F' → logprob: -8.601274490356445
    8. 'res' → logprob: -8.851274490356445
    9. 'f' → logprob: -8.976274490356445
    10. 'from' → logprob: -9.101274490356445

Token 257: ' combine' (ID: 21700)
  Prédit: 'compose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compose' → logprob: -1.3563871383666992
    2. 'f' → logprob: -1.9813871383666992
    3. ' compose' → logprob: -1.9813871383666992
    4. 'mul' → logprob: -2.481387138366699
    5. ' mul' → logprob: -3.106387138366699
    6. ' f' → logprob: -3.106387138366699
    7. 'F' → logprob: -3.231387138366699
    8. 'combine' → logprob: -3.356387138366699
    9. 'pow' → logprob: -3.606387138366699
    10. 'con' → logprob: -3.856387138366699

Token 258: '(u' (ID: 17057)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.2262289673089981
    2. '(a' → logprob: -1.726228952407837
    3. '(A' → logprob: -4.601229190826416
    4. '(x' → logprob: -5.101229190826416
    5. '(s' → logprob: -6.101229190826416
    6. '(X' → logprob: -6.476229190826416
    7. '(B' → logprob: -6.601229190826416
    8. '(C' → logprob: -6.601229190826416
    9. '(F' → logprob: -7.226229190826416
    10. '(b' → logprob: -8.226228713989258

Token 259: ',' (ID: 11)
  Prédit: ',v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.47439664602279663
    2. ',' → logprob: -0.9743966460227966
    3. ' ,' → logprob: -8.224396705627441
    4. ',b' → logprob: -11.349396705627441
    5. ',w' → logprob: -11.349396705627441
    6. ',B' → logprob: -11.974396705627441
    7. ',f' → logprob: -12.099396705627441
    8. ',a' → logprob: -12.724396705627441
    9. 'v' → logprob: -13.224396705627441
    10. ',u' → logprob: -13.224396705627441

Token 260: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0028482675552368164
    2. ' v' → logprob: -5.877848148345947
    3. '   ' → logprob: -11.752848625183105
    4. 'w' → logprob: -12.377848625183105
    5. ' ' → logprob: -12.377848625183105
    6. '  ' → logprob: -12.502848625183105
    7. '	v' → logprob: -12.627848625183105
    8. '
' → logprob: -12.877848625183105
    9. '```' → logprob: -13.252848625183105
    10. '    ' → logprob: -13.377848625183105

Token 261: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03239557892084122
    2. ',' → logprob: -3.532395601272583
    3. '):
' → logprob: -6.157395362854004
    4. ' ):' → logprob: -8.782395362854004
    5. ',u' → logprob: -9.032395362854004
    6. ',k' → logprob: -9.782395362854004
    7. ')' → logprob: -9.907395362854004
    8. ' ,' → logprob: -10.157395362854004
    9. '   ' → logprob: -10.532395362854004
    10. ':' → logprob: -11.532395362854004

Token 262: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09745462238788605
    2. ' return' → logprob: -2.72245454788208
    3. 'return' → logprob: -4.09745454788208
    4. '[(' → logprob: -4.72245454788208
    5. ' [(' → logprob: -6.72245454788208
    6. '[u' → logprob: -9.222455024719238
    7. '[' → logprob: -9.347455024719238
    8. '[
' → logprob: -9.472455024719238
    9. ' [' → logprob: -9.597455024719238
    10. '[((' → logprob: -10.847455024719238

Token 263: ' (' (ID: 350)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.13684149086475372
    2. '(u' → logprob: -2.2618415355682373
    3. '[u' → logprob: -4.511841297149658
    4. '((' → logprob: -4.886841297149658
    5. ' [(' → logprob: -6.136841297149658
    6. ' (' → logprob: -6.761841297149658
    7. '[((' → logprob: -7.261841297149658
    8. '(' → logprob: -7.636841297149658
    9. '[' → logprob: -7.886841297149658
    10. '([(' → logprob: -8.511841773986816

Token 264: 'inv' (ID: 31086)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.33756139874458313
    2. '(u' → logprob: -1.4625613689422607
    3. ' u' → logprob: -4.33756160736084
    4. ' (' → logprob: -4.33756160736084
    5. '[(' → logprob: -4.33756160736084
    6. '[u' → logprob: -4.33756160736084
    7. '((' → logprob: -7.21256160736084
    8. ' [(' → logprob: -7.46256160736084
    9. '[' → logprob: -8.08756160736084
    10. '(' → logprob: -8.08756160736084

Token 265: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -1.2396957874298096
    2. '((' → logprob: -1.3646957874298096
    3. '(S' → logprob: -1.3646957874298096
    4. '(P' → logprob: -2.3646957874298096
    5. '(' → logprob: -3.1146957874298096
    6. '(B' → logprob: -3.1146957874298096
    7. 'P' → logprob: -5.4896955490112305
    8. '(v' → logprob: -5.6146955490112305
    9. '(((' → logprob: -6.2396955490112305
    10. 'SZ' → logprob: -6.9896955490112305

Token 266: ')*' (ID: 11043)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.22348950803279877
    2. '*v' → logprob: -2.22348952293396
    3. ')*' → logprob: -2.72348952293396
    4. ')' → logprob: -4.723489284515381
    5. ' *' → logprob: -4.848489284515381
    6. 'v' → logprob: -5.098489284515381
    7. '*(' → logprob: -6.848489284515381
    8. '*
' → logprob: -7.223489284515381
    9. '(v' → logprob: -8.098489761352539
    10. '*)' → logprob: -8.098489761352539

Token 267: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.21131984889507294
    2. 'inv' → logprob: -1.7113198041915894
    3. '(inv' → logprob: -5.586319923400879
    4. '(v' → logprob: -6.086319923400879
    5. '((' → logprob: -6.711319923400879
    6. ' inv' → logprob: -6.961319923400879
    7. ' v' → logprob: -7.211319923400879
    8. '(' → logprob: -7.461319923400879
    9. 'pow' → logprob: -9.836319923400879
    10. ' (' → logprob: -9.836319923400879

Token 268: ')%' (ID: 57656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5283513069152832
    2. ')%' → logprob: -0.9033513069152832
    3. '%' → logprob: -5.903351306915283
    4. ' )' → logprob: -6.153351306915283
    5. '+' → logprob: -8.403350830078125
    6. ' %' → logprob: -9.903350830078125
    7. ' +' → logprob: -9.903350830078125
    8. '-' → logprob: -11.278350830078125
    9. ' if' → logprob: -12.653350830078125
    10. ' -' → logprob: -12.778350830078125

Token 269: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -3.128163257315464e-07
    2. ' P' → logprob: -15.125
    3. '>P' → logprob: -18.375
    4. '(P' → logprob: -18.5
    5. '<P' → logprob: -18.875
    6. '\P' → logprob: -19.0
    7. '=P' → logprob: -19.25
    8. '`' → logprob: -19.5
    9. '
' → logprob: -20.125
    10. '```' → logprob: -20.125

Token 270: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 271: 'C' (ID: 34)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.46016693115234375
    2. '<|end|>' → logprob: -2.0851669311523438
    3. '(' → logprob: -2.4601669311523438
    4. ')' → logprob: -3.0851669311523438
    5. ' ' → logprob: -3.5851669311523438
    6. 'B' → logprob: -3.5851669311523438
    7. 'A' → logprob: -4.460166931152344
    8. '#' → logprob: -4.835166931152344
    9. '
' → logprob: -5.335166931152344
    10. '[
' → logprob: -5.460166931152344

Token 272: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033803604543209076
    2. '=' → logprob: -3.408803701400757
    3. '[' → logprob: -9.033803939819336
    4. ',' → logprob: -11.283803939819336
    5. ' ' → logprob: -11.908803939819336
    6. 's' → logprob: -12.658803939819336
    7. ' =[' → logprob: -12.658803939819336
    8. '_' → logprob: -12.783803939819336
    9. '=[]' → logprob: -13.033803939819336
    10. '  ' → logprob: -13.033803939819336

Token 273: ' list' (ID: 1562)
  Prédit: '[A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[A' → logprob: -0.6011202335357666
    2. '[' → logprob: -1.1011202335357666
    3. '[(' → logprob: -2.6011202335357666
    4. '[B' → logprob: -3.8511202335357666
    5. '[u' → logprob: -3.8511202335357666
    6. '[i' → logprob: -7.4761199951171875
    7. '[]' → logprob: -7.8511199951171875
    8. '[a' → logprob: -8.351119995117188
    9. '[C' → logprob: -8.351119995117188
    10. '[((' → logprob: -8.601119995117188

Token 274: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0006593000725843012
    2. '(' → logprob: -8.125658988952637
    3. '(com' → logprob: -8.500658988952637
    4. '((' → logprob: -9.125658988952637
    5. 'map' → logprob: -10.375658988952637
    6. '(zip' → logprob: -11.625658988952637
    7. 'combine' → logprob: -12.625658988952637
    8. '=' → logprob: -13.000658988952637
    9. '(-' → logprob: -14.250658988952637
    10. 'A' → logprob: -14.500658988952637

Token 275: '(com' (ID: 27868)
  Prédit: '(com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.008889438584446907
    2. '(lambda' → logprob: -5.508889675140381
    3. '(' → logprob: -5.883889675140381
    4. 'combine' → logprob: -6.508889675140381
    5. ' (' → logprob: -8.633889198303223
    6. ')' → logprob: -8.633889198303223
    7. ' combine' → logprob: -9.758889198303223
    8. '(
' → logprob: -10.133889198303223
    9. '   ' → logprob: -10.383889198303223
    10. '.combine' → logprob: -10.758889198303223

Token 276: 'bine' (ID: 22066)
  Prédit: 'bine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bine' → logprob: -0.00020389800192788243
    2. 'b' → logprob: -8.500204086303711
    3. 'combine' → logprob: -15.000204086303711
    4. 'ine' → logprob: -17.50020408630371
    5. '[' → logprob: -17.75020408630371
    6. 'bite' → logprob: -18.00020408630371
    7. '(b' → logprob: -18.12520408630371
    8. 'pute' → logprob: -18.12520408630371
    9. '(' → logprob: -18.12520408630371
    10. '```' → logprob: -18.50020408630371

Token 277: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04231312498450279
    2. ',A' → logprob: -3.5423130989074707
    3. ' ,' → logprob: -4.917313098907471
    4. ',B' → logprob: -5.917313098907471
    5. '(A' → logprob: -6.042313098907471
    6. '   ' → logprob: -10.292313575744629
    7. '(B' → logprob: -10.542313575744629
    8. '(' → logprob: -11.292313575744629
    9. ',(' → logprob: -12.417313575744629
    10. '),' → logprob: -12.417313575744629

Token 278: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.09593895822763443
    2. ' A' → logprob: -2.4709389209747314
    3. 'B' → logprob: -5.0959391593933105
    4. ' B' → logprob: -7.8459391593933105
    5. '   ' → logprob: -8.220938682556152
    6. '(A' → logprob: -9.720938682556152
    7. ',A' → logprob: -9.720938682556152
    8. ' ' → logprob: -10.470938682556152
    9. '	A' → logprob: -11.220938682556152
    10. '[A' → logprob: -11.970938682556152

Token 279: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006395953707396984
    2. ',B' → logprob: -5.6313958168029785
    3. ' ,' → logprob: -5.8813958168029785
    4. 'B' → logprob: -14.381396293640137
    5. '   ' → logprob: -15.506396293640137
    6. ',b' → logprob: -15.756396293640137
    7. ',
' → logprob: -16.38139533996582
    8. '  ' → logprob: -17.50639533996582
    9. '[' → logprob: -17.75639533996582
    10. ',C' → logprob: -17.88139533996582

Token 280: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0028062984347343445
    2. ' B' → logprob: -5.877806186676025
    3. '   ' → logprob: -13.877806663513184
    4. ' ' → logprob: -15.377806663513184
    5. '  ' → logprob: -16.127805709838867
    6. '(B' → logprob: -16.252805709838867
    7. '	B' → logprob: -17.377805709838867
    8. '[' → logprob: -17.502805709838867
    9. '[B' → logprob: -17.502805709838867
    10. ')' → logprob: -17.752805709838867

Token 281: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -1.306760805164231e-05
    2. '))
' → logprob: -11.75001335144043
    3. ' ))' → logprob: -12.25001335144043
    4. '));' → logprob: -16.12501335144043
    5. '))

' → logprob: -16.50001335144043
    6. ')' → logprob: -16.87501335144043
    7. ')))' → logprob: -17.37501335144043
    8. ' ' → logprob: -17.50001335144043
    9. '[' → logprob: -18.50001335144043
    10. '()))' → logprob: -18.75001335144043

Token 282: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.020744619891047478
    2. 'C' → logprob: -3.895744562149048
    3. ')' → logprob: -9.520744323730469
    4. 'B' → logprob: -10.645744323730469
    5. '[' → logprob: -10.645744323730469
    6. 'from' → logprob: -10.770744323730469
    7. '#' → logprob: -11.270744323730469
    8. 'A' → logprob: -11.520744323730469
    9. 'for' → logprob: -11.895744323730469
    10. '<|end|>' → logprob: -12.020744323730469

Token 283: 'HT' (ID: 4145)
  Prédit: 'HT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HT' → logprob: -4.584861744660884e-05
    2. 'H' → logprob: -10.125045776367188
    3. 'CT' → logprob: -12.375045776367188
    4. '[' → logprob: -14.625045776367188
    5. 'C' → logprob: -15.375045776367188
    6. '(' → logprob: -15.750045776367188
    7. '(H' → logprob: -16.000045776367188
    8. ' HT' → logprob: -16.125045776367188
    9. 'TH' → logprob: -16.250045776367188
    10. 'T' → logprob: -16.625045776367188

Token 284: '(C' (ID: 5559)
  Prédit: '(C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -5.796184723294573e-06
    2. 'C' → logprob: -12.500005722045898
    3. '(
' → logprob: -13.250005722045898
    4. '(' → logprob: -15.750005722045898
    5. '[C' → logprob: -16.2500057220459
    6. ' C' → logprob: -17.8750057220459
    7. '([' → logprob: -18.5000057220459
    8. ' (' → logprob: -18.6250057220459
    9. ')' → logprob: -18.7500057220459
    10. '(c' → logprob: -19.1250057220459

Token 285: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47782495617866516
    2. ')
' → logprob: -0.9778249263763428
    3. '(C' → logprob: -6.352825164794922
    4. ')

' → logprob: -6.602825164794922
    5. 'C' → logprob: -8.352825164794922
    6. ',' → logprob: -9.227825164794922
    7. ' )
' → logprob: -9.727825164794922
    8. '#' → logprob: -10.102825164794922
    9. '[C' → logprob: -10.102825164794922
    10. ' )' → logprob: -10.227825164794922

Token 286: 'for' (ID: 1938)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.010353023186326027
    2. 'for' → logprob: -5.385353088378906
    3. 'inv' → logprob: -5.760353088378906
    4. 'print' → logprob: -6.885353088378906
    5. 'norm' → logprob: -7.135353088378906
    6. 'def' → logprob: -8.385353088378906
    7. 'D' → logprob: -8.635353088378906
    8. '[' → logprob: -9.510353088378906
    9. '#' → logprob: -9.635353088378906
    10. ')' → logprob: -10.385353088378906

Token 287: ' ix' (ID: 44402)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.25435924530029297
    2. ' i' → logprob: -1.504359245300293
    3. 'x' → logprob: -6.754359245300293
    4. 'k' → logprob: -7.629359245300293
    5. ' x' → logprob: -8.629359245300293
    6. ' k' → logprob: -9.004359245300293
    7. 'v' → logprob: -9.629359245300293
    8. 'u' → logprob: -9.754359245300293
    9. 'c' → logprob: -10.004359245300293
    10. ' v' → logprob: -10.254359245300293

Token 288: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.017646444961428642
    2. ',' → logprob: -4.517646312713623
    3. 'in' → logprob: -5.142646312713623
    4. ' ' → logprob: -7.642646312713623
    5. ' ,' → logprob: -8.642646789550781
    6. 's' → logprob: -10.767646789550781
    7. 'n' → logprob: -11.642646789550781
    8. '	in' → logprob: -12.017646789550781
    9. ',in' → logprob: -12.267646789550781
    10. '_' → logprob: -12.267646789550781

Token 289: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005234475247561932
    2. ' range' → logprob: -5.255234241485596
    3. 'C' → logprob: -14.505234718322754
    4. '	range' → logprob: -16.380233764648438
    5. '(range' → logprob: -16.630233764648438
    6. ' ' → logprob: -17.630233764648438
    7. '
' → logprob: -18.255233764648438
    8. '   ' → logprob: -18.630233764648438
    9. 'r' → logprob: -18.630233764648438
    10. ' C' → logprob: -18.755233764648438

Token 290: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.0017363476799800992
    2. '(' → logprob: -6.501736164093018
    3. '(len' → logprob: -8.501736640930176
    4. 'S' → logprob: -10.751736640930176
    5. '(sz' → logprob: -12.876736640930176
    6. '(
' → logprob: -13.376736640930176
    7. '(N' → logprob: -14.001736640930176
    8. 'SZ' → logprob: -14.001736640930176
    9. ' (' → logprob: -14.126736640930176
    10. '((' → logprob: -14.501736640930176

Token 291: 'Z' (ID: 57)
  Prédit: 'Z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Z' → logprob: -1.0325924449716695e-05
    2. '(Z' → logprob: -12.62501049041748
    3. 'C' → logprob: -13.12501049041748
    4. '(' → logprob: -13.50001049041748
    5. ' Z' → logprob: -14.12501049041748
    6. 'Q' → logprob: -14.25001049041748
    7. ')' → logprob: -15.25001049041748
    8. '2' → logprob: -15.62501049041748
    9. '	Z' → logprob: -15.62501049041748
    10. '[' → logprob: -16.000009536743164

Token 292: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5760562419891357
    2. '):
' → logprob: -0.8260562419891357
    3. ':' → logprob: -9.576056480407715
    4. '):
' → logprob: -10.576056480407715
    5. ']:' → logprob: -11.826056480407715
    6. '+' → logprob: -12.451056480407715
    7. '   ' → logprob: -12.951056480407715
    8. ')' → logprob: -13.201056480407715
    9. ':
' → logprob: -13.201056480407715
    10. '}:' → logprob: -13.826056480407715

Token 293: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007795417681336403
    2. 'C' → logprob: -4.882795333862305
    3. ' C' → logprob: -8.632795333862305
    4. '	C' → logprob: -12.382795333862305
    5. '   ' → logprob: -12.632795333862305
    6. 'print' → logprob: -13.382795333862305
    7. ' ' → logprob: -13.757795333862305
    8. '```' → logprob: -15.257795333862305
    9. '  ' → logprob: -15.382795333862305
    10. ' print' → logprob: -15.382795333862305

Token 294: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' (adapté à ' C') → logprob: -0.3144659996032715
    2. '   ' → logprob: -1.3144659996032715
    3. ' C' → logprob: -6.9394659996032715
    4. ' ' → logprob: -8.56446647644043
    5. '	C' → logprob: -11.18946647644043
    6. '  ' → logprob: -11.43946647644043
    7. '    
' → logprob: -12.43946647644043
    8. 'print' → logprob: -12.81446647644043
    9. 'c' → logprob: -13.31446647644043
    10. 'x' → logprob: -13.56446647644043

Token 295: '[ix' (ID: 165910)
  Prédit: '[ix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ix' → logprob: -0.0006320207612589002
    2. '[' → logprob: -7.375631809234619
    3. '```' → logprob: -13.000632286071777
    4. '\[' → logprob: -14.000632286071777
    5. '[i' → logprob: -14.125632286071777
    6. '[C' → logprob: -14.750632286071777
    7. '[ii' → logprob: -15.750632286071777
    8. '[idx' → logprob: -15.750632286071777
    9. '[...]' → logprob: -15.875632286071777
    10. '[x' → logprob: -15.875632286071777

Token 296: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02486267127096653
    2. ']=' → logprob: -3.774862766265869
    3. ']=(' → logprob: -6.899862766265869
    4. ')' → logprob: -8.274862289428711
    5. '=' → logprob: -8.524862289428711
    6. ']+=' → logprob: -9.149862289428711
    7. ')=' → logprob: -10.899862289428711
    8. ' ]' → logprob: -10.899862289428711
    9. '   ' → logprob: -13.524862289428711
    10. ']={' → logprob: -13.649862289428711

Token 297: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002152165398001671
    2. '%=' → logprob: -6.502151966094971
    3. ' =' → logprob: -7.377151966094971
    4. '=C' → logprob: -11.127152442932129
    5. ' %=' → logprob: -12.252152442932129
    6. '*=' → logprob: -14.127152442932129
    7. '=A' → logprob: -14.377152442932129
    8. '=
' → logprob: -14.627152442932129
    9. '```' → logprob: -14.752152442932129
    10. '   ' → logprob: -14.877152442932129

Token 298: ' C' (ID: 363)
  Prédit: '(inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(inv' → logprob: -0.35425809025764465
    2. '(C' → logprob: -1.3542580604553223
    3. '((' → logprob: -3.9792580604553223
    4. '(' → logprob: -4.604258060455322
    5. 'C' → logprob: -5.854258060455322
    6. '(pow' → logprob: -5.979258060455322
    7. 'inv' → logprob: -6.229258060455322
    8. '(in' → logprob: -6.729258060455322
    9. '(((' → logprob: -7.229258060455322
    10. ' (' → logprob: -7.354258060455322

Token 299: '[ix' (ID: 165910)
  Prédit: '[ix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ix' → logprob: -8.113290095934644e-05
    2. 'ix' → logprob: -10.125081062316895
    3. 'C' → logprob: -11.250081062316895
    4. '[' → logprob: -11.750081062316895
    5. '[C' → logprob: -11.875081062316895
    6. '[idx' → logprob: -13.000081062316895
    7. '[int' → logprob: -13.000081062316895
    8. '   ' → logprob: -13.375081062316895
    9. '[x' → logprob: -13.375081062316895
    10. 'Ix' → logprob: -14.375081062316895

Token 300: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.37246429920196533
    2. ']' → logprob: -1.2474642992019653
    3. ']%' → logprob: -4.497464179992676
    4. ']-' → logprob: -5.247464179992676
    5. '[ix' → logprob: -5.997464179992676
    6. ']*(' → logprob: -6.122464179992676
    7. ']+' → logprob: -6.622464179992676
    8. '][' → logprob: -8.372464179992676
    9. '*' → logprob: -8.372464179992676
    10. 'ix' → logprob: -8.747464179992676

Token 301: 'inv' (ID: 31086)
  Prédit: 'inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.03399304673075676
    2. 'norm' → logprob: -4.658993244171143
    3. ' inv' → logprob: -4.658993244171143
    4. '(inv' → logprob: -5.033993244171143
    5. 'pow' → logprob: -6.033993244171143
    6. '(' → logprob: -7.033993244171143
    7. 'C' → logprob: -7.283993244171143
    8. '2' → logprob: -7.408993244171143
    9. '(norm' → logprob: -7.533993244171143
    10. 'ix' → logprob: -7.658993244171143

Token 302: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.6060316562652588
    2. '((' → logprob: -1.1060316562652588
    3. '(' → logprob: -2.231031656265259
    4. '(C' → logprob: -4.85603141784668
    5. '(P' → logprob: -5.48103141784668
    6. '(N' → logprob: -6.98103141784668
    7. '(pow' → logprob: -7.10603141784668
    8. '(s' → logprob: -7.23103141784668
    9. '(len' → logprob: -7.48103141784668
    10. '(sz' → logprob: -7.98103141784668

Token 303: 'Z' (ID: 57)
  Prédit: 'Z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Z' → logprob: -0.0003500050224829465
    2. '(' → logprob: -8.625349998474121
    3. '(Z' → logprob: -9.125349998474121
    4. '(S' → logprob: -11.000349998474121
    5. 'z' → logprob: -11.125349998474121
    6. '2' → logprob: -11.625349998474121
    7. '((' → logprob: -13.125349998474121
    8. 'SZ' → logprob: -13.125349998474121
    9. '(C' → logprob: -13.375349998474121
    10. '
' → logprob: -13.500349998474121

Token 304: ')%' (ID: 57656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03371543809771538
    2. ')%' → logprob: -3.4087154865264893
    3. ' )' → logprob: -10.40871524810791
    4. '())' → logprob: -11.28371524810791
    5. ')
' → logprob: -12.15871524810791
    6. '()' → logprob: -12.40871524810791
    7. '))' → logprob: -12.53371524810791
    8. '%' → logprob: -12.78371524810791
    9. ')`' → logprob: -12.90871524810791
    10. ')#' → logprob: -13.65871524810791

Token 305: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: 0.0
    2. ' P' → logprob: -17.625
    3. '```' → logprob: -19.5
    4. '(P' → logprob: -20.5
    5. '>P' → logprob: -20.875
    6. '
' → logprob: -20.875
    7. '`' → logprob: -21.125
    8. '<P' → logprob: -21.375
    9. '{' → logprob: -21.375
    10. '   ' → logprob: -21.5

Token 306: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.014275862835347652
    2. 'for' → logprob: -4.264276027679443
    3. ' print' → logprob: -10.139275550842285
    4. '
' → logprob: -10.889275550842285
    5. '[' → logprob: -11.014275550842285
    6. ' for' → logprob: -11.139275550842285
    7. '<|end|>' → logprob: -11.764275550842285
    8. '```' → logprob: -12.264275550842285
    9. '#' → logprob: -12.639275550842285
    10. ')' → logprob: -13.014275550842285

Token 307: 'for' (ID: 1938)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.051364388316869736
    2. 'for' → logprob: -3.4263644218444824
    3. 'C' → logprob: -4.051364421844482
    4. 'res' → logprob: -10.676363945007324
    5. 's' → logprob: -10.801363945007324
    6. ' print' → logprob: -10.926363945007324
    7. 'result' → logprob: -11.176363945007324
    8. 'r' → logprob: -11.426363945007324
    9. ' for' → logprob: -11.926363945007324
    10. '[' → logprob: -12.051363945007324

Token 308: ' j' (ID: 441)
  Prédit: ' ix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ix' → logprob: -0.6550241708755493
    2. ' i' → logprob: -0.7800241708755493
    3. 'i' → logprob: -4.40502405166626
    4. 'ix' → logprob: -4.78002405166626
    5. ' x' → logprob: -6.90502405166626
    6. 'x' → logprob: -8.655024528503418
    7. ' ' → logprob: -9.155024528503418
    8. '_ix' → logprob: -9.905024528503418
    9. ' _' → logprob: -10.155024528503418
    10. ' k' → logprob: -10.155024528503418

Token 309: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3955989181995392
    2. 'in' → logprob: -1.1455988883972168
    3. 'n' → logprob: -4.895598888397217
    4. 'x' → logprob: -7.270598888397217
    5. ' ' → logprob: -8.145599365234375
    6. ',' → logprob: -9.770599365234375
    7. 'range' → logprob: -9.895599365234375
    8. '	in' → logprob: -10.770599365234375
    9. '  ' → logprob: -11.145599365234375
    10. 'ix' → logprob: -11.395599365234375

Token 310: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001173321157693863
    2. ' range' → logprob: -6.751173496246338
    3. 'C' → logprob: -13.12617301940918
    4. 'r' → logprob: -15.75117301940918
    5. 'ran' → logprob: -15.75117301940918
    6. 'rang' → logprob: -16.00117301940918
    7. ' ' → logprob: -16.12617301940918
    8. '(range' → logprob: -16.50117301940918
    9. 're' → logprob: -16.75117301940918
    10. '   ' → logprob: -16.75117301940918

Token 311: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.4643537998199463
    2. '(N' → logprob: -1.3393537998199463
    3. '(' → logprob: -2.2143537998199463
    4. 'N' → logprob: -8.964353561401367
    5. '1' → logprob: -10.714353561401367
    6. '(n' → logprob: -10.964353561401367
    7. '(len' → logprob: -11.464353561401367
    8. 'S' → logprob: -11.589353561401367
    9. '(sz' → logprob: -11.839353561401367
    10. '(
' → logprob: -12.214353561401367

Token 312: 'Z' (ID: 57)
  Prédit: 'Z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Z' → logprob: -1.2664456789934775e-06
    2. '(Z' → logprob: -15.125000953674316
    3. ' Z' → logprob: -15.125000953674316
    4. '(' → logprob: -15.250000953674316
    5. '   ' → logprob: -16.625001907348633
    6. 'Q' → logprob: -17.000001907348633
    7. '	Z' → logprob: -17.000001907348633
    8. 'z' → logprob: -17.250001907348633
    9. ')' → logprob: -17.375001907348633
    10. 'X' → logprob: -17.500001907348633

Token 313: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20145992934703827
    2. '):' → logprob: -1.7014598846435547
    3. '):
' → logprob: -10.826459884643555
    4. '-' → logprob: -11.076459884643555
    5. '   ' → logprob: -12.201459884643555
    6. '+' → logprob: -12.826459884643555
    7. ')' → logprob: -14.451459884643555
    8. '//' → logprob: -14.701459884643555
    9. ' ' → logprob: -14.826459884643555
    10. '):

' → logprob: -14.951459884643555

Token 314: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002422779070911929
    2. 'if' → logprob: -9.375242233276367
    3. 'C' → logprob: -9.500242233276367
    4. ' if' → logprob: -10.125242233276367
    5. 'print' → logprob: -10.750242233276367
    6. ' C' → logprob: -11.875242233276367
    7. 'for' → logprob: -12.125242233276367
    8. 'A' → logprob: -12.625242233276367
    9. ' print' → logprob: -13.125242233276367
    10. ' for' → logprob: -13.875242233276367

Token 315: ' print' (ID: 2123)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.18416526913642883
    2. '   ' → logprob: -2.3091652393341064
    3. 'if' → logprob: -3.4341652393341064
    4. 'for' → logprob: -4.1841654777526855
    5. 'print' (adapté à ' print') → logprob: -4.3091654777526855
    6. ' C' → logprob: -5.6841654777526855
    7. 'A' → logprob: -6.0591654777526855
    8. ' if' → logprob: -7.8091654777526855
    9. 'u' → logprob: -8.184165000915527
    10. ' for' → logprob: -8.559165000915527

Token 316: '((' (ID: 2054)
  Prédit: '(C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.001572948880493641
    2. 'C' → logprob: -6.876573085784912
    3. '((' → logprob: -7.876573085784912
    4. '(' → logprob: -8.751572608947754
    5. '(f' → logprob: -14.626572608947754
    6. '(c' → logprob: -14.626572608947754
    7. '(j' → logprob: -14.876572608947754
    8. '(-' → logprob: -15.376572608947754
    9. '(
' → logprob: -15.501572608947754
    10. '()' → logprob: -16.37657356262207

Token 317: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.6411797404289246
    2. '(C' → logprob: -0.8911797404289246
    3. '(' → logprob: -3.5161798000335693
    4. '1' → logprob: -3.8911798000335693
    5. '(P' → logprob: -5.51617956161499
    6. '(-' → logprob: -6.01617956161499
    7. '(S' → logprob: -6.14117956161499
    8. 'P' → logprob: -6.64117956161499
    9. '((' → logprob: -7.01617956161499
    10. '-' → logprob: -7.39117956161499

Token 318: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -3.8889261304575484e-06
    2. '[' → logprob: -12.875003814697266
    3. ')[' → logprob: -14.125003814697266
    4. ' [' → logprob: -15.500003814697266
    5. ')' → logprob: -16.125003814697266
    6. 'j' → logprob: -16.375003814697266
    7. '[
' → logprob: -16.750003814697266
    8. '[ix' → logprob: -17.375003814697266
    9. '[i' → logprob: -17.500003814697266
    10. '[js' → logprob: -17.875003814697266

Token 319: ']-' (ID: 27107)
  Prédit: ']+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.4823605716228485
    2. ')+' → logprob: -1.482360601425171
    3. '+' → logprob: -2.482360601425171
    4. '))' → logprob: -3.732360601425171
    5. ')' → logprob: -3.982360601425171
    6. ']' → logprob: -4.107360363006592
    7. '])' → logprob: -4.982360363006592
    8. '-' → logprob: -6.107360363006592
    9. ']-' → logprob: -6.607360363006592
    10. '*' → logprob: -7.607360363006592

Token 320: 'C' (ID: 34)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8237364888191223
    2. '(-' → logprob: -0.9487364888191223
    3. '1' → logprob: -2.1987364292144775
    4. '(P' → logprob: -3.8237364292144775
    5. '(S' → logprob: -4.198736667633057
    6. '-' → logprob: -4.323736667633057
    7. '0' → logprob: -5.573736667633057
    8. '(int' → logprob: -6.198736667633057
    9. '(C' → logprob: -6.323736667633057
    10. '((' → logprob: -6.573736667633057

Token 321: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.029896045103669167
    2. '[j' → logprob: -3.5298960208892822
    3. '0' → logprob: -9.779895782470703
    4. 'j' → logprob: -9.904895782470703
    5. '[
' → logprob: -12.404895782470703
    6. ' [' → logprob: -12.529895782470703
    7. '
' → logprob: -12.654895782470703
    8. ' ' → logprob: -13.029895782470703
    9. 'x' → logprob: -13.029895782470703
    10. '\[' → logprob: -13.404895782470703

Token 322: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017572871875017881
    2. ' ' → logprob: -7.1267571449279785
    3. 'j' → logprob: -7.8767571449279785
    4. '[' → logprob: -8.251757621765137
    5. 'SZ' → logprob: -8.876757621765137
    6. 'x' → logprob: -10.501757621765137
    7. 'N' → logprob: -10.501757621765137
    8. '1' → logprob: -10.501757621765137
    9. 'ix' → logprob: -10.751757621765137
    10. '   ' → logprob: -11.251757621765137

Token 323: '])' (ID: 4636)
  Prédit: ')%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.4743803143501282
    2. ')' → logprob: -0.9743803143501282
    3. ' )' → logprob: -9.099380493164062
    4. '))' → logprob: -9.099380493164062
    5. '+' → logprob: -10.099380493164062
    6. ')*' → logprob: -11.224380493164062
    7. '])' → logprob: -11.599380493164062
    8. ')>>' → logprob: -12.724380493164062
    9. ')+' → logprob: -13.099380493164062
    10. '*' → logprob: -13.099380493164062

Token 324: '%' (ID: 4)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6343874931335449
    2. ')%' → logprob: -1.009387493133545
    3. '%' → logprob: -2.259387493133545
    4. ' )' → logprob: -7.634387493133545
    5. ' %' → logprob: -9.009387969970703
    6. '%B' → logprob: -9.634387969970703
    7. ')
' → logprob: -9.634387969970703
    8. '%A' → logprob: -10.009387969970703
    9. '+' → logprob: -10.884387969970703
    10. ',end' → logprob: -11.134387969970703

Token 325: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -4.36574100604048e-06
    2. ' P' → logprob: -12.375004768371582
    3. ' ' → logprob: -17.375003814697266
    4. '   ' → logprob: -17.750003814697266
    5. '	P' → logprob: -19.000003814697266
    6. '\P' → logprob: -19.000003814697266
    7. '998' → logprob: -19.250003814697266
    8. '
' → logprob: -19.375003814697266
    9. '>P' → logprob: -19.375003814697266
    10. ')' → logprob: -19.625003814697266

Token 326: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5213274309644476e-05
    2. ' )' → logprob: -11.125015258789062
    3. '))' → logprob: -16.125015258789062
    4. ')}' → logprob: -16.500015258789062
    5. ')`' → logprob: -16.625015258789062
    6. ')
' → logprob: -17.625015258789062
    7. ')#' → logprob: -17.875015258789062
    8. '),' → logprob: -18.000015258789062
    9. '})' → logprob: -18.375015258789062
    10. '*)' → logprob: -18.875015258789062


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 324
Tokens correctement prédits (1ère position, stricte): 134
Tokens correctement prédits (1ère position, avec adaptation): 139
Tokens correctement prédits (top 10): 245
Précision stricte (1ère position): 41.36%
Précision adaptée (1ère position): 42.90%
Précision (top 10): 75.62%
================================================================================
