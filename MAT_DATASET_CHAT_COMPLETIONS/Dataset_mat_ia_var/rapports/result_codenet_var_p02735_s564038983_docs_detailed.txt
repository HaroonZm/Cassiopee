================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:21:30
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def min_stroke_path():
    """
    Calcule le nombre minimal de traits requis pour parcourir une grille en partant du coin supérieur gauche,
    en ne changeant de trait que lorsque le caractère rencontré diffère du précédent.
    Les cases sont remplies de "." ou de "#". La fonction lit la hauteur (h) et la largeur (w) de la grille,
    puis la grille elle-même en entrée standard.

    La logique utilise une programmation dynamique sur la dernière ligne lue, 
    en stockant le nombre minimal de changements nécessaires pour chaque colonne lors du parcours.
    
    Entrée :
        Sur la première ligne : deux entiers h et w (hauteur et largeur de la grille)
        Puis h lignes, chacune de longueur w, ne contenant que les caractères "." ou "#"
        
    Sortie :
        Affiche le nombre minimal de "traits" à effectuer pour parcourir la grille (un entier)
    """
    # Lire les dimensions de la grille
    h, w = map(int, input().split())
    
    # d[j] : nombre minimal de changements/coups nécessaires pour atteindre la case (i, j)
    # Initialisé à 0 pour d[0] (garde-fou), puis à une valeur élevée (300) pour les autres
    d = [0] + [300] * w
    
    # a contiendra le caractère de la première case de la grille, utilisé ultérieurement
    for i in range(h):
        s = input()  # Lecture d'une ligne de la grille
        if i == 0:
            a = s[0]  # Caractère de départ (première case de la grille)
        for j in range(w):
            # On est sur une case dont le contenu est s[j]
            # t est True (1) si le caractère courant est égal au caractère de départ (a), sinon False (0)
            t = s[j] == a
            
            # On augmente d[j] si le nombre actuel d[j] est pair, selon la parité et la couleur désirée
            d[j] += t ^ (d[j] % 2 == 0)
            
            if j > 0:
                # Pour bouger à droite, on prend le minimum entre :
                # - continuer par le haut (d[j], déjà mis à jour)
                # - continuer par la gauche (coût d[j-1] + un éventuel changement selon la couleur)
                d[j] = min(d[j], d[j-1] + t ^ (d[j-1] % 2 == 0))
    
    # Calcul final :
    # - d[-2] correspond au coût d'arrivée dans la dernière case de la grille (en bas à droite)
    # - a == "#" : on ajoute 1 si la première case est un "#"
    # - le +1 et la division par 2 normalisent le nombre de changements
    print((d[-2] + (a == "#") + 1) // 2)

# Lancer la fonction principale
min_stroke_path()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' min' (ID: 1349)
  → Token d'amorce (pas de prédiction)

Token 2: '_st' (ID: 2518)
  → Token d'amorce (pas de prédiction)

Token 3: 'roke' (ID: 11472)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.15284878015518188
    2. 'ring' → logprob: -2.277848720550537
    3. 'a' → logprob: -4.652848720550537
    4. '_' → logprob: -4.777848720550537
    5. '_r' → logprob: -5.027848720550537
    6. 'er' → logprob: -5.652848720550537
    7. 'ep' → logprob: -6.527848720550537
    8. 'art' → logprob: -6.652848720550537
    9. '_ring' → logprob: -6.652848720550537
    10. 'rings' → logprob: -6.652848720550537

Token 4: '_path' (ID: 5558)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38323497772216797
    2. 's' → logprob: -1.633234977722168
    3. '_' → logprob: -2.383234977722168
    4. '_:' → logprob: -5.383234977722168
    5. '():' → logprob: -5.508234977722168
    6. '(s' → logprob: -5.508234977722168
    7. '(_:' → logprob: -6.258234977722168
    8. '(_' → logprob: -6.383234977722168
    9. '```' → logprob: -6.383234977722168
    10. '_s' → logprob: -6.633234977722168

Token 5: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01205936074256897
    2. '_' → logprob: -4.512059211730957
    3. '(:' → logprob: -8.262059211730957
    4. '_:' → logprob: -8.262059211730957
    5. '(_:' → logprob: -8.637059211730957
    6. '_(' → logprob: -9.137059211730957
    7. '(_' → logprob: -9.387059211730957
    8. '():' → logprob: -10.137059211730957
    9. '(a' → logprob: -11.512059211730957
    10. '(def' → logprob: -11.637059211730957

Token 6: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1785026639699936
    2. '\' → logprob: -2.9285025596618652
    3. '   ' → logprob: -3.1785025596618652
    4. '\n' → logprob: -3.6785025596618652
    5. '():' → logprob: -3.8035025596618652
    6. '```' → logprob: -4.303502559661865
    7. '(' → logprob: -5.678502559661865
    8. ':
' → logprob: -7.803502559661865
    9. '    ' → logprob: -7.803502559661865
    10. '    
' → logprob: -7.928502559661865

Token 7: ' """
' (ID: 7037)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6947512626647949
    2. '   ' → logprob: -1.569751262664795
    3. '_' → logprob: -2.944751262664795
    4. '    ' → logprob: -3.319751262664795
    5. 'a' → logprob: -3.444751262664795
    6. ''' → logprob: -3.694751262664795
    7. ':' → logprob: -4.069751262664795
    8. 'n' → logprob: -4.069751262664795
    9. '(' → logprob: -4.069751262664795
    10. 'r' → logprob: -4.319751262664795

Token 8: '   ' (ID: 271)
  Prédit: 'Calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Calculate' → logprob: -0.9863053560256958
    2. 'Find' → logprob: -1.1113053560256958
    3. '"""' → logprob: -1.3613053560256958
    4. 'Calcul' → logprob: -4.486305236816406
    5. 'Returns' → logprob: -4.861305236816406
    6. '   ' → logprob: -5.361305236816406
    7. 'Return' → logprob: -5.611305236816406
    8. ''''' → logprob: -5.986305236816406
    9. ' Calculate' → logprob: -5.986305236816406
    10. ' Find' → logprob: -6.361305236816406

Token 9: ' Cal' (ID: 4453)
  Prédit: 'Find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Find' → logprob: -0.45175066590309143
    2. 'Calculate' → logprob: -1.576750636100769
    3. '"""' → logprob: -2.3267507553100586
    4. 'Returns' → logprob: -4.076750755310059
    5. 'Calcul' → logprob: -4.326750755310059
    6. 'Return' → logprob: -4.826750755310059
    7. '   ' → logprob: -5.701750755310059
    8. 'Compute' → logprob: -5.826750755310059
    9. 'Given' → logprob: -6.576750755310059
    10. 'Determine' → logprob: -6.701750755310059

Token 10: 'cule' (ID: 45017)
  Prédit: 'culate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'culate' → logprob: -0.00401939544826746
    2. 'c' → logprob: -6.254019260406494
    3. 'cul' → logprob: -6.254019260406494
    4. '   ' → logprob: -9.754019737243652
    5. 'cu' → logprob: -10.379019737243652
    6. 'cula' → logprob: -10.379019737243652
    7. 'cule' → logprob: -11.379019737243652
    8. 'culated' → logprob: -12.129019737243652
    9. '```' → logprob: -12.379019737243652
    10. 'cular' → logprob: -12.504019737243652

Token 11: ' le' (ID: 505)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.08425142616033554
    2. 's' → logprob: -2.7092514038085938
    3. 'te' → logprob: -4.459251403808594
    4. 'rate' → logprob: -6.584251403808594
    5. 't' → logprob: -7.709251403808594
    6. 'm' → logprob: -8.709251403808594
    7. 'ate' → logprob: -9.334251403808594
    8. '   ' → logprob: -9.334251403808594
    9. '```' → logprob: -9.834251403808594
    10. 'd' → logprob: -10.084251403808594

Token 12: ' nombre' (ID: 9733)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.859550952911377
    2. ' nombre' → logprob: -1.359550952911377
    3. '   ' → logprob: -1.984550952911377
    4. 's' → logprob: -2.484550952911377
    5. ' minimum' → logprob: -3.359550952911377
    6. ' ' → logprob: -3.734550952911377
    7. '  ' → logprob: -4.234550952911377
    8. ' minimal' → logprob: -4.609550952911377
    9. ' plus' → logprob: -5.984550952911377
    10. ' chemin' → logprob: -6.359550952911377

Token 13: ' minimal' (ID: 19957)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3780965805053711
    2. ' de' → logprob: -1.878096580505371
    3. ' d' → logprob: -2.378096580505371
    4. '  ' → logprob: -4.003096580505371
    5. '_' → logprob: -4.503096580505371
    6. 's' → logprob: -4.503096580505371
    7. '   ' → logprob: -4.753096580505371
    8. 'd' → logprob: -5.753096580505371
    9. ' des' → logprob: -5.753096580505371
    10. ' ' → logprob: -6.253096580505371

Token 14: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7886136770248413
    2. ' d' → logprob: -1.5386136770248413
    3. ' ' → logprob: -2.038613796234131
    4. '  ' → logprob: -2.538613796234131
    5. 's' → logprob: -3.038613796234131
    6. ' des' → logprob: -3.163613796234131
    7. '   ' → logprob: -4.163613796234131
    8. '    ' → logprob: -6.038613796234131
    9. 'd' → logprob: -6.038613796234131
    10. '_' → logprob: -6.163613796234131

Token 15: ' traits' (ID: 42908)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0086266994476318
    2. ' ' → logprob: -1.5086266994476318
    3. ' coups' → logprob: -1.8836266994476318
    4. ' strokes' → logprob: -2.758626699447632
    5. ' ' → logprob: -3.258626699447632
    6. ' pas' → logprob: -3.383626699447632
    7. ' mouvements' → logprob: -4.258626937866211
    8. ' déplacements' → logprob: -4.383626937866211
    9. ' s' → logprob: -4.508626937866211
    10. 'c' → logprob: -4.633626937866211

Token 16: ' requis' (ID: 35842)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.501624584197998
    2. ' ' → logprob: -1.501624584197998
    3. 's' → logprob: -3.001624584197998
    4. ' nécessaires' → logprob: -3.126624584197998
    5. '    ' → logprob: -3.501624584197998
    6. '  ' → logprob: -4.376624584197998
    7. ' pour' → logprob: -4.751624584197998
    8. ' nécessaire' → logprob: -5.251624584197998
    9. '```' → logprob: -5.876624584197998
    10. ' ' → logprob: -6.376624584197998

Token 17: ' pour' (ID: 1930)
  Prédit: ' pour'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pour' → logprob: -0.5166257619857788
    2. '   ' → logprob: -1.0166257619857788
    3. 'pour' → logprob: -4.141625881195068
    4. ' ' → logprob: -4.516625881195068
    5. ' for' → logprob: -5.641625881195068
    6. '  ' → logprob: -6.141625881195068
    7. ' ' → logprob: -6.391625881195068
    8. '.' → logprob: -6.766625881195068
    9. '    ' → logprob: -6.766625881195068
    10. ' to' → logprob: -7.391625881195068

Token 18: ' parcour' (ID: 130642)
  Prédit: ' écrire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' écrire' → logprob: -1.4727509021759033
    2. ' rel' → logprob: -1.8477509021759033
    3. ' dess' → logprob: -1.8477509021759033
    4. ' couvrir' → logprob: -1.8477509021759033
    5. ' tracer' → logprob: -2.2227509021759033
    6. ' réaliser' → logprob: -2.8477509021759033
    7. '   ' → logprob: -3.7227509021759033
    8. ' compléter' → logprob: -4.222750663757324
    9. 'r' → logprob: -4.472750663757324
    10. ' terminer' → logprob: -4.472750663757324

Token 19: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -4.36574100604048e-06
    2. '   ' → logprob: -13.500004768371582
    3. '_ir' → logprob: -13.625004768371582
    4. 'r' → logprob: -14.250004768371582
    5. 'i' → logprob: -15.375004768371582
    6. '       ' → logprob: -15.750004768371582
    7. '               ' → logprob: -16.125003814697266
    8. 'rir' → logprob: -16.250003814697266
    9. '"' → logprob: -16.750003814697266
    10. 'er' → logprob: -16.875003814697266

Token 20: ' une' (ID: 2463)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -1.2822527885437012
    2. ' l' → logprob: -1.7822527885437012
    3. ' ' → logprob: -1.9072527885437012
    4. ' toute' → logprob: -2.532252788543701
    5. ' tout' → logprob: -2.657252788543701
    6. 'l' → logprob: -2.782252788543701
    7. '   ' → logprob: -2.907252788543701
    8. ' le' → logprob: -2.907252788543701
    9. ' la' → logprob: -3.907252788543701
    10. ' chaque' → logprob: -4.032252788543701

Token 21: ' grille' (ID: 99153)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5734050869941711
    2. ' ligne' → logprob: -2.5734050273895264
    3. ' surface' → logprob: -2.6984050273895264
    4. ' zone' → logprob: -2.8234050273895264
    5. ' grille' → logprob: -3.1984050273895264
    6. ' forme' → logprob: -3.6984050273895264
    7. ' phrase' → logprob: -3.8234050273895264
    8. '   ' → logprob: -4.0734052658081055
    9. ' image' → logprob: -4.1984052658081055
    10. ' figure' → logprob: -4.4484052658081055

Token 22: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32655811309814453
    2. ' de' → logprob: -2.0765581130981445
    3. ' en' → logprob: -3.2015581130981445
    4. '.' → logprob: -3.5765581130981445
    5. '```' → logprob: -4.0765581130981445
    6. ' ' → logprob: -4.2015581130981445
    7. ',' → logprob: -4.9515581130981445
    8. ' d' → logprob: -4.9515581130981445
    9. ' à' → logprob: -5.5765581130981445
    10. '_' → logprob: -5.5765581130981445

Token 23: ' part' (ID: 997)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.5150673985481262
    2. '   ' → logprob: -1.7650673389434814
    3. ' une' → logprob: -2.0150673389434814
    4. ' ' → logprob: -3.8900673389434814
    5. 'un' → logprob: -4.7650675773620605
    6. '```' → logprob: -4.7650675773620605
    7. 'une' → logprob: -4.8900675773620605
    8. ' continu' → logprob: -5.0150675773620605
    9. ' utilisant' → logprob: -5.2650675773620605
    10. 'unic' → logprob: -5.5150675773620605

Token 24: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.01620926894247532
    2. 'ir' → logprob: -4.391209125518799
    3. 'ie' → logprob: -5.766209125518799
    4. 'i' → logprob: -8.516209602355957
    5. '```' → logprob: -9.141209602355957
    6. 'age' → logprob: -10.266209602355957
    7. '   ' → logprob: -10.266209602355957
    8. 'a' → logprob: -10.516209602355957
    9. '-ant' → logprob: -10.516209602355957
    10. ' ant' → logprob: -10.641209602355957

Token 25: ' du' (ID: 1462)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.39886710047721863
    2. ' de' → logprob: -1.398867130279541
    3. ' du' → logprob: -2.898867130279541
    4. 'd' → logprob: -4.523867130279541
    5. 'de' → logprob: -5.023867130279541
    6. '   ' → logprob: -5.148867130279541
    7. 'du' → logprob: -6.148867130279541
    8. ' par' → logprob: -7.523867130279541
    9. ' from' → logprob: -8.023866653442383
    10. ' à' → logprob: -8.273866653442383

Token 26: ' coin' (ID: 22179)
  Prédit: ' coin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coin' → logprob: -1.0662411451339722
    2. 'coin' → logprob: -1.6912411451339722
    3. ' point' → logprob: -1.8162411451339722
    4. 'prem' → logprob: -2.4412412643432617
    5. ' premier' → logprob: -3.1912412643432617
    6. 'point' → logprob: -3.4412412643432617
    7. ' sommet' → logprob: -3.4412412643432617
    8. '   ' → logprob: -3.5662412643432617
    9. '```' → logprob: -4.441241264343262
    10. 'c' → logprob: -4.566241264343262

Token 27: ' supérieur' (ID: 98491)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2925245761871338
    2. ' supérieur' → logprob: -1.4175245761871338
    3. 'sup' → logprob: -5.042524337768555
    4. ' inférieur' → logprob: -6.167524337768555
    5. ' en' → logprob: -6.917524337768555
    6. ' sup' → logprob: -6.917524337768555
    7. ' ' → logprob: -8.042524337768555
    8. 'haut' → logprob: -9.042524337768555
    9. '  ' → logprob: -9.417524337768555
    10. ' supérieure' → logprob: -9.792524337768555

Token 28: ' gauche' (ID: 58367)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29771924018859863
    2. ' ' → logprob: -2.1727192401885986
    3. ' gauche' → logprob: -2.9227192401885986
    4. ' droit' → logprob: -3.1727192401885986
    5. 'g' → logprob: -3.7977192401885986
    6. 'd' → logprob: -4.9227190017700195
    7. '```' → logprob: -5.2977190017700195
    8. '  ' → logprob: -5.2977190017700195
    9. ' d' → logprob: -6.0477190017700195
    10. '    ' → logprob: -7.2977190017700195

Token 29: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3945670425891876
    2. ',' → logprob: -2.1445670127868652
    3. '.' → logprob: -2.1445670127868652
    4. ' et' → logprob: -3.5195670127868652
    5. ' ' → logprob: -3.8945670127868652
    6. ' ,' → logprob: -4.644567012786865
    7. ' de' → logprob: -5.019567012786865
    8. ' en' → logprob: -5.144567012786865
    9. '    ' → logprob: -5.519567012786865
    10. '  ' → logprob: -6.019567012786865

Token 30: '   ' (ID: 271)
  Prédit: ' et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -1.2151163816452026
    2. '   ' → logprob: -1.3401163816452026
    3. ' en' → logprob: -1.8401163816452026
    4. ' ' → logprob: -2.090116500854492
    5. '    ' → logprob: -2.090116500854492
    6. '  ' → logprob: -5.965116500854492
    7. ' ligne' → logprob: -6.090116500854492
    8. 'et' → logprob: -6.090116500854492
    9. ' ' → logprob: -6.090116500854492
    10. ' travers' → logprob: -6.215116500854492

Token 31: ' en' (ID: 469)
  Prédit: ' et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.9450287818908691
    2. '   ' → logprob: -1.1950287818908691
    3. ' en' → logprob: -1.4450287818908691
    4. ' ' → logprob: -3.945028781890869
    5. '    ' → logprob: -4.195028781890869
    6. 'et' → logprob: -5.445028781890869
    7. ' travers' → logprob: -5.945028781890869
    8. ' au' → logprob: -6.070028781890869
    9. '.' → logprob: -6.320028781890869
    10. ' and' → logprob: -6.320028781890869

Token 32: ' ne' (ID: 453)
  Prédit: ' part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' part' → logprob: -1.4784424304962158
    2. ' passant' → logprob: -2.103442430496216
    3. ' suivant' → logprob: -2.228442430496216
    4. ' parcour' → logprob: -2.478442430496216
    5. 'part' → logprob: -2.728442430496216
    6. '   ' → logprob: -2.728442430496216
    7. ' utilisant' → logprob: -3.103442430496216
    8. ' continu' → logprob: -3.478442430496216
    9. ' visit' → logprob: -3.728442430496216
    10. 'pass' → logprob: -3.728442430496216

Token 33: ' change' (ID: 3343)
  Prédit: ' passant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' passant' → logprob: -0.0421796515583992
    2. 'pass' → logprob: -4.792179584503174
    3. ' parcour' → logprob: -5.167179584503174
    4. ' pass' → logprob: -5.417179584503174
    5. ' faisant' → logprob: -5.667179584503174
    6. ' ' → logprob: -5.667179584503174
    7. ' travers' → logprob: -5.792179584503174
    8. ' visit' → logprob: -5.792179584503174
    9. ' couvr' → logprob: -7.042179584503174
    10. '   ' → logprob: -7.167179584503174

Token 34: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.0002217748697148636
    2. 'a' → logprob: -9.625222206115723
    3. 'ment' → logprob: -9.875222206115723
    4. '   ' → logprob: -10.750222206115723
    5. 'r' → logprob: -11.500222206115723
    6. 'd' → logprob: -11.750222206115723
    7. 'nt' → logprob: -12.000222206115723
    8. ' pas' → logprob: -12.125222206115723
    9. ' ant' → logprob: -12.125222206115723
    10. '```' → logprob: -12.125222206115723

Token 35: ' de' (ID: 334)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.37212926149368286
    2. ' de' → logprob: -1.372129201889038
    3. 'pas' → logprob: -3.997129201889038
    4. ' ' → logprob: -3.997129201889038
    5. ' que' → logprob: -4.747129440307617
    6. ' jamais' → logprob: -5.622129440307617
    7. 'de' → logprob: -5.997129440307617
    8. ' rien' → logprob: -6.247129440307617
    9. ' aucun' → logprob: -7.497129440307617
    10. ' ' → logprob: -7.622129440307617

Token 36: ' trait' (ID: 15458)
  Prédit: ' ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -1.143487811088562
    2. 'ligne' → logprob: -1.393487811088562
    3. ' direction' → logprob: -1.518487811088562
    4. 'direction' → logprob: -1.768487811088562
    5. 'case' → logprob: -4.393487930297852
    6. ' case' → logprob: -5.143487930297852
    7. 'l' → logprob: -5.518487930297852
    8. '```' → logprob: -5.643487930297852
    9. ' sens' → logprob: -6.143487930297852
    10. 'trait' → logprob: -6.143487930297852

Token 37: ' que' (ID: 661)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.01660902053117752
    2. ' de' → logprob: -4.391609191894531
    3. ' s' → logprob: -5.891609191894531
    4. ' ' → logprob: -7.766609191894531
    5. '_s' → logprob: -7.766609191894531
    6. ' d' → logprob: -8.891609191894531
    7. '_' → logprob: -8.891609191894531
    8. '_de' → logprob: -9.766609191894531
    9. ' line' → logprob: -11.016609191894531
    10. ',' → logprob: -11.141609191894531

Token 38: ' lorsque' (ID: 39361)
  Prédit: ' lorsqu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lorsqu' → logprob: -0.5433918833732605
    2. ' lorsque' → logprob: -1.6683919429779053
    3. ' au' → logprob: -2.7933919429779053
    4. 'l' → logprob: -3.1683919429779053
    5. ' lors' → logprob: -3.1683919429779053
    6. ' à' → logprob: -3.7933919429779053
    7. ' ' → logprob: -4.543391704559326
    8. ' pas' → logprob: -4.918391704559326
    9. ' quand' → logprob: -5.168391704559326
    10. ' si' → logprob: -5.418391704559326

Token 39: ' le' (ID: 505)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -1.4061663150787354
    2. ' la' → logprob: -1.4061663150787354
    3. ' l' → logprob: -1.7811663150787354
    4. ' nécessaire' → logprob: -2.2811663150787354
    5. ' le' → logprob: -2.6561663150787354
    6. ' c' → logprob: -3.6561663150787354
    7. 'l' → logprob: -3.7811663150787354
    8. ' vous' → logprob: -3.7811663150787354
    9. 'cela' → logprob: -4.406166076660156
    10. 'on' → logprob: -4.781166076660156

Token 40: ' caractère' (ID: 80509)
  Prédit: ' sens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sens' → logprob: -0.49220946431159973
    2. ' direction' → logprob: -2.4922094345092773
    3. ' déplacement' → logprob: -3.1172094345092773
    4. ' joueur' → logprob: -3.4922094345092773
    5. ' mouvement' → logprob: -3.4922094345092773
    6. ' code' → logprob: -3.9922094345092773
    7. '   ' → logprob: -4.117209434509277
    8. ' couleur' → logprob: -4.117209434509277
    9. ' color' → logprob: -4.367209434509277
    10. ' changement' → logprob: -4.492209434509277

Token 41: ' rencontré' (ID: 141085)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6752286553382874
    2. ''' → logprob: -1.5502285957336426
    3. ' est' → logprob: -2.3002285957336426
    4. ' suivant' → logprob: -3.0502285957336426
    5. ' '' → logprob: -3.1752285957336426
    6. 'd' → logprob: -4.300228595733643
    7. ' de' → logprob: -4.550228595733643
    8. '"' → logprob: -4.675228595733643
    9. ' d' → logprob: -4.800228595733643
    10. ' a' → logprob: -4.800228595733643

Token 42: ' diff' (ID: 8868)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.27143073081970215
    2. ' n' → logprob: -1.6464307308197021
    3. ''' → logprob: -4.521430969238281
    4. 'n' → logprob: -4.771430969238281
    5. ' '' → logprob: -4.896430969238281
    6. 'est' → logprob: -5.396430969238281
    7. ''est' → logprob: -5.896430969238281
    8. '"' → logprob: -6.646430969238281
    9. 'es' → logprob: -6.771430969238281
    10. 's' → logprob: -7.021430969238281

Token 43: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.4568072259426117
    2. 'é' → logprob: -1.206807255744934
    3. 'è' → logprob: -3.0818071365356445
    4. 'èrent' → logprob: -4.5818071365356445
    5. 'èr' → logprob: -5.7068071365356445
    6. 'e' → logprob: -5.9568071365356445
    7. 'ére' → logprob: -6.3318071365356445
    8. 'ê' → logprob: -6.9568071365356445
    9. 'érent' → logprob: -7.4568071365356445
    10. 'ères' → logprob: -7.8318071365356445

Token 44: ' du' (ID: 1462)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6693965196609497
    2. '   ' → logprob: -1.4193965196609497
    3. ')' → logprob: -3.04439640045166
    4. '.' → logprob: -3.16939640045166
    5. ' de' → logprob: -3.16939640045166
    6. 'e' → logprob: -4.04439640045166
    7. ',' → logprob: -4.16939640045166
    8. '"' → logprob: -4.91939640045166
    9. ' d' → logprob: -4.91939640045166
    10. 's' → logprob: -4.91939640045166

Token 45: ' précédent' (ID: 128462)
  Prédit: ' précédent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' précédent' → logprob: -0.32089993357658386
    2. 'pr' → logprob: -1.3208999633789062
    3. ' caractère' → logprob: -6.070899963378906
    4. 'car' → logprob: -6.195899963378906
    5. 'preced' → logprob: -7.070899963378906
    6. '```' → logprob: -7.070899963378906
    7. ' ' → logprob: -8.195899963378906
    8. 'pré' → logprob: -8.445899963378906
    9. '   ' → logprob: -8.570899963378906
    10. 'previous' → logprob: -8.945899963378906

Token 46: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7971366047859192
    2. ':' → logprob: -1.6721365451812744
    3. ' ' → logprob: -2.5471365451812744
    4. '\n' → logprob: -2.7971365451812744
    5. '\' → logprob: -2.9221365451812744
    6. ')' → logprob: -3.2971365451812744
    7. '"' → logprob: -3.5471365451812744
    8. '"""' → logprob: -3.6721365451812744
    9. '.' → logprob: -4.1721367835998535
    10. ' :' → logprob: -4.2971367835998535

Token 47: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.36477386951446533
    2. '   ' → logprob: -1.3647738695144653
    3. '"' → logprob: -3.114773750305176
    4. '"""
' → logprob: -6.489773750305176
    5. ' """' → logprob: -6.614773750305176
    6. '""' → logprob: -7.364773750305176
    7. '```' → logprob: -7.489773750305176
    8. ')' → logprob: -7.614773750305176
    9. ' ' → logprob: -8.364773750305176
    10. '`' → logprob: -8.364773750305176

Token 48: ' Les' (ID: 7029)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.5048334002494812
    2. '   ' → logprob: -1.004833459854126
    3. '"' → logprob: -3.754833459854126
    4. '"""
' → logprob: -5.629833221435547
    5. '```' → logprob: -6.879833221435547
    6. ')' → logprob: -7.629833221435547
    7. ' """' → logprob: -7.629833221435547
    8. '""' → logprob: -7.879833221435547
    9. '\n' → logprob: -8.879833221435547
    10. ''' → logprob: -9.004833221435547

Token 49: ' cases' (ID: 7911)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20998382568359375
    2. '   ' → logprob: -2.5849838256835938
    3. ' caractères' → logprob: -3.2099838256835938
    4. ' espaces' → logprob: -3.5849838256835938
    5. ' caract' → logprob: -4.334983825683594
    6. '  ' → logprob: -4.709983825683594
    7. ' ' → logprob: -5.334983825683594
    8. ' lignes' → logprob: -5.459983825683594
    9. '  ' → logprob: -6.209983825683594
    10. '    ' → logprob: -6.459983825683594

Token 50: ' sont' (ID: 5242)
  Prédit: ' suivantes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' suivantes' → logprob: -0.27198317646980286
    2. ' sont' → logprob: -2.3969831466674805
    3. ' adj' → logprob: -4.2719831466674805
    4. ' restantes' → logprob: -4.2719831466674805
    5. ' cont' → logprob: -4.3969831466674805
    6. ' suivante' → logprob: -4.5219831466674805
    7. 's' → logprob: -4.6469831466674805
    8. ' ' → logprob: -5.0219831466674805
    9. ' contenant' → logprob: -5.0219831466674805
    10. 'con' → logprob: -5.1469831466674805

Token 51: ' rem' (ID: 1662)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.1703667640686035
    2. ' rem' → logprob: -1.5453667640686035
    3. ' parcour' → logprob: -2.2953667640686035
    4. 'rem' → logprob: -2.9203667640686035
    5. ' un' → logprob: -3.1703667640686035
    6. ' travers' → logprob: -3.9203667640686035
    7. 'des' → logprob: -4.0453667640686035
    8. ' représent' → logprob: -4.1703667640686035
    9. ' sépar' → logprob: -4.4203667640686035
    10. ' défin' → logprob: -4.4203667640686035

Token 52: 'plies' (ID: 9773)
  Prédit: 'plies'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plies' → logprob: -0.019341083243489265
    2. 'pl' → logprob: -4.269340991973877
    3. 'p' → logprob: -5.269340991973877
    4. 'pli' → logprob: -11.644341468811035
    5. 'plied' → logprob: -12.769341468811035
    6. 'plit' → logprob: -13.019341468811035
    7. '   ' → logprob: -14.519341468811035
    8. 'pies' → logprob: -14.644341468811035
    9. 'ply' → logprob: -15.019341468811035
    10. 'п' → logprob: -15.144341468811035

Token 53: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.26492127776145935
    2. ' ' → logprob: -2.764921188354492
    3. ' d' → logprob: -3.264921188354492
    4. ' par' → logprob: -3.264921188354492
    5. ' ,' → logprob: -4.264921188354492
    6. '.' → logprob: -4.389921188354492
    7. ',' → logprob: -4.639921188354492
    8. ' by' → logprob: -4.639921188354492
    9. '<|end|>' → logprob: -4.639921188354492
    10. ' avec' → logprob: -4.889921188354492

Token 54: ' "."' (ID: 50107)
  Prédit: ' caractères'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -0.11079370975494385
    2. ' ' → logprob: -3.4857935905456543
    3. ''' → logprob: -3.8607935905456543
    4. ' '' → logprob: -4.235793590545654
    5. 'car' → logprob: -5.110793590545654
    6. ' caract' → logprob: -5.485793590545654
    7. ' caracteres' → logprob: -5.485793590545654
    8. ' espaces' → logprob: -5.610793590545654
    9. 'a' → logprob: -5.860793590545654
    10. ' lettres' → logprob: -6.110793590545654

Token 55: ' ou' (ID: 2031)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3966255486011505
    2. '\' → logprob: -2.021625518798828
    3. ' ' → logprob: -3.021625518798828
    4. ':' → logprob: -3.271625518798828
    5. '
' → logprob: -3.521625518798828
    6. ',' → logprob: -4.021625518798828
    7. '\n' → logprob: -4.146625518798828
    8. '"' → logprob: -4.896625518798828
    9. '_' → logprob: -5.146625518798828
    10. ' 
' → logprob: -5.646625518798828

Token 56: ' de' (ID: 334)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.12398356944322586
    2. '"#' → logprob: -3.12398362159729
    3. '"d' → logprob: -3.87398362159729
    4. 'de' → logprob: -4.873983383178711
    5. '"x' → logprob: -5.248983383178711
    6. ' de' → logprob: -5.373983383178711
    7. ' "' → logprob: -5.748983383178711
    8. '"a' → logprob: -5.873983383178711
    9. ''' → logprob: -5.998983383178711
    10. ' "#"' → logprob: -5.998983383178711

Token 57: ' "#' (ID: 11351)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.7626128196716309
    2. '"#' → logprob: -0.7626128196716309
    3. ' "#"' → logprob: -3.512612819671631
    4. '"*' → logprob: -4.637612819671631
    5. '"x' → logprob: -5.512612819671631
    6. 'X' → logprob: -5.637612819671631
    7. '#' → logprob: -5.637612819671631
    8. '"/' → logprob: -5.762612819671631
    9. ' "' → logprob: -5.887612819671631
    10. '"-' → logprob: -6.887612819671631

Token 58: '".' (ID: 4050)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.02905735932290554
    2. '"""' → logprob: -4.404057502746582
    3. '"""
' → logprob: -5.154057502746582
    4. '".' → logprob: -5.404057502746582
    5. '"
' → logprob: -5.779057502746582
    6. '.' → logprob: -7.154057502746582
    7. '")' → logprob: -8.029057502746582
    8. '."' → logprob: -8.154057502746582
    9. 's' → logprob: -8.279057502746582
    10. '```' → logprob: -8.529057502746582

Token 59: ' La' (ID: 3038)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18615959584712982
    2. '\' → logprob: -3.186159610748291
    3. '
' → logprob: -3.561159610748291
    4. '    
' → logprob: -3.686159610748291
    5. ' 
' → logprob: -4.561159610748291
    6. '"' → logprob: -4.686159610748291
    7. '\n' → logprob: -4.811159610748291
    8. ' ' → logprob: -4.936159610748291
    9. '    ' → logprob: -5.061159610748291
    10. '"""' → logprob: -5.061159610748291

Token 60: ' fonction' (ID: 17610)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21729260683059692
    2. 's' → logprob: -3.467292547225952
    3. 'gr' → logprob: -3.592292547225952
    4. 'def' → logprob: -3.717292547225952
    5. ' grille' → logprob: -3.842292547225952
    6. '   ' → logprob: -4.092292785644531
    7. ' "' → logprob: -4.717292785644531
    8. '#' → logprob: -4.842292785644531
    9. ' """' → logprob: -4.842292785644531
    10. 'l' → logprob: -4.842292785644531

Token 61: ' lit' (ID: 11980)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4941118657588959
    2. ' continue' → logprob: -2.3691117763519287
    3. ' continu' → logprob: -2.3691117763519287
    4. ' return' → logprob: -2.7441117763519287
    5. ' retourne' → logprob: -3.4941117763519287
    6. '   ' → logprob: -4.119112014770508
    7. ' continuer' → logprob: -4.744112014770508
    8. ' s' → logprob: -4.869112014770508
    9. ' doit' → logprob: -4.869112014770508
    10. ' continues' → logprob: -4.869112014770508

Token 62: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.559427797794342
    2. ' la' → logprob: -1.6844277381896973
    3. ' le' → logprob: -2.5594277381896973
    4. ' les' → logprob: -3.1844277381896973
    5. 's' → logprob: -3.5594277381896973
    6. ' l' → logprob: -4.184427738189697
    7. ' un' → logprob: -4.434427738189697
    8. '_' → logprob: -4.559427738189697
    9. '()' → logprob: -4.559427738189697
    10. '   ' → logprob: -5.434427738189697

Token 63: ' hauteur' (ID: 72987)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4102490246295929
    2. 'gr' → logprob: -1.7852489948272705
    3. 'l' → logprob: -2.7852489948272705
    4. 'g' → logprob: -3.5352489948272705
    5. 's' → logprob: -3.7852489948272705
    6. ' g' → logprob: -4.41024923324585
    7. ' grille' → logprob: -4.41024923324585
    8. '   ' → logprob: -4.66024923324585
    9. ' 
' → logprob: -5.91024923324585
    10. 'n' → logprob: -6.53524923324585

Token 64: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6125121712684631
    2. ' et' → logprob: -1.6125121116638184
    3. ' ' → logprob: -2.1125121116638184
    4. '   ' → logprob: -3.3625121116638184
    5. ' ,' → logprob: -3.7375121116638184
    6. ')' → logprob: -3.9875121116638184
    7. '    ' → logprob: -4.237512111663818
    8. '_' → logprob: -4.612512111663818
    9. ' de' → logprob: -4.737512111663818
    10. 'et' → logprob: -5.237512111663818

Token 65: 'h' (ID: 71)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19086943566799164
    2. ' )' → logprob: -1.9408694505691528
    3. ' ' → logprob: -4.190869331359863
    4. ' n' → logprob: -5.065869331359863
    5. 'n' → logprob: -5.315869331359863
    6. ',' → logprob: -7.065869331359863
    7. ' and' → logprob: -7.690869331359863
    8. ')n' → logprob: -7.815869331359863
    9. ' ,' → logprob: -7.940869331359863
    10. 'h' → logprob: -8.440869331359863

Token 66: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1661010980606079
    2. ',' → logprob: -2.0411009788513184
    3. '=' → logprob: -4.541100978851318
    4. ' )' → logprob: -5.041100978851318
    5. '),' → logprob: -5.916100978851318
    6. ' ,' → logprob: -6.291100978851318
    7. ' =' → logprob: -7.291100978851318
    8. ',)' → logprob: -8.916101455688477
    9. ',
' → logprob: -9.166101455688477
    10. ' ' → logprob: -9.166101455688477

Token 67: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24087004363536835
    2. '<|end|>' → logprob: -2.6158699989318848
    3. ' ,' → logprob: -3.1158699989318848
    4. ' ' → logprob: -3.4908699989318848
    5. '   ' → logprob: -3.6158699989318848
    6. ')' → logprob: -3.8658699989318848
    7. ' et' → logprob: -4.740869998931885
    8. '    ' → logprob: -6.115869998931885
    9. '<|end|>' → logprob: -6.240869998931885
    10. ' and' → logprob: -6.740869998931885

Token 68: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.10068364441394806
    2. ' largeur' → logprob: -2.8506836891174316
    3. 'la' → logprob: -3.8506836891174316
    4. 'large' → logprob: -5.475683689117432
    5. ' larg' → logprob: -5.975683689117432
    6. 'width' → logprob: -6.350683689117432
    7. ' large' → logprob: -6.600683689117432
    8. ' l' → logprob: -6.600683689117432
    9. ' width' → logprob: -6.725683689117432
    10. ' ' → logprob: -7.225683689117432

Token 69: ' largeur' (ID: 180807)
  Prédit: ' largeur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' largeur' → logprob: -0.33314192295074463
    2. 'large' → logprob: -1.4581419229507446
    3. ' large' → logprob: -3.083141803741455
    4. 'larg' → logprob: -6.458141803741455
    5. 'width' → logprob: -6.833141803741455
    6. 'l' → logprob: -7.333141803741455
    7. ' larg' → logprob: -7.583141803741455
    8. ' width' → logprob: -8.083142280578613
    9. ' ' → logprob: -8.333142280578613
    10. '_large' → logprob: -9.083142280578613

Token 70: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.0032241756562143564
    2. '(s' → logprob: -7.0032243728637695
    3. ')' → logprob: -7.7532243728637695
    4. '(' → logprob: -8.12822437286377
    5. '    ' → logprob: -8.12822437286377
    6. '<|end|>' → logprob: -8.50322437286377
    7. ' )' → logprob: -8.62822437286377
    8. ' de' → logprob: -8.75322437286377
    9. ',' → logprob: -8.75322437286377
    10. '   ' → logprob: -8.87822437286377

Token 71: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.8415884971618652
    2. ' w' → logprob: -0.8415884971618652
    3. 'l' → logprob: -3.2165884971618652
    4. ' l' → logprob: -3.3415884971618652
    5. ' )' → logprob: -3.4665884971618652
    6. ')' → logprob: -3.7165884971618652
    7. ' ' → logprob: -5.091588497161865
    8. 'n' → logprob: -8.341588973999023
    9. ' la' → logprob: -9.091588973999023
    10. ' n' → logprob: -9.216588973999023

Token 72: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02024497464299202
    2. ' )' → logprob: -4.02024507522583
    3. '):' → logprob: -6.89524507522583
    4. '),' → logprob: -7.27024507522583
    5. ',' → logprob: -9.145244598388672
    6. '   ' → logprob: -9.645244598388672
    7. ' ' → logprob: -10.020244598388672
    8. ' ),' → logprob: -10.145244598388672
    9. ').' → logprob: -10.520244598388672
    10. ' de' → logprob: -10.770244598388672

Token 73: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7163547873497009
    2. ',' → logprob: -0.9663547873497009
    3. '    ' → logprob: -3.5913548469543457
    4. ' ' → logprob: -4.341354846954346
    5. ':' → logprob: -4.466354846954346
    6. '<|end|>' → logprob: -4.466354846954346
    7. '\' → logprob: -4.716354846954346
    8. ' :' → logprob: -4.716354846954346
    9. 'def' → logprob: -4.841354846954346
    10. ')' → logprob: -4.966354846954346

Token 74: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.0632089376449585
    2. 'l' → logprob: -3.563209056854248
    3. ' l' → logprob: -3.688209056854248
    4. 'la' → logprob: -5.938209056854248
    5. ' ' → logprob: -6.438209056854248
    6. '<|end|>' → logprob: -6.563209056854248
    7. 'a' → logprob: -7.688209056854248
    8. ' the' → logprob: -8.31320858001709
    9. 's' → logprob: -8.43820858001709
    10. ' code' → logprob: -8.81320858001709

Token 75: ' grille' (ID: 99153)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0047057801857590675
    2. 'g' → logprob: -6.629705905914307
    3. 'gr' → logprob: -6.754705905914307
    4. 'l' → logprob: -7.629705905914307
    5. ' \' → logprob: -7.629705905914307
    6. ' grille' → logprob: -7.754705905914307
    7. ' g' → logprob: -8.879705429077148
    8. ' grid' → logprob: -9.129705429077148
    9. 's' → logprob: -9.379705429077148
    10. '\' → logprob: -9.754705429077148

Token 76: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12660643458366394
    2. ',' → logprob: -2.8766064643859863
    3. ':' → logprob: -3.7516064643859863
    4. '\n' → logprob: -4.376606464385986
    5. '\' → logprob: -4.501606464385986
    6. '
' → logprob: -5.501606464385986
    7. '    
' → logprob: -6.126606464385986
    8. '.' → logprob: -6.251606464385986
    9. ' :' → logprob: -7.001606464385986
    10. '```' → logprob: -7.126606464385986

Token 77: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06676118075847626
    2. '    ' → logprob: -3.3167612552642822
    3. ' ' → logprob: -4.941761016845703
    4. ',' → logprob: -5.316761016845703
    5. ' et' → logprob: -6.066761016845703
    6. ' puis' → logprob: -6.191761016845703
    7. 'et' → logprob: -6.816761016845703
    8. '       ' → logprob: -6.816761016845703
    9. ' \' → logprob: -6.816761016845703
    10. ' ' → logprob: -6.816761016845703

Token 78: ' puis' (ID: 18766)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.059529244899749756
    2. ' puis' → logprob: -3.0595293045043945
    3. '    ' → logprob: -5.8095293045043945
    4. ',' → logprob: -6.6845293045043945
    5. ' et' → logprob: -6.6845293045043945
    6. ' ' → logprob: -6.6845293045043945
    7. '    
' → logprob: -7.8095293045043945
    8. '       ' → logprob: -7.8095293045043945
    9. '\n' → logprob: -7.9345293045043945
    10. ' then' → logprob: -8.309529304504395

Token 79: ' la' (ID: 557)
  Prédit: ' lit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lit' → logprob: -0.2299458384513855
    2. 'l' → logprob: -2.9799458980560303
    3. ' la' → logprob: -3.4799458980560303
    4. ' crée' → logprob: -3.4799458980560303
    5. ' l' → logprob: -3.8549458980560303
    6. ' récup' → logprob: -4.104945659637451
    7. ' construit' → logprob: -5.354945659637451
    8. ' continue' → logprob: -5.479945659637451
    9. ' effect' → logprob: -5.729945659637451
    10. 'lit' → logprob: -5.854945659637451

Token 80: ' grille' (ID: 99153)
  Prédit: ' grille'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grille' → logprob: -0.8982623219490051
    2. ' ' → logprob: -1.3982622623443604
    3. ' g' → logprob: -1.7732622623443604
    4. 'gr' → logprob: -2.5232622623443604
    5. 'g' → logprob: -3.2732622623443604
    6. 's' → logprob: -3.7732622623443604
    7. 'l' → logprob: -4.5232625007629395
    8. ' s' → logprob: -5.2732625007629395
    9. ' grid' → logprob: -5.7732625007629395
    10. ' 
' → logprob: -6.1482625007629395

Token 81: ' elle' (ID: 11451)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7513359189033508
    2. ',' → logprob: -1.376335859298706
    3. '   ' → logprob: -2.001335859298706
    4. ' ' → logprob: -3.251335859298706
    5. '
' → logprob: -3.376335859298706
    6. ':' → logprob: -4.001336097717285
    7. ' ,' → logprob: -5.251336097717285
    8. '  
' → logprob: -5.376336097717285
    9. '    
' → logprob: -5.376336097717285
    10. ' 
' → logprob: -5.501336097717285

Token 82: '-même' (ID: 41085)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.72221839427948
    2. 'n' → logprob: -1.84721839427948
    3. 's' → logprob: -2.4722185134887695
    4. 'st' → logprob: -2.4722185134887695
    5. 't' → logprob: -2.7222185134887695
    6. '-même' → logprob: -3.0972185134887695
    7. 'l' → logprob: -3.7222185134887695
    8. '   ' → logprob: -4.9722185134887695
    9. '\' → logprob: -5.2222185134887695
    10. '```' → logprob: -5.2222185134887695

Token 83: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03950384631752968
    2. '
' → logprob: -3.539503812789917
    3. ':' → logprob: -5.289504051208496
    4. '\n' → logprob: -6.539504051208496
    5. '    
' → logprob: -6.664504051208496
    6. '```' → logprob: -7.414504051208496
    7. '' → logprob: -8.414504051208496
    8. 'n' → logprob: -8.789504051208496
    9. '  
' → logprob: -8.789504051208496
    10. '\' → logprob: -8.789504051208496

Token 84: ' entrée' (ID: 95590)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.7993064522743225
    2. ' entrée' → logprob: -1.5493063926696777
    3. 'entrée' → logprob: -2.7993063926696777
    4. ' stdin' → logprob: -3.4243063926696777
    5. ' lecture' → logprob: -3.5493063926696777
    6. 'semble' → logprob: -3.7993063926696777
    7. 'input' → logprob: -4.174306392669678
    8. ' code' → logprob: -4.299306392669678
    9. ' ligne' → logprob: -4.924306392669678
    10. '```' → logprob: -4.924306392669678

Token 85: ' standard' (ID: 7024)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11157940328121185
    2. ':' → logprob: -2.361579418182373
    3. '
' → logprob: -5.361579418182373
    4. '    
' → logprob: -6.486579418182373
    5. '\n' → logprob: -7.236579418182373
    6. '):' → logprob: -7.361579418182373
    7. '  
' → logprob: -7.361579418182373
    8. ' :' → logprob: -7.486579418182373
    9. '```' → logprob: -8.111578941345215
    10. '\' → logprob: -8.111578941345215

Token 86: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.215655118227005
    2. ':' → logprob: -2.3406550884246826
    3. '
' → logprob: -2.5906550884246826
    4. '    
' → logprob: -5.465655326843262
    5. '    ' → logprob: -5.590655326843262
    6. 'n' → logprob: -6.215655326843262
    7. '\n' → logprob: -6.590655326843262
    8. ' ' → logprob: -6.590655326843262
    9. '```' → logprob: -6.590655326843262
    10. '\' → logprob: -6.715655326843262

Token 87: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013504724483937025
    2. '```' → logprob: -7.876350402832031
    3. '    ' → logprob: -8.626350402832031
    4. ')' → logprob: -8.626350402832031
    5. '    
' → logprob: -8.626350402832031
    6. ' ' → logprob: -9.001350402832031
    7. '
' → logprob: -9.126350402832031
    8. '       ' → logprob: -10.251350402832031
    9. ' 
' → logprob: -10.376350402832031
    10. 'def' → logprob: -10.876350402832031

Token 88: ' La' (ID: 3038)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026593685150146484
    2. ' h' → logprob: -4.7765936851501465
    3. 'h' → logprob: -4.9015936851501465
    4. 'n' → logprob: -6.1515936851501465
    5. '```' → logprob: -6.2765936851501465
    6. '    ' → logprob: -6.7765936851501465
    7. '
' → logprob: -6.9015936851501465
    8. '    
' → logprob: -7.0265936851501465
    9. 'w' → logprob: -7.6515936851501465
    10. '#' → logprob: -7.7765936851501465

Token 89: ' logique' (ID: 115350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2989693880081177
    2. ' ' → logprob: -1.7989693880081177
    3. ' function' → logprob: -2.173969268798828
    4. ' hauteur' → logprob: -2.173969268798828
    5. ' code' → logprob: -2.298969268798828
    6. ' h' → logprob: -2.423969268798828
    7. ' fonction' → logprob: -3.173969268798828
    8. ' suite' → logprob: -3.798969268798828
    9. 'h' → logprob: -4.173969268798828
    10. ' grid' → logprob: -4.548969268798828

Token 90: ' utilise' (ID: 70283)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6905321478843689
    2. ' ' → logprob: -1.1905322074890137
    3. ' :' → logprob: -2.3155322074890137
    4. ':' → logprob: -3.3155322074890137
    5. '    ' → logprob: -3.8155322074890137
    6. '_' → logprob: -4.815532207489014
    7. '  ' → logprob: -5.190532207489014
    8. ' =' → logprob: -5.565532207489014
    9. 'def' → logprob: -6.315532207489014
    10. '       ' → logprob: -6.565532207489014

Token 91: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.6942669153213501
    2. ' un' → logprob: -0.9442669153213501
    3. ' la' → logprob: -3.3192667961120605
    4. 'une' → logprob: -3.6942667961120605
    5. ' l' → logprob: -3.8192667961120605
    6. ' des' → logprob: -5.0692667961120605
    7. 'un' → logprob: -5.5692667961120605
    8. 'l' → logprob: -5.9442667961120605
    9. ' le' → logprob: -5.9442667961120605
    10. '   ' → logprob: -6.3192667961120605

Token 92: ' programmation' (ID: 166376)
  Prédit: ' programmation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' programmation' → logprob: -0.8395536541938782
    2. '   ' → logprob: -2.3395535945892334
    3. 'programm' → logprob: -2.4645535945892334
    4. ' recherche' → logprob: -2.5895535945892334
    5. 'program' → logprob: -3.3395535945892334
    6. ' file' → logprob: -3.7145535945892334
    7. 'file' → logprob: -3.9645535945892334
    8. 'P' → logprob: -4.0895538330078125
    9. 'import' → logprob: -4.2145538330078125
    10. ' approche' → logprob: -4.3395538330078125

Token 93: ' dynamique' (ID: 98708)
  Prédit: ' dynamique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dynamique' → logprob: -0.02660749852657318
    2. ' dynamic' → logprob: -4.026607513427734
    3. 'd' → logprob: -5.651607513427734
    4. '   ' → logprob: -6.026607513427734
    5. ' dynam' → logprob: -7.401607513427734
    6. ' dyn' → logprob: -7.526607513427734
    7. ' d' → logprob: -8.276607513427734
    8. '_' → logprob: -8.276607513427734
    9. '_dyn' → logprob: -8.651607513427734
    10. 'dynamic' → logprob: -8.901607513427734

Token 94: ' sur' (ID: 1512)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19172659516334534
    2. ':' → logprob: -1.941726565361023
    3. ' :' → logprob: -3.9417266845703125
    4. ' ' → logprob: -5.8167266845703125
    5. ',' → logprob: -6.0667266845703125
    6. '
' → logprob: -6.9417266845703125
    7. '.' → logprob: -7.0667266845703125
    8. ':
' → logprob: -7.1917266845703125
    9. ' :
' → logprob: -7.4417266845703125
    10. ' ' → logprob: -7.6917266845703125

Token 95: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7798703908920288
    2. ' les' → logprob: -1.6548703908920288
    3. 'la' → logprob: -2.1548705101013184
    4. 'les' → logprob: -2.4048705101013184
    5. 'l' → logprob: -3.6548705101013184
    6. ' l' → logprob: -3.6548705101013184
    7. ' chaque' → logprob: -3.6548705101013184
    8. ' le' → logprob: -4.154870510101318
    9. ' ' → logprob: -4.404870510101318
    10. '   ' → logprob: -4.654870510101318

Token 96: ' dernière' (ID: 39497)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8133952617645264
    2. ' grille' → logprob: -1.9383952617645264
    3. 'gr' → logprob: -2.4383952617645264
    4. ' nombre' → logprob: -2.6883952617645264
    5. '   ' → logprob: -3.5633952617645264
    6. ' chemin' → logprob: -3.9383952617645264
    7. ' largeur' → logprob: -4.0633955001831055
    8. ' ligne' → logprob: -4.1883955001831055
    9. ' ' → logprob: -4.4383955001831055
    10. ' liste' → logprob: -4.4383955001831055

Token 97: ' ligne' (ID: 19583)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9918590784072876
    2. 'ligne' → logprob: -1.6168590784072876
    3. 'case' → logprob: -2.116858959197998
    4. ' ligne' → logprob: -2.991858959197998
    5. ' ' → logprob: -3.741858959197998
    6. 'direction' → logprob: -3.741858959197998
    7. '_' → logprob: -3.741858959197998
    8. 'car' → logprob: -3.991858959197998
    9. 'col' → logprob: -3.991858959197998
    10. ' lettre' → logprob: -4.116858959197998

Token 98: ' l' (ID: 305)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028690682724118233
    2. ':' → logprob: -4.153690814971924
    3. ' :' → logprob: -5.403690814971924
    4. ' ' → logprob: -6.278690814971924
    5. ',' → logprob: -6.778690814971924
    6. ')' → logprob: -7.278690814971924
    7. 'def' → logprob: -7.403690814971924
    8. '    ' → logprob: -7.528690814971924
    9. '  ' → logprob: -7.653690814971924
    10. '):' → logprob: -7.778690814971924

Token 99: 'ue' (ID: 466)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.36582711338996887
    2. 'i' → logprob: -1.3658270835876465
    3. 'e' → logprob: -3.7408270835876465
    4. 'igne' → logprob: -4.4908270835876465
    5. 'ig' → logprob: -5.6158270835876465
    6. ''' → logprob: -5.7408270835876465
    7. 'u' → logprob: -5.8658270835876465
    8. '')' → logprob: -5.9908270835876465
    9. ''i' → logprob: -7.6158270835876465
    10. 'ine' → logprob: -7.6158270835876465

Token 100: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2750105857849121
    2. ':' → logprob: -1.525010585784912
    3. ' :' → logprob: -4.525010585784912
    4. '
' → logprob: -6.025010585784912
    5. ' ' → logprob: -6.525010585784912
    6. '):' → logprob: -6.650010585784912
    7. 'def' → logprob: -6.775010585784912
    8. ')' → logprob: -7.150010585784912
    9. '    ' → logprob: -7.400010585784912
    10. ':
' → logprob: -7.525010585784912

Token 101: ' 
' (ID: 793)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09221120923757553
    2. '    ' → logprob: -3.3422112464904785
    3. ',' → logprob: -4.5922112464904785
    4. ' ' → logprob: -4.9672112464904785
    5. 'n' → logprob: -5.0922112464904785
    6. '_' → logprob: -5.5922112464904785
    7. ' et' → logprob: -5.7172112464904785
    8. '       ' → logprob: -6.0922112464904785
    9. ')' → logprob: -6.2172112464904785
    10. 'def' → logprob: -6.4672112464904785

Token 102: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024687180295586586
    2. '    ' → logprob: -4.89968729019165
    3. ' et' → logprob: -5.27468729019165
    4. ' ' → logprob: -6.02468729019165
    5. ' en' → logprob: -6.14968729019165
    6. '       ' → logprob: -7.02468729019165
    7. 'et' → logprob: -7.02468729019165
    8. ',' → logprob: -7.39968729019165
    9. '  ' → logprob: -7.77468729019165
    10. '_' → logprob: -8.024686813354492

Token 103: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06309869885444641
    2. ' et' → logprob: -3.938098669052124
    3. ' en' → logprob: -4.188098907470703
    4. 'en' (adapté à ' en') → logprob: -4.938098907470703
    5. 'et' → logprob: -5.313098907470703
    6. '#' → logprob: -5.938098907470703
    7. ' une' → logprob: -6.563098907470703
    8. ' la' → logprob: -6.938098907470703
    9. ' puis' → logprob: -7.063098907470703
    10. ' permettant' → logprob: -7.188098907470703

Token 104: ' stock' (ID: 6546)
  Prédit: ' continu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continu' → logprob: -0.663733184337616
    2. '   ' → logprob: -2.2887332439422607
    3. ' gard' → logprob: -2.2887332439422607
    4. ' parcour' → logprob: -2.9137332439422607
    5. ' utilisant' → logprob: -3.9137332439422607
    6. ' stock' → logprob: -3.9137332439422607
    7. ' poursu' → logprob: -4.038733005523682
    8. ' suivant' → logprob: -4.288733005523682
    9. ' lis' → logprob: -4.288733005523682
    10. ' mém' → logprob: -4.413733005523682

Token 105: 'ant' (ID: 493)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.03110981360077858
    2. 'ant' → logprob: -3.7811098098754883
    3. 'é' → logprob: -4.906109809875488
    4. 'ées' → logprob: -8.781109809875488
    5. 'age' → logprob: -9.406109809875488
    6. 'e' → logprob: -9.531109809875488
    7. 'er' → logprob: -10.906109809875488
    8. 'és' → logprob: -10.906109809875488
    9. 'ee' → logprob: -10.906109809875488
    10. 'a' → logprob: -11.031109809875488

Token 106: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.9045404195785522
    2. ' les' → logprob: -1.2795404195785522
    3. ' uniquement' → logprob: -2.654540538787842
    4. ' une' → logprob: -2.904540538787842
    5. ' l' → logprob: -3.154540538787842
    6. ' le' → logprob: -3.404540538787842
    7. ' ' → logprob: -4.029540538787842
    8. ' des' → logprob: -4.154540538787842
    9. ' un' → logprob: -4.279540538787842
    10. ' for' → logprob: -4.279540538787842

Token 107: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.02126465179026127
    2. 'nombre' → logprob: -4.271264553070068
    3. ' coût' → logprob: -5.521264553070068
    4. 's' → logprob: -7.521264553070068
    5. '   ' → logprob: -7.646264553070068
    6. ' minimum' → logprob: -7.646264553070068
    7. ' minimal' → logprob: -8.021265029907227
    8. ' nombres' → logprob: -8.646265029907227
    9. 'co' → logprob: -8.896265029907227
    10. ' déplacement' → logprob: -9.146265029907227

Token 108: ' minimal' (ID: 19957)
  Prédit: '_min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.44645193219184875
    2. '   ' → logprob: -1.9464519023895264
    3. ' minimal' → logprob: -2.9464519023895264
    4. ' de' → logprob: -3.1964519023895264
    5. '_des' → logprob: -3.8214519023895264
    6. '_de' → logprob: -4.0714521408081055
    7. ' minimum' → logprob: -4.0714521408081055
    8. '_' → logprob: -4.3214521408081055
    9. ' des' → logprob: -4.3214521408081055
    10. 's' → logprob: -5.0714521408081055

Token 109: ' de' (ID: 334)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.4001825153827667
    2. ' de' → logprob: -2.5251824855804443
    3. '_des' → logprob: -2.7751824855804443
    4. '_de' → logprob: -3.1501824855804443
    5. 's' → logprob: -3.4001824855804443
    6. '_' → logprob: -3.6501824855804443
    7. '_possible' → logprob: -3.9001824855804443
    8. ' d' → logprob: -3.9001824855804443
    9. '_d' → logprob: -4.275182723999023
    10. ' des' → logprob: -4.900182723999023

Token 110: ' changements' (ID: 105486)
  Prédit: ' traits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' traits' → logprob: -0.23943591117858887
    2. 'traits' → logprob: -1.6144359111785889
    3. ' coups' → logprob: -5.239436149597168
    4. ' strokes' → logprob: -5.614436149597168
    5. 'trait' → logprob: -6.739436149597168
    6. 'tr' → logprob: -6.739436149597168
    7. ' trait' → logprob: -7.614436149597168
    8. 't' → logprob: -8.114436149597168
    9. 'cou' → logprob: -8.239436149597168
    10. ' ' → logprob: -8.489436149597168

Token 111: ' nécessaires' (ID: 74402)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.3505544066429138
    2. ' ' → logprob: -1.8505544662475586
    3. '_' → logprob: -2.8505544662475586
    4. '_de' → logprob: -3.4755544662475586
    5. ' d' → logprob: -3.6005544662475586
    6. 's' → logprob: -4.475554466247559
    7. '   ' → logprob: -6.225554466247559
    8. '_s' → logprob: -6.350554466247559
    9. ' _' → logprob: -6.475554466247559
    10. ' nécessaires' → logprob: -6.850554466247559

Token 112: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012035805732011795
    2. ',' → logprob: -5.512035846710205
    3. ' ' → logprob: -6.137035846710205
    4. 'def' → logprob: -6.637035846710205
    5. ' pour' → logprob: -7.012035846710205
    6. ' de' → logprob: -7.762035846710205
    7. '    ' → logprob: -7.762035846710205
    8. '  ' → logprob: -7.887035846710205
    9. '.' → logprob: -8.262035369873047
    10. ' def' → logprob: -8.512035369873047

Token 113: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.16278411448001862
    2. 'cha' → logprob: -2.6627840995788574
    3. ' chacune' → logprob: -3.9127840995788574
    4. ' continuer' → logprob: -4.537784099578857
    5. ' cha' → logprob: -4.912784099578857
    6. ' atteindre' → logprob: -5.162784099578857
    7. ' la' → logprob: -5.287784099578857
    8. 'ch' → logprob: -5.662784099578857
    9. ' couvrir' → logprob: -5.787784099578857
    10. 'la' → logprob: -5.787784099578857

Token 114: ' colonne' (ID: 148275)
  Prédit: ' position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' position' → logprob: -0.45967477560043335
    2. 'position' → logprob: -2.459674835205078
    3. '   ' → logprob: -3.459674835205078
    4. 'case' → logprob: -3.459674835205078
    5. ' type' → logprob: -3.709674835205078
    6. ' case' → logprob: -3.959674835205078
    7. ' ' → logprob: -4.084674835205078
    8. ' état' → logprob: -4.084674835205078
    9. 'car' → logprob: -4.209674835205078
    10. ' possible' → logprob: -4.209674835205078

Token 115: ' lors' (ID: 15456)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09788373857736588
    2. ':' → logprob: -2.722883701324463
    3. ',' → logprob: -4.972883701324463
    4. ' :' → logprob: -4.972883701324463
    5. '
' → logprob: -5.597883701324463
    6. ' ' → logprob: -6.347883701324463
    7. '):' → logprob: -6.597883701324463
    8. '    
' → logprob: -6.847883701324463
    9. '\n' → logprob: -6.847883701324463
    10. '  
' → logprob: -6.972883701324463

Token 116: ' du' (ID: 1462)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.7629333138465881
    2. ' de' → logprob: -0.7629333138465881
    3. ' du' → logprob: -2.7629332542419434
    4. '   ' → logprob: -6.262933254241943
    5. 'd' → logprob: -7.012933254241943
    6. 'de' → logprob: -7.512933254241943
    7. '    ' → logprob: -7.762933254241943
    8. 'du' → logprob: -9.012933731079102
    9. 'def' → logprob: -9.262933731079102
    10. ' des' → logprob: -9.637933731079102

Token 117: ' parcours' (ID: 62625)
  Prédit: ' passage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' passage' → logprob: -0.5265284776687622
    2. ' parcours' → logprob: -1.1515284776687622
    3. ' déplacement' → logprob: -3.4015283584594727
    4. 'par' → logprob: -3.7765283584594727
    5. ' traitement' → logprob: -4.276528358459473
    6. 'pass' → logprob: -4.901528358459473
    7. '   ' → logprob: -5.901528358459473
    8. ' lecture' → logprob: -6.151528358459473
    9. ' parcour' → logprob: -6.276528358459473
    10. 'trait' → logprob: -6.776528358459473

Token 118: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030345885083079338
    2. ':' → logprob: -4.030345916748047
    3. 'def' → logprob: -5.780345916748047
    4. ' :' → logprob: -6.405345916748047
    5. '
' → logprob: -6.780345916748047
    6. ',' → logprob: -7.155345916748047
    7. '(' → logprob: -7.280345916748047
    8. '\n' → logprob: -7.405345916748047
    9. ' ' → logprob: -7.530345916748047
    10. '(n' → logprob: -7.780345916748047

Token 119: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008968958631157875
    2. ':' → logprob: -6.008968830108643
    3. '
' → logprob: -7.008968830108643
    4. '       ' → logprob: -7.133968830108643
    5. '):' → logprob: -7.258968830108643
    6. '(h' → logprob: -7.383968830108643
    7. 'def' → logprob: -7.633968830108643
    8. '```' → logprob: -7.758968830108643
    9. ')' → logprob: -7.883968830108643
    10. '(' → logprob: -7.883968830108643

Token 120: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003259234596043825
    2. ')' → logprob: -6.378259181976318
    3. ' """' → logprob: -8.003259658813477
    4. '"""' → logprob: -8.128259658813477
    5. '    ' → logprob: -8.628259658813477
    6. 'def' → logprob: -8.628259658813477
    7. '```' → logprob: -9.003259658813477
    8. '       ' → logprob: -9.128259658813477
    9. ' ' → logprob: -9.253259658813477
    10. '    
' → logprob: -10.128259658813477

Token 121: ' Entr' (ID: 50650)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011338758282363415
    2. 'def' → logprob: -5.761338710784912
    3. ')' → logprob: -5.886338710784912
    4. '    
' → logprob: -7.261338710784912
    5. ' h' → logprob: -7.261338710784912
    6. '```' → logprob: -7.261338710784912
    7. '
' → logprob: -7.386338710784912
    8. 'h' → logprob: -7.886338710784912
    9. ' 
' → logprob: -8.13633918762207
    10. 'n' → logprob: -8.13633918762207

Token 122: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.008324138820171356
    2. 'ées' → logprob: -5.133324146270752
    3. 'rée' → logprob: -6.258324146270752
    4. '```' → logprob: -8.508323669433594
    5. 'é' → logprob: -8.758323669433594
    6. '   ' → logprob: -9.883323669433594
    7. 'er' → logprob: -10.258323669433594
    8. 'ré' → logprob: -11.758323669433594
    9. 'r' → logprob: -12.133323669433594
    10. '"""
' → logprob: -12.383323669433594

Token 123: ' :
' (ID: 10039)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6705145835876465
    2. ':' → logprob: -0.7955145835876465
    3. ' :' → logprob: -4.5455145835876465
    4. '=' → logprob: -4.6705145835876465
    5. '():' → logprob: -5.1705145835876465
    6. ':
' → logprob: -5.5455145835876465
    7. ',' → logprob: -6.7955145835876465
    8. '   ' → logprob: -6.7955145835876465
    9. '):' → logprob: -6.9205145835876465
    10. '():
' → logprob: -7.0455145835876465

Token 124: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1182437390089035
    2. ' h' → logprob: -2.61824369430542
    3. '    ' → logprob: -3.74324369430542
    4. 'h' → logprob: -4.99324369430542
    5. 'n' → logprob: -6.74324369430542
    6. 'def' → logprob: -6.86824369430542
    7. ' 
' → logprob: -6.86824369430542
    8. '```' → logprob: -6.86824369430542
    9. '    
' → logprob: -7.24324369430542
    10. ' ' → logprob: -7.24324369430542

Token 125: ' Sur' (ID: 9568)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.35670000314712524
    2. 'h' → logprob: -1.6066999435424805
    3. '   ' → logprob: -2.3566999435424805
    4. '
' → logprob: -6.8566999435424805
    5. '```' → logprob: -6.9816999435424805
    6. 'int' → logprob: -7.9816999435424805
    7. '    
' → logprob: -8.23169994354248
    8. ' 
' → logprob: -8.23169994354248
    9. 'import' → logprob: -8.23169994354248
    10. 'def' → logprob: -8.35669994354248

Token 126: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7602817416191101
    2. ' standard' → logprob: -1.8852818012237549
    3. ' ' → logprob: -2.010281801223755
    4. ' l' → logprob: -2.635281801223755
    5. ' stdin' → logprob: -2.635281801223755
    6. ' la' → logprob: -3.260281801223755
    7. 'stdin' → logprob: -4.385281562805176
    8. 'e' → logprob: -4.760281562805176
    9. '  ' → logprob: -5.135281562805176
    10. 'standard' → logprob: -5.385281562805176

Token 127: ' première' (ID: 23423)
  Prédit: ' standard'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' standard' → logprob: -1.0416032075881958
    2. 'stdin' → logprob: -1.9166032075881958
    3. ' stdin' → logprob: -2.6666030883789062
    4. 'prem' → logprob: -2.6666030883789062
    5. 'standard' → logprob: -2.9166030883789062
    6. '   ' → logprob: -3.0416030883789062
    7. 's' → logprob: -3.1666030883789062
    8. 'ligne' → logprob: -3.7916030883789062
    9. ' ligne' → logprob: -3.7916030883789062
    10. 'e' → logprob: -4.041603088378906

Token 128: ' ligne' (ID: 19583)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09661941975355148
    2. ' ligne' → logprob: -3.0966193675994873
    3. ' line' → logprob: -3.3466193675994873
    4. '   ' → logprob: -5.346619606018066
    5. ' input' → logprob: -6.721619606018066
    6. 'l' → logprob: -7.096619606018066
    7. ' l' → logprob: -7.346619606018066
    8. 'ligne' → logprob: -7.471619606018066
    9. '  ' → logprob: -7.596619606018066
    10. ' )' → logprob: -7.971619606018066

Token 129: ' :' (ID: 712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2043197602033615
    2. '   ' → logprob: -2.079319715499878
    3. ':' → logprob: -4.204319953918457
    4. ' ,' → logprob: -4.329319953918457
    5. ' :' → logprob: -5.079319953918457
    6. 'def' → logprob: -5.204319953918457
    7. ' ' → logprob: -5.329319953918457
    8. ' (' → logprob: -6.329319953918457
    9. '()' → logprob: -6.329319953918457
    10. '(' → logprob: -6.454319953918457

Token 130: ' deux' (ID: 10301)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.03911117836833
    2. 'h' → logprob: -3.2891111373901367
    3. '   ' → logprob: -7.289111137390137
    4. ' ' → logprob: -9.289111137390137
    5. '`' → logprob: -9.914111137390137
    6. ' `' → logprob: -10.289111137390137
    7. 'int' → logprob: -10.414111137390137
    8. '"' → logprob: -10.664111137390137
    9. '"h' → logprob: -10.664111137390137
    10. ' l' → logprob: -10.789111137390137

Token 131: ' ent' (ID: 1121)
  Prédit: ' integers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' integers' → logprob: -0.4453386962413788
    2. ' int' → logprob: -1.8203387260437012
    3. ' ent' → logprob: -2.195338726043701
    4. ' espaces' → logprob: -3.070338726043701
    5. ' ' → logprob: -3.945338726043701
    6. 'int' → logprob: -4.195338726043701
    7. 'ent' → logprob: -6.445338726043701
    8. ' entier' → logprob: -7.570338726043701
    9. ' ints' → logprob: -7.570338726043701
    10. 'inte' → logprob: -7.695338726043701

Token 132: 'iers' (ID: 11012)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.3736166954040527
    2. 'rée' → logprob: -1.4986166954040527
    3. 'iers' → logprob: -1.7486166954040527
    4. 'ières' → logprob: -1.7486166954040527
    5. 'ier' → logprob: -2.6236166954040527
    6. 's' → logprob: -3.6236166954040527
    7. 't' → logprob: -4.123616695404053
    8. 're' → logprob: -4.498616695404053
    9. 'ré' → logprob: -4.748616695404053
    10. 'er' → logprob: -4.998616695404053

Token 133: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.0720248818397522
    2. ',' → logprob: -3.3220248222351074
    3. ' ' → logprob: -4.447024822235107
    4. ' ,' → logprob: -4.572024822235107
    5. ' )' → logprob: -5.822024822235107
    6. '   ' → logprob: -6.322024822235107
    7. 'h' → logprob: -6.697024822235107
    8. '(h' → logprob: -7.197024822235107
    9. ' '' → logprob: -7.447024822235107
    10. ')' → logprob: -7.697024822235107

Token 134: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -6.76628842484206e-05
    2. ' ,' → logprob: -9.750067710876465
    3. ')' → logprob: -13.250067710876465
    4. '<|end|>' → logprob: -13.500067710876465
    5. ',w' → logprob: -13.625067710876465
    6. '   ' → logprob: -14.250067710876465
    7. ' =' → logprob: -14.500067710876465
    8. '=' → logprob: -14.875067710876465
    9. ',h' → logprob: -14.875067710876465
    10. ' ' → logprob: -15.125067710876465

Token 135: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.0619727298617363
    2. 'w' → logprob: -2.8119726181030273
    3. ' l' → logprob: -12.811972618103027
    4. ' ' → logprob: -13.811972618103027
    5. 'l' → logprob: -14.186972618103027
    6. ' ' → logprob: -15.811972618103027
    7. '   ' → logprob: -15.811972618103027
    8. '  ' → logprob: -16.811973571777344
    9. ',' → logprob: -17.061973571777344
    10. ' largeur' → logprob: -17.186973571777344

Token 136: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5498072504997253
    2. '   ' → logprob: -0.9248072504997253
    3. 'def' → logprob: -4.924807071685791
    4. ')' → logprob: -5.424807071685791
    5. ' ,' → logprob: -5.549807071685791
    6. ' =' → logprob: -5.674807071685791
    7. '\n' → logprob: -6.549807071685791
    8. ':' → logprob: -7.049807071685791
    9. '):' → logprob: -7.049807071685791
    10. '```' → logprob: -7.674807071685791

Token 137: 'ha' (ID: 1716)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3385089337825775
    2. ' )' → logprob: -1.8385089635849
    3. 'int' → logprob: -2.7135088443756104
    4. ',' → logprob: -3.7135088443756104
    5. '1' → logprob: -3.9635088443756104
    6. ' int' → logprob: -5.3385090827941895
    7. ' ' → logprob: -5.8385090827941895
    8. ',int' → logprob: -5.9635090827941895
    9. ' ,' → logprob: -6.0885090827941895
    10. '   ' → logprob: -6.2135090827941895

Token 138: 'uteur' (ID: 25666)
  Prédit: 'rée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rée' → logprob: -1.727811574935913
    2. ')' → logprob: -2.227811574935913
    3. 'é' → logprob: -2.227811574935913
    4. ' ' → logprob: -2.602811574935913
    5. '   ' → logprob: -2.602811574935913
    6. 'e' → logprob: -2.602811574935913
    7. 'r' → logprob: -3.102811574935913
    8. '  ' → logprob: -3.227811574935913
    9. ' )' → logprob: -3.227811574935913
    10. 'ré' → logprob: -3.477811574935913

Token 139: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01770663820207119
    2. '):' → logprob: -4.392706871032715
    3. ' ,' → logprob: -6.017706871032715
    4. '=' → logprob: -7.642706871032715
    5. ' ):' → logprob: -7.642706871032715
    6. '):
' → logprob: -7.767706871032715
    7. ')' → logprob: -7.892706871032715
    8. ' =' → logprob: -8.142706871032715
    9. '   ' → logprob: -8.267706871032715
    10. '),' → logprob: -9.017706871032715

Token 140: ' largeur' (ID: 180807)
  Prédit: ' largeur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' largeur' → logprob: -0.005525442771613598
    2. 'large' → logprob: -5.630525588989258
    3. ' large' → logprob: -6.755525588989258
    4. ' la' → logprob: -8.630525588989258
    5. ' larg' → logprob: -8.755525588989258
    6. ' width' → logprob: -8.880525588989258
    7. 'width' → logprob: -8.880525588989258
    8. ' l' → logprob: -10.380525588989258
    9. ' longueur' → logprob: -10.755525588989258
    10. 'l' → logprob: -10.755525588989258

Token 141: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02657208777964115
    2. ',' → logprob: -4.776572227478027
    3. '),' → logprob: -4.776572227478027
    4. ')
' → logprob: -6.026572227478027
    5. ' )' → logprob: -6.026572227478027
    6. '):' → logprob: -6.526572227478027
    7. '):
' → logprob: -6.776572227478027
    8. '   ' → logprob: -6.901572227478027
    9. ')\' → logprob: -8.651572227478027
    10. ' de' → logprob: -8.901572227478027

Token 142: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.02221045270562172
    2. 'la' → logprob: -4.022210597991943
    3. ' )' → logprob: -6.022210597991943
    4. 'l' → logprob: -7.272210597991943
    5. ')' → logprob: -7.397210597991943
    6. ' l' → logprob: -8.897210121154785
    7. ' ' → logprob: -9.272210121154785
    8. ' ' → logprob: -9.522210121154785
    9. ',' → logprob: -12.647210121154785
    10. ' ),' → logprob: -12.647210121154785

Token 143: ' grille' (ID: 99153)
  Prédit: ' grille'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grille' → logprob: -0.4311225712299347
    2. 'gr' → logprob: -1.0561225414276123
    3. ' gr' → logprob: -6.431122779846191
    4. ' grid' → logprob: -8.056122779846191
    5. ' ' → logprob: -8.306122779846191
    6. 'grid' → logprob: -9.806122779846191
    7. '_gr' → logprob: -9.931122779846191
    8. '   ' → logprob: -10.681122779846191
    9. 'ligne' → logprob: -10.806122779846191
    10. ')' → logprob: -10.931122779846191

Token 144: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015183139592409134
    2. ',' → logprob: -4.390182971954346
    3. ' )' → logprob: -6.515182971954346
    4. '):' → logprob: -7.390182971954346
    5. '   ' → logprob: -8.515183448791504
    6. ')
' → logprob: -8.890183448791504
    7. '),' → logprob: -9.015183448791504
    8. '):
' → logprob: -10.015183448791504
    9. ').' → logprob: -11.390183448791504
    10. '")' → logprob: -11.515183448791504

Token 145: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5659255981445312
    2. ',' → logprob: -1.0659255981445312
    3. '
' → logprob: -4.065925598144531
    4. ')' → logprob: -4.065925598144531
    5. 'def' → logprob: -4.190925598144531
    6. '\n' → logprob: -4.815925598144531
    7. '```' → logprob: -5.065925598144531
    8. ',
' → logprob: -5.315925598144531
    9. '    
' → logprob: -5.440925598144531
    10. '  
' → logprob: -6.065925598144531

Token 146: ' Puis' (ID: 87717)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3836718797683716
    2. '
' → logprob: -1.6336718797683716
    3. '\n' → logprob: -2.883671760559082
    4. ',' → logprob: -4.008671760559082
    5. 'def' → logprob: -4.008671760559082
    6. '       ' → logprob: -4.758671760559082
    7. '    
' → logprob: -5.133671760559082
    8. '\' → logprob: -5.883671760559082
    9. '  
' → logprob: -5.883671760559082
    10. ' ' → logprob: -6.508671760559082

Token 147: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.009859026409685612
    2. 'h' → logprob: -5.759859085083008
    3. '   ' → logprob: -5.759859085083008
    4. ' w' → logprob: -7.009859085083008
    5. ' ' → logprob: -7.509859085083008
    6. ' la' → logprob: -7.509859085083008
    7. ' les' → logprob: -7.759859085083008
    8. ' for' → logprob: -8.134859085083008
    9. 'w' → logprob: -8.259859085083008
    10. ' une' → logprob: -9.009859085083008

Token 148: ' lignes' (ID: 81687)
  Prédit: ' lignes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lignes' → logprob: -0.039914920926094055
    2. ' lines' → logprob: -3.289914846420288
    3. ' ligne' → logprob: -7.539915084838867
    4. ' fois' → logprob: -7.539915084838867
    5. '   ' → logprob: -8.164915084838867
    6. ' ' → logprob: -8.539915084838867
    7. ' line' → logprob: -9.789915084838867
    8. ' linhas' → logprob: -9.914915084838867
    9. ' lign' → logprob: -10.039915084838867
    10. 'ligne' → logprob: -11.164915084838867

Token 149: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.078982874751091
    2. ':' → logprob: -3.4539828300476074
    3. ' :' → logprob: -4.703982830047607
    4. 'def' → logprob: -5.203982830047607
    5. ' de' → logprob: -5.203982830047607
    6. ' suivantes' → logprob: -5.453982830047607
    7. '<|end|>' → logprob: -5.453982830047607
    8. ' =' → logprob: -5.828982830047607
    9. ',' → logprob: -5.953982830047607
    10. ' (' → logprob: -6.703982830047607

Token 150: ' chacune' (ID: 127465)
  Prédit: ' each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.6534506678581238
    2. ' chacune' → logprob: -0.9034506678581238
    3. ' chaque' → logprob: -3.6534507274627686
    4. '   ' → logprob: -3.7784507274627686
    5. 'each' → logprob: -4.9034504890441895
    6. ' contenant' → logprob: -5.2784504890441895
    7. ' chacun' → logprob: -5.5284504890441895
    8. ' containing' → logprob: -6.4034504890441895
    9. '    ' → logprob: -6.4034504890441895
    10. ' for' → logprob: -7.1534504890441895

Token 151: ' de' (ID: 334)
  Prédit: ' contenant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' contenant' → logprob: -0.49060291051864624
    2. '   ' → logprob: -1.240602970123291
    3. 'cont' → logprob: -3.615602970123291
    4. ' =' → logprob: -4.865602970123291
    5. 'conten' → logprob: -5.115602970123291
    6. ' containing' → logprob: -5.115602970123291
    7. ' cont' → logprob: -5.240602970123291
    8. 'con' → logprob: -5.365602970123291
    9. ':' → logprob: -5.490602970123291
    10. '    ' → logprob: -5.615602970123291

Token 152: ' longueur' (ID: 104613)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.2700035572052002
    2. ' w' → logprob: -2.7700035572052
    3. 'input' → logprob: -3.1450035572052
    4. 'w' → logprob: -3.3950035572052
    5. 'length' → logprob: -3.6450035572052
    6. 'chaine' → logprob: -4.270003318786621
    7. ' input' → logprob: -4.395003318786621
    8. 'string' → logprob: -4.770003318786621
    9. ' longueur' → logprob: -4.770003318786621
    10. ' str' → logprob: -5.645003318786621

Token 153: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.08900216966867447
    2. 'w' → logprob: -2.4640021324157715
    3. '=w' → logprob: -9.96400260925293
    4. ' ' → logprob: -11.96400260925293
    5. '   ' → logprob: -12.96400260925293
    6. ' ' → logprob: -13.21400260925293
    7. '(w' → logprob: -13.58900260925293
    8. '	w' → logprob: -13.83900260925293
    9. ' ég' → logprob: -14.21400260925293
    10. '_w' → logprob: -14.46400260925293

Token 154: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0576464980840683
    2. 'def' → logprob: -3.9326465129852295
    3. ':' → logprob: -4.55764627456665
    4. ',' → logprob: -5.05764627456665
    5. '
' → logprob: -5.30764627456665
    6. ':
' → logprob: -5.80764627456665
    7. '):
' → logprob: -6.18264627456665
    8. '):' → logprob: -6.80764627456665
    9. '"""
' → logprob: -6.93264627456665
    10. ' :' → logprob: -7.18264627456665

Token 155: ' ne' (ID: 453)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1109713539481163
    2. 'def' → logprob: -2.610971450805664
    3. '```' → logprob: -5.735971450805664
    4. ' def' → logprob: -5.860971450805664
    5. '.' → logprob: -5.860971450805664
    6. 's' → logprob: -5.985971450805664
    7. ' en' → logprob: -6.110971450805664
    8. ' avec' → logprob: -6.235971450805664
    9. ' contenant' → logprob: -6.360971450805664
    10. ',' → logprob: -6.735971450805664

Token 156: ' contenant' (ID: 131049)
  Prédit: ' cont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cont' → logprob: -0.9675161242485046
    2. ' contenant' → logprob: -1.4675161838531494
    3. 's' → logprob: -1.5925161838531494
    4. 'cont' → logprob: -2.8425161838531494
    5. ' contient' → logprob: -3.0925161838531494
    6. 'cess' → logprob: -3.9675161838531494
    7. ' sont' → logprob: -4.09251594543457
    8. ' comport' → logprob: -5.71751594543457
    9. 'st' → logprob: -5.96751594543457
    10. 'print' → logprob: -5.96751594543457

Token 157: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.004868330433964729
    2. ' uniquement' → logprob: -5.754868507385254
    3. '   ' → logprob: -7.504868507385254
    4. 's' → logprob: -8.379868507385254
    5. 'que' → logprob: -8.504868507385254
    6. '"' → logprob: -8.504868507385254
    7. ' "' → logprob: -9.379868507385254
    8. ' des' → logprob: -9.379868507385254
    9. ' ' → logprob: -9.504868507385254
    10. ' seulement' → logprob: -9.754868507385254

Token 158: ' les' (ID: 1341)
  Prédit: '"."'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"."' → logprob: -0.9587939381599426
    2. ''.' → logprob: -1.2087938785552979
    3. ' "."' → logprob: -1.8337938785552979
    4. '.' → logprob: -2.208793878555298
    5. ' '.'' → logprob: -3.833793878555298
    6. '"' → logprob: -4.708794116973877
    7. ' des' → logprob: -4.958794116973877
    8. ''' → logprob: -5.708794116973877
    9. '".' → logprob: -5.833794116973877
    10. ' .' → logprob: -6.083794116973877

Token 159: ' caractères' (ID: 183106)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18955019116401672
    2. ''.' → logprob: -2.8145501613616943
    3. ' "."' → logprob: -3.1895501613616943
    4. ' .' → logprob: -3.6895501613616943
    5. ' '.'' → logprob: -3.8145501613616943
    6. '"."' → logprob: -4.189550399780273
    7. ' caractères' → logprob: -5.189550399780273
    8. '".' → logprob: -6.314550399780273
    9. '"' → logprob: -7.814550399780273
    10. ' caracteres' → logprob: -8.314550399780273

Token 160: ' "."' (ID: 50107)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.6608003973960876
    2. '"."' → logprob: -1.7858004570007324
    3. ' "."' → logprob: -2.0358004570007324
    4. ' '.'' → logprob: -2.1608004570007324
    5. ' '' → logprob: -3.9108004570007324
    6. ''' → logprob: -3.9108004570007324
    7. '"' → logprob: -4.035800457000732
    8. ' "' → logprob: -5.035800457000732
    9. '.' → logprob: -5.785800457000732
    10. '".' → logprob: -6.910800457000732

Token 161: ' ou' (ID: 2031)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.367555171251297
    2. ' ou' → logprob: -1.8675551414489746
    3. '"' → logprob: -3.1175551414489746
    4. ',' → logprob: -3.4925551414489746
    5. '#' → logprob: -3.6175551414489746
    6. ' ' → logprob: -4.867555141448975
    7. ' "' → logprob: -5.117555141448975
    8. ' "#"' → logprob: -5.242555141448975
    9. ' or' → logprob: -5.367555141448975
    10. ' et' → logprob: -5.367555141448975

Token 162: ' "#' (ID: 11351)
  Prédit: '"#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"#' → logprob: -0.26498082280158997
    2. ' "#"' → logprob: -1.7649807929992676
    3. '"' → logprob: -2.8899807929992676
    4. ' "#' → logprob: -5.639980792999268
    5. '#' → logprob: -7.014980792999268
    6. ' "' → logprob: -7.264980792999268
    7. ' '#'' → logprob: -8.639981269836426
    8. ''#' → logprob: -8.639981269836426
    9. ' ' → logprob: -8.889981269836426
    10. '   ' → logprob: -8.889981269836426

Token 163: '"
' (ID: 1092)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.6989713907241821
    2. '"
' → logprob: -1.6989713907241821
    3. '"' → logprob: -2.1989712715148926
    4. '".' → logprob: -2.8239712715148926
    5. ')"
' → logprob: -2.8239712715148926
    6. '")
' → logprob: -3.9489712715148926
    7. '")' → logprob: -4.198971271514893
    8. ')' → logprob: -4.448971271514893
    9. ')"' → logprob: -4.573971271514893
    10. ')
' → logprob: -4.698971271514893

Token 164: '        
' (ID: 3564)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020605068653821945
    2. '
' → logprob: -4.520605087280273
    3. 'def' → logprob: -5.395605087280273
    4. ')' → logprob: -6.270605087280273
    5. '    
' → logprob: -7.270605087280273
    6. '):' → logprob: -7.770605087280273
    7. '```' → logprob: -7.770605087280273
    8. '"""' → logprob: -8.145605087280273
    9. '"""
' → logprob: -8.395605087280273
    10. '):
' → logprob: -8.520605087280273

Token 165: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0024712553713470697
    2. '"""' → logprob: -6.752471446990967
    3. 'def' → logprob: -7.377471446990967
    4. '"""
' → logprob: -8.252470970153809
    5. '
' → logprob: -8.877470970153809
    6. '    
' → logprob: -9.752470970153809
    7. '       ' → logprob: -9.877470970153809
    8. '```' → logprob: -10.252470970153809
    9. ' """
' → logprob: -10.502470970153809
    10. '    ' → logprob: -10.502470970153809

Token 166: ' Sort' (ID: 25945)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0337568074464798
    2. 'def' → logprob: -3.533756732940674
    3. ' def' → logprob: -6.908756732940674
    4. '    
' → logprob: -7.283756732940674
    5. '```' → logprob: -7.658756732940674
    6. '
' → logprob: -7.783756732940674
    7. '    ' → logprob: -7.908756732940674
    8. 'import' → logprob: -8.283757209777832
    9. '"""' → logprob: -8.283757209777832
    10. '"""
' → logprob: -9.158757209777832

Token 167: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.00016468366084154695
    2. 'i' → logprob: -9.375164985656738
    3. ' ie' → logprob: -10.625164985656738
    4. '   ' → logprob: -10.750164985656738
    5. '
' → logprob: -11.125164985656738
    6. 'ies' → logprob: -11.125164985656738
    7. '-ie' → logprob: -14.250164985656738
    8. 'IE' → logprob: -14.500164985656738
    9. '

' → logprob: -14.625164985656738
    10. '       ' → logprob: -14.625164985656738

Token 168: ' :
' (ID: 10039)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.02064279280602932
    2. ':' → logprob: -3.8956427574157715
    3. '   ' → logprob: -10.14564323425293
    4. ' :
' → logprob: -10.27064323425293
    5. '"' → logprob: -11.89564323425293
    6. '"""' → logprob: -12.39564323425293
    7. 's' → logprob: -12.77064323425293
    8. ' =' → logprob: -12.77064323425293
    9. ' ' → logprob: -13.02064323425293
    10. ':
' → logprob: -13.27064323425293

Token 169: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0263275858014822
    2. '"' → logprob: -4.401327610015869
    3. '1' → logprob: -5.026327610015869
    4. '    ' → logprob: -6.526327610015869
    5. ' le' → logprob: -6.526327610015869
    6. ' ' → logprob: -6.901327610015869
    7. ' Le' → logprob: -7.026327610015869
    8. ''' → logprob: -7.401327610015869
    9. ' "' → logprob: -8.151327133178711
    10. '"""' → logprob: -8.276327133178711

Token 170: ' Aff' (ID: 13741)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9400308132171631
    2. 'Le' → logprob: -1.065030813217163
    3. ' Le' → logprob: -1.940030813217163
    4. 'Un' → logprob: -3.440030813217163
    5. 'int' → logprob: -3.815030813217163
    6. ' le' → logprob: -4.065031051635742
    7. ' int' → logprob: -4.815031051635742
    8. 'L' → logprob: -4.815031051635742
    9. ' L' → logprob: -4.815031051635742
    10. 'print' → logprob: -4.940031051635742

Token 171: 'iche' (ID: 7509)
  Prédit: 'icher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.020397529006004333
    2. 'iche' → logprob: -4.770397663116455
    3. 'ichage' → logprob: -5.145397663116455
    4. 'ic' → logprob: -5.395397663116455
    5. 'i' → logprob: -7.270397663116455
    6. 'ich' → logprob: -7.645397663116455
    7. 'ichert' → logprob: -9.895397186279297
    8. '   ' → logprob: -10.520397186279297
    9. 'ichier' → logprob: -10.770397186279297
    10. '#' → logprob: -10.770397186279297

Token 172: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.023205408826470375
    2. '   ' → logprob: -4.148205280303955
    3. ' la' → logprob: -5.773205280303955
    4. ' l' → logprob: -6.023205280303955
    5. ' ' → logprob: -7.148205280303955
    6. '"' → logprob: -8.523205757141113
    7. '(' → logprob: -9.023205757141113
    8. ' minimal' → logprob: -9.523205757141113
    9. ' (' → logprob: -9.648205757141113
    10. 's' → logprob: -9.648205757141113

Token 173: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.0005896099028177559
    2. '   ' → logprob: -8.500589370727539
    3. 'nombre' → logprob: -8.625589370727539
    4. ' minimal' → logprob: -9.000589370727539
    5. ' minimum' → logprob: -10.375589370727539
    6. ' nombres' → logprob: -11.375589370727539
    7. ' ' → logprob: -12.125589370727539
    8. ' nb' → logprob: -12.250589370727539
    9. '  ' → logprob: -12.375589370727539
    10. 'n' → logprob: -12.375589370727539

Token 174: ' minimal' (ID: 19957)
  Prédit: ' minimal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimal' → logprob: -0.10229378938674927
    2. '_' → logprob: -2.8522937297821045
    3. ' maximal' → logprob: -3.6022937297821045
    4. ' _' → logprob: -5.477293968200684
    5. ' minimum' → logprob: -6.227293968200684
    6. ' de' → logprob: -6.477293968200684
    7. ' total' → logprob: -6.602293968200684
    8. ' ' → logprob: -7.102293968200684
    9. '_total' → logprob: -7.602293968200684
    10. '_min' → logprob: -7.727293968200684

Token 175: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3236234784126282
    2. ' ' → logprob: -1.4486234188079834
    3. ' :' → logprob: -4.9486236572265625
    4. ':' → logprob: -4.9486236572265625
    5. 'def' → logprob: -5.3236236572265625
    6. ')' → logprob: -5.4486236572265625
    7. '\' → logprob: -5.9486236572265625
    8. '  ' → logprob: -6.0736236572265625
    9. '    
' → logprob: -6.5736236572265625
    10. '    ' → logprob: -6.5736236572265625

Token 176: ' "' (ID: 392)
  Prédit: ' traits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' traits' → logprob: -0.6911023259162903
    2. 'traits' → logprob: -1.0661022663116455
    3. ' changements' → logprob: -2.0661022663116455
    4. 'ch' → logprob: -4.816102504730225
    5. 'trait' → logprob: -5.566102504730225
    6. 'chang' → logprob: -5.941102504730225
    7. 'changes' → logprob: -6.066102504730225
    8. ' trait' → logprob: -6.566102504730225
    9. ' changes' → logprob: -7.066102504730225
    10. ' changement' → logprob: -7.191102504730225

Token 177: 'traits' (ID: 125698)
  Prédit: ' traits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' traits' → logprob: -0.7121286988258362
    2. 'traits' → logprob: -0.7121286988258362
    3. ' changements' → logprob: -4.712128639221191
    4. 'trait' → logprob: -5.962128639221191
    5. 'ch' → logprob: -6.087128639221191
    6. 'chang' → logprob: -6.712128639221191
    7. 'tr' → logprob: -7.212128639221191
    8. ' trait' → logprob: -7.462128639221191
    9. 'changes' → logprob: -7.712128639221191
    10. 't' → logprob: -7.962128639221191

Token 178: '"' (ID: 1)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.4182285070419312
    2. ' nécessaires' → logprob: -1.4182285070419312
    3. '_' → logprob: -1.6682285070419312
    4. ' ' → logprob: -2.0432286262512207
    5. ' à' → logprob: -2.6682286262512207
    6. '"' → logprob: -2.9182286262512207
    7. ' "' → logprob: -3.7932286262512207
    8. ' _' → logprob: -4.168228626251221
    9. ' necess' → logprob: -4.918228626251221
    10. '\n' → logprob: -5.418228626251221

Token 179: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10498907417058945
    2. 'def' → logprob: -3.1049890518188477
    3. ':' → logprob: -3.2299890518188477
    4. ':
' → logprob: -5.104989051818848
    5. '
' → logprob: -5.479989051818848
    6. ' ' → logprob: -6.604989051818848
    7. '```' → logprob: -6.854989051818848
    8. '(h' → logprob: -8.229989051818848
    9. '(' → logprob: -8.354989051818848
    10. ' :' → logprob: -8.479989051818848

Token 180: ' effectuer' (ID: 98625)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.5969618558883667
    2. ' tracer' → logprob: -0.9719618558883667
    3. ' utiliser' → logprob: -3.9719619750976562
    4. '_tr' → logprob: -4.471961975097656
    5. 'util' → logprob: -5.096961975097656
    6. ' trac' → logprob: -5.721961975097656
    7. 'r' → logprob: -5.846961975097656
    8. ' effectuer' → logprob: -5.846961975097656
    9. ' écrire' → logprob: -6.346961975097656
    10. 'dess' → logprob: -6.346961975097656

Token 181: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5192270278930664
    2. ':' → logprob: -1.0192270278930664
    3. '(' → logprob: -4.019227027893066
    4. '(h' → logprob: -4.144227027893066
    5. 'def' → logprob: -6.019227027893066
    6. ':
' → logprob: -6.144227027893066
    7. '():' → logprob: -6.269227027893066
    8. '
' → logprob: -6.644227027893066
    9. '(
' → logprob: -7.894227027893066
    10. '```' → logprob: -7.894227027893066

Token 182: ' parcour' (ID: 130642)
  Prédit: ' parcour'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parcour' → logprob: -0.039804037660360336
    2. ' couvrir' → logprob: -4.289803981781006
    3. '   ' → logprob: -4.539803981781006
    4. 'par' → logprob: -5.164803981781006
    5. ' travers' → logprob: -5.539803981781006
    6. ' terminer' → logprob: -6.539803981781006
    7. ' compléter' → logprob: -7.789803981781006
    8. ' continuer' → logprob: -7.914803981781006
    9. ' ' → logprob: -8.039804458618164
    10. ' par' → logprob: -8.164804458618164

Token 183: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.011163247749209404
    2. 'rir' → logprob: -4.511163234710693
    3. 'er' → logprob: -10.636163711547852
    4. '   ' → logprob: -10.886163711547852
    5. '
' → logprob: -11.136163711547852
    6. '_ir' → logprob: -11.386163711547852
    7. 'r' → logprob: -11.761163711547852
    8. 're' → logprob: -12.136163711547852
    9. 'ire' → logprob: -12.386163711547852
    10. '```' → logprob: -12.511163711547852

Token 184: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.17565402388572693
    2. ' toute' → logprob: -2.9256539344787598
    3. ' l' → logprob: -3.1756539344787598
    4. '   ' → logprob: -3.4256539344787598
    5. ' ' → logprob: -3.8006539344787598
    6. ' tout' → logprob: -5.55065393447876
    7. ' le' → logprob: -5.92565393447876
    8. 'la' → logprob: -6.67565393447876
    9. 'l' → logprob: -7.42565393447876
    10. ' une' → logprob: -7.67565393447876

Token 185: ' grille' (ID: 99153)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.45998433232307434
    2. ' grille' → logprob: -1.084984302520752
    3. ' espace' → logprob: -5.084984302520752
    4. ' gr' → logprob: -5.584984302520752
    5. ' grap' → logprob: -5.584984302520752
    6. ' grid' → logprob: -5.709984302520752
    7. ' entire' → logprob: -6.209984302520752
    8. ' ' → logprob: -6.959984302520752
    9. '_' → logprob: -7.084984302520752
    10. 's' → logprob: -7.334984302520752

Token 186: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.426499605178833
    2. '   ' → logprob: -1.551499605178833
    3. '(' → logprob: -2.176499605178833
    4. '(h' → logprob: -4.801499366760254
    5. '():' → logprob: -5.176499366760254
    6. ':
' → logprob: -6.176499366760254
    7. ' :' → logprob: -6.426499366760254
    8. '(
' → logprob: -7.301499366760254
    9. '):' → logprob: -7.426499366760254
    10. 'def' → logprob: -7.551499366760254

Token 187: 'un' (ID: 373)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.044988326728343964
    2. ' )' → logprob: -3.1699883937835693
    3. ')
' → logprob: -7.16998815536499
    4. ' )
' → logprob: -8.294988632202148
    5. '   ' → logprob: -8.419988632202148
    6. '")' → logprob: -8.669988632202148
    7. '"""' → logprob: -8.919988632202148
    8. 'def' → logprob: -9.544988632202148
    9. ' une' → logprob: -10.044988632202148
    10. ' la' → logprob: -10.169988632202148

Token 188: ' entier' (ID: 80473)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6753126382827759
    2. ')' → logprob: -2.0503125190734863
    3. '\' → logprob: -2.0503125190734863
    4. ' espace' → logprob: -3.1753125190734863
    5. ' trait' → logprob: -3.3003125190734863
    6. ' "\' → logprob: -3.8003125190734863
    7. ' "' → logprob: -4.175312519073486
    8. ' )' → logprob: -4.175312519073486
    9. ' e' → logprob: -4.175312519073486
    10. ' space' → logprob: -4.425312519073486

Token 189: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01468790415674448
    2. ')
' → logprob: -4.264688014984131
    3. ' )' → logprob: -7.889688014984131
    4. '   ' → logprob: -10.139687538146973
    5. '"""' → logprob: -10.264687538146973
    6. 'def' → logprob: -10.764687538146973
    7. ' )
' → logprob: -11.639687538146973
    8. '\n' → logprob: -12.014687538146973
    9. ')
' → logprob: -12.014687538146973
    10. ')\' → logprob: -12.014687538146973

Token 190: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.48993659019470215
    2. '   ' → logprob: -1.1149365901947021
    3. '():' → logprob: -3.364936590194702
    4. '(' → logprob: -4.614936828613281
    5. ':
' → logprob: -4.864936828613281
    6. '(h' → logprob: -5.739936828613281
    7. ' :' → logprob: -7.239936828613281
    8. ' ' → logprob: -7.489936828613281
    9. '
' → logprob: -7.614936828613281
    10. '():
' → logprob: -7.739936828613281

Token 191: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09468693286180496
    2. ':' → logprob: -2.469686985015869
    3. '():' → logprob: -6.969686985015869
    4. ' ' → logprob: -7.094686985015869
    5. '\' → logprob: -7.344686985015869
    6. ' :' → logprob: -7.594686985015869
    7. '(h' → logprob: -7.844686985015869
    8. '\n' → logprob: -7.969686985015869
    9. '
' → logprob: -8.219686508178711
    10. '```' → logprob: -8.219686508178711

Token 192: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013784517534077168
    2. '
' → logprob: -5.263784408569336
    3. '    
' → logprob: -5.263784408569336
    4. 'import' → logprob: -6.013784408569336
    5. ' h' → logprob: -7.388784408569336
    6. 'h' → logprob: -9.888784408569336
    7. ' import' → logprob: -10.013784408569336
    8. '    ' → logprob: -10.013784408569336
    9. '```' → logprob: -10.263784408569336
    10. ' 
' → logprob: -10.388784408569336

Token 193: ' #' (ID: 1069)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.2374655306339264
    2. '   ' → logprob: -2.7374656200408936
    3. 'h' → logprob: -3.1124656200408936
    4. 'import' → logprob: -3.1124656200408936
    5. ' import' → logprob: -3.2374656200408936
    6. ' 
' → logprob: -4.6124653816223145
    7. '
' → logprob: -5.2374653816223145
    8. '	h' → logprob: -6.9874653816223145
    9. '    
' → logprob: -7.2374653816223145
    10. ' ' → logprob: -7.4874653816223145

Token 194: ' Lire' (ID: 57624)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -1.1022669076919556
    2. 'h' → logprob: -1.3522669076919556
    3. 'import' → logprob: -1.4772669076919556
    4. ' import' → logprob: -2.102266788482666
    5. '   ' → logprob: -2.852266788482666
    6. 'input' → logprob: -7.602266788482666
    7. ' input' → logprob: -8.102267265319824
    8. ' ' → logprob: -9.852267265319824
    9. '```' → logprob: -10.352267265319824
    10. '	h' → logprob: -10.602267265319824

Token 195: ' les' (ID: 1341)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.0126248924061656
    2. 'h' → logprob: -4.387624740600586
    3. '   ' → logprob: -9.762624740600586
    4. ' ' → logprob: -10.887624740600586
    5. 'import' → logprob: -11.512624740600586
    6. '	h' → logprob: -11.762624740600586
    7. ' l' → logprob: -12.137624740600586
    8. '(h' → logprob: -12.512624740600586
    9. ' ' → logprob: -13.137624740600586
    10. '_h' → logprob: -13.637624740600586

Token 196: ' dimensions' (ID: 23995)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.3224989175796509
    2. ' h' → logprob: -1.4474989175796509
    3. 'import' → logprob: -3.3224987983703613
    4. '   ' → logprob: -6.947498798370361
    5. ' import' → logprob: -7.447498798370361
    6. 'input' → logprob: -7.572498798370361
    7. 'int' → logprob: -8.07249927520752
    8. ' ' → logprob: -8.19749927520752
    9. 'ent' → logprob: -8.32249927520752
    10. 'l' → logprob: -8.44749927520752

Token 197: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13684740662574768
    2. ' h' → logprob: -2.136847496032715
    3. 'h' → logprob: -4.761847496032715
    4. '    
' → logprob: -7.136847496032715
    5. 'import' → logprob: -8.761847496032715
    6. ' =' → logprob: -9.386847496032715
    7. '	h' → logprob: -9.761847496032715
    8. '
' → logprob: -10.011847496032715
    9. '    ' → logprob: -10.386847496032715
    10. ' line' → logprob: -10.761847496032715

Token 198: ' la' (ID: 557)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.587550699710846
    2. ' la' → logprob: -1.0875506401062012
    3. 'h' → logprob: -2.712550640106201
    4. 'l' → logprob: -4.212550640106201
    5. ' ' → logprob: -4.587550640106201
    6. 'la' → logprob: -4.837550640106201
    7. '   ' → logprob: -5.712550640106201
    8. ' l' → logprob: -5.962550640106201
    9. ' input' → logprob: -6.712550640106201
    10. ' ' → logprob: -8.08755111694336

Token 199: ' grille' (ID: 99153)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.060520272701978683
    2. 'input' → logprob: -3.3105201721191406
    3. ' grille' → logprob: -4.060520172119141
    4. 'grid' → logprob: -6.310520172119141
    5. ' input' → logprob: -6.685520172119141
    6. 'entrée' → logprob: -7.060520172119141
    7. 'ligne' → logprob: -8.31052017211914
    8. ' gr' → logprob: -8.56052017211914
    9. ' grid' → logprob: -9.06052017211914
    10. 'h' → logprob: -9.06052017211914

Token 200: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40612924098968506
    2. ' h' → logprob: -1.281129240989685
    3. '    
' → logprob: -3.4061293601989746
    4. 'h' → logprob: -4.531129360198975
    5. ' 
' → logprob: -5.156129360198975
    6. '
' → logprob: -5.281129360198975
    7. '    ' → logprob: -8.156128883361816
    8. '  
' → logprob: -8.281128883361816
    9. '   
' → logprob: -8.781128883361816
    10. '	h' → logprob: -8.906128883361816

Token 201: '   ' (ID: 271)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.5597273111343384
    2. '   ' → logprob: -0.9347273111343384
    3. 'h' → logprob: -3.809727191925049
    4. '    
' → logprob: -4.934727191925049
    5. ' 
' → logprob: -5.184727191925049
    6. '    ' → logprob: -8.059727668762207
    7. ' ' → logprob: -8.184727668762207
    8. '	h' → logprob: -9.559727668762207
    9. '   
' → logprob: -9.684727668762207
    10. '
' → logprob: -9.809727668762207

Token 202: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.07903905212879181
    2. 'h' (adapté à ' h') → logprob: -2.5790390968322754
    3. '   ' → logprob: -8.954038619995117
    4. '	h' → logprob: -11.829038619995117
    5. ' 
' → logprob: -12.329038619995117
    6. ' ' → logprob: -12.329038619995117
    7. 'import' → logprob: -13.829038619995117
    8. ' ' → logprob: -14.079038619995117
    9. '    
' → logprob: -14.579038619995117
    10. ' import' → logprob: -15.204038619995117

Token 203: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006839453242719173
    2. ',w' → logprob: -5.006839275360107
    3. ' ,' → logprob: -9.006839752197266
    4. 'w' → logprob: -14.881839752197266
    5. ',width' → logprob: -15.006839752197266
    6. ',
' → logprob: -15.381839752197266
    7. ',s' → logprob: -15.881839752197266
    8. '=' → logprob: -16.256839752197266
    9. ' w' → logprob: -16.506839752197266
    10. ',int' → logprob: -16.881839752197266

Token 204: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.023246755823493004
    2. 'w' → logprob: -3.7732467651367188
    3. '=w' → logprob: -14.273246765136719
    4. ',w' → logprob: -15.523246765136719
    5. '_w' → logprob: -15.773246765136719
    6. '	w' → logprob: -15.898246765136719
    7. ' ' → logprob: -16.64824676513672
    8. '*w' → logprob: -16.89824676513672
    9. ''w' → logprob: -17.02324676513672
    10. '&w' → logprob: -17.77324676513672

Token 205: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687753677368164
    2. '=' → logprob: -1.1368775367736816
    3. ',' → logprob: -13.011877059936523
    4. '=input' → logprob: -13.011877059936523
    5. '=int' → logprob: -13.761877059936523
    6. '   ' → logprob: -14.261877059936523
    7. ')' → logprob: -15.261877059936523
    8. ' =
' → logprob: -16.886877059936523
    9. ')=' → logprob: -17.386877059936523
    10. '=
' → logprob: -17.636877059936523

Token 206: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.014163747429847717
    2. 'map' → logprob: -4.264163970947266
    3. '	map' → logprob: -16.264163970947266
    4. ' ' → logprob: -16.514163970947266
    5. '   ' → logprob: -18.389163970947266
    6. ' list' → logprob: -18.764163970947266
    7. '(map' → logprob: -19.014163970947266
    8. ' input' → logprob: -19.389163970947266
    9. ' ' → logprob: -19.514163970947266
    10. '[' → logprob: -19.639163970947266

Token 207: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0046515571884810925
    2. '(' → logprob: -5.7546515464782715
    3. 'int' → logprob: -6.6296515464782715
    4. '(input' → logprob: -9.37965202331543
    5. '(str' → logprob: -9.75465202331543
    6. 'input' → logprob: -12.12965202331543
    7. 'str' → logprob: -13.75465202331543
    8. ' int' → logprob: -13.75465202331543
    9. '<int' → logprob: -14.00465202331543
    10. '(
' → logprob: -14.50465202331543

Token 208: ',' (ID: 11)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.016679951921105385
    2. '(input' → logprob: -4.516679763793945
    3. ' input' → logprob: -5.766679763793945
    4. ')' → logprob: -6.891679763793945
    5. ',input' → logprob: -7.016679763793945
    6. ',' → logprob: -7.516679763793945
    7. '(' → logprob: -11.016679763793945
    8. '=input' → logprob: -12.016679763793945
    9. '   ' → logprob: -12.266679763793945
    10. ' ' → logprob: -14.516679763793945

Token 209: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.006715370807796717
    2. ' input' → logprob: -5.006715297698975
    3. '(input' → logprob: -17.506715774536133
    4. '   ' → logprob: -18.131715774536133
    5. '=input' → logprob: -18.631715774536133
    6. '	input' → logprob: -19.381715774536133
    7. ' ' → logprob: -20.006715774536133
    8. ',input' → logprob: -20.631715774536133
    9. ')' → logprob: -21.506715774536133
    10. '[input' → logprob: -21.881715774536133

Token 210: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.727905979962088e-05
    2. '()' → logprob: -10.00004768371582
    3. '())' → logprob: -13.37504768371582
    4. '(' → logprob: -16.25004768371582
    5. ' ().' → logprob: -16.50004768371582
    6. '()
' → logprob: -17.12504768371582
    7. ')' → logprob: -17.25004768371582
    8. '()))' → logprob: -19.37504768371582
    9. '().
' → logprob: -19.62504768371582
    10. '('').' → logprob: -19.62504768371582

Token 211: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00026205103495158255
    2. 'strip' → logprob: -8.250262260437012
    3. ' split' → logprob: -15.000262260437012
    4. '().' → logprob: -16.000261306762695
    5. 'rstrip' → logprob: -16.250261306762695
    6. 'spl' → logprob: -16.625261306762695
    7. ')' → logprob: -16.875261306762695
    8. '_split' → logprob: -17.250261306762695
    9. '(split' → logprob: -18.500261306762695
    10. '()' → logprob: -19.250261306762695

Token 212: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.022542672231793404
    2. ')' → logprob: -4.147542476654053
    3. '()' → logprob: -5.522542476654053
    4. '()))' → logprob: -6.147542476654053
    5. '))' → logprob: -8.147542953491211
    6. '(' → logprob: -10.022542953491211
    7. '('' → logprob: -11.897542953491211
    8. '())
' → logprob: -13.022542953491211
    9. '(','' → logprob: -13.022542953491211
    10. ' ())' → logprob: -13.147542953491211

Token 213: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38283687829971313
    2. 'grid' → logprob: -2.2578368186950684
    3. '    
' → logprob: -2.8828368186950684
    4. '
' → logprob: -3.0078368186950684
    5. ' lines' → logprob: -3.3828368186950684
    6. 'lines' → logprob: -4.382836818695068
    7. 'prev' → logprob: -4.382836818695068
    8. '  
' → logprob: -5.257836818695068
    9. ' grid' → logprob: -5.382836818695068
    10. '```' → logprob: -5.507836818695068

Token 214: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1548359990119934
    2. 'prev' → logprob: -2.1548359394073486
    3. '   ' → logprob: -4.529836177825928
    4. 'last' → logprob: -5.154836177825928
    5. 'lines' → logprob: -6.029836177825928
    6. ' dp' → logprob: -6.279836177825928
    7. 'previous' → logprob: -6.404836177825928
    8. 'ligne' → logprob: -6.404836177825928
    9. '#' → logprob: -6.654836177825928
    10. 'grid' → logprob: -7.654836177825928

Token 215: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.43396973609924316
    2. 'prev' → logprob: -1.0589697360992432
    3. 'previous' → logprob: -5.683969497680664
    4. 'last' → logprob: -7.558969497680664
    5. 'lines' → logprob: -7.683969497680664
    6. 'ligne' → logprob: -8.808969497680664
    7. '#' (adapté à ' #') → logprob: -9.058969497680664
    8. 'min' → logprob: -9.058969497680664
    9. 'current' → logprob: -9.308969497680664
    10. 'grid' → logprob: -9.433969497680664

Token 216: ' d' (ID: 272)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.2534863352775574
    2. 'dp' → logprob: -1.6284863948822021
    3. 'previous' → logprob: -4.003486156463623
    4. '#' → logprob: -6.378486156463623
    5. ' prev' → logprob: -6.378486156463623
    6. 'import' → logprob: -6.628486156463623
    7. 'from' → logprob: -7.003486156463623
    8. 'current' → logprob: -7.378486156463623
    9. 'min' → logprob: -7.503486156463623
    10. ' dp' → logprob: -7.628486156463623

Token 217: '[j' (ID: 7895)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0002560945285949856
    2. ' =' → logprob: -8.500256538391113
    3. 'P' → logprob: -10.625256538391113
    4. '=' → logprob: -11.375256538391113
    5. 'prev' → logprob: -13.000256538391113
    6. '_prev' → logprob: -13.125256538391113
    7. 'pr' → logprob: -13.375256538391113
    8. '_p' → logprob: -13.375256538391113
    9. 'pl' → logprob: -13.500256538391113
    10. '=[]' → logprob: -13.625256538391113

Token 218: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003780362429097295
    2. ' ]' → logprob: -5.628780364990234
    3. ']=' → logprob: -9.378780364990234
    4. '])' → logprob: -9.753780364990234
    5. ')' → logprob: -11.003780364990234
    6. '=' → logprob: -12.003780364990234
    7. ' =' → logprob: -13.003780364990234
    8. ' ])' → logprob: -13.253780364990234
    9. '],' → logprob: -13.628780364990234
    10. '][' → logprob: -13.878780364990234

Token 219: ' :' (ID: 712)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00593033991754055
    2. '=' → logprob: -5.130930423736572
    3. ',' → logprob: -14.380929946899414
    4. ' ' → logprob: -14.880929946899414
    5. ' =[' → logprob: -15.380929946899414
    6. '[' → logprob: -16.130929946899414
    7. '=[' → logprob: -16.130929946899414
    8. ' ' → logprob: -16.505929946899414
    9. '=[]' → logprob: -16.505929946899414
    10. 's' → logprob: -16.755929946899414

Token 220: ' nombre' (ID: 9733)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07888571172952652
    2. ' ' → logprob: -3.828885793685913
    3. '[' → logprob: -4.203885555267334
    4. ' nombre' → logprob: -4.703885555267334
    5. ' [' → logprob: -4.828885555267334
    6. ' minimal' → logprob: -5.078885555267334
    7. 'float' → logprob: -6.078885555267334
    8. 'inf' → logprob: -6.078885555267334
    9. ' le' → logprob: -6.203885555267334
    10. ' float' → logprob: -6.453885555267334

Token 221: ' minimal' (ID: 19957)
  Prédit: ' minimal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimal' → logprob: -0.04626624658703804
    2. '_min' → logprob: -3.7962663173675537
    3. 'minimal' → logprob: -4.796266078948975
    4. '_' → logprob: -5.296266078948975
    5. ' minimale' → logprob: -5.671266078948975
    6. ' minimum' → logprob: -5.671266078948975
    7. ' de' → logprob: -6.796266078948975
    8. ' _' → logprob: -8.046266555786133
    9. ' d' → logprob: -8.046266555786133
    10. 'minimum' → logprob: -8.171266555786133

Token 222: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.0769767090678215
    2. '_de' → logprob: -3.076976776123047
    3. ' d' → logprob: -3.701976776123047
    4. 'de' → logprob: -6.076976776123047
    5. ' ' → logprob: -8.076976776123047
    6. '_' → logprob: -8.326976776123047
    7. '   ' → logprob: -8.826976776123047
    8. '_d' → logprob: -9.326976776123047
    9. '  ' → logprob: -9.576976776123047
    10. '    ' → logprob: -10.576976776123047

Token 223: ' changements' (ID: 105486)
  Prédit: 'traits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'traits' → logprob: -0.6206398606300354
    2. ' traits' → logprob: -0.8706398606300354
    3. ' changements' → logprob: -3.6206398010253906
    4. 'trait' → logprob: -5.245639801025391
    5. 'chang' → logprob: -6.120639801025391
    6. 'ch' → logprob: -6.370639801025391
    7. 'changes' → logprob: -6.745639801025391
    8. 'tr' → logprob: -6.745639801025391
    9. '"' → logprob: -6.870639801025391
    10. ' trait' → logprob: -7.120639801025391

Token 224: '/c' (ID: 4308)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.33714157342910767
    2. ' nécessaires' → logprob: -1.962141513824463
    3. '_de' → logprob: -2.962141513824463
    4. '_' → logprob: -3.462141513824463
    5. ' d' → logprob: -3.837141513824463
    6. ' =' → logprob: -4.712141513824463
    7. 'de' → logprob: -4.837141513824463
    8. ' ' → logprob: -4.962141513824463
    9. ' nécessaire' → logprob: -5.087141513824463
    10. '_needed' → logprob: -5.962141513824463

Token 225: 'ou' (ID: 283)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.05375772342085838
    2. 'h' → logprob: -4.053757667541504
    3. 'har' → logprob: -4.053757667541504
    4. 'ou' → logprob: -5.553757667541504
    5. 'ont' → logprob: -5.803757667541504
    6. 'ha' → logprob: -6.553757667541504
    7. '#' → logprob: -7.303757667541504
    8. 'ol' → logprob: -7.303757667541504
    9. 'ara' → logprob: -7.553757667541504
    10. 'arat' → logprob: -7.866257667541504

Token 226: 'ps' (ID: 947)
  Prédit: 'leur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'leur' → logprob: -0.6111951470375061
    2. 'leurs' → logprob: -0.8611951470375061
    3. 'r' → logprob: -4.236195087432861
    4. 'rs' → logprob: -5.111195087432861
    5. 'l' → logprob: -5.736195087432861
    6. 'd' → logprob: -6.236195087432861
    7. 'ls' → logprob: -6.736195087432861
    8. 'urs' → logprob: -6.736195087432861
    9. 'le' → logprob: -6.861195087432861
    10. 'nt' → logprob: -6.986195087432861

Token 227: ' nécessaires' (ID: 74402)
  Prédit: ' nécessaires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nécessaires' → logprob: -0.27658748626708984
    2. ' pour' → logprob: -1.6515874862670898
    3. ' nécessaire' → logprob: -4.90158748626709
    4. ' à' → logprob: -4.90158748626709
    5. '   ' → logprob: -5.02658748626709
    6. ' =' → logprob: -5.15158748626709
    7. ' de' → logprob: -5.15158748626709
    8. ' ' → logprob: -5.15158748626709
    9. 'pour' → logprob: -5.40158748626709
    10. ',' → logprob: -7.02658748626709

Token 228: ' pour' (ID: 1930)
  Prédit: ' pour'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pour' → logprob: -0.16051697731018066
    2. ' =' → logprob: -3.4105169773101807
    3. ' à' → logprob: -3.5355169773101807
    4. ' for' → logprob: -3.9105169773101807
    5. ' ' → logprob: -4.285516738891602
    6. ',' → logprob: -4.285516738891602
    7. '   ' → logprob: -4.660516738891602
    8. 'pour' → logprob: -4.785516738891602
    9. ' jusqu' → logprob: -5.035516738891602
    10. ' to' → logprob: -6.035516738891602

Token 229: ' atteindre' (ID: 95734)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.7575213313102722
    2. ' parcour' → logprob: -1.007521390914917
    3. ' atteindre' → logprob: -2.257521390914917
    4. 'atte' → logprob: -4.632521152496338
    5. ' arriver' → logprob: -4.632521152496338
    6. ' par' → logprob: -4.632521152496338
    7. ' couvrir' → logprob: -5.382521152496338
    8. '   ' → logprob: -5.507521152496338
    9. 'tr' → logprob: -5.507521152496338
    10. ' la' → logprob: -6.007521152496338

Token 230: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.018835710361599922
    2. ' j' → logprob: -4.268835544586182
    3. 'la' → logprob: -6.143835544586182
    4. ' l' → logprob: -7.143835544586182
    5. ' colonne' → logprob: -7.893835544586182
    6. ' le' → logprob: -8.01883602142334
    7. ' position' → logprob: -8.26883602142334
    8. 'col' → logprob: -8.39383602142334
    9. ' ' → logprob: -9.01883602142334
    10. 'j' → logprob: -9.01883602142334

Token 231: ' case' (ID: 1890)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.8124071359634399
    2. 'case' → logprob: -0.8124071359634399
    3. ' colonne' → logprob: -2.6874070167541504
    4. ' case' → logprob: -4.06240701675415
    5. 'position' → logprob: -4.31240701675415
    6. 'j' → logprob: -5.68740701675415
    7. ' j' → logprob: -6.06240701675415
    8. ' position' → logprob: -6.18740701675415
    9. ' ' → logprob: -6.18740701675415
    10. '   ' → logprob: -6.68740701675415

Token 232: ' (' (ID: 350)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.003705896669998765
    2. 'j' → logprob: -5.628705978393555
    3. '[j' → logprob: -9.378705978393555
    4. ' ' → logprob: -11.878705978393555
    5. '   ' → logprob: -12.628705978393555
    6. ' [' → logprob: -12.753705978393555
    7. ' ' → logprob: -12.878705978393555
    8. '_j' → logprob: -14.003705978393555
    9. ' `' → logprob: -14.378705978393555
    10. '	j' → logprob: -14.378705978393555

Token 233: 'i' (ID: 72)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.31278809905052185
    2. 'j' → logprob: -1.4377881288528442
    3. ' ' → logprob: -3.8127880096435547
    4. '0' → logprob: -4.937788009643555
    5. '   ' → logprob: -7.437788009643555
    6. '    ' → logprob: -8.062788009643555
    7. ',' → logprob: -8.437788009643555
    8. ')' → logprob: -8.812788009643555
    9. '	j' → logprob: -8.812788009643555
    10. ' ,' → logprob: -9.312788009643555

Token 234: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04772727191448212
    2. ',j' → logprob: -3.297727346420288
    3. ' ,' → logprob: -4.672727108001709
    4. ')' → logprob: -8.922727584838867
    5. '-' → logprob: -9.797727584838867
    6. ' ' → logprob: -10.422727584838867
    7. '   ' → logprob: -10.797727584838867
    8. ' j' → logprob: -11.172727584838867
    9. ' -' → logprob: -11.672727584838867
    10. ')[' → logprob: -12.172727584838867

Token 235: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.3132663369178772
    2. 'j' → logprob: -1.3132662773132324
    3. '	j' → logprob: -13.31326675415039
    4. ' ' → logprob: -13.81326675415039
    5. ')' → logprob: -14.31326675415039
    6. '   ' → logprob: -14.68826675415039
    7. ' ' → logprob: -15.56326675415039
    8. '    ' → logprob: -15.68826675415039
    9. ',j' → logprob: -15.68826675415039
    10. '[j' → logprob: -16.18826675415039

Token 236: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012454704847186804
    2. ' )' → logprob: -7.501245498657227
    3. ')
' → logprob: -8.376245498657227
    4. '   ' → logprob: -8.626245498657227
    5. '")' → logprob: -8.876245498657227
    6. ')")' → logprob: -9.876245498657227
    7. ',' → logprob: -11.376245498657227
    8. ')`' → logprob: -11.501245498657227
    9. ']' → logprob: -11.751245498657227
    10. '),' → logprob: -11.876245498657227

Token 237: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32957127690315247
    2. ' d' → logprob: -1.32957124710083
    3. 'd' → logprob: -4.95457124710083
    4. ' =' → logprob: -5.07957124710083
    5. '
' → logprob: -6.57957124710083
    6. ' ' → logprob: -7.32957124710083
    7. '    
' → logprob: -7.70457124710083
    8. '  
' → logprob: -9.579571723937988
    9. '	d' → logprob: -9.704571723937988
    10. ',' → logprob: -9.829571723937988

Token 238: ' #' (ID: 1069)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.14547894895076752
    2. 'd' → logprob: -2.0204789638519287
    3. '   ' → logprob: -6.02047872543335
    4. '	d' → logprob: -8.770479202270508
    5. ' =' → logprob: -9.395479202270508
    6. ' ' → logprob: -9.520479202270508
    7. ' ' → logprob: -11.270479202270508
    8. '
' → logprob: -11.395479202270508
    9. '  ' → logprob: -11.770479202270508
    10. ' 
' → logprob: -11.895479202270508

Token 239: ' Initial' (ID: 9209)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.31496113538742065
    2. ' d' → logprob: -1.3149611949920654
    3. 'import' → logprob: -6.814960956573486
    4. '   ' → logprob: -8.064961433410645
    5. '#' → logprob: -9.439961433410645
    6. ' import' → logprob: -9.689961433410645
    7. ' ' → logprob: -10.939961433410645
    8. ' ' → logprob: -11.064961433410645
    9. 'from' → logprob: -11.064961433410645
    10. 'prev' → logprob: -11.314961433410645

Token 240: 'isé' (ID: 30065)
  Prédit: 'iser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.006809037644416094
    2. 'er' → logprob: -6.756809234619141
    3. '   ' → logprob: -6.881809234619141
    4. 'izer' → logprob: -7.006809234619141
    5. 'ize' → logprob: -7.131809234619141
    6. 'isé' → logprob: -7.256809234619141
    7. 'is' → logprob: -7.381809234619141
    8. 'ement' → logprob: -8.38180923461914
    9. ' =' → logprob: -8.63180923461914
    10. '_' → logprob: -8.75680923461914

Token 241: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3298143446445465
    2. ' à' → logprob: -1.9548143148422241
    3. '[' → logprob: -2.0798144340515137
    4. '=' → logprob: -5.329814434051514
    5. '   ' → logprob: -5.954814434051514
    6. ' avec' → logprob: -6.329814434051514
    7. 'à' → logprob: -6.454814434051514
    8. '=[' → logprob: -6.829814434051514
    9. ' ' → logprob: -7.329814434051514
    10. ' [' → logprob: -7.329814434051514

Token 242: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10389461368322372
    2. ' [' → logprob: -2.7288947105407715
    3. '[w' → logprob: -3.8538947105407715
    4. '0' → logprob: -5.4788947105407715
    5. 'float' → logprob: -5.8538947105407715
    6. '[int' → logprob: -6.1038947105407715
    7. 'w' → logprob: -6.9788947105407715
    8. ' float' → logprob: -7.3538947105407715
    9. '[h' → logprob: -8.103894233703613
    10. '[j' → logprob: -8.228894233703613

Token 243: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16612796485424042
    2. '0' → logprob: -2.541127920150757
    3. '[w' → logprob: -3.166127920150757
    4. 'float' → logprob: -3.791127920150757
    5. 'w' → logprob: -5.666128158569336
    6. '[h' → logprob: -5.791128158569336
    7. '[int' → logprob: -6.416128158569336
    8. ' [' → logprob: -7.541128158569336
    9. '[i' → logprob: -8.291128158569336
    10. '[j' → logprob: -9.041128158569336

Token 244: ' pour' (ID: 1930)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.5161615014076233
    2. 'd' → logprob: -1.0161614418029785
    3. ' for' → logprob: -4.1411614418029785
    4. ',' → logprob: -4.6411614418029785
    5. ' =' → logprob: -4.6411614418029785
    6. '   ' → logprob: -6.1411614418029785
    7. 'for' → logprob: -6.8911614418029785
    8. ' ' → logprob: -7.0161614418029785
    9. ' ,' → logprob: -7.3911614418029785
    10. '
' → logprob: -8.016161918640137

Token 245: ' d' (ID: 272)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -1.2576961517333984
    2. ' j' → logprob: -1.6326961517333984
    3. ' w' → logprob: -1.7576961517333984
    4. '0' → logprob: -1.8826961517333984
    5. ' la' → logprob: -2.8826961517333984
    6. 'w' → logprob: -3.5076961517333984
    7. 'j' → logprob: -3.6326961517333984
    8. '[' → logprob: -3.7576961517333984
    9. ' ' → logprob: -4.257696151733398
    10. '   ' → logprob: -4.382696151733398

Token 246: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03049355186522007
    2. '[j' → logprob: -4.15549373626709
    3. '   ' → logprob: -5.28049373626709
    4. ' [' → logprob: -5.28049373626709
    5. ' ' → logprob: -7.15549373626709
    6. ' =' → logprob: -7.28049373626709
    7. 'ef' → logprob: -7.40549373626709
    8. '[:]' → logprob: -7.78049373626709
    9. '  ' → logprob: -8.40549373626709
    10. '[i' → logprob: -8.40549373626709

Token 247: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05109540373086929
    2. 'j' → logprob: -3.301095485687256
    3. ' ' → logprob: -4.926095485687256
    4. ']' → logprob: -5.551095485687256
    5. ' ]' → logprob: -7.051095485687256
    6. ' j' → logprob: -7.301095485687256
    7. '   ' → logprob: -9.051095008850098
    8. '[' → logprob: -10.301095008850098
    9. 'i' → logprob: -10.551095008850098
    10. 'w' → logprob: -10.801095008850098

Token 248: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01197903510183096
    2. '],' → logprob: -4.761979103088379
    3. ' ]' → logprob: -5.886979103088379
    4. ')' → logprob: -8.761979103088379
    5. ']=' → logprob: -9.011979103088379
    6. '])' → logprob: -9.261979103088379
    7. ']
' → logprob: -9.761979103088379
    8. ' ],' → logprob: -9.886979103088379
    9. '   ' → logprob: -10.886979103088379
    10. ',' → logprob: -11.011979103088379

Token 249: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04343119263648987
    2. ' ,' → logprob: -3.543431282043457
    3. ' =' → logprob: -6.168431282043457
    4. ' d' → logprob: -6.293431282043457
    5. ',
' → logprob: -6.543431282043457
    6. '   ' → logprob: -6.793431282043457
    7. ']' → logprob: -6.793431282043457
    8. ' ' → logprob: -7.168431282043457
    9. '    ' → logprob: -7.168431282043457
    10. '[' → logprob: -7.293431282043457

Token 250: 'g' (ID: 70)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7481625080108643
    2. '0' → logprob: -0.7481625080108643
    3. ' )' → logprob: -4.248162269592285
    4. 'd' → logprob: -4.373162269592285
    5. '),' → logprob: -4.623162269592285
    6. ' ' → logprob: -4.873162269592285
    7. ' d' → logprob: -5.248162269592285
    8. '   ' → logprob: -6.373162269592285
    9. '1' → logprob: -7.248162269592285
    10. '[' → logprob: -7.998162269592285

Token 251: 'arde' (ID: 11236)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.5874605774879456
    2. ']' → logprob: -1.8374605178833008
    3. 'd' → logprob: -1.8374605178833008
    4. 'u' → logprob: -3.712460517883301
    5. ')' → logprob: -3.837460517883301
    6. 'def' → logprob: -3.962460517883301
    7. 'lobal' → logprob: -4.337460517883301
    8. 'enerated' → logprob: -4.462460517883301
    9. 'eneral' → logprob: -5.087460517883301
    10. '])' → logprob: -5.087460517883301

Token 252: '-f' (ID: 3002)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.6289736032485962
    2. ' ' → logprob: -2.1289734840393066
    3. ' la' → logprob: -2.3789734840393066
    4. 'd' → logprob: -2.7539734840393066
    5. '[' → logprob: -3.2539734840393066
    6. ' )' → logprob: -3.3789734840393066
    7. ')' → logprob: -3.6289734840393066
    8. ' une' → logprob: -3.7539734840393066
    9. ' =' → logprob: -4.628973484039307
    10. '   ' → logprob: -5.128973484039307

Token 253: 'ou' (ID: 283)
  Prédit: 'ort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ort' → logprob: -0.27566826343536377
    2. 'ile' → logprob: -2.275668144226074
    3. 'ault' → logprob: -4.150668144226074
    4. 'u' → logprob: -4.275668144226074
    5. 'ront' → logprob: -4.400668144226074
    6. 'or' → logprob: -4.525668144226074
    7. 'ont' → logprob: -4.650668144226074
    8. 'et' → logprob: -4.900668144226074
    9. 'ilet' → logprob: -4.900668144226074
    10. 'ille' → logprob: -5.275668144226074

Token 254: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06305012851953506
    2. ' )' → logprob: -3.4380500316619873
    3. '),' → logprob: -4.188050270080566
    4. '[' → logprob: -4.938050270080566
    5. ',' → logprob: -6.063050270080566
    6. '   ' → logprob: -6.563050270080566
    7. ' d' → logprob: -7.063050270080566
    8. ' ' → logprob: -7.313050270080566
    9. ' ),' → logprob: -8.063050270080566
    10. 'd' → logprob: -8.438050270080566

Token 255: ' puis' (ID: 18766)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.141399085521698
    2. 'd' → logprob: -2.5163991451263428
    3. '   ' → logprob: -4.391398906707764
    4. ' puis' → logprob: -4.641398906707764
    5. ' et' → logprob: -5.016398906707764
    6. ' [' → logprob: -5.266398906707764
    7. '0' → logprob: -5.266398906707764
    8. ' ' → logprob: -6.016398906707764
    9. '[' → logprob: -6.141398906707764
    10. 'inf' → logprob: -6.391398906707764

Token 256: ' à' (ID: 1221)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.3095480799674988
    2. '[' → logprob: -1.5595481395721436
    3. '[w' → logprob: -3.5595481395721436
    4. ' w' → logprob: -4.8095479011535645
    5. ' float' → logprob: -4.9345479011535645
    6. 'float' → logprob: -6.0595479011535645
    7. 'w' → logprob: -6.3095479011535645
    8. '[in' → logprob: -6.3095479011535645
    9. '   ' → logprob: -6.5595479011535645
    10. 'inf' → logprob: -6.6845479011535645

Token 257: ' une' (ID: 2463)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.6150884628295898
    2. 'float' → logprob: -1.4900884628295898
    3. '10' → logprob: -2.61508846282959
    4. ' w' → logprob: -2.99008846282959
    5. ' ' → logprob: -3.24008846282959
    6. 'w' → logprob: -3.61508846282959
    7. '0' → logprob: -3.86508846282959
    8. '100' → logprob: -4.36508846282959
    9. ' [' → logprob: -5.74008846282959
    10. '[' → logprob: -6.24008846282959

Token 258: ' valeur' (ID: 41664)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.6230876445770264
    2. ' très' → logprob: -2.1230876445770264
    3. '[' → logprob: -2.3730876445770264
    4. ' large' → logprob: -2.7480876445770264
    5. 'tr' → logprob: -2.8730876445770264
    6. ' grand' → logprob: -3.3730876445770264
    7. ' very' → logprob: -3.8730876445770264
    8. ' tr' → logprob: -3.8730876445770264
    9. ' inf' → logprob: -4.3730878829956055
    10. ' grande' → logprob: -4.4980878829956055

Token 259: ' élevée' (ID: 150678)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6294257044792175
    2. '   ' → logprob: -2.0044257640838623
    3. ' float' → logprob: -2.1294257640838623
    4. 'float' → logprob: -2.3794257640838623
    5. ' inf' → logprob: -3.0044257640838623
    6. 'inf' → logprob: -3.2544257640838623
    7. ' infin' → logprob: -4.504425525665283
    8. '[' → logprob: -4.879425525665283
    9. 'max' → logprob: -6.254425525665283
    10. ' élevée' → logprob: -6.379425525665283

Token 260: ' (' (ID: 350)
  Prédit: ' pour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pour' → logprob: -0.6290572285652161
    2. ' for' → logprob: -1.2540571689605713
    3. ',' → logprob: -2.3790571689605713
    4. '   ' → logprob: -3.3790571689605713
    5. ' ' → logprob: -3.6290571689605713
    6. 'for' → logprob: -4.62905740737915
    7. ' ,' → logprob: -5.87905740737915
    8. ' (' → logprob: -6.12905740737915
    9. '    ' → logprob: -6.25405740737915
    10. ' d' → logprob: -6.50405740737915

Token 261: '300' (ID: 4095)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.8051155805587769
    2. ' float' → logprob: -1.4301155805587769
    3. ' ' → logprob: -1.8051155805587769
    4. ' w' → logprob: -3.0551156997680664
    5. 'float' → logprob: -3.3051156997680664
    6. '   ' → logprob: -3.6801156997680664
    7. ')' → logprob: -3.6801156997680664
    8. '    ' → logprob: -5.555115699768066
    9. 'w' → logprob: -6.305115699768066
    10. '  ' → logprob: -6.680115699768066

Token 262: ')' (ID: 8)
  Prédit: '00'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.1476193070411682
    2. '000' → logprob: -2.7726192474365234
    3. '0' → logprob: -2.8976192474365234
    4. '01' → logprob: -4.772619247436523
    5. ')' → logprob: -5.397619247436523
    6. '_' → logprob: -5.897619247436523
    7. '001' → logprob: -6.647619247436523
    8. '+' → logprob: -6.647619247436523
    9. '   ' → logprob: -7.022619247436523
    10. '1' → logprob: -8.147619247436523

Token 263: ' pour' (ID: 1930)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0587100982666016
    2. '   ' → logprob: -1.4337100982666016
    3. ' pour' → logprob: -1.6837100982666016
    4. 'for' → logprob: -2.1837100982666016
    5. ',' → logprob: -2.5587100982666016
    6. ']' → logprob: -4.558710098266602
    7. ' d' → logprob: -4.558710098266602
    8. ')' → logprob: -4.683710098266602
    9. '[' → logprob: -5.808710098266602
    10. ' ' → logprob: -6.808710098266602

Token 264: ' les' (ID: 1341)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.025432758033275604
    2. ' les' → logprob: -4.400432586669922
    3. 'j' → logprob: -4.775432586669922
    4. ' le' → logprob: -6.025432586669922
    5. ' _' → logprob: -7.775432586669922
    6. ' ' → logprob: -7.775432586669922
    7. ' i' → logprob: -8.650432586669922
    8. 'les' → logprob: -8.775432586669922
    9. 'le' → logprob: -8.900432586669922
    10. ' l' → logprob: -9.025432586669922

Token 265: ' autres' (ID: 18701)
  Prédit: ' autres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' autres' → logprob: -0.24851632118225098
    2. ' j' → logprob: -1.873516321182251
    3. ' indices' → logprob: -3.623516321182251
    4. ' positions' → logprob: -3.998516321182251
    5. 'j' → logprob: -4.248516082763672
    6. 'indices' → logprob: -6.373516082763672
    7. 'positions' → logprob: -6.623516082763672
    8. ' ' → logprob: -6.748516082763672
    9. ' rest' → logprob: -7.373516082763672
    10. '   ' → logprob: -7.623516082763672

Token 266: '
' (ID: 198)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8755447864532471
    2. ' d' → logprob: -0.8755447864532471
    3. '   ' → logprob: -2.000544786453247
    4. ',' → logprob: -4.125544548034668
    5. '
' → logprob: -4.500544548034668
    6. ',
' → logprob: -7.125544548034668
    7. '_d' → logprob: -7.250544548034668
    8. ' ,' → logprob: -7.375544548034668
    9. ' ' → logprob: -7.500544548034668
    10. ' =' → logprob: -7.625544548034668

Token 267: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23424169421195984
    2. ' d' → logprob: -2.2342417240142822
    3. 'd' → logprob: -2.6092417240142822
    4. ' =' → logprob: -4.109241485595703
    5. ' ' → logprob: -5.609241485595703
    6. '[' → logprob: -5.734241485595703
    7. ',' → logprob: -6.859241485595703
    8. '
' → logprob: -7.234241485595703
    9. '    
' → logprob: -7.234241485595703
    10. '    ' → logprob: -7.484241485595703

Token 268: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.26680564880371094
    2. 'd' (adapté à ' d') → logprob: -1.641805648803711
    3. '   ' → logprob: -3.266805648803711
    4. '	d' → logprob: -7.016805648803711
    5. ' ' → logprob: -7.391805648803711
    6. '    ' → logprob: -7.641805648803711
    7. '
' → logprob: -9.016805648803711
    8. ' 
' → logprob: -9.141805648803711
    9. '    
' → logprob: -9.391805648803711
    10. '  ' → logprob: -9.891805648803711

Token 269: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007628519553691149
    2. '=' → logprob: -4.882628440856934
    3. ' =[' → logprob: -11.632628440856934
    4. '=[' → logprob: -11.882628440856934
    5. '[' → logprob: -12.132628440856934
    6. ' ' → logprob: -14.007628440856934
    7. '   ' → logprob: -16.00762939453125
    8. ',' → logprob: -16.50762939453125
    9. ' =
' → logprob: -17.00762939453125
    10. '	' → logprob: -17.00762939453125

Token 270: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04858941584825516
    2. ' [' → logprob: -3.0485894680023193
    3. '   ' → logprob: -13.548589706420898
    4. '([' → logprob: -14.423589706420898
    5. ' ' → logprob: -15.923589706420898
    6. '  ' → logprob: -17.2985897064209
    7. '[int' → logprob: -17.6735897064209
    8. '[-' → logprob: -18.1735897064209
    9. '{' → logprob: -18.5485897064209
    10. '0' → logprob: -18.6735897064209

Token 271: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004535031039267778
    2. '300' → logprob: -5.87953519821167
    3. ' ' → logprob: -6.37953519821167
    4. 'float' → logprob: -11.129534721374512
    5. '   ' → logprob: -11.254534721374512
    6. '  ' → logprob: -13.129534721374512
    7. '(' → logprob: -14.379534721374512
    8. 'int' → logprob: -14.504534721374512
    9. '[' → logprob: -15.129534721374512
    10. '    ' → logprob: -15.254534721374512

Token 272: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005217275116592646
    2. ']+' → logprob: -5.7552170753479
    3. ',' → logprob: -6.3802170753479
    4. ' ]' → logprob: -8.255217552185059
    5. ' if' → logprob: -10.380217552185059
    6. ']*' → logprob: -10.755217552185059
    7. ' for' → logprob: -11.255217552185059
    8. '300' → logprob: -12.505217552185059
    9. 'if' → logprob: -12.755217552185059
    10. '   ' → logprob: -12.880217552185059

Token 273: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.34421592950820923
    2. ' +' → logprob: -1.8442158699035645
    3. ']' → logprob: -2.5942158699035645
    4. ']+' → logprob: -3.0942158699035645
    5. ',' → logprob: -4.5942158699035645
    6. '+[' → logprob: -6.4692158699035645
    7. ' for' → logprob: -7.7192158699035645
    8. '300' → logprob: -8.594216346740723
    9. '*' → logprob: -8.719216346740723
    10. '[' → logprob: -8.844216346740723

Token 274: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0024762547109276056
    2. ' [' → logprob: -6.002476215362549
    3. '   ' → logprob: -15.252476692199707
    4. ' ' → logprob: -16.00247573852539
    5. '([' → logprob: -16.00247573852539
    6. '300' → logprob: -16.87747573852539
    7. '[int' → logprob: -18.37747573852539
    8. '  ' → logprob: -18.50247573852539
    9. ' ' → logprob: -19.25247573852539
    10. '[-' → logprob: -19.75247573852539

Token 275: '300' (ID: 4095)
  Prédit: '300'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '300' → logprob: -2.939851037808694e-05
    2. ' ' → logprob: -10.500029563903809
    3. '   ' → logprob: -14.250029563903809
    4. 'int' → logprob: -15.125029563903809
    5. 'float' → logprob: -15.375029563903809
    6. '(' → logprob: -15.625029563903809
    7. '  ' → logprob: -15.625029563903809
    8. '0' → logprob: -15.750029563903809
    9. '3' → logprob: -16.375028610229492
    10. '30' → logprob: -17.437528610229492

Token 276: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00375875155441463
    2. ']*' → logprob: -5.753758907318115
    3. ' for' → logprob: -7.878758907318115
    4. ' ]' → logprob: -8.878758430480957
    5. ']+' → logprob: -10.253758430480957
    6. ']*(' → logprob: -10.878758430480957
    7. 'for' → logprob: -12.628758430480957
    8. '+' → logprob: -13.003758430480957
    9. ',' → logprob: -13.253758430480957
    10. ')' → logprob: -15.253758430480957

Token 277: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8327690362930298
    2. ' for' → logprob: -0.9577690362930298
    3. ']*' → logprob: -2.3327689170837402
    4. 'for' → logprob: -2.9577689170837402
    5. ']*(' → logprob: -4.58276891708374
    6. '*' → logprob: -4.70776891708374
    7. ' *' → logprob: -5.58276891708374
    8. ' ]' → logprob: -6.08276891708374
    9. ' ' → logprob: -6.33276891708374
    10. '[' → logprob: -6.70776891708374

Token 278: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.3239358365535736
    2. '(w' → logprob: -1.448935866355896
    3. ' w' → logprob: -3.5739357471466064
    4. ' (' → logprob: -4.3239359855651855
    5. '(' → logprob: -7.6989359855651855
    6. '   ' → logprob: -9.323935508728027
    7. ' ' → logprob: -10.823935508728027
    8. '	w' → logprob: -11.698935508728027
    9. '[w' → logprob: -12.573935508728027
    10. '<w' → logprob: -13.323935508728027

Token 279: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08386828005313873
    2. '   ' → logprob: -2.8338682651519775
    3. '    
' → logprob: -4.208868503570557
    4. '  
' → logprob: -6.083868503570557
    5. '<|end|>' → logprob: -6.208868503570557
    6. ' 
' → logprob: -7.333868503570557
    7. '   
' → logprob: -7.583868503570557
    8. '\n' → logprob: -7.958868503570557
    9. '
' → logprob: -8.583868026733398
    10. '  ' → logprob: -8.958868026733398

Token 280: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6255534291267395
    2. 'for' → logprob: -1.0005533695220947
    3. '   ' → logprob: -2.3755533695220947
    4. '	for' → logprob: -5.500553607940674
    5. '    
' → logprob: -9.375553131103516
    6. '
' → logprob: -9.375553131103516
    7. ' ' → logprob: -9.875553131103516
    8. 'import' → logprob: -11.125553131103516
    9. '	
' → logprob: -11.250553131103516
    10. '```' → logprob: -11.875553131103516

Token 281: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03066534921526909
    2. ' for' → logprob: -3.530665397644043
    3. '   ' → logprob: -7.030665397644043
    4. 'import' → logprob: -10.655665397644043
    5. '	for' → logprob: -12.655665397644043
    6. 'from' → logprob: -13.405665397644043
    7. '    
' → logprob: -14.530665397644043
    8. '#' (adapté à ' #') → logprob: -14.905665397644043
    9. ' ' → logprob: -15.155665397644043
    10. '```' → logprob: -15.280665397644043

Token 282: ' a' (ID: 261)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0010278081754222512
    2. ' for' → logprob: -7.251027584075928
    3. 'import' → logprob: -8.376028060913086
    4. 'from' → logprob: -9.376028060913086
    5. 'input' → logprob: -14.626028060913086
    6. 'prev' → logprob: -14.751028060913086
    7. '   ' → logprob: -14.876028060913086
    8. '_' → logprob: -14.876028060913086
    9. '_for' → logprob: -15.626028060913086
    10. '```' → logprob: -15.626028060913086

Token 283: ' cont' (ID: 836)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06349794566631317
    2. '=' → logprob: -3.063498020172119
    3. ' ' → logprob: -5.313498020172119
    4. '   ' → logprob: -5.438498020172119
    5. 'rray' → logprob: -6.938498020172119
    6. 'r' → logprob: -7.188498020172119
    7. 'l' → logprob: -7.313498020172119
    8. '_line' → logprob: -8.063497543334961
    9. 'b' → logprob: -8.188497543334961
    10. '    ' → logprob: -8.313497543334961

Token 284: 'i' (ID: 72)
  Prédit: 'inue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inue' → logprob: -0.04009508341550827
    2. 'in' → logprob: -4.29009485244751
    3. ' =' → logprob: -4.29009485244751
    4. '=' → logprob: -5.79009485244751
    5. 'enu' → logprob: -5.79009485244751
    6. 'inu' → logprob: -6.29009485244751
    7. 'e' → logprob: -6.54009485244751
    8. 'i' → logprob: -7.16509485244751
    9. 'enue' → logprob: -7.41509485244751
    10. '   ' → logprob: -8.665095329284668

Token 285: 'endra' (ID: 32364)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.018935371190309525
    2. 'nu' → logprob: -4.768935203552246
    3. '=' → logprob: -5.893935203552246
    4. 'ner' → logprob: -6.018935203552246
    5. '[' → logprob: -7.143935203552246
    6. '[n' → logprob: -7.143935203552246
    7. ' =' → logprob: -7.143935203552246
    8. 'ne' → logprob: -8.018935203552246
    9. 'nus' → logprob: -8.268935203552246
    10. 'neur' → logprob: -8.518935203552246

Token 286: ' le' (ID: 505)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.5347800254821777
    2. ' []' → logprob: -1.2847800254821777
    3. '[' → logprob: -3.4097800254821777
    4. ' [' → logprob: -3.5347800254821777
    5. '   ' → logprob: -3.9097800254821777
    6. ' =' → logprob: -4.534780025482178
    7. ' les' → logprob: -4.659780025482178
    8. ' la' → logprob: -4.909780025482178
    9. '["' → logprob: -5.284780025482178
    10. '['' → logprob: -5.409780025482178

Token 287: ' caractère' (ID: 80509)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5076696276664734
    2. '[]' → logprob: -2.382669687271118
    3. '""' → logprob: -2.632669687271118
    4. '[' → logprob: -3.132669687271118
    5. '"' → logprob: -3.257669687271118
    6. '['' → logprob: -3.382669687271118
    7. '''' → logprob: -3.882669687271118
    8. 'prev' → logprob: -4.007669448852539
    9. '[input' → logprob: -4.132669448852539
    10. 'list' → logprob: -4.757669448852539

Token 288: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5362429618835449
    2. ' de' → logprob: -1.911242961883545
    3. '_' → logprob: -2.161242961883545
    4. ' s' → logprob: -3.411242961883545
    5. ' actuel' → logprob: -3.661242961883545
    6. ' précédent' → logprob: -4.036242961883545
    7. ' ' → logprob: -4.161242961883545
    8. '_l' → logprob: -5.036242961883545
    9. ' courant' → logprob: -5.036242961883545
    10. '  ' → logprob: -5.161242961883545

Token 289: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.054922789335250854
    2. 'l' → logprob: -4.054922580718994
    3. 'la' → logprob: -4.304922580718994
    4. ' l' → logprob: -4.429922580718994
    5. ' ' → logprob: -4.679922580718994
    6. 'ligne' → logprob: -8.304923057556152
    7. ' chaque' → logprob: -8.304923057556152
    8. '   ' → logprob: -8.429923057556152
    9. ' input' → logprob: -8.929923057556152
    10. ' ligne' → logprob: -9.304923057556152

Token 290: ' première' (ID: 23423)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.588017463684082
    2. 'der' → logprob: -1.463017463684082
    3. 'case' → logprob: -2.088017463684082
    4. 'prem' → logprob: -3.088017463684082
    5. 'pr' → logprob: -4.588017463684082
    6. ' dernière' → logprob: -4.713017463684082
    7. 'col' → logprob: -4.838017463684082
    8. ' ligne' → logprob: -5.713017463684082
    9. 'dern' → logprob: -5.713017463684082
    10. ' ' → logprob: -6.213017463684082

Token 291: ' case' (ID: 1890)
  Prédit: ' ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.1473439484834671
    2. 'ligne' → logprob: -2.022343873977661
    3. 'case' → logprob: -6.77234411239624
    4. ' ' → logprob: -7.14734411239624
    5. ' case' → logprob: -7.39734411239624
    6. '   ' → logprob: -7.39734411239624
    7. ' colonne' → logprob: -8.147343635559082
    8. 'l' → logprob: -8.272343635559082
    9. ' lign' → logprob: -9.022343635559082
    10. 'a' → logprob: -9.022343635559082

Token 292: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.8253276348114014
    2. ' =' → logprob: -1.5753276348114014
    3. ',' → logprob: -1.8253276348114014
    4. '   ' → logprob: -2.9503276348114014
    5. 's' → logprob: -3.8253276348114014
    6. ' ligne' → logprob: -3.8253276348114014
    7. '[]' → logprob: -3.9503276348114014
    8. ' a' → logprob: -4.5753278732299805
    9. ' s' → logprob: -4.8253278732299805
    10. '[' → logprob: -4.8253278732299805

Token 293: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.37210923433303833
    2. 'la' → logprob: -1.6221091747283936
    3. ' chaque' → logprob: -2.2471091747283936
    4. 'l' → logprob: -5.747109413146973
    5. 'cha' → logprob: -5.997109413146973
    6. 'ligne' → logprob: -7.497109413146973
    7. ' ' → logprob: -8.497109413146973
    8. '   ' → logprob: -8.497109413146973
    9. 'a' → logprob: -8.872109413146973
    10. 'ch' → logprob: -9.122109413146973

Token 294: ' grille' (ID: 99153)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.292656809091568
    2. ' ligne' → logprob: -2.167656898498535
    3. 'prem' → logprob: -2.292656898498535
    4. 'gr' → logprob: -3.792656898498535
    5. ' première' → logprob: -5.042656898498535
    6. ' grille' → logprob: -6.292656898498535
    7. 'l' → logprob: -6.542656898498535
    8. '   ' → logprob: -6.667656898498535
    9. ' ' → logprob: -6.792656898498535
    10. '#' → logprob: -7.792656898498535

Token 295: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7197819352149963
    2. ',' → logprob: -1.2197818756103516
    3. 'a' → logprob: -2.5947818756103516
    4. '   ' → logprob: -2.8447818756103516
    5. '    
' → logprob: -3.9697818756103516
    6. ' a' → logprob: -4.094781875610352
    7. '
' → logprob: -4.469781875610352
    8. ' 
' → logprob: -4.594781875610352
    9. '=' → logprob: -5.594781875610352
    10. '   
' → logprob: -5.719781875610352

Token 296: ' utilisé' (ID: 53138)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5467666983604431
    2. 'a' → logprob: -1.296766757965088
    3. ' '' → logprob: -2.921766757965088
    4. ' line' → logprob: -2.921766757965088
    5. '"' → logprob: -5.046766757965088
    6. ' "' → logprob: -5.296766757965088
    7. '   ' → logprob: -5.296766757965088
    8. ''' → logprob: -5.796766757965088
    9. ''a' → logprob: -6.296766757965088
    10. ' ligne' → logprob: -6.296766757965088

Token 297: ' ult' (ID: 11619)
  Prédit: ' pour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pour' → logprob: -0.984164834022522
    2. ' for' → logprob: -1.109164834022522
    3. ' comme' → logprob: -2.3591647148132324
    4. 'for' → logprob: -2.4841647148132324
    5. ' ' → logprob: -3.6091647148132324
    6. '   ' → logprob: -3.7341647148132324
    7. ' as' → logprob: -3.7341647148132324
    8. ' =' → logprob: -4.109164714813232
    9. 'pour' → logprob: -4.984164714813232
    10. ' to' → logprob: -5.109164714813232

Token 298: 'érieure' (ID: 45836)
  Prédit: 'érieure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érieure' → logprob: -0.009351327084004879
    2. '   ' → logprob: -5.3843512535095215
    3. 'é' → logprob: -6.3843512535095215
    4. 'érieur' → logprob: -6.8843512535095215
    5. 'è' → logprob: -7.5093512535095215
    6. 'im' → logprob: -8.25935173034668
    7. 'ie' → logprob: -8.50935173034668
    8. 'éri' → logprob: -8.63435173034668
    9. '       ' → logprob: -8.63435173034668
    10. 'e' → logprob: -8.88435173034668

Token 299: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.0018793739145621657
    2. 'm' → logprob: -6.7518792152404785
    3. 'ent' → logprob: -8.376879692077637
    4. 'mentation' → logprob: -9.251879692077637
    5. 'vement' → logprob: -9.751879692077637
    6. 'me' → logprob: -9.751879692077637
    7. '   ' → logprob: -10.126879692077637
    8. ' ment' → logprob: -10.751879692077637
    9. 'urement' → logprob: -10.751879692077637
    10. 'mem' → logprob: -10.751879692077637

Token 300: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20067264139652252
    2. '    
' → logprob: -2.7006726264953613
    3. 'a' → logprob: -3.4506726264953613
    4. '
' → logprob: -3.7006726264953613
    5. ' line' → logprob: -4.325672626495361
    6. ' =' → logprob: -4.450672626495361
    7. 'line' → logprob: -5.075672626495361
    8. '   
' → logprob: -5.200672626495361
    9. '  
' → logprob: -5.450672626495361
    10. ' a' → logprob: -5.450672626495361

Token 301: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4460541903972626
    2. 'a' → logprob: -1.571054220199585
    3. ' a' → logprob: -1.946054220199585
    4. ' line' → logprob: -5.446053981781006
    5. ' =' → logprob: -6.446053981781006
    6. 'line' → logprob: -7.446053981781006
    7. '    
' → logprob: -7.696053981781006
    8. 'ligne' → logprob: -7.696053981781006
    9. ' ' → logprob: -8.071054458618164
    10. '
' → logprob: -8.571054458618164

Token 302: ' for' (ID: 395)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3582981824874878
    2. ' a' → logprob: -1.2332981824874878
    3. '   ' → logprob: -4.733298301696777
    4. ' line' → logprob: -8.108298301696777
    5. 'line' → logprob: -9.233298301696777
    6. 'prev' → logprob: -9.483298301696777
    7. ' first' → logprob: -9.608298301696777
    8. 'ligne' → logprob: -9.733298301696777
    9. ' grid' → logprob: -9.983298301696777
    10. ' ligne' → logprob: -10.358298301696777

Token 303: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.25613513588905334
    2. ' _' → logprob: -1.506135106086731
    3. 'i' → logprob: -6.131134986877441
    4. '_' → logprob: -6.256134986877441
    5. ' ' → logprob: -9.631134986877441
    6. '_i' → logprob: -11.381134986877441
    7. ' ' → logprob: -11.631134986877441
    8. ' line' → logprob: -11.756134986877441
    9. '	i' → logprob: -12.006134986877441
    10. '   ' → logprob: -13.756134986877441

Token 304: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04305422678589821
    2. 'in' → logprob: -3.1680543422698975
    3. ' i' → logprob: -10.918054580688477
    4. ' ' → logprob: -11.168054580688477
    5. '   ' → logprob: -11.668054580688477
    6. ',' → logprob: -12.918054580688477
    7. '    ' → logprob: -13.168054580688477
    8. '_' → logprob: -13.293054580688477
    9. '  ' → logprob: -13.793054580688477
    10. 'i' → logprob: -14.043054580688477

Token 305: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5759565830230713
    2. 'range' → logprob: -0.8259565830230713
    3. ' in' → logprob: -12.700956344604492
    4. '	range' → logprob: -12.700956344604492
    5. 'in' → logprob: -12.825956344604492
    6. ' ' → logprob: -12.825956344604492
    7. ')' → logprob: -13.325956344604492
    8. '_' → logprob: -14.200956344604492
    9. '  ' → logprob: -14.325956344604492
    10. '(range' → logprob: -14.575956344604492

Token 306: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.010662222281098366
    2. '(' → logprob: -4.635662078857422
    3. ' (' → logprob: -7.135662078857422
    4. 'h' → logprob: -9.635662078857422
    5. ' h' → logprob: -10.635662078857422
    6. '(
' → logprob: -11.260662078857422
    7. '   ' → logprob: -13.385662078857422
    8. '(int' → logprob: -13.510662078857422
    9. '(i' → logprob: -13.510662078857422
    10. ')' → logprob: -14.135662078857422

Token 307: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011444123461842537
    2. '):
' → logprob: -4.511444091796875
    3. ')' → logprob: -8.386444091796875
    4. '   ' → logprob: -9.261444091796875
    5. ':' → logprob: -10.261444091796875
    6. ' ):' → logprob: -10.636444091796875
    7. '+' → logprob: -12.136444091796875
    8. '):
' → logprob: -12.636444091796875
    9. '():' → logprob: -13.386444091796875
    10. ',' → logprob: -13.636444091796875

Token 308: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29411739110946655
    2. '   ' → logprob: -1.4191174507141113
    3. '    ' → logprob: -5.669117450714111
    4. ' line' → logprob: -5.669117450714111
    5. '    
' → logprob: -6.794117450714111
    6. ' s' → logprob: -7.044117450714111
    7. ' ' → logprob: -7.294117450714111
    8. '	   ' → logprob: -7.419117450714111
    9. '        
' → logprob: -8.169116973876953
    10. ' lines' → logprob: -8.419116973876953

Token 309: ' s' (ID: 265)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9520361423492432
    2. 'line' → logprob: -1.3270361423492432
    3. ' line' → logprob: -1.8270361423492432
    4. ' row' → logprob: -2.452036142349243
    5. 'row' → logprob: -3.577036142349243
    6. 's' (adapté à ' s') → logprob: -3.702036142349243
    7. 'ligne' → logprob: -3.952036142349243
    8. ' s' → logprob: -4.702035903930664
    9. 'l' → logprob: -4.827035903930664
    10. ' ligne' → logprob: -5.202035903930664

Token 310: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005247629713267088
    2. '=' → logprob: -5.255247592926025
    3. '=input' → logprob: -11.630248069763184
    4. ' ' → logprob: -13.255248069763184
    5. '   ' → logprob: -13.505248069763184
    6. '    ' → logprob: -14.505248069763184
    7. '	' → logprob: -15.130248069763184
    8. '=line' → logprob: -15.380248069763184
    9. 'input' → logprob: -16.005247116088867
    10. ' ' → logprob: -16.130247116088867

Token 311: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3484762907028198
    2. ' input' → logprob: -1.2234762907028198
    3. 'list' → logprob: -10.84847640991211
    4. ' list' → logprob: -11.72347640991211
    5. ' ' → logprob: -13.72347640991211
    6. '   ' → logprob: -14.09847640991211
    7. '=input' → logprob: -14.09847640991211
    8. '<input' → logprob: -14.72347640991211
    9. '	input' → logprob: -14.84847640991211
    10. '(input' → logprob: -14.97347640991211

Token 312: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0022034284193068743
    2. '().' → logprob: -6.127203464508057
    3. ' ()' → logprob: -12.127202987670898
    4. '(' → logprob: -12.377202987670898
    5. '()
' → logprob: -12.502202987670898
    6. ')' → logprob: -14.002202987670898
    7. '())' → logprob: -14.002202987670898
    8. '.strip' → logprob: -14.502202987670898
    9. '()>' → logprob: -14.752202987670898
    10. '()`' → logprob: -15.002202987670898

Token 313: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.604780912399292
    2. '       ' → logprob: -1.104780912399292
    3. '        
' → logprob: -3.104780912399292
    4. '<|end|>' → logprob: -3.979780912399292
    5. ' 
' → logprob: -4.104781150817871
    6. '  
' → logprob: -4.604781150817871
    7. '    
' → logprob: -4.729781150817871
    8. ' ' → logprob: -5.104781150817871
    9. '   ' → logprob: -5.729781150817871
    10. '		
' → logprob: -6.229781150817871

Token 314: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01812618039548397
    2. '        
' → logprob: -5.143126010894775
    3. 'd' → logprob: -5.518126010894775
    4. '    
' → logprob: -5.768126010894775
    5. '       ' → logprob: -6.268126010894775
    6. ' 
' → logprob: -7.018126010894775
    7. '  
' → logprob: -7.643126010894775
    8. '   
' → logprob: -8.143126487731934
    9. '   ' → logprob: -8.393126487731934
    10. '#' → logprob: -8.393126487731934

Token 315: ' Lecture' (ID: 106534)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0798965692520142
    2. 'for' → logprob: -1.3298965692520142
    3. ' s' → logprob: -2.2048964500427246
    4. '       ' → logprob: -2.3298964500427246
    5. '#' → logprob: -2.9548964500427246
    6. 's' → logprob: -3.2048964500427246
    7. ' ' → logprob: -4.454896450042725
    8. '[' → logprob: -4.579896450042725
    9. ' #' → logprob: -4.704896450042725
    10. ')' → logprob: -4.829896450042725

Token 316: ' d' (ID: 272)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 317: ''une' (ID: 13337)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -1.160959243774414
    2. ''une' → logprob: -1.160959243774414
    3. ' la' → logprob: -1.660959243774414
    4. 'a' → logprob: -2.910959243774414
    5. 'e' → logprob: -3.535959243774414
    6. '   ' → logprob: -3.785959243774414
    7. ''un' → logprob: -4.285959243774414
    8. ' une' → logprob: -4.285959243774414
    9. 's' → logprob: -4.410959243774414
    10. ''' → logprob: -5.035959243774414

Token 318: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.07228939980268478
    2. 'chaine' → logprob: -3.32228946685791
    3. ' ligne' → logprob: -3.82228946685791
    4. 'str' → logprob: -5.07228946685791
    5. 's' → logprob: -6.82228946685791
    6. 'gr' → logprob: -6.94728946685791
    7. 'string' → logprob: -7.19728946685791
    8. 'line' → logprob: -7.44728946685791
    9. '   ' → logprob: -7.69728946685791
    10. 'cha' → logprob: -7.94728946685791

Token 319: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5719809532165527
    2. '<|end|>' → logprob: -1.5719809532165527
    3. '
' → logprob: -1.8219809532165527
    4. '        
' → logprob: -2.9469809532165527
    5. '<|end|>' → logprob: -4.946980953216553
    6. ')' → logprob: -6.446980953216553
    7. ',' → logprob: -7.071980953216553
    8. '		
' → logprob: -7.571980953216553
    9. 's' → logprob: -7.946980953216553
    10. '[' → logprob: -8.196981430053711

Token 320: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.3921411335468292
    2. 'gr' → logprob: -1.2671411037445068
    3. ' la' → logprob: -4.267141342163086
    4. ' grille' → logprob: -4.392141342163086
    5. 'grid' → logprob: -5.642141342163086
    6. 's' → logprob: -5.767141342163086
    7. 'code' → logprob: -5.892141342163086
    8. 'chaine' → logprob: -6.017141342163086
    9. 'car' → logprob: -6.142141342163086
    10. 'l' → logprob: -7.517141342163086

Token 321: ' grille' (ID: 99153)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.0034655947238206863
    2. ' grille' → logprob: -6.25346565246582
    3. 'grid' → logprob: -6.50346565246582
    4. 'chaine' → logprob: -11.50346565246582
    5. '   ' → logprob: -12.37846565246582
    6. 'code' → logprob: -12.50346565246582
    7. '#' → logprob: -12.62846565246582
    8. 'str' → logprob: -13.12846565246582
    9. '
' → logprob: -13.25346565246582
    10. '```' → logprob: -13.25346565246582

Token 322: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015236332081258297
    2. '   ' → logprob: -5.0152363777160645
    3. '<|end|>' → logprob: -6.0152363777160645
    4. '        
' → logprob: -6.3902363777160645
    5. 'd' → logprob: -6.7652363777160645
    6. '
' → logprob: -6.8902363777160645
    7. ' for' → logprob: -6.8902363777160645
    8. 'for' → logprob: -7.7652363777160645
    9. '<|end|>' → logprob: -9.140235900878906
    10. '#' → logprob: -9.265235900878906

Token 323: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2611924707889557
    2. '   ' → logprob: -1.8861924409866333
    3. '    
' → logprob: -4.136192321777344
    4. '        
' → logprob: -4.386192321777344
    5. '    ' → logprob: -4.511192321777344
    6. ' for' → logprob: -4.886192321777344
    7. 'd' → logprob: -5.011192321777344
    8. '	' → logprob: -5.136192321777344
    9. ' d' → logprob: -5.511192321777344
    10. '
' → logprob: -5.636192321777344

Token 324: ' if' (ID: 538)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.3301432430744171
    2. 'new' → logprob: -1.4551432132720947
    3. 'for' → logprob: -3.4551432132720947
    4. 'd' → logprob: -5.330143451690674
    5. ' nd' → logprob: -5.705143451690674
    6. '   ' → logprob: -6.580143451690674
    7. 'dp' → logprob: -6.705143451690674
    8. 'prev' → logprob: -6.955143451690674
    9. 'next' → logprob: -6.955143451690674
    10. ' new' → logprob: -7.205143451690674

Token 325: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.05491839349269867
    2. 'i' → logprob: -2.9299182891845703
    3. ' not' → logprob: -11.05491828918457
    4. ' s' → logprob: -12.05491828918457
    5. '   ' → logprob: -12.30491828918457
    6. ' ' → logprob: -12.42991828918457
    7. 's' → logprob: -13.17991828918457
    8. '	i' → logprob: -13.92991828918457
    9. 'not' → logprob: -14.17991828918457
    10. '  ' → logprob: -14.42991828918457

Token 326: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.08918514847755432
    2. '==' → logprob: -2.4641852378845215
    3. ' >' → logprob: -8.839184761047363
    4. '>' → logprob: -10.339184761047363
    5. '=' → logprob: -10.714184761047363
    6. ' =' → logprob: -11.089184761047363
    7. ' ' → logprob: -11.464184761047363
    8. '0' → logprob: -11.714184761047363
    9. ' ===' → logprob: -12.714184761047363
    10. ' !=' → logprob: -13.464184761047363

Token 327: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019293478690087795
    2. ' ' → logprob: -6.25192928314209
    3. '1' → logprob: -14.75192928314209
    4. '   ' → logprob: -15.75192928314209
    5. 'def' → logprob: -16.314430236816406
    6. '=' → logprob: -16.939430236816406
    7. 's' → logprob: -17.501930236816406
    8. '```' → logprob: -18.189430236816406
    9. '#' → logprob: -18.564430236816406
    10. '...' → logprob: -18.751930236816406

Token 328: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '1' → logprob: -17.25002098083496
    4. '=' → logprob: -19.12502098083496
    5. 'def' → logprob: -19.62502098083496
    6. '   ' → logprob: -20.12502098083496
    7. 's' → logprob: -20.37502098083496
    8. '#' → logprob: -20.50002098083496
    9. 'h' → logprob: -20.75002098083496
    10. '00' → logprob: -20.93752098083496

Token 329: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.014373631216585636
    2. ':' → logprob: -4.264373779296875
    3. '           ' → logprob: -9.639373779296875
    4. '       ' → logprob: -10.139373779296875
    5. ':
' → logprob: -10.264373779296875
    6. '):
' → logprob: -10.764373779296875
    7. ' :
' → logprob: -11.389373779296875
    8. 's' → logprob: -11.389373779296875
    9. ':

' → logprob: -11.764373779296875
    10. 'd' → logprob: -12.264373779296875

Token 330: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004469047300517559
    2. 'a' → logprob: -6.00446891784668
    3. ' a' → logprob: -6.50446891784668
    4. 'd' → logprob: -9.25446891784668
    5. '#' → logprob: -9.50446891784668
    6. '       ' → logprob: -9.87946891784668
    7. '            
' → logprob: -10.37946891784668
    8. '          ' → logprob: -10.62946891784668
    9. ' #' → logprob: -10.75446891784668
    10. '   ' → logprob: -10.87946891784668

Token 331: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.055740658193826675
    2. 'prev' → logprob: -3.6807405948638916
    3. ' a' → logprob: -3.9307405948638916
    4. '   ' → logprob: -6.430740833282471
    5. 'previous' → logprob: -6.680740833282471
    6. 'c' → logprob: -6.805740833282471
    7. ' prev' → logprob: -7.055740833282471
    8. '           ' → logprob: -7.180740833282471
    9. 'current' → logprob: -7.430740833282471
    10. 'last' → logprob: -7.430740833282471

Token 332: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759710669517517
    2. '=' → logprob: -0.8259710669517517
    3. 's' → logprob: -11.200970649719238
    4. '=s' → logprob: -11.450970649719238
    5. ',' → logprob: -12.200970649719238
    6. 'a' → logprob: -14.325970649719238
    7. ' ' → logprob: -14.825970649719238
    8. ' s' → logprob: -15.450970649719238
    9. '=a' → logprob: -15.575970649719238
    10. '[' → logprob: -15.700970649719238

Token 333: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.006716555915772915
    2. ' s' → logprob: -5.006716728210449
    3. '(s' → logprob: -14.75671672821045
    4. ''s' → logprob: -15.50671672821045
    5. '   ' → logprob: -16.506715774536133
    6. '""' → logprob: -16.506715774536133
    7. ' ' → logprob: -16.631715774536133
    8. '.' → logprob: -16.756715774536133
    9. '	s' → logprob: -16.756715774536133
    10. '"s' → logprob: -16.756715774536133

Token 334: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00021807955636177212
    2. '[:]' → logprob: -9.125218391418457
    3. '       ' → logprob: -11.125218391418457
    4. '0' → logprob: -11.250218391418457
    5. '[i' → logprob: -11.500218391418457
    6. 's' → logprob: -11.500218391418457
    7. '[a' → logprob: -11.625218391418457
    8. '   ' → logprob: -11.875218391418457
    9. '[j' → logprob: -12.125218391418457
    10. '<|end|>' → logprob: -12.375218391418457

Token 335: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.60414821645827e-06
    2. ' ' → logprob: -12.500004768371582
    3. '1' → logprob: -16.062503814697266
    4. '   ' → logprob: -16.187503814697266
    5. '00' → logprob: -16.562503814697266
    6. '۰' → logprob: -16.937503814697266
    7. '[' → logprob: -17.000003814697266
    8. '000' → logprob: -17.062503814697266
    9. 's' → logprob: -17.375003814697266
    10. ']' → logprob: -17.500003814697266

Token 336: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005028736195527017
    2. ' ]' → logprob: -8.375502586364746
    3. ']
' → logprob: -8.375502586364746
    4. '<|end|>' → logprob: -11.625502586364746
    5. '']' → logprob: -11.750502586364746
    6. '       ' → logprob: -12.250502586364746
    7. '   ' → logprob: -12.500502586364746
    8. '"]' → logprob: -12.625502586364746
    9. '#' → logprob: -13.125502586364746
    10. ')]' → logprob: -13.750502586364746

Token 337: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1699579507112503
    2. '<|end|>' → logprob: -1.9199579954147339
    3. '<|end|>' → logprob: -5.919958114624023
    4. ')' → logprob: -6.044958114624023
    5. '
' → logprob: -6.919958114624023
    6. '           ' → logprob: -7.294958114624023
    7. '        
' → logprob: -7.669958114624023
    8. ' for' → logprob: -8.044958114624023
    9. '#' → logprob: -8.169958114624023
    10. 'd' → logprob: -8.169958114624023

Token 338: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7045354247093201
    2. '<|end|>' → logprob: -0.9545354247093201
    3. '
' → logprob: -2.454535484313965
    4. ')' → logprob: -4.954535484313965
    5. '#' → logprob: -5.204535484313965
    6. '        
' → logprob: -5.829535484313965
    7. '<|end|>' → logprob: -5.829535484313965
    8. ' ' → logprob: -6.204535484313965
    9. '        ' → logprob: -6.579535484313965
    10. 'd' → logprob: -6.579535484313965

Token 339: ' Car' (ID: 4004)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.8817890286445618
    2. 'a' → logprob: -1.631788969039917
    3. 'pass' → logprob: -2.256788969039917
    4. 'd' → logprob: -2.506788969039917
    5. 'continue' → logprob: -3.131788969039917
    6. 'previous' → logprob: -3.256788969039917
    7. '#' → logprob: -3.256788969039917
    8. 'for' → logprob: -4.131789207458496
    9. ' prev' → logprob: -4.631789207458496
    10. 'c' → logprob: -4.756789207458496

Token 340: 'act' (ID: 588)
  Prédit: 'act'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'act' → logprob: -0.68006831407547
    2. 'a' → logprob: -1.3050682544708252
    3. 'r' → logprob: -1.8050682544708252
    4. 'actér' → logprob: -3.805068254470825
    5. '   ' → logprob: -4.055068492889404
    6. '_' → logprob: -5.805068492889404
    7. 'acter' → logprob: -5.805068492889404
    8. 's' → logprob: -6.805068492889404
    9. 'd' → logprob: -6.805068492889404
    10. '  ' → logprob: -6.930068492889404

Token 341: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.015934888273477554
    2. 'è' → logprob: -5.015934944152832
    3. '   ' → logprob: -6.140934944152832
    4. 'er' → logprob: -6.140934944152832
    5. 'èr' → logprob: -6.390934944152832
    6. 'ere' → logprob: -7.015934944152832
    7. 'e' → logprob: -7.140934944152832
    8. '`' → logprob: -8.265934944152832
    9. '=' → logprob: -8.390934944152832
    10. 'ére' → logprob: -8.390934944152832

Token 342: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 343: ' départ' (ID: 32693)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.021427327767014503
    2. 's' → logprob: -4.646427154541016
    3. ' la' → logprob: -5.271427154541016
    4. 'prem' → logprob: -6.021427154541016
    5. 'a' → logprob: -6.521427154541016
    6. 'dé' → logprob: -6.771427154541016
    7. 'l' → logprob: -7.146427154541016
    8. 'depart' → logprob: -8.271427154541016
    9. 'case' → logprob: -9.146427154541016
    10. ' départ' → logprob: -9.396427154541016

Token 344: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 345: 'prem' (ID: 76294)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.38980382680892944
    2. 'a' → logprob: -2.014803886413574
    3. ')' → logprob: -2.139803886413574
    4. ' s' → logprob: -3.514803886413574
    5. '0' → logprob: -4.264803886413574
    6. 'ligne' → logprob: -5.514803886413574
    7. ' la' → logprob: -5.639803886413574
    8. '])' → logprob: -5.889803886413574
    9. ']' → logprob: -6.264803886413574
    10. 'la' → logprob: -6.389803886413574

Token 346: 'ière' (ID: 12452)
  Prédit: 'ière'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ière' → logprob: -0.08551154285669327
    2. 'ier' → logprob: -2.7105114459991455
    3. 'i' → logprob: -4.210511684417725
    4. 'ère' → logprob: -8.585511207580566
    5. 'e' → logprob: -8.960511207580566
    6. 's' → logprob: -9.335511207580566
    7. 'a' → logprob: -9.835511207580566
    8. 'è' → logprob: -10.460511207580566
    9. 'iere' → logprob: -10.460511207580566
    10. '   ' → logprob: -11.335511207580566

Token 347: ' case' (ID: 1890)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.3015093505382538
    2. ' case' → logprob: -1.6765093803405762
    3. ')' → logprob: -2.801509380340576
    4. ' cellule' → logprob: -5.176509380340576
    5. 'cell' → logprob: -6.426509380340576
    6. 'car' → logprob: -7.176509380340576
    7. ' colonne' → logprob: -7.551509380340576
    8. ' )' → logprob: -7.676509380340576
    9. '<|end|>' → logprob: -7.926509380340576
    10. 'ligne' → logprob: -7.926509380340576

Token 348: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007769925869069993
    2. '       ' → logprob: -8.250777244567871
    3. '<|end|>' → logprob: -8.500777244567871
    4. ')
' → logprob: -9.125777244567871
    5. ' )' → logprob: -9.375777244567871
    6. '")' → logprob: -11.125777244567871
    7. '])' → logprob: -11.375777244567871
    8. ')#' → logprob: -11.375777244567871
    9. ']' → logprob: -11.500777244567871
    10. '[' → logprob: -11.625777244567871

Token 349: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.35952049493789673
    2. ' la' → logprob: -1.234520435333252
    3. 's' → logprob: -4.734520435333252
    4. 'l' → logprob: -6.859520435333252
    5. ' s' → logprob: -7.109520435333252
    6. 'a' → logprob: -8.35952091217041
    7. 'the' → logprob: -9.98452091217041
    8. ')' → logprob: -11.10952091217041
    9. 'ligne' → logprob: -11.10952091217041
    10. 'gr' → logprob: -11.60952091217041

Token 350: ' grille' (ID: 99153)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.19380106031894684
    2. 'ligne' → logprob: -2.318801164627075
    3. 's' → logprob: -3.068801164627075
    4. 'prem' → logprob: -3.693801164627075
    5. 'grid' → logprob: -6.193800926208496
    6. ' ligne' → logprob: -7.318800926208496
    7. '   ' → logprob: -7.443800926208496
    8. 'chaine' → logprob: -7.568800926208496
    9. ' grille' → logprob: -7.693800926208496
    10. '0' → logprob: -7.943800926208496

Token 351: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007228327449411154
    2. '<|end|>' → logprob: -5.382228374481201
    3. '       ' → logprob: -6.132228374481201
    4. ')
' → logprob: -8.382227897644043
    5. '<|end|>' → logprob: -9.257227897644043
    6. ' )' → logprob: -10.632227897644043
    7. ']' → logprob: -10.882227897644043
    8. '#' → logprob: -11.507227897644043
    9. '")' → logprob: -11.632227897644043
    10. '   ' → logprob: -11.632227897644043

Token 352: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02247483655810356
    2. '<|end|>' → logprob: -4.397474765777588
    3. ' for' → logprob: -5.772474765777588
    4. 'for' → logprob: -6.272474765777588
    5. 'continue' → logprob: -6.772474765777588
    6. '   ' → logprob: -7.022474765777588
    7. '           ' → logprob: -7.397474765777588
    8. ')' → logprob: -7.397474765777588
    9. '<|end|>' → logprob: -7.772474765777588
    10. '
' → logprob: -8.147475242614746

Token 353: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41712719202041626
    2. 'for' (adapté à ' for') → logprob: -1.2921271324157715
    3. ' for' → logprob: -3.0421271324157715
    4. 'd' → logprob: -5.1671271324157715
    5. '   ' → logprob: -5.7921271324157715
    6. 'new' → logprob: -6.1671271324157715
    7. 'prev' → logprob: -6.1671271324157715
    8. 'next' → logprob: -6.5421271324157715
    9. '#' → logprob: -6.6671271324157715
    10. 'n' → logprob: -7.2921271324157715

Token 354: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.22560061514377594
    2. ' j' → logprob: -1.6006006002426147
    3. '_j' → logprob: -9.975600242614746
    4. '	j' → logprob: -10.350600242614746
    5. '   ' → logprob: -10.475600242614746
    6. 'k' → logprob: -11.350600242614746
    7. ' ' → logprob: -11.788100242614746
    8. 'jj' → logprob: -11.850600242614746
    9. 'x' → logprob: -11.975600242614746
    10. '(j' → logprob: -12.100600242614746

Token 355: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.062219757586717606
    2. 'in' → logprob: -2.8122198581695557
    3. ' ' → logprob: -8.937219619750977
    4. '	in' → logprob: -10.687219619750977
    5. '0' → logprob: -11.312219619750977
    6. '   ' → logprob: -11.437219619750977
    7. ' j' → logprob: -11.437219619750977
    8. '<|end|>' → logprob: -11.937219619750977
    9. ')' → logprob: -12.062219619750977
    10. '    ' → logprob: -12.062219619750977

Token 356: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759435296058655
    2. ' range' → logprob: -0.8259435296058655
    3. '(range' → logprob: -13.825943946838379
    4. ' ' → logprob: -14.200943946838379
    5. '	range' → logprob: -14.200943946838379
    6. '   ' → logprob: -14.450943946838379
    7. '0' → logprob: -15.075943946838379
    8. ')' → logprob: -15.450943946838379
    9. '[' → logprob: -15.575943946838379
    10. ' in' → logprob: -15.700943946838379

Token 357: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.0454249270260334
    2. '(' → logprob: -3.1704249382019043
    3. 'w' → logprob: -6.795424938201904
    4. ' (' → logprob: -7.295424938201904
    5. ' w' → logprob: -7.670424938201904
    6. '	w' → logprob: -9.420424461364746
    7. '1' → logprob: -10.045424461364746
    8. '(len' → logprob: -11.420424461364746
    9. ' range' → logprob: -12.420424461364746
    10. ' ' → logprob: -12.670424461364746

Token 358: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1290740668773651
    2. '+' → logprob: -2.6290740966796875
    3. '):
' → logprob: -3.2540740966796875
    4. ')' → logprob: -4.8790740966796875
    5. '   ' → logprob: -6.7540740966796875
    6. ' ):' → logprob: -7.6290740966796875
    7. ' +' → logprob: -7.7540740966796875
    8. '       ' → logprob: -8.129074096679688
    9. '-' → logprob: -8.629074096679688
    10. ':' → logprob: -9.379074096679688

Token 359: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17772233486175537
    2. '<|end|>' → logprob: -2.677722454071045
    3. ' ' → logprob: -3.302722454071045
    4. '        ' → logprob: -4.052722454071045
    5. '    ' → logprob: -4.677722454071045
    6. '   ' → logprob: -4.927722454071045
    7. ':' → logprob: -5.177722454071045
    8. ' if' → logprob: -5.677722454071045
    9. ' :' → logprob: -5.677722454071045
    10. '        
' → logprob: -5.927722454071045

Token 360: ' #' (ID: 1069)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.9491533637046814
    2. 'pass' → logprob: -1.5741534233093262
    3. '#' (adapté à ' #') → logprob: -1.9491534233093262
    4. 'if' → logprob: -2.949153423309326
    5. ' pass' → logprob: -2.949153423309326
    6. ' if' → logprob: -3.074153423309326
    7. ' d' → logprob: -3.699153423309326
    8. '    ' → logprob: -4.074153423309326
    9. '<|end|>' → logprob: -4.574153423309326
    10. ' ' → logprob: -4.824153423309326

Token 361: ' On' (ID: 2160)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -1.192943811416626
    2. 'd' → logprob: -1.817943811416626
    3. 'if' → logprob: -1.817943811416626
    4. '#' → logprob: -1.942943811416626
    5. 'new' → logprob: -2.942943811416626
    6. 'prev' → logprob: -2.942943811416626
    7. 'temp' → logprob: -3.567943811416626
    8. 'for' → logprob: -3.692943811416626
    9. 'next' → logprob: -4.192943572998047
    10. ' pass' → logprob: -4.692943572998047

Token 362: ' est' (ID: 893)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3452284336090088
    2. 'if' → logprob: -2.220228433609009
    3. '   ' → logprob: -3.095228433609009
    4. ' for' → logprob: -3.095228433609009
    5. '    ' → logprob: -3.595228433609009
    6. 'for' → logprob: -3.845228433609009
    7. '       ' → logprob: -4.09522819519043
    8. ' continue' → logprob: -5.09522819519043
    9. ' ' → logprob: -5.34522819519043
    10. '           ' → logprob: -5.97022819519043

Token 363: ' sur' (ID: 1512)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2102361023426056
    2. '    ' → logprob: -2.335236072540283
    3. ' not' → logprob: -4.710236072540283
    4. ' à' → logprob: -4.835236072540283
    5. ' dans' → logprob: -5.085236072540283
    6. '=' → logprob: -5.210236072540283
    7. ' j' → logprob: -5.210236072540283
    8. ' sure' → logprob: -5.710236072540283
    9. ' =' → logprob: -5.960236072540283
    10. ' d' → logprob: -5.960236072540283

Token 364: ' une' (ID: 2463)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7288957238197327
    2. ' j' → logprob: -2.228895664215088
    3. 'j' → logprob: -2.353895664215088
    4. ' une' → logprob: -3.103895664215088
    5. ' s' → logprob: -3.353895664215088
    6. ' un' → logprob: -3.603895664215088
    7. '    ' → logprob: -3.978895664215088
    8. ' (' → logprob: -4.103895664215088
    9. '   ' → logprob: -4.103895664215088
    10. 's' → logprob: -4.228895664215088

Token 365: ' case' (ID: 1890)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.8775489926338196
    2. ' new' → logprob: -2.127548933029175
    3. 'new' → logprob: -3.002548933029175
    4. ' for' → logprob: -3.127548933029175
    5. 'case' → logprob: -3.127548933029175
    6. ' ligne' → logprob: -3.252548933029175
    7. ' if' → logprob: -3.252548933029175
    8. ' case' → logprob: -3.627548933029175
    9. ' nouvelle' → logprob: -3.752548933029175
    10. '   ' → logprob: -3.877548933029175

Token 366: ' dont' (ID: 11562)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.108778476715088
    2. '<|end|>' → logprob: -1.483778476715088
    3. ' :' → logprob: -1.983778476715088
    4. ':' → logprob: -2.358778476715088
    5. ' :
' → logprob: -3.108778476715088
    6. '       ' → logprob: -3.483778476715088
    7. ',' → logprob: -3.733778476715088
    8. '   ' → logprob: -4.233778476715088
    9. ':
' → logprob: -4.608778476715088
    10. '    ' → logprob: -4.608778476715088

Token 367: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.27795329689979553
    2. 'la' → logprob: -2.1529533863067627
    3. 'car' → logprob: -3.0279533863067627
    4. 'c' → logprob: -3.9029533863067627
    5. 's' → logprob: -4.152953147888184
    6. ' le' → logprob: -4.527953147888184
    7. 'char' → logprob: -5.277953147888184
    8. 'l' → logprob: -5.402953147888184
    9. 'j' → logprob: -5.402953147888184
    10. '   ' → logprob: -6.027953147888184

Token 368: ' contenu' (ID: 57581)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.11306209117174149
    2. ' caractère' → logprob: -3.2380621433258057
    3. 'char' → logprob: -3.6130621433258057
    4. 'type' → logprob: -4.238061904907227
    5. ' caract' → logprob: -4.613061904907227
    6. 's' → logprob: -6.113061904907227
    7. ' type' → logprob: -6.238061904907227
    8. 'j' → logprob: -6.613061904907227
    9. 'code' → logprob: -6.738061904907227
    10. '   ' → logprob: -6.738061904907227

Token 369: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.16312037408351898
    2. 'est' → logprob: -2.6631202697753906
    3. '=' → logprob: -3.7881202697753906
    4. ' =' → logprob: -3.7881202697753906
    5. ' is' → logprob: -4.663120269775391
    6. 's' → logprob: -4.663120269775391
    7. ' s' → logprob: -5.038120269775391
    8. ' vaut' → logprob: -5.913120269775391
    9. 'current' → logprob: -6.913120269775391
    10. '   ' → logprob: -7.288120269775391

Token 370: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.49071288108825684
    2. ' s' → logprob: -0.9907128810882568
    3. ' différent' → logprob: -4.740713119506836
    4. ' either' → logprob: -6.240713119506836
    5. ' soit' → logprob: -6.240713119506836
    6. 'different' → logprob: -7.240713119506836
    7. ' different' → logprob: -7.490713119506836
    8. '=' → logprob: -8.115713119506836
    9. '   ' → logprob: -8.240713119506836
    10. ' =' → logprob: -8.365713119506836

Token 371: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -8.41866585687967e-06
    2. '   ' → logprob: -12.500008583068848
    3. '[' → logprob: -13.000008583068848
    4. '[i' → logprob: -14.000008583068848
    5. ' [' → logprob: -14.250008583068848
    6. '       ' → logprob: -15.375008583068848
    7. '           ' → logprob: -15.500008583068848
    8. '[s' → logprob: -15.500008583068848
    9. 'j' → logprob: -16.75000762939453
    10. '```' → logprob: -17.37500762939453

Token 372: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.25487953424453735
    2. ']' → logprob: -1.5048794746398926
    3. ']
' → logprob: -7.129879474639893
    4. '           ' → logprob: -7.254879474639893
    5. ']:
' → logprob: -7.504879474639893
    6. ']

' → logprob: -8.12987995147705
    7. '       ' → logprob: -8.50487995147705
    8. '],' → logprob: -9.12987995147705
    9. '];' → logprob: -9.62987995147705
    10. '])
' → logprob: -10.50487995147705

Token 373: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 374: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.616950273513794
    2. '<|end|>' → logprob: -1.616950273513794
    3. ' pass' → logprob: -1.991950273513794
    4. '       ' → logprob: -2.241950273513794
    5. ' for' → logprob: -2.616950273513794
    6. 'pass' → logprob: -2.741950273513794
    7. '    ' → logprob: -3.116950273513794
    8. '        ' → logprob: -3.366950273513794
    9. '#' (adapté à ' #') → logprob: -3.491950273513794
    10. 'if' → logprob: -3.616950273513794

Token 375: ' t' (ID: 260)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.7134190797805786
    2. 'new' → logprob: -1.7134190797805786
    3. 'pass' → logprob: -1.8384190797805786
    4. 'prev' → logprob: -2.338418960571289
    5. 'd' → logprob: -2.463418960571289
    6. ' if' → logprob: -2.588418960571289
    7. ' pass' → logprob: -3.213418960571289
    8. '#' → logprob: -3.463418960571289
    9. 'for' → logprob: -3.588418960571289
    10. ' for' → logprob: -4.338418960571289

Token 376: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6986342668533325
    2. 'ab' → logprob: -2.823634147644043
    3. 'mp' → logprob: -2.823634147644043
    4. 'emp' → logprob: -2.823634147644043
    5. '       ' → logprob: -3.198634147644043
    6. '=' → logprob: -3.448634147644043
    7. 'r' → logprob: -3.448634147644043
    8. '_' → logprob: -3.698634147644043
    9. ' if' → logprob: -3.698634147644043
    10. 'if' → logprob: -3.823634147644043

Token 377: ' True' (ID: 6432)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.9591851234436035
    2. ' s' → logprob: -1.5841851234436035
    3. '[]' → logprob: -2.5841851234436035
    4. '[' → logprob: -2.9591851234436035
    5. 's' → logprob: -3.2091851234436035
    6. ' ' → logprob: -3.2091851234436035
    7. ' d' → logprob: -3.3341851234436035
    8. '0' → logprob: -3.5841851234436035
    9. 'd' → logprob: -3.8341851234436035
    10. ' j' → logprob: -4.2091851234436035

Token 378: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35793933272361755
    2. '=' → logprob: -1.23293936252594
    3. ' if' → logprob: -4.85793924331665
    4. ',' → logprob: -7.10793924331665
    5. '           ' → logprob: -8.357939720153809
    6. '<|end|>' → logprob: -8.982939720153809
    7. '            ' → logprob: -9.482939720153809
    8. ' ' → logprob: -9.607939720153809
    9. 'if' → logprob: -9.732939720153809
    10. ' (' → logprob: -9.982939720153809

Token 379: '1' (ID: 16)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.35316386818885803
    2. 's' → logprob: -1.7281638383865356
    3. ')' → logprob: -2.853163957595825
    4. '(s' → logprob: -3.853163957595825
    5. ' (' → logprob: -4.353163719177246
    6. ' not' → logprob: -4.478163719177246
    7. '   ' → logprob: -5.853163719177246
    8. ' )' → logprob: -6.353163719177246
    9. ' j' → logprob: -6.478163719177246
    10. ' ' → logprob: -6.603163719177246

Token 380: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3376506268978119
    2. ' if' → logprob: -1.3376506567001343
    3. 'if' → logprob: -3.9626505374908447
    4. ' si' → logprob: -5.712650775909424
    5. ' ou' → logprob: -7.587650775909424
    6. ' or' → logprob: -7.587650775909424
    7. 'si' → logprob: -8.087650299072266
    8. '           ' → logprob: -9.212650299072266
    9. ' )' → logprob: -9.337650299072266
    10. '   ' → logprob: -9.962650299072266

Token 381: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.035631705075502396
    2. ' si' → logprob: -4.1606316566467285
    3. 'if' → logprob: -4.1606316566467285
    4. '           ' → logprob: -6.2856316566467285
    5. 'si' → logprob: -7.5356316566467285
    6. ' =' → logprob: -7.9106316566467285
    7. '=' → logprob: -8.285632133483887
    8. ' s' → logprob: -8.785632133483887
    9. ' or' → logprob: -8.910632133483887
    10. ')' → logprob: -9.160632133483887

Token 382: ' le' (ID: 505)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.1987892389297485
    2. ' j' → logprob: -1.4487892389297485
    3. ' s' → logprob: -1.6987892389297485
    4. 'j' → logprob: -2.323789119720459
    5. '(s' → logprob: -2.573789119720459
    6. 's' → logprob: -2.698789119720459
    7. '(j' → logprob: -3.573789119720459
    8. ' d' → logprob: -5.698789119720459
    9. 'd' → logprob: -6.323789119720459
    10. '(' → logprob: -6.823789119720459

Token 383: ' caractère' (ID: 80509)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.3748142719268799
    2. 's' → logprob: -1.3748142719268799
    3. ' s' → logprob: -1.4998142719268799
    4. ' j' → logprob: -1.8748142719268799
    5. 'd' → logprob: -3.62481427192688
    6. 'current' → logprob: -3.99981427192688
    7. ' current' → logprob: -4.249814033508301
    8. ' previous' → logprob: -4.374814033508301
    9. 'previous' → logprob: -4.499814033508301
    10. ' d' → logprob: -5.249814033508301

Token 384: ' courant' (ID: 74694)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6421388387680054
    2. ' s' → logprob: -1.2671388387680054
    3. ' précédent' → logprob: -2.392138957977295
    4. 'diff' → logprob: -2.892138957977295
    5. ' différent' → logprob: -4.517138957977295
    6. '[j' → logprob: -5.392138957977295
    7. ' !=' → logprob: -5.892138957977295
    8. '(s' → logprob: -5.892138957977295
    9. ' actuel' → logprob: -5.892138957977295
    10. '           ' → logprob: -6.017138957977295

Token 385: ' est' (ID: 893)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.867617130279541
    2. '!=' → logprob: -1.367617130279541
    3. ' s' → logprob: -1.492617130279541
    4. 'diff' → logprob: -2.867617130279541
    5. 's' → logprob: -4.242617130279541
    6. '==' → logprob: -5.367617130279541
    7. 't' → logprob: -5.492617130279541
    8. ' ==' → logprob: -5.617617130279541
    9. '[j' → logprob: -5.617617130279541
    10. ' est' → logprob: -6.117617130279541

Token 386: ' égal' (ID: 15059)
  Prédit: ' différent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' différent' → logprob: -0.3306868076324463
    2. 'different' → logprob: -1.9556868076324463
    3. 'diff' → logprob: -2.0806868076324463
    4. ' different' → logprob: -4.205686569213867
    5. 'd' → logprob: -9.705686569213867
    6. 's' → logprob: -9.830686569213867
    7. ' différente' → logprob: -9.955686569213867
    8. ' diferente' → logprob: -10.080686569213867
    9. ' diff' → logprob: -10.705686569213867
    10. ' différents' → logprob: -10.830686569213867

Token 387: ' au' (ID: 2791)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7811261415481567
    2. ' a' → logprob: -1.2811261415481567
    3. ' s' → logprob: -2.281126022338867
    4. 's' → logprob: -2.656126022338867
    5. ' à' → logprob: -2.781126022338867
    6. 'à' → logprob: -4.656126022338867
    7. '           ' → logprob: -4.781126022338867
    8. ' ' → logprob: -5.406126022338867
    9. ' au' → logprob: -6.406126022338867
    10. '   ' → logprob: -6.406126022338867

Token 388: ' caractère' (ID: 80509)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.030036721378564835
    2. 's' → logprob: -4.155036926269531
    3. ' a' → logprob: -4.780036926269531
    4. 'previous' → logprob: -6.530036926269531
    5. ' s' → logprob: -6.780036926269531
    6. ' précédent' → logprob: -7.030036926269531
    7. 'preced' → logprob: -7.405036926269531
    8. 'prev' → logprob: -7.530036926269531
    9. 'pr' → logprob: -7.780036926269531
    10. ' previous' → logprob: -9.155036926269531

Token 389: ' de' (ID: 334)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -1.060228943824768
    2. ' précédent' → logprob: -1.185228943824768
    3. 's' → logprob: -1.810228943824768
    4. 'preced' → logprob: -2.0602288246154785
    5. ' s' → logprob: -4.1852288246154785
    6. 'a' → logprob: -4.4352288246154785
    7. '           ' → logprob: -4.6852288246154785
    8. '   ' → logprob: -5.3102288246154785
    9. ' a' → logprob: -6.0602288246154785
    10. '       ' → logprob: -6.0602288246154785

Token 390: ' départ' (ID: 32693)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3045128285884857
    2. 'la' → logprob: -2.3045127391815186
    3. 'pr' → logprob: -2.3045127391815186
    4. 's' → logprob: -4.054512977600098
    5. ' la' → logprob: -4.179512977600098
    6. 'preced' → logprob: -4.554512977600098
    7. 'l' → logprob: -5.054512977600098
    8. ' a' → logprob: -5.429512977600098
    9. 'd' → logprob: -5.804512977600098
    10. 'previous' → logprob: -6.679512977600098

Token 391: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0726182460784912
    2. '           ' → logprob: -1.3226182460784912
    3. '=' → logprob: -2.072618246078491
    4. ',' → logprob: -2.072618246078491
    5. ' and' → logprob: -3.197618246078491
    6. 't' → logprob: -3.572618246078491
    7. ' t' → logprob: -3.572618246078491
    8. ' or' → logprob: -4.82261848449707
    9. ' if' → logprob: -5.19761848449707
    10. '<|end|>' → logprob: -5.57261848449707

Token 392: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.17550471425056458
    2. ' a' → logprob: -2.550504684448242
    3. 'int' → logprob: -3.675504684448242
    4. '1' → logprob: -3.675504684448242
    5. ')' → logprob: -4.925504684448242
    6. ' s' → logprob: -5.050504684448242
    7. 's' → logprob: -5.050504684448242
    8. ' int' → logprob: -5.050504684448242
    9. ' (' → logprob: -6.925504684448242
    10. ' ' → logprob: -7.175504684448242

Token 393: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1099340096116066
    2. ',' → logprob: -3.609934091567993
    3. '),' → logprob: -3.609934091567993
    4. '           ' → logprob: -3.984934091567993
    5. ')
' → logprob: -4.859933853149414
    6. ' if' → logprob: -5.109933853149414
    7. 't' → logprob: -5.984933853149414
    8. 'if' → logprob: -6.359933853149414
    9. ')t' → logprob: -6.484933853149414
    10. '
' → logprob: -6.609933853149414

Token 394: ' sinon' (ID: 52915)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6238840818405151
    2. ' t' → logprob: -0.9988840818405151
    3. '           ' → logprob: -3.2488842010498047
    4. '<|end|>' → logprob: -3.2488842010498047
    5. ',' → logprob: -4.748884201049805
    6. ' else' → logprob: -6.123884201049805
    7. '            
' → logprob: -6.748884201049805
    8. '       ' → logprob: -7.123884201049805
    9. 'else' → logprob: -7.373884201049805
    10. '            ' → logprob: -7.373884201049805

Token 395: ' False' (ID: 7983)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0678437128663063
    2. 'False' → logprob: -3.6928436756134033
    3. ' False' → logprob: -3.8178436756134033
    4. ' ' → logprob: -4.067843914031982
    5. 'int' → logprob: -7.567843914031982
    6. ' int' → logprob: -7.692843914031982
    7. '1' → logprob: -8.317843437194824
    8. ' not' → logprob: -9.942843437194824
    9. '   ' → logprob: -10.067843437194824
    10. '(' → logprob: -10.067843437194824

Token 396: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19646979868412018
    2. '=' → logprob: -1.821469783782959
    3. '           ' → logprob: -4.446469783782959
    4. 't' → logprob: -5.946469783782959
    5. ' t' → logprob: -7.321469783782959
    6. ',' → logprob: -7.571469783782959
    7. ' (' → logprob: -8.196470260620117
    8. '       ' → logprob: -9.071470260620117
    9. '=True' → logprob: -9.571470260620117
    10. '=t' → logprob: -9.571470260620117

Token 397: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006856035441160202
    2. ')' → logprob: -5.1318559646606445
    3. '(' → logprob: -8.131855964660645
    4. ' (' → logprob: -8.756855964660645
    5. ' ' → logprob: -8.881855964660645
    6. '           ' → logprob: -9.381855964660645
    7. '1' → logprob: -9.756855964660645
    8. '=' → logprob: -10.381855964660645
    9. 'int' → logprob: -10.506855964660645
    10. ')
' → logprob: -10.631855964660645

Token 398: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5219992399215698
    2. '           ' → logprob: -1.3969992399215698
    3. ')
' → logprob: -2.0219993591308594
    4. '       ' → logprob: -4.521999359130859
    5. ')t' → logprob: -5.146999359130859
    6. 't' → logprob: -5.896999359130859
    7. ' =' → logprob: -6.271999359130859
    8. '
' → logprob: -6.646999359130859
    9. '=' → logprob: -6.771999359130859
    10. ',' → logprob: -7.146999359130859

Token 399: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8631719350814819
    2. 't' → logprob: -1.488171935081482
    3. ' t' → logprob: -1.738171935081482
    4. '       ' → logprob: -2.9881720542907715
    5. ' =' → logprob: -3.2381720542907715
    6. ',' → logprob: -3.6131720542907715
    7. '		' → logprob: -4.3631720542907715
    8. '   ' → logprob: -4.4881720542907715
    9. '	t' → logprob: -5.1131720542907715
    10. '\t' → logprob: -5.4881720542907715

Token 400: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.19509507715702057
    2. ' t' → logprob: -1.9450950622558594
    3. '           ' → logprob: -3.6950950622558594
    4. '	t' → logprob: -4.945095062255859
    5. '		' → logprob: -7.320095062255859
    6. '	' → logprob: -7.695095062255859
    7. '       ' → logprob: -8.07009506225586
    8. '\t' → logprob: -8.19509506225586
    9. '`t' → logprob: -8.94509506225586
    10. '   ' → logprob: -9.19509506225586

Token 401: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519815266132355
    2. ' =' → logprob: -1.501981496810913
    3. '=int' → logprob: -9.876981735229492
    4. '＝' → logprob: -14.751981735229492
    5. '=j' → logprob: -15.126981735229492
    6. ',' → logprob: -16.501981735229492
    7. '	' → logprob: -16.626981735229492
    8. 'int' → logprob: -17.001981735229492
    9. '=}' → logprob: -17.001981735229492
    10. '=
' → logprob: -17.001981735229492

Token 402: ' s' (ID: 265)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2435163259506226
    2. ' int' → logprob: -1.4935163259506226
    3. 'int' → logprob: -1.4935163259506226
    4. 's' → logprob: -2.118516445159912
    5. ' s' → logprob: -2.493516445159912
    6. '(s' → logprob: -3.243516445159912
    7. ' ' → logprob: -4.493516445159912
    8. ' (' → logprob: -4.993516445159912
    9. '(' → logprob: -6.618516445159912
    10. '(int' → logprob: -6.743516445159912

Token 403: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.6405310816480778e-05
    2. '[' → logprob: -11.375016212463379
    3. ' [' → logprob: -12.750016212463379
    4. '           ' → logprob: -14.000016212463379
    5. '[i' → logprob: -14.375016212463379
    6. '   ' → logprob: -16.250017166137695
    7. ' ==' → logprob: -16.375017166137695
    8. '==' → logprob: -16.375017166137695
    9. '[J' → logprob: -16.375017166137695
    10. 'j' → logprob: -16.750017166137695

Token 404: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.12181079387664795
    2. ' ==' → logprob: -2.7468109130859375
    3. ')' → logprob: -3.8718109130859375
    4. ']' → logprob: -4.1218109130859375
    5. ']==' → logprob: -4.4968109130859375
    6. ')==' → logprob: -6.1218109130859375
    7. '=' → logprob: -9.746810913085938
    8. '==
' → logprob: -10.121810913085938
    9. ' )' → logprob: -10.246810913085938
    10. '[' → logprob: -11.996810913085938

Token 405: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.12696558237075806
    2. ' ==' → logprob: -2.1269655227661133
    3. '=' → logprob: -10.876965522766113
    4. '==
' → logprob: -11.376965522766113
    5. '!=' → logprob: -13.126965522766113
    6. '=='' → logprob: -13.751965522766113
    7. '=="' → logprob: -14.376965522766113
    8. ')' → logprob: -14.376965522766113
    9. ')==' → logprob: -14.376965522766113
    10. '[' → logprob: -15.126965522766113

Token 406: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00317783304490149
    2. ' a' → logprob: -5.753177642822266
    3. ''a' → logprob: -15.628177642822266
    4. ' ' → logprob: -18.003177642822266
    5. '	a' → logprob: -18.128177642822266
    6. '_a' → logprob: -18.628177642822266
    7. '#a' → logprob: -19.378177642822266
    8. '"a' → logprob: -19.503177642822266
    9. '(a' → logprob: -19.878177642822266
    10. '   ' → logprob: -20.128177642822266

Token 407: '
            
' (ID: 45334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 408: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 409: ' #' (ID: 1069)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8753997683525085
    2. 'if' → logprob: -1.7503998279571533
    3. 'new' → logprob: -2.1253998279571533
    4. 'for' → logprob: -2.3753998279571533
    5. ' for' → logprob: -3.0003998279571533
    6. ' if' → logprob: -3.1253998279571533
    7. '#' (adapté à ' #') → logprob: -3.5003998279571533
    8. 'next' → logprob: -4.625399589538574
    9. 'min' → logprob: -4.750399589538574
    10. ' new' → logprob: -4.875399589538574

Token 410: ' On' (ID: 2160)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.1725832223892212
    2. 'new' → logprob: -1.2975832223892212
    3. 'if' → logprob: -1.7975832223892212
    4. 'for' → logprob: -2.6725831031799316
    5. '#' → logprob: -3.1725831031799316
    6. 'next' → logprob: -3.6725831031799316
    7. 'nd' → logprob: -3.6725831031799316
    8. 'temp' → logprob: -3.7975831031799316
    9. 'min' → logprob: -3.9225831031799316
    10. 'pass' → logprob: -5.172583103179932

Token 411: ' augmente' (ID: 150199)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.976737916469574
    2. ' for' → logprob: -1.6017379760742188
    3. 'for' → logprob: -1.8517379760742188
    4. '=' → logprob: -2.3517379760742188
    5. '[' → logprob: -2.3517379760742188
    6. ' new' → logprob: -3.4767379760742188
    7. '   ' → logprob: -4.976737976074219
    8. 'new' → logprob: -5.101737976074219
    9. ' ' → logprob: -5.976737976074219
    10. 'd' → logprob: -5.976737976074219

Token 412: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.422283411026001
    2. 'd' → logprob: -1.172283411026001
    3. '           ' → logprob: -4.422283172607422
    4. ' =' → logprob: -5.047283172607422
    5. '=' → logprob: -5.672283172607422
    6. ' if' → logprob: -5.797283172607422
    7. '1' → logprob: -6.172283172607422
    8. '   ' → logprob: -6.672283172607422
    9. ' ' → logprob: -7.172283172607422
    10. 't' → logprob: -7.547283172607422

Token 413: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0037170578725636005
    2. '[' → logprob: -6.503716945648193
    3. '[t' → logprob: -7.753716945648193
    4. '   ' → logprob: -8.128717422485352
    5. '[min' → logprob: -8.128717422485352
    6. 'min' → logprob: -8.378717422485352
    7. 'd' → logprob: -8.628717422485352
    8. ' [' → logprob: -8.753717422485352
    9. '[d' → logprob: -9.253717422485352
    10. 't' → logprob: -9.253717422485352

Token 414: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.13463367521762848
    2. '[j' → logprob: -2.634633779525757
    3. '+' → logprob: -3.384633779525757
    4. ']+' → logprob: -4.384633541107178
    5. ' +' → logprob: -5.884633541107178
    6. '],' → logprob: -6.759633541107178
    7. '   ' → logprob: -6.884633541107178
    8. '-' → logprob: -7.134633541107178
    9. '           ' → logprob: -8.009634017944336
    10. 'if' → logprob: -8.009634017944336

Token 415: ' si' (ID: 1784)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8200579881668091
    2. '+=' → logprob: -1.570057988166809
    3. '+' → logprob: -2.1950578689575195
    4. ' =' → logprob: -2.5700578689575195
    5. ' +=' → logprob: -2.9450578689575195
    6. 'if' → logprob: -3.0700578689575195
    7. ' +' → logprob: -3.6950578689575195
    8. ' if' → logprob: -3.8200578689575195
    9. '           ' → logprob: -4.3200578689575195
    10. '[j' → logprob: -6.9450578689575195

Token 416: ' le' (ID: 505)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.964499831199646
    2. ' not' → logprob: -1.464499831199646
    3. 't' → logprob: -1.964499831199646
    4. 'not' → logprob: -2.2144999504089355
    5. ' d' → logprob: -2.5894999504089355
    6. ' t' → logprob: -3.8394999504089355
    7. '(not' → logprob: -4.0894999504089355
    8. '(t' → logprob: -4.7144999504089355
    9. ' (' → logprob: -5.0894999504089355
    10. '(d' → logprob: -5.3394999504089355

Token 417: ' nombre' (ID: 9733)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6933735609054565
    2. ' d' → logprob: -1.3183735609054565
    3. 't' → logprob: -2.443373680114746
    4. ' not' → logprob: -3.068373680114746
    5. ' t' → logprob: -3.318373680114746
    6. ' (' → logprob: -3.818373680114746
    7. ' s' → logprob: -5.068373680114746
    8. 's' → logprob: -5.068373680114746
    9. '(t' → logprob: -5.068373680114746
    10. 'not' → logprob: -5.068373680114746

Token 418: ' actuel' (ID: 113646)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8328543901443481
    2. 'de' → logprob: -2.3328542709350586
    3. ' de' → logprob: -2.4578542709350586
    4. '+' → logprob: -2.8328542709350586
    5. ' d' → logprob: -2.9578542709350586
    6. '>' → logprob: -3.0828542709350586
    7. 't' → logprob: -3.2078542709350586
    8. '==' → logprob: -3.4578542709350586
    9. '=' → logprob: -3.9578542709350586
    10. '[j' → logprob: -4.082854270935059

Token 419: ' d' (ID: 272)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8925038576126099
    2. 'd' → logprob: -1.2675038576126099
    3. '[j' → logprob: -2.3925037384033203
    4. ' +' → logprob: -2.5175037384033203
    5. '>' → logprob: -3.3925037384033203
    6. ' d' → logprob: -3.3925037384033203
    7. 't' → logprob: -4.01750373840332
    8. 's' → logprob: -5.14250373840332
    9. ' >' → logprob: -5.14250373840332
    10. '   ' → logprob: -5.51750373840332

Token 420: '[j' (ID: 7895)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.3709157407283783
    2. ' d' → logprob: -1.3709157705307007
    3. 'd' → logprob: -3.620915651321411
    4. 'de' → logprob: -4.49591588973999
    5. '_' → logprob: -5.87091588973999
    6. ' changements' → logprob: -5.87091588973999
    7. 't' → logprob: -6.37091588973999
    8. 's' → logprob: -6.49591588973999
    9. '_changes' → logprob: -7.12091588973999
    10. '[' → logprob: -7.12091588973999

Token 421: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07762781530618668
    2. ']+' → logprob: -3.5776278972625732
    3. '+' → logprob: -4.202627658843994
    4. ']>' → logprob: -4.452627658843994
    5. ' ]' → logprob: -5.077627658843994
    6. ' +' → logprob: -5.452627658843994
    7. ' >' → logprob: -5.952627658843994
    8. '>' → logprob: -6.202627658843994
    9. ']==' → logprob: -6.827627658843994
    10. '[j' → logprob: -6.952627658843994

Token 422: ' est' (ID: 893)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.1191833019256592
    2. ' +' → logprob: -1.2441833019256592
    3. ' >' → logprob: -1.4941833019256592
    4. '>' → logprob: -2.119183301925659
    5. '[j' → logprob: -4.119183540344238
    6. ']' → logprob: -5.619183540344238
    7. ' ==' → logprob: -5.994183540344238
    8. '==' → logprob: -6.119183540344238
    9. ' >=' → logprob: -6.244183540344238
    10. ' is' → logprob: -6.244183540344238

Token 423: ' pair' (ID: 10610)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -1.1239862442016602
    2. 'd' → logprob: -1.2489862442016602
    3. '+' → logprob: -2.37398624420166
    4. '   ' → logprob: -2.62398624420166
    5. ' d' → logprob: -3.24898624420166
    6. ' >' → logprob: -3.37398624420166
    7. '>=' → logprob: -3.49898624420166
    8. '0' → logprob: -3.74898624420166
    9. '300' → logprob: -3.74898624420166
    10. 'greater' → logprob: -4.74898624420166

Token 424: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.055243875831365585
    2. 'and' → logprob: -3.055243968963623
    3. ' or' → logprob: -5.305243968963623
    4. '           ' → logprob: -7.680243968963623
    5. ' ' → logprob: -8.430243492126465
    6. ',' → logprob: -8.430243492126465
    7. ' else' → logprob: -9.180243492126465
    8. '            ' → logprob: -9.680243492126465
    9. '   ' → logprob: -9.930243492126465
    10. 'or' → logprob: -9.930243492126465

Token 425: ' selon' (ID: 27571)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -1.0769168138504028
    2. ' else' → logprob: -1.4519168138504028
    3. ' and' → logprob: -2.2019166946411133
    4. 'and' → logprob: -2.3269166946411133
    5. 'else' → logprob: -3.2019166946411133
    6. 'or' → logprob: -3.4519166946411133
    7. ' ' → logprob: -3.9519166946411133
    8. '            ' → logprob: -4.076916694641113
    9. '           ' → logprob: -4.326916694641113
    10. ' d' → logprob: -4.451916694641113

Token 426: ' la' (ID: 557)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -1.2160651683807373
    2. ' la' → logprob: -1.9660651683807373
    3. 'not' → logprob: -2.0910651683807373
    4. ' (' → logprob: -2.5910651683807373
    5. ' t' → logprob: -2.5910651683807373
    6. ' not' → logprob: -2.9660651683807373
    7. 'int' → logprob: -3.0910651683807373
    8. '(not' → logprob: -3.2160651683807373
    9. ' int' → logprob: -3.3410651683807373
    10. 'd' → logprob: -4.091065406799316

Token 427: ' par' (ID: 686)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.9047566056251526
    2. 'not' → logprob: -1.6547565460205078
    3. ' not' → logprob: -1.9047565460205078
    4. ' t' → logprob: -3.154756546020508
    5. ' (' → logprob: -3.529756546020508
    6. 'if' → logprob: -3.779756546020508
    7. ' if' → logprob: -4.154756546020508
    8. ' j' → logprob: -4.154756546020508
    9. 'int' → logprob: -4.154756546020508
    10. ' s' → logprob: -4.529756546020508

Token 428: 'ité' (ID: 3761)
  Prédit: 'ité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ité' → logprob: -0.11353331804275513
    2. 'ity' → logprob: -2.4885332584381104
    3. 'it' → logprob: -4.1135334968566895
    4. 'ent' → logprob: -5.9885334968566895
    5. 'ite' → logprob: -6.6135334968566895
    6. 'j' → logprob: -7.1135334968566895
    7. '
' → logprob: -7.4885334968566895
    8. '#' → logprob: -7.7385334968566895
    9. 't' → logprob: -7.7385334968566895
    10. '```' → logprob: -7.7385334968566895

Token 429: ' et' (ID: 859)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.42759498953819275
    2. ' or' → logprob: -2.1775949001312256
    3. 'and' → logprob: -2.9275949001312256
    4. '           ' → logprob: -3.1775949001312256
    5. ')' → logprob: -3.5525949001312256
    6. ',' → logprob: -3.8025949001312256
    7. ' if' → logprob: -4.177595138549805
    8. ':' → logprob: -4.552595138549805
    9. ' d' → logprob: -4.927595138549805
    10. ' =' → logprob: -4.927595138549805

Token 430: ' la' (ID: 557)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5696099400520325
    2. ' la' → logprob: -2.1946098804473877
    3. 'la' → logprob: -2.3196098804473877
    4. 'not' → logprob: -2.5696098804473877
    5. 'l' → logprob: -3.1946098804473877
    6. 'le' → logprob: -3.9446098804473877
    7. 'd' → logprob: -4.194610118865967
    8. ' l' → logprob: -4.194610118865967
    9. ' t' → logprob: -4.319610118865967
    10. ' not' → logprob: -4.444610118865967

Token 431: ' couleur' (ID: 48005)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -1.548806071281433
    2. ' valeur' → logprob: -1.673806071281433
    3. 'val' → logprob: -1.798806071281433
    4. 'not' → logprob: -2.0488061904907227
    5. ' couleur' → logprob: -2.9238061904907227
    6. '#' → logprob: -3.7988061904907227
    7. ' différence' → logprob: -3.7988061904907227
    8. 'diff' → logprob: -3.9238061904907227
    9. 's' → logprob: -4.048806190490723
    10. ' présence' → logprob: -4.048806190490723

Token 432: ' désir' (ID: 92342)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 433: 'ée' (ID: 2894)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.176513671875
    2. '   ' → logprob: -1.926513671875
    3. ' =' → logprob: -2.176513671875
    4. '=' → logprob: -2.551513671875
    5. ' ' → logprob: -2.551513671875
    6. ' d' → logprob: -2.926513671875
    7. 't' → logprob: -3.301513671875
    8. ' t' → logprob: -3.301513671875
    9. ' ==' → logprob: -3.301513671875
    10. '           ' → logprob: -3.926513671875

Token 434: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9991281032562256
    2. ' and' → logprob: -1.1241281032562256
    3. '<|end|>' → logprob: -1.9991281032562256
    4. ' or' → logprob: -3.3741281032562256
    5. '           ' → logprob: -3.8741281032562256
    6. ' ' → logprob: -3.9991281032562256
    7. 'if' → logprob: -4.374128341674805
    8. 'and' → logprob: -4.374128341674805
    9. ':' → logprob: -4.624128341674805
    10. '<|end|>' → logprob: -4.624128341674805

Token 435: '           ' (ID: 352)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2673165798187256
    2. ' if' → logprob: -1.3923165798187256
    3. '<|end|>' → logprob: -1.5173165798187256
    4. '=' → logprob: -2.2673165798187256
    5. ' ' → logprob: -3.3923165798187256
    6. 'if' → logprob: -3.7673165798187256
    7. '   ' → logprob: -4.267316818237305
    8. ' +=' → logprob: -4.767316818237305
    9. '<|end|>' → logprob: -4.767316818237305
    10. '+' → logprob: -4.892316818237305

Token 436: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.106281042098999
    2. '<|end|>' → logprob: -1.106281042098999
    3. ' if' → logprob: -2.356281042098999
    4. 'd' (adapté à ' d') → logprob: -3.106281042098999
    5. '           ' → logprob: -3.231281042098999
    6. '       ' → logprob: -3.356281042098999
    7. ' d' → logprob: -3.481281042098999
    8. '            ' → logprob: -3.856281042098999
    9. '    ' → logprob: -4.356281280517578
    10. ')' → logprob: -4.356281280517578

Token 437: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -2.463036435074173e-05
    2. '[' → logprob: -11.125024795532227
    3. ' =' → logprob: -13.125024795532227
    4. 'j' → logprob: -13.625024795532227
    5. '_new' → logprob: -13.750024795532227
    6. '=' → logprob: -14.125024795532227
    7. ' [' → logprob: -14.125024795532227
    8. 'new' → logprob: -14.125024795532227
    9. '_prev' → logprob: -14.625024795532227
    10. '_j' → logprob: -14.750024795532227

Token 438: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0323922298848629
    2. ']+=' → logprob: -4.0323920249938965
    3. ' ]' → logprob: -5.2823920249938965
    4. ']+' → logprob: -5.5323920249938965
    5. '+' → logprob: -6.0323920249938965
    6. ']=' → logprob: -6.2823920249938965
    7. ']==' → logprob: -8.532392501831055
    8. 'if' → logprob: -9.282392501831055
    9. ' +' → logprob: -9.282392501831055
    10. '],' → logprob: -9.532392501831055

Token 439: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0733863040804863
    2. ' =' → logprob: -3.1983861923217773
    3. '+=' → logprob: -3.6983861923217773
    4. ' +=' → logprob: -5.823386192321777
    5. ',' → logprob: -6.198386192321777
    6. '+' → logprob: -9.573386192321777
    7. '*=' → logprob: -11.073386192321777
    8. ',j' → logprob: -11.573386192321777
    9. 'if' → logprob: -11.823386192321777
    10. '   ' → logprob: -11.823386192321777

Token 440: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.87784743309021
    2. '(t' → logprob: -1.50284743309021
    3. '1' → logprob: -1.62784743309021
    4. '(' → logprob: -2.50284743309021
    5. 'int' → logprob: -3.87784743309021
    6. '0' → logprob: -3.87784743309021
    7. '(not' → logprob: -4.252847671508789
    8. 'not' → logprob: -5.002847671508789
    9. 'd' → logprob: -5.627847671508789
    10. ' (' → logprob: -5.752847671508789

Token 441: ' ^' (ID: 7602)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 442: ' (' (ID: 350)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.16181732714176178
    2. '1' → logprob: -2.4118173122406006
    3. '(j' → logprob: -3.9118173122406006
    4. '(' → logprob: -4.28681755065918
    5. '((' → logprob: -4.28681755065918
    6. 'd' → logprob: -4.91181755065918
    7. ' (' → logprob: -6.16181755065918
    8. '0' → logprob: -6.66181755065918
    9. '(True' → logprob: -7.53681755065918
    10. '(s' → logprob: -8.78681755065918

Token 443: 'd' (ID: 67)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.6216362118721008
    2. 'd' → logprob: -0.8716362118721008
    3. '(j' → logprob: -3.996636152267456
    4. 'j' → logprob: -4.496636390686035
    5. '((' → logprob: -5.246636390686035
    6. '1' → logprob: -5.371636390686035
    7. '(' → logprob: -5.746636390686035
    8. ' (' → logprob: -7.246636390686035
    9. '0' → logprob: -7.246636390686035
    10. ' d' → logprob: -8.496636390686035

Token 444: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0029044896364212036
    2. 'j' → logprob: -5.877904415130615
    3. '[' → logprob: -9.502904891967773
    4. ' j' → logprob: -12.377904891967773
    5. ' [' → logprob: -12.502904891967773
    6. '[
' → logprob: -12.752904891967773
    7. '   ' → logprob: -13.252904891967773
    8. '(j' → logprob: -13.252904891967773
    9. '	j' → logprob: -13.252904891967773
    10. '```' → logprob: -13.252904891967773

Token 445: ']' (ID: 60)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -3.03521392197581e-05
    2. '%' → logprob: -12.000030517578125
    3. 'j' → logprob: -12.000030517578125
    4. '[' → logprob: -12.500030517578125
    5. ']' → logprob: -12.625030517578125
    6. '   ' → logprob: -12.750030517578125
    7. '[-' → logprob: -12.750030517578125
    8. '```' → logprob: -13.250030517578125
    9. ')' → logprob: -14.500030517578125
    10. '       ' → logprob: -15.125030517578125

Token 446: ' %' (ID: 1851)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.039762333035469055
    2. '%' → logprob: -4.164762496948242
    3. ' j' → logprob: -4.664762496948242
    4. '1' → logprob: -5.414762496948242
    5. 'j' → logprob: -5.539762496948242
    6. ' %' → logprob: -6.414762496948242
    7. ' ' → logprob: -6.664762496948242
    8. '&' → logprob: -7.164762496948242
    9. ')' → logprob: -7.664762496948242
    10. ' &' → logprob: -8.289762496948242

Token 447: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.5716304410016164e-05
    2. ' ' → logprob: -10.375035285949707
    3. '   ' → logprob: -13.250035285949707
    4. '300' → logprob: -13.500035285949707
    5. '```' → logprob: -14.875035285949707
    6. '  ' → logprob: -15.750035285949707
    7. '1' → logprob: -15.812535285949707
    8. '[' → logprob: -16.250036239624023
    9. '3' → logprob: -16.687536239624023
    10. ')' → logprob: -17.125036239624023

Token 448: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -14.750000953674316
    3. '```' → logprob: -15.000000953674316
    4. '   ' → logprob: -15.625000953674316
    5. '1' → logprob: -16.812501907348633
    6. '300' → logprob: -17.625001907348633
    7. '3' → logprob: -17.750001907348633
    8. '{' → logprob: -17.875001907348633
    9. '``' → logprob: -18.000001907348633
    10. '[' → logprob: -18.187501907348633

Token 449: ' ==' (ID: 951)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005251899361610413
    2. '==' → logprob: -6.255251884460449
    3. ' ==' → logprob: -6.505251884460449
    4. ')==' → logprob: -6.755251884460449
    5. ' )' → logprob: -8.13025188446045
    6. ')
' → logprob: -8.13025188446045
    7. '0' → logprob: -10.63025188446045
    8. '))' → logprob: -12.63025188446045
    9. ')#' → logprob: -12.63025188446045
    10. ')+' → logprob: -12.88025188446045

Token 450: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0025184655096381903
    2. '1' → logprob: -6.002518653869629
    3. ' ' → logprob: -10.127518653869629
    4. 't' → logprob: -13.252518653869629
    5. '   ' → logprob: -15.252518653869629
    6. ')' → logprob: -15.377518653869629
    7. 'j' → logprob: -15.627518653869629
    8. 'd' → logprob: -16.127517700195312
    9. '=' → logprob: -16.690017700195312
    10. 's' → logprob: -16.752517700195312

Token 451: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004138003569096327
    2. '1' → logprob: -5.504137992858887
    3. ' ' → logprob: -9.754137992858887
    4. 't' → logprob: -14.004137992858887
    5. 'd' → logprob: -16.066638946533203
    6. 's' → logprob: -16.504138946533203
    7. '=' → logprob: -16.629138946533203
    8. 'j' → logprob: -17.004138946533203
    9. ')' → logprob: -17.129138946533203
    10. '۰' → logprob: -17.379138946533203

Token 452: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00023596010578330606
    2. ')
' → logprob: -8.625235557556152
    3. ' )' → logprob: -10.000235557556152
    4. '   ' → logprob: -13.000235557556152
    5. ')#' → logprob: -13.125235557556152
    6. '       ' → logprob: -13.250235557556152
    7. ')+' → logprob: -13.875235557556152
    8. '))' → logprob: -14.000235557556152
    9. '),' → logprob: -15.125235557556152
    10. ')*' → logprob: -15.250235557556152

Token 453: '            
' (ID: 7048)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 454: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 455: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 456: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.22624856233596802
    2. 'j' → logprob: -1.6012485027313232
    3. ' d' → logprob: -8.101248741149902
    4. ' ' → logprob: -8.976248741149902
    5. 'd' → logprob: -9.226248741149902
    6. ' (' → logprob: -9.476248741149902
    7. '   ' → logprob: -9.601248741149902
    8. '  ' → logprob: -10.601248741149902
    9. '(j' → logprob: -10.601248741149902
    10. ' s' → logprob: -10.851248741149902

Token 457: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.11296211928129196
    2. '>' → logprob: -2.237962007522583
    3. '+' → logprob: -10.112961769104004
    4. ' ' → logprob: -10.237961769104004
    5. ' <' → logprob: -10.862961769104004
    6. '   ' → logprob: -11.612961769104004
    7. '1' → logprob: -11.612961769104004
    8. '0' → logprob: -12.487961769104004
    9. '()>' → logprob: -12.987961769104004
    10. ' !=' → logprob: -13.112961769104004

Token 458: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004695937503129244
    2. ' ' → logprob: -5.379695892333984
    3. '=' → logprob: -9.504695892333984
    4. '   ' → logprob: -14.004695892333984
    5. '  ' → logprob: -16.004695892333984
    6. '>' → logprob: -16.504695892333984
    7. '<|end|>' → logprob: -17.004695892333984
    8. '1' → logprob: -17.129695892333984
    9. ' ' → logprob: -17.254695892333984
    10. ' =' → logprob: -17.379695892333984

Token 459: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.522638169466518e-05
    2. ' ' → logprob: -11.250024795532227
    3. '=' → logprob: -11.375024795532227
    4. '   ' → logprob: -14.875024795532227
    5. '1' → logprob: -16.750024795532227
    6. 's' → logprob: -17.375024795532227
    7. '>' → logprob: -17.437524795532227
    8. 'i' → logprob: -17.812524795532227
    9. 'j' → logprob: -17.875024795532227
    10. 'd' → logprob: -18.000024795532227

Token 460: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.24335701763629913
    2. '               ' → logprob: -1.8683570623397827
    3. '           ' → logprob: -3.868356943130493
    4. ':
' → logprob: -3.868356943130493
    5. ':' → logprob: -4.493357181549072
    6. 'and' → logprob: -4.868357181549072
    7. '   ' → logprob: -8.743356704711914
    8. 'd' → logprob: -8.993356704711914
    9. '       ' → logprob: -9.118356704711914
    10. '):
' → logprob: -9.243356704711914

Token 461: '               ' (ID: 506)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.6806769371032715
    2. '               ' → logprob: -1.0556769371032715
    3. ' if' → logprob: -2.3056769371032715
    4. '           ' → logprob: -3.6806769371032715
    5. 'd' → logprob: -4.3056769371032715
    6. '   ' → logprob: -5.6806769371032715
    7. 'if' → logprob: -6.8056769371032715
    8. '       ' → logprob: -7.0556769371032715
    9. '```' → logprob: -7.0556769371032715
    10. ' ' → logprob: -8.80567741394043

Token 462: ' #' (ID: 1069)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.11427294462919235
    2. ' d' → logprob: -2.2392728328704834
    3. 'if' → logprob: -8.114273071289062
    4. 'nd' → logprob: -8.364273071289062
    5. '                   ' → logprob: -8.489273071289062
    6. '               ' → logprob: -8.739273071289062
    7. ' if' → logprob: -8.739273071289062
    8. '#' (adapté à ' #') → logprob: -9.864273071289062
    9. ' nd' → logprob: -9.989273071289062
    10. '   ' → logprob: -10.364273071289062

Token 463: ' Pour' (ID: 13931)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.48176121711730957
    2. 'd' → logprob: -1.1067612171173096
    3. ' if' → logprob: -4.8567609786987305
    4. ' cost' → logprob: -4.8567609786987305
    5. ' nd' → logprob: -5.6067609786987305
    6. 'nd' → logprob: -5.8567609786987305
    7. 'cost' → logprob: -5.8567609786987305
    8. '           ' → logprob: -5.9817609786987305
    9. ' new' → logprob: -6.2317609786987305
    10. ' prev' → logprob: -6.2317609786987305

Token 464: ' bou' (ID: 17573)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.5382318496704102
    2. 'd' → logprob: -0.9132318496704102
    3. ' j' → logprob: -4.91323184967041
    4. '#' → logprob: -6.66323184967041
    5. 'j' → logprob: -6.78823184967041
    6. ' each' → logprob: -7.03823184967041
    7. '   ' → logprob: -7.66323184967041
    8. ' i' → logprob: -7.78823184967041
    9. ' #' → logprob: -7.78823184967041
    10. 'min' → logprob: -7.91323184967041

Token 465: 'ger' (ID: 1281)
  Prédit: 'cler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cler' → logprob: -0.10074260085821152
    2. 'ger' → logprob: -2.3507425785064697
    3. 'g' → logprob: -8.10074234008789
    4. 'cl' → logprob: -9.10074234008789
    5. 'cle' → logprob: -9.85074234008789
    6. 'ffer' → logprob: -10.72574234008789
    7. 'd' → logprob: -11.35074234008789
    8. 'c' → logprob: -11.85074234008789
    9. 'r' → logprob: -12.22574234008789
    10. 'lger' → logprob: -12.35074234008789

Token 466: ' à' (ID: 1221)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.6223148107528687
    2. 'd' → logprob: -0.9973148107528687
    3. '               ' → logprob: -2.497314929962158
    4. '                   ' → logprob: -5.122314929962158
    5. ' à' → logprob: -7.372314929962158
    6. '(d' → logprob: -7.497314929962158
    7. '           ' → logprob: -7.622314929962158
    8. 'à' → logprob: -7.622314929962158
    9. '[d' → logprob: -7.747314929962158
    10. ' de' → logprob: -8.247314453125

Token 467: ' droite' (ID: 61428)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5073357224464417
    2. 'j' → logprob: -1.7573356628417969
    3. 'la' → logprob: -2.507335662841797
    4. 'g' → logprob: -2.882335662841797
    5. ' droite' → logprob: -3.757335662841797
    6. ' la' → logprob: -4.382335662841797
    7. '[j' → logprob: -4.632335662841797
    8. ' j' → logprob: -4.882335662841797
    9. ' d' → logprob: -5.132335662841797
    10. 'dro' → logprob: -5.132335662841797

Token 468: ',' (ID: 11)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.8755638003349304
    2. '                   ' → logprob: -1.0005638599395752
    3. '               ' → logprob: -2.250563859939575
    4. 'd' → logprob: -2.750563859939575
    5. ' if' → logprob: -3.625563859939575
    6. 'if' → logprob: -4.875563621520996
    7. '           ' → logprob: -6.250563621520996
    8. '
' → logprob: -6.375563621520996
    9. ' new' → logprob: -6.625563621520996
    10. '#' → logprob: -6.875563621520996

Token 469: ' on' (ID: 402)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.5030412673950195
    2. 'd' → logprob: -1.0030412673950195
    3. '                   ' → logprob: -3.8780412673950195
    4. '               ' → logprob: -5.1280412673950195
    5. '#' → logprob: -7.6280412673950195
    6. ' #' → logprob: -7.6280412673950195
    7. ' if' → logprob: -8.37804126739502
    8. 'nd' → logprob: -9.37804126739502
    9. '           ' → logprob: -9.50304126739502
    10. '                       ' → logprob: -9.50304126739502

Token 470: ' prend' (ID: 37463)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3499445915222168
    2. '#' → logprob: -2.724944591522217
    3. ' d' → logprob: -2.974944591522217
    4. ' prend' → logprob: -3.099944591522217
    5. 'min' → logprob: -3.474944591522217
    6. 'compare' → logprob: -3.724944591522217
    7. ' compare' → logprob: -3.724944591522217
    8. ' a' → logprob: -4.224944591522217
    9. 'a' → logprob: -4.724944591522217
    10. ' #' → logprob: -5.349944591522217

Token 471: ' le' (ID: 505)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0022513647563755512
    2. ' min' → logprob: -6.127251148223877
    3. '	min' → logprob: -10.877251625061035
    4. 'minimum' → logprob: -11.377251625061035
    5. 'le' → logprob: -11.502251625061035
    6. '=min' → logprob: -11.627251625061035
    7. '
' → logprob: -12.127251625061035
    8. '_min' → logprob: -13.502251625061035
    9. '[min' → logprob: -13.502251625061035
    10. '               ' → logprob: -13.752251625061035

Token 472: ' minimum' (ID: 11085)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.014217214658856392
    2. 'minimum' → logprob: -4.264217376708984
    3. ' minimum' → logprob: -10.514217376708984
    4. ' min' → logprob: -11.139217376708984
    5. 'd' → logprob: -12.139217376708984
    6. 'mini' → logprob: -12.764217376708984
    7. 'max' → logprob: -13.889217376708984
    8. 'minimal' → logprob: -14.264217376708984
    9. 'mi' → logprob: -14.514217376708984
    10. '
' → logprob: -14.764217376708984

Token 473: ' entre' (ID: 3853)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.16213487088680267
    2. 'd' → logprob: -2.537134885787964
    3. '               ' → logprob: -3.287134885787964
    4. '(' → logprob: -3.662134885787964
    5. '(
' → logprob: -6.287134647369385
    6. '                   ' → logprob: -6.287134647369385
    7. ' between' → logprob: -6.787134647369385
    8. 'between' → logprob: -6.787134647369385
    9. ' (' → logprob: -7.162134647369385
    10. ' d' → logprob: -8.037135124206543

Token 474: ' :
' (ID: 10039)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.007702099159359932
    2. ' d' → logprob: -4.882701873779297
    3. '               ' → logprob: -10.007701873779297
    4. '                   ' → logprob: -10.382701873779297
    5. '   ' → logprob: -11.882701873779297
    6. '           ' → logprob: -12.132701873779297
    7. '	d' → logprob: -13.382701873779297
    8. ' ' → logprob: -14.257701873779297
    9. '[d' → logprob: -14.507701873779297
    10. '                       ' → logprob: -14.632701873779297

Token 475: '               ' (ID: 506)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5924479365348816
    2. ' d' → logprob: -0.9674479365348816
    3. ' min' → logprob: -2.9674479961395264
    4. 'min' → logprob: -4.342447757720947
    5. '   ' → logprob: -6.217447757720947
    6. '               ' → logprob: -8.592448234558105
    7. '                   ' → logprob: -9.342448234558105
    8. ' ' → logprob: -9.717448234558105
    9. '[d' → logprob: -10.217448234558105
    10. '           ' → logprob: -10.967448234558105

Token 476: ' #' (ID: 1069)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.47819581627845764
    2. ' d' → logprob: -0.9781957864761353
    3. ' min' → logprob: -6.228195667266846
    4. '   ' → logprob: -6.978195667266846
    5. 'min' → logprob: -7.103195667266846
    6. ' ' → logprob: -8.853196144104004
    7. '[d' → logprob: -9.978196144104004
    8. '300' → logprob: -10.478196144104004
    9. '	d' → logprob: -10.853196144104004
    10. '  ' → logprob: -11.103196144104004

Token 477: ' -' (ID: 533)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4309499263763428
    2. ' d' → logprob: -1.0559499263763428
    3. ' min' → logprob: -6.680950164794922
    4. 'min' → logprob: -7.555950164794922
    5. '   ' → logprob: -8.055950164794922
    6. ' ' → logprob: -10.305950164794922
    7. '300' → logprob: -10.680950164794922
    8. '           ' → logprob: -10.805950164794922
    9. '               ' → logprob: -10.930950164794922
    10. '       ' → logprob: -12.055950164794922

Token 478: ' continuer' (ID: 75597)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.018282450735569
    2. ' d' → logprob: -4.018282413482666
    3. '   ' → logprob: -9.393282890319824
    4. '[d' → logprob: -11.518282890319824
    5. ' ' → logprob: -11.893282890319824
    6. '(d' → logprob: -12.143282890319824
    7. '	d' → logprob: -12.643282890319824
    8. '  ' → logprob: -12.893282890319824
    9. '```' → logprob: -13.018282890319824
    10. '           ' → logprob: -13.018282890319824

Token 479: ' par' (ID: 686)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.05976675823330879
    2. ' d' → logprob: -2.9347667694091797
    3. '   ' → logprob: -6.55976676940918
    4. ' avec' → logprob: -6.93476676940918
    5. '(d' → logprob: -7.43476676940918
    6. '[d' → logprob: -7.80976676940918
    7. 'avec' → logprob: -8.30976676940918
    8. '               ' → logprob: -8.55976676940918
    9. ' à' → logprob: -8.80976676940918
    10. '           ' → logprob: -9.05976676940918

Token 480: ' le' (ID: 505)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.23169353604316711
    2. 'd' → logprob: -1.6066935062408447
    3. '   ' → logprob: -6.606693744659424
    4. 't' → logprob: -6.856693744659424
    5. ' ' → logprob: -7.106693744659424
    6. ' la' → logprob: -7.856693744659424
    7. ' une' → logprob: -7.856693744659424
    8. '  ' → logprob: -8.481693267822266
    9. 'fois' → logprob: -8.731693267822266
    10. 's' → logprob: -8.856693267822266

Token 481: ' haut' (ID: 28223)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.41345295310020447
    2. 'bas' → logprob: -2.2884528636932373
    3. ' d' → logprob: -2.4134528636932373
    4. 'min' → logprob: -2.7884528636932373
    5. ' bas' → logprob: -3.1634528636932373
    6. ' même' → logprob: -4.788453102111816
    7. 'minimum' → logprob: -5.288453102111816
    8. 'm' → logprob: -5.538453102111816
    9. 'j' → logprob: -5.663453102111816
    10. 'b' → logprob: -6.038453102111816

Token 482: ' (' (ID: 350)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6234122514724731
    2. 'd' → logprob: -1.1234122514724731
    3. ' d' → logprob: -1.9984122514724731
    4. ',' → logprob: -6.373412132263184
    5. '           ' → logprob: -8.498412132263184
    6. '                   ' → logprob: -8.623412132263184
    7. ' et' → logprob: -8.873412132263184
    8. ' ou' → logprob: -8.998412132263184
    9. '       ' → logprob: -9.123412132263184
    10. 'et' → logprob: -9.248412132263184

Token 483: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3134399950504303
    2. ' d' → logprob: -1.313439965248108
    3. '                   ' → logprob: -9.688440322875977
    4. '               ' → logprob: -10.063440322875977
    5. '   ' → logprob: -10.313440322875977
    6. ' ' → logprob: -11.813440322875977
    7. '	d' → logprob: -12.313440322875977
    8. ')' → logprob: -12.438440322875977
    9. '  ' → logprob: -12.813440322875977
    10. '                ' → logprob: -13.063440322875977

Token 484: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0002015139180002734
    2. '[' → logprob: -9.625201225280762
    3. '               ' → logprob: -10.750201225280762
    4. '   ' → logprob: -10.875201225280762
    5. 'j' → logprob: -10.875201225280762
    6. ' [' → logprob: -11.000201225280762
    7. '           ' → logprob: -11.500201225280762
    8. '                   ' → logprob: -12.000201225280762
    9. '][' → logprob: -12.250201225280762
    10. ')' → logprob: -12.250201225280762

Token 485: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.0627925395965576
    2. '])
' → logprob: -1.1877925395965576
    3. '])' → logprob: -1.1877925395965576
    4. '],' → logprob: -3.4377925395965576
    5. '-' → logprob: -5.062792778015137
    6. ']),' → logprob: -6.187792778015137
    7. ']
' → logprob: -6.937792778015137
    8. ']+' → logprob: -7.437792778015137
    9. ' -' → logprob: -7.812792778015137
    10. '])

' → logprob: -8.187792778015137

Token 486: ' déjà' (ID: 21229)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.18164591491222382
    2. ' d' → logprob: -1.8066458702087402
    3. '               ' → logprob: -7.55664587020874
    4. '                   ' → logprob: -8.306646347045898
    5. ')' → logprob: -8.806646347045898
    6. '                ' → logprob: -9.306646347045898
    7. '   ' → logprob: -9.306646347045898
    8. '
' → logprob: -9.556646347045898
    9. '           ' → logprob: -9.556646347045898
    10. ' ' → logprob: -9.681646347045898

Token 487: ' mis' (ID: 4694)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.009549600072205067
    2. 'cal' → logprob: -5.009549617767334
    3. 'min' → logprob: -6.884549617767334
    4. 'computed' → logprob: -7.634549617767334
    5. ' calcul' → logprob: -7.759549617767334
    6. 'd' → logprob: -8.009549140930176
    7. '```' → logprob: -8.884549140930176
    8. 'comput' → logprob: -9.634549140930176
    9. 'mis' → logprob: -9.759549140930176
    10. 'com' → logprob: -9.884549140930176

Token 488: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.03704429045319557
    2. ' à' → logprob: -4.037044525146484
    3. 'e' → logprob: -4.912044525146484
    4. '```' → logprob: -5.787044525146484
    5. ')' → logprob: -6.287044525146484
    6. 'a' → logprob: -6.662044525146484
    7. ''à' → logprob: -7.037044525146484
    8. ']' → logprob: -7.037044525146484
    9. 'aj' → logprob: -7.412044525146484
    10. '}' → logprob: -7.662044525146484

Token 489: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.008208625949919224
    2. '```' → logprob: -5.133208751678467
    3. '
' → logprob: -6.883208751678467
    4. ' ' → logprob: -7.883208751678467
    5. 'day' → logprob: -8.508208274841309
    6. ' jour' → logprob: -8.633208274841309
    7. '``' → logprob: -9.383208274841309
    8. '   ' → logprob: -9.633208274841309
    9. '1' → logprob: -9.758208274841309
    10. 'jou' → logprob: -9.883208274841309

Token 490: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.011478300206363201
    2. ')' → logprob: -4.886478424072266
    3. ')
' → logprob: -6.011478424072266
    4. '               ' → logprob: -7.761478424072266
    5. '),' → logprob: -7.761478424072266
    6. '),
' → logprob: -7.886478424072266
    7. 'd' → logprob: -9.761478424072266
    8. ' )
' → logprob: -9.886478424072266
    9. ')

' → logprob: -10.011478424072266
    10. '                   ' → logprob: -11.886478424072266

Token 491: '               ' (ID: 506)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.3229551315307617
    2. 'd' → logprob: -1.5729551315307617
    3. ' min' → logprob: -3.5729551315307617
    4. ' and' → logprob: -3.5729551315307617
    5. '               ' → logprob: -5.197955131530762
    6. ' =' → logprob: -6.197955131530762
    7. 'min' → logprob: -6.572955131530762
    8. ',' → logprob: -7.447955131530762
    9. '   ' → logprob: -7.572955131530762
    10. '```' → logprob: -7.822955131530762

Token 492: ' #' (ID: 1069)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.2980814576148987
    2. 'd' → logprob: -1.798081398010254
    3. ' and' → logprob: -2.548081398010254
    4. '               ' → logprob: -4.923081398010254
    5. ' min' → logprob: -5.798081398010254
    6. ',' → logprob: -6.673081398010254
    7. 'and' → logprob: -7.298081398010254
    8. '   ' → logprob: -8.173081398010254
    9. 'min' → logprob: -8.423081398010254
    10. '
' → logprob: -8.673081398010254

Token 493: ' -' (ID: 533)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5541043877601624
    2. ' d' → logprob: -0.9291043877601624
    3. '               ' → logprob: -3.5541043281555176
    4. '   ' → logprob: -7.554104328155518
    5. ' and' → logprob: -8.179104804992676
    6. '                   ' → logprob: -8.429104804992676
    7. ' ' → logprob: -8.429104804992676
    8. '                ' → logprob: -8.554104804992676
    9. '           ' → logprob: -9.804104804992676
    10. ' min' → logprob: -10.054104804992676

Token 494: ' continuer' (ID: 75597)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.023397119715809822
    2. ' d' → logprob: -3.773397207260132
    3. '   ' → logprob: -10.773397445678711
    4. '           ' → logprob: -11.023397445678711
    5. '          ' → logprob: -11.023397445678711
    6. '       ' → logprob: -11.648397445678711
    7. '    ' → logprob: -11.648397445678711
    8. '(d' → logprob: -11.773397445678711
    9. 'min' → logprob: -11.773397445678711
    10. '         ' → logprob: -11.898397445678711

Token 495: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.43409985303878784
    2. 'par' → logprob: -1.0590999126434326
    3. ' d' → logprob: -5.8090996742248535
    4. 'd' → logprob: -6.9340996742248535
    5. ' avec' → logprob: -7.9340996742248535
    6. 'avec' → logprob: -8.309100151062012
    7. ' (' → logprob: -8.684100151062012
    8. '(par' → logprob: -8.809100151062012
    9. '   ' → logprob: -9.184100151062012
    10. '(d' → logprob: -9.184100151062012

Token 496: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.8953767418861389
    2. 'la' → logprob: -0.8953767418861389
    3. 'le' → logprob: -2.645376682281494
    4. 'd' → logprob: -3.020376682281494
    5. ' d' → logprob: -3.270376682281494
    6. ' le' → logprob: -4.145376682281494
    7. 'l' → logprob: -5.395376682281494
    8. '           ' → logprob: -6.520376682281494
    9. '   ' → logprob: -6.770376682281494
    10. '       ' → logprob: -8.020377159118652

Token 497: ' gauche' (ID: 58367)
  Prédit: 'bas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bas' → logprob: -0.17036569118499756
    2. 'd' → logprob: -2.420365810394287
    3. 'g' → logprob: -3.545365810394287
    4. 'dro' → logprob: -3.670365810394287
    5. 'c' → logprob: -6.420365810394287
    6. 'left' → logprob: -6.545365810394287
    7. 'min' → logprob: -6.545365810394287
    8. '   ' → logprob: -6.670365810394287
    9. '[j' → logprob: -6.920365810394287
    10. 'haut' → logprob: -7.045365810394287

Token 498: ' (' (ID: 350)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.9052177667617798
    2. 'd' → logprob: -1.0302177667617798
    3. ' (' → logprob: -1.6552177667617798
    4. '(d' → logprob: -3.4052176475524902
    5. ' min' → logprob: -5.28021764755249
    6. ',' → logprob: -6.03021764755249
    7. '               ' → logprob: -6.03021764755249
    8. '(' → logprob: -6.53021764755249
    9. '(min' → logprob: -6.65521764755249
    10. 'min' → logprob: -7.28021764755249

Token 499: 'co' (ID: 1191)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.08902900665998459
    2. ' d' → logprob: -2.46402907371521
    3. ' min' → logprob: -10.214029312133789
    4. 'min' → logprob: -10.589029312133789
    5. ' ' → logprob: -12.089029312133789
    6. '   ' → logprob: -12.339029312133789
    7. '               ' → logprob: -12.714029312133789
    8. '	d' → logprob: -13.089029312133789
    9. '  ' → logprob: -13.214029312133789
    10. '                   ' → logprob: -13.714029312133789

Token 500: 'ût' (ID: 24581)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.9507975578308105
    2. 'd' → logprob: -1.0757975578308105
    3. 'nst' → logprob: -2.2007975578308105
    4. 'min' → logprob: -2.7007975578308105
    5. 'mp' → logprob: -3.7007975578308105
    6. 'l' → logprob: -4.0757975578308105
    7. 'nt' → logprob: -4.0757975578308105
    8. 'ut' → logprob: -5.0757975578308105
    9. '[' → logprob: -5.4507975578308105
    10. 'm' → logprob: -5.5757975578308105

Token 501: ' d' (ID: 272)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.1794759035110474
    2. 'd' → logprob: -1.5544759035110474
    3. ' d' → logprob: -2.054475784301758
    4. '   ' → logprob: -2.554475784301758
    5. '=d' → logprob: -2.679475784301758
    6. ' min' → logprob: -2.804475784301758
    7. '=min' → logprob: -2.804475784301758
    8. ' =' → logprob: -3.429475784301758
    9. '=' → logprob: -4.179475784301758
    10. ')' → logprob: -5.304475784301758

Token 502: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.018343785777688026
    2. 'e' → logprob: -5.018343925476074
    3. 'd' → logprob: -5.268343925476074
    4. '`' → logprob: -6.768343925476074
    5. '[d' → logprob: -6.893343925476074
    6. '[' → logprob: -7.018343925476074
    7. '[min' → logprob: -7.518343925476074
    8. ''[' → logprob: -7.518343925476074
    9. '   ' → logprob: -7.893343925476074
    10. ' d' → logprob: -8.393343925476074

Token 503: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.002603841247037053
    2. ' -' → logprob: -6.127604007720947
    3. '[j' → logprob: -8.502603530883789
    4. ']' → logprob: -8.752603530883789
    5. '   ' → logprob: -10.252603530883789
    6. 'j' → logprob: -11.752603530883789
    7. '1' → logprob: -12.877603530883789
    8. '[' → logprob: -13.377603530883789
    9. ' ' → logprob: -13.502603530883789
    10. '```' → logprob: -13.502603530883789

Token 504: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000344640837283805
    2. ']' → logprob: -8.875344276428223
    3. '-' → logprob: -9.125344276428223
    4. '   ' → logprob: -9.500344276428223
    5. ' ' → logprob: -11.875344276428223
    6. ']+' → logprob: -11.875344276428223
    7. 'j' → logprob: -12.500344276428223
    8. '```' → logprob: -13.375344276428223
    9. '  ' → logprob: -14.625344276428223
    10. '])' → logprob: -14.625344276428223

Token 505: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008646479807794094
    2. '])' → logprob: -5.258646488189697
    3. ']+' → logprob: -6.008646488189697
    4. '])
' → logprob: -7.133646488189697
    5. 'd' → logprob: -10.883646011352539
    6. '   ' → logprob: -10.883646011352539
    7. ']))' → logprob: -11.008646011352539
    8. ' ]' → logprob: -11.008646011352539
    9. ']
' → logprob: -11.133646011352539
    10. '],' → logprob: -11.133646011352539

Token 506: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.11874447762966156
    2. '+' → logprob: -2.243744373321533
    3. ')' → logprob: -5.743744373321533
    4. ')
' → logprob: -7.118744373321533
    5. '   ' → logprob: -7.743744373321533
    6. '+d' → logprob: -7.743744373321533
    7. '),' → logprob: -8.743744850158691
    8. ' plus' → logprob: -8.743744850158691
    9. ',' → logprob: -8.993744850158691
    10. 'd' → logprob: -9.243744850158691

Token 507: ' un' (ID: 537)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.39143186807632446
    2. ' (' → logprob: -2.1414318084716797
    3. '(t' → logprob: -2.5164318084716797
    4. 't' → logprob: -2.6414318084716797
    5. ' t' → logprob: -3.3914318084716797
    6. ' ' → logprob: -4.26643180847168
    7. '0' → logprob: -6.01643180847168
    8. '(' → logprob: -6.76643180847168
    9. '   ' → logprob: -7.26643180847168
    10. '[t' → logprob: -7.89143180847168

Token 508: ' évent' (ID: 80346)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03418096527457237
    2. ' ' → logprob: -3.4091808795928955
    3. ' (' → logprob: -8.659180641174316
    4. ' t' → logprob: -9.034180641174316
    5. '   ' → logprob: -9.534180641174316
    6. '0' → logprob: -9.784180641174316
    7. 't' → logprob: -10.409180641174316
    8. ')' → logprob: -11.034180641174316
    9. '  ' → logprob: -11.284180641174316
    10. ' ' → logprob: -11.659180641174316

Token 509: 'uel' (ID: 4619)
  Prédit: 'uel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uel' → logprob: -0.003761132014915347
    2. 'ual' → logprob: -6.003761291503906
    3. 'u' → logprob: -7.253761291503906
    4. 'uelle' → logprob: -8.128761291503906
    5. 'ail' → logprob: -9.128761291503906
    6. 'al' → logprob: -10.003761291503906
    7. 't' → logprob: -10.503761291503906
    8. 'uellement' → logprob: -10.628761291503906
    9. '```' → logprob: -11.253761291503906
    10. 'el' → logprob: -11.878761291503906

Token 510: ' changement' (ID: 61912)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1500619649887085
    2. '(t' → logprob: -2.775062084197998
    3. ' (' → logprob: -2.900062084197998
    4. ' ' → logprob: -4.275062084197998
    5. '(' → logprob: -5.150062084197998
    6. 't' → logprob: -6.900062084197998
    7. '(int' → logprob: -8.02506160736084
    8. '((' → logprob: -8.65006160736084
    9. 'int' → logprob: -8.77506160736084
    10. ' t' → logprob: -9.02506160736084

Token 511: ' selon' (ID: 27571)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.510604202747345
    2. ')' → logprob: -1.7606041431427002
    3. ')
' → logprob: -1.7606041431427002
    4. 'de' → logprob: -4.010604381561279
    5. ' if' → logprob: -4.385604381561279
    6. 's' → logprob: -5.635604381561279
    7. ' d' → logprob: -5.760604381561279
    8. ',' → logprob: -5.885604381561279
    9. '   ' → logprob: -6.260604381561279
    10. 'd' → logprob: -6.635604381561279

Token 512: ' la' (ID: 557)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5774156451225281
    2. ' t' → logprob: -1.5774157047271729
    3. '1' → logprob: -1.8274157047271729
    4. ' (' → logprob: -3.577415704727173
    5. ' ' → logprob: -4.327415466308594
    6. '(t' → logprob: -4.577415466308594
    7. ' d' → logprob: -4.952415466308594
    8. ' not' → logprob: -5.952415466308594
    9. '(' → logprob: -6.202415466308594
    10. 'd' → logprob: -6.452415466308594

Token 513: ' couleur' (ID: 48005)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6528250575065613
    2. '1' → logprob: -1.902825117111206
    3. '(t' → logprob: -2.027825117111206
    4. ' (' → logprob: -2.152825117111206
    5. ' t' → logprob: -3.527825117111206
    6. '(d' → logprob: -5.027824878692627
    7. '(' → logprob: -5.027824878692627
    8. 's' → logprob: -5.152824878692627
    9. '(s' → logprob: -5.277824878692627
    10. 'd' → logprob: -5.277824878692627

Token 514: ')
' (ID: 446)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.9107674956321716
    2. 'd' → logprob: -1.7857675552368164
    3. ' +' → logprob: -1.7857675552368164
    4. '+' → logprob: -2.7857675552368164
    5. ')' → logprob: -3.0357675552368164
    6. ']' → logprob: -3.4107675552368164
    7. 't' → logprob: -3.9107675552368164
    8. '           ' → logprob: -4.285767555236816
    9. '[j' → logprob: -4.410767555236816
    10. ')
' → logprob: -4.535767555236816

Token 515: '               ' (ID: 506)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5415604710578918
    2. ' d' → logprob: -1.041560411453247
    3. ' =' → logprob: -3.666560411453247
    4. '           ' → logprob: -4.291560649871826
    5. '               ' → logprob: -5.041560649871826
    6. '[' → logprob: -5.291560649871826
    7. '   ' → logprob: -5.666560649871826
    8. '=' → logprob: -5.791560649871826
    9. ' ' → logprob: -6.166560649871826
    10. '
' → logprob: -7.416560649871826

Token 516: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.5342053174972534
    2. 'd' (adapté à ' d') → logprob: -0.9092053174972534
    3. '               ' → logprob: -5.659205436706543
    4. ' min' → logprob: -5.909205436706543
    5. ' if' → logprob: -6.284205436706543
    6. 'min' → logprob: -7.409205436706543
    7. '                   ' → logprob: -7.659205436706543
    8. 'if' → logprob: -7.784205436706543
    9. '   ' → logprob: -7.909205436706543
    10. '           ' → logprob: -8.159205436706543

Token 517: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -3.054500666621607e-06
    2. '[' → logprob: -13.12500286102295
    3. '[i' → logprob: -14.75000286102295
    4. '\[' → logprob: -15.75000286102295
    5. '[min' → logprob: -16.250003814697266
    6. '```' → logprob: -16.375003814697266
    7. ' [' → logprob: -16.375003814697266
    8. '[d' → logprob: -17.250003814697266
    9. '=' → logprob: -17.250003814697266
    10. '[J' → logprob: -17.625003814697266

Token 518: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1374131292104721
    2. ']' → logprob: -2.3874130249023438
    3. ' =' → logprob: -3.8874130249023438
    4. ']=' → logprob: -4.387413024902344
    5. '=min' → logprob: -6.137413024902344
    6. '   ' → logprob: -7.762413024902344
    7. 'min' → logprob: -8.137413024902344
    8. ')' → logprob: -8.637413024902344
    9. ',' → logprob: -8.887413024902344
    10. '[' → logprob: -9.262413024902344

Token 519: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1270296424627304
    2. ' =' → logprob: -2.1270296573638916
    3. '=min' → logprob: -9.252029418945312
    4. ',' → logprob: -12.877029418945312
    5. 'min' → logprob: -13.377029418945312
    6. '   ' → logprob: -14.127029418945312
    7. ',min' → logprob: -15.127029418945312
    8. ' min' → logprob: -15.377029418945312
    9. '+=' → logprob: -17.252029418945312
    10. '    ' → logprob: -17.377029418945312

Token 520: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0019325626781210303
    2. ' min' → logprob: -6.251932621002197
    3. '   ' → logprob: -12.751932144165039
    4. '	min' → logprob: -13.876932144165039
    5. '  ' → logprob: -17.00193214416504
    6. '(min' → logprob: -17.00193214416504
    7. '[min' → logprob: -18.12693214416504
    8. ' ' → logprob: -18.25193214416504
    9. '    ' → logprob: -18.25193214416504
    10. '           ' → logprob: -18.62693214416504

Token 521: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -1.9623810658231378e-05
    2. '(
' → logprob: -11.625020027160645
    3. 'd' → logprob: -11.750020027160645
    4. '(' → logprob: -12.875020027160645
    5. '   ' → logprob: -17.000019073486328
    6. '[d' → logprob: -17.625019073486328
    7. '	d' → logprob: -18.375019073486328
    8. '(
' → logprob: -18.500019073486328
    9. '([' → logprob: -19.500019073486328
    10. ' d' → logprob: -19.500019073486328

Token 522: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00019567293929867446
    2. 'd' → logprob: -9.000195503234863
    3. '(j' → logprob: -10.000195503234863
    4. '[' → logprob: -11.125195503234863
    5. '   ' → logprob: -12.375195503234863
    6. '[d' → logprob: -13.500195503234863
    7. '[
' → logprob: -13.750195503234863
    8. ')' → logprob: -14.250195503234863
    9. ' [' → logprob: -14.375195503234863
    10. 'j' → logprob: -14.375195503234863

Token 523: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.5266187191009521
    2. '[j' → logprob: -0.9016187191009521
    3. '-' → logprob: -6.401618957519531
    4. 'j' → logprob: -6.901618957519531
    5. ']' → logprob: -8.151618957519531
    6. '   ' → logprob: -8.401618957519531
    7. '],
' → logprob: -8.901618957519531
    8. '],[' → logprob: -9.526618957519531
    9. '][' → logprob: -10.526618957519531
    10. '[' → logprob: -11.026618957519531

Token 524: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.02713748998939991
    2. ' d' → logprob: -3.652137517929077
    3. '   ' → logprob: -8.152137756347656
    4. '           ' → logprob: -8.402137756347656
    5. '       ' → logprob: -9.527137756347656
    6. '               ' → logprob: -10.277137756347656
    7. ' ' → logprob: -10.402137756347656
    8. '          ' → logprob: -10.527137756347656
    9. '         ' → logprob: -10.777137756347656
    10. '    ' → logprob: -10.777137756347656

Token 525: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00016516048344783485
    2. 'j' → logprob: -8.750164985656738
    3. '   ' → logprob: -12.125164985656738
    4. '	j' → logprob: -15.125164985656738
    5. ' [' → logprob: -15.250164985656738
    6. '[' → logprob: -15.375164985656738
    7. ' j' → logprob: -15.500164985656738
    8. '       ' → logprob: -16.125165939331055
    9. '[
' → logprob: -16.500165939331055
    10. '
' → logprob: -17.375165939331055

Token 526: '-' (ID: 12)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.09213989973068237
    2. '-' → logprob: -2.467139959335327
    3. 'j' → logprob: -5.842139720916748
    4. ' -' → logprob: -8.717140197753906
    5. '[' → logprob: -10.467140197753906
    6. '   ' → logprob: -10.592140197753906
    7. '-j' → logprob: -10.717140197753906
    8. ' j' → logprob: -10.967140197753906
    9. '[-' → logprob: -11.842140197753906
    10. ']' → logprob: -12.092140197753906

Token 527: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.465036105713807e-06
    2. ' ' → logprob: -11.875007629394531
    3. '   ' → logprob: -14.750007629394531
    4. '```' → logprob: -17.62500762939453
    5. '{' → logprob: -18.37500762939453
    6. '۱' → logprob: -18.50000762939453
    7. '  ' → logprob: -18.62500762939453
    8. ')' → logprob: -18.62500762939453
    9. '0' → logprob: -19.18750762939453
    10. '    ' → logprob: -19.18750762939453

Token 528: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2872253954410553
    2. '+' → logprob: -1.412225365638733
    3. ')' → logprob: -5.412225246429443
    4. '])' → logprob: -7.787225246429443
    5. ']' → logprob: -8.287225723266602
    6. ')+' → logprob: -8.537225723266602
    7. '   ' → logprob: -8.662225723266602
    8. '+d' → logprob: -8.787225723266602
    9. '+[' → logprob: -9.162225723266602
    10. ']+' → logprob: -9.412225723266602

Token 529: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16509801149368286
    2. ' +' → logprob: -1.915097951889038
    3. ')' → logprob: -5.415098190307617
    4. '+[' → logprob: -8.665098190307617
    5. '   ' → logprob: -9.665098190307617
    6. ')+' → logprob: -9.915098190307617
    7. '+(' → logprob: -10.290098190307617
    8. '+)' → logprob: -11.040098190307617
    9. '+d' → logprob: -11.040098190307617
    10. ']' → logprob: -11.915098190307617

Token 530: ' t' (ID: 260)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.21552422642707825
    2. 't' → logprob: -2.465524196624756
    3. '1' → logprob: -2.590524196624756
    4. '(' → logprob: -3.715524196624756
    5. '((' → logprob: -5.090524196624756
    6. ' (' → logprob: -6.340524196624756
    7. 'int' → logprob: -7.840524196624756
    8. '(s' → logprob: -8.215524673461914
    9. '   ' → logprob: -8.465524673461914
    10. '(int' → logprob: -8.840524673461914

Token 531: ' ^' (ID: 7602)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.46342578530311584
    2. ')' → logprob: -1.5884257555007935
    3. ' ^' → logprob: -1.8384257555007935
    4. '^)' → logprob: -5.463425636291504
    5. '^(' → logprob: -6.463425636291504
    6. '+' → logprob: -7.088425636291504
    7. '^{' → logprob: -8.213425636291504
    8. ' +' → logprob: -8.838425636291504
    9. ' )' → logprob: -9.088425636291504
    10. '))' → logprob: -9.463425636291504

Token 532: ' (' (ID: 350)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8037980198860168
    2. '(True' → logprob: -0.8037980198860168
    3. 'True' → logprob: -2.928797960281372
    4. '(' → logprob: -3.678797960281372
    5. '(s' → logprob: -4.928798198699951
    6. '(a' → logprob: -5.053798198699951
    7. ' (' → logprob: -5.428798198699951
    8. '((' → logprob: -5.678798198699951
    9. '(t' → logprob: -6.178798198699951
    10. ' True' → logprob: -7.053798198699951

Token 533: 'd' (ID: 67)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7778876423835754
    2. '(True' → logprob: -1.7778875827789307
    3. 'True' → logprob: -1.9028875827789307
    4. '(s' → logprob: -2.7778875827789307
    5. '(a' → logprob: -2.9028875827789307
    6. '((' → logprob: -3.2778875827789307
    7. '(d' → logprob: -3.6528875827789307
    8. '(' → logprob: -3.9028875827789307
    9. '(t' → logprob: -4.77788782119751
    10. 'a' → logprob: -5.52788782119751

Token 534: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.009744640439748764
    2. '1' → logprob: -5.384744644165039
    3. '[' → logprob: -6.009744644165039
    4. 'j' → logprob: -6.009744644165039
    5. '(j' → logprob: -9.009744644165039
    6. ' [' → logprob: -11.134744644165039
    7. '0' → logprob: -11.259744644165039
    8. '(' → logprob: -11.884744644165039
    9. ' ' → logprob: -11.884744644165039
    10. '   ' → logprob: -12.134744644165039

Token 535: '-' (ID: 12)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00191399990580976
    2. 'j' → logprob: -6.626914024353027
    3. '%' → logprob: -8.251914024353027
    4. '[' → logprob: -9.501914024353027
    5. '   ' → logprob: -9.626914024353027
    6. '(j' → logprob: -10.251914024353027
    7. '```' → logprob: -10.501914024353027
    8. '[(' → logprob: -10.626914024353027
    9. ')' → logprob: -10.626914024353027
    10. '0' → logprob: -12.126914024353027

Token 536: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005069229518994689
    2. '[j' → logprob: -8.250507354736328
    3. '0' → logprob: -9.250507354736328
    4. 'j' → logprob: -9.250507354736328
    5. ' ' → logprob: -10.625507354736328
    6. '   ' → logprob: -11.250507354736328
    7. ' j' → logprob: -11.875507354736328
    8. '[' → logprob: -13.500507354736328
    9. '```' → logprob: -13.938007354736328
    10. '(j' → logprob: -14.000507354736328

Token 537: ']' (ID: 60)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.6457183957099915
    2. '%' → logprob: -0.7707183957099915
    3. '[j' → logprob: -4.770718574523926
    4. ')' → logprob: -6.020718574523926
    5. '[' → logprob: -7.020718574523926
    6. ' ' → logprob: -7.520718574523926
    7. '   ' → logprob: -8.395718574523926
    8. ')%' → logprob: -8.395718574523926
    9. '(j' → logprob: -10.270718574523926
    10. '       ' → logprob: -10.895718574523926

Token 538: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.3874644935131073
    2. ' %' → logprob: -1.1374645233154297
    3. ')' → logprob: -8.26246452331543
    4. ' ' → logprob: -9.26246452331543
    5. '[' → logprob: -9.63746452331543
    6. '[j' → logprob: -9.88746452331543
    7. ')%' → logprob: -9.88746452331543
    8. '   ' → logprob: -11.51246452331543
    9. '==' → logprob: -11.88746452331543
    10. '()%' → logprob: -11.88746452331543

Token 539: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.008683474734425545
    2. ' ' → logprob: -4.758683681488037
    3. '   ' → logprob: -10.633683204650879
    4. '(' → logprob: -11.633683204650879
    5. '           ' → logprob: -12.383683204650879
    6. '1' → logprob: -12.821183204650879
    7. '  ' → logprob: -12.821183204650879
    8. '               ' → logprob: -13.008683204650879
    9. '     ' → logprob: -13.508683204650879
    10. '       ' → logprob: -13.508683204650879

Token 540: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.8087270038668066e-05
    2. ' ' → logprob: -10.750027656555176
    3. '```' → logprob: -13.687527656555176
    4. '1' → logprob: -14.812527656555176
    5. '(' → logprob: -14.875027656555176
    6. '0' → logprob: -14.937527656555176
    7. '3' → logprob: -15.000027656555176
    8. '   ' → logprob: -15.187527656555176
    9. '==' → logprob: -15.437527656555176
    10. '300' → logprob: -15.437527656555176

Token 541: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3163953721523285
    2. ' ==' → logprob: -1.3163954019546509
    3. ')' → logprob: -5.941395282745361
    4. ')==' → logprob: -8.06639575958252
    5. '[' → logprob: -10.56639575958252
    6. '!=' → logprob: -10.56639575958252
    7. ' ' → logprob: -10.81639575958252
    8. '()==' → logprob: -10.94139575958252
    9. '))' → logprob: -11.06639575958252
    10. ' !=' → logprob: -11.06639575958252

Token 542: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011527208844199777
    2. ' ' → logprob: -7.001152515411377
    3. '1' → logprob: -8.376152992248535
    4. '==' → logprob: -12.126152992248535
    5. '=' → logprob: -13.376152992248535
    6. '   ' → logprob: -13.501152992248535
    7. 'False' → logprob: -14.751152992248535
    8. 'True' → logprob: -14.938652992248535
    9. '(' → logprob: -15.126152992248535
    10. '  ' → logprob: -15.813652992248535

Token 543: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00032116140937432647
    2. '1' → logprob: -8.125321388244629
    3. ' ' → logprob: -10.625321388244629
    4. '2' → logprob: -15.312821388244629
    5. '==' → logprob: -15.500321388244629
    6. '=' → logprob: -16.125320434570312
    7. '   ' → logprob: -16.500320434570312
    8. 'w' → logprob: -17.562820434570312
    9. '00' → logprob: -17.937820434570312
    10. '```' → logprob: -18.000320434570312

Token 544: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008736773394048214
    2. '))' → logprob: -4.758736610412598
    3. ')
' → logprob: -9.633736610412598
    4. ' )' → logprob: -10.383736610412598
    5. ')))' → logprob: -11.758736610412598
    6. '])' → logprob: -12.008736610412598
    7. '})' → logprob: -13.383736610412598
    8. '   ' → logprob: -13.383736610412598
    9. '))
' → logprob: -13.633736610412598
    10. ')])' → logprob: -13.633736610412598

Token 545: '    
' (ID: 1944)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 546: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21189317107200623
    2. 'return' → logprob: -1.9618932008743286
    3. '       ' → logprob: -3.961893081665039
    4. '<|end|>' → logprob: -4.086893081665039
    5. ' return' → logprob: -5.086893081665039
    6. 'print' → logprob: -5.711893081665039
    7. '    
' → logprob: -7.086893081665039
    8. ')' → logprob: -7.211893081665039
    9. '	return' → logprob: -7.336893081665039
    10. '    ' → logprob: -7.336893081665039

Token 547: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1941860467195511
    2. 'return' → logprob: -1.8191860914230347
    3. '   ' → logprob: -4.819186210632324
    4. ' return' → logprob: -5.694186210632324
    5. ' print' → logprob: -5.944186210632324
    6. '    
' → logprob: -9.194186210632324
    7. '
' → logprob: -9.694186210632324
    8. '#' (adapté à ' #') → logprob: -10.569186210632324
    9. '```' → logprob: -10.569186210632324
    10. 'for' → logprob: -11.069186210632324

Token 548: ' Calcul' (ID: 57243)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0004245972086209804
    2. 'result' → logprob: -8.6254243850708
    3. 'min' → logprob: -9.5004243850708
    4. ' print' → logprob: -9.5004243850708
    5. 'return' → logprob: -10.0004243850708
    6. '#' → logprob: -10.7504243850708
    7. 'res' → logprob: -10.8754243850708
    8. 'ans' → logprob: -13.1254243850708
    9. '   ' → logprob: -13.2504243850708
    10. 'answer' → logprob: -13.5004243850708

Token 549: ' final' (ID: 1721)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05875565484166145
    2. 'result' → logprob: -3.80875563621521
    3. 'min' → logprob: -3.80875563621521
    4. 'res' → logprob: -5.183755874633789
    5. 'return' → logprob: -5.808755874633789
    6. '   ' → logprob: -6.683755874633789
    7. 'minimum' → logprob: -7.308755874633789
    8. ' print' → logprob: -7.683755874633789
    9. '#' → logprob: -7.808755874633789
    10. 'ans' → logprob: -8.058755874633789

Token 550: ' :
' (ID: 10039)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.016763068735599518
    2. ' print' → logprob: -4.391763210296631
    3. '   ' → logprob: -6.141763210296631
    4. 'return' → logprob: -6.266763210296631
    5. 'result' → logprob: -9.641762733459473
    6. 'min' → logprob: -10.141762733459473
    7. ' return' → logprob: -10.266762733459473
    8. 'res' → logprob: -10.766762733459473
    9. '```' → logprob: -10.891762733459473
    10. 'ans' → logprob: -12.766762733459473

Token 551: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.09553316235542297
    2. ' print' → logprob: -2.7205331325531006
    3. 'return' → logprob: -4.22053337097168
    4. 'result' → logprob: -5.84553337097168
    5. ' return' → logprob: -6.09553337097168
    6. 'min' → logprob: -6.22053337097168
    7. '   ' → logprob: -6.34553337097168
    8. 'res' → logprob: -7.59553337097168
    9. ' result' → logprob: -7.97053337097168
    10. ' min' → logprob: -8.22053337097168

Token 552: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.304104208946228
    2. 'return' → logprob: -2.0541043281555176
    3. ' print' → logprob: -2.4291043281555176
    4. ' return' → logprob: -3.3041043281555176
    5. 'result' → logprob: -5.679104328155518
    6. '   ' → logprob: -5.929104328155518
    7. ' result' → logprob: -6.554104328155518
    8. 'res' → logprob: -7.054104328155518
    9. ' res' → logprob: -7.554104328155518
    10. 'ret' → logprob: -9.30410385131836

Token 553: ' -' (ID: 533)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.09462013095617294
    2. ' print' → logprob: -3.2196202278137207
    3. 'return' → logprob: -3.8446202278137207
    4. 'result' → logprob: -4.219620227813721
    5. 'res' → logprob: -4.969620227813721
    6. ' res' → logprob: -5.969620227813721
    7. ' result' → logprob: -6.469620227813721
    8. ' return' → logprob: -6.469620227813721
    9. 'min' → logprob: -7.344620227813721
    10. '   ' → logprob: -8.219619750976562

Token 554: ' d' (ID: 272)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06897156685590744
    2. ' print' → logprob: -3.943971633911133
    3. 'return' → logprob: -4.068971633911133
    4. 'result' → logprob: -4.318971633911133
    5. 'min' → logprob: -4.693971633911133
    6. 'res' → logprob: -5.693971633911133
    7. ' return' → logprob: -6.818971633911133
    8. ' min' → logprob: -6.943971633911133
    9. ' result' → logprob: -7.068971633911133
    10. ' res' → logprob: -7.318971633911133

Token 555: '[-' (ID: 17503)
  Prédit: '[w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[w' → logprob: -0.016802923753857613
    2. '[-' → logprob: -4.141802787780762
    3. 'w' → logprob: -7.391802787780762
    4. '[' → logprob: -9.641802787780762
    5. '[h' → logprob: -10.391802787780762
    6. '   ' → logprob: -11.766802787780762
    7. '_w' → logprob: -12.266802787780762
    8. ' [' → logprob: -12.391802787780762
    9. '[j' → logprob: -12.391802787780762
    10. '```' → logprob: -12.391802787780762

Token 556: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4849443838757e-06
    2. ']' → logprob: -13.000004768371582
    3. '-' → logprob: -14.000004768371582
    4. ' ' → logprob: -15.125004768371582
    5. '(' → logprob: -15.375004768371582
    6. '   ' → logprob: -15.750004768371582
    7. '])' → logprob: -16.000003814697266
    8. '```' → logprob: -16.375003814697266
    9. '(-' → logprob: -16.625003814697266
    10. '#' → logprob: -16.875003814697266

Token 557: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.027404993772506714
    2. '])' → logprob: -3.652405023574829
    3. ']+' → logprob: -7.65240478515625
    4. '],' → logprob: -8.40240478515625
    5. ']-' → logprob: -9.15240478515625
    6. '-' → logprob: -9.52740478515625
    7. ']
' → logprob: -9.90240478515625
    8. ' ]' → logprob: -9.90240478515625
    9. ']))' → logprob: -10.90240478515625
    10. '])]' → logprob: -11.40240478515625

Token 558: ' correspond' (ID: 11095)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2555489540100098
    2. ' +' → logprob: -1.3805489540100098
    3. '[' → logprob: -1.8805489540100098
    4. '+' → logprob: -2.5055489540100098
    5. ']' → logprob: -2.5055489540100098
    6. ' -' → logprob: -2.7555489540100098
    7. ',' → logprob: -4.25554895401001
    8. ')' → logprob: -4.25554895401001
    9. '-' → logprob: -4.50554895401001
    10. '  ' → logprob: -4.88054895401001

Token 559: ' au' (ID: 2791)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.4207083284854889
    2. '   ' → logprob: -1.5457082986831665
    3. ' au' → logprob: -2.545708417892456
    4. 'à' → logprob: -4.045708179473877
    5. ' =' → logprob: -4.920708179473877
    6. 'au' → logprob: -5.045708179473877
    7. ' to' → logprob: -5.295708179473877
    8. '=' → logprob: -5.795708179473877
    9. '    ' → logprob: -6.420708179473877
    10. ',' → logprob: -6.420708179473877

Token 560: ' coût' (ID: 73109)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.14304272830486298
    2. 'd' → logprob: -3.268042802810669
    3. ' w' → logprob: -3.518042802810669
    4. ' nombre' → logprob: -4.26804256439209
    5. 'nombre' → logprob: -4.76804256439209
    6. ' dernier' → logprob: -5.14304256439209
    7. 'minimum' → logprob: -5.14304256439209
    8. ' d' → logprob: -5.26804256439209
    9. ']' → logprob: -5.51804256439209
    10. ' minimum' → logprob: -6.01804256439209

Token 561: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8890810012817383
    2. 'd' → logprob: -1.7640810012817383
    3. ' d' → logprob: -2.3890810012817383
    4. ' pour' → logprob: -2.6390810012817383
    5. 'pour' → logprob: -2.7640810012817383
    6. '+' → logprob: -3.6390810012817383
    7. '#' → logprob: -3.7640810012817383
    8. 'de' → logprob: -3.8890810012817383
    9. '[' → logprob: -3.8890810012817383
    10. ' de' → logprob: -4.014081001281738

Token 562: ''arrivée' (ID: 156076)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.1737755686044693
    2. ''acc' → logprob: -3.1737756729125977
    3. ''' → logprob: -3.2987756729125977
    4. ''arr' → logprob: -3.5487756729125977
    5. ''accès' → logprob: -3.7987756729125977
    6. ''arrivée' → logprob: -4.798775672912598
    7. ''aller' → logprob: -5.173775672912598
    8. ''obtenir' → logprob: -6.048775672912598
    9. ''entrée' → logprob: -6.298775672912598
    10. 'd' → logprob: -6.423775672912598

Token 563: ' dans' (ID: 2671)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3313065767288208
    2. '   ' → logprob: -1.8313065767288208
    3. ',' → logprob: -2.0813064575195312
    4. ' =' → logprob: -2.2063064575195312
    5. 'd' → logprob: -3.0813064575195312
    6. ']' → logprob: -3.2063064575195312
    7. ' (' → logprob: -3.3313064575195312
    8. ' d' → logprob: -3.4563064575195312
    9. 'print' → logprob: -4.081306457519531
    10. ' for' → logprob: -4.081306457519531

Token 564: ' la' (ID: 557)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.25286832451820374
    2. 'la' → logprob: -2.377868413925171
    3. ' la' → logprob: -3.002868413925171
    4. 'w' → logprob: -3.377868413925171
    5. 's' → logprob: -4.377868175506592
    6. ' d' → logprob: -4.377868175506592
    7. 'the' → logprob: -4.752868175506592
    8. '[' → logprob: -5.877868175506592
    9. 'l' → logprob: -6.252868175506592
    10. ']' → logprob: -6.377868175506592

Token 565: ' dernière' (ID: 39497)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.06501337885856628
    2. 'der' → logprob: -3.6900134086608887
    3. 'pen' → logprob: -3.9400134086608887
    4. 'gr' → logprob: -4.690013408660889
    5. 'avant' → logprob: -6.190013408660889
    6. 'col' → logprob: -6.440013408660889
    7. 'ligne' → logprob: -7.065013408660889
    8. 'prem' → logprob: -7.190013408660889
    9. 'dern' → logprob: -7.315013408660889
    10. 'se' → logprob: -7.315013408660889

Token 566: ' case' (ID: 1890)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.18663866817951202
    2. 'col' → logprob: -1.8116387128829956
    3. ' case' → logprob: -5.936638832092285
    4. 'ligne' → logprob: -6.436638832092285
    5. ' colonne' → logprob: -6.686638832092285
    6. 'cell' → logprob: -7.186638832092285
    7. 'j' → logprob: -8.686638832092285
    8. 'column' → logprob: -8.811638832092285
    9. ' cellule' → logprob: -9.686638832092285
    10. 'position' → logprob: -9.936638832092285

Token 567: ' de' (ID: 334)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.193959042429924
    2. ' -' → logprob: -3.0689589977264404
    3. '   ' → logprob: -3.5689589977264404
    4. ' ]' → logprob: -3.9439589977264404
    5. '[' → logprob: -4.3189592361450195
    6. ',' → logprob: -4.3189592361450195
    7. '],' → logprob: -4.5689592361450195
    8. '][' → logprob: -4.6939592361450195
    9. ' +' → logprob: -4.6939592361450195
    10. '-' → logprob: -5.1939592361450195

Token 568: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.009572386741638184
    2. 'l' → logprob: -4.884572505950928
    3. ' la' → logprob: -7.134572505950928
    4. 'ligne' → logprob: -7.259572505950928
    5. 'range' → logprob: -9.13457202911377
    6. 'd' → logprob: -9.88457202911377
    7. 's' → logprob: -10.00957202911377
    8. 'second' → logprob: -10.25957202911377
    9. 'the' → logprob: -10.38457202911377
    10. '   ' → logprob: -10.38457202911377

Token 569: ' grille' (ID: 99153)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.3539715111255646
    2. 'ligne' → logprob: -1.2289714813232422
    3. 'grid' → logprob: -6.353971481323242
    4. 'range' → logprob: -6.728971481323242
    5. 'prem' → logprob: -7.478971481323242
    6. 'liste' → logprob: -7.478971481323242
    7. 'pen' → logprob: -7.603971481323242
    8. 'rang' → logprob: -8.478971481323242
    9. 'der' → logprob: -8.853971481323242
    10. 'pl' → logprob: -9.603971481323242

Token 570: ' (' (ID: 350)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.45394933223724365
    2. '   ' → logprob: -1.8289493322372437
    3. ']' → logprob: -3.078949451446533
    4. ' +' → logprob: -3.203949451446533
    5. '[j' → logprob: -3.578949451446533
    6. '+' → logprob: -4.203949451446533
    7. '][' → logprob: -4.203949451446533
    8. '[-' → logprob: -4.453949451446533
    9. ' -' → logprob: -4.578949451446533
    10. ' =' → logprob: -5.078949451446533

Token 571: 'en' (ID: 262)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.10531089454889297
    2. ' w' → logprob: -2.7303109169006348
    3. ')' → logprob: -4.355310916900635
    4. ' -' → logprob: -4.980310916900635
    5. '-' → logprob: -5.355310916900635
    6. '-w' → logprob: -6.355310916900635
    7. ']' → logprob: -6.855310916900635
    8. '])' → logprob: -6.980310916900635
    9. '(w' → logprob: -7.230310916900635
    10. '   ' → logprob: -7.230310916900635

Token 572: ' bas' (ID: 3222)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8725545406341553
    2. 'w' → logprob: -1.1225545406341553
    3. 'range' → logprob: -3.2475545406341553
    4. ']' → logprob: -3.4975545406341553
    5. '[-' → logprob: -3.4975545406341553
    6. ')' → logprob: -3.6225545406341553
    7. ' w' → logprob: -3.6225545406341553
    8. '```' → logprob: -4.247554779052734
    9. ' ' → logprob: -4.372554779052734
    10. '[' → logprob: -4.872554779052734

Token 573: ' à' (ID: 1221)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.05415891855955124
    2. ' -' → logprob: -3.054158926010132
    3. '   ' → logprob: -5.804158687591553
    4. ')' → logprob: -7.054158687591553
    5. ']' → logprob: -7.679158687591553
    6. '][' → logprob: -7.804158687591553
    7. ',' → logprob: -8.054159164428711
    8. '1' → logprob: -8.679159164428711
    9. '][-' → logprob: -10.054159164428711
    10. '])' → logprob: -10.179159164428711

Token 574: ' droite' (ID: 61428)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.23536416888237
    2. ' droite' → logprob: -1.9853641986846924
    3. 'dro' → logprob: -3.9853641986846924
    4. '   ' → logprob: -4.110363960266113
    5. '```' → logprob: -4.860363960266113
    6. 'g' → logprob: -5.235363960266113
    7. 'd' → logprob: -5.235363960266113
    8. '1' → logprob: -5.360363960266113
    9. 'l' → logprob: -5.485363960266113
    10. 'j' → logprob: -5.735363960266113

Token 575: ')
' (ID: 446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06448878347873688
    2. ' ]' → logprob: -3.5644888877868652
    3. '   ' → logprob: -4.314488887786865
    4. ']
' → logprob: -4.814488887786865
    5. ')' → logprob: -5.939488887786865
    6. ' +' → logprob: -6.814488887786865
    7. '[' → logprob: -6.814488887786865
    8. ']+' → logprob: -6.814488887786865
    9. ' ]
' → logprob: -7.064488887786865
    10. '],' → logprob: -7.189488887786865

Token 576: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.34770703315734863
    2. '   ' → logprob: -1.4727070331573486
    3. ' return' → logprob: -3.8477070331573486
    4. 'return' → logprob: -4.4727067947387695
    5. '[-' → logprob: -4.9727067947387695
    6. ']' → logprob: -5.0977067947387695
    7. '0' → logprob: -5.4727067947387695
    8. '1' → logprob: -5.5977067947387695
    9. '```' → logprob: -6.5977067947387695
    10. ' ' → logprob: -6.7227067947387695

Token 577: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8793349266052246
    2. 'return' → logprob: -1.3793349266052246
    3. ' return' → logprob: -1.6293349266052246
    4. 'print' → logprob: -2.2543349266052246
    5. ' print' → logprob: -4.129334926605225
    6. '[' → logprob: -4.379334926605225
    7. '[-' → logprob: -6.754334926605225
    8. '
' → logprob: -7.004334926605225
    9. '    
' → logprob: -8.129335403442383
    10. ')' → logprob: -8.629335403442383

Token 578: ' -' (ID: 533)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6336260437965393
    2. 'return' → logprob: -1.1336259841918945
    3. '   ' → logprob: -2.3836259841918945
    4. ' return' → logprob: -3.1336259841918945
    5. ' print' → logprob: -5.5086259841918945
    6. 'w' → logprob: -5.7586259841918945
    7. '[' → logprob: -6.0086259841918945
    8. '[-' → logprob: -7.1336259841918945
    9. '```' → logprob: -7.7586259841918945
    10. ' w' → logprob: -8.258625984191895

Token 579: ' a' (ID: 261)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.9391963481903076
    2. ' print' → logprob: -1.6891963481903076
    3. '1' → logprob: -2.1891963481903076
    4. ' d' → logprob: -2.4391963481903076
    5. 'd' → logprob: -2.5641963481903076
    6. 'return' → logprob: -3.1891963481903076
    7. ' return' → logprob: -3.1891963481903076
    8. '   ' → logprob: -3.6891963481903076
    9. '0' → logprob: -4.564196586608887
    10. ' ' → logprob: -5.439196586608887

Token 580: ' ==' (ID: 951)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.7093364000320435
    2. '=' → logprob: -1.9593364000320435
    3. ' ==' → logprob: -1.9593364000320435
    4. '==' → logprob: -1.9593364000320435
    5. ' ^=' → logprob: -1.9593364000320435
    6. '[' → logprob: -2.709336280822754
    7. ' ^' → logprob: -3.459336280822754
    8. ')' → logprob: -3.834336280822754
    9. 'd' → logprob: -3.959336280822754
    10. ']' → logprob: -4.084336280822754

Token 581: ' "#"' (ID: 149789)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05274374410510063
    2. ' s' → logprob: -3.052743673324585
    3. '(' → logprob: -6.677743911743164
    4. '(s' → logprob: -7.427743911743164
    5. '"#' → logprob: -7.552743911743164
    6. 'd' → logprob: -7.927743911743164
    7. ' (' → logprob: -8.302743911743164
    8. 'a' → logprob: -8.427743911743164
    9. ''#' → logprob: -8.427743911743164
    10. '("#' → logprob: -9.052743911743164

Token 582: ' :' (ID: 712)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.12239519506692886
    2. '[' → logprob: -3.1223952770233154
    3. '-' → logprob: -4.122395038604736
    4. ' -' → logprob: -4.747395038604736
    5. ' if' → logprob: -5.247395038604736
    6. ' ' → logprob: -5.747395038604736
    7. ')' → logprob: -5.747395038604736
    8. ' d' → logprob: -5.747395038604736
    9. '[d' → logprob: -5.872395038604736
    10. '[j' → logprob: -5.997395038604736

Token 583: ' on' (ID: 402)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.0325117111206055
    2. '1' → logprob: -1.9075117111206055
    3. 'print' → logprob: -2.0325117111206055
    4. ' d' → logprob: -2.2825117111206055
    5. '(d' → logprob: -2.4075117111206055
    6. ' (' → logprob: -3.0325117111206055
    7. '(' → logprob: -3.0325117111206055
    8. 'int' → logprob: -3.5325117111206055
    9. ' print' → logprob: -4.0325117111206055
    10. ' ' → logprob: -4.5325117111206055

Token 584: ' ajoute' (ID: 91611)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4546389877796173
    2. 'if' → logprob: -1.454638957977295
    3. '*' → logprob: -3.579638957977295
    4. ' if' → logprob: -3.704638957977295
    5. '+=' → logprob: -4.329638957977295
    6. 'print' → logprob: -4.454638957977295
    7. 'return' → logprob: -4.829638957977295
    8. ' +' → logprob: -4.954638957977295
    9. ')' → logprob: -4.954638957977295
    10. '?' → logprob: -4.954638957977295

Token 585: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07918355613946915
    2. '(d' → logprob: -3.579183578491211
    3. ' ' → logprob: -3.704183578491211
    4. ' (' → logprob: -4.329183578491211
    5. '(' → logprob: -5.454183578491211
    6. 'd' → logprob: -5.954183578491211
    7. ' d' → logprob: -6.454183578491211
    8. '0' → logprob: -7.079183578491211
    9. '(int' → logprob: -8.204183578491211
    10. 'int' → logprob: -8.204183578491211

Token 586: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1212339773774147
    2. '(d' → logprob: -2.3712339401245117
    3. 'd' → logprob: -4.121233940124512
    4. '(' → logprob: -6.496233940124512
    5. 'int' → logprob: -6.621233940124512
    6. '0' → logprob: -7.621233940124512
    7. ' (' → logprob: -7.871233940124512
    8. ' ' → logprob: -7.996233940124512
    9. '(int' → logprob: -8.246233940124512
    10. ' d' → logprob: -9.121233940124512

Token 587: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8806861639022827
    2. 'return' → logprob: -1.2556861639022827
    3. '
' → logprob: -2.0056862831115723
    4. ' return' → logprob: -3.0056862831115723
    5. '[-' → logprob: -3.1306862831115723
    6. 'def' → logprob: -3.8806862831115723
    7. '[' → logprob: -4.130686283111572
    8. 'print' → logprob: -4.630686283111572
    9. 'd' → logprob: -5.505686283111572
    10. ' d' → logprob: -5.630686283111572

Token 588: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11288970708847046
    2. ' a' → logprob: -2.3628897666931152
    3. 'd' → logprob: -5.612889766693115
    4. 's' → logprob: -5.862889766693115
    5. ' s' → logprob: -5.862889766693115
    6. ' d' → logprob: -6.612889766693115
    7. '(a' → logprob: -7.237889766693115
    8. ' (' → logprob: -7.862889766693115
    9. ' not' → logprob: -7.987889766693115
    10. 'not' → logprob: -8.987889289855957

Token 589: ' première' (ID: 23423)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6768267750740051
    2. 'd' → logprob: -1.3018267154693604
    3. 's' → logprob: -2.5518267154693604
    4. ' d' → logprob: -2.6768267154693604
    5. ' s' → logprob: -3.3018267154693604
    6. ' a' → logprob: -3.4268267154693604
    7. ' grid' → logprob: -7.4268269538879395
    8. '#' → logprob: -7.5518269538879395
    9. 'grid' → logprob: -7.5518269538879395
    10. ' last' → logprob: -7.5518269538879395

Token 590: ' case' (ID: 1890)
  Prédit: ' case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' case' → logprob: -0.4286881387233734
    2. 'case' → logprob: -1.1786881685256958
    3. ')' → logprob: -4.428688049316406
    4. ' ligne' → logprob: -5.428688049316406
    5. ' d' → logprob: -5.553688049316406
    6. '   ' → logprob: -5.678688049316406
    7. ']' → logprob: -5.928688049316406
    8. 'd' → logprob: -6.428688049316406
    9. '[' → logprob: -6.678688049316406
    10. ' ' → logprob: -6.928688049316406

Token 591: ' est' (ID: 893)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.20206601917743683
    2. ' ==' → logprob: -1.7020660638809204
    3. '   ' → logprob: -9.327066421508789
    4. '#' → logprob: -9.702066421508789
    5. '=="' → logprob: -9.827066421508789
    6. '[' → logprob: -9.952066421508789
    7. ']==' → logprob: -9.952066421508789
    8. '!=' → logprob: -10.077066421508789
    9. ']' → logprob: -10.202066421508789
    10. 'd' → logprob: -10.577066421508789

Token 592: ' un' (ID: 537)
  Prédit: '"#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"#' → logprob: -0.034460872411727905
    2. ''#' → logprob: -3.4094607830047607
    3. ' "#"' → logprob: -7.65946102142334
    4. 'a' → logprob: -9.28446102142334
    5. '"' → logprob: -9.65946102142334
    6. ' '#'' → logprob: -9.78446102142334
    7. '("#' → logprob: -10.40946102142334
    8. '#' → logprob: -11.15946102142334
    9. '"a' → logprob: -11.15946102142334
    10. ' "#' → logprob: -11.15946102142334

Token 593: ' "#' (ID: 11351)
  Prédit: '"#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"#' → logprob: -0.33315959572792053
    2. '#' → logprob: -1.3331595659255981
    3. ''#' → logprob: -4.208159446716309
    4. ' "#"' → logprob: -6.083159446716309
    5. '"' → logprob: -7.083159446716309
    6. ' '#'' → logprob: -7.958159446716309
    7. 'a' → logprob: -8.208159446716309
    8. ' "#' → logprob: -8.708159446716309
    9. '#
' → logprob: -8.833159446716309
    10. ' #' → logprob: -8.958159446716309

Token 594: '"
' (ID: 1092)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04379546642303467
    2. ']
' → logprob: -4.168795585632324
    3. ' and' → logprob: -4.793795585632324
    4. ']+' → logprob: -5.668795585632324
    5. '1' → logprob: -6.293795585632324
    6. '+' → logprob: -6.293795585632324
    7. ' ]' → logprob: -6.418795585632324
    8. ' ' → logprob: -6.668795585632324
    9. ' if' → logprob: -6.918795585632324
    10. 'd' → logprob: -6.918795585632324

Token 595: '   ' (ID: 271)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.07994892448186874
    2. '[' → logprob: -2.704948902130127
    3. '
' → logprob: -5.454948902130127
    4. '   ' → logprob: -5.704948902130127
    5. '[
' → logprob: -6.954948902130127
    6. ' [-' → logprob: -8.704949378967285
    7. '-' → logprob: -8.829949378967285
    8. '[len' → logprob: -9.329949378967285
    9. '0' → logprob: -9.454949378967285
    10. '```' → logprob: -9.454949378967285

Token 596: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09121788293123245
    2. 'return' → logprob: -2.8412179946899414
    3. ' return' → logprob: -3.9662179946899414
    4. 'print' → logprob: -5.091217994689941
    5. '
' → logprob: -5.841217994689941
    6. ' print' → logprob: -8.091217994689941
    7. '    
' → logprob: -8.341217994689941
    8. '[' → logprob: -8.591217994689941
    9. '```' → logprob: -10.466217994689941
    10. '	return' → logprob: -11.341217994689941

Token 597: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14051984250545502
    2. 'return' → logprob: -2.140519857406616
    3. ' return' → logprob: -4.390519618988037
    4. 'print' → logprob: -7.390519618988037
    5. '[' → logprob: -8.765520095825195
    6. '
' → logprob: -8.890520095825195
    7. '[-' → logprob: -10.140520095825195
    8. '```' → logprob: -10.140520095825195
    9. '       ' → logprob: -10.640520095825195
    10. '    
' → logprob: -11.015520095825195

Token 598: ' le' (ID: 505)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.044673167169094086
    2. 'return' → logprob: -3.294673204421997
    3. ' print' → logprob: -5.544672966003418
    4. '   ' → logprob: -6.419672966003418
    5. ' return' → logprob: -6.919672966003418
    6. '
' → logprob: -10.669672966003418
    7. 'result' → logprob: -10.669672966003418
    8. 'd' → logprob: -11.669672966003418
    9. 'if' → logprob: -12.044672966003418
    10. 'a' → logprob: -12.044672966003418

Token 599: ' +' (ID: 659)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12905174493789673
    2. ' print' → logprob: -3.004051685333252
    3. 'return' → logprob: -3.129051685333252
    4. 'result' → logprob: -4.504051685333252
    5. ' return' → logprob: -5.129051685333252
    6. 'a' → logprob: -6.129051685333252
    7. ' result' → logprob: -6.504051685333252
    8. 'd' → logprob: -6.629051685333252
    9. '   ' → logprob: -6.879051685333252
    10. 'min' → logprob: -7.379051685333252

Token 600: '1' (ID: 16)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6628984212875366
    2. '1' → logprob: -1.0378984212875366
    3. '(' → logprob: -2.662898540496826
    4. '(d' → logprob: -3.662898540496826
    5. ' ' → logprob: -4.412898540496826
    6. '((' → logprob: -5.787898540496826
    7. ' d' → logprob: -5.912898540496826
    8. ' int' → logprob: -5.912898540496826
    9. ' ((' → logprob: -5.912898540496826
    10. '(int' → logprob: -6.412898540496826

Token 601: ' et' (ID: 859)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6299387812614441
    2. ' if' → logprob: -2.504938840866089
    3. ' +' → logprob: -2.629938840866089
    4. '   ' → logprob: -2.629938840866089
    5. ' d' → logprob: -2.879938840866089
    6. '+' → logprob: -3.004938840866089
    7. 'd' → logprob: -3.254938840866089
    8. 'if' → logprob: -4.50493860244751
    9. 'def' → logprob: -4.62993860244751
    10. ',' → logprob: -4.75493860244751

Token 602: ' la' (ID: 557)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5284380912780762
    2. '(' → logprob: -1.4034380912780762
    3. '(a' → logprob: -3.153438091278076
    4. 'int' → logprob: -3.903438091278076
    5. '1' → logprob: -4.153438091278076
    6. '(t' → logprob: -4.278438091278076
    7. ' int' → logprob: -4.403438091278076
    8. 'a' → logprob: -4.653438091278076
    9. 't' → logprob: -4.903438091278076
    10. '(d' → logprob: -5.153438091278076

Token 603: ' division' (ID: 21629)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5169516801834106
    2. '(' → logprob: -1.7669516801834106
    3. '((' → logprob: -3.391951560974121
    4. '(t' → logprob: -3.391951560974121
    5. '(a' → logprob: -3.391951560974121
    6. '(d' → logprob: -3.766951560974121
    7. '1' → logprob: -4.016951560974121
    8. '(len' → logprob: -4.141951560974121
    9. ' ((' → logprob: -4.766951560974121
    10. 't' → logprob: -5.016951560974121

Token 604: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.5079731941223145
    2. 'par' → logprob: -1.6329731941223145
    3. ' by' → logprob: -3.5079731941223145
    4. '   ' → logprob: -3.6329731941223145
    5. 'd' → logprob: -4.0079731941223145
    6. ' de' → logprob: -4.3829731941223145
    7. ' //' → logprob: -4.3829731941223145
    8. 'e' → logprob: -4.5079731941223145
    9. '//' → logprob: -4.6329731941223145
    10. '_par' → logprob: -4.6329731941223145

Token 605: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.003608386032283306
    2. ' ' → logprob: -5.628608226776123
    3. '   ' → logprob: -12.503608703613281
    4. '```' → logprob: -12.628608703613281
    5. '
' → logprob: -14.503608703613281
    6. ' ' → logprob: -15.128608703613281
    7. '`' → logprob: -16.37860870361328
    8. '1' → logprob: -16.37860870361328
    9. '    ' → logprob: -16.50360870361328
    10. '  ' → logprob: -17.00360870361328

Token 606: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00018887832993641496
    2. '   ' → logprob: -9.250188827514648
    3. ' ' → logprob: -9.375188827514648
    4. '```' → logprob: -12.250188827514648
    5. '
' → logprob: -13.500188827514648
    6. '1' → logprob: -14.875188827514648
    7. '  ' → logprob: -15.000188827514648
    8. '           ' → logprob: -15.625188827514648
    9. '       ' → logprob: -15.875188827514648
    10. '    ' → logprob: -15.875188827514648

Token 607: ' normal' (ID: 6078)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.822513222694397
    2. 'd' → logprob: -1.947513222694397
    3. 'return' → logprob: -2.1975131034851074
    4. ' d' → logprob: -2.5725131034851074
    5. ')' → logprob: -2.9475131034851074
    6. '
' → logprob: -3.3225131034851074
    7. ' return' → logprob: -3.6975131034851074
    8. ' =' → logprob: -3.6975131034851074
    9. '[-' → logprob: -3.8225131034851074
    10. 'def' → logprob: -4.072513103485107

Token 608: 'isent' (ID: 68781)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2521510124206543
    2. 'isé' → logprob: -1.6271510124206543
    3. 'ise' → logprob: -2.3771510124206543
    4. '//' → logprob: -2.8771510124206543
    5. 'd' → logprob: -3.1271510124206543
    6. ' d' → logprob: -3.2521510124206543
    7. ')' → logprob: -3.3771510124206543
    8. 'ize' → logprob: -3.5021510124206543
    9. '   ' → logprob: -3.6271510124206543
    10. 'isée' → logprob: -3.7521510124206543

Token 609: ' le' (ID: 505)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.2138537168502808
    2. '   ' → logprob: -1.8388537168502808
    3. ' d' → logprob: -2.2138538360595703
    4. ' ((' → logprob: -2.2138538360595703
    5. '2' → logprob: -2.5888538360595703
    6. ')' → logprob: -2.9638538360595703
    7. '1' → logprob: -3.0888538360595703
    8. '((' → logprob: -3.0888538360595703
    9. 'd' → logprob: -3.5888538360595703
    10. ' (
' → logprob: -4.08885383605957

Token 610: ' nombre' (ID: 9733)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.795787513256073
    2. 'nombre' → logprob: -1.0457875728607178
    3. ' nombre' → logprob: -2.4207875728607178
    4. 'd' → logprob: -3.2957875728607178
    5. ' (' → logprob: -3.5457875728607178
    6. '(min' → logprob: -4.795787334442139
    7. ' d' → logprob: -5.045787334442139
    8. 'result' → logprob: -5.420787334442139
    9. 'total' → logprob: -5.670787334442139
    10. 'min' → logprob: -6.045787334442139

Token 611: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4843502938747406
    2. '[-' → logprob: -1.109350323677063
    3. 'd' → logprob: -4.484350204467773
    4. ' d' → logprob: -4.984350204467773
    5. ')' → logprob: -5.359350204467773
    6. '
' → logprob: -5.484350204467773
    7. '(d' → logprob: -5.734350204467773
    8. ' ' → logprob: -5.859350204467773
    9. '[' → logprob: -5.984350204467773
    10. '(' → logprob: -6.359350204467773

Token 612: ' changements' (ID: 105486)
  Prédit: 'traits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'traits' → logprob: -0.6419520974159241
    2. '2' → logprob: -1.0169520378112793
    3. ' traits' → logprob: -2.6419520378112793
    4. ' ' → logprob: -3.8919520378112793
    5. '1' → logprob: -5.016952037811279
    6. ' strokes' → logprob: -5.141952037811279
    7. 'trait' → logprob: -6.391952037811279
    8. '```' → logprob: -6.766952037811279
    9. '(' → logprob: -7.141952037811279
    10. 'tr' → logprob: -7.391952037811279

Token 613: '
' (ID: 198)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.0476768016815186
    2. '   ' → logprob: -1.1726768016815186
    3. '
' → logprob: -1.6726768016815186
    4. ' return' → logprob: -1.9226768016815186
    5. '    
' → logprob: -6.297677040100098
    6. '\n' → logprob: -7.297677040100098
    7. '	return' → logprob: -7.672677040100098
    8. 'result' → logprob: -8.047677040100098
    9. '  
' → logprob: -8.047677040100098
    10. ' ' → logprob: -8.422677040100098

Token 614: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.035615600645542145
    2. 'return' → logprob: -3.7856156826019287
    3. ' return' → logprob: -4.41061544418335
    4. '```' → logprob: -9.660615921020508
    5. '    
' → logprob: -10.410615921020508
    6. '
' → logprob: -10.910615921020508
    7. '	return' → logprob: -12.160615921020508
    8. 'print' → logprob: -12.285615921020508
    9. '       ' → logprob: -12.285615921020508
    10. '_return' → logprob: -13.035615921020508

Token 615: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006352719850838184
    2. 'return' → logprob: -5.38135290145874
    3. ' return' → logprob: -7.00635290145874
    4. '```' → logprob: -8.506352424621582
    5. '    
' → logprob: -9.006352424621582
    6. '\n' → logprob: -9.256352424621582
    7. '
' → logprob: -9.381352424621582
    8. '\' → logprob: -9.631352424621582
    9. '[' → logprob: -9.756352424621582
    10. 'd' → logprob: -9.756352424621582

Token 616: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.05623526871204376
    2. '(' → logprob: -2.9312353134155273
    3. ' (' → logprob: -7.306235313415527
    4. ' ((' → logprob: -8.181235313415527
    5. '(d' → logprob: -8.556235313415527
    6. '(((' → logprob: -8.681235313415527
    7. '(int' → logprob: -10.806235313415527
    8. '(max' → logprob: -11.931235313415527
    9. '(round' → logprob: -12.306235313415527
    10. '   ' → logprob: -13.556235313415527

Token 617: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0028536133468151093
    2. '(d' → logprob: -6.1278533935546875
    3. 'min' → logprob: -7.6278533935546875
    4. '(min' → logprob: -9.127853393554688
    5. 'max' → logprob: -9.877853393554688
    6. ' d' → logprob: -11.877853393554688
    7. '(max' → logprob: -12.252853393554688
    8. '(' → logprob: -12.502853393554688
    9. '((' → logprob: -13.252853393554688
    10. '   ' → logprob: -13.502853393554688

Token 618: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0031803252641111612
    2. '[w' → logprob: -5.753180503845215
    3. 'w' → logprob: -13.878180503845215
    4. '[' → logprob: -13.878180503845215
    5. '[:-' → logprob: -15.128180503845215
    6. '[len' → logprob: -16.0031795501709
    7. ' [-' → logprob: -16.0031795501709
    8. '-' → logprob: -17.1281795501709
    9. '
' → logprob: -17.2531795501709
    10. '][-' → logprob: -17.2531795501709

Token 619: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.029752571135759354
    2. '1' → logprob: -3.529752492904663
    3. '3' → logprob: -13.529752731323242
    4. '   ' → logprob: -15.404752731323242
    5. ' ' → logprob: -15.592252731323242
    6. '```' → logprob: -17.029752731323242
    7. '(' → logprob: -17.154752731323242
    8. '
' → logprob: -17.279752731323242
    9. '4' → logprob: -17.404752731323242
    10. '  ' → logprob: -17.654752731323242

Token 620: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09905953705310822
    2. ']+' → logprob: -2.849059581756592
    3. '+' → logprob: -3.349059581756592
    4. ' +' → logprob: -7.099059581756592
    5. ' ]' → logprob: -8.099059104919434
    6. ')' → logprob: -9.224059104919434
    7. '])' → logprob: -11.224059104919434
    8. ')+' → logprob: -11.224059104919434
    9. '+]' → logprob: -11.599059104919434
    10. '//' → logprob: -11.599059104919434

Token 621: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.023262832313776016
    2. ' +' → logprob: -3.7732627391815186
    3. '//' → logprob: -11.648262977600098
    4. '+
' → logprob: -12.648262977600098
    5. '   ' → logprob: -13.273262977600098
    6. ' ' → logprob: -13.523262977600098
    7. ' //' → logprob: -13.523262977600098
    8. ')' → logprob: -15.398262977600098
    9. ' +
' → logprob: -15.523262977600098
    10. '  ' → logprob: -16.02326202392578

Token 622: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.05068810656666756
    2. ' (' → logprob: -3.6756880283355713
    3. '1' → logprob: -4.05068826675415
    4. 'int' → logprob: -5.42568826675415
    5. '(' → logprob: -6.67568826675415
    6. 'a' → logprob: -7.42568826675415
    7. ' int' → logprob: -8.550687789916992
    8. '((' → logprob: -9.550687789916992
    9. '(int' → logprob: -10.050687789916992
    10. ' ' → logprob: -10.175687789916992

Token 623: 'a' (ID: 64)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5488911271095276
    2. 'a' → logprob: -0.9238911271095276
    3. '(a' → logprob: -3.798891067504883
    4. ' a' → logprob: -6.673891067504883
    5. 'int' → logprob: -7.173891067504883
    6. ' ' → logprob: -7.798891067504883
    7. ' (' → logprob: -8.173891067504883
    8. '(' → logprob: -8.798891067504883
    9. '0' → logprob: -9.923891067504883
    10. '   ' → logprob: -10.048891067504883

Token 624: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.09016335755586624
    2. ' ==' → logprob: -2.465163469314575
    3. '=="' → logprob: -7.465163230895996
    4. '=='' → logprob: -7.715163230895996
    5. '=' → logprob: -9.465163230895996
    6. '#' → logprob: -9.840163230895996
    7. '==
' → logprob: -10.215163230895996
    8. ' ' → logprob: -11.465163230895996
    9. ')' → logprob: -11.965163230895996
    10. ' ' → logprob: -12.840163230895996

Token 625: ' "#' (ID: 11351)
  Prédit: '"#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"#' → logprob: -0.0025898118037730455
    2. ''#' → logprob: -6.252589702606201
    3. ' "#' → logprob: -7.377589702606201
    4. '"' → logprob: -10.87759017944336
    5. ' '#' → logprob: -11.37759017944336
    6. ' "#"' → logprob: -12.87759017944336
    7. '("#' → logprob: -13.00259017944336
    8. '   ' → logprob: -15.62759017944336
    9. '('#' → logprob: -16.12759017944336
    10. ' ' → logprob: -16.25259017944336

Token 626: '")' (ID: 1405)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7075269818305969
    2. '")' → logprob: -0.9575269818305969
    3. '))' → logprob: -2.582526922225952
    4. '"))' → logprob: -3.082526922225952
    5. ')")' → logprob: -7.457527160644531
    6. '"' → logprob: -7.957527160644531
    7. '1' → logprob: -8.082527160644531
    8. ')))' → logprob: -8.332527160644531
    9. '))*' → logprob: -9.832527160644531
    10. ' )' → logprob: -9.957527160644531

Token 627: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4009295105934143
    2. ' +' → logprob: -1.1509294509887695
    3. ')' → logprob: -4.2759294509887695
    4. '   ' → logprob: -10.90092945098877
    5. ' )' → logprob: -11.15092945098877
    6. ' ' → logprob: -11.15092945098877
    7. ')//' → logprob: -12.02592945098877
    8. ')+' → logprob: -12.27592945098877
    9. '  ' → logprob: -13.77592945098877
    10. '//' → logprob: -15.40092945098877

Token 628: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002326224057469517
    2. ' ' → logprob: -8.375232696533203
    3. '   ' → logprob: -13.375232696533203
    4. '  ' → logprob: -14.750232696533203
    5. '2' → logprob: -17.125232696533203
    6. '    ' → logprob: -17.500232696533203
    7. '(' → logprob: -17.875232696533203
    8. '+' → logprob: -17.875232696533203
    9. '     ' → logprob: -17.875232696533203
    10. '0' → logprob: -18.000232696533203

Token 629: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.751746746478602e-05
    2. ' ' → logprob: -10.00004768371582
    3. '   ' → logprob: -13.62504768371582
    4. '  ' → logprob: -14.37504768371582
    5. '2' → logprob: -16.25004768371582
    6. '+' → logprob: -16.25004768371582
    7. '0' → logprob: -17.12504768371582
    8. '    ' → logprob: -17.50004768371582
    9. '     ' → logprob: -17.75004768371582
    10. ')' → logprob: -17.93754768371582

Token 630: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018337000161409378
    2. ')//' → logprob: -4.018336772918701
    3. ' )' → logprob: -8.64333724975586
    4. ')>>' → logprob: -11.64333724975586
    5. '//' → logprob: -13.26833724975586
    6. ')
' → logprob: -15.76833724975586
    7. '   ' → logprob: -16.26833724975586
    8. ' ' → logprob: -17.14333724975586
    9. '>>' → logprob: -17.51833724975586
    10. '))' → logprob: -18.01833724975586

Token 631: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.028415309265255928
    2. ')//' → logprob: -3.7784152030944824
    3. '//' → logprob: -5.403415203094482
    4. ' )' → logprob: -7.528415203094482
    5. ' //' → logprob: -9.77841567993164
    6. '>>' → logprob: -10.27841567993164
    7. '   ' → logprob: -11.40341567993164
    8. ')>>' → logprob: -11.90341567993164
    9. ' ' → logprob: -12.40341567993164
    10. '```' → logprob: -13.27841567993164

Token 632: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -19.875001907348633
    4. '```' → logprob: -20.250001907348633
    5. '۲' → logprob: -21.500001907348633
    6. '２' → logprob: -22.125001907348633
    7. '  ' → logprob: -22.625001907348633
    8. '
' → logprob: -23.625001907348633
    9. ' ' → logprob: -23.750001907348633
    10. '﻿' → logprob: -23.750001907348633

Token 633: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '   ' → logprob: -19.5
    4. '1' → logprob: -19.625
    5. '```' → logprob: -19.875
    6. '۲' → logprob: -20.0
    7. '２' → logprob: -20.5
    8. '  ' → logprob: -21.75
    9. '﻿' → logprob: -22.0
    10. '٢' → logprob: -22.0

Token 634: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ')
' → logprob: -14.625000953674316
    3. '))' → logprob: -15.500000953674316
    4. ' )' → logprob: -15.875000953674316
    5. '   ' → logprob: -16.250001907348633
    6. ')`' → logprob: -16.750001907348633
    7. '`)' → logprob: -17.250001907348633
    8. '')' → logprob: -18.250001907348633
    9. '})' → logprob: -18.250001907348633
    10. '}' → logprob: -18.250001907348633

Token 635: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 636: ' L' (ID: 451)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 637: 'ancer' (ID: 13358)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7307708263397217
    2. '#' → logprob: -1.8557708263397217
    3. 'e' → logprob: -2.3557708263397217
    4. ')' → logprob: -2.4807708263397217
    5. 'm' → logprob: -2.7307708263397217
    6. 'a' → logprob: -3.1057708263397217
    7. 'min' → logprob: -3.3557708263397217
    8. 'im' → logprob: -4.730771064758301
    9. 'ine' → logprob: -4.980771064758301
    10. '(' → logprob: -5.730771064758301

Token 638: ' la' (ID: 557)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0011335473973304033
    2. '()' → logprob: -7.876133441925049
    3. '(min' → logprob: -7.876133441925049
    4. '(' → logprob: -8.251133918762207
    5. '_min' → logprob: -9.876133918762207
    6. ' min' → logprob: -10.251133918762207
    7. 'm' → logprob: -11.376133918762207
    8. 'def' → logprob: -11.376133918762207
    9. '_' → logprob: -13.876133918762207
    10. '(
' → logprob: -14.501133918762207

Token 639: ' fonction' (ID: 17610)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.9361264946837764e-07
    2. ' min' → logprob: -16.5
    3. 'def' → logprob: -18.25
    4. 'mini' → logprob: -20.375
    5. 'm' → logprob: -21.25
    6. 'minimum' → logprob: -21.375
    7. 'if' → logprob: -21.875
    8. 'main' → logprob: -22.0
    9. '_min' → logprob: -22.625
    10. '[min' → logprob: -23.125

Token 640: ' principale' (ID: 68926)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -9.17420256882906e-05
    2. '()
' → logprob: -10.000091552734375
    3. '(min' → logprob: -10.375091552734375
    4. '
' → logprob: -11.250091552734375
    5. ' min' → logprob: -13.750091552734375
    6. '```' → logprob: -15.250091552734375
    7. '()' → logprob: -15.500091552734375
    8. '_min' → logprob: -15.625091552734375
    9. '(
' → logprob: -15.625091552734375
    10. 'def' → logprob: -16.125091552734375

Token 641: '
' (ID: 198)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.3902033970225602e-05
    2. ' min' → logprob: -12.125014305114746
    3. '```' → logprob: -12.750014305114746
    4. '(min' → logprob: -12.875014305114746
    5. '
' → logprob: -13.000014305114746
    6. '_min' → logprob: -14.750014305114746
    7. '	min' → logprob: -16.25001335144043
    8. '[min' → logprob: -16.62501335144043
    9. '.min' → logprob: -17.00001335144043
    10. 'if' → logprob: -17.12501335144043

Token 642: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: 0.0
    2. ' min' → logprob: -17.25
    3. '```' → logprob: -21.25
    4. '(min' → logprob: -21.375
    5. 'def' → logprob: -21.75
    6. '_min' → logprob: -22.625
    7. '[min' → logprob: -23.0
    8. '	min' → logprob: -23.125
    9. 'mini' → logprob: -23.375
    10. 'm' → logprob: -25.125

Token 643: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -0.0003035266126971692
    2. '_' → logprob: -8.125303268432617
    3. '_s' → logprob: -12.000303268432617
    4. '_sta' → logprob: -15.000303268432617
    5. '_str' → logprob: -15.125303268432617
    6. 'st' → logprob: -15.250303268432617
    7. '_ST' → logprob: -15.500303268432617
    8. ' _' → logprob: -16.875303268432617
    9. '```' → logprob: -17.625303268432617
    10. '_sp' → logprob: -17.875303268432617

Token 644: 'roke' (ID: 11472)
  Prédit: 'roke'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'roke' → logprob: -0.00015229015843942761
    2. 'stroke' → logprob: -9.625152587890625
    3. 'r' → logprob: -10.125152587890625
    4. 'rokes' → logprob: -10.875152587890625
    5. 'ro' → logprob: -11.000152587890625
    6. '_' → logprob: -12.625152587890625
    7. 'rok' → logprob: -13.000152587890625
    8. '_st' → logprob: -13.750152587890625
    9. '_ro' → logprob: -13.875152587890625
    10. 'oke' → logprob: -14.250152587890625

Token 645: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -9.372294698550832e-06
    2. '_' → logprob: -12.500009536743164
    3. '_pat' → logprob: -13.000009536743164
    4. 'path' → logprob: -13.125009536743164
    5. '_p' → logprob: -14.000009536743164
    6. '()' → logprob: -15.625009536743164
    7. '_pa' → logprob: -16.250009536743164
    8. '_paths' → logprob: -16.875009536743164
    9. ')_' → logprob: -17.250009536743164
    10. 'Path' → logprob: -17.500009536743164

Token 646: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04302351549267769
    2. '(' → logprob: -3.1680235862731934
    3. '()`' → logprob: -12.418023109436035
    4. '()]' → logprob: -12.918023109436035
    5. '#' → logprob: -13.043023109436035
    6. '()>' → logprob: -13.168023109436035
    7. ' ()' → logprob: -13.293023109436035
    8. '(
' → logprob: -13.668023109436035
    9. '()
' → logprob: -13.918023109436035
    10. '`()' → logprob: -13.918023109436035


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 644
Tokens correctement prédits (1ère position, stricte): 167
Tokens correctement prédits (1ère position, avec adaptation): 169
Tokens correctement prédits (top 10): 389
Précision stricte (1ère position): 25.93%
Précision adaptée (1ère position): 26.24%
Précision (top 10): 60.40%
================================================================================
