================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:04:28
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def read_input():
    return map(int, input().split())

def get_mod():
    return 10 ** 9 + 7

def create_modint_class(MOD):
    class ModInt:
        def __init__(self, x):
            self.x = x % MOD

        def __str__(self):
            return str(self.x)

        def __repr__(self):
            return str(self.x)

        def __add__(self, other):
            return (
                ModInt(self.x + other.x) if isinstance(other, ModInt) else
                ModInt(self.x + other)
            )

        def __sub__(self, other):
            return (
                ModInt(self.x - other.x) if isinstance(other, ModInt) else
                ModInt(self.x - other)
            )

        def __mul__(self, other):
            return (
                ModInt(self.x * other.x) if isinstance(other, ModInt) else
                ModInt(self.x * other)
            )

        def __truediv__(self, other):
            return (
                ModInt(
                    self.x * pow(other.x, MOD - 2, MOD)
                ) if isinstance(other, ModInt) else
                ModInt(self.x * pow(other, MOD - 2, MOD))
            )

        def __pow__(self, other):
            return (
                ModInt(pow(self.x, other.x, MOD)) if isinstance(other, ModInt) else
                ModInt(pow(self.x, other, MOD))
            )

        __radd__ = __add__
        __rsub__ = __sub__
        __rmul__ = __mul__
        __rtruediv__ = __truediv__
        __rpow__ = __pow__
    return ModInt

def make_zero(ModInt):
    return ModInt(0)

def make_one(ModInt):
    return ModInt(1)

def get_half(ModInt):
    return ModInt(2)

def get_power_two(ModInt, i):
    return ModInt(2) ** i

def process_cp(i, B, cp, ModInt):
    if i < B:
        return ModInt(0)
    elif i == B:
        return ModInt(1)
    else:
        return cp * (i - 1) / (i - B)

def update_p(i, B, p, cp, ModInt):
    if i < B:
        return ModInt(0)
    elif i == B:
        return ModInt(1) / get_power_two(ModInt, i)
    else:
        return p + cp / get_power_two(ModInt, i)

def process_cq(i, W, cq, ModInt):
    if i < W:
        return ModInt(0)
    elif i == W:
        return ModInt(1)
    else:
        return cq * (i - 1) / (i - W)

def update_q(i, W, q, cq, ModInt):
    if i < W:
        return ModInt(0)
    elif i == W:
        return ModInt(1) / get_power_two(ModInt, i)
    else:
        return q + cq / get_power_two(ModInt, i)

def calc_ans(p, q, ModInt):
    numerator = ModInt(1) + q - p
    denominator = get_half(ModInt)
    return numerator / denominator

def print_ans(ans):
    print(ans)

def process_loop(B, W, ModInt):
    p = make_zero(ModInt)
    q = make_zero(ModInt)
    cp = make_zero(ModInt)
    cq = make_zero(ModInt)
    for i in range(1, B + W + 1):
        ans = calc_ans(p, q, ModInt)
        print_ans(ans)
        cp = process_cp(i, B, cp, ModInt)
        p = update_p(i, B, p, cp, ModInt)
        cq = process_cq(i, W, cq, ModInt)
        q = update_q(i, W, q, cq, ModInt)

def main():
    B, W = read_input()
    MOD = get_mod()
    ModInt = create_modint_class(MOD)
    process_loop(B, W, ModInt)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' read' (ID: 1729)
  → Token d'amorce (pas de prédiction)

Token 2: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0021150470711290836
    2. '_' → logprob: -7.002115249633789
    3. '():' → logprob: -7.377115249633789
    4. '(:' → logprob: -8.502115249633789
    5. '```' → logprob: -8.877115249633789
    6. '(_:' → logprob: -9.502115249633789
    7. ':' → logprob: -9.752115249633789
    8. ' (' → logprob: -10.127115249633789
    9. '(_' → logprob: -11.002115249633789
    10. '()' → logprob: -12.627115249633789

Token 4: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9878255724906921
    2. '\' → logprob: -1.237825632095337
    3. '\n' → logprob: -1.362825632095337
    4. '   ' → logprob: -3.112825632095337
    5. '    
' → logprob: -4.987825393676758
    6. '
' → logprob: -5.112825393676758
    7. ' 
' → logprob: -5.612825393676758
    8. '``' → logprob: -5.862825393676758
    9. ':' → logprob: -6.112825393676758
    10. ''\' → logprob: -6.612825393676758

Token 5: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44253385066986084
    2. '```' → logprob: -2.0675339698791504
    3. 'return' (adapté à ' return') → logprob: -2.6925339698791504
    4. '    ' → logprob: -3.3175339698791504
    5. 'input' → logprob: -3.5675339698791504
    6. 'r' → logprob: -3.5675339698791504
    7. '\' → logprob: -4.19253396987915
    8. 'x' → logprob: -4.31753396987915
    9. '       ' → logprob: -4.69253396987915
    10. '`' → logprob: -5.19253396987915

Token 6: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21319261193275452
    2. ' input' → logprob: -2.2131927013397217
    3. 'input' → logprob: -3.0881927013397217
    4. '"' → logprob: -3.4631927013397217
    5. ''' → logprob: -5.588192462921143
    6. ' []' → logprob: -7.588192462921143
    7. '  ' → logprob: -7.963192462921143
    8. ' "' → logprob: -8.5881929397583
    9. ' None' → logprob: -9.0881929397583
    10. '(input' → logprob: -9.2131929397583

Token 7: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.029339861124753952
    2. '(lambda' → logprob: -3.7793397903442383
    3. ' (' → logprob: -6.404339790344238
    4. '<|end|>' → logprob: -6.529339790344238
    5. '(int' → logprob: -7.154339790344238
    6. '(str' → logprob: -7.529339790344238
    7. '```' → logprob: -8.654339790344238
    8. '(func' → logprob: -8.779339790344238
    9. '(user' → logprob: -9.029339790344238
    10. '(None' → logprob: -9.279339790344238

Token 8: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4694253206253052
    2. '(input' → logprob: -1.5944253206253052
    3. '(' → logprob: -1.8444253206253052
    4. '<|end|>' → logprob: -5.719425201416016
    5. '```' → logprob: -6.969425201416016
    6. 'input' → logprob: -7.219425201416016
    7. '(user' → logprob: -7.344425201416016
    8. '(
' → logprob: -7.469425201416016
    9. ' input' → logprob: -7.594425201416016
    10. '`)' → logprob: -7.719425201416016

Token 9: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.38696393370628357
    2. 'input' → logprob: -1.136963963508606
    3. '(input' → logprob: -9.511963844299316
    4. ')' → logprob: -11.636963844299316
    5. '=input' → logprob: -13.636963844299316
    6. '	input' → logprob: -13.636963844299316
    7. '[input' → logprob: -13.636963844299316
    8. ' iter' → logprob: -13.886963844299316
    9. '<|end|>' → logprob: -13.886963844299316
    10. ',input' → logprob: -14.261963844299316

Token 10: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.147054523229599
    2. '()' → logprob: -2.022054433822632
    3. ')' → logprob: -6.897054672241211
    4. '()))' → logprob: -6.897054672241211
    5. '(' → logprob: -7.397054672241211
    6. '(()' → logprob: -7.522054672241211
    7. ' ())' → logprob: -7.522054672241211
    8. '`()' → logprob: -8.772054672241211
    9. '());' → logprob: -9.147054672241211
    10. '('' → logprob: -9.772054672241211

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0009138475870713592
    2. 'strip' → logprob: -7.000913619995117
    3. 'rstrip' → logprob: -13.500913619995117
    4. ' split' → logprob: -14.125913619995117
    5. '(split' → logprob: -15.875913619995117
    6. 'read' → logprob: -16.625913619995117
    7. ')' → logprob: -18.875913619995117
    8. 'spl' → logprob: -19.125913619995117
    9. '().' → logprob: -19.500913619995117
    10. '```' → logprob: -20.500913619995117

Token 12: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.20252661406993866
    2. '()))' → logprob: -1.702526569366455
    3. '()' → logprob: -7.202526569366455
    4. ')' → logprob: -8.827527046203613
    5. '))' → logprob: -8.827527046203613
    6. '(' → logprob: -10.952527046203613
    7. ' ())' → logprob: -11.452527046203613
    8. '())
' → logprob: -11.577527046203613
    9. '()))
' → logprob: -11.702527046203613
    10. '())))' → logprob: -11.702527046203613

Token 13: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7716615796089172
    2. '(' → logprob: -2.5216615200042725
    3. 'def' → logprob: -2.5216615200042725
    4. '\n' → logprob: -2.5216615200042725
    5. '```' → logprob: -2.7716615200042725
    6. '\' → logprob: -3.2716615200042725
    7. 'd' → logprob: -3.2716615200042725
    8. 'x' → logprob: -3.3966615200042725
    9. 'n' → logprob: -3.5216615200042725
    10. ')' → logprob: -4.146661758422852

Token 14: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.5206611156463623
    2. ' solve' → logprob: -1.2706611156463623
    3. ' process' → logprob: -2.6456611156463623
    4. ' calculate' → logprob: -3.6456611156463623
    5. ' write' → logprob: -5.020661354064941
    6. ' compute' → logprob: -5.645661354064941
    7. ' factorial' → logprob: -5.645661354064941
    8. 'solve' → logprob: -5.770661354064941
    9. ' sum' → logprob: -6.020661354064941
    10. ' read' → logprob: -6.145661354064941

Token 15: '_mod' (ID: 15325)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.08837590366601944
    2. '_' → logprob: -3.8383758068084717
    3. '_sum' → logprob: -4.213376045227051
    4. '_div' → logprob: -4.588376045227051
    5. '_f' → logprob: -5.338376045227051
    6. '_prime' → logprob: -5.338376045227051
    7. '_pr' → logprob: -5.588376045227051
    8. '_factor' → logprob: -5.588376045227051
    9. '_average' → logprob: -5.838376045227051
    10. '_l' → logprob: -6.088376045227051

Token 16: '():
' (ID: 8595)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.196014642715454
    2. 'ule' → logprob: -1.571014642715454
    3. '_value' → logprob: -1.571014642715454
    4. 'ifier' → logprob: -2.196014642715454
    5. 'ulus' → logprob: -2.946014642715454
    6. '_factor' → logprob: -4.446014404296875
    7. 'ular' → logprob: -4.571014404296875
    8. '(' → logprob: -4.571014404296875
    9. 'ulo' → logprob: -4.821014404296875
    10. '_operator' → logprob: -4.821014404296875

Token 17: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013001157902181149
    2. '(' → logprob: -4.638000965118408
    3. '    ' → logprob: -6.888000965118408
    4. ' return' → logprob: -7.138000965118408
    5. ' (' → logprob: -7.638000965118408
    6. '()' → logprob: -8.388001441955566
    7. 'return' → logprob: -9.013001441955566
    8. '_' → logprob: -9.138001441955566
    9. 'def' → logprob: -9.263001441955566
    10. '():' → logprob: -9.388001441955566

Token 18: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.7445623874664307
    2. '   ' → logprob: -1.1195623874664307
    3. ' return' → logprob: -1.6195623874664307
    4. 'r' → logprob: -8.369562149047852
    5. ' ' → logprob: -8.619562149047852
    6. 'input' → logprob: -9.744562149047852
    7. '    ' → logprob: -9.994562149047852
    8. '```' → logprob: -10.994562149047852
    9. ' r' → logprob: -11.244562149047852
    10. '  ' → logprob: -11.369562149047852

Token 19: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24168848991394043
    2. ' int' → logprob: -2.6166884899139404
    3. 'int' → logprob: -2.8666884899139404
    4. '10' → logprob: -2.9916884899139404
    5. '100' → logprob: -5.1166887283325195
    6. '32' → logprob: -5.1166887283325195
    7. '(int' → logprob: -5.4916887283325195
    8. '0' → logprob: -6.3666887283325195
    9. '(' → logprob: -6.7416887283325195
    10. '1' → logprob: -6.7416887283325195

Token 20: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.43987902998924255
    2. 'int' → logprob: -1.439879059791565
    3. '100' → logprob: -2.3148789405822754
    4. '(int' → logprob: -4.814878940582275
    5. '(' → logprob: -5.564878940582275
    6. '256' → logprob: -6.939878940582275
    7. '%' → logprob: -6.939878940582275
    8. '42' → logprob: -7.064878940582275
    9. 'input' → logprob: -7.064878940582275
    10. '102' → logprob: -7.189878940582275

Token 21: ' **' (ID: 6240)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004051329102367163
    2. '6' → logprob: -6.004051208496094
    3. '**' → logprob: -6.629051208496094
    4. '7' → logprob: -9.254051208496094
    5. '4' → logprob: -9.879051208496094
    6. '5' → logprob: -10.754051208496094
    7. '^' → logprob: -11.004051208496094
    8. ')' → logprob: -11.004051208496094
    9. '1' → logprob: -11.129051208496094
    10. '2' → logprob: -11.379051208496094

Token 22: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '```' → logprob: -17.875
    3. ' ' → logprob: -18.125
    4. '09' → logprob: -18.375
    5. '   ' → logprob: -19.25
    6. '6' → logprob: -19.5
    7. '10' → logprob: -20.5
    8. '8' → logprob: -20.625
    9. '**' → logprob: -21.0
    10. '18' → logprob: -21.375

Token 23: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.375
    3. '8' → logprob: -17.5
    4. '6' → logprob: -18.125
    5. '09' → logprob: -18.875
    6. ' ' → logprob: -19.125
    7. '``' → logprob: -19.25
    8. '   ' → logprob: -19.625
    9. '18' → logprob: -20.0
    10. '7' → logprob: -20.5

Token 24: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0008112939540296793
    2. ' +' → logprob: -7.1258111000061035
    3. '+
' → logprob: -12.875811576843262
    4. '7' → logprob: -13.250811576843262
    5. '+

' → logprob: -13.750811576843262
    6. '+</' → logprob: -15.500811576843262
    7. ' plus' → logprob: -15.750811576843262
    8. ' +
' → logprob: -15.750811576843262
    9. '```' → logprob: -15.875811576843262
    10. '＋' → logprob: -15.875811576843262

Token 25: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.500000953674316
    3. '+' → logprob: -15.875000953674316
    4. '```' → logprob: -17.75
    5. '   ' → logprob: -18.625
    6. '9' → logprob: -19.875
    7. '_' → logprob: -21.0
    8. '1' → logprob: -21.0625
    9. '    ' → logprob: -21.6875
    10. '3' → logprob: -21.6875

Token 26: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -19.375
    3. '```' → logprob: -20.125
    4. ' ' → logprob: -20.25
    5. '   ' → logprob: -21.25
    6. '

' → logprob: -22.4375
    7. '７' → logprob: -22.9375
    8. '9' → logprob: -22.9375
    9. '07' → logprob: -22.9375
    10. '۷' → logprob: -23.375

Token 27: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.4443122446537018
    2. '
' → logprob: -1.0693122148513794
    3. '\n' → logprob: -5.19431209564209
    4. 'def' → logprob: -5.31931209564209
    5. '\' → logprob: -6.56931209564209
    6. '```' → logprob: -7.19431209564209
    7. '' → logprob: -7.31931209564209
    8. '#' → logprob: -7.56931209564209
    9. '
' → logprob: -7.81931209564209
    10. '<|end|>' → logprob: -8.44431209564209

Token 28: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.34938767552375793
    2. 'd' → logprob: -1.2243876457214355
    3. '\' → logprob: -7.8493876457214355
    4. 'de' → logprob: -8.599388122558594
    5. '#' → logprob: -8.849388122558594
    6. 'class' → logprob: -9.849388122558594
    7. '```' → logprob: -9.974388122558594
    8. 'n' → logprob: -10.599388122558594
    9. 'a' → logprob: -10.724388122558594
    10. '
' → logprob: -10.849388122558594

Token 29: ' create' (ID: 2501)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.8637818098068237
    2. ' main' → logprob: -0.9887818098068237
    3. ' factorial' → logprob: -1.8637818098068237
    4. ' compute' → logprob: -4.113781929016113
    5. ' calculate' → logprob: -4.738781929016113
    6. ' pow' → logprob: -4.988781929016113
    7. ' fibonacci' → logprob: -5.238781929016113
    8. ' get' → logprob: -5.738781929016113
    9. ' gcd' → logprob: -5.863781929016113
    10. 'solve' → logprob: -6.613781929016113

Token 30: '_mod' (ID: 15325)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2260638177394867
    2. '_array' → logprob: -1.726063847541809
    3. '_list' → logprob: -5.1010637283325195
    4. '_matrix' → logprob: -5.4760637283325195
    5. '_table' → logprob: -6.8510637283325195
    6. '_stack' → logprob: -7.1010637283325195
    7. '_vector' → logprob: -7.3510637283325195
    8. '_cube' → logprob: -7.3510637283325195
    9. '_s' → logprob: -7.4760637283325195
    10. '_layer' → logprob: -7.6010637283325195

Token 31: 'int' (ID: 491)
  Prédit: '_array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.5872492790222168
    2. '_' → logprob: -1.2122492790222168
    3. 'ular' → logprob: -3.712249279022217
    4. '_factor' → logprob: -4.087249279022217
    5. '_vector' → logprob: -4.087249279022217
    6. '_matrix' → logprob: -4.587249279022217
    7. 'ule' → logprob: -4.837249279022217
    8. '_operator' → logprob: -4.962249279022217
    9. '_counter' → logprob: -5.337249279022217
    10. ' _' → logprob: -5.337249279022217

Token 32: '_class' (ID: 10602)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0017086135921999812
    2. ' (' → logprob: -7.001708507537842
    3. '("("' → logprob: -8.251708984375
    4. '40' → logprob: -9.376708984375
    5. '   ' → logprob: -9.626708984375
    6. '_' → logprob: -9.751708984375
    7. '```' → logprob: -10.376708984375
    8. '()' → logprob: -10.501708984375
    9. '_class' → logprob: -10.501708984375
    10. ' ' → logprob: -10.626708984375

Token 33: '(M' (ID: 6103)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0059008304961025715
    2. '():' → logprob: -5.755900859832764
    3. '(:' → logprob: -6.755900859832764
    4. '_' → logprob: -7.255900859832764
    5. ':' → logprob: -7.630900859832764
    6. '(_' → logprob: -10.005900382995605
    7. '_:' → logprob: -10.380900382995605
    8. '("("' → logprob: -10.380900382995605
    9. '```' → logprob: -10.630900382995605
    10. '(_:' → logprob: -10.755900382995605

Token 34: 'OD' (ID: 3329)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006658061407506466
    2. ')' → logprob: -5.13165807723999
    3. ' ):' → logprob: -7.50665807723999
    4. ':' → logprob: -9.006657600402832
    5. '=' → logprob: -10.006657600402832
    6. '):
' → logprob: -12.756657600402832
    7. ' :' → logprob: -13.506657600402832
    8. '   ' → logprob: -14.006657600402832
    9. '_' → logprob: -14.131657600402832
    10. ')：' → logprob: -14.256657600402832

Token 35: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0069795106537640095
    2. ')' → logprob: -5.381979465484619
    3. ' ):' → logprob: -6.131979465484619
    4. '):
' → logprob: -9.506979942321777
    5. '=' → logprob: -9.756979942321777
    6. ':' → logprob: -10.881979942321777
    7. ' ' → logprob: -11.506979942321777
    8. '   ' → logprob: -11.881979942321777
    9. ' )' → logprob: -12.256979942321777
    10. '):
' → logprob: -13.381979942321777

Token 36: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00030507624614983797
    2. ':
' → logprob: -9.37530517578125
    3. '():' → logprob: -9.37530517578125
    4. '   ' → logprob: -9.50030517578125
    5. ' :' → logprob: -10.12530517578125
    6. '):' → logprob: -11.50030517578125
    7. ':**' → logprob: -13.00030517578125
    8. '```' → logprob: -14.00030517578125
    9. '(:' → logprob: -14.12530517578125
    10. ' ' → logprob: -14.12530517578125

Token 37: ' class' (ID: 744)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021522654220461845
    2. ' class' → logprob: -4.521522521972656
    3. '    
' → logprob: -5.646522521972656
    4. '    ' → logprob: -5.771522521972656
    5. ' 
' → logprob: -7.271522521972656
    6. 'class' (adapté à ' class') → logprob: -7.271522521972656
    7. '
' → logprob: -7.646522521972656
    8. '\' → logprob: -7.646522521972656
    9. '```' → logprob: -7.646522521972656
    10. ' ' → logprob: -8.521522521972656

Token 38: ' Mod' (ID: 7191)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01123856846243143
    2. ' Mod' → logprob: -4.5112385749816895
    3. 'Mod' → logprob: -9.636238098144531
    4. '_' → logprob: -9.886238098144531
    5. ' _' → logprob: -10.886238098144531
    6. '_mod' → logprob: -11.511238098144531
    7. ' M' → logprob: -11.761238098144531
    8. ' Modular' → logprob: -11.761238098144531
    9. '_Mod' → logprob: -11.761238098144531
    10. ' MOD' → logprob: -12.261238098144531

Token 39: 'Int' (ID: 2471)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.04859202727675438
    2. 'Int' → logprob: -3.0485920906066895
    3. ' int' → logprob: -13.173591613769531
    4. '   ' → logprob: -13.798591613769531
    5. ':int' → logprob: -14.923591613769531
    6. '_int' → logprob: -15.173591613769531
    7. 'uint' → logprob: -15.173591613769531
    8. 'INT' → logprob: -15.423591613769531
    9. 'class' → logprob: -15.923591613769531
    10. ' Int' → logprob: -16.04859161376953

Token 40: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06771381944417953
    2. '(' → logprob: -2.817713737487793
    3. '(object' → logprob: -5.817713737487793
    4. '(:' → logprob: -6.442713737487793
    5. '(int' → logprob: -7.942713737487793
    6. '():' → logprob: -7.942713737487793
    7. ' :' → logprob: -8.317713737487793
    8. '):' → logprob: -10.067713737487793
    9. '(":' → logprob: -10.192713737487793
    10. ':**' → logprob: -10.942713737487793

Token 41: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.139160394668579
    2. '<|end|>' → logprob: -1.264160394668579
    3. '       ' → logprob: -1.639160394668579
    4. ':' → logprob: -2.764160394668579
    5. '    
' → logprob: -3.264160394668579
    6. '    ' → logprob: -3.514160394668579
    7. '(object' → logprob: -3.639160394668579
    8. '(' → logprob: -4.38916015625
    9. '
' → logprob: -5.01416015625
    10. '<|end|>' → logprob: -5.38916015625

Token 42: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.4607279598712921
    2. ' def' → logprob: -1.3357279300689697
    3. '   ' → logprob: -2.9607279300689697
    4. '    ' → logprob: -4.085728168487549
    5. '       ' → logprob: -4.210728168487549
    6. ' __' → logprob: -4.335728168487549
    7. ' ' → logprob: -5.460728168487549
    8. '__' → logprob: -5.835728168487549
    9. '        ' → logprob: -6.710728168487549
    10. ' 
' → logprob: -8.21072769165039

Token 43: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.7409770488739014
    2. 'init' → logprob: -0.7409770488739014
    3. ' init' → logprob: -3.3659770488739014
    4. '__' → logprob: -4.6159772872924805
    5. '_init' → logprob: -6.1159772872924805
    6. '```' → logprob: -9.99097728729248
    7. ' _' → logprob: -12.11597728729248
    8. ' ' → logprob: -12.24097728729248
    9. ' def' → logprob: -12.86597728729248
    10. 'def' → logprob: -12.99097728729248

Token 44: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -4.320199877838604e-07
    2. 'int' → logprob: -15.375
    3. 'ini' → logprob: -16.375
    4. ' init' → logprob: -17.125
    5. 'in' → logprob: -17.5
    6. 'i' → logprob: -18.625
    7. '   ' → logprob: -18.625
    8. '```' → logprob: -18.75
    9. 'inite' → logprob: -19.375
    10. ' ' → logprob: -19.5

Token 45: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.10240236669778824
    2. '__' → logprob: -2.352402448654175
    3. '(self' → logprob: -7.102402210235596
    4. '(' → logprob: -7.477402210235596
    5. '__((' → logprob: -7.977402210235596
    6. '__(
' → logprob: -8.977402687072754
    7. '__('' → logprob: -9.352402687072754
    8. '__(*' → logprob: -9.602402687072754
    9. '_(' → logprob: -9.727402687072754
    10. '_' → logprob: -10.227402687072754

Token 46: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.842555426876061e-06
    2. ' self' → logprob: -12.250004768371582
    3. '0' → logprob: -17.8750057220459
    4. 's' → logprob: -17.8750057220459
    5. '       ' → logprob: -19.0000057220459
    6. ',' → logprob: -19.2500057220459
    7. ' ' → logprob: -19.3750057220459
    8. '(self' → logprob: -20.0000057220459
    9. '
' → logprob: -20.3750057220459
    10. ',self' → logprob: -20.3750057220459

Token 47: ',' (ID: 11)
  Prédit: ' ,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ,' → logprob: -0.11296819150447845
    2. ',' → logprob: -2.2379682064056396
    3. 'self' → logprob: -9.362968444824219
    4. '_,' → logprob: -10.362968444824219
    5. ',self' → logprob: -11.237968444824219
    6. ' self' → logprob: -12.487968444824219
    7. '__,' → logprob: -12.862968444824219
    8. ',value' → logprob: -12.862968444824219
    9. ' ' → logprob: -12.987968444824219
    10. ' ,
' → logprob: -14.487968444824219

Token 48: ' x' (ID: 1215)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4804590046405792
    2. 'value' → logprob: -0.9804589748382568
    3. 'x' → logprob: -5.230459213256836
    4. ' value' → logprob: -7.605459213256836
    5. ' self' → logprob: -8.605459213256836
    6. '       ' → logprob: -8.855459213256836
    7. 'v' → logprob: -9.355459213256836
    8. 'val' → logprob: -9.480459213256836
    9. '           ' → logprob: -11.855459213256836
    10. ' x' → logprob: -12.230459213256836

Token 49: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004555323161184788
    2. ':' → logprob: -5.8795552253723145
    3. '=' → logprob: -7.6295552253723145
    4. ' ):' → logprob: -7.6295552253723145
    5. ')' → logprob: -8.254555702209473
    6. '):
' → logprob: -8.379555702209473
    7. '%' → logprob: -8.379555702209473
    8. ' %' → logprob: -11.004555702209473
    9. '   ' → logprob: -11.754555702209473
    10. ',' → logprob: -12.004555702209473

Token 50: '           ' (ID: 352)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2135368585586548
    2. '           ' → logprob: -1.8385368585586548
    3. ' =' → logprob: -1.8385368585586548
    4. '        ' → logprob: -2.2135367393493652
    5. ' x' → logprob: -2.5885367393493652
    6. ' ' → logprob: -2.8385367393493652
    7. '            ' → logprob: -3.0885367393493652
    8. ':' → logprob: -3.7135367393493652
    9. ')' → logprob: -4.588536739349365
    10. '0' → logprob: -4.588536739349365

Token 51: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6736661195755005
    2. 'self' (adapté à ' self') → logprob: -1.2986661195755005
    3. ' x' → logprob: -1.6736661195755005
    4. 'x' → logprob: -3.798666000366211
    5. '           ' → logprob: -5.173666000366211
    6. ' (' → logprob: -6.673666000366211
    7. '            ' → logprob: -9.048666000366211
    8. '               ' → logprob: -9.298666000366211
    9. '(self' → logprob: -9.923666000366211
    10. '(x' → logprob: -10.048666000366211

Token 52: '.x' (ID: 3700)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07988178730010986
    2. '=' → logprob: -2.5798816680908203
    3. '.' → logprob: -7.57988166809082
    4. ' ' → logprob: -8.20488166809082
    5. '%' → logprob: -9.82988166809082
    6. ' %' → logprob: -10.20488166809082
    7. 'x' → logprob: -10.57988166809082
    8. ' %=' → logprob: -10.70488166809082
    9. '.value' → logprob: -11.45488166809082
    10. '_' → logprob: -11.45488166809082

Token 53: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31328243017196655
    2. '=' → logprob: -1.3132824897766113
    3. ' %=' → logprob: -11.188282012939453
    4. '%' → logprob: -12.563282012939453
    5. '%=' → logprob: -13.438282012939453
    6. ' ' → logprob: -13.813282012939453
    7. '=int' → logprob: -15.313282012939453
    8. ')' → logprob: -15.688282012939453
    9. ' %' → logprob: -16.563282012939453
    10. 'x' → logprob: -16.688282012939453

Token 54: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3132801651954651
    2. ' x' → logprob: -1.3132801055908203
    3. 'int' → logprob: -11.56328010559082
    4. '(x' → logprob: -12.06328010559082
    5. ' int' → logprob: -13.31328010559082
    6. ' (' → logprob: -14.18828010559082
    7. '	x' → logprob: -15.31328010559082
    8. '   ' → logprob: -15.31328010559082
    9. '(' → logprob: -15.56328010559082
    10. ' ' → logprob: -16.81328010559082

Token 55: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.14268982410430908
    2. '%' → logprob: -2.0176897048950195
    3. '<|end|>' → logprob: -12.51768970489502
    4. '       ' → logprob: -13.39268970489502
    5. ' ' → logprob: -13.51768970489502
    6. '           ' → logprob: -13.64268970489502
    7. ')' → logprob: -13.76768970489502
    8. ' ' → logprob: -13.89268970489502
    9. '%D' → logprob: -14.01768970489502
    10. ' %=' → logprob: -14.39268970489502

Token 56: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.3868716359138489
    2. ' MOD' → logprob: -1.136871576309204
    3. '_MOD' → logprob: -14.761871337890625
    4. '.MOD' → logprob: -15.636871337890625
    5. ' ' → logprob: -17.386871337890625
    6. '(M' → logprob: -18.636871337890625
    7. '           ' → logprob: -18.886871337890625
    8. ' self' → logprob: -19.011871337890625
    9. ' (' → logprob: -19.136871337890625
    10. ' ' → logprob: -20.511871337890625

Token 57: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 58: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 59: ' def' (ID: 1056)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3552027940750122
    2. 'def' (adapté à ' def') → logprob: -1.3552027940750122
    3. '        
' → logprob: -3.4802026748657227
    4. '   ' → logprob: -5.230202674865723
    5. '    
' → logprob: -6.230202674865723
    6. ' def' → logprob: -6.980202674865723
    7. '@property' → logprob: -7.230202674865723
    8. '
' → logprob: -7.605202674865723
    9. '        

' → logprob: -8.480202674865723
    10. '<|end|>' → logprob: -8.480202674865723

Token 60: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5115032196044922
    2. ' __' → logprob: -1.5115032196044922
    3. '+' → logprob: -2.011503219604492
    4. '__' → logprob: -3.761503219604492
    5. ' +' → logprob: -4.761503219604492
    6. '_add' → logprob: -5.511503219604492
    7. ' add' → logprob: -6.136503219604492
    8. ' ' → logprob: -6.386503219604492
    9. ' _' → logprob: -6.386503219604492
    10. '<|end|>' → logprob: -6.636503219604492

Token 61: 'str' (ID: 689)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.0039044497534632683
    2. 'eq' → logprob: -6.128904342651367
    3. 'pow' → logprob: -6.878904342651367
    4. 'mul' → logprob: -7.878904342651367
    5. 'init' → logprob: -8.753904342651367
    6. 'mod' → logprob: -10.003904342651367
    7. 'int' → logprob: -10.253904342651367
    8. 'i' → logprob: -10.628904342651367
    9. 'flo' → logprob: -11.003904342651367
    10. ' add' → logprob: -11.878904342651367

Token 62: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.01595482975244522
    2. '__' → logprob: -4.640954971313477
    3. '(self' → logprob: -5.140954971313477
    4. '(' → logprob: -8.265954971313477
    5. '__('' → logprob: -10.265954971313477
    6. '__(
' → logprob: -10.640954971313477
    7. '_(' → logprob: -13.140954971313477
    8. '__("' → logprob: -13.265954971313477
    9. '__((' → logprob: -13.515954971313477
    10. '__(*' → logprob: -13.640954971313477

Token 63: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.676981345459353e-06
    2. ')' → logprob: -12.375005722045898
    3. ' self' → logprob: -13.875005722045898
    4. '(self' → logprob: -15.000005722045898
    5. 's' → logprob: -16.7500057220459
    6. ')(' → logprob: -17.0000057220459
    7. '       ' → logprob: -17.7500057220459
    8. '   ' → logprob: -18.0000057220459
    9. ' ' → logprob: -19.0000057220459
    10. '0' → logprob: -19.3750057220459

Token 64: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014812061563134193
    2. '):' → logprob: -4.264811992645264
    3. '):
' → logprob: -7.639811992645264
    4. '__' → logprob: -10.389812469482422
    5. '):

' → logprob: -10.389812469482422
    6. ' )' → logprob: -10.639812469482422
    7. ')__' → logprob: -10.764812469482422
    8. ').__' → logprob: -11.139812469482422
    9. '__)' → logprob: -11.264812469482422
    10. 'self' → logprob: -11.514812469482422

Token 65: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4544066786766052
    2. 'return' → logprob: -1.07940673828125
    3. ' return' → logprob: -3.70440673828125
    4. '               ' → logprob: -8.57940673828125
    5. 'self' → logprob: -8.57940673828125
    6. '       ' → logprob: -8.82940673828125
    7. '            ' → logprob: -9.70440673828125
    8. '()' → logprob: -10.07940673828125
    9. '(' → logprob: -10.32940673828125
    10. '        ' → logprob: -11.20440673828125

Token 66: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0028246084693819284
    2. ' return' → logprob: -6.002824783325195
    3. '           ' → logprob: -8.002824783325195
    4. '       ' → logprob: -11.877824783325195
    5. 'str' → logprob: -12.752824783325195
    6. 'f' → logprob: -12.877824783325195
    7. '{return' → logprob: -14.502824783325195
    8. '   ' → logprob: -14.627824783325195
    9. '```' → logprob: -14.627824783325195
    10. '	return' → logprob: -15.502824783325195

Token 67: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.7013290524482727
    2. 'str' → logprob: -0.9513290524482727
    3. ' f' → logprob: -2.201328992843628
    4. 'f' → logprob: -4.951329231262207
    5. ' ' → logprob: -9.826329231262207
    6. '   ' → logprob: -10.326329231262207
    7. '       ' → logprob: -11.576329231262207
    8. '           ' → logprob: -12.076329231262207
    9. '	str' → logprob: -12.451329231262207
    10. '"' → logprob: -12.576329231262207

Token 68: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.7610454708337784e-05
    2. '(' → logprob: -10.500027656555176
    3. '(s' → logprob: -17.87502670288086
    4. 'self' → logprob: -18.12502670288086
    5. '((' → logprob: -19.37502670288086
    6. ' (' → logprob: -19.75002670288086
    7. '       ' → logprob: -20.37502670288086
    8. '(sel' → logprob: -20.37502670288086
    9. '(f' → logprob: -21.37502670288086
    10. '(Self' → logprob: -21.50002670288086

Token 69: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -2.6060808522743173e-05
    2. '.' → logprob: -10.750025749206543
    3. ').' → logprob: -12.500025749206543
    4. ' .' → logprob: -14.500025749206543
    5. '.s' → logprob: -16.75002670288086
    6. 'self' → logprob: -16.87502670288086
    7. ')' → logprob: -17.62502670288086
    8. '`.' → logprob: -17.62502670288086
    9. '.self' → logprob: -18.75002670288086
    10. '.i' → logprob: -19.37502670288086

Token 70: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.0339031834737398e-05
    2. '       ' → logprob: -10.875020027160645
    3. ')
' → logprob: -14.500020027160645
    4. ' )' → logprob: -15.000020027160645
    5. '))' → logprob: -16.00002098083496
    6. ')`' → logprob: -16.25002098083496
    7. ')return' → logprob: -16.25002098083496
    8. '   ' → logprob: -16.50002098083496
    9. '())' → logprob: -17.25002098083496
    10. '           ' → logprob: -17.50002098083496

Token 71: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028917696326971054
    2. '        
' → logprob: -4.1539177894592285
    3. '<|end|>' → logprob: -4.9039177894592285
    4. '
' → logprob: -6.1539177894592285
    5. '    
' → logprob: -7.0289177894592285
    6. '        

' → logprob: -7.1539177894592285
    7. '<|end|>' → logprob: -7.5289177894592285
    8. '   ' → logprob: -8.52891731262207
    9. '    ' → logprob: -8.65391731262207
    10. '```' → logprob: -8.77891731262207

Token 72: ' def' (ID: 1056)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016088804230093956
    2. 'def' (adapté à ' def') → logprob: -4.266088962554932
    3. '   ' → logprob: -6.266088962554932
    4. ' def' → logprob: -11.516088485717773
    5. '        
' → logprob: -12.391088485717773
    6. '+' → logprob: -12.891088485717773
    7. '    ' → logprob: -13.391088485717773
    8. '      ' → logprob: -13.516088485717773
    9. '__' → logprob: -13.766088485717773
    10. '     ' → logprob: -13.891088485717773

Token 73: ' __' (ID: 2516)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.3999254107475281
    2. ' __' → logprob: -1.5249254703521729
    3. ' add' → logprob: -2.649925470352173
    4. '__' → logprob: -3.649925470352173
    5. '_add' → logprob: -4.524925231933594
    6. 'pow' → logprob: -6.399925231933594
    7. 'def' → logprob: -6.649925231933594
    8. ' ' → logprob: -7.149925231933594
    9. '+' → logprob: -8.774925231933594
    10. '```' → logprob: -9.524925231933594

Token 74: 'repr' (ID: 67002)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.054395921528339386
    2. 'd' → logprob: -3.804395914077759
    3. 'mul' → logprob: -4.179396152496338
    4. 'pow' → logprob: -4.929396152496338
    5. 'r' → logprob: -6.304396152496338
    6. 'sub' → logprob: -6.929396152496338
    7. 'def' → logprob: -7.054396152496338
    8. 'it' → logprob: -7.054396152496338
    9. 'q' → logprob: -7.304396152496338
    10. 'eq' → logprob: -7.804396152496338

Token 75: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3180152177810669
    2. '__(' → logprob: -1.693015217781067
    3. '(self' → logprob: -2.4430150985717773
    4. '__' → logprob: -6.943015098571777
    5. '(`' → logprob: -8.943015098571777
    6. '_(' → logprob: -9.193015098571777
    7. '__('' → logprob: -9.568015098571777
    8. '__(
' → logprob: -9.568015098571777
    9. '(

' → logprob: -10.068015098571777
    10. ')(' → logprob: -10.443015098571777

Token 76: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.013358449563384056
    2. '(self' → logprob: -4.3883585929870605
    3. ')(' → logprob: -7.8883585929870605
    4. ')' → logprob: -8.013358116149902
    5. ' self' → logprob: -9.388358116149902
    6. '(' → logprob: -10.513358116149902
    7. 's' → logprob: -10.763358116149902
    8. '__(' → logprob: -12.013358116149902
    9. 'Self' → logprob: -13.638358116149902
    10. ' (' → logprob: -14.513358116149902

Token 77: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0022395893465727568
    2. '__)' → logprob: -7.00223970413208
    3. ',' → logprob: -7.62723970413208
    4. '__' → logprob: -7.87723970413208
    5. ' )' → logprob: -8.877239227294922
    6. ')__' → logprob: -9.252239227294922
    7. '),' → logprob: -10.127239227294922
    8. '):' → logprob: -10.252239227294922
    9. ').__' → logprob: -10.377239227294922
    10. 'self' → logprob: -11.252239227294922

Token 78: '           ' (ID: 352)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.32163098454475403
    2. '(self' → logprob: -1.3216309547424316
    3. '(
' → logprob: -5.196630954742432
    4. 'self' → logprob: -6.571630954742432
    5. '           ' → logprob: -6.946630954742432
    6. '       ' → logprob: -8.82163143157959
    7. ')' → logprob: -9.44663143157959
    8. '(f' → logprob: -9.94663143157959
    9. '`' → logprob: -10.32163143157959
    10. ',' → logprob: -10.69663143157959

Token 79: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.01519535668194294
    2. ' return' → logprob: -4.515195369720459
    3. '           ' → logprob: -5.515195369720459
    4. 'f' → logprob: -9.8901948928833
    5. 'r' → logprob: -10.7651948928833
    6. 'self' → logprob: -10.8901948928833
    7. '       ' → logprob: -11.5151948928833
    8. '   ' → logprob: -12.5151948928833
    9. '               ' → logprob: -13.0151948928833
    10. 'str' → logprob: -13.5151948928833

Token 80: ' str' (ID: 989)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.8810492753982544
    2. 'str' → logprob: -0.8810492753982544
    3. 'f' → logprob: -2.256049156188965
    4. ' str' → logprob: -2.756049156188965
    5. 'self' → logprob: -6.006049156188965
    6. ' self' → logprob: -7.756049156188965
    7. ' ' → logprob: -9.756049156188965
    8. ' ' → logprob: -10.381049156188965
    9. 's' → logprob: -12.131049156188965
    10. '(str' → logprob: -13.006049156188965

Token 81: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.214019307051785e-05
    2. '(' → logprob: -10.375032424926758
    3. '(s' → logprob: -14.625032424926758
    4. 'self' → logprob: -15.000032424926758
    5. '((' → logprob: -17.000032424926758
    6. ' (' → logprob: -17.750032424926758
    7. '(sel' → logprob: -18.625032424926758
    8. '(type' → logprob: -18.875032424926758
    9. '(obj' → logprob: -19.250032424926758
    10. '```' → logprob: -19.375032424926758

Token 82: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0028612238820642233
    2. '.' → logprob: -5.877861022949219
    3. ').' → logprob: -10.252861022949219
    4. ')' → logprob: -11.377861022949219
    5. ' .' → logprob: -11.877861022949219
    6. '<|end|>' → logprob: -14.502861022949219
    7. 'x' → logprob: -14.877861022949219
    8. ' ' → logprob: -15.127861022949219
    9. 'self' → logprob: -15.502861022949219
    10. '.
' → logprob: -16.25286102294922

Token 83: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.842555426876061e-06
    2. '       ' → logprob: -12.750004768371582
    3. ')
' → logprob: -14.625004768371582
    4. '<|end|>' → logprob: -14.875004768371582
    5. '))' → logprob: -15.250004768371582
    6. '()' → logprob: -15.875004768371582
    7. '}' → logprob: -16.0000057220459
    8. '   ' → logprob: -16.2500057220459
    9. ')`' → logprob: -16.2500057220459
    10. '),' → logprob: -16.3750057220459

Token 84: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10260076075792313
    2. '<|end|>' → logprob: -2.4776008129119873
    3. '        
' → logprob: -5.852600574493408
    4. '   ' → logprob: -5.977600574493408
    5. '
' → logprob: -6.102600574493408
    6. '    ' → logprob: -6.477600574493408
    7. '<|end|>' → logprob: -6.477600574493408
    8. '    
' → logprob: -6.602600574493408
    9. '_' → logprob: -7.852600574493408
    10. '      ' → logprob: -8.602601051330566

Token 85: ' def' (ID: 1056)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6417577266693115
    2. '   ' → logprob: -1.5167577266693115
    3. 'def' (adapté à ' def') → logprob: -1.5167577266693115
    4. '    ' → logprob: -4.016757965087891
    5. '    
' → logprob: -4.891757965087891
    6. '        
' → logprob: -5.391757965087891
    7. '+' → logprob: -6.766757965087891
    8. '__' → logprob: -6.891757965087891
    9. ' def' → logprob: -7.641757965087891
    10. '     ' → logprob: -8.01675796508789

Token 86: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.9700565934181213
    2. 'add' → logprob: -1.3450565338134766
    3. ' add' → logprob: -1.4700565338134766
    4. '__' → logprob: -2.3450565338134766
    5. '_add' → logprob: -3.8450565338134766
    6. '+' → logprob: -5.095056533813477
    7. ' ' → logprob: -5.220056533813477
    8. ' ' → logprob: -7.720056533813477
    9. '```' → logprob: -8.220056533813477
    10. ' +' → logprob: -8.345056533813477

Token 87: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.009890426881611347
    2. 'eq' → logprob: -4.634890556335449
    3. 'mul' → logprob: -9.63489055633545
    4. 'pow' → logprob: -10.00989055633545
    5. 'int' → logprob: -11.88489055633545
    6. 'init' → logprob: -12.25989055633545
    7. 'sub' → logprob: -13.38489055633545
    8. '```' → logprob: -13.38489055633545
    9. 'and' → logprob: -13.75989055633545
    10. 'Add' → logprob: -13.75989055633545

Token 88: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.01612105406820774
    2. '__' → logprob: -4.141120910644531
    3. '(self' → logprob: -10.266120910644531
    4. '__('' → logprob: -11.016120910644531
    5. '(' → logprob: -11.266120910644531
    6. '__(
' → logprob: -11.391120910644531
    7. '__((' → logprob: -12.391120910644531
    8. '_(' → logprob: -12.891120910644531
    9. '__(*' → logprob: -13.016120910644531
    10. '_' → logprob: -13.641120910644531

Token 89: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.676292231422849e-05
    2. ' self' → logprob: -11.125017166137695
    3. 's' → logprob: -14.000017166137695
    4. '(self' → logprob: -14.750017166137695
    5. ')' → logprob: -14.875017166137695
    6. 'other' → logprob: -15.875017166137695
    7. ' ' → logprob: -17.375017166137695
    8. ',' → logprob: -17.375017166137695
    9. '       ' → logprob: -18.250017166137695
    10. ',self' → logprob: -18.250017166137695

Token 90: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01345126610249281
    2. ' ,' → logprob: -4.388451099395752
    3. 'self' → logprob: -7.763451099395752
    4. ')' → logprob: -7.888451099395752
    5. ' ' → logprob: -10.13845157623291
    6. '<|end|>' → logprob: -10.38845157623291
    7. ',self' → logprob: -10.51345157623291
    8. ',
' → logprob: -12.13845157623291
    9. 's' → logprob: -12.13845157623291
    10. '_,' → logprob: -12.51345157623291

Token 91: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.014261762611567974
    2. ' other' → logprob: -4.264261722564697
    3. 'self' → logprob: -9.264262199401855
    4. 'o' → logprob: -13.264262199401855
    5. 'Other' → logprob: -14.264262199401855
    6. ' self' → logprob: -14.764262199401855
    7. ' o' → logprob: -14.764262199401855
    8. ' ' → logprob: -16.01426124572754
    9. '_other' → logprob: -16.51426124572754
    10. '(other' → logprob: -17.01426124572754

Token 92: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000252160825766623
    2. ':' → logprob: -9.375251770019531
    3. '):
' → logprob: -9.500251770019531
    4. ',' → logprob: -9.875251770019531
    5. ')' → logprob: -10.500251770019531
    6. 'self' → logprob: -12.000251770019531
    7. ' ):' → logprob: -12.375251770019531
    8. '<|end|>' → logprob: -15.000251770019531
    9. '):
' → logprob: -15.125251770019531
    10. '       ' → logprob: -15.125251770019531

Token 93: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2735711336135864
    2. '            ' → logprob: -1.8985711336135864
    3. ' ' → logprob: -3.148571014404297
    4. ' 
' → logprob: -4.398571014404297
    5. '        ' → logprob: -4.523571014404297
    6. '<|end|>' → logprob: -5.273571014404297
    7. ':' → logprob: -6.023571014404297
    8. '    ' → logprob: -6.273571014404297
    9. ',' → logprob: -6.273571014404297
    10. ')' → logprob: -6.398571014404297

Token 94: ' return' (ID: 622)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1836481094360352
    2. ' Mod' → logprob: -1.5586481094360352
    3. '(Mod' → logprob: -1.6836481094360352
    4. ' (' → logprob: -1.8086481094360352
    5. 'Mod' → logprob: -2.683648109436035
    6. ' self' → logprob: -4.183648109436035
    7. ' ' → logprob: -4.558648109436035
    8. ')' → logprob: -4.933648109436035
    9. 'self' → logprob: -5.058648109436035
    10. '        ' → logprob: -5.433648109436035

Token 95: ' (
' (ID: 4112)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.014696131460368633
    2. ' Mod' → logprob: -4.26469612121582
    3. 'self' → logprob: -7.63969612121582
    4. ' self' → logprob: -10.01469612121582
    5. '(Mod' → logprob: -12.51469612121582
    6. 'type' → logprob: -13.26469612121582
    7. ' type' → logprob: -14.63969612121582
    8. '_Mod' → logprob: -15.51469612121582
    9. '   ' → logprob: -15.76469612121582
    10. ' ' → logprob: -16.13969612121582

Token 96: '               ' (ID: 506)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.0021453816443681717
    2. 'self' → logprob: -6.252145290374756
    3. ' Mod' → logprob: -9.002145767211914
    4. '           ' → logprob: -9.502145767211914
    5. '(Mod' → logprob: -11.627145767211914
    6. '               ' → logprob: -12.002145767211914
    7. ' self' → logprob: -14.002145767211914
    8. 'type' → logprob: -14.502145767211914
    9. 'MOD' → logprob: -15.002145767211914
    10. '                   ' → logprob: -15.002145767211914

Token 97: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' (adapté à ' Mod') → logprob: -0.003642119001597166
    2. 'self' → logprob: -5.6286420822143555
    3. '(Mod' → logprob: -10.878642082214355
    4. ' Mod' → logprob: -11.503642082214355
    5. '           ' → logprob: -12.003642082214355
    6. '       ' → logprob: -13.503642082214355
    7. 'type' → logprob: -13.628642082214355
    8. '               ' → logprob: -14.003642082214355
    9. 'mod' → logprob: -14.378642082214355
    10. 'MOD' → logprob: -14.503642082214355

Token 98: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -9.088346359931165e-07
    2. 'int' → logprob: -14.250000953674316
    3. 'In' → logprob: -16.625
    4. '           ' → logprob: -17.375
    5. 'Integer' → logprob: -17.5
    6. '_int' → logprob: -18.5
    7. 'Inte' → logprob: -18.5
    8. 'I' → logprob: -18.625
    9. '               ' → logprob: -18.875
    10. '[Int' → logprob: -19.25

Token 99: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00044401636114344
    2. '((' → logprob: -7.750443935394287
    3. '(' → logprob: -11.500444412231445
    4. ')(' → logprob: -12.875444412231445
    5. 'self' → logprob: -15.250444412231445
    6. ' (' → logprob: -15.875444412231445
    7. ')((' → logprob: -16.375444412231445
    8. ')' → logprob: -16.500444412231445
    9. '(
' → logprob: -16.500444412231445
    10. '(((' → logprob: -18.500444412231445

Token 100: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.002538682660087943
    2. '.' → logprob: -6.002538681030273
    3. ').' → logprob: -9.752538681030273
    4. ' .' → logprob: -12.752538681030273
    5. 'x' → logprob: -14.377538681030273
    6. ' ' → logprob: -14.877538681030273
    7. ')' → logprob: -15.377538681030273
    8. '].' → logprob: -15.752538681030273
    9. '   ' → logprob: -16.502538681030273
    10. '`.' → logprob: -16.627538681030273

Token 101: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2519780993461609
    2. ' +' → logprob: -1.5019781589508057
    3. '+self' → logprob: -10.001977920532227
    4. '+
' → logprob: -13.626977920532227
    5. '+b' → logprob: -14.751977920532227
    6. '+x' → logprob: -14.876977920532227
    7. ' +
' → logprob: -15.251977920532227
    8. ' ' → logprob: -15.376977920532227
    9. ' plus' → logprob: -15.376977920532227
    10. ')' → logprob: -15.751977920532227

Token 102: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.47409364581108093
    2. ' other' → logprob: -0.9740936756134033
    3. '(other' → logprob: -11.099093437194824
    4. ' ' → logprob: -14.099093437194824
    5. ')' → logprob: -15.724093437194824
    6. ' (' → logprob: -15.849093437194824
    7. 'Other' → logprob: -15.974093437194824
    8. 'othe' → logprob: -16.72409439086914
    9. '.other' → logprob: -16.72409439086914
    10. '_other' → logprob: -17.09909439086914

Token 103: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.28128793835639954
    2. '.' → logprob: -1.4062879085540771
    3. ').' → logprob: -9.281288146972656
    4. ' .' → logprob: -11.156288146972656
    5. '`.' → logprob: -12.281288146972656
    6. '‌.' → logprob: -12.656288146972656
    7. 'x' → logprob: -12.781288146972656
    8. ')' → logprob: -12.781288146972656
    9. '<|end|>' → logprob: -13.031288146972656
    10. '.
' → logprob: -13.406288146972656

Token 104: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.745069499127567e-05
    2. ')
' → logprob: -10.00008773803711
    3. '       ' → logprob: -11.12508773803711
    4. '           ' → logprob: -11.37508773803711
    5. '<|end|>' → logprob: -12.25008773803711
    6. ' )' → logprob: -12.62508773803711
    7. ')%' → logprob: -13.37508773803711
    8. ')

' → logprob: -13.62508773803711
    9. '   ' → logprob: -13.75008773803711
    10. '               ' → logprob: -13.87508773803711

Token 105: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012198820477351546
    2. '<|end|>' → logprob: -7.001219749450684
    3. '       ' → logprob: -8.751219749450684
    4. ')
' → logprob: -9.626219749450684
    5. '<|end|>' → logprob: -10.126219749450684
    6. '           ' → logprob: -10.501219749450684
    7. ')return' → logprob: -12.126219749450684
    8. '               ' → logprob: -13.251219749450684
    9. '   ' → logprob: -13.376219749450684
    10. ' )' → logprob: -13.501219749450684

Token 106: ' isinstance' (ID: 25889)
  Prédit: ' isinstance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.16025012731552124
    2. 'is' → logprob: -1.910250186920166
    3. 'type' → logprob: -12.035249710083008
    4. ' ' → logprob: -12.035249710083008
    5. '   ' → logprob: -12.535249710083008
    6. '(is' → logprob: -12.660249710083008
    7. '  ' → logprob: -12.785249710083008
    8. ' type' → logprob: -13.410249710083008
    9. '    ' → logprob: -13.910249710083008
    10. ' hasattr' → logprob: -14.035249710083008

Token 107: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -0.0002084277366520837
    2. 'other' → logprob: -8.500208854675293
    3. ' other' → logprob: -12.250208854675293
    4. '(' → logprob: -16.625207901000977
    5. 'Other' → logprob: -16.875207901000977
    6. ' (' → logprob: -19.125207901000977
    7. '(
' → logprob: -19.875207901000977
    8. '.other' → logprob: -20.000207901000977
    9. '_other' → logprob: -20.125207901000977
    10. 'OTHER' → logprob: -20.875207901000977

Token 108: ',' (ID: 11)
  Prédit: '(Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Mod' → logprob: -0.034970369189977646
    2. '(' → logprob: -4.159970283508301
    3. ',' → logprob: -4.409970283508301
    4. ')' → logprob: -6.034970283508301
    5. '(self' → logprob: -6.409970283508301
    6. '(other' → logprob: -6.659970283508301
    7. ' (' → logprob: -7.034970283508301
    8. 'self' → logprob: -9.0349702835083
    9. 'other' → logprob: -9.7849702835083
    10. 'Mod' → logprob: -10.0349702835083

Token 109: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.011093211360275745
    2. ' Mod' → logprob: -4.5110931396484375
    3. '(Mod' → logprob: -10.011093139648438
    4. ' ' → logprob: -14.886093139648438
    5. 'mod' → logprob: -17.511093139648438
    6. '   ' → logprob: -17.636093139648438
    7. 'Modulo' → logprob: -17.636093139648438
    8. 'MOD' → logprob: -18.136093139648438
    9. '  ' → logprob: -18.636093139648438
    10. '           ' → logprob: -18.761093139648438

Token 110: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -0.00091217877343297
    2. 'int' → logprob: -7.000912189483643
    3. 'In' → logprob: -15.500911712646484
    4. 'nt' → logprob: -15.625911712646484
    5. '	Int' → logprob: -17.375911712646484
    6. ' Int' → logprob: -17.750911712646484
    7. 'It' → logprob: -17.875911712646484
    8. '```' → logprob: -18.250911712646484
    9. '_int' → logprob: -18.500911712646484
    10. 'Ints' → logprob: -18.500911712646484

Token 111: ')' (ID: 8)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.1397533416748047
    2. ')' → logprob: -2.2647533416748047
    3. ' else' → logprob: -3.6397533416748047
    4. '           ' → logprob: -8.514753341674805
    5. '               ' → logprob: -9.389753341674805
    6. ')
' → logprob: -12.014753341674805
    7. '            ' → logprob: -12.514753341674805
    8. '                ' → logprob: -12.889753341674805
    9. '       ' → logprob: -12.889753341674805
    10. 'le' → logprob: -13.639753341674805

Token 112: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.10040680319070816
    2. ' else' → logprob: -2.3504068851470947
    3. '           ' → logprob: -8.600406646728516
    4. '               ' → logprob: -11.225406646728516
    5. '            ' → logprob: -14.350406646728516
    6. '	else' → logprob: -14.600406646728516
    7. '                ' → logprob: -14.725406646728516
    8. 'Else' → logprob: -14.975406646728516
    9. 'elses' → logprob: -15.600406646728516
    10. '_else' → logprob: -15.850406646728516

Token 113: '
' (ID: 198)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.4326919913291931
    2. ' Mod' → logprob: -1.057692050933838
    3. '               ' → logprob: -6.432692050933838
    4. '(Mod' → logprob: -6.432692050933838
    5. '           ' → logprob: -8.30769157409668
    6. ' ' → logprob: -8.43269157409668
    7. '                   ' → logprob: -9.05769157409668
    8. 'self' → logprob: -9.55769157409668
    9. ' self' → logprob: -10.93269157409668
    10. ' (' → logprob: -11.68269157409668

Token 114: '               ' (ID: 506)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.05561842769384384
    2. ' Mod' → logprob: -3.3056185245513916
    3. '(Mod' → logprob: -4.1806182861328125
    4. '           ' → logprob: -6.9306182861328125
    5. '               ' → logprob: -6.9306182861328125
    6. ' ' → logprob: -10.305618286132812
    7. ' (' → logprob: -10.555618286132812
    8. '                   ' → logprob: -10.555618286132812
    9. 'Modulo' → logprob: -10.555618286132812
    10. '(' → logprob: -10.680618286132812

Token 115: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' (adapté à ' Mod') → logprob: -0.0005729287513531744
    2. ' Mod' → logprob: -8.12557315826416
    3. '(Mod' → logprob: -8.50057315826416
    4. 'Not' → logprob: -10.25057315826416
    5. '               ' → logprob: -10.75057315826416
    6. '           ' → logprob: -11.25057315826416
    7. 'Modulo' → logprob: -13.62557315826416
    8. ' ' → logprob: -13.87557315826416
    9. '                   ' → logprob: -14.62557315826416
    10. '_Mod' → logprob: -15.12557315826416

Token 116: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -6.392202976712724e-06
    2. 'int' → logprob: -12.000006675720215
    3. 'In' → logprob: -16.3750057220459
    4. 'I' → logprob: -17.6250057220459
    5. '_int' → logprob: -18.3750057220459
    6. ' Int' → logprob: -18.5000057220459
    7. 'Inte' → logprob: -18.5000057220459
    8. '	Int' → logprob: -19.0000057220459
    9. 'Ints' → logprob: -19.2500057220459
    10. '.Int' → logprob: -19.7500057220459

Token 117: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.9743012671824545e-05
    2. '(other' → logprob: -11.250020027160645
    3. '(' → logprob: -12.125020027160645
    4. '               ' → logprob: -14.875020027160645
    5. ' (' → logprob: -14.875020027160645
    6. '((' → logprob: -15.125020027160645
    7. '           ' → logprob: -16.375019073486328
    8. '       ' → logprob: -17.125019073486328
    9. ')(' → logprob: -17.375019073486328
    10. '(
' → logprob: -17.375019073486328

Token 118: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.00014799882774241269
    2. '.' → logprob: -8.875147819519043
    3. 'x' → logprob: -12.000147819519043
    4. ' .' → logprob: -13.750147819519043
    5. ')' → logprob: -14.750147819519043
    6. ' ' → logprob: -15.875147819519043
    7. '+' → logprob: -16.12514877319336
    8. ' +' → logprob: -16.75014877319336
    9. ').' → logprob: -17.12514877319336
    10. ',' → logprob: -17.62514877319336

Token 119: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.061969365924596786
    2. '+' → logprob: -2.81196928024292
    3. '+self' → logprob: -14.186969757080078
    4. '+x' → logprob: -14.811969757080078
    5. ' ' → logprob: -15.061969757080078
    6. ' ' → logprob: -16.811969757080078
    7. ' +
' → logprob: -16.811969757080078
    8. '+C' → logprob: -17.186969757080078
    9. '+n' → logprob: -17.686969757080078
    10. '＋' → logprob: -17.936969757080078

Token 120: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0009115827269852161
    2. ' other' → logprob: -7.000911712646484
    3. 'othe' → logprob: -18.125911712646484
    4. '(other' → logprob: -19.625911712646484
    5. 'oth' → logprob: -20.125911712646484
    6. 'int' → logprob: -20.250911712646484
    7. ' ' → logprob: -20.375911712646484
    8. 'o' → logprob: -20.625911712646484
    9. 'Other' → logprob: -21.250911712646484
    10. '   ' → logprob: -21.250911712646484

Token 121: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018363336857873946
    2. ' )' → logprob: -9.375184059143066
    3. '))' → logprob: -9.500184059143066
    4. '<|end|>' → logprob: -11.625184059143066
    5. ')
' → logprob: -11.875184059143066
    6. '       ' → logprob: -12.750184059143066
    7. ')))' → logprob: -13.125184059143066
    8. ')return' → logprob: -14.000184059143066
    9. '
' → logprob: -14.625184059143066
    10. '   ' → logprob: -14.875184059143066

Token 122: '           ' (ID: 352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016708957264199853
    2. '           ' → logprob: -7.001670837402344
    3. '       ' → logprob: -7.251670837402344
    4. ' )' → logprob: -10.501670837402344
    5. ')
' → logprob: -11.626670837402344
    6. ')

' → logprob: -12.001670837402344
    7. '               ' → logprob: -12.751670837402344
    8. '   ' → logprob: -13.626670837402344
    9. '          ' → logprob: -13.876670837402344
    10. ')return' → logprob: -14.626670837402344

Token 123: ' )

' (ID: 11467)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005099030095152557
    2. '       ' → logprob: -7.875509738922119
    3. ')

' (adapté à ' )

') → logprob: -9.125510215759277
    4. ' )' → logprob: -11.375510215759277
    5. ')
' → logprob: -11.875510215759277
    6. ')return' → logprob: -13.875510215759277
    7. '           ' → logprob: -14.875510215759277
    8. '        ' → logprob: -15.250510215759277
    9. '   ' → logprob: -15.250510215759277
    10. '）' → logprob: -16.12550926208496

Token 124: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 125: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.44453150033950806
    2. '       ' → logprob: -1.0695314407348633
    3. '
' → logprob: -4.944531440734863
    4. '   ' → logprob: -6.194531440734863
    5. '<|end|>' → logprob: -6.319531440734863
    6. ')' → logprob: -6.569531440734863
    7. '        
' → logprob: -6.819531440734863
    8. ' def' → logprob: -6.944531440734863
    9. '_' → logprob: -8.569531440734863
    10. '__' → logprob: -9.069531440734863

Token 126: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.01817803643643856
    2. '__' → logprob: -4.0181779861450195
    3. ' _' → logprob: -11.76817798614502
    4. '_add' → logprob: -11.89317798614502
    5. ' ' → logprob: -12.01817798614502
    6. 'def' → logprob: -13.39317798614502
    7. '___' → logprob: -14.01817798614502
    8. ' ' → logprob: -14.14317798614502
    9. ' ___' → logprob: -14.26817798614502
    10. '__
' → logprob: -14.26817798614502

Token 127: 'sub' (ID: 3834)
  Prédit: 'sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.038735777139663696
    2. 'r' → logprob: -3.288735866546631
    3. 'mul' → logprob: -7.788735866546631
    4. 'i' → logprob: -8.538735389709473
    5. 'eq' → logprob: -9.913735389709473
    6. 'add' → logprob: -11.163735389709473
    7. 'neg' → logprob: -12.163735389709473
    8. '-' → logprob: -12.413735389709473
    9. '```' → logprob: -13.413735389709473
    10. ' sub' → logprob: -13.538735389709473

Token 128: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0024863574653863907
    2. '__' → logprob: -6.002486228942871
    3. '__(
' → logprob: -12.127486228942871
    4. '__('' → logprob: -13.002486228942871
    5. '__((' → logprob: -13.502486228942871
    6. '(' → logprob: -14.127486228942871
    7. '(self' → logprob: -14.752486228942871
    8. '__("' → logprob: -15.627486228942871
    9. '__(*' → logprob: -15.752486228942871
    10. '_(' → logprob: -17.377487182617188

Token 129: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.968312951968983e-06
    2. '(self' → logprob: -11.750009536743164
    3. ' self' → logprob: -13.125009536743164
    4. ')' → logprob: -17.375009536743164
    5. '
' → logprob: -17.875009536743164
    6. '           ' → logprob: -19.000009536743164
    7. 'def' → logprob: -19.125009536743164
    8. '               ' → logprob: -19.125009536743164
    9. '	self' → logprob: -20.000009536743164
    10. '[self' → logprob: -20.000009536743164

Token 130: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.76759916334413e-05
    2. ',
' → logprob: -9.875077247619629
    3. ' ,' → logprob: -11.250077247619629
    4. ',self' → logprob: -13.000077247619629
    5. '(self' → logprob: -13.250077247619629
    6. 'self' → logprob: -13.375077247619629
    7. '(' → logprob: -13.500077247619629
    8. '           ' → logprob: -13.625077247619629
    9. ',(' → logprob: -14.250077247619629
    10. '+' → logprob: -14.250077247619629

Token 131: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.16029317677021027
    2. ' other' → logprob: -1.9102932214736938
    3. '(other' → logprob: -9.785293579101562
    4. 'self' → logprob: -11.410293579101562
    5. 'Other' → logprob: -14.535293579101562
    6. ' self' → logprob: -14.535293579101562
    7. ' ' → logprob: -15.660293579101562
    8. '_other' → logprob: -15.660293579101562
    9. '.other' → logprob: -16.035293579101562
    10. '<|end|>' → logprob: -16.660293579101562

Token 132: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05126280337572098
    2. ',' → logprob: -3.426262855529785
    3. '):
' → logprob: -4.176262855529785
    4. '           ' → logprob: -6.676262855529785
    5. 'self' → logprob: -8.051262855529785
    6. '       ' → logprob: -8.676262855529785
    7. '(self' → logprob: -8.926262855529785
    8. ')' → logprob: -9.426262855529785
    9. ':' → logprob: -9.926262855529785
    10. '   ' → logprob: -10.926262855529785

Token 133: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02671196684241295
    2. '(' → logprob: -4.026711940765381
    3. '(
' → logprob: -5.401711940765381
    4. '            ' → logprob: -6.901711940765381
    5. '               ' → logprob: -7.026711940765381
    6. ' ' → logprob: -7.026711940765381
    7. ' (' → logprob: -7.651711940765381
    8. ' (
' → logprob: -8.276712417602539
    9. ' 
' → logprob: -8.401712417602539
    10. '            
' → logprob: -10.276712417602539

Token 134: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3067793548107147
    2. '(
' → logprob: -1.556779384613037
    3. '(' → logprob: -3.181779384613037
    4. ' return' → logprob: -4.931779384613037
    5. '           ' → logprob: -5.556779384613037
    6. '               ' → logprob: -7.681779384613037
    7. '   ' → logprob: -8.681778907775879
    8. '       ' → logprob: -10.181778907775879
    9. 'Return' → logprob: -10.306778907775879
    10. ' ' → logprob: -10.681778907775879

Token 135: ' (
' (ID: 4112)
  Prédit: '(
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(
' → logprob: -0.048726800829172134
    2. '(' → logprob: -3.048726797103882
    3. 'Mod' → logprob: -9.548727035522461
    4. '(Mod' → logprob: -10.423727035522461
    5. '(
' → logprob: -10.673727035522461
    6. ' (
' → logprob: -11.798727035522461
    7. ' (' → logprob: -12.048727035522461
    8. '(

' → logprob: -13.548727035522461
    9. ' Mod' → logprob: -15.548727035522461
    10. ' ' → logprob: -16.04872703552246

Token 136: '               ' (ID: 506)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.5761796236038208
    2. '               ' → logprob: -0.8261796236038208
    3. ' Mod' → logprob: -8.951179504394531
    4. '           ' → logprob: -9.701179504394531
    5. '(Mod' → logprob: -10.201179504394531
    6. '(
' → logprob: -12.451179504394531
    7. '   ' → logprob: -12.826179504394531
    8. 'mod' → logprob: -13.201179504394531
    9. '(' → logprob: -13.951179504394531
    10. '              ' → logprob: -14.326179504394531

Token 137: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' (adapté à ' Mod') → logprob: -1.1517960956552997e-05
    2. ' Mod' → logprob: -11.750011444091797
    3. '(Mod' → logprob: -12.875011444091797
    4. '               ' → logprob: -13.875011444091797
    5. '           ' → logprob: -18.375011444091797
    6. 'mod' → logprob: -19.250011444091797
    7. '_mod' → logprob: -19.375011444091797
    8. 'Modulo' → logprob: -19.875011444091797
    9. '.Mod' → logprob: -20.375011444091797
    10. '_Mod' → logprob: -21.000011444091797

Token 138: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -1.1517960956552997e-05
    2. 'int' → logprob: -11.375011444091797
    3. ' Int' → logprob: -17.500011444091797
    4. '(Int' → logprob: -17.750011444091797
    5. '	Int' → logprob: -18.250011444091797
    6. '_int' → logprob: -18.875011444091797
    7. 'Ints' → logprob: -19.000011444091797
    8. 'INT' → logprob: -19.625011444091797
    9. '<Int' → logprob: -19.750011444091797
    10. 'In' → logprob: -20.750011444091797

Token 139: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.5577775128767826e-06
    2. '(' → logprob: -12.125005722045898
    3. '(
' → logprob: -16.7500057220459
    4. ' (' → logprob: -17.8750057220459
    5. 'self' → logprob: -19.2500057220459
    6. '((' → logprob: -19.3750057220459
    7. '[self' → logprob: -20.8750057220459
    8. ' self' → logprob: -21.2500057220459
    9. ' ' → logprob: -22.0000057220459
    10. '(Self' → logprob: -22.2500057220459

Token 140: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -6.749814019713085e-06
    2. '.' → logprob: -12.000006675720215
    3. 'x' → logprob: -14.500006675720215
    4. ' .' → logprob: -17.12500762939453
    5. ').' → logprob: -17.50000762939453
    6. '```' → logprob: -18.75000762939453
    7. 'self' → logprob: -19.50000762939453
    8. '<|end|>' → logprob: -19.62500762939453
    9. ')' → logprob: -19.87500762939453
    10. ' ' → logprob: -20.12500762939453

Token 141: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.012512002140283585
    2. '-' → logprob: -4.38751220703125
    3. '-self' → logprob: -13.76251220703125
    4. ' ' → logprob: -14.26251220703125
    5. ' ' → logprob: -14.51251220703125
    6. '-sub' → logprob: -16.88751220703125
    7. ' -
' → logprob: -17.88751220703125
    8. '-ex' → logprob: -18.13751220703125
    9. ')' → logprob: -18.26251220703125
    10. '−' → logprob: -18.38751220703125

Token 142: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0032443818636238575
    2. ' other' → logprob: -5.753244400024414
    3. '(other' → logprob: -9.628244400024414
    4. '.other' → logprob: -14.753244400024414
    5. 'Other' → logprob: -15.503244400024414
    6. '_other' → logprob: -15.878244400024414
    7. '<|end|>' → logprob: -17.378244400024414
    8. ' (' → logprob: -19.878244400024414
    9. ')' → logprob: -20.503244400024414
    10. '(' → logprob: -20.503244400024414

Token 143: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0008903791895136237
    2. ' if' → logprob: -7.375890254974365
    3. ')' → logprob: -8.750890731811523
    4. '.' → logprob: -9.375890731811523
    5. 'if' → logprob: -12.125890731811523
    6. ' .' → logprob: -12.250890731811523
    7. '<|end|>' → logprob: -12.875890731811523
    8. 'x' → logprob: -12.875890731811523
    9. ',' → logprob: -14.250890731811523
    10. ' ' → logprob: -14.375890731811523

Token 144: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0029495321214199066
    2. ' if' → logprob: -5.8779497146606445
    3. 'if' → logprob: -8.877949714660645
    4. ' )' → logprob: -13.252949714660645
    5. ' ' → logprob: -13.502949714660645
    6. '   ' → logprob: -14.002949714660645
    7. '           ' → logprob: -14.377949714660645
    8. '()' → logprob: -15.252949714660645
    9. '       ' → logprob: -15.627949714660645
    10. '         ' → logprob: -17.127948760986328

Token 145: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0030352321919053793
    2. ')' → logprob: -6.378035068511963
    3. 'if' → logprob: -6.628035068511963
    4. '           ' → logprob: -12.003035545349121
    5. ' ' → logprob: -13.503035545349121
    6. '<|end|>' → logprob: -14.628035545349121
    7. ' )' → logprob: -15.128035545349121
    8. '            ' → logprob: -15.253035545349121
    9. '               ' → logprob: -15.378035545349121
    10. '       ' → logprob: -15.503035545349121

Token 146: ' isinstance' (ID: 25889)
  Prédit: ' isinstance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.0024775585625320673
    2. 'is' → logprob: -6.002477645874023
    3. '(is' → logprob: -13.252477645874023
    4. ' is' → logprob: -18.002477645874023
    5. ' other' → logprob: -18.377477645874023
    6. ' (' → logprob: -18.877477645874023
    7. ' hasattr' → logprob: -19.377477645874023
    8. ' ' → logprob: -19.377477645874023
    9. 'other' → logprob: -19.627477645874023
    10. ' instanceof' → logprob: -19.752477645874023

Token 147: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -0.00016539888747502118
    2. 'other' → logprob: -8.750164985656738
    3. ' other' → logprob: -12.125164985656738
    4. '(' → logprob: -13.750164985656738
    5. 'Other' → logprob: -14.875164985656738
    6. '<|end|>' → logprob: -17.875165939331055
    7. '_other' → logprob: -18.000165939331055
    8. '.other' → logprob: -18.250165939331055
    9. '(
' → logprob: -19.000165939331055
    10. '-other' → logprob: -19.750165939331055

Token 148: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4021237802808173e-05
    2. 'other' → logprob: -12.375014305114746
    3. ' ,' → logprob: -12.625014305114746
    4. ',
' → logprob: -12.625014305114746
    5. ' other' → logprob: -14.500014305114746
    6. ',self' → logprob: -14.750014305114746
    7. '(other' → logprob: -15.250014305114746
    8. ',int' → logprob: -15.375014305114746
    9. 'else' → logprob: -15.875014305114746
    10. 'Other' → logprob: -16.00001335144043

Token 149: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.47874143719673157
    2. ' Mod' → logprob: -0.9787414073944092
    3. ' other' → logprob: -5.853741645812988
    4. 'other' → logprob: -6.603741645812988
    5. 'Other' → logprob: -8.228741645812988
    6. '(Mod' → logprob: -8.853741645812988
    7. '   ' → logprob: -12.478741645812988
    8. '.Mod' → logprob: -12.603741645812988
    9. ' ' → logprob: -12.853741645812988
    10. '_Mod' → logprob: -13.228741645812988

Token 150: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -6.52788148727268e-05
    2. 'int' → logprob: -9.750064849853516
    3. '           ' → logprob: -12.875064849853516
    4. '	Int' → logprob: -13.750064849853516
    5. '               ' → logprob: -14.000064849853516
    6. ')' → logprob: -14.250064849853516
    7. ' Int' → logprob: -14.375064849853516
    8. '       ' → logprob: -14.875064849853516
    9. '<Int' → logprob: -15.250064849853516
    10. '(Int' → logprob: -15.375064849853516

Token 151: ')' (ID: 8)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.3343437612056732
    2. ' else' → logprob: -1.8343437910079956
    3. ')' → logprob: -2.084343671798706
    4. '           ' → logprob: -10.209343910217285
    5. ',' → logprob: -11.459343910217285
    6. '        ' → logprob: -11.584343910217285
    7. '          ' → logprob: -12.084343910217285
    8. '       ' → logprob: -12.709343910217285
    9. '            ' → logprob: -12.709343910217285
    10. '         ' → logprob: -12.959343910217285

Token 152: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.07889353483915329
    2. ' else' → logprob: -2.5788934230804443
    3. '           ' → logprob: -12.953893661499023
    4. '               ' → logprob: -14.203893661499023
    5. '            ' → logprob: -14.953893661499023
    6. '        ' → logprob: -15.953893661499023
    7. '                ' → logprob: -16.453893661499023
    8. '          ' → logprob: -16.703893661499023
    9. '	else' → logprob: -16.953893661499023
    10. '         ' → logprob: -17.203893661499023

Token 153: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.056786056607961655
    2. ' Mod' → logprob: -3.681786060333252
    3. 'Mod' → logprob: -3.931786060333252
    4. '(Mod' → logprob: -5.306786060333252
    5. '           ' → logprob: -5.556786060333252
    6. '(' → logprob: -7.681786060333252
    7. ' other' → logprob: -8.306785583496094
    8. ' (' → logprob: -8.431785583496094
    9. '                ' → logprob: -8.681785583496094
    10. ' ' → logprob: -8.681785583496094

Token 154: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009844153188169003
    2. ' Mod' → logprob: -5.3848443031311035
    3. 'Mod' → logprob: -5.6348443031311035
    4. '                ' → logprob: -7.1348443031311035
    5. '           ' → logprob: -7.7598443031311035
    6. '            ' → logprob: -9.384843826293945
    7. '(Mod' → logprob: -9.384843826293945
    8. '              ' → logprob: -9.759843826293945
    9. '
' → logprob: -10.259843826293945
    10. ' ' → logprob: -10.259843826293945

Token 155: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' (adapté à ' Mod') → logprob: -0.22850920259952545
    2. ' Mod' → logprob: -1.6035091876983643
    3. '(Mod' → logprob: -5.978509426116943
    4. '               ' → logprob: -7.603509426116943
    5. 'self' → logprob: -10.728508949279785
    6. '           ' → logprob: -10.978508949279785
    7. ' self' → logprob: -11.603508949279785
    8. '_mod' → logprob: -13.603508949279785
    9. '                ' → logprob: -13.728508949279785
    10. '            ' → logprob: -13.853508949279785

Token 156: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -1.5451681974809617e-05
    2. 'int' → logprob: -11.500015258789062
    3. '(Int' → logprob: -13.000015258789062
    4. '(self' → logprob: -13.750015258789062
    5. '               ' → logprob: -13.875015258789062
    6. 'INT' → logprob: -14.875015258789062
    7. '           ' → logprob: -15.875015258789062
    8. 'In' → logprob: -16.000015258789062
    9. ' Int' → logprob: -16.250015258789062
    10. 'Ints' → logprob: -16.375015258789062

Token 157: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00043221889063715935
    2. '(' → logprob: -7.750432014465332
    3. ' (' → logprob: -14.375432014465332
    4. '(
' → logprob: -14.625432014465332
    5. 'self' → logprob: -15.375432014465332
    6. '(s' → logprob: -16.00043296813965
    7. '(sel' → logprob: -16.75043296813965
    8. ')(' → logprob: -17.50043296813965
    9. ' self' → logprob: -18.37543296813965
    10. ')' → logprob: -18.37543296813965

Token 158: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0010744920000433922
    2. '.' → logprob: -7.001074314117432
    3. 'x' → logprob: -9.87607479095459
    4. '-' → logprob: -10.25107479095459
    5. 'self' → logprob: -10.25107479095459
    6. ')' → logprob: -11.12607479095459
    7. ' -' → logprob: -11.62607479095459
    8. ' .' → logprob: -11.87607479095459
    9. ').' → logprob: -12.75107479095459
    10. '```' → logprob: -14.00107479095459

Token 159: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.10028473287820816
    2. '-' → logprob: -2.3502848148345947
    3. '-x' → logprob: -9.975284576416016
    4. ' ' → logprob: -11.350284576416016
    5. '-self' → logprob: -11.600284576416016
    6. '-sub' → logprob: -11.975284576416016
    7. ')' → logprob: -13.850284576416016
    8. 'x' → logprob: -14.975284576416016
    9. ' ' → logprob: -14.975284576416016
    10. '.subtract' → logprob: -15.350284576416016

Token 160: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.018150178715586662
    2. ' other' → logprob: -4.018150329589844
    3. '(other' → logprob: -15.643150329589844
    4. 'Other' → logprob: -17.643150329589844
    5. '.other' → logprob: -18.893150329589844
    6. '               ' → logprob: -19.268150329589844
    7. '           ' → logprob: -19.518150329589844
    8. '_other' → logprob: -20.143150329589844
    9. ' ' → logprob: -20.893150329589844
    10. '其他' → logprob: -21.643150329589844

Token 161: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07897207885980606
    2. ')
' → logprob: -2.578972101211548
    3. '       ' → logprob: -10.578971862792969
    4. '
' → logprob: -10.953971862792969
    5. ')

' → logprob: -11.203971862792969
    6. '           ' → logprob: -11.578971862792969
    7. '))' → logprob: -11.703971862792969
    8. '               ' → logprob: -13.203971862792969
    9. ')
' → logprob: -13.703971862792969
    10. ' )' → logprob: -13.703971862792969

Token 162: '           ' (ID: 352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9304108619689941
    2. '       ' → logprob: -0.9304108619689941
    3. '           ' → logprob: -1.5554108619689941
    4. '               ' → logprob: -9.805410385131836
    5. ' )' → logprob: -10.680410385131836
    6. '   ' → logprob: -10.930410385131836
    7. '          ' → logprob: -12.305410385131836
    8. '        ' → logprob: -12.555410385131836
    9. ')

' → logprob: -13.555410385131836
    10. '      ' → logprob: -13.805410385131836

Token 163: ' )

' (ID: 11467)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4298159182071686
    2. ')' → logprob: -1.0548158884048462
    3. '<|end|>' → logprob: -6.929815769195557
    4. '   ' → logprob: -9.679816246032715
    5. 'def' → logprob: -10.679816246032715
    6. ' )' → logprob: -10.679816246032715
    7. '<|end|>' → logprob: -12.429816246032715
    8. ')

' (adapté à ' )

') → logprob: -12.679816246032715
    9. '```' → logprob: -12.804816246032715
    10. '           ' → logprob: -13.054816246032715

Token 164: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006442510988563299
    2. 'def' → logprob: -6.006442546844482
    3. '_' → logprob: -6.631442546844482
    4. '<|end|>' → logprob: -6.756442546844482
    5. '   ' → logprob: -7.756442546844482
    6. '\' → logprob: -8.006442070007324
    7. '        
' → logprob: -8.256442070007324
    8. ')' → logprob: -8.631442070007324
    9. '```' → logprob: -9.881442070007324
    10. '*' → logprob: -10.381442070007324

Token 165: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.051637038588523865
    2. '       ' → logprob: -3.0516369342803955
    3. '   ' → logprob: -6.051637172698975
    4. ' def' → logprob: -7.301637172698975
    5. ' ' → logprob: -12.051636695861816
    6. '        
' → logprob: -12.676636695861816
    7. '
' → logprob: -13.551636695861816
    8. '     ' → logprob: -13.676636695861816
    9. '    ' → logprob: -13.801636695861816
    10. '      ' → logprob: -14.051636695861816

Token 166: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.16022484004497528
    2. ' __' → logprob: -1.9102247953414917
    3. '.__' → logprob: -15.535224914550781
    4. '_mul' → logprob: -15.535224914550781
    5. '___' → logprob: -15.910224914550781
    6. '**' → logprob: -16.91022491455078
    7. 'def' → logprob: -17.53522491455078
    8. ' ' → logprob: -18.03522491455078
    9. '____' → logprob: -18.28522491455078
    10. ',__' → logprob: -18.53522491455078

Token 167: 'mul' (ID: 44857)
  Prédit: 'mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -3.128163257315464e-07
    2. 'pow' → logprob: -15.875
    3. 'mult' → logprob: -16.75
    4. 'r' → logprob: -16.875
    5. ' mul' → logprob: -18.0
    6. '_mul' → logprob: -18.25
    7. 'rm' → logprob: -18.625
    8. 'neg' → logprob: -19.25
    9. 'Mul' → logprob: -19.875
    10. 'add' → logprob: -20.75

Token 168: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.023357167840003967
    2. '__' → logprob: -3.7733571529388428
    3. '__(
' → logprob: -9.898357391357422
    4. '__((' → logprob: -10.773357391357422
    5. '__('' → logprob: -11.023357391357422
    6. '(self' → logprob: -11.273357391357422
    7. '(' → logprob: -12.398357391357422
    8. '__(*' → logprob: -13.023357391357422
    9. '_' → logprob: -13.148357391357422
    10. '__("' → logprob: -13.273357391357422

Token 169: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.3451433409936726e-05
    2. '(self' → logprob: -10.750033378601074
    3. 'other' → logprob: -11.625033378601074
    4. ' self' → logprob: -12.750033378601074
    5. '<|end|>' → logprob: -16.87503433227539
    6. 'def' → logprob: -17.50003433227539
    7. '$self' → logprob: -17.50003433227539
    8. '	self' → logprob: -18.12503433227539
    9. '*self' → logprob: -18.25003433227539
    10. ')' → logprob: -18.37503433227539

Token 170: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20310774445533752
    2. '(self' → logprob: -1.8281077146530151
    3. '__(' → logprob: -4.453107833862305
    4. '(' → logprob: -4.703107833862305
    5. 'self' → logprob: -7.078107833862305
    6. '(other' → logprob: -7.703107833862305
    7. ' (' → logprob: -7.828107833862305
    8. ' ,' → logprob: -8.453107833862305
    9. '__,' → logprob: -9.078107833862305
    10. ')(' → logprob: -9.453107833862305

Token 171: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.47409817576408386
    2. ' other' → logprob: -0.9740982055664062
    3. 'self' → logprob: -11.349098205566406
    4. '(other' → logprob: -11.974098205566406
    5. 'Other' → logprob: -13.349098205566406
    6. ' self' → logprob: -14.099098205566406
    7. '_other' → logprob: -14.599098205566406
    8. '.other' → logprob: -15.349098205566406
    9. ' ' → logprob: -17.849098205566406
    10. ' Other' → logprob: -19.599098205566406

Token 172: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010119748301804066
    2. '):
' → logprob: -4.635119915008545
    3. ':' → logprob: -9.010119438171387
    4. ',' → logprob: -9.135119438171387
    5. '           ' → logprob: -9.635119438171387
    6. '       ' → logprob: -10.635119438171387
    7. ' ):' → logprob: -11.135119438171387
    8. ')' → logprob: -12.260119438171387
    9. 'self' → logprob: -12.260119438171387
    10. '(self' → logprob: -12.385119438171387

Token 173: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021697649732232094
    2. '               ' → logprob: -3.896697759628296
    3. 'return' → logprob: -7.146697521209717
    4. ' return' → logprob: -8.271697998046875
    5. '(
' → logprob: -9.771697998046875
    6. '(' → logprob: -10.896697998046875
    7. '          ' → logprob: -11.021697998046875
    8. '            ' → logprob: -11.896697998046875
    9. '       ' → logprob: -13.021697998046875
    10. ' (' → logprob: -13.396697998046875

Token 174: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5200268030166626
    2. '           ' → logprob: -1.0200268030166626
    3. ' return' → logprob: -3.145026683807373
    4. '               ' → logprob: -6.520026683807373
    5. '(' → logprob: -9.020027160644531
    6. '       ' → logprob: -9.020027160644531
    7. '(
' → logprob: -9.645027160644531
    8. '(return' → logprob: -10.520027160644531
    9. '   ' → logprob: -11.645027160644531
    10. ' (' → logprob: -11.895027160644531

Token 175: ' (
' (ID: 4112)
  Prédit: '(
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(
' → logprob: -0.005205651745200157
    2. '(' → logprob: -5.6302056312561035
    3. 'Mod' → logprob: -6.5052056312561035
    4. '(Mod' → logprob: -9.255206108093262
    5. '(
' → logprob: -11.630206108093262
    6. '               ' → logprob: -13.630206108093262
    7. ' Mod' → logprob: -13.755206108093262
    8. ' (
' → logprob: -14.130206108093262
    9. '           ' → logprob: -14.380206108093262
    10. '(

' → logprob: -15.130206108093262

Token 176: '               ' (ID: 506)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.474293977022171
    2. '               ' → logprob: -0.9742939472198486
    3. '           ' → logprob: -8.97429370880127
    4. ' Mod' → logprob: -9.47429370880127
    5. '(Mod' → logprob: -11.59929370880127
    6. 'mod' → logprob: -13.09929370880127
    7. '              ' → logprob: -14.34929370880127
    8. '   ' → logprob: -14.47429370880127
    9. '_mod' → logprob: -15.09929370880127
    10. ' ' → logprob: -15.47429370880127

Token 177: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' (adapté à ' Mod') → logprob: -1.7432603272027336e-06
    2. ' Mod' → logprob: -14.000001907348633
    3. '               ' → logprob: -14.625001907348633
    4. '(Mod' → logprob: -15.000001907348633
    5. '           ' → logprob: -19.125001907348633
    6. 'mod' → logprob: -20.000001907348633
    7. '_mod' → logprob: -20.750001907348633
    8. '                   ' → logprob: -20.875001907348633
    9. '.Mod' → logprob: -21.125001907348633
    10. '   ' → logprob: -21.500001907348633

Token 178: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -2.15310683415737e-05
    2. 'int' → logprob: -10.750021934509277
    3. 'INT' → logprob: -18.75002098083496
    4. ' Int' → logprob: -18.87502098083496
    5. '_int' → logprob: -19.37502098083496
    6. '(Int' → logprob: -20.37502098083496
    7. '	Int' → logprob: -20.50002098083496
    8. 'Ints' → logprob: -20.87502098083496
    9. '<Int' → logprob: -21.12502098083496
    10. 'In' → logprob: -21.37502098083496

Token 179: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.0325924449716695e-05
    2. '(' → logprob: -11.50001049041748
    3. '(
' → logprob: -15.87501049041748
    4. 'self' → logprob: -17.000009536743164
    5. ' (' → logprob: -18.500009536743164
    6. '[self' → logprob: -19.750009536743164
    7. ' self' → logprob: -19.875009536743164
    8. '<|end|>' → logprob: -19.875009536743164
    9. '(Self' → logprob: -20.000009536743164
    10. '*self' → logprob: -20.750009536743164

Token 180: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0004958406207151711
    2. '.' → logprob: -7.625495910644531
    3. ' .' → logprob: -12.125495910644531
    4. ').' → logprob: -14.125495910644531
    5. '<|end|>' → logprob: -14.125495910644531
    6. ' ' → logprob: -15.375495910644531
    7. '```' → logprob: -15.750495910644531
    8. 'x' → logprob: -16.12549591064453
    9. '`.' → logprob: -16.12549591064453
    10. ')' → logprob: -16.62549591064453

Token 181: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.01252718921750784
    2. '*' → logprob: -4.387526988983154
    3. ' ' → logprob: -11.262527465820312
    4. '*self' → logprob: -12.512527465820312
    5. ' ' → logprob: -14.512527465820312
    6. '*object' → logprob: -14.887527465820312
    7. '*x' → logprob: -17.012527465820312
    8. ' *
' → logprob: -17.137527465820312
    9. '  ' → logprob: -17.262527465820312
    10. '.' → logprob: -17.512527465820312

Token 182: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.01815907657146454
    2. ' other' → logprob: -4.018158912658691
    3. '(other' → logprob: -11.643158912658691
    4. '.other' → logprob: -15.268158912658691
    5. 'Other' → logprob: -15.893158912658691
    6. '_other' → logprob: -17.518159866333008
    7. ' ' → logprob: -18.143159866333008
    8. '<|end|>' → logprob: -18.643159866333008
    9. '   ' → logprob: -18.893159866333008
    10. ' (' → logprob: -19.393159866333008

Token 183: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0004192330234218389
    2. '.' → logprob: -7.8754191398620605
    3. '<|end|>' → logprob: -10.625419616699219
    4. ').' → logprob: -12.000419616699219
    5. ' .' → logprob: -12.500419616699219
    6. ')' → logprob: -13.250419616699219
    7. 'x' → logprob: -14.000419616699219
    8. ' ' → logprob: -14.500419616699219
    9. ' if' → logprob: -14.625419616699219
    10. '<|end|>' → logprob: -15.000419616699219

Token 184: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.7252845029579476e-05
    2. ' if' → logprob: -10.875027656555176
    3. '           ' → logprob: -12.125027656555176
    4. ' )' → logprob: -13.375027656555176
    5. 'if' → logprob: -13.750027656555176
    6. '       ' → logprob: -16.25002670288086
    7. '               ' → logprob: -17.12502670288086
    8. '            ' → logprob: -18.00002670288086
    9. 'If' → logprob: -18.12502670288086
    10. '          ' → logprob: -18.25002670288086

Token 185: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.22079089283943176
    2. ')' → logprob: -2.2207908630371094
    3. '           ' → logprob: -2.4707908630371094
    4. 'if' → logprob: -5.470790863037109
    5. '               ' → logprob: -7.595790863037109
    6. '            ' → logprob: -9.09579086303711
    7. '          ' → logprob: -9.09579086303711
    8. ' )' → logprob: -10.34579086303711
    9. '<|end|>' → logprob: -10.59579086303711
    10. '       ' → logprob: -11.22079086303711

Token 186: ' isinstance' (ID: 25889)
  Prédit: ' isinstance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.061970822513103485
    2. 'is' → logprob: -2.8119707107543945
    3. '(is' → logprob: -12.686970710754395
    4. '               ' → logprob: -19.18697166442871
    5. ' instanceof' → logprob: -19.18697166442871
    6. 'instance' → logprob: -19.31197166442871
    7. '           ' → logprob: -19.56197166442871
    8. ' hasattr' → logprob: -19.56197166442871
    9. '.is' → logprob: -19.56197166442871
    10. ' is' → logprob: -19.81197166442871

Token 187: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -9.686778503237292e-05
    2. 'other' → logprob: -9.250097274780273
    3. 'Other' → logprob: -14.750097274780273
    4. ' other' → logprob: -15.000097274780273
    5. '.other' → logprob: -19.625097274780273
    6. 'OTHER' → logprob: -20.125097274780273
    7. '(' → logprob: -20.125097274780273
    8. '_other' → logprob: -20.125097274780273
    9. '-other' → logprob: -21.750097274780273
    10. '其他' → logprob: -22.250097274780273

Token 188: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.650518920039758e-06
    2. ' ,' → logprob: -13.250003814697266
    3. ',
' → logprob: -14.625003814697266
    4. '<|end|>' → logprob: -15.000003814697266
    5. ',self' → logprob: -15.375003814697266
    6. 'other' → logprob: -15.500003814697266
    7. 'Mod' → logprob: -16.125003814697266
    8. '(Mod' → logprob: -17.000003814697266
    9. ',M' → logprob: -17.000003814697266
    10. '...' → logprob: -17.250003814697266

Token 189: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.16024616360664368
    2. ' Mod' → logprob: -1.9102461338043213
    3. '(Mod' → logprob: -10.785245895385742
    4. '.Mod' → logprob: -15.285245895385742
    5. 'mod' → logprob: -15.535245895385742
    6. '_Mod' → logprob: -15.785245895385742
    7. 'Mo' → logprob: -15.910245895385742
    8. 'Modulo' → logprob: -16.035245895385742
    9. '_mod' → logprob: -16.410245895385742
    10. ' ' → logprob: -16.535245895385742

Token 190: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -0.0002624086628202349
    2. 'int' → logprob: -8.250262260437012
    3. ' Int' → logprob: -15.000262260437012
    4. 'In' → logprob: -15.500262260437012
    5. ')' → logprob: -15.750262260437012
    6. 'nt' → logprob: -15.875262260437012
    7. '	Int' → logprob: -16.000263214111328
    8. 'Ints' → logprob: -16.500263214111328
    9. '(Int' → logprob: -16.875263214111328
    10. '<Int' → logprob: -17.500263214111328

Token 191: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.037835580878891e-05
    2. 'else' → logprob: -10.00005054473877
    3. ' else' → logprob: -12.62505054473877
    4. ' )' → logprob: -14.12505054473877
    5. '           ' → logprob: -14.25005054473877
    6. '       ' → logprob: -16.625049591064453
    7. '               ' → logprob: -17.125049591064453
    8. '         ' → logprob: -17.625049591064453
    9. ')
' → logprob: -18.375049591064453
    10. '        ' → logprob: -18.375049591064453

Token 192: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.2299356907606125
    2. 'else' → logprob: -1.604935646057129
    3. '           ' → logprob: -5.729935646057129
    4. ')' → logprob: -6.979935646057129
    5. '               ' → logprob: -8.229935646057129
    6. '            ' → logprob: -10.479935646057129
    7. '          ' → logprob: -10.979935646057129
    8. '         ' → logprob: -12.479935646057129
    9. ' ' → logprob: -12.604935646057129
    10. '             ' → logprob: -12.979935646057129

Token 193: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004858595784753561
    2. 'Mod' → logprob: -6.004858493804932
    3. ' Mod' → logprob: -6.629858493804932
    4. '           ' → logprob: -7.379858493804932
    5. '(Mod' → logprob: -8.25485897064209
    6. '                ' → logprob: -9.25485897064209
    7. '
' → logprob: -10.87985897064209
    8. '                   ' → logprob: -11.00485897064209
    9. '              ' → logprob: -11.37985897064209
    10. '            ' → logprob: -11.62985897064209

Token 194: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.045277174562215805
    2. 'Mod' → logprob: -3.4202771186828613
    3. '(Mod' → logprob: -5.045277118682861
    4. ' Mod' → logprob: -5.295277118682861
    5. '           ' → logprob: -9.67027759552002
    6. '(' → logprob: -11.04527759552002
    7. '                ' → logprob: -11.79527759552002
    8. 'self' → logprob: -12.42027759552002
    9. ' (' → logprob: -12.79527759552002
    10. '                   ' → logprob: -12.92027759552002

Token 195: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' (adapté à ' Mod') → logprob: -0.023277394473552704
    2. ' Mod' → logprob: -3.7732772827148438
    3. '               ' → logprob: -11.023277282714844
    4. '(Mod' → logprob: -11.148277282714844
    5. '           ' → logprob: -13.898277282714844
    6. '_Mod' → logprob: -16.898277282714844
    7. '            ' → logprob: -17.023277282714844
    8. '                   ' → logprob: -17.148277282714844
    9. '_mod' → logprob: -17.148277282714844
    10. '                ' → logprob: -17.148277282714844

Token 196: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -1.2664456789934775e-06
    2. 'int' → logprob: -13.625000953674316
    3. '(Int' → logprob: -17.500001907348633
    4. 'In' → logprob: -18.375001907348633
    5. ' Int' → logprob: -18.625001907348633
    6. '	Int' → logprob: -19.125001907348633
    7. 'Ints' → logprob: -19.500001907348633
    8. 'INT' → logprob: -19.500001907348633
    9. '<Int' → logprob: -19.750001907348633
    10. 'I' → logprob: -19.875001907348633

Token 197: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.0484450437361374e-05
    2. '(' → logprob: -10.125040054321289
    3. 'self' → logprob: -15.500040054321289
    4. ' (' → logprob: -16.50004005432129
    5. '(
' → logprob: -16.62504005432129
    6. '(s' → logprob: -18.00004005432129
    7. ' self' → logprob: -19.25004005432129
    8. '(sel' → logprob: -19.37504005432129
    9. '(this' → logprob: -19.75004005432129
    10. '((' → logprob: -21.00004005432129

Token 198: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0019997733179479837
    2. '.' → logprob: -6.251999855041504
    3. '*' → logprob: -10.501999855041504
    4. ' *' → logprob: -11.001999855041504
    5. ' .' → logprob: -11.126999855041504
    6. ')' → logprob: -12.501999855041504
    7. 'x' → logprob: -12.501999855041504
    8. 'self' → logprob: -13.876999855041504
    9. '```' → logprob: -13.876999855041504
    10. ').' → logprob: -14.251999855041504

Token 199: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3868727385997772
    2. '*' → logprob: -1.1368727684020996
    3. ' ' → logprob: -14.261872291564941
    4. '*object' → logprob: -14.386872291564941
    5. ')' → logprob: -15.261872291564941
    6. ' ' → logprob: -15.636872291564941
    7. '**' → logprob: -16.261873245239258
    8. '*self' → logprob: -17.636873245239258
    9. ' **' → logprob: -18.261873245239258
    10. '*out' → logprob: -18.511873245239258

Token 200: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0031777136027812958
    2. ' other' → logprob: -5.753177642822266
    3. '(other' → logprob: -17.628177642822266
    4. 'Other' → logprob: -19.253177642822266
    5. '   ' → logprob: -19.628177642822266
    6. '               ' → logprob: -19.628177642822266
    7. '           ' → logprob: -19.878177642822266
    8. 'othe' → logprob: -20.378177642822266
    9. '其他' → logprob: -20.378177642822266
    10. '.other' → logprob: -20.503177642822266

Token 201: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001963881659321487
    2. ')
' → logprob: -8.62519645690918
    3. '           ' → logprob: -12.12519645690918
    4. '       ' → logprob: -12.75019645690918
    5. '<|end|>' → logprob: -13.00019645690918
    6. ' )' → logprob: -13.12519645690918
    7. '))' → logprob: -13.25019645690918
    8. ')

' → logprob: -15.00019645690918
    9. ')))' → logprob: -15.12519645690918
    10. ')return' → logprob: -15.25019645690918

Token 202: '           ' (ID: 352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007771539967507124
    2. '           ' → logprob: -5.2577714920043945
    3. '       ' → logprob: -6.0077714920043945
    4. ' )' → logprob: -10.507771492004395
    5. '<|end|>' → logprob: -10.507771492004395
    6. '               ' → logprob: -11.507771492004395
    7. '   ' → logprob: -13.132771492004395
    8. ')
' → logprob: -13.257771492004395
    9. '        ' → logprob: -13.632771492004395
    10. '          ' → logprob: -13.757771492004395

Token 203: ' )

' (ID: 11467)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6046028733253479
    2. '<|end|>' → logprob: -1.1046028137207031
    3. '       ' → logprob: -2.104602813720703
    4. '<|end|>' → logprob: -7.979602813720703
    5. '   ' → logprob: -10.604602813720703
    6. ')return' → logprob: -11.104602813720703
    7. ' )' → logprob: -11.104602813720703
    8. '```' → logprob: -11.479602813720703
    9. 'def' → logprob: -11.729602813720703
    10. '}' → logprob: -11.729602813720703

Token 204: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017389798536896706
    2. '<|end|>' → logprob: -4.14238977432251
    3. 'def' → logprob: -7.39238977432251
    4. '   ' → logprob: -8.142390251159668
    5. '        
' → logprob: -8.517390251159668
    6. '<|end|>' → logprob: -9.017390251159668
    7. '```' → logprob: -10.642390251159668
    8. '    
' → logprob: -11.017390251159668
    9. ')' → logprob: -11.517390251159668
    10. '
' → logprob: -11.767390251159668

Token 205: ' def' (ID: 1056)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1274319738149643
    2. 'def' (adapté à ' def') → logprob: -2.127431869506836
    3. ' def' → logprob: -8.002431869506836
    4. '   ' → logprob: -8.752431869506836
    5. '        
' → logprob: -12.752431869506836
    6. '      ' → logprob: -13.502431869506836
    7. ' ' → logprob: -13.752431869506836
    8. '	def' → logprob: -14.002431869506836
    9. ')' → logprob: -14.502431869506836
    10. '```' → logprob: -14.502431869506836

Token 206: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.008681939914822578
    2. ' __' → logprob: -4.758681774139404
    3. 'pow' → logprob: -9.633682250976562
    4. '_pow' → logprob: -14.383682250976562
    5. 'def' → logprob: -14.633682250976562
    6. ' pow' → logprob: -14.883682250976562
    7. '.__' → logprob: -15.508682250976562
    8. '/__' → logprob: -16.258682250976562
    9. '```' → logprob: -16.758682250976562
    10. '(__' → logprob: -17.133682250976562

Token 207: 'tr' (ID: 371)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.032103776931762695
    2. 'flo' → logprob: -4.032103538513184
    3. 'tr' → logprob: -4.282103538513184
    4. 'rm' → logprob: -10.657103538513184
    5. 'eq' → logprob: -11.532103538513184
    6. 'power' → logprob: -12.782103538513184
    7. 'mod' → logprob: -12.782103538513184
    8. 'r' → logprob: -13.532103538513184
    9. 'neg' → logprob: -14.282103538513184
    10. 'floor' → logprob: -14.782103538513184

Token 208: 'ued' (ID: 5829)
  Prédit: 'ued'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ued' → logprob: -1.5928495486150496e-05
    2. 'ue' → logprob: -11.125016212463379
    3. 'u' → logprob: -14.000016212463379
    4. 'ud' → logprob: -16.000015258789062
    5. '__' → logprob: -16.500015258789062
    6. 'ed' → logprob: -17.000015258789062
    7. 'div' → logprob: -18.250015258789062
    8. 'd' → logprob: -19.500015258789062
    9. 'e' → logprob: -19.625015258789062
    10. 'ues' → logprob: -20.125015258789062

Token 209: 'iv' (ID: 349)
  Prédit: 'iv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -0.47457239031791687
    2. '__' → logprob: -0.9745724201202393
    3. '__(' → logprob: -8.09957218170166
    4. 'def' → logprob: -9.59957218170166
    5. 'v' → logprob: -10.34957218170166
    6. '__
' → logprob: -10.72457218170166
    7. 'ef' → logprob: -10.97457218170166
    8. 'div' → logprob: -11.09957218170166
    9. '__/' → logprob: -11.09957218170166
    10. '__

' → logprob: -11.22457218170166

Token 210: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0031856747809797525
    2. '__' → logprob: -5.753185749053955
    3. '__(
' → logprob: -12.753185272216797
    4. '__('' → logprob: -13.128185272216797
    5. '__((' → logprob: -13.753185272216797
    6. '(self' → logprob: -13.753185272216797
    7. '__("' → logprob: -14.753185272216797
    8. '(' → logprob: -15.628185272216797
    9. '__(*' → logprob: -15.628185272216797
    10. '__

' → logprob: -16.878185272216797

Token 211: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.2842308680992573e-05
    2. 'other' → logprob: -10.750022888183594
    3. ' self' → logprob: -13.750022888183594
    4. '(self' → logprob: -15.500022888183594
    5. '       ' → logprob: -17.125022888183594
    6. 'def' → logprob: -18.375022888183594
    7. '           ' → logprob: -19.500022888183594
    8. 'Other' → logprob: -19.750022888183594
    9. ')' → logprob: -20.375022888183594
    10. ' other' → logprob: -20.500022888183594

Token 212: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008369080605916679
    2. 'self' → logprob: -7.1258368492126465
    3. ',self' → logprob: -11.125837326049805
    4. '_,' → logprob: -11.875837326049805
    5. '(self' → logprob: -12.125837326049805
    6. '__,' → logprob: -13.500837326049805
    7. ' ,' → logprob: -13.625837326049805
    8. ',
' → logprob: -14.000837326049805
    9. '(' → logprob: -14.625837326049805
    10. '       ' → logprob: -15.125837326049805

Token 213: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.078916996717453
    2. ' other' → logprob: -2.5789170265197754
    3. 'self' → logprob: -10.953916549682617
    4. 'Other' → logprob: -11.703916549682617
    5. '(other' → logprob: -14.078916549682617
    6. '_other' → logprob: -14.328916549682617
    7. ' self' → logprob: -16.453916549682617
    8. '.other' → logprob: -16.703916549682617
    9. '       ' → logprob: -18.828916549682617
    10. 'OTHER' → logprob: -19.453916549682617

Token 214: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04860779643058777
    2. '):
' → logprob: -3.04860782623291
    3. '):
' → logprob: -11.92360782623291
    4. '       ' → logprob: -12.29860782623291
    5. ',' → logprob: -13.04860782623291
    6. ':' → logprob: -13.17360782623291
    7. ')' → logprob: -13.54860782623291
    8. '           ' → logprob: -13.79860782623291
    9. '):

' → logprob: -14.17360782623291
    10. 'self' → logprob: -14.29860782623291

Token 215: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -9.031157969729975e-05
    2. '               ' → logprob: -9.625090599060059
    3. '          ' → logprob: -11.875090599060059
    4. '            ' → logprob: -12.125090599060059
    5. 'return' → logprob: -12.375090599060059
    6. ' return' → logprob: -12.500090599060059
    7. '       ' → logprob: -13.125090599060059
    8. '(' → logprob: -14.875090599060059
    9. ' if' → logprob: -15.250090599060059
    10. '        ' → logprob: -15.250090599060059

Token 216: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.023072624579072
    2. 'pow' → logprob: -4.648072719573975
    3. '           ' → logprob: -5.023072719573975
    4. 'if' → logprob: -5.648072719573975
    5. 'inv' → logprob: -6.398072719573975
    6. 'def' → logprob: -7.273072719573975
    7. ' return' → logprob: -8.023072242736816
    8. 'exp' → logprob: -8.523072242736816
    9. 'other' → logprob: -8.773072242736816
    10. 'b' → logprob: -11.273072242736816

Token 217: ' (
' (ID: 4112)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.6731987595558167
    2. '(
' → logprob: -1.4231986999511719
    3. 'self' → logprob: -1.6731986999511719
    4. '               ' → logprob: -3.923198699951172
    5. ' Mod' → logprob: -3.923198699951172
    6. ' self' → logprob: -4.423198699951172
    7. '(' → logprob: -5.423198699951172
    8. '           ' → logprob: -6.048198699951172
    9. ' (
' → logprob: -6.173198699951172
    10. '(Mod' → logprob: -7.798198699951172

Token 218: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.47590532898902893
    2. 'Mod' → logprob: -0.9759052991867065
    3. 'self' → logprob: -6.850905418395996
    4. '           ' → logprob: -7.600905418395996
    5. ' Mod' → logprob: -8.475905418395996
    6. '(Mod' → logprob: -10.350905418395996
    7. 'mod' → logprob: -11.725905418395996
    8. '              ' → logprob: -12.100905418395996
    9. '   ' → logprob: -12.975905418395996
    10. ' self' → logprob: -12.975905418395996

Token 219: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' (adapté à ' Mod') → logprob: -0.032370876520872116
    2. 'self' → logprob: -3.5323708057403564
    3. '               ' → logprob: -6.0323710441589355
    4. '(Mod' → logprob: -9.157370567321777
    5. 'other' → logprob: -9.657370567321777
    6. ' Mod' → logprob: -10.407370567321777
    7. '(self' → logprob: -11.782370567321777
    8. '           ' → logprob: -12.032370567321777
    9. 'mod' → logprob: -14.032370567321777
    10. 'Modulo' → logprob: -14.157370567321777

Token 220: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -3.4121114822482923e-06
    2. 'int' → logprob: -12.625003814697266
    3. '(Int' → logprob: -18.000003814697266
    4. ' Int' → logprob: -18.875003814697266
    5. '[Int' → logprob: -19.375003814697266
    6. 'INT' → logprob: -19.375003814697266
    7. '_int' → logprob: -19.875003814697266
    8. '<Int' → logprob: -20.000003814697266
    9. 'Ints' → logprob: -20.125003814697266
    10. '	Int' → logprob: -20.625003814697266

Token 221: '(
' (ID: 1607)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.7120533811976202e-05
    2. '(' → logprob: -11.500017166137695
    3. '(
' → logprob: -12.000017166137695
    4. 'self' → logprob: -14.625017166137695
    5. '(pow' → logprob: -16.000017166137695
    6. '(int' → logprob: -16.250017166137695
    7. '(

' → logprob: -17.000017166137695
    8. '((' → logprob: -17.500017166137695
    9. '(this' → logprob: -18.625017166137695
    10. '[self' → logprob: -19.500017166137695

Token 222: '                   ' (ID: 699)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0026263119652867317
    2. '               ' → logprob: -6.002626419067383
    3. '(self' → logprob: -9.002626419067383
    4. 'other' → logprob: -11.252626419067383
    5. ' self' → logprob: -11.502626419067383
    6. '           ' → logprob: -13.127626419067383
    7. 'pow' → logprob: -13.252626419067383
    8. 'int' → logprob: -15.252626419067383
    9. '                   ' → logprob: -16.002626419067383
    10. '   ' → logprob: -16.752626419067383

Token 223: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.007652534171938896
    2. 'pow' → logprob: -4.882652759552002
    3. '(self' → logprob: -10.882652282714844
    4. 'other' → logprob: -11.007652282714844
    5. '               ' → logprob: -11.757652282714844
    6. '           ' → logprob: -13.382652282714844
    7. ' self' → logprob: -14.632652282714844
    8. '                   ' → logprob: -15.007652282714844
    9. '   ' → logprob: -15.257652282714844
    10. '(pow' → logprob: -15.757652282714844

Token 224: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -1.5048530030981055e-06
    2. '.' → logprob: -13.625001907348633
    3. 'x' → logprob: -16.250001907348633
    4. ' .' → logprob: -16.875001907348633
    5. ').' → logprob: -17.375001907348633
    6. 'self' → logprob: -17.500001907348633
    7. ' ' → logprob: -18.500001907348633
    8. '```' → logprob: -18.750001907348633
    9. '(' → logprob: -19.000001907348633
    10. ')' → logprob: -19.250001907348633

Token 225: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.015673695132136345
    2. ' *' → logprob: -4.390673637390137
    3. ')' → logprob: -6.015673637390137
    4. ')*' → logprob: -7.515673637390137
    5. '                   ' → logprob: -9.640673637390137
    6. '*
' → logprob: -10.515673637390137
    7. '*self' → logprob: -10.890673637390137
    8. ',' → logprob: -11.515673637390137
    9. '*object' → logprob: -11.640673637390137
    10. '```' → logprob: -11.765673637390137

Token 226: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -3.953082341467962e-05
    2. ' pow' → logprob: -10.750039100646973
    3. '(pow' → logprob: -11.625039100646973
    4. '   ' → logprob: -13.000039100646973
    5. 'other' → logprob: -13.375039100646973
    6. 'mod' → logprob: -13.625039100646973
    7. '           ' → logprob: -13.875039100646973
    8. '                   ' → logprob: -14.125039100646973
    9. '               ' → logprob: -14.375039100646973
    10. '       ' → logprob: -14.625039100646973

Token 227: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -0.0019757419358938932
    2. '(' → logprob: -6.7519755363464355
    3. 'other' → logprob: -7.3769755363464355
    4. '(
' → logprob: -8.626976013183594
    5. '(

' → logprob: -15.626976013183594
    6. ' other' → logprob: -15.876976013183594
    7. '_other' → logprob: -17.251976013183594
    8. 'Other' → logprob: -17.376976013183594
    9. '.other' → logprob: -17.501976013183594
    10. '(
' → logprob: -17.876976013183594

Token 228: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.00016766376211307943
    2. '.' → logprob: -9.000167846679688
    3. '(x' → logprob: -11.500167846679688
    4. '(' → logprob: -11.625167846679688
    5. ',' → logprob: -11.750167846679688
    6. 'x' → logprob: -11.875167846679688
    7. ' .' → logprob: -12.750167846679688
    8. ').' → logprob: -13.500167846679688
    9. ',x' → logprob: -14.125167846679688
    10. ')' → logprob: -14.250167846679688

Token 229: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7372048862162046e-05
    2. ',
' → logprob: -11.375027656555176
    3. ',M' → logprob: -12.125027656555176
    4. ' ,' → logprob: -12.500027656555176
    5. ')' → logprob: -13.375027656555176
    6. ',-' → logprob: -13.500027656555176
    7. '(' → logprob: -14.125027656555176
    8. '           ' → logprob: -14.375027656555176
    9. '(Mod' → logprob: -15.000027656555176
    10. '),' → logprob: -15.250027656555176

Token 230: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.00010843054042197764
    2. ' MOD' → logprob: -9.62510871887207
    3. '-' → logprob: -10.25010871887207
    4. '-M' → logprob: -12.75010871887207
    5. '   ' → logprob: -13.62510871887207
    6. '           ' → logprob: -14.00010871887207
    7. 'MO' → logprob: -14.50010871887207
    8. '(M' → logprob: -14.62510871887207
    9. '.MOD' → logprob: -15.37510871887207
    10. '               ' → logprob: -15.50010871887207

Token 231: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0006266565760597587
    2. ' -' → logprob: -7.375626564025879
    3. ' ' → logprob: -16.375627517700195
    4. '   ' → logprob: -17.500627517700195
    5. ',' → logprob: -18.500627517700195
    6. '–' → logprob: -18.750627517700195
    7. '  ' → logprob: -18.875627517700195
    8. '```' → logprob: -19.625627517700195
    9. '−' → logprob: -20.125627517700195
    10. '-
' → logprob: -20.250627517700195

Token 232: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.500000953674316
    3. '-' → logprob: -17.125
    4. '```' → logprob: -17.25
    5. '
' → logprob: -17.375
    6. '۲' → logprob: -17.6875
    7. '

' → logprob: -18.375
    8. '   ' → logprob: -18.625
    9. '２' → logprob: -18.8125
    10. 'to' → logprob: -19.125

Token 233: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.375
    3. '```' → logprob: -16.125
    4. '
' → logprob: -16.75
    5. '

' → logprob: -17.75
    6. '-' → logprob: -18.9375
    7. '۲' → logprob: -19.375
    8. '3' → logprob: -19.5
    9. '２' → logprob: -19.5
    10. '   ' → logprob: -19.5625

Token 234: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18114687502384186
    2. ')' → logprob: -1.8061468601226807
    3. '               ' → logprob: -7.30614709854126
    4. '           ' → logprob: -7.80614709854126
    5. '),' → logprob: -9.556146621704102
    6. '<|end|>' → logprob: -9.556146621704102
    7. '))' → logprob: -9.806146621704102
    8. '                   ' → logprob: -10.181146621704102
    9. ' if' → logprob: -11.056146621704102
    10. ' ,' → logprob: -11.306146621704102

Token 235: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0015273597091436386
    2. ' MOD' → logprob: -6.501527309417725
    3. ')' → logprob: -10.751527786254883
    4. '                   ' → logprob: -12.751527786254883
    5. '               ' → logprob: -14.751527786254883
    6. '.MOD' → logprob: -15.876527786254883
    7. '           ' → logprob: -16.126527786254883
    8. '_MOD' → logprob: -16.501527786254883
    9. '                       ' → logprob: -17.626527786254883
    10. '                           ' → logprob: -18.876527786254883

Token 236: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014537191949784756
    2. '               ' → logprob: -4.264537334442139
    3. '))' → logprob: -8.26453685760498
    4. ')
' → logprob: -9.26453685760498
    5. '           ' → logprob: -11.38953685760498
    6. '                   ' → logprob: -11.88953685760498
    7. ')))' → logprob: -13.51453685760498
    8. ' )' → logprob: -14.26453685760498
    9. '),' → logprob: -15.26453685760498
    10. ')

' → logprob: -15.88953685760498

Token 237: '               ' (ID: 506)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07902131974697113
    2. '               ' → logprob: -2.5790212154388428
    3. '           ' → logprob: -9.329021453857422
    4. '                   ' → logprob: -11.079021453857422
    5. ' if' → logprob: -11.079021453857422
    6. '))' → logprob: -12.454021453857422
    7. 'if' → logprob: -12.454021453857422
    8. ' )' → logprob: -13.204021453857422
    9. ')
' → logprob: -14.204021453857422
    10. '),' → logprob: -15.204021453857422

Token 238: ' )' (ID: 1546)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' (adapté à ' )') → logprob: -0.07118283212184906
    2. '               ' → logprob: -2.8211827278137207
    3. '           ' → logprob: -4.696182727813721
    4. ' if' → logprob: -10.571183204650879
    5. 'if' → logprob: -11.446183204650879
    6. ' )' → logprob: -12.571183204650879
    7. '                   ' → logprob: -13.696183204650879
    8. '              ' → logprob: -14.696183204650879
    9. '             ' → logprob: -14.821183204650879
    10. '            ' → logprob: -15.196183204650879

Token 239: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5304527282714844
    2. ' if' → logprob: -1.5304527282714844
    3. '               ' → logprob: -1.7804527282714844
    4. ')' → logprob: -3.7804527282714844
    5. 'if' → logprob: -5.655452728271484
    6. '            ' → logprob: -9.905452728271484
    7. 'else' → logprob: -9.905452728271484
    8. '          ' → logprob: -10.155452728271484
    9. ' else' → logprob: -10.155452728271484
    10. ' )' → logprob: -10.155452728271484

Token 240: ' isinstance' (ID: 25889)
  Prédit: ' isinstance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.5759413838386536
    2. 'is' → logprob: -0.8259413838386536
    3. '(is' → logprob: -13.32594108581543
    4. ' is' → logprob: -16.20094108581543
    5. '   ' → logprob: -17.20094108581543
    6. '  ' → logprob: -17.57594108581543
    7. 'not' → logprob: -17.82594108581543
    8. ' ' → logprob: -17.82594108581543
    9. '    ' → logprob: -18.32594108581543
    10. '           ' → logprob: -18.45094108581543

Token 241: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -0.0019311357755213976
    2. 'other' → logprob: -6.251931190490723
    3. ' other' → logprob: -13.251931190490723
    4. 'Other' → logprob: -14.126931190490723
    5. '(' → logprob: -17.126930236816406
    6. 'OTHER' → logprob: -18.751930236816406
    7. '.other' → logprob: -19.501930236816406
    8. '_other' → logprob: -19.751930236816406
    9. '其他' → logprob: -21.376930236816406
    10. '(self' → logprob: -21.501930236816406

Token 242: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.9186317482963204e-05
    2. '(other' → logprob: -10.250049591064453
    3. 'other' → logprob: -11.625049591064453
    4. ' ,' → logprob: -12.750049591064453
    5. ' other' → logprob: -13.625049591064453
    6. ',
' → logprob: -15.625049591064453
    7. '           ' → logprob: -15.875049591064453
    8. 'self' → logprob: -16.250049591064453
    9. '               ' → logprob: -16.625049591064453
    10. '(' → logprob: -16.750049591064453

Token 243: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.00033713103039190173
    2. ' Mod' → logprob: -8.000337600708008
    3. '(Mod' → logprob: -13.375337600708008
    4. '           ' → logprob: -17.000337600708008
    5. '_mod' → logprob: -17.750337600708008
    6. '.Mod' → logprob: -18.250337600708008
    7. '_Mod' → logprob: -18.375337600708008
    8. '   ' → logprob: -18.875337600708008
    9. 'Modulo' → logprob: -19.250337600708008
    10. ' ' → logprob: -19.375337600708008

Token 244: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -5.1689596148207784e-05
    2. 'int' → logprob: -9.875051498413086
    3. 'nt' → logprob: -16.750051498413086
    4. 'In' → logprob: -17.750051498413086
    5. ' Int' → logprob: -17.875051498413086
    6. 'INT' → logprob: -17.875051498413086
    7. '(Int' → logprob: -17.875051498413086
    8. '
' → logprob: -18.750051498413086
    9. '_int' → logprob: -18.875051498413086
    10. 'Mod' → logprob: -19.125051498413086

Token 245: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2255638837814331
    2. ' else' → logprob: -2.2255640029907227
    3. 'else' → logprob: -2.4755640029907227
    4. '           ' → logprob: -4.975564002990723
    5. '               ' → logprob: -5.850564002990723
    6. '            ' → logprob: -11.975564002990723
    7. '          ' → logprob: -12.350564002990723
    8. '       ' → logprob: -12.600564002990723
    9. '                ' → logprob: -12.600564002990723
    10. '                   ' → logprob: -13.350564002990723

Token 246: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.01119246892631054
    2. ' else' → logprob: -4.511192321777344
    3. '               ' → logprob: -9.011192321777344
    4. '           ' → logprob: -10.761192321777344
    5. ')' → logprob: -14.636192321777344
    6. '	else' → logprob: -14.886192321777344
    7. '            ' → logprob: -15.761192321777344
    8. 'elses' → logprob: -16.386192321777344
    9. '             ' → logprob: -16.511192321777344
    10. '                ' → logprob: -16.511192321777344

Token 247: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7297883629798889
    2. ' Mod' → logprob: -1.2297883033752441
    3. 'Mod' → logprob: -1.6047883033752441
    4. '(Mod' → logprob: -3.854788303375244
    5. '                   ' → logprob: -6.979788303375244
    6. 'pow' → logprob: -7.229788303375244
    7. ' ' → logprob: -7.354788303375244
    8. '(
' → logprob: -7.604788303375244
    9. '           ' → logprob: -8.479788780212402
    10. ' 
' → logprob: -9.479788780212402

Token 248: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.038525085896253586
    2. ' Mod' → logprob: -3.538525104522705
    3. 'Mod' → logprob: -4.913525104522705
    4. '(Mod' → logprob: -7.538525104522705
    5. '                   ' → logprob: -7.913525104522705
    6. '                ' → logprob: -8.413524627685547
    7. '           ' → logprob: -8.538524627685547
    8. ' ' → logprob: -10.413524627685547
    9. '              ' → logprob: -11.163524627685547
    10. '            ' → logprob: -12.163524627685547

Token 249: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' (adapté à ' Mod') → logprob: -0.10115037113428116
    2. ' Mod' → logprob: -2.3511502742767334
    3. '               ' → logprob: -7.2261505126953125
    4. '(Mod' → logprob: -8.476150512695312
    5. '                   ' → logprob: -13.101150512695312
    6. '
' → logprob: -13.226150512695312
    7. 'self' → logprob: -13.726150512695312
    8. '(
' → logprob: -14.226150512695312
    9. '                ' → logprob: -14.976150512695312
    10. ' ' → logprob: -14.976150512695312

Token 250: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -1.2664456789934775e-06
    2. 'int' → logprob: -13.750000953674316
    3. '(Int' → logprob: -16.250001907348633
    4. ' Int' → logprob: -18.125001907348633
    5. 'In' → logprob: -18.625001907348633
    6. '[Int' → logprob: -19.750001907348633
    7. '_Int' → logprob: -19.875001907348633
    8. '_int' → logprob: -20.125001907348633
    9. 'INT' → logprob: -20.750001907348633
    10. '	Int' → logprob: -20.875001907348633

Token 251: '(self' (ID: 2402)
  Prédit: '(
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(
' → logprob: -0.06430178135633469
    2. '(' → logprob: -2.8143017292022705
    3. '(self' → logprob: -6.06430196762085
    4. '(

' → logprob: -12.564301490783691
    5. '(
' → logprob: -13.189301490783691
    6. 'self' → logprob: -13.314301490783691
    7. '(`
' → logprob: -20.189302444458008
    8. '((' → logprob: -20.439302444458008
    9. ')(
' → logprob: -21.064302444458008
    10. '(int' → logprob: -21.314302444458008

Token 252: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0004092235758434981
    2. 'x' → logprob: -7.875409126281738
    3. '.' → logprob: -10.500409126281738
    4. ' .' → logprob: -13.875409126281738
    5. ' x' → logprob: -15.375409126281738
    6. 'self' → logprob: -16.375410079956055
    7. '```' → logprob: -16.375410079956055
    8. '(x' → logprob: -16.875410079956055
    9. '   ' → logprob: -17.625410079956055
    10. '0' → logprob: -18.375410079956055

Token 253: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5759469270706177
    2. ' *' → logprob: -0.8259469270706177
    3. '   ' → logprob: -13.575946807861328
    4. ' ' → logprob: -13.825946807861328
    5. '*
' → logprob: -13.825946807861328
    6. ' *
' → logprob: -13.825946807861328
    7. 'pow' → logprob: -13.950946807861328
    8. ' ' → logprob: -14.200946807861328
    9. '**' → logprob: -14.450946807861328
    10. ')' → logprob: -15.075946807861328

Token 254: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0004307884373702109
    2. ' pow' → logprob: -7.750430583953857
    3. '   ' → logprob: -15.625431060791016
    4. '(pow' → logprob: -19.125431060791016
    5. '       ' → logprob: -19.250431060791016
    6. '           ' → logprob: -19.625431060791016
    7. '  ' → logprob: -19.750431060791016
    8. '    ' → logprob: -20.375431060791016
    9. 'po' → logprob: -20.500431060791016
    10. ' ' → logprob: -20.500431060791016

Token 255: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -0.0009148012613877654
    2. 'other' → logprob: -7.000914573669434
    3. '(' → logprob: -12.750914573669434
    4. '(
' → logprob: -14.875914573669434
    5. ' other' → logprob: -18.12591552734375
    6. 'Other' → logprob: -20.87591552734375
    7. '.other' → logprob: -21.00091552734375
    8. 'OTHER' → logprob: -21.12591552734375
    9. '((' → logprob: -21.75091552734375
    10. '_other' → logprob: -21.87591552734375

Token 256: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.668304245569743e-05
    2. ' ,' → logprob: -10.000046730041504
    3. ',
' → logprob: -14.625046730041504
    4. ',M' → logprob: -15.375046730041504
    5. '),' → logprob: -16.000045776367188
    6. ' ' → logprob: -16.750045776367188
    7. '2' → logprob: -16.875045776367188
    8. 's' → logprob: -16.875045776367188
    9. ')' → logprob: -16.875045776367188
    10. 'self' → logprob: -17.000045776367188

Token 257: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.16022564470767975
    2. ' MOD' → logprob: -1.9102256298065186
    3. '   ' → logprob: -13.785225868225098
    4. '_MOD' → logprob: -15.160225868225098
    5. '.MOD' → logprob: -16.16022491455078
    6. ' ' → logprob: -16.66022491455078
    7. '    ' → logprob: -17.78522491455078
    8. '  ' → logprob: -18.53522491455078
    9. 'MO' → logprob: -18.91022491455078
    10. '       ' → logprob: -19.91022491455078

Token 258: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3869025409221649
    2. ' -' → logprob: -1.1369025707244873
    3. ' ' → logprob: -10.636902809143066
    4. '   ' → logprob: -12.386902809143066
    5. '           ' → logprob: -13.761902809143066
    6. '  ' → logprob: -14.386902809143066
    7. '    ' → logprob: -14.636902809143066
    8. '       ' → logprob: -15.136902809143066
    9. '        ' → logprob: -16.26190185546875
    10. '–' → logprob: -16.51190185546875

Token 259: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.694766489090398e-05
    2. ' ' → logprob: -9.625066757202148
    3. '   ' → logprob: -15.375066757202148
    4. '۲' → logprob: -16.00006675720215
    5. '-' → logprob: -16.18756675720215
    6. '２' → logprob: -16.68756675720215
    7. '```' → logprob: -16.81256675720215
    8. '  ' → logprob: -17.06256675720215
    9. '           ' → logprob: -18.06256675720215
    10. '(' → logprob: -18.06256675720215

Token 260: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.5107177862082608e-05
    2. ' ' → logprob: -10.625024795532227
    3. '-' → logprob: -15.000024795532227
    4. '   ' → logprob: -15.625024795532227
    5. '```' → logprob: -16.062524795532227
    6. '  ' → logprob: -16.375024795532227
    7. '۲' → logprob: -16.437524795532227
    8. '２' → logprob: -17.000024795532227
    9. '
' → logprob: -17.312524795532227
    10. '২' → logprob: -18.500024795532227

Token 261: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.0100624169572257e-05
    2. ' ,' → logprob: -10.875020027160645
    3. '))' → logprob: -15.250020027160645
    4. ')' → logprob: -15.500020027160645
    5. '           ' → logprob: -15.750020027160645
    6. '),' → logprob: -15.750020027160645
    7. ',
' → logprob: -16.25002098083496
    8. '```' → logprob: -16.50002098083496
    9. '   ' → logprob: -16.87502098083496
    10. '(),' → logprob: -17.75002098083496

Token 262: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.04858827963471413
    2. ' MOD' → logprob: -3.048588275909424
    3. ')' → logprob: -14.923588752746582
    4. '_MOD' → logprob: -15.048588752746582
    5. '.MOD' → logprob: -15.798588752746582
    6. '               ' → logprob: -17.423587799072266
    7. '           ' → logprob: -17.798587799072266
    8. 'M' → logprob: -18.298587799072266
    9. '))' → logprob: -18.923587799072266
    10. '                   ' → logprob: -19.048587799072266

Token 263: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.36729931831359863
    2. ')' → logprob: -1.3672993183135986
    3. '           ' → logprob: -3.4922993183135986
    4. '               ' → logprob: -3.8672993183135986
    5. ')
' → logprob: -6.9922990798950195
    6. '))
' → logprob: -8.61729907989502
    7. ')))' → logprob: -8.86729907989502
    8. '                   ' → logprob: -11.61729907989502
    9. '       ' → logprob: -13.11729907989502
    10. '                       ' → logprob: -14.24229907989502

Token 264: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018243124708533287
    2. ')' → logprob: -4.018243312835693
    3. '               ' → logprob: -9.393242835998535
    4. '       ' → logprob: -11.643242835998535
    5. '          ' → logprob: -14.643242835998535
    6. ')
' → logprob: -14.893242835998535
    7. '                   ' → logprob: -16.01824378967285
    8. '		' → logprob: -16.51824378967285
    9. ' )' → logprob: -16.89324378967285
    10. '))' → logprob: -17.01824378967285

Token 265: ' )

' (ID: 11467)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07298257201910019
    2. '       ' → logprob: -2.6979825496673584
    3. '<|end|>' → logprob: -5.8229827880859375
    4. '   ' → logprob: -10.947982788085938
    5. ')return' → logprob: -11.197982788085938
    6. '<|end|>' → logprob: -11.322982788085938
    7. ' )' → logprob: -11.822982788085938
    8. '           ' → logprob: -12.197982788085938
    9. '      ' → logprob: -12.322982788085938
    10. '        ' → logprob: -12.572982788085938

Token 266: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20293474197387695
    2. '<|end|>' → logprob: -1.702934741973877
    3. '<|end|>' → logprob: -7.702934741973877
    4. ')' → logprob: -7.827934741973877
    5. '   ' → logprob: -8.077934265136719
    6. '        
' → logprob: -8.952934265136719
    7. '```' → logprob: -9.702934265136719
    8. '
' → logprob: -10.327934265136719
    9. 'newline' → logprob: -10.702934265136719
    10. 'return' → logprob: -10.952934265136719

Token 267: ' def' (ID: 1056)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011660709045827389
    2. 'def' (adapté à ' def') → logprob: -4.511660575866699
    3. '   ' → logprob: -8.0116605758667
    4. '<|end|>' → logprob: -9.2616605758667
    5. 'return' → logprob: -9.3866605758667
    6. '        
' → logprob: -9.7616605758667
    7. ')' → logprob: -11.0116605758667
    8. '<|end|>' → logprob: -12.2616605758667
    9. '      ' → logprob: -12.5116605758667
    10. '           ' → logprob: -12.6366605758667

Token 268: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0007678175461478531
    2. 'pow' → logprob: -7.750767707824707
    3. ' __' → logprob: -8.000767707824707
    4. '_pow' → logprob: -13.250767707824707
    5. ' pow' → logprob: -16.250768661499023
    6. '.__' → logprob: -17.750768661499023
    7. '   ' → logprob: -18.875768661499023
    8. '___' → logprob: -19.125768661499023
    9. 'power' → logprob: -19.250768661499023
    10. 'eq' → logprob: -19.625768661499023

Token 269: 'pow' (ID: 30304)
  Prédit: 'pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.475787490606308
    2. 'eq' → logprob: -0.9757875204086304
    3. 'flo' → logprob: -6.47578763961792
    4. 'r' → logprob: -8.975787162780762
    5. 'neg' → logprob: -10.475787162780762
    6. 'lt' → logprob: -11.600787162780762
    7. 'int' → logprob: -13.225787162780762
    8. 'rm' → logprob: -14.100787162780762
    9. 'power' → logprob: -14.225787162780762
    10. 'floor' → logprob: -14.600787162780762

Token 270: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.049621663987636566
    2. '(self' → logprob: -3.04962158203125
    3. '(' → logprob: -6.92462158203125
    4. '_(' → logprob: -10.79962158203125
    5. '__' → logprob: -11.04962158203125
    6. '__(
' → logprob: -11.54962158203125
    7. '```' → logprob: -14.04962158203125
    8. ')(' → logprob: -14.29962158203125
    9. '*(' → logprob: -14.54962158203125
    10. 'self' → logprob: -14.79962158203125

Token 271: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.339278580620885e-06
    2. ' self' → logprob: -13.250001907348633
    3. '       ' → logprob: -15.000001907348633
    4. '(self' → logprob: -15.750001907348633
    5. '           ' → logprob: -17.750001907348633
    6. ',' → logprob: -20.000001907348633
    7. '
' → logprob: -20.250001907348633
    8. '   ' → logprob: -20.750001907348633
    9. '0' → logprob: -21.250001907348633
    10. '               ' → logprob: -21.375001907348633

Token 272: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.857719275401905e-05
    2. ',self' → logprob: -10.625038146972656
    3. ' ,' → logprob: -11.875038146972656
    4. 'self' → logprob: -12.250038146972656
    5. ',(' → logprob: -13.375038146972656
    6. ',s' → logprob: -14.625038146972656
    7. '(' → logprob: -16.375038146972656
    8. ',
' → logprob: -16.500038146972656
    9. '(self' → logprob: -16.750038146972656
    10. ',x' → logprob: -17.000038146972656

Token 273: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.02994382008910179
    2. ' other' → logprob: -3.5299437046051025
    3. 'self' → logprob: -8.779943466186523
    4. ' self' → logprob: -11.154943466186523
    5. 'n' → logprob: -11.779943466186523
    6. 'ex' → logprob: -12.279943466186523
    7. 'power' → logprob: -12.279943466186523
    8. ' n' → logprob: -12.779943466186523
    9. ' power' → logprob: -13.279943466186523
    10. ' ' → logprob: -13.654943466186523

Token 274: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3994715213775635
    2. ',' → logprob: -1.2744715213775635
    3. '):
' → logprob: -3.0244715213775635
    4. 'self' → logprob: -7.399471282958984
    5. '(self' → logprob: -8.524471282958984
    6. '           ' → logprob: -9.024471282958984
    7. '       ' → logprob: -9.024471282958984
    8. ' ,' → logprob: -10.649471282958984
    9. '):
' → logprob: -11.024471282958984
    10. '   ' → logprob: -11.399471282958984

Token 275: '           ' (ID: 352)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12225500494241714
    2. '           ' → logprob: -2.9972550868988037
    3. '(self' → logprob: -3.6222550868988037
    4. 'other' → logprob: -3.8722550868988037
    5. ' self' → logprob: -4.872254848480225
    6. ' other' → logprob: -5.622254848480225
    7. '(other' → logprob: -6.247254848480225
    8. '       ' → logprob: -6.372254848480225
    9. '(' → logprob: -6.747254848480225
    10. '               ' → logprob: -7.497254848480225

Token 276: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08435957878828049
    2. 'self' → logprob: -2.834359645843506
    3. 'pow' → logprob: -4.584359645843506
    4. '           ' → logprob: -4.709359645843506
    5. ' return' → logprob: -5.959359645843506
    6. 'other' → logprob: -9.834359169006348
    7. 'power' → logprob: -9.959359169006348
    8. ' self' → logprob: -9.959359169006348
    9. '(self' → logprob: -10.084359169006348
    10. 'def' → logprob: -10.084359169006348

Token 277: ' (
' (ID: 4112)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.0014184460742399096
    2. '           ' → logprob: -7.501418590545654
    3. '(
' → logprob: -7.501418590545654
    4. ' Mod' → logprob: -8.251418113708496
    5. '               ' → logprob: -10.626418113708496
    6. '(Mod' → logprob: -10.626418113708496
    7. 'mod' → logprob: -13.376418113708496
    8. '(' → logprob: -13.626418113708496
    9. '_mod' → logprob: -15.251418113708496
    10. 'self' → logprob: -16.501419067382812

Token 278: '               ' (ID: 506)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.032890673726797104
    2. '               ' → logprob: -3.532890558242798
    3. '           ' → logprob: -5.782890796661377
    4. ' Mod' → logprob: -9.907890319824219
    5. 'mod' → logprob: -13.282890319824219
    6. '(Mod' → logprob: -13.282890319824219
    7. '   ' → logprob: -13.907890319824219
    8. '_mod' → logprob: -15.157890319824219
    9. '              ' → logprob: -15.282890319824219
    10. ' ' → logprob: -15.782890319824219

Token 279: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' (adapté à ' Mod') → logprob: -3.173704271830502e-06
    2. '               ' → logprob: -13.37500286102295
    3. '           ' → logprob: -14.12500286102295
    4. ' Mod' → logprob: -14.50000286102295
    5. '(Mod' → logprob: -15.00000286102295
    6. 'self' → logprob: -17.875003814697266
    7. 'mod' → logprob: -18.875003814697266
    8. '_mod' → logprob: -19.125003814697266
    9. 'Modulo' → logprob: -19.125003814697266
    10. '   ' → logprob: -19.625003814697266

Token 280: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -3.7697225252486533e-06
    2. 'int' → logprob: -12.500003814697266
    3. ' Int' → logprob: -17.625003814697266
    4. '(Int' → logprob: -18.500003814697266
    5. 'INT' → logprob: -19.375003814697266
    6. '	Int' → logprob: -19.625003814697266
    7. '               ' → logprob: -19.875003814697266
    8. '<Int' → logprob: -20.000003814697266
    9. '_int' → logprob: -20.125003814697266
    10. 'Ints' → logprob: -20.250003814697266

Token 281: '(pow' (ID: 189160)
  Prédit: '(pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pow' → logprob: -0.2564370930194855
    2. '(self' → logprob: -1.506437063217163
    3. '(
' → logprob: -5.506437301635742
    4. '(' → logprob: -8.006437301635742
    5. 'pow' → logprob: -9.256437301635742
    6. '(power' → logprob: -12.631437301635742
    7. 'self' → logprob: -12.881437301635742
    8. ' pow' → logprob: -13.631437301635742
    9. '(po' → logprob: -14.381437301635742
    10. '           ' → logprob: -15.131437301635742

Token 282: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.191489642835222e-05
    2. '(' → logprob: -10.250041961669922
    3. 'self' → logprob: -12.375041961669922
    4. '(
' → logprob: -13.000041961669922
    5. '[self' → logprob: -18.500041961669922
    6. '       ' → logprob: -18.750041961669922
    7. ' self' → logprob: -19.125041961669922
    8. '           ' → logprob: -19.250041961669922
    9. ',self' → logprob: -19.625041961669922
    10. '=self' → logprob: -19.875041961669922

Token 283: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -2.176947600673884e-05
    2. '.' → logprob: -11.000021934509277
    3. 'x' → logprob: -12.625021934509277
    4. ' .' → logprob: -13.750021934509277
    5. 'self' → logprob: -14.625021934509277
    6. '(x' → logprob: -16.50002098083496
    7. '(' → logprob: -16.75002098083496
    8. ').' → logprob: -17.00002098083496
    9. ',' → logprob: -17.37502098083496
    10. '```' → logprob: -17.37502098083496

Token 284: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018083803355693817
    2. '(other' → logprob: -4.268083572387695
    3. '(' → logprob: -5.643083572387695
    4. '.other' → logprob: -9.018083572387695
    5. ' ,' → logprob: -9.393083572387695
    6. 'other' → logprob: -9.518083572387695
    7. '(
' → logprob: -9.768083572387695
    8. ',
' → logprob: -11.643083572387695
    9. ' other' → logprob: -11.643083572387695
    10. ' ' → logprob: -12.893083572387695

Token 285: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0011886836728081107
    2. ' other' → logprob: -6.7511887550354
    3. '(other' → logprob: -11.251188278198242
    4. '           ' → logprob: -12.876188278198242
    5. '               ' → logprob: -13.126188278198242
    6. '
' → logprob: -14.751188278198242
    7. ')' → logprob: -16.251188278198242
    8. '(
' → logprob: -16.376188278198242
    9. 'othe' → logprob: -16.751188278198242
    10. '   ' → logprob: -16.751188278198242

Token 286: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.07465094327926636
    2. ',' → logprob: -2.699651002883911
    3. ' if' → logprob: -5.449650764465332
    4. '))' → logprob: -8.449650764465332
    5. 'x' → logprob: -9.074650764465332
    6. ',x' → logprob: -9.824650764465332
    7. ' ,' → logprob: -12.199650764465332
    8. 'if' → logprob: -12.324650764465332
    9. ')' → logprob: -12.824650764465332
    10. '   ' → logprob: -13.074650764465332

Token 287: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10765411704778671
    2. '))' → logprob: -2.357654094696045
    3. ')' → logprob: -5.357654094696045
    4. ' if' → logprob: -5.982654094696045
    5. 'if' → logprob: -9.732654571533203
    6. ' ,' → logprob: -10.107654571533203
    7. '           ' → logprob: -10.607654571533203
    8. '),' → logprob: -10.732654571533203
    9. ' ))' → logprob: -11.357654571533203
    10. '       ' → logprob: -11.857654571533203

Token 288: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.20141372084617615
    2. ' MOD' → logprob: -1.7014137506484985
    3. '_MOD' → logprob: -16.076414108276367
    4. '           ' → logprob: -16.076414108276367
    5. '.MOD' → logprob: -16.201414108276367
    6. '               ' → logprob: -17.076414108276367
    7. ')' → logprob: -18.576414108276367
    8. '   ' → logprob: -18.701414108276367
    9. ' ' → logprob: -18.826414108276367
    10. '                   ' → logprob: -19.326414108276367

Token 289: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.013580734841525555
    2. '               ' → logprob: -5.138580799102783
    3. '           ' → logprob: -5.638580799102783
    4. ')' → logprob: -5.763580799102783
    5. '))
' → logprob: -7.013580799102783
    6. ' if' → logprob: -12.138580322265625
    7. ' ))' → logprob: -12.638580322265625
    8. '                   ' → logprob: -12.763580322265625
    9. '            ' → logprob: -12.888580322265625
    10. 'if' → logprob: -12.888580322265625

Token 290: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.531819224357605
    2. '               ' → logprob: -1.031819224357605
    3. ' if' → logprob: -3.0318193435668945
    4. ')' → logprob: -5.2818193435668945
    5. 'if' → logprob: -5.9068193435668945
    6. '            ' → logprob: -11.156819343566895
    7. ' )' → logprob: -11.656819343566895
    8. '       ' → logprob: -11.781819343566895
    9. '		' → logprob: -11.906819343566895
    10. '          ' → logprob: -12.031819343566895

Token 291: ' isinstance' (ID: 25889)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.20141811668872833
    2. ' isinstance' → logprob: -1.701418161392212
    3. '(is' → logprob: -12.451417922973633
    4. '           ' → logprob: -14.701417922973633
    5. '               ' → logprob: -14.826417922973633
    6. '                   ' → logprob: -16.076417922973633
    7. 'type' → logprob: -18.826417922973633
    8. '   ' → logprob: -19.076417922973633
    9. '                ' → logprob: -19.201417922973633
    10. '            ' → logprob: -19.201417922973633

Token 292: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -7.64839569455944e-05
    2. 'other' → logprob: -9.500076293945312
    3. ' other' → logprob: -13.750076293945312
    4. 'Other' → logprob: -14.625076293945312
    5. 'OTHER' → logprob: -20.875076293945312
    6. '_other' → logprob: -20.875076293945312
    7. '(' → logprob: -21.250076293945312
    8. '.other' → logprob: -21.500076293945312
    9. '其他' → logprob: -22.375076293945312
    10. '-other' → logprob: -22.875076293945312

Token 293: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.0020742492051795e-05
    2. '(other' → logprob: -10.125049591064453
    3. ' ,' → logprob: -12.375049591064453
    4. 'other' → logprob: -13.000049591064453
    5. ',
' → logprob: -13.625049591064453
    6. '(' → logprob: -14.250049591064453
    7. '(Mod' → logprob: -14.875049591064453
    8. 'self' → logprob: -15.000049591064453
    9. 'Mod' → logprob: -15.625049591064453
    10. ' ' → logprob: -15.750049591064453

Token 294: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.00018006093159783632
    2. ' Mod' → logprob: -8.6251802444458
    3. '(Mod' → logprob: -15.0001802444458
    4. '_mod' → logprob: -17.125179290771484
    5. '_Mod' → logprob: -18.250179290771484
    6. '.Mod' → logprob: -18.625179290771484
    7. '   ' → logprob: -18.750179290771484
    8. 'mod' → logprob: -18.750179290771484
    9. 'Modulo' → logprob: -18.750179290771484
    10. 'Mo' → logprob: -19.250179290771484

Token 295: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -0.004387983120977879
    2. 'int' → logprob: -6.129387855529785
    3. 'Mod' → logprob: -6.129387855529785
    4. 'nt' → logprob: -10.879387855529785
    5. 'In' → logprob: -14.379387855529785
    6. '_int' → logprob: -15.129387855529785
    7. '
' → logprob: -15.129387855529785
    8. 'Ints' → logprob: -15.254387855529785
    9. '(Int' → logprob: -15.504387855529785
    10. '   ' → logprob: -15.629387855529785

Token 296: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006924234330654144
    2. 'else' → logprob: -5.006924152374268
    3. ' else' → logprob: -8.756924629211426
    4. '           ' → logprob: -10.006924629211426
    5. '               ' → logprob: -13.256924629211426
    6. ' )' → logprob: -13.631924629211426
    7. '            ' → logprob: -14.131924629211426
    8. '          ' → logprob: -14.381924629211426
    9. ')
' → logprob: -14.881924629211426
    10. '       ' → logprob: -15.256924629211426

Token 297: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.20164039731025696
    2. ' else' → logprob: -1.7016403675079346
    3. '               ' → logprob: -8.951640129089355
    4. '           ' → logprob: -9.326640129089355
    5. '            ' → logprob: -12.076640129089355
    6. ')' → logprob: -13.576640129089355
    7. '                ' → logprob: -14.576640129089355
    8. '          ' → logprob: -15.076640129089355
    9. '              ' → logprob: -15.201640129089355
    10. '	else' → logprob: -15.826640129089355

Token 298: '
' (ID: 198)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.10499680042266846
    2. ' Mod' → logprob: -2.354996681213379
    3. '               ' → logprob: -5.604996681213379
    4. '(Mod' → logprob: -6.979996681213379
    5. '           ' → logprob: -8.729996681213379
    6. '
' → logprob: -12.979996681213379
    7. 'Pow' → logprob: -13.354996681213379
    8. 'pow' → logprob: -13.354996681213379
    9. '(
' → logprob: -15.104996681213379
    10. '                   ' → logprob: -15.229996681213379

Token 299: '               ' (ID: 506)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.424124538898468
    2. '               ' → logprob: -1.1741244792938232
    3. ' Mod' → logprob: -3.4241244792938232
    4. '           ' → logprob: -5.549124717712402
    5. '(Mod' → logprob: -9.299124717712402
    6. '              ' → logprob: -12.924124717712402
    7. '   ' → logprob: -13.299124717712402
    8. '                   ' → logprob: -14.674124717712402
    9. '_Mod' → logprob: -14.674124717712402
    10. '       ' → logprob: -14.674124717712402

Token 300: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' (adapté à ' Mod') → logprob: -0.018181316554546356
    2. ' Mod' → logprob: -4.018181324005127
    3. '               ' → logprob: -10.518180847167969
    4. '(Mod' → logprob: -12.393180847167969
    5. '           ' → logprob: -15.768180847167969
    6. 'Pow' → logprob: -17.76818084716797
    7. '_Mod' → logprob: -17.89318084716797
    8. '                ' → logprob: -18.01818084716797
    9. '_mod' → logprob: -18.89318084716797
    10. '              ' → logprob: -18.89318084716797

Token 301: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -1.3856492842023727e-06
    2. 'int' → logprob: -13.875000953674316
    3. '(Int' → logprob: -15.750000953674316
    4. ' Int' → logprob: -16.625001907348633
    5. 'pow' → logprob: -17.375001907348633
    6. 'It' → logprob: -17.625001907348633
    7. 'Pow' → logprob: -17.875001907348633
    8. '(pow' → logprob: -18.125001907348633
    9. 'Mod' → logprob: -18.250001907348633
    10. '_int' → logprob: -18.375001907348633

Token 302: '(pow' (ID: 189160)
  Prédit: '(pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pow' → logprob: -0.00043615259346552193
    2. 'pow' → logprob: -7.750436305999756
    3. '(' → logprob: -12.250435829162598
    4. ' pow' → logprob: -14.500435829162598
    5. '(
' → logprob: -16.375436782836914
    6. '(self' → logprob: -17.000436782836914
    7. '(po' → logprob: -17.125436782836914
    8. '(power' → logprob: -17.125436782836914
    9. '.pow' → logprob: -18.625436782836914
    10. ' (' → logprob: -19.375436782836914

Token 303: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00023917861108202487
    2. '(' → logprob: -8.500239372253418
    3. 'self' → logprob: -10.250239372253418
    4. '(
' → logprob: -15.250239372253418
    5. '[self' → logprob: -19.0002384185791
    6. ' self' → logprob: -19.2502384185791
    7. '(

' → logprob: -19.2502384185791
    8. '(this' → logprob: -19.6252384185791
    9. ')' → logprob: -19.8752384185791
    10. 's' → logprob: -20.1252384185791

Token 304: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.1033884808421135
    2. '.' → logprob: -2.603388547897339
    3. 'x' → logprob: -3.728388547897339
    4. '.other' → logprob: -9.853388786315918
    5. 'other' → logprob: -10.228388786315918
    6. ' .' → logprob: -10.478388786315918
    7. ' other' → logprob: -10.603388786315918
    8. ',' → logprob: -11.978388786315918
    9. ' x' → logprob: -12.103388786315918
    10. ' ' → logprob: -12.228388786315918

Token 305: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000418040988733992
    2. '(other' → logprob: -8.375417709350586
    3. '(' → logprob: -9.375417709350586
    4. 'other' → logprob: -10.250417709350586
    5. ' ,' → logprob: -10.375417709350586
    6. ')' → logprob: -10.750417709350586
    7. '),' → logprob: -12.125417709350586
    8. ',
' → logprob: -12.250417709350586
    9. ',self' → logprob: -13.750417709350586
    10. ' other' → logprob: -13.875417709350586

Token 306: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.011047814972698689
    2. ' other' → logprob: -4.511047840118408
    3. '(other' → logprob: -17.26104736328125
    4. '               ' → logprob: -18.13604736328125
    5. 'Other' → logprob: -19.51104736328125
    6. '           ' → logprob: -19.51104736328125
    7. 'othe' → logprob: -19.88604736328125
    8. '.other' → logprob: -20.01104736328125
    9. '_other' → logprob: -21.51104736328125
    10. 'self' → logprob: -21.63604736328125

Token 307: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.4391956685576588e-05
    2. ' ,' → logprob: -10.750024795532227
    3. '))' → logprob: -12.875024795532227
    4. ')' → logprob: -15.625024795532227
    5. ',
' → logprob: -16.750024795532227
    6. '),' → logprob: -17.250024795532227
    7. '```' → logprob: -17.250024795532227
    8. '           ' → logprob: -17.750024795532227
    9. '       ' → logprob: -17.875024795532227
    10. '   ' → logprob: -18.500024795532227

Token 308: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0002613358374219388
    2. ' MOD' → logprob: -8.250261306762695
    3. '_MOD' → logprob: -16.875261306762695
    4. '.MOD' → logprob: -17.500261306762695
    5. '           ' → logprob: -18.375261306762695
    6. 'M' → logprob: -19.250261306762695
    7. '               ' → logprob: -19.750261306762695
    8. '                   ' → logprob: -20.000261306762695
    9. '       ' → logprob: -21.125261306762695
    10. 'mod' → logprob: -21.625261306762695

Token 309: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0020672334358096123
    2. '           ' → logprob: -6.5020670890808105
    3. ')' → logprob: -8.127067565917969
    4. '))
' → logprob: -8.627067565917969
    5. '               ' → logprob: -9.627067565917969
    6. '       ' → logprob: -10.877067565917969
    7. ')))' → logprob: -12.502067565917969
    8. ')
' → logprob: -14.377067565917969
    9. '          ' → logprob: -15.002067565917969
    10. ' ))' → logprob: -15.127067565917969

Token 310: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.31464552879333496
    2. ')' → logprob: -1.314645528793335
    3. '       ' → logprob: -6.689645767211914
    4. '               ' → logprob: -8.939645767211914
    5. ')
' → logprob: -12.689645767211914
    6. '          ' → logprob: -13.314645767211914
    7. ' )' → logprob: -13.939645767211914
    8. '   ' → logprob: -14.314645767211914
    9. '		' → logprob: -14.564645767211914
    10. '         ' → logprob: -15.439645767211914

Token 311: ' )

' (ID: 11467)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02793595753610134
    2. '       ' → logprob: -3.7779359817504883
    3. '<|end|>' → logprob: -5.402935981750488
    4. ')return' → logprob: -10.402935981750488
    5. 'newline' → logprob: -10.652935981750488
    6. '<|end|>' → logprob: -10.652935981750488
    7. '   ' → logprob: -10.777935981750488
    8. ' )' → logprob: -11.027935981750488
    9. '        
' → logprob: -11.902935981750488
    10. '```' → logprob: -12.027935981750488

Token 312: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6497044563293457
    2. '<|end|>' → logprob: -0.7747044563293457
    3. '
' → logprob: -5.149704456329346
    4. '   ' → logprob: -5.274704456329346
    5. '        
' → logprob: -5.774704456329346
    6. '    
' → logprob: -6.774704456329346
    7. '<|end|>' → logprob: -7.524704456329346
    8. '    ' → logprob: -8.649703979492188
    9. '```' → logprob: -8.774703979492188
    10. 'def' → logprob: -9.024703979492188

Token 313: ' __' (ID: 2516)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2989571690559387
    2. '   ' → logprob: -1.548957109451294
    3. 'def' → logprob: -3.173957109451294
    4. 'return' → logprob: -6.923957347869873
    5. '        
' → logprob: -7.048957347869873
    6. '    
' → logprob: -7.423957347869873
    7. '<|end|>' → logprob: -7.423957347869873
    8. '    ' → logprob: -7.673957347869873
    9. ')' → logprob: -8.923956871032715
    10. '#' → logprob: -9.548956871032715

Token 314: 'r' (ID: 81)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.005372845567762852
    2. 'add' → logprob: -5.380373001098633
    3. 'neg' → logprob: -8.255373001098633
    4. 'lt' → logprob: -8.630373001098633
    5. 'flo' → logprob: -9.380373001098633
    6. 'pow' → logprob: -9.505373001098633
    7. 'i' → logprob: -10.005373001098633
    8. 'hash' → logprob: -10.505373001098633
    9. 'init' → logprob: -11.130373001098633
    10. 'le' → logprob: -11.130373001098633

Token 315: 'add' (ID: 964)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.9151880145072937
    2. 'add' → logprob: -0.9151880145072937
    3. '_add' → logprob: -1.6651880741119385
    4. 'def' → logprob: -4.790187835693359
    5. '_' → logprob: -6.915187835693359
    6. 'e' → logprob: -8.04018783569336
    7. 'pow' → logprob: -8.91518783569336
    8. '___' → logprob: -9.54018783569336
    9. '+' → logprob: -10.16518783569336
    10. '**' → logprob: -11.04018783569336

Token 316: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00016551809676457196
    2. '__(' → logprob: -8.750165939331055
    3. '__.__' → logprob: -12.875165939331055
    4. '__('' → logprob: -13.750165939331055
    5. '__((' → logprob: -13.750165939331055
    6. '_' → logprob: -13.875165939331055
    7. '___' → logprob: -15.000165939331055
    8. '__,' → logprob: -15.375165939331055
    9. '____' → logprob: -15.625165939331055
    10. '__(
' → logprob: -15.750165939331055

Token 317: ' =' (ID: 314)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0037107658572494984
    2. '=' → logprob: -5.628710746765137
    3. '_' → logprob: -10.128710746765137
    4. '__(' → logprob: -10.128710746765137
    5. ' =' → logprob: -10.753710746765137
    6. '___' → logprob: -12.253710746765137
    7. '____' → logprob: -13.628710746765137
    8. 'self' → logprob: -13.878710746765137
    9. ' __' → logprob: -14.503710746765137
    10. '_=' → logprob: -15.253710746765137

Token 318: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -7.517272024415433e-05
    2. ' __' → logprob: -9.500075340270996
    3. '   ' → logprob: -15.875075340270996
    4. '___' → logprob: -16.75007438659668
    5. '__,' → logprob: -17.12507438659668
    6. '__
' → logprob: -17.50007438659668
    7. '____' → logprob: -17.75007438659668
    8. '__(' → logprob: -17.75007438659668
    9. '       ' → logprob: -18.87507438659668
    10. '__.__' → logprob: -19.12507438659668

Token 319: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -2.2200749754119897e-06
    2. '_add' → logprob: -13.750001907348633
    3. '__' → logprob: -14.125001907348633
    4. '(add' → logprob: -16.000001907348633
    5. ' add' → logprob: -16.500001907348633
    6. 'str' → logprob: -16.625001907348633
    7. 'sub' → logprob: -17.250001907348633
    8. 'init' → logprob: -17.625001907348633
    9. 'r' → logprob: -17.750001907348633
    10. '```' → logprob: -18.000001907348633

Token 320: '__
' (ID: 26336)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5957481861114502
    2. '<|end|>' → logprob: -1.2207481861114502
    3. '
' → logprob: -2.09574818611145
    4. '        
' → logprob: -3.72074818611145
    5. 'def' → logprob: -5.470747947692871
    6. '<|end|>' → logprob: -6.345747947692871
    7. '    
' → logprob: -8.720747947692871
    8. '__' → logprob: -8.970747947692871
    9. '   ' → logprob: -9.470747947692871
    10. '        

' → logprob: -9.720747947692871

Token 321: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.043159618973731995
    2. '        
' → logprob: -3.4181597232818604
    3. '__' → logprob: -5.918159484863281
    4. 'def' → logprob: -6.168159484863281
    5. '   ' → logprob: -6.418159484863281
    6. '    
' → logprob: -6.418159484863281
    7. '<|end|>' → logprob: -7.918159484863281
    8. '        ' → logprob: -8.418159484863281
    9. '
' → logprob: -8.918159484863281
    10. '    ' → logprob: -9.168159484863281

Token 322: ' __' (ID: 2516)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25537368655204773
    2. '__' (adapté à ' __') → logprob: -1.5053737163543701
    3. 'def' → logprob: -5.880373477935791
    4. ' __' → logprob: -7.505373477935791
    5. '   ' → logprob: -9.63037395477295
    6. '        
' → logprob: -11.63037395477295
    7. ' def' → logprob: -11.75537395477295
    8. '      ' → logprob: -13.13037395477295
    9. '(__' → logprob: -13.63037395477295
    10. 'r' → logprob: -13.63037395477295

Token 323: 'r' (ID: 81)
  Prédit: 'rm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rm' → logprob: -0.07889121770858765
    2. 'r' → logprob: -2.5788912773132324
    3. 'rand' → logprob: -14.078890800476074
    4. 'mul' → logprob: -14.203890800476074
    5. 'RM' → logprob: -17.45389175415039
    6. 'sub' → logprob: -17.70389175415039
    7. 'repr' → logprob: -18.57889175415039
    8. 'rx' → logprob: -18.57889175415039
    9. 'rf' → logprob: -18.82889175415039
    10. 'ror' → logprob: -19.20389175415039

Token 324: 'sub' (ID: 3834)
  Prédit: 'sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.12697209417819977
    2. 'mul' → logprob: -2.126972198486328
    3. 'add' → logprob: -10.501972198486328
    4. '__' → logprob: -11.251972198486328
    5. '_sub' → logprob: -13.251972198486328
    6. 'r' → logprob: -14.001972198486328
    7. '_mul' → logprob: -14.376972198486328
    8. '```' → logprob: -15.876972198486328
    9. ' mul' → logprob: -16.251972198486328
    10. 'pow' → logprob: -16.626972198486328

Token 325: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.9361264946837764e-07
    2. '___' → logprob: -16.75
    3. '__.__' → logprob: -16.75
    4. '__
' → logprob: -17.125
    5. '__

' → logprob: -17.125
    6. '____' → logprob: -18.375
    7. '__[' → logprob: -19.375
    8. '__*/' → logprob: -19.375
    9. '__
' → logprob: -19.5
    10. '__.' → logprob: -19.75

Token 326: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.030533794313669205
    2. ' =' → logprob: -3.530533790588379
    3. '__' → logprob: -7.155533790588379
    4. '_=' → logprob: -13.530533790588379
    5. '_' → logprob: -14.780533790588379
    6. ' __' → logprob: -15.280533790588379
    7. '   ' → logprob: -15.280533790588379
    8. ' ' → logprob: -16.030534744262695
    9. '=lambda' → logprob: -16.030534744262695
    10. '    ' → logprob: -16.905534744262695

Token 327: ' __' (ID: 2516)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.006224070675671101
    2. '(lambda' → logprob: -5.256224155426025
    3. '__' → logprob: -7.506224155426025
    4. ' lambda' → logprob: -7.756224155426025
    5. 'def' → logprob: -12.381223678588867
    6. '=lambda' → logprob: -12.506223678588867
    7. '_lambda' → logprob: -12.631223678588867
    8. '__(' → logprob: -15.256223678588867
    9. '___' → logprob: -16.006223678588867
    10. 'staticmethod' → logprob: -16.506223678588867

Token 328: 'sub' (ID: 3834)
  Prédit: 'sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -5.7888184528565034e-05
    2. '__' → logprob: -10.5000581741333
    3. 'add' → logprob: -11.3750581741333
    4. 'lambda' → logprob: -12.0000581741333
    5. '_sub' → logprob: -12.0000581741333
    6. 'r' → logprob: -12.3750581741333
    7. 'mul' → logprob: -13.3750581741333
    8. ' sub' → logprob: -15.5000581741333
    9. '(sub' → logprob: -15.8750581741333
    10. '```' → logprob: -15.8750581741333

Token 329: '__
' (ID: 26336)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008794908411800861
    2. '<|end|>' → logprob: -4.758794784545898
    3. '        
' → logprob: -9.133794784545898
    4. '   ' → logprob: -11.008794784545898
    5. '__' → logprob: -11.383794784545898
    6. '<|end|>' → logprob: -11.758794784545898
    7. 'def' → logprob: -11.758794784545898
    8. '
' → logprob: -11.758794784545898
    9. '        ' → logprob: -12.008794784545898
    10. '      ' → logprob: -13.008794784545898

Token 330: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017557069659233093
    2. '__' → logprob: -4.767557144165039
    3. '<|end|>' → logprob: -4.892557144165039
    4. '        
' → logprob: -7.267557144165039
    5. ' __' → logprob: -7.892557144165039
    6. 'def' → logprob: -9.892557144165039
    7. '   ' → logprob: -9.892557144165039
    8. '<|end|>' → logprob: -10.392557144165039
    9. ' ' → logprob: -10.517557144165039
    10. '        ' → logprob: -10.517557144165039

Token 331: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' (adapté à ' __') → logprob: -0.0005163363530300558
    2. 'def' → logprob: -8.250515937805176
    3. ' __' → logprob: -8.500515937805176
    4. '       ' → logprob: -10.000515937805176
    5. '   ' → logprob: -12.750515937805176
    6. 'lambda' → logprob: -13.750515937805176
    7. '```' → logprob: -14.750515937805176
    8. 'r' → logprob: -14.875515937805176
    9. '.__' → logprob: -15.000515937805176
    10. ' def' → logprob: -15.375515937805176

Token 332: 'rm' (ID: 21373)
  Prédit: 'rm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rm' → logprob: -6.749814019713085e-06
    2. 'mul' → logprob: -12.000006675720215
    3. 'r' → logprob: -14.500006675720215
    4. '```' → logprob: -19.75000762939453
    5. 'rx' → logprob: -20.00000762939453
    6. 'neg' → logprob: -20.00000762939453
    7. 'RM' → logprob: -20.37500762939453
    8. '
' → logprob: -20.37500762939453
    9. ' rm' → logprob: -21.00000762939453
    10. 'rf' → logprob: -21.12500762939453

Token 333: 'ul' (ID: 361)
  Prédit: 'ul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ul' → logprob: -7.896309739408025e-07
    2. 'ult' → logprob: -14.250000953674316
    3. 'u' → logprob: -17.25
    4. 'ул' → logprob: -17.75
    5. 'mul' → logprob: -18.625
    6. '__' → logprob: -19.25
    7. '_mul' → logprob: -19.625
    8. 'uls' → logprob: -20.625
    9. 'ultiply' → logprob: -20.625
    10. '<ul' → logprob: -20.875

Token 334: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -8.895480277715251e-06
    2. '__.__' → logprob: -11.750008583068848
    3. '___' → logprob: -14.500008583068848
    4. '____' → logprob: -15.250008583068848
    5. '__
' → logprob: -16.375009536743164
    6. '__
' → logprob: -16.625009536743164
    7. '=' → logprob: -17.625009536743164
    8. '__

' → logprob: -18.250009536743164
    9. '_' → logprob: -18.625009536743164
    10. '__*/' → logprob: -19.125009536743164

Token 335: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0002111694193445146
    2. ' =' → logprob: -8.625210762023926
    3. '__' → logprob: -10.375210762023926
    4. '_=' → logprob: -15.125210762023926
    5. '_' → logprob: -18.000211715698242
    6. '   ' → logprob: -18.125211715698242
    7. ' __' → logprob: -18.250211715698242
    8. '=_' → logprob: -18.625211715698242
    9. '=
' → logprob: -19.750211715698242
    10. '=}' → logprob: -19.875211715698242

Token 336: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -6.392202976712724e-06
    2. ' __' → logprob: -12.000006675720215
    3. '___' → logprob: -16.2500057220459
    4. '_mul' → logprob: -17.5000057220459
    5. '____' → logprob: -18.6250057220459
    6. '   ' → logprob: -19.6250057220459
    7. 'mul' → logprob: -20.5000057220459
    8. '__
' → logprob: -20.8750057220459
    9. '.__' → logprob: -20.8750057220459
    10. '```' → logprob: -21.2500057220459

Token 337: 'mul' (ID: 44857)
  Prédit: 'mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.00026860725483857095
    2. '_mul' → logprob: -8.250268936157227
    3. '__' → logprob: -12.750268936157227
    4. 'sub' → logprob: -13.125268936157227
    5. '*' → logprob: -13.375268936157227
    6. 'mult' → logprob: -14.750268936157227
    7. 'm' → logprob: -15.875268936157227
    8. 'multiply' → logprob: -16.125268936157227
    9. ' mul' → logprob: -16.750268936157227
    10. 'add' → logprob: -16.750268936157227

Token 338: '__
' (ID: 26336)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02188601717352867
    2. '<|end|>' → logprob: -4.021885871887207
    3. '        
' → logprob: -6.771885871887207
    4. 'def' → logprob: -7.021885871887207
    5. '
' → logprob: -7.021885871887207
    6. '   ' → logprob: -8.021885871887207
    7. '__' → logprob: -8.521885871887207
    8. '    
' → logprob: -9.521885871887207
    9. '<|end|>' → logprob: -9.771885871887207
    10. ' ' → logprob: -10.771885871887207

Token 339: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2528333365917206
    2. '__' → logprob: -1.502833366394043
    3. '   ' → logprob: -7.377833366394043
    4. ' __' → logprob: -8.877833366394043
    5. '        
' → logprob: -9.752833366394043
    6. '           ' → logprob: -10.502833366394043
    7. 'def' → logprob: -11.002833366394043
    8. '        ' → logprob: -11.627833366394043
    9. '    
' → logprob: -12.377833366394043
    10. '
' → logprob: -12.627833366394043

Token 340: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' (adapté à ' __') → logprob: -0.0019143575336784124
    2. '       ' → logprob: -6.6269145011901855
    3. 'def' → logprob: -7.7519145011901855
    4. ' __' → logprob: -8.876914024353027
    5. '   ' → logprob: -11.126914024353027
    6. ' def' → logprob: -12.876914024353027
    7. '           ' → logprob: -14.626914024353027
    8. '___' → logprob: -15.251914024353027
    9. '```' → logprob: -15.376914024353027
    10. '__
' → logprob: -15.626914024353027

Token 341: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.0325924449716695e-05
    2. 'tr' → logprob: -12.00001049041748
    3. 'pow' → logprob: -13.37501049041748
    4. 'rf' → logprob: -13.50001049041748
    5. 'div' → logprob: -13.87501049041748
    6. 'rp' → logprob: -15.62501049041748
    7. '```' → logprob: -16.000009536743164
    8. 'rm' → logprob: -17.500009536743164
    9. 'rt' → logprob: -18.000009536743164
    10. '
' → logprob: -18.250009536743164

Token 342: 'tr' (ID: 371)
  Prédit: 'tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.014712335541844368
    2. 'pow' → logprob: -4.264712333679199
    3. 'div' → logprob: -7.514712333679199
    4. 'add' → logprob: -13.6397123336792
    5. 'mul' → logprob: -13.7647123336792
    6. 'r' → logprob: -14.8897123336792
    7. '```' → logprob: -15.3897123336792
    8. 'sub' → logprob: -15.7647123336792
    9. 'tru' → logprob: -16.014713287353516
    10. 'flo' → logprob: -16.014713287353516

Token 343: 'ued' (ID: 5829)
  Prédit: 'ued'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ued' → logprob: -4.7159857786027715e-05
    2. '__' → logprob: -10.750046730041504
    3. 'ue' → logprob: -11.500046730041504
    4. 'u' → logprob: -12.250046730041504
    5. 'ud' → logprob: -12.375046730041504
    6. 'ed' → logprob: -12.500046730041504
    7. 'def' → logprob: -13.750046730041504
    8. '   ' → logprob: -14.625046730041504
    9. '```' → logprob: -14.875046730041504
    10. 'tr' → logprob: -15.500046730041504

Token 344: 'iv' (ID: 349)
  Prédit: 'iv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -0.029948795214295387
    2. '__' → logprob: -3.5299487113952637
    3. '/' → logprob: -9.154949188232422
    4. '/__' → logprob: -9.904949188232422
    5. 'div' → logprob: -10.404949188232422
    6. '__/' → logprob: -12.404949188232422
    7. ' __' → logprob: -13.154949188232422
    8. 'ef' → logprob: -13.279949188232422
    9. 'v' → logprob: -13.529949188232422
    10. '```' → logprob: -14.279949188232422

Token 345: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -4.320199877838604e-07
    2. '__
' → logprob: -15.375
    3. '___' → logprob: -16.375
    4. '_' → logprob: -17.0
    5. '__.__' → logprob: -17.25
    6. '____' → logprob: -17.75
    7. '=' → logprob: -18.375
    8. 'def' → logprob: -18.75
    9. '__

' → logprob: -18.75
    10. '__.' → logprob: -18.75

Token 346: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0015241486253216863
    2. ' =' → logprob: -6.501523971557617
    3. '__' → logprob: -10.751523971557617
    4. '_=' → logprob: -15.501523971557617
    5. '_' → logprob: -16.001523971557617
    6. '   ' → logprob: -16.626523971557617
    7. ' __' → logprob: -17.501523971557617
    8. ')' → logprob: -18.751523971557617
    9. '=
' → logprob: -18.751523971557617
    10. '=lambda' → logprob: -19.251523971557617

Token 347: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.023259803652763367
    2. ' __' → logprob: -3.7732598781585693
    3. 'def' → logprob: -11.273260116577148
    4. ' def' → logprob: -14.023260116577148
    5. 'lambda' → logprob: -14.273260116577148
    6. ' lambda' → logprob: -16.52326011657715
    7. '___' → logprob: -17.39826011657715
    8. '__(' → logprob: -17.77326011657715
    9. '____' → logprob: -17.89826011657715
    10. '.__' → logprob: -18.02326011657715

Token 348: 'tr' (ID: 371)
  Prédit: 'tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.00045843268162570894
    2. 'sub' → logprob: -8.000458717346191
    3. 'div' → logprob: -9.250458717346191
    4. '__' → logprob: -10.750458717346191
    5. 'r' → logprob: -12.625458717346191
    6. 'mul' → logprob: -14.125458717346191
    7. '_tr' → logprob: -14.250458717346191
    8. ' tr' → logprob: -15.000458717346191
    9. 'pow' → logprob: -15.500458717346191
    10. '```' → logprob: -16.250457763671875

Token 349: 'ued' (ID: 5829)
  Prédit: 'ued'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ued' → logprob: -0.0008180848672054708
    2. '__' → logprob: -7.250818252563477
    3. 'ue' → logprob: -9.750818252563477
    4. 'u' → logprob: -10.375818252563477
    5. 'ed' → logprob: -12.250818252563477
    6. 'ud' → logprob: -12.625818252563477
    7. '```' → logprob: -13.125818252563477
    8. 'ues' → logprob: -13.250818252563477
    9. '   ' → logprob: -13.250818252563477
    10. 'div' → logprob: -13.750818252563477

Token 350: 'iv' (ID: 349)
  Prédit: 'iv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -1.843177233240567e-05
    2. 'div' → logprob: -11.500018119812012
    3. 'v' → logprob: -12.375018119812012
    4. '__' → logprob: -12.500018119812012
    5. 'vis' → logprob: -15.625018119812012
    6. '```' → logprob: -16.500019073486328
    7. 'vision' → logprob: -17.500019073486328
    8. 'e' → logprob: -18.125019073486328
    9. '/' → logprob: -18.125019073486328
    10. 'vi' → logprob: -18.375019073486328

Token 351: '__
' (ID: 26336)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6905586123466492
    2. '       ' → logprob: -1.065558671951294
    3. '<|end|>' → logprob: -2.315558671951294
    4. 'return' → logprob: -3.440558671951294
    5. '
' → logprob: -4.440558433532715
    6. '        
' → logprob: -5.440558433532715
    7. '    
' → logprob: -6.315558433532715
    8. ' return' → logprob: -6.565558433532715
    9. ')' → logprob: -6.940558433532715
    10. '	return' → logprob: -7.190558433532715

Token 352: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6173120737075806
    2. '       ' → logprob: -0.8673120737075806
    3. 'return' → logprob: -3.992311954498291
    4. '<|end|>' → logprob: -4.117311954498291
    5. '    
' → logprob: -6.617311954498291
    6. '        
' → logprob: -6.867311954498291
    7. ')' → logprob: -7.367311954498291
    8. '
' → logprob: -7.492311954498291
    9. ' return' → logprob: -7.617311954498291
    10. '    ' → logprob: -8.24231243133545

Token 353: ' __' (ID: 2516)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7817923426628113
    2. '   ' → logprob: -1.281792402267456
    3. 'return' → logprob: -1.531792402267456
    4. '    
' → logprob: -3.656792402267456
    5. '        
' → logprob: -4.531792163848877
    6. '
' → logprob: -5.406792163848877
    7. '__' (adapté à ' __') → logprob: -5.906792163848877
    8. ' return' → logprob: -6.906792163848877
    9. 'def' → logprob: -7.406792163848877
    10. '  
' → logprob: -7.656792163848877

Token 354: 'r' (ID: 81)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.04225827381014824
    2. 'r' → logprob: -3.2922582626342773
    3. 'ip' → logprob: -5.542258262634277
    4. 'neg' → logprob: -9.042258262634277
    5. 'rp' → logprob: -9.167258262634277
    6. 'eq' → logprob: -10.292258262634277
    7. 'rf' → logprob: -11.542258262634277
    8. 'xor' → logprob: -12.042258262634277
    9. '
' → logprob: -12.417258262634277
    10. 'pos' → logprob: -12.542258262634277

Token 355: 'pow' (ID: 30304)
  Prédit: 'pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -5.080963092041202e-06
    2. 'add' → logprob: -12.250004768371582
    3. '_pow' → logprob: -16.0000057220459
    4. 'power' → logprob: -17.0000057220459
    5. 'p' → logprob: -17.6250057220459
    6. 'pos' → logprob: -17.8750057220459
    7. '__' → logprob: -18.2500057220459
    8. '**' → logprob: -18.3750057220459
    9. 'Pow' → logprob: -18.7500057220459
    10. ' pow' → logprob: -18.7500057220459

Token 356: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -9.088346359931165e-07
    2. '___' → logprob: -14.875000953674316
    3. '__.__' → logprob: -16.0
    4. '__
' → logprob: -16.125
    5. '_' → logprob: -16.5
    6. '____' → logprob: -16.75
    7. '__[' → logprob: -17.0
    8. '__,' → logprob: -17.25
    9. '__.' → logprob: -17.25
    10. '__

' → logprob: -17.625

Token 357: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029750604182481766
    2. ' =' → logprob: -3.5297505855560303
    3. '_=' → logprob: -16.15475082397461
    4. '=self' → logprob: -17.40475082397461
    5. '=_' → logprob: -17.77975082397461
    6. ' ' → logprob: -18.02975082397461
    7. '_' → logprob: -18.27975082397461
    8. '=
' → logprob: -18.27975082397461
    9. '__' → logprob: -18.77975082397461
    10. '＝' → logprob: -18.77975082397461

Token 358: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.048588961362838745
    2. ' __' → logprob: -3.048588991165161
    3. 'pow' → logprob: -14.548588752746582
    4. '       ' → logprob: -14.798588752746582
    5. '____' → logprob: -16.0485897064209
    6. '___' → logprob: -16.1735897064209
    7. 'def' → logprob: -16.5485897064209
    8. '.__' → logprob: -16.5485897064209
    9. 'lambda' → logprob: -16.7985897064209
    10. '_pow' → logprob: -16.9235897064209

Token 359: 'pow' (ID: 30304)
  Prédit: 'pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0011726059019565582
    2. '__' → logprob: -6.7511725425720215
    3. '_pow' → logprob: -13.25117301940918
    4. 'power' → logprob: -15.50117301940918
    5. 'def' → logprob: -15.87617301940918
    6. ' pow' → logprob: -16.25117301940918
    7. '```' → logprob: -16.37617301940918
    8. '(pow' → logprob: -18.00117301940918
    9. 'Pow' → logprob: -18.12617301940918
    10. '**' → logprob: -18.62617301940918

Token 360: '__
' (ID: 26336)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5856987833976746
    2. '
' → logprob: -1.3356988430023193
    3. '<|end|>' → logprob: -2.2106988430023193
    4. 'return' → logprob: -3.0856988430023193
    5. '    
' → logprob: -4.46069860458374
    6. '       ' → logprob: -5.08569860458374
    7. ' return' → logprob: -6.08569860458374
    8. '        
' → logprob: -6.33569860458374
    9. '	return' → logprob: -7.21069860458374
    10. ')' → logprob: -7.58569860458374

Token 361: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20690937340259552
    2. 'return' → logprob: -2.331909418106079
    3. '       ' → logprob: -2.956909418106079
    4. '<|end|>' → logprob: -3.831909418106079
    5. ' return' → logprob: -5.4569091796875
    6. '    
' → logprob: -5.5819091796875
    7. '
' → logprob: -6.0819091796875
    8. '        
' → logprob: -6.2069091796875
    9. '	return' → logprob: -7.0819091796875
    10. ')' → logprob: -7.2069091796875

Token 362: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5880932211875916
    2. '
' → logprob: -1.2130932807922363
    3. '<|end|>' → logprob: -2.4630932807922363
    4. 'return' (adapté à ' return') → logprob: -2.9630932807922363
    5. '    
' → logprob: -5.213093280792236
    6. ' return' → logprob: -5.963093280792236
    7. '' → logprob: -7.588093280792236
    8. '	return' → logprob: -7.713093280792236
    9. 'newline' → logprob: -8.463092803955078
    10. '<|end|>' → logprob: -8.463092803955078

Token 363: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -1.9361264946837764e-07
    2. ' Mod' → logprob: -15.875
    3. '(Mod' → logprob: -17.625
    4. 'mod' → logprob: -19.5
    5. 'M' → logprob: -19.625
    6. 'Modulo' → logprob: -19.75
    7. 'MOD' → logprob: -20.0
    8. 'Mo' → logprob: -20.375
    9. '_Mod' → logprob: -20.375
    10. '   ' → logprob: -20.5

Token 364: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -0.00043615259346552193
    2. 'int' → logprob: -7.750436305999756
    3. 'nt' → logprob: -12.125435829162598
    4. 'INT' → logprob: -18.000436782836914
    5. 'In' → logprob: -18.250436782836914
    6. ' Int' → logprob: -18.250436782836914
    7. '_int' → logprob: -18.500436782836914
    8. 'Mod' → logprob: -18.625436782836914
    9. '```' → logprob: -19.000436782836914
    10. '   ' → logprob: -20.000436782836914

Token 365: '

' (ID: 279)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9231105446815491
    2. 'def' → logprob: -0.9231105446815491
    3. 'N' → logprob: -2.2981104850769043
    4. 'MOD' → logprob: -2.9231104850769043
    5. 'a' → logprob: -4.048110485076904
    6. 'A' → logprob: -4.423110485076904
    7. 'M' → logprob: -4.923110485076904
    8. '#' → logprob: -5.548110485076904
    9. 'x' → logprob: -5.673110485076904
    10. 'class' → logprob: -5.923110485076904

Token 366: 'def' (ID: 1314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.627240777015686
    2. 'N' → logprob: -0.877240777015686
    3. 'def' → logprob: -3.3772406578063965
    4. 'MOD' → logprob: -4.7522406578063965
    5. 'a' → logprob: -5.5022406578063965
    6. 'A' → logprob: -7.2522406578063965
    7. 'class' → logprob: -7.5022406578063965
    8. 'x' → logprob: -8.127241134643555
    9. 'mod' → logprob: -8.127241134643555
    10. 'if' → logprob: -8.127241134643555

Token 367: ' make' (ID: 1520)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.016163522377610207
    2. 'main' → logprob: -4.141163349151611
    3. ' solve' → logprob: -9.14116382598877
    4. 'solve' → logprob: -11.14116382598877
    5. '	main' → logprob: -12.64116382598877
    6. ' factorial' → logprob: -13.01616382598877
    7. '_main' → logprob: -14.01616382598877
    8. ' count' → logprob: -15.76616382598877
    9. ' compute' → logprob: -15.89116382598877
    10. 'factor' → logprob: -16.016162872314453

Token 368: '_zero' (ID: 53468)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_factor' → logprob: -1.0682450532913208
    2. '_mod' → logprob: -1.3182450532913208
    3. '_counter' → logprob: -1.8182450532913208
    4. '_array' → logprob: -3.0682449340820312
    5. '_input' → logprob: -3.0682449340820312
    6. '_prefix' → logprob: -3.9432449340820312
    7. '_div' → logprob: -4.443244934082031
    8. '_list' → logprob: -4.568244934082031
    9. '_pair' → logprob: -4.693244934082031
    10. '_adj' → logprob: -5.068244934082031

Token 369: '(Mod' (ID: 147705)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.03260524198412895
    2. '_' → logprob: -3.5326051712036133
    3. '()' → logprob: -7.032605171203613
    4. ' ():' → logprob: -7.657605171203613
    5. '_based' → logprob: -7.782605171203613
    6. '():
' → logprob: -8.407605171203613
    7. '_array' → logprob: -8.532605171203613
    8. '_vector' → logprob: -9.407605171203613
    9. '_base' → logprob: -9.907605171203613
    10. '_value' → logprob: -9.907605171203613

Token 370: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -2.7610454708337784e-05
    2. 'int' → logprob: -10.500027656555176
    3. ' Int' → logprob: -17.50002670288086
    4. 'INT' → logprob: -17.62502670288086
    5. '   ' → logprob: -19.50002670288086
    6. '_int' → logprob: -19.62502670288086
    7. '(Int' → logprob: -20.12502670288086
    8. 'In' → logprob: -20.25002670288086
    9. '_Int' → logprob: -21.12502670288086
    10. 'Ints' → logprob: -21.37502670288086

Token 371: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.062308914959430695
    2. '):
' → logprob: -2.8123090267181396
    3. ')' → logprob: -8.562309265136719
    4. ',' → logprob: -9.187309265136719
    5. '   ' → logprob: -10.937309265136719
    6. ' ):' → logprob: -11.562309265136719
    7. '):
' → logprob: -11.937309265136719
    8. 'class' → logprob: -12.687309265136719
    9. '):

' → logprob: -12.812309265136719
    10. 'Class' → logprob: -13.187309265136719

Token 372: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00015467056073248386
    2. 'return' → logprob: -8.875154495239258
    3. ' return' → logprob: -11.375154495239258
    4. '   ' → logprob: -13.375154495239258
    5. ')' → logprob: -13.875154495239258
    6. '    
' → logprob: -15.625154495239258
    7. '  ' → logprob: -15.875154495239258
    8. '	return' → logprob: -16.125154495239258
    9. ' ' → logprob: -16.500154495239258
    10. '{return' → logprob: -16.625154495239258

Token 373: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.07907848060131073
    2. '   ' → logprob: -2.579078435897827
    3. ' return' → logprob: -8.579078674316406
    4. '	return' → logprob: -14.829078674316406
    5. 'def' → logprob: -16.079078674316406
    6. '
' → logprob: -16.704078674316406
    7. '  ' → logprob: -17.329078674316406
    8. '    
' → logprob: -17.454078674316406
    9. ' ' → logprob: -17.829078674316406
    10. '{return' → logprob: -18.079078674316406

Token 374: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -5.5861724831629544e-05
    2. ' Mod' → logprob: -10.000056266784668
    3. '(Mod' → logprob: -11.500056266784668
    4. '   ' → logprob: -15.250056266784668
    5. '_Mod' → logprob: -18.75005531311035
    6. 'Mo' → logprob: -19.37505531311035
    7. '  ' → logprob: -19.50005531311035
    8. '_mod' → logprob: -19.50005531311035
    9. '0' → logprob: -19.62505531311035
    10. ' ' → logprob: -19.87505531311035

Token 375: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -1.2664456789934775e-06
    2. 'int' → logprob: -13.625000953674316
    3. ' Int' → logprob: -18.875001907348633
    4. '   ' → logprob: -19.125001907348633
    5. 'nt' → logprob: -19.250001907348633
    6. 'In' → logprob: -19.250001907348633
    7. '_int' → logprob: -20.500001907348633
    8. '	Int' → logprob: -20.500001907348633
    9. 'INT' → logprob: -20.875001907348633
    10. '(Int' → logprob: -21.000001907348633

Token 376: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.054500666621607e-06
    2. '0' → logprob: -12.87500286102295
    3. '()' → logprob: -15.25000286102295
    4. ' (' → logprob: -15.75000286102295
    5. '((' → logprob: -17.000003814697266
    6. '(
' → logprob: -17.250003814697266
    7. 'def' → logprob: -17.500003814697266
    8. '()(' → logprob: -18.250003814697266
    9. '(int' → logprob: -19.375003814697266
    10. '(-' → logprob: -20.625003814697266

Token 377: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.25
    3. '   ' → logprob: -21.375
    4. ')' → logprob: -21.5
    5. '۰' → logprob: -23.25
    6. '０' → logprob: -23.875
    7. '  ' → logprob: -24.375
    8. 'zero' → logprob: -25.0
    9. '٠' → logprob: -25.25
    10. '०' → logprob: -25.375

Token 378: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ')
' → logprob: -13.875000953674316
    3. ')return' → logprob: -17.250001907348633
    4. ' )' → logprob: -17.750001907348633
    5. ')}' → logprob: -18.125001907348633
    6. '))' → logprob: -19.000001907348633
    7. '())' → logprob: -19.375001907348633
    8. '),' → logprob: -19.375001907348633
    9. ')

' → logprob: -19.500001907348633
    10. '<|end|>' → logprob: -19.500001907348633

Token 379: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00023441045777872205
    2. '<|end|>' → logprob: -8.625234603881836
    3. '
' → logprob: -10.750234603881836
    4. '```' → logprob: -11.500234603881836
    5. '<|end|>' → logprob: -11.875234603881836
    6. '#' → logprob: -12.250234603881836
    7. 'class' → logprob: -12.375234603881836
    8. ' def' → logprob: -13.000234603881836
    9. 'ndef' → logprob: -14.000234603881836
    10. '

' → logprob: -14.125234603881836

Token 380: ' make' (ID: 1520)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.3597254157066345
    2. 'make' → logprob: -1.7347254753112793
    3. ' main' → logprob: -2.1097254753112793
    4. ' make' → logprob: -5.484725475311279
    5. 'solve' → logprob: -8.984724998474121
    6. 'def' → logprob: -10.234724998474121
    7. 'read' → logprob: -10.484724998474121
    8. 'sum' → logprob: -11.234724998474121
    9. ' solve' → logprob: -11.234724998474121
    10. 'max' → logprob: -12.234724998474121

Token 381: '_one' (ID: 26979)
  Prédit: '_zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_zero' → logprob: -0.5431459546089172
    2. '_one' → logprob: -1.5431458950042725
    3. '_mod' → logprob: -1.6681458950042725
    4. '(Mod' → logprob: -4.668146133422852
    5. '_max' → logprob: -6.043146133422852
    6. '_' → logprob: -6.043146133422852
    7. '_Mod' → logprob: -7.668146133422852
    8. '_int' → logprob: -8.293146133422852
    9. '_input' → logprob: -8.668146133422852
    10. '_sum' → logprob: -8.793146133422852

Token 382: '(Mod' (ID: 147705)
  Prédit: '(Mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Mod' → logprob: -1.0325924449716695e-05
    2. '(' → logprob: -11.50001049041748
    3. '(Module' → logprob: -16.375009536743164
    4. 'Mod' → logprob: -17.875009536743164
    5. '(mod' → logprob: -18.000009536743164
    6. ' (' → logprob: -18.125009536743164
    7. '(
' → logprob: -18.750009536743164
    8. '(Func' → logprob: -18.750009536743164
    9. '(Model' → logprob: -18.875009536743164
    10. '():' → logprob: -19.000009536743164

Token 383: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -4.320199877838604e-07
    2. 'int' → logprob: -15.0
    3. ' Int' → logprob: -17.75
    4. 'In' → logprob: -18.375
    5. '_int' → logprob: -18.75
    6. '(Int' → logprob: -19.0
    7. 'Ints' → logprob: -19.25
    8. '_Int' → logprob: -19.875
    9. '	Int' → logprob: -20.375
    10. '[Int' → logprob: -20.875

Token 384: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008197537390515208
    2. '):
' → logprob: -7.250819683074951
    3. ')' → logprob: -9.12582015991211
    4. '):

' → logprob: -14.87582015991211
    5. '(Mod' → logprob: -15.25082015991211
    6. ' ):' → logprob: -16.12582015991211
    7. '):
' → logprob: -17.00082015991211
    8. '():' → logprob: -17.12582015991211
    9. ':' → logprob: -17.25082015991211
    10. '(' → logprob: -17.37582015991211

Token 385: '   ' (ID: 271)
  Prédit: '(Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Mod' → logprob: -0.338219553232193
    2. '   ' → logprob: -1.3382195234298706
    3. 'Mod' → logprob: -4.33821964263916
    4. 'return' → logprob: -4.58821964263916
    5. ' return' → logprob: -6.58821964263916
    6. 'def' → logprob: -10.71321964263916
    7. ' Mod' → logprob: -11.46321964263916
    8. '(' → logprob: -12.46321964263916
    9. ' ' → logprob: -14.21321964263916
    10. '(
' → logprob: -14.33821964263916

Token 386: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6935666799545288
    2. 'Mod' → logprob: -0.6935666799545288
    3. ' return' → logprob: -7.943566799163818
    4. '   ' → logprob: -9.94356632232666
    5. '(Mod' → logprob: -11.44356632232666
    6. ' Mod' → logprob: -12.19356632232666
    7. 'Return' → logprob: -15.56856632232666
    8. 'def' → logprob: -15.69356632232666
    9. '0' → logprob: -16.318567276000977
    10. 'MOD' → logprob: -16.568567276000977

Token 387: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.0017433661269024014
    2. ' Mod' → logprob: -6.876743316650391
    3. '(Mod' → logprob: -7.251743316650391
    4. 'Mo' → logprob: -14.62674331665039
    5. '   ' → logprob: -14.87674331665039
    6. ' ' → logprob: -15.50174331665039
    7. '  ' → logprob: -16.00174331665039
    8. 'MOD' → logprob: -16.12674331665039
    9. '_Mod' → logprob: -16.50174331665039
    10. 'Modulo' → logprob: -17.00174331665039

Token 388: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -1.5048530030981055e-06
    2. 'int' → logprob: -13.500001907348633
    3. 'In' → logprob: -19.625001907348633
    4. ' Int' → logprob: -20.000001907348633
    5. '(Mod' → logprob: -20.500001907348633
    6. 'INT' → logprob: -20.875001907348633
    7. 'Mod' → logprob: -21.500001907348633
    8. '(Int' → logprob: -21.500001907348633
    9. 'Ints' → logprob: -21.500001907348633
    10. '1' → logprob: -21.625001907348633

Token 389: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.9361264946837764e-07
    2. '1' → logprob: -16.125
    3. ' (' → logprob: -19.0
    4. '(
' → logprob: -19.375
    5. '((' → logprob: -21.5
    6. '(

' → logprob: -23.25
    7. 'def' → logprob: -23.625
    8. '   ' → logprob: -24.75
    9. ')(' → logprob: -25.125
    10. '()' → logprob: -25.25

Token 390: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.0
    3. ')' → logprob: -21.625
    4. '   ' → logprob: -22.125
    5. '(' → logprob: -22.375
    6. '۱' → logprob: -23.0
    7. '১' → logprob: -24.0
    8. '  ' → logprob: -24.125
    9. '```' → logprob: -24.125
    10. '१' → logprob: -24.625

Token 391: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ')
' → logprob: -15.125
    3. ' )' → logprob: -18.375
    4. ')

' → logprob: -19.125
    5. ')`' → logprob: -19.375
    6. ')return' → logprob: -20.0
    7. '())' → logprob: -20.25
    8. ')#' → logprob: -20.375
    9. ')}' → logprob: -20.75
    10. '<|end|>' → logprob: -21.25

Token 392: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00020509003661572933
    2. 'n' → logprob: -9.125205039978027
    3. 'N' → logprob: -10.000205039978027
    4. 'if' → logprob: -10.250205039978027
    5. '#' → logprob: -11.750205039978027
    6. 'class' → logprob: -12.625205039978027
    7. 'from' → logprob: -13.375205039978027
    8. 'MOD' → logprob: -14.000205039978027
    9. 'a' → logprob: -14.500205039978027
    10. ' def' → logprob: -15.250205039978027

Token 393: ' get' (ID: 717)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.28388872742652893
    2. ' main' → logprob: -1.4088886976242065
    3. 'solve' → logprob: -6.283888816833496
    4. ' solve' → logprob: -7.908888816833496
    5. 'factor' → logprob: -8.408888816833496
    6. 'mod' → logprob: -9.908888816833496
    7. 'process' → logprob: -10.283888816833496
    8. ' factorial' → logprob: -10.283888816833496
    9. 'parse' → logprob: -10.533888816833496
    10. 'pow' → logprob: -10.783888816833496

Token 394: '_half' (ID: 105284)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0715644508600235
    2. '_mod' → logprob: -3.6965644359588623
    3. '_max' → logprob: -4.446564674377441
    4. '_factor' → logprob: -4.946564674377441
    5. '_num' → logprob: -6.196564674377441
    6. '_result' → logprob: -6.321564674377441
    7. '_comb' → logprob: -6.446564674377441
    8. '_pow' → logprob: -6.446564674377441
    9. '_sum' → logprob: -6.696564674377441
    10. '_main' → logprob: -6.821564674377441

Token 395: '(Mod' (ID: 147705)
  Prédit: '(Mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Mod' → logprob: -0.07016149908304214
    2. '():' → logprob: -2.6951615810394287
    3. '()' → logprob: -8.570161819458008
    4. '(' → logprob: -11.445161819458008
    5. '(mod' → logprob: -11.945161819458008
    6. '(Module' → logprob: -12.570161819458008
    7. '():
' → logprob: -12.695161819458008
    8. ' ():' → logprob: -12.945161819458008
    9. '()(' → logprob: -13.070161819458008
    10. '(make' → logprob: -13.070161819458008

Token 396: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -0.0017089712200686336
    2. 'int' → logprob: -6.376708984375
    3. 'INT' → logprob: -13.251708984375
    4. '(Mod' → logprob: -13.251708984375
    5. '(Int' → logprob: -13.751708984375
    6. '_int' → logprob: -13.876708984375
    7. 'def' → logprob: -14.751708984375
    8. '(M' → logprob: -15.251708984375
    9. 'In' → logprob: -15.751708984375
    10. ' Int' → logprob: -15.876708984375

Token 397: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5761133432388306
    2. '):' → logprob: -0.8261133432388306
    3. ')' → logprob: -8.7011137008667
    4. '):

' → logprob: -12.3261137008667
    5. '):
' → logprob: -13.3261137008667
    6. '(Mod' → logprob: -13.8261137008667
    7. ',' → logprob: -16.201112747192383
    8. ')
' → logprob: -16.576112747192383
    9. '():
' → logprob: -17.076112747192383
    10. '   ' → logprob: -17.076112747192383

Token 398: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10052194446325302
    2. 'return' → logprob: -2.350522041320801
    3. ' return' → logprob: -8.1005220413208
    4. 'def' → logprob: -11.6005220413208
    5. '	return' → logprob: -13.8505220413208
    6. '  ' → logprob: -14.7255220413208
    7. '    
' → logprob: -14.8505220413208
    8. ' ' → logprob: -15.3505220413208
    9. '```' → logprob: -15.4755220413208
    10. '   ' → logprob: -15.6005220413208

Token 399: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -8.315936429426074e-05
    2. '   ' → logprob: -10.000082969665527
    3. ' return' → logprob: -10.375082969665527
    4. 'make' → logprob: -12.250082969665527
    5. 'Mod' → logprob: -13.875082969665527
    6. 'def' → logprob: -14.375082969665527
    7. 'try' → logprob: -17.125083923339844
    8. 'mod' → logprob: -17.375083923339844
    9. '```' → logprob: -17.625083923339844
    10. '	return' → logprob: -17.750083923339844

Token 400: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.00012284684635233134
    2. 'make' → logprob: -9.375123023986816
    3. ' Mod' → logprob: -10.250123023986816
    4. '(Mod' → logprob: -13.875123023986816
    5. '   ' → logprob: -14.250123023986816
    6. 'mod' → logprob: -14.625123023986816
    7. 'Make' → logprob: -15.000123023986816
    8. 'MOD' → logprob: -16.0001220703125
    9. '  ' → logprob: -17.1251220703125
    10. ' make' → logprob: -17.2501220703125

Token 401: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -7.941850526549388e-06
    2. 'int' → logprob: -11.750007629394531
    3. 'In' → logprob: -18.87500762939453
    4. ' Int' → logprob: -19.37500762939453
    5. 'INT' → logprob: -19.50000762939453
    6. '[Int' → logprob: -20.37500762939453
    7. '   ' → logprob: -21.00000762939453
    8. '_int' → logprob: -21.00000762939453
    9. 'Ints' → logprob: -21.25000762939453
    10. '(Int' → logprob: -21.50000762939453

Token 402: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.016217829659581184
    2. '((' → logprob: -4.1412177085876465
    3. '(
' → logprob: -10.016218185424805
    4. '(Mod' → logprob: -10.016218185424805
    5. '(-' → logprob: -10.641218185424805
    6. '(.' → logprob: -11.141218185424805
    7. '()' → logprob: -11.391218185424805
    8. '(/' → logprob: -11.391218185424805
    9. '(int' → logprob: -12.141218185424805
    10. '(pow' → logprob: -12.516218185424805

Token 403: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006768657360225916
    2. '(' → logprob: -5.006768703460693
    3. '(M' → logprob: -10.506768226623535
    4. '(Mod' → logprob: -11.881768226623535
    5. '1' → logprob: -12.131768226623535
    6. '(get' → logprob: -12.256768226623535
    7. 'MOD' → logprob: -13.131768226623535
    8. '-' → logprob: -13.506768226623535
    9. '((' → logprob: -13.631768226623535
    10. '(mod' → logprob: -13.881768226623535

Token 404: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08564428240060806
    2. ').' → logprob: -2.585644245147705
    3. ').__' → logprob: -5.085644245147705
    4. ')**' → logprob: -7.585644245147705
    5. ')
' → logprob: -10.960644721984863
    6. ' )' → logprob: -12.085644721984863
    7. '))' → logprob: -12.710644721984863
    8. ' ).' → logprob: -12.960644721984863
    9. '   ' → logprob: -13.210644721984863
    10. ')`' → logprob: -13.335644721984863

Token 405: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 406: ' get' (ID: 717)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.24642086029052734
    2. 'get' → logprob: -2.1214208602905273
    3. ' main' → logprob: -3.3714208602905273
    4. 'pow' → logprob: -3.7464208602905273
    5. 'make' → logprob: -3.9964208602905273
    6. 'mod' → logprob: -4.371420860290527
    7. ' get' → logprob: -5.746420860290527
    8. 'solve' → logprob: -6.246420860290527
    9. 'factor' → logprob: -7.746420860290527
    10. 'inverse' → logprob: -7.871420860290527

Token 407: '_power' (ID: 51623)
  Prédit: '_mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_mod' → logprob: -1.0950638055801392
    2. '(Mod' → logprob: -1.5950638055801392
    3. '_half' → logprob: -1.8450638055801392
    4. '_three' → logprob: -2.5950636863708496
    5. '_inv' → logprob: -2.7200636863708496
    6. '_inverse' → logprob: -3.3450636863708496
    7. '_four' → logprob: -3.8450636863708496
    8. 'half' → logprob: -4.09506368637085
    9. '_max' → logprob: -4.22006368637085
    10. 'Mod' → logprob: -4.59506368637085

Token 408: '_two' (ID: 54305)
  Prédit: '(Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(Mod' → logprob: -0.003026910126209259
    2. '(' → logprob: -6.128026962280273
    3. '():' → logprob: -7.753026962280273
    4. '_(' → logprob: -8.753026962280273
    5. 'def' → logprob: -9.378026962280273
    6. '()' → logprob: -10.128026962280273
    7. '_' → logprob: -10.753026962280273
    8. '()(' → logprob: -11.628026962280273
    9. 'of' → logprob: -12.003026962280273
    10. '(get' → logprob: -12.003026962280273

Token 409: '(Mod' (ID: 147705)
  Prédit: '(Mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Mod' → logprob: -0.0001640876434976235
    2. '():' → logprob: -9.375164031982422
    3. '(' → logprob: -9.875164031982422
    4. '_(' → logprob: -11.375164031982422
    5. '()' → logprob: -12.375164031982422
    6. '()(' → logprob: -12.500164031982422
    7. 'def' → logprob: -13.500164031982422
    8. '(Module' → logprob: -13.625164031982422
    9. '_' → logprob: -13.750164031982422
    10. ':' → logprob: -14.875164031982422

Token 410: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -2.534558552724775e-05
    2. 'int' → logprob: -10.625025749206543
    3. 'In' → logprob: -15.000025749206543
    4. '   ' → logprob: -15.625025749206543
    5. '(Int' → logprob: -16.500024795532227
    6. '
' → logprob: -16.500024795532227
    7. '(' → logprob: -16.875024795532227
    8. ' Int' → logprob: -16.875024795532227
    9. 'Ints' → logprob: -17.125024795532227
    10. 'It' → logprob: -17.625024795532227

Token 411: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005499718710780144
    2. '):
' → logprob: -5.505499839782715
    3. ')' → logprob: -7.505499839782715
    4. ',' → logprob: -7.755499839782715
    5. '(Mod' → logprob: -7.755499839782715
    6. '(' → logprob: -12.505499839782715
    7. '   ' → logprob: -12.755499839782715
    8. ':' → logprob: -13.130499839782715
    9. '):

' → logprob: -13.630499839782715
    10. '):
' → logprob: -13.755499839782715

Token 412: ' i' (ID: 575)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.15076462924480438
    2. 'exp' → logprob: -2.9007647037506104
    3. 'ex' → logprob: -3.2757647037506104
    4. 'e' → logprob: -4.150764465332031
    5. 'power' → logprob: -4.150764465332031
    6. 'k' → logprob: -5.525764465332031
    7. ' n' → logprob: -5.525764465332031
    8. 'pow' → logprob: -6.150764465332031
    9. ' exponent' → logprob: -6.525764465332031
    10. '   ' → logprob: -7.150764465332031

Token 413: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004369240254163742
    2. '):
' → logprob: -5.879369258880615
    3. ')' → logprob: -6.504369258880615
    4. ',' → logprob: -10.004368782043457
    5. ' ):' → logprob: -12.504368782043457
    6. '   ' → logprob: -12.879368782043457
    7. ''):' → logprob: -13.254368782043457
    8. '**' → logprob: -13.254368782043457
    9. '+' → logprob: -13.754368782043457
    10. '*' → logprob: -14.004368782043457

Token 414: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10023309290409088
    2. 'return' → logprob: -2.3502330780029297
    3. ' return' → logprob: -10.60023307800293
    4. '	return' → logprob: -13.60023307800293
    5. '   ' → logprob: -15.85023307800293
    6. '
' → logprob: -16.35023307800293
    7. '    
' → logprob: -16.85023307800293
    8. 'def' → logprob: -17.35023307800293
    9. '  ' → logprob: -17.60023307800293
    10. '{return' → logprob: -17.72523307800293

Token 415: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.007028996478766203
    2. '   ' → logprob: -5.007029056549072
    3. ' return' → logprob: -8.132028579711914
    4. 'Mod' → logprob: -10.882028579711914
    5. '	return' → logprob: -14.507028579711914
    6. 'def' → logprob: -16.132028579711914
    7. '
' → logprob: -16.632028579711914
    8. ' ' → logprob: -17.507028579711914
    9. 'mod' → logprob: -17.507028579711914
    10. '(Mod' → logprob: -17.632028579711914

Token 416: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.00017362393555231392
    2. ' Mod' → logprob: -8.750173568725586
    3. '(Mod' → logprob: -11.500173568725586
    4. '   ' → logprob: -12.625173568725586
    5. 'make' → logprob: -15.000173568725586
    6. 'Make' → logprob: -15.125173568725586
    7. 'mod' → logprob: -15.750173568725586
    8. ' ' → logprob: -15.875173568725586
    9. 'Modulo' → logprob: -15.875173568725586
    10. '2' → logprob: -16.000173568725586

Token 417: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -5.512236498361744e-07
    2. 'int' → logprob: -14.625000953674316
    3. ' Int' → logprob: -18.0
    4. '(Int' → logprob: -18.75
    5. '	Int' → logprob: -20.0
    6. '[Int' → logprob: -20.25
    7. 'In' → logprob: -20.25
    8. '_int' → logprob: -20.5
    9. 'Ints' → logprob: -21.125
    10. '(Mod' → logprob: -21.25

Token 418: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007026608218438923
    2. '(pow' → logprob: -7.750702857971191
    3. '2' → logprob: -8.750702857971191
    4. 'pow' → logprob: -9.250702857971191
    5. '((' → logprob: -11.625702857971191
    6. '(i' → logprob: -12.875702857971191
    7. '(
' → logprob: -13.000702857971191
    8. '(get' → logprob: -13.625702857971191
    9. '(M' → logprob: -14.625702857971191
    10. '(Mod' → logprob: -15.125702857971191

Token 419: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0010431708069518209
    2. '1' → logprob: -7.376043319702148
    3. 'pow' → logprob: -7.876043319702148
    4. '(' → logprob: -10.626043319702148
    5. ')' → logprob: -12.501043319702148
    6. ' ' → logprob: -12.626043319702148
    7. '   ' → logprob: -12.751043319702148
    8. '
' → logprob: -13.626043319702148
    9. '```' → logprob: -15.376043319702148
    10. ' pow' → logprob: -15.751043319702148

Token 420: ')' (ID: 8)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0035144297871738672
    2. ' **' → logprob: -6.003514289855957
    3. ')' → logprob: -6.878514289855957
    4. ')**' → logprob: -12.378514289855957
    5. '__' → logprob: -13.128514289855957
    6. '^' → logprob: -14.378514289855957
    7. '*' → logprob: -14.503514289855957
    8. '*i' → logprob: -14.753514289855957
    9. 'i' → logprob: -14.878514289855957
    10. '**)' → logprob: -15.128514289855957

Token 421: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.16034923493862152
    2. ' **' → logprob: -1.9103492498397827
    3. '^' → logprob: -10.410348892211914
    4. '<|end|>' → logprob: -10.410348892211914
    5. '__' → logprob: -10.785348892211914
    6. '*' → logprob: -11.285348892211914
    7. '**
' → logprob: -11.660348892211914
    8. '
' → logprob: -11.910348892211914
    9. ')' → logprob: -12.410348892211914
    10. ' *' → logprob: -12.910348892211914

Token 422: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00020354038861114532
    2. ' i' → logprob: -8.500203132629395
    3. '   ' → logprob: -17.62520408630371
    4. '	i' → logprob: -18.50020408630371
    5. ' ' → logprob: -19.00020408630371
    6. '(i' → logprob: -20.50020408630371
    7. ' ' → logprob: -20.62520408630371
    8. '_i' → logprob: -20.75020408630371
    9. '  ' → logprob: -20.87520408630371
    10. '
' → logprob: -22.12520408630371

Token 423: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 424: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 425: ' process' (ID: 2273)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.795683741569519
    2. ' main' → logprob: -1.045683741569519
    3. 'get' → logprob: -2.6706838607788086
    4. 'pow' → logprob: -3.2956838607788086
    5. 'read' → logprob: -3.9206838607788086
    6. ' get' → logprob: -4.420683860778809
    7. 'factor' → logprob: -4.545683860778809
    8. 'create' → logprob: -4.795683860778809
    9. ' factorial' → logprob: -5.170683860778809
    10. 'sum' → logprob: -5.420683860778809

Token 426: '_cp' (ID: 96857)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.11393643170595169
    2. '_' → logprob: -2.488936424255371
    3. '_inputs' → logprob: -4.988936424255371
    4. '(' → logprob: -5.113936424255371
    5. '_array' → logprob: -5.863936424255371
    6. '_data' → logprob: -5.988936424255371
    7. '_elements' → logprob: -6.863936424255371
    8. '_numbers' → logprob: -6.863936424255371
    9. '(input' → logprob: -6.988936424255371
    10. '_items' → logprob: -7.738936424255371

Token 427: '(i' (ID: 3649)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.06940340995788574
    2. '_' → logprob: -3.5694034099578857
    3. '():' → logprob: -4.694403648376465
    4. '_input' → logprob: -4.694403648376465
    5. '():
' → logprob: -4.819403648376465
    6. 'ut' → logprob: -6.444403648376465
    7. '()' → logprob: -6.444403648376465
    8. '_data' → logprob: -6.569403648376465
    9. '_inputs' → logprob: -6.944403648376465
    10. 'p' → logprob: -7.069403648376465

Token 428: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1520124226808548
    2. ',' → logprob: -2.152012348175049
    3. ')' → logprob: -4.652012348175049
    4. '_' → logprob: -5.277012348175049
    5. 'n' → logprob: -5.277012348175049
    6. '):
' → logprob: -6.652012348175049
    7. 'u' → logprob: -6.777012348175049
    8. 'nt' → logprob: -7.902012348175049
    9. ')_' → logprob: -8.152012825012207
    10. '+' → logprob: -8.277012825012207

Token 429: ' B' (ID: 418)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.8324980139732361
    2. ' Mod' → logprob: -1.5824980735778809
    3. 'n' → logprob: -2.207498073577881
    4. ' n' → logprob: -2.207498073577881
    5. 'x' → logprob: -4.082498073577881
    6. 'N' → logprob: -4.332498073577881
    7. ' x' → logprob: -4.332498073577881
    8. 'arr' → logprob: -4.457498073577881
    9. 'a' → logprob: -4.582498073577881
    10. ' data' → logprob: -5.082498073577881

Token 430: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4786621034145355
    2. ',' → logprob: -0.9786621332168579
    3. ')' → logprob: -6.603662014007568
    4. '[' → logprob: -6.853662014007568
    5. '):
' → logprob: -7.353662014007568
    6. '[i' → logprob: -7.603662014007568
    7. ' ,' → logprob: -8.853662490844727
    8. ' ):' → logprob: -9.228662490844727
    9. ':' → logprob: -9.353662490844727
    10. '_' → logprob: -9.603662490844727

Token 431: ' cp' (ID: 27776)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.0363373756408691
    2. 'Mod' → logprob: -1.1613373756408691
    3. 'N' → logprob: -2.286337375640869
    4. 'n' → logprob: -3.036337375640869
    5. 'M' → logprob: -3.786337375640869
    6. ' A' → logprob: -4.036337375640869
    7. 'C' → logprob: -4.036337375640869
    8. ' Mod' → logprob: -4.411337375640869
    9. 'MOD' → logprob: -4.411337375640869
    10. 'pow' → logprob: -4.536337375640869

Token 432: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4449895918369293
    2. '):
' → logprob: -1.569989562034607
    3. 'ow' → logprob: -3.4449896812438965
    4. 'oint' → logprob: -3.8199896812438965
    5. ')' → logprob: -3.9449896812438965
    6. '[i' → logprob: -4.1949896812438965
    7. 'oints' → logprob: -4.5699896812438965
    8. 'os' → logprob: -5.1949896812438965
    9. 'i' → logprob: -5.5699896812438965
    10. '_mod' → logprob: -5.6949896812438965

Token 433: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.6779440641403198
    2. 'N' → logprob: -2.4279441833496094
    3. 'A' → logprob: -2.8029441833496094
    4. 'n' → logprob: -2.9279441833496094
    5. 'MOD' → logprob: -3.0529441833496094
    6. 'dp' → logprob: -3.3029441833496094
    7. 'M' → logprob: -3.3029441833496094
    8. ' Mod' → logprob: -4.302944183349609
    9. 'mod' → logprob: -4.302944183349609
    10. 'a' → logprob: -4.427944183349609

Token 434: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -5.512236498361744e-07
    2. 'int' → logprob: -14.750000953674316
    3. 'In' → logprob: -17.0
    4. ' Int' → logprob: -17.5
    5. '_int' → logprob: -17.875
    6. 'Ints' → logprob: -18.125
    7. '_Int' → logprob: -19.25
    8. '<Int' → logprob: -20.375
    9. '[Int' → logprob: -20.625
    10. '	Int' → logprob: -20.875

Token 435: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01277190912514925
    2. ',' → logprob: -4.387772083282471
    3. '):
' → logprob: -9.137771606445312
    4. ')' → logprob: -9.387771606445312
    5. ' ):' → logprob: -10.012771606445312
    6. '   ' → logprob: -11.387771606445312
    7. ':' → logprob: -12.512771606445312
    8. ' ,' → logprob: -13.137771606445312
    9. '[' → logprob: -13.512771606445312
    10. ' ' → logprob: -13.762771606445312

Token 436: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000556843588128686
    2. ':' → logprob: -8.750556945800781
    3. ',' → logprob: -8.875556945800781
    4. '    
' → logprob: -8.875556945800781
    5. '):
' → logprob: -10.125556945800781
    6. '):' → logprob: -10.375556945800781
    7. '   ' → logprob: -11.250556945800781
    8. ')' → logprob: -11.625556945800781
    9. ':
' → logprob: -11.875556945800781
    10. '
' → logprob: -12.875556945800781

Token 437: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.18525075912475586
    2. 'cp' → logprob: -2.810250759124756
    3. 'res' → logprob: -3.310250759124756
    4. 'return' → logprob: -4.310250759124756
    5. '   ' → logprob: -4.810250759124756
    6. 'tmp' → logprob: -4.935250759124756
    7. 'power' → logprob: -4.935250759124756
    8. 'temp' → logprob: -5.060250759124756
    9. 'pow' → logprob: -5.185250759124756
    10. 'val' → logprob: -5.685250759124756

Token 438: ' i' (ID: 575)
  Prédit: ' B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.867292582988739
    2. ' i' → logprob: -0.992292582988739
    3. ' cp' → logprob: -2.242292642593384
    4. 'B' → logprob: -3.492292642593384
    5. ' isinstance' → logprob: -3.617292642593384
    6. 'i' → logprob: -4.117292404174805
    7. ' (' → logprob: -4.492292404174805
    8. 'cp' → logprob: -5.242292404174805
    9. ' len' → logprob: -5.492292404174805
    10. '(i' → logprob: -5.992292404174805

Token 439: ' <' (ID: 464)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5408825278282166
    2. ' <' → logprob: -1.6658825874328613
    3. '==' → logprob: -1.7908825874328613
    4. '<' → logprob: -3.7908825874328613
    5. ' >=' → logprob: -4.665882587432861
    6. ' >' → logprob: -4.790882587432861
    7. ' <=' → logprob: -5.040882587432861
    8. '%' → logprob: -5.290882587432861
    9. ' %' → logprob: -6.040882587432861
    10. '>' → logprob: -6.165882587432861

Token 440: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.6189742684364319
    2. 'len' → logprob: -1.618974208831787
    3. ' B' → logprob: -2.493974208831787
    4. '0' → logprob: -3.118974208831787
    5. ' len' → logprob: -3.618974208831787
    6. '2' → logprob: -4.243974208831787
    7. '32' → logprob: -4.243974208831787
    8. '64' → logprob: -4.368974208831787
    9. '16' → logprob: -4.493974208831787
    10. '10' → logprob: -4.618974208831787

Token 441: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10574361681938171
    2. ':
' → logprob: -2.355743646621704
    3. '   ' → logprob: -6.105743408203125
    4. '):' → logprob: -7.105743408203125
    5. '       ' → logprob: -7.355743408203125
    6. '-' → logprob: -7.980743408203125
    7. ':return' → logprob: -8.355743408203125
    8. '):
' → logprob: -8.480743408203125
    9. ' -' → logprob: -8.605743408203125
    10. ' *' → logprob: -8.855743408203125

Token 442: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005980816204100847
    2. '   ' → logprob: -6.005980968475342
    3. ':
' → logprob: -6.005980968475342
    4. ':' → logprob: -7.880980968475342
    5. '):
' → logprob: -8.505980491638184
    6. 'return' → logprob: -9.005980491638184
    7. ' return' → logprob: -9.130980491638184
    8. '
' → logprob: -9.255980491638184
    9. ',' → logprob: -10.380980491638184
    10. '0' → logprob: -11.380980491638184

Token 443: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6753321886062622
    2. 'cp' → logprob: -0.8003321886062622
    3. '       ' → logprob: -3.6753320693969727
    4. '   ' → logprob: -4.300332069396973
    5. ' return' → logprob: -6.550332069396973
    6. ' cp' → logprob: -7.175332069396973
    7. '           ' → logprob: -8.050332069396973
    8. '
' → logprob: -9.425332069396973
    9. 'result' → logprob: -9.550332069396973
    10. 'pow' → logprob: -10.175332069396973

Token 444: ' Mod' (ID: 7191)
  Prédit: ' cp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cp' → logprob: -0.7665742039680481
    2. ' make' → logprob: -1.2665741443634033
    3. 'cp' → logprob: -1.7665741443634033
    4. 'make' → logprob: -2.7665741443634033
    5. 'Mod' → logprob: -4.891574382781982
    6. ' Mod' → logprob: -4.891574382781982
    7. ' get' → logprob: -6.766574382781982
    8. '(cp' → logprob: -7.141574382781982
    9. ' ' → logprob: -7.391574382781982
    10. '0' → logprob: -7.766574382781982

Token 445: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -4.842555426876061e-06
    2. 'int' → logprob: -12.250004768371582
    3. ' Int' → logprob: -19.3750057220459
    4. 'In' → logprob: -20.0000057220459
    5. '_int' → logprob: -20.6250057220459
    6. '   ' → logprob: -20.7500057220459
    7. '[Int' → logprob: -20.7500057220459
    8. '	Int' → logprob: -21.1250057220459
    9. 'INT' → logprob: -22.1250057220459
    10. '(Int' → logprob: -22.2500057220459

Token 446: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004927515983581543
    2. '()' → logprob: -6.129927635192871
    3. '(i' → logprob: -6.379927635192871
    4. '(cp' → logprob: -7.879927635192871
    5. '(pow' → logprob: -7.879927635192871
    6. '(B' → logprob: -9.004927635192871
    7. 'pow' → logprob: -9.879927635192871
    8. '((' → logprob: -10.504927635192871
    9. '(-' → logprob: -10.879927635192871
    10. '('' → logprob: -11.504927635192871

Token 447: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8310165405273438
    2. '1' → logprob: -1.2060165405273438
    3. '2' → logprob: -1.9560165405273438
    4. 'cp' → logprob: -2.7060165405273438
    5. 'i' → logprob: -3.7060165405273438
    6. '(' → logprob: -4.081016540527344
    7. 'pow' → logprob: -5.081016540527344
    8. ')' → logprob: -5.956016540527344
    9. '(cp' → logprob: -6.456016540527344
    10. '(i' → logprob: -6.581016540527344

Token 448: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03215203806757927
    2. '   ' → logprob: -4.03215217590332
    3. ')
' → logprob: -4.28215217590332
    4. '       ' → logprob: -9.90715217590332
    5. ')return' → logprob: -11.03215217590332
    6. '<|end|>' → logprob: -11.03215217590332
    7. ' )' → logprob: -13.15715217590332
    8. '),' → logprob: -13.28215217590332
    9. ',' → logprob: -13.90715217590332
    10. ')

' → logprob: -14.15715217590332

Token 449: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06221168860793114
    2. '<|end|>' → logprob: -3.062211751937866
    3. ')' → logprob: -4.437211513519287
    4. '
' → logprob: -7.437211513519287
    5. '    
' → logprob: -8.062211990356445
    6. 'else' → logprob: -8.562211990356445
    7. '       ' → logprob: -8.687211990356445
    8. ' else' → logprob: -9.437211990356445
    9. 'elif' → logprob: -9.562211990356445
    10. '<|end|>' → logprob: -9.812211990356445

Token 450: ' elif' (ID: 9497)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.8361256122589111
    2. '   ' → logprob: -1.2111256122589111
    3. 'return' → logprob: -1.8361256122589111
    4. 'if' → logprob: -3.086125612258911
    5. '
' → logprob: -3.586125612258911
    6. 'elif' (adapté à ' elif') → logprob: -4.461125373840332
    7. ' else' → logprob: -5.336125373840332
    8. 'pow' → logprob: -5.336125373840332
    9. 'res' → logprob: -5.586125373840332
    10. 'power' → logprob: -6.336125373840332

Token 451: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6364846229553223
    2. 'i' → logprob: -0.7614846229553223
    3. '   ' → logprob: -6.261484622955322
    4. 'cp' → logprob: -7.136484622955322
    5. ' cp' → logprob: -7.636484622955322
    6. ' ' → logprob: -8.511484146118164
    7. 'B' → logprob: -9.261484146118164
    8. ' B' → logprob: -9.261484146118164
    9. ' (' → logprob: -9.636484146118164
    10. '(i' → logprob: -10.261484146118164

Token 452: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.648328423500061
    2. ' ==' → logprob: -0.773328423500061
    3. ' <' → logprob: -5.5233283042907715
    4. ' <=' → logprob: -5.7733283042907715
    5. '<' → logprob: -6.2733283042907715
    6. ' >' → logprob: -6.2733283042907715
    7. '<=' → logprob: -6.5233283042907715
    8. '>' → logprob: -6.6483283042907715
    9. ' >=' → logprob: -6.8983283042907715
    10. '>=' → logprob: -7.6483283042907715

Token 453: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.3491077125072479
    2. ' B' → logprob: -1.2241077423095703
    3. ' ' → logprob: -8.34910774230957
    4. '   ' → logprob: -8.47410774230957
    5. '0' → logprob: -9.09910774230957
    6. '(B' → logprob: -10.84910774230957
    7. 'i' → logprob: -11.09910774230957
    8. '  ' → logprob: -11.47410774230957
    9. ' (' → logprob: -11.84910774230957
    10. ' i' → logprob: -11.97410774230957

Token 454: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.16228710114955902
    2. ':' → logprob: -1.9122871160507202
    3. '       ' → logprob: -6.41228723526001
    4. '   ' → logprob: -8.412286758422852
    5. ':return' → logprob: -8.787286758422852
    6. '):
' → logprob: -11.162286758422852
    7. '-' → logprob: -11.662286758422852
    8. ':
' → logprob: -12.412286758422852
    9. ':

' → logprob: -12.662286758422852
    10. ' :
' → logprob: -13.037286758422852

Token 455: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18318435549736023
    2. ':
' → logprob: -1.9331843852996826
    3. ':' → logprob: -3.8081843852996826
    4. ':return' → logprob: -8.308184623718262
    5. '):
' → logprob: -9.433184623718262
    6. '   ' → logprob: -9.558184623718262
    7. 'return' → logprob: -9.683184623718262
    8. ' return' → logprob: -11.183184623718262
    9. ',' → logprob: -11.558184623718262
    10. '           ' → logprob: -11.933184623718262

Token 456: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.10069281607866287
    2. ' return' → logprob: -2.7256927490234375
    3. '       ' → logprob: -3.6006927490234375
    4. '   ' → logprob: -6.1006927490234375
    5. '
' → logprob: -7.8506927490234375
    6. 'cp' → logprob: -8.350692749023438
    7. '           ' → logprob: -9.975692749023438
    8. ' cp' → logprob: -10.475692749023438
    9. ' ' → logprob: -11.725692749023438
    10. 'make' → logprob: -12.225692749023438

Token 457: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.7224978804588318
    2. 'cp' → logprob: -0.8474978804588318
    3. 'make' → logprob: -2.7224979400634766
    4. ' Mod' → logprob: -4.722497940063477
    5. ' cp' → logprob: -4.847497940063477
    6. ' make' → logprob: -6.472497940063477
    7. 'mod' → logprob: -6.847497940063477
    8. '(cp' → logprob: -8.722497940063477
    9. '   ' → logprob: -8.847497940063477
    10. '(Mod' → logprob: -9.222497940063477

Token 458: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -2.935296834039036e-06
    2. 'int' → logprob: -12.75000286102295
    3. 'In' → logprob: -19.000003814697266
    4. ' Int' → logprob: -19.750003814697266
    5. 'INT' → logprob: -20.000003814697266
    6. '_int' → logprob: -20.125003814697266
    7. '(Int' → logprob: -21.500003814697266
    8. '[Int' → logprob: -21.500003814697266
    9. '_Int' → logprob: -21.500003814697266
    10. '   ' → logprob: -22.000003814697266

Token 459: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009843915700912476
    2. '(cp' → logprob: -4.634843826293945
    3. '(-' → logprob: -11.134843826293945
    4. '1' → logprob: -11.134843826293945
    5. '(make' → logprob: -11.384843826293945
    6. '(i' → logprob: -11.384843826293945
    7. '((' → logprob: -11.759843826293945
    8. '(B' → logprob: -12.134843826293945
    9. '(pow' → logprob: -12.259843826293945
    10. '(int' → logprob: -12.509843826293945

Token 460: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008032554760575294
    2. '2' → logprob: -5.258032321929932
    3. 'cp' → logprob: -7.008032321929932
    4. '(' → logprob: -7.133032321929932
    5. '0' → logprob: -7.633032321929932
    6. 'i' → logprob: -8.63303279876709
    7. '(cp' → logprob: -9.13303279876709
    8. '-' → logprob: -9.25803279876709
    9. '3' → logprob: -9.88303279876709
    10. '4' → logprob: -9.88303279876709

Token 461: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006364093627780676
    2. ')
' → logprob: -5.131363868713379
    3. '   ' → logprob: -7.881363868713379
    4. '<|end|>' → logprob: -9.881363868713379
    5. ')return' → logprob: -13.006363868713379
    6. '<|end|>' → logprob: -13.506363868713379
    7. '       ' → logprob: -14.381363868713379
    8. ')

' → logprob: -15.006363868713379
    9. ')\
' → logprob: -15.256363868713379
    10. ' ' → logprob: -15.631363868713379

Token 462: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00014287306112237275
    2. 'else' → logprob: -9.000143051147461
    3. '    
' → logprob: -12.125143051147461
    4. '<|end|>' → logprob: -12.250143051147461
    5. 'elif' → logprob: -12.625143051147461
    6. '
' → logprob: -13.125143051147461
    7. ' else' → logprob: -13.375143051147461
    8. '       ' → logprob: -14.375143051147461
    9. 'return' → logprob: -14.500143051147461
    10. 'def' → logprob: -14.875143051147461

Token 463: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1082424595952034
    2. 'else' (adapté à ' else') → logprob: -2.3582425117492676
    3. ' else' → logprob: -4.858242511749268
    4. 'elif' → logprob: -8.98324203491211
    5. 'return' → logprob: -10.48324203491211
    6. '    
' → logprob: -10.73324203491211
    7. ')' → logprob: -11.35824203491211
    8. '       ' → logprob: -11.73324203491211
    9. ' ' → logprob: -11.73324203491211
    10. '<|end|>' → logprob: -11.85824203491211

Token 464: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4489234983921051
    2. ':
' → logprob: -1.4489234685897827
    3. ':' → logprob: -2.0739235877990723
    4. ',' → logprob: -7.698923587799072
    5. ' :
' → logprob: -8.323923110961914
    6. '   ' → logprob: -8.573923110961914
    7. '           ' → logprob: -9.448923110961914
    8. ':return' → logprob: -10.448923110961914
    9. '):
' → logprob: -10.573923110961914
    10. 'return' → logprob: -10.823923110961914

Token 465: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021889634430408478
    2. 'return' → logprob: -4.021889686584473
    3. ' return' → logprob: -6.021889686584473
    4. '   ' → logprob: -6.646889686584473
    5. '
' → logprob: -12.521889686584473
    6. '           ' → logprob: -12.896889686584473
    7. ' ' → logprob: -14.271889686584473
    8. '     ' → logprob: -14.271889686584473
    9. '      ' → logprob: -14.521889686584473
    10. '        
' → logprob: -14.771889686584473

Token 466: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.007471397053450346
    2. ' return' → logprob: -5.757471561431885
    3. '       ' → logprob: -6.257471561431885
    4. 'cp' → logprob: -6.507471561431885
    5. '   ' → logprob: -7.382471561431885
    6. 'result' → logprob: -9.132471084594727
    7. 'if' → logprob: -10.632471084594727
    8. 'res' → logprob: -10.632471084594727
    9. ' cp' → logprob: -10.632471084594727
    10. 'ret' → logprob: -11.257471084594727

Token 467: ' cp' (ID: 27776)
  Prédit: 'cp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cp' → logprob: -0.03291269764304161
    2. ' cp' → logprob: -3.9079127311706543
    3. 'Mod' → logprob: -4.657912731170654
    4. '   ' → logprob: -7.157912731170654
    5. '(cp' → logprob: -7.157912731170654
    6. 'process' → logprob: -7.407912731170654
    7. ' Mod' → logprob: -8.157912254333496
    8. '(Mod' → logprob: -9.657912254333496
    9. 'mod' → logprob: -10.282912254333496
    10. '(' → logprob: -10.282912254333496

Token 468: ' *' (ID: 425)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0020810244604945183
    2. '[' → logprob: -7.002080917358398
    3. '(i' → logprob: -7.252080917358398
    4. 'i' → logprob: -8.752080917358398
    5. '[B' → logprob: -9.252080917358398
    6. '[-' → logprob: -9.877080917358398
    7. '*' → logprob: -10.502080917358398
    8. '[(' → logprob: -10.502080917358398
    9. ' [' → logprob: -11.502080917358398
    10. '[:]' → logprob: -11.627080917358398

Token 469: ' (' (ID: 350)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.036973871290683746
    2. ' get' → logprob: -3.6619739532470703
    3. 'Mod' → logprob: -5.03697395324707
    4. 'make' → logprob: -6.28697395324707
    5. '2' → logprob: -6.53697395324707
    6. '(get' → logprob: -8.41197395324707
    7. ' Mod' → logprob: -8.91197395324707
    8. 'i' → logprob: -9.28697395324707
    9. ' make' → logprob: -9.53697395324707
    10. 'cp' → logprob: -10.03697395324707

Token 470: 'i' (ID: 72)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.10666990280151367
    2. 'Mod' → logprob: -2.4816699028015137
    3. '2' → logprob: -4.231669902801514
    4. 'i' → logprob: -6.981669902801514
    5. ' get' → logprob: -7.356669902801514
    6. 'make' → logprob: -7.481669902801514
    7. '(get' → logprob: -7.981669902801514
    8. '(Mod' → logprob: -8.231670379638672
    9. '(' → logprob: -9.981670379638672
    10. '(i' → logprob: -9.981670379638672

Token 471: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.22571970522403717
    2. ' -' → logprob: -1.600719690322876
    3. '-i' → logprob: -9.100719451904297
    4. ')' → logprob: -9.850719451904297
    5. '   ' → logprob: -10.100719451904297
    6. ' ' → logprob: -10.475719451904297
    7. '  ' → logprob: -10.725719451904297
    8. ' /' → logprob: -10.850719451904297
    9. '*' → logprob: -11.975719451904297
    10. '    ' → logprob: -11.975719451904297

Token 472: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.34852713346481323
    2. 'B' → logprob: -1.723527193069458
    3. 'Mod' → logprob: -2.223527193069458
    4. 'get' → logprob: -5.098526954650879
    5. ' Mod' → logprob: -8.223526954650879
    6. ' B' → logprob: -8.223526954650879
    7. 'i' → logprob: -8.348526954650879
    8. ' ' → logprob: -8.348526954650879
    9. '2' → logprob: -8.598526954650879
    10. '(Mod' → logprob: -9.348526954650879

Token 473: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.061862800270318985
    2. 'B' → logprob: -3.4368627071380615
    3. 'Mod' → logprob: -3.6868627071380615
    4. 'get' → logprob: -5.936862945556641
    5. '2' → logprob: -9.68686294555664
    6. ' ' → logprob: -11.43686294555664
    7. '   ' → logprob: -11.56186294555664
    8. '(Mod' → logprob: -11.56186294555664
    9. 'i' → logprob: -11.68686294555664
    10. ' Mod' → logprob: -12.06186294555664

Token 474: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001757883233949542
    2. ')/' → logprob: -7.626758098602295
    3. ' /' → logprob: -7.751758098602295
    4. ')/(' → logprob: -8.251757621765137
    5. ' //' → logprob: -9.626757621765137
    6. '-' → logprob: -9.626757621765137
    7. '+' → logprob: -9.751757621765137
    8. ' +' → logprob: -9.876757621765137
    9. ' )' → logprob: -9.876757621765137
    10. ')//' → logprob: -10.001757621765137

Token 475: ' /' (ID: 820)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 476: ' (' (ID: 350)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.031237265095114708
    2. '(i' → logprob: -4.0312371253967285
    3. '(Mod' → logprob: -4.7812371253967285
    4. 'i' → logprob: -5.7812371253967285
    5. 'get' → logprob: -7.6562371253967285
    6. ' (' → logprob: -7.9062371253967285
    7. ' Mod' → logprob: -8.031237602233887
    8. '(M' → logprob: -9.281237602233887
    9. '(' → logprob: -9.406237602233887
    10. '   ' → logprob: -10.406237602233887

Token 477: 'i' (ID: 72)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.5182353854179382
    2. 'i' → logprob: -1.268235445022583
    3. '(i' → logprob: -2.143235445022583
    4. '(Mod' → logprob: -5.393235206604004
    5. ' Mod' → logprob: -7.518235206604004
    6. ' (' → logprob: -8.518235206604004
    7. ' i' → logprob: -8.643235206604004
    8. '   ' → logprob: -9.143235206604004
    9. 'get' → logprob: -10.143235206604004
    10. '[i' → logprob: -10.268235206604004

Token 478: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5930474400520325
    2. ' -' → logprob: -1.0930473804473877
    3. '-' → logprob: -2.2180473804473877
    4. ' )' → logprob: -6.468047618865967
    5. '   ' → logprob: -7.093047618865967
    6. ' ' → logprob: -8.093047142028809
    7. '-)' → logprob: -8.843047142028809
    8. '+' → logprob: -9.343047142028809
    9. ' +' → logprob: -9.593047142028809
    10. '    ' → logprob: -10.218047142028809

Token 479: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.006717974785715342
    2. '2' → logprob: -5.131718158721924
    3. ' B' → logprob: -7.256718158721924
    4. '1' → logprob: -9.881717681884766
    5. '   ' → logprob: -11.131717681884766
    6. ' ' → logprob: -11.506717681884766
    7. '(B' → logprob: -12.131717681884766
    8. '	B' → logprob: -13.756717681884766
    9. '(' → logprob: -14.256717681884766
    10. '  ' → logprob: -15.381717681884766

Token 480: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0029361024498939514
    2. '+' → logprob: -5.877935886383057
    3. ' +' → logprob: -9.752936363220215
    4. ' )' → logprob: -10.127936363220215
    5. ')
' → logprob: -11.252936363220215
    6. '<|end|>' → logprob: -11.877936363220215
    7. '   ' → logprob: -12.627936363220215
    8. '}' → logprob: -12.752936363220215
    9. '+)' → logprob: -14.002936363220215
    10. ')}' → logprob: -14.002936363220215

Token 481: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 482: ' update' (ID: 4027)
  Prédit: ' process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.43097835779190063
    2. ' main' → logprob: -1.3059782981872559
    3. ' solve' → logprob: -3.805978298187256
    4. ' factorial' → logprob: -4.555978298187256
    5. ' compute' → logprob: -4.680978298187256
    6. ' calculate' → logprob: -4.930978298187256
    7. 'process' → logprob: -5.055978298187256
    8. ' pow' → logprob: -5.430978298187256
    9. ' combine' → logprob: -5.805978298187256
    10. ' get' → logprob: -5.930978298187256

Token 483: '_p' (ID: 1359)
  Prédit: '(cp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(cp' → logprob: -0.8925119042396545
    2. '_cp' → logprob: -1.0175118446350098
    3. '(i' → logprob: -1.7675118446350098
    4. '(B' → logprob: -3.7675118446350098
    5. '(c' → logprob: -5.26751184463501
    6. '_(' → logprob: -5.64251184463501
    7. '(C' → logprob: -5.76751184463501
    8. '_values' → logprob: -6.26751184463501
    9. '(' → logprob: -6.64251184463501
    10. '_CP' → logprob: -6.89251184463501

Token 484: '(i' (ID: 3649)
  Prédit: '_p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -1.951655387878418
    2. 'p' → logprob: -2.201655387878418
    3. '(cp' → logprob: -2.201655387878418
    4. 'ro' → logprob: -2.326655387878418
    5. '(' → logprob: -2.326655387878418
    6. 'r' → logprob: -2.451655387878418
    7. '(i' → logprob: -2.826655387878418
    8. '_cp' → logprob: -2.826655387878418
    9. 'rocess' → logprob: -2.826655387878418
    10. 'rob' → logprob: -3.326655387878418

Token 485: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009389739134348929
    2. ',p' → logprob: -7.500938892364502
    3. ' ,' → logprob: -9.12593936920166
    4. '+' → logprob: -9.75093936920166
    5. ',
' → logprob: -10.00093936920166
    6. 'p' → logprob: -10.25093936920166
    7. '   ' → logprob: -10.37593936920166
    8. '):' → logprob: -10.87593936920166
    9. '_,' → logprob: -11.37593936920166
    10. ',i' → logprob: -11.62593936920166

Token 486: ' B' (ID: 418)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.7417906522750854
    2. ' p' → logprob: -1.4917906522750854
    3. 'B' → logprob: -2.116790771484375
    4. ' B' → logprob: -2.491790771484375
    5. 'cp' → logprob: -3.116790771484375
    6. ' cp' → logprob: -3.241790771484375
    7. 'P' → logprob: -6.616790771484375
    8. '   ' → logprob: -6.804290771484375
    9. 'prev' → logprob: -7.054290771484375
    10. 'i' → logprob: -7.304290771484375

Token 487: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.664371848164592e-05
    2. ',p' → logprob: -11.625016212463379
    3. ',
' → logprob: -12.250016212463379
    4. '   ' → logprob: -14.000016212463379
    5. ' ,' → logprob: -14.000016212463379
    6. 'p' → logprob: -14.125016212463379
    7. '):' → logprob: -15.750016212463379
    8. '):
' → logprob: -15.875016212463379
    9. '_,' → logprob: -16.125017166137695
    10. 'def' → logprob: -17.750017166137695

Token 488: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.06913278251886368
    2. 'cp' → logprob: -3.3191328048706055
    3. ' p' → logprob: -3.6941328048706055
    4. ' cp' → logprob: -6.1941328048706055
    5. 'P' → logprob: -6.8191328048706055
    6. '   ' → logprob: -8.069132804870605
    7. 'prev' → logprob: -8.194132804870605
    8. 'i' → logprob: -8.319132804870605
    9. 'old' → logprob: -8.569132804870605
    10. 'j' → logprob: -8.819132804870605

Token 489: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021796036162413657
    2. ',p' → logprob: -9.500218391418457
    3. '):' → logprob: -10.250218391418457
    4. 'p' → logprob: -10.500218391418457
    5. '):
' → logprob: -10.750218391418457
    6. ' ,' → logprob: -11.000218391418457
    7. '_,' → logprob: -11.250218391418457
    8. ',
' → logprob: -11.875218391418457
    9. '   ' → logprob: -12.000218391418457
    10. '(p' → logprob: -12.750218391418457

Token 490: ' cp' (ID: 27776)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.45630547404289246
    2. 'cp' → logprob: -1.4563055038452148
    3. ' cp' → logprob: -2.831305503845215
    4. ' Mod' → logprob: -2.956305503845215
    5. 'p' → logprob: -4.706305503845215
    6. '   ' → logprob: -6.081305503845215
    7. ' p' → logprob: -6.331305503845215
    8. 'i' → logprob: -6.706305503845215
    9. 'b' → logprob: -7.081305503845215
    10. 'B' → logprob: -7.268805503845215

Token 491: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.3458322731312364e-06
    2. ' ,' → logprob: -12.625007629394531
    3. '):
' → logprob: -13.750007629394531
    4. ',
' → logprob: -13.875007629394531
    5. 'p' → logprob: -14.375007629394531
    6. ',p' → logprob: -14.750007629394531
    7. '):' → logprob: -15.125007629394531
    8. '   ' → logprob: -15.500007629394531
    9. 'def' → logprob: -16.00000762939453
    10. ',i' → logprob: -16.12500762939453

Token 492: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.057014547288417816
    2. ' Mod' → logprob: -2.9320144653320312
    3. 'p' → logprob: -6.807014465332031
    4. ' p' → logprob: -8.557014465332031
    5. '   ' → logprob: -8.682014465332031
    6. 'B' → logprob: -9.182014465332031
    7. 'i' → logprob: -9.432014465332031
    8. ' ' → logprob: -9.557014465332031
    9. 'cp' → logprob: -10.057014465332031
    10. '(Mod' → logprob: -10.182014465332031

Token 493: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -2.45848218582978e-06
    2. 'int' → logprob: -13.12500286102295
    3. ' Int' → logprob: -16.000001907348633
    4. 'p' → logprob: -16.000001907348633
    5. '_int' → logprob: -16.750001907348633
    6. 'In' → logprob: -17.875001907348633
    7. '(Int' → logprob: -18.375001907348633
    8. '_Int' → logprob: -18.500001907348633
    9. ')' → logprob: -19.125001907348633
    10. '[Int' → logprob: -19.625001907348633

Token 494: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.044520627707242966
    2. '):' → logprob: -3.169520616531372
    3. '):
' → logprob: -6.544520854949951
    4. '   ' → logprob: -9.669520378112793
    5. ',i' → logprob: -12.294520378112793
    6. ',p' → logprob: -12.419520378112793
    7. ')' → logprob: -12.794520378112793
    8. ',
' → logprob: -12.919520378112793
    9. ' ,' → logprob: -13.919520378112793
    10. ':' → logprob: -14.044520378112793

Token 495: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002581209992058575
    2. 'if' → logprob: -8.750258445739746
    3. 'return' → logprob: -9.625258445739746
    4. 'p' → logprob: -11.250258445739746
    5. ' if' → logprob: -11.500258445739746
    6. ' return' → logprob: -12.375258445739746
    7. ' p' → logprob: -13.375258445739746
    8. '       ' → logprob: -13.625258445739746
    9. 'def' → logprob: -13.625258445739746
    10. '```' → logprob: -13.625258445739746

Token 496: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.21346670389175415
    2. '   ' → logprob: -1.9634666442871094
    3. 'p' → logprob: -3.3384666442871094
    4. 'if' (adapté à ' if') → logprob: -4.713466644287109
    5. ' return' → logprob: -5.588466644287109
    6. 'numer' → logprob: -6.713466644287109
    7. 'temp' → logprob: -7.588466644287109
    8. ' numerator' → logprob: -7.963466644287109
    9. 'tmp' → logprob: -8.21346664428711
    10. 'i' → logprob: -8.46346664428711

Token 497: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1803056001663208
    2. ' i' → logprob: -1.8053056001663208
    3. '   ' → logprob: -7.930305480957031
    4. 'p' → logprob: -9.555305480957031
    5. '(i' → logprob: -10.055305480957031
    6. ' p' → logprob: -11.055305480957031
    7. ' ' → logprob: -11.305305480957031
    8. ' isinstance' → logprob: -11.555305480957031
    9. ' (' → logprob: -11.805305480957031
    10. 'B' → logprob: -11.805305480957031

Token 498: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.4084711968898773
    2. '<=' → logprob: -1.6584712266921997
    3. ' <' → logprob: -2.90847110748291
    4. ' >' → logprob: -2.90847110748291
    5. '>' → logprob: -3.90847110748291
    6. '<' → logprob: -4.53347110748291
    7. '==' → logprob: -6.28347110748291
    8. ' ==' → logprob: -6.40847110748291
    9. ' >=' → logprob: -7.15847110748291
    10. '>=' → logprob: -7.78347110748291

Token 499: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.12546797096729279
    2. ' B' → logprob: -2.2504680156707764
    3. 'i' → logprob: -4.625467777252197
    4. ' i' → logprob: -6.500467777252197
    5. '1' → logprob: -7.875467777252197
    6. '0' → logprob: -8.500468254089355
    7. '   ' → logprob: -8.625468254089355
    8. '(B' → logprob: -8.875468254089355
    9. ' (' → logprob: -9.000468254089355
    10. ' ' → logprob: -9.500468254089355

Token 500: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5947059988975525
    2. ':
' → logprob: -0.8447059988975525
    3. '       ' → logprob: -4.344706058502197
    4. '+' → logprob: -6.219706058502197
    5. '   ' → logprob: -6.344706058502197
    6. '):
' → logprob: -6.594706058502197
    7. '):' → logprob: -8.719705581665039
    8. ' +' → logprob: -9.594705581665039
    9. ':return' → logprob: -9.719705581665039
    10. ',' → logprob: -10.094705581665039

Token 501: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2531484365463257
    2. '   ' → logprob: -1.6281484365463257
    3. ':
' → logprob: -3.8781485557556152
    4. ':' → logprob: -5.378148555755615
    5. '+' → logprob: -7.253148555755615
    6. ':return' → logprob: -7.628148555755615
    7. 'return' → logprob: -8.003148078918457
    8. ' return' → logprob: -9.003148078918457
    9. '):
' → logprob: -9.628148078918457
    10. ' or' → logprob: -9.878148078918457

Token 502: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5844501256942749
    2. '   ' → logprob: -0.9594501256942749
    3. ' return' → logprob: -3.3344502449035645
    4. '0' → logprob: -3.9594502449035645
    5. 'Mod' → logprob: -5.7094502449035645
    6. ' ' → logprob: -7.7094502449035645
    7. 'p' → logprob: -7.8344502449035645
    8. ' Mod' → logprob: -8.834449768066406
    9. '	return' → logprob: -9.084449768066406
    10. '  ' → logprob: -9.209449768066406

Token 503: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.17241863906383514
    2. 'p' → logprob: -2.2974185943603516
    3. 'make' → logprob: -2.9224185943603516
    4. ' Mod' → logprob: -6.297418594360352
    5. ' make' → logprob: -7.172418594360352
    6. '0' → logprob: -7.672418594360352
    7. ' p' → logprob: -7.922418594360352
    8. 'mod' → logprob: -8.172418594360352
    9. 'Make' → logprob: -9.422418594360352
    10. '(Mod' → logprob: -9.547418594360352

Token 504: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -4.167648876318708e-05
    2. 'int' → logprob: -10.125041961669922
    3. 'In' → logprob: -14.625041961669922
    4. 'p' → logprob: -15.125041961669922
    5. 'nt' → logprob: -15.750041961669922
    6. '(p' → logprob: -16.125041961669922
    7. '
' → logprob: -16.375041961669922
    8. 'i' → logprob: -16.625041961669922
    9. '   ' → logprob: -17.000041961669922
    10. '_Int' → logprob: -17.000041961669922

Token 505: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0486181378364563
    2. '0' → logprob: -3.0486180782318115
    3. 'p' → logprob: -11.42361831665039
    4. '(i' → logprob: -11.92361831665039
    5. ' (' → logprob: -12.17361831665039
    6. ' ' → logprob: -12.92361831665039
    7. '1' → logprob: -13.79861831665039
    8. '(p' → logprob: -13.79861831665039
    9. '
' → logprob: -14.17361831665039
    10. 'i' → logprob: -14.17361831665039

Token 506: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005444537382572889
    2. '1' → logprob: -8.250544548034668
    3. 'p' → logprob: -8.625544548034668
    4. ' ' → logprob: -10.375544548034668
    5. '(' → logprob: -10.625544548034668
    6. 'i' → logprob: -10.625544548034668
    7. ')' → logprob: -12.000544548034668
    8. ''' → logprob: -12.250544548034668
    9. '"' → logprob: -12.750544548034668
    10. 'B' → logprob: -13.313044548034668

Token 507: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38905709981918335
    2. ')
' → logprob: -1.1390571594238281
    3. '   ' → logprob: -6.139057159423828
    4. '       ' → logprob: -11.389057159423828
    5. ')

' → logprob: -12.139057159423828
    6. ')
' → logprob: -12.264057159423828
    7. '),' → logprob: -13.639057159423828
    8. ')return' → logprob: -13.639057159423828
    9. ' )
' → logprob: -14.514057159423828
    10. ' ' → logprob: -14.889057159423828

Token 508: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013830940006300807
    2. 'elif' → logprob: -6.876383304595947
    3. '<|end|>' → logprob: -8.376382827758789
    4. ')' → logprob: -10.251382827758789
    5. '    
' → logprob: -10.626382827758789
    6. ' elif' → logprob: -10.626382827758789
    7. '       ' → logprob: -11.626382827758789
    8. '	elif' → logprob: -11.626382827758789
    9. ',' → logprob: -12.126382827758789
    10. '<|end|>' → logprob: -12.626382827758789

Token 509: ' elif' (ID: 9497)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2533922493457794
    2. 'elif' (adapté à ' elif') → logprob: -1.503392219543457
    3. 'else' → logprob: -6.753392219543457
    4. ' elif' → logprob: -8.753392219543457
    5. 'if' → logprob: -9.378392219543457
    6. 'return' → logprob: -10.378392219543457
    7. '    
' → logprob: -12.128392219543457
    8. '       ' → logprob: -12.628392219543457
    9. '
' → logprob: -12.878392219543457
    10. '	elif' → logprob: -13.128392219543457

Token 510: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.011421970091760159
    2. ' i' → logprob: -4.511422157287598
    3. '   ' → logprob: -8.011422157287598
    4. '       ' → logprob: -11.136422157287598
    5. ' ' → logprob: -12.011422157287598
    6. 'elif' → logprob: -12.636422157287598
    7. 'p' → logprob: -12.761422157287598
    8. '           ' → logprob: -12.886422157287598
    9. 'B' → logprob: -13.011422157287598
    10. '0' → logprob: -13.511422157287598

Token 511: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6326943635940552
    2. ' ==' → logprob: -0.7576943635940552
    3. '==
' → logprob: -10.382694244384766
    4. ' <=' → logprob: -10.882694244384766
    5. '=' → logprob: -11.257694244384766
    6. '<=' → logprob: -11.632694244384766
    7. ' >' → logprob: -12.257694244384766
    8. '   ' → logprob: -12.757694244384766
    9. ' ==
' → logprob: -13.007694244384766
    10. ' <' → logprob: -13.007694244384766

Token 512: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.05491749197244644
    2. ' B' → logprob: -2.929917573928833
    3. 'i' → logprob: -10.804917335510254
    4. '   ' → logprob: -11.679917335510254
    5. ' ' → logprob: -12.804917335510254
    6. ' i' → logprob: -13.929917335510254
    7. '	B' → logprob: -14.054917335510254
    8. 'b' → logprob: -14.304917335510254
    9. '       ' → logprob: -15.429917335510254
    10. '(B' → logprob: -15.554917335510254

Token 513: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.03410757705569267
    2. ':' → logprob: -3.4091076850891113
    3. '       ' → logprob: -7.784107685089111
    4. '   ' → logprob: -11.284107208251953
    5. ':return' → logprob: -11.284107208251953
    6. '+' → logprob: -11.534107208251953
    7. ':
' → logprob: -12.534107208251953
    8. ':

' → logprob: -13.034107208251953
    9. '):
' → logprob: -13.159107208251953
    10. '           ' → logprob: -14.159107208251953

Token 514: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04183388873934746
    2. ':
' → logprob: -3.4168338775634766
    3. ':' → logprob: -4.916833877563477
    4. '   ' → logprob: -7.166833877563477
    5. ':return' → logprob: -10.541833877563477
    6. '):
' → logprob: -11.666833877563477
    7. '           ' → logprob: -11.666833877563477
    8. 'return' → logprob: -12.041833877563477
    9. ',' → logprob: -13.291833877563477
    10. '      ' → logprob: -13.416833877563477

Token 515: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.16878412663936615
    2. '   ' → logprob: -2.0437841415405273
    3. 'Mod' → logprob: -3.9187841415405273
    4. ' return' → logprob: -5.293784141540527
    5. '       ' → logprob: -7.918784141540527
    6. 'p' → logprob: -8.168784141540527
    7. 'make' → logprob: -10.168784141540527
    8. ' Mod' → logprob: -10.293784141540527
    9. '	return' → logprob: -10.668784141540527
    10. ' ' → logprob: -10.918784141540527

Token 516: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.3165537118911743
    2. ' Mod' → logprob: -1.3165537118911743
    3. '(Mod' → logprob: -6.191553592681885
    4. '   ' → logprob: -7.566553592681885
    5. 'p' → logprob: -8.066554069519043
    6. ' ' → logprob: -9.066554069519043
    7. ' p' → logprob: -9.629054069519043
    8. '1' → logprob: -9.879054069519043
    9. '  ' → logprob: -10.566554069519043
    10. 'cp' → logprob: -10.941554069519043

Token 517: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -4.842555426876061e-06
    2. 'int' → logprob: -12.375004768371582
    3. '(Int' → logprob: -15.750004768371582
    4. 'In' → logprob: -16.3750057220459
    5. 'INT' → logprob: -17.0000057220459
    6. 'Mod' → logprob: -17.1250057220459
    7. '	Int' → logprob: -18.2500057220459
    8. 'Ints' → logprob: -18.3750057220459
    9. '(int' → logprob: -18.6250057220459
    10. '[Int' → logprob: -18.6250057220459

Token 518: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002476604888215661
    2. '1' → logprob: -6.002476692199707
    3. '(
' → logprob: -14.377476692199707
    4. ' (' → logprob: -16.25247573852539
    5. '('' → logprob: -16.50247573852539
    6. '[' → logprob: -17.75247573852539
    7. '   ' → logprob: -18.00247573852539
    8. '(M' → logprob: -18.00247573852539
    9. '```' → logprob: -18.25247573852539
    10. '(-' → logprob: -18.50247573852539

Token 519: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2471589798224159e-05
    2. ' ' → logprob: -11.500012397766113
    3. '(' → logprob: -13.500012397766113
    4. '0' → logprob: -15.250012397766113
    5. '   ' → logprob: -15.625012397766113
    6. 'B' → logprob: -15.625012397766113
    7. 'p' → logprob: -15.750012397766113
    8. 'i' → logprob: -16.31251335144043
    9. ')' → logprob: -17.43751335144043
    10. ' (' → logprob: -18.06251335144043

Token 520: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5785579085350037
    2. ')
' → logprob: -0.8285579085350037
    3. '   ' → logprob: -5.953557968139648
    4. ')
' → logprob: -12.078557968139648
    5. '):
' → logprob: -12.203557968139648
    6. '       ' → logprob: -12.453557968139648
    7. ')

' → logprob: -13.453557968139648
    8. ')\
' → logprob: -14.703557968139648
    9. ')return' → logprob: -15.078557968139648
    10. '),' → logprob: -15.578557968139648

Token 521: ' /' (ID: 820)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0419965535402298
    2. '<|end|>' → logprob: -3.291996479034424
    3. '    
' → logprob: -6.916996479034424
    4. '
' → logprob: -6.916996479034424
    5. ')' → logprob: -7.166996479034424
    6. '       ' → logprob: -8.166996955871582
    7. '<|end|>' → logprob: -8.541996955871582
    8. ' else' → logprob: -8.666996955871582
    9. ',' → logprob: -8.791996955871582
    10. 'else' → logprob: -9.291996955871582

Token 522: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.06368118524551392
    2. 'Mod' → logprob: -3.438681125640869
    3. '(get' → logprob: -4.313681125640869
    4. ' get' → logprob: -4.938681125640869
    5. 'B' → logprob: -5.813681125640869
    6. '(Mod' → logprob: -5.938681125640869
    7. '2' → logprob: -6.188681125640869
    8. '(' → logprob: -8.313681602478027
    9. 'make' → logprob: -8.438681602478027
    10. 'cp' → logprob: -8.563681602478027

Token 523: '_power' (ID: 51623)
  Prédit: '_power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_power' → logprob: -0.10320228338241577
    2. '_half' → logprob: -2.3532023429870605
    3. 'power' → logprob: -6.2282023429870605
    4. 'half' → logprob: -7.6032023429870605
    5. '_two' → logprob: -7.7282023429870605
    6. '_pow' → logprob: -10.478201866149902
    7. '```' → logprob: -11.603201866149902
    8. 'Power' → logprob: -11.978201866149902
    9. '_mod' → logprob: -12.103201866149902
    10. '_factor' → logprob: -12.228201866149902

Token 524: '_two' (ID: 54305)
  Prédit: '_two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_two' → logprob: -0.00020580526324920356
    2. 'two' → logprob: -8.500205993652344
    3. '(two' → logprob: -13.625205993652344
    4. 'Two' → logprob: -14.125205993652344
    5. ' two' → logprob: -15.250205993652344
    6. '_TWO' → logprob: -16.500205993652344
    7. '_tw' → logprob: -17.250205993652344
    8. '.two' → logprob: -17.875205993652344
    9. '2' → logprob: -19.125205993652344
    10. '_t' → logprob: -19.250205993652344

Token 525: '(Mod' (ID: 147705)
  Prédit: '(Mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Mod' → logprob: -1.6240566083070007e-06
    2. 'Mod' → logprob: -13.375001907348633
    3. ' Mod' → logprob: -18.375001907348633
    4. '(' → logprob: -18.375001907348633
    5. '(Module' → logprob: -18.625001907348633
    6. ' (' → logprob: -18.875001907348633
    7. '_Mod' → logprob: -20.250001907348633
    8. '```' → logprob: -20.250001907348633
    9. ' ' → logprob: -21.000001907348633
    10. '(
' → logprob: -21.375001907348633

Token 526: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -0.0009452917147427797
    2. 'int' → logprob: -7.125945091247559
    3. '(Mod' → logprob: -9.250945091247559
    4. 'nt' → logprob: -10.625945091247559
    5. 't' → logprob: -11.500945091247559
    6. '(Int' → logprob: -12.875945091247559
    7. '(M' → logprob: -13.750945091247559
    8. 'Mod' → logprob: -13.750945091247559
    9. '<Int' → logprob: -14.375945091247559
    10. '   ' → logprob: -14.625945091247559

Token 527: ',' (ID: 11)
  Prédit: '(Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Mod' → logprob: -0.0029567815363407135
    2. ',' → logprob: -6.502956867218018
    3. ')' → logprob: -7.127956867218018
    4. ')(' → logprob: -7.502956867218018
    5. '(' → logprob: -10.25295639038086
    6. '),' → logprob: -10.50295639038086
    7. ' (' → logprob: -11.62795639038086
    8. 'Mod' → logprob: -12.25295639038086
    9. ',(' → logprob: -12.50295639038086
    10. ' ' → logprob: -12.50295639038086

Token 528: ' i' (ID: 575)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.01513771153986454
    2. 'i' → logprob: -4.515137672424316
    3. ' B' → logprob: -5.640137672424316
    4. '(B' → logprob: -8.265137672424316
    5. ' i' → logprob: -9.015137672424316
    6. '   ' → logprob: -9.765137672424316
    7. '(i' → logprob: -9.890137672424316
    8. '(' → logprob: -10.890137672424316
    9. ' ' → logprob: -11.390137672424316
    10. '  ' → logprob: -12.640137672424316

Token 529: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5396715998649597
    2. '(B' → logprob: -1.1646716594696045
    3. '(i' → logprob: -2.7896716594696045
    4. 'B' → logprob: -3.1646716594696045
    5. '(' → logprob: -7.789671421051025
    6. ')
' → logprob: -8.164671897888184
    7. '   ' → logprob: -8.164671897888184
    8. 'i' → logprob: -9.539671897888184
    9. '-B' → logprob: -10.039671897888184
    10. '(
' → logprob: -10.039671897888184

Token 530: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00044663884909823537
    2. 'else' → logprob: -7.750446796417236
    3. ' else' → logprob: -11.625446319580078
    4. '    
' → logprob: -12.500446319580078
    5. 'elif' → logprob: -13.500446319580078
    6. '       ' → logprob: -14.250446319580078
    7. '<|end|>' → logprob: -15.000446319580078
    8. 'return' → logprob: -15.625446319580078
    9. '	else' → logprob: -15.750446319580078
    10. ')' → logprob: -15.875446319580078

Token 531: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.051460523158311844
    2. '   ' → logprob: -3.0514605045318604
    3. ' else' → logprob: -6.1764607429504395
    4. 'elif' → logprob: -7.1764607429504395
    5. 'return' → logprob: -11.426460266113281
    6. '
' → logprob: -11.676460266113281
    7. '    
' → logprob: -13.051460266113281
    8. '	else' → logprob: -13.551460266113281
    9. '       ' → logprob: -13.926460266113281
    10. ' ' → logprob: -14.176460266113281

Token 532: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1488078385591507
    2. '       ' → logprob: -2.1488077640533447
    3. ':' → logprob: -3.8988077640533447
    4. '   ' → logprob: -6.648808002471924
    5. '           ' → logprob: -10.773807525634766
    6. ':return' → logprob: -10.898807525634766
    7. '):
' → logprob: -11.398807525634766
    8. ' return' → logprob: -12.148807525634766
    9. ' :
' → logprob: -12.148807525634766
    10. '(' → logprob: -13.023807525634766

Token 533: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06221830099821091
    2. '       ' → logprob: -2.812218189239502
    3. 'return' → logprob: -8.43721866607666
    4. ' return' → logprob: -10.31221866607666
    5. '           ' → logprob: -15.06221866607666
    6. '```' → logprob: -15.68721866607666
    7. 'p' → logprob: -15.93721866607666
    8. ' ' → logprob: -16.562217712402344
    9. '    ' → logprob: -17.187217712402344
    10. '	return' → logprob: -17.312217712402344

Token 534: ' return' (ID: 622)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5364837646484375
    2. 'return' (adapté à ' return') → logprob: -0.9114837646484375
    3. '   ' → logprob: -5.2864837646484375
    4. 'cp' → logprob: -5.6614837646484375
    5. ' return' → logprob: -6.0364837646484375
    6. '(p' → logprob: -7.4114837646484375
    7. ' p' → logprob: -7.4114837646484375
    8. '(cp' → logprob: -8.286483764648438
    9. 'Mod' → logprob: -8.661483764648438
    10. '(' → logprob: -9.161483764648438

Token 535: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.16448180377483368
    2. 'cp' → logprob: -2.6644818782806396
    3. ' p' → logprob: -3.2894818782806396
    4. '(p' → logprob: -3.9144818782806396
    5. '(cp' → logprob: -4.0394816398620605
    6. ' cp' → logprob: -6.1644816398620605
    7. ' (' → logprob: -6.4144816398620605
    8. 'Mod' → logprob: -7.1644816398620605
    9. '   ' → logprob: -7.1644816398620605
    10. '(' → logprob: -7.4144816398620605

Token 536: ' +' (ID: 659)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3279462158679962
    2. ' *' → logprob: -1.3279461860656738
    3. '-' → logprob: -4.702946186065674
    4. ' -' → logprob: -5.952946186065674
    5. '(i' → logprob: -6.702946186065674
    6. '*(' → logprob: -7.202946186065674
    7. '+' → logprob: -7.952946186065674
    8. ' +' → logprob: -9.077946662902832
    9. '(' → logprob: -9.077946662902832
    10. 'p' → logprob: -9.702946662902832

Token 537: ' cp' (ID: 27776)
  Prédit: 'cp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cp' → logprob: -0.2919522225856781
    2. ' cp' → logprob: -1.6669522523880005
    3. '(cp' → logprob: -2.791952133178711
    4. ' (' → logprob: -6.291952133178711
    5. '(' → logprob: -7.666952133178711
    6. '   ' → logprob: -7.916952133178711
    7. '(c' → logprob: -9.666952133178711
    8. '(p' → logprob: -9.916952133178711
    9. '((' → logprob: -10.041952133178711
    10. 'process' → logprob: -10.291952133178711

Token 538: ' /' (ID: 820)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 539: ' get' (ID: 717)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.18134914338588715
    2. '(Mod' → logprob: -1.9313491582870483
    3. '(get' → logprob: -4.181349277496338
    4. 'get' → logprob: -6.056349277496338
    5. ' (' → logprob: -6.681349277496338
    6. '((' → logprob: -7.306349277496338
    7. 'Mod' → logprob: -7.306349277496338
    8. '(M' → logprob: -8.55634880065918
    9. '(' → logprob: -8.68134880065918
    10. '   ' → logprob: -9.43134880065918

Token 540: '_power' (ID: 51623)
  Prédit: '_power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_power' → logprob: -0.004094427917152643
    2. 'power' → logprob: -5.50409460067749
    3. 'Power' → logprob: -11.379094123840332
    4. '(power' → logprob: -12.629094123840332
    5. 'ower' → logprob: -15.129094123840332
    6. 'pow' → logprob: -15.754094123840332
    7. 'get' → logprob: -15.754094123840332
    8. '```' → logprob: -16.00409507751465
    9. ' power' → logprob: -16.25409507751465
    10. 'p' → logprob: -16.50409507751465

Token 541: '_two' (ID: 54305)
  Prédit: '_two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_two' → logprob: -0.014242718927562237
    2. 'two' → logprob: -4.264242649078369
    3. 'Two' → logprob: -9.889243125915527
    4. '(two' → logprob: -10.639243125915527
    5. ' two' → logprob: -13.014243125915527
    6. '_power' → logprob: -13.514243125915527
    7. '_TWO' → logprob: -15.014243125915527
    8. '.two' → logprob: -15.639243125915527
    9. '_tw' → logprob: -16.38924217224121
    10. '(Mod' → logprob: -16.63924217224121

Token 542: '(Mod' (ID: 147705)
  Prédit: '(Mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Mod' → logprob: -9.698698704596609e-05
    2. '(' → logprob: -9.250097274780273
    3. 'Mod' → logprob: -14.000097274780273
    4. ' (' → logprob: -17.875097274780273
    5. '(Module' → logprob: -18.125097274780273
    6. '(
' → logprob: -18.125097274780273
    7. '```' → logprob: -18.875097274780273
    8. '(None' → logprob: -19.375097274780273
    9. ' Mod' → logprob: -19.750097274780273
    10. ' ' → logprob: -20.250097274780273

Token 543: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -9.114600834436715e-05
    2. 'int' → logprob: -9.500091552734375
    3. '(Int' → logprob: -11.250091552734375
    4. '(Mod' → logprob: -13.375091552734375
    5. 'INT' → logprob: -15.125091552734375
    6. ' Int' → logprob: -15.375091552734375
    7. '	Int' → logprob: -15.500091552734375
    8. 'In' → logprob: -15.500091552734375
    9. 'Ints' → logprob: -15.750091552734375
    10. '[Int' → logprob: -15.875091552734375

Token 544: ',' (ID: 11)
  Prédit: '(Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Mod' → logprob: -0.0001801801408873871
    2. ',' → logprob: -8.7501802444458
    3. '(' → logprob: -11.3751802444458
    4. 'Mod' → logprob: -11.6251802444458
    5. ')' → logprob: -14.1251802444458
    6. ')(' → logprob: -16.000179290771484
    7. '```' → logprob: -16.125179290771484
    8. '(Module' → logprob: -16.750179290771484
    9. '(Mat' → logprob: -16.875179290771484
    10. '),' → logprob: -17.000179290771484

Token 545: ' i' (ID: 575)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.20159226655960083
    2. '(Mod' → logprob: -1.701592206954956
    3. 'i' → logprob: -8.951592445373535
    4. '(i' → logprob: -10.201592445373535
    5. ' Mod' → logprob: -12.326592445373535
    6. '```' → logprob: -12.951592445373535
    7. 'MOD' → logprob: -13.951592445373535
    8. '(' → logprob: -14.076592445373535
    9. '_Mod' → logprob: -14.201592445373535
    10. '   ' → logprob: -14.576592445373535

Token 546: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.9160102712921798e-05
    2. '   ' → logprob: -10.750029563903809
    3. ')
' → logprob: -12.750029563903809
    4. '       ' → logprob: -13.000029563903809
    5. ' )' → logprob: -13.750029563903809
    6. '))' → logprob: -14.500029563903809
    7. ')return' → logprob: -16.125028610229492
    8. '}' → logprob: -16.375028610229492
    9. ')))' → logprob: -16.375028610229492
    10. '<|end|>' → logprob: -16.375028610229492

Token 547: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 548: ' process' (ID: 2273)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.23530952632427216
    2. ' main' → logprob: -1.9853094816207886
    3. 'solve' → logprob: -3.110309600830078
    4. 'process' → logprob: -4.985309600830078
    5. 'compute' → logprob: -5.485309600830078
    6. 'def' → logprob: -5.485309600830078
    7. 'calculate' → logprob: -5.610309600830078
    8. ' solve' → logprob: -6.110309600830078
    9. 'count' → logprob: -6.485309600830078
    10. 'comb' → logprob: -7.235309600830078

Token 549: '_c' (ID: 1303)
  Prédit: '_cp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cp' → logprob: -1.098947286605835
    2. '_p' → logprob: -1.473947286605835
    3. '(i' → logprob: -1.598947286605835
    4. '(' → logprob: -2.973947286605835
    5. '_' → logprob: -3.223947286605835
    6. '_sum' → logprob: -3.723947286605835
    7. '(B' → logprob: -4.223947525024414
    8. '_input' → logprob: -4.348947525024414
    9. '_dp' → logprob: -4.473947525024414
    10. '_c' → logprob: -4.973947525024414

Token 550: 'q' (ID: 80)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00454096170142293
    2. 'P' → logprob: -5.629540920257568
    3. 'ount' → logprob: -8.129541397094727
    4. 'ounter' → logprob: -9.129541397094727
    5. 'ont' → logprob: -9.379541397094727
    6. 'ps' → logprob: -9.879541397094727
    7. 'pi' → logprob: -9.879541397094727
    8. 'nt' → logprob: -10.379541397094727
    9. 'alculate' → logprob: -10.629541397094727
    10. 'def' → logprob: -11.004541397094727

Token 551: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.3049141764640808
    2. '(' → logprob: -1.6799142360687256
    3. 'def' → logprob: -2.8049142360687256
    4. '(B' → logprob: -5.3049139976501465
    5. '(n' → logprob: -5.6799139976501465
    6. '(q' → logprob: -5.8049139976501465
    7. '(p' → logprob: -7.4299139976501465
    8. '(def' → logprob: -7.9299139976501465
    9. '(Q' → logprob: -8.179914474487305
    10. '(I' → logprob: -8.179914474487305

Token 552: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002753981971181929
    2. ',B' → logprob: -8.250275611877441
    3. ' ,' → logprob: -11.375275611877441
    4. 'B' → logprob: -13.375275611877441
    5. ',
' → logprob: -15.000275611877441
    6. '<|end|>' → logprob: -15.750275611877441
    7. 'def' → logprob: -15.875275611877441
    8. '_,' → logprob: -16.625274658203125
    9. ' B' → logprob: -16.625274658203125
    10. ',b' → logprob: -16.750274658203125

Token 553: ' W' (ID: 486)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.01815556176006794
    2. ' B' → logprob: -4.018155574798584
    3. 'def' → logprob: -13.018155097961426
    4. 'BQ' → logprob: -14.018155097961426
    5. 'i' → logprob: -14.518155097961426
    6. 'A' → logprob: -15.143155097961426
    7. '   ' → logprob: -15.268155097961426
    8. ' ' → logprob: -15.268155097961426
    9. ')' → logprob: -15.705655097961426
    10. '...' → logprob: -15.830655097961426

Token 554: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001242772996192798
    2. ' ,' → logprob: -10.000123977661133
    3. ',B' → logprob: -10.250123977661133
    4. '   ' → logprob: -11.125123977661133
    5. ',
' → logprob: -11.250123977661133
    6. ',W' → logprob: -11.500123977661133
    7. 'B' → logprob: -13.875123977661133
    8. ',Q' → logprob: -14.125123977661133
    9. 'q' → logprob: -14.625123977661133
    10. ',C' → logprob: -14.625123977661133

Token 555: ' cq' (ID: 151096)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.904948890209198
    2. 'cq' → logprob: -1.1549489498138428
    3. ' cq' → logprob: -2.2799489498138428
    4. 'cp' → logprob: -2.4049489498138428
    5. ' p' → logprob: -3.2799489498138428
    6. 'pq' → logprob: -4.279948711395264
    7. ' cp' → logprob: -4.279948711395264
    8. 'B' → logprob: -4.529948711395264
    9. 'q' → logprob: -5.529948711395264
    10. ' B' → logprob: -6.154948711395264

Token 556: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.543733904138207e-05
    2. ',
' → logprob: -10.50009536743164
    3. ' ,' → logprob: -10.50009536743164
    4. '   ' → logprob: -10.87509536743164
    5. '):
' → logprob: -12.12509536743164
    6. ',c' → logprob: -12.50009536743164
    7. ',W' → logprob: -12.62509536743164
    8. '):' → logprob: -13.25009536743164
    9. ',C' → logprob: -13.62509536743164
    10. ',q' → logprob: -13.75009536743164

Token 557: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.038664329797029495
    2. ' Mod' → logprob: -3.5386643409729004
    3. 'W' → logprob: -4.9136643409729
    4. 'B' → logprob: -7.2886643409729
    5. 'cp' → logprob: -8.538663864135742
    6. ' W' → logprob: -8.538663864135742
    7. 'cq' → logprob: -9.038663864135742
    8. 'i' → logprob: -9.288663864135742
    9. '   ' → logprob: -9.288663864135742
    10. ' cp' → logprob: -10.413663864135742

Token 558: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -2.339278580620885e-06
    2. 'int' → logprob: -14.125001907348633
    3. '(Int' → logprob: -14.250001907348633
    4. 'W' → logprob: -15.000001907348633
    5. ' Int' → logprob: -16.000001907348633
    6. '_int' → logprob: -16.000001907348633
    7. 'In' → logprob: -16.250001907348633
    8. '<Int' → logprob: -16.875001907348633
    9. '_Int' → logprob: -17.000001907348633
    10. '	Int' → logprob: -17.250001907348633

Token 559: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.31352686882019043
    2. '):' → logprob: -1.3135268688201904
    3. ',' → logprob: -8.81352710723877
    4. '   ' → logprob: -9.31352710723877
    5. ')' → logprob: -11.18852710723877
    6. '):
' → logprob: -11.56352710723877
    7. '):

' → logprob: -13.56352710723877
    8. ':' → logprob: -14.06352710723877
    9. ',
' → logprob: -15.81352710723877
    10. 'def' → logprob: -16.063526153564453

Token 560: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005138330743648112
    2. 'if' → logprob: -7.625514030456543
    3. ' if' → logprob: -10.625514030456543
    4. '```' → logprob: -13.625514030456543
    5. '       ' → logprob: -15.250514030456543
    6. '   ' → logprob: -16.375513076782227
    7. '	if' → logprob: -17.750513076782227
    8. '
' → logprob: -17.875513076782227
    9. 'return' → logprob: -18.500513076782227
    10. '``' → logprob: -18.750513076782227

Token 561: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.16262120008468628
    2. '   ' → logprob: -1.912621259689331
    3. ' if' → logprob: -6.037621021270752
    4. 'return' → logprob: -12.28762149810791
    5. '  ' → logprob: -14.16262149810791
    6. '	if' → logprob: -14.53762149810791
    7. '
' → logprob: -14.78762149810791
    8. 'def' → logprob: -15.41262149810791
    9. '    ' → logprob: -15.66262149810791
    10. ' ' → logprob: -15.66262149810791

Token 562: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.026311445981264114
    2. ' i' → logprob: -3.6513113975524902
    3. '   ' → logprob: -11.526311874389648
    4. '(i' → logprob: -14.776311874389648
    5. ' ' → logprob: -14.901311874389648
    6. '  ' → logprob: -15.151311874389648
    7. '	i' → logprob: -15.901311874389648
    8. '(' → logprob: -16.40131187438965
    9. '0' → logprob: -17.02631187438965
    10. ' ' → logprob: -17.27631187438965

Token 563: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.700454831123352
    2. ' <' → logprob: -0.700454831123352
    3. ' >' → logprob: -5.7004547119140625
    4. '>' → logprob: -6.3254547119140625
    5. ' <=' → logprob: -6.5754547119140625
    6. '<=' → logprob: -7.5754547119140625
    7. '<W' → logprob: -9.200454711914062
    8. ' >=' → logprob: -9.700454711914062
    9. '>=' → logprob: -10.700454711914062
    10. '<
' → logprob: -11.450454711914062

Token 564: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.03809335455298424
    2. ' W' → logprob: -3.288093328475952
    3. '   ' → logprob: -10.163093566894531
    4. ' ' → logprob: -12.163093566894531
    5. '(W' → logprob: -13.663093566894531
    6. '	W' → logprob: -13.913093566894531
    7. '  ' → logprob: -14.163093566894531
    8. '(' → logprob: -14.163093566894531
    9. 'Q' → logprob: -14.288093566894531
    10. '    ' → logprob: -14.413093566894531

Token 565: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2419169694185257
    2. ':' → logprob: -1.7419170141220093
    3. '       ' → logprob: -3.3669168949127197
    4. '):
' → logprob: -5.366917133331299
    5. '   ' → logprob: -8.11691665649414
    6. '):' → logprob: -9.49191665649414
    7. '():
' → logprob: -9.49191665649414
    8. ':return' → logprob: -11.24191665649414
    9. ',' → logprob: -11.36691665649414
    10. ')' → logprob: -11.74191665649414

Token 566: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00025275684311054647
    2. '   ' → logprob: -8.875252723693848
    3. 'return' → logprob: -9.125252723693848
    4. '           ' → logprob: -12.875252723693848
    5. ' return' → logprob: -14.625252723693848
    6. '      ' → logprob: -15.500252723693848
    7. '     ' → logprob: -15.875252723693848
    8. '0' → logprob: -16.000253677368164
    9. ':return' → logprob: -16.375253677368164
    10. '{
' → logprob: -16.375253677368164

Token 567: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.009338097646832466
    2. '   ' → logprob: -5.009337902069092
    3. ' return' → logprob: -6.259337902069092
    4. '       ' → logprob: -7.259337902069092
    5. '	return' → logprob: -13.25933837890625
    6. '           ' → logprob: -13.88433837890625
    7. ' ' → logprob: -15.38433837890625
    8. '  ' → logprob: -16.38433837890625
    9. '```' → logprob: -16.75933837890625
    10. '    ' → logprob: -16.88433837890625

Token 568: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.0040801819413900375
    2. ' Mod' → logprob: -5.504080295562744
    3. '(Mod' → logprob: -14.254079818725586
    4. '0' → logprob: -14.754079818725586
    5. '   ' → logprob: -15.004079818725586
    6. ' ' → logprob: -15.129079818725586
    7. 'Mo' → logprob: -16.629079818725586
    8. '  ' → logprob: -16.879079818725586
    9. '_Mod' → logprob: -17.004079818725586
    10. '_mod' → logprob: -17.379079818725586

Token 569: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -5.512236498361744e-07
    2. 'int' → logprob: -15.250000953674316
    3. 'Mod' → logprob: -15.500000953674316
    4. '(Int' → logprob: -18.0
    5. 'Ints' → logprob: -19.125
    6. '_int' → logprob: -19.375
    7. ' Int' → logprob: -19.625
    8. '(' → logprob: -20.125
    9. '	Int' → logprob: -20.125
    10. '_Int' → logprob: -20.375

Token 570: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0031796174589544535
    2. '0' → logprob: -5.753179550170898
    3. ' (' → logprob: -13.878179550170898
    4. '   ' → logprob: -14.628179550170898
    5. ' ' → logprob: -15.253179550170898
    6. '(
' → logprob: -15.503179550170898
    7. '{' → logprob: -18.1281795501709
    8. '[' → logprob: -18.1281795501709
    9. '```' → logprob: -18.2531795501709
    10. '((' → logprob: -18.3781795501709

Token 571: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.875
    3. '(' → logprob: -16.0
    4. '   ' → logprob: -19.0
    5. ')' → logprob: -20.0
    6. '۰' → logprob: -20.125
    7. '1' → logprob: -21.0
    8. '2' → logprob: -21.375
    9. '[' → logprob: -22.125
    10. '  ' → logprob: -22.25

Token 572: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2559097707271576
    2. ')
' → logprob: -1.63090980052948
    3. '   ' → logprob: -3.5059096813201904
    4. '<|end|>' → logprob: -12.50590991973877
    5. '       ' → logprob: -12.75590991973877
    6. ')\
' → logprob: -13.38090991973877
    7. ')
' → logprob: -13.75590991973877
    8. ')return' → logprob: -13.75590991973877
    9. '
' → logprob: -14.13090991973877
    10. '```' → logprob: -14.13090991973877

Token 573: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005704291397705674
    2. 'elif' → logprob: -7.500570297241211
    3. ')' → logprob: -12.250570297241211
    4. '<|end|>' → logprob: -12.625570297241211
    5. ',' → logprob: -13.000570297241211
    6. 'def' → logprob: -13.375570297241211
    7. '
' → logprob: -13.750570297241211
    8. '	elif' → logprob: -13.875570297241211
    9. ' elif' → logprob: -13.875570297241211
    10. '```' → logprob: -14.000570297241211

Token 574: ' elif' (ID: 9497)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2519453167915344
    2. 'elif' (adapté à ' elif') → logprob: -1.5019452571868896
    3. ' elif' → logprob: -11.501945495605469
    4. '	elif' → logprob: -13.001945495605469
    5. 'else' → logprob: -13.501945495605469
    6. 'def' → logprob: -14.251945495605469
    7. '```' → logprob: -14.376945495605469
    8. 'elseif' → logprob: -15.126945495605469
    9. '#elif' → logprob: -15.376945495605469
    10. '       ' → logprob: -15.501945495605469

Token 575: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04308243468403816
    2. ' i' → logprob: -3.1680824756622314
    3. '   ' → logprob: -9.418082237243652
    4. ' ' → logprob: -14.418082237243652
    5. '  ' → logprob: -14.668082237243652
    6. '    ' → logprob: -15.168082237243652
    7. '```' → logprob: -15.168082237243652
    8. '	i' → logprob: -15.418082237243652
    9. '       ' → logprob: -16.41808319091797
    10. '(i' → logprob: -17.54308319091797

Token 576: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.009769665077328682
    2. ' ==' → logprob: -4.634769439697266
    3. '==
' → logprob: -11.509769439697266
    4. '=' → logprob: -13.884769439697266
    5. '==(' → logprob: -14.259769439697266
    6. '===' → logprob: -14.509769439697266
    7. '```' → logprob: -15.134769439697266
    8. ']==' → logprob: -15.259769439697266
    9. ')==' → logprob: -15.509769439697266
    10. '<=' → logprob: -15.634769439697266

Token 577: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0028433911502361298
    2. ' W' → logprob: -5.877843379974365
    3. '   ' → logprob: -10.252843856811523
    4. ' ' → logprob: -14.002843856811523
    5. '  ' → logprob: -15.002843856811523
    6. 'Q' → logprob: -15.127843856811523
    7. 'def' → logprob: -15.127843856811523
    8. '```' → logprob: -15.127843856811523
    9. '	W' → logprob: -15.127843856811523
    10. 'i' → logprob: -16.252843856811523

Token 578: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3285609185695648
    2. ':' → logprob: -1.4535609483718872
    3. '       ' → logprob: -3.0785608291625977
    4. ':return' → logprob: -9.328560829162598
    5. '):
' → logprob: -9.453560829162598
    6. '   ' → logprob: -9.703560829162598
    7. ',' → logprob: -11.328560829162598
    8. '```' → logprob: -11.578560829162598
    9. '           ' → logprob: -12.203560829162598
    10. '():
' → logprob: -12.328560829162598

Token 579: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02164282277226448
    2. 'return' → logprob: -3.8966429233551025
    3. '   ' → logprob: -7.146642684936523
    4. '           ' → logprob: -8.271642684936523
    5. ' return' → logprob: -10.271642684936523
    6. 'Mod' → logprob: -11.896642684936523
    7. '```' → logprob: -12.146642684936523
    8. '               ' → logprob: -12.646642684936523
    9. ':return' → logprob: -12.896642684936523
    10. '{
' → logprob: -13.646642684936523

Token 580: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0316949263215065
    2. 'Mod' → logprob: -3.5316948890686035
    3. ' return' → logprob: -6.9066948890686035
    4. '       ' → logprob: -7.1566948890686035
    5. '   ' → logprob: -8.906695365905762
    6. ' Mod' → logprob: -11.656695365905762
    7. '           ' → logprob: -12.281695365905762
    8. '(Mod' → logprob: -12.281695365905762
    9. '	return' → logprob: -13.031695365905762
    10. '
' → logprob: -13.406695365905762

Token 581: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.0014652233803644776
    2. ' Mod' → logprob: -6.626465320587158
    3. '(Mod' → logprob: -9.12646484375
    4. '   ' → logprob: -10.87646484375
    5. '  ' → logprob: -12.62646484375
    6. ' ' → logprob: -13.00146484375
    7. '1' → logprob: -13.00146484375
    8. 'Modulo' → logprob: -14.50146484375
    9. '_Mod' → logprob: -14.50146484375
    10. 'Mo' → logprob: -15.12646484375

Token 582: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -1.0564331205387134e-05
    2. 'int' → logprob: -11.62501049041748
    3. 'In' → logprob: -14.50001049041748
    4. 'q' → logprob: -15.12501049041748
    5. 'W' → logprob: -15.62501049041748
    6. 'Mod' → logprob: -16.125011444091797
    7. 'nt' → logprob: -16.250011444091797
    8. '(Int' → logprob: -16.250011444091797
    9. ' Int' → logprob: -17.000011444091797
    10. '   ' → logprob: -17.250011444091797

Token 583: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001238004770129919
    2. '1' → logprob: -9.000123977661133
    3. ' (' → logprob: -15.625123977661133
    4. '(
' → logprob: -16.750123977661133
    5. '   ' → logprob: -18.500123977661133
    6. '```' → logprob: -19.250123977661133
    7. ' ' → logprob: -19.375123977661133
    8. '('' → logprob: -19.500123977661133
    9. '(M' → logprob: -19.625123977661133
    10. '((' → logprob: -19.625123977661133

Token 584: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.77627644513268e-06
    2. 'Mod' → logprob: -12.125008583068848
    3. '(' → logprob: -13.375008583068848
    4. '(Mod' → logprob: -13.625008583068848
    5. ' ' → logprob: -14.625008583068848
    6. '0' → logprob: -17.625009536743164
    7. 'return' → logprob: -17.750009536743164
    8. ')' → logprob: -18.000009536743164
    9. '   ' → logprob: -18.250009536743164
    10. ' Mod' → logprob: -18.375009536743164

Token 585: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4747616648674011
    2. ')' → logprob: -0.9747616648674011
    3. '   ' → logprob: -7.349761486053467
    4. ')
' → logprob: -10.599761962890625
    5. '       ' → logprob: -11.474761962890625
    6. '()' → logprob: -13.599761962890625
    7. '):
' → logprob: -13.599761962890625
    8. ')

' → logprob: -14.099761962890625
    9. ')return' → logprob: -14.474761962890625
    10. '()
' → logprob: -14.849761962890625

Token 586: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03788861632347107
    2. '       ' → logprob: -3.412888526916504
    3. 'else' → logprob: -5.662888526916504
    4. ' else' → logprob: -8.037888526916504
    5. 'return' → logprob: -9.537888526916504
    6. '<|end|>' → logprob: -9.662888526916504
    7. ')' → logprob: -9.787888526916504
    8. '
' → logprob: -10.287888526916504
    9. 'def' → logprob: -10.412888526916504
    10. ':
' → logprob: -10.537888526916504

Token 587: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.009323570877313614
    2. '   ' → logprob: -4.759323596954346
    3. ' else' → logprob: -7.259323596954346
    4. '	else' → logprob: -13.259323120117188
    5. '       ' → logprob: -13.884323120117188
    6. 'elif' → logprob: -14.009323120117188
    7. 'def' → logprob: -14.509323120117188
    8. '```' → logprob: -14.634323120117188
    9. ':
' → logprob: -15.134323120117188
    10. 'return' → logprob: -15.134323120117188

Token 588: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004186317324638367
    2. ':
' → logprob: -6.004186153411865
    3. '   ' → logprob: -6.629186153411865
    4. ':' → logprob: -8.379186630249023
    5. 'return' → logprob: -9.379186630249023
    6. ' return' → logprob: -10.379186630249023
    7. '           ' → logprob: -11.129186630249023
    8. ':return' → logprob: -11.129186630249023
    9. '):
' → logprob: -12.379186630249023
    10. '      ' → logprob: -12.629186630249023

Token 589: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8117876648902893
    2. '       ' → logprob: -1.0617876052856445
    3. 'return' → logprob: -1.5617876052856445
    4. ' return' → logprob: -8.061787605285645
    5. 'cq' → logprob: -12.186787605285645
    6. '```' → logprob: -12.186787605285645
    7. '           ' → logprob: -12.686787605285645
    8. '	return' → logprob: -12.811787605285645
    9. '     ' → logprob: -13.436787605285645
    10. '
' → logprob: -13.686787605285645

Token 590: ' return' (ID: 622)
  Prédit: 'cq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cq' → logprob: -0.026665883138775826
    2. 'return' (adapté à ' return') → logprob: -3.7766659259796143
    3. '   ' → logprob: -6.401665687561035
    4. ' cq' → logprob: -6.526665687561035
    5. ' return' → logprob: -9.276665687561035
    6. '       ' → logprob: -9.401665687561035
    7. 'Mod' → logprob: -9.526665687561035
    8. 'c' → logprob: -11.401665687561035
    9. '  ' → logprob: -11.901665687561035
    10. ' ' → logprob: -12.151665687561035

Token 591: ' cq' (ID: 151096)
  Prédit: 'cq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cq' → logprob: -0.0059936209581792355
    2. ' cq' → logprob: -5.130993843078613
    3. '   ' → logprob: -10.255993843078613
    4. 'c' → logprob: -11.005993843078613
    5. '(c' → logprob: -11.880993843078613
    6. 'Mod' → logprob: -13.880993843078613
    7. '  ' → logprob: -13.880993843078613
    8. ' ' → logprob: -13.880993843078613
    9. '(' → logprob: -14.130993843078613
    10. 'CQ' → logprob: -14.630993843078613

Token 592: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.12698742747306824
    2. '*' → logprob: -2.1269874572753906
    3. '*(' → logprob: -10.37698745727539
    4. '<|end|>' → logprob: -10.62698745727539
    5. ' +' → logprob: -14.12698745727539
    6. '*object' → logprob: -14.37698745727539
    7. ' ' → logprob: -15.25198745727539
    8. '+' → logprob: -15.25198745727539
    9. ')' → logprob: -15.50198745727539
    10. '<|end|>' → logprob: -15.50198745727539

Token 593: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0434744618833065
    2. '(W' → logprob: -3.1684744358062744
    3. ' (' → logprob: -8.168474197387695
    4. '((' → logprob: -8.793474197387695
    5. '(' → logprob: -11.168474197387695
    6. '(Q' → logprob: -11.918474197387695
    7. '(w' → logprob: -12.543474197387695
    8. '(M' → logprob: -12.668474197387695
    9. '(q' → logprob: -12.793474197387695
    10. '(I' → logprob: -12.918474197387695

Token 594: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05518082529306412
    2. '(i' → logprob: -2.930180788040161
    3. 'W' → logprob: -8.680180549621582
    4. ' i' → logprob: -9.805180549621582
    5. '(W' → logprob: -10.680180549621582
    6. '(' → logprob: -11.055180549621582
    7. '   ' → logprob: -11.055180549621582
    8. ' (' → logprob: -11.680180549621582
    9. 'Mod' → logprob: -12.930180549621582
    10. '
' → logprob: -13.680180549621582

Token 595: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03804539144039154
    2. ' -' → logprob: -3.2880454063415527
    3. '<|end|>' → logprob: -13.913044929504395
    4. ' ' → logprob: -14.038044929504395
    5. '-
' → logprob: -14.663044929504395
    6. ' ' → logprob: -14.788044929504395
    7. '```' → logprob: -15.163044929504395
    8. '(' → logprob: -15.663044929504395
    9. '−' → logprob: -16.16304588317871
    10. 'W' → logprob: -16.28804588317871

Token 596: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0035058727953583
    2. 'W' → logprob: -5.753505706787109
    3. ' ' → logprob: -8.12850570678711
    4. ' W' → logprob: -10.62850570678711
    5. '   ' → logprob: -11.87850570678711
    6. '           ' → logprob: -15.25350570678711
    7. '(' → logprob: -15.37850570678711
    8. 'w' → logprob: -15.50350570678711
    9. '       ' → logprob: -15.50350570678711
    10. '  ' → logprob: -15.50350570678711

Token 597: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011355629976605996
    2. 'W' → logprob: -9.125113487243652
    3. ' ' → logprob: -12.375113487243652
    4. '   ' → logprob: -15.250113487243652
    5. ' W' → logprob: -16.12511444091797
    6. 'w' → logprob: -16.50011444091797
    7. '
' → logprob: -17.62511444091797
    8. '  ' → logprob: -18.12511444091797
    9. '2' → logprob: -18.62511444091797
    10. '(W' → logprob: -18.75011444091797

Token 598: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002857774496078491
    2. '-' → logprob: -6.627857685089111
    3. ' -' → logprob: -7.252857685089111
    4. ')/(' → logprob: -7.252857685089111
    5. ')/' → logprob: -9.62785816192627
    6. '```' → logprob: -11.12785816192627
    7. ' )' → logprob: -11.25285816192627
    8. ' /' → logprob: -12.12785816192627
    9. '   ' → logprob: -12.50285816192627
    10. '/' → logprob: -12.75285816192627

Token 599: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.2306308150291443
    2. '/' → logprob: -1.605630874633789
    3. '/(' → logprob: -5.980630874633789
    4. '-' → logprob: -6.480630874633789
    5. '       ' → logprob: -7.855630874633789
    6. '```' → logprob: -8.105630874633789
    7. ' -' → logprob: -8.730630874633789
    8. '   ' → logprob: -9.230630874633789
    9. '           ' → logprob: -10.105630874633789
    10. '*' → logprob: -10.605630874633789

Token 600: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0031944699585437775
    2. ' (' → logprob: -5.753194332122803
    3. '(' → logprob: -11.128194808959961
    4. '   ' → logprob: -13.503194808959961
    5. '(ii' → logprob: -15.128194808959961
    6. '       ' → logprob: -15.753194808959961
    7. '(I' → logprob: -16.37819480895996
    8. '           ' → logprob: -16.50319480895996
    9. '```' → logprob: -16.50319480895996
    10. '(int' → logprob: -17.50319480895996

Token 601: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.001891745370812714
    2. ' (' → logprob: -6.876891613006592
    3. 'i' → logprob: -7.126891613006592
    4. '(' → logprob: -10.00189208984375
    5. ' i' → logprob: -12.00189208984375
    6. '   ' → logprob: -13.37689208984375
    7. '
' → logprob: -14.87689208984375
    8. '{i' → logprob: -15.25189208984375
    9. '(
' → logprob: -15.37689208984375
    10. '```' → logprob: -15.37689208984375

Token 602: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.22657382488250732
    2. ' -' → logprob: -1.6015738248825073
    3. '-W' → logprob: -7.601573944091797
    4. 'W' → logprob: -7.726573944091797
    5. ' W' → logprob: -9.351573944091797
    6. '-
' → logprob: -10.101573944091797
    7. ' ' → logprob: -10.101573944091797
    8. '```' → logprob: -10.976573944091797
    9. '   ' → logprob: -12.476573944091797
    10. ')' → logprob: -12.476573944091797

Token 603: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.026324912905693054
    2. ' W' → logprob: -3.651324987411499
    3. '(W' → logprob: -11.776325225830078
    4. ' ' → logprob: -12.276325225830078
    5. '   ' → logprob: -12.651325225830078
    6. '(' → logprob: -12.901325225830078
    7. ' (' → logprob: -13.401325225830078
    8. '
' → logprob: -13.776325225830078
    9. '	W' → logprob: -14.026325225830078
    10. 'B' → logprob: -14.151325225830078

Token 604: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8789383830153383e-05
    2. ')
' → logprob: -11.250019073486328
    3. '   ' → logprob: -13.125019073486328
    4. '<|end|>' → logprob: -13.250019073486328
    5. ' )' → logprob: -14.250019073486328
    6. '       ' → logprob: -14.250019073486328
    7. '```' → logprob: -15.750019073486328
    8. ')return' → logprob: -16.250019073486328
    9. ')}' → logprob: -16.250019073486328
    10. '           ' → logprob: -16.875019073486328

Token 605: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 606: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.002842080080881715
    2. 'def' → logprob: -5.877841949462891
    3. ' update' → logprob: -10.25284194946289
    4. 'process' → logprob: -14.25284194946289
    5. '
' → logprob: -15.75284194946289
    6. 'get' → logprob: -15.75284194946289
    7. 'calculate' → logprob: -16.00284194946289
    8. '.update' → logprob: -16.12784194946289
    9. '```' → logprob: -16.50284194946289
    10. 'write' → logprob: -16.62784194946289

Token 607: '_q' (ID: 19384)
  Prédit: '_q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_q' → logprob: -0.12788650393486023
    2. 'q' → logprob: -2.1278865337371826
    3. '_p' → logprob: -7.0028862953186035
    4. 'p' → logprob: -10.377886772155762
    5. '_' → logprob: -12.627886772155762
    6. '_c' → logprob: -12.752886772155762
    7. '_w' → logprob: -12.877886772155762
    8. '```' → logprob: -13.377886772155762
    9. 'w' → logprob: -13.502886772155762
    10. 'def' → logprob: -13.752886772155762

Token 608: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.003217283869162202
    2. '(' → logprob: -5.7532172203063965
    3. 'def' → logprob: -10.878217697143555
    4. '(p' → logprob: -12.503217697143555
    5. '(q' → logprob: -12.878217697143555
    6. '(I' → logprob: -13.003217697143555
    7. '(self' → logprob: -13.128217697143555
    8. '(j' → logprob: -13.128217697143555
    9. '(n' → logprob: -13.878217697143555
    10. ' (' → logprob: -13.878217697143555

Token 609: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04423851892352104
    2. '(W' → logprob: -3.169238567352295
    3. ',W' → logprob: -7.169238567352295
    4. '(' → logprob: -7.794238567352295
    5. ')' → logprob: -10.419238090515137
    6. '```' → logprob: -11.669238090515137
    7. ' ,' → logprob: -11.919238090515137
    8. 'W' → logprob: -12.794238090515137
    9. ',
' → logprob: -13.294238090515137
    10. '   ' → logprob: -14.044238090515137

Token 610: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.01815076172351837
    2. ' W' → logprob: -4.018150806427002
    3. '   ' → logprob: -15.018150329589844
    4. 'B' → logprob: -15.393150329589844
    5. ' ' → logprob: -15.768150329589844
    6. '```' → logprob: -16.518150329589844
    7. 'def' → logprob: -16.893150329589844
    8. '	W' → logprob: -17.393150329589844
    9. '`' → logprob: -18.518150329589844
    10. '    ' → logprob: -18.768150329589844

Token 611: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.8232690460281447e-05
    2. ' ,' → logprob: -10.250048637390137
    3. ',q' → logprob: -11.750048637390137
    4. ',p' → logprob: -12.500048637390137
    5. ',
' → logprob: -14.000048637390137
    6. ',c' → logprob: -15.625048637390137
    7. ',w' → logprob: -17.00004768371582
    8. ',W' → logprob: -17.25004768371582
    9. '   ' → logprob: -17.50004768371582
    10. 'q' → logprob: -17.62504768371582

Token 612: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00043162284418940544
    2. ' q' → logprob: -7.750431537628174
    3. '   ' → logprob: -14.250432014465332
    4. '	q' → logprob: -15.750432014465332
    5. 'cq' → logprob: -16.875431060791016
    6. ' ' → logprob: -17.000431060791016
    7. '    ' → logprob: -17.250431060791016
    8. '       ' → logprob: -17.250431060791016
    9. '  ' → logprob: -17.750431060791016
    10. 'qml' → logprob: -17.875431060791016

Token 613: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001657565007917583
    2. ',q' → logprob: -8.875165939331055
    3. ',c' → logprob: -11.375165939331055
    4. ' ,' → logprob: -11.625165939331055
    5. 'q' → logprob: -12.375165939331055
    6. ',
' → logprob: -15.000165939331055
    7. 'c' → logprob: -15.625165939331055
    8. '   ' → logprob: -15.750165939331055
    9. 'cq' → logprob: -16.125165939331055
    10. ' q' → logprob: -16.250165939331055

Token 614: ' cq' (ID: 151096)
  Prédit: 'cq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cq' → logprob: -0.0005545823951251805
    2. ' cq' → logprob: -7.50055456161499
    3. 'cp' → logprob: -14.250555038452148
    4. '   ' → logprob: -14.750555038452148
    5. 'Mod' → logprob: -15.250555038452148
    6. 'cj' → logprob: -16.37555503845215
    7. 'c' → logprob: -16.50055503845215
    8. 'cg' → logprob: -17.25055503845215
    9. ' ' → logprob: -17.37555503845215
    10. '
' → logprob: -18.12555503845215

Token 615: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.8889261304575484e-06
    2. ' ,' → logprob: -12.500003814697266
    3. ',
' → logprob: -16.750003814697266
    4. '   ' → logprob: -17.000003814697266
    5. '‌,' → logprob: -18.125003814697266
    6. 's' → logprob: -19.000003814697266
    7. '_,' → logprob: -19.125003814697266
    8. 'Mod' → logprob: -19.125003814697266
    9. '،' → logprob: -19.250003814697266
    10. '(Mod' → logprob: -19.250003814697266

Token 616: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.0003357006062287837
    2. ' Mod' → logprob: -8.000335693359375
    3. '   ' → logprob: -16.625335693359375
    4. '(Mod' → logprob: -16.875335693359375
    5. ' ' → logprob: -18.625335693359375
    6. '_mod' → logprob: -18.875335693359375
    7. '  ' → logprob: -19.250335693359375
    8. '.Mod' → logprob: -19.625335693359375
    9. '_Mod' → logprob: -19.625335693359375
    10. '    ' → logprob: -19.750335693359375

Token 617: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -3.47626737493556e-05
    2. 'Mod' → logprob: -10.37503433227539
    3. 'int' → logprob: -13.25003433227539
    4. '(Mod' → logprob: -14.37503433227539
    5. ' Int' → logprob: -15.00003433227539
    6. '(Int' → logprob: -15.62503433227539
    7. '   ' → logprob: -16.00003433227539
    8. 'In' → logprob: -16.25003433227539
    9. '_int' → logprob: -16.25003433227539
    10. '_Int' → logprob: -16.50003433227539

Token 618: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.020406292751431465
    2. '):' → logprob: -4.020406246185303
    3. '   ' → logprob: -6.270406246185303
    4. ',' → logprob: -8.145406723022461
    5. 'def' → logprob: -10.145406723022461
    6. ')' → logprob: -10.895406723022461
    7. '):
' → logprob: -12.395406723022461
    8. ':' → logprob: -12.770406723022461
    9. ' ):
' → logprob: -12.770406723022461
    10. '):

' → logprob: -13.520406723022461

Token 619: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1637164789135568e-05
    2. ' if' → logprob: -11.750011444091797
    3. 'if' → logprob: -13.000011444091797
    4. 'def' → logprob: -13.750011444091797
    5. '```' → logprob: -14.875011444091797
    6. '   ' → logprob: -17.750011444091797
    7. '       ' → logprob: -17.875011444091797
    8. ' def' → logprob: -18.250011444091797
    9. '	if' → logprob: -19.750011444091797
    10. '  ' → logprob: -21.125011444091797

Token 620: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2528932988643646
    2. '   ' → logprob: -1.502893328666687
    3. ' if' → logprob: -7.377893447875977
    4. 'def' → logprob: -8.002893447875977
    5. '```' → logprob: -12.877893447875977
    6. '	if' → logprob: -14.502893447875977
    7. 'i' → logprob: -14.502893447875977
    8. '       ' → logprob: -15.752893447875977
    9. ' ' → logprob: -15.877893447875977
    10. ' def' → logprob: -16.002893447875977

Token 621: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6328809857368469
    2. ' i' → logprob: -0.7578809857368469
    3. '   ' → logprob: -8.257881164550781
    4. '    ' → logprob: -11.257881164550781
    5. '  ' → logprob: -12.382881164550781
    6. ' ' → logprob: -13.132881164550781
    7. '	i' → logprob: -14.257881164550781
    8. '(i' → logprob: -14.507881164550781
    9. '```' → logprob: -14.632881164550781
    10. '     ' → logprob: -15.820381164550781

Token 622: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.18368841707706451
    2. '<' → logprob: -1.8086884021759033
    3. '<W' → logprob: -5.683688640594482
    4. ' >' → logprob: -8.683688163757324
    5. ' <=' → logprob: -9.058688163757324
    6. ' >=' → logprob: -9.183688163757324
    7. '   ' → logprob: -9.933688163757324
    8. '>' → logprob: -10.308688163757324
    9. '<=' → logprob: -10.683688163757324
    10. '>=' → logprob: -11.308688163757324

Token 623: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0031808018684387207
    2. ' W' → logprob: -5.753180980682373
    3. 'i' → logprob: -13.003180503845215
    4. ' i' → logprob: -15.128180503845215
    5. '   ' → logprob: -15.378180503845215
    6. ' ' → logprob: -15.503180503845215
    7. '<|end|>' → logprob: -16.62818145751953
    8. '  ' → logprob: -17.12818145751953
    9. '(' → logprob: -17.12818145751953
    10. 'q' → logprob: -17.50318145751953

Token 624: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10258818417787552
    2. ':
' → logprob: -2.727588176727295
    3. '       ' → logprob: -3.977588176727295
    4. '+' → logprob: -5.477588176727295
    5. '   ' → logprob: -5.602588176727295
    6. ',' → logprob: -6.102588176727295
    7. '<|end|>' → logprob: -6.352588176727295
    8. '{' → logprob: -7.852588176727295
    9. '):
' → logprob: -8.102588653564453
    10. '{
' → logprob: -9.227588653564453

Token 625: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019185898825526237
    2. '   ' → logprob: -4.144186019897461
    3. 'return' → logprob: -5.769186019897461
    4. ' return' → logprob: -11.644186019897461
    5. '           ' → logprob: -11.894186019897461
    6. '{
' → logprob: -13.144186019897461
    7. '      ' → logprob: -13.519186019897461
    8. '```' → logprob: -13.519186019897461
    9. '     ' → logprob: -13.644186019897461
    10. '0' → logprob: -14.394186019897461

Token 626: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00024358915106859058
    2. ' return' → logprob: -8.750243186950684
    3. '   ' → logprob: -9.500243186950684
    4. 'Mod' → logprob: -11.750243186950684
    5. '       ' → logprob: -13.250243186950684
    6. '	return' → logprob: -15.500243186950684
    7. ':return' → logprob: -16.250244140625
    8. 'Return' → logprob: -16.750244140625
    9. '{return' → logprob: -16.750244140625
    10. '           ' → logprob: -17.500244140625

Token 627: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.0009136092266999185
    2. ' Mod' → logprob: -7.000913619995117
    3. '(Mod' → logprob: -13.125913619995117
    4. '_mod' → logprob: -16.875913619995117
    5. '   ' → logprob: -17.000913619995117
    6. '0' → logprob: -17.250913619995117
    7. 'mod' → logprob: -18.125913619995117
    8. 'Mo' → logprob: -18.250913619995117
    9. '_Mod' → logprob: -18.375913619995117
    10. 'MOD' → logprob: -19.125913619995117

Token 628: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -4.990154047845863e-05
    2. 'Mod' → logprob: -10.000049591064453
    3. 'int' → logprob: -12.500049591064453
    4. '(Mod' → logprob: -15.125049591064453
    5. 'In' → logprob: -15.875049591064453
    6. '	Int' → logprob: -17.125049591064453
    7. 'Ints' → logprob: -17.250049591064453
    8. '<Int' → logprob: -17.500049591064453
    9. '(Int' → logprob: -18.000049591064453
    10. ' Int' → logprob: -18.125049591064453

Token 629: '(' (ID: 7)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.31326353549957275
    2. '(' → logprob: -1.3132635354995728
    3. ' ' → logprob: -14.438263893127441
    4. ' (' → logprob: -14.688263893127441
    5. '(
' → logprob: -15.438263893127441
    6. '   ' → logprob: -15.563263893127441
    7. '```' → logprob: -15.688263893127441
    8. '۰' → logprob: -17.063262939453125
    9. '[' → logprob: -17.438262939453125
    10. '{' → logprob: -17.563262939453125

Token 630: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.5
    3. '(' → logprob: -16.25
    4. ')' → logprob: -17.875
    5. '1' → logprob: -18.875
    6. '   ' → logprob: -19.125
    7. '۰' → logprob: -20.25
    8. '2' → logprob: -21.5
    9. '
' → logprob: -21.875
    10. '[' → logprob: -22.125

Token 631: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.046339645981788635
    2. ')' → logprob: -3.296339750289917
    3. '   ' → logprob: -4.796339511871338
    4. ')
' → logprob: -12.671339988708496
    5. ' )
' → logprob: -14.921339988708496
    6. ')

' → logprob: -16.42133903503418
    7. '')
' → logprob: -16.67133903503418
    8. '       ' → logprob: -16.92133903503418
    9. '```' → logprob: -17.17133903503418
    10. '
' → logprob: -17.42133903503418

Token 632: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006974232383072376
    2. 'elif' → logprob: -7.750697612762451
    3. '
' → logprob: -9.125697135925293
    4. '<|end|>' → logprob: -10.000697135925293
    5. '    
' → logprob: -10.250697135925293
    6. '```' → logprob: -10.625697135925293
    7. ')' → logprob: -10.750697135925293
    8. ' elif' → logprob: -11.000697135925293
    9. '	elif' → logprob: -12.750697135925293
    10. 'def' → logprob: -12.750697135925293

Token 633: ' elif' (ID: 9497)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47427067160606384
    2. 'elif' (adapté à ' elif') → logprob: -0.9742707014083862
    3. ' elif' → logprob: -8.724270820617676
    4. 'else' → logprob: -11.849270820617676
    5. '```' → logprob: -11.849270820617676
    6. '	elif' → logprob: -12.349270820617676
    7. 'def' → logprob: -12.724270820617676
    8. '  ' → logprob: -13.349270820617676
    9. ' ' → logprob: -13.724270820617676
    10. '       ' → logprob: -13.849270820617676

Token 634: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0017499112291261554
    2. ' i' → logprob: -6.3767499923706055
    3. '   ' → logprob: -10.001749992370605
    4. '  ' → logprob: -14.501749992370605
    5. '    ' → logprob: -14.626749992370605
    6. '```' → logprob: -15.001749992370605
    7. ' ' → logprob: -15.126749992370605
    8. 'W' → logprob: -15.376749992370605
    9. '     ' → logprob: -15.501749992370605
    10. '       ' → logprob: -16.25174903869629

Token 635: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.018163522705435753
    2. ' ==' → logprob: -4.018163681030273
    3. '==
' → logprob: -11.643163681030273
    4. '=' → logprob: -13.143163681030273
    5. '==(' → logprob: -14.018163681030273
    6. '===' → logprob: -14.643163681030273
    7. 'def' → logprob: -14.893163681030273
    8. ']==' → logprob: -15.518163681030273
    9. '<=' → logprob: -15.643163681030273
    10. ')==' → logprob: -15.768163681030273

Token 636: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.00012964145571459085
    2. ' W' → logprob: -9.000129699707031
    3. '   ' → logprob: -12.250129699707031
    4. 'def' → logprob: -15.375129699707031
    5. '<|end|>' → logprob: -15.500129699707031
    6. 'i' → logprob: -15.625129699707031
    7. ' ' → logprob: -15.750129699707031
    8. 'w' → logprob: -16.37512969970703
    9. 'B' → logprob: -16.50012969970703
    10. '  ' → logprob: -16.62512969970703

Token 637: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3139917552471161
    2. ':
' → logprob: -1.4389917850494385
    3. '       ' → logprob: -3.4389917850494385
    4. ',' → logprob: -9.93899154663086
    5. ':return' → logprob: -10.68899154663086
    6. '):
' → logprob: -10.81399154663086
    7. '+' → logprob: -10.81399154663086
    8. '   ' → logprob: -10.81399154663086
    9. '<|end|>' → logprob: -11.31399154663086
    10. '():
' → logprob: -11.56399154663086

Token 638: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00047750159865245223
    2. 'return' → logprob: -8.37547779083252
    3. '   ' → logprob: -8.50047779083252
    4. ' return' → logprob: -11.25047779083252
    5. '           ' → logprob: -11.62547779083252
    6. ':
' → logprob: -11.62547779083252
    7. ':return' → logprob: -12.25047779083252
    8. ':' → logprob: -13.25047779083252
    9. '{
' → logprob: -13.62547779083252
    10. '```' → logprob: -13.75047779083252

Token 639: ' return' (ID: 622)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.03425895422697067
    2. 'return' (adapté à ' return') → logprob: -3.4092588424682617
    3. '   ' → logprob: -7.909258842468262
    4. ' Mod' → logprob: -9.159258842468262
    5. ' return' → logprob: -9.659258842468262
    6. '(Mod' → logprob: -9.909258842468262
    7. 'get' → logprob: -11.409258842468262
    8. '       ' → logprob: -11.784258842468262
    9. '
' → logprob: -12.534258842468262
    10. 'def' → logprob: -14.409258842468262

Token 640: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.0008408344583585858
    2. ' Mod' → logprob: -7.125840663909912
    3. '(Mod' → logprob: -10.25084114074707
    4. '   ' → logprob: -14.37584114074707
    5. 'get' → logprob: -16.62584114074707
    6. '_mod' → logprob: -16.62584114074707
    7. '
' → logprob: -16.62584114074707
    8. 'Mo' → logprob: -16.87584114074707
    9. '1' → logprob: -17.00084114074707
    10. '_Mod' → logprob: -17.37584114074707

Token 641: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -2.7968066206085496e-05
    2. 'int' → logprob: -10.625027656555176
    3. 'Mod' → logprob: -13.750027656555176
    4. '(M' → logprob: -14.250027656555176
    5. '(Mod' → logprob: -14.625027656555176
    6. '(' → logprob: -15.500027656555176
    7. '(get' → logprob: -15.625027656555176
    8. 'INT' → logprob: -15.625027656555176
    9. '(Int' → logprob: -16.000028610229492
    10. '(q' → logprob: -16.250028610229492

Token 642: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0031827057246118784
    2. '1' → logprob: -5.753182888031006
    3. '('' → logprob: -13.378182411193848
    4. '(
' → logprob: -14.503182411193848
    5. '
' → logprob: -14.753182411193848
    6. ' (' → logprob: -14.753182411193848
    7. '()' → logprob: -14.878182411193848
    8. '   ' → logprob: -15.128182411193848
    9. '`' → logprob: -15.253182411193848
    10. '("' → logprob: -15.753182411193848

Token 643: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5107177862082608e-05
    2. ' ' → logprob: -10.625024795532227
    3. ')' → logprob: -15.125024795532227
    4. '(' → logprob: -15.625024795532227
    5. '   ' → logprob: -15.625024795532227
    6. '
' → logprob: -17.375024795532227
    7. '  ' → logprob: -17.562524795532227
    8. '﻿' → logprob: -17.937524795532227
    9. 'from' → logprob: -18.312524795532227
    10. '

' → logprob: -18.312524795532227

Token 644: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.747814349073451e-05
    2. ')/' → logprob: -12.000017166137695
    3. '   ' → logprob: -13.000017166137695
    4. ')
' → logprob: -13.000017166137695
    5. ' )' → logprob: -13.000017166137695
    6. '")' → logprob: -13.250017166137695
    7. '')' → logprob: -14.125017166137695
    8. '()' → logprob: -14.625017166137695
    9. 'def' → logprob: -14.750017166137695
    10. '/' → logprob: -15.875017166137695

Token 645: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.11368845403194427
    2. ' /' → logprob: -2.2386884689331055
    3. ')' → logprob: -7.8636884689331055
    4. 'def' → logprob: -8.613688468933105
    5. '   ' → logprob: -8.863688468933105
    6. '/get' → logprob: -10.113688468933105
    7. '/
' → logprob: -10.738688468933105
    8. '*' → logprob: -11.363688468933105
    9. ')/' → logprob: -11.363688468933105
    10. '/__' → logprob: -11.613688468933105

Token 646: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.004078758880496025
    2. ' get' → logprob: -5.5040788650512695
    3. '(get' → logprob: -15.75407886505127
    4. ' ' → logprob: -16.379077911376953
    5. '   ' → logprob: -17.004077911376953
    6. '
' → logprob: -17.629077911376953
    7. 'def' → logprob: -18.004077911376953
    8. '	get' → logprob: -18.504077911376953
    9. '_get' → logprob: -19.129077911376953
    10. '  ' → logprob: -19.254077911376953

Token 647: '_power' (ID: 51623)
  Prédit: '_power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_power' → logprob: -0.001933277933858335
    2. 'power' → logprob: -6.2519330978393555
    3. 'Power' → logprob: -12.751933097839355
    4. '_pow' → logprob: -14.376933097839355
    5. 'get' → logprob: -14.626933097839355
    6. 'pow' → logprob: -14.876933097839355
    7. 'def' → logprob: -15.626933097839355
    8. ' power' → logprob: -16.376934051513672
    9. '_p' → logprob: -16.626934051513672
    10. '(power' → logprob: -17.126934051513672

Token 648: '_two' (ID: 54305)
  Prédit: '_two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_two' → logprob: -0.1607271134853363
    2. 'two' → logprob: -1.9107271432876587
    3. '_power' → logprob: -8.410727500915527
    4. 'Two' → logprob: -8.410727500915527
    5. 'power' → logprob: -10.285727500915527
    6. '(two' → logprob: -11.285727500915527
    7. ' two' → logprob: -12.035727500915527
    8. '2' → logprob: -13.160727500915527
    9. '```' → logprob: -14.035727500915527
    10. 'Power' → logprob: -14.035727500915527

Token 649: '(Mod' (ID: 147705)
  Prédit: '(Mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Mod' → logprob: -1.3856492842023727e-06
    2. 'Mod' → logprob: -14.000000953674316
    3. '```' → logprob: -14.875000953674316
    4. '(' → logprob: -15.875000953674316
    5. '(Mat' → logprob: -18.500001907348633
    6. '(Module' → logprob: -19.250001907348633
    7. '(
' → logprob: -19.625001907348633
    8. '(Mock' → logprob: -19.625001907348633
    9. '(M' → logprob: -20.125001907348633
    10. '
' → logprob: -20.125001907348633

Token 650: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -0.005275261588394642
    2. '(Mod' → logprob: -5.755275249481201
    3. 'int' → logprob: -6.255275249481201
    4. '(Int' → logprob: -9.13027572631836
    5. 'Ints' → logprob: -10.50527572631836
    6. 'Mod' → logprob: -11.75527572631836
    7. '(M' → logprob: -11.88027572631836
    8. 'INT' → logprob: -12.00527572631836
    9. '_int' → logprob: -12.88027572631836
    10. '<Int' → logprob: -13.25527572631836

Token 651: ',' (ID: 11)
  Prédit: '(Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Mod' → logprob: -0.0002478694950696081
    2. ',' → logprob: -9.000247955322266
    3. 'Mod' → logprob: -9.000247955322266
    4. ')' → logprob: -14.750247955322266
    5. '```' → logprob: -15.000247955322266
    6. '(' → logprob: -15.500247955322266
    7. '),' → logprob: -16.750247955322266
    8. '.Mod' → logprob: -17.125247955322266
    9. ')(' → logprob: -17.625247955322266
    10. ' Mod' → logprob: -17.625247955322266

Token 652: ' i' (ID: 575)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -4.23917081207037e-05
    2. '(Mod' → logprob: -10.750041961669922
    3. ' Mod' → logprob: -10.875041961669922
    4. 'i' → logprob: -13.500041961669922
    5. '_Mod' → logprob: -16.125041961669922
    6. 'MOD' → logprob: -16.125041961669922
    7. ' ' → logprob: -16.375041961669922
    8. '   ' → logprob: -16.500041961669922
    9. 'W' → logprob: -16.875041961669922
    10. '```' → logprob: -17.500041961669922

Token 653: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.08791670948266983
    2. ')' → logprob: -2.587916612625122
    3. '   ' → logprob: -4.712916851043701
    4. ')
' → logprob: -12.712916374206543
    5. ' )
' → logprob: -13.712916374206543
    6. ')`
' → logprob: -14.212916374206543
    7. '       ' → logprob: -14.337916374206543
    8. ')

' → logprob: -14.587916374206543
    9. ' ' → logprob: -14.837916374206543
    10. '  ' → logprob: -15.337916374206543

Token 654: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012832103529945016
    2. 'else' → logprob: -6.751283168792725
    3. ' else' → logprob: -9.126283645629883
    4. '```' → logprob: -12.876283645629883
    5. '       ' → logprob: -14.626283645629883
    6. '	else' → logprob: -15.126283645629883
    7. ')' → logprob: -15.251283645629883
    8. ':
' → logprob: -16.126283645629883
    9. '{
' → logprob: -16.376283645629883
    10. ':' → logprob: -16.376283645629883

Token 655: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07905711978673935
    2. 'else' (adapté à ' else') → logprob: -2.579057216644287
    3. ' else' → logprob: -8.704056739807129
    4. '	else' → logprob: -13.704056739807129
    5. 'return' → logprob: -16.454057693481445
    6. '```' → logprob: -16.704057693481445
    7. '       ' → logprob: -17.079057693481445
    8. 'elif' → logprob: -17.329057693481445
    9. '_else' → logprob: -17.704057693481445
    10. ')' → logprob: -17.704057693481445

Token 656: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015174767468124628
    2. '   ' → logprob: -6.501517295837402
    3. ' return' → logprob: -11.751517295837402
    4. 'return' → logprob: -12.876517295837402
    5. '           ' → logprob: -13.251517295837402
    6. ':' → logprob: -14.126517295837402
    7. ':
' → logprob: -14.251517295837402
    8. '     ' → logprob: -14.501517295837402
    9. '      ' → logprob: -14.751517295837402
    10. ' ' → logprob: -15.626517295837402

Token 657: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1339142918586731
    2. 'return' → logprob: -2.1339142322540283
    3. ' return' → logprob: -5.133914470672607
    4. '       ' → logprob: -6.883914470672607
    5. 'q' → logprob: -10.50891399383545
    6. ' ' → logprob: -12.13391399383545
    7. '	return' → logprob: -12.50891399383545
    8. ' q' → logprob: -12.63391399383545
    9. '     ' → logprob: -13.88391399383545
    10. '    ' → logprob: -13.88391399383545

Token 658: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0028342308942228556
    2. 'q' → logprob: -6.002834320068359
    3. ' return' → logprob: -8.00283432006836
    4. '       ' → logprob: -10.87783432006836
    5. '   ' → logprob: -12.37783432006836
    6. ' q' → logprob: -14.12783432006836
    7. '           ' → logprob: -17.00283432006836
    8. '```' → logprob: -17.00283432006836
    9. '	return' → logprob: -18.12783432006836
    10. '
' → logprob: -18.12783432006836

Token 659: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.001935065840370953
    2. ' q' → logprob: -6.251935005187988
    3. '   ' → logprob: -12.001935005187988
    4. '	q' → logprob: -15.876935005187988
    5. '_q' → logprob: -16.751935958862305
    6. '       ' → logprob: -17.626935958862305
    7. ' ' → logprob: -17.751935958862305
    8. '    ' → logprob: -18.001935958862305
    9. '(q' → logprob: -18.126935958862305
    10. ''q' → logprob: -18.501935958862305

Token 660: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11288992315530777
    2. ' +' → logprob: -2.2378900051116943
    3. '+c' → logprob: -10.237890243530273
    4. '+
' → logprob: -10.737890243530273
    5. ' +
' → logprob: -12.612890243530273
    6. ')' → logprob: -13.362890243530273
    7. '<|end|>' → logprob: -13.737890243530273
    8. '
' → logprob: -14.112890243530273
    9. ' plus' → logprob: -14.862890243530273
    10. '```' → logprob: -15.237890243530273

Token 661: ' cq' (ID: 151096)
  Prédit: 'cq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cq' → logprob: -0.0011813003802672029
    2. ' cq' → logprob: -6.751181125640869
    3. 'c' → logprob: -12.126181602478027
    4. 'cj' → logprob: -12.751181602478027
    5. '   ' → logprob: -13.376181602478027
    6. 'cg' → logprob: -14.626181602478027
    7. '
' → logprob: -15.251181602478027
    8. '(c' → logprob: -16.25118064880371
    9. '       ' → logprob: -16.37618064880371
    10. 'cu' → logprob: -17.00118064880371

Token 662: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.6119943857192993
    2. ' *' → logprob: -1.4869943857192993
    3. '*' → logprob: -1.9869943857192993
    4. '/' → logprob: -2.3619942665100098
    5. '<|end|>' → logprob: -9.361994743347168
    6. '   ' → logprob: -9.736994743347168
    7. ')' → logprob: -10.361994743347168
    8. ' ' → logprob: -10.486994743347168
    9. ' ' → logprob: -10.486994743347168
    10. '/c' → logprob: -10.986994743347168

Token 663: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.00033546582562848926
    2. ' get' → logprob: -8.000335693359375
    3. '(get' → logprob: -17.500335693359375
    4. '   ' → logprob: -18.625335693359375
    5. '	get' → logprob: -18.750335693359375
    6. ' ' → logprob: -20.250335693359375
    7. '       ' → logprob: -20.375335693359375
    8. '  ' → logprob: -20.875335693359375
    9. '    ' → logprob: -20.875335693359375
    10. '
' → logprob: -20.875335693359375

Token 664: '_power' (ID: 51623)
  Prédit: '_power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_power' → logprob: -0.0022944211959838867
    2. 'power' → logprob: -6.127294540405273
    3. 'Power' → logprob: -9.877294540405273
    4. 'get' → logprob: -10.627294540405273
    5. '_p' → logprob: -11.502294540405273
    6. '_process' → logprob: -11.627294540405273
    7. '_pow' → logprob: -12.377294540405273
    8. 'pow' → logprob: -12.877294540405273
    9. 'p' → logprob: -13.502294540405273
    10. 'powers' → logprob: -13.752294540405273

Token 665: '_two' (ID: 54305)
  Prédit: '_two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_two' → logprob: -0.10163518041372299
    2. 'two' → logprob: -2.351635217666626
    3. 'Two' → logprob: -6.851634979248047
    4. '(Mod' → logprob: -8.226634979248047
    5. '(two' → logprob: -10.601634979248047
    6. '2' → logprob: -10.851634979248047
    7. 'Int' → logprob: -11.226634979248047
    8. '_int' → logprob: -11.476634979248047
    9. ' two' → logprob: -11.601634979248047
    10. 'int' → logprob: -11.726634979248047

Token 666: '(Mod' (ID: 147705)
  Prédit: '(Mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Mod' → logprob: -5.200166469876422e-06
    2. '(' → logprob: -13.000004768371582
    3. '```' → logprob: -13.250004768371582
    4. 'Mod' → logprob: -14.000004768371582
    5. '(
' → logprob: -16.1250057220459
    6. '(Module' → logprob: -16.8750057220459
    7. ' (' → logprob: -17.6250057220459
    8. ')' → logprob: -17.8750057220459
    9. '(Mock' → logprob: -18.2500057220459
    10. ')(' → logprob: -18.6250057220459

Token 667: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -0.10675091296434402
    2. '(Mod' → logprob: -2.356750965118408
    3. 'Mod' → logprob: -5.106750965118408
    4. 'int' → logprob: -8.60675048828125
    5. '(Int' → logprob: -8.60675048828125
    6. 'Ints' → logprob: -9.85675048828125
    7. '(M' → logprob: -11.85675048828125
    8. '```' → logprob: -12.10675048828125
    9. '<Int' → logprob: -12.35675048828125
    10. ')' → logprob: -12.48175048828125

Token 668: ',' (ID: 11)
  Prédit: '(Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Mod' → logprob: -0.08906902372837067
    2. ',' → logprob: -2.464069128036499
    3. 'Mod' → logprob: -9.839069366455078
    4. ')' → logprob: -9.839069366455078
    5. '),' → logprob: -11.464069366455078
    6. ')(' → logprob: -12.589069366455078
    7. '(' → logprob: -13.214069366455078
    8. '```' → logprob: -13.464069366455078
    9. ' ,' → logprob: -13.589069366455078
    10. ',
' → logprob: -14.214069366455078

Token 669: ' i' (ID: 575)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.006722826045006514
    2. '(Mod' → logprob: -5.006722927093506
    3. ' Mod' → logprob: -11.881722450256348
    4. '_Mod' → logprob: -16.006723403930664
    5. '
' → logprob: -16.381723403930664
    6. '```' → logprob: -16.381723403930664
    7. '.Mod' → logprob: -16.506723403930664
    8. 'i' → logprob: -16.631723403930664
    9. '   ' → logprob: -17.006723403930664
    10. 'MOD' → logprob: -17.381723403930664

Token 670: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.049755782238208e-05
    2. ')
' → logprob: -10.62505054473877
    3. '   ' → logprob: -11.50005054473877
    4. ',' → logprob: -11.50005054473877
    5. ' )' → logprob: -12.25005054473877
    6. '       ' → logprob: -15.62505054473877
    7. ')}' → logprob: -16.000049591064453
    8. '),' → logprob: -16.125049591064453
    9. ')

' → logprob: -16.250049591064453
    10. ')i' → logprob: -16.375049591064453

Token 671: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08426446467638016
    2. '<|end|>' → logprob: -3.0842645168304443
    3. '```' → logprob: -3.5842645168304443
    4. '#' → logprob: -5.334264278411865
    5. '(' → logprob: -7.209264278411865
    6. '\' → logprob: -7.959264278411865
    7. '[' → logprob: -8.459264755249023
    8. '
' → logprob: -8.709264755249023
    9. ')' → logprob: -9.084264755249023
    10. 'n' → logprob: -9.209264755249023

Token 672: ' calc' (ID: 25691)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.25213098526000977
    2. 'main' → logprob: -1.5021309852600098
    3. 'solve' → logprob: -9.377130508422852
    4. 'def' → logprob: -9.752130508422852
    5. ' solve' → logprob: -9.877130508422852
    6. 'calculate' → logprob: -13.002130508422852
    7. ' def' → logprob: -13.627130508422852
    8. ' calculate' → logprob: -13.752130508422852
    9. 'compute' → logprob: -13.877130508422852
    10. '	main' → logprob: -14.127130508422852

Token 673: '_ans' (ID: 146254)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.8895622491836548
    2. '(' → logprob: -2.0145621299743652
    3. '_max' → logprob: -2.2645621299743652
    4. '_expected' → logprob: -2.6395621299743652
    5. '_result' → logprob: -3.0145621299743652
    6. 'def' → logprob: -3.1395621299743652
    7. '_prob' → logprob: -3.2645621299743652
    8. '(B' → logprob: -3.3895621299743652
    9. '_comb' → logprob: -3.3895621299743652
    10. '_com' → logprob: -3.5145621299743652

Token 674: '(p' (ID: 2407)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.5980685353279114
    2. '(N' → logprob: -1.0980684757232666
    3. '(A' → logprob: -3.0980684757232666
    4. '(i' → logprob: -3.2230684757232666
    5. '(' → logprob: -3.9730684757232666
    6. '(n' → logprob: -5.973068714141846
    7. '((' → logprob: -6.598068714141846
    8. '():' → logprob: -6.723068714141846
    9. '(a' → logprob: -6.848068714141846
    10. '(M' → logprob: -7.223068714141846

Token 675: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016198380617424846
    2. 'def' → logprob: -7.376619815826416
    3. ',i' → logprob: -8.876620292663574
    4. ' ,' → logprob: -9.376620292663574
    5. '_,' → logprob: -9.376620292663574
    6. ',B' → logprob: -9.501620292663574
    7. ',W' → logprob: -9.501620292663574
    8. ',p' → logprob: -9.626620292663574
    9. '):' → logprob: -9.751620292663574
    10. ')' → logprob: -9.751620292663574

Token 676: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0005001319805160165
    2. ' q' → logprob: -8.125499725341797
    3. 'Mod' → logprob: -8.625499725341797
    4. 'Q' → logprob: -12.125499725341797
    5. 'def' → logprob: -12.250499725341797
    6. ' Mod' → logprob: -13.375499725341797
    7. 'W' → logprob: -13.375499725341797
    8. 'B' → logprob: -13.500499725341797
    9. '   ' → logprob: -13.750499725341797
    10. 'get' → logprob: -14.000499725341797

Token 677: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05191323533654213
    2. '):' → logprob: -3.301913261413574
    3. '):
' → logprob: -4.301913261413574
    4. ')' → logprob: -9.551913261413574
    5. '   ' → logprob: -9.801913261413574
    6. '):
' → logprob: -10.676913261413574
    7. ' ,' → logprob: -10.676913261413574
    8. 'def' → logprob: -11.051913261413574
    9. ',
' → logprob: -11.176913261413574
    10. ',q' → logprob: -11.176913261413574

Token 678: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.04897065833210945
    2. 'B' → logprob: -3.1739706993103027
    3. 'W' → logprob: -6.173970699310303
    4. 'cp' → logprob: -6.673970699310303
    5. 'i' → logprob: -6.923970699310303
    6. 'p' → logprob: -7.798970699310303
    7. 'n' → logprob: -8.173970222473145
    8. ' Mod' → logprob: -8.548970222473145
    9. 'MOD' → logprob: -8.923970222473145
    10. 'N' → logprob: -9.423970222473145

Token 679: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -5.512236498361744e-07
    2. 'int' → logprob: -14.500000953674316
    3. 'In' → logprob: -20.0
    4. '_int' → logprob: -20.375
    5. 'INT' → logprob: -21.625
    6. 'Ints' → logprob: -21.875
    7. ' Int' → logprob: -22.125
    8. '_Int' → logprob: -22.75
    9. '[Int' → logprob: -23.5
    10. '(Int' → logprob: -24.625

Token 680: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005997528787702322
    2. '):
' → logprob: -5.130997657775879
    3. ')' → logprob: -10.255997657775879
    4. ',' → logprob: -10.505997657775879
    5. '   ' → logprob: -12.630997657775879
    6. ' ):' → logprob: -13.505997657775879
    7. '):
' → logprob: -13.755997657775879
    8. '):

' → logprob: -15.630997657775879
    9. ':' → logprob: -16.005996704101562
    10. ' ' → logprob: -16.130996704101562

Token 681: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009286141721531749
    2. 'return' → logprob: -7.0009284019470215
    3. ' return' → logprob: -11.12592887878418
    4. '   ' → logprob: -13.25092887878418
    5. '	return' → logprob: -15.50092887878418
    6. '```' → logprob: -15.62592887878418
    7. '       ' → logprob: -15.75092887878418
    8. '    
' → logprob: -16.62592887878418
    9. 'def' → logprob: -16.62592887878418
    10. '
' → logprob: -18.25092887878418

Token 682: ' numerator' (ID: 149054)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0005857991054654121
    2. '   ' → logprob: -7.500586032867432
    3. 'def' → logprob: -11.500585556030273
    4. 'ans' → logprob: -11.875585556030273
    5. ' return' → logprob: -12.000585556030273
    6. '
' → logprob: -12.750585556030273
    7. 'result' → logprob: -13.250585556030273
    8. 'res' → logprob: -13.750585556030273
    9. 'from' → logprob: -14.875585556030273
    10. 'if' → logprob: -15.125585556030273

Token 683: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04875347763299942
    2. ' =' → logprob: -3.048753499984741
    3. '   ' → logprob: -9.54875373840332
    4. 'def' → logprob: -10.04875373840332
    5. ',' → logprob: -10.42375373840332
    6. '(' → logprob: -12.17375373840332
    7. '=p' → logprob: -12.17375373840332
    8. '(p' → logprob: -12.67375373840332
    9. ')' → logprob: -13.17375373840332
    10. '=
' → logprob: -13.67375373840332

Token 684: ' Mod' (ID: 7191)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.1617676466703415
    2. 'Mod' → logprob: -2.5367677211761475
    3. '(p' → logprob: -3.6617677211761475
    4. '(' → logprob: -4.286767482757568
    5. '(Mod' → logprob: -4.286767482757568
    6. 'q' → logprob: -4.786767482757568
    7. '1' → logprob: -5.161767482757568
    8. 'get' → logprob: -7.036767482757568
    9. '((' → logprob: -7.286767482757568
    10. '(q' → logprob: -7.661767482757568

Token 685: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -8.041768160182983e-05
    2. '(p' → logprob: -9.500080108642578
    3. 'int' → logprob: -12.500080108642578
    4. '_int' → logprob: -14.500080108642578
    5. 'Ints' → logprob: -14.625080108642578
    6. 'One' → logprob: -14.875080108642578
    7. 'p' → logprob: -15.500080108642578
    8. '(' → logprob: -16.000080108642578
    9. '(Int' → logprob: -17.000080108642578
    10. '   ' → logprob: -17.500080108642578

Token 686: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0841042622923851
    2. '(p' → logprob: -3.084104299545288
    3. '1' → logprob: -4.334104061126709
    4. 'p' → logprob: -4.459104061126709
    5. '=' → logprob: -5.084104061126709
    6. '((' → logprob: -6.084104061126709
    7. ' =' → logprob: -7.459104061126709
    8. '(q' → logprob: -8.209104537963867
    9. '2' → logprob: -8.834104537963867
    10. '=p' → logprob: -8.959104537963867

Token 687: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2847674787044525
    2. 'p' → logprob: -1.784767508506775
    3. '2' → logprob: -3.0347673892974854
    4. '(' → logprob: -4.1597676277160645
    5. '0' → logprob: -4.9097676277160645
    6. 'q' → logprob: -6.1597676277160645
    7. '10' → logprob: -6.2847676277160645
    8. '(p' → logprob: -6.4097676277160645
    9. '100' → logprob: -7.4097676277160645
    10. '4' → logprob: -7.4097676277160645

Token 688: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002886783331632614
    2. '-' → logprob: -6.377886772155762
    3. ' -' → logprob: -7.377886772155762
    4. '   ' → logprob: -8.252886772155762
    5. ' )' → logprob: -9.252886772155762
    6. ')
' → logprob: -9.502886772155762
    7. '+' → logprob: -10.002886772155762
    8. ')-' → logprob: -10.252886772155762
    9. ',' → logprob: -11.377886772155762
    10. '-)' → logprob: -11.502886772155762

Token 689: ' +' (ID: 659)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04889017343521118
    2. ' -' → logprob: -3.0488901138305664
    3. '   ' → logprob: -8.798890113830566
    4. '/' → logprob: -9.798890113830566
    5. '-
' → logprob: -9.798890113830566
    6. '-p' → logprob: -11.423890113830566
    7. '+' → logprob: -11.548890113830566
    8. ')' → logprob: -12.048890113830566
    9. ' /' → logprob: -13.048890113830566
    10. 'def' → logprob: -13.548890113830566

Token 690: ' q' (ID: 2335)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.008061055094003677
    2. 'q' → logprob: -5.008060932159424
    3. '(p' → logprob: -7.008060932159424
    4. ' p' → logprob: -9.008061408996582
    5. 'Mod' → logprob: -9.258061408996582
    6. '(' → logprob: -9.633061408996582
    7. '2' → logprob: -9.633061408996582
    8. 'pq' → logprob: -10.758061408996582
    9. '(q' → logprob: -10.883061408996582
    10. '((' → logprob: -11.383061408996582

Token 691: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.008390100672841072
    2. ' -' → logprob: -4.883389949798584
    3. '+' → logprob: -7.508389949798584
    4. '*' → logprob: -8.383390426635742
    5. ' +' → logprob: -13.133390426635742
    6. '-p' → logprob: -14.008390426635742
    7. '-
' → logprob: -14.133390426635742
    8. '/' → logprob: -14.258390426635742
    9. ')' → logprob: -14.508390426635742
    10. '\-' → logprob: -15.258390426635742

Token 692: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00011844364780699834
    2. '(' → logprob: -10.125118255615234
    3. '(p' → logprob: -10.625118255615234
    4. ' p' → logprob: -10.750118255615234
    5. 'q' → logprob: -11.000118255615234
    6. '
' → logprob: -12.750118255615234
    7. '   ' → logprob: -12.750118255615234
    8. '2' → logprob: -12.750118255615234
    9. '1' → logprob: -13.875118255615234
    10. '  ' → logprob: -13.875118255615234

Token 693: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8755142092704773
    2. '<|end|>' → logprob: -0.8755142092704773
    3. '   ' → logprob: -2.500514268875122
    4. '
' → logprob: -3.125514268875122
    5. 'def' → logprob: -3.750514268875122
    6. '<|end|>' → logprob: -5.250514030456543
    7. ' /' → logprob: -6.375514030456543
    8. '.' → logprob: -6.750514030456543
    9. '*' → logprob: -7.000514030456543
    10. ')/(' → logprob: -7.000514030456543

Token 694: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009706564014777541
    2. 'return' → logprob: -7.125970840454102
    3. 'def' → logprob: -9.500970840454102
    4. ' return' → logprob: -10.000970840454102
    5. '
' → logprob: -11.250970840454102
    6. ')' → logprob: -11.500970840454102
    7. '	return' → logprob: -12.000970840454102
    8. '    
' → logprob: -12.875970840454102
    9. '       ' → logprob: -13.000970840454102
    10. ' numerator' → logprob: -13.125970840454102

Token 695: ' denominator' (ID: 101279)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.321039080619812
    2. '   ' → logprob: -1.571039080619812
    3. 'den' → logprob: -2.8210391998291016
    4. ' denominator' → logprob: -5.321039199829102
    5. 'def' → logprob: -7.071039199829102
    6. ' return' → logprob: -7.446039199829102
    7. 'numer' → logprob: -8.196039199829102
    8. 'ans' → logprob: -8.321039199829102
    9. '
' → logprob: -8.696039199829102
    10. '```' → logprob: -9.196039199829102

Token 696: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868711292743683
    2. ' =' → logprob: -1.136871099472046
    3. '   ' → logprob: -16.636871337890625
    4. ')' → logprob: -17.636871337890625
    5. ',' → logprob: -18.011871337890625
    6. ' ' → logprob: -18.011871337890625
    7. ' =
' → logprob: -18.136871337890625
    8. '=
' → logprob: -18.136871337890625
    9. '＝' → logprob: -18.386871337890625
    10. 'def' → logprob: -19.261871337890625

Token 697: ' get' (ID: 717)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.10599476844072342
    2. 'q' → logprob: -2.480994701385498
    3. 'get' → logprob: -5.105994701385498
    4. 'p' → logprob: -5.105994701385498
    5. ' Mod' → logprob: -6.105994701385498
    6. '(Mod' → logprob: -6.480994701385498
    7. 'make' → logprob: -8.105995178222656
    8. '(' → logprob: -8.855995178222656
    9. ' q' → logprob: -8.855995178222656
    10. '1' → logprob: -9.355995178222656

Token 698: '_half' (ID: 105284)
  Prédit: '_half'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_half' → logprob: -0.6350433826446533
    2. '_power' → logprob: -0.8850433826446533
    3. '_mod' → logprob: -3.5100433826446533
    4. '_one' → logprob: -3.8850433826446533
    5. '_two' → logprob: -6.135043144226074
    6. 'power' → logprob: -6.135043144226074
    7. 'half' → logprob: -6.635043144226074
    8. '(' → logprob: -8.010043144226074
    9. '_pow' → logprob: -8.760043144226074
    10. '(Mod' → logprob: -8.885043144226074

Token 699: '(Mod' (ID: 147705)
  Prédit: '(Mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Mod' → logprob: -7.3458322731312364e-06
    2. ' (' → logprob: -12.250007629394531
    3. '(' → logprob: -13.500007629394531
    4. '(Module' → logprob: -15.125007629394531
    5. '```' → logprob: -16.00000762939453
    6. '\(' → logprob: -16.12500762939453
    7. ')(' → logprob: -16.37500762939453
    8. '()(' → logprob: -16.50000762939453
    9. '(Mock' → logprob: -16.50000762939453
    10. ')' → logprob: -16.75000762939453

Token 700: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -0.010426062159240246
    2. '(Mod' → logprob: -4.760426044464111
    3. 'Mod' → logprob: -7.010426044464111
    4. 'int' → logprob: -7.010426044464111
    5. '(Int' → logprob: -13.63542652130127
    6. 'od' → logprob: -14.26042652130127
    7. 'Ints' → logprob: -14.51042652130127
    8. '_int' → logprob: -14.88542652130127
    9. 't' → logprob: -15.26042652130127
    10. '```' → logprob: -15.63542652130127

Token 701: ')
' (ID: 446)
  Prédit: '(Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Mod' → logprob: -0.11297330260276794
    2. ')' → logprob: -2.237973213195801
    3. ')
' → logprob: -9.2379732131958
    4. ')(' → logprob: -10.9879732131958
    5. ')**' → logprob: -11.4879732131958
    6. ' (' → logprob: -12.3629732131958
    7. 'Mod' → logprob: -12.8629732131958
    8. ')*' → logprob: -13.1129732131958
    9. ')

' → logprob: -13.2379732131958
    10. ').' → logprob: -13.3629732131958

Token 702: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010314998216927052
    2. '
' → logprob: -7.251031398773193
    3. ')' → logprob: -9.001031875610352
    4. 'return' → logprob: -9.501031875610352
    5. '    
' → logprob: -9.876031875610352
    6. 'def' → logprob: -10.626031875610352
    7. ' return' → logprob: -11.251031875610352
    8. ')
' → logprob: -11.251031875610352
    9. '```' → logprob: -11.876031875610352
    10. '	return' → logprob: -12.501031875610352

Token 703: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.25259509682655334
    2. '   ' → logprob: -1.502595067024231
    3. ' return' → logprob: -7.877594947814941
    4. '
' → logprob: -8.877594947814941
    5. '```' → logprob: -9.502594947814941
    6. 'ans' → logprob: -10.127594947814941
    7. '	return' → logprob: -11.752594947814941
    8. ')' → logprob: -11.877594947814941
    9. ')
' → logprob: -12.627594947814941
    10. 'answer' → logprob: -12.877594947814941

Token 704: ' numerator' (ID: 149054)
  Prédit: 'numer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numer' → logprob: -0.048592593520879745
    2. ' numerator' → logprob: -3.0485925674438477
    3. '   ' → logprob: -12.423592567443848
    4. '(n' → logprob: -14.298592567443848
    5. 'Numer' → logprob: -15.048592567443848
    6. '(' → logprob: -15.923592567443848
    7. ' numer' → logprob: -16.423593521118164
    8. ' (' → logprob: -17.048593521118164
    9. 'num' → logprob: -17.298593521118164
    10. 'n' → logprob: -17.423593521118164

Token 705: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.1271958202123642
    2. '/' → logprob: -2.1271958351135254
    3. '*' → logprob: -8.377195358276367
    4. ' *' → logprob: -10.752195358276367
    5. '   ' → logprob: -11.752195358276367
    6. ' ' → logprob: -13.377195358276367
    7. '```' → logprob: -13.752195358276367
    8. '
' → logprob: -14.127195358276367
    9. ',' → logprob: -14.377195358276367
    10. '/__' → logprob: -14.502195358276367

Token 706: ' denominator' (ID: 101279)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -3.547789674485102e-05
    2. ' denominator' → logprob: -10.250035285949707
    3. '   ' → logprob: -22.250036239624023
    4. ' den' → logprob: -22.250036239624023
    5. '_den' → logprob: -22.250036239624023
    6. '
' → logprob: -22.500036239624023
    7. '.den' → logprob: -22.875036239624023
    8. '```' → logprob: -23.625036239624023
    9. 'Den' → logprob: -23.875036239624023
    10. '(' → logprob: -24.625036239624023

Token 707: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.25034740567207336
    2. '<|end|>' → logprob: -1.875347375869751
    3. '
' → logprob: -2.750347375869751
    4. '

' → logprob: -6.37534761428833
    5. '#' → logprob: -7.37534761428833
    6. '\n' → logprob: -7.50034761428833
    7. '<|end|>' → logprob: -8.375347137451172
    8. ' def' → logprob: -8.625347137451172
    9. '\' → logprob: -8.750347137451172
    10. ')' → logprob: -8.750347137451172

Token 708: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005405236734077334
    2. '#' → logprob: -8.500540733337402
    3. '<|end|>' → logprob: -8.625540733337402
    4. '```' → logprob: -9.000540733337402
    5. '
' → logprob: -10.750540733337402
    6. '\' → logprob: -12.500540733337402
    7. ' def' → logprob: -13.500540733337402
    8. '\n' → logprob: -13.750540733337402
    9. 'n' → logprob: -13.875540733337402
    10. 'import' → logprob: -14.375540733337402

Token 709: ' print' (ID: 2123)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.030214844271540642
    2. 'main' → logprob: -3.530214786529541
    3. ' read' → logprob: -7.905214786529541
    4. 'read' → logprob: -9.9052152633667
    5. 'def' → logprob: -11.1552152633667
    6. ' solve' → logprob: -11.1552152633667
    7. ' run' → logprob: -12.5302152633667
    8. ' def' → logprob: -12.5302152633667
    9. 'solve' → logprob: -12.9052152633667
    10. ' process' → logprob: -13.5302152633667

Token 710: '_ans' (ID: 146254)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13303732872009277
    2. '_' → logprob: -3.5080373287200928
    3. '(ans' → logprob: -3.5080373287200928
    4. '_ans' → logprob: -3.5080373287200928
    5. '_answer' → logprob: -3.8830373287200928
    6. '()' → logprob: -5.758037567138672
    7. '_result' → logprob: -5.758037567138672
    8. '(_' → logprob: -6.508037567138672
    9. '_(' → logprob: -6.758037567138672
    10. '("("' → logprob: -7.008037567138672

Token 711: '(ans' (ID: 70054)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.25625109672546387
    2. '(' → logprob: -1.7562510967254639
    3. '()' → logprob: -3.381251096725464
    4. '(ans' → logprob: -4.131251335144043
    5. '("("' → logprob: -7.256251335144043
    6. '(_' → logprob: -7.756251335144043
    7. '(*' → logprob: -7.756251335144043
    8. '(def' → logprob: -8.381251335144043
    9. '():
' → logprob: -8.506251335144043
    10. ':' → logprob: -8.506251335144043

Token 712: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005029525142163038
    2. '):
' → logprob: -5.505029678344727
    3. ')' → logprob: -7.005029678344727
    4. '():' → logprob: -10.380029678344727
    5. ' ):' → logprob: -12.505029678344727
    6. '(ans' → logprob: -12.880029678344727
    7. '()' → logprob: -13.255029678344727
    8. ':' → logprob: -13.380029678344727
    9. '   ' → logprob: -13.755029678344727
    10. '():
' → logprob: -14.630029678344727

Token 713: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.38786056637763977
    2. '   ' → logprob: -1.1378605365753174
    3. ' print' → logprob: -7.5128607749938965
    4. '```' → logprob: -7.8878607749938965
    5. 'def' → logprob: -9.637860298156738
    6. '``' → logprob: -13.762860298156738
    7. '
' → logprob: -14.137860298156738
    8. '`' → logprob: -15.262860298156738
    9. '	print' → logprob: -16.137861251831055
    10. '(' → logprob: -16.262861251831055

Token 714: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: 0.0
    2. '   ' → logprob: -20.0
    3. ' print' → logprob: -22.25
    4. '```' → logprob: -22.25
    5. 'def' → logprob: -24.625
    6. 'println' → logprob: -27.0
    7. '
' → logprob: -27.125
    8. '	print' → logprob: -27.25
    9. '``' → logprob: -27.625
    10. '    
' → logprob: -28.125

Token 715: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0007105246186256409
    2. 'ans' → logprob: -7.250710487365723
    3. '(str' → logprob: -14.875710487365723
    4. '(f' → logprob: -16.25071144104004
    5. '(' → logprob: -16.87571144104004
    6. '	ans' → logprob: -17.25071144104004
    7. '(int' → logprob: -17.50071144104004
    8. '(answer' → logprob: -18.25071144104004
    9. ' ans' → logprob: -18.25071144104004
    10. 'Ans' → logprob: -20.00071144104004

Token 716: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.5776860184123507e-06
    2. '))' → logprob: -13.50000286102295
    3. ')`' → logprob: -14.87500286102295
    4. '())' → logprob: -15.00000286102295
    5. ' )' → logprob: -15.87500286102295
    6. '()' → logprob: -16.000001907348633
    7. '`)' → logprob: -16.500001907348633
    8. '')' → logprob: -17.125001907348633
    9. ')
' → logprob: -18.000001907348633
    10. '")' → logprob: -18.125001907348633

Token 717: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00010688089241739362
    2. '```' → logprob: -10.125106811523438
    3. 'if' → logprob: -10.625106811523438
    4. '#' → logprob: -11.125106811523438
    5. '<|end|>' → logprob: -12.000106811523438
    6. ' def' → logprob: -12.000106811523438
    7. '\' → logprob: -12.750106811523438
    8. 'import' → logprob: -13.125106811523438
    9. 'for' → logprob: -13.250106811523438
    10. '
' → logprob: -13.625106811523438

Token 718: ' process' (ID: 2273)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.12694385647773743
    2. 'main' → logprob: -2.126943826675415
    3. ' solve' → logprob: -11.876943588256836
    4. 'solve' → logprob: -12.376943588256836
    5. 'def' → logprob: -12.501943588256836
    6. ' def' → logprob: -14.876943588256836
    7. ' run' → logprob: -15.376943588256836
    8. '__' → logprob: -16.126943588256836
    9. '	main' → logprob: -16.501943588256836
    10. '_main' → logprob: -17.001943588256836

Token 719: '_loop' (ID: 40621)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07103605568408966
    2. '(' → logprob: -3.0710361003875732
    3. '_(' → logprob: -4.946035861968994
    4. 'def' → logprob: -5.571035861968994
    5. '_cp' → logprob: -5.946035861968994
    6. '_input' → logprob: -6.071035861968994
    7. '_code' → logprob: -6.946035861968994
    8. '_def' → logprob: -6.946035861968994
    9. '(i' → logprob: -7.821035861968994
    10. '_c' → logprob: -8.571036338806152

Token 720: '(B' (ID: 8409)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.3688572645187378
    2. '(' → logprob: -1.3688572645187378
    3. '(B' → logprob: -3.6188573837280273
    4. '(N' → logprob: -4.368857383728027
    5. '(n' → logprob: -4.618857383728027
    6. '(def' → logprob: -7.493857383728027
    7. '_(' → logprob: -7.868857383728027
    8. 'def' → logprob: -7.993857383728027
    9. '(I' → logprob: -7.993857383728027
    10. '(a' → logprob: -7.993857383728027

Token 721: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015002528380136937
    2. ' ,' → logprob: -9.500149726867676
    3. ',B' → logprob: -10.625149726867676
    4. '   ' → logprob: -10.875149726867676
    5. '):' → logprob: -10.875149726867676
    6. ',N' → logprob: -13.000149726867676
    7. '_,' → logprob: -13.125149726867676
    8. ',
' → logprob: -13.250149726867676
    9. ',W' → logprob: -13.625149726867676
    10. ',b' → logprob: -13.875149726867676

Token 722: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.002904966240748763
    2. ' W' → logprob: -5.877904891967773
    3. '   ' → logprob: -10.002904891967773
    4. ' ' → logprob: -11.252904891967773
    5. 'p' → logprob: -11.627904891967773
    6. 'M' → logprob: -12.127904891967773
    7. 'N' → logprob: -12.252904891967773
    8. ')' → logprob: -12.627904891967773
    9. 'def' → logprob: -13.127904891967773
    10. '```' → logprob: -13.502904891967773

Token 723: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014490410685539246
    2. '):' → logprob: -6.751449108123779
    3. '):
' → logprob: -8.376448631286621
    4. '   ' → logprob: -10.626448631286621
    5. ',i' → logprob: -11.876448631286621
    6. ',
' → logprob: -12.126448631286621
    7. ' ,' → logprob: -12.251448631286621
    8. '):
' → logprob: -13.501448631286621
    9. ',B' → logprob: -13.876448631286621
    10. ',N' → logprob: -14.126448631286621

Token 724: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.0641990527510643
    2. 'p' → logprob: -3.3141989707946777
    3. 'cp' → logprob: -4.439198970794678
    4. 'N' → logprob: -5.439198970794678
    5. 'n' → logprob: -6.189198970794678
    6. ')' → logprob: -6.939198970794678
    7. 'M' → logprob: -7.064198970794678
    8. ' Mod' → logprob: -7.189198970794678
    9. '):
' → logprob: -7.189198970794678
    10. 'i' → logprob: -7.314198970794678

Token 725: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: 0.0
    2. 'In' → logprob: -18.25
    3. '(Int' → logprob: -18.625
    4. ' Int' → logprob: -19.125
    5. 'int' → logprob: -19.375
    6. ')' → logprob: -19.875
    7. '	Int' → logprob: -21.0
    8. '[Int' → logprob: -21.875
    9. '_int' → logprob: -22.25
    10. '<Int' → logprob: -22.25

Token 726: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004575257655233145
    2. ',' → logprob: -5.504575252532959
    3. '):
' → logprob: -7.754575252532959
    4. '   ' → logprob: -10.129575729370117
    5. ')' → logprob: -10.879575729370117
    6. ':' → logprob: -12.754575729370117
    7. ',B' → logprob: -13.129575729370117
    8. '):
' → logprob: -13.879575729370117
    9. ' ):' → logprob: -14.004575729370117
    10. ',b' → logprob: -14.504575729370117

Token 727: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017202809685841203
    2. 'p' → logprob: -6.376720428466797
    3. ' p' → logprob: -11.126720428466797
    4. 'def' → logprob: -13.626720428466797
    5. '```' → logprob: -13.626720428466797
    6. '
' → logprob: -15.376720428466797
    7. '   ' → logprob: -15.751720428466797
    8. '       ' → logprob: -16.001720428466797
    9. '	p' → logprob: -16.126720428466797
    10. '    
' → logprob: -16.751720428466797

Token 728: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.056182410567998886
    2. 'cp' → logprob: -3.056182384490967
    3. '   ' → logprob: -5.056182384490967
    4. 'B' → logprob: -7.181182384490967
    5. 'b' → logprob: -8.931182861328125
    6. 'def' → logprob: -9.056182861328125
    7. 'i' → logprob: -10.306182861328125
    8. 'n' → logprob: -10.931182861328125
    9. 'max' → logprob: -11.056182861328125
    10. 'zero' → logprob: -11.306182861328125

Token 729: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16057413816452026
    2. ' =' → logprob: -1.910574197769165
    3. ',' → logprob: -8.035573959350586
    4. '   ' → logprob: -11.660573959350586
    5. ' ' → logprob: -11.910573959350586
    6. 'p' → logprob: -11.910573959350586
    7. '=p' → logprob: -13.660573959350586
    8. '  ' → logprob: -14.160573959350586
    9. '0' → logprob: -15.035573959350586
    10. ' p' → logprob: -15.160573959350586

Token 730: ' make' (ID: 1520)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.11312714219093323
    2. 'make' → logprob: -2.2381272315979004
    3. 'mod' → logprob: -8.238126754760742
    4. ' Mod' → logprob: -10.988126754760742
    5. ' make' → logprob: -11.488126754760742
    6. 'create' → logprob: -12.613126754760742
    7. 'get' → logprob: -12.988126754760742
    8. 'Make' → logprob: -13.113126754760742
    9. '0' → logprob: -14.113126754760742
    10. 'Modulo' → logprob: -14.363126754760742

Token 731: '_zero' (ID: 53468)
  Prédit: '_zero'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_zero' → logprob: -0.07907683402299881
    2. '_one' → logprob: -2.5790767669677734
    3. 'zero' → logprob: -8.704076766967773
    4. 'one' → logprob: -11.204076766967773
    5. 'Zero' → logprob: -13.204076766967773
    6. '_' → logprob: -13.204076766967773
    7. '0' → logprob: -13.829076766967773
    8. ' zero' → logprob: -14.704076766967773
    9. '_ZERO' → logprob: -14.704076766967773
    10. '_two' → logprob: -15.579076766967773

Token 732: '(Mod' (ID: 147705)
  Prédit: '(Mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Mod' → logprob: -1.5048530030981055e-06
    2. 'Mod' → logprob: -13.500001907348633
    3. '(Module' → logprob: -18.000001907348633
    4. ' (' → logprob: -18.125001907348633
    5. '(' → logprob: -18.750001907348633
    6. '```' → logprob: -19.375001907348633
    7. '
' → logprob: -19.500001907348633
    8. '   ' → logprob: -19.750001907348633
    9. ' ' → logprob: -20.000001907348633
    10. '(Model' → logprob: -20.125001907348633

Token 733: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -2.15310683415737e-05
    2. 'int' → logprob: -10.750021934509277
    3. 'In' → logprob: -19.37502098083496
    4. 'INT' → logprob: -19.50002098083496
    5. ' Int' → logprob: -19.62502098083496
    6. '(Int' → logprob: -20.25002098083496
    7. '_int' → logprob: -20.62502098083496
    8. '	Int' → logprob: -20.87502098083496
    9. '(Mod' → logprob: -21.12502098083496
    10. '   ' → logprob: -21.75002098083496

Token 734: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.029772937297821045
    2. ')' → logprob: -3.529772996902466
    3. ')
' → logprob: -11.029772758483887
    4. '   ' → logprob: -12.529772758483887
    5. ' )
' → logprob: -13.654772758483887
    6. ')

' → logprob: -14.529772758483887
    7. '())
' → logprob: -14.779772758483887
    8. ' ' → logprob: -15.154772758483887
    9. ')`
' → logprob: -15.779772758483887
    10. '),' → logprob: -17.529773712158203

Token 735: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10769618302583694
    2. 'q' → logprob: -2.607696294784546
    3. 'cq' → logprob: -3.607696294784546
    4. ' q' → logprob: -7.232696056365967
    5. ' cq' → logprob: -7.857696056365967
    6. 'cp' → logprob: -9.107696533203125
    7. ' ' → logprob: -11.607696533203125
    8. '	q' → logprob: -11.607696533203125
    9. 'c' → logprob: -11.607696533203125
    10. '  ' → logprob: -11.982696533203125

Token 736: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.00512014189735055
    2. 'cp' → logprob: -5.630120277404785
    3. 'cq' → logprob: -6.505120277404785
    4. '   ' → logprob: -11.755120277404785
    5. 'c' → logprob: -12.630120277404785
    6. 'for' → logprob: -12.880120277404785
    7. ' q' → logprob: -13.255120277404785
    8. 'i' → logprob: -13.630120277404785
    9. 'W' → logprob: -13.755120277404785
    10. 'pq' → logprob: -14.005120277404785

Token 737: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04858918860554695
    2. ' =' → logprob: -3.0485892295837402
    3. ',' → logprob: -13.298588752746582
    4. '=
' → logprob: -16.9235897064209
    5. '=}' → logprob: -17.4235897064209
    6. '=create' → logprob: -17.4235897064209
    7. '=

' → logprob: -17.7985897064209
    8. '<|end|>' → logprob: -17.7985897064209
    9. '＝' → logprob: -17.9235897064209
    10. ')' → logprob: -18.1735897064209

Token 738: ' make' (ID: 1520)
  Prédit: 'make'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'make' → logprob: -0.001930301426909864
    2. ' make' → logprob: -6.251930236816406
    3. '(make' → logprob: -13.376930236816406
    4. '	make' → logprob: -16.126930236816406
    5. ' ' → logprob: -17.501930236816406
    6. '   ' → logprob: -17.626930236816406
    7. 'mak' → logprob: -18.501930236816406
    8. '  ' → logprob: -19.501930236816406
    9. '0' → logprob: -19.501930236816406
    10. '.make' → logprob: -20.376930236816406

Token 739: '_zero' (ID: 53468)
  Prédit: '_zero'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_zero' → logprob: -0.576052725315094
    2. 'zero' → logprob: -0.826052725315094
    3. 'Zero' → logprob: -9.32605266571045
    4. 'one' → logprob: -11.82605266571045
    5. '_one' → logprob: -11.82605266571045
    6. ' zero' → logprob: -12.57605266571045
    7. 'zer' → logprob: -12.82605266571045
    8. '0' → logprob: -13.70105266571045
    9. 'zeros' → logprob: -14.45105266571045
    10. 'ze' → logprob: -14.57605266571045

Token 740: '(Mod' (ID: 147705)
  Prédit: '(Mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Mod' → logprob: -2.935296834039036e-06
    2. 'Mod' → logprob: -12.87500286102295
    3. '(' → logprob: -15.75000286102295
    4. '```' → logprob: -16.375003814697266
    5. '(Module' → logprob: -18.250003814697266
    6. '(
' → logprob: -19.000003814697266
    7. ' (' → logprob: -19.250003814697266
    8. '(mod' → logprob: -19.375003814697266
    9. '.Mod' → logprob: -19.500003814697266
    10. '(Model' → logprob: -19.500003814697266

Token 741: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -8.029847231227905e-05
    2. '(Mod' → logprob: -9.875080108642578
    3. 'int' → logprob: -10.750080108642578
    4. '(Int' → logprob: -11.875080108642578
    5. '[Int' → logprob: -16.125080108642578
    6. 'INT' → logprob: -16.500080108642578
    7. 'Mod' → logprob: -16.750080108642578
    8. '_int' → logprob: -16.875080108642578
    9. '<Int' → logprob: -17.375080108642578
    10. '	Int' → logprob: -17.375080108642578

Token 742: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4015887677669525
    2. '(Mod' → logprob: -1.151588797569275
    3. ')
' → logprob: -4.4015889167785645
    4. 'Mod' → logprob: -6.1515889167785645
    5. '   ' → logprob: -9.526588439941406
    6. ',' → logprob: -9.776588439941406
    7. ')

' → logprob: -9.901588439941406
    8. ')
' → logprob: -10.651588439941406
    9. '),' → logprob: -12.526588439941406
    10. ' ' → logprob: -12.651588439941406

Token 743: '   ' (ID: 271)
  Prédit: 'cp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cp' → logprob: -0.0484943613409996
    2. '   ' → logprob: -3.298494338989258
    3. 'for' → logprob: -4.673494338989258
    4. 'i' → logprob: -7.798494338989258
    5. 'B' → logprob: -7.923494338989258
    6. 'cq' → logprob: -9.173494338989258
    7. ' cp' → logprob: -9.798494338989258
    8. ' for' → logprob: -10.173494338989258
    9. '    
' → logprob: -11.423494338989258
    10. 'c' → logprob: -11.423494338989258

Token 744: ' cp' (ID: 27776)
  Prédit: 'cp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cp' (adapté à ' cp') → logprob: -0.0024228678084909916
    2. 'for' → logprob: -6.37742280960083
    3. 'B' → logprob: -7.87742280960083
    4. 'max' → logprob: -9.502423286437988
    5. 'i' → logprob: -10.002423286437988
    6. 'cq' → logprob: -10.127423286437988
    7. 'c' → logprob: -10.252423286437988
    8. '   ' → logprob: -10.252423286437988
    9. 'N' → logprob: -10.627423286437988
    10. 'M' → logprob: -10.752423286437988

Token 745: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932594180107117
    2. ' =' → logprob: -0.6932594180107117
    3. ',' → logprob: -9.318259239196777
    4. ' ' → logprob: -11.443259239196777
    5. '   ' → logprob: -12.443259239196777
    6. '  ' → logprob: -13.568259239196777
    7. '_' → logprob: -13.568259239196777
    8. 't' → logprob: -13.568259239196777
    9. 'p' → logprob: -13.693259239196777
    10. '	' → logprob: -15.193259239196777

Token 746: ' make' (ID: 1520)
  Prédit: 'make'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'make' → logprob: -0.0024515187833458185
    2. ' make' → logprob: -6.377451419830322
    3. 'Mod' → logprob: -7.252451419830322
    4. 'mod' → logprob: -11.00245189666748
    5. '(make' → logprob: -11.75245189666748
    6. 'Make' → logprob: -12.12745189666748
    7. '	make' → logprob: -12.37745189666748
    8. ' Mod' → logprob: -13.62745189666748
    9. '1' → logprob: -14.18995189666748
    10. 'mak' → logprob: -14.31495189666748

Token 747: '_zero' (ID: 53468)
  Prédit: '_one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_one' → logprob: -0.08797620981931686
    2. 'one' → logprob: -2.5879762172698975
    3. 'One' → logprob: -4.712975978851318
    4. 'Int' → logprob: -11.212976455688477
    5. '_int' → logprob: -11.212976455688477
    6. '1' → logprob: -11.587976455688477
    7. '(Mod' → logprob: -11.587976455688477
    8. 'Mod' → logprob: -11.962976455688477
    9. 'int' → logprob: -12.087976455688477
    10. ' one' → logprob: -12.962976455688477

Token 748: '(Mod' (ID: 147705)
  Prédit: '(Mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Mod' → logprob: -1.6405310816480778e-05
    2. 'Mod' → logprob: -11.250016212463379
    3. '(' → logprob: -13.000016212463379
    4. '```' → logprob: -14.875016212463379
    5. '<|end|>' → logprob: -16.000017166137695
    6. '(Module' → logprob: -16.500017166137695
    7. '[' → logprob: -16.750017166137695
    8. '(M' → logprob: -16.875017166137695
    9. '(mod' → logprob: -17.125017166137695
    10. '.Mod' → logprob: -17.125017166137695

Token 749: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -0.0001463299704482779
    2. 'int' → logprob: -8.87514591217041
    3. '(Int' → logprob: -12.62514591217041
    4. '(Mod' → logprob: -13.00014591217041
    5. ' Int' → logprob: -15.37514591217041
    6. 'In' → logprob: -16.375146865844727
    7. '	Int' → logprob: -16.500146865844727
    8. 'INT' → logprob: -16.500146865844727
    9. '[Int' → logprob: -16.750146865844727
    10. 'nt' → logprob: -16.875146865844727

Token 750: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31387296319007874
    2. ')
' → logprob: -1.3138729333877563
    3. '   ' → logprob: -7.438872814178467
    4. ')
' → logprob: -11.188873291015625
    5. ')

' → logprob: -12.313873291015625
    6. ' ' → logprob: -13.313873291015625
    7. ' )' → logprob: -14.563873291015625
    8. ' )
' → logprob: -14.563873291015625
    9. '(Mod' → logprob: -15.313873291015625
    10. '),' → logprob: -15.438873291015625

Token 751: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6933895945549011
    2. 'cq' → logprob: -0.6933895945549011
    3. ' cq' → logprob: -9.193389892578125
    4. 'for' → logprob: -10.318389892578125
    5. 'cw' → logprob: -10.818389892578125
    6. '  ' → logprob: -11.068389892578125
    7. 'cj' → logprob: -11.068389892578125
    8. '    
' → logprob: -11.568389892578125
    9. ' ' → logprob: -11.568389892578125
    10. '
' → logprob: -11.818389892578125

Token 752: ' cq' (ID: 151096)
  Prédit: 'cq'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cq' (adapté à ' cq') → logprob: -9.372294698550832e-06
    2. ' cq' → logprob: -12.500009536743164
    3. 'i' → logprob: -12.875009536743164
    4. 'cw' → logprob: -13.750009536743164
    5. '   ' → logprob: -14.875009536743164
    6. 'for' → logprob: -15.125009536743164
    7. 'pq' → logprob: -15.250009536743164
    8. 'c' → logprob: -15.625009536743164
    9. 'p' → logprob: -15.750009536743164
    10. 'B' → logprob: -15.875009536743164

Token 753: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04858918860554695
    2. ' =' → logprob: -3.0485892295837402
    3. '=create' → logprob: -14.048588752746582
    4. ',' → logprob: -14.923588752746582
    5. '=
' → logprob: -15.923588752746582
    6. '<|end|>' → logprob: -16.0485897064209
    7. '   ' → logprob: -16.1735897064209
    8. ')' → logprob: -16.1735897064209
    9. '(' → logprob: -16.6735897064209
    10. ' ' → logprob: -17.0485897064209

Token 754: ' make' (ID: 1520)
  Prédit: 'make'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'make' → logprob: -0.000158842682139948
    2. ' make' → logprob: -8.75015926361084
    3. '(make' → logprob: -15.00015926361084
    4. '	make' → logprob: -17.000158309936523
    5. 'mak' → logprob: -18.875158309936523
    6. 'mod' → logprob: -19.500158309936523
    7. 'Mod' → logprob: -20.250158309936523
    8. 'create' → logprob: -20.375158309936523
    9. '.make' → logprob: -20.750158309936523
    10. ' ' → logprob: -21.375158309936523

Token 755: '_zero' (ID: 53468)
  Prédit: '_zero'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_zero' → logprob: -0.04065942391753197
    2. 'zero' → logprob: -3.2906594276428223
    3. 'Zero' → logprob: -7.165659427642822
    4. '(Mod' → logprob: -7.165659427642822
    5. '(make' → logprob: -7.165659427642822
    6. 'make' → logprob: -8.165658950805664
    7. '0' → logprob: -12.165658950805664
    8. '(M' → logprob: -13.415658950805664
    9. 'zeros' → logprob: -13.915658950805664
    10. '_mod' → logprob: -14.165658950805664

Token 756: '(Mod' (ID: 147705)
  Prédit: '(Mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Mod' → logprob: -6.704273118884885e-07
    2. 'Mod' → logprob: -14.375000953674316
    3. '(' → logprob: -18.625
    4. '```' → logprob: -19.5
    5. '(Module' → logprob: -19.875
    6. ' (' → logprob: -19.875
    7. '(mod' → logprob: -20.625
    8. '.Mod' → logprob: -20.875
    9. '(Mock' → logprob: -20.875
    10. '(Model' → logprob: -21.625

Token 757: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -8.180258191714529e-06
    2. 'int' → logprob: -12.250008583068848
    3. '(Int' → logprob: -13.250008583068848
    4. '(Mod' → logprob: -13.875008583068848
    5. 'In' → logprob: -15.875008583068848
    6. 'INT' → logprob: -16.50000762939453
    7. 'Mod' → logprob: -16.62500762939453
    8. ' Int' → logprob: -16.62500762939453
    9. '<Int' → logprob: -16.87500762939453
    10. '	Int' → logprob: -17.00000762939453

Token 758: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014729962684214115
    2. ')
' → logprob: -4.264729976654053
    3. '   ' → logprob: -7.514729976654053
    4. '()' → logprob: -11.139729499816895
    5. ')

' → logprob: -13.139729499816895
    6. ')
' → logprob: -13.889729499816895
    7. 'def' → logprob: -14.014729499816895
    8. '())' → logprob: -14.139729499816895
    9. ' ' → logprob: -14.389729499816895
    10. ' )' → logprob: -14.389729499816895

Token 759: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02787243016064167
    2. 'for' → logprob: -4.027872562408447
    3. ' for' → logprob: -4.652872562408447
    4. '
' → logprob: -9.277872085571289
    5. 'n' → logprob: -10.902872085571289
    6. 'i' → logprob: -11.777872085571289
    7. '```' → logprob: -11.777872085571289
    8. '    
' → logprob: -11.902872085571289
    9. ' i' → logprob: -13.152872085571289
    10. '	for' → logprob: -13.277872085571289

Token 760: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.004162571858614683
    2. '   ' → logprob: -6.254162788391113
    3. 'i' → logprob: -7.379162788391113
    4. 'MOD' → logprob: -7.504162788391113
    5. 'B' → logprob: -7.879162788391113
    6. 'n' → logprob: -8.379162788391113
    7. ' for' → logprob: -8.504162788391113
    8. 'mod' → logprob: -9.129162788391113
    9. 'N' → logprob: -9.754162788391113
    10. 'M' → logprob: -10.754162788391113

Token 761: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.006139241624623537
    2. 'i' → logprob: -5.131139278411865
    3. ' ' → logprob: -9.006138801574707
    4. ' _' → logprob: -10.006138801574707
    5. '_' → logprob: -10.756138801574707
    6. ' range' → logprob: -11.131138801574707
    7. ')' → logprob: -13.131138801574707
    8. '_i' → logprob: -14.006138801574707
    9. '   ' → logprob: -14.506138801574707
    10. ' in' → logprob: -14.506138801574707

Token 762: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01611953228712082
    2. 'in' → logprob: -4.141119480133057
    3. ' ' → logprob: -10.141119956970215
    4. '	in' → logprob: -11.391119956970215
    5. 'range' → logprob: -11.891119956970215
    6. '   ' → logprob: -12.266119956970215
    7. ' i' → logprob: -12.266119956970215
    8. ' range' → logprob: -12.391119956970215
    9. ' _' → logprob: -12.891119956970215
    10. ',' → logprob: -13.391119956970215

Token 763: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00318353995680809
    2. ' range' → logprob: -5.753183364868164
    3. '(range' → logprob: -12.253183364868164
    4. 'B' → logprob: -14.753183364868164
    5. '   ' → logprob: -15.253183364868164
    6. ' ' → logprob: -15.503183364868164
    7. '	range' → logprob: -16.003183364868164
    8. 'rang' → logprob: -16.753183364868164
    9. 'b' → logprob: -17.378183364868164
    10. '  ' → logprob: -17.378183364868164

Token 764: '(' (ID: 7)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.3190484941005707
    2. '(' → logprob: -1.319048523902893
    3. '(W' → logprob: -5.1940484046936035
    4. '(max' → logprob: -9.194048881530762
    5. '(
' → logprob: -10.069048881530762
    6. '((' → logprob: -10.069048881530762
    7. ' (' → logprob: -11.819048881530762
    8. '(b' → logprob: -12.194048881530762
    9. '   ' → logprob: -12.569048881530762
    10. '(C' → logprob: -13.194048881530762

Token 765: '1' (ID: 16)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.5546364784240723
    2. '1' → logprob: -1.4296364784240723
    3. 'W' → logprob: -2.3046364784240723
    4. 'max' → logprob: -2.9296364784240723
    5. '2' → logprob: -3.6796364784240723
    6. '(' → logprob: -6.054636478424072
    7. '100' → logprob: -6.304636478424072
    8. '(B' → logprob: -6.804636478424072
    9. '0' → logprob: -6.929636478424072
    10. '(max' → logprob: -7.429636478424072

Token 766: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008984813466668129
    2. ' ,' → logprob: -7.500898361206055
    3. ',B' → logprob: -8.000898361206055
    4. '(B' → logprob: -12.375898361206055
    5. '   ' → logprob: -13.000898361206055
    6. ',
' → logprob: -13.750898361206055
    7. 'B' → logprob: -14.250898361206055
    8. ',W' → logprob: -14.500898361206055
    9. '(' → logprob: -15.125898361206055
    10. ',len' → logprob: -15.625898361206055

Token 767: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.01620926894247532
    2. ' B' → logprob: -5.016209125518799
    3. 'max' → logprob: -5.641209125518799
    4. '100' → logprob: -5.891209125518799
    5. '2' → logprob: -6.266209125518799
    6. '   ' → logprob: -8.391209602355957
    7. ' ' → logprob: -8.641209602355957
    8. '10' → logprob: -8.641209602355957
    9. '101' → logprob: -8.641209602355957
    10. ' max' → logprob: -8.891209602355957

Token 768: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5231651067733765
    2. ' +' → logprob: -0.8981651067733765
    3. '   ' → logprob: -11.148164749145508
    4. '+B' → logprob: -11.273164749145508
    5. ',' → logprob: -12.398164749145508
    6. '):
' → logprob: -13.148164749145508
    7. ')' → logprob: -13.523164749145508
    8. '[' → logprob: -13.773164749145508
    9. ' +
' → logprob: -14.273164749145508
    10. '+
' → logprob: -14.273164749145508

Token 769: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.06828449666500092
    2. '1' → logprob: -4.193284511566162
    3. 'B' → logprob: -4.318284511566162
    4. '100' → logprob: -4.443284511566162
    5. ' W' → logprob: -4.443284511566162
    6. '2' → logprob: -5.318284511566162
    7. ' ' → logprob: -5.818284511566162
    8. 'max' → logprob: -5.943284511566162
    9. '101' → logprob: -7.193284511566162
    10. '10' → logprob: -7.193284511566162

Token 770: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03815222531557083
    2. ' +' → logprob: -3.2881522178649902
    3. '):' → logprob: -9.913152694702148
    4. '   ' → logprob: -10.538152694702148
    5. '):
' → logprob: -10.788152694702148
    6. '+B' → logprob: -11.538152694702148
    7. '1' → logprob: -13.788152694702148
    8. '+
' → logprob: -14.163152694702148
    9. '()+' → logprob: -14.663152694702148
    10. ' ' → logprob: -15.163152694702148

Token 771: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1398757123970427e-05
    2. ' ' → logprob: -12.125011444091797
    3. '2' → logprob: -12.375011444091797
    4. 'W' → logprob: -13.875011444091797
    5. '10' → logprob: -14.750011444091797
    6. '100' → logprob: -16.125011444091797
    7. '   ' → logprob: -16.375011444091797
    8. '11' → logprob: -16.750011444091797
    9. '101' → logprob: -16.875011444091797
    10. '3' → logprob: -17.125011444091797

Token 772: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.930552313453518e-05
    2. 'W' → logprob: -10.000049591064453
    3. '2' → logprob: -13.000049591064453
    4. ' ' → logprob: -13.750049591064453
    5. '10' → logprob: -15.750049591064453
    6. 'B' → logprob: -16.250049591064453
    7. '   ' → logprob: -16.375049591064453
    8. '11' → logprob: -17.125049591064453
    9. '
' → logprob: -17.625049591064453
    10. '3' → logprob: -17.875049591064453

Token 773: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00690990686416626
    2. '):
' → logprob: -5.5069098472595215
    3. ':' → logprob: -5.8819098472595215
    4. '():' → logprob: -11.25691032409668
    5. '   ' → logprob: -11.75691032409668
    6. ')' → logprob: -12.25691032409668
    7. ',' → logprob: -12.50691032409668
    8. ' ):' → logprob: -12.50691032409668
    9. '}:' → logprob: -13.63191032409668
    10. ']:' → logprob: -14.00691032409668

Token 774: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002957783581223339
    2. '<|end|>' → logprob: -8.500295639038086
    3. '   ' → logprob: -10.250295639038086
    4. ' if' → logprob: -11.125295639038086
    5. '```' → logprob: -11.750295639038086
    6. ',' → logprob: -12.125295639038086
    7. '	   ' → logprob: -12.625295639038086
    8. 'if' → logprob: -12.750295639038086
    9. '	' → logprob: -12.750295639038086
    10. '<|end|>' → logprob: -12.875295639038086

Token 775: ' ans' (ID: 3345)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5375528931617737
    2. 'cp' → logprob: -0.9125528931617737
    3. 'if' → logprob: -4.912552833557129
    4. ' cp' → logprob: -5.162552833557129
    5. '	cp' → logprob: -7.787552833557129
    6. '   ' → logprob: -7.912552833557129
    7. ' if' → logprob: -8.287552833557129
    8. '(cp' → logprob: -9.287552833557129
    9. '_cp' → logprob: -10.037552833557129
    10. '           ' → logprob: -10.537552833557129

Token 776: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09330790489912033
    2. '=' → logprob: -2.4683079719543457
    3. ',' → logprob: -5.468307971954346
    4. '   ' → logprob: -9.843307495117188
    5. ' +=' → logprob: -10.468307495117188
    6. ' ' → logprob: -11.343307495117188
    7. ' ,' → logprob: -11.468307495117188
    8. '       ' → logprob: -11.718307495117188
    9. 'p' → logprob: -12.218307495117188
    10. '    ' → logprob: -12.468307495117188

Token 777: ' calc' (ID: 25691)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.07256991416215897
    2. ' process' → logprob: -2.6975698471069336
    3. 'update' → logprob: -7.197569847106934
    4. 'p' → logprob: -7.322569847106934
    5. 'Mod' → logprob: -7.447569847106934
    6. '0' → logprob: -8.822569847106934
    7. '(process' → logprob: -9.447569847106934
    8. ' p' → logprob: -9.697569847106934
    9. 'make' → logprob: -9.697569847106934
    10. ' update' → logprob: -10.072569847106934

Token 778: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -1.7432603272027336e-06
    2. 'ans' → logprob: -14.375001907348633
    3. '_answer' → logprob: -15.500001907348633
    4. '_ant' → logprob: -15.500001907348633
    5. '_an' → logprob: -15.625001907348633
    6. '_' → logprob: -16.125001907348633
    7. '(ans' → logprob: -16.250001907348633
    8. '_ann' → logprob: -16.500001907348633
    9. '(p' → logprob: -16.625001907348633
    10. '__' → logprob: -17.000001907348633

Token 779: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0003258103388361633
    2. '(' → logprob: -8.625326156616211
    3. 'p' → logprob: -9.000326156616211
    4. '(
' → logprob: -11.125326156616211
    5. '(q' → logprob: -12.125326156616211
    6. '((' → logprob: -14.125326156616211
    7. ' (' → logprob: -14.250326156616211
    8. '(update' → logprob: -15.500326156616211
    9. '(process' → logprob: -16.12532615661621
    10. ')' → logprob: -16.25032615661621

Token 780: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0027385433204472065
    2. ',q' → logprob: -6.0027384757995605
    3. ' ,' → logprob: -8.877738952636719
    4. ',
' → logprob: -9.752738952636719
    5. 'q' → logprob: -10.877738952636719
    6. '   ' → logprob: -11.502738952636719
    7. '       ' → logprob: -11.627738952636719
    8. '+' → logprob: -11.877738952636719
    9. '=' → logprob: -12.627738952636719
    10. ')' → logprob: -12.752738952636719

Token 781: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00023107275774236768
    2. ' q' → logprob: -8.37523078918457
    3. 'get' → logprob: -16.12523078918457
    4. '
' → logprob: -16.37523078918457
    5. '   ' → logprob: -16.62523078918457
    6. '	q' → logprob: -16.62523078918457
    7. ' ' → logprob: -17.12523078918457
    8. '       ' → logprob: -17.37523078918457
    9. '    ' → logprob: -17.37523078918457
    10. '  ' → logprob: -18.25023078918457

Token 782: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008681101026013494
    2. ')' → logprob: -7.375868320465088
    3. ')
' → logprob: -9.25086784362793
    4. ' ,' → logprob: -9.87586784362793
    5. '       ' → logprob: -10.12586784362793
    6. ',
' → logprob: -10.75086784362793
    7. '   ' → logprob: -11.25086784362793
    8. '           ' → logprob: -12.75086784362793
    9. '(Mod' → logprob: -13.12586784362793
    10. '),' → logprob: -13.37586784362793

Token 783: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -5.5577775128767826e-06
    2. ' Mod' → logprob: -12.125005722045898
    3. '(Mod' → logprob: -18.2500057220459
    4. '
' → logprob: -19.3750057220459
    5. '_mod' → logprob: -19.3750057220459
    6. '   ' → logprob: -20.3750057220459
    7. ' ' → logprob: -20.5000057220459
    8. 'mod' → logprob: -21.1250057220459
    9. '_Mod' → logprob: -21.1250057220459
    10. 'MOD' → logprob: -22.1250057220459

Token 784: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -4.842555426876061e-06
    2. 'int' → logprob: -12.250004768371582
    3. '_int' → logprob: -18.7500057220459
    4. ' Int' → logprob: -19.1250057220459
    5. 'In' → logprob: -19.1250057220459
    6. 'INT' → logprob: -20.0000057220459
    7. '(Int' → logprob: -20.5000057220459
    8. '_Int' → logprob: -20.6250057220459
    9. '[Int' → logprob: -20.6250057220459
    10. '<Int' → logprob: -21.0000057220459

Token 785: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4741534888744354
    2. ')
' → logprob: -0.9741535186767578
    3. '       ' → logprob: -10.474153518676758
    4. ')
' → logprob: -10.724153518676758
    5. ')

' → logprob: -10.974153518676758
    6. '   ' → logprob: -12.099153518676758
    7. ' )
' → logprob: -14.099153518676758
    8. ')`
' → logprob: -14.599153518676758
    9. ' )' → logprob: -14.724153518676758
    10. ' ' → logprob: -15.349153518676758

Token 786: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015253332676365972
    2. 'p' → logprob: -7.501525402069092
    3. 'cp' → logprob: -7.876525402069092
    4. '   ' → logprob: -8.376524925231934
    5. ' cp' → logprob: -9.376524925231934
    6. '<|end|>' → logprob: -9.501524925231934
    7. ' p' → logprob: -9.626524925231934
    8. '
' → logprob: -10.376524925231934
    9. ',' → logprob: -10.501524925231934
    10. '        
' → logprob: -10.751524925231934

Token 787: ' print' (ID: 2123)
  Prédit: 'cp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cp' → logprob: -0.10225708037614822
    2. 'p' → logprob: -3.602257013320923
    3. '       ' → logprob: -3.602257013320923
    4. 'if' → logprob: -3.852257013320923
    5. 'print' (adapté à ' print') → logprob: -3.977257013320923
    6. '   ' → logprob: -6.477257251739502
    7. 'i' → logprob: -7.977257251739502
    8. 'B' → logprob: -8.477256774902344
    9. '        
' → logprob: -8.727256774902344
    10. '
' → logprob: -8.977256774902344

Token 788: '_ans' (ID: 146254)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.007297667674720287
    2. '(' → logprob: -5.632297515869141
    3. '()' → logprob: -5.632297515869141
    4. 'ans' → logprob: -9.63229751586914
    5. '_ans' → logprob: -11.25729751586914
    6. '(f' → logprob: -11.38229751586914
    7. '(
' → logprob: -12.25729751586914
    8. '("' → logprob: -12.50729751586914
    9. '('' → logprob: -12.75729751586914
    10. 'Ans' → logprob: -13.00729751586914

Token 789: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.306760805164231e-05
    2. 'ans' → logprob: -11.25001335144043
    3. '(
' → logprob: -19.00001335144043
    4. '(' → logprob: -19.75001335144043
    5. '(answer' → logprob: -19.75001335144043
    6. '	ans' → logprob: -20.25001335144043
    7. '(an' → logprob: -20.50001335144043
    8. '(abs' → logprob: -21.62501335144043
    9. ' ans' → logprob: -21.87501335144043
    10. ' (' → logprob: -23.37501335144043

Token 790: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7082095742225647
    2. ')
' → logprob: -0.7082095742225647
    3. '       ' → logprob: -4.20820951461792
    4. '   ' → logprob: -10.583209991455078
    5. ')
' → logprob: -11.208209991455078
    6. ',' → logprob: -11.333209991455078
    7. '
' → logprob: -11.958209991455078
    8. ')

' → logprob: -12.208209991455078
    9. ')`
' → logprob: -13.083209991455078
    10. '<|end|>' → logprob: -13.083209991455078

Token 791: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05715889483690262
    2. '   ' → logprob: -4.182158946990967
    3. '        
' → logprob: -4.182158946990967
    4. '
' → logprob: -4.807158946990967
    5. '	' → logprob: -4.932158946990967
    6. '<|end|>' → logprob: -5.557158946990967
    7. '    
' → logprob: -6.182158946990967
    8. '  
' → logprob: -7.057158946990967
    9. '		
' → logprob: -7.182158946990967
    10. '           ' → logprob: -8.557158470153809

Token 792: ' cp' (ID: 27776)
  Prédit: 'cp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cp' (adapté à ' cp') → logprob: -0.07548176497220993
    2. '       ' → logprob: -2.950481653213501
    3. 'if' → logprob: -3.950481653213501
    4. ' cp' → logprob: -7.82548189163208
    5. '   ' → logprob: -8.075481414794922
    6. 'p' → logprob: -8.450481414794922
    7. ' if' → logprob: -9.950481414794922
    8. '	cp' → logprob: -10.075481414794922
    9. 'i' → logprob: -10.325481414794922
    10. '(cp' → logprob: -10.700481414794922

Token 793: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18249864876270294
    2. '=' → logprob: -1.8074986934661865
    3. ' *=' → logprob: -6.307498455047607
    4. ' +=' → logprob: -7.307498455047607
    5. ',' → logprob: -8.932498931884766
    6. ' ' → logprob: -10.182498931884766
    7. '*=' → logprob: -10.932498931884766
    8. ' <<=' → logprob: -11.182498931884766
    9. ' *' → logprob: -11.807498931884766
    10. '+=' → logprob: -11.932498931884766

Token 794: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.008877855725586414
    2. ' process' → logprob: -4.758877754211426
    3. 'update' → logprob: -8.258877754211426
    4. ' update' → logprob: -13.008877754211426
    5. '(process' → logprob: -13.508877754211426
    6. '	process' → logprob: -15.883877754211426
    7. 'cp' → logprob: -16.383878707885742
    8. 'calc' → logprob: -16.633878707885742
    9. '   ' → logprob: -16.633878707885742
    10. 'proces' → logprob: -16.758878707885742

Token 795: '_cp' (ID: 96857)
  Prédit: '_cp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cp' → logprob: -0.011707721278071404
    2. '_c' → logprob: -4.886707782745361
    3. 'cp' → logprob: -5.511707782745361
    4. 'c' → logprob: -10.511707305908203
    5. '(cp' → logprob: -11.511707305908203
    6. '_p' → logprob: -13.011707305908203
    7. '_cpp' → logprob: -13.136707305908203
    8. 'Cp' → logprob: -13.261707305908203
    9. '(i' → logprob: -13.886707305908203
    10. '_loop' → logprob: -13.886707305908203

Token 796: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -6.034592388459714e-06
    2. '(' → logprob: -12.375005722045898
    3. 'i' → logprob: -13.625005722045898
    4. ' (' → logprob: -14.875005722045898
    5. '(I' → logprob: -17.2500057220459
    6. '```' → logprob: -17.6250057220459
    7. '(
' → logprob: -17.7500057220459
    8. ' i' → logprob: -18.1250057220459
    9. '[i' → logprob: -19.1250057220459
    10. '   ' → logprob: -19.5000057220459

Token 797: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021145737264305353
    2. ',B' → logprob: -6.877114772796631
    3. '(i' → logprob: -7.377114772796631
    4. ' ,' → logprob: -8.502114295959473
    5. ',i' → logprob: -8.502114295959473
    6. '(B' → logprob: -10.877114295959473
    7. 'B' → logprob: -11.752114295959473
    8. '(' → logprob: -11.877114295959473
    9. '=' → logprob: -12.877114295959473
    10. '   ' → logprob: -13.002114295959473

Token 798: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -3.7697225252486533e-06
    2. ' B' → logprob: -12.500003814697266
    3. '
' → logprob: -19.375003814697266
    4. '   ' → logprob: -19.750003814697266
    5. '	B' → logprob: -20.125003814697266
    6. 'b' → logprob: -20.625003814697266
    7. '(B' → logprob: -20.750003814697266
    8. '>B' → logprob: -20.875003814697266
    9. '```' → logprob: -21.625003814697266
    10. '_B' → logprob: -21.875003814697266

Token 799: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5690089639974758e-05
    2. ',c' → logprob: -11.875015258789062
    3. ' ,' → logprob: -12.375015258789062
    4. ')' → logprob: -14.000015258789062
    5. '   ' → logprob: -14.125015258789062
    6. ',B' → logprob: -14.375015258789062
    7. 'cp' → logprob: -14.750015258789062
    8. '(cp' → logprob: -14.875015258789062
    9. ',p' → logprob: -14.875015258789062
    10. '       ' → logprob: -15.125015258789062

Token 800: ' cp' (ID: 27776)
  Prédit: 'cp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cp' → logprob: -0.00038991993642412126
    2. ' cp' → logprob: -7.87539005279541
    3. 'p' → logprob: -11.87539005279541
    4. '(cp' → logprob: -13.12539005279541
    5. '	cp' → logprob: -14.50039005279541
    6. '_cp' → logprob: -16.250389099121094
    7. 'Cp' → logprob: -16.375389099121094
    8. 'cq' → logprob: -16.375389099121094
    9. '.cp' → logprob: -17.125389099121094
    10. '
' → logprob: -17.625389099121094

Token 801: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7252845029579476e-05
    2. ',B' → logprob: -11.250027656555176
    3. ' ,' → logprob: -12.000027656555176
    4. '   ' → logprob: -12.875027656555176
    5. 'B' → logprob: -13.375027656555176
    6. ')' → logprob: -13.500027656555176
    7. ',i' → logprob: -14.250027656555176
    8. ',
' → logprob: -14.500027656555176
    9. '       ' → logprob: -15.125027656555176
    10. '‌,' → logprob: -15.625027656555176

Token 802: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.0001234428636962548
    2. ' Mod' → logprob: -9.000123023986816
    3. '(Mod' → logprob: -17.500123977661133
    4. '_Mod' → logprob: -19.000123977661133
    5. 'MOD' → logprob: -19.500123977661133
    6. '_mod' → logprob: -19.625123977661133
    7. '.Mod' → logprob: -20.250123977661133
    8. 'mod' → logprob: -20.875123977661133
    9. ' ' → logprob: -21.250123977661133
    10. 'Modulo' → logprob: -21.625123977661133

Token 803: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -1.9027791495318525e-05
    2. 'int' → logprob: -10.875019073486328
    3. 'In' → logprob: -17.625019073486328
    4. '_int' → logprob: -18.375019073486328
    5. ' Int' → logprob: -18.750019073486328
    6. 'nt' → logprob: -19.125019073486328
    7. '<Int' → logprob: -19.250019073486328
    8. 'INT' → logprob: -19.750019073486328
    9. '[Int' → logprob: -20.125019073486328
    10. 'Integer' → logprob: -20.250019073486328

Token 804: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009818777441978455
    2. ')
' → logprob: -4.6348185539245605
    3. '   ' → logprob: -9.884819030761719
    4. '<|end|>' → logprob: -12.259819030761719
    5. '       ' → logprob: -13.134819030761719
    6. ')

' → logprob: -13.509819030761719
    7. ',' → logprob: -14.009819030761719
    8. '<|end|>' → logprob: -14.384819030761719
    9. '),' → logprob: -14.634819030761719
    10. ')i' → logprob: -15.009819030761719

Token 805: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1650019884109497
    2. 'cq' → logprob: -2.41500186920166
    3. '
' → logprob: -3.16500186920166
    4. ' cq' → logprob: -4.41500186920166
    5. '   ' → logprob: -5.91500186920166
    6. '        
' → logprob: -6.54000186920166
    7. 'c' → logprob: -7.04000186920166
    8. 'q' → logprob: -7.29000186920166
    9. 'p' → logprob: -7.79000186920166
    10. '<|end|>' → logprob: -8.04000186920166

Token 806: ' p' (ID: 275)
  Prédit: 'cq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cq' → logprob: -0.01450111623853445
    2. ' cq' → logprob: -4.264501094818115
    3. '       ' → logprob: -8.514501571655273
    4. 'pq' → logprob: -9.139501571655273
    5. 'p' (adapté à ' p') → logprob: -10.889501571655273
    6. 'c' → logprob: -12.514501571655273
    7. '   ' → logprob: -12.889501571655273
    8. 'CQ' → logprob: -13.514501571655273
    9. 'cp' → logprob: -14.764501571655273
    10. '        
' → logprob: -14.764501571655273

Token 807: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47715088725090027
    2. ' =' → logprob: -0.9771509170532227
    3. ' +=' → logprob: -5.852150917053223
    4. '+=' → logprob: -9.102150917053223
    5. ',' → logprob: -9.477150917053223
    6. ' ,' → logprob: -12.852150917053223
    7. ' *=' → logprob: -13.477150917053223
    8. '=p' → logprob: -14.477150917053223
    9. '+' → logprob: -14.602150917053223
    10. ')' → logprob: -14.727150917053223

Token 808: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.0002613358374219388
    2. ' update' → logprob: -8.250261306762695
    3. '   ' → logprob: -18.750261306762695
    4. '(update' → logprob: -19.500261306762695
    5. '	update' → logprob: -20.000261306762695
    6. 'process' → logprob: -20.125261306762695
    7. '  ' → logprob: -21.000261306762695
    8. '.update' → logprob: -22.000261306762695
    9. ' ' → logprob: -22.000261306762695
    10. 'upd' → logprob: -22.375261306762695

Token 809: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.47706884145736694
    2. '(i' → logprob: -1.6020689010620117
    3. 'p' → logprob: -1.7270689010620117
    4. '```' → logprob: -9.477068901062012
    5. 'i' → logprob: -11.602068901062012
    6. ' p' → logprob: -11.727068901062012
    7. '(' → logprob: -12.352068901062012
    8. 'P' → logprob: -12.602068901062012
    9. '   ' → logprob: -13.352068901062012
    10. '_cp' → logprob: -13.477068901062012

Token 810: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -2.339278580620885e-06
    2. '(' → logprob: -13.000001907348633
    3. '(
' → logprob: -16.875001907348633
    4. ' (' → logprob: -17.125001907348633
    5. 'i' → logprob: -17.875001907348633
    6. '```' → logprob: -18.625001907348633
    7. '(ii' → logprob: -21.000001907348633
    8. '   ' → logprob: -21.000001907348633
    9. '(I' → logprob: -21.250001907348633
    10. '(int' → logprob: -22.125001907348633

Token 811: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016141273081302643
    2. ',B' → logprob: -6.501614093780518
    3. ' ,' → logprob: -9.251614570617676
    4. 'B' → logprob: -12.251614570617676
    5. '   ' → logprob: -12.626614570617676
    6. '(' → logprob: -13.001614570617676
    7. '(B' → logprob: -13.376614570617676
    8. ' B' → logprob: -13.501614570617676
    9. '       ' → logprob: -14.126614570617676
    10. ',
' → logprob: -14.376614570617676

Token 812: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0004883344518020749
    2. ' B' → logprob: -7.62548828125
    3. '   ' → logprob: -15.37548828125
    4. ' ' → logprob: -17.25048828125
    5. '       ' → logprob: -18.00048828125
    6. '	B' → logprob: -18.25048828125
    7. '  ' → logprob: -19.25048828125
    8. '
' → logprob: -19.37548828125
    9. '    ' → logprob: -19.50048828125
    10. '```' → logprob: -19.62548828125

Token 813: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002950243651866913
    2. ',p' → logprob: -5.877950191497803
    3. ' ,' → logprob: -8.877950668334961
    4. 'p' → logprob: -12.752950668334961
    5. '       ' → logprob: -13.877950668334961
    6. '   ' → logprob: -14.252950668334961
    7. ',
' → logprob: -14.877950668334961
    8. '(p' → logprob: -14.877950668334961
    9. ' p' → logprob: -15.002950668334961
    10. ')' → logprob: -15.502950668334961

Token 814: ' p' (ID: 275)
  Prédit: 'cp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cp' → logprob: -0.04863210767507553
    2. 'p' → logprob: -3.0486321449279785
    3. ' cp' → logprob: -10.04863166809082
    4. ' p' → logprob: -14.42363166809082
    5. '   ' → logprob: -14.79863166809082
    6. 'Mod' → logprob: -15.17363166809082
    7. '(cp' → logprob: -16.42363166809082
    8. '
' → logprob: -16.42363166809082
    9. '	cp' → logprob: -16.42363166809082
    10. 'pc' → logprob: -16.79863166809082

Token 815: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.534558552724775e-05
    2. ' ,' → logprob: -10.875025749206543
    3. '   ' → logprob: -13.125025749206543
    4. ',
' → logprob: -13.250025749206543
    5. ',c' → logprob: -13.625025749206543
    6. '(cp' → logprob: -14.625025749206543
    7. 'cp' → logprob: -14.750025749206543
    8. '```' → logprob: -15.750025749206543
    9. '       ' → logprob: -16.000024795532227
    10. ' cp' → logprob: -16.500024795532227

Token 816: ' cp' (ID: 27776)
  Prédit: 'cp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cp' → logprob: -0.00026169343618676066
    2. ' cp' → logprob: -8.250261306762695
    3. '(cp' → logprob: -15.750261306762695
    4. '	cp' → logprob: -15.875261306762695
    5. '   ' → logprob: -16.375261306762695
    6. 'cq' → logprob: -17.750261306762695
    7. 'Mod' → logprob: -18.000261306762695
    8. '
' → logprob: -18.625261306762695
    9. '.cp' → logprob: -18.625261306762695
    10. '       ' → logprob: -18.875261306762695

Token 817: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4855663721391466e-05
    2. ' ,' → logprob: -11.250015258789062
    3. '   ' → logprob: -13.875015258789062
    4. ',
' → logprob: -14.750015258789062
    5. ')' → logprob: -15.250015258789062
    6. ',c' → logprob: -16.625015258789062
    7. '       ' → logprob: -17.250015258789062
    8. '```' → logprob: -17.375015258789062
    9. ',q' → logprob: -17.625015258789062
    10. 'Mod' → logprob: -18.250015258789062

Token 818: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -2.129266067640856e-05
    2. ' Mod' → logprob: -11.000020980834961
    3. 'cp' → logprob: -12.375020980834961
    4. 'cq' → logprob: -15.250020980834961
    5. '(Mod' → logprob: -16.75002098083496
    6. 'q' → logprob: -17.37502098083496
    7. '   ' → logprob: -17.75002098083496
    8. '_mod' → logprob: -18.37502098083496
    9. 'mod' → logprob: -18.87502098083496
    10. 'c' → logprob: -19.12502098083496

Token 819: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -1.676292231422849e-05
    2. 'int' → logprob: -11.000017166137695
    3. 'In' → logprob: -18.500017166137695
    4. ' Int' → logprob: -19.375017166137695
    5. '_int' → logprob: -20.125017166137695
    6. 'INT' → logprob: -20.500017166137695
    7. 'Integer' → logprob: -20.750017166137695
    8. '(Int' → logprob: -21.625017166137695
    9. 'Ints' → logprob: -22.000017166137695
    10. '<Int' → logprob: -22.125017166137695

Token 820: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.08624232560396194
    2. ')' → logprob: -2.586242437362671
    3. '       ' → logprob: -4.961242198944092
    4. '   ' → logprob: -8.46124267578125
    5. ',' → logprob: -9.46124267578125
    6. ')
' → logprob: -11.21124267578125
    7. ')

' → logprob: -11.46124267578125
    8. '```' → logprob: -13.83624267578125
    9. ' )
' → logprob: -14.08624267578125
    10. '           ' → logprob: -14.08624267578125

Token 821: '       ' (ID: 309)
  Prédit: 'cq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cq' → logprob: -0.6742441654205322
    2. '       ' → logprob: -1.0492441654205322
    3. '   ' → logprob: -2.0492441654205322
    4. ' cq' → logprob: -4.549243927001953
    5. '
' → logprob: -8.549243927001953
    6. '           ' → logprob: -8.674243927001953
    7. '```' → logprob: -8.799243927001953
    8. '	c' → logprob: -9.799243927001953
    9. '        
' → logprob: -10.549243927001953
    10. '	   ' → logprob: -10.674243927001953

Token 822: ' cq' (ID: 151096)
  Prédit: 'cq'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cq' (adapté à ' cq') → logprob: -0.00023524489370174706
    2. '   ' → logprob: -8.875235557556152
    3. ' cq' → logprob: -9.375235557556152
    4. '       ' → logprob: -11.625235557556152
    5. '
' → logprob: -14.000235557556152
    6. 'cj' → logprob: -15.375235557556152
    7. '    
' → logprob: -15.875235557556152
    8. '        
' → logprob: -16.625234603881836
    9. 'c' → logprob: -16.625234603881836
    10. '           ' → logprob: -16.625234603881836

Token 823: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020699352025986
    2. '=' → logprob: -2.3502070903778076
    3. ',' → logprob: -15.725207328796387
    4. ' ' → logprob: -16.60020637512207
    5. '   ' → logprob: -16.60020637512207
    6. '	' → logprob: -17.10020637512207
    7. '＝' → logprob: -17.60020637512207
    8. 'process' → logprob: -18.72520637512207
    9. ' ' → logprob: -19.47520637512207
    10. '(process' → logprob: -19.85020637512207

Token 824: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.00861456897109747
    2. ' process' → logprob: -4.758614540100098
    3. '(process' → logprob: -18.008615493774414
    4. '	process' → logprob: -19.508615493774414
    5. 'proces' → logprob: -21.133615493774414
    6. ' proces' → logprob: -21.383615493774414
    7. '.process' → logprob: -22.258615493774414
    8. '_process' → logprob: -24.258615493774414
    9. 'rocess' → logprob: -24.508615493774414
    10. 'update' → logprob: -25.008615493774414

Token 825: '_c' (ID: 1303)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.4761122763156891
    2. '_q' → logprob: -0.9761122465133667
    3. '_c' → logprob: -7.101112365722656
    4. 'cq' → logprob: -7.101112365722656
    5. '(i' → logprob: -7.976112365722656
    6. 'c' → logprob: -11.351112365722656
    7. 'qc' → logprob: -11.726112365722656
    8. 'i' → logprob: -12.601112365722656
    9. '_cp' → logprob: -13.351112365722656
    10. 'iq' → logprob: -13.351112365722656

Token 826: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.4868770196917467e-05
    2. '(i' → logprob: -10.750024795532227
    3. '_q' → logprob: -13.250024795532227
    4. 'i' → logprob: -13.500024795532227
    5. 'p' → logprob: -16.125024795532227
    6. 'qi' → logprob: -17.750024795532227
    7. '(' → logprob: -18.875024795532227
    8. ' q' → logprob: -19.000024795532227
    9. '```' → logprob: -19.000024795532227
    10. 'iq' → logprob: -19.375024795532227

Token 827: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -2.546478935983032e-05
    2. 'i' → logprob: -10.750025749206543
    3. '(' → logprob: -12.500025749206543
    4. ' (' → logprob: -15.500025749206543
    5. ' i' → logprob: -17.375024795532227
    6. '   ' → logprob: -18.125024795532227
    7. '       ' → logprob: -18.625024795532227
    8. '(
' → logprob: -18.625024795532227
    9. '```' → logprob: -18.625024795532227
    10. '(I' → logprob: -20.125024795532227

Token 828: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2496972680091858
    2. 'i' → logprob: -1.749697208404541
    3. '(i' → logprob: -3.124697208404541
    4. ',i' → logprob: -6.249697208404541
    5. ' i' → logprob: -6.749697208404541
    6. ')' → logprob: -10.3746976852417
    7. ' ,' → logprob: -10.6246976852417
    8. '   ' → logprob: -11.6246976852417
    9. '```' → logprob: -12.4996976852417
    10. '),' → logprob: -12.6246976852417

Token 829: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.001943514565937221
    2. ' W' → logprob: -6.251943588256836
    3. 'i' → logprob: -12.251943588256836
    4. 'B' → logprob: -12.251943588256836
    5. '   ' → logprob: -12.501943588256836
    6. ' ' → logprob: -14.501943588256836
    7. '```' → logprob: -15.376943588256836
    8. '	W' → logprob: -16.001943588256836
    9. '(W' → logprob: -16.376943588256836
    10. ')' → logprob: -16.376943588256836

Token 830: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016301481809932739
    2. ' ,' → logprob: -9.875163078308105
    3. ',c' → logprob: -10.125163078308105
    4. ',i' → logprob: -10.625163078308105
    5. '       ' → logprob: -11.000163078308105
    6. '<|end|>' → logprob: -11.625163078308105
    7. ',q' → logprob: -12.500163078308105
    8. ')' → logprob: -12.750163078308105
    9. '(' → logprob: -13.000163078308105
    10. '```' → logprob: -13.750163078308105

Token 831: ' cq' (ID: 151096)
  Prédit: 'cq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cq' → logprob: -0.002238162560388446
    2. ' cq' → logprob: -6.3772382736206055
    3. 'i' → logprob: -7.6272382736206055
    4. 'Mod' → logprob: -11.002238273620605
    5. 'cp' → logprob: -11.752238273620605
    6. 'c' → logprob: -11.752238273620605
    7. ' i' → logprob: -11.877238273620605
    8. 'q' → logprob: -12.002238273620605
    9. '   ' → logprob: -13.877238273620605
    10. ' ' → logprob: -14.502238273620605

Token 832: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015514736878685653
    2. ',i' → logprob: -9.375155448913574
    3. ' ,' → logprob: -9.625155448913574
    4. 'i' → logprob: -13.750155448913574
    5. '   ' → logprob: -14.500155448913574
    6. '       ' → logprob: -14.750155448913574
    7. ',C' → logprob: -15.000155448913574
    8. '(i' → logprob: -15.000155448913574
    9. '```' → logprob: -15.000155448913574
    10. ',
' → logprob: -15.375155448913574

Token 833: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.00015908108616713434
    2. ' Mod' → logprob: -8.75015926361084
    3. '(Mod' → logprob: -14.37515926361084
    4. '_mod' → logprob: -18.125158309936523
    5. '_Mod' → logprob: -18.500158309936523
    6. '   ' → logprob: -18.500158309936523
    7. '.Mod' → logprob: -18.750158309936523
    8. '
' → logprob: -19.625158309936523
    9. '  ' → logprob: -19.875158309936523
    10. 'Modulo' → logprob: -20.125158309936523

Token 834: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -9.372294698550832e-06
    2. 'int' → logprob: -11.625009536743164
    3. 'Mod' → logprob: -15.875009536743164
    4. 'In' → logprob: -16.250009536743164
    5. ' Int' → logprob: -17.500009536743164
    6. 'nt' → logprob: -17.500009536743164
    7. 'Ints' → logprob: -18.000009536743164
    8. '(Int' → logprob: -18.125009536743164
    9. '<Int' → logprob: -18.375009536743164
    10. 'Integer' → logprob: -18.625009536743164

Token 835: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013647585874423385
    2. '       ' → logprob: -7.001364707946777
    3. ',q' → logprob: -8.126364707946777
    4. ',c' → logprob: -9.001364707946777
    5. ' ,' → logprob: -10.626364707946777
    6. '   ' → logprob: -12.376364707946777
    7. '      ' → logprob: -13.376364707946777
    8. ',
' → logprob: -13.626364707946777
    9. 'cq' → logprob: -14.251364707946777
    10. ')' → logprob: -14.751364707946777

Token 836: '       ' (ID: 309)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.14491158723831177
    2. 'cq' → logprob: -2.769911527633667
    3. '       ' → logprob: -2.894911527633667
    4. ' q' → logprob: -4.894911766052246
    5. '   ' → logprob: -5.394911766052246
    6. ' cq' → logprob: -5.644911766052246
    7. ',q' → logprob: -7.644911766052246
    8. ',' → logprob: -8.144911766052246
    9. '           ' → logprob: -8.519911766052246
    10. '=' → logprob: -9.519911766052246

Token 837: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -3.2378600735682994e-05
    2. ' q' → logprob: -10.500032424926758
    3. '       ' → logprob: -12.500032424926758
    4. '   ' → logprob: -14.125032424926758
    5. '           ' → logprob: -16.375032424926758
    6. '	q' → logprob: -16.875032424926758
    7. '
' → logprob: -17.000032424926758
    8. 'c' → logprob: -17.000032424926758
    9. '```' → logprob: -17.000032424926758
    10. '=' → logprob: -18.250032424926758

Token 838: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018150296062231064
    2. ' =' → logprob: -4.018150329589844
    3. '=q' → logprob: -15.768150329589844
    4. ',' → logprob: -16.268150329589844
    5. '＝' → logprob: -17.518150329589844
    6. '=
' → logprob: -18.143150329589844
    7. '+=' → logprob: -18.143150329589844
    8. ')' → logprob: -18.518150329589844
    9. '=

' → logprob: -18.893150329589844
    10. ' +=' → logprob: -19.268150329589844

Token 839: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.01815076172351837
    2. ' update' → logprob: -4.018150806427002
    3. '   ' → logprob: -14.643150329589844
    4. '(update' → logprob: -15.268150329589844
    5. '	update' → logprob: -15.768150329589844
    6. '       ' → logprob: -17.143150329589844
    7. '.update' → logprob: -17.643150329589844
    8. '  ' → logprob: -18.768150329589844
    9. ' ' → logprob: -18.893150329589844
    10. 'updated' → logprob: -19.018150329589844

Token 840: '_q' (ID: 19384)
  Prédit: '_q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_q' → logprob: -8.745069499127567e-05
    2. 'q' → logprob: -9.75008773803711
    3. '_p' → logprob: -10.50008773803711
    4. '_c' → logprob: -14.00008773803711
    5. '(i' → logprob: -15.00008773803711
    6. '   ' → logprob: -15.75008773803711
    7. '```' → logprob: -16.12508773803711
    8. '_i' → logprob: -16.62508773803711
    9. '_' → logprob: -16.87508773803711
    10. ' q' → logprob: -17.12508773803711

Token 841: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.625000953674316
    3. 'i' → logprob: -15.625000953674316
    4. '(
' → logprob: -16.25
    5. ' i' → logprob: -18.625
    6. ' (' → logprob: -18.625
    7. '   ' → logprob: -19.375
    8. '```' → logprob: -19.5
    9. '	i' → logprob: -21.0
    10. '(I' → logprob: -22.125

Token 842: ',' (ID: 11)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -8.41866585687967e-06
    2. '(' → logprob: -12.250008583068848
    3. 'i' → logprob: -12.750008583068848
    4. '(
' → logprob: -14.750008583068848
    5. ')' → logprob: -16.25000762939453
    6. '```' → logprob: -16.50000762939453
    7. ' (' → logprob: -16.75000762939453
    8. ',' → logprob: -17.50000762939453
    9. ' i' → logprob: -18.12500762939453
    10. ',i' → logprob: -18.25000762939453

Token 843: ' W' (ID: 486)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -9.627176768844947e-05
    2. ' i' → logprob: -9.250096321105957
    3. '   ' → logprob: -16.75009536743164
    4. '(i' → logprob: -17.62509536743164
    5. 'W' → logprob: -19.37509536743164
    6. ' ' → logprob: -19.75009536743164
    7. '  ' → logprob: -20.12509536743164
    8. '	i' → logprob: -20.25009536743164
    9. '(' → logprob: -20.50009536743164
    10. '
' → logprob: -20.62509536743164

Token 844: ',' (ID: 11)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.024328207597136497
    2. ',' → logprob: -3.7743282318115234
    3. 'i' → logprob: -7.274328231811523
    4. '(' → logprob: -8.774328231811523
    5. ',i' → logprob: -9.024328231811523
    6. ')' → logprob: -10.024328231811523
    7. ' i' → logprob: -10.149328231811523
    8. ' (' → logprob: -11.024328231811523
    9. '   ' → logprob: -11.899328231811523
    10. '```' → logprob: -12.524328231811523

Token 845: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.005216213408857584
    2. ' q' → logprob: -5.380216121673584
    3. 'i' → logprob: -7.505216121673584
    4. ' i' → logprob: -11.130216598510742
    5. '   ' → logprob: -11.880216598510742
    6. '     ' → logprob: -11.880216598510742
    7. '       ' → logprob: -12.005216598510742
    8. 'cq' → logprob: -12.630216598510742
    9. ' ' → logprob: -13.005216598510742
    10. '    ' → logprob: -13.255216598510742

Token 846: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.339776832144707e-05
    2. ',q' → logprob: -10.125082969665527
    3. ',c' → logprob: -10.500082969665527
    4. ' ,' → logprob: -11.250082969665527
    5. 'q' → logprob: -13.625082969665527
    6. ',
' → logprob: -14.375082969665527
    7. '       ' → logprob: -15.250082969665527
    8. '```' → logprob: -15.625082969665527
    9. '   ' → logprob: -16.000083923339844
    10. '+' → logprob: -16.125083923339844

Token 847: ' cq' (ID: 151096)
  Prédit: 'cq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cq' → logprob: -0.001416069339029491
    2. ' cq' → logprob: -6.876416206359863
    3. 'q' → logprob: -7.876416206359863
    4. '   ' → logprob: -13.626416206359863
    5. 'c' → logprob: -14.001416206359863
    6. ' ' → logprob: -14.751416206359863
    7. ' q' → logprob: -15.126416206359863
    8. 'cp' → logprob: -15.501416206359863
    9. '       ' → logprob: -15.501416206359863
    10. '     ' → logprob: -15.751416206359863

Token 848: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.700132997939363e-05
    2. ' ,' → logprob: -11.500017166137695
    3. ',i' → logprob: -12.375017166137695
    4. '(i' → logprob: -13.750017166137695
    5. '(Mod' → logprob: -14.875017166137695
    6. '       ' → logprob: -15.125017166137695
    7. '```' → logprob: -15.125017166137695
    8. '   ' → logprob: -15.625017166137695
    9. ',
' → logprob: -15.750017166137695
    10. ')' → logprob: -15.750017166137695

Token 849: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.0001817297888919711
    2. ' Mod' → logprob: -8.625182151794434
    3. '(Mod' → logprob: -13.375182151794434
    4. '   ' → logprob: -15.500182151794434
    5. 'i' → logprob: -16.000181198120117
    6. ' ' → logprob: -17.000181198120117
    7. '_Mod' → logprob: -17.375181198120117
    8. '.Mod' → logprob: -17.625181198120117
    9. '
' → logprob: -17.750181198120117
    10. '  ' → logprob: -17.875181198120117

Token 850: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -5.796184723294573e-06
    2. 'int' → logprob: -12.750005722045898
    3. 'Mod' → logprob: -13.375005722045898
    4. 'In' → logprob: -14.750005722045898
    5. '(Int' → logprob: -15.375005722045898
    6. '_int' → logprob: -15.500005722045898
    7. ' Int' → logprob: -15.625005722045898
    8. '_Int' → logprob: -16.2500057220459
    9. '<Int' → logprob: -16.8750057220459
    10. 'Ints' → logprob: -16.8750057220459

Token 851: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.017927029868588e-05
    2. ')
' → logprob: -9.625080108642578
    3. '   ' → logprob: -12.000080108642578
    4. ' )' → logprob: -12.750080108642578
    5. ')i' → logprob: -13.875080108642578
    6. '       ' → logprob: -13.875080108642578
    7. ')`' → logprob: -14.000080108642578
    8. ',' → logprob: -14.125080108642578
    9. ')

' → logprob: -14.500080108642578
    10. '))' → logprob: -15.625080108642578

Token 852: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004746248945593834
    2. '#' → logprob: -6.004746437072754
    3. 'B' → logprob: -6.629746437072754
    4. 'b' → logprob: -7.629746437072754
    5. 'n' → logprob: -8.629746437072754
    6. '<|end|>' → logprob: -9.754746437072754
    7. 'data' → logprob: -10.004746437072754
    8. '
' → logprob: -10.379746437072754
    9. '```' → logprob: -10.379746437072754
    10. 'for' → logprob: -11.129746437072754

Token 853: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.5764726400375366
    2. ' main' → logprob: -0.8264726400375366
    3. 'def' → logprob: -8.201472282409668
    4. 'read' → logprob: -8.826472282409668
    5. 'if' → logprob: -10.201472282409668
    6. '__' → logprob: -10.326472282409668
    7. ' read' → logprob: -10.826472282409668
    8. 'solve' → logprob: -11.701472282409668
    9. 'run' → logprob: -11.951472282409668
    10. ' def' → logprob: -12.826472282409668

Token 854: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.4736459888808895e-05
    2. '():
' → logprob: -11.250014305114746
    3. ' ():' → logprob: -13.500014305114746
    4. '()' → logprob: -15.500014305114746
    5. '():
' → logprob: -16.750015258789062
    6. '(' → logprob: -18.375015258789062
    7. '()>' → logprob: -18.500015258789062
    8. '(":' → logprob: -19.125015258789062
    9. '():

' → logprob: -19.250015258789062
    10. '().' → logprob: -19.500015258789062

Token 855: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018561731558293104
    2. 'B' → logprob: -6.751856327056885
    3. '(B' → logprob: -7.751856327056885
    4. '()' → logprob: -9.376855850219727
    5. ' B' → logprob: -9.501855850219727
    6. 'n' → logprob: -10.001855850219727
    7. 'b' → logprob: -11.376855850219727
    8. '    
' → logprob: -11.626855850219727
    9. '(' → logprob: -12.001855850219727
    10. ',' → logprob: -12.876855850219727

Token 856: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.00033200893085449934
    2. '   ' → logprob: -8.12533187866211
    3. ' B' → logprob: -10.25033187866211
    4. 'b' → logprob: -14.87533187866211
    5. ' ' → logprob: -16.12533187866211
    6. '	B' → logprob: -16.62533187866211
    7. 'def' → logprob: -16.75033187866211
    8. '
' → logprob: -17.37533187866211
    9. '    
' → logprob: -17.62533187866211
    10. 'import' → logprob: -18.25033187866211

Token 857: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006861062138341367
    2. ',W' → logprob: -7.375686168670654
    3. ' ,' → logprob: -9.750685691833496
    4. 'W' → logprob: -14.875685691833496
    5. ',
' → logprob: -15.125685691833496
    6. '=' → logprob: -15.250685691833496
    7. ',B' → logprob: -15.500685691833496
    8. ',w' → logprob: -16.000686645507812
    9. ' W' → logprob: -16.375686645507812
    10. '‌,' → logprob: -17.125686645507812

Token 858: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.023247340694069862
    2. ' W' → logprob: -3.773247241973877
    3. ' ' → logprob: -13.523247718811035
    4. '  ' → logprob: -15.148247718811035
    5. '   ' → logprob: -16.14824676513672
    6. '    ' → logprob: -16.27324676513672
    7. '	W' → logprob: -17.52324676513672
    8. '*' → logprob: -17.77324676513672
    9. '    
' → logprob: -18.27324676513672
    10. ' ' → logprob: -18.39824676513672

Token 859: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3920600116252899
    2. ' =' → logprob: -1.1420600414276123
    3. ',' → logprob: -5.267059803009033
    4. '=B' → logprob: -12.767060279846191
    5. ',B' → logprob: -13.142060279846191
    6. '=input' → logprob: -13.267060279846191
    7. '   ' → logprob: -13.267060279846191
    8. ' =
' → logprob: -13.642060279846191
    9. '<|end|>' → logprob: -13.642060279846191
    10. '=
' → logprob: -13.642060279846191

Token 860: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.386931449174881
    2. ' read' → logprob: -1.1369314193725586
    3. ' map' → logprob: -10.136931419372559
    4. 'map' → logprob: -11.136931419372559
    5. ' tuple' → logprob: -12.886931419372559
    6. '   ' → logprob: -13.261931419372559
    7. '	read' → logprob: -13.886931419372559
    8. 'tuple' → logprob: -14.636931419372559
    9. '  ' → logprob: -15.261931419372559
    10. ' ' → logprob: -15.386931419372559

Token 861: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.12238612771034241
    2. '()' → logprob: -2.2473862171173096
    3. '(' → logprob: -4.8723859786987305
    4. '_' → logprob: -7.2473859786987305
    5. '()
' → logprob: -8.62238597869873
    6. '_line' → logprob: -8.99738597869873
    7. 'input' → logprob: -8.99738597869873
    8. '_inputs' → logprob: -9.12238597869873
    9. '_int' → logprob: -9.37238597869873
    10. '().' → logprob: -9.87238597869873

Token 862: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.028234073892235756
    2. '()
' → logprob: -3.6532340049743652
    3. '   ' → logprob: -6.403234004974365
    4. '
' → logprob: -8.778234481811523
    5. ')' → logprob: -10.778234481811523
    6. '();' → logprob: -10.778234481811523
    7. 'def' → logprob: -11.028234481811523
    8. '<|end|>' → logprob: -11.403234481811523
    9. '    
' → logprob: -11.778234481811523
    10. ',' → logprob: -11.903234481811523

Token 863: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007699491921812296
    2. '
' → logprob: -4.882699489593506
    3. '    
' → logprob: -9.882699966430664
    4. '```' → logprob: -10.507699966430664
    5. 'Mod' → logprob: -12.257699966430664
    6. 'def' → logprob: -13.132699966430664
    7. '[
' → logprob: -13.757699966430664
    8. '
' → logprob: -13.757699966430664
    9. 'mod' → logprob: -13.757699966430664
    10. '	mod' → logprob: -14.007699966430664

Token 864: ' MOD' (ID: 32868)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.22896166145801544
    2. 'MOD' (adapté à ' MOD') → logprob: -1.603961706161499
    3. '   ' → logprob: -5.85396146774292
    4. '
' → logprob: -7.47896146774292
    5. 'mod' → logprob: -9.728961944580078
    6. ' MOD' → logprob: -11.103961944580078
    7. '```' → logprob: -11.853961944580078
    8. 'M' → logprob: -12.228961944580078
    9. 'print' → logprob: -12.728961944580078
    10. 'Modulo' → logprob: -12.728961944580078

Token 865: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020741820335388
    2. '=' → logprob: -2.3502073287963867
    3. ',' → logprob: -14.850207328796387
    4. '   ' → logprob: -15.850207328796387
    5. '  ' → logprob: -16.225208282470703
    6. '_' → logprob: -16.600208282470703
    7. ' =
' → logprob: -16.725208282470703
    8. ' ' → logprob: -16.975208282470703
    9. ')' → logprob: -17.475208282470703
    10. '.' → logprob: -18.850208282470703

Token 866: ' get' (ID: 717)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0011810619616881013
    2. 'get' → logprob: -6.751181125640869
    3. '100' → logprob: -11.501180648803711
    4. ' ' → logprob: -15.001180648803711
    5. ' get' → logprob: -15.251180648803711
    6. '(' → logprob: -16.37618064880371
    7. 'int' → logprob: -17.00118064880371
    8. '(get' → logprob: -18.00118064880371
    9. '1' → logprob: -19.50118064880371
    10. '998' → logprob: -20.50118064880371

Token 867: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -9.150362166110426e-05
    2. '10' → logprob: -10.000091552734375
    3. 'mod' → logprob: -10.000091552734375
    4. '_MOD' → logprob: -15.250091552734375
    5. 'Mod' → logprob: -15.500091552734375
    6. '100' → logprob: -16.125091552734375
    7. '_' → logprob: -16.625091552734375
    8. '(' → logprob: -17.375091552734375
    9. ' мод' → logprob: -17.625091552734375
    10. '```' → logprob: -17.875091552734375

Token 868: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03765064477920532
    2. '   ' → logprob: -3.4126505851745605
    3. '    
' → logprob: -5.7876505851745605
    4. 'Mod' → logprob: -8.287651062011719
    5. '  
' → logprob: -8.912651062011719
    6. ' 
' → logprob: -8.912651062011719
    7. '()
' → logprob: -8.912651062011719
    8. '(Mod' → logprob: -8.912651062011719
    9. '
' → logprob: -10.287651062011719
    10. ',
' → logprob: -10.912651062011719

Token 869: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0054281046614050865
    2. 'Mod' → logprob: -5.505428314208984
    3. ' Mod' → logprob: -6.880428314208984
    4. '
' → logprob: -8.380428314208984
    5. '(Mod' → logprob: -9.755428314208984
    6. '```' → logprob: -11.380428314208984
    7. '  ' → logprob: -11.755428314208984
    8. '    ' → logprob: -11.880428314208984
    9. '    
' → logprob: -12.505428314208984
    10. ' ' → logprob: -13.005428314208984

Token 870: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' (adapté à ' Mod') → logprob: -1.5928495486150496e-05
    2. ' Mod' → logprob: -11.250016212463379
    3. '
' → logprob: -13.375016212463379
    4. '   ' → logprob: -14.875016212463379
    5. '(Mod' → logprob: -15.500016212463379
    6. 'mod' → logprob: -15.625016212463379
    7. 'Mo' → logprob: -15.875016212463379
    8. '```' → logprob: -16.000015258789062
    9. 'MOD' → logprob: -16.375015258789062
    10. '    
' → logprob: -16.750015258789062

Token 871: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -3.128163257315464e-07
    2. 'int' → logprob: -15.5
    3. 'In' → logprob: -19.25
    4. '_int' → logprob: -19.625
    5. 'Ints' → logprob: -20.5
    6. '_Int' → logprob: -20.625
    7. 'INT' → logprob: -20.75
    8. ' Int' → logprob: -20.75
    9. '<Int' → logprob: -21.25
    10. '	Int' → logprob: -21.75

Token 872: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014228733256459236
    2. '=' → logprob: -4.264228820800781
    3. '=create' → logprob: -9.639228820800781
    4. '```' → logprob: -17.88922882080078
    5. 'class' → logprob: -18.01422882080078
    6. 'Class' → logprob: -18.01422882080078
    7. ' ' → logprob: -18.01422882080078
    8. '(' → logprob: -18.01422882080078
    9. '   ' → logprob: -18.13922882080078
    10. '  ' → logprob: -18.26422882080078

Token 873: ' create' (ID: 2501)
  Prédit: 'create'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'create' → logprob: -0.0001584850688232109
    2. ' create' → logprob: -8.750158309936523
    3. '(create' → logprob: -18.125158309936523
    4. '   ' → logprob: -19.500158309936523
    5. '	create' → logprob: -20.625158309936523
    6. '=create' → logprob: -20.750158309936523
    7. '.create' → logprob: -22.250158309936523
    8. ' ' → logprob: -22.500158309936523
    9. '  ' → logprob: -24.250158309936523
    10. '
' → logprob: -24.500158309936523

Token 874: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -1.652451464906335e-05
    2. 'Mod' → logprob: -11.375016212463379
    3. '_Mod' → logprob: -12.500016212463379
    4. 'mod' → logprob: -14.750016212463379
    5. '```' → logprob: -15.250016212463379
    6. '(Mod' → logprob: -15.750016212463379
    7. '_MOD' → logprob: -16.000017166137695
    8. '_' → logprob: -16.250017166137695
    9. '(_' → logprob: -17.000017166137695
    10. '(' → logprob: -17.125017166137695

Token 875: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -6.511406809295295e-06
    2. '_int' → logprob: -12.125006675720215
    3. 'Int' → logprob: -14.125006675720215
    4. '(int' → logprob: -15.125006675720215
    5. ' int' → logprob: -18.6250057220459
    6. '(' → logprob: -19.3750057220459
    7. '<int' → logprob: -20.1250057220459
    8. 'uint' → logprob: -20.1250057220459
    9. 'oint' → logprob: -20.5000057220459
    10. 'INT' → logprob: -20.6250057220459

Token 876: '_class' (ID: 10602)
  Prédit: '_class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_class' → logprob: -0.00012154294381616637
    2. 'class' → logprob: -9.500121116638184
    3. 'Class' → logprob: -10.000121116638184
    4. '_Class' → logprob: -15.000121116638184
    5. '```' → logprob: -15.500121116638184
    6. '_cl' → logprob: -15.500121116638184
    7. '_cls' → logprob: -15.750121116638184
    8. ' class' → logprob: -16.2501220703125
    9. '_CLASS' → logprob: -16.5001220703125
    10. '_' → logprob: -17.1251220703125

Token 877: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -5.200166469876422e-06
    2. 'MOD' → logprob: -12.500004768371582
    3. '(Mod' → logprob: -13.875004768371582
    4. '(' → logprob: -15.000004768371582
    5. '(
' → logprob: -15.625004768371582
    6. 'M' → logprob: -16.8750057220459
    7. '(mod' → logprob: -17.6250057220459
    8. ' MOD' → logprob: -18.2500057220459
    9. ' (' → logprob: -19.3750057220459
    10. '   ' → logprob: -19.7500057220459

Token 878: 'OD' (ID: 3329)
  Prédit: 'OD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OD' → logprob: -3.173704271830502e-06
    2. 'MOD' → logprob: -12.75000286102295
    3. 'ОД' → logprob: -16.375003814697266
    4. 'O' → logprob: -16.500003814697266
    5. 'od' → logprob: -17.000003814697266
    6. 'ODULE' → logprob: -17.375003814697266
    7. '(mod' → logprob: -18.625003814697266
    8. '0' → logprob: -18.625003814697266
    9. 'mod' → logprob: -18.750003814697266
    10. 'ODE' → logprob: -18.750003814697266

Token 879: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.190178904333152e-05
    2. '   ' → logprob: -11.000031471252441
    3. ')
' → logprob: -11.250031471252441
    4. '()' → logprob: -13.250031471252441
    5. '())' → logprob: -14.875031471252441
    6. ' )' → logprob: -17.000032424926758
    7. ' ' → logprob: -17.875032424926758
    8. '(' → logprob: -18.125032424926758
    9. '),' → logprob: -18.500032424926758
    10. ')
' → logprob: -18.500032424926758

Token 880: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12961475551128387
    2. 'process' → logprob: -2.50461483001709
    3. ' process' → logprob: -3.25461483001709
    4. '<|end|>' → logprob: -7.25461483001709
    5. '	process' → logprob: -8.25461483001709
    6. '
' → logprob: -9.25461483001709
    7. '```' → logprob: -9.25461483001709
    8. '(process' → logprob: -9.50461483001709
    9. '    
' → logprob: -11.50461483001709
    10. '_process' → logprob: -12.75461483001709

Token 881: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' (adapté à ' process') → logprob: -0.0003855093673337251
    2. '   ' → logprob: -8.250385284423828
    3. ' process' → logprob: -9.000385284423828
    4. '	process' → logprob: -14.625385284423828
    5. 'for' → logprob: -16.125385284423828
    6. '(process' → logprob: -16.625385284423828
    7. 'p' → logprob: -17.125385284423828
    8. '
' → logprob: -17.500385284423828
    9. '```' → logprob: -18.125385284423828
    10. '_process' → logprob: -18.500385284423828

Token 882: '_loop' (ID: 40621)
  Prédit: '_loop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_loop' → logprob: -7.896309739408025e-07
    2. 'loop' → logprob: -14.250000953674316
    3. '_lo' → logprob: -18.75
    4. '_LOOP' → logprob: -19.375
    5. ' loop' → logprob: -20.25
    6. 'Loop' → logprob: -20.5
    7. '_process' → logprob: -21.125
    8. '_lp' → logprob: -21.125
    9. '_' → logprob: -21.25
    10. '(loop' → logprob: -21.375

Token 883: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -7.703443770878948e-06
    2. '(' → logprob: -12.000007629394531
    3. '(
' → logprob: -14.250007629394531
    4. ' (' → logprob: -14.375007629394531
    5. '   ' → logprob: -16.50000762939453
    6. '((' → logprob: -17.87500762939453
    7. '```' → logprob: -18.75000762939453
    8. '(b' → logprob: -19.25000762939453
    9. '(A' → logprob: -19.37500762939453
    10. '\(' → logprob: -19.87500762939453

Token 884: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.392824874026701e-05
    2. ',W' → logprob: -10.87503433227539
    3. ' ,' → logprob: -11.75003433227539
    4. ',
' → logprob: -12.50003433227539
    5. '   ' → logprob: -13.00003433227539
    6. ')' → logprob: -15.00003433227539
    7. '‌,' → logprob: -15.12503433227539
    8. ',

' → logprob: -16.00003433227539
    9. '+' → logprob: -16.50003433227539
    10. ',B' → logprob: -16.87503433227539

Token 885: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.005234002135694027
    2. ' W' → logprob: -5.2552337646484375
    3. '   ' → logprob: -15.755233764648438
    4. ' ' → logprob: -17.880233764648438
    5. '
' → logprob: -19.005233764648438
    6. '    ' → logprob: -19.005233764648438
    7. ')' → logprob: -19.130233764648438
    8. '```' → logprob: -19.880233764648438
    9. '	W' → logprob: -20.005233764648438
    10. '  ' → logprob: -20.255233764648438

Token 886: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.45848218582978e-06
    2. ' ,' → logprob: -14.12500286102295
    3. '   ' → logprob: -14.25000286102295
    4. ')' → logprob: -14.25000286102295
    5. ',
' → logprob: -15.25000286102295
    6. '‌,' → logprob: -17.500001907348633
    7. '(Mod' → logprob: -18.750001907348633
    8. '),' → logprob: -19.375001907348633
    9. '.' → logprob: -19.500001907348633
    10. '(),' → logprob: -19.625001907348633

Token 887: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -8.53050296427682e-05
    2. ' Mod' → logprob: -9.37508487701416
    3. '(Mod' → logprob: -15.50008487701416
    4. '   ' → logprob: -16.000085830688477
    5. '
' → logprob: -16.875085830688477
    6. '_Mod' → logprob: -17.625085830688477
    7. 'Mo' → logprob: -18.250085830688477
    8. ' ' → logprob: -18.625085830688477
    9. '_mod' → logprob: -19.125085830688477
    10. 'Modulo' → logprob: -19.125085830688477

Token 888: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -9.088346359931165e-07
    2. 'int' → logprob: -14.000000953674316
    3. 'In' → logprob: -19.0
    4. ' Int' → logprob: -19.5
    5. 'INT' → logprob: -21.125
    6. '	Int' → logprob: -21.5
    7. '(Int' → logprob: -22.375
    8. '[Int' → logprob: -22.5
    9. '_int' → logprob: -22.5
    10. 'nt' → logprob: -22.75

Token 889: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.537868779967539e-06
    2. ')
' → logprob: -11.875008583068848
    3. '())' → logprob: -13.500008583068848
    4. '()' → logprob: -16.12500762939453
    5. ' )' → logprob: -17.00000762939453
    6. ')

' → logprob: -17.00000762939453
    7. '<|end|>' → logprob: -17.12500762939453
    8. ')#' → logprob: -19.12500762939453
    9. '   ' → logprob: -19.25000762939453
    10. ')return' → logprob: -19.50000762939453

Token 890: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01218537986278534
    2. 'main' → logprob: -4.512185573577881
    3. '```' → logprob: -7.012185573577881
    4. '#' → logprob: -9.262185096740723
    5. '
' → logprob: -9.637185096740723
    6. ' if' → logprob: -10.262185096740723
    7. '<|end|>' → logprob: -11.262185096740723
    8. 'for' → logprob: -12.262185096740723
    9. '(main' → logprob: -12.387185096740723
    10. 'print' → logprob: -12.512185096740723

Token 891: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 889
Tokens correctement prédits (1ère position, stricte): 394
Tokens correctement prédits (1ère position, avec adaptation): 449
Tokens correctement prédits (top 10): 790
Précision stricte (1ère position): 44.32%
Précision adaptée (1ère position): 50.51%
Précision (top 10): 88.86%
================================================================================
