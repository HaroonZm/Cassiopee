================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:48:30
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce

input_ball_count = int(input())
input_ball_sequence = input()

modulo_prime = 998244353

class ModuloInteger:
    def __init__(self, value):
        self.value = value % modulo_prime

    def __str__(self):
        return str(self.value)

    __repr__ = __str__

    def __add__(self, operand):
        if isinstance(operand, ModuloInteger):
            return ModuloInteger(self.value + operand.value)
        else:
            return ModuloInteger(self.value + operand)

    def __sub__(self, operand):
        if isinstance(operand, ModuloInteger):
            return ModuloInteger(self.value - operand.value)
        else:
            return ModuloInteger(self.value - operand)

    def __mul__(self, operand):
        if isinstance(operand, ModuloInteger):
            return ModuloInteger(self.value * operand.value)
        else:
            return ModuloInteger(self.value * operand)

    def __truediv__(self, operand):
        if isinstance(operand, ModuloInteger):
            return ModuloInteger(self.value * pow(operand.value, modulo_prime - 2, modulo_prime))
        else:
            return ModuloInteger(self.value * pow(operand, modulo_prime - 2, modulo_prime))

    def __pow__(self, operand):
        if isinstance(operand, ModuloInteger):
            return ModuloInteger(pow(self.value, operand.value, modulo_prime))
        else:
            return ModuloInteger(pow(self.value, operand, modulo_prime))

    def __radd__(self, operand):
        return ModuloInteger(operand + self.value)

    def __rsub__(self, operand):
        return ModuloInteger(operand - self.value)

    def __rmul__(self, operand):
        return ModuloInteger(operand * self.value)

    def __rtruediv__(self, operand):
        return ModuloInteger(operand * pow(self.value, modulo_prime - 2, modulo_prime))

    def __rpow__(self, operand):
        return ModuloInteger(pow(operand, self.value, modulo_prime))

def update_state(ball_type, accumulator_result, free_person, red_person, green_person, blue_person, red_green_pair, green_blue_pair, blue_red_pair):
    if ball_type == 'R':
        if green_blue_pair:
            return (accumulator_result * green_blue_pair, free_person, red_person, green_person, blue_person, red_green_pair, green_blue_pair - 1, blue_red_pair)
        elif green_person:
            return (accumulator_result * green_person, free_person, red_person, green_person - 1, blue_person, red_green_pair + 1, green_blue_pair, blue_red_pair)
        elif blue_person:
            return (accumulator_result * blue_person, free_person, red_person, green_person, blue_person - 1, red_green_pair, green_blue_pair, blue_red_pair + 1)
        else:
            return (accumulator_result * free_person, free_person - 1, red_person + 1, green_person, blue_person, red_green_pair, green_blue_pair, blue_red_pair)
    elif ball_type == 'G':
        if blue_red_pair:
            return (accumulator_result * blue_red_pair, free_person, red_person, green_person, blue_person, red_green_pair, green_blue_pair, blue_red_pair - 1)
        elif red_person:
            return (accumulator_result * red_person, free_person, red_person - 1, green_person, blue_person, red_green_pair + 1, green_blue_pair, blue_red_pair)
        elif blue_person:
            return (accumulator_result * blue_person, free_person, red_person, green_person, blue_person - 1, red_green_pair, green_blue_pair + 1, blue_red_pair)
        else:
            return (accumulator_result * free_person, free_person - 1, red_person, green_person + 1, blue_person, red_green_pair, green_blue_pair, blue_red_pair)
    else: # ball_type == 'B'
        if red_green_pair:
            return (accumulator_result * red_green_pair, free_person, red_person, green_person, blue_person, red_green_pair - 1, green_blue_pair, blue_red_pair)
        elif red_person:
            return (accumulator_result * red_person, free_person, red_person - 1, green_person, blue_person, red_green_pair, green_blue_pair, blue_red_pair + 1)
        elif green_person:
            return (accumulator_result * green_person, free_person, red_person, green_person - 1, blue_person, red_green_pair, green_blue_pair + 1, blue_red_pair)
        else:
            return (accumulator_result * free_person, free_person - 1, red_person, green_person, blue_person + 1, red_green_pair, green_blue_pair, blue_red_pair)

final_result, *_ = reduce(
    lambda accumulated_state, current_ball:
        update_state(current_ball, *accumulated_state),
    input_ball_sequence,
    (ModuloInteger(1), input_ball_count, 0, 0, 0, 0, 0, 0)
)

print(final_result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.6123510599136353
    2. 'wrap' → logprob: -0.8623510599136353
    3. 'reduce' → logprob: -3.4873509407043457
    4. 'l' → logprob: -6.112350940704346
    5. ' wraps' → logprob: -6.362350940704346
    6. 'cached' → logprob: -7.612350940704346
    7. 'cache' → logprob: -7.987350940704346
    8. 'cmp' → logprob: -9.112351417541504
    9. '```' → logprob: -9.237351417541504
    10. ' partial' → logprob: -9.487351417541504

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010317044332623482
    2. '(lambda' → logprob: -4.760316848754883
    3. ' (' → logprob: -7.385316848754883
    4. ',' → logprob: -7.885316848754883
    5. 'def' → logprob: -8.135316848754883
    6. '.' → logprob: -8.635316848754883
    7. '```' → logprob: -10.135316848754883
    8. '(
' → logprob: -10.385316848754883
    9. 'lambda' → logprob: -10.635316848754883
    10. ' ' → logprob: -10.760316848754883

Token 5: 'input' (ID: 2586)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02542591281235218
    2. '(lambda' → logprob: -3.775425910949707
    3. '```' → logprob: -7.275425910949707
    4. '(
' → logprob: -8.150425910949707
    5. ',' → logprob: -8.150425910949707
    6. '.' → logprob: -8.275425910949707
    7. '\' → logprob: -8.775425910949707
    8. '\(' → logprob: -9.025425910949707
    9. 'def' → logprob: -9.025425910949707
    10. ' (' → logprob: -9.775425910949707

Token 6: '_ball' (ID: 138751)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0011053291382268071
    2. '(lambda' → logprob: -8.751105308532715
    3. '('' → logprob: -8.876105308532715
    4. '(
' → logprob: -8.876105308532715
    5. '`' → logprob: -9.251105308532715
    6. '```' → logprob: -9.251105308532715
    7. 's' → logprob: -9.501105308532715
    8. ''' → logprob: -9.876105308532715
    9. '("("' → logprob: -9.876105308532715
    10. ' (' → logprob: -9.876105308532715

Token 7: '_count' (ID: 7536)
  Prédit: 'ot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ot' → logprob: -0.117802195250988
    2. 's' → logprob: -3.492802143096924
    3. ')' → logprob: -4.367802143096924
    4. 't' → logprob: -4.367802143096924
    5. '=' → logprob: -4.617802143096924
    6. '_' → logprob: -4.617802143096924
    7. 'et' → logprob: -5.117802143096924
    8. 'ots' → logprob: -5.867802143096924
    9. '_input' → logprob: -5.867802143096924
    10. '```' → logprob: -5.867802143096924

Token 8: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28763750195503235
    2. 's' → logprob: -2.53763747215271
    3. '_' → logprob: -2.78763747215271
    4. ')' → logprob: -2.78763747215271
    5. ' =' → logprob: -3.28763747215271
    6. '(' → logprob: -4.912637710571289
    7. '[' → logprob: -7.037637710571289
    8. '.' → logprob: -7.287637710571289
    9. ',' → logprob: -8.162637710571289
    10. '_space' → logprob: -8.412637710571289

Token 9: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14106930792331696
    2. ' int' → logprob: -2.5160694122314453
    3. '0' → logprob: -3.7660694122314453
    4. 'int' → logprob: -3.8910694122314453
    5. '10' → logprob: -5.766069412231445
    6. '20' → logprob: -6.891069412231445
    7. ' []' → logprob: -7.141069412231445
    8. '[int' → logprob: -7.516069412231445
    9. '32' → logprob: -8.016069412231445
    10. ' "' → logprob: -8.516069412231445

Token 10: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0028953328728675842
    2. '(input' → logprob: -6.502895355224609
    3. '`' → logprob: -7.252895355224609
    4. ''' → logprob: -8.75289535522461
    5. '```' → logprob: -9.00289535522461
    6. 'input' → logprob: -9.62789535522461
    7. '('' → logprob: -9.75289535522461
    8. ' (' → logprob: -9.87789535522461
    9. '<|end|>' → logprob: -10.75289535522461
    10. '(open' → logprob: -10.87789535522461

Token 11: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01540361624211073
    2. '()' → logprob: -5.140403747558594
    3. '(' → logprob: -5.265403747558594
    4. '())' → logprob: -5.640403747558594
    5. '))' → logprob: -7.890403747558594
    6. '`)' → logprob: -9.140403747558594
    7. '('' → logprob: -9.265403747558594
    8. '')' → logprob: -9.515403747558594
    9. '")' → logprob: -10.640403747558594
    10. '(
' → logprob: -12.515403747558594

Token 12: 'input' (ID: 2586)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8268263936042786
    2. 'total' → logprob: -1.3268263339996338
    3. 'ball' → logprob: -1.7018263339996338
    4. 'balls' → logprob: -3.576826333999634
    5. ' result' → logprob: -5.076826572418213
    6. ' total' → logprob: -5.076826572418213
    7. ')' → logprob: -5.201826572418213
    8. 'weights' → logprob: -5.451826572418213
    9. 'colors' → logprob: -5.451826572418213
    10. 'counts' → logprob: -5.451826572418213

Token 13: '_ball' (ID: 138751)
  Prédit: '_ball'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ball' → logprob: -0.036840829998254776
    2. '_' → logprob: -3.5368409156799316
    3. '_b' → logprob: -6.786840915679932
    4. '_line' → logprob: -6.911840915679932
    5. '()' → logprob: -7.536840915679932
    6. '_space' → logprob: -7.911840915679932
    7. '_count' → logprob: -7.911840915679932
    8. '_color' → logprob: -8.036840438842773
    9. '_bal' → logprob: -8.286840438842773
    10. '_name' → logprob: -8.411840438842773

Token 14: '_sequence' (ID: 55606)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.04121622070670128
    2. '_' → logprob: -3.5412161350250244
    3. 's' → logprob: -5.1662163734436035
    4. '_s' → logprob: -6.0412163734436035
    5. '_counts' → logprob: -6.5412163734436035
    6. '_color' → logprob: -6.9162163734436035
    7. '_type' → logprob: -7.9162163734436035
    8. '_c' → logprob: -8.666215896606445
    9. '_co' → logprob: -9.791215896606445
    10. 'count' → logprob: -10.416215896606445

Token 15: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7882082462310791
    2. '[' → logprob: -1.038208246231079
    3. '=' → logprob: -2.163208246231079
    4. '.' → logprob: -3.413208246231079
    5. '_' → logprob: -3.913208246231079
    6. '[:]' → logprob: -4.9132080078125
    7. ')' → logprob: -5.1632080078125
    8. '.append' → logprob: -6.0382080078125
    9. ' ' → logprob: -6.2882080078125
    10. '.split' → logprob: -6.9132080078125

Token 16: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.166953906416893
    2. 'input' → logprob: -1.9169539213180542
    3. ' list' → logprob: -5.166954040527344
    4. ' ' → logprob: -7.541954040527344
    5. 'list' → logprob: -8.291954040527344
    6. ' []' → logprob: -8.666954040527344
    7. '(input' → logprob: -11.541954040527344
    8. '[input' → logprob: -11.666954040527344
    9. '[]' → logprob: -12.291954040527344
    10. '=input' → logprob: -12.541954040527344

Token 17: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010620933957397938
    2. '()' → logprob: -5.135621070861816
    3. '_parent' → logprob: -6.885621070861816
    4. '```' → logprob: -6.885621070861816
    5. '('' → logprob: -7.635621070861816
    6. ')' → logprob: -7.760621070861816
    7. ''' → logprob: -8.260621070861816
    8. '.' → logprob: -8.385621070861816
    9. '_' → logprob: -8.635621070861816
    10. '`' → logprob: -8.760621070861816

Token 18: 'mod' (ID: 4847)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.21039189398288727
    2. 'ball' → logprob: -2.9603919982910156
    3. '_' → logprob: -3.8353919982910156
    4. 'total' → logprob: -3.9603919982910156
    5. 'count' → logprob: -3.9603919982910156
    6. 'balls' → logprob: -3.9603919982910156
    7. 'counts' → logprob: -4.085391998291016
    8. '.' → logprob: -5.085391998291016
    9. 'unique' → logprob: -5.210391998291016
    10. 'sequence' → logprob: -5.335391998291016

Token 19: 'ulo' (ID: 5953)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3228495717048645
    2. ' =' → logprob: -1.9478495121002197
    3. '=' → logprob: -3.0728495121002197
    4. ' ' → logprob: -3.3228495121002197
    5. '_val' → logprob: -3.8228495121002197
    6. 'ulo' → logprob: -4.197849750518799
    7. 'ulus' → logprob: -5.197849750518799
    8. 'ule' → logprob: -5.572849750518799
    9. '_value' → logprob: -6.697849750518799
    10. 'ul' → logprob: -7.447849750518799

Token 20: '_prime' (ID: 98616)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05980774760246277
    2. ' =' → logprob: -3.434807777404785
    3. '=' → logprob: -4.184807777404785
    4. ' ' → logprob: -4.934807777404785
    5. '(' → logprob: -6.309807777404785
    6. '_value' → logprob: -7.684807777404785
    7. ' _' → logprob: -7.809807777404785
    8. '_val' → logprob: -8.559807777404785
    9. '_space' → logprob: -8.684807777404785
    10. ')' → logprob: -9.934807777404785

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2567647695541382
    2. '_' → logprob: -2.1317648887634277
    3. '=' → logprob: -2.2567648887634277
    4. ' ' → logprob: -6.131764888763428
    5. ')' → logprob: -8.00676441192627
    6. '(' → logprob: -8.25676441192627
    7. 's' → logprob: -9.25676441192627
    8. ',' → logprob: -9.50676441192627
    9. '_space' → logprob: -10.38176441192627
    10. ' _' → logprob: -10.63176441192627

Token 22: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01245137583464384
    2. '100' → logprob: -4.512451171875
    3. '10' → logprob: -6.762451171875
    4. '998' → logprob: -8.762451171875
    5. '997' → logprob: -10.512451171875
    6. '1' → logprob: -10.887451171875
    7. '999' → logprob: -11.387451171875
    8. '101' → logprob: -12.012451171875
    9. '7' → logprob: -12.637451171875
    10. '2' → logprob: -13.012451171875

Token 23: '998' (ID: 34589)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.13673201203346252
    2. '10' → logprob: -2.1367321014404297
    3. '998' → logprob: -5.51173210144043
    4. '999' → logprob: -6.26173210144043
    5. '1' → logprob: -7.26173210144043
    6. '997' → logprob: -7.63673210144043
    7. '101' → logprob: -7.76173210144043
    8. '2' → logprob: -8.13673210144043
    9. '7' → logprob: -8.26173210144043
    10. ' ' → logprob: -8.63673210144043

Token 24: '244' (ID: 25291)
  Prédit: '244'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '244' → logprob: -0.0004411591507960111
    2. '457' → logprob: -8.875441551208496
    3. '247' → logprob: -9.250441551208496
    4. '243' → logprob: -9.625441551208496
    5. '7' → logprob: -10.500441551208496
    6. '953' → logprob: -10.750441551208496
    7. '587' → logprob: -10.875441551208496
    8. '257' → logprob: -11.625441551208496
    9. '245' → logprob: -12.000441551208496
    10. '727' → logprob: -12.000441551208496

Token 25: '353' (ID: 32996)
  Prédit: '353'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '353' → logprob: -0.0077700018882751465
    2. '853' → logprob: -4.88277006149292
    3. '357' → logprob: -9.007769584655762
    4. '857' → logprob: -10.507769584655762
    5. '257' → logprob: -13.007769584655762
    6. '```' → logprob: -13.382769584655762
    7. '351' → logprob: -13.632769584655762
    8. '7' → logprob: -13.757769584655762
    9. '287' → logprob: -14.132769584655762
    10. '349' → logprob: -14.132769584655762

Token 26: '

' (ID: 279)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1413905620574951
    2. 'n' → logprob: -1.8913905620574951
    3. '\' → logprob: -2.266390562057495
    4. '
' → logprob: -2.391390562057495
    5. '#' → logprob: -2.891390562057495
    6. 'result' → logprob: -2.891390562057495
    7. ' ' → logprob: -3.141390562057495
    8. ' 
' → logprob: -3.641390562057495
    9. '\n' → logprob: -3.641390562057495
    10. '' → logprob: -3.766390562057495

Token 27: 'class' (ID: 1444)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5068185925483704
    2. 'dp' → logprob: -1.8818185329437256
    3. 'def' → logprob: -2.5068185329437256
    4. 'factor' → logprob: -3.0068185329437256
    5. 'total' → logprob: -3.8818185329437256
    6. 'answer' → logprob: -4.006818771362305
    7. 'ball' → logprob: -4.006818771362305
    8. 'count' → logprob: -4.506818771362305
    9. 'product' → logprob: -4.506818771362305
    10. 'counts' → logprob: -5.631818771362305

Token 28: ' Mod' (ID: 7191)
  Prédit: ' Factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Factor' → logprob: -0.3938416838645935
    2. ' ' → logprob: -2.0188417434692383
    3. ' Solution' → logprob: -2.0188417434692383
    4. ' Counter' → logprob: -4.518841743469238
    5. ' Count' → logprob: -4.893841743469238
    6. ' Dynamic' → logprob: -5.018841743469238
    7. ' Combination' → logprob: -5.143841743469238
    8. ' Com' → logprob: -5.768841743469238
    9. ' Segment' → logprob: -5.768841743469238
    10. ' Polynomial' → logprob: -5.768841743469238

Token 29: 'ulo' (ID: 5953)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.525952935218811
    2. 'ular' → logprob: -1.150952935218811
    3. 'ulo' → logprob: -2.5259528160095215
    4. 'int' → logprob: -5.1509528160095215
    5. 'Int' → logprob: -5.5259528160095215
    6. 'ule' → logprob: -7.1509528160095215
    7. 'uler' → logprob: -7.9009528160095215
    8. '```' → logprob: -8.02595329284668
    9. 'ulus' → logprob: -8.15095329284668
    10. ':
' → logprob: -8.27595329284668

Token 30: 'Integer' (ID: 5437)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004984631086699665
    2. 'Number' → logprob: -8.75049877166748
    3. 'Integer' → logprob: -9.00049877166748
    4. 'Calculator' → logprob: -9.75049877166748
    5. '():' → logprob: -11.00049877166748
    6. '(int' → logprob: -11.00049877166748
    7. 'Arithmetic' → logprob: -11.12549877166748
    8. 'Factor' → logprob: -11.75049877166748
    9. ':
' → logprob: -11.87549877166748
    10. '):' → logprob: -12.00049877166748

Token 31: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007682223338633776
    2. '(' → logprob: -4.8826823234558105
    3. '():' → logprob: -10.007681846618652
    4. '(:' → logprob: -11.507681846618652
    5. ' :' → logprob: -11.882681846618652
    6. '):' → logprob: -13.007681846618652
    7. ':
' → logprob: -13.257681846618652
    8. '(object' → logprob: -13.257681846618652
    9. '(":' → logprob: -13.257681846618652
    10. ':**' → logprob: -13.507681846618652

Token 32: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014638095162808895
    2. '   ' → logprob: -4.6396379470825195
    3. '(' → logprob: -6.5146379470825195
    4. ' :' → logprob: -6.6396379470825195
    5. ':
' → logprob: -7.0146379470825195
    6. '<|end|>' → logprob: -8.38963794708252
    7. ' ' → logprob: -8.51463794708252
    8. '():' → logprob: -8.76463794708252
    9. '  ' → logprob: -9.01463794708252
    10. '    ' → logprob: -9.38963794708252

Token 33: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.313107967376709
    2. 'def' (adapté à ' def') → logprob: -1.563107967376709
    3. '   ' → logprob: -2.938107967376709
    4. '    ' → logprob: -5.313107967376709
    5. ' ' → logprob: -7.188107967376709
    6. '    
' → logprob: -8.938108444213867
    7. ' __' → logprob: -9.063108444213867
    8. '  ' → logprob: -9.313108444213867
    9. 'class' → logprob: -9.313108444213867
    10. '	def' → logprob: -9.938108444213867

Token 34: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.1621675044298172
    2. ' ' → logprob: -1.9121675491333008
    3. ' init' → logprob: -6.662167549133301
    4. ' _' → logprob: -7.912167549133301
    5. ' ' → logprob: -9.0371675491333
    6. '__' → logprob: -9.6621675491333
    7. '_init' → logprob: -10.1621675491333
    8. '_' → logprob: -10.4121675491333
    9. 'init' → logprob: -10.5371675491333
    10. '  ' → logprob: -11.9121675491333

Token 35: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.128163257315464e-07
    2. 'ini' → logprob: -16.0
    3. 'int' → logprob: -16.375
    4. 'in' → logprob: -16.625
    5. 'inite' → logprob: -19.0
    6. '_init' → logprob: -19.25
    7. ' init' → logprob: -19.5
    8. 'innit' → logprob: -19.75
    9. 'initi' → logprob: -20.875
    10. 'i' → logprob: -21.0

Token 36: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.05531720072031021
    2. '__' → logprob: -2.9303171634674072
    3. '__(
' → logprob: -8.555316925048828
    4. '__((' → logprob: -9.305316925048828
    5. '(' → logprob: -9.680316925048828
    6. '__('' → logprob: -10.555316925048828
    7. '__(*' → logprob: -10.555316925048828
    8. '(self' → logprob: -10.680316925048828
    9. '_' → logprob: -13.180316925048828
    10. '_(' → logprob: -13.305316925048828

Token 37: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0010343570029363036
    2. ' self' → logprob: -6.876034259796143
    3. ' ' → logprob: -13.8760347366333
    4. '_self' → logprob: -15.0010347366333
    5. 's' → logprob: -16.251033782958984
    6. '	self' → logprob: -17.001033782958984
    7. '0' → logprob: -17.001033782958984
    8. '   ' → logprob: -17.001033782958984
    9. '(self' → logprob: -17.126033782958984
    10. ',' → logprob: -17.626033782958984

Token 38: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03608129546046257
    2. ' ,' → logprob: -3.536081314086914
    3. 'self' → logprob: -5.161081314086914
    4. ',self' → logprob: -8.161081314086914
    5. '_,' → logprob: -8.911081314086914
    6. ' self' → logprob: -10.036081314086914
    7. ')' → logprob: -10.411081314086914
    8. '_self' → logprob: -10.911081314086914
    9. '__,' → logprob: -11.286081314086914
    10. ',value' → logprob: -11.536081314086914

Token 39: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.41253963112831116
    2. 'self' → logprob: -1.2875396013259888
    3. ' value' → logprob: -3.1625397205352783
    4. ' self' → logprob: -4.412539482116699
    5. 'x' → logprob: -5.412539482116699
    6. 'val' → logprob: -6.787539482116699
    7. 'n' → logprob: -7.037539482116699
    8. ' x' → logprob: -7.412539482116699
    9. 'v' → logprob: -8.6625394821167
    10. ' n' → logprob: -9.1625394821167

Token 40: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3556658923625946
    2. ',' → logprob: -1.230665922164917
    3. ':' → logprob: -5.855665683746338
    4. ' ):' → logprob: -6.355665683746338
    5. ' ,' → logprob: -6.730665683746338
    6. '   ' → logprob: -7.605665683746338
    7. ')' → logprob: -7.855665683746338
    8. '):
' → logprob: -8.480666160583496
    9. '=' → logprob: -8.730666160583496
    10. '       ' → logprob: -10.855666160583496

Token 41: '       ' (ID: 309)
  Prédit: '        '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '        ' → logprob: -0.25768429040908813
    2. '       ' → logprob: -2.0076842308044434
    3. ' ' → logprob: -3.1326842308044434
    4. '    ' → logprob: -3.5076842308044434
    5. ',' → logprob: -5.257684230804443
    6. ' (' → logprob: -5.632684230804443
    7. '=' → logprob: -6.132684230804443
    8. ' =' → logprob: -6.757684230804443
    9. '<|end|>' → logprob: -6.757684230804443
    10. '(' → logprob: -6.882684230804443

Token 42: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.3254772126674652
    2. ' self' → logprob: -1.3254772424697876
    3. '       ' → logprob: -4.450477123260498
    4. '(self' → logprob: -8.825477600097656
    5. 'value' → logprob: -8.825477600097656
    6. ' (' → logprob: -9.325477600097656
    7. ' value' → logprob: -10.075477600097656
    8. ' ' → logprob: -11.075477600097656
    9. 'super' → logprob: -11.825477600097656
    10. '   ' → logprob: -12.325477600097656

Token 43: '.value' (ID: 4683)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6921713948249817
    2. '.value' → logprob: -0.8171713948249817
    3. '=' → logprob: -3.692171335220337
    4. 'value' → logprob: -3.817171335220337
    5. '.' → logprob: -4.692171573638916
    6. '_value' → logprob: -7.192171573638916
    7. ' ' → logprob: -7.942171573638916
    8. ' value' → logprob: -8.067171096801758
    9. '   ' → logprob: -9.817171096801758
    10. ' .' → logprob: -9.942171096801758

Token 44: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31339120864868164
    2. '=' → logprob: -1.3133912086486816
    3. ' %=' → logprob: -9.813390731811523
    4. '   ' → logprob: -10.313390731811523
    5. ' ' → logprob: -10.563390731811523
    6. '%=' → logprob: -12.313390731811523
    7. '%' → logprob: -12.313390731811523
    8. '    ' → logprob: -13.063390731811523
    9. ')' → logprob: -13.813390731811523
    10. '       ' → logprob: -13.813390731811523

Token 45: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.0700034499168396
    2. 'value' → logprob: -2.6950035095214844
    3. '(value' → logprob: -9.695003509521484
    4. 'int' → logprob: -13.445003509521484
    5. ' int' → logprob: -13.570003509521484
    6. ' (' → logprob: -13.820003509521484
    7. '	value' → logprob: -14.445003509521484
    8. ' ' → logprob: -14.445003509521484
    9. '.value' → logprob: -15.695003509521484
    10. '   ' → logprob: -16.195003509521484

Token 46: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.006131418514996767
    2. '%' → logprob: -5.131131649017334
    3. '<|end|>' → logprob: -9.631131172180176
    4. '   ' → logprob: -9.881131172180176
    5. ' ' → logprob: -10.131131172180176
    6. '    ' → logprob: -11.006131172180176
    7. ' %=' → logprob: -11.756131172180176
    8. '  ' → logprob: -12.006131172180176
    9. '       ' → logprob: -12.256131172180176
    10. '<|end|>' → logprob: -12.381131172180176

Token 47: ' modulo' (ID: 112372)
  Prédit: ' modulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' modulo' → logprob: -0.018152866512537003
    2. 'mod' → logprob: -4.018152713775635
    3. 'module' → logprob: -13.768153190612793
    4. ' ' → logprob: -14.018153190612793
    5. 'Modulo' → logprob: -14.143153190612793
    6. '	mod' → logprob: -16.518152236938477
    7. '_mod' → logprob: -16.893152236938477
    8. ' ' → logprob: -17.018152236938477
    9. 'self' → logprob: -17.268152236938477
    10. '```' → logprob: -17.643152236938477

Token 48: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -3.4121114822482923e-06
    2. ' _' → logprob: -13.500003814697266
    3. '_' → logprob: -14.375003814697266
    4. 'prime' → logprob: -15.000003814697266
    5. '_python' → logprob: -15.625003814697266
    6. '\' → logprob: -16.000003814697266
    7. 'o' → logprob: -16.125003814697266
    8. '_base' → logprob: -16.250003814697266
    9. '```' → logprob: -16.375003814697266
    10. '_integer' → logprob: -16.500003814697266

Token 49: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 50: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6767515540122986
    2. '   ' → logprob: -1.0517516136169434
    3. '<|end|>' → logprob: -2.6767516136169434
    4. '    
' → logprob: -2.9267516136169434
    5. 'def' → logprob: -4.926751613616943
    6. ' def' → logprob: -5.301751613616943
    7. '

' → logprob: -6.301751613616943
    8. '<|end|>' → logprob: -6.551751613616943
    9. ' 
' → logprob: -6.801751613616943
    10. '        
' → logprob: -7.176751613616943

Token 51: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.052586428821086884
    2. ' def' → logprob: -3.052586317062378
    3. '   ' → logprob: -5.552586555480957
    4. ' ' → logprob: -9.302586555480957
    5. '	def' → logprob: -11.552586555480957
    6. '+' → logprob: -11.802586555480957
    7. '    
' → logprob: -12.677586555480957
    8. '  ' → logprob: -14.927586555480957
    9. '```' → logprob: -14.927586555480957
    10. '__' → logprob: -15.302586555480957

Token 52: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.309143602848053
    2. ' add' → logprob: -2.559143543243408
    3. '_add' → logprob: -2.684143543243408
    4. '__' → logprob: -3.309143543243408
    5. ' ' → logprob: -3.559143543243408
    6. '+' → logprob: -3.684143543243408
    7. 'add' → logprob: -4.684143543243408
    8. ' +' → logprob: -4.809143543243408
    9. ' _' → logprob: -5.059143543243408
    10. '_' → logprob: -6.809143543243408

Token 53: 'str' (ID: 689)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.06966828554868698
    2. 'mul' → logprob: -2.8196682929992676
    3. 'pow' → logprob: -5.444668292999268
    4. 'init' → logprob: -6.319668292999268
    5. 'mod' → logprob: -7.069668292999268
    6. 'eq' → logprob: -8.06966781616211
    7. 'flo' → logprob: -8.06966781616211
    8. 'imul' → logprob: -10.44466781616211
    9. 'int' → logprob: -10.94466781616211
    10. 'i' → logprob: -11.81966781616211

Token 54: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.25211086869239807
    2. '__' → logprob: -1.5021108388900757
    3. '__('' → logprob: -9.252110481262207
    4. '__(
' → logprob: -9.752110481262207
    5. '__("' → logprob: -11.127110481262207
    6. '__((' → logprob: -12.127110481262207
    7. '__(*' → logprob: -12.752110481262207
    8. '___' → logprob: -13.502110481262207
    9. '(' → logprob: -13.877110481262207
    10. '__.__' → logprob: -14.002110481262207

Token 55: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.504040356958285e-05
    2. ')' → logprob: -9.750064849853516
    3. '(self' → logprob: -12.125064849853516
    4. ' self' → logprob: -14.625064849853516
    5. 's' → logprob: -15.375064849853516
    6. '	self' → logprob: -16.375064849853516
    7. ')(' → logprob: -16.500064849853516
    8. '   ' → logprob: -16.625064849853516
    9. '
' → logprob: -16.750064849853516
    10. ' )' → logprob: -17.375064849853516

Token 56: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05008348450064659
    2. '):
' → logprob: -3.5500833988189697
    3. ')' → logprob: -3.9250833988189697
    4. 'self' → logprob: -8.67508316040039
    5. ' ):' → logprob: -9.92508316040039
    6. '):

' → logprob: -9.92508316040039
    7. '):
' → logprob: -10.42508316040039
    8. '   ' → logprob: -10.67508316040039
    9. ',' → logprob: -10.80008316040039
    10. ').__' → logprob: -11.92508316040039

Token 57: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47599098086357117
    2. 'return' → logprob: -0.9759910106658936
    3. ' return' → logprob: -6.4759907722473145
    4. '   ' → logprob: -8.225991249084473
    5. ':return' → logprob: -10.600991249084473
    6. 'self' → logprob: -10.975991249084473
    7. ')' → logprob: -11.100991249084473
    8. '    ' → logprob: -11.850991249084473
    9. 'f' → logprob: -12.100991249084473
    10. '     ' → logprob: -12.225991249084473

Token 58: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0010180408135056496
    2. ' return' → logprob: -7.001018047332764
    3. '       ' → logprob: -9.251017570495605
    4. 'str' → logprob: -12.126017570495605
    5. '   ' → logprob: -12.251017570495605
    6. 'f' → logprob: -16.376018524169922
    7. '	return' → logprob: -16.876018524169922
    8. '           ' → logprob: -17.001018524169922
    9. '    ' → logprob: -17.126018524169922
    10. '{return' → logprob: -17.126018524169922

Token 59: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.030795449391007423
    2. ' str' → logprob: -3.5307953357696533
    3. 'f' → logprob: -7.030795574188232
    4. ' f' → logprob: -8.780795097351074
    5. ' ' → logprob: -12.905795097351074
    6. '(str' → logprob: -13.030795097351074
    7. '	str' → logprob: -13.405795097351074
    8. '   ' → logprob: -15.530795097351074
    9. '=str' → logprob: -16.28079605102539
    10. ' ' → logprob: -17.28079605102539

Token 60: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.619311974034645e-05
    2. '(' → logprob: -10.250036239624023
    3. 'self' → logprob: -14.750036239624023
    4. ' (' → logprob: -15.375036239624023
    5. '(int' → logprob: -17.125036239624023
    6. '((' → logprob: -18.000036239624023
    7. '```' → logprob: -18.125036239624023
    8. '(
' → logprob: -18.375036239624023
    9. '   ' → logprob: -18.625036239624023
    10. '(Self' → logprob: -19.500036239624023

Token 61: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -1.981667537620524e-06
    2. '.' → logprob: -13.625001907348633
    3. ').' → logprob: -14.500001907348633
    4. '.val' → logprob: -15.375001907348633
    5. '.v' → logprob: -17.625001907348633
    6. ' .' → logprob: -18.375001907348633
    7. 'value' → logprob: -18.375001907348633
    8. 'alue' → logprob: -19.000001907348633
    9. ')' → logprob: -19.250001907348633
    10. '.va' → logprob: -19.750001907348633

Token 62: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4378848391061183e-05
    2. '   ' → logprob: -11.250014305114746
    3. '<|end|>' → logprob: -14.625014305114746
    4. ')
' → logprob: -15.000014305114746
    5. ' )' → logprob: -15.625014305114746
    6. '}' → logprob: -16.625015258789062
    7. '`)' → logprob: -16.750015258789062
    8. '))' → logprob: -17.250015258789062
    9. ')`' → logprob: -17.625015258789062
    10. ' ' → logprob: -17.625015258789062

Token 63: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019594402983784676
    2. '    
' → logprob: -7.126959323883057
    3. '
' → logprob: -7.501959323883057
    4. '  ' → logprob: -9.126959800720215
    5. ' ' → logprob: -9.251959800720215
    6. '+' → logprob: -9.376959800720215
    7. '<|end|>' → logprob: -9.876959800720215
    8. '    ' → logprob: -10.001959800720215
    9. ' 
' → logprob: -10.126959800720215
    10. 'def' → logprob: -10.251959800720215

Token 64: ' __' (ID: 2516)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012249445542693138
    2. '    
' → logprob: -5.13724946975708
    3. 'def' → logprob: -6.26224946975708
    4. '
' → logprob: -6.76224946975708
    5. ' ' → logprob: -7.13724946975708
    6. ' def' → logprob: -7.51224946975708
    7. '+' → logprob: -7.63724946975708
    8. ' 
' → logprob: -7.76224946975708
    9. '+
' → logprob: -8.512248992919922
    10. '   
' → logprob: -8.762248992919922

Token 65: 'repr' (ID: 67002)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.07383482903242111
    2. 'eq' → logprob: -3.1988348960876465
    3. 'mul' → logprob: -3.9488348960876465
    4. 'int' → logprob: -5.4488348960876465
    5. 'repr' → logprob: -5.4488348960876465
    6. 'pow' → logprob: -6.4488348960876465
    7. 'mod' → logprob: -7.1988348960876465
    8. 'flo' → logprob: -9.323834419250488
    9. 'str' → logprob: -10.698834419250488
    10. 'init' → logprob: -11.448834419250488

Token 66: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00781505461782217
    2. '__(' → logprob: -4.882814884185791
    3. '__(
' → logprob: -9.50781536102295
    4. '(' → logprob: -10.25781536102295
    5. '=' → logprob: -10.88281536102295
    6. '___' → logprob: -11.13281536102295
    7. '__.__' → logprob: -11.25781536102295
    8. '__('' → logprob: -11.38281536102295
    9. '(self' → logprob: -11.50781536102295
    10. '__((' → logprob: -12.25781536102295

Token 67: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2019064873456955
    2. '__' → logprob: -1.826906442642212
    3. ' =' → logprob: -3.826906442642212
    4. '=self' → logprob: -9.951906204223633
    5. 'self' → logprob: -10.201906204223633
    6. '   ' → logprob: -10.826906204223633
    7. '__(' → logprob: -11.326906204223633
    8. '(self' → logprob: -12.326906204223633
    9. '_=' → logprob: -12.326906204223633
    10. '___' → logprob: -13.076906204223633

Token 68: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00012856863031629473
    2. ' __' → logprob: -9.000128746032715
    3. 'str' → logprob: -12.250128746032715
    4. '_str' → logprob: -15.750128746032715
    5. '___' → logprob: -16.1251277923584
    6. ' str' → logprob: -17.6251277923584
    7. 'Str' → logprob: -17.7501277923584
    8. '#__' → logprob: -17.7501277923584
    9. '```' → logprob: -18.8751277923584
    10. '   ' → logprob: -19.0001277923584

Token 69: 'str' (ID: 689)
  Prédit: 'str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -1.8624639324116288e-06
    2. 'repr' → logprob: -13.250001907348633
    3. 'r' → logprob: -18.250001907348633
    4. 's' → logprob: -18.500001907348633
    5. '_str' → logprob: -19.750001907348633
    6. 'st' → logprob: -21.375001907348633
    7. '(str' → logprob: -21.750001907348633
    8. 'init' → logprob: -22.125001907348633
    9. ' str' → logprob: -22.250001907348633
    10. 'tr' → logprob: -22.500001907348633

Token 70: '__

' (ID: 58939)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029572049155831337
    2. '
' → logprob: -4.779572010040283
    3. '    
' → logprob: -4.779572010040283
    4. 'def' → logprob: -5.404572010040283
    5. '<|end|>' → logprob: -5.404572010040283
    6. '<|end|>' → logprob: -7.154572010040283
    7. ' def' → logprob: -7.654572010040283
    8. '+' → logprob: -8.029572486877441
    9. '  
' → logprob: -8.154572486877441
    10. ')' → logprob: -8.654572486877441

Token 71: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013189997524023056
    2. '+' → logprob: -4.388189792633057
    3. 'def' → logprob: -8.513190269470215
    4. '    
' → logprob: -9.138190269470215
    5. '+
' → logprob: -9.138190269470215
    6. '(' → logprob: -9.513190269470215
    7. ' +' → logprob: -10.388190269470215
    8. '*' → logprob: -10.763190269470215
    9. '```' → logprob: -10.763190269470215
    10. '=' → logprob: -10.888190269470215

Token 72: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.26491251587867737
    2. '   ' → logprob: -1.639912486076355
    3. '+' → logprob: -3.2649126052856445
    4. ' def' → logprob: -8.014912605285645
    5. '	def' → logprob: -10.139912605285645
    6. '+
' → logprob: -10.139912605285645
    7. ' ' → logprob: -10.264912605285645
    8. '__' → logprob: -10.389912605285645
    9. '```' → logprob: -11.389912605285645
    10. '  ' → logprob: -11.514912605285645

Token 73: ' __' (ID: 2516)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.8186101913452148
    2. ' add' → logprob: -0.8186101913452148
    3. '_add' → logprob: -2.318610191345215
    4. ' __' → logprob: -4.318610191345215
    5. 'pow' → logprob: -6.318610191345215
    6. ' ' → logprob: -6.318610191345215
    7. 'mul' → logprob: -7.318610191345215
    8. '__' → logprob: -7.818610191345215
    9. ' mul' → logprob: -7.818610191345215
    10. '_mul' → logprob: -7.943610191345215

Token 74: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.06009144335985184
    2. 'mul' → logprob: -2.935091495513916
    3. 'pow' → logprob: -5.435091495513916
    4. 'eq' → logprob: -7.935091495513916
    5. 'init' → logprob: -9.060091018676758
    6. 'sub' → logprob: -9.185091018676758
    7. 'flo' → logprob: -9.310091018676758
    8. 'mod' → logprob: -9.435091018676758
    9. 'imul' → logprob: -10.060091018676758
    10. 'rm' → logprob: -11.435091018676758

Token 75: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.38748618960380554
    2. '__' → logprob: -1.137486219406128
    3. '__('' → logprob: -8.137486457824707
    4. '_' → logprob: -8.637486457824707
    5. '__(
' → logprob: -9.387486457824707
    6. '__((' → logprob: -10.637486457824707
    7. '(' → logprob: -11.512486457824707
    8. '__(*' → logprob: -11.762486457824707
    9. '__("' → logprob: -12.012486457824707
    10. '_(' → logprob: -12.137486457824707

Token 76: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -8.2994620242971e-06
    2. ' self' → logprob: -11.875008583068848
    3. 'other' → logprob: -13.875008583068848
    4. '(self' → logprob: -15.250008583068848
    5. ')' → logprob: -17.50000762939453
    6. '	self' → logprob: -17.75000762939453
    7. '_self' → logprob: -17.75000762939453
    8. '
' → logprob: -17.87500762939453
    9. ' ' → logprob: -18.12500762939453
    10. '   ' → logprob: -18.50000762939453

Token 77: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003336337162181735
    2. ' ,' → logprob: -5.753336429595947
    3. 'self' → logprob: -9.253335952758789
    4. '__,' → logprob: -10.628335952758789
    5. ',self' → logprob: -11.628335952758789
    6. ')' → logprob: -11.628335952758789
    7. '<|end|>' → logprob: -12.003335952758789
    8. '_,' → logprob: -12.503335952758789
    9. ',value' → logprob: -13.378335952758789
    10. ',
' → logprob: -14.253335952758789

Token 78: ' operand' (ID: 63895)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.1269330382347107
    2. ' other' → logprob: -2.1269330978393555
    3. 'self' → logprob: -12.376933097839355
    4. 'Other' → logprob: -15.001933097839355
    5. ' self' → logprob: -15.876933097839355
    6. '(other' → logprob: -16.12693214416504
    7. '_other' → logprob: -16.50193214416504
    8. ' ' → logprob: -17.00193214416504
    9. 'o' → logprob: -17.37693214416504
    10. ' o' → logprob: -18.12693214416504

Token 79: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003299389500170946
    2. '):
' → logprob: -5.753299236297607
    3. ' ):' → logprob: -10.253299713134766
    4. ')' → logprob: -10.253299713134766
    5. '):
' → logprob: -10.628299713134766
    6. 'self' → logprob: -11.253299713134766
    7. ',' → logprob: -11.753299713134766
    8. ':' → logprob: -13.503299713134766
    9. '(self' → logprob: -13.878299713134766
    10. '):

' → logprob: -14.003299713134766

Token 80: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8316791653633118
    2. ' return' → logprob: -1.456679105758667
    3. ' other' → logprob: -2.956679105758667
    4. 'return' → logprob: -2.956679105758667
    5. ' (' → logprob: -3.206679105758667
    6. 'self' → logprob: -3.331679105758667
    7. ' Mod' → logprob: -3.456679105758667
    8. '(Mod' → logprob: -3.456679105758667
    9. 'Mod' → logprob: -3.831679105758667
    10. ' self' → logprob: -3.956679105758667

Token 81: ' if' (ID: 538)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.8287431001663208
    2. 'Modulo' → logprob: -1.0787431001663208
    3. ' Mod' → logprob: -1.9537431001663208
    4. '(Mod' → logprob: -2.9537429809570312
    5. 'self' → logprob: -3.8287429809570312
    6. ' self' → logprob: -5.703742980957031
    7. 'return' → logprob: -6.203742980957031
    8. ' return' → logprob: -6.953742980957031
    9. '       ' → logprob: -7.828742980957031
    10. '(self' → logprob: -8.578742980957031

Token 82: ' isinstance' (ID: 25889)
  Prédit: ' isinstance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.0002529952325858176
    2. 'is' → logprob: -8.375252723693848
    3. ' type' → logprob: -11.375252723693848
    4. 'type' → logprob: -11.750252723693848
    5. ' hasattr' → logprob: -13.375252723693848
    6. ' not' → logprob: -14.125252723693848
    7. '(is' → logprob: -15.125252723693848
    8. '  ' → logprob: -16.000253677368164
    9. ' ' → logprob: -16.000253677368164
    10. '   ' → logprob: -16.250253677368164

Token 83: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.842555426876061e-06
    2. '(self' → logprob: -12.375004768371582
    3. 'operand' → logprob: -15.125004768371582
    4. '(op' → logprob: -15.750004768371582
    5. ' operand' → logprob: -16.5000057220459
    6. '(operator' → logprob: -16.6250057220459
    7. ' (' → logprob: -18.6250057220459
    8. '(value' → logprob: -18.8750057220459
    9. '(other' → logprob: -19.3750057220459
    10. '(mod' → logprob: -19.6250057220459

Token 84: 'operand' (ID: 73439)
  Prédit: 'operand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operand' → logprob: -0.08095163851976395
    2. '(' → logprob: -2.580951690673828
    3. ' operand' → logprob: -6.205951690673828
    4. 'Mod' → logprob: -11.080951690673828
    5. 'self' → logprob: -11.330951690673828
    6. '(Mod' → logprob: -12.205951690673828
    7. 'Operand' → logprob: -12.705951690673828
    8. '_operand' → logprob: -13.330951690673828
    9. '(self' → logprob: -13.455951690673828
    10. 'Modulo' → logprob: -13.705951690673828

Token 85: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5946545600891113
    2. '(Mod' → logprob: -0.8446545600891113
    3. '(' → logprob: -4.469654560089111
    4. '(self' → logprob: -4.969654560089111
    5. ' ,' → logprob: -9.844654083251953
    6. '(mod' → logprob: -10.469654083251953
    7. '(Module' → logprob: -10.969654083251953
    8. ' (' → logprob: -11.219654083251953
    9. ',(' → logprob: -11.844654083251953
    10. ')' → logprob: -11.844654083251953

Token 86: ' Mod' (ID: 7191)
  Prédit: 'Modulo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Modulo' → logprob: -0.39422792196273804
    2. ' Mod' → logprob: -1.2692279815673828
    3. 'Mod' → logprob: -3.144227981567383
    4. 'int' → logprob: -6.894227981567383
    5. ' int' → logprob: -8.019227981567383
    6. '(Mod' → logprob: -8.394227981567383
    7. ' Modular' → logprob: -10.894227981567383
    8. ' ' → logprob: -11.019227981567383
    9. ' modulo' → logprob: -11.144227981567383
    10. '_Mod' → logprob: -11.394227981567383

Token 87: 'ulo' (ID: 5953)
  Prédit: 'ulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulo' → logprob: -4.513339445111342e-05
    2. 'olo' → logprob: -11.000044822692871
    3. 'Modulo' → logprob: -11.000044822692871
    4. 'o' → logprob: -12.250044822692871
    5. ' modulo' → logprob: -12.250044822692871
    6. 'ULO' → logprob: -14.000044822692871
    7. 'u' → logprob: -15.375044822692871
    8. 'ule' → logprob: -15.500044822692871
    9. 'uto' → logprob: -15.625044822692871
    10. 'od' → logprob: -15.875044822692871

Token 88: 'Integer' (ID: 5437)
  Prédit: 'Integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Integer' → logprob: 0.0
    2. '_integer' → logprob: -19.625
    3. ' Integer' → logprob: -19.875
    4. '_Integer' → logprob: -20.625
    5. '_INTEGER' → logprob: -21.25
    6. '	Integer' → logprob: -21.375
    7. '.Integer' → logprob: -21.875
    8. 'integer' → logprob: -21.875
    9. 'UInteger' → logprob: -22.125
    10. '<Integer' → logprob: -22.5

Token 89: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3133014440536499
    2. '):
' → logprob: -1.31330144405365
    3. '):
' → logprob: -10.813301086425781
    4. ' ):' → logprob: -11.563301086425781
    5. ')' → logprob: -12.063301086425781
    6. ' ):
' → logprob: -13.188301086425781
    7. '):

' → logprob: -13.438301086425781
    8. '   ' → logprob: -14.688301086425781
    9. '       ' → logprob: -15.563301086425781
    10. ':' → logprob: -15.813301086425781

Token 90: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03087659738957882
    2. ':
' → logprob: -3.530876636505127
    3. ':return' → logprob: -7.030876636505127
    4. '):' → logprob: -9.280876159667969
    5. '           ' → logprob: -9.405876159667969
    6. '):
' → logprob: -10.280876159667969
    7. ' :' → logprob: -11.155876159667969
    8. ')' → logprob: -12.405876159667969
    9. ' :
' → logprob: -12.655876159667969
    10. ':

' → logprob: -13.030876159667969

Token 91: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5793150663375854
    2. ' return' → logprob: -1.2043150663375854
    3. '           ' → logprob: -2.079315185546875
    4. '+' → logprob: -5.579315185546875
    5. '       ' → logprob: -5.829315185546875
    6. ':return' → logprob: -6.204315185546875
    7. '```' → logprob: -6.204315185546875
    8. 'result' → logprob: -7.079315185546875
    9. ':
' → logprob: -7.329315185546875
    10. ' 
' → logprob: -7.704315185546875

Token 92: ' Mod' (ID: 7191)
  Prédit: 'Modulo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Modulo' → logprob: -0.0005141906440258026
    2. ' Mod' → logprob: -7.625514030456543
    3. 'self' → logprob: -10.875514030456543
    4. ' modulo' → logprob: -13.000514030456543
    5. ' Modul' → logprob: -13.750514030456543
    6. 'Mod' → logprob: -14.000514030456543
    7. '   ' → logprob: -14.250514030456543
    8. 'Module' → logprob: -14.375514030456543
    9. '       ' → logprob: -15.250514030456543
    10. '(Mod' → logprob: -15.375514030456543

Token 93: 'ulo' (ID: 5953)
  Prédit: 'ulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulo' → logprob: -0.0007174347410909832
    2. 'ule' → logprob: -7.250717639923096
    3. 'olo' → logprob: -12.000717163085938
    4. 'o' → logprob: -14.125717163085938
    5. 'od' → logprob: -14.875717163085938
    6. 'ul' → logprob: -16.000717163085938
    7. 'Modulo' → logprob: -17.250717163085938
    8. 'u' → logprob: -17.750717163085938
    9. 'ulos' → logprob: -18.250717163085938
    10. 'ules' → logprob: -18.500717163085938

Token 94: 'Integer' (ID: 5437)
  Prédit: 'Integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Integer' → logprob: 0.0
    2. 'integer' → logprob: -17.625
    3. '_integer' → logprob: -18.375
    4. ' Integer' → logprob: -19.375
    5. 'Inte' → logprob: -19.75
    6. '_Integer' → logprob: -19.75
    7. '_INTEGER' → logprob: -20.625
    8. '	Integer' → logprob: -21.75
    9. 'INTEGER' → logprob: -21.75
    10. '<Integer' → logprob: -21.875

Token 95: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.2113979209971149e-05
    2. '(' → logprob: -12.125012397766113
    3. '((' → logprob: -12.625012397766113
    4. 'self' → logprob: -12.625012397766113
    5. ' (' → logprob: -17.250011444091797
    6. '   ' → logprob: -18.000011444091797
    7. ' self' → logprob: -19.125011444091797
    8. '```' → logprob: -19.125011444091797
    9. '[self' → logprob: -19.125011444091797
    10. '(
' → logprob: -19.250011444091797

Token 96: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.0001830410328693688
    2. '.' → logprob: -8.62518310546875
    3. 'value' → logprob: -13.00018310546875
    4. ').' → logprob: -13.75018310546875
    5. ' .' → logprob: -16.25018310546875
    6. '.values' → logprob: -18.12518310546875
    7. '.val' → logprob: -18.12518310546875
    8. '"value' → logprob: -19.37518310546875
    9. '`.' → logprob: -19.62518310546875
    10. '.Value' → logprob: -19.62518310546875

Token 97: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2519306540489197
    2. '+' → logprob: -1.5019307136535645
    3. ' ' → logprob: -14.001930236816406
    4. '+self' → logprob: -15.501930236816406
    5. ' +
' → logprob: -16.126930236816406
    6. ' plus' → logprob: -16.126930236816406
    7. '+
' → logprob: -16.626930236816406
    8. '   ' → logprob: -16.626930236816406
    9. '＋' → logprob: -17.376930236816406
    10. ' ' → logprob: -17.501930236816406

Token 98: ' operand' (ID: 63895)
  Prédit: 'operand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operand' → logprob: -0.38687315583229065
    2. ' operand' → logprob: -1.1368731260299683
    3. '_operand' → logprob: -13.886873245239258
    4. 'oper' → logprob: -15.261873245239258
    5. 'operator' → logprob: -15.261873245239258
    6. 'Operand' → logprob: -15.261873245239258
    7. 'opcode' → logprob: -16.636873245239258
    8. ' ' → logprob: -16.636873245239258
    9. '   ' → logprob: -16.886873245239258
    10. 'operative' → logprob: -17.386873245239258

Token 99: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.0007110013975761831
    2. '.' → logprob: -7.250710964202881
    3. ' .' → logprob: -14.250711441040039
    4. ').' → logprob: -15.750711441040039
    5. 'value' → logprob: -15.875711441040039
    6. '`.' → logprob: -16.75071144104004
    7. '.val' → logprob: -17.50071144104004
    8. '.token' → logprob: -18.37571144104004
    9. ' ' → logprob: -18.62571144104004
    10. '}.' → logprob: -19.00071144104004

Token 100: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002658655575942248
    2. ')
' → logprob: -8.250266075134277
    3. '       ' → logprob: -13.125266075134277
    4. ' )' → logprob: -13.125266075134277
    5. ')return' → logprob: -15.250266075134277
    6. ')

' → logprob: -16.37526512145996
    7. ')
' → logprob: -16.62526512145996
    8. '   ' → logprob: -16.87526512145996
    9. '),' → logprob: -17.87526512145996
    10. ')`' → logprob: -18.25026512145996

Token 101: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007283357437700033
    2. '<|end|>' → logprob: -5.2572832107543945
    3. ')' → logprob: -6.6322832107543945
    4. '
' → logprob: -8.632283210754395
    5. '<|end|>' → logprob: -8.882283210754395
    6. '   ' → logprob: -9.257283210754395
    7. 'return' → logprob: -9.382283210754395
    8. '        
' → logprob: -10.257283210754395
    9. 'else' → logprob: -10.382283210754395
    10. '	' → logprob: -10.507283210754395

Token 102: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48936495184898376
    2. 'else' (adapté à ' else') → logprob: -1.2393649816513062
    3. '+' → logprob: -3.3643648624420166
    4. ' else' → logprob: -3.4893648624420166
    5. 'return' → logprob: -4.239365100860596
    6. 'elif' → logprob: -4.614365100860596
    7. '   ' → logprob: -5.989365100860596
    8. '        ' → logprob: -6.614365100860596
    9. '    ' → logprob: -6.864365100860596
    10. '      ' → logprob: -7.864365100860596

Token 103: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2591923773288727
    2. ':
' → logprob: -2.25919246673584
    3. '       ' → logprob: -3.13419246673584
    4. '(' → logprob: -3.75919246673584
    5. '           ' → logprob: -3.75919246673584
    6. '{' → logprob: -4.63419246673584
    7. '+' → logprob: -4.75919246673584
    8. ' +' → logprob: -5.13419246673584
    9. ' :' → logprob: -5.88419246673584
    10. '        ' → logprob: -6.38419246673584

Token 104: '           ' (ID: 352)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5828282237052917
    2. ' return' → logprob: -0.8328282237052917
    3. '           ' → logprob: -5.582828044891357
    4. 'Mod' → logprob: -6.332828044891357
    5. '+' → logprob: -7.957828044891357
    6. ' Mod' → logprob: -7.957828044891357
    7. '       ' → logprob: -8.332828521728516
    8. '        ' → logprob: -8.832828521728516
    9. '(Mod' → logprob: -9.832828521728516
    10. 'Modulo' → logprob: -10.207828521728516

Token 105: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.10165079683065414
    2. ' return' → logprob: -2.3516507148742676
    3. 'Mod' → logprob: -6.976650714874268
    4. '       ' → logprob: -8.351651191711426
    5. 'Modulo' → logprob: -8.976651191711426
    6. '           ' → logprob: -9.101651191711426
    7. '   ' → logprob: -11.601651191711426
    8. ' ' → logprob: -11.601651191711426
    9. ' Mod' → logprob: -11.726651191711426
    10. 'Return' → logprob: -12.851651191711426

Token 106: ' Mod' (ID: 7191)
  Prédit: 'Modulo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Modulo' → logprob: -0.4304882287979126
    2. 'Mod' → logprob: -1.1804882287979126
    3. ' Mod' → logprob: -3.180488109588623
    4. ' Not' → logprob: -7.555488109588623
    5. 'Not' → logprob: -8.430488586425781
    6. 'self' → logprob: -9.055488586425781
    7. '(Mod' → logprob: -9.680488586425781
    8. ' ' → logprob: -9.930488586425781
    9. 'Module' → logprob: -10.055488586425781
    10. '_Mod' → logprob: -10.805488586425781

Token 107: 'ulo' (ID: 5953)
  Prédit: 'ulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulo' → logprob: -8.697387966094539e-05
    2. 'o' → logprob: -10.250086784362793
    3. 'olo' → logprob: -10.875086784362793
    4. 'ule' → logprob: -11.500086784362793
    5. 'Modulo' → logprob: -11.875086784362793
    6. 'ul' → logprob: -12.250086784362793
    7. 'u' → logprob: -12.625086784362793
    8. ' modulo' → logprob: -12.625086784362793
    9. 'od' → logprob: -13.500086784362793
    10. 'ulu' → logprob: -13.875086784362793

Token 108: 'Integer' (ID: 5437)
  Prédit: 'Integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Integer' → logprob: 0.0
    2. 'Inte' → logprob: -18.875
    3. ' Integer' → logprob: -19.125
    4. 'integer' → logprob: -19.875
    5. '_integer' → logprob: -20.125
    6. '_Integer' → logprob: -21.875
    7. '_INTEGER' → logprob: -22.5
    8. 'In' → logprob: -22.625
    9. '<Integer' → logprob: -22.625
    10. '(Integer' → logprob: -22.625

Token 109: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.226628895296017e-06
    2. 'self' → logprob: -12.375007629394531
    3. '(' → logprob: -12.750007629394531
    4. '(
' → logprob: -19.62500762939453
    5. ' (' → logprob: -19.75000762939453
    6. ' self' → logprob: -20.25000762939453
    7. '	self' → logprob: -21.12500762939453
    8. '((' → logprob: -21.75000762939453
    9. '[self' → logprob: -21.75000762939453
    10. '(sel' → logprob: -22.12500762939453

Token 110: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.0001438266917830333
    2. 'value' → logprob: -9.375144004821777
    3. '.' → logprob: -9.750144004821777
    4. ' .' → logprob: -14.625144004821777
    5. ' value' → logprob: -16.87514305114746
    6. '"value' → logprob: -17.00014305114746
    7. '.val' → logprob: -17.12514305114746
    8. ').' → logprob: -17.87514305114746
    9. ''value' → logprob: -18.12514305114746
    10. 'alue' → logprob: -18.12514305114746

Token 111: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3132629096508026
    2. '+' → logprob: -1.313262939453125
    3. ')' → logprob: -14.313262939453125
    4. '+self' → logprob: -14.813262939453125
    5. ' ' → logprob: -16.313262939453125
    6. ' ' → logprob: -16.938262939453125
    7. ' plus' → logprob: -17.313262939453125
    8. ' +
' → logprob: -18.063262939453125
    9. ' )' → logprob: -18.438262939453125
    10. '+)' → logprob: -18.688262939453125

Token 112: ' operand' (ID: 63895)
  Prédit: 'operand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operand' → logprob: -0.023252001032233238
    2. ' operand' → logprob: -3.773252010345459
    3. 'int' → logprob: -12.1482515335083
    4. 'operator' → logprob: -14.6482515335083
    5. '_operand' → logprob: -15.2732515335083
    6. 'oper' → logprob: -15.6482515335083
    7. ' int' → logprob: -15.8982515335083
    8. 'Operand' → logprob: -16.773252487182617
    9. 'op' → logprob: -16.898252487182617
    10. 'opcode' → logprob: -17.398252487182617

Token 113: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001613459608051926
    2. ' )' → logprob: -8.750161170959473
    3. '<|end|>' → logprob: -13.125161170959473
    4. ')
' → logprob: -14.500161170959473
    5. ')return' → logprob: -15.750161170959473
    6. '   ' → logprob: -16.62516212463379
    7. '<|end|>' → logprob: -17.50016212463379
    8. '())' → logprob: -17.75016212463379
    9. '))' → logprob: -17.75016212463379
    10. '       ' → logprob: -18.00016212463379

Token 114: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 115: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6987361907958984
    2. '<|end|>' → logprob: -0.8237361907958984
    3. '
' → logprob: -3.3237361907958984
    4. 'def' (adapté à ' def') → logprob: -4.573736190795898
    5. '<|end|>' → logprob: -5.073736190795898
    6. ')' → logprob: -5.823736190795898
    7. '    
' → logprob: -6.573736190795898
    8. ' ' → logprob: -6.573736190795898
    9. '  ' → logprob: -6.823736190795898
    10. ' def' → logprob: -6.948736190795898

Token 116: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.011065390892326832
    2. '__' → logprob: -4.511065483093262
    3. ' def' → logprob: -12.136065483093262
    4. ' _' → logprob: -12.511065483093262
    5. 'def' → logprob: -13.011065483093262
    6. ' ' → logprob: -13.511065483093262
    7. ' ' → logprob: -13.636065483093262
    8. ' `' → logprob: -14.261065483093262
    9. '```' → logprob: -14.386065483093262
    10. '.__' → logprob: -14.761065483093262

Token 117: 'sub' (ID: 3834)
  Prédit: 'sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.04775943607091904
    2. 'mul' → logprob: -3.547759532928467
    3. 'r' → logprob: -4.047759532928467
    4. 'eq' → logprob: -8.297759056091309
    5. 'i' → logprob: -9.297759056091309
    6. 'mod' → logprob: -10.922759056091309
    7. 'pow' → logprob: -11.172759056091309
    8. 'flo' → logprob: -12.172759056091309
    9. 'neg' → logprob: -12.922759056091309
    10. ' sub' → logprob: -13.422759056091309

Token 118: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3401417136192322
    2. '__(' → logprob: -1.715141773223877
    3. '__' → logprob: -2.840141773223877
    4. '_' → logprob: -3.090141773223877
    5. '(self' → logprob: -6.090141773223877
    6. '__(
' → logprob: -6.715141773223877
    7. '_(' → logprob: -7.340141773223877
    8. '__((' → logprob: -8.840141296386719
    9. '<|end|>' → logprob: -9.715141296386719
    10. '___' → logprob: -10.340141296386719

Token 119: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00030674142180942
    2. 'operand' → logprob: -8.375307083129883
    3. ' self' → logprob: -10.250307083129883
    4. '(self' → logprob: -10.875307083129883
    5. ')' → logprob: -11.125307083129883
    6. 'operator' → logprob: -13.375307083129883
    7. '   ' → logprob: -13.375307083129883
    8. '(' → logprob: -14.000307083129883
    9. 's' → logprob: -14.625307083129883
    10. '	self' → logprob: -14.750307083129883

Token 120: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21213513612747192
    2. '(self' → logprob: -2.587135076522827
    3. '(' → logprob: -2.712135076522827
    4. '__(' → logprob: -3.962135076522827
    5. ')' → logprob: -4.337135314941406
    6. '__' → logprob: -4.962135314941406
    7. 'self' → logprob: -5.087135314941406
    8. '_' → logprob: -5.712135314941406
    9. ')(' → logprob: -8.212135314941406
    10. ' ,' → logprob: -8.962135314941406

Token 121: ' operand' (ID: 63895)
  Prédit: ' operand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operand' → logprob: -0.1653366982936859
    2. 'operand' → logprob: -1.9153367280960083
    3. 'self' → logprob: -5.665336608886719
    4. ' self' → logprob: -6.540336608886719
    5. '_operand' → logprob: -9.665336608886719
    6. 'Operand' → logprob: -9.915336608886719
    7. ' ' → logprob: -10.040336608886719
    8. 'def' → logprob: -11.665336608886719
    9. ' operator' → logprob: -12.665336608886719
    10. 'operator' → logprob: -12.665336608886719

Token 122: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.015501867979764938
    2. ',' → logprob: -4.390501976013184
    3. '):
' → logprob: -6.140501976013184
    4. '       ' → logprob: -7.765501976013184
    5. ':' → logprob: -8.515501976013184
    6. 'self' → logprob: -9.265501976013184
    7. '   ' → logprob: -10.265501976013184
    8. '(self' → logprob: -10.390501976013184
    9. ')' → logprob: -11.640501976013184
    10. ' ):' → logprob: -11.890501976013184

Token 123: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13114379346370697
    2. '(' → logprob: -2.131143808364868
    3. ':' → logprob: -6.756143569946289
    4. ' ' → logprob: -7.006143569946289
    5. '        ' → logprob: -7.131143569946289
    6. ' (' → logprob: -7.881143569946289
    7. ',' → logprob: -8.631143569946289
    8. ')' → logprob: -8.881143569946289
    9. '    ' → logprob: -8.881143569946289
    10. ' :' → logprob: -9.131143569946289

Token 124: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020479869097471237
    2. ' if' → logprob: -4.020479679107666
    3. 'if' (adapté à ' if') → logprob: -6.145479679107666
    4. '   ' → logprob: -8.645480155944824
    5. '           ' → logprob: -13.520480155944824
    6. ' ' → logprob: -13.645480155944824
    7. '      ' → logprob: -13.645480155944824
    8. '     ' → logprob: -13.895480155944824
    9. '    ' → logprob: -14.270480155944824
    10. '        ' → logprob: -14.395480155944824

Token 125: ' isinstance' (ID: 25889)
  Prédit: ' isinstance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.07889430224895477
    2. 'is' → logprob: -2.5788943767547607
    3. '(is' → logprob: -12.32889461517334
    4. ' is' → logprob: -16.953893661499023
    5. '   ' → logprob: -17.328893661499023
    6. ' ' → logprob: -17.578893661499023
    7. '.is' → logprob: -18.078893661499023
    8. 'type' → logprob: -18.828893661499023
    9. ' not' → logprob: -18.953893661499023
    10. '    ' → logprob: -19.703893661499023

Token 126: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.704273118884885e-07
    2. ' (' → logprob: -15.375000953674316
    3. '(self' → logprob: -15.625000953674316
    4. 'self' → logprob: -16.5
    5. '<|end|>' → logprob: -17.125
    6. 'operand' → logprob: -17.75
    7. '(
' → logprob: -18.5
    8. '...' → logprob: -18.5
    9. '(operator' → logprob: -18.75
    10. '(op' → logprob: -18.75

Token 127: 'operand' (ID: 73439)
  Prédit: 'operand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operand' → logprob: -2.7491250875755213e-05
    2. ' operand' → logprob: -10.750027656555176
    3. '(' → logprob: -12.125027656555176
    4. 'Operand' → logprob: -15.250027656555176
    5. '_operand' → logprob: -15.500027656555176
    6. 'operator' → logprob: -16.25002670288086
    7. 'self' → logprob: -17.50002670288086
    8. 'opcode' → logprob: -18.25002670288086
    9. ')' → logprob: -18.37502670288086
    10. 'operative' → logprob: -18.50002670288086

Token 128: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.088346359931165e-07
    2. ' ,' → logprob: -14.125000953674316
    3. ',
' → logprob: -17.875
    4. '   ' → logprob: -18.25
    5. '       ' → logprob: -18.625
    6. '(' → logprob: -18.75
    7. '<|end|>' → logprob: -18.75
    8. '           ' → logprob: -18.875
    9. ',module' → logprob: -19.0
    10. '(),' → logprob: -19.5

Token 129: ' Mod' (ID: 7191)
  Prédit: ' Mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Mod' → logprob: -0.18150216341018677
    2. 'Modulo' → logprob: -2.431502103805542
    3. 'Mod' → logprob: -2.556502103805542
    4. '(Mod' → logprob: -7.806502342224121
    5. '_Mod' → logprob: -10.556502342224121
    6. '.Mod' → logprob: -11.556502342224121
    7. 'Operand' → logprob: -11.806502342224121
    8. ' Modular' → logprob: -11.931502342224121
    9. '_mod' → logprob: -12.056502342224121
    10. ' Modul' → logprob: -12.181502342224121

Token 130: 'ulo' (ID: 5953)
  Prédit: 'Modulo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Modulo' → logprob: -0.3089927136898041
    2. 'ulo' → logprob: -1.4339927434921265
    3. 'uto' → logprob: -4.183992862701416
    4. 'ule' → logprob: -6.308992862701416
    5. 'olo' → logprob: -6.308992862701416
    6. 'oto' → logprob: -6.683992862701416
    7. '   ' → logprob: -7.308992862701416
    8. '               ' → logprob: -7.683992862701416
    9. 'else' → logprob: -7.683992862701416
    10. '       ' → logprob: -7.808992862701416

Token 131: 'Integer' (ID: 5437)
  Prédit: 'Integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Integer' → logprob: -6.869017852295656e-06
    2. '_integer' → logprob: -13.125006675720215
    3. 'Modulo' → logprob: -13.375006675720215
    4. 'integer' → logprob: -14.125006675720215
    5. ' Integer' → logprob: -14.500006675720215
    6. 'int' → logprob: -14.500006675720215
    7. 'Inte' → logprob: -14.750006675720215
    8. 'Operand' → logprob: -14.750006675720215
    9. '_Integer' → logprob: -15.375006675720215
    10. 'Int' → logprob: -15.500006675720215

Token 132: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20221474766731262
    2. '):' → logprob: -1.7022147178649902
    3. ',' → logprob: -7.57721471786499
    4. '):
' → logprob: -9.077215194702148
    5. '       ' → logprob: -9.452215194702148
    6. ':' → logprob: -10.077215194702148
    7. '.value' → logprob: -11.077215194702148
    8. ',value' → logprob: -11.452215194702148
    9. ':
' → logprob: -11.702215194702148
    10. '):

' → logprob: -12.077215194702148

Token 133: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.975612187583465e-05
    2. 'return' → logprob: -11.125029563903809
    3. '       ' → logprob: -11.375029563903809
    4. ' return' → logprob: -14.125029563903809
    5. ':
' → logprob: -14.500029563903809
    6. '               ' → logprob: -14.625029563903809
    7. '          ' → logprob: -14.750029563903809
    8. ':' → logprob: -15.250029563903809
    9. '   ' → logprob: -15.375029563903809
    10. '         ' → logprob: -15.750029563903809

Token 134: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.012301134876906872
    2. ' return' → logprob: -5.012300968170166
    3. '       ' → logprob: -5.262300968170166
    4. '           ' → logprob: -7.887300968170166
    5. ':return' → logprob: -12.387301445007324
    6. '   ' → logprob: -13.012301445007324
    7. '	return' → logprob: -13.262301445007324
    8. '```' → logprob: -13.512301445007324
    9. '               ' → logprob: -14.762301445007324
    10. '{return' → logprob: -15.262301445007324

Token 135: ' Mod' (ID: 7191)
  Prédit: 'Modulo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Modulo' → logprob: -0.00030388421146199107
    2. ' Mod' → logprob: -8.500304222106934
    3. 'Mod' → logprob: -9.250304222106934
    4. '(Mod' → logprob: -13.000304222106934
    5. 'Module' → logprob: -14.000304222106934
    6. ' Modul' → logprob: -14.750304222106934
    7. 'Modal' → logprob: -15.000304222106934
    8. '_Mod' → logprob: -15.625304222106934
    9. ' Modular' → logprob: -16.250303268432617
    10. ' modulo' → logprob: -16.375303268432617

Token 136: 'ulo' (ID: 5953)
  Prédit: 'ulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulo' → logprob: -0.42317989468574524
    2. 'Modulo' → logprob: -1.5481798648834229
    3. 'o' → logprob: -2.673179864883423
    4. 'olo' → logprob: -2.798179864883423
    5. 'oto' → logprob: -6.923180103302002
    6. 'O' → logprob: -7.798180103302002
    7. 'uto' → logprob: -8.173179626464844
    8. 'u' → logprob: -9.548179626464844
    9. 'od' → logprob: -9.548179626464844
    10. 'ULO' → logprob: -9.673179626464844

Token 137: 'Integer' (ID: 5437)
  Prédit: 'Integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Integer' → logprob: -1.981667537620524e-06
    2. 'Modulo' → logprob: -13.500001907348633
    3. 'integer' → logprob: -15.125001907348633
    4. '_integer' → logprob: -15.500001907348633
    5. ' Integer' → logprob: -16.125001907348633
    6. '_Integer' → logprob: -18.125001907348633
    7. 'Inte' → logprob: -19.000001907348633
    8. '(Integer' → logprob: -19.375001907348633
    9. '_INTEGER' → logprob: -19.750001907348633
    10. '	Integer' → logprob: -20.250001907348633

Token 138: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.981667537620524e-06
    2. '(' → logprob: -13.500001907348633
    3. 'self' → logprob: -14.500001907348633
    4. ' (' → logprob: -19.000001907348633
    5. '(this' → logprob: -20.125001907348633
    6. '(
' → logprob: -20.750001907348633
    7. '((' → logprob: -21.250001907348633
    8. '[self' → logprob: -21.375001907348633
    9. ' self' → logprob: -21.625001907348633
    10. '       ' → logprob: -22.500001907348633

Token 139: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.00018280261429026723
    2. 'value' → logprob: -9.00018310546875
    3. '.' → logprob: -9.75018310546875
    4. ' .' → logprob: -14.50018310546875
    5. 'self' → logprob: -16.25018310546875
    6. '.code' → logprob: -16.25018310546875
    7. ' value' → logprob: -16.50018310546875
    8. '.values' → logprob: -16.75018310546875
    9. '$value' → logprob: -16.75018310546875
    10. ').' → logprob: -16.87518310546875

Token 140: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0019288709154352546
    2. '-' → logprob: -6.251928806304932
    3. ' ' → logprob: -15.50192928314209
    4. ' ' → logprob: -16.751928329467773
    5. ' -
' → logprob: -19.501928329467773
    6. ' −' → logprob: -20.001928329467773
    7. ' –' → logprob: -20.501928329467773
    8. '−' → logprob: -20.501928329467773
    9. '-self' → logprob: -20.626928329467773
    10. '-sub' → logprob: -20.626928329467773

Token 141: ' operand' (ID: 63895)
  Prédit: 'operand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operand' → logprob: -0.5759532451629639
    2. ' operand' → logprob: -0.8259532451629639
    3. '_operand' → logprob: -11.450953483581543
    4. 'Operand' → logprob: -13.200953483581543
    5. 'oper' → logprob: -15.200953483581543
    6. ' operands' → logprob: -15.325953483581543
    7. 'operator' → logprob: -15.700953483581543
    8. ' Operand' → logprob: -16.575952529907227
    9. 'operative' → logprob: -16.700952529907227
    10. ' ' → logprob: -16.700952529907227

Token 142: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -6.12258882028982e-05
    2. '.' → logprob: -9.75006103515625
    3. 'value' → logprob: -13.50006103515625
    4. ').' → logprob: -14.25006103515625
    5. ' .' → logprob: -14.37506103515625
    6. ')' → logprob: -16.75006103515625
    7. '<|end|>' → logprob: -17.12506103515625
    8. '.values' → logprob: -17.37506103515625
    9. '.token' → logprob: -18.25006103515625
    10. '.val' → logprob: -18.50006103515625

Token 143: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.494741632603109e-05
    2. '       ' → logprob: -9.75008487701416
    3. ')
' → logprob: -10.62508487701416
    4. ' )' → logprob: -13.25008487701416
    5. ')return' → logprob: -15.00008487701416
    6. '   ' → logprob: -15.87508487701416
    7. ')
' → logprob: -17.375085830688477
    8. '<|end|>' → logprob: -17.375085830688477
    9. ')

' → logprob: -18.000085830688477
    10. ' ' → logprob: -18.000085830688477

Token 144: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04562913626432419
    2. '<|end|>' → logprob: -3.1706290245056152
    3. ')' → logprob: -6.170629024505615
    4. '<|end|>' → logprob: -7.920629024505615
    5. ' else' → logprob: -10.295629501342773
    6. '   ' → logprob: -10.420629501342773
    7. 'else' → logprob: -10.670629501342773
    8. '        ' → logprob: -10.795629501342773
    9. '	' → logprob: -11.545629501342773
    10. '           ' → logprob: -11.795629501342773

Token 145: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.5134709477424622
    2. '       ' → logprob: -1.3884708881378174
    3. ' else' → logprob: -1.8884708881378174
    4. ')' → logprob: -8.013470649719238
    5. '           ' → logprob: -8.388470649719238
    6. '   ' → logprob: -9.263470649719238
    7. '	else' → logprob: -9.513470649719238
    8. '               ' → logprob: -10.638470649719238
    9. 'return' → logprob: -11.263470649719238
    10. '<|end|>' → logprob: -11.638470649719238

Token 146: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6345593929290771
    2. '           ' → logprob: -0.8845593929290771
    3. '       ' → logprob: -4.009559631347656
    4. ',' → logprob: -4.259559631347656
    5. '        ' → logprob: -4.884559631347656
    6. ')' → logprob: -5.759559631347656
    7. '            ' → logprob: -5.884559631347656
    8. ' return' → logprob: -6.259559631347656
    9. ' :' → logprob: -6.509559631347656
    10. ' ' → logprob: -6.759559631347656

Token 147: '           ' (ID: 352)
  Prédit: 'Modulo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Modulo' → logprob: -0.1515541821718216
    2. ' Mod' → logprob: -2.4015541076660156
    3. 'Mod' → logprob: -3.4015541076660156
    4. '(Mod' → logprob: -4.401554107666016
    5. '           ' → logprob: -6.276554107666016
    6. ' modulo' → logprob: -7.526554107666016
    7. ' return' → logprob: -7.526554107666016
    8. 'Operand' → logprob: -8.026554107666016
    9. ' self' → logprob: -8.026554107666016
    10. '       ' → logprob: -8.651554107666016

Token 148: ' return' (ID: 622)
  Prédit: 'Modulo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Modulo' → logprob: -0.004683118779212236
    2. ' Mod' → logprob: -5.379683017730713
    3. 'Mod' → logprob: -10.254683494567871
    4. ' modulo' → logprob: -11.379683494567871
    5. ' return' → logprob: -12.504683494567871
    6. '           ' → logprob: -12.504683494567871
    7. '(Mod' → logprob: -13.379683494567871
    8. '       ' → logprob: -13.504683494567871
    9. ' Modul' → logprob: -13.504683494567871
    10. 'return' (adapté à ' return') → logprob: -13.879683494567871

Token 149: ' Mod' (ID: 7191)
  Prédit: 'Modulo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Modulo' → logprob: -0.004228816367685795
    2. ' Mod' → logprob: -5.504228591918945
    3. 'Mod' → logprob: -9.004228591918945
    4. '(Mod' → logprob: -10.754228591918945
    5. ' modulo' → logprob: -12.879228591918945
    6. ' Modul' → logprob: -13.379228591918945
    7. '_Mod' → logprob: -14.129228591918945
    8. '  ' → logprob: -15.129228591918945
    9. ' Modi' → logprob: -15.379228591918945
    10. ' ' → logprob: -15.504228591918945

Token 150: 'ulo' (ID: 5953)
  Prédit: 'ulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulo' → logprob: -0.23244903981685638
    2. 'o' → logprob: -1.7324490547180176
    3. 'Integer' → logprob: -4.357449054718018
    4. 'olo' → logprob: -4.607449054718018
    5. 'oto' → logprob: -5.482449054718018
    6. 'Modulo' → logprob: -6.982449054718018
    7. 'u' → logprob: -7.357449054718018
    8. 'ul' → logprob: -7.982449054718018
    9. 'oi' → logprob: -8.60744857788086
    10. 'ulator' → logprob: -9.10744857788086

Token 151: 'Integer' (ID: 5437)
  Prédit: 'Integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Integer' → logprob: -0.00011677479778882116
    2. '_integer' → logprob: -9.250116348266602
    3. 'integer' → logprob: -11.500116348266602
    4. ' Integer' → logprob: -11.750116348266602
    5. '_Integer' → logprob: -13.625116348266602
    6. 'int' → logprob: -14.125116348266602
    7. 'operand' → logprob: -15.750116348266602
    8. '_INTEGER' → logprob: -16.0001163482666
    9. 'Inte' → logprob: -16.1251163482666
    10. ' integer' → logprob: -16.7501163482666

Token 152: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.0722858102526516e-05
    2. '(' → logprob: -10.125041007995605
    3. 'self' → logprob: -14.750041007995605
    4. ' (' → logprob: -15.125041007995605
    5. '(
' → logprob: -19.25004005432129
    6. '(s' → logprob: -20.75004005432129
    7. ' self' → logprob: -20.87504005432129
    8. '(value' → logprob: -21.50004005432129
    9. ')' → logprob: -21.62504005432129
    10. '(this' → logprob: -21.75004005432129

Token 153: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.0006319015519693494
    2. '.' → logprob: -7.500631809234619
    3. 'value' → logprob: -9.500632286071777
    4. ' .' → logprob: -12.625632286071777
    5. ' value' → logprob: -14.875632286071777
    6. ')' → logprob: -16.37563133239746
    7. '.code' → logprob: -16.50063133239746
    8. ').' → logprob: -16.75063133239746
    9. '-' → logprob: -17.00063133239746
    10. '.val' → logprob: -17.50063133239746

Token 154: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.006722471676766872
    2. '-' → logprob: -5.006722450256348
    3. ')' → logprob: -12.631722450256348
    4. ' ' → logprob: -13.506722450256348
    5. 'value' → logprob: -14.006722450256348
    6. ' ' → logprob: -14.881722450256348
    7. '-value' → logprob: -15.006722450256348
    8. '(value' → logprob: -15.631722450256348
    9. '.value' → logprob: -15.756722450256348
    10. '<|end|>' → logprob: -16.256723403930664

Token 155: ' operand' (ID: 63895)
  Prédit: 'operand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operand' → logprob: -0.2519303858280182
    2. ' operand' → logprob: -1.5019303560256958
    3. '   ' → logprob: -15.001930236816406
    4. 'operator' → logprob: -15.376930236816406
    5. 'oper' → logprob: -15.376930236816406
    6. '_operand' → logprob: -15.876930236816406
    7. ' ' → logprob: -16.001930236816406
    8. 'Operand' → logprob: -16.876930236816406
    9. 'int' → logprob: -17.001930236816406
    10. '  ' → logprob: -17.251930236816406

Token 156: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04345379397273064
    2. 'operand' → logprob: -3.6684536933898926
    3. '_operand' → logprob: -4.668453693389893
    4. 'value' → logprob: -5.668453693389893
    5. '<|end|>' → logprob: -7.043453693389893
    6. ' operand' → logprob: -7.043453693389893
    7. '.value' → logprob: -7.168453693389893
    8. ')value' → logprob: -7.293453693389893
    9. '.' → logprob: -8.79345417022705
    10. '(' → logprob: -8.79345417022705

Token 157: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003079334564972669
    2. 'def' → logprob: -8.5003080368042
    3. ')' → logprob: -9.6253080368042
    4. '<|end|>' → logprob: -10.8753080368042
    5. '    
' → logprob: -11.6253080368042
    6. ' def' → logprob: -12.5003080368042
    7. '```' → logprob: -13.8753080368042
    8. '<|end|>' → logprob: -14.0003080368042
    9. '  ' → logprob: -14.1253080368042
    10. '(' → logprob: -14.3753080368042

Token 158: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.056132715195417404
    2. 'def' (adapté à ' def') → logprob: -2.9311327934265137
    3. ' def' → logprob: -7.181132793426514
    4. '    
' → logprob: -8.431132316589355
    5. ')' → logprob: -9.181132316589355
    6. '*' → logprob: -9.931132316589355
    7. '__' → logprob: -10.056132316589355
    8. '```' → logprob: -10.931132316589355
    9. '	def' → logprob: -11.806132316589355
    10. ' ' → logprob: -11.931132316589355

Token 159: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.03809760883450508
    2. '__' → logprob: -3.288097620010376
    3. '_mul' → logprob: -10.288097381591797
    4. '.__' → logprob: -12.038097381591797
    5. 'mul' → logprob: -12.663097381591797
    6. ' ' → logprob: -12.663097381591797
    7. 'def' → logprob: -13.538097381591797
    8. '(__' → logprob: -13.538097381591797
    9. ' mul' → logprob: -13.663097381591797
    10. ' (__' → logprob: -13.788097381591797

Token 160: 'mul' (ID: 44857)
  Prédit: 'mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -1.1472419600977446e-06
    2. 'r' → logprob: -14.375000953674316
    3. 'pow' → logprob: -15.250000953674316
    4. ' mul' → logprob: -15.750000953674316
    5. 'mult' → logprob: -16.500001907348633
    6. 'eq' → logprob: -17.625001907348633
    7. '_mul' → logprob: -18.000001907348633
    8. 'Mul' → logprob: -18.250001907348633
    9. 'rm' → logprob: -18.500001907348633
    10. 'mod' → logprob: -18.750001907348633

Token 161: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0018514160765334964
    2. '__' → logprob: -6.376851558685303
    3. '(self' → logprob: -9.251851081848145
    4. '(' → logprob: -10.876851081848145
    5. '__(
' → logprob: -11.001851081848145
    6. '_(' → logprob: -11.251851081848145
    7. '__((' → logprob: -13.501851081848145
    8. '__(*' → logprob: -13.751851081848145
    9. '_' → logprob: -14.001851081848145
    10. '___' → logprob: -14.626851081848145

Token 162: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.8444881536415778e-05
    2. ' self' → logprob: -10.750028610229492
    3. '(self' → logprob: -12.000028610229492
    4. 'operand' → logprob: -14.500028610229492
    5. '   ' → logprob: -16.500028610229492
    6. '	self' → logprob: -16.625028610229492
    7. '<|end|>' → logprob: -16.750028610229492
    8. '...' → logprob: -18.500028610229492
    9. '_operand' → logprob: -18.625028610229492
    10. ' ' → logprob: -18.750028610229492

Token 163: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008575046667829156
    2. '(self' → logprob: -7.875857353210449
    3. '(' → logprob: -8.37585735321045
    4. 'self' → logprob: -9.12585735321045
    5. '_,' → logprob: -9.75085735321045
    6. ' ,' → logprob: -10.25085735321045
    7. '__(' → logprob: -11.25085735321045
    8. '__,' → logprob: -11.37585735321045
    9. ',self' → logprob: -11.50085735321045
    10. ',(' → logprob: -13.00085735321045

Token 164: ' operand' (ID: 63895)
  Prédit: ' operand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operand' → logprob: -0.6213546991348267
    2. 'operand' → logprob: -0.8713546991348267
    3. 'self' → logprob: -3.246354579925537
    4. ' self' → logprob: -5.246354579925537
    5. '_operand' → logprob: -8.871355056762695
    6. '   ' → logprob: -11.121355056762695
    7. ' ' → logprob: -11.246355056762695
    8. 'Operand' → logprob: -11.371355056762695
    9. 'operator' → logprob: -11.621355056762695
    10. '       ' → logprob: -12.246355056762695

Token 165: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.027905700728297234
    2. 'self' → logprob: -4.152905464172363
    3. '       ' → logprob: -4.902905464172363
    4. '):
' → logprob: -6.152905464172363
    5. ',' → logprob: -7.027905464172363
    6. '   ' → logprob: -7.652905464172363
    7. '):' → logprob: -8.027905464172363
    8. '(' → logprob: -8.027905464172363
    9. ' self' → logprob: -9.152905464172363
    10. ' (' → logprob: -10.277905464172363

Token 166: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002889874158427119
    2. ' if' → logprob: -8.250288963317871
    3. '   ' → logprob: -11.750288963317871
    4. '<|end|>' → logprob: -12.250288963317871
    5. 'if' → logprob: -12.500288963317871
    6. '        ' → logprob: -13.000288963317871
    7. '(' → logprob: -13.250288963317871
    8. '      ' → logprob: -13.250288963317871
    9. ',' → logprob: -13.625288963317871
    10. ' ' → logprob: -14.000288963317871

Token 167: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009991341270506382
    2. ' if' → logprob: -4.63499116897583
    3. 'if' (adapté à ' if') → logprob: -9.009991645812988
    4. '   ' → logprob: -9.509991645812988
    5. '    ' → logprob: -10.884991645812988
    6. '        ' → logprob: -11.759991645812988
    7. '      ' → logprob: -12.259991645812988
    8. ' ' → logprob: -12.634991645812988
    9. '     ' → logprob: -13.009991645812988
    10. '           ' → logprob: -14.259991645812988

Token 168: ' isinstance' (ID: 25889)
  Prédit: ' isinstance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.1602318435907364
    2. 'is' → logprob: -1.9102318286895752
    3. '(is' → logprob: -11.785231590270996
    4. ' is' → logprob: -16.160232543945312
    5. '.is' → logprob: -17.910232543945312
    6. ' ' → logprob: -18.410232543945312
    7. 'type' → logprob: -18.535232543945312
    8. ' (' → logprob: -19.285232543945312
    9. '   ' → logprob: -19.285232543945312
    10. 'typeof' → logprob: -20.035232543945312

Token 169: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.77627644513268e-06
    2. '(self' → logprob: -11.750008583068848
    3. 'self' → logprob: -14.375008583068848
    4. ' (' → logprob: -15.500008583068848
    5. '<|end|>' → logprob: -17.125009536743164
    6. 'operand' → logprob: -18.250009536743164
    7. ',' → logprob: -18.750009536743164
    8. '```' → logprob: -19.375009536743164
    9. '(
' → logprob: -19.500009536743164
    10. '(operator' → logprob: -19.500009536743164

Token 170: 'operand' (ID: 73439)
  Prédit: 'operand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operand' → logprob: -9.849109119386412e-06
    2. ' operand' → logprob: -12.000009536743164
    3. '(' → logprob: -12.875009536743164
    4. 'self' → logprob: -14.375009536743164
    5. '_operand' → logprob: -15.875009536743164
    6. 'Operand' → logprob: -16.250009536743164
    7. 'operator' → logprob: -16.500009536743164
    8. 'operative' → logprob: -16.750009536743164
    9. ')' → logprob: -17.750009536743164
    10. 'opcode' → logprob: -17.875009536743164

Token 171: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7491250875755213e-05
    2. '(' → logprob: -10.750027656555176
    3. ' ,' → logprob: -12.375027656555176
    4. '<|end|>' → logprob: -14.125027656555176
    5. ' (' → logprob: -14.750027656555176
    6. 'self' → logprob: -16.25002670288086
    7. '<|end|>' → logprob: -16.37502670288086
    8. ',
' → logprob: -16.37502670288086
    9. '   ' → logprob: -16.50002670288086
    10. '(),' → logprob: -17.50002670288086

Token 172: ' Mod' (ID: 7191)
  Prédit: 'Modulo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Modulo' → logprob: -0.35071563720703125
    2. ' Mod' → logprob: -1.2257156372070312
    3. 'Mod' → logprob: -6.350715637207031
    4. '(Mod' → logprob: -7.975715637207031
    5. ' modulo' → logprob: -10.100715637207031
    6. ' Modular' → logprob: -10.225715637207031
    7. ' Modul' → logprob: -10.600715637207031
    8. ' ' → logprob: -10.975715637207031
    9. '   ' → logprob: -11.350715637207031
    10. '_Mod' → logprob: -11.725715637207031

Token 173: 'ulo' (ID: 5953)
  Prédit: 'ulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulo' → logprob: -0.1319810003042221
    2. 'Modulo' → logprob: -2.6319808959960938
    3. 'o' → logprob: -3.3819808959960938
    4. 'olo' → logprob: -4.631980895996094
    5. 'oto' → logprob: -5.631980895996094
    6. 'od' → logprob: -6.131980895996094
    7. 'Integer' → logprob: -8.131980895996094
    8. 'O' → logprob: -8.381980895996094
    9. 'ul' → logprob: -8.506980895996094
    10. 'ULO' → logprob: -8.881980895996094

Token 174: 'Integer' (ID: 5437)
  Prédit: 'Integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Integer' → logprob: -1.981667537620524e-06
    2. '_integer' → logprob: -13.375001907348633
    3. 'integer' → logprob: -15.375001907348633
    4. '_Integer' → logprob: -15.750001907348633
    5. ' Integer' → logprob: -17.500001907348633
    6. '_INTEGER' → logprob: -18.125001907348633
    7. 'Inte' → logprob: -18.375001907348633
    8. '<Integer' → logprob: -18.500001907348633
    9. 'int' → logprob: -18.625001907348633
    10. ')' → logprob: -18.750001907348633

Token 175: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.08908537030220032
    2. '):' → logprob: -2.464085340499878
    3. '):
' → logprob: -9.089085578918457
    4. '):

' → logprob: -11.214085578918457
    5. '       ' → logprob: -11.839085578918457
    6. ')' → logprob: -12.589085578918457
    7. '   ' → logprob: -13.714085578918457
    8. ',' → logprob: -13.714085578918457
    9. '.value' → logprob: -13.714085578918457
    10. '           ' → logprob: -13.839085578918457

Token 176: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00014704519708175212
    2. 'return' → logprob: -9.500146865844727
    3. ':' → logprob: -10.125146865844727
    4. ':
' → logprob: -11.125146865844727
    5. '       ' → logprob: -12.375146865844727
    6. ' return' → logprob: -12.375146865844727
    7. ':return' → logprob: -13.000146865844727
    8. '               ' → logprob: -13.250146865844727
    9. '          ' → logprob: -13.375146865844727
    10. '):
' → logprob: -13.750146865844727

Token 177: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5761057138442993
    2. 'return' (adapté à ' return') → logprob: -0.8261057138442993
    3. '       ' → logprob: -8.951106071472168
    4. '           ' → logprob: -10.451106071472168
    5. '   ' → logprob: -13.326106071472168
    6. ' ' → logprob: -13.576106071472168
    7. 'eturn' → logprob: -13.701106071472168
    8. ':return' → logprob: -13.826106071472168
    9. '	return' → logprob: -14.201106071472168
    10. '               ' → logprob: -14.701106071472168

Token 178: ' Mod' (ID: 7191)
  Prédit: 'Modulo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Modulo' → logprob: -6.704273118884885e-07
    2. ' Mod' → logprob: -14.500000953674316
    3. '(Mod' → logprob: -17.25
    4. 'Mod' → logprob: -17.875
    5. ' modulo' → logprob: -18.125
    6. ' Modul' → logprob: -18.125
    7. 'Module' → logprob: -19.0
    8. '   ' → logprob: -19.125
    9. ' Modular' → logprob: -19.375
    10. '       ' → logprob: -20.375

Token 179: 'ulo' (ID: 5953)
  Prédit: 'Modulo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Modulo' → logprob: -0.09048213809728622
    2. 'ulo' → logprob: -2.715482234954834
    3. 'o' → logprob: -4.590482234954834
    4. 'olo' → logprob: -4.715482234954834
    5. 'oto' → logprob: -7.840482234954834
    6. 'od' → logprob: -7.965482234954834
    7. 'O' → logprob: -9.090481758117676
    8. 'ol' → logprob: -10.090481758117676
    9. 'ollo' → logprob: -10.215481758117676
    10. 'odo' → logprob: -10.215481758117676

Token 180: 'Integer' (ID: 5437)
  Prédit: 'Integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Integer' → logprob: -1.1472419600977446e-06
    2. 'Modulo' → logprob: -13.750000953674316
    3. 'integer' → logprob: -17.000001907348633
    4. ' Integer' → logprob: -18.000001907348633
    5. '_integer' → logprob: -18.000001907348633
    6. 'Inte' → logprob: -18.875001907348633
    7. '(Integer' → logprob: -19.625001907348633
    8. '_Integer' → logprob: -19.875001907348633
    9. 'Multip' → logprob: -20.375001907348633
    10. '_INTEGER' → logprob: -20.375001907348633

Token 181: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.981667537620524e-06
    2. 'self' → logprob: -13.375001907348633
    3. '(' → logprob: -14.875001907348633
    4. ' self' → logprob: -19.125001907348633
    5. '(
' → logprob: -19.750001907348633
    6. ' (' → logprob: -20.250001907348633
    7. '[self' → logprob: -21.750001907348633
    8. '	self' → logprob: -22.250001907348633
    9. '   ' → logprob: -22.500001907348633
    10. '*self' → logprob: -23.000001907348633

Token 182: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.0009286141721531749
    2. '.' → logprob: -7.0009284019470215
    3. 'value' → logprob: -11.62592887878418
    4. ' .' → logprob: -12.00092887878418
    5. ').' → logprob: -13.62592887878418
    6. '.values' → logprob: -15.37592887878418
    7. '`.' → logprob: -16.12592887878418
    8. '```' → logprob: -16.25092887878418
    9. '.val' → logprob: -16.87592887878418
    10. ' value' → logprob: -17.00092887878418

Token 183: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.014164687134325504
    2. '*' → logprob: -4.264164924621582
    3. ' ' → logprob: -13.764164924621582
    4. ' ' → logprob: -16.764163970947266
    5. ')' → logprob: -17.764163970947266
    6. '*object' → logprob: -18.514163970947266
    7. '**' → logprob: -18.889163970947266
    8. '```' → logprob: -19.264163970947266
    9. '   ' → logprob: -19.389163970947266
    10. ' *
' → logprob: -19.764163970947266

Token 184: ' operand' (ID: 63895)
  Prédit: 'operand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operand' → logprob: -0.3484577238559723
    2. ' operand' → logprob: -1.22345769405365
    3. '_operand' → logprob: -12.473457336425781
    4. 'operator' → logprob: -12.973457336425781
    5. 'Operand' → logprob: -12.973457336425781
    6. '   ' → logprob: -13.973457336425781
    7. ' ' → logprob: -14.223457336425781
    8. ' operator' → logprob: -14.723457336425781
    9. 'oper' → logprob: -14.848457336425781
    10. 'opcode' → logprob: -15.098457336425781

Token 185: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -1.1279553291387856e-05
    2. '.' → logprob: -11.625011444091797
    3. 'value' → logprob: -13.125011444091797
    4. ' .' → logprob: -15.375011444091797
    5. ').' → logprob: -16.875011444091797
    6. '<|end|>' → logprob: -18.500011444091797
    7. '.values' → logprob: -18.750011444091797
    8. '.Value' → logprob: -19.375011444091797
    9. '.
' → logprob: -20.125011444091797
    10. ' value' → logprob: -20.375011444091797

Token 186: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007842378690838814
    2. ')
' → logprob: -4.882842540740967
    3. '       ' → logprob: -8.382842063903809
    4. ' )' → logprob: -12.882842063903809
    5. ')
' → logprob: -13.257842063903809
    6. ')

' → logprob: -13.507842063903809
    7. ')return' → logprob: -14.007842063903809
    8. '   ' → logprob: -14.257842063903809
    9. ' )
' → logprob: -16.257843017578125
    10. ')\
' → logprob: -17.007843017578125

Token 187: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00023417205375153571
    2. '<|end|>' → logprob: -8.500234603881836
    3. 'else' → logprob: -11.125234603881836
    4. ' else' → logprob: -12.250234603881836
    5. ')' → logprob: -12.750234603881836
    6. '<|end|>' → logprob: -13.125234603881836
    7. '      ' → logprob: -13.500234603881836
    8. '	' → logprob: -13.625234603881836
    9. '   ' → logprob: -13.750234603881836
    10. '           ' → logprob: -14.375234603881836

Token 188: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008900072425603867
    2. 'else' (adapté à ' else') → logprob: -4.758900165557861
    3. ' else' → logprob: -8.508899688720703
    4. '   ' → logprob: -9.883899688720703
    5. '           ' → logprob: -11.133899688720703
    6. 'elif' → logprob: -12.133899688720703
    7. '	' → logprob: -12.508899688720703
    8. 'return' → logprob: -12.508899688720703
    9. '	else' → logprob: -13.508899688720703
    10. '      ' → logprob: -13.883899688720703

Token 189: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12708736956119537
    2. '       ' → logprob: -3.127087354660034
    3. ' return' → logprob: -3.752087354660034
    4. '(' → logprob: -4.752087593078613
    5. ')' → logprob: -4.752087593078613
    6. '        ' → logprob: -5.002087593078613
    7. ':' → logprob: -5.127087593078613
    8. ' =' → logprob: -5.377087593078613
    9. '=' → logprob: -6.127087593078613
    10. '          ' → logprob: -6.127087593078613

Token 190: '           ' (ID: 352)
  Prédit: 'Modulo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Modulo' → logprob: -0.19369027018547058
    2. '       ' → logprob: -2.193690299987793
    3. 'Mod' → logprob: -3.068690299987793
    4. ' Mod' → logprob: -4.818690299987793
    5. '(Mod' → logprob: -5.693690299987793
    6. '           ' → logprob: -5.943690299987793
    7. ' return' → logprob: -6.193690299987793
    8. 'return' → logprob: -6.443690299987793
    9. ' modulo' → logprob: -9.443690299987793
    10. '   ' → logprob: -9.568690299987793

Token 191: ' return' (ID: 622)
  Prédit: 'Modulo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Modulo' → logprob: -0.011988339014351368
    2. 'Mod' → logprob: -4.511988162994385
    3. ' Mod' → logprob: -7.011988162994385
    4. 'return' (adapté à ' return') → logprob: -11.386988639831543
    5. '(Mod' → logprob: -11.636988639831543
    6. ' return' → logprob: -12.011988639831543
    7. 'Multip' → logprob: -12.136988639831543
    8. ' modulo' → logprob: -13.761988639831543
    9. ' Modular' → logprob: -13.886988639831543
    10. 'Modifier' → logprob: -14.136988639831543

Token 192: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.6938804984092712
    2. ' Mod' → logprob: -0.6938804984092712
    3. 'Modulo' → logprob: -7.568880558013916
    4. '(Mod' → logprob: -8.818880081176758
    5. '_Mod' → logprob: -10.443880081176758
    6. ' Modul' → logprob: -11.693880081176758
    7. 'self' → logprob: -11.818880081176758
    8. ' Modi' → logprob: -12.193880081176758
    9. ' ' → logprob: -12.318880081176758
    10. ' Modular' → logprob: -12.943880081176758

Token 193: 'ulo' (ID: 5953)
  Prédit: 'ulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulo' → logprob: -0.09203595668077469
    2. 'Modulo' → logprob: -2.592036008834839
    3. 'olo' → logprob: -4.46703577041626
    4. 'ul' → logprob: -7.71703577041626
    5. ' modulo' → logprob: -7.84203577041626
    6. 'o' → logprob: -8.092036247253418
    7. 'ULO' → logprob: -9.342036247253418
    8. 'od' → logprob: -9.592036247253418
    9. 'u' → logprob: -9.842036247253418
    10. 'uelo' → logprob: -10.217036247253418

Token 194: 'Integer' (ID: 5437)
  Prédit: 'Integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Integer' → logprob: -1.8624639324116288e-06
    2. '_integer' → logprob: -13.500001907348633
    3. '_Integer' → logprob: -15.125001907348633
    4. ' Integer' → logprob: -15.625001907348633
    5. 'Inte' → logprob: -17.500001907348633
    6. 'integer' → logprob: -17.750001907348633
    7. '_INTEGER' → logprob: -18.250001907348633
    8. '<Integer' → logprob: -19.250001907348633
    9. '	Integer' → logprob: -19.250001907348633
    10. '.Integer' → logprob: -20.000001907348633

Token 195: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0015052208909764886
    2. '(' → logprob: -6.501505374908447
    3. ' (' → logprob: -13.376504898071289
    4. 'self' → logprob: -14.126504898071289
    5. '(s' → logprob: -14.751504898071289
    6. '(
' → logprob: -16.87650489807129
    7. '(sel' → logprob: -17.00150489807129
    8. '(this' → logprob: -17.50150489807129
    9. '(se' → logprob: -17.62650489807129
    10. '(value' → logprob: -18.37650489807129

Token 196: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.01816258206963539
    2. '.' → logprob: -4.018162727355957
    3. ' .' → logprob: -11.518162727355957
    4. 'value' → logprob: -14.018162727355957
    5. ').' → logprob: -14.143162727355957
    6. '.val' → logprob: -14.768162727355957
    7. '*' → logprob: -15.393162727355957
    8. '.code' → logprob: -15.768162727355957
    9. '.values' → logprob: -16.14316177368164
    10. '.user' → logprob: -16.26816177368164

Token 197: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.01416738796979189
    2. '*' → logprob: -4.264167308807373
    3. ')' → logprob: -13.264167785644531
    4. ' ' → logprob: -13.514167785644531
    5. ' ' → logprob: -14.389167785644531
    6. '*self' → logprob: -15.389167785644531
    7. '*object' → logprob: -17.26416778564453
    8. ' )' → logprob: -18.51416778564453
    9. ' **' → logprob: -18.51416778564453
    10. 'self' → logprob: -18.88916778564453

Token 198: ' operand' (ID: 63895)
  Prédit: 'operand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operand' → logprob: -0.02975129522383213
    2. ' operand' → logprob: -3.5297513008117676
    3. 'operator' → logprob: -14.65475082397461
    4. 'oper' → logprob: -15.90475082397461
    5. '_operand' → logprob: -16.52975082397461
    6. 'Operand' → logprob: -17.02975082397461
    7. 'op' → logprob: -17.27975082397461
    8. '   ' → logprob: -17.65475082397461
    9. 'opcode' → logprob: -17.65475082397461
    10. 'int' → logprob: -18.15475082397461

Token 199: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.1928003813372925e-05
    2. '<|end|>' → logprob: -10.375051498413086
    3. ')value' → logprob: -11.500051498413086
    4. 'value' → logprob: -11.625051498413086
    5. ')
' → logprob: -14.875051498413086
    6. ' )' → logprob: -15.250051498413086
    7. '.value' → logprob: -15.250051498413086
    8. ')return' → logprob: -15.625051498413086
    9. ' value' → logprob: -15.750051498413086
    10. '<|end|>' → logprob: -16.375051498413086

Token 200: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0023014359176158905
    2. ')' → logprob: -6.377301216125488
    3. '<|end|>' → logprob: -8.127301216125488
    4. 'def' → logprob: -8.377301216125488
    5. '    
' → logprob: -10.002301216125488
    6. '*' → logprob: -12.252301216125488
    7. '(' → logprob: -12.377301216125488
    8. '**' → logprob: -12.627301216125488
    9. '<|end|>' → logprob: -12.877301216125488
    10. '#' → logprob: -13.252301216125488

Token 201: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5070773959159851
    2. ')' → logprob: -1.6320774555206299
    3. 'def' (adapté à ' def') → logprob: -2.00707745552063
    4. '<|end|>' → logprob: -3.88207745552063
    5. ' ' → logprob: -4.257077217102051
    6. '*' → logprob: -4.882077217102051
    7. ' def' → logprob: -5.007077217102051
    8. '#' → logprob: -5.382077217102051
    9. ',' → logprob: -5.882077217102051
    10. '  ' → logprob: -6.382077217102051

Token 202: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5795150399208069
    2. ' __' → logprob: -0.8295150399208069
    3. 'pow' → logprob: -5.704514980316162
    4. ' pow' → logprob: -8.70451545715332
    5. '_pow' → logprob: -9.82951545715332
    6. '.__' → logprob: -11.57951545715332
    7. '```' → logprob: -12.32951545715332
    8. 'mod' → logprob: -13.57951545715332
    9. '/__' → logprob: -14.07951545715332
    10. ' ' → logprob: -14.45451545715332

Token 203: 'tr' (ID: 371)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.6712270975112915
    2. 'flo' → logprob: -0.9212270975112915
    3. 'tr' → logprob: -2.421226978302002
    4. 'eq' → logprob: -6.671226978302002
    5. 'rm' → logprob: -7.171226978302002
    6. 'neg' → logprob: -11.54622745513916
    7. 'r' → logprob: -11.67122745513916
    8. 'mod' → logprob: -11.92122745513916
    9. 'fl' → logprob: -12.67122745513916
    10. 'floor' → logprob: -13.04622745513916

Token 204: 'ued' (ID: 5829)
  Prédit: 'ued'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ued' → logprob: -0.6240031123161316
    2. '__' → logprob: -1.2490031719207764
    3. 'ue' → logprob: -2.3740031719207764
    4. '/' → logprob: -3.2490031719207764
    5. 'u' → logprob: -3.4990031719207764
    6. '_' → logprob: -4.374002933502197
    7. 'ues' → logprob: -7.124002933502197
    8. '```' → logprob: -7.999002933502197
    9. 'uem' → logprob: -8.374003410339355
    10. 'e' → logprob: -8.499003410339355

Token 205: 'iv' (ID: 349)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.004069732502102852
    2. '/' → logprob: -6.004069805145264
    3. 'iv' → logprob: -7.004069805145264
    4. '_' → logprob: -8.129069328308105
    5. '__/' → logprob: -9.129069328308105
    6. 'v' → logprob: -9.629069328308105
    7. '__(' → logprob: -10.129069328308105
    8. '__
' → logprob: -10.379069328308105
    9. '/__' → logprob: -10.379069328308105
    10. '```' → logprob: -10.879069328308105

Token 206: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.005444108974188566
    2. '__' → logprob: -5.255444049835205
    3. '(' → logprob: -8.880444526672363
    4. '(self' → logprob: -10.005444526672363
    5. '_(' → logprob: -11.255444526672363
    6. '__(
' → logprob: -12.130444526672363
    7. '_' → logprob: -12.505444526672363
    8. '__((' → logprob: -13.630444526672363
    9. '__('' → logprob: -13.755444526672363
    10. 'self' → logprob: -14.130444526672363

Token 207: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -8.959636033978313e-05
    2. ' self' → logprob: -9.500089645385742
    3. '(self' → logprob: -11.375089645385742
    4. 'operand' → logprob: -14.250089645385742
    5. '   ' → logprob: -14.375089645385742
    6. ')' → logprob: -14.375089645385742
    7. '<|end|>' → logprob: -14.875089645385742
    8. '	self' → logprob: -15.375089645385742
    9. '       ' → logprob: -16.000089645385742
    10. 'def' → logprob: -16.000089645385742

Token 208: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.15964628756046295
    2. '(' → logprob: -2.0346462726593018
    3. '__(' → logprob: -4.534646511077881
    4. 'self' → logprob: -5.534646511077881
    5. '_(' → logprob: -6.909646511077881
    6. '_' → logprob: -8.159646034240723
    7. ' (' → logprob: -8.534646034240723
    8. '__' → logprob: -8.784646034240723
    9. ',' → logprob: -8.909646034240723
    10. 'def' → logprob: -9.284646034240723

Token 209: ' operand' (ID: 63895)
  Prédit: 'operand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operand' → logprob: -0.6407084465026855
    2. ' operand' → logprob: -1.1407084465026855
    3. 'self' → logprob: -1.8907084465026855
    4. ' self' → logprob: -6.1407084465026855
    5. '_operand' → logprob: -8.515708923339844
    6. 'Operand' → logprob: -9.640708923339844
    7. '       ' → logprob: -10.765708923339844
    8. '   ' → logprob: -11.015708923339844
    9. 'operator' → logprob: -11.140708923339844
    10. '(self' → logprob: -11.390708923339844

Token 210: '):
' (ID: 1883)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7261000871658325
    2. '(self' → logprob: -1.2261000871658325
    3. ',' → logprob: -2.101099967956543
    4. '):' → logprob: -2.476099967956543
    5. '):
' → logprob: -4.351099967956543
    6. '   ' → logprob: -7.226099967956543
    7. '       ' → logprob: -7.351099967956543
    8. ' self' → logprob: -7.476099967956543
    9. ')' → logprob: -7.976099967956543
    10. '(' → logprob: -7.976099967956543

Token 211: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4518781900405884
    2. 'self' → logprob: -1.2018781900405884
    3. '(self' → logprob: -3.076878070831299
    4. ' self' → logprob: -4.701878070831299
    5. '(' → logprob: -5.201878070831299
    6. ' (' → logprob: -7.701878070831299
    7. '   ' → logprob: -7.701878070831299
    8. 'def' → logprob: -7.951878070831299
    9. '<|end|>' → logprob: -7.951878070831299
    10. ' if' → logprob: -8.951878547668457

Token 212: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4158898890018463
    2. 'def' → logprob: -1.665889859199524
    3. ' if' → logprob: -2.1658899784088135
    4. '       ' → logprob: -3.5408899784088135
    5. 'return' → logprob: -5.915889739990234
    6. 'pow' → logprob: -6.665889739990234
    7. 'self' → logprob: -6.915889739990234
    8. '   ' → logprob: -7.415889739990234
    9. ' def' → logprob: -7.540889739990234
    10. 'operand' → logprob: -7.665889739990234

Token 213: ' isinstance' (ID: 25889)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.20143333077430725
    2. ' isinstance' → logprob: -1.7014333009719849
    3. '(is' → logprob: -11.701433181762695
    4. 'not' → logprob: -12.201433181762695
    5. 'type' → logprob: -13.076433181762695
    6. ' not' → logprob: -13.076433181762695
    7. ' is' → logprob: -13.076433181762695
    8. ' ' → logprob: -16.326433181762695
    9. '.is' → logprob: -16.451433181762695
    10. '   ' → logprob: -16.701433181762695

Token 214: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.319370302458992e-06
    2. '(self' → logprob: -12.500005722045898
    3. 'self' → logprob: -13.750005722045898
    4. 'operand' → logprob: -15.375005722045898
    5. '(Mod' → logprob: -16.7500057220459
    6. '(
' → logprob: -17.6250057220459
    7. '(op' → logprob: -18.0000057220459
    8. ',' → logprob: -18.2500057220459
    9. '(object' → logprob: -18.5000057220459
    10. '(operator' → logprob: -18.6250057220459

Token 215: 'operand' (ID: 73439)
  Prédit: 'operand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operand' → logprob: -1.259079363080673e-05
    2. 'Mod' → logprob: -12.500012397766113
    3. ' operand' → logprob: -12.750012397766113
    4. 'self' → logprob: -13.000012397766113
    5. '(' → logprob: -13.250012397766113
    6. 'Modulo' → logprob: -14.250012397766113
    7. 'operator' → logprob: -14.500012397766113
    8. 'opcode' → logprob: -15.750012397766113
    9. ')' → logprob: -16.00001335144043
    10. 'Operand' → logprob: -16.25001335144043

Token 216: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.7697225252486533e-06
    2. ' ,' → logprob: -12.625003814697266
    3. '(Mod' → logprob: -16.500003814697266
    4. ',
' → logprob: -16.750003814697266
    5. 'self' → logprob: -16.875003814697266
    6. '   ' → logprob: -16.875003814697266
    7. 'if' → logprob: -17.375003814697266
    8. '(' → logprob: -17.500003814697266
    9. 'a' → logprob: -17.625003814697266
    10. 's' → logprob: -17.750003814697266

Token 217: ' Mod' (ID: 7191)
  Prédit: 'Modulo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Modulo' → logprob: -0.011663536541163921
    2. ' Mod' → logprob: -4.511663436889648
    3. 'Mod' → logprob: -8.011663436889648
    4. 'int' → logprob: -8.261663436889648
    5. ' int' → logprob: -11.011663436889648
    6. '(Mod' → logprob: -13.011663436889648
    7. ' modulo' → logprob: -13.261663436889648
    8. ' ' → logprob: -13.386663436889648
    9. 'Module' → logprob: -13.886663436889648
    10. ' Modul' → logprob: -14.136663436889648

Token 218: 'ulo' (ID: 5953)
  Prédit: 'ulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulo' → logprob: -0.04018659144639969
    2. 'Modulo' → logprob: -3.540186643600464
    3. 'olo' → logprob: -5.540186405181885
    4. 'o' → logprob: -5.915186405181885
    5. 'oto' → logprob: -6.290186405181885
    6. 'uto' → logprob: -7.040186405181885
    7. 'ul' → logprob: -7.665186405181885
    8. 'ule' → logprob: -9.165186882019043
    9. 'Integer' → logprob: -9.290186882019043
    10. 'od' → logprob: -9.665186882019043

Token 219: 'Integer' (ID: 5437)
  Prédit: 'Integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Integer' → logprob: -3.292907877039397e-06
    2. '_integer' → logprob: -12.87500286102295
    3. 'integer' → logprob: -15.25000286102295
    4. '_Integer' → logprob: -15.37500286102295
    5. ' Integer' → logprob: -16.500003814697266
    6. '<Integer' → logprob: -18.125003814697266
    7. 'Inte' → logprob: -18.375003814697266
    8. 'int' → logprob: -19.250003814697266
    9. '_INTEGER' → logprob: -19.375003814697266
    10. '.Integer' → logprob: -19.875003814697266

Token 220: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.07891931384801865
    2. '):' → logprob: -2.5789194107055664
    3. '):
' → logprob: -11.078919410705566
    4. '):

' → logprob: -11.578919410705566
    5. '       ' → logprob: -12.828919410705566
    6. '   ' → logprob: -14.203919410705566
    7. ',' → logprob: -14.453919410705566
    8. ')' → logprob: -15.453919410705566
    9. ':' → logprob: -15.828919410705566
    10. ' ):
' → logprob: -15.953919410705566

Token 221: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00448234286159277
    2. ':
' → logprob: -6.504482269287109
    3. 'self' → logprob: -6.629482269287109
    4. ':' → logprob: -7.254482269287109
    5. 'return' → logprob: -7.754482269287109
    6. '       ' → logprob: -8.37948226928711
    7. '):
' → logprob: -10.00448226928711
    8. ',' → logprob: -10.12948226928711
    9. '#' → logprob: -10.50448226928711
    10. '(' → logprob: -10.87948226928711

Token 222: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.05599869787693024
    2. '           ' → logprob: -2.9309988021850586
    3. ' return' → logprob: -6.930998802185059
    4. 'from' → logprob: -9.930998802185059
    5. '       ' → logprob: -10.430998802185059
    6. 'operand' → logprob: -11.305998802185059
    7. 'op' → logprob: -11.430998802185059
    8. 'import' → logprob: -11.805998802185059
    9. 'inv' → logprob: -11.805998802185059
    10. '#' → logprob: -12.430998802185059

Token 223: ' Mod' (ID: 7191)
  Prédit: 'Modulo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Modulo' → logprob: -0.5788796544075012
    2. 'self' → logprob: -0.8288796544075012
    3. ' self' → logprob: -6.4538798332214355
    4. '           ' → logprob: -7.3288798332214355
    5. 'Mod' → logprob: -7.9538798332214355
    6. '(self' → logprob: -8.703879356384277
    7. '(Mod' → logprob: -10.203879356384277
    8. '       ' → logprob: -10.578879356384277
    9. '               ' → logprob: -10.578879356384277
    10. '   ' → logprob: -10.828879356384277

Token 224: 'ulo' (ID: 5953)
  Prédit: 'Modulo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Modulo' → logprob: -0.577739417552948
    2. 'ulo' → logprob: -0.827739417552948
    3. 'olo' → logprob: -7.327739238739014
    4. 'o' → logprob: -7.702739238739014
    5. 'od' → logprob: -8.202739715576172
    6. 'ol' → logprob: -8.827739715576172
    7. 'ul' → logprob: -8.952739715576172
    8. 'ule' → logprob: -10.452739715576172
    9. 'Integer' → logprob: -10.827739715576172
    10. 'ulto' → logprob: -10.952739715576172

Token 225: 'Integer' (ID: 5437)
  Prédit: 'Integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Integer' → logprob: -0.42931729555130005
    2. 'Modulo' → logprob: -1.0543172359466553
    3. 'self' → logprob: -8.179317474365234
    4. '(Mod' → logprob: -9.554317474365234
    5. 'Mod' → logprob: -9.679317474365234
    6. 'Inte' → logprob: -9.679317474365234
    7. '(self' → logprob: -10.179317474365234
    8. 'int' → logprob: -10.304317474365234
    9. 'pow' → logprob: -11.179317474365234
    10. 'integer' → logprob: -11.429317474365234

Token 226: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00791500136256218
    2. '(pow' → logprob: -5.257915019989014
    3. 'self' → logprob: -6.382915019989014
    4. 'pow' → logprob: -7.007915019989014
    5. '(
' → logprob: -10.007914543151855
    6. '(' → logprob: -10.507914543151855
    7. '(int' → logprob: -12.757914543151855
    8. '(div' → logprob: -13.632914543151855
    9. ' pow' → logprob: -14.007914543151855
    10. '(power' → logprob: -14.257914543151855

Token 227: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.06912264972925186
    2. '*' → logprob: -3.319122552871704
    3. 'value' → logprob: -3.569122552871704
    4. ' *' → logprob: -6.069122791290283
    5. '*self' → logprob: -10.194122314453125
    6. ' value' → logprob: -11.444122314453125
    7. '.' → logprob: -11.569122314453125
    8. '   ' → logprob: -11.694122314453125
    9. ')' → logprob: -12.069122314453125
    10. '(value' → logprob: -12.194122314453125

Token 228: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.34869977831840515
    2. ' *' → logprob: -1.2236998081207275
    3. ')' → logprob: -8.473699569702148
    4. '*object' → logprob: -11.598699569702148
    5. ')*' → logprob: -11.973699569702148
    6. '```' → logprob: -12.098699569702148
    7. '**' → logprob: -12.223699569702148
    8. ',' → logprob: -12.473699569702148
    9. '*self' → logprob: -12.598699569702148
    10. '*
' → logprob: -12.848699569702148

Token 229: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -6.432518421206623e-05
    2. 'operand' → logprob: -10.5000638961792
    3. ' pow' → logprob: -10.5000638961792
    4. '   ' → logprob: -12.5000638961792
    5. '(pow' → logprob: -12.7500638961792
    6. '       ' → logprob: -14.3750638961792
    7. 'invert' → logprob: -14.7500638961792
    8. 'mod' → logprob: -14.8750638961792
    9. 'self' → logprob: -15.2500638961792
    10. 'inverse' → logprob: -15.6250638961792

Token 230: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.682846287731081e-05
    2. '(
' → logprob: -9.625066757202148
    3. 'operand' → logprob: -14.125066757202148
    4. '(

' → logprob: -17.00006675720215
    5. '(
' → logprob: -18.25006675720215
    6. '(int' → logprob: -18.87506675720215
    7. '(operator' → logprob: -19.62506675720215
    8. '(op' → logprob: -19.75006675720215
    9. '
' → logprob: -19.75006675720215
    10. '(pow' → logprob: -19.87506675720215

Token 231: 'operand' (ID: 73439)
  Prédit: 'operand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operand' → logprob: -0.00026765360962599516
    2. '(' → logprob: -8.25026798248291
    3. ' operand' → logprob: -12.12526798248291
    4. 'operator' → logprob: -15.00026798248291
    5. '(
' → logprob: -16.000267028808594
    6. '_operand' → logprob: -16.125267028808594
    7. 'int' → logprob: -16.375267028808594
    8. 'Operand' → logprob: -16.500267028808594
    9. '   ' → logprob: -16.500267028808594
    10. '       ' → logprob: -17.000267028808594

Token 232: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -1.0683535037969705e-05
    2. '.' → logprob: -12.25001049041748
    3. 'value' → logprob: -12.25001049041748
    4. '(value' → logprob: -14.12501049041748
    5. ' .' → logprob: -16.000011444091797
    6. '(' → logprob: -16.375011444091797
    7. '.val' → logprob: -17.375011444091797
    8. '.valor' → logprob: -18.250011444091797
    9. ' value' → logprob: -18.375011444091797
    10. ',value' → logprob: -18.500011444091797

Token 233: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07258034497499466
    2. '(mod' → logprob: -3.197580337524414
    3. '(' → logprob: -3.822580337524414
    4. 'mod' → logprob: -5.947580337524414
    5. '(-' → logprob: -6.072580337524414
    6. '(self' → logprob: -6.322580337524414
    7. ',-' → logprob: -8.447580337524414
    8. '(
' → logprob: -9.197580337524414
    9. ',self' → logprob: -9.822580337524414
    10. ',
' → logprob: -10.072580337524414

Token 234: ' modulo' (ID: 112372)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.00031174797913990915
    2. '-' → logprob: -8.250311851501465
    3. '-mod' → logprob: -10.625311851501465
    4. ' modulo' → logprob: -11.375311851501465
    5. '(mod' → logprob: -11.875311851501465
    6. ' mod' → logprob: -12.875311851501465
    7. '           ' → logprob: -13.500311851501465
    8. '   ' → logprob: -13.875311851501465
    9. '	mod' → logprob: -13.875311851501465
    10. ' -' → logprob: -14.875311851501465

Token 235: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.0009149204124696553
    2. '-' → logprob: -7.125915050506592
    3. 'prime' → logprob: -9.125914573669434
    4. ' -' → logprob: -14.125914573669434
    5. 'Prime' → logprob: -14.625914573669434
    6. '```' → logprob: -16.12591552734375
    7. '
' → logprob: -16.37591552734375
    8. ' prime' → logprob: -16.37591552734375
    9. ')' → logprob: -17.12591552734375
    10. ' Prime' → logprob: -18.25091552734375

Token 236: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0008045066497288644
    2. ' -' → logprob: -7.125804424285889
    3. ' ' → logprob: -17.875804901123047
    4. '```' → logprob: -20.125804901123047
    5. '−' → logprob: -20.125804901123047
    6. '–' → logprob: -20.625804901123047
    7. '   ' → logprob: -21.000804901123047
    8. '-
' → logprob: -21.250804901123047
    9. '  ' → logprob: -21.250804901123047
    10. '{-' → logprob: -21.500804901123047

Token 237: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.875000953674316
    3. '-' → logprob: -16.625001907348633
    4. '```' → logprob: -17.250001907348633
    5. '
' → logprob: -18.250001907348633
    6. '۲' → logprob: -18.375001907348633
    7. 'two' → logprob: -18.875001907348633
    8. '   ' → logprob: -19.000001907348633
    9. '

' → logprob: -19.062501907348633
    10. '２' → logprob: -19.125001907348633

Token 238: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. '-' → logprob: -16.5
    3. ' ' → logprob: -16.625
    4. '```' → logprob: -17.25
    5. '۲' → logprob: -17.75
    6. '
' → logprob: -18.0
    7. '２' → logprob: -18.5
    8. 'two' → logprob: -18.875
    9. '٢' → logprob: -18.875
    10. '3' → logprob: -19.0

Token 239: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.055624403059482574
    2. '))' → logprob: -3.555624485015869
    3. ')' → logprob: -3.680624485015869
    4. ' ,' → logprob: -8.305624008178711
    5. ',
' → logprob: -10.680624008178711
    6. ')))' → logprob: -10.930624008178711
    7. '}' → logprob: -11.680624008178711
    8. '   ' → logprob: -12.180624008178711
    9. ' ))' → logprob: -12.430624008178711
    10. '),' → logprob: -12.680624008178711

Token 240: ' modulo' (ID: 112372)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0005541055579669774
    2. ' modulo' → logprob: -7.500554084777832
    3. '           ' → logprob: -14.875554084777832
    4. 'module' → logprob: -14.875554084777832
    5. '   ' → logprob: -16.25055503845215
    6. '	mod' → logprob: -16.50055503845215
    7. '       ' → logprob: -16.62555503845215
    8. 'Modulo' → logprob: -17.50055503845215
    9. 'moder' → logprob: -17.62555503845215
    10. '(mod' → logprob: -17.62555503845215

Token 241: '_prime' (ID: 98616)
  Prédit: '244'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '244' → logprob: -0.42089715600013733
    2. '353' → logprob: -1.920897126197815
    3. '344' → logprob: -2.2958972454071045
    4. 'prime' → logprob: -2.6708972454071045
    5. '_prime' → logprob: -3.9208972454071045
    6. '144' → logprob: -6.795897006988525
    7. ')' → logprob: -6.920897006988525
    8. 'Prime' → logprob: -7.170897006988525
    9. '998' → logprob: -7.295897006988525
    10. '
' → logprob: -7.295897006988525

Token 242: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0007176732178777456
    2. ')' → logprob: -7.625717639923096
    3. '))
' → logprob: -8.500718116760254
    4. '       ' → logprob: -11.125718116760254
    5. ')))' → logprob: -12.250718116760254
    6. ' ))' → logprob: -12.250718116760254
    7. '))

' → logprob: -14.250718116760254
    8. '   ' → logprob: -14.375718116760254
    9. '           ' → logprob: -15.250718116760254
    10. ')
' → logprob: -15.250718116760254

Token 243: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0026143016293644905
    2. ')' → logprob: -6.002614498138428
    3. '<|end|>' → logprob: -9.25261402130127
    4. '(' → logprob: -12.12761402130127
    5. '      ' → logprob: -12.37761402130127
    6. '   ' → logprob: -12.37761402130127
    7. '	' → logprob: -12.50261402130127
    8. ' )' → logprob: -12.62761402130127
    9. 'else' → logprob: -12.75261402130127
    10. ' else' → logprob: -12.75261402130127

Token 244: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014648434706032276
    2. 'else' (adapté à ' else') → logprob: -4.2646484375
    3. ' else' → logprob: -7.8896484375
    4. '           ' → logprob: -9.8896484375
    5. '   ' → logprob: -10.0146484375
    6. ')' → logprob: -12.1396484375
    7. 'elif' → logprob: -12.7646484375
    8. '	' → logprob: -13.6396484375
    9. '      ' → logprob: -13.7646484375
    10. '               ' → logprob: -14.1396484375

Token 245: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03414444252848625
    2. ':' → logprob: -4.034144401550293
    3. ':
' → logprob: -5.159144401550293
    4. ' return' → logprob: -5.409144401550293
    5. 'return' → logprob: -5.534144401550293
    6. ' :' → logprob: -7.534144401550293
    7. '(' → logprob: -8.159144401550293
    8. ':return' → logprob: -8.409144401550293
    9. '          ' → logprob: -8.784144401550293
    10. '            ' → logprob: -8.909144401550293

Token 246: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1818208545446396
    2. '       ' → logprob: -1.9318208694458008
    3. 'Mod' → logprob: -4.806820869445801
    4. ' Mod' → logprob: -4.806820869445801
    5. ' return' → logprob: -6.181820869445801
    6. 'Modulo' → logprob: -6.556820869445801
    7. '(Mod' → logprob: -8.1818208694458
    8. 'return' → logprob: -8.1818208694458
    9. '               ' → logprob: -8.3068208694458
    10. '        ' → logprob: -8.4318208694458

Token 247: ' return' (ID: 622)
  Prédit: 'Modulo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Modulo' → logprob: -0.012201746925711632
    2. 'Mod' → logprob: -4.51220178604126
    3. ' Mod' → logprob: -7.51220178604126
    4. 'return' (adapté à ' return') → logprob: -7.76220178604126
    5. ' return' → logprob: -9.637201309204102
    6. '(Mod' → logprob: -9.887201309204102
    7. 'self' → logprob: -10.012201309204102
    8. '       ' → logprob: -12.012201309204102
    9. '           ' → logprob: -12.762201309204102
    10. ' Modular' → logprob: -13.012201309204102

Token 248: ' Mod' (ID: 7191)
  Prédit: 'Modulo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Modulo' → logprob: -0.0004086275293957442
    2. 'Mod' → logprob: -8.250408172607422
    3. ' Mod' → logprob: -8.875408172607422
    4. 'self' → logprob: -12.625408172607422
    5. '(Mod' → logprob: -12.750408172607422
    6. ' modulo' → logprob: -14.875408172607422
    7. 'Module' → logprob: -15.125408172607422
    8. ' Modul' → logprob: -16.000408172607422
    9. ' self' → logprob: -16.500408172607422
    10. 'Multip' → logprob: -16.500408172607422

Token 249: 'ulo' (ID: 5953)
  Prédit: 'Modulo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Modulo' → logprob: -0.12724220752716064
    2. 'ulo' → logprob: -2.252242088317871
    3. 'o' → logprob: -4.752242088317871
    4. 'olo' → logprob: -5.377242088317871
    5. 'oto' → logprob: -8.002242088317871
    6. 'O' → logprob: -8.252242088317871
    7. 'of' → logprob: -8.877242088317871
    8. 'ol' → logprob: -9.627242088317871
    9. 'u' → logprob: -9.627242088317871
    10. 'ULO' → logprob: -10.627242088317871

Token 250: 'Integer' (ID: 5437)
  Prédit: 'Integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Integer' → logprob: -7.517272024415433e-05
    2. 'Modulo' → logprob: -9.500075340270996
    3. 'Inte' → logprob: -15.375075340270996
    4. ' Integer' → logprob: -17.12507438659668
    5. '_integer' → logprob: -18.12507438659668
    6. 'integer' → logprob: -19.12507438659668
    7. '_Integer' → logprob: -19.62507438659668
    8. '(Integer' → logprob: -19.62507438659668
    9. '<Integer' → logprob: -19.87507438659668
    10. 'Int' → logprob: -20.25007438659668

Token 251: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.512236498361744e-07
    2. 'self' → logprob: -14.500000953674316
    3. '(
' → logprob: -19.375
    4. '(' → logprob: -19.875
    5. '       ' → logprob: -21.375
    6. ' (' → logprob: -21.5
    7. ' self' → logprob: -22.5
    8. '(s' → logprob: -22.625
    9. '(int' → logprob: -22.75
    10. '[self' → logprob: -22.875

Token 252: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.00021045419271104038
    2. 'value' → logprob: -8.750210762023926
    3. '.' → logprob: -9.875210762023926
    4. ' .' → logprob: -15.125210762023926
    5. ' value' → logprob: -16.37520980834961
    6. '.val' → logprob: -16.75020980834961
    7. ''value' → logprob: -17.75020980834961
    8. '*' → logprob: -18.00020980834961
    9. '(value' → logprob: -18.12520980834961
    10. '"value' → logprob: -18.25020980834961

Token 253: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.07028962671756744
    2. '*' → logprob: -2.6952896118164062
    3. ' //' → logprob: -8.195289611816406
    4. '//' → logprob: -10.445289611816406
    5. ' ' → logprob: -11.195289611816406
    6. ' ' → logprob: -11.195289611816406
    7. ')' → logprob: -11.445289611816406
    8. 'pow' → logprob: -12.945289611816406
    9. '%' → logprob: -13.695289611816406
    10. ' pow' → logprob: -13.820289611816406

Token 254: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.00012368128227535635
    2. ' pow' → logprob: -9.000123977661133
    3. '   ' → logprob: -15.875123977661133
    4. '(pow' → logprob: -17.000123977661133
    5. '       ' → logprob: -17.125123977661133
    6. '
' → logprob: -17.625123977661133
    7. 'pw' → logprob: -18.375123977661133
    8. 'p' → logprob: -18.875123977661133
    9. '           ' → logprob: -19.000123977661133
    10. 'po' → logprob: -19.000123977661133

Token 255: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.088346359931165e-07
    2. 'operand' → logprob: -14.375000953674316
    3. '(
' → logprob: -15.750000953674316
    4. '(op' → logprob: -16.875
    5. '(operator' → logprob: -18.25
    6. '(int' → logprob: -19.0
    7. '((' → logprob: -20.375
    8. '(abs' → logprob: -20.375
    9. '_operand' → logprob: -20.625
    10. ' operand' → logprob: -21.25

Token 256: 'operand' (ID: 73439)
  Prédit: 'operand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operand' → logprob: -1.6240566083070007e-06
    2. ' operand' → logprob: -13.625001907348633
    3. 'int' → logprob: -15.250001907348633
    4. '(' → logprob: -16.875001907348633
    5. 'operator' → logprob: -17.500001907348633
    6. 'oper' → logprob: -17.875001907348633
    7. 'op' → logprob: -18.875001907348633
    8. '   ' → logprob: -19.000001907348633
    9. '_operand' → logprob: -19.000001907348633
    10. 'opcode' → logprob: -19.500001907348633

Token 257: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.52788148727268e-05
    2. ' ,' → logprob: -9.750064849853516
    3. 'mod' → logprob: -12.750064849853516
    4. 'value' → logprob: -13.250064849853516
    5. ',
' → logprob: -14.000064849853516
    6. ',value' → logprob: -14.875064849853516
    7. ',module' → logprob: -15.625064849853516
    8. '```' → logprob: -16.500064849853516
    9. ')' → logprob: -16.625064849853516
    10. '`,' → logprob: -16.750064849853516

Token 258: ' modulo' (ID: 112372)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.014169624075293541
    2. ' modulo' → logprob: -4.264169692993164
    3. '(mod' → logprob: -12.639169692993164
    4. 'module' → logprob: -14.014169692993164
    5. '	mod' → logprob: -14.139169692993164
    6. ' mod' → logprob: -14.639169692993164
    7. '   ' → logprob: -15.139169692993164
    8. 'mo' → logprob: -15.889169692993164
    9. 'Modulo' → logprob: -16.264169692993164
    10. ' ' → logprob: -16.639169692993164

Token 259: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.3138517737388611
    2. 'prime' → logprob: -1.3138518333435059
    3. '-' → logprob: -7.563851833343506
    4. 'Prime' → logprob: -9.938851356506348
    5. ' prime' → logprob: -11.063851356506348
    6. ' -' → logprob: -12.813851356506348
    7. '```' → logprob: -13.563851356506348
    8. '
' → logprob: -14.438851356506348
    9. '-pr' → logprob: -14.938851356506348
    10. 'p' → logprob: -15.063851356506348

Token 260: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10021033883094788
    2. ' -' → logprob: -2.350210428237915
    3. ' ' → logprob: -12.600210189819336
    4. ')' → logprob: -16.475210189819336
    5. '−' → logprob: -16.850210189819336
    6. '   ' → logprob: -16.850210189819336
    7. ' ' → logprob: -17.225210189819336
    8. '  ' → logprob: -17.600210189819336
    9. '–' → logprob: -17.975210189819336
    10. 'mod' → logprob: -18.100210189819336

Token 261: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.778209353797138e-05
    2. ' ' → logprob: -9.625067710876465
    3. '   ' → logprob: -15.125067710876465
    4. '```' → logprob: -15.375067710876465
    5. '  ' → logprob: -15.625067710876465
    6. '-' → logprob: -15.812567710876465
    7. '
' → logprob: -15.875067710876465
    8. '3' → logprob: -16.31256866455078
    9. '۲' → logprob: -16.50006866455078
    10. ' ' → logprob: -16.87506866455078

Token 262: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.372294698550832e-06
    2. ' ' → logprob: -11.750009536743164
    3. '
' → logprob: -14.500009536743164
    4. '```' → logprob: -15.500009536743164
    5. '   ' → logprob: -15.937509536743164
    6. '

' → logprob: -16.125009536743164
    7. '3' → logprob: -16.250009536743164
    8. '-' → logprob: -16.250009536743164
    9. '  ' → logprob: -16.375009536743164
    10. '۲' → logprob: -17.000009536743164

Token 263: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.9875325708417222e-05
    2. ' ,' → logprob: -10.875029563903809
    3. ')' → logprob: -12.500029563903809
    4. 'mod' → logprob: -12.625029563903809
    5. '))' → logprob: -13.500029563903809
    6. ',module' → logprob: -13.625029563903809
    7. '),' → logprob: -15.250029563903809
    8. '   ' → logprob: -15.500029563903809
    9. '(mod' → logprob: -15.625029563903809
    10. ',
' → logprob: -15.625029563903809

Token 264: ' modulo' (ID: 112372)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.011050770990550518
    2. ' modulo' → logprob: -4.511050701141357
    3. 'module' → logprob: -14.136051177978516
    4. '(mod' → logprob: -14.511051177978516
    5. '	mod' → logprob: -14.761051177978516
    6. ' mod' → logprob: -15.511051177978516
    7. '           ' → logprob: -15.636051177978516
    8. 'Modulo' → logprob: -15.761051177978516
    9. 'moder' → logprob: -15.886051177978516
    10. ')' → logprob: -16.011051177978516

Token 265: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.6092125773429871
    2. 'prime' → logprob: -0.8592125773429871
    3. '998' → logprob: -4.234212398529053
    4. ')' → logprob: -4.484212398529053
    5. '353' → logprob: -6.109212398529053
    6. 'Prime' → logprob: -6.234212398529053
    7. '))' → logprob: -7.359212398529053
    8. 'p' → logprob: -7.859212398529053
    9. ' ' → logprob: -8.359212875366211
    10. '```' → logprob: -8.484212875366211

Token 266: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3870235085487366
    2. '))' → logprob: -1.1370234489440918
    3. '       ' → logprob: -8.88702392578125
    4. ')
' → logprob: -12.01202392578125
    5. ' )' → logprob: -12.76202392578125
    6. ')))' → logprob: -13.01202392578125
    7. '))
' → logprob: -13.51202392578125
    8. '   ' → logprob: -14.13702392578125
    9. ' ))' → logprob: -15.13702392578125
    10. ')}' → logprob: -15.88702392578125

Token 267: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4332295358181
    2. ')' → logprob: -1.1832295656204224
    3. '<|end|>' → logprob: -3.183229446411133
    4. ' ' → logprob: -6.433229446411133
    5. 'def' → logprob: -7.433229446411133
    6. '  ' → logprob: -7.808229446411133
    7. '#' → logprob: -8.308229446411133
    8. '*' → logprob: -8.433229446411133
    9. '    ' → logprob: -8.808229446411133
    10. '    
' → logprob: -8.933229446411133

Token 268: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5310037732124329
    2. 'def' (adapté à ' def') → logprob: -1.406003713607788
    3. ')' → logprob: -1.906003713607788
    4. '#' → logprob: -5.031003952026367
    5. '<|end|>' → logprob: -5.031003952026367
    6. ' ' → logprob: -6.906003952026367
    7. '```' → logprob: -7.031003952026367
    8. '__' → logprob: -7.406003952026367
    9. ' def' → logprob: -7.656003952026367
    10. ']' → logprob: -8.156003952026367

Token 269: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0007790116942487657
    2. 'pow' → logprob: -7.250779151916504
    3. ' __' → logprob: -9.625779151916504
    4. '_pow' → logprob: -12.875779151916504
    5. 'power' → logprob: -15.875779151916504
    6. '```' → logprob: -16.375778198242188
    7. '.__' → logprob: -17.125778198242188
    8. 'mod' → logprob: -17.250778198242188
    9. ' pow' → logprob: -17.375778198242188
    10. 'inverse' → logprob: -17.625778198242188

Token 270: 'pow' (ID: 30304)
  Prédit: 'pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.4212760329246521
    2. 'eq' → logprob: -1.1712760925292969
    3. 'flo' → logprob: -3.421276092529297
    4. 'r' → logprob: -6.921276092529297
    5. 'lt' → logprob: -9.796276092529297
    6. 'int' → logprob: -10.296276092529297
    7. 'rm' → logprob: -10.671276092529297
    8. 'neg' → logprob: -10.796276092529297
    9. 'floor' → logprob: -11.921276092529297
    10. 'power' → logprob: -12.046276092529297

Token 271: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.5716766715049744
    2. '(' → logprob: -0.9466766715049744
    3. '(self' → logprob: -3.071676731109619
    4. '_(' → logprob: -7.446676731109619
    5. '__' → logprob: -8.196676254272461
    6. '__(
' → logprob: -9.321676254272461
    7. '*(' → logprob: -10.321676254272461
    8. '```' → logprob: -10.696676254272461
    9. '_' → logprob: -11.821676254272461
    10. ' (' → logprob: -12.071676254272461

Token 272: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.543733904138207e-05
    2. ' self' → logprob: -9.37509536743164
    3. '   ' → logprob: -12.25009536743164
    4. '       ' → logprob: -12.25009536743164
    5. '(self' → logprob: -14.37509536743164
    6. 'operand' → logprob: -16.62509536743164
    7. ',' → logprob: -16.87509536743164
    8. '0' → logprob: -17.37509536743164
    9. '1' → logprob: -17.37509536743164
    10. '2' → logprob: -17.37509536743164

Token 273: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.7119255065917969
    2. ',' → logprob: -1.0869255065917969
    3. '(' → logprob: -1.8369255065917969
    4. 'self' → logprob: -4.711925506591797
    5. '__(' → logprob: -5.836925506591797
    6. ' (' → logprob: -7.961925506591797
    7. ')(' → logprob: -9.211925506591797
    8. '_(' → logprob: -9.711925506591797
    9. '   ' → logprob: -9.961925506591797
    10. ')' → logprob: -9.961925506591797

Token 274: ' operand' (ID: 63895)
  Prédit: 'operand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operand' → logprob: -0.6001574397087097
    2. 'self' → logprob: -0.8501574397087097
    3. ' self' → logprob: -4.100157260894775
    4. ' operand' → logprob: -4.975157260894775
    5. 'other' → logprob: -8.225157737731934
    6. 'int' → logprob: -9.225157737731934
    7. 'operator' → logprob: -10.475157737731934
    8. ' ' → logprob: -10.850157737731934
    9. ' other' → logprob: -11.475157737731934
    10. '2' → logprob: -12.475157737731934

Token 275: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002610736759379506
    2. 'self' → logprob: -6.377610683441162
    3. ' ,' → logprob: -7.127610683441162
    4. '(self' → logprob: -10.25261116027832
    5. '):' → logprob: -10.62761116027832
    6. ',self' → logprob: -11.12761116027832
    7. '       ' → logprob: -11.25261116027832
    8. ' self' → logprob: -12.00261116027832
    9. '   ' → logprob: -12.75261116027832
    10. '(' → logprob: -13.00261116027832

Token 276: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0476081557571888
    2. ' self' → logprob: -3.7976081371307373
    3. '(self' → logprob: -4.047608375549316
    4. '       ' → logprob: -5.047608375549316
    5. '   ' → logprob: -9.672608375549316
    6. ' (' → logprob: -9.797608375549316
    7. '(' → logprob: -10.172608375549316
    8. 'def' → logprob: -11.672608375549316
    9. '	self' → logprob: -11.672608375549316
    10. ',' → logprob: -13.422608375549316

Token 277: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7863659262657166
    2. 'self' → logprob: -0.7863659262657166
    3. '       ' → logprob: -2.5363659858703613
    4. 'pow' → logprob: -5.661365985870361
    5. ' return' → logprob: -5.911365985870361
    6. 'def' → logprob: -6.286365985870361
    7. 'if' (adapté à ' if') → logprob: -7.161365985870361
    8. ' self' → logprob: -7.786365985870361
    9. '(self' → logprob: -7.786365985870361
    10. 'power' → logprob: -9.911365509033203

Token 278: ' isinstance' (ID: 25889)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.00248849974013865
    2. ' isinstance' → logprob: -6.002488613128662
    3. '(is' → logprob: -11.502488136291504
    4. '   ' → logprob: -13.127488136291504
    5. ' is' → logprob: -14.877488136291504
    6. 'type' → logprob: -16.37748908996582
    7. '.is' → logprob: -16.50248908996582
    8. 'not' → logprob: -16.50248908996582
    9. '  ' → logprob: -17.00248908996582
    10. '       ' → logprob: -17.75248908996582

Token 279: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.5048530030981055e-06
    2. 'operand' → logprob: -14.375001907348633
    3. '(self' → logprob: -14.625001907348633
    4. 'self' → logprob: -15.250001907348633
    5. '(op' → logprob: -16.500001907348633
    6. ' (' → logprob: -17.875001907348633
    7. '(
' → logprob: -18.000001907348633
    8. ' operand' → logprob: -18.250001907348633
    9. '(operator' → logprob: -18.375001907348633
    10. ' ' → logprob: -19.625001907348633

Token 280: 'operand' (ID: 73439)
  Prédit: 'operand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operand' → logprob: -0.00015812745550647378
    2. 'self' → logprob: -9.375158309936523
    3. ' operand' → logprob: -10.500158309936523
    4. 'Mod' → logprob: -10.750158309936523
    5. 'Modulo' → logprob: -10.750158309936523
    6. 'int' → logprob: -13.500158309936523
    7. 'Operand' → logprob: -15.125158309936523
    8. 'operator' → logprob: -15.125158309936523
    9. '   ' → logprob: -15.250158309936523
    10. ' ' → logprob: -15.250158309936523

Token 281: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.204720582696609e-05
    2. ' ,' → logprob: -10.500052452087402
    3. '(' → logprob: -11.000052452087402
    4. 'self' → logprob: -12.875052452087402
    5. ',int' → logprob: -13.500052452087402
    6. '   ' → logprob: -13.875052452087402
    7. '(int' → logprob: -14.250052452087402
    8. '       ' → logprob: -14.500052452087402
    9. '(self' → logprob: -14.625052452087402
    10. ',self' → logprob: -15.250052452087402

Token 282: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.3530251383781433
    2. ' Mod' → logprob: -1.978025197982788
    3. 'Modulo' → logprob: -2.353025197982788
    4. 'int' → logprob: -2.853025197982788
    5. ' int' → logprob: -5.103024959564209
    6. '(Mod' → logprob: -8.353025436401367
    7. '(int' → logprob: -11.603025436401367
    8. '_Mod' → logprob: -11.603025436401367
    9. ' ' → logprob: -13.103025436401367
    10. ' modulo' → logprob: -13.228025436401367

Token 283: 'ulo' (ID: 5953)
  Prédit: 'Modulo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Modulo' → logprob: -0.23782062530517578
    2. 'Integer' → logprob: -1.6128206253051758
    3. 'od' → logprob: -4.612820625305176
    4. 'o' → logprob: -7.612820625305176
    5. 'teger' → logprob: -7.862820625305176
    6. 'integer' → logprob: -7.862820625305176
    7. 'ulo' → logprob: -8.112820625305176
    8. 't' → logprob: -8.237820625305176
    9. 'oto' → logprob: -8.737820625305176
    10. 'type' → logprob: -10.237820625305176

Token 284: 'Integer' (ID: 5437)
  Prédit: 'Integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Integer' → logprob: -0.011077526025474072
    2. 'int' → logprob: -4.511077404022217
    3. 'integer' → logprob: -10.761077880859375
    4. '_integer' → logprob: -11.886077880859375
    5. ' Integer' → logprob: -14.511077880859375
    6. 'Int' → logprob: -14.636077880859375
    7. '_Integer' → logprob: -15.636077880859375
    8. ' int' → logprob: -15.886077880859375
    9. '_int' → logprob: -16.511077880859375
    10. '(int' → logprob: -16.886077880859375

Token 285: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.018207889050245285
    2. '):' → logprob: -4.018208026885986
    3. '):
' → logprob: -10.768207550048828
    4. 'self' → logprob: -11.018207550048828
    5. '       ' → logprob: -11.143207550048828
    6. '           ' → logprob: -13.268207550048828
    7. '):

' → logprob: -13.393207550048828
    8. ':
' → logprob: -13.768207550048828
    9. '   ' → logprob: -14.268207550048828
    10. ' ):
' → logprob: -15.268207550048828

Token 286: '           ' (ID: 352)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3325890898704529
    2. '           ' → logprob: -1.3325891494750977
    3. '       ' → logprob: -4.207589149475098
    4. ' return' → logprob: -5.832589149475098
    5. 'self' → logprob: -6.707589149475098
    6. '{
' → logprob: -9.832589149475098
    7. '   ' → logprob: -11.207589149475098
    8. ':return' → logprob: -11.832589149475098
    9. '{return' → logprob: -12.207589149475098
    10. '	return' → logprob: -12.457589149475098

Token 287: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00022797346173319966
    2. ' return' → logprob: -8.625227928161621
    3. '           ' → logprob: -10.625227928161621
    4. '       ' → logprob: -10.750227928161621
    5. 'pow' → logprob: -13.625227928161621
    6. 'self' → logprob: -13.875227928161621
    7. 'result' → logprob: -16.500228881835938
    8. '	return' → logprob: -16.500228881835938
    9. '
' → logprob: -16.750228881835938
    10. '   ' → logprob: -16.875228881835938

Token 288: ' Mod' (ID: 7191)
  Prédit: 'Modulo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Modulo' → logprob: -2.935296834039036e-06
    2. ' Mod' → logprob: -13.00000286102295
    3. 'self' → logprob: -14.75000286102295
    4. 'Mod' → logprob: -16.000003814697266
    5. 'pow' → logprob: -16.750003814697266
    6. '   ' → logprob: -17.250003814697266
    7. '(Mod' → logprob: -17.375003814697266
    8. ' modulo' → logprob: -17.500003814697266
    9. 'Module' → logprob: -18.875003814697266
    10. 'Modifier' → logprob: -19.500003814697266

Token 289: 'ulo' (ID: 5953)
  Prédit: 'ulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulo' → logprob: -0.6947190165519714
    2. 'Modulo' → logprob: -0.6947190165519714
    3. 'o' → logprob: -7.069718837738037
    4. 'olo' → logprob: -7.444718837738037
    5. 'ul' → logprob: -10.694719314575195
    6. 'u' → logprob: -10.944719314575195
    7. 'oto' → logprob: -10.944719314575195
    8. 'ULO' → logprob: -11.194719314575195
    9. ' modulo' → logprob: -11.694719314575195
    10. 'ule' → logprob: -11.819719314575195

Token 290: 'Integer' (ID: 5437)
  Prédit: 'Integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Integer' → logprob: -8.180258191714529e-06
    2. 'Modulo' → logprob: -11.750008583068848
    3. ' Integer' → logprob: -16.62500762939453
    4. '(Integer' → logprob: -16.87500762939453
    5. 'integer' → logprob: -17.75000762939453
    6. '(Mod' → logprob: -17.87500762939453
    7. '_integer' → logprob: -18.37500762939453
    8. '<Integer' → logprob: -19.12500762939453
    9. '(' → logprob: -19.25000762939453
    10. 'Inte' → logprob: -19.37500762939453

Token 291: '(pow' (ID: 189160)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.01867963932454586
    2. 'self' → logprob: -4.018679618835449
    3. 'pow' → logprob: -8.01867961883545
    4. '(pow' → logprob: -8.51867961883545
    5. '(' → logprob: -14.64367961883545
    6. ' self' → logprob: -16.143680572509766
    7. '(
' → logprob: -16.643680572509766
    8. ' pow' → logprob: -18.018680572509766
    9. '(power' → logprob: -18.393680572509766
    10. 'power' → logprob: -18.643680572509766

Token 292: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.749814019713085e-06
    2. 'self' → logprob: -12.500006675720215
    3. '(' → logprob: -12.750006675720215
    4. '(
' → logprob: -16.25000762939453
    5. ' self' → logprob: -19.62500762939453
    6. '       ' → logprob: -21.00000762939453
    7. '=self' → logprob: -21.00000762939453
    8. '	self' → logprob: -21.50000762939453
    9. '   ' → logprob: -21.87500762939453
    10. ',self' → logprob: -22.00000762939453

Token 293: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -1.1472419600977446e-06
    2. 'value' → logprob: -14.125000953674316
    3. '.' → logprob: -15.125000953674316
    4. ' .' → logprob: -16.375001907348633
    5. '(value' → logprob: -19.500001907348633
    6. ').' → logprob: -19.750001907348633
    7. '.values' → logprob: -20.125001907348633
    8. ' value' → logprob: -21.125001907348633
    9. '"value' → logprob: -21.500001907348633
    10. '.user' → logprob: -22.000001907348633

Token 294: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31404557824134827
    2. ',' → logprob: -1.3140455484390259
    3. '(
' → logprob: -7.564045429229736
    4. 'operand' → logprob: -8.939045906066895
    5. ' ,' → logprob: -10.314045906066895
    6. '(self' → logprob: -10.439045906066895
    7. 'self' → logprob: -11.064045906066895
    8. ' operand' → logprob: -11.314045906066895
    9. ')' → logprob: -11.689045906066895
    10. '(operator' → logprob: -11.689045906066895

Token 295: ' operand' (ID: 63895)
  Prédit: 'operand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operand' → logprob: -0.1002068892121315
    2. ' operand' → logprob: -2.3502068519592285
    3. 'operator' → logprob: -16.22520637512207
    4. '_operand' → logprob: -16.35020637512207
    5. 'Operand' → logprob: -17.72520637512207
    6. ' ' → logprob: -18.47520637512207
    7. '   ' → logprob: -18.72520637512207
    8. 'opcode' → logprob: -19.47520637512207
    9. '    ' → logprob: -19.97520637512207
    10. '               ' → logprob: -20.35020637512207

Token 296: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -4.127333340875339e-06
    2. '.' → logprob: -13.000003814697266
    3. 'value' → logprob: -13.250003814697266
    4. ' .' → logprob: -19.375003814697266
    5. '.val' → logprob: -20.250003814697266
    6. '.operator' → logprob: -20.625003814697266
    7. ').' → logprob: -20.625003814697266
    8. '(value' → logprob: -21.250003814697266
    9. ' value' → logprob: -21.375003814697266
    10. ')value' → logprob: -21.625003814697266

Token 297: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05590309947729111
    2. '))' → logprob: -2.930903196334839
    3. ' ,' → logprob: -7.05590295791626
    4. '))
' → logprob: -9.680903434753418
    5. ',
' → logprob: -9.930903434753418
    6. ' ))' → logprob: -10.680903434753418
    7. '   ' → logprob: -11.805903434753418
    8. ')' → logprob: -12.555903434753418
    9. '       ' → logprob: -12.930903434753418
    10. '<|end|>' → logprob: -13.055903434753418

Token 298: ' modulo' (ID: 112372)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.00523837935179472
    2. ' modulo' → logprob: -5.2552385330200195
    3. 'module' → logprob: -12.50523853302002
    4. '(mod' → logprob: -15.63023853302002
    5. 'Modulo' → logprob: -15.75523853302002
    6. '           ' → logprob: -16.005237579345703
    7. '	mod' → logprob: -16.130237579345703
    8. 'mo' → logprob: -16.380237579345703
    9. 'moder' → logprob: -16.505237579345703
    10. ' mod' → logprob: -16.630237579345703

Token 299: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.0005536287208087742
    2. 'prime' → logprob: -7.500553607940674
    3. 'Prime' → logprob: -14.500554084777832
    4. '```' → logprob: -17.000553131103516
    5. ' prime' → logprob: -17.625553131103516
    6. '998' → logprob: -17.750553131103516
    7. '
' → logprob: -17.875553131103516
    8. ')' → logprob: -17.875553131103516
    9. '\' → logprob: -17.875553131103516
    10. '353' → logprob: -18.125553131103516

Token 300: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.041153643280267715
    2. '))
' → logprob: -3.2911536693573
    3. '       ' → logprob: -5.791153430938721
    4. '           ' → logprob: -10.791153907775879
    5. ' ))' → logprob: -11.291153907775879
    6. ')' → logprob: -11.416153907775879
    7. '               ' → logprob: -12.791153907775879
    8. '   ' → logprob: -13.291153907775879
    9. '))

' → logprob: -13.541153907775879
    10. ')))' → logprob: -13.791153907775879

Token 301: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00043102685594931245
    2. 'else' → logprob: -8.375431060791016
    3. ')' → logprob: -8.875431060791016
    4. ' else' → logprob: -10.500431060791016
    5. '	' → logprob: -11.000431060791016
    6. '<|end|>' → logprob: -12.500431060791016
    7. '   ' → logprob: -13.125431060791016
    8. '           ' → logprob: -13.375431060791016
    9. '​' → logprob: -13.750431060791016
    10. '      ' → logprob: -13.875431060791016

Token 302: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2020106166601181
    2. 'else' (adapté à ' else') → logprob: -1.7020106315612793
    3. ' else' → logprob: -7.577010631561279
    4. '   ' → logprob: -9.702010154724121
    5. 'return' → logprob: -11.827010154724121
    6. '           ' → logprob: -11.952010154724121
    7. '	' → logprob: -12.452010154724121
    8. 'elif' → logprob: -13.327010154724121
    9. 'def' → logprob: -13.452010154724121
    10. '	else' → logprob: -13.577010154724121

Token 303: ':
' (ID: 734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.654887855052948
    2. ' (' → logprob: -1.2798879146575928
    3. '(pow' → logprob: -2.2798879146575928
    4. ' pow' → logprob: -3.0298879146575928
    5. '           ' → logprob: -3.6548879146575928
    6. ' return' → logprob: -4.654887676239014
    7. '            ' → logprob: -5.529887676239014
    8. 'pow' → logprob: -6.029887676239014
    9. '        ' → logprob: -6.404887676239014
    10. ',' → logprob: -6.529887676239014

Token 304: '           ' (ID: 352)
  Prédit: ' Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Mod' → logprob: -1.065081000328064
    2. '       ' → logprob: -1.315081000328064
    3. 'Modulo' → logprob: -1.315081000328064
    4. '           ' → logprob: -2.8150811195373535
    5. 'Mod' → logprob: -3.5650811195373535
    6. ' return' → logprob: -3.9400811195373535
    7. '        ' → logprob: -5.8150811195373535
    8. 'return' → logprob: -6.3150811195373535
    9. '   ' → logprob: -6.4400811195373535
    10. '(Mod' → logprob: -6.6900811195373535

Token 305: ' return' (ID: 622)
  Prédit: 'Modulo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Modulo' → logprob: -0.00015002528380136937
    2. 'Mod' → logprob: -9.125149726867676
    3. 'return' (adapté à ' return') → logprob: -10.125149726867676
    4. ' Mod' → logprob: -14.625149726867676
    5. ' return' → logprob: -15.250149726867676
    6. '(Mod' → logprob: -16.250150680541992
    7. ' modulo' → logprob: -16.500150680541992
    8. 'Modifier' → logprob: -17.000150680541992
    9. 'pow' → logprob: -17.500150680541992
    10. 'Module' → logprob: -17.500150680541992

Token 306: ' Mod' (ID: 7191)
  Prédit: 'Modulo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Modulo' → logprob: -0.023453475907444954
    2. ' Mod' → logprob: -3.7734534740448
    3. 'Mod' → logprob: -8.648453712463379
    4. ' Modul' → logprob: -11.523453712463379
    5. '(Mod' → logprob: -11.773453712463379
    6. ' modulo' → logprob: -11.898453712463379
    7. ' Modular' → logprob: -12.523453712463379
    8. ' Modi' → logprob: -13.648453712463379
    9. '_Mod' → logprob: -13.773453712463379
    10. 'Module' → logprob: -14.148453712463379

Token 307: 'ulo' (ID: 5953)
  Prédit: 'Integer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Integer' → logprob: -0.774930477142334
    2. 'Modulo' → logprob: -1.399930477142334
    3. 'ulo' → logprob: -1.649930477142334
    4. 'o' → logprob: -2.399930477142334
    5. 'od' → logprob: -5.774930477142334
    6. 'olo' → logprob: -6.024930477142334
    7. 'of' → logprob: -7.524930477142334
    8. 'odo' → logprob: -7.899930477142334
    9. 'oto' → logprob: -8.149930953979492
    10. 'ul' → logprob: -8.524930953979492

Token 308: 'Integer' (ID: 5437)
  Prédit: 'Integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Integer' → logprob: -1.4021237802808173e-05
    2. 'Modulo' → logprob: -11.250014305114746
    3. 'integer' → logprob: -14.500014305114746
    4. '_integer' → logprob: -15.500014305114746
    5. ' Integer' → logprob: -15.625014305114746
    6. 'int' → logprob: -16.62501335144043
    7. 'Inte' → logprob: -17.00001335144043
    8. '(Integer' → logprob: -18.75001335144043
    9. '_Integer' → logprob: -18.75001335144043
    10. 'Mod' → logprob: -18.75001335144043

Token 309: '(pow' (ID: 189160)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.47414031624794006
    2. '(pow' → logprob: -0.9741402864456177
    3. ' pow' → logprob: -9.724140167236328
    4. '(self' → logprob: -13.224140167236328
    5. 'self' → logprob: -13.474140167236328
    6. '(' → logprob: -16.349140167236328
    7. '(power' → logprob: -16.349140167236328
    8. '_pow' → logprob: -16.724140167236328
    9. '.pow' → logprob: -17.224140167236328
    10. 'Pow' → logprob: -17.349140167236328

Token 310: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00014239625306800008
    2. 'self' → logprob: -9.000142097473145
    3. '(' → logprob: -10.875142097473145
    4. 's' → logprob: -18.12514305114746
    5. '(
' → logprob: -18.50014305114746
    6. ',self' → logprob: -18.75014305114746
    7. ' self' → logprob: -18.87514305114746
    8. '=self' → logprob: -19.12514305114746
    9. '	self' → logprob: -19.37514305114746
    10. '$self' → logprob: -19.50014305114746

Token 311: '.value' (ID: 4683)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.02443000115454197
    2. 'self' → logprob: -4.024429798126221
    3. '.value' → logprob: -5.399429798126221
    4. '(' → logprob: -7.024429798126221
    5. 'value' → logprob: -7.774429798126221
    6. ')' → logprob: -8.774430274963379
    7. ',' → logprob: -9.149430274963379
    8. ',self' → logprob: -9.524430274963379
    9. ' self' → logprob: -10.524430274963379
    10. '(value' → logprob: -10.899430274963379

Token 312: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012620894238352776
    2. '(' → logprob: -4.38762092590332
    3. 'self' → logprob: -10.26262092590332
    4. 'operand' → logprob: -10.26262092590332
    5. ' ,' → logprob: -10.76262092590332
    6. ')' → logprob: -11.13762092590332
    7. '(self' → logprob: -13.51262092590332
    8. ' operand' → logprob: -13.76262092590332
    9. '),' → logprob: -14.13762092590332
    10. ',self' → logprob: -14.63762092590332

Token 313: ' operand' (ID: 63895)
  Prédit: 'operand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operand' → logprob: -0.0015023599844425917
    2. ' operand' → logprob: -6.501502513885498
    3. 'operator' → logprob: -17.251502990722656
    4. 'self' → logprob: -18.626502990722656
    5. '_operand' → logprob: -18.626502990722656
    6. '   ' → logprob: -18.751502990722656
    7. 'oper' → logprob: -18.751502990722656
    8. 'opcode' → logprob: -19.251502990722656
    9. 'Operand' → logprob: -19.376502990722656
    10. 'op' → logprob: -19.501502990722656

Token 314: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004375830467324704
    2. ' ,' → logprob: -7.7504377365112305
    3. ',module' → logprob: -12.87543773651123
    4. '))' → logprob: -13.62543773651123
    5. '   ' → logprob: -14.37543773651123
    6. ')' → logprob: -14.37543773651123
    7. '<|end|>' → logprob: -14.75043773651123
    8. 'mod' → logprob: -15.12543773651123
    9. '       ' → logprob: -15.62543773651123
    10. ',
' → logprob: -15.87543773651123

Token 315: ' modulo' (ID: 112372)
  Prédit: ' modulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' modulo' → logprob: -0.31327199935913086
    2. 'mod' → logprob: -1.3132719993591309
    3. 'module' → logprob: -12.063272476196289
    4. 'Modulo' → logprob: -13.438272476196289
    5. '(mod' → logprob: -14.313272476196289
    6. ' ' → logprob: -14.438272476196289
    7. ' modulus' → logprob: -14.563272476196289
    8. '	mod' → logprob: -14.813272476196289
    9. ' mod' → logprob: -15.563272476196289
    10. 'moder' → logprob: -15.688272476196289

Token 316: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -5.3358446166384965e-05
    2. 'prime' → logprob: -9.875053405761719
    3. '))' → logprob: -14.125053405761719
    4. ')' → logprob: -14.875053405761719
    5. ' prime' → logprob: -15.375053405761719
    6. 'Prime' → logprob: -15.750053405761719
    7. '```' → logprob: -15.875053405761719
    8. ')))' → logprob: -16.00005340576172
    9. ',' → logprob: -16.75005340576172
    10. ' ' → logprob: -17.25005340576172

Token 317: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.5822400857578032e-05
    2. '))' → logprob: -10.625025749206543
    3. ')
' → logprob: -14.000025749206543
    4. ' )' → logprob: -15.000025749206543
    5. ')}' → logprob: -16.12502670288086
    6. '       ' → logprob: -16.37502670288086
    7. ')return' → logprob: -18.00002670288086
    8. ')`' → logprob: -18.50002670288086
    9. ')#' → logprob: -19.00002670288086
    10. ')))' → logprob: -19.00002670288086

Token 318: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 319: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16547703742980957
    2. 'def' (adapté à ' def') → logprob: -2.1654770374298096
    3. ')' → logprob: -4.0404767990112305
    4. '_' → logprob: -4.9154767990112305
    5. '=' → logprob: -5.2904767990112305
    6. ' def' → logprob: -5.5404767990112305
    7. '#' → logprob: -6.2904767990112305
    8. '    
' → logprob: -7.6654767990112305
    9. '  ' → logprob: -8.54047679901123
    10. '+' → logprob: -8.66547679901123

Token 320: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -9.627176768844947e-05
    2. ' __' → logprob: -9.250096321105957
    3. 'def' → logprob: -16.00009536743164
    4. '___' → logprob: -17.87509536743164
    5. '.__' → logprob: -18.25009536743164
    6. 'to' → logprob: -18.50009536743164
    7. '____' → logprob: -19.25009536743164
    8. '   ' → logprob: -19.25009536743164
    9. '```' → logprob: -19.37509536743164
    10. 'inverse' → logprob: -20.62509536743164

Token 321: 'r' (ID: 81)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.0025019366294145584
    2. 'flo' → logprob: -6.377501964569092
    3. 'r' → logprob: -7.377501964569092
    4. 'lt' → logprob: -9.627501487731934
    5. 'int' → logprob: -9.877501487731934
    6. 'neg' → logprob: -10.752501487731934
    7. 'and' → logprob: -10.877501487731934
    8. 'rm' → logprob: -12.002501487731934
    9. 'pow' → logprob: -12.252501487731934
    10. 'i' → logprob: -13.002501487731934

Token 322: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.005539427977055311
    2. '_add' → logprob: -5.380539417266846
    3. 'pow' → logprob: -7.880539417266846
    4. '__' → logprob: -7.880539417266846
    5. 'mul' → logprob: -9.005539894104004
    6. '+' → logprob: -11.505539894104004
    7. 'shift' → logprob: -11.630539894104004
    8. '(add' → logprob: -11.755539894104004
    9. 'Add' → logprob: -13.130539894104004
    10. 'e' → logprob: -13.255539894104004

Token 323: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0024769625160843134
    2. '__' → logprob: -6.002477169036865
    3. '(self' → logprob: -13.877476692199707
    4. '(' → logprob: -16.127477645874023
    5. '__(
' → logprob: -16.627477645874023
    6. '_(' → logprob: -17.127477645874023
    7. '__((' → logprob: -18.127477645874023
    8. '__('' → logprob: -18.252477645874023
    9. 'self' → logprob: -18.252477645874023
    10. '__(*' → logprob: -18.502477645874023

Token 324: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001617035741219297
    2. ' self' → logprob: -8.875162124633789
    3. '(self' → logprob: -11.250162124633789
    4. 's' → logprob: -13.000162124633789
    5. '__(' → logprob: -13.000162124633789
    6. ',' → logprob: -13.250162124633789
    7. '   ' → logprob: -14.125162124633789
    8. '(' → logprob: -14.875162124633789
    9. '_self' → logprob: -15.500162124633789
    10. '__' → logprob: -15.625162124633789

Token 325: ',' (ID: 11)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.08034568279981613
    2. '(self' → logprob: -2.580345630645752
    3. '__' → logprob: -7.455345630645752
    4. ',' → logprob: -7.955345630645752
    5. 'self' → logprob: -8.33034610748291
    6. ')(' → logprob: -9.33034610748291
    7. '(' → logprob: -9.33034610748291
    8. ' (' → logprob: -9.58034610748291
    9. '__,' → logprob: -11.58034610748291
    10. '_(' → logprob: -11.83034610748291

Token 326: ' operand' (ID: 63895)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.24045854806900024
    2. 'operand' → logprob: -1.8654584884643555
    3. ' self' → logprob: -3.1154584884643555
    4. ' operand' → logprob: -4.2404584884643555
    5. ' ' → logprob: -9.490458488464355
    6. '_operand' → logprob: -10.615458488464355
    7. '__' → logprob: -11.490458488464355
    8. 'other' → logprob: -11.990458488464355
    9. 'operator' → logprob: -12.365458488464355
    10. ' other' → logprob: -12.740458488464355

Token 327: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.9415174722671509
    2. ',' → logprob: -1.5665174722671509
    3. ')' → logprob: -2.3165173530578613
    4. '):
' → logprob: -2.4415173530578613
    5. '):' → logprob: -2.4415173530578613
    6. 'self' → logprob: -2.9415173530578613
    7. ')(' → logprob: -2.9415173530578613
    8. '   ' → logprob: -4.441517353057861
    9. '       ' → logprob: -5.691517353057861
    10. '(' → logprob: -5.816517353057861

Token 328: '       ' (ID: 309)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.06677388399839401
    2. ' self' → logprob: -2.8167738914489746
    3. 'self' → logprob: -6.191773891448975
    4. '(' → logprob: -7.066773891448975
    5. ' (' → logprob: -7.191773891448975
    6. '       ' → logprob: -7.191773891448975
    7. '   ' → logprob: -8.191773414611816
    8. '	self' → logprob: -10.191773414611816
    9. ' ' → logprob: -10.566773414611816
    10. '    ' → logprob: -11.816773414611816

Token 329: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06989508122205734
    2. ' return' → logprob: -2.819895029067993
    3. '       ' → logprob: -5.069895267486572
    4. 'self' → logprob: -6.694895267486572
    5. '   ' → logprob: -8.194894790649414
    6. '    ' → logprob: -10.569894790649414
    7. ' self' → logprob: -10.694894790649414
    8. ':return' → logprob: -11.319894790649414
    9. 'def' → logprob: -11.569894790649414
    10. '{return' → logprob: -11.694894790649414

Token 330: ' Mod' (ID: 7191)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16023612022399902
    2. ' self' → logprob: -1.910236120223999
    3. '(self' → logprob: -11.660236358642578
    4. 'Mod' → logprob: -13.285236358642578
    5. 'Modulo' → logprob: -14.410236358642578
    6. '	self' → logprob: -15.035236358642578
    7. '__' → logprob: -15.660236358642578
    8. ' Mod' → logprob: -15.660236358642578
    9. '   ' → logprob: -15.660236358642578
    10. ' ' → logprob: -15.785236358642578

Token 331: 'ulo' (ID: 5953)
  Prédit: 'ulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulo' → logprob: -0.46333178877830505
    2. 'Modulo' → logprob: -1.3383318185806274
    3. 'od' → logprob: -2.713331699371338
    4. 'o' → logprob: -4.213331699371338
    5. '(self' → logprob: -4.713331699371338
    6. 'ule' → logprob: -5.713331699371338
    7. '__' → logprob: -5.963331699371338
    8. 'self' → logprob: -6.213331699371338
    9. 'uto' → logprob: -6.338331699371338
    10. 'u' → logprob: -6.338331699371338

Token 332: 'Integer' (ID: 5437)
  Prédit: 'Integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Integer' → logprob: -4.127333340875339e-06
    2. 'Modulo' → logprob: -12.750003814697266
    3. 'self' → logprob: -14.375003814697266
    4. '_integer' → logprob: -15.375003814697266
    5. '__' → logprob: -15.875003814697266
    6. 'integer' → logprob: -16.125003814697266
    7. ' Integer' → logprob: -16.750003814697266
    8. '_Integer' → logprob: -16.875003814697266
    9. 'add' → logprob: -17.375003814697266
    10. '(self' → logprob: -17.625003814697266

Token 333: '(' (ID: 7)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0009189624106511474
    2. '(' → logprob: -7.000918865203857
    3. 'self' → logprob: -11.875919342041016
    4. '(op' → logprob: -14.875919342041016
    5. '(operator' → logprob: -16.625919342041016
    6. '	self' → logprob: -17.625919342041016
    7. ' self' → logprob: -18.375919342041016
    8. '[self' → logprob: -18.375919342041016
    9. '((' → logprob: -19.125919342041016
    10. '(Self' → logprob: -19.250919342041016

Token 334: 'operand' (ID: 73439)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0017373013542965055
    2. 'operand' → logprob: -6.376737117767334
    3. '(self' → logprob: -10.626737594604492
    4. ' self' → logprob: -11.751737594604492
    5. '	self' → logprob: -13.251737594604492
    6. '(' → logprob: -14.376737594604492
    7. '   ' → logprob: -15.251737594604492
    8. 'operator' → logprob: -16.001737594604492
    9. 'op' → logprob: -16.751737594604492
    10. ' operand' → logprob: -17.126737594604492

Token 335: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.25222426652908325
    2. '+' → logprob: -1.5022242069244385
    3. ')' → logprob: -8.62722396850586
    4. '+self' → logprob: -9.12722396850586
    5. ')+' → logprob: -12.25222396850586
    6. ' )' → logprob: -13.62722396850586
    7. '+)' → logprob: -13.87722396850586
    8. ' ' → logprob: -15.87722396850586
    9. ' ' → logprob: -16.00222396850586
    10. 'self' → logprob: -17.25222396850586

Token 336: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10020667314529419
    2. ' self' → logprob: -2.3502066135406494
    3. '	self' → logprob: -17.72520637512207
    4. '(self' → logprob: -17.97520637512207
    5. ' ' → logprob: -18.10020637512207
    6. '_self' → logprob: -19.97520637512207
    7. '   ' → logprob: -20.47520637512207
    8. '  ' → logprob: -21.10020637512207
    9. ')' → logprob: -21.47520637512207
    10. '[self' → logprob: -21.60020637512207

Token 337: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.0067310030572116375
    2. '.' → logprob: -5.006731033325195
    3. ')' → logprob: -11.381731033325195
    4. ' .' → logprob: -13.256731033325195
    5. ').' → logprob: -13.631731033325195
    6. 'value' → logprob: -14.006731033325195
    7. '._' → logprob: -16.506731033325195
    8. '.user' → logprob: -16.756731033325195
    9. '.token' → logprob: -16.756731033325195
    10. '.values' → logprob: -17.131731033325195

Token 338: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.127333340875339e-06
    2. ' )' → logprob: -13.125003814697266
    3. ')
' → logprob: -13.250003814697266
    4. '   ' → logprob: -16.125003814697266
    5. '<|end|>' → logprob: -16.500003814697266
    6. ')

' → logprob: -16.750003814697266
    7. ')return' → logprob: -17.000003814697266
    8. ' ' → logprob: -19.000003814697266
    9. '())' → logprob: -19.250003814697266
    10. '       ' → logprob: -19.375003814697266

Token 339: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 340: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009256483055651188
    2. '<|end|>' → logprob: -5.509256362915039
    3. ' ' → logprob: -6.634256362915039
    4. ' def' → logprob: -6.884256362915039
    5. 'def' (adapté à ' def') → logprob: -6.884256362915039
    6. '  ' → logprob: -7.009256362915039
    7. ')' → logprob: -7.759256362915039
    8. '    ' → logprob: -8.509256362915039
    9. '    
' → logprob: -9.634256362915039
    10. '__' → logprob: -9.884256362915039

Token 341: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0002639582962729037
    2. ' __' → logprob: -8.250264167785645
    3. 'r' → logprob: -13.375264167785645
    4. 'def' → logprob: -14.500264167785645
    5. '_r' → logprob: -15.375264167785645
    6. '.__' → logprob: -15.500264167785645
    7. '   ' → logprob: -16.875263214111328
    8. ' ' → logprob: -16.875263214111328
    9. '___' → logprob: -17.125263214111328
    10. '```' → logprob: -17.875263214111328

Token 342: 'r' (ID: 81)
  Prédit: 'rm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rm' → logprob: -0.0297548845410347
    2. 'r' → logprob: -3.529754877090454
    3. 'mul' → logprob: -12.654754638671875
    4. 'sub' → logprob: -15.029754638671875
    5. 'rand' → logprob: -15.279754638671875
    6. 'repr' → logprob: -15.529754638671875
    7. 'i' → logprob: -16.279754638671875
    8. 'eq' → logprob: -16.279754638671875
    9. 'rf' → logprob: -16.654754638671875
    10. 'RM' → logprob: -17.279754638671875

Token 343: 'sub' (ID: 3834)
  Prédit: 'mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.10803532600402832
    2. 'sub' → logprob: -2.3580353260040283
    3. 'add' → logprob: -4.858035087585449
    4. '_mul' → logprob: -10.73303508758545
    5. '_sub' → logprob: -12.73303508758545
    6. 'r' → logprob: -12.98303508758545
    7. ' mul' → logprob: -13.35803508758545
    8. '_add' → logprob: -13.85803508758545
    9. 'Mul' → logprob: -14.10803508758545
    10. '__' → logprob: -14.35803508758545

Token 344: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.07895951718091965
    2. '__' → logprob: -2.5789594650268555
    3. '__((' → logprob: -10.203959465026855
    4. '__(
' → logprob: -10.828959465026855
    5. '__('' → logprob: -12.328959465026855
    6. '__(*' → logprob: -12.578959465026855
    7. '(' → logprob: -12.703959465026855
    8. '__[' → logprob: -14.203959465026855
    9. '__("' → logprob: -14.828959465026855
    10. '(self' → logprob: -15.078959465026855

Token 345: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00028982185176573694
    2. ' self' → logprob: -8.500289916992188
    3. '(self' → logprob: -9.375289916992188
    4. ')' → logprob: -14.750289916992188
    5. '__(' → logprob: -15.250289916992188
    6. '	self' → logprob: -15.875289916992188
    7. 's' → logprob: -16.000289916992188
    8. '=self' → logprob: -16.125289916992188
    9. '(' → logprob: -16.250289916992188
    10. ')(' → logprob: -16.750289916992188

Token 346: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07495091110467911
    2. '(self' → logprob: -2.949950933456421
    3. 'self' → logprob: -4.074950695037842
    4. '(' → logprob: -6.074950695037842
    5. '__(' → logprob: -8.324951171875
    6. ',self' → logprob: -9.074951171875
    7. ')' → logprob: -9.199951171875
    8. ')(' → logprob: -10.699951171875
    9. ' ,' → logprob: -10.949951171875
    10. ' (' → logprob: -10.949951171875

Token 347: ' operand' (ID: 63895)
  Prédit: 'operand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operand' → logprob: -0.28763535618782043
    2. 'self' → logprob: -1.537635326385498
    3. ' operand' → logprob: -3.412635326385498
    4. ' self' → logprob: -6.287635326385498
    5. 'Operand' → logprob: -8.662635803222656
    6. '_operand' → logprob: -10.162635803222656
    7. 'operator' → logprob: -10.662635803222656
    8. '(self' → logprob: -12.412635803222656
    9. '1' → logprob: -12.412635803222656
    10. ' ' → logprob: -12.662635803222656

Token 348: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.031376127153635025
    2. '):
' → logprob: -3.7813761234283447
    3. '):' → logprob: -5.156376361846924
    4. 'self' → logprob: -6.156376361846924
    5. ' ,' → logprob: -9.781375885009766
    6. ',self' → logprob: -9.906375885009766
    7. '   ' → logprob: -10.031375885009766
    8. ')' → logprob: -10.906375885009766
    9. '       ' → logprob: -11.156375885009766
    10. '(self' → logprob: -11.281375885009766

Token 349: '       ' (ID: 309)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6894804239273071
    2. '   ' → logprob: -1.3144804239273071
    3. 'return' → logprob: -1.8144804239273071
    4. '(Mod' → logprob: -3.6894803047180176
    5. '       ' → logprob: -3.9394803047180176
    6. 'Mod' → logprob: -5.314480304718018
    7. '(' → logprob: -5.439480304718018
    8. ' Mod' → logprob: -5.439480304718018
    9. '    ' → logprob: -5.814480304718018
    10. '=' → logprob: -6.939480304718018

Token 350: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.05195726081728935
    2. ' return' → logprob: -3.551957368850708
    3. 'Modulo' → logprob: -4.051957130432129
    4. 'Mod' → logprob: -5.426957130432129
    5. '       ' → logprob: -9.051957130432129
    6. '   ' → logprob: -10.176957130432129
    7. '(Mod' → logprob: -11.676957130432129
    8. 'Return' → logprob: -12.676957130432129
    9. ' Mod' → logprob: -12.801957130432129
    10. '	return' → logprob: -13.551957130432129

Token 351: ' Mod' (ID: 7191)
  Prédit: 'Modulo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Modulo' → logprob: -9.269565634895116e-05
    2. ' Mod' → logprob: -9.500092506408691
    3. 'Mod' → logprob: -11.000092506408691
    4. 'Module' → logprob: -15.000092506408691
    5. '(Mod' → logprob: -15.000092506408691
    6. '   ' → logprob: -15.375092506408691
    7. ' modulo' → logprob: -16.250093460083008
    8. ' Modul' → logprob: -16.875093460083008
    9. '_Mod' → logprob: -17.250093460083008
    10. ' ' → logprob: -17.875093460083008

Token 352: 'ulo' (ID: 5953)
  Prédit: 'ulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulo' → logprob: -0.24438156187534332
    2. 'Modulo' → logprob: -1.8693815469741821
    3. 'od' → logprob: -3.6193816661834717
    4. 'o' → logprob: -3.7443816661834717
    5. 'olo' → logprob: -4.494381427764893
    6. 'ul' → logprob: -8.36938190460205
    7. 'ol' → logprob: -8.36938190460205
    8. 'ule' → logprob: -9.24438190460205
    9. 'odule' → logprob: -9.74438190460205
    10. 'Integer' → logprob: -9.99438190460205

Token 353: 'Integer' (ID: 5437)
  Prédit: 'Integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Integer' → logprob: -3.4121114822482923e-06
    2. 'Modulo' → logprob: -12.625003814697266
    3. ' Integer' → logprob: -18.000003814697266
    4. '_integer' → logprob: -18.875003814697266
    5. 'Inte' → logprob: -19.375003814697266
    6. 'integer' → logprob: -20.250003814697266
    7. '(Integer' → logprob: -20.750003814697266
    8. '_Integer' → logprob: -21.125003814697266
    9. '(Mod' → logprob: -21.250003814697266
    10. 'Operator' → logprob: -21.625003814697266

Token 354: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03847954422235489
    2. '(self' → logprob: -3.5384795665740967
    3. 'operand' → logprob: -4.788479328155518
    4. 'self' → logprob: -8.038479804992676
    5. ' operand' → logprob: -10.413479804992676
    6. ' (' → logprob: -12.288479804992676
    7. '(operator' → logprob: -12.413479804992676
    8. '(op' → logprob: -13.288479804992676
    9. '_operand' → logprob: -13.413479804992676
    10. ' self' → logprob: -15.038479804992676

Token 355: 'operand' (ID: 73439)
  Prédit: 'operand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operand' → logprob: -7.52919222577475e-05
    2. ' operand' → logprob: -9.500075340270996
    3. 'operator' → logprob: -15.500075340270996
    4. '(' → logprob: -16.12507438659668
    5. '_operand' → logprob: -16.37507438659668
    6. '   ' → logprob: -18.25007438659668
    7. 'operative' → logprob: -19.62507438659668
    8. 'Operand' → logprob: -19.62507438659668
    9. 'oper' → logprob: -20.00007438659668
    10. 'opcode' → logprob: -20.00007438659668

Token 356: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.006717147771269083
    2. '-' → logprob: -5.006717205047607
    3. '-self' → logprob: -13.63171672821045
    4. ' ' → logprob: -14.88171672821045
    5. ' ' → logprob: -16.256717681884766
    6. ')' → logprob: -16.756717681884766
    7. '-value' → logprob: -17.006717681884766
    8. ' –' → logprob: -19.006717681884766
    9. 'self' → logprob: -19.006717681884766
    10. ' -
' → logprob: -19.506717681884766

Token 357: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.018150296062231064
    2. ' self' → logprob: -4.018150329589844
    3. '(self' → logprob: -15.768150329589844
    4. ' ' → logprob: -16.768150329589844
    5. '	self' → logprob: -17.768150329589844
    6. '[self' → logprob: -17.893150329589844
    7. '       ' → logprob: -19.268150329589844
    8. 'Self' → logprob: -19.518150329589844
    9. '   ' → logprob: -19.643150329589844
    10. '>' → logprob: -19.643150329589844

Token 358: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.0010106575209647417
    2. 'value' → logprob: -7.001010894775391
    3. '.' → logprob: -9.25101089477539
    4. 'self' → logprob: -13.00101089477539
    5. ' value' → logprob: -15.25101089477539
    6. ' .' → logprob: -15.50101089477539
    7. '_value' → logprob: -15.62601089477539
    8. '1' → logprob: -17.25101089477539
    9. '.self' → logprob: -17.50101089477539
    10. '.val' → logprob: -17.62601089477539

Token 359: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ')
' → logprob: -15.5
    3. ' )' → logprob: -18.375
    4. '   ' → logprob: -18.75
    5. '<|end|>' → logprob: -18.875
    6. ')

' → logprob: -19.125
    7. ')return' → logprob: -19.375
    8. ')#' → logprob: -20.75
    9. '）' → logprob: -20.875
    10. '),' → logprob: -21.0

Token 360: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013999987859278917
    2. 'def' → logprob: -6.626399993896484
    3. '<|end|>' → logprob: -10.251399993896484
    4. ' def' → logprob: -10.876399993896484
    5. ')' → logprob: -11.876399993896484
    6. '  ' → logprob: -12.001399993896484
    7. ' ' → logprob: -13.001399993896484
    8. '    
' → logprob: -13.626399993896484
    9. '__' → logprob: -14.251399993896484
    10. '    ' → logprob: -14.251399993896484

Token 361: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.591010332107544
    2. 'def' (adapté à ' def') → logprob: -0.841010332107544
    3. ' def' → logprob: -4.216010093688965
    4. '	def' → logprob: -9.716010093688965
    5. 'return' → logprob: -10.341010093688965
    6. '  ' → logprob: -10.341010093688965
    7. '__' → logprob: -10.591010093688965
    8. ' ' → logprob: -10.966010093688965
    9. ')' → logprob: -11.341010093688965
    10. ' return' → logprob: -12.466010093688965

Token 362: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00019364648323971778
    2. ' __' → logprob: -9.37519359588623
    3. 'r' → logprob: -9.50019359588623
    4. 'rm' → logprob: -11.12519359588623
    5. '_r' → logprob: -11.75019359588623
    6. '```' → logprob: -12.37519359588623
    7. '   ' → logprob: -12.62519359588623
    8. '.__' → logprob: -13.37519359588623
    9. '`' → logprob: -14.12519359588623
    10. 'def' → logprob: -14.75019359588623

Token 363: 'rm' (ID: 21373)
  Prédit: 'rm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rm' → logprob: -5.512236498361744e-07
    2. 'mul' → logprob: -14.750000953674316
    3. 'r' → logprob: -15.875000953674316
    4. 'repr' → logprob: -18.5
    5. '```' → logprob: -18.5
    6. '
' → logprob: -18.625
    7. 'RM' → logprob: -19.375
    8. '   ' → logprob: -19.5
    9. ' rm' → logprob: -20.125
    10. '``' → logprob: -20.375

Token 364: 'ul' (ID: 361)
  Prédit: 'ul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ul' → logprob: -1.9361264946837764e-07
    2. 'ult' → logprob: -16.0
    3. 'u' → logprob: -19.875
    4. ' ul' → logprob: -23.25
    5. '   ' → logprob: -24.125
    6. 'mul' → logprob: -24.375
    7. 'ull' → logprob: -24.625
    8. '

' → logprob: -24.75
    9. 'ул' → logprob: -24.75
    10. '<ul' → logprob: -24.875

Token 365: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.018199224025011063
    2. '__' → logprob: -4.018199443817139
    3. '__(
' → logprob: -10.14319896697998
    4. '__(*' → logprob: -12.64319896697998
    5. '__((' → logprob: -12.76819896697998
    6. '__('' → logprob: -13.26819896697998
    7. '(' → logprob: -13.51819896697998
    8. '__.__' → logprob: -15.14319896697998
    9. '(self' → logprob: -15.76819896697998
    10. '__("' → logprob: -15.89319896697998

Token 366: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.908022285439074e-05
    2. '(self' → logprob: -10.000059127807617
    3. ' self' → logprob: -11.250059127807617
    4. '   ' → logprob: -15.375059127807617
    5. ' ' → logprob: -16.000059127807617
    6. 's' → logprob: -16.250059127807617
    7. '	self' → logprob: -16.750059127807617
    8. 'def' → logprob: -16.875059127807617
    9. '(' → logprob: -17.250059127807617
    10. '<|end|>' → logprob: -17.750059127807617

Token 367: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.08868707716464996
    2. '__(' → logprob: -2.5886871814727783
    3. 'self' → logprob: -4.713686943054199
    4. '(' → logprob: -7.338686943054199
    5. '__' → logprob: -9.7136869430542
    6. ')(' → logprob: -10.5886869430542
    7. ',' → logprob: -11.3386869430542
    8. '_(' → logprob: -11.3386869430542
    9. ' (' → logprob: -12.3386869430542
    10. ',self' → logprob: -12.5886869430542

Token 368: ' operand' (ID: 63895)
  Prédit: 'operand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operand' → logprob: -0.09019429236650467
    2. 'self' → logprob: -2.5901942253112793
    3. ' operand' → logprob: -4.590194225311279
    4. ' self' → logprob: -6.840194225311279
    5. '   ' → logprob: -12.215194702148438
    6. '_operand' → logprob: -12.465194702148438
    7. 'operator' → logprob: -12.715194702148438
    8. 'Operand' → logprob: -12.840194702148438
    9. '       ' → logprob: -13.715194702148438
    10. ' ' → logprob: -13.840194702148438

Token 369: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12488272786140442
    2. '(self' → logprob: -2.499882698059082
    3. 'self' → logprob: -3.499882698059082
    4. '):
' → logprob: -6.124882698059082
    5. ')' → logprob: -6.624882698059082
    6. '       ' → logprob: -7.124882698059082
    7. '   ' → logprob: -8.499882698059082
    8. ')(' → logprob: -8.624882698059082
    9. ',self' → logprob: -9.124882698059082
    10. ' self' → logprob: -9.249882698059082

Token 370: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7702465057373047
    2. ' return' → logprob: -1.0202465057373047
    3. '       ' → logprob: -1.7702465057373047
    4. '(self' → logprob: -5.770246505737305
    5. '   ' → logprob: -6.145246505737305
    6. '(Mod' → logprob: -7.645246505737305
    7. '(' → logprob: -8.770246505737305
    8. ' (' → logprob: -9.270246505737305
    9. 'self' → logprob: -9.895246505737305
    10. '	return' → logprob: -10.145246505737305

Token 371: ' return' (ID: 622)
  Prédit: 'Modulo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Modulo' → logprob: -0.10523278266191483
    2. 'return' (adapté à ' return') → logprob: -2.3552327156066895
    3. ' return' → logprob: -5.3552327156066895
    4. 'Mod' → logprob: -8.355233192443848
    5. '(Mod' → logprob: -9.980233192443848
    6. ' Mod' → logprob: -12.355233192443848
    7. '   ' → logprob: -12.980233192443848
    8. '       ' → logprob: -14.855233192443848
    9. '```' → logprob: -14.855233192443848
    10. 'Module' → logprob: -14.980233192443848

Token 372: ' Mod' (ID: 7191)
  Prédit: 'Modulo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Modulo' → logprob: -7.226628895296017e-06
    2. ' Mod' → logprob: -12.000007629394531
    3. 'Mod' → logprob: -14.875007629394531
    4. '   ' → logprob: -15.000007629394531
    5. '(Mod' → logprob: -15.500007629394531
    6. ' modulo' → logprob: -16.00000762939453
    7. 'self' → logprob: -18.00000762939453
    8. 'Module' → logprob: -18.12500762939453
    9. ' ' → logprob: -18.37500762939453
    10. '       ' → logprob: -18.50000762939453

Token 373: 'ulo' (ID: 5953)
  Prédit: 'ulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulo' → logprob: -0.08427224308252335
    2. 'Modulo' → logprob: -2.9592721462249756
    3. 'ul' → logprob: -3.7092721462249756
    4. 'ulto' → logprob: -5.959272384643555
    5. 'od' → logprob: -7.084272384643555
    6. 'o' → logprob: -7.459272384643555
    7. 'u' → logprob: -8.959272384643555
    8. 'ou' → logprob: -9.084272384643555
    9. 'olo' → logprob: -10.459272384643555
    10. 'ule' → logprob: -10.459272384643555

Token 374: 'Integer' (ID: 5437)
  Prédit: 'Integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Integer' → logprob: -0.004078997299075127
    2. 'Modulo' → logprob: -5.5040788650512695
    3. 'Multip' → logprob: -15.50407886505127
    4. 'Inte' → logprob: -16.629079818725586
    5. 'Mod' → logprob: -17.254079818725586
    6. 'integer' → logprob: -17.629079818725586
    7. 'Token' → logprob: -17.879079818725586
    8. ' Integer' → logprob: -18.004079818725586
    9. '(Mod' → logprob: -18.129079818725586
    10. 'Operator' → logprob: -18.129079818725586

Token 375: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01815614476799965
    2. '(self' → logprob: -4.018156051635742
    3. 'self' → logprob: -12.393156051635742
    4. '(op' → logprob: -13.268156051635742
    5. '(operator' → logprob: -15.643156051635742
    6. ' (' → logprob: -15.893156051635742
    7. 'operand' → logprob: -16.143156051635742
    8. '((' → logprob: -18.768156051635742
    9. ' operand' → logprob: -19.143156051635742
    10. '(
' → logprob: -19.518156051635742

Token 376: 'operand' (ID: 73439)
  Prédit: 'operand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operand' → logprob: -0.0015303362160921097
    2. 'self' → logprob: -6.501530170440674
    3. ' operand' → logprob: -10.501530647277832
    4. '(' → logprob: -15.376530647277832
    5. ' self' → logprob: -15.626530647277832
    6. '(self' → logprob: -16.751529693603516
    7. '_operand' → logprob: -17.126529693603516
    8. 'opcode' → logprob: -17.376529693603516
    9. 'operator' → logprob: -18.001529693603516
    10. 'Operand' → logprob: -18.251529693603516

Token 377: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.313263863325119
    2. '*' → logprob: -1.3132638931274414
    3. '*self' → logprob: -13.313263893127441
    4. ' ' → logprob: -14.563263893127441
    5. ' ' → logprob: -17.688262939453125
    6. ')' → logprob: -19.313262939453125
    7. ' *
' → logprob: -20.188262939453125
    8. '*object' → logprob: -20.313262939453125
    9. '*
' → logprob: -21.188262939453125
    10. '**' → logprob: -21.313262939453125

Token 378: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03804252669215202
    2. ' self' → logprob: -3.2880425453186035
    3. '(self' → logprob: -14.788042068481445
    4. ' ' → logprob: -15.663042068481445
    5. '	self' → logprob: -15.663042068481445
    6. '[self' → logprob: -15.788042068481445
    7. '       ' → logprob: -16.413042068481445
    8. '   ' → logprob: -17.288042068481445
    9. '.self' → logprob: -17.913042068481445
    10. '=self' → logprob: -18.163042068481445

Token 379: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.048588622361421585
    2. 'value' → logprob: -3.048588514328003
    3. ' value' → logprob: -14.548588752746582
    4. 'alue' → logprob: -15.173588752746582
    5. '.' → logprob: -15.298588752746582
    6. 'self' → logprob: -15.548588752746582
    7. ' .' → logprob: -16.673587799072266
    8. '_value' → logprob: -18.548587799072266
    9. ''value' → logprob: -19.173587799072266
    10. '$value' → logprob: -19.423587799072266

Token 380: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ')
' → logprob: -14.500000953674316
    3. '   ' → logprob: -15.875000953674316
    4. ' )' → logprob: -16.75
    5. '<|end|>' → logprob: -17.25
    6. ')

' → logprob: -18.5
    7. ')return' → logprob: -19.125
    8. '       ' → logprob: -19.375
    9. '),' → logprob: -20.0
    10. ')}' → logprob: -20.125

Token 381: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3578609526157379
    2. '   ' → logprob: -1.2328609228134155
    3. ' def' → logprob: -5.107861042022705
    4. ')' → logprob: -5.982861042022705
    5. ' ' → logprob: -8.482860565185547
    6. '```' → logprob: -8.982860565185547
    7. '	def' → logprob: -9.107860565185547
    8. '#' → logprob: -9.357860565185547
    9. '<|end|>' → logprob: -9.857860565185547
    10. ']' → logprob: -9.982860565185547

Token 382: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.32154974341392517
    2. '   ' → logprob: -1.3215497732162476
    3. ' def' → logprob: -4.821549892425537
    4. ')' → logprob: -10.321549415588379
    5. '__' → logprob: -10.571549415588379
    6. ' ' → logprob: -10.821549415588379
    7. '_' → logprob: -10.821549415588379
    8. '    
' → logprob: -11.071549415588379
    9. '	def' → logprob: -11.321549415588379
    10. '#' → logprob: -11.321549415588379

Token 383: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0005533903022296727
    2. ' __' → logprob: -7.500553607940674
    3. '.__' → logprob: -16.125553131103516
    4. '   ' → logprob: -16.750553131103516
    5. 'pow' → logprob: -17.125553131103516
    6. '```' → logprob: -17.250553131103516
    7. ' ' → logprob: -17.750553131103516
    8. 'def' → logprob: -17.750553131103516
    9. '**' → logprob: -18.125553131103516
    10. '/__' → logprob: -18.750553131103516

Token 384: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.8599469661712646
    2. 'flo' → logprob: -1.3599469661712646
    3. 'rf' → logprob: -1.8599469661712646
    4. 'pow' → logprob: -2.1099469661712646
    5. 'eq' → logprob: -3.6099469661712646
    6. 'neg' → logprob: -4.609947204589844
    7. 'it' → logprob: -5.859947204589844
    8. 'mod' → logprob: -6.734947204589844
    9. 'tr' → logprob: -7.359947204589844
    10. 'div' → logprob: -7.484947204589844

Token 385: 'tr' (ID: 371)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.4743444323539734
    2. 'tr' → logprob: -0.9743444323539734
    3. 'div' → logprob: -8.349344253540039
    4. 'add' → logprob: -10.974344253540039
    5. '```' → logprob: -12.474344253540039
    6. 'flo' → logprob: -12.724344253540039
    7. 'r' → logprob: -13.099344253540039
    8. 'power' → logprob: -14.474344253540039
    9. 'mul' → logprob: -14.474344253540039
    10. ' tr' → logprob: -14.474344253540039

Token 386: 'ued' (ID: 5829)
  Prédit: 'ued'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ued' → logprob: -0.00016587569552939385
    2. 'ue' → logprob: -9.375165939331055
    3. 'u' → logprob: -9.875165939331055
    4. 'ud' → logprob: -10.500165939331055
    5. 'ed' → logprob: -13.625165939331055
    6. '__' → logprob: -14.500165939331055
    7. '   ' → logprob: -16.125165939331055
    8. '
' → logprob: -16.750165939331055
    9. 'ues' → logprob: -17.250165939331055
    10. '```' → logprob: -17.750165939331055

Token 387: 'iv' (ID: 349)
  Prédit: 'iv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -0.005247156601399183
    2. '__' → logprob: -5.255247116088867
    3. 'div' → logprob: -12.380247116088867
    4. '/' → logprob: -12.755247116088867
    5. 'ef' → logprob: -13.130247116088867
    6. 'v' → logprob: -13.380247116088867
    7. '/__' → logprob: -14.130247116088867
    8. 'vi' → logprob: -14.755247116088867
    9. 'e' → logprob: -15.005247116088867
    10. ' __' → logprob: -15.380247116088867

Token 388: '__(' (ID: 8241)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.25198960304260254
    2. '__(' → logprob: -1.5019896030426025
    3. '__[' → logprob: -10.626989364624023
    4. '__(
' → logprob: -11.251989364624023
    5. '__(*' → logprob: -11.876989364624023
    6. '__((' → logprob: -12.126989364624023
    7. '__)' → logprob: -12.251989364624023
    8. '(self' → logprob: -13.251989364624023
    9. '__('' → logprob: -13.751989364624023
    10. '___' → logprob: -14.001989364624023

Token 389: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.318681188422488e-05
    2. ' self' → logprob: -11.25001335144043
    3. '(self' → logprob: -16.12501335144043
    4. 's' → logprob: -17.50001335144043
    5. '   ' → logprob: -17.62501335144043
    6. ')' → logprob: -17.75001335144043
    7. ' ' → logprob: -18.25001335144043
    8. '       ' → logprob: -19.62501335144043
    9. '	self' → logprob: -19.62501335144043
    10. 'sel' → logprob: -21.00001335144043

Token 390: ',' (ID: 11)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.5120111703872681
    2. '(self' → logprob: -1.512011170387268
    3. 'self' → logprob: -1.762011170387268
    4. '(' → logprob: -5.3870110511779785
    5. '__' → logprob: -5.6370110511779785
    6. ')(' → logprob: -8.762011528015137
    7. '_(' → logprob: -8.887011528015137
    8. ' self' → logprob: -10.387011528015137
    9. ')' → logprob: -10.512011528015137
    10. '__(
' → logprob: -10.762011528015137

Token 391: ' operand' (ID: 63895)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0018858035327866673
    2. ' self' → logprob: -6.501885890960693
    3. 'operand' → logprob: -7.876885890960693
    4. '(self' → logprob: -13.001885414123535
    5. ' operand' → logprob: -13.876885414123535
    6. '	self' → logprob: -15.126885414123535
    7. 'Modulo' → logprob: -15.876885414123535
    8. 'Operand' → logprob: -16.00188636779785
    9. 'operator' → logprob: -16.12688636779785
    10. 'def' → logprob: -16.87688636779785

Token 392: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.3648664653301239
    2. 'self' → logprob: -1.2398664951324463
    3. '   ' → logprob: -5.614866256713867
    4. '):
' → logprob: -5.614866256713867
    5. '(' → logprob: -5.989866256713867
    6. ')(' → logprob: -6.489866256713867
    7. '       ' → logprob: -6.489866256713867
    8. ' self' → logprob: -6.614866256713867
    9. ' (' → logprob: -6.739866256713867
    10. ',' → logprob: -7.614866256713867

Token 393: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.329611212015152
    2. '(Mod' → logprob: -2.079611301422119
    3. '(' → logprob: -2.829611301422119
    4. 'Modulo' → logprob: -3.704611301422119
    5. 'Mod' → logprob: -3.954611301422119
    6. '   ' → logprob: -4.079611301422119
    7. ' return' → logprob: -4.079611301422119
    8. '       ' → logprob: -4.579611301422119
    9. '(self' → logprob: -5.704611301422119
    10. 'self' → logprob: -6.204611301422119

Token 394: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5884047746658325
    2. 'Modulo' → logprob: -0.8384047746658325
    3. ' return' → logprob: -4.463404655456543
    4. 'Mod' → logprob: -7.838404655456543
    5. '       ' → logprob: -8.088404655456543
    6. '(Mod' → logprob: -9.338404655456543
    7. '   ' → logprob: -9.838404655456543
    8. 'Module' → logprob: -12.838404655456543
    9. 'Return' → logprob: -13.088404655456543
    10. '	return' → logprob: -13.088404655456543

Token 395: ' Mod' (ID: 7191)
  Prédit: 'Modulo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Modulo' → logprob: -7.896309739408025e-07
    2. 'self' → logprob: -14.875000953674316
    3. '   ' → logprob: -16.0
    4. ' Mod' → logprob: -16.125
    5. '(Mod' → logprob: -16.25
    6. 'Mod' → logprob: -17.625
    7. ' modulo' → logprob: -19.0
    8. 'Modo' → logprob: -19.125
    9. '(' → logprob: -19.625
    10. 'mod' → logprob: -19.75

Token 396: 'ulo' (ID: 5953)
  Prédit: 'ulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulo' → logprob: -0.16186316311359406
    2. 'Modulo' → logprob: -1.9118632078170776
    3. 'olo' → logprob: -7.286863327026367
    4. 'uto' → logprob: -8.286863327026367
    5. 'oto' → logprob: -8.661863327026367
    6. 'o' → logprob: -8.661863327026367
    7. 'u' → logprob: -9.411863327026367
    8. 'ul' → logprob: -9.661863327026367
    9. 'ule' → logprob: -9.786863327026367
    10. 'ulto' → logprob: -10.286863327026367

Token 397: 'Integer' (ID: 5437)
  Prédit: 'Integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Integer' → logprob: 0.0
    2. '_integer' → logprob: -18.25
    3. 'Inte' → logprob: -19.75
    4. 'integer' → logprob: -20.25
    5. 'Modulo' → logprob: -20.375
    6. '_Integer' → logprob: -20.375
    7. '__' → logprob: -20.375
    8. ' Integer' → logprob: -20.625
    9. '(Integer' → logprob: -21.5
    10. '(' → logprob: -22.75

Token 398: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1278846114873886
    2. '(pow' → logprob: -2.12788462638855
    3. 'pow' → logprob: -7.627884387969971
    4. '(self' → logprob: -7.877884387969971
    5. '(Mod' → logprob: -10.627884864807129
    6. '((' → logprob: -10.877884864807129
    7. 'operand' → logprob: -11.002884864807129
    8. '(op' → logprob: -11.002884864807129
    9. '(int' → logprob: -12.377884864807129
    10. '(
' → logprob: -12.877884864807129

Token 399: 'operand' (ID: 73439)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.023442409932613373
    2. 'operand' → logprob: -3.773442506790161
    3. '(pow' → logprob: -9.148442268371582
    4. '(' → logprob: -10.273442268371582
    5. ' pow' → logprob: -10.398442268371582
    6. 'self' → logprob: -11.398442268371582
    7. 'Operand' → logprob: -13.023442268371582
    8. ' operand' → logprob: -13.148442268371582
    9. 'int' → logprob: -13.398442268371582
    10. 'op' → logprob: -13.398442268371582

Token 400: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.11288119107484818
    2. ' *' → logprob: -2.2378811836242676
    3. ')' → logprob: -10.237881660461426
    4. '*self' → logprob: -11.987881660461426
    5. '//' → logprob: -12.362881660461426
    6. ' ' → logprob: -12.487881660461426
    7. '/' → logprob: -12.862881660461426
    8. '.value' → logprob: -13.112881660461426
    9. ' //' → logprob: -13.237881660461426
    10. '   ' → logprob: -13.987881660461426

Token 401: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -9.615255839889869e-05
    2. ' pow' → logprob: -9.250096321105957
    3. '(pow' → logprob: -17.12509536743164
    4. '.pow' → logprob: -20.00009536743164
    5. 'power' → logprob: -20.37509536743164
    6. '
' → logprob: -20.50009536743164
    7. '_pow' → logprob: -20.87509536743164
    8. '   ' → logprob: -21.12509536743164
    9. 'pw' → logprob: -22.00009536743164
    10. 'pot' → logprob: -22.25009536743164

Token 402: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -8.2994620242971e-06
    2. '(' → logprob: -11.750008583068848
    3. 'self' → logprob: -15.500008583068848
    4. '(
' → logprob: -15.875008583068848
    5. '((' → logprob: -19.87500762939453
    6. '(mod' → logprob: -20.62500762939453
    7. 'mod' → logprob: -21.25000762939453
    8. ' (' → logprob: -21.50000762939453
    9. '(this' → logprob: -22.62500762939453
    10. '=self' → logprob: -22.87500762939453

Token 403: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.0004960790392942727
    2. 'value' → logprob: -7.625495910644531
    3. '(self' → logprob: -13.125495910644531
    4. 'self' → logprob: -13.375495910644531
    5. '(' → logprob: -13.625495910644531
    6. '.' → logprob: -13.750495910644531
    7. '(value' → logprob: -13.875495910644531
    8. ' .' → logprob: -14.875495910644531
    9. '(.' → logprob: -15.375495910644531
    10. ' value' → logprob: -15.875495910644531

Token 404: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5213274309644476e-05
    2. 'mod' → logprob: -11.375015258789062
    3. ' ,' → logprob: -13.625015258789062
    4. ',
' → logprob: -13.750015258789062
    5. '(mod' → logprob: -14.000015258789062
    6. ',module' → logprob: -14.625015258789062
    7. ' mod' → logprob: -17.250015258789062
    8. ',-' → logprob: -17.875015258789062
    9. '_mod' → logprob: -18.375015258789062
    10. '-' → logprob: -18.375015258789062

Token 405: ' modulo' (ID: 112372)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.00026217024424113333
    2. ' modulo' → logprob: -8.250262260437012
    3. 'module' → logprob: -15.125262260437012
    4. '998' → logprob: -15.250262260437012
    5. '(mod' → logprob: -16.125261306762695
    6. ' mod' → logprob: -16.250261306762695
    7. '	mod' → logprob: -16.500261306762695
    8. 'modal' → logprob: -17.375261306762695
    9. 'mo' → logprob: -17.875261306762695
    10. 'moder' → logprob: -18.125261306762695

Token 406: '_prime' (ID: 98616)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.07916241884231567
    2. '_prime' → logprob: -2.579162359237671
    3. '-' → logprob: -8.45416259765625
    4. 'Prime' → logprob: -9.82916259765625
    5. ' prime' → logprob: -12.32916259765625
    6. '```' → logprob: -15.32916259765625
    7. 'prim' → logprob: -15.45416259765625
    8. '-pr' → logprob: -15.45416259765625
    9. ' -' → logprob: -15.45416259765625
    10. '
' → logprob: -15.82916259765625

Token 407: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.005233763717114925
    2. ' -' → logprob: -5.2552337646484375
    3. ' ' → logprob: -17.005233764648438
    4. '   ' → logprob: -19.755233764648438
    5. '  ' → logprob: -21.005233764648438
    6. '−' → logprob: -21.130233764648438
    7. '```' → logprob: -21.130233764648438
    8. ' ' → logprob: -21.255233764648438
    9. '-
' → logprob: -21.505233764648438
    10. '{-' → logprob: -22.380233764648438

Token 408: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.908022285439074e-05
    2. ' ' → logprob: -9.750059127807617
    3. '-' → logprob: -14.750059127807617
    4. '
' → logprob: -16.875059127807617
    5. '```' → logprob: -17.125059127807617
    6. '۲' → logprob: -17.187559127807617
    7. ' -' → logprob: -17.312559127807617
    8. '  ' → logprob: -17.875059127807617
    9. '２' → logprob: -18.250059127807617
    10. '3' → logprob: -18.562559127807617

Token 409: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '-' → logprob: -16.625
    4. '
' → logprob: -17.0
    5. '```' → logprob: -18.375
    6. '3' → logprob: -18.5
    7. '۲' → logprob: -18.9375
    8. '
' → logprob: -19.125
    9. '' → logprob: -19.1875
    10. '２' → logprob: -19.6875

Token 410: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.630610641877865e-06
    2. ' ,' → logprob: -12.125006675720215
    3. ')' → logprob: -14.375006675720215
    4. 'mod' → logprob: -15.125006675720215
    5. ',module' → logprob: -16.2500057220459
    6. ',
' → logprob: -16.3750057220459
    7. '),' → logprob: -16.3750057220459
    8. '```' → logprob: -17.2500057220459
    9. '   ' → logprob: -17.8750057220459
    10. ' ' → logprob: -18.1250057220459

Token 411: ' modulo' (ID: 112372)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.004081128165125847
    2. ' modulo' → logprob: -5.5040812492370605
    3. 'module' → logprob: -14.254080772399902
    4. '(mod' → logprob: -14.629080772399902
    5. '	mod' → logprob: -14.629080772399902
    6. ')' → logprob: -15.379080772399902
    7. '   ' → logprob: -15.504080772399902
    8. '           ' → logprob: -15.879080772399902
    9. 'Modulo' → logprob: -15.879080772399902
    10. 'moder' → logprob: -16.25408172607422

Token 412: '_prime' (ID: 98616)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.10128309577703476
    2. '_prime' → logprob: -2.851283073425293
    3. '353' → logprob: -3.351283073425293
    4. 'Prime' → logprob: -6.601283073425293
    5. '998' → logprob: -6.851283073425293
    6. ')' → logprob: -7.601283073425293
    7. ' prime' → logprob: -8.601283073425293
    8. '-' → logprob: -8.976283073425293
    9. 'mod' → logprob: -9.726283073425293
    10. 'p' → logprob: -9.976283073425293

Token 413: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.31328916549682617
    2. ')' → logprob: -1.3132891654968262
    3. '))
' → logprob: -11.313289642333984
    4. ')
' → logprob: -11.438289642333984
    5. '       ' → logprob: -13.438289642333984
    6. ')))' → logprob: -13.438289642333984
    7. '   ' → logprob: -13.688289642333984
    8. '))

' → logprob: -16.063289642333984
    9. ' ))' → logprob: -16.563289642333984
    10. ' )' → logprob: -16.688289642333984

Token 414: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0644211545586586
    2. ')' → logprob: -2.9394211769104004
    3. ':' → logprob: -5.5644211769104
    4. ' def' → logprob: -6.0644211769104
    5. '   ' → logprob: -6.4394211769104
    6. '```' → logprob: -7.9394211769104
    7. '):' → logprob: -8.189420700073242
    8. ':def' → logprob: -8.439420700073242
    9. ')
' → logprob: -8.564420700073242
    10. '_' → logprob: -9.064420700073242

Token 415: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0027394930366426706
    2. ')' → logprob: -6.502739429473877
    3. '   ' → logprob: -7.002739429473877
    4. ' def' → logprob: -8.502739906311035
    5. '):' → logprob: -9.627739906311035
    6. ':' → logprob: -11.127739906311035
    7. '#' → logprob: -11.252739906311035
    8. '@' → logprob: -11.627739906311035
    9. ']' → logprob: -12.127739906311035
    10. '))' → logprob: -13.252739906311035

Token 416: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -5.049755782238208e-05
    2. ' __' → logprob: -10.87505054473877
    3. 'inverse' → logprob: -11.75005054473877
    4. 'invert' → logprob: -11.87505054473877
    5. 'to' → logprob: -12.12505054473877
    6. '_mod' → logprob: -13.37505054473877
    7. 'copy' → logprob: -13.50005054473877
    8. '_inv' → logprob: -13.62505054473877
    9. 'pow' → logprob: -13.75005054473877
    10. 'mod' → logprob: -13.87505054473877

Token 417: 'r' (ID: 81)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.021671753376722336
    2. 'neg' → logprob: -4.271671772003174
    3. 'flo' → logprob: -5.021671772003174
    4. 'pow' → logprob: -8.396671295166016
    5. 'int' → logprob: -8.646671295166016
    6. 'it' → logprob: -8.896671295166016
    7. 'i' → logprob: -9.146671295166016
    8. 'lt' → logprob: -9.271671295166016
    9. 'if' → logprob: -9.896671295166016
    10. 'r' → logprob: -10.396671295166016

Token 418: 'pow' (ID: 30304)
  Prédit: 'pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.000712670327629894
    2. 'add' → logprob: -7.250712871551514
    3. 'xor' → logprob: -13.625712394714355
    4. '**' → logprob: -15.000712394714355
    5. 'Pow' → logprob: -15.000712394714355
    6. '_pow' → logprob: -15.250712394714355
    7. 'eq' → logprob: -15.750712394714355
    8. 'mul' → logprob: -16.125713348388672
    9. 'power' → logprob: -16.125713348388672
    10. 'div' → logprob: -16.250713348388672

Token 419: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.014191711321473122
    2. '__' → logprob: -4.264191627502441
    3. '__(
' → logprob: -11.264191627502441
    4. '__((' → logprob: -11.639191627502441
    5. '__('' → logprob: -12.639191627502441
    6. '__(*' → logprob: -13.014191627502441
    7. '(' → logprob: -14.639191627502441
    8. '__("' → logprob: -15.139191627502441
    9. '___' → logprob: -15.764191627502441
    10. '__.__' → logprob: -16.514192581176758

Token 420: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -8.061054359131958e-06
    2. '(self' → logprob: -12.375007629394531
    3. ' self' → logprob: -12.500007629394531
    4. ')' → logprob: -18.00000762939453
    5. '       ' → logprob: -18.25000762939453
    6. '   ' → logprob: -18.37500762939453
    7. 's' → logprob: -18.87500762939453
    8. '(' → logprob: -19.00000762939453
    9. 'def' → logprob: -19.50000762939453
    10. ' ' → logprob: -20.00000762939453

Token 421: ',' (ID: 11)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.10493326187133789
    2. '(' → logprob: -2.604933261871338
    3. '__' → logprob: -4.104933261871338
    4. '(self' → logprob: -4.729933261871338
    5. 'self' → logprob: -8.72993278503418
    6. '__(
' → logprob: -8.72993278503418
    7. '_(' → logprob: -11.10493278503418
    8. '_' → logprob: -11.22993278503418
    9. '__((' → logprob: -11.47993278503418
    10. '__(*' → logprob: -11.72993278503418

Token 422: ' operand' (ID: 63895)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6534677743911743
    2. 'operand' → logprob: -0.9034677743911743
    3. ' operand' → logprob: -3.0284676551818848
    4. ' self' → logprob: -3.6534676551818848
    5. 'Operand' → logprob: -9.028468132019043
    6. 'Modulo' → logprob: -9.278468132019043
    7. 'Mod' → logprob: -10.653468132019043
    8. ' Mod' → logprob: -11.153468132019043
    9. '_operand' → logprob: -11.153468132019043
    10. '(self' → logprob: -11.528468132019043

Token 423: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6885970234870911
    2. '(' → logprob: -1.0635969638824463
    3. '(self' → logprob: -2.4385969638824463
    4. '):' → logprob: -2.9385969638824463
    5. 'self' → logprob: -5.188597202301025
    6. '):
' → logprob: -5.938597202301025
    7. ' (' → logprob: -6.188597202301025
    8. ')' → logprob: -7.188597202301025
    9. '   ' → logprob: -7.563597202301025
    10. '       ' → logprob: -8.438596725463867

Token 424: '       ' (ID: 309)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.29081621766090393
    2. '(self' → logprob: -1.4158161878585815
    3. '       ' → logprob: -5.040816307067871
    4. '   ' → logprob: -7.040816307067871
    5. '(
' → logprob: -7.165816307067871
    6. 'self' → logprob: -7.415816307067871
    7. ' (' → logprob: -7.915816307067871
    8. '(Mod' → logprob: -8.040816307067871
    9. 'return' → logprob: -9.165816307067871
    10. ' self' → logprob: -10.540816307067871

Token 425: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1256251484155655
    2. ' return' → logprob: -2.5006251335144043
    3. 'Mod' → logprob: -3.8756251335144043
    4. 'Modulo' → logprob: -4.375625133514404
    5. '(Mod' → logprob: -6.125625133514404
    6. ' Mod' → logprob: -7.750625133514404
    7. '       ' → logprob: -10.250625610351562
    8. ')' → logprob: -11.500625610351562
    9. 'def' → logprob: -11.750625610351562
    10. '   ' → logprob: -12.250625610351562

Token 426: ' Mod' (ID: 7191)
  Prédit: 'Modulo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Modulo' → logprob: -1.652451464906335e-05
    2. ' Mod' → logprob: -11.375016212463379
    3. 'Mod' → logprob: -13.000016212463379
    4. 'self' → logprob: -13.125016212463379
    5. '(Mod' → logprob: -15.000016212463379
    6. 'Modo' → logprob: -15.750016212463379
    7. '   ' → logprob: -15.875016212463379
    8. ' modulo' → logprob: -16.750017166137695
    9. 'Module' → logprob: -17.750017166137695
    10. 'pow' → logprob: -17.750017166137695

Token 427: 'ulo' (ID: 5953)
  Prédit: 'ulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulo' → logprob: -0.161695659160614
    2. 'Modulo' → logprob: -1.9116957187652588
    3. 'olo' → logprob: -7.41169548034668
    4. 'o' → logprob: -7.78669548034668
    5. 'od' → logprob: -8.78669548034668
    6. 'ulto' → logprob: -9.78669548034668
    7. 'ul' → logprob: -9.91169548034668
    8. 'oto' → logprob: -10.03669548034668
    9. 'ule' → logprob: -10.41169548034668
    10. 'u' → logprob: -10.91169548034668

Token 428: 'Integer' (ID: 5437)
  Prédit: 'Integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Integer' → logprob: -5.512236498361744e-07
    2. ' Integer' → logprob: -16.0
    3. 'Modulo' → logprob: -16.0
    4. '_integer' → logprob: -16.75
    5. 'integer' → logprob: -16.875
    6. '(Integer' → logprob: -16.875
    7. 'Inte' → logprob: -17.375
    8. '_Integer' → logprob: -17.75
    9. 'Int' → logprob: -18.0
    10. '<Integer' → logprob: -18.625

Token 429: '(pow' (ID: 189160)
  Prédit: '(pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pow' → logprob: -0.0005158595158718526
    2. 'pow' → logprob: -8.000515937805176
    3. '(' → logprob: -9.125515937805176
    4. '(self' → logprob: -9.875515937805176
    5. '(power' → logprob: -11.125515937805176
    6. '(Mod' → logprob: -12.875515937805176
    7. ' pow' → logprob: -13.250515937805176
    8. '(po' → logprob: -15.125515937805176
    9. '(int' → logprob: -15.500515937805176
    10. '(mod' → logprob: -15.625515937805176

Token 430: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.6550729419104755e-05
    2. 'operand' → logprob: -10.250036239624023
    3. 'self' → logprob: -14.500036239624023
    4. '(self' → logprob: -14.875036239624023
    5. '(
' → logprob: -16.125036239624023
    6. ' operand' → logprob: -16.250036239624023
    7. '_operand' → logprob: -17.000036239624023
    8. 'Operand' → logprob: -17.000036239624023
    9. ')' → logprob: -18.125036239624023
    10. '```' → logprob: -18.750036239624023

Token 431: 'operand' (ID: 73439)
  Prédit: 'operand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operand' → logprob: -1.676292231422849e-05
    2. '(' → logprob: -11.500017166137695
    3. ' operand' → logprob: -12.000017166137695
    4. '_operand' → logprob: -15.375017166137695
    5. 'self' → logprob: -16.375017166137695
    6. 'operator' → logprob: -17.875017166137695
    7. 'op' → logprob: -19.000017166137695
    8. ')' → logprob: -19.000017166137695
    9. 'Operand' → logprob: -19.375017166137695
    10. 'opcode' → logprob: -19.875017166137695

Token 432: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5451681974809617e-05
    2. ' ,' → logprob: -11.250015258789062
    3. 'self' → logprob: -14.125015258789062
    4. ',self' → logprob: -14.250015258789062
    5. ',value' → logprob: -15.000015258789062
    6. ',
' → logprob: -15.750015258789062
    7. ')' → logprob: -16.125015258789062
    8. ' ' → logprob: -16.250015258789062
    9. '(' → logprob: -16.375015258789062
    10. 'value' → logprob: -16.500015258789062

Token 433: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005538671393878758
    2. ' self' → logprob: -7.500554084777832
    3. '       ' → logprob: -14.750554084777832
    4. '(self' → logprob: -15.000554084777832
    5. 'mod' → logprob: -17.250553131103516
    6. '	self' → logprob: -17.375553131103516
    7. '[self' → logprob: -17.375553131103516
    8. '           ' → logprob: -17.500553131103516
    9. '   ' → logprob: -18.375553131103516
    10. 'value' → logprob: -19.125553131103516

Token 434: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -5.5577775128767826e-06
    2. 'value' → logprob: -12.125005722045898
    3. '.' → logprob: -16.3750057220459
    4. '$value' → logprob: -18.7500057220459
    5. '<|end|>' → logprob: -19.1250057220459
    6. '"value' → logprob: -19.2500057220459
    7. 'alue' → logprob: -19.8750057220459
    8. ')value' → logprob: -20.5000057220459
    9. '(value' → logprob: -20.5000057220459
    10. ''value' → logprob: -20.6250057220459

Token 435: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.34951743483543396
    2. '))' → logprob: -1.2245174646377563
    3. ')' → logprob: -6.974517345428467
    4. ' ,' → logprob: -9.724517822265625
    5. '))
' → logprob: -10.974517822265625
    6. ' ))' → logprob: -10.974517822265625
    7. '       ' → logprob: -11.599517822265625
    8. ',
' → logprob: -11.724517822265625
    9. '   ' → logprob: -11.849517822265625
    10. '),' → logprob: -11.849517822265625

Token 436: ' modulo' (ID: 112372)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0015031944494694471
    2. ' modulo' → logprob: -6.501502990722656
    3. 'module' → logprob: -14.251502990722656
    4. '(mod' → logprob: -16.751502990722656
    5. '	mod' → logprob: -16.751502990722656
    6. 'mo' → logprob: -16.876502990722656
    7. 'Modulo' → logprob: -17.001502990722656
    8. 'moder' → logprob: -17.251502990722656
    9. '998' → logprob: -18.126502990722656
    10. 'modo' → logprob: -18.126502990722656

Token 437: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.04084036499261856
    2. 'prime' → logprob: -3.2908403873443604
    3. '998' → logprob: -6.290840148925781
    4. 'mod' → logprob: -7.040840148925781
    5. 'Prime' → logprob: -9.915840148925781
    6. 'p' → logprob: -12.790840148925781
    7. ')' → logprob: -13.040840148925781
    8. '(mod' → logprob: -13.290840148925781
    9. '```' → logprob: -13.290840148925781
    10. ' ' → logprob: -13.790840148925781

Token 438: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0002456046058796346
    2. ')' → logprob: -8.375246047973633
    3. '))
' → logprob: -11.125246047973633
    4. ')))' → logprob: -16.250246047973633
    5. ' ))' → logprob: -16.750246047973633
    6. '   ' → logprob: -16.750246047973633
    7. '))

' → logprob: -17.000246047973633
    8. '       ' → logprob: -17.500246047973633
    9. ')
' → logprob: -18.375246047973633
    10. '));' → logprob: -19.000246047973633

Token 439: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15703435242176056
    2. ')' → logprob: -2.407034397125244
    3. 'result' → logprob: -4.157034397125244
    4. 'dp' → logprob: -5.157034397125244
    5. 'count' → logprob: -5.157034397125244
    6. 'answer' → logprob: -5.657034397125244
    7. ':' → logprob: -5.782034397125244
    8. 'color' → logprob: -6.157034397125244
    9. 'sequence' → logprob: -6.157034397125244
    10. 'class' → logprob: -6.282034397125244

Token 440: ' update' (ID: 4027)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.48738229274749756
    2. ' main' → logprob: -1.3623822927474976
    3. ' calculate' → logprob: -2.987382411956787
    4. ' solve' → logprob: -3.612382411956787
    5. 'count' → logprob: -3.737382411956787
    6. ' unique' → logprob: -5.237382411956787
    7. ' calc' → logprob: -5.487382411956787
    8. 'main' → logprob: -5.862382411956787
    9. 'solve' → logprob: -5.862382411956787
    10. ' compute' → logprob: -5.987382411956787

Token 441: '_state' (ID: 9479)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.9690065383911133
    2. '_state' → logprob: -1.4690065383911133
    3. '_sequence' → logprob: -2.8440065383911133
    4. '_counts' → logprob: -2.8440065383911133
    5. '(state' → logprob: -3.3440065383911133
    6. '(' → logprob: -3.5940065383911133
    7. '_ball' → logprob: -3.5940065383911133
    8. '(ball' → logprob: -3.8440065383911133
    9. '_answer' → logprob: -4.094006538391113
    10. '(sequence' → logprob: -4.219006538391113

Token 442: '(ball' (ID: 170062)
  Prédit: '(state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(state' → logprob: -0.0012910704826936126
    2. '(current' → logprob: -7.251291275024414
    3. ' (' → logprob: -8.501291275024414
    4. '(' → logprob: -8.876291275024414
    5. '(states' → logprob: -9.001291275024414
    6. '(prev' → logprob: -9.876291275024414
    7. '(previous' → logprob: -10.626291275024414
    8. '(s' → logprob: -11.126291275024414
    9. '(self' → logprob: -11.626291275024414
    10. '(old' → logprob: -11.876291275024414

Token 443: '_type' (ID: 3804)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.37601086497306824
    2. '_sequence' → logprob: -2.1260108947753906
    3. '_state' → logprob: -2.5010108947753906
    4. '_count' → logprob: -3.0010108947753906
    5. '_type' → logprob: -3.3760108947753906
    6. '_states' → logprob: -4.251010894775391
    7. '_counts' → logprob: -5.251010894775391
    8. '):' → logprob: -6.126010894775391
    9. '_color' → logprob: -6.376010894775391
    10. ',state' → logprob: -6.626010894775391

Token 444: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.52919222577475e-05
    2. '):' → logprob: -10.375075340270996
    3. ' ,' → logprob: -11.125075340270996
    4. '   ' → logprob: -11.875075340270996
    5. 's' → logprob: -12.250075340270996
    6. ',state' → logprob: -12.500075340270996
    7. ',current' → logprob: -12.750075340270996
    8. '_,' → logprob: -13.000075340270996
    9. '1' → logprob: -13.750075340270996
    10. ':' → logprob: -14.250075340270996

Token 445: ' accumulator' (ID: 118458)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.36789628863334656
    2. ' state' → logprob: -1.742896318435669
    3. 'current' → logprob: -3.492896318435669
    4. 'dp' → logprob: -3.867896318435669
    5. ' current' → logprob: -3.992896318435669
    6. 'count' → logprob: -4.11789608001709
    7. 'prev' → logprob: -4.61789608001709
    8. 'ball' → logprob: -4.86789608001709
    9. ' dp' → logprob: -5.24289608001709
    10. 'previous' → logprob: -5.74289608001709

Token 446: '_result' (ID: 11623)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03874460980296135
    2. '):' → logprob: -3.2887446880340576
    3. '):
' → logprob: -7.5387444496154785
    4. ':' → logprob: -9.038744926452637
    5. '   ' → logprob: -10.788744926452637
    6. ' ,' → logprob: -11.413744926452637
    7. ',state' → logprob: -12.163744926452637
    8. ',
' → logprob: -12.413744926452637
    9. '):
' → logprob: -13.163744926452637
    10. 's' → logprob: -13.538744926452637

Token 447: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001502598519437015
    2. '):' → logprob: -6.626502513885498
    3. ' ,' → logprob: -9.501502990722656
    4. 's' → logprob: -10.001502990722656
    5. '):
' → logprob: -10.501502990722656
    6. ',state' → logprob: -11.876502990722656
    7. ',result' → logprob: -12.876502990722656
    8. ',
' → logprob: -13.126502990722656
    9. '_state' → logprob: -13.251502990722656
    10. 'state' → logprob: -13.501502990722656

Token 448: ' free' (ID: 2240)
  Prédit: 'ball'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ball' → logprob: -1.8028360605239868
    2. ' ball' → logprob: -2.4278359413146973
    3. 'acc' → logprob: -2.5528359413146973
    4. ' accumulator' → logprob: -2.5528359413146973
    5. 'count' → logprob: -2.6778359413146973
    6. ' current' → logprob: -2.8028359413146973
    7. 'previous' → logprob: -2.8028359413146973
    8. 'current' → logprob: -3.0528359413146973
    9. ' count' → logprob: -3.4278359413146973
    10. ' previous' → logprob: -3.5528359413146973

Token 449: '_person' (ID: 53205)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.9972956776618958
    2. '_slots' → logprob: -1.122295618057251
    3. '_spaces' → logprob: -2.997295618057251
    4. '_positions' → logprob: -2.997295618057251
    5. '_space' → logprob: -3.122295618057251
    6. '_choices' → logprob: -3.497295618057251
    7. '_sp' → logprob: -4.24729585647583
    8. '_states' → logprob: -4.62229585647583
    9. '_ball' → logprob: -4.62229585647583
    10. '_counts' → logprob: -4.62229585647583

Token 450: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1949726641178131
    2. '):
' → logprob: -2.5699727535247803
    3. '):' → logprob: -2.9449727535247803
    4. '_count' → logprob: -3.1949727535247803
    5. ')' → logprob: -5.444972515106201
    6. '):

' → logprob: -6.569972515106201
    7. '):
' → logprob: -8.06997299194336
    8. '_counter' → logprob: -8.81997299194336
    9. ',' → logprob: -9.06997299194336
    10. 'al' → logprob: -9.31997299194336

Token 451: ' red' (ID: 3592)
  Prédit: 'free'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'free' → logprob: -2.78164005279541
    2. 'ball' → logprob: -3.09414005279541
    3. 'last' → logprob: -3.34414005279541
    4. 'person' → logprob: -3.46914005279541
    5. 'total' → logprob: -3.53164005279541
    6. 'used' → logprob: -3.59414005279541
    7. 'previous' → logprob: -3.78164005279541
    8. 'current' → logprob: -3.78164005279541
    9. ' person' → logprob: -3.84414005279541
    10. ' last' → logprob: -3.90664005279541

Token 452: '_person' (ID: 53205)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.7239527106285095
    2. '_ball' → logprob: -1.3489527702331543
    3. '_person' → logprob: -1.4739527702331543
    4. '_b' → logprob: -5.098952770233154
    5. '_people' → logprob: -5.848952770233154
    6. 's' → logprob: -5.848952770233154
    7. '_counter' → logprob: -6.348952770233154
    8. '_flag' → logprob: -6.848952770233154
    9. '_bonus' → logprob: -7.098952770233154
    10. '_result' → logprob: -7.223952770233154

Token 453: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.670868992805481
    2. '):' → logprob: -0.795868992805481
    3. '):
' → logprob: -3.2958688735961914
    4. '):
' → logprob: -8.170868873596191
    5. '   ' → logprob: -9.670868873596191
    6. ' ,' → logprob: -10.170868873596191
    7. ')' → logprob: -10.545868873596191
    8. '_type' → logprob: -10.545868873596191
    9. ':' → logprob: -11.295868873596191
    10. '):

' → logprob: -11.295868873596191

Token 454: ' green' (ID: 8851)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.453887403011322
    2. ' blue' → logprob: -1.5788874626159668
    3. 'green' → logprob: -2.453887462615967
    4. ' green' → logprob: -3.578887462615967
    5. 'white' → logprob: -4.828887462615967
    6. 'free' → logprob: -4.953887462615967
    7. 'yellow' → logprob: -5.516387462615967
    8. 'black' → logprob: -5.891387462615967
    9. ' ' → logprob: -6.141387462615967
    10. ' white' → logprob: -6.266387462615967

Token 455: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -0.0031836593989282846
    2. ')' → logprob: -6.628183841705322
    3. ')_' → logprob: -7.378183841705322
    4. ',' → logprob: -7.878183841705322
    5. '_people' → logprob: -8.128183364868164
    6. 'person' → logprob: -8.878183364868164
    7. '_ball' → logprob: -9.378183364868164
    8. ',_' → logprob: -9.503183364868164
    9. '_type' → logprob: -10.128183364868164
    10. '_p' → logprob: -10.253183364868164

Token 456: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.34518173336982727
    2. '):' → logprob: -1.3451817035675049
    3. '):
' → logprob: -3.470181703567505
    4. '   ' → logprob: -8.720181465148926
    5. ',
' → logprob: -9.970181465148926
    6. ' ,' → logprob: -10.845181465148926
    7. ' ):' → logprob: -10.970181465148926
    8. ')' → logprob: -11.220181465148926
    9. '):
' → logprob: -11.220181465148926
    10. '):

' → logprob: -11.845181465148926

Token 457: ' blue' (ID: 9861)
  Prédit: ' blue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blue' → logprob: -0.69638991355896
    2. 'blue' → logprob: -0.69638991355896
    3. ' ' → logprob: -6.946390151977539
    4. '   ' → logprob: -7.196390151977539
    5. '  ' → logprob: -8.946390151977539
    6. 'yellow' → logprob: -9.008890151977539
    7. 'free' → logprob: -9.321390151977539
    8. ' yellow' → logprob: -9.383890151977539
    9. 'red' → logprob: -9.633890151977539
    10. '    ' → logprob: -9.633890151977539

Token 458: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -0.004414097871631384
    2. '):' → logprob: -5.629414081573486
    3. ')_' → logprob: -8.379414558410645
    4. '):
' → logprob: -8.754414558410645
    5. '_type' → logprob: -9.129414558410645
    6. '_' → logprob: -9.254414558410645
    7. ')' → logprob: -10.254414558410645
    8. '_p' → logprob: -10.379414558410645
    9. '_people' → logprob: -10.379414558410645
    10. 'person' → logprob: -10.504414558410645

Token 459: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0052966042421758175
    2. ',' → logprob: -5.25529670715332
    3. '):
' → logprob: -10.63029670715332
    4. ')' → logprob: -10.88029670715332
    5. ':' → logprob: -11.50529670715332
    6. ' ):' → logprob: -12.13029670715332
    7. '   ' → logprob: -13.13029670715332
    8. '=' → logprob: -13.75529670715332
    9. '=None' → logprob: -15.25529670715332
    10. '):
' → logprob: -15.88029670715332

Token 460: ' red' (ID: 3592)
  Prédit: 'yellow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'yellow' → logprob: -0.9929288625717163
    2. 'white' → logprob: -1.7429288625717163
    3. 'blue' → logprob: -2.617928981781006
    4. 'black' → logprob: -2.742928981781006
    5. 'ball' → logprob: -2.867928981781006
    6. 'free' → logprob: -3.242928981781006
    7. 'last' → logprob: -3.867928981781006
    8. ' yellow' → logprob: -4.117928981781006
    9. 'red' → logprob: -4.117928981781006
    10. 'current' → logprob: -4.242928981781006

Token 461: '_green' (ID: 113714)
  Prédit: '_person'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_person' → logprob: -0.003434000303968787
    2. '_count' → logprob: -6.253434181213379
    3. '_type' → logprob: -8.128434181213379
    4. '_ball' → logprob: -8.628434181213379
    5. '_people' → logprob: -8.878434181213379
    6. ')' → logprob: -8.878434181213379
    7. 'person' → logprob: -9.503434181213379
    8. '_present' → logprob: -9.628434181213379
    9. '_' → logprob: -9.628434181213379
    10. '_p' → logprob: -9.753434181213379

Token 462: '_pair' (ID: 34819)
  Prédit: '_person'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_person' → logprob: -0.6384811997413635
    2. '_comb' → logprob: -1.8884811401367188
    3. '_union' → logprob: -2.6384811401367188
    4. '_count' → logprob: -2.7634811401367188
    5. '_combo' → logprob: -3.3884811401367188
    6. '_' → logprob: -3.7634811401367188
    7. '_inter' → logprob: -3.8884811401367188
    8. '_ball' → logprob: -3.8884811401367188
    9. '_overlap' → logprob: -4.388481140136719
    10. '):' → logprob: -4.513481140136719

Token 463: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.444705605506897
    2. '):' → logprob: -1.319705605506897
    3. '_count' → logprob: -3.0697054862976074
    4. 's' → logprob: -3.4447054862976074
    5. '):
' → logprob: -5.069705486297607
    6. '_pair' → logprob: -6.944705486297607
    7. ')' → logprob: -7.069705486297607
    8. ',
' → logprob: -7.194705486297607
    9. 'ing' → logprob: -7.319705486297607
    10. '=' → logprob: -7.694705486297607

Token 464: ' green' (ID: 8851)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.5722787976264954
    2. ' red' → logprob: -1.1972787380218506
    3. 'green' → logprob: -3.1972787380218506
    4. ' green' → logprob: -3.3222787380218506
    5. 'blue' → logprob: -3.5722787380218506
    6. ' blue' → logprob: -3.5722787380218506
    7. '   ' → logprob: -8.69727897644043
    8. ' ' → logprob: -9.44727897644043
    9. 'free' → logprob: -9.82227897644043
    10. 'yellow' → logprob: -10.25977897644043

Token 465: '_blue' (ID: 81479)
  Prédit: '_blue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_blue' → logprob: -0.02785271592438221
    2. '_pair' → logprob: -3.777852773666382
    3. '_red' → logprob: -5.652852535247803
    4. '_green' → logprob: -8.027853012084961
    5. '_person' → logprob: -8.402853012084961
    6. '_b' → logprob: -9.277853012084961
    7. '_' → logprob: -9.652853012084961
    8. '_p' → logprob: -9.902853012084961
    9. '_pairs' → logprob: -9.902853012084961
    10. '_y' → logprob: -10.152853012084961

Token 466: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -7.64839569455944e-05
    2. ')_' → logprob: -10.125076293945312
    3. 'pair' → logprob: -11.000076293945312
    4. '_p' → logprob: -11.875076293945312
    5. '_pairs' → logprob: -12.875076293945312
    6. '_combo' → logprob: -13.125076293945312
    7. '_trip' → logprob: -13.750076293945312
    8. '_tuple' → logprob: -14.000076293945312
    9. ')' → logprob: -14.125076293945312
    10. '_comb' → logprob: -14.500076293945312

Token 467: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.7146746763028204e-05
    2. '):' → logprob: -10.87503719329834
    3. ' ,' → logprob: -11.37503719329834
    4. ',
' → logprob: -12.50003719329834
    5. '):
' → logprob: -14.25003719329834
    6. ')' → logprob: -14.37503719329834
    7. ',

' → logprob: -15.00003719329834
    8. ',b' → logprob: -15.75003719329834
    9. '):

' → logprob: -15.87503719329834
    10. '   ' → logprob: -16.000036239624023

Token 468: ' blue' (ID: 9861)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.6819871664047241
    2. ' blue' → logprob: -0.9319871664047241
    3. ' red' → logprob: -2.9319872856140137
    4. 'red' → logprob: -3.0569872856140137
    5. '   ' → logprob: -9.556986808776855
    6. 'green' → logprob: -9.556986808776855
    7. ' green' → logprob: -10.181986808776855
    8. ' ' → logprob: -10.556986808776855
    9. 'ball' → logprob: -10.681986808776855
    10. ')' → logprob: -11.556986808776855

Token 469: '_red' (ID: 61951)
  Prédit: '_green'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_green' → logprob: -0.9672471284866333
    2. '_pair' → logprob: -1.5922471284866333
    3. '_blue' → logprob: -1.5922471284866333
    4. '_red' → logprob: -1.8422471284866333
    5. '_person' → logprob: -3.7172470092773438
    6. '_y' → logprob: -4.092247009277344
    7. '_p' → logprob: -5.217247009277344
    8. '_' → logprob: -6.217247009277344
    9. '_under' → logprob: -6.467247009277344
    10. '_white' → logprob: -7.217247009277344

Token 470: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -0.013794275932013988
    2. ')_' → logprob: -4.388794422149658
    3. ')' → logprob: -8.0137939453125
    4. ',' → logprob: -8.0137939453125
    5. '):' → logprob: -9.0137939453125
    6. '_trip' → logprob: -9.6387939453125
    7. '_p' → logprob: -9.7637939453125
    8. '_pairs' → logprob: -9.8887939453125
    9. '_tuple' → logprob: -10.0137939453125
    10. 's' → logprob: -10.1387939453125

Token 471: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.28173547983169556
    2. '):' → logprob: -1.4067354202270508
    3. '):
' → logprob: -7.656735420227051
    4. ')' → logprob: -9.65673542022705
    5. '   ' → logprob: -11.15673542022705
    6. ',
' → logprob: -11.53173542022705
    7. ' ,' → logprob: -11.65673542022705
    8. ' ):' → logprob: -12.03173542022705
    9. ':' → logprob: -13.28173542022705
    10. '=' → logprob: -13.78173542022705

Token 472: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013447025790810585
    2. ':' → logprob: -4.513446807861328
    3. '    
' → logprob: -6.888446807861328
    4. '```' → logprob: -7.888446807861328
    5. ' if' → logprob: -8.263446807861328
    6. ':
' → logprob: -8.638446807861328
    7. '	if' → logprob: -9.138446807861328
    8. ',' → logprob: -10.013446807861328
    9. ' 
' → logprob: -10.138446807861328
    10. ' :' → logprob: -10.263446807861328

Token 473: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11665754020214081
    2. '    
' → logprob: -2.7416574954986572
    3. ' 
' → logprob: -3.7416574954986572
    4. ' if' → logprob: -4.241657733917236
    5. '    ' → logprob: -6.241657733917236
    6. '
' → logprob: -6.366657733917236
    7. '     
' → logprob: -7.116657733917236
    8. '   
' → logprob: -7.491657733917236
    9. '\n' → logprob: -7.991657733917236
    10. 'if' (adapté à ' if') → logprob: -7.991657733917236

Token 474: ' ball' (ID: 7880)
  Prédit: 'ball'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ball' → logprob: -0.10057768225669861
    2. ' ball' → logprob: -2.3505775928497314
    3. '   ' → logprob: -8.850577354431152
    4. ' ' → logprob: -9.475577354431152
    5. ' free' → logprob: -9.600577354431152
    6. 'free' → logprob: -10.350577354431152
    7. '  ' → logprob: -11.225577354431152
    8. '    ' → logprob: -11.475577354431152
    9. '(ball' → logprob: -11.475577354431152
    10. ' red' → logprob: -12.350577354431152

Token 475: '_type' (ID: 3804)
  Prédit: '_type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_type' → logprob: -4.320199877838604e-07
    2. '_' → logprob: -16.0
    3. 'type' → logprob: -16.0
    4. '==' → logprob: -16.0
    5. '```' → logprob: -18.25
    6. '   ' → logprob: -18.5
    7. '_sequence' → logprob: -19.0
    8. '[' → logprob: -19.0
    9. '__' → logprob: -19.125
    10. '_code' → logprob: -19.125

Token 476: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1269938349723816
    2. '==' → logprob: -2.1269938945770264
    3. '=='' → logprob: -10.376994132995605
    4. ' =='' → logprob: -11.876994132995605
    5. '=="' → logprob: -12.251994132995605
    6. '[' → logprob: -12.376994132995605
    7. '	' → logprob: -12.376994132995605
    8. ' ' → logprob: -13.001994132995605
    9. '   ' → logprob: -13.126994132995605
    10. ')' → logprob: -13.251994132995605

Token 477: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.08442093431949615
    2. '"' → logprob: -3.834420919418335
    3. ' '' → logprob: -3.834420919418335
    4. ''r' → logprob: -3.834420919418335
    5. ''A' → logprob: -5.084421157836914
    6. ''O' → logprob: -5.459421157836914
    7. '"B' → logprob: -6.334421157836914
    8. ' "' → logprob: -7.334421157836914
    9. '   ' → logprob: -8.084421157836914
    10. '0' → logprob: -8.209421157836914

Token 478: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.005662598647177219
    2. 'r' → logprob: -5.880662441253662
    3. 'B' → logprob: -6.380662441253662
    4. '0' → logprob: -7.880662441253662
    5. '1' → logprob: -8.63066291809082
    6. 'a' → logprob: -8.88066291809082
    7. 'A' → logprob: -9.38066291809082
    8. '?' → logprob: -9.38066291809082
    9. 'G' → logprob: -10.25566291809082
    10. 'J' → logprob: -10.75566291809082

Token 479: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.5046932101249695
    2. '':
' → logprob: -1.0046932697296143
    3. ''):
' → logprob: -4.504693031311035
    4. ''' → logprob: -4.629693031311035
    5. '):
' → logprob: -5.879693031311035
    6. ''):' → logprob: -6.379693031311035
    7. ':' → logprob: -6.629693031311035
    8. '):' → logprob: -7.004693031311035
    9. '   ' → logprob: -7.129693031311035
    10. ' '' → logprob: -7.379693031311035

Token 480: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3242902457714081
    2. ' and' → logprob: -2.0742902755737305
    3. ':
' → logprob: -2.3242902755737305
    4. ':' → logprob: -3.0742902755737305
    5. 'and' → logprob: -5.3242902755737305
    6. ' red' → logprob: -7.6992902755737305
    7. ',' → logprob: -7.8242902755737305
    8. '   ' → logprob: -7.9492902755737305
    9. '):
' → logprob: -8.44929027557373
    10. ' :
' → logprob: -8.82429027557373

Token 481: ' if' (ID: 538)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.7431173324584961
    2. 'free' → logprob: -1.243117332458496
    3. 'new' → logprob: -3.118117332458496
    4. '       ' → logprob: -3.118117332458496
    5. ' red' → logprob: -3.368117332458496
    6. 'if' (adapté à ' if') → logprob: -3.368117332458496
    7. 'return' → logprob: -3.743117332458496
    8. ' free' → logprob: -3.993117332458496
    9. ' new' → logprob: -4.618117332458496
    10. '   ' → logprob: -4.743117332458496

Token 482: ' green' (ID: 8851)
  Prédit: ' free'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' free' → logprob: -0.135747492313385
    2. 'free' → logprob: -2.2607474327087402
    3. ' red' → logprob: -4.01074743270874
    4. 'red' → logprob: -5.63574743270874
    5. ' not' → logprob: -7.88574743270874
    6. ' accumulator' → logprob: -8.635747909545898
    7. ' green' → logprob: -9.135747909545898
    8. 'acc' → logprob: -9.510747909545898
    9. ' blue' → logprob: -9.760747909545898
    10. 'not' → logprob: -10.260747909545898

Token 483: '_blue' (ID: 81479)
  Prédit: '_person'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_person' → logprob: -1.5570885807392187e-05
    2. '_free' → logprob: -12.500015258789062
    3. '_people' → logprob: -12.875015258789062
    4. '_' → logprob: -13.000015258789062
    5. '_green' → logprob: -13.250015258789062
    6. '_p' → logprob: -13.750015258789062
    7. '_pair' → logprob: -14.625015258789062
    8. '>' → logprob: -15.000015258789062
    9. '_present' → logprob: -15.375015258789062
    10. '_pres' → logprob: -15.375015258789062

Token 484: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -8.2994620242971e-06
    2. 'pair' → logprob: -12.500008583068848
    3. '_person' → logprob: -13.000008583068848
    4. '_pairs' → logprob: -13.750008583068848
    5. '_p' → logprob: -14.750008583068848
    6. '_' → logprob: -15.125008583068848
    7. '```' → logprob: -16.87500762939453
    8. '_PAIR' → logprob: -16.87500762939453
    9. '>' → logprob: -17.37500762939453
    10. '_partner' → logprob: -17.37500762939453

Token 485: ':
' (ID: 734)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.33163827657699585
    2. ' ==' → logprob: -1.7066383361816406
    3. ':' → logprob: -2.5816383361816406
    4. '>' → logprob: -4.206638336181641
    5. '==' → logprob: -5.206638336181641
    6. ' +' → logprob: -6.581638336181641
    7. ' !=' → logprob: -6.581638336181641
    8. ':
' → logprob: -7.706638336181641
    9. ' >=' → logprob: -8.08163833618164
    10. ' ' → logprob: -8.33163833618164

Token 486: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5434800386428833
    2. ' =' → logprob: -1.9184800386428833
    3. '=' → logprob: -2.5434799194335938
    4. ':' → logprob: -3.0434799194335938
    5. ' and' → logprob: -3.4184799194335938
    6. ':
' → logprob: -3.6684799194335938
    7. '==' → logprob: -3.6684799194335938
    8. '       ' → logprob: -3.9184799194335938
    9. ' ==' → logprob: -4.543479919433594
    10. ',' → logprob: -4.918479919433594

Token 487: ' return' (ID: 622)
  Prédit: 'green'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'green' → logprob: -0.3860357105731964
    2. ' green' → logprob: -2.261035680770874
    3. 'free' → logprob: -2.761035680770874
    4. '           ' → logprob: -3.011035680770874
    5. 'red' → logprob: -3.136035680770874
    6. 'return' (adapté à ' return') → logprob: -3.886035680770874
    7. '       ' → logprob: -4.761035919189453
    8. 'blue' → logprob: -4.886035919189453
    9. ' free' → logprob: -4.886035919189453
    10. ' red' → logprob: -5.136035919189453

Token 488: ' (' (ID: 350)
  Prédit: '(Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(Mod' → logprob: -0.960637629032135
    2. '(acc' → logprob: -1.5856375694274902
    3. 'Modulo' → logprob: -1.9606375694274902
    4. 'acc' → logprob: -2.0856375694274902
    5. 'Mod' → logprob: -2.8356375694274902
    6. 'update' → logprob: -4.33563756942749
    7. '(
' → logprob: -4.46063756942749
    8. '(' → logprob: -4.46063756942749
    9. '(red' → logprob: -4.58563756942749
    10. '(None' → logprob: -4.83563756942749

Token 489: 'acc' (ID: 3717)
  Prédit: 'acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.42358046770095825
    2. ''acc' → logprob: -1.9235804080963135
    3. ''' → logprob: -2.4235804080963135
    4. 'ball' → logprob: -3.1735804080963135
    5. 'None' → logprob: -3.6735804080963135
    6. ''M' → logprob: -4.298580646514893
    7. 'red' → logprob: -5.298580646514893
    8. '(acc' → logprob: -5.798580646514893
    9. 'R' → logprob: -5.923580646514893
    10. 'Modulo' → logprob: -6.173580646514893

Token 490: 'umulator' (ID: 90989)
  Prédit: 'umulator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulator' → logprob: -0.0011125932214781642
    2. 'um' → logprob: -7.001112461090088
    3. 'umul' → logprob: -9.376112937927246
    4. 'umu' → logprob: -9.501112937927246
    5. 'umulate' → logprob: -10.876112937927246
    6. 'ulator' → logprob: -12.751112937927246
    7. '_mod' → logprob: -12.751112937927246
    8. ')' → logprob: -12.876112937927246
    9. 'operator' → logprob: -13.376112937927246
    10. ',' → logprob: -13.501112937927246

Token 491: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.0003442832676228136
    2. 'result' → logprob: -8.500344276428223
    3. ',' → logprob: -9.125344276428223
    4. ',result' → logprob: -11.500344276428223
    5. '   ' → logprob: -12.000344276428223
    6. ')' → logprob: -13.000344276428223
    7. ' +' → logprob: -13.125344276428223
    8. '
' → logprob: -13.500344276428223
    9. '+' → logprob: -13.625344276428223
    10. '	result' → logprob: -14.250344276428223

Token 492: ' *' (ID: 425)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.28264614939689636
    2. ' +' → logprob: -2.2826461791992188
    3. '+' → logprob: -2.5326461791992188
    4. '*' → logprob: -3.4076461791992188
    5. ' *' → logprob: -3.7826461791992188
    6. '   ' → logprob: -5.907646179199219
    7. ' ,' → logprob: -6.157646179199219
    8. ' -' → logprob: -6.532646179199219
    9. '-' → logprob: -6.907646179199219
    10. ',
' → logprob: -7.157646179199219

Token 493: ' green' (ID: 8851)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7885351181030273
    2. 'green' → logprob: -1.5385351181030273
    3. '(' → logprob: -2.5385351181030273
    4. 'Modulo' → logprob: -2.5385351181030273
    5. '(Mod' → logprob: -2.9135351181030273
    6. '3' → logprob: -3.1635351181030273
    7. 'free' → logprob: -3.4135351181030273
    8. '(M' → logprob: -4.663535118103027
    9. 'Mod' → logprob: -4.663535118103027
    10. 'red' → logprob: -5.538535118103027

Token 494: '_blue' (ID: 81479)
  Prédit: '_blue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_blue' → logprob: -1.3856492842023727e-06
    2. '_green' → logprob: -14.000000953674316
    3. 'blue' → logprob: -15.750000953674316
    4. '_black' → logprob: -16.500001907348633
    5. '_white' → logprob: -16.625001907348633
    6. '_eye' → logprob: -17.000001907348633
    7. '_BLUE' → logprob: -17.125001907348633
    8. ')' → logprob: -17.250001907348633
    9. ')_' → logprob: -17.375001907348633
    10. '_red' → logprob: -17.750001907348633

Token 495: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -3.440506407059729e-05
    2. 'pair' → logprob: -10.37503433227539
    3. ')' → logprob: -13.50003433227539
    4. '_pairs' → logprob: -14.25003433227539
    5. 'Pair' → logprob: -15.00003433227539
    6. ')_' → logprob: -16.00003433227539
    7. '
' → logprob: -16.25003433227539
    8. '_p' → logprob: -16.50003433227539
    9. '(_' → logprob: -16.50003433227539
    10. '(' → logprob: -17.00003433227539

Token 496: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002499794587492943
    2. ',
' → logprob: -6.752499580383301
    3. ' +' → logprob: -7.752499580383301
    4. '+' → logprob: -8.5024995803833
    5. '   ' → logprob: -8.6274995803833
    6. '),' → logprob: -9.1274995803833
    7. ' ,' → logprob: -9.3774995803833
    8. '       ' → logprob: -9.6274995803833
    9. ')' → logprob: -9.8774995803833
    10. '  ' → logprob: -10.7524995803833

Token 497: ' free' (ID: 2240)
  Prédit: 'free'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'free' → logprob: -0.16151633858680725
    2. 'False' → logprob: -2.5365164279937744
    3. '0' → logprob: -3.4115164279937744
    4. 'True' → logprob: -4.536516189575195
    5. 'Modulo' → logprob: -4.661516189575195
    6. 'Mod' → logprob: -5.786516189575195
    7. ' free' → logprob: -5.911516189575195
    8. '           ' → logprob: -6.161516189575195
    9. 'Free' → logprob: -6.411516189575195
    10. 'None' → logprob: -6.661516189575195

Token 498: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -1.8624639324116288e-06
    2. 'person' → logprob: -13.875001907348633
    3. '
' → logprob: -15.500001907348633
    4. '_p' → logprob: -15.875001907348633
    5. '   ' → logprob: -16.375001907348633
    6. '_' → logprob: -16.625001907348633
    7. ')' → logprob: -17.125001907348633
    8. '_free' → logprob: -17.125001907348633
    9. '_PERSON' → logprob: -17.125001907348633
    10. '_ball' → logprob: -17.375001907348633

Token 499: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05248768627643585
    2. ' +' → logprob: -3.30248761177063
    3. '+' → logprob: -4.552487850189209
    4. ' ,' → logprob: -6.177487850189209
    5. ' -' → logprob: -7.552487850189209
    6. ')' → logprob: -7.802487850189209
    7. '-' → logprob: -8.05248737335205
    8. '   ' → logprob: -8.55248737335205
    9. '),' → logprob: -9.05248737335205
    10. '       ' → logprob: -9.67748737335205

Token 500: ' red' (ID: 3592)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.022793471813201904
    2. ' red' → logprob: -4.022793292999268
    3. '0' → logprob: -6.522793292999268
    4. 'green' → logprob: -6.522793292999268
    5. 'free' → logprob: -7.647793292999268
    6. '           ' → logprob: -7.647793292999268
    7. '   ' → logprob: -8.772793769836426
    8. '       ' → logprob: -8.897793769836426
    9. '               ' → logprob: -9.272793769836426
    10. 'blue' → logprob: -9.772793769836426

Token 501: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -6.2729995988775045e-06
    2. 'person' → logprob: -12.625006675720215
    3. '+' → logprob: -13.625006675720215
    4. '   ' → logprob: -14.750006675720215
    5. ')' → logprob: -15.750006675720215
    6. '_PERSON' → logprob: -16.0000057220459
    7. '
' → logprob: -16.1250057220459
    8. '1' → logprob: -16.3750057220459
    9. '_green' → logprob: -16.6250057220459
    10. '_p' → logprob: -16.7500057220459

Token 502: ',' (ID: 11)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.38380298018455505
    2. '+' → logprob: -1.2588030099868774
    3. ',' → logprob: -3.383802890777588
    4. '   ' → logprob: -7.633802890777588
    5. ' ,' → logprob: -9.008803367614746
    6. '       ' → logprob: -9.633803367614746
    7. '           ' → logprob: -10.383803367614746
    8. '+,' → logprob: -10.508803367614746
    9. ',
' → logprob: -10.633803367614746
    10. ' ' → logprob: -11.008803367614746

Token 503: ' green' (ID: 8851)
  Prédit: 'green'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'green' → logprob: -0.25364917516708374
    2. ' green' → logprob: -1.5036492347717285
    3. 'blue' → logprob: -6.7536492347717285
    4. ' blue' → logprob: -7.7536492347717285
    5. 'free' → logprob: -10.37864875793457
    6. '   ' → logprob: -10.75364875793457
    7. '       ' → logprob: -11.00364875793457
    8. '           ' → logprob: -11.37864875793457
    9. ' free' → logprob: -12.00364875793457
    10. '0' → logprob: -12.37864875793457

Token 504: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -5.9153885558771435e-06
    2. 'person' → logprob: -13.625005722045898
    3. '_green' → logprob: -14.000005722045898
    4. '_blue' → logprob: -14.000005722045898
    5. '   ' → logprob: -14.250005722045898
    6. '_ball' → logprob: -14.625005722045898
    7. ')' → logprob: -14.875005722045898
    8. '
' → logprob: -15.250005722045898
    9. ',' → logprob: -15.250005722045898
    10. '_p' → logprob: -16.0000057220459

Token 505: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001457139616832137
    2. ' ,' → logprob: -7.251457214355469
    3. ' +' → logprob: -7.501457214355469
    4. '+' → logprob: -9.001457214355469
    5. ',
' → logprob: -10.626457214355469
    6. ')' → logprob: -11.126457214355469
    7. '   ' → logprob: -11.126457214355469
    8. '       ' → logprob: -12.001457214355469
    9. '           ' → logprob: -13.376457214355469
    10. '),' → logprob: -13.376457214355469

Token 506: ' blue' (ID: 9861)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.3488861322402954
    2. ' blue' → logprob: -1.2238861322402954
    3. '           ' → logprob: -9.098886489868164
    4. '   ' → logprob: -9.848886489868164
    5. ' ' → logprob: -9.973886489868164
    6. '       ' → logprob: -10.223886489868164
    7. '    ' → logprob: -10.473886489868164
    8. '  ' → logprob: -10.598886489868164
    9. '               ' → logprob: -10.973886489868164
    10. '     ' → logprob: -11.098886489868164

Token 507: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -1.981667537620524e-06
    2. 'person' → logprob: -14.125001907348633
    3. ')' → logprob: -14.875001907348633
    4. '   ' → logprob: -15.250001907348633
    5. '_PERSON' → logprob: -15.375001907348633
    6. '_p' → logprob: -15.625001907348633
    7. 'Person' → logprob: -16.750001907348633
    8. ',' → logprob: -17.125001907348633
    9. '_count' → logprob: -17.875001907348633
    10. '```' → logprob: -18.250001907348633

Token 508: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002841133624315262
    2. '+' → logprob: -6.877840995788574
    3. ' +' → logprob: -6.877840995788574
    4. ' ,' → logprob: -8.252840995788574
    5. '       ' → logprob: -8.627840995788574
    6. ')' → logprob: -8.877840995788574
    7. '   ' → logprob: -9.127840995788574
    8. ',
' → logprob: -10.627840995788574
    9. '           ' → logprob: -10.627840995788574
    10. ' ' → logprob: -12.252840995788574

Token 509: ' red' (ID: 3592)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.12318279594182968
    2. '0' → logprob: -2.373182773590088
    3. ' red' → logprob: -3.873182773590088
    4. 'green' → logprob: -7.373182773590088
    5. '           ' → logprob: -7.998182773590088
    6. '   ' → logprob: -8.498183250427246
    7. '               ' → logprob: -9.248183250427246
    8. '                   ' → logprob: -9.248183250427246
    9. 'None' → logprob: -9.748183250427246
    10. '       ' → logprob: -9.748183250427246

Token 510: '_green' (ID: 113714)
  Prédit: '_green'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_green' → logprob: -2.534558552724775e-05
    2. '_blue' → logprob: -11.250025749206543
    3. '_red' → logprob: -11.625025749206543
    4. 'green' → logprob: -13.875025749206543
    5. '_GREEN' → logprob: -14.375025749206543
    6. '_g' → logprob: -15.250025749206543
    7. '_white' → logprob: -15.500025749206543
    8. '_person' → logprob: -15.625025749206543
    9. ''_' → logprob: -15.625025749206543
    10. '_' → logprob: -15.750025749206543

Token 511: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -0.00011737081513274461
    2. 'pair' → logprob: -9.125117301940918
    3. ' pair' → logprob: -12.375117301940918
    4. '_pairs' → logprob: -13.625117301940918
    5. '   ' → logprob: -13.750117301940918
    6. 'Pair' → logprob: -14.000117301940918
    7. '_PAIR' → logprob: -15.250117301940918
    8. '
' → logprob: -15.375117301940918
    9. ',' → logprob: -16.250118255615234
    10. ')' → logprob: -16.500118255615234

Token 512: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007276826072484255
    2. ' ,' → logprob: -7.625727653503418
    3. '   ' → logprob: -9.375727653503418
    4. ',
' → logprob: -9.625727653503418
    5. '+' → logprob: -10.375727653503418
    6. ' +' → logprob: -11.000727653503418
    7. ')' → logprob: -11.000727653503418
    8. '       ' → logprob: -11.625727653503418
    9. '           ' → logprob: -12.250727653503418
    10. '  ' → logprob: -13.375727653503418

Token 513: ' green' (ID: 8851)
  Prédit: 'green'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'green' → logprob: -0.1270429790019989
    2. ' green' → logprob: -2.1270430088043213
    3. '0' → logprob: -9.752042770385742
    4. '   ' → logprob: -11.002042770385742
    5. 'blue' → logprob: -12.002042770385742
    6. 'None' → logprob: -12.377042770385742
    7. '
' → logprob: -12.752042770385742
    8. ' blue' → logprob: -12.752042770385742
    9. ' ' → logprob: -12.877042770385742
    10. '(' → logprob: -13.127042770385742

Token 514: '_blue' (ID: 81479)
  Prédit: '_blue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_blue' → logprob: -1.4617256056226324e-05
    2. 'blue' → logprob: -11.250014305114746
    3. '_green' → logprob: -13.500014305114746
    4. '_BLUE' → logprob: -16.750015258789062
    5. '_white' → logprob: -17.500015258789062
    6. '\' → logprob: -17.625015258789062
    7. '_black' → logprob: -17.625015258789062
    8. ' blue' → logprob: -17.750015258789062
    9. '```' → logprob: -17.875015258789062
    10. '_bo' → logprob: -18.000015258789062

Token 515: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -0.0004902417422272265
    2. 'pair' → logprob: -7.625490188598633
    3. 'Pair' → logprob: -14.125490188598633
    4. '_pairs' → logprob: -14.250490188598633
    5. ' pair' → logprob: -15.125490188598633
    6. '_PAIR' → logprob: -16.250490188598633
    7. '(pair' → logprob: -16.500490188598633
    8. '_p' → logprob: -16.500490188598633
    9. '   ' → logprob: -16.625490188598633
    10. 'def' → logprob: -17.250490188598633

Token 516: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004851306148339063
    2. ' ,' → logprob: -7.750484943389893
    3. ',
' → logprob: -10.50048542022705
    4. '   ' → logprob: -11.00048542022705
    5. ')' → logprob: -12.50048542022705
    6. '       ' → logprob: -13.12548542022705
    7. '           ' → logprob: -14.00048542022705
    8. ' -' → logprob: -14.37548542022705
    9. '```' → logprob: -14.75048542022705
    10. ' ' → logprob: -14.87548542022705

Token 517: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003802680876106024
    2. ' ' → logprob: -7.875380039215088
    3. '   ' → logprob: -16.50037956237793
    4. '           ' → logprob: -18.50037956237793
    5. '       ' → logprob: -19.75037956237793
    6. ' ' → logprob: -21.00037956237793
    7. '
' → logprob: -21.62537956237793
    8. '  ' → logprob: -22.25037956237793
    9. ',' → logprob: -22.50037956237793
    10. '=' → logprob: -22.50037956237793

Token 518: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.717296517104842e-05
    2. ' ' → logprob: -10.000057220458984
    3. 'Mod' → logprob: -11.500057220458984
    4. 'Modulo' → logprob: -14.000057220458984
    5. '   ' → logprob: -14.875057220458984
    6. ' Mod' → logprob: -16.500057220458984
    7. '(Mod' → logprob: -16.500057220458984
    8. '           ' → logprob: -18.000057220458984
    9. 'free' → logprob: -18.000057220458984
    10. '  ' → logprob: -18.375057220458984

Token 519: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011617878044489771
    2. ' ,' → logprob: -9.250116348266602
    3. '   ' → logprob: -11.500116348266602
    4. ')' → logprob: -12.000116348266602
    5. ',
' → logprob: -13.375116348266602
    6. '       ' → logprob: -14.375116348266602
    7. '           ' → logprob: -14.875116348266602
    8. ' ' → logprob: -15.125116348266602
    9. '```' → logprob: -15.250116348266602
    10. '),' → logprob: -15.375116348266602

Token 520: ' blue' (ID: 9861)
  Prédit: ' blue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blue' → logprob: -0.3868728280067444
    2. 'blue' → logprob: -1.1368727684020996
    3. '            ' → logprob: -14.511873245239258
    4. '           ' → logprob: -14.636873245239258
    5. '               ' → logprob: -15.386873245239258
    6. ' ' → logprob: -16.261873245239258
    7. '                   ' → logprob: -16.261873245239258
    8. '                ' → logprob: -16.636873245239258
    9. '_blue' → logprob: -16.761873245239258
    10. '    ' → logprob: -16.761873245239258

Token 521: '_red' (ID: 61951)
  Prédit: '_red'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_red' → logprob: -0.1002294272184372
    2. '_blue' → logprob: -2.350229501724243
    3. '_green' → logprob: -11.100229263305664
    4. '_' → logprob: -12.725229263305664
    5. ' _' → logprob: -13.725229263305664
    6. '_black' → logprob: -13.975229263305664
    7. '_white' → logprob: -14.100229263305664
    8. '   ' → logprob: -15.725229263305664
    9. ')_' → logprob: -15.725229263305664
    10. '_rgb' → logprob: -15.850229263305664

Token 522: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -9.491498531133402e-06
    2. 'pair' → logprob: -11.625009536743164
    3. '_pairs' → logprob: -14.875009536743164
    4. '_p' → logprob: -16.000009536743164
    5. '_PAIR' → logprob: -17.500009536743164
    6. ' pair' → logprob: -17.750009536743164
    7. 'Pair' → logprob: -18.250009536743164
    8. '_' → logprob: -18.250009536743164
    9. ')_' → logprob: -18.750009536743164
    10. ' _' → logprob: -18.875009536743164

Token 523: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4315554201602936
    2. ',' → logprob: -1.0565553903579712
    3. '   ' → logprob: -6.181555271148682
    4. ')
' → logprob: -7.681555271148682
    5. '       ' → logprob: -8.80655574798584
    6. ' )' → logprob: -9.55655574798584
    7. ',)' → logprob: -10.05655574798584
    8. ' ,' → logprob: -11.05655574798584
    9. '),' → logprob: -11.30655574798584
    10. '           ' → logprob: -12.18155574798584

Token 524: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01347701158374548
    2. '       ' → logprob: -4.513476848602295
    3. ')' → logprob: -6.263476848602295
    4. '<|end|>' → logprob: -8.763477325439453
    5. '    
' → logprob: -9.513477325439453
    6. ' else' → logprob: -9.888477325439453
    7. '
' → logprob: -9.888477325439453
    8. 'elif' → logprob: -10.138477325439453
    9. 'else' → logprob: -10.263477325439453
    10. ',' → logprob: -10.888477325439453

Token 525: ' elif' (ID: 9497)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008728026412427425
    2. ' else' → logprob: -5.38372802734375
    3. 'else' → logprob: -6.13372802734375
    4. '
' → logprob: -7.50872802734375
    5. '    
' → logprob: -7.75872802734375
    6. 'elif' (adapté à ' elif') → logprob: -7.75872802734375
    7. ' elif' → logprob: -8.38372802734375
    8. ' if' → logprob: -9.88372802734375
    9. '       ' → logprob: -10.00872802734375
    10. ')' → logprob: -10.38372802734375

Token 526: ' green' (ID: 8851)
  Prédit: ' blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blue' → logprob: -0.6702420711517334
    2. ' free' → logprob: -1.4202420711517334
    3. 'blue' → logprob: -2.0452420711517334
    4. 'free' → logprob: -2.6702420711517334
    5. ' red' → logprob: -3.1702420711517334
    6. 'red' → logprob: -5.4202423095703125
    7. '   ' → logprob: -7.6702423095703125
    8. ' green' → logprob: -7.7952423095703125
    9. ' ball' → logprob: -8.295242309570312
    10. 'ball' → logprob: -8.295242309570312

Token 527: '_person' (ID: 53205)
  Prédit: '_blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_blue' → logprob: -0.05042709782719612
    2. '_person' → logprob: -3.050427198410034
    3. '_green' → logprob: -6.425426959991455
    4. '_pair' → logprob: -9.425427436828613
    5. '_white' → logprob: -9.800427436828613
    6. '_people' → logprob: -10.425427436828613
    7. '_' → logprob: -11.675427436828613
    8. '_color' → logprob: -12.050427436828613
    9. 'person' → logprob: -12.300427436828613
    10. '_red' → logprob: -12.300427436828613

Token 528: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06342712789773941
    2. ':
' → logprob: -3.188427209854126
    3. '>' → logprob: -4.938426971435547
    4. ' >' → logprob: -5.313426971435547
    5. '<|end|>' → logprob: -5.438426971435547
    6. '==' → logprob: -7.313426971435547
    7. ' and' → logprob: -7.563426971435547
    8. ',' → logprob: -7.813426971435547
    9. ' ==' → logprob: -7.938426971435547
    10. '       ' → logprob: -8.063426971435547

Token 529: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006688972003757954
    2. ':' → logprob: -5.631689071655273
    3. '       ' → logprob: -6.506689071655273
    4. ':
' → logprob: -6.881689071655273
    5. ',' → logprob: -9.631689071655273
    6. '<|end|>' → logprob: -9.631689071655273
    7. ' return' → logprob: -9.756689071655273
    8. '          ' → logprob: -9.756689071655273
    9. '	       ' → logprob: -10.006689071655273
    10. '```' → logprob: -10.381689071655273

Token 530: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.04920366406440735
    2. 'return' (adapté à ' return') → logprob: -3.049203634262085
    3. '       ' → logprob: -7.549203872680664
    4. '           ' → logprob: -9.924203872680664
    5. '(' → logprob: -10.799203872680664
    6. ' (' → logprob: -11.049203872680664
    7. '(return' → logprob: -13.049203872680664
    8. '	return' → logprob: -14.549203872680664
    9. '```' → logprob: -15.174203872680664
    10. ':return' → logprob: -15.299203872680664

Token 531: ' (' (ID: 350)
  Prédit: '(acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.0010063735535368323
    2. ' (' → logprob: -7.001006603240967
    3. '(' → logprob: -9.501006126403809
    4. '   ' → logprob: -10.876006126403809
    5. ' ' → logprob: -14.751006126403809
    6. '  ' → logprob: -15.751006126403809
    7. '(
' → logprob: -16.126007080078125
    8. '(ac' → logprob: -16.126007080078125
    9. 'acc' → logprob: -16.876007080078125
    10. '(abs' → logprob: -16.876007080078125

Token 532: 'acc' (ID: 3717)
  Prédit: 'acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.023262951523065567
    2. '(acc' → logprob: -3.7732629776000977
    3. ' accumulator' → logprob: -11.148262977600098
    4. '(' → logprob: -13.523262977600098
    5. '(
' → logprob: -14.773262977600098
    6. '	acc' → logprob: -15.023262977600098
    7. 'Accumulator' → logprob: -15.023262977600098
    8. ' (' → logprob: -15.273262977600098
    9. '   ' → logprob: -16.27326202392578
    10. ')' → logprob: -16.64826202392578

Token 533: 'umulator' (ID: 90989)
  Prédit: 'umulator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulator' → logprob: -0.0003597760514821857
    2. 'ulator' → logprob: -8.250359535217285
    3. 'um' → logprob: -10.000359535217285
    4. 'acc' → logprob: -11.375359535217285
    5. 'umul' → logprob: -11.750359535217285
    6. 'om' → logprob: -11.875359535217285
    7. 'free' → logprob: -12.375359535217285
    8. '(acc' → logprob: -12.625359535217285
    9. 'umulative' → logprob: -12.750359535217285
    10. 'umulate' → logprob: -13.000359535217285

Token 534: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -4.36574100604048e-06
    2. 'result' → logprob: -12.375004768371582
    3. '   ' → logprob: -18.500003814697266
    4. 'Result' → logprob: -18.625003814697266
    5. '_RESULT' → logprob: -18.875003814697266
    6. ' result' → logprob: -19.125003814697266
    7. '_results' → logprob: -19.375003814697266
    8. '
' → logprob: -20.250003814697266
    9. '	result' → logprob: -20.625003814697266
    10. '_code' → logprob: -21.125003814697266

Token 535: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.05887681245803833
    2. '*' → logprob: -2.9338767528533936
    3. ',' → logprob: -5.558876991271973
    4. ' ,' → logprob: -9.933876991271973
    5. ' ' → logprob: -11.058876991271973
    6. '*,' → logprob: -11.058876991271973
    7. ',
' → logprob: -11.433876991271973
    8. '   ' → logprob: -11.683876991271973
    9. ')' → logprob: -12.308876991271973
    10. 'def' → logprob: -12.433876991271973

Token 536: ' green' (ID: 8851)
  Prédit: 'green'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'green' → logprob: -0.02780681662261486
    2. ' green' → logprob: -3.6528067588806152
    3. 'free' → logprob: -7.277806758880615
    4. 'red' → logprob: -7.652806758880615
    5. '(' → logprob: -9.027807235717773
    6. 'blue' → logprob: -10.027807235717773
    7. ' red' → logprob: -10.527807235717773
    8. '   ' → logprob: -10.777807235717773
    9. '(red' → logprob: -10.777807235717773
    10. '(Mod' → logprob: -10.777807235717773

Token 537: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -5.319370302458992e-06
    2. '_green' → logprob: -12.750005722045898
    3. 'person' → logprob: -13.375005722045898
    4. '1' → logprob: -16.0000057220459
    5. '(person' → logprob: -16.1250057220459
    6. '
' → logprob: -16.1250057220459
    7. '_blue' → logprob: -16.6250057220459
    8. '_red' → logprob: -16.7500057220459
    9. '   ' → logprob: -16.8750057220459
    10. '_ball' → logprob: -17.2500057220459

Token 538: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002223056508228183
    2. '-' → logprob: -7.002223014831543
    3. ' -' → logprob: -7.502223014831543
    4. ' ,' → logprob: -8.377223014831543
    5. '           ' → logprob: -8.752223014831543
    6. '   ' → logprob: -9.127223014831543
    7. '       ' → logprob: -9.377223014831543
    8. ')' → logprob: -10.377223014831543
    9. ',
' → logprob: -10.752223014831543
    10. '),' → logprob: -11.127223014831543

Token 539: ' free' (ID: 2240)
  Prédit: 'free'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'free' → logprob: -0.17991670966148376
    2. ' free' → logprob: -1.8049167394638062
    3. '       ' → logprob: -10.554916381835938
    4. '           ' → logprob: -10.929916381835938
    5. '        ' → logprob: -10.929916381835938
    6. '0' → logprob: -11.179916381835938
    7. '          ' → logprob: -11.179916381835938
    8. '   ' → logprob: -11.304916381835938
    9. '         ' → logprob: -11.554916381835938
    10. '    ' → logprob: -11.679916381835938

Token 540: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -3.297462171758525e-05
    2. '_ball' → logprob: -11.000033378601074
    3. 'person' → logprob: -11.750033378601074
    4. '_type' → logprob: -13.500033378601074
    5. 'Person' → logprob: -13.625033378601074
    6. ')' → logprob: -13.625033378601074
    7. ',' → logprob: -14.375033378601074
    8. '_free' → logprob: -14.375033378601074
    9. '_PERSON' → logprob: -14.375033378601074
    10. '_' → logprob: -15.000033378601074

Token 541: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008333319565281272
    2. ' ,' → logprob: -7.625833511352539
    3. '           ' → logprob: -9.125833511352539
    4. '   ' → logprob: -9.500833511352539
    5. '-' → logprob: -10.000833511352539
    6. '       ' → logprob: -10.125833511352539
    7. '+' → logprob: -11.000833511352539
    8. ' -' → logprob: -11.000833511352539
    9. ')' → logprob: -11.375833511352539
    10. ' +' → logprob: -12.125833511352539

Token 542: ' red' (ID: 3592)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.14274811744689941
    2. ' red' → logprob: -2.0177481174468994
    3. '   ' → logprob: -10.64274787902832
    4. '0' → logprob: -11.64274787902832
    5. '           ' → logprob: -11.89274787902832
    6. '       ' → logprob: -12.14274787902832
    7. '  ' → logprob: -12.39274787902832
    8. ' ' → logprob: -12.51774787902832
    9. '               ' → logprob: -12.64274787902832
    10. '         ' → logprob: -13.26774787902832

Token 543: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -0.00010962257510982454
    2. 'person' → logprob: -9.375109672546387
    3. '_ball' → logprob: -12.250109672546387
    4. '   ' → logprob: -12.375109672546387
    5. '_green' → logprob: -13.000109672546387
    6. ',' → logprob: -13.250109672546387
    7. '_free' → logprob: -13.250109672546387
    8. 'free' → logprob: -14.000109672546387
    9. '_type' → logprob: -14.000109672546387
    10. 'Person' → logprob: -14.000109672546387

Token 544: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003184959525242448
    2. ' ,' → logprob: -6.128184795379639
    3. '   ' → logprob: -7.503184795379639
    4. ' +' → logprob: -8.753185272216797
    5. '       ' → logprob: -9.003185272216797
    6. '+' → logprob: -9.378185272216797
    7. ',
' → logprob: -10.378185272216797
    8. '           ' → logprob: -11.253185272216797
    9. ' -' → logprob: -11.628185272216797
    10. '-' → logprob: -11.878185272216797

Token 545: ' green' (ID: 8851)
  Prédit: 'green'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'green' → logprob: -0.07921130955219269
    2. ' green' → logprob: -2.5792112350463867
    3. 'blue' → logprob: -8.454211235046387
    4. '   ' → logprob: -10.579211235046387
    5. ' blue' → logprob: -10.704211235046387
    6. '           ' → logprob: -11.079211235046387
    7. '       ' → logprob: -11.329211235046387
    8. '0' → logprob: -11.454211235046387
    9. ' ' → logprob: -12.704211235046387
    10. '     ' → logprob: -12.829211235046387

Token 546: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -0.0001749351795297116
    2. 'person' → logprob: -8.750174522399902
    3. '   ' → logprob: -12.500174522399902
    4. 'free' → logprob: -12.750174522399902
    5. 'green' → logprob: -13.375174522399902
    6. '_green' → logprob: -13.500174522399902
    7. '_free' → logprob: -13.875174522399902
    8. 'Person' → logprob: -14.125174522399902
    9. '_PERSON' → logprob: -14.250174522399902
    10. '
' → logprob: -14.625174522399902

Token 547: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3376822769641876
    2. ' -' → logprob: -1.8376822471618652
    3. '-' → logprob: -2.0876822471618652
    4. ' ,' → logprob: -6.337682247161865
    5. '   ' → logprob: -6.837682247161865
    6. '       ' → logprob: -8.712682723999023
    7. '           ' → logprob: -9.087682723999023
    8. ' ' → logprob: -9.212682723999023
    9. '```' → logprob: -10.587682723999023
    10. ' +' → logprob: -10.587682723999023

Token 548: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023214559769257903
    2. ' ' → logprob: -8.375231742858887
    3. '           ' → logprob: -14.000231742858887
    4. '   ' → logprob: -14.625231742858887
    5. '       ' → logprob: -15.625231742858887
    6. '                   ' → logprob: -17.000232696533203
    7. ',' → logprob: -17.000232696533203
    8. '               ' → logprob: -17.250232696533203
    9. ' ' → logprob: -18.750232696533203
    10. '         ' → logprob: -18.750232696533203

Token 549: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '   ' → logprob: -17.750003814697266
    4. '
' → logprob: -20.625003814697266
    5. '```' → logprob: -20.625003814697266
    6. '       ' → logprob: -20.875003814697266
    7. '           ' → logprob: -21.000003814697266
    8. '  ' → logprob: -21.875003814697266
    9. ',' → logprob: -22.250003814697266
    10. '１' → logprob: -22.625003814697266

Token 550: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014823723176959902
    2. ' ,' → logprob: -9.000147819519043
    3. ',
' → logprob: -11.500147819519043
    4. '       ' → logprob: -12.125147819519043
    5. '   ' → logprob: -12.500147819519043
    6. ')' → logprob: -13.500147819519043
    7. '),' → logprob: -13.625147819519043
    8. '           ' → logprob: -13.875147819519043
    9. '```' → logprob: -14.000147819519043
    10. ' ' → logprob: -15.875147819519043

Token 551: ' blue' (ID: 9861)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.3869265615940094
    2. ' blue' → logprob: -1.136926531791687
    3. '           ' → logprob: -10.636926651000977
    4. '            ' → logprob: -11.511926651000977
    5. '        ' → logprob: -12.511926651000977
    6. '       ' → logprob: -12.636926651000977
    7. '               ' → logprob: -12.636926651000977
    8. '   ' → logprob: -13.136926651000977
    9. ' ' → logprob: -13.386926651000977
    10. '    ' → logprob: -13.386926651000977

Token 552: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -3.7697225252486533e-06
    2. 'person' → logprob: -13.000003814697266
    3. '   ' → logprob: -14.000003814697266
    4. '_PERSON' → logprob: -16.125003814697266
    5. ',' → logprob: -16.375003814697266
    6. '_p' → logprob: -16.500003814697266
    7. 'Person' → logprob: -16.500003814697266
    8. '```' → logprob: -16.875003814697266
    9. '
' → logprob: -17.000003814697266
    10. '_user' → logprob: -17.000003814697266

Token 553: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014978687977418303
    2. ' ,' → logprob: -9.125149726867676
    3. ',
' → logprob: -11.125149726867676
    4. '       ' → logprob: -11.500149726867676
    5. '   ' → logprob: -11.625149726867676
    6. ')' → logprob: -13.125149726867676
    7. '           ' → logprob: -13.250149726867676
    8. '```' → logprob: -14.375149726867676
    9. 'def' → logprob: -14.625149726867676
    10. ' ' → logprob: -14.750149726867676

Token 554: ' red' (ID: 3592)
  Prédit: ' red'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' red' → logprob: -0.5759425163269043
    2. 'red' → logprob: -0.8259425163269043
    3. '           ' → logprob: -14.075942993164062
    4. ' ' → logprob: -14.450942993164062
    5. '       ' → logprob: -14.825942993164062
    6. '   ' → logprob: -14.950942993164062
    7. '     ' → logprob: -15.575942993164062
    8. '         ' → logprob: -15.700942993164062
    9. '    ' → logprob: -15.950942993164062
    10. '  ' → logprob: -15.950942993164062

Token 555: '_green' (ID: 113714)
  Prédit: '_green'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_green' → logprob: -1.5570885807392187e-05
    2. 'green' → logprob: -12.125015258789062
    3. '_red' → logprob: -12.375015258789062
    4. '_blue' → logprob: -12.500015258789062
    5. '_free' → logprob: -14.000015258789062
    6. '_person' → logprob: -14.250015258789062
    7. ' green' → logprob: -15.500015258789062
    8. '-green' → logprob: -15.500015258789062
    9. '_GREEN' → logprob: -15.750015258789062
    10. 'Green' → logprob: -16.625015258789062

Token 556: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -6.76628842484206e-05
    2. 'pair' → logprob: -9.625067710876465
    3. '_pairs' → logprob: -14.125067710876465
    4. '   ' → logprob: -15.875067710876465
    5. ' pair' → logprob: -15.875067710876465
    6. 'Pair' → logprob: -15.875067710876465
    7. '_PAIR' → logprob: -16.00006675720215
    8. '_person' → logprob: -16.62506675720215
    9. '
' → logprob: -16.75006675720215
    10. '_p' → logprob: -17.37506675720215

Token 557: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006894402904435992
    2. ' ,' → logprob: -7.375689506530762
    3. '   ' → logprob: -10.750689506530762
    4. ',
' → logprob: -11.000689506530762
    5. '+' → logprob: -11.625689506530762
    6. ' +' → logprob: -12.000689506530762
    7. ' ' → logprob: -13.375689506530762
    8. '       ' → logprob: -13.750689506530762
    9. ')' → logprob: -13.875689506530762
    10. '  ' → logprob: -14.000689506530762

Token 558: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013357169227674603
    2. ' ' → logprob: -6.626335620880127
    3. '0' → logprob: -11.626336097717285
    4. '   ' → logprob: -14.501336097717285
    5. '           ' → logprob: -16.12633514404297
    6. 'free' → logprob: -16.50133514404297
    7. ' free' → logprob: -17.00133514404297
    8. ' red' → logprob: -17.25133514404297
    9. '       ' → logprob: -17.25133514404297
    10. '  ' → logprob: -18.00133514404297

Token 559: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000333320174831897
    2. ' ' → logprob: -8.250333786010742
    3. '0' → logprob: -9.875333786010742
    4. 'free' → logprob: -11.125333786010742
    5. 'blue' → logprob: -13.250333786010742
    6. 'green' → logprob: -14.000333786010742
    7. '   ' → logprob: -14.125333786010742
    8. 'red' → logprob: -14.375333786010742
    9. ' free' → logprob: -14.750333786010742
    10. '(' → logprob: -15.125333786010742

Token 560: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002019907406065613
    2. ' ,' → logprob: -8.875202178955078
    3. ',
' → logprob: -9.875202178955078
    4. '   ' → logprob: -12.125202178955078
    5. ')' → logprob: -13.875202178955078
    6. '	' → logprob: -14.000202178955078
    7. '       ' → logprob: -14.500202178955078
    8. 'free' → logprob: -14.750202178955078
    9. ',

' → logprob: -15.000202178955078
    10. '```' → logprob: -15.250202178955078

Token 561: ' green' (ID: 8851)
  Prédit: 'green'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'green' → logprob: -0.02975071594119072
    2. ' green' → logprob: -3.5297508239746094
    3. '_green' → logprob: -15.65475082397461
    4. '   ' → logprob: -16.77975082397461
    5. '.green' → logprob: -17.65475082397461
    6. 'free' → logprob: -17.77975082397461
    7. ' ' → logprob: -18.15475082397461
    8. '0' → logprob: -18.77975082397461
    9. '       ' → logprob: -18.90475082397461
    10. 'Green' → logprob: -19.15475082397461

Token 562: '_blue' (ID: 81479)
  Prédit: '_blue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_blue' → logprob: -7.465036105713807e-06
    2. 'blue' → logprob: -12.500007629394531
    3. '_green' → logprob: -13.125007629394531
    4. '_BLUE' → logprob: -15.000007629394531
    5. '
' → logprob: -15.625007629394531
    6. 'Blue' → logprob: -15.750007629394531
    7. '_white' → logprob: -15.875007629394531
    8. ' blue' → logprob: -16.00000762939453
    9. '```' → logprob: -16.25000762939453
    10. '_' → logprob: -16.37500762939453

Token 563: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -2.963691804325208e-05
    2. 'pair' → logprob: -10.500029563903809
    3. ' pair' → logprob: -13.625029563903809
    4. '   ' → logprob: -15.375029563903809
    5. '_pairs' → logprob: -15.750029563903809
    6. '_' → logprob: -16.000030517578125
    7. 'Pair' → logprob: -16.500030517578125
    8. ' ' → logprob: -17.000030517578125
    9. ' _' → logprob: -17.250030517578125
    10. '-' → logprob: -17.375030517578125

Token 564: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.684157026233152e-05
    2. ' ,' → logprob: -9.625077247619629
    3. ',
' → logprob: -12.125077247619629
    4. '   ' → logprob: -12.500077247619629
    5. ')' → logprob: -14.625077247619629
    6. '       ' → logprob: -15.000077247619629
    7. ' ' → logprob: -15.500077247619629
    8. '	' → logprob: -16.000076293945312
    9. '),' → logprob: -16.375076293945312
    10. '  ' → logprob: -16.375076293945312

Token 565: ' blue' (ID: 9861)
  Prédit: ' blue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blue' → logprob: -0.10030727088451385
    2. 'blue' → logprob: -2.3503072261810303
    3. ' green' → logprob: -9.35030746459961
    4. 'green' → logprob: -11.72530746459961
    5. '            ' → logprob: -13.60030746459961
    6. ' ' → logprob: -13.85030746459961
    7. '    ' → logprob: -13.85030746459961
    8. '           ' → logprob: -14.35030746459961
    9. '   ' → logprob: -14.85030746459961
    10. '        ' → logprob: -14.85030746459961

Token 566: '_red' (ID: 61951)
  Prédit: '_red'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_red' → logprob: -0.0007081442163325846
    2. '_blue' → logprob: -7.375708103179932
    3. 'red' → logprob: -9.50070858001709
    4. ' red' → logprob: -12.75070858001709
    5. '_pair' → logprob: -13.62570858001709
    6. 'blue' → logprob: -14.37570858001709
    7. '_person' → logprob: -15.00070858001709
    8. '_right' → logprob: -15.12570858001709
    9. '_black' → logprob: -15.12570858001709
    10. 'Red' → logprob: -15.25070858001709

Token 567: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -0.004085524007678032
    2. 'pair' → logprob: -5.504085540771484
    3. 'Pair' → logprob: -12.004085540771484
    4. '_person' → logprob: -14.754085540771484
    5. '_pairs' → logprob: -14.879085540771484
    6. ' pair' → logprob: -16.004085540771484
    7. 'PAIR' → logprob: -17.879085540771484
    8. '_PAIR' → logprob: -18.129085540771484
    9. 'person' → logprob: -18.379085540771484
    10. '   ' → logprob: -19.129085540771484

Token 568: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6209763288497925
    2. '       ' → logprob: -1.1209763288497925
    3. ')
' → logprob: -1.9959763288497925
    4. '   ' → logprob: -7.870976448059082
    5. ',' → logprob: -8.370976448059082
    6. ')
' → logprob: -9.870976448059082
    7. ' )' → logprob: -10.370976448059082
    8. ' )
' → logprob: -11.120976448059082
    9. '           ' → logprob: -12.120976448059082
    10. ')`
' → logprob: -12.745976448059082

Token 569: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003383391536772251
    2. '<|end|>' → logprob: -6.128383159637451
    3. '   ' → logprob: -7.878383159637451
    4. ')' → logprob: -8.37838363647461
    5. ' else' → logprob: -8.87838363647461
    6. ',' → logprob: -8.87838363647461
    7. 'else' → logprob: -9.00338363647461
    8. 'elif' → logprob: -9.62838363647461
    9. '        
' → logprob: -10.37838363647461
    10. '<|end|>' → logprob: -10.75338363647461

Token 570: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6068599820137024
    2. ' else' → logprob: -1.3568599224090576
    3. 'else' → logprob: -1.8568599224090576
    4. 'elif' (adapté à ' elif') → logprob: -3.8568599224090576
    5. '   ' → logprob: -4.231860160827637
    6. ' elif' → logprob: -5.356860160827637
    7. ',' → logprob: -8.106860160827637
    8. '	else' → logprob: -8.731860160827637
    9. '	elif' → logprob: -9.106860160827637
    10. ',
' → logprob: -9.981860160827637

Token 571: ' blue' (ID: 9861)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.21452835202217102
    2. ' blue' → logprob: -1.9645283222198486
    3. 'free' → logprob: -3.0895283222198486
    4. ' free' → logprob: -5.089528560638428
    5. 'red' → logprob: -7.589528560638428
    6. ' red' → logprob: -8.21452808380127
    7. 'green' → logprob: -8.71452808380127
    8. '   ' → logprob: -9.33952808380127
    9. ' ' → logprob: -9.83952808380127
    10. ' green' → logprob: -10.33952808380127

Token 572: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -5.5577775128767826e-06
    2. 'person' → logprob: -12.500005722045898
    3. '_PERSON' → logprob: -14.250005722045898
    4. 'Person' → logprob: -15.125005722045898
    5. '   ' → logprob: -15.750005722045898
    6. '_present' → logprob: -16.3750057220459
    7. '```' → logprob: -16.5000057220459
    8. '_people' → logprob: -16.7500057220459
    9. '_user' → logprob: -16.8750057220459
    10. '_p' → logprob: -17.1250057220459

Token 573: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23903970420360565
    2. ':
' → logprob: -1.739039659500122
    3. ',' → logprob: -3.364039659500122
    4. '):
' → logprob: -7.489039897918701
    5. '           ' → logprob: -7.614039897918701
    6. '       ' → logprob: -7.989039897918701
    7. '>' → logprob: -8.239039421081543
    8. ',
' → logprob: -8.364039421081543
    9. '<|end|>' → logprob: -9.864039421081543
    10. '   ' → logprob: -9.989039421081543

Token 574: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45883768796920776
    2. '           ' → logprob: -1.0838377475738525
    3. ' return' → logprob: -3.8338377475738525
    4. 'return' → logprob: -4.833837509155273
    5. '```' → logprob: -10.458837509155273
    6. '   ' → logprob: -10.958837509155273
    7. '(' → logprob: -11.583837509155273
    8. '               ' → logprob: -11.583837509155273
    9. ':return' → logprob: -11.833837509155273
    10. '	       ' → logprob: -12.333837509155273

Token 575: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5131028294563293
    2. ' return' → logprob: -1.0131027698516846
    3. '       ' → logprob: -3.2631027698516846
    4. '           ' → logprob: -12.888102531433105
    5. '	return' → logprob: -14.263102531433105
    6. '(' → logprob: -14.763102531433105
    7. '   ' → logprob: -14.888102531433105
    8. '(return' → logprob: -15.263102531433105
    9. ' ' → logprob: -15.888102531433105
    10. ' (' → logprob: -16.513103485107422

Token 576: ' (' (ID: 350)
  Prédit: '(acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.029780574142932892
    2. ' (' → logprob: -3.529780626296997
    3. '(' → logprob: -10.529780387878418
    4. '   ' → logprob: -13.029780387878418
    5. ' ' → logprob: -14.904780387878418
    6. '  ' → logprob: -15.654780387878418
    7. '(ans' → logprob: -16.029781341552734
    8. '(
' → logprob: -16.654781341552734
    9. '(update' → logprob: -16.779781341552734
    10. 'acc' → logprob: -16.779781341552734

Token 577: 'acc' (ID: 3717)
  Prédit: 'acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.01820414699614048
    2. '(acc' → logprob: -4.018204212188721
    3. ' accumulator' → logprob: -10.268203735351562
    4. 'Accumulator' → logprob: -12.518203735351562
    5. '   ' → logprob: -12.768203735351562
    6. '(
' → logprob: -12.893203735351562
    7. '	acc' → logprob: -12.893203735351562
    8. '(' → logprob: -13.018203735351562
    9. ' (' → logprob: -13.393203735351562
    10. '_acc' → logprob: -14.018203735351562

Token 578: 'umulator' (ID: 90989)
  Prédit: 'umulator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulator' → logprob: -0.0023938443046063185
    2. 'ulator' → logprob: -6.25239372253418
    3. 'um' → logprob: -8.75239372253418
    4. 'acc' → logprob: -9.37739372253418
    5. 'umul' → logprob: -10.25239372253418
    6. 'umerator' → logprob: -10.37739372253418
    7. 'mul' → logprob: -10.75239372253418
    8. 'mult' → logprob: -10.87739372253418
    9. 'umu' → logprob: -10.87739372253418
    10. 'ulum' → logprob: -11.00239372253418

Token 579: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.0007101670489646494
    2. 'result' → logprob: -7.2507100105285645
    3. 'Result' → logprob: -16.500709533691406
    4. '   ' → logprob: -16.875709533691406
    5. '*' → logprob: -17.875709533691406
    6. '
' → logprob: -18.125709533691406
    7. '           ' → logprob: -18.375709533691406
    8. 'free' → logprob: -18.375709533691406
    9. '_results' → logprob: -18.500709533691406
    10. ' result' → logprob: -19.125709533691406

Token 580: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.018152287229895592
    2. '*' → logprob: -4.018152236938477
    3. ' ' → logprob: -14.018152236938477
    4. ')' → logprob: -14.018152236938477
    5. ' ' → logprob: -14.768152236938477
    6. ',' → logprob: -15.768152236938477
    7. '=' → logprob: -16.268152236938477
    8. '+' → logprob: -17.018152236938477
    9. '   ' → logprob: -17.143152236938477
    10. ' +' → logprob: -17.393152236938477

Token 581: ' blue' (ID: 9861)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.12710459530353546
    2. ' blue' → logprob: -2.1271045207977295
    3. 'free' → logprob: -9.502104759216309
    4. ' ' → logprob: -10.002104759216309
    5. '   ' → logprob: -10.627104759216309
    6. ' free' → logprob: -11.127104759216309
    7. '  ' → logprob: -12.502104759216309
    8. '(' → logprob: -13.127104759216309
    9. '.blue' → logprob: -13.502104759216309
    10. '    ' → logprob: -13.689604759216309

Token 582: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -1.3856492842023727e-06
    2. 'person' → logprob: -13.625000953674316
    3. '_PERSON' → logprob: -16.375001907348633
    4. 'Person' → logprob: -17.625001907348633
    5. '_user' → logprob: -18.500001907348633
    6. 'PERSON' → logprob: -18.625001907348633
    7. '_blue' → logprob: -18.875001907348633
    8. '_people' → logprob: -18.875001907348633
    9. '_p' → logprob: -19.125001907348633
    10. '```' → logprob: -19.125001907348633

Token 583: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.6060808522743173e-05
    2. ' ,' → logprob: -11.125025749206543
    3. '   ' → logprob: -12.250025749206543
    4. '       ' → logprob: -13.125025749206543
    5. ',
' → logprob: -13.125025749206543
    6. ')' → logprob: -14.375025749206543
    7. '           ' → logprob: -14.500025749206543
    8. ' free' → logprob: -14.875025749206543
    9. 'free' → logprob: -15.250025749206543
    10. '	' → logprob: -15.625025749206543

Token 584: ' free' (ID: 2240)
  Prédit: ' free'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' free' → logprob: -0.038042064756155014
    2. 'free' → logprob: -3.2880420684814453
    3. '        ' → logprob: -16.163042068481445
    4. '	free' → logprob: -16.163042068481445
    5. '.free' → logprob: -16.413042068481445
    6. '_free' → logprob: -16.538042068481445
    7. '       ' → logprob: -16.538042068481445
    8. 'acc' → logprob: -16.913042068481445
    9. '           ' → logprob: -17.163042068481445
    10. 'f' → logprob: -17.288042068481445

Token 585: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -0.0007292322698049247
    2. 'person' → logprob: -7.250729084014893
    3. 'free' → logprob: -11.12572956085205
    4. ',' → logprob: -13.37572956085205
    5. 'Person' → logprob: -13.37572956085205
    6. '_free' → logprob: -14.62572956085205
    7. 'PERSON' → logprob: -15.37572956085205
    8. '_PERSON' → logprob: -15.62572956085205
    9. '   ' → logprob: -16.250728607177734
    10. '_type' → logprob: -16.375728607177734

Token 586: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001696902181720361
    2. ' ,' → logprob: -9.62516975402832
    3. '       ' → logprob: -9.87516975402832
    4. '   ' → logprob: -10.37516975402832
    5. '-' → logprob: -12.12516975402832
    6. '           ' → logprob: -12.37516975402832
    7. ',
' → logprob: -12.87516975402832
    8. ')' → logprob: -13.00016975402832
    9. ' ' → logprob: -13.75016975402832
    10. '  ' → logprob: -14.25016975402832

Token 587: ' red' (ID: 3592)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.008960453793406487
    2. 'free' → logprob: -4.883960247039795
    3. ' red' → logprob: -6.633960247039795
    4. ' free' → logprob: -11.758960723876953
    5. '       ' → logprob: -12.133960723876953
    6. '         ' → logprob: -12.258960723876953
    7. '        ' → logprob: -12.258960723876953
    8. '           ' → logprob: -12.383960723876953
    9. 'acc' → logprob: -12.758960723876953
    10. '          ' → logprob: -13.133960723876953

Token 588: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -9.253090865968261e-06
    2. 'person' → logprob: -11.625009536743164
    3. '_p' → logprob: -16.750009536743164
    4. '_PERSON' → logprob: -17.125009536743164
    5. '   ' → logprob: -17.500009536743164
    6. ',' → logprob: -18.000009536743164
    7. '_people' → logprob: -18.000009536743164
    8. 'Person' → logprob: -18.250009536743164
    9. ' _' → logprob: -18.625009536743164
    10. '_present' → logprob: -18.625009536743164

Token 589: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010835404973477125
    2. ' ,' → logprob: -7.1260833740234375
    3. ' -' → logprob: -9.251083374023438
    4. '   ' → logprob: -9.376083374023438
    5. '-' → logprob: -10.251083374023438
    6. '       ' → logprob: -10.376083374023438
    7. '           ' → logprob: -11.501083374023438
    8. ' ' → logprob: -12.251083374023438
    9. '  ' → logprob: -12.376083374023438
    10. ',
' → logprob: -12.751083374023438

Token 590: ' green' (ID: 8851)
  Prédit: 'green'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'green' → logprob: -0.3132745921611786
    2. ' green' → logprob: -1.313274621963501
    3. 'blue' → logprob: -12.813274383544922
    4. '   ' → logprob: -12.938274383544922
    5. 'free' → logprob: -13.313274383544922
    6. '       ' → logprob: -13.563274383544922
    7. ' blue' → logprob: -14.188274383544922
    8. '    ' → logprob: -14.313274383544922
    9. ' ' → logprob: -14.438274383544922
    10. '           ' → logprob: -14.688274383544922

Token 591: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -3.774276774493046e-05
    2. 'person' → logprob: -10.250038146972656
    3. '   ' → logprob: -13.875038146972656
    4. 'Person' → logprob: -15.125038146972656
    5. ',' → logprob: -15.250038146972656
    6. '_PERSON' → logprob: -15.625038146972656
    7. '           ' → logprob: -16.125038146972656
    8. '       ' → logprob: -16.750038146972656
    9. '	person' → logprob: -16.750038146972656
    10. '_people' → logprob: -17.375038146972656

Token 592: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003189832204952836
    2. ' ,' → logprob: -5.878190040588379
    3. '   ' → logprob: -8.003190040588379
    4. '       ' → logprob: -10.503190040588379
    5. ' ' → logprob: -12.003190040588379
    6. '  ' → logprob: -12.378190040588379
    7. '-' → logprob: -12.628190040588379
    8. '           ' → logprob: -12.753190040588379
    9. '    ' → logprob: -13.253190040588379
    10. ' -' → logprob: -13.628190040588379

Token 593: ' blue' (ID: 9861)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.048616886138916016
    2. ' blue' → logprob: -3.048616886138916
    3. '           ' → logprob: -12.048616409301758
    4. '   ' → logprob: -12.298616409301758
    5. '               ' → logprob: -12.673616409301758
    6. '                   ' → logprob: -12.798616409301758
    7. ' ' → logprob: -12.923616409301758
    8. '         ' → logprob: -13.673616409301758
    9. '     ' → logprob: -13.798616409301758
    10. '       ' → logprob: -13.798616409301758

Token 594: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -1.1472419600977446e-06
    2. 'person' → logprob: -14.000000953674316
    3. 'Person' → logprob: -16.375001907348633
    4. '   ' → logprob: -17.500001907348633
    5. '_PERSON' → logprob: -17.500001907348633
    6. '-person' → logprob: -17.875001907348633
    7. '_user' → logprob: -18.625001907348633
    8. '_post' → logprob: -18.750001907348633
    9. '_present' → logprob: -18.750001907348633
    10. '_part' → logprob: -18.750001907348633

Token 595: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07890928536653519
    2. '-' → logprob: -2.578909397125244
    3. ' ' → logprob: -11.328908920288086
    4. '   ' → logprob: -12.953908920288086
    5. '           ' → logprob: -13.078908920288086
    6. ' ' → logprob: -13.953908920288086
    7. '    ' → logprob: -14.328908920288086
    8. '  ' → logprob: -14.953908920288086
    9. '       ' → logprob: -15.453908920288086
    10. '        ' → logprob: -16.203908920288086

Token 596: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012594614236149937
    2. ' ' → logprob: -9.000125885009766
    3. '   ' → logprob: -13.000125885009766
    4. '       ' → logprob: -15.875125885009766
    5. '           ' → logprob: -17.000125885009766
    6. '  ' → logprob: -18.500125885009766
    7. '-' → logprob: -18.500125885009766
    8. '	' → logprob: -18.750125885009766
    9. '    ' → logprob: -18.750125885009766
    10. '<|end|>' → logprob: -19.125125885009766

Token 597: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -11.625009536743164
    3. '   ' → logprob: -16.500009536743164
    4. '           ' → logprob: -17.500009536743164
    5. '       ' → logprob: -17.875009536743164
    6. '```' → logprob: -18.125009536743164
    7. '-' → logprob: -19.562509536743164
    8. '  ' → logprob: -20.187509536743164
    9. '<|end|>' → logprob: -20.187509536743164
    10. '...' → logprob: -20.250009536743164

Token 598: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011629798245849088
    2. ' ,' → logprob: -9.125116348266602
    3. ')' → logprob: -13.000116348266602
    4. '   ' → logprob: -13.250116348266602
    5. '       ' → logprob: -13.250116348266602
    6. '),' → logprob: -14.250116348266602
    7. '           ' → logprob: -15.875116348266602
    8. ' red' → logprob: -15.875116348266602
    9. ',
' → logprob: -16.0001163482666
    10. ' ' → logprob: -16.2501163482666

Token 599: ' red' (ID: 3592)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.011309295892715454
    2. ' red' → logprob: -4.5113091468811035
    3. '               ' → logprob: -9.511309623718262
    4. '           ' → logprob: -10.011309623718262
    5. '              ' → logprob: -10.636309623718262
    6. '                   ' → logprob: -11.011309623718262
    7. '             ' → logprob: -11.511309623718262
    8. ' ' → logprob: -11.511309623718262
    9. '          ' → logprob: -11.636309623718262
    10. '            ' → logprob: -11.761309623718262

Token 600: '_green' (ID: 113714)
  Prédit: '_green'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_green' → logprob: -8.566264295950532e-05
    2. '_red' → logprob: -9.750085830688477
    3. 'green' → logprob: -10.750085830688477
    4. '_blue' → logprob: -12.250085830688477
    5. '_GREEN' → logprob: -14.250085830688477
    6. ' green' → logprob: -15.250085830688477
    7. '_white' → logprob: -17.125085830688477
    8. 'Green' → logprob: -17.500085830688477
    9. '-green' → logprob: -17.625085830688477
    10. '_new' → logprob: -17.875085830688477

Token 601: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -0.00011391390580683947
    2. 'pair' → logprob: -9.125113487243652
    3. '_pairs' → logprob: -13.000113487243652
    4. '+' → logprob: -13.375113487243652
    5. ' +' → logprob: -15.125113487243652
    6. 'Pair' → logprob: -15.375113487243652
    7. '   ' → logprob: -15.750113487243652
    8. ' pair' → logprob: -15.750113487243652
    9. '_PAIR' → logprob: -15.875113487243652
    10. ',' → logprob: -16.00011444091797

Token 602: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19938543438911438
    2. '+' → logprob: -1.949385404586792
    3. ' +' → logprob: -3.324385404586792
    4. ' ,' → logprob: -6.449385643005371
    5. '   ' → logprob: -7.449385643005371
    6. ',
' → logprob: -9.574385643005371
    7. ' ' → logprob: -10.199385643005371
    8. '       ' → logprob: -10.324385643005371
    9. '  ' → logprob: -10.449385643005371
    10. '+,' → logprob: -10.699385643005371

Token 603: ' green' (ID: 8851)
  Prédit: 'green'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'green' → logprob: -0.008615042082965374
    2. ' green' → logprob: -4.758615016937256
    3. 'blue' → logprob: -16.008615493774414
    4. '
' → logprob: -16.508615493774414
    5. '   ' → logprob: -16.508615493774414
    6. '_green' → logprob: -16.508615493774414
    7. ' ' → logprob: -16.883615493774414
    8. 'free' → logprob: -17.133615493774414
    9. '.green' → logprob: -17.508615493774414
    10. '       ' → logprob: -18.258615493774414

Token 604: '_blue' (ID: 81479)
  Prédit: '_blue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_blue' → logprob: -1.0087516784551553e-05
    2. 'blue' → logprob: -11.62501049041748
    3. '_green' → logprob: -15.00001049041748
    4. '_white' → logprob: -15.62501049041748
    5. ' blue' → logprob: -15.87501049041748
    6. '_BLUE' → logprob: -16.375009536743164
    7. '_black' → logprob: -16.500009536743164
    8. '
' → logprob: -16.750009536743164
    9. '\' → logprob: -17.000009536743164
    10. '_eye' → logprob: -17.125009536743164

Token 605: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -0.00015943869948387146
    2. 'pair' → logprob: -8.75015926361084
    3. '_pairs' → logprob: -14.37515926361084
    4. ' pair' → logprob: -15.37515926361084
    5. 'Pair' → logprob: -16.125160217285156
    6. '_PAIR' → logprob: -18.125160217285156
    7. '
' → logprob: -19.125160217285156
    8. '_part' → logprob: -19.250160217285156
    9. '   ' → logprob: -19.250160217285156
    10. '(pair' → logprob: -19.750160217285156

Token 606: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001038287067785859
    2. ' ,' → logprob: -6.876038074493408
    3. ',
' → logprob: -13.001038551330566
    4. '   ' → logprob: -13.001038551330566
    5. '       ' → logprob: -15.501038551330566
    6. ' ' → logprob: -15.626038551330566
    7. '           ' → logprob: -15.751038551330566
    8. ' blue' → logprob: -16.00103759765625
    9. '  ' → logprob: -16.75103759765625
    10. '<|end|>' → logprob: -16.87603759765625

Token 607: ' blue' (ID: 9861)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.006727564614266157
    2. ' blue' → logprob: -5.006727695465088
    3. ' ' → logprob: -12.13172721862793
    4. '   ' → logprob: -12.50672721862793
    5. '       ' → logprob: -14.38172721862793
    6. '         ' → logprob: -14.50672721862793
    7. '     ' → logprob: -14.50672721862793
    8. '  ' → logprob: -14.75672721862793
    9. '    ' → logprob: -14.88172721862793
    10. '           ' → logprob: -15.13172721862793

Token 608: '_red' (ID: 61951)
  Prédit: '_red'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_red' → logprob: -2.8444881536415778e-05
    2. 'red' → logprob: -10.750028610229492
    3. '_pair' → logprob: -12.250028610229492
    4. '_blue' → logprob: -14.000028610229492
    5. ' red' → logprob: -14.250028610229492
    6. '_right' → logprob: -16.625028610229492
    7. '_ref' → logprob: -16.625028610229492
    8. '_res' → logprob: -16.750028610229492
    9. '_redirect' → logprob: -16.875028610229492
    10. 'Red' → logprob: -17.125028610229492

Token 609: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -0.00011343709047650918
    2. 'pair' → logprob: -9.125113487243652
    3. '_pairs' → logprob: -13.000113487243652
    4. 'Pair' → logprob: -13.125113487243652
    5. ' pair' → logprob: -17.125112533569336
    6. '_PAIR' → logprob: -17.250112533569336
    7. '_person' → logprob: -17.625112533569336
    8. 'PAIR' → logprob: -18.000112533569336
    9. '_red' → logprob: -18.625112533569336
    10. 'red' → logprob: -18.625112533569336

Token 610: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.025253424420952797
    2. ')
' → logprob: -4.1502532958984375
    3. ' +' → logprob: -5.7752532958984375
    4. '       ' → logprob: -5.7752532958984375
    5. '   ' → logprob: -6.5252532958984375
    6. '+' → logprob: -6.7752532958984375
    7. ' )' → logprob: -8.150253295898438
    8. ')
' → logprob: -10.400253295898438
    9. '           ' → logprob: -11.275253295898438
    10. ' )
' → logprob: -11.400253295898438

Token 611: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.848420551046729e-05
    2. ' ' → logprob: -9.7500581741333
    3. '   ' → logprob: -16.375059127807617
    4. '```' → logprob: -19.500059127807617
    5. '  ' → logprob: -20.500059127807617
    6. '
' → logprob: -20.750059127807617
    7. '0' → logprob: -21.375059127807617
    8. ')' → logprob: -21.875059127807617
    9. '    ' → logprob: -22.375059127807617
    10. '(' → logprob: -22.500059127807617

Token 612: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.9153885558771435e-06
    2. ' ' → logprob: -12.125005722045898
    3. '0' → logprob: -14.750005722045898
    4. '   ' → logprob: -17.2500057220459
    5. '```' → logprob: -17.8750057220459
    6. '(' → logprob: -18.8750057220459
    7. '-' → logprob: -19.7500057220459
    8. '`' → logprob: -20.0625057220459
    9. '+' → logprob: -20.1875057220459
    10. '  ' → logprob: -20.3125057220459

Token 613: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003169033909216523
    2. ')
' → logprob: -6.003169059753418
    3. '       ' → logprob: -7.753169059753418
    4. '   ' → logprob: -8.253169059753418
    5. ')
' → logprob: -13.378169059753418
    6. ')

' → logprob: -14.628169059753418
    7. ' )' → logprob: -14.878169059753418
    8. ')return' → logprob: -15.378169059753418
    9. ')\
' → logprob: -16.2531681060791
    10. '           ' → logprob: -16.3781681060791

Token 614: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15318891406059265
    2. '<|end|>' → logprob: -2.028188943862915
    3. '       ' → logprob: -5.028188705444336
    4. ')' → logprob: -6.153188705444336
    5. 'elif' → logprob: -7.778188705444336
    6. ' else' → logprob: -8.153188705444336
    7. '<|end|>' → logprob: -8.403188705444336
    8. '...' → logprob: -8.528188705444336
    9. 'else' → logprob: -8.653188705444336
    10. '\n' → logprob: -9.653188705444336

Token 615: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16563543677330017
    2. '   ' → logprob: -1.9156354665756226
    3. 'else' (adapté à ' else') → logprob: -5.290635585784912
    4. ' else' → logprob: -8.165635108947754
    5. ')' → logprob: -10.915635108947754
    6. 'elif' → logprob: -11.040635108947754
    7. '	else' → logprob: -11.540635108947754
    8. '
' → logprob: -12.040635108947754
    9. '    
' → logprob: -12.165635108947754
    10. '	' → logprob: -12.415635108947754

Token 616: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18578626215457916
    2. ':
' → logprob: -1.810786247253418
    3. '           ' → logprob: -5.810786247253418
    4. '       ' → logprob: -5.935786247253418
    5. ' :' → logprob: -8.935786247253418
    6. ':return' → logprob: -9.310786247253418
    7. ' :
' → logprob: -10.060786247253418
    8. '        ' → logprob: -10.685786247253418
    9. ',' → logprob: -10.935786247253418
    10. ':
' → logprob: -10.935786247253418

Token 617: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8036009669303894
    2. ' return' → logprob: -1.0536010265350342
    3. ' (' → logprob: -2.428601026535034
    4. '           ' → logprob: -2.678601026535034
    5. 'return' → logprob: -3.428601026535034
    6. '(' → logprob: -4.928600788116455
    7. ' free' → logprob: -6.053600788116455
    8. ' raise' → logprob: -6.053600788116455
    9. '        ' → logprob: -6.928600788116455
    10. 'raise' → logprob: -8.053601264953613

Token 618: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.01983589679002762
    2. ' return' → logprob: -4.019835948944092
    3. 'free' → logprob: -7.269835948944092
    4. 'raise' → logprob: -8.269835472106934
    5. 'acc' → logprob: -8.394835472106934
    6. '(acc' → logprob: -8.519835472106934
    7. '(' → logprob: -9.394835472106934
    8. 'if' → logprob: -9.894835472106934
    9. '(return' → logprob: -10.394835472106934
    10. '           ' → logprob: -10.519835472106934

Token 619: ' (' (ID: 350)
  Prédit: '(acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.024236056953668594
    2. ' (' → logprob: -3.774235963821411
    3. '(None' → logprob: -7.52423620223999
    4. '(' → logprob: -8.649235725402832
    5. '(input' → logprob: -9.649235725402832
    6. '(Mod' → logprob: -9.899235725402832
    7. 'acc' → logprob: -10.399235725402832
    8. '(False' → logprob: -10.399235725402832
    9. '(update' → logprob: -10.524235725402832
    10. '(True' → logprob: -11.024235725402832

Token 620: 'acc' (ID: 3717)
  Prédit: 'acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.00152009935118258
    2. '(acc' → logprob: -7.126520156860352
    3. '0' → logprob: -8.751520156860352
    4. 'Mod' → logprob: -9.001520156860352
    5. ' accumulator' → logprob: -9.001520156860352
    6. '   ' → logprob: -9.126520156860352
    7. 'Modulo' → logprob: -9.251520156860352
    8. 'Accumulator' → logprob: -11.126520156860352
    9. '(' → logprob: -11.376520156860352
    10. '(Mod' → logprob: -11.501520156860352

Token 621: 'umulator' (ID: 90989)
  Prédit: 'umulator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulator' → logprob: -0.0002523992152418941
    2. 'um' → logprob: -8.750252723693848
    3. 'umul' → logprob: -9.375252723693848
    4. 'ulator' → logprob: -12.625252723693848
    5. 'umu' → logprob: -12.875252723693848
    6. 'umulate' → logprob: -14.375252723693848
    7. 'umerator' → logprob: -14.750252723693848
    8. 'u' → logprob: -14.750252723693848
    9. 'ulum' → logprob: -15.000252723693848
    10. 'om' → logprob: -15.125252723693848

Token 622: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -3.130576806142926e-05
    2. 'result' → logprob: -10.375031471252441
    3. 'Result' → logprob: -17.625030517578125
    4. '_results' → logprob: -18.500030517578125
    5. '
' → logprob: -18.750030517578125
    6. ')' → logprob: -19.250030517578125
    7. '   ' → logprob: -19.250030517578125
    8. '_res' → logprob: -19.500030517578125
    9. '_' → logprob: -19.625030517578125
    10. '_RESULT' → logprob: -19.625030517578125

Token 623: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.31642863154411316
    2. '*' → logprob: -1.3164286613464355
    3. ',' → logprob: -5.8164286613464355
    4. '+' → logprob: -9.691428184509277
    5. ' +' → logprob: -10.316428184509277
    6. '*,' → logprob: -10.691428184509277
    7. ' ,' → logprob: -11.066428184509277
    8. ')' → logprob: -11.566428184509277
    9. ' ' → logprob: -11.691428184509277
    10. '   ' → logprob: -12.316428184509277

Token 624: ' free' (ID: 2240)
  Prédit: 'free'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'free' → logprob: -0.004243773873895407
    2. ' free' → logprob: -5.754243850708008
    3. '2' → logprob: -8.754243850708008
    4. '(f' → logprob: -8.754243850708008
    5. '(Mod' → logprob: -9.129243850708008
    6. 'red' → logprob: -9.254243850708008
    7. '0' → logprob: -9.379243850708008
    8. '   ' → logprob: -9.379243850708008
    9. '(M' → logprob: -9.754243850708008
    10. '(' → logprob: -10.004243850708008

Token 625: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -6.704273118884885e-07
    2. 'person' → logprob: -14.500000953674316
    3. 'Person' → logprob: -17.5
    4. '
' → logprob: -17.625
    5. '_PERSON' → logprob: -17.75
    6. '_' → logprob: -18.125
    7. '   ' → logprob: -18.375
    8. ' _' → logprob: -18.75
    9. '_p' → logprob: -19.25
    10. ')' → logprob: -19.375

Token 626: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02687026932835579
    2. '-' → logprob: -4.526870250701904
    3. ' -' → logprob: -4.526870250701904
    4. '+' → logprob: -6.151870250701904
    5. ' +' → logprob: -6.276870250701904
    6. ' ,' → logprob: -7.776870250701904
    7. '   ' → logprob: -9.026870727539062
    8. '       ' → logprob: -9.526870727539062
    9. ',
' → logprob: -9.526870727539062
    10. '           ' → logprob: -9.901870727539062

Token 627: ' free' (ID: 2240)
  Prédit: 'free'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'free' → logprob: -0.018255768343806267
    2. ' free' → logprob: -4.018255710601807
    3. '0' → logprob: -9.893256187438965
    4. 'acc' → logprob: -10.393256187438965
    5. '           ' → logprob: -11.893256187438965
    6. '   ' → logprob: -12.393256187438965
    7. '       ' → logprob: -13.143256187438965
    8. '          ' → logprob: -13.768256187438965
    9. 'fre' → logprob: -13.768256187438965
    10. ' ' → logprob: -14.018256187438965

Token 628: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -7.107425062713446e-06
    2. 'person' → logprob: -11.875006675720215
    3. '_PERSON' → logprob: -16.62500762939453
    4. 'Person' → logprob: -16.75000762939453
    5. ')' → logprob: -17.50000762939453
    6. '_user' → logprob: -18.25000762939453
    7. '```' → logprob: -18.75000762939453
    8. ')_' → logprob: -19.00000762939453
    9. '_' → logprob: -19.25000762939453
    10. '<Person' → logprob: -19.25000762939453

Token 629: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.05562496930360794
    2. '-' → logprob: -2.9306249618530273
    3. ',' → logprob: -7.305624961853027
    4. ' +' → logprob: -10.680624961853027
    5. '   ' → logprob: -11.055624961853027
    6. '+' → logprob: -11.430624961853027
    7. ' ' → logprob: -11.930624961853027
    8. ')' → logprob: -12.680624961853027
    9. ' ,' → logprob: -12.680624961853027
    10. '           ' → logprob: -13.555624961853027

Token 630: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00671809446066618
    2. ' ' → logprob: -5.006718158721924
    3. '   ' → logprob: -12.881717681884766
    4. '           ' → logprob: -16.131717681884766
    5. '       ' → logprob: -16.506717681884766
    6. '```' → logprob: -17.256717681884766
    7. '  ' → logprob: -18.006717681884766
    8. '    ' → logprob: -18.381717681884766
    9. '0' → logprob: -19.006717681884766
    10. ' ' → logprob: -19.131717681884766

Token 631: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7729658540920354e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -16.375028610229492
    4. 'Mod' → logprob: -16.750028610229492
    5. '(Mod' → logprob: -19.875028610229492
    6. '  ' → logprob: -20.125028610229492
    7. 'Modulo' → logprob: -20.375028610229492
    8. '           ' → logprob: -20.500028610229492
    9. '       ' → logprob: -20.875028610229492
    10. '```' → logprob: -20.875028610229492

Token 632: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021307668066583574
    2. ' ,' → logprob: -8.875212669372559
    3. ')' → logprob: -10.000212669372559
    4. '       ' → logprob: -11.500212669372559
    5. '   ' → logprob: -12.000212669372559
    6. ',
' → logprob: -12.250212669372559
    7. '),' → logprob: -13.625212669372559
    8. '           ' → logprob: -13.625212669372559
    9. '```' → logprob: -14.125212669372559
    10. ',None' → logprob: -14.875212669372559

Token 633: ' red' (ID: 3592)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.006715728435665369
    2. ' red' → logprob: -5.006715774536133
    3. '           ' → logprob: -15.756715774536133
    4. '0' → logprob: -17.006715774536133
    5. '         ' → logprob: -17.131715774536133
    6. '               ' → logprob: -17.381715774536133
    7. '          ' → logprob: -17.506715774536133
    8. '       ' → logprob: -17.631715774536133
    9. ' ' → logprob: -17.631715774536133
    10. '(red' → logprob: -17.881715774536133

Token 634: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -9.372294698550832e-06
    2. 'person' → logprob: -11.625009536743164
    3. '_PERSON' → logprob: -16.500009536743164
    4. '_red' → logprob: -16.625009536743164
    5. 'Person' → logprob: -16.875009536743164
    6. '_question' → logprob: -17.000009536743164
    7. '_p' → logprob: -17.375009536743164
    8. '_ball' → logprob: -17.750009536743164
    9. ' person' → logprob: -17.875009536743164
    10. '_type' → logprob: -18.000009536743164

Token 635: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00042447797022759914
    2. ' ,' → logprob: -7.875424385070801
    3. '+' → logprob: -11.3754243850708
    4. '   ' → logprob: -11.5004243850708
    5. '       ' → logprob: -11.7504243850708
    6. ',
' → logprob: -12.0004243850708
    7. ')' → logprob: -12.3754243850708
    8. ' +' → logprob: -13.7504243850708
    9. '),' → logprob: -13.8754243850708
    10. '```' → logprob: -14.3754243850708

Token 636: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004942946252413094
    2. ' ' → logprob: -7.625494480133057
    3. '0' → logprob: -12.000494003295898
    4. '   ' → logprob: -16.6254940032959
    5. ')' → logprob: -19.0004940032959
    6. ',' → logprob: -19.1254940032959
    7. '(' → logprob: -19.3754940032959
    8. '  ' → logprob: -19.8754940032959
    9. '+' → logprob: -20.2504940032959
    10. '    ' → logprob: -20.3754940032959

Token 637: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.8325677703833207e-05
    2. ' ' → logprob: -11.000028610229492
    3. '0' → logprob: -11.375028610229492
    4. '   ' → logprob: -16.500028610229492
    5. '```' → logprob: -17.875028610229492
    6. '(' → logprob: -18.375028610229492
    7. '2' → logprob: -18.375028610229492
    8. '           ' → logprob: -18.625028610229492
    9. '  ' → logprob: -19.437528610229492
    10. 'Mod' → logprob: -19.687528610229492

Token 638: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.659005157416686e-05
    2. ' ,' → logprob: -9.875066757202148
    3. ')' → logprob: -11.875066757202148
    4. ',
' → logprob: -12.625066757202148
    5. '   ' → logprob: -12.875066757202148
    6. '),' → logprob: -14.500066757202148
    7. '       ' → logprob: -14.750066757202148
    8. '<|end|>' → logprob: -15.125066757202148
    9. '```' → logprob: -15.125066757202148
    10. '           ' → logprob: -15.625066757202148

Token 639: ' green' (ID: 8851)
  Prédit: 'green'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'green' → logprob: -0.0485946387052536
    2. ' green' → logprob: -3.0485947132110596
    3. '   ' → logprob: -11.92359447479248
    4. ' ' → logprob: -15.67359447479248
    5. '       ' → logprob: -15.67359447479248
    6. '  ' → logprob: -16.673595428466797
    7. '    ' → logprob: -16.798595428466797
    8. 'blue' → logprob: -17.173595428466797
    9. '_green' → logprob: -17.173595428466797
    10. '           ' → logprob: -17.298595428466797

Token 640: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -3.531315314830863e-06
    2. '_user' → logprob: -13.625003814697266
    3. 'person' → logprob: -14.750003814697266
    4. ',' → logprob: -15.000003814697266
    5. '_p' → logprob: -15.125003814697266
    6. '```' → logprob: -15.500003814697266
    7. ' _' → logprob: -15.625003814697266
    8. '_present' → logprob: -16.000003814697266
    9. '_part' → logprob: -16.000003814697266
    10. '_' → logprob: -16.500003814697266

Token 641: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00026848804554902017
    2. ' ,' → logprob: -8.250268936157227
    3. ',
' → logprob: -12.500268936157227
    4. '   ' → logprob: -12.875268936157227
    5. ')' → logprob: -15.250268936157227
    6. '```' → logprob: -15.375268936157227
    7. '       ' → logprob: -15.875268936157227
    8. ',

' → logprob: -16.000268936157227
    9. '<|end|>' → logprob: -16.500268936157227
    10. ' ' → logprob: -16.875268936157227

Token 642: ' blue' (ID: 9861)
  Prédit: ' blue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blue' → logprob: -0.5759445428848267
    2. 'blue' → logprob: -0.8259445428848267
    3. ' ' → logprob: -13.325944900512695
    4. '   ' → logprob: -13.700944900512695
    5. 'Blue' → logprob: -14.450944900512695
    6. '_blue' → logprob: -14.700944900512695
    7. '    ' → logprob: -15.200944900512695
    8. '           ' → logprob: -16.075944900512695
    9. '  ' → logprob: -16.075944900512695
    10. 'green' → logprob: -16.200944900512695

Token 643: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -7.703443770878948e-06
    2. 'person' → logprob: -12.000007629394531
    3. '   ' → logprob: -14.375007629394531
    4. '```' → logprob: -15.875007629394531
    5. '_PERSON' → logprob: -16.00000762939453
    6. '_p' → logprob: -16.25000762939453
    7. '_user' → logprob: -16.37500762939453
    8. '_post' → logprob: -16.50000762939453
    9. '_program' → logprob: -17.50000762939453
    10. '
' → logprob: -17.62500762939453

Token 644: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002205828350270167
    2. ' ,' → logprob: -9.00022029876709
    3. ')' → logprob: -10.00022029876709
    4. '   ' → logprob: -10.62522029876709
    5. '       ' → logprob: -11.25022029876709
    6. ',
' → logprob: -11.87522029876709
    7. '           ' → logprob: -12.62522029876709
    8. '```' → logprob: -13.12522029876709
    9. 'else' → logprob: -15.12522029876709
    10. '),' → logprob: -15.37522029876709

Token 645: ' red' (ID: 3592)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.3868800103664398
    2. ' red' → logprob: -1.1368800401687622
    3. '           ' → logprob: -12.136879920959473
    4. '   ' → logprob: -13.636879920959473
    5. '       ' → logprob: -13.761879920959473
    6. ' ' → logprob: -14.886879920959473
    7. '         ' → logprob: -15.011879920959473
    8. '     ' → logprob: -15.511879920959473
    9. '    ' → logprob: -15.886879920959473
    10. '        ' → logprob: -16.01188087463379

Token 646: '_green' (ID: 113714)
  Prédit: '_green'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_green' → logprob: -0.00016337241686414927
    2. 'green' → logprob: -9.000163078308105
    3. '_blue' → logprob: -10.625163078308105
    4. '_red' → logprob: -11.625163078308105
    5. '_person' → logprob: -12.875163078308105
    6. '_GREEN' → logprob: -13.250163078308105
    7. ' green' → logprob: -13.750163078308105
    8. '_color' → logprob: -15.000163078308105
    9. '_free' → logprob: -15.250163078308105
    10. 'Green' → logprob: -15.500163078308105

Token 647: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -0.0004341261519584805
    2. 'pair' → logprob: -7.750433921813965
    3. '_pairs' → logprob: -13.000433921813965
    4. ' pair' → logprob: -14.500433921813965
    5. 'Pair' → logprob: -15.500433921813965
    6. '   ' → logprob: -15.500433921813965
    7. '+' → logprob: -16.25043487548828
    8. '_PAIR' → logprob: -16.37543487548828
    9. ',' → logprob: -17.12543487548828
    10. '_' → logprob: -17.37543487548828

Token 648: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014253562549129128
    2. ' ,' → logprob: -6.626425266265869
    3. '+' → logprob: -9.876425743103027
    4. '   ' → logprob: -11.126425743103027
    5. ' +' → logprob: -11.501425743103027
    6. ',
' → logprob: -11.751425743103027
    7. '       ' → logprob: -12.001425743103027
    8. ')' → logprob: -13.001425743103027
    9. '-' → logprob: -13.501425743103027
    10. '           ' → logprob: -13.626425743103027

Token 649: ' green' (ID: 8851)
  Prédit: 'green'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'green' → logprob: -0.25192955136299133
    2. ' green' → logprob: -1.501929521560669
    3. '   ' → logprob: -15.87692928314209
    4. '       ' → logprob: -16.876930236816406
    5. '.green' → logprob: -16.876930236816406
    6. '_green' → logprob: -16.876930236816406
    7. '           ' → logprob: -17.001930236816406
    8. ' ' → logprob: -17.251930236816406
    9. '    ' → logprob: -17.626930236816406
    10. 'Green' → logprob: -18.376930236816406

Token 650: '_blue' (ID: 81479)
  Prédit: '_blue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_blue' → logprob: -0.027370311319828033
    2. '_pair' → logprob: -3.7773702144622803
    3. '_green' → logprob: -5.527370452880859
    4. '_pairs' → logprob: -9.02737045288086
    5. '_white' → logprob: -12.27737045288086
    6. 'blue' → logprob: -12.40237045288086
    7. 'pair' → logprob: -12.77737045288086
    8. '_black' → logprob: -13.40237045288086
    9. '```' → logprob: -13.40237045288086
    10. '_p' → logprob: -13.52737045288086

Token 651: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -0.00020473242329899222
    2. 'pair' → logprob: -8.500205039978027
    3. '_pairs' → logprob: -14.375205039978027
    4. ' pair' → logprob: -15.250205039978027
    5. 'Pair' → logprob: -15.625205039978027
    6. '   ' → logprob: -16.62520408630371
    7. '_PAIR' → logprob: -16.62520408630371
    8. '
' → logprob: -17.62520408630371
    9. '_' → logprob: -17.87520408630371
    10. '_p' → logprob: -18.00020408630371

Token 652: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018422940047457814
    2. ' ,' → logprob: -8.625184059143066
    3. ',
' → logprob: -12.625184059143066
    4. '   ' → logprob: -13.750184059143066
    5. '       ' → logprob: -16.125185012817383
    6. '```' → logprob: -16.875185012817383
    7. ',

' → logprob: -17.000185012817383
    8. '           ' → logprob: -17.250185012817383
    9. ')' → logprob: -18.125185012817383
    10. ' ' → logprob: -18.250185012817383

Token 653: ' blue' (ID: 9861)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.04858953505754471
    2. ' blue' → logprob: -3.0485894680023193
    3. '   ' → logprob: -14.048589706420898
    4. ' ' → logprob: -14.548589706420898
    5. '    ' → logprob: -15.298589706420898
    6. '           ' → logprob: -15.548589706420898
    7. '         ' → logprob: -15.923589706420898
    8. '       ' → logprob: -16.0485897064209
    9. '     ' → logprob: -16.5485897064209
    10. '  ' → logprob: -16.6735897064209

Token 654: '_red' (ID: 61951)
  Prédit: '_red'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_red' → logprob: -0.02327890694141388
    2. '_pair' → logprob: -3.7732789516448975
    3. 'red' → logprob: -10.773279190063477
    4. '_pairs' → logprob: -12.398279190063477
    5. 'pair' → logprob: -12.898279190063477
    6. ' red' → logprob: -13.523279190063477
    7. '_right' → logprob: -13.648279190063477
    8. '_blue' → logprob: -13.898279190063477
    9. '_p' → logprob: -14.898279190063477
    10. 'Red' → logprob: -15.398279190063477

Token 655: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -0.00671809446066618
    2. 'pair' → logprob: -5.006718158721924
    3. 'Pair' → logprob: -13.506717681884766
    4. '_pairs' → logprob: -13.881717681884766
    5. ' pair' → logprob: -15.631717681884766
    6. '_PAIR' → logprob: -16.631717681884766
    7. 'PAIR' → logprob: -16.881717681884766
    8. '   ' → logprob: -17.506717681884766
    9. '_trip' → logprob: -18.506717681884766
    10. '(pair' → logprob: -18.506717681884766

Token 656: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0026273811236023903
    2. '   ' → logprob: -6.002627372741699
    3. ')
' → logprob: -9.3776273727417
    4. '       ' → logprob: -9.6276273727417
    5. ' )' → logprob: -14.2526273727417
    6. ')return' → logprob: -16.252628326416016
    7. ')

' → logprob: -16.627628326416016
    8. '))' → logprob: -16.752628326416016
    9. ' ' → logprob: -16.877628326416016
    10. '           ' → logprob: -17.127628326416016

Token 657: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 658: ' elif' (ID: 9497)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41073310375213623
    2. 'def' → logprob: -2.035733222961426
    3. ')' → logprob: -2.160733222961426
    4. 'elif' (adapté à ' elif') → logprob: -2.660733222961426
    5. 'else' → logprob: -4.785733222961426
    6. ' elif' → logprob: -5.910733222961426
    7. '<|end|>' → logprob: -6.160733222961426
    8. '	elif' → logprob: -6.535733222961426
    9. ':' → logprob: -6.660733222961426
    10. ' ' → logprob: -6.910733222961426

Token 659: ' ball' (ID: 7880)
  Prédit: ' ball'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ball' → logprob: -0.25230929255485535
    2. 'ball' → logprob: -1.5023093223571777
    3. ' input' → logprob: -8.75230884552002
    4. ''' → logprob: -9.75230884552002
    5. '(ball' → logprob: -9.75230884552002
    6. ' ' → logprob: -10.50230884552002
    7. ' '' → logprob: -10.75230884552002
    8. 'input' → logprob: -11.00230884552002
    9. '   ' → logprob: -11.12730884552002
    10. '    ' → logprob: -12.62730884552002

Token 660: '_type' (ID: 3804)
  Prédit: '_type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_type' → logprob: -0.0009675608016550541
    2. '_' → logprob: -7.250967502593994
    3. '==' → logprob: -8.750967979431152
    4. ' ==' → logprob: -9.750967979431152
    5. 'type' → logprob: -10.625967979431152
    6. '_TYPE' → logprob: -12.125967979431152
    7. 'Type' → logprob: -12.250967979431152
    8. '=='' → logprob: -12.875967979431152
    9. '   ' → logprob: -14.125967979431152
    10. '[' → logprob: -14.125967979431152

Token 661: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07903321832418442
    2. '==' → logprob: -2.579033136367798
    3. ' ' → logprob: -10.079032897949219
    4. '=='' → logprob: -10.454032897949219
    5. ' =' → logprob: -10.954032897949219
    6. '=' → logprob: -10.954032897949219
    7. ' =='' → logprob: -11.579032897949219
    8. ' ' → logprob: -12.454032897949219
    9. '=="' → logprob: -12.704032897949219
    10. ')' → logprob: -12.704032897949219

Token 662: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00864282064139843
    2. ' '' → logprob: -4.758642673492432
    3. ''S' → logprob: -11.25864315032959
    4. ' G' → logprob: -12.38364315032959
    5. '"' → logprob: -12.75864315032959
    6. ''C' → logprob: -13.25864315032959
    7. ''s' → logprob: -13.50864315032959
    8. ''O' → logprob: -14.00864315032959
    9. ' ' → logprob: -14.25864315032959
    10. '[' → logprob: -14.50864315032959

Token 663: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.3488155007362366
    2. ''' → logprob: -1.2238154411315918
    3. 'B' → logprob: -8.09881591796875
    4. 'R' → logprob: -10.34881591796875
    5. ' G' → logprob: -11.72381591796875
    6. '"G' → logprob: -11.72381591796875
    7. ' '' → logprob: -13.41131591796875
    8. '`' → logprob: -13.66131591796875
    9. '	G' → logprob: -13.72381591796875
    10. '```' → logprob: -13.97381591796875

Token 664: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.043048061430454254
    2. '':' → logprob: -3.293048143386841
    3. ''' → logprob: -5.793047904968262
    4. '       ' → logprob: -6.543047904968262
    5. ':
' → logprob: -8.668047904968262
    6. ':' → logprob: -8.793047904968262
    7. '   ' → logprob: -9.543047904968262
    8. '':
' → logprob: -9.918047904968262
    9. '':

' → logprob: -10.418047904968262
    10. ''):
' → logprob: -11.168047904968262

Token 665: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010534112807363272
    2. ' if' → logprob: -7.001053333282471
    3. '   ' → logprob: -9.626053810119629
    4. ' (' → logprob: -10.501053810119629
    5. 'if' → logprob: -10.751053810119629
    6. '(' → logprob: -11.376053810119629
    7. ':' → logprob: -12.376053810119629
    8. ':
' → logprob: -13.251053810119629
    9. '    ' → logprob: -13.501053810119629
    10. '        
' → logprob: -14.001053810119629

Token 666: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.41374483704566956
    2. ' if' → logprob: -1.6637448072433472
    3. '   ' → logprob: -1.9137448072433472
    4. '       ' → logprob: -6.288744926452637
    5. '	if' → logprob: -11.163744926452637
    6. ' ' → logprob: -13.538744926452637
    7. '```' → logprob: -14.288744926452637
    8. '    ' → logprob: -14.538744926452637
    9. '
' → logprob: -14.538744926452637
    10. '  ' → logprob: -15.288744926452637

Token 667: ' blue' (ID: 9861)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.14798404276371002
    2. ' blue' → logprob: -2.022984027862549
    3. 'red' → logprob: -5.772984027862549
    4. ' red' → logprob: -6.147984027862549
    5. '   ' → logprob: -10.522984504699707
    6. ' ' → logprob: -11.897984504699707
    7. 'green' → logprob: -12.022984504699707
    8. ' green' → logprob: -12.897984504699707
    9. 'b' → logprob: -14.147984504699707
    10. 'ball' → logprob: -14.647984504699707

Token 668: '_red' (ID: 61951)
  Prédit: '_person'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_person' → logprob: -0.0002286886883666739
    2. '_blue' → logprob: -8.625228881835938
    3. '_green' → logprob: -10.625228881835938
    4. '_pair' → logprob: -11.375228881835938
    5. '_people' → logprob: -12.750228881835938
    6. '_color' → logprob: -13.250228881835938
    7. '_p' → logprob: -13.500228881835938
    8. '```' → logprob: -14.000228881835938
    9. 'person' → logprob: -14.625228881835938
    10. ')_' → logprob: -14.750228881835938

Token 669: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -2.2200749754119897e-06
    2. 'pair' → logprob: -13.375001907348633
    3. '_person' → logprob: -15.125001907348633
    4. '_pairs' → logprob: -15.250001907348633
    5. '_p' → logprob: -16.875001907348633
    6. '_PAIR' → logprob: -17.250001907348633
    7. '_' → logprob: -18.250001907348633
    8. ' pair' → logprob: -18.375001907348633
    9. '   ' → logprob: -18.500001907348633
    10. '```' → logprob: -18.750001907348633

Token 670: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5761746764183044
    2. ':' → logprob: -0.8261746764183044
    3. '):
' → logprob: -9.45117473602295
    4. '           ' → logprob: -10.07617473602295
    5. '       ' → logprob: -10.32617473602295
    6. ':

' → logprob: -11.20117473602295
    7. '          ' → logprob: -11.45117473602295
    8. '<|end|>' → logprob: -11.57617473602295
    9. ' :' → logprob: -11.70117473602295
    10. ':
' → logprob: -11.82617473602295

Token 671: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03128543496131897
    2. '       ' → logprob: -3.781285524368286
    3. ':' → logprob: -5.156285285949707
    4. ':
' → logprob: -6.156285285949707
    5. '          ' → logprob: -9.906285285949707
    6. '```' → logprob: -10.906285285949707
    7. '	       ' → logprob: -11.906285285949707
    8. '         ' → logprob: -12.031285285949707
    9. '   ' → logprob: -12.156285285949707
    10. ':return' → logprob: -12.281285285949707

Token 672: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7344205975532532
    2. 'return' (adapté à ' return') → logprob: -0.7344205975532532
    3. '       ' → logprob: -3.2344205379486084
    4. '           ' → logprob: -7.1094207763671875
    5. ':return' → logprob: -9.609420776367188
    6. '   ' → logprob: -9.859420776367188
    7. '(return' → logprob: -9.859420776367188
    8. '(' → logprob: -10.734420776367188
    9. '(acc' → logprob: -11.109420776367188
    10. '	return' → logprob: -12.109420776367188

Token 673: ' (' (ID: 350)
  Prédit: '(acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.5759496092796326
    2. ' (' → logprob: -0.8259496092796326
    3. '(' → logprob: -11.700949668884277
    4. '   ' → logprob: -13.450949668884277
    5. 'acc' → logprob: -16.45094871520996
    6. ' accumulator' → logprob: -16.70094871520996
    7. '(ans' → logprob: -17.07594871520996
    8. ' (
' → logprob: -17.32594871520996
    9. '```' → logprob: -17.32594871520996
    10. ' ' → logprob: -17.32594871520996

Token 674: 'acc' (ID: 3717)
  Prédit: 'acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.00016635251813568175
    2. '(acc' → logprob: -8.750165939331055
    3. ' accumulator' → logprob: -11.875165939331055
    4. '	acc' → logprob: -15.375165939331055
    5. 'Accumulator' → logprob: -15.375165939331055
    6. '   ' → logprob: -16.250165939331055
    7. ''acc' → logprob: -16.250165939331055
    8. '_acc' → logprob: -17.125165939331055
    9. ')' → logprob: -17.125165939331055
    10. '           ' → logprob: -17.750165939331055

Token 675: 'umulator' (ID: 90989)
  Prédit: 'umulator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulator' → logprob: -0.01941414549946785
    2. '(acc' → logprob: -4.269413948059082
    3. 'um' → logprob: -6.144413948059082
    4. 'acc' → logprob: -6.519413948059082
    5. 'ulator' → logprob: -8.019413948059082
    6. '(' → logprob: -8.394413948059082
    7. 'umulate' → logprob: -8.394413948059082
    8. 'mult' → logprob: -8.644413948059082
    9. 'umul' → logprob: -8.769413948059082
    10. 'umerator' → logprob: -9.269413948059082

Token 676: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -1.1472419600977446e-06
    2. 'result' → logprob: -13.875000953674316
    3. '   ' → logprob: -16.250001907348633
    4. '_results' → logprob: -17.500001907348633
    5. '_RESULT' → logprob: -18.625001907348633
    6. '_' → logprob: -19.000001907348633
    7. ')' → logprob: -19.375001907348633
    8. '_code' → logprob: -19.625001907348633
    9. '_value' → logprob: -19.750001907348633
    10. '       ' → logprob: -20.125001907348633

Token 677: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.004104285035282373
    2. '*' → logprob: -5.504104137420654
    3. ',' → logprob: -10.754104614257812
    4. ' ' → logprob: -12.754104614257812
    5. ' ' → logprob: -13.879104614257812
    6. ' ,' → logprob: -15.504104614257812
    7. ')' → logprob: -15.629104614257812
    8. '*,' → logprob: -15.879104614257812
    9. '   ' → logprob: -16.879104614257812
    10. ' *,' → logprob: -17.004104614257812

Token 678: ' blue' (ID: 9861)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.06994455307722092
    2. ' blue' → logprob: -2.6949446201324463
    3. ' ' → logprob: -12.194944381713867
    4. '   ' → logprob: -13.569944381713867
    5. '_blue' → logprob: -14.444944381713867
    6. '.blue' → logprob: -14.819944381713867
    7. '  ' → logprob: -15.694944381713867
    8. 'b' → logprob: -15.819944381713867
    9. 'blu' → logprob: -16.194944381713867
    10. '
' → logprob: -16.319944381713867

Token 679: '_red' (ID: 61951)
  Prédit: '_red'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_red' → logprob: -3.619311974034645e-05
    2. '_person' → logprob: -10.875036239624023
    3. 'red' → logprob: -11.000036239624023
    4. '_pair' → logprob: -15.750036239624023
    5. ' red' → logprob: -17.000036239624023
    6. '_r' → logprob: -17.125036239624023
    7. '
' → logprob: -17.500036239624023
    8. '   ' → logprob: -17.625036239624023
    9. '_' → logprob: -17.750036239624023
    10. 'Red' → logprob: -17.750036239624023

Token 680: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -5.931863051955588e-05
    2. 'pair' → logprob: -9.750059127807617
    3. '_pairs' → logprob: -14.250059127807617
    4. 'Pair' → logprob: -15.625059127807617
    5. '_PAIR' → logprob: -16.625059127807617
    6. ' pair' → logprob: -17.500059127807617
    7. '_person' → logprob: -17.625059127807617
    8. '(pair' → logprob: -17.750059127807617
    9. 'red' → logprob: -17.875059127807617
    10. '_ball' → logprob: -18.500059127807617

Token 681: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0683535037969705e-05
    2. ' ,' → logprob: -12.12501049041748
    3. ',
' → logprob: -12.50001049041748
    4. ')' → logprob: -14.50001049041748
    5. '   ' → logprob: -15.37501049041748
    6. '           ' → logprob: -15.62501049041748
    7. '),' → logprob: -16.375011444091797
    8. '<|end|>' → logprob: -16.375011444091797
    9. ',input' → logprob: -16.500011444091797
    10. '       ' → logprob: -16.500011444091797

Token 682: ' free' (ID: 2240)
  Prédit: 'free'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'free' → logprob: -0.47407984733581543
    2. ' free' → logprob: -0.9740798473358154
    3. '       ' → logprob: -14.349080085754395
    4. 'acc' → logprob: -14.599080085754395
    5. '           ' → logprob: -14.599080085754395
    6. '_free' → logprob: -14.849080085754395
    7. '	free' → logprob: -15.099080085754395
    8. '   ' → logprob: -15.724080085754395
    9. '.free' → logprob: -16.099079132080078
    10. 'Free' → logprob: -16.724079132080078

Token 683: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -0.00024251631111837924
    2. ')' → logprob: -9.000242233276367
    3. ',' → logprob: -9.875242233276367
    4. '   ' → logprob: -10.750242233276367
    5. 'Person' → logprob: -11.375242233276367
    6. 'person' → logprob: -11.750242233276367
    7. '```' → logprob: -12.125242233276367
    8. '_result' → logprob: -12.125242233276367
    9. '_free' → logprob: -12.750242233276367
    10. '_PERSON' → logprob: -13.500242233276367

Token 684: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011212585377506912
    2. ' ,' → logprob: -9.625112533569336
    3. '       ' → logprob: -10.750112533569336
    4. '   ' → logprob: -10.875112533569336
    5. ')' → logprob: -13.125112533569336
    6. ',
' → logprob: -13.625112533569336
    7. '	' → logprob: -14.250112533569336
    8. '           ' → logprob: -15.250112533569336
    9. '),' → logprob: -15.250112533569336
    10. '      ' → logprob: -15.750112533569336

Token 685: ' red' (ID: 3592)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.10020710527896881
    2. ' red' → logprob: -2.3502070903778076
    3. 'green' → logprob: -16.10020637512207
    4. '       ' → logprob: -16.60020637512207
    5. '   ' → logprob: -17.35020637512207
    6. '        ' → logprob: -17.47520637512207
    7. '           ' → logprob: -17.72520637512207
    8. ' ' → logprob: -17.85020637512207
    9. '         ' → logprob: -17.85020637512207
    10. 'blue' → logprob: -18.10020637512207

Token 686: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -0.0001342903997283429
    2. 'person' → logprob: -9.625134468078613
    3. ',' → logprob: -10.125134468078613
    4. '_user' → logprob: -11.125134468078613
    5. '   ' → logprob: -11.625134468078613
    6. '_PERSON' → logprob: -14.250134468078613
    7. '       ' → logprob: -14.875134468078613
    8. '_people' → logprob: -15.125134468078613
    9. '_,' → logprob: -15.125134468078613
    10. ')' → logprob: -15.250134468078613

Token 687: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002783783129416406
    2. ' ,' → logprob: -8.25027847290039
    3. '   ' → logprob: -11.50027847290039
    4. '       ' → logprob: -12.75027847290039
    5. ',
' → logprob: -12.75027847290039
    6. ',g' → logprob: -15.37527847290039
    7. '           ' → logprob: -15.87527847290039
    8. ' ' → logprob: -16.00027847290039
    9. ')' → logprob: -16.00027847290039
    10. '+' → logprob: -16.25027847290039

Token 688: ' green' (ID: 8851)
  Prédit: 'green'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'green' → logprob: -0.47407791018486023
    2. ' green' → logprob: -0.9740779399871826
    3. '_green' → logprob: -15.349078178405762
    4. 'Green' → logprob: -15.474078178405762
    5. ' зелен' → logprob: -15.974078178405762
    6. '.green' → logprob: -16.349077224731445
    7. '       ' → logprob: -16.599077224731445
    8. '   ' → logprob: -16.599077224731445
    9. '           ' → logprob: -17.224077224731445
    10. 'GREEN' → logprob: -17.224077224731445

Token 689: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -5.157039049663581e-05
    2. '   ' → logprob: -10.500051498413086
    3. 'person' → logprob: -11.125051498413086
    4. '_user' → logprob: -12.875051498413086
    5. '```' → logprob: -13.125051498413086
    6. '+' → logprob: -13.500051498413086
    7. '           ' → logprob: -14.250051498413086
    8. ',' → logprob: -14.375051498413086
    9. ' ' → logprob: -14.750051498413086
    10. '       ' → logprob: -15.500051498413086

Token 690: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004441393539309502
    2. ' +' → logprob: -6.379441261291504
    3. ' ,' → logprob: -6.754441261291504
    4. '+' → logprob: -7.004441261291504
    5. ' -' → logprob: -7.754441261291504
    6. '-' → logprob: -9.254441261291504
    7. '       ' → logprob: -9.504441261291504
    8. '   ' → logprob: -10.254441261291504
    9. '           ' → logprob: -11.379441261291504
    10. ',
' → logprob: -12.004441261291504

Token 691: ' blue' (ID: 9861)
  Prédit: ' blue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blue' → logprob: -0.2812247574329376
    2. 'blue' → logprob: -1.4062247276306152
    3. 'free' → logprob: -10.406225204467773
    4. ' free' → logprob: -10.656225204467773
    5. '           ' → logprob: -11.656225204467773
    6. '       ' → logprob: -12.781225204467773
    7. '_blue' → logprob: -13.281225204467773
    8. ' green' → logprob: -13.781225204467773
    9. '               ' → logprob: -14.031225204467773
    10. '   ' → logprob: -14.531225204467773

Token 692: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -3.726595241460018e-05
    2. '   ' → logprob: -11.00003719329834
    3. '_blue' → logprob: -12.12503719329834
    4. 'person' → logprob: -12.87503719329834
    5. '_user' → logprob: -13.62503719329834
    6. ' -' → logprob: -13.87503719329834
    7. '_p' → logprob: -14.12503719329834
    8. '
' → logprob: -14.50003719329834
    9. '_player' → logprob: -14.50003719329834
    10. '_free' → logprob: -14.50003719329834

Token 693: ',' (ID: 11)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.04205496609210968
    2. '-' → logprob: -3.5420548915863037
    3. ',' → logprob: -4.417055130004883
    4. '       ' → logprob: -9.917055130004883
    5. ' ' → logprob: -10.667055130004883
    6. '   ' → logprob: -10.667055130004883
    7. '           ' → logprob: -10.792055130004883
    8. ' ,' → logprob: -11.292055130004883
    9. ')' → logprob: -11.792055130004883
    10. '```' → logprob: -12.292055130004883

Token 694: ' red' (ID: 3592)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.06197015196084976
    2. ' red' → logprob: -2.8119702339172363
    3. '           ' → logprob: -14.061969757080078
    4. '   ' → logprob: -15.186969757080078
    5. '       ' → logprob: -15.436969757080078
    6. '                       ' → logprob: -15.686969757080078
    7. '0' → logprob: -15.686969757080078
    8. '               ' → logprob: -15.811969757080078
    9. ' ' → logprob: -15.936969757080078
    10. '(red' → logprob: -16.186969757080078

Token 695: '_green' (ID: 113714)
  Prédit: '_green'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_green' → logprob: -4.2987729102605954e-05
    2. 'green' → logprob: -10.500042915344238
    3. '_person' → logprob: -12.125042915344238
    4. '_blue' → logprob: -12.375042915344238
    5. '_red' → logprob: -12.625042915344238
    6. '-green' → logprob: -14.375042915344238
    7. '_free' → logprob: -14.500042915344238
    8. ' green' → logprob: -14.875042915344238
    9. '_GREEN' → logprob: -14.875042915344238
    10. '_g' → logprob: -15.750042915344238

Token 696: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -0.00020699729793705046
    2. 'pair' → logprob: -8.50020694732666
    3. '_pairs' → logprob: -13.62520694732666
    4. 'Pair' → logprob: -14.12520694732666
    5. '+' → logprob: -14.62520694732666
    6. ' pair' → logprob: -14.62520694732666
    7. '_PAIR' → logprob: -15.37520694732666
    8. '   ' → logprob: -16.000207901000977
    9. ',' → logprob: -16.625207901000977
    10. '
' → logprob: -17.125207901000977

Token 697: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00937766395509243
    2. ' -' → logprob: -5.259377479553223
    3. '-' → logprob: -6.134377479553223
    4. ' ,' → logprob: -6.884377479553223
    5. '+' → logprob: -8.134377479553223
    6. ' +' → logprob: -8.259377479553223
    7. '           ' → logprob: -9.009377479553223
    8. '       ' → logprob: -9.384377479553223
    9. ',
' → logprob: -9.509377479553223
    10. '   ' → logprob: -9.634377479553223

Token 698: ' green' (ID: 8851)
  Prédit: 'green'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'green' → logprob: -0.0031804447062313557
    2. ' green' → logprob: -5.753180503845215
    3. 'free' → logprob: -13.378180503845215
    4. '           ' → logprob: -14.753180503845215
    5. '   ' → logprob: -15.378180503845215
    6. '       ' → logprob: -16.0031795501709
    7. '_green' → logprob: -16.5031795501709
    8. '0' → logprob: -17.2531795501709
    9. 'Green' → logprob: -17.3781795501709
    10. '.green' → logprob: -17.3781795501709

Token 699: '_blue' (ID: 81479)
  Prédit: '_blue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_blue' → logprob: -0.029768425971269608
    2. '_green' → logprob: -3.529768466949463
    3. '   ' → logprob: -12.529767990112305
    4. '_white' → logprob: -12.654767990112305
    5. 'blue' → logprob: -12.904767990112305
    6. '_black' → logprob: -13.029767990112305
    7. '_person' → logprob: -13.279767990112305
    8. '_free' → logprob: -13.904767990112305
    9. '       ' → logprob: -14.404767990112305
    10. '           ' → logprob: -14.654767990112305

Token 700: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -1.0683535037969705e-05
    2. 'pair' → logprob: -11.62501049041748
    3. 'Pair' → logprob: -13.87501049041748
    4. '_pairs' → logprob: -15.12501049041748
    5. '+' → logprob: -15.87501049041748
    6. ' pair' → logprob: -16.625011444091797
    7. '_person' → logprob: -16.625011444091797
    8. ',' → logprob: -17.250011444091797
    9. '           ' → logprob: -17.375011444091797
    10. '   ' → logprob: -17.375011444091797

Token 701: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008935939986258745
    2. ' ,' → logprob: -7.125893592834473
    3. '           ' → logprob: -10.500893592834473
    4. ' -' → logprob: -11.000893592834473
    5. '       ' → logprob: -11.125893592834473
    6. '   ' → logprob: -12.000893592834473
    7. '-' → logprob: -12.000893592834473
    8. ')' → logprob: -12.125893592834473
    9. ',
' → logprob: -12.750893592834473
    10. '```' → logprob: -12.875893592834473

Token 702: ' blue' (ID: 9861)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.1269301027059555
    2. ' blue' → logprob: -2.126929998397827
    3. '           ' → logprob: -14.251930236816406
    4. ' ' → logprob: -15.251930236816406
    5. '       ' → logprob: -15.751930236816406
    6. '               ' → logprob: -15.876930236816406
    7. '0' → logprob: -16.001930236816406
    8. '   ' → logprob: -16.126930236816406
    9. '            ' → logprob: -16.251930236816406
    10. '                   ' → logprob: -16.751930236816406

Token 703: '_red' (ID: 61951)
  Prédit: '_red'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_red' → logprob: -3.9292415749514475e-05
    2. '_blue' → logprob: -10.625039100646973
    3. 'red' → logprob: -11.625039100646973
    4. '_pair' → logprob: -12.250039100646973
    5. ' red' → logprob: -14.625039100646973
    6. '   ' → logprob: -16.25004005432129
    7. 'Red' → logprob: -16.62504005432129
    8. '
' → logprob: -16.62504005432129
    9. '_green' → logprob: -16.62504005432129
    10. '_p' → logprob: -16.87504005432129

Token 704: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -0.00010998018842656165
    2. 'pair' → logprob: -9.125109672546387
    3. '_pairs' → logprob: -14.750109672546387
    4. 'Pair' → logprob: -15.000109672546387
    5. ' pair' → logprob: -16.500110626220703
    6. '_red' → logprob: -17.375110626220703
    7. 'red' → logprob: -17.500110626220703
    8. '   ' → logprob: -18.250110626220703
    9. '_p' → logprob: -18.250110626220703
    10. '_PAIR' → logprob: -18.375110626220703

Token 705: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.014180435799062252
    2. '-' → logprob: -4.264180660247803
    3. ' ' → logprob: -11.889180183410645
    4. ')' → logprob: -12.014180183410645
    5. ' -
' → logprob: -13.389180183410645
    6. ' ' → logprob: -14.139180183410645
    7. '           ' → logprob: -14.514180183410645
    8. 'def' → logprob: -15.264180183410645
    9. '   ' → logprob: -15.264180183410645
    10. ',' → logprob: -16.13918113708496

Token 706: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003368926409166306
    2. ' ' → logprob: -8.000336647033691
    3. '   ' → logprob: -13.500336647033691
    4. '       ' → logprob: -16.625337600708008
    5. '  ' → logprob: -18.125337600708008
    6. '```' → logprob: -18.625337600708008
    7. '           ' → logprob: -18.750337600708008
    8. '	' → logprob: -19.000337600708008
    9. '    ' → logprob: -19.375337600708008
    10. '
' → logprob: -19.375337600708008

Token 707: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -15.875000953674316
    4. '       ' → logprob: -16.250001907348633
    5. '```' → logprob: -17.000001907348633
    6. '           ' → logprob: -17.625001907348633
    7. '<|end|>' → logprob: -18.625001907348633
    8. '-' → logprob: -20.750001907348633
    9. '  ' → logprob: -20.750001907348633
    10. ')' → logprob: -20.875001907348633

Token 708: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017218265682458878
    2. ')
' → logprob: -4.267218112945557
    3. '       ' → logprob: -6.267218112945557
    4. '   ' → logprob: -6.767218112945557
    5. ')
' → logprob: -14.267218589782715
    6. ' )' → logprob: -14.892218589782715
    7. '```' → logprob: -15.767218589782715
    8. ')

' → logprob: -16.3922176361084
    9. ')`' → logprob: -16.3922176361084
    10. ')\
' → logprob: -16.6422176361084

Token 709: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003280751989223063
    2. 'elif' → logprob: -8.500328063964844
    3. '   ' → logprob: -9.125328063964844
    4. ' elif' → logprob: -11.375328063964844
    5. 'else' → logprob: -13.000328063964844
    6. '```' → logprob: -14.000328063964844
    7. ',' → logprob: -15.125328063964844
    8. ' else' → logprob: -15.125328063964844
    9. '	elif' → logprob: -15.875328063964844
    10. ' ' → logprob: -15.875328063964844

Token 710: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.3172972500324249
    2. '       ' → logprob: -1.3172972202301025
    3. ' elif' → logprob: -5.567297458648682
    4. '   ' → logprob: -8.567296981811523
    5. 'else' → logprob: -12.067296981811523
    6. 'el' → logprob: -12.692296981811523
    7. '	elif' → logprob: -12.817296981811523
    8. ' ' → logprob: -13.567296981811523
    9. '     ' → logprob: -13.942296981811523
    10. '    ' → logprob: -14.192296981811523

Token 711: ' red' (ID: 3592)
  Prédit: ' red'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' red' → logprob: -0.4873877763748169
    2. 'red' → logprob: -0.9873877763748169
    3. 'blue' → logprob: -4.612387657165527
    4. ' blue' → logprob: -5.737387657165527
    5. '   ' → logprob: -10.112387657165527
    6. '(red' → logprob: -11.112387657165527
    7. 'green' → logprob: -12.362387657165527
    8. ' green' → logprob: -12.737387657165527
    9. ' ' → logprob: -12.737387657165527
    10. '           ' → logprob: -13.362387657165527

Token 712: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -0.00015002528380136937
    2. '```' → logprob: -10.125149726867676
    3. ''_' → logprob: -11.000149726867676
    4. '_' → logprob: -11.125149726867676
    5. '_pair' → logprob: -11.250149726867676
    6. '_p' → logprob: -11.375149726867676
    7. '_free' → logprob: -11.500149726867676
    8. '_green' → logprob: -11.875149726867676
    9. '   ' → logprob: -12.250149726867676
    10. 'elif' → logprob: -12.625149726867676

Token 713: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22784580290317535
    2. ':
' → logprob: -1.6028457880020142
    3. '           ' → logprob: -6.352845668792725
    4. '       ' → logprob: -8.102846145629883
    5. '<|end|>' → logprob: -8.977846145629883
    6. ',' → logprob: -9.477846145629883
    7. '>' → logprob: -9.602846145629883
    8. '          ' → logprob: -10.477846145629883
    9. '):
' → logprob: -11.227846145629883
    10. ':

' → logprob: -11.352846145629883

Token 714: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5367465019226074
    2. '           ' → logprob: -1.2867465019226074
    3. ' return' → logprob: -2.7867465019226074
    4. 'return' → logprob: -2.7867465019226074
    5. ' (' → logprob: -4.786746501922607
    6. '(' → logprob: -5.286746501922607
    7. '   ' → logprob: -6.536746501922607
    8. '(return' → logprob: -7.411746501922607
    9. '```' → logprob: -8.286746978759766
    10. ':return' → logprob: -9.786746978759766

Token 715: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7002902626991272
    2. 'return' (adapté à ' return') → logprob: -0.7002902626991272
    3. '       ' → logprob: -4.950290203094482
    4. '           ' → logprob: -11.20029067993164
    5. '(' → logprob: -11.70029067993164
    6. '(return' → logprob: -11.70029067993164
    7. ' (' → logprob: -13.20029067993164
    8. '   ' → logprob: -13.32529067993164
    9. '	return' → logprob: -13.95029067993164
    10. ':return' → logprob: -14.20029067993164

Token 716: ' (' (ID: 350)
  Prédit: '(acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.011108772829174995
    2. ' (' → logprob: -4.511108875274658
    3. '(' → logprob: -9.7611083984375
    4. '   ' → logprob: -12.8861083984375
    5. '(update' → logprob: -15.3861083984375
    6. '(input' → logprob: -15.6361083984375
    7. '(ans' → logprob: -16.2611083984375
    8. '(
' → logprob: -16.5111083984375
    9. '  ' → logprob: -17.0111083984375
    10. ' ' → logprob: -17.1361083984375

Token 717: 'acc' (ID: 3717)
  Prédit: 'acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.38707244396209717
    2. '(acc' → logprob: -1.1370724439620972
    3. ' accumulator' → logprob: -8.887072563171387
    4. '(' → logprob: -10.762072563171387
    5. 'Accumulator' → logprob: -11.012072563171387
    6. ' (' → logprob: -11.512072563171387
    7. '	acc' → logprob: -12.137072563171387
    8. ''acc' → logprob: -12.387072563171387
    9. '   ' → logprob: -13.137072563171387
    10. '_acc' → logprob: -13.887072563171387

Token 718: 'umulator' (ID: 90989)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.598288893699646
    2. '(acc' → logprob: -1.098288893699646
    3. '_result' → logprob: -2.8482890129089355
    4. '_acc' → logprob: -3.0982890129089355
    5. 'umulator' → logprob: -5.4732890129089355
    6. ' accumulator' → logprob: -5.5982890129089355
    7. 'ult' → logprob: -6.8482890129089355
    8. 'result' → logprob: -7.4732890129089355
    9. '(' → logprob: -7.5982890129089355
    10. '   ' → logprob: -7.5982890129089355

Token 719: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.0008066523587331176
    2. 'result' → logprob: -7.12580680847168
    3. 'Result' → logprob: -13.75080680847168
    4. '   ' → logprob: -15.12580680847168
    5. '(result' → logprob: -15.25080680847168
    6. 'acc' → logprob: -16.25080680847168
    7. ' result' → logprob: -16.37580680847168
    8. '       ' → logprob: -16.37580680847168
    9. '(acc' → logprob: -16.50080680847168
    10. '           ' → logprob: -16.75080680847168

Token 720: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.07154369354248047
    2. '*' → logprob: -2.6965436935424805
    3. ',' → logprob: -6.5715436935424805
    4. '*,' → logprob: -9.07154369354248
    5. ' *,' → logprob: -10.94654369354248
    6. ' ,' → logprob: -11.07154369354248
    7. '       ' → logprob: -11.44654369354248
    8. '   ' → logprob: -11.57154369354248
    9. 'def' → logprob: -11.69654369354248
    10. ' ' → logprob: -11.82154369354248

Token 721: ' red' (ID: 3592)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.3486021161079407
    2. ' red' → logprob: -1.223602056503296
    3. '(red' → logprob: -8.848602294921875
    4. '(' → logprob: -11.598602294921875
    5. ' (' → logprob: -13.598602294921875
    6. ' ' → logprob: -14.098602294921875
    7. '   ' → logprob: -14.348602294921875
    8. '
' → logprob: -15.098602294921875
    9. 'r' → logprob: -15.223602294921875
    10. 'acc' → logprob: -15.723602294921875

Token 722: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -9.722539834911004e-05
    2. 'person' → logprob: -9.250097274780273
    3. '_red' → logprob: -15.375097274780273
    4. '   ' → logprob: -15.875097274780273
    5. '(person' → logprob: -16.125097274780273
    6. '_green' → logprob: -16.375097274780273
    7. '_ball' → logprob: -16.625097274780273
    8. '_PERSON' → logprob: -16.750097274780273
    9. '-person' → logprob: -16.875097274780273
    10. '```' → logprob: -17.125097274780273

Token 723: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015545014757663012
    2. '-' → logprob: -6.876554489135742
    3. '       ' → logprob: -8.126554489135742
    4. ' ,' → logprob: -9.376554489135742
    5. ' -' → logprob: -9.626554489135742
    6. '   ' → logprob: -10.001554489135742
    7. ',
' → logprob: -11.251554489135742
    8. '           ' → logprob: -11.751554489135742
    9. '```' → logprob: -12.876554489135742
    10. ')' → logprob: -13.251554489135742

Token 724: ' free' (ID: 2240)
  Prédit: 'free'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'free' → logprob: -0.4740790128707886
    2. ' free' → logprob: -0.9740790128707886
    3. 'acc' → logprob: -13.599079132080078
    4. '_free' → logprob: -15.724079132080078
    5. '.free' → logprob: -15.724079132080078
    6. 'Free' → logprob: -16.099079132080078
    7. '0' → logprob: -16.349079132080078
    8. '	free' → logprob: -16.474079132080078
    9. 'f' → logprob: -17.099079132080078
    10. '-free' → logprob: -17.724079132080078

Token 725: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -4.787507714354433e-05
    2. '_free' → logprob: -10.75004768371582
    3. 'free' → logprob: -11.00004768371582
    4. 'person' → logprob: -11.75004768371582
    5. 'Person' → logprob: -13.87504768371582
    6. '_PERSON' → logprob: -15.62504768371582
    7. '_people' → logprob: -16.50004768371582
    8. '
' → logprob: -16.50004768371582
    9. '-person' → logprob: -17.12504768371582
    10. '   ' → logprob: -17.12504768371582

Token 726: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0033099623396992683
    2. '-' → logprob: -6.128309726715088
    3. ' -' → logprob: -7.503309726715088
    4. '       ' → logprob: -8.003310203552246
    5. ' ,' → logprob: -8.878310203552246
    6. '           ' → logprob: -9.753310203552246
    7. '   ' → logprob: -10.753310203552246
    8. ',
' → logprob: -12.628310203552246
    9. '          ' → logprob: -12.753310203552246
    10. ')' → logprob: -13.253310203552246

Token 727: ' red' (ID: 3592)
  Prédit: ' red'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' red' → logprob: -0.10021217912435532
    2. 'red' → logprob: -2.3502120971679688
    3. ' green' → logprob: -12.225212097167969
    4. 'green' → logprob: -14.350212097167969
    5. '_red' → logprob: -17.60021209716797
    6. ' blue' → logprob: -17.72521209716797
    7. '(red' → logprob: -18.60021209716797
    8. '.red' → logprob: -18.72521209716797
    9. 'Red' → logprob: -19.22521209716797
    10. '0' → logprob: -19.35021209716797

Token 728: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -7.517272024415433e-05
    2. ',' → logprob: -9.750075340270996
    3. '   ' → logprob: -11.625075340270996
    4. 'person' → logprob: -12.625075340270996
    5. ',_' → logprob: -14.125075340270996
    6. '```' → logprob: -14.125075340270996
    7. '_,' → logprob: -14.250075340270996
    8. ' _' → logprob: -14.625075340270996
    9. '           ' → logprob: -15.000075340270996
    10. '       ' → logprob: -15.250075340270996

Token 729: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06220284104347229
    2. '-' → logprob: -2.8122029304504395
    3. ',' → logprob: -8.437202453613281
    4. ' ' → logprob: -11.437202453613281
    5. '   ' → logprob: -13.062202453613281
    6. ')' → logprob: -13.312202453613281
    7. '       ' → logprob: -13.812202453613281
    8. '```' → logprob: -13.937202453613281
    9. ' ' → logprob: -14.562202453613281
    10. '           ' → logprob: -14.812202453613281

Token 730: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017958412354346365
    2. ' ' → logprob: -8.625179290771484
    3. '   ' → logprob: -16.875179290771484
    4. '```' → logprob: -19.625179290771484
    5. '       ' → logprob: -20.125179290771484
    6. '<|end|>' → logprob: -21.375179290771484
    7. '           ' → logprob: -21.625179290771484
    8. '  ' → logprob: -21.625179290771484
    9. ',' → logprob: -21.875179290771484
    10. '...' → logprob: -22.000179290771484

Token 731: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '```' → logprob: -18.25
    4. '<|end|>' → logprob: -18.875
    5. '   ' → logprob: -20.0
    6. '-' → logprob: -20.375
    7. 'from' → logprob: -21.0
    8. '...' → logprob: -21.0
    9. ',' → logprob: -21.25
    10. '<|end|>' → logprob: -21.5

Token 732: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.019237768370658e-05
    2. ' ,' → logprob: -9.375090599060059
    3. ',
' → logprob: -13.125090599060059
    4. '   ' → logprob: -13.625090599060059
    5. ')' → logprob: -14.750090599060059
    6. '```' → logprob: -14.750090599060059
    7. '       ' → logprob: -15.125090599060059
    8. ',g' → logprob: -15.125090599060059
    9. '<|end|>' → logprob: -15.250090599060059
    10. ',input' → logprob: -16.375089645385742

Token 733: ' green' (ID: 8851)
  Prédit: ' green'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' green' → logprob: -0.38687199354171753
    2. 'green' → logprob: -1.1368720531463623
    3. 'Green' → logprob: -14.261872291564941
    4. '_green' → logprob: -15.386872291564941
    5. '.green' → logprob: -16.511871337890625
    6. 'blue' → logprob: -18.511871337890625
    7. ' зелен' → logprob: -18.636871337890625
    8. ' blue' → logprob: -18.636871337890625
    9. 'GREEN' → logprob: -18.886871337890625
    10. ' Green' → logprob: -19.136871337890625

Token 734: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -5.5577775128767826e-06
    2. 'person' → logprob: -12.625005722045898
    3. ',' → logprob: -14.250005722045898
    4. '   ' → logprob: -14.625005722045898
    5. '_user' → logprob: -15.500005722045898
    6. '```' → logprob: -15.625005722045898
    7. '+' → logprob: -15.750005722045898
    8. ' _' → logprob: -15.750005722045898
    9. 'Person' → logprob: -16.5000057220459
    10. '_p' → logprob: -16.7500057220459

Token 735: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002557711210101843
    2. ' +' → logprob: -6.752557754516602
    3. ' ,' → logprob: -7.252557754516602
    4. '+' → logprob: -7.377557754516602
    5. ',
' → logprob: -11.252557754516602
    6. '   ' → logprob: -11.502557754516602
    7. '       ' → logprob: -11.877557754516602
    8. '-' → logprob: -11.877557754516602
    9. ' -' → logprob: -12.502557754516602
    10. ')' → logprob: -12.627557754516602

Token 736: ' blue' (ID: 9861)
  Prédit: ' blue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blue' → logprob: -0.6931591629981995
    2. 'blue' → logprob: -0.6931591629981995
    3. 'free' → logprob: -12.193159103393555
    4. ' free' → logprob: -13.068159103393555
    5. '_blue' → logprob: -13.693159103393555
    6. 'Blue' → logprob: -14.068159103393555
    7. '```' → logprob: -14.193159103393555
    8. ' ' → logprob: -14.818159103393555
    9. '.blue' → logprob: -15.068159103393555
    10. '           ' → logprob: -15.318159103393555

Token 737: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -4.008129963040119e-06
    2. '   ' → logprob: -13.500003814697266
    3. 'person' → logprob: -14.625003814697266
    4. '```' → logprob: -14.625003814697266
    5. ',' → logprob: -15.125003814697266
    6. '_free' → logprob: -15.500003814697266
    7. '_p' → logprob: -15.875003814697266
    8. '_product' → logprob: -16.000003814697266
    9. 'free' → logprob: -16.625003814697266
    10. '_question' → logprob: -16.750003814697266

Token 738: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014492794871330261
    2. ' +' → logprob: -7.126449108123779
    3. '+' → logprob: -8.001449584960938
    4. ' ,' → logprob: -8.251449584960938
    5. '       ' → logprob: -10.876449584960938
    6. '```' → logprob: -11.126449584960938
    7. '   ' → logprob: -12.376449584960938
    8. ',
' → logprob: -12.501449584960938
    9. '           ' → logprob: -13.001449584960938
    10. '=' → logprob: -13.751449584960938

Token 739: ' red' (ID: 3592)
  Prédit: ' red'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' red' → logprob: -0.12692926824092865
    2. 'red' → logprob: -2.12692928314209
    3. ' ' → logprob: -15.37692928314209
    4. '    ' → logprob: -15.37692928314209
    5. '   ' → logprob: -15.87692928314209
    6. '(red' → logprob: -15.87692928314209
    7. '       ' → logprob: -16.251928329467773
    8. '  ' → logprob: -16.626928329467773
    9. '.red' → logprob: -16.876928329467773
    10. '_red' → logprob: -16.876928329467773

Token 740: '_green' (ID: 113714)
  Prédit: '_green'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_green' → logprob: -6.392202976712724e-06
    2. 'green' → logprob: -12.875006675720215
    3. '_GREEN' → logprob: -13.500006675720215
    4. '_red' → logprob: -14.125006675720215
    5. '-green' → logprob: -14.750006675720215
    6. '_blue' → logprob: -14.875006675720215
    7. '_free' → logprob: -15.000006675720215
    8. 'Green' → logprob: -15.125006675720215
    9. '_g' → logprob: -15.500006675720215
    10. '```' → logprob: -16.2500057220459

Token 741: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -4.751746746478602e-05
    2. 'pair' → logprob: -11.00004768371582
    3. '+' → logprob: -11.12504768371582
    4. '_pairs' → logprob: -11.62504768371582
    5. ' +' → logprob: -12.50004768371582
    6. '   ' → logprob: -13.75004768371582
    7. '_person' → logprob: -13.87504768371582
    8. '-' → logprob: -15.37504768371582
    9. ' pair' → logprob: -15.87504768371582
    10. '       ' → logprob: -16.00004768371582

Token 742: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6948217749595642
    2. '+' → logprob: -0.9448217749595642
    3. ' +' → logprob: -2.194821834564209
    4. ' ,' → logprob: -8.19482135772705
    5. '       ' → logprob: -8.31982135772705
    6. '+,' → logprob: -9.19482135772705
    7. '           ' → logprob: -10.31982135772705
    8. '   ' → logprob: -11.44482135772705
    9. '=' → logprob: -11.81982135772705
    10. ' red' → logprob: -12.06982135772705

Token 743: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004904801025986671
    2. ' ' → logprob: -7.625490665435791
    3. '0' → logprob: -13.625490188598633
    4. '           ' → logprob: -14.125490188598633
    5. '   ' → logprob: -15.750490188598633
    6. ')' → logprob: -16.250490188598633
    7. '+' → logprob: -16.625490188598633
    8. '       ' → logprob: -16.625490188598633
    9. '
' → logprob: -16.750490188598633
    10. '    ' → logprob: -17.500490188598633

Token 744: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '0' → logprob: -17.3750057220459
    4. '
' → logprob: -17.6250057220459
    5. '```' → logprob: -17.8750057220459
    6. '   ' → logprob: -18.5000057220459
    7. '           ' → logprob: -19.0000057220459
    8. '+' → logprob: -19.2500057220459
    9. 'free' → logprob: -19.6250057220459
    10. ')' → logprob: -19.8750057220459

Token 745: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.315936429426074e-05
    2. ' ,' → logprob: -9.625082969665527
    3. '       ' → logprob: -11.375082969665527
    4. ')' → logprob: -13.000082969665527
    5. ',
' → logprob: -13.625082969665527
    6. '   ' → logprob: -14.250082969665527
    7. '           ' → logprob: -14.875082969665527
    8. '<|end|>' → logprob: -14.875082969665527
    9. '```' → logprob: -15.125082969665527
    10. '),' → logprob: -16.125083923339844

Token 746: ' green' (ID: 8851)
  Prédit: 'green'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'green' → logprob: -0.3132648468017578
    2. ' green' → logprob: -1.3132648468017578
    3. '_green' → logprob: -13.688264846801758
    4. 'Green' → logprob: -14.063264846801758
    5. '.green' → logprob: -14.313264846801758
    6. 'free' → logprob: -15.063264846801758
    7. ' зелен' → logprob: -16.813264846801758
    8. 'GREEN' → logprob: -17.063264846801758
    9. 'gree' → logprob: -17.688264846801758
    10. ' free' → logprob: -18.188264846801758

Token 747: '_blue' (ID: 81479)
  Prédit: '_blue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_blue' → logprob: -0.38688740134239197
    2. '_green' → logprob: -1.1368874311447144
    3. '_good' → logprob: -13.261887550354004
    4. '_gray' → logprob: -13.386887550354004
    5. '_white' → logprob: -13.386887550354004
    6. '   ' → logprob: -13.636887550354004
    7. '```' → logprob: -13.886887550354004
    8. '_red' → logprob: -14.011887550354004
    9. '_black' → logprob: -14.136887550354004
    10. '           ' → logprob: -14.511887550354004

Token 748: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -2.248469718324486e-05
    2. 'pair' → logprob: -10.750022888183594
    3. '_pairs' → logprob: -14.625022888183594
    4. '_green' → logprob: -15.250022888183594
    5. '_blue' → logprob: -16.375022888183594
    6. '_person' → logprob: -17.125022888183594
    7. 'Pair' → logprob: -17.375022888183594
    8. ' pair' → logprob: -17.625022888183594
    9. 'green' → logprob: -17.875022888183594
    10. '_part' → logprob: -18.000022888183594

Token 749: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013274075172375888
    2. ' ,' → logprob: -9.00013256072998
    3. '```' → logprob: -12.87513256072998
    4. ',
' → logprob: -13.12513256072998
    5. '<|end|>' → logprob: -13.62513256072998
    6. '       ' → logprob: -13.62513256072998
    7. '   ' → logprob: -14.00013256072998
    8. '           ' → logprob: -14.75013256072998
    9. ')' → logprob: -14.75013256072998
    10. '=' → logprob: -15.75013256072998

Token 750: ' blue' (ID: 9861)
  Prédit: ' blue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blue' → logprob: -0.10021529346704483
    2. 'blue' → logprob: -2.350215196609497
    3. ' green' → logprob: -12.100214958190918
    4. ' ' → logprob: -13.725214958190918
    5. '0' → logprob: -13.975214958190918
    6. 'green' → logprob: -14.100214958190918
    7. ' ' → logprob: -16.600215911865234
    8. '```' → logprob: -16.725215911865234
    9. '   ' → logprob: -16.975215911865234
    10. '_blue' → logprob: -17.100215911865234

Token 751: '_red' (ID: 61951)
  Prédit: '_pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -0.01072849240154028
    2. '_red' → logprob: -5.010728359222412
    3. '_blue' → logprob: -6.260728359222412
    4. '_green' → logprob: -6.260728359222412
    5. '_pairs' → logprob: -8.88572883605957
    6. 'pair' → logprob: -10.26072883605957
    7. '_person' → logprob: -12.76072883605957
    8. '_p' → logprob: -13.38572883605957
    9. 'Pair' → logprob: -14.26072883605957
    10. '_black' → logprob: -14.51072883605957

Token 752: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -0.00010998018842656165
    2. 'pair' → logprob: -9.125109672546387
    3. 'Pair' → logprob: -15.125109672546387
    4. '_pairs' → logprob: -15.125109672546387
    5. '+' → logprob: -15.750109672546387
    6. '_red' → logprob: -16.625110626220703
    7. '_green' → logprob: -16.750110626220703
    8. '   ' → logprob: -17.000110626220703
    9. 'PAIR' → logprob: -17.125110626220703
    10. '_PAIR' → logprob: -17.625110626220703

Token 753: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.40817418694496155
    2. ')
' → logprob: -1.6581741571426392
    3. ',' → logprob: -2.0331742763519287
    4. '   ' → logprob: -4.40817403793335
    5. '       ' → logprob: -6.78317403793335
    6. ',
' → logprob: -9.033174514770508
    7. ' +' → logprob: -9.533174514770508
    8. ' ,' → logprob: -9.533174514770508
    9. '+' → logprob: -10.283174514770508
    10. '           ' → logprob: -10.783174514770508

Token 754: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12831322848796844
    2. '   ' → logprob: -2.2533133029937744
    3. 'else' → logprob: -4.878313064575195
    4. ' else' → logprob: -5.003313064575195
    5. '```' → logprob: -7.253313064575195
    6. '<|end|>' → logprob: -9.128313064575195
    7. ')' → logprob: -9.378313064575195
    8. '(' → logprob: -9.753313064575195
    9. ',' → logprob: -10.253313064575195
    10. '	else' → logprob: -11.253313064575195

Token 755: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.65509033203125
    2. 'else' → logprob: -1.28009033203125
    3. '       ' → logprob: -1.78009033203125
    4. '(' → logprob: -4.15509033203125
    5. ' else' → logprob: -5.28009033203125
    6. '   ' → logprob: -5.40509033203125
    7. ' elif' → logprob: -5.40509033203125
    8. '```' → logprob: -5.65509033203125
    9. '           ' → logprob: -7.65509033203125
    10. ' (' → logprob: -9.28009033203125

Token 756: ' blue' (ID: 9861)
  Prédit: ' blue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blue' → logprob: -0.1606907695531845
    2. 'blue' → logprob: -1.9106907844543457
    3. '(' → logprob: -8.285690307617188
    4. ' free' → logprob: -9.410690307617188
    5. ' (' → logprob: -9.410690307617188
    6. 'free' → logprob: -10.410690307617188
    7. '   ' → logprob: -12.035690307617188
    8. '_blue' → logprob: -12.035690307617188
    9. ' green' → logprob: -13.160690307617188
    10. ' ' → logprob: -13.160690307617188

Token 757: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -2.5776860184123507e-06
    2. '_p' → logprob: -14.37500286102295
    3. '```' → logprob: -14.50000286102295
    4. '   ' → logprob: -15.87500286102295
    5. 'person' → logprob: -16.000001907348633
    6. '_present' → logprob: -16.125001907348633
    7. '_user' → logprob: -16.375001907348633
    8. '_' → logprob: -16.375001907348633
    9. '_PERSON' → logprob: -16.375001907348633
    10. ' _' → logprob: -16.500001907348633

Token 758: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23472249507904053
    2. ':
' → logprob: -1.6097224950790405
    3. '           ' → logprob: -4.73472261428833
    4. '       ' → logprob: -8.984722137451172
    5. ',' → logprob: -8.984722137451172
    6. '          ' → logprob: -9.984722137451172
    7. '```' → logprob: -10.109722137451172
    8. ':

' → logprob: -10.234722137451172
    9. '<|end|>' → logprob: -10.859722137451172
    10. '==' → logprob: -11.234722137451172

Token 759: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14997896552085876
    2. '       ' → logprob: -2.0249788761138916
    3. '(' → logprob: -5.649979114532471
    4. 'return' → logprob: -6.149979114532471
    5. ' (' → logprob: -7.149979114532471
    6. ' return' → logprob: -7.649979114532471
    7. '```' → logprob: -8.274978637695312
    8. '(return' → logprob: -10.399978637695312
    9. '          ' → logprob: -11.024978637695312
    10. '   ' → logprob: -11.274978637695312

Token 760: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.018549054861068726
    2. ' return' → logprob: -4.018548965454102
    3. '       ' → logprob: -8.018548965454102
    4. '(' → logprob: -10.018548965454102
    5. '           ' → logprob: -11.518548965454102
    6. '(return' → logprob: -11.518548965454102
    7. ' (' → logprob: -12.643548965454102
    8. '```' → logprob: -14.518548965454102
    9. '   ' → logprob: -14.768548965454102
    10. '	return' → logprob: -14.893548965454102

Token 761: ' (' (ID: 350)
  Prédit: '(acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.10026555508375168
    2. ' (' → logprob: -2.3502655029296875
    3. '(' → logprob: -9.975265502929688
    4. '   ' → logprob: -11.350265502929688
    5. '       ' → logprob: -15.475265502929688
    6. '           ' → logprob: -16.225265502929688
    7. ' ' → logprob: -16.475265502929688
    8. '(ans' → logprob: -16.600265502929688
    9. '(
' → logprob: -17.100265502929688
    10. '    ' → logprob: -17.475265502929688

Token 762: 'acc' (ID: 3717)
  Prédit: '(acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.5760799646377563
    2. 'acc' → logprob: -0.8260799646377563
    3. ' accumulator' → logprob: -9.076080322265625
    4. ' (' → logprob: -11.576080322265625
    5. '	acc' → logprob: -11.826080322265625
    6. 'Accumulator' → logprob: -12.826080322265625
    7. '   ' → logprob: -13.451080322265625
    8. ''acc' → logprob: -13.951080322265625
    9. '           ' → logprob: -13.951080322265625
    10. '_acc' → logprob: -14.076080322265625

Token 763: 'umulator' (ID: 90989)
  Prédit: 'umulator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulator' → logprob: -0.007290224079042673
    2. 'ulator' → logprob: -5.507290363311768
    3. '_free' → logprob: -7.132290363311768
    4. 'um' → logprob: -7.757290363311768
    5. '           ' → logprob: -8.00728988647461
    6. '       ' → logprob: -8.13228988647461
    7. '   ' → logprob: -8.25728988647461
    8. '_result' → logprob: -8.38228988647461
    9. '_acc' → logprob: -8.63228988647461
    10. '_mod' → logprob: -8.75728988647461

Token 764: '_result' (ID: 11623)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.8000703454017639
    2. '_result' → logprob: -0.8000703454017639
    3. '*' → logprob: -2.300070285797119
    4. '   ' → logprob: -8.050070762634277
    5. ',' → logprob: -8.550070762634277
    6. '       ' → logprob: -9.175070762634277
    7. '_person' → logprob: -9.175070762634277
    8. 'Result' → logprob: -9.550070762634277
    9. ' ' → logprob: -9.925070762634277
    10. '```' → logprob: -10.050070762634277

Token 765: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.1633620709180832
    2. '*' → logprob: -1.9133620262145996
    3. ',' → logprob: -5.7883620262146
    4. '       ' → logprob: -10.413362503051758
    5. '           ' → logprob: -11.288362503051758
    6. '*,' → logprob: -11.538362503051758
    7. '```' → logprob: -11.913362503051758
    8. '   ' → logprob: -12.663362503051758
    9. ' ' → logprob: -13.163362503051758
    10. '        ' → logprob: -13.663362503051758

Token 766: ' blue' (ID: 9861)
  Prédit: 'free'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'free' → logprob: -0.022466789931058884
    2. ' free' → logprob: -3.8974668979644775
    3. 'blue' → logprob: -6.522466659545898
    4. 'green' → logprob: -7.897466659545898
    5. ' blue' → logprob: -10.647466659545898
    6. '(' → logprob: -10.772466659545898
    7. 'acc' → logprob: -11.272466659545898
    8. ' green' → logprob: -11.647466659545898
    9. '(f' → logprob: -11.772466659545898
    10. '(g' → logprob: -12.772466659545898

Token 767: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -4.320199877838604e-07
    2. '   ' → logprob: -16.625
    3. 'person' → logprob: -16.625
    4. '```' → logprob: -17.125
    5. '_PERSON' → logprob: -17.375
    6. '_p' → logprob: -17.625
    7. '_people' → logprob: -17.75
    8. '_pair' → logprob: -17.875
    9. 'Person' → logprob: -17.875
    10. '_' → logprob: -18.125

Token 768: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013262155698612332
    2. ' ,' → logprob: -9.12513256072998
    3. '       ' → logprob: -11.00013256072998
    4. '           ' → logprob: -13.25013256072998
    5. ',
' → logprob: -14.00013256072998
    6. ')' → logprob: -14.00013256072998
    7. '`,' → logprob: -14.00013256072998
    8. '),' → logprob: -14.50013256072998
    9. '',' → logprob: -14.62513256072998
    10. '```' → logprob: -14.75013256072998

Token 769: ' free' (ID: 2240)
  Prédit: ' free'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' free' → logprob: -0.1002068892121315
    2. 'free' → logprob: -2.3502068519592285
    3. '       ' → logprob: -16.72520637512207
    4. '	free' → logprob: -17.35020637512207
    5. '_free' → logprob: -17.35020637512207
    6. '.free' → logprob: -17.85020637512207
    7. '           ' → logprob: -18.10020637512207
    8. '   ' → logprob: -18.72520637512207
    9. 'Free' → logprob: -18.72520637512207
    10. 'acc' → logprob: -19.47520637512207

Token 770: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -1.4378848391061183e-05
    2. '_free' → logprob: -11.875014305114746
    3. 'person' → logprob: -12.875014305114746
    4. 'free' → logprob: -13.250014305114746
    5. 'Person' → logprob: -14.125014305114746
    6. ',' → logprob: -14.500014305114746
    7. '_green' → logprob: -14.875014305114746
    8. '_PERSON' → logprob: -15.000014305114746
    9. 'PERSON' → logprob: -15.375014305114746
    10. '_people' → logprob: -15.750014305114746

Token 771: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010908045805990696
    2. ' -' → logprob: -7.501091003417969
    3. '-' → logprob: -8.376091003417969
    4. ' ,' → logprob: -8.751091003417969
    5. '       ' → logprob: -9.501091003417969
    6. '           ' → logprob: -9.876091003417969
    7. ',
' → logprob: -11.626091003417969
    8. '   ' → logprob: -12.001091003417969
    9. '```' → logprob: -12.501091003417969
    10. ')' → logprob: -14.001091003417969

Token 772: ' red' (ID: 3592)
  Prédit: ' red'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' red' → logprob: -0.4742966294288635
    2. 'red' → logprob: -0.9742966294288635
    3. 'blue' → logprob: -9.474296569824219
    4. ' blue' → logprob: -9.724296569824219
    5. ' green' → logprob: -9.974296569824219
    6. 'green' → logprob: -10.224296569824219
    7. ' ' → logprob: -16.47429656982422
    8. 'free' → logprob: -17.09929656982422
    9. '   ' → logprob: -17.97429656982422
    10. 'Red' → logprob: -18.59929656982422

Token 773: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -3.531315314830863e-06
    2. ',' → logprob: -13.875003814697266
    3. ' _' → logprob: -14.000003814697266
    4. '   ' → logprob: -14.125003814697266
    5. '_p' → logprob: -15.250003814697266
    6. 'person' → logprob: -15.625003814697266
    7. '_people' → logprob: -16.000003814697266
    8. '_PERSON' → logprob: -16.250003814697266
    9. '_' → logprob: -16.375003814697266
    10. ',_' → logprob: -16.375003814697266

Token 774: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007453064317815006
    2. ' ,' → logprob: -7.7507452964782715
    3. ' -' → logprob: -8.87574577331543
    4. '-' → logprob: -9.12574577331543
    5. '       ' → logprob: -10.12574577331543
    6. '           ' → logprob: -11.12574577331543
    7. '   ' → logprob: -12.00074577331543
    8. '```' → logprob: -14.00074577331543
    9. ' green' → logprob: -14.37574577331543
    10. ',
' → logprob: -14.50074577331543

Token 775: ' green' (ID: 8851)
  Prédit: ' green'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' green' → logprob: -0.5759403705596924
    2. 'green' → logprob: -0.8259403705596924
    3. 'blue' → logprob: -14.825940132141113
    4. ' blue' → logprob: -15.325940132141113
    5. '   ' → logprob: -15.950940132141113
    6. 'Green' → logprob: -16.07594108581543
    7. '_green' → logprob: -17.20094108581543
    8. 'free' → logprob: -17.70094108581543
    9. '.green' → logprob: -17.82594108581543
    10. ' ' → logprob: -18.20094108581543

Token 776: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -1.2113979209971149e-05
    2. '```' → logprob: -12.750012397766113
    3. '   ' → logprob: -12.875012397766113
    4. '           ' → logprob: -13.000012397766113
    5. ',' → logprob: -13.375012397766113
    6. ' _' → logprob: -14.625012397766113
    7. '_PERSON' → logprob: -14.750012397766113
    8. 'person' → logprob: -14.875012397766113
    9. 'Person' → logprob: -15.250012397766113
    10. '_p' → logprob: -15.625012397766113

Token 777: ',' (ID: 11)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.028796439990401268
    2. '-' → logprob: -3.653796434402466
    3. ',' → logprob: -6.028796672821045
    4. '           ' → logprob: -10.653796195983887
    5. ' ' → logprob: -11.028796195983887
    6. '       ' → logprob: -11.278796195983887
    7. ' +' → logprob: -11.403796195983887
    8. '+' → logprob: -12.528796195983887
    9. ' ,' → logprob: -12.653796195983887
    10. '```' → logprob: -12.778796195983887

Token 778: ' blue' (ID: 9861)
  Prédit: ' blue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blue' → logprob: -0.5231426358222961
    2. 'blue' → logprob: -0.8981426358222961
    3. ' green' → logprob: -12.52314281463623
    4. '           ' → logprob: -13.02314281463623
    5. ' ' → logprob: -13.14814281463623
    6. 'green' → logprob: -13.39814281463623
    7. '               ' → logprob: -13.77314281463623
    8. '            ' → logprob: -13.77314281463623
    9. '        ' → logprob: -13.89814281463623
    10. 'Blue' → logprob: -13.89814281463623

Token 779: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -2.6776029699249193e-05
    2. '_p' → logprob: -12.37502670288086
    3. '```' → logprob: -12.50002670288086
    4. '   ' → logprob: -12.75002670288086
    5. '           ' → logprob: -12.75002670288086
    6. 'person' → logprob: -13.00002670288086
    7. '_user' → logprob: -13.25002670288086
    8. '-' → logprob: -14.12502670288086
    9. ' -' → logprob: -14.12502670288086
    10. '+' → logprob: -14.12502670288086

Token 780: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.08897960186004639
    2. '-' → logprob: -2.463979721069336
    3. ' ' → logprob: -11.088979721069336
    4. '           ' → logprob: -11.963979721069336
    5. '```' → logprob: -12.838979721069336
    6. ')' → logprob: -12.963979721069336
    7. ' ' → logprob: -12.963979721069336
    8. ' +' → logprob: -12.963979721069336
    9. '+' → logprob: -13.338979721069336
    10. '       ' → logprob: -13.463979721069336

Token 781: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001589618914294988
    2. ' ' → logprob: -8.75015926361084
    3. '   ' → logprob: -15.50015926361084
    4. '-' → logprob: -16.375158309936523
    5. '           ' → logprob: -16.625158309936523
    6. '```' → logprob: -17.500158309936523
    7. '       ' → logprob: -18.125158309936523
    8. '
' → logprob: -18.750158309936523
    9. '  ' → logprob: -19.187658309936523
    10. '`' → logprob: -19.312658309936523

Token 782: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.73052782076411e-05
    2. ' ' → logprob: -9.625067710876465
    3. '-' → logprob: -14.625067710876465
    4. 'blue' → logprob: -15.000067710876465
    5. ' blue' → logprob: -15.375067710876465
    6. '   ' → logprob: -15.625067710876465
    7. '```' → logprob: -17.81256675720215
    8. ' -' → logprob: -18.06256675720215
    9. '
' → logprob: -18.37506675720215
    10. '           ' → logprob: -18.75006675720215

Token 783: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00033165133208967745
    2. ' ,' → logprob: -8.37533187866211
    3. '       ' → logprob: -10.25033187866211
    4. ')' → logprob: -10.37533187866211
    5. '   ' → logprob: -11.37533187866211
    6. '```' → logprob: -11.75033187866211
    7. '           ' → logprob: -12.00033187866211
    8. '),' → logprob: -13.00033187866211
    9. ',
' → logprob: -13.37533187866211
    10. '):
' → logprob: -13.62533187866211

Token 784: ' red' (ID: 3592)
  Prédit: ' red'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' red' → logprob: -0.3132622241973877
    2. 'red' → logprob: -1.3132622241973877
    3. '(red' → logprob: -15.313261985778809
    4. '_red' → logprob: -16.938262939453125
    5. '          ' → logprob: -17.313262939453125
    6. '           ' → logprob: -17.688262939453125
    7. 'Red' → logprob: -17.688262939453125
    8. ' ' → logprob: -17.938262939453125
    9. '.red' → logprob: -17.938262939453125
    10. '       ' → logprob: -18.063262939453125

Token 785: '_green' (ID: 113714)
  Prédit: '_green'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_green' → logprob: -6.034592388459714e-06
    2. 'green' → logprob: -13.500005722045898
    3. '_GREEN' → logprob: -13.500005722045898
    4. '_red' → logprob: -13.875005722045898
    5. '_blue' → logprob: -14.750005722045898
    6. '```' → logprob: -14.750005722045898
    7. '_g' → logprob: -15.125005722045898
    8. 'Green' → logprob: -15.250005722045898
    9. '_white' → logprob: -15.250005722045898
    10. '-green' → logprob: -15.500005722045898

Token 786: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -3.3213025744771585e-05
    2. 'pair' → logprob: -10.750033378601074
    3. '_pairs' → logprob: -11.500033378601074
    4. 'Pair' → logprob: -15.000033378601074
    5. '_person' → logprob: -15.125033378601074
    6. ',' → logprob: -15.500033378601074
    7. '+' → logprob: -15.750033378601074
    8. ' pair' → logprob: -16.125032424926758
    9. '   ' → logprob: -16.500032424926758
    10. '_PAIR' → logprob: -16.750032424926758

Token 787: ',' (ID: 11)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2524603605270386
    2. '+' → logprob: -1.6274603605270386
    3. ',' → logprob: -3.627460479736328
    4. '+,' → logprob: -10.252460479736328
    5. ')' → logprob: -10.627460479736328
    6. ' ,' → logprob: -10.752460479736328
    7. ' ' → logprob: -12.127460479736328
    8. '       ' → logprob: -12.877460479736328
    9. '),' → logprob: -13.127460479736328
    10. '   ' → logprob: -13.627460479736328

Token 788: ' green' (ID: 8851)
  Prédit: 'green'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'green' → logprob: -0.20141403377056122
    2. ' green' → logprob: -1.7014139890670776
    3. '_green' → logprob: -15.201414108276367
    4. '.green' → logprob: -15.451414108276367
    5. 'Green' → logprob: -15.576414108276367
    6. 'blue' → logprob: -17.576414108276367
    7. ' зелен' → logprob: -17.951414108276367
    8. 'free' → logprob: -18.576414108276367
    9. '```' → logprob: -18.576414108276367
    10. 'GREEN' → logprob: -18.576414108276367

Token 789: '_blue' (ID: 81479)
  Prédit: '_blue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_blue' → logprob: -0.06199580803513527
    2. '_green' → logprob: -2.8119957447052
    3. '_white' → logprob: -11.686995506286621
    4. '+' → logprob: -12.436995506286621
    5. 'blue' → logprob: -12.561995506286621
    6. '```' → logprob: -12.686995506286621
    7. 'green' → logprob: -13.561995506286621
    8. '   ' → logprob: -13.561995506286621
    9. '_good' → logprob: -14.311995506286621
    10. '_black' → logprob: -14.561995506286621

Token 790: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -2.3080716346157715e-05
    2. '+' → logprob: -11.375022888183594
    3. ' +' → logprob: -12.250022888183594
    4. 'pair' → logprob: -12.500022888183594
    5. 'Pair' → logprob: -13.375022888183594
    6. '_pairs' → logprob: -13.875022888183594
    7. '   ' → logprob: -16.625022888183594
    8. ' pair' → logprob: -17.000022888183594
    9. '       ' → logprob: -17.250022888183594
    10. '           ' → logprob: -17.375022888183594

Token 791: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3716357350349426
    2. '+' → logprob: -1.7466356754302979
    3. ',' → logprob: -1.9966356754302979
    4. ' ,' → logprob: -8.621635437011719
    5. '+,' → logprob: -10.371635437011719
    6. ')' → logprob: -11.621635437011719
    7. '       ' → logprob: -11.996635437011719
    8. '```' → logprob: -12.371635437011719
    9. ' ' → logprob: -12.746635437011719
    10. '           ' → logprob: -13.121635437011719

Token 792: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.9054008084349334e-05
    2. '0' → logprob: -10.500039100646973
    3. ' ' → logprob: -11.375039100646973
    4. '(' → logprob: -18.500038146972656
    5. '   ' → logprob: -18.500038146972656
    6. '           ' → logprob: -19.000038146972656
    7. '```' → logprob: -19.250038146972656
    8. '<|end|>' → logprob: -19.500038146972656
    9. '       ' → logprob: -19.750038146972656
    10. ')' → logprob: -20.125038146972656

Token 793: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.041768160182983e-05
    2. ' ' → logprob: -9.750080108642578
    3. '0' → logprob: -10.750080108642578
    4. '(' → logprob: -15.375080108642578
    5. 'blue' → logprob: -16.000080108642578
    6. ' blue' → logprob: -16.375080108642578
    7. '+' → logprob: -17.125080108642578
    8. '   ' → logprob: -17.250080108642578
    9. '```' → logprob: -17.500080108642578
    10. ' (' → logprob: -17.750080108642578

Token 794: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.027225754223764e-05
    2. ' ,' → logprob: -9.875060081481934
    3. ')' → logprob: -11.875060081481934
    4. '```' → logprob: -14.125060081481934
    5. '),' → logprob: -15.000060081481934
    6. '<|end|>' → logprob: -15.375060081481934
    7. ',
' → logprob: -15.500060081481934
    8. '(' → logprob: -16.37506103515625
    9. ',)' → logprob: -17.50006103515625
    10. '   ' → logprob: -17.50006103515625

Token 795: ' blue' (ID: 9861)
  Prédit: ' blue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blue' → logprob: -0.6931489109992981
    2. 'blue' → logprob: -0.6931489109992981
    3. ' ' → logprob: -14.318148612976074
    4. '0' → logprob: -14.818148612976074
    5. 'Blue' → logprob: -15.068148612976074
    6. 'free' → logprob: -16.19314956665039
    7. '   ' → logprob: -16.69314956665039
    8. '_blue' → logprob: -16.69314956665039
    9. '.blue' → logprob: -17.69314956665039
    10. 'green' → logprob: -17.94314956665039

Token 796: '_red' (ID: 61951)
  Prédit: '_red'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_red' → logprob: -0.0006467910134233534
    2. '_blue' → logprob: -8.125646591186523
    3. '_person' → logprob: -8.500646591186523
    4. '_pair' → logprob: -9.000646591186523
    5. '_black' → logprob: -12.500646591186523
    6. '_pairs' → logprob: -12.750646591186523
    7. '_green' → logprob: -13.250646591186523
    8. 'red' → logprob: -13.500646591186523
    9. 'Red' → logprob: -13.625646591186523
    10. '_white' → logprob: -14.000646591186523

Token 797: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -6.44443862256594e-05
    2. 'pair' → logprob: -9.750064849853516
    3. '_person' → logprob: -12.625064849853516
    4. '_pairs' → logprob: -13.500064849853516
    5. 'Pair' → logprob: -13.625064849853516
    6. '_part' → logprob: -16.125064849853516
    7. ' pair' → logprob: -17.125064849853516
    8. '_red' → logprob: -17.875064849853516
    9. '   ' → logprob: -18.500064849853516
    10. '_PAIR' → logprob: -18.625064849853516

Token 798: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00026538874953985214
    2. ')
' → logprob: -8.250265121459961
    3. '   ' → logprob: -12.875265121459961
    4. ' )' → logprob: -14.250265121459961
    5. ')`' → logprob: -15.125265121459961
    6. ')
' → logprob: -15.500265121459961
    7. ')`
' → logprob: -16.75026512145996
    8. '):
' → logprob: -17.25026512145996
    9. '+' → logprob: -17.25026512145996
    10. ')

' → logprob: -17.37526512145996

Token 799: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.079405777156353
    2. '   ' → logprob: -2.8294057846069336
    3. 'else' → logprob: -4.079405784606934
    4. ' else' → logprob: -7.954405784606934
    5. '```' → logprob: -11.954405784606934
    6. '(' → logprob: -12.704405784606934
    7. '(
' → logprob: -12.704405784606934
    8. ')' → logprob: -13.579405784606934
    9. '{
' → logprob: -13.829405784606934
    10. '	else' → logprob: -13.829405784606934

Token 800: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.05086293816566467
    2. '   ' → logprob: -4.050862789154053
    3. '       ' → logprob: -4.175862789154053
    4. ' else' → logprob: -4.300862789154053
    5. '```' → logprob: -5.800862789154053
    6. '	else' → logprob: -9.300863265991211
    7. '           ' → logprob: -10.175863265991211
    8. '<|end|>' → logprob: -10.300863265991211
    9. ')' → logprob: -10.550863265991211
    10. '``' → logprob: -11.300863265991211

Token 801: ':
' (ID: 734)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.046090032905340195
    2. ':' → logprob: -3.7960901260375977
    3. '(' → logprob: -4.296090126037598
    4. '       ' → logprob: -6.171090126037598
    5. ' (
' → logprob: -6.171090126037598
    6. '(acc' → logprob: -6.296090126037598
    7. ':
' → logprob: -6.546090126037598
    8. '(
' → logprob: -7.171090126037598
    9. '           ' → logprob: -7.796090126037598
    10. '   ' → logprob: -8.796090126037598

Token 802: '           ' (ID: 352)
  Prédit: '(acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.10452284663915634
    2. ' (' → logprob: -2.354522943496704
    3. '(' → logprob: -6.104522705078125
    4. '       ' → logprob: -6.229522705078125
    5. '(return' → logprob: -9.604522705078125
    6. '           ' → logprob: -11.229522705078125
    7. ' return' → logprob: -11.604522705078125
    8. '```' → logprob: -11.729522705078125
    9. 'return' → logprob: -12.729522705078125
    10. '   ' → logprob: -15.229522705078125

Token 803: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.609484076499939
    2. '(acc' → logprob: -0.859484076499939
    3. ' return' → logprob: -3.6094841957092285
    4. '(' → logprob: -5.7344841957092285
    5. '(return' → logprob: -6.3594841957092285
    6. ' (' → logprob: -6.9844841957092285
    7. '(
' → logprob: -11.35948371887207
    8. '```' → logprob: -11.60948371887207
    9. 'acc' → logprob: -12.35948371887207
    10. '   ' → logprob: -12.98448371887207

Token 804: ' (' (ID: 350)
  Prédit: '(acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.0019349466310814023
    2. ' (' → logprob: -6.251935005187988
    3. '(' → logprob: -12.126935005187988
    4. '   ' → logprob: -14.251935005187988
    5. '           ' → logprob: -15.751935005187988
    6. '       ' → logprob: -17.501934051513672
    7. '(
' → logprob: -17.876934051513672
    8. '(ans' → logprob: -17.876934051513672
    9. '  ' → logprob: -18.251934051513672
    10. '(input' → logprob: -18.501934051513672

Token 805: 'acc' (ID: 3717)
  Prédit: 'acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.0013317868579179049
    2. '(acc' → logprob: -6.626331806182861
    3. ' accumulator' → logprob: -12.376331329345703
    4. '(' → logprob: -14.751331329345703
    5. 'Accumulator' → logprob: -15.001331329345703
    6. '	acc' → logprob: -15.501331329345703
    7. '   ' → logprob: -15.876331329345703
    8. '(
' → logprob: -16.501331329345703
    9. '_acc' → logprob: -16.626331329345703
    10. ''acc' → logprob: -16.751331329345703

Token 806: 'umulator' (ID: 90989)
  Prédit: 'umulator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulator' → logprob: -0.007020717952400446
    2. '(acc' → logprob: -5.507020950317383
    3. 'umul' → logprob: -7.132020950317383
    4. 'um' → logprob: -7.382020950317383
    5. 'umulate' → logprob: -7.382020950317383
    6. 'acc' → logprob: -7.507020950317383
    7. 'umu' → logprob: -9.132020950317383
    8. 'ulator' → logprob: -10.007020950317383
    9. '(' → logprob: -10.132020950317383
    10. 'u' → logprob: -10.382020950317383

Token 807: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -2.546478935983032e-05
    2. 'result' → logprob: -10.625025749206543
    3. '_results' → logprob: -14.625025749206543
    4. '```' → logprob: -15.375025749206543
    5. 'Result' → logprob: -15.625025749206543
    6. '_code' → logprob: -16.000024795532227
    7. '   ' → logprob: -16.125024795532227
    8. ')' → logprob: -17.625024795532227
    9. '_RESULT' → logprob: -17.750024795532227
    10. '_Result' → logprob: -17.750024795532227

Token 808: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.01114414632320404
    2. '*' → logprob: -4.511144161224365
    3. ',' → logprob: -9.386143684387207
    4. ')' → logprob: -12.136143684387207
    5. '```' → logprob: -12.511143684387207
    6. ' ' → logprob: -13.886143684387207
    7. ' ' → logprob: -15.011143684387207
    8. ' ,' → logprob: -15.136143684387207
    9. 'def' → logprob: -15.136143684387207
    10. '*,' → logprob: -15.886143684387207

Token 809: ' free' (ID: 2240)
  Prédit: 'free'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'free' → logprob: -0.0005556552205234766
    2. ' free' → logprob: -7.500555515289307
    3. 'acc' → logprob: -13.625555992126465
    4. '(f' → logprob: -14.375555992126465
    5. '   ' → logprob: -14.750555992126465
    6. '(' → logprob: -15.875555992126465
    7. '
' → logprob: -16.37555503845215
    8. 'fre' → logprob: -17.25055503845215
    9. ' (' → logprob: -17.37555503845215
    10. 'f' → logprob: -17.37555503845215

Token 810: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -1.1875571544806007e-05
    2. 'person' → logprob: -12.250011444091797
    3. '_free' → logprob: -13.000011444091797
    4. 'Person' → logprob: -13.500011444091797
    5. ')' → logprob: -13.625011444091797
    6. 'free' → logprob: -14.125011444091797
    7. '_PERSON' → logprob: -14.125011444091797
    8. '```' → logprob: -15.250011444091797
    9. '<Person' → logprob: -16.125011444091797
    10. '_ball' → logprob: -16.125011444091797

Token 811: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018577903392724693
    2. ' ,' → logprob: -9.2501859664917
    3. ',
' → logprob: -10.2501859664917
    4. ')' → logprob: -10.8751859664917
    5. '           ' → logprob: -11.3751859664917
    6. '),' → logprob: -12.3751859664917
    7. '   ' → logprob: -12.3751859664917
    8. '<|end|>' → logprob: -12.6251859664917
    9. '`,' → logprob: -13.3751859664917
    10. '       ' → logprob: -13.3751859664917

Token 812: ' free' (ID: 2240)
  Prédit: ' free'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' free' → logprob: -0.06196802109479904
    2. 'free' → logprob: -2.8119680881500244
    3. '_free' → logprob: -15.686967849731445
    4. '.free' → logprob: -16.061967849731445
    5. '	free' → logprob: -16.811967849731445
    6. 'Free' → logprob: -18.186967849731445
    7. '-free' → logprob: -18.436967849731445
    8. ' ' → logprob: -18.686967849731445
    9. '0' → logprob: -18.936967849731445
    10. 'fre' → logprob: -19.686967849731445

Token 813: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -5.676981345459353e-06
    2. '_free' → logprob: -12.625005722045898
    3. '_user' → logprob: -14.125005722045898
    4. '_' → logprob: -14.250005722045898
    5. ' _' → logprob: -15.250005722045898
    6. '_PERSON' → logprob: -15.375005722045898
    7. '```' → logprob: -15.875005722045898
    8. '   ' → logprob: -16.2500057220459
    9. ')_' → logprob: -16.6250057220459
    10. '_ball' → logprob: -17.1250057220459

Token 814: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.018160004168748856
    2. '-' → logprob: -4.018159866333008
    3. ' ' → logprob: -12.393159866333008
    4. '   ' → logprob: -13.268159866333008
    5. '<|end|>' → logprob: -13.393159866333008
    6. ',' → logprob: -14.393159866333008
    7. ' -
' → logprob: -14.643159866333008
    8. ' ' → logprob: -14.768159866333008
    9. '<|end|>' → logprob: -15.268159866333008
    10. '```' → logprob: -15.393159866333008

Token 815: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005928558763116598
    2. ' ' → logprob: -5.1309285163879395
    3. '```' → logprob: -17.38092803955078
    4. ' ' → logprob: -18.50592803955078
    5. '   ' → logprob: -19.25592803955078
    6. '0' → logprob: -19.38092803955078
    7. '<|end|>' → logprob: -19.38092803955078
    8. '_' → logprob: -20.00592803955078
    9. ')' → logprob: -20.25592803955078
    10. '2' → logprob: -20.75592803955078

Token 816: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '```' → logprob: -19.375003814697266
    4. '<|end|>' → logprob: -19.500003814697266
    5. '-' → logprob: -21.250003814697266
    6. '   ' → logprob: -21.875003814697266
    7. '۱' → logprob: -22.250003814697266
    8. ')' → logprob: -22.500003814697266
    9. 'Mod' → logprob: -22.562503814697266
    10. '<|end|>' → logprob: -22.750003814697266

Token 817: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.666993507067673e-05
    2. ' ,' → logprob: -10.750036239624023
    3. '   ' → logprob: -12.125036239624023
    4. ',
' → logprob: -13.000036239624023
    5. ')' → logprob: -13.125036239624023
    6. '           ' → logprob: -13.250036239624023
    7. '       ' → logprob: -13.250036239624023
    8. '<|end|>' → logprob: -14.875036239624023
    9. '```' → logprob: -14.875036239624023
    10. '),' → logprob: -15.125036239624023

Token 818: ' red' (ID: 3592)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.07899102568626404
    2. ' red' → logprob: -2.578990936279297
    3. 'green' → logprob: -9.328990936279297
    4. ' green' → logprob: -11.328990936279297
    5. '0' → logprob: -15.328990936279297
    6. '_red' → logprob: -16.828990936279297
    7. '           ' → logprob: -17.078990936279297
    8. 'blue' → logprob: -17.203990936279297
    9. 'r' → logprob: -17.328990936279297
    10. '(red' → logprob: -17.578990936279297

Token 819: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -6.749814019713085e-06
    2. 'person' → logprob: -13.000006675720215
    3. '_user' → logprob: -13.375006675720215
    4. '```' → logprob: -13.625006675720215
    5. '_p' → logprob: -15.125006675720215
    6. '_' → logprob: -15.250006675720215
    7. '_type' → logprob: -15.250006675720215
    8. 'Person' → logprob: -16.12500762939453
    9. '_PERSON' → logprob: -16.12500762939453
    10. ',' → logprob: -16.25000762939453

Token 820: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.33264029026031494
    2. '+' → logprob: -1.957640290260315
    3. ' +' → logprob: -1.957640290260315
    4. ' ,' → logprob: -8.582640647888184
    5. '```' → logprob: -8.707640647888184
    6. '   ' → logprob: -9.582640647888184
    7. '       ' → logprob: -9.957640647888184
    8. '-' → logprob: -10.457640647888184
    9. '+,' → logprob: -10.832640647888184
    10. ')' → logprob: -10.957640647888184

Token 821: ' green' (ID: 8851)
  Prédit: ' green'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' green' → logprob: -0.5759400725364685
    2. 'green' → logprob: -0.8259400725364685
    3. '_green' → logprob: -15.075940132141113
    4. 'Green' → logprob: -15.575940132141113
    5. '.green' → logprob: -16.450939178466797
    6. 'blue' → logprob: -17.825939178466797
    7. ' зелен' → logprob: -17.950939178466797
    8. '0' → logprob: -17.950939178466797
    9. 'GREEN' → logprob: -18.200939178466797
    10. ' blue' → logprob: -18.325939178466797

Token 822: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -4.11996734328568e-05
    2. '   ' → logprob: -10.500041007995605
    3. ',' → logprob: -12.125041007995605
    4. 'person' → logprob: -13.000041007995605
    5. '```' → logprob: -13.375041007995605
    6. ' _' → logprob: -13.500041007995605
    7. '_' → logprob: -14.500041007995605
    8. '_,' → logprob: -14.625041007995605
    9. '_user' → logprob: -14.625041007995605
    10. '_p' → logprob: -15.375041007995605

Token 823: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8654825091362
    2. ',' → logprob: -1.2404825687408447
    3. ' +' → logprob: -1.2404825687408447
    4. ' ,' → logprob: -7.865482330322266
    5. '       ' → logprob: -9.240482330322266
    6. '   ' → logprob: -9.365482330322266
    7. '```' → logprob: -10.115482330322266
    8. '+,' → logprob: -10.615482330322266
    9. ')' → logprob: -12.115482330322266
    10. ',
' → logprob: -12.240482330322266

Token 824: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001234428636962548
    2. ' ' → logprob: -9.000123023986816
    3. '   ' → logprob: -18.250123977661133
    4. '0' → logprob: -18.750123977661133
    5. '```' → logprob: -21.375123977661133
    6. '
' → logprob: -22.000123977661133
    7. '<|end|>' → logprob: -22.625123977661133
    8. '  ' → logprob: -22.625123977661133
    9. '-' → logprob: -23.125123977661133
    10. '۱' → logprob: -23.125123977661133

Token 825: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011088147759437561
    2. '0' → logprob: -4.5110883712768555
    3. ' ' → logprob: -10.136088371276855
    4. '(' → logprob: -15.511088371276855
    5. '   ' → logprob: -15.636088371276855
    6. '```' → logprob: -15.636088371276855
    7. '+' → logprob: -16.63608741760254
    8. '
' → logprob: -16.63608741760254
    9. '-' → logprob: -17.26108741760254
    10. ')' → logprob: -17.76108741760254

Token 826: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.1186566047836095e-05
    2. '```' → logprob: -10.875031471252441
    3. ' ,' → logprob: -11.750031471252441
    4. '       ' → logprob: -13.250031471252441
    5. '`,' → logprob: -14.125031471252441
    6. ',
' → logprob: -14.625031471252441
    7. '   ' → logprob: -14.750031471252441
    8. ')' → logprob: -15.000031471252441
    9. '``' → logprob: -15.375031471252441
    10. '(),' → logprob: -16.000030517578125

Token 827: ' blue' (ID: 9861)
  Prédit: ' blue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blue' → logprob: -0.018727028742432594
    2. 'blue' → logprob: -4.018726825714111
    3. ' free' → logprob: -7.518726825714111
    4. 'free' → logprob: -10.39372730255127
    5. '0' → logprob: -12.89372730255127
    6. ' ' → logprob: -14.26872730255127
    7. '_blue' → logprob: -16.643726348876953
    8. '```' → logprob: -16.893726348876953
    9. 'Blue' → logprob: -17.018726348876953
    10. ' green' → logprob: -17.018726348876953

Token 828: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -1.7432603272027336e-06
    2. 'person' → logprob: -13.625001907348633
    3. '```' → logprob: -15.000001907348633
    4. ',' → logprob: -17.000001907348633
    5. '_PERSON' → logprob: -17.500001907348633
    6. 'Person' → logprob: -17.500001907348633
    7. '   ' → logprob: -17.625001907348633
    8. '-person' → logprob: -18.125001907348633
    9. '_p' → logprob: -18.750001907348633
    10. '_people' → logprob: -18.750001907348633

Token 829: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.39236530661582947
    2. ' -' → logprob: -1.1423653364181519
    3. '-' → logprob: -5.767365455627441
    4. ' +' → logprob: -6.642365455627441
    5. ' ,' → logprob: -7.267365455627441
    6. '```' → logprob: -9.392365455627441
    7. '           ' → logprob: -9.767365455627441
    8. '   ' → logprob: -10.017365455627441
    9. '       ' → logprob: -10.017365455627441
    10. '+' → logprob: -10.142365455627441

Token 830: ' red' (ID: 3592)
  Prédit: ' red'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' red' → logprob: -0.16022463142871857
    2. 'red' → logprob: -1.9102246761322021
    3. ' ' → logprob: -15.535224914550781
    4. '   ' → logprob: -15.660224914550781
    5. '    ' → logprob: -16.78522491455078
    6. '       ' → logprob: -17.41022491455078
    7. '        ' → logprob: -17.91022491455078
    8. '  ' → logprob: -17.91022491455078
    9. '           ' → logprob: -18.03522491455078
    10. '     ' → logprob: -18.16022491455078

Token 831: '_green' (ID: 113714)
  Prédit: '_green'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_green' → logprob: -6.988221684878226e-06
    2. '_blue' → logprob: -12.750006675720215
    3. '_red' → logprob: -13.125006675720215
    4. '_GREEN' → logprob: -14.000006675720215
    5. '_g' → logprob: -14.875006675720215
    6. '```' → logprob: -15.875006675720215
    7. '_' → logprob: -16.00000762939453
    8. '_white' → logprob: -16.62500762939453
    9. 'green' → logprob: -16.75000762939453
    10. ',_' → logprob: -17.00000762939453

Token 832: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -8.184812031686306e-05
    2. 'pair' → logprob: -9.750082015991211
    3. '_pairs' → logprob: -11.000082015991211
    4. 'Pair' → logprob: -13.125082015991211
    5. '+' → logprob: -13.375082015991211
    6. '   ' → logprob: -13.875082015991211
    7. ',' → logprob: -14.125082015991211
    8. ' pair' → logprob: -15.250082015991211
    9. '```' → logprob: -15.375082015991211
    10. '_PAIR' → logprob: -15.500082015991211

Token 833: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001431114797014743
    2. ' ,' → logprob: -9.125143051147461
    3. ',
' → logprob: -10.875143051147461
    4. '       ' → logprob: -12.375143051147461
    5. '+' → logprob: -12.500143051147461
    6. '   ' → logprob: -13.375143051147461
    7. '```' → logprob: -13.500143051147461
    8. ' +' → logprob: -14.250143051147461
    9. '           ' → logprob: -14.250143051147461
    10. '=' → logprob: -14.750143051147461

Token 834: ' green' (ID: 8851)
  Prédit: 'green'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'green' → logprob: -0.575942873954773
    2. ' green' → logprob: -0.825942873954773
    3. 'mod' → logprob: -13.200942993164062
    4. '_green' → logprob: -14.325942993164062
    5. 'Green' → logprob: -14.700942993164062
    6. '.green' → logprob: -15.075942993164062
    7. '```' → logprob: -15.950942993164062
    8. 'free' → logprob: -16.950942993164062
    9. ' зелен' → logprob: -17.200942993164062
    10. ' ' → logprob: -17.450942993164062

Token 835: '_blue' (ID: 81479)
  Prédit: '_blue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_blue' → logprob: -0.01815919391810894
    2. '_green' → logprob: -4.01815938949585
    3. 'blue' → logprob: -12.143158912658691
    4. '_white' → logprob: -14.018158912658691
    5. '+' → logprob: -14.893158912658691
    6. '```' → logprob: -15.018158912658691
    7. '_BLUE' → logprob: -15.018158912658691
    8. '   ' → logprob: -15.143158912658691
    9. 'green' → logprob: -15.393158912658691
    10. '_' → logprob: -15.518158912658691

Token 836: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -5.621933451038785e-05
    2. 'pair' → logprob: -9.875056266784668
    3. '_green' → logprob: -13.000056266784668
    4. '_blue' → logprob: -13.875056266784668
    5. '_pairs' → logprob: -14.375056266784668
    6. 'green' → logprob: -15.250056266784668
    7. 'Pair' → logprob: -15.500056266784668
    8. '   ' → logprob: -15.875056266784668
    9. '+' → logprob: -16.37505531311035
    10. '           ' → logprob: -17.50005531311035

Token 837: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022845028433948755
    2. ' ,' → logprob: -8.750228881835938
    3. ' +' → logprob: -10.750228881835938
    4. '+' → logprob: -10.750228881835938
    5. ',
' → logprob: -11.375228881835938
    6. '       ' → logprob: -12.125228881835938
    7. '           ' → logprob: -12.250228881835938
    8. '```' → logprob: -12.875228881835938
    9. '   ' → logprob: -13.625228881835938
    10. '          ' → logprob: -15.000228881835938

Token 838: ' blue' (ID: 9861)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.16023042798042297
    2. ' blue' → logprob: -1.9102303981781006
    3. ' ' → logprob: -13.53523063659668
    4. '   ' → logprob: -13.66023063659668
    5. '         ' → logprob: -14.41023063659668
    6. '           ' → logprob: -14.41023063659668
    7. '       ' → logprob: -14.78523063659668
    8. '0' → logprob: -15.16023063659668
    9. '```' → logprob: -15.16023063659668
    10. '    ' → logprob: -15.28523063659668

Token 839: '_red' (ID: 61951)
  Prédit: '_pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -0.266865611076355
    2. '_red' → logprob: -1.516865611076355
    3. '_blue' → logprob: -4.2668657302856445
    4. 'pair' → logprob: -8.016865730285645
    5. '_pairs' → logprob: -8.141865730285645
    6. '_' → logprob: -9.891865730285645
    7. '_green' → logprob: -9.891865730285645
    8. 'red' → logprob: -10.766865730285645
    9. '_black' → logprob: -11.266865730285645
    10. '_rd' → logprob: -11.766865730285645

Token 840: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -7.600714161526412e-05
    2. 'pair' → logprob: -9.500076293945312
    3. 'Pair' → logprob: -14.875076293945312
    4. '_pairs' → logprob: -15.125076293945312
    5. '   ' → logprob: -16.250076293945312
    6. '_green' → logprob: -16.500076293945312
    7. '+' → logprob: -17.125076293945312
    8. '_red' → logprob: -17.375076293945312
    9. 'PAIR' → logprob: -18.125076293945312
    10. '_PAIR' → logprob: -18.125076293945312

Token 841: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008329694159328938
    2. ' -' → logprob: -5.13332986831665
    3. ' +' → logprob: -7.00832986831665
    4. '-' → logprob: -7.13332986831665
    5. '+' → logprob: -7.63332986831665
    6. '   ' → logprob: -9.383329391479492
    7. ')
' → logprob: -10.133329391479492
    8. ',' → logprob: -10.633329391479492
    9. ' )' → logprob: -11.008329391479492
    10. '       ' → logprob: -11.258329391479492

Token 842: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07956686615943909
    2. '```' → logprob: -2.5795669555664062
    3. 'elif' → logprob: -8.204566955566406
    4. '<|end|>' → logprob: -8.579566955566406
    5. ')' → logprob: -10.204566955566406
    6. ',' → logprob: -10.204566955566406
    7. '	elif' → logprob: -10.454566955566406
    8. ' elif' → logprob: -10.579566955566406
    9. '<|end|>' → logprob: -10.704566955566406
    10. '...' → logprob: -10.829566955566406

Token 843: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017508649034425616
    2. 'elif' → logprob: -6.876750946044922
    3. '```' → logprob: -7.626750946044922
    4. '	elif' → logprob: -9.126750946044922
    5. ' elif' → logprob: -9.626750946044922
    6. 'else' (adapté à ' else') → logprob: -10.876750946044922
    7. '<|end|>' → logprob: -11.501750946044922
    8. ')' → logprob: -12.001750946044922
    9. '       ' → logprob: -12.501750946044922
    10. '    
' → logprob: -12.876750946044922

Token 844: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.048814453184604645
    2. ':
' → logprob: -3.048814535140991
    3. '   ' → logprob: -9.17381477355957
    4. ' :' → logprob: -9.29881477355957
    5. ' :
' → logprob: -11.17381477355957
    6. ':
' → logprob: -12.54881477355957
    7. '       ' → logprob: -12.92381477355957
    8. ':

' → logprob: -13.42381477355957
    9. '):
' → logprob: -13.42381477355957
    10. 'if' → logprob: -13.54881477355957

Token 845: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003107726341113448
    2. ' if' → logprob: -6.50310754776001
    3. 'if' → logprob: -6.62810754776001
    4. '   ' → logprob: -8.253108024597168
    5. '(' → logprob: -11.128108024597168
    6. ' (' → logprob: -12.878108024597168
    7. '#' → logprob: -13.753108024597168
    8. '           ' → logprob: -14.503108024597168
    9. '```' → logprob: -14.503108024597168
    10. '     ' → logprob: -15.128108024597168

Token 846: ' ball' (ID: 7880)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45051562786102295
    2. 'B' → logprob: -1.700515627861023
    3. 'ball' → logprob: -2.0755157470703125
    4. ' ball' → logprob: -3.4505157470703125
    5. 'if' → logprob: -4.4505157470703125
    6. ' if' → logprob: -5.8255157470703125
    7. ' B' → logprob: -5.9505157470703125
    8. '(ball' → logprob: -6.8255157470703125
    9. '#' → logprob: -6.9505157470703125
    10. ''' → logprob: -7.4505157470703125

Token 847: '_type' (ID: 3804)
  Prédit: '_type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_type' → logprob: -3.79811754100956e-05
    2. '==' → logprob: -11.375038146972656
    3. ' ==' → logprob: -11.750038146972656
    4. '_' → logprob: -12.375038146972656
    5. '   ' → logprob: -12.375038146972656
    6. 'ype' → logprob: -12.625038146972656
    7. '=='' → logprob: -12.750038146972656
    8. 'type' → logprob: -13.125038146972656
    9. 'Type' → logprob: -14.750038146972656
    10. '_code' → logprob: -14.750038146972656

Token 848: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3869801461696625
    2. '==' → logprob: -1.1369801759719849
    3. '=='' → logprob: -9.511980056762695
    4. '=' → logprob: -11.636980056762695
    5. '==
' → logprob: -11.761980056762695
    6. '   ' → logprob: -12.011980056762695
    7. '===' → logprob: -13.011980056762695
    8. ' =' → logprob: -13.261980056762695
    9. '=="' → logprob: -13.386980056762695
    10. '[' → logprob: -13.636980056762695

Token 849: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00020056030189152807
    2. ' '' → logprob: -8.875200271606445
    3. '   ' → logprob: -9.875200271606445
    4. ' ' → logprob: -13.000200271606445
    5. '  ' → logprob: -13.125200271606445
    6. 'B' → logprob: -13.125200271606445
    7. '"B' → logprob: -13.875200271606445
    8. '`' → logprob: -14.625200271606445
    9. '    ' → logprob: -15.125200271606445
    10. '       ' → logprob: -15.375200271606445

Token 850: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.038044244050979614
    2. ''' → logprob: -3.2880442142486572
    3. '"B' → logprob: -13.788043975830078
    4. '`' → logprob: -13.913043975830078
    5. ' B' → logprob: -14.288043975830078
    6. '   ' → logprob: -15.663043975830078
    7. '``' → logprob: -17.288043975830078
    8. '"' → logprob: -17.663043975830078
    9. '''' → logprob: -18.163043975830078
    10. '
' → logprob: -18.163043975830078

Token 851: ''
' (ID: 2207)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0598672516644001
    2. '   ' → logprob: -2.9348671436309814
    3. '':
' → logprob: -6.0598673820495605
    4. ':
' → logprob: -6.5598673820495605
    5. '):
' → logprob: -7.3098673820495605
    6. ':' → logprob: -8.934866905212402
    7. ''):
' → logprob: -9.059866905212402
    8. '```' → logprob: -9.559866905212402
    9. ''' → logprob: -9.934866905212402
    10. ''
' → logprob: -10.059866905212402

Token 852: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001737431448418647
    2. '   ' → logprob: -9.000173568725586
    3. 'if' → logprob: -10.000173568725586
    4. '```' → logprob: -12.375173568725586
    5. ' if' → logprob: -14.250173568725586
    6. '           ' → logprob: -17.125173568725586
    7. '     ' → logprob: -18.250173568725586
    8. 'return' → logprob: -18.500173568725586
    9. '(' → logprob: -18.500173568725586
    10. '``' → logprob: -18.625173568725586

Token 853: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4836181402206421
    2. 'if' (adapté à ' if') → logprob: -0.9836181402206421
    3. '   ' → logprob: -5.233618259429932
    4. ' if' → logprob: -5.483618259429932
    5. '     ' → logprob: -12.983617782592773
    6. '           ' → logprob: -13.233617782592773
    7. '      ' → logprob: -13.858617782592773
    8. ' ' → logprob: -14.108617782592773
    9. '	if' → logprob: -14.358617782592773
    10. '    ' → logprob: -14.983617782592773

Token 854: ' red' (ID: 3592)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.5679248571395874
    2. ' red' → logprob: -1.3179248571395874
    3. 'green' → logprob: -2.192924976348877
    4. ' green' → logprob: -3.442924976348877
    5. 'blue' → logprob: -3.942924976348877
    6. ' blue' → logprob: -5.942924976348877
    7. '(red' → logprob: -10.442924499511719
    8. '   ' → logprob: -14.067924499511719
    9. 'free' → logprob: -14.442924499511719
    10. '_red' → logprob: -14.567924499511719

Token 855: '_green' (ID: 113714)
  Prédit: '_person'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -0.0006034302059561014
    2. '_blue' → logprob: -7.625603199005127
    3. '_type' → logprob: -10.125603675842285
    4. '_people' → logprob: -10.750603675842285
    5. '_green' → logprob: -11.125603675842285
    6. '_red' → logprob: -11.125603675842285
    7. '_white' → logprob: -11.500603675842285
    8. '```' → logprob: -13.125603675842285
    9. '_' → logprob: -13.375603675842285
    10. '_parent' → logprob: -13.500603675842285

Token 856: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -1.0206720617134124e-05
    2. 'pair' → logprob: -12.37501049041748
    3. '_pairs' → logprob: -12.87501049041748
    4. '_p' → logprob: -13.50001049041748
    5. '_person' → logprob: -14.62501049041748
    6. ''_' → logprob: -14.62501049041748
    7. '```' → logprob: -15.12501049041748
    8. '_PAIR' → logprob: -16.125009536743164
    9. '(pair' → logprob: -16.250009536743164
    10. ')_' → logprob: -16.500009536743164

Token 857: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2836279571056366
    2. ':' → logprob: -1.408627986907959
    3. '           ' → logprob: -6.033627986907959
    4. '          ' → logprob: -10.9086275100708
    5. '```' → logprob: -11.2836275100708
    6. ',' → logprob: -11.6586275100708
    7. '):
' → logprob: -11.6586275100708
    8. ':
' → logprob: -11.7836275100708
    9. '{
' → logprob: -11.9086275100708
    10. ':

' → logprob: -12.0336275100708

Token 858: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007482792134396732
    2. 'return' → logprob: -7.875748157501221
    3. '```' → logprob: -8.875748634338379
    4. '       ' → logprob: -9.375748634338379
    5. ':' → logprob: -9.375748634338379
    6. ':
' → logprob: -10.500748634338379
    7. ' return' → logprob: -10.875748634338379
    8. '{
' → logprob: -13.250748634338379
    9. ':return' → logprob: -13.375748634338379
    10. '		' → logprob: -13.375748634338379

Token 859: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0006079599261283875
    2. '       ' → logprob: -8.00060749053955
    3. ' return' → logprob: -8.25060749053955
    4. '           ' → logprob: -11.62560749053955
    5. '```' → logprob: -14.00060749053955
    6. '   ' → logprob: -14.37560749053955
    7. '(return' → logprob: -14.62560749053955
    8. '(' → logprob: -14.87560749053955
    9. '	return' → logprob: -16.250608444213867
    10. ':return' → logprob: -16.875608444213867

Token 860: ' (' (ID: 350)
  Prédit: '(acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.03804286941885948
    2. ' (' → logprob: -3.2880427837371826
    3. '   ' → logprob: -13.538043022155762
    4. '(' → logprob: -17.413042068481445
    5. '           ' → logprob: -17.788042068481445
    6. '       ' → logprob: -17.788042068481445
    7. '(ans' → logprob: -17.913042068481445
    8. ' ' → logprob: -18.663042068481445
    9. '(ac' → logprob: -18.663042068481445
    10. '  ' → logprob: -18.913042068481445

Token 861: 'acc' (ID: 3717)
  Prédit: 'acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.004087185952812433
    2. '(acc' → logprob: -5.504086971282959
    3. ' accumulator' → logprob: -11.879087448120117
    4. '	acc' → logprob: -14.254087448120117
    5. '   ' → logprob: -15.004087448120117
    6. '_acc' → logprob: -15.004087448120117
    7. 'Accumulator' → logprob: -15.504087448120117
    8. ''acc' → logprob: -16.504087448120117
    9. '(' → logprob: -16.504087448120117
    10. ' (' → logprob: -16.629087448120117

Token 862: 'umulator' (ID: 90989)
  Prédit: '(acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.15643051266670227
    2. 'umulator' → logprob: -2.15643048286438
    3. 'acc' → logprob: -3.90643048286438
    4. 'um' → logprob: -5.031430721282959
    5. 'umul' → logprob: -6.281430721282959
    6. 'umerator' → logprob: -8.7814302444458
    7. 'umulate' → logprob: -9.0314302444458
    8. 'u' → logprob: -9.7814302444458
    9. '(' → logprob: -10.5314302444458
    10. 'umulative' → logprob: -10.6564302444458

Token 863: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -9.088346359931165e-07
    2. 'result' → logprob: -14.125000953674316
    3. '_results' → logprob: -16.5
    4. '   ' → logprob: -17.5
    5. ')' → logprob: -17.625
    6. '_RESULT' → logprob: -17.625
    7. '_res' → logprob: -17.75
    8. '```' → logprob: -17.875
    9. ' _' → logprob: -18.5
    10. 'Result' → logprob: -19.375

Token 864: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0024813658092170954
    2. '*' → logprob: -6.002481460571289
    3. ',' → logprob: -12.377481460571289
    4. ' ' → logprob: -14.627481460571289
    5. '    ' → logprob: -15.252481460571289
    6. ' ' → logprob: -15.627481460571289
    7. '   ' → logprob: -16.00248146057129
    8. '*,' → logprob: -16.12748146057129
    9. '        ' → logprob: -16.87748146057129
    10. 'def' → logprob: -17.00248146057129

Token 865: ' red' (ID: 3592)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.01816457509994507
    2. ' red' → logprob: -4.01816463470459
    3. '(red' → logprob: -11.14316463470459
    4. '(' → logprob: -16.518163681030273
    5. 'r' → logprob: -17.393163681030273
    6. ' ' → logprob: -18.393163681030273
    7. '   ' → logprob: -19.268163681030273
    8. 'blue' → logprob: -19.393163681030273
    9. '0' → logprob: -19.643163681030273
    10. '
' → logprob: -19.643163681030273

Token 866: '_green' (ID: 113714)
  Prédit: '_green'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_green' → logprob: -4.127333340875339e-06
    2. '_blue' → logprob: -13.000003814697266
    3. 'green' → logprob: -13.500003814697266
    4. '_red' → logprob: -15.125003814697266
    5. '_person' → logprob: -16.500003814697266
    6. '_GREEN' → logprob: -17.000003814697266
    7. '_white' → logprob: -17.125003814697266
    8. '```' → logprob: -17.750003814697266
    9. '_g' → logprob: -18.500003814697266
    10. ' green' → logprob: -18.750003814697266

Token 867: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -0.0002087853499688208
    2. 'pair' → logprob: -8.500208854675293
    3. 'Pair' → logprob: -12.500208854675293
    4. '_pairs' → logprob: -14.125208854675293
    5. '```' → logprob: -15.875208854675293
    6. '_PAIR' → logprob: -16.375207901000977
    7. ')' → logprob: -16.500207901000977
    8. '_' → logprob: -16.500207901000977
    9. '_p' → logprob: -16.625207901000977
    10. ' pair' → logprob: -17.000207901000977

Token 868: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.4034345187828876e-05
    2. ' ,' → logprob: -11.00002384185791
    3. ',
' → logprob: -12.87502384185791
    4. '       ' → logprob: -13.75002384185791
    5. '           ' → logprob: -13.75002384185791
    6. ')' → logprob: -14.37502384185791
    7. '   ' → logprob: -14.50002384185791
    8. '`,' → logprob: -14.87502384185791
    9. '```' → logprob: -14.87502384185791
    10. '),' → logprob: -15.62502384185791

Token 869: ' free' (ID: 2240)
  Prédit: ' free'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' free' → logprob: -0.2519296407699585
    2. 'free' → logprob: -1.5019296407699585
    3. '           ' → logprob: -15.50192928314209
    4. '_free' → logprob: -16.001930236816406
    5. '       ' → logprob: -16.251930236816406
    6. '	free' → logprob: -16.501930236816406
    7. 'Free' → logprob: -17.376930236816406
    8. '.free' → logprob: -17.376930236816406
    9. 'f' → logprob: -18.251930236816406
    10. 'acc' → logprob: -18.251930236816406

Token 870: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -4.008129963040119e-06
    2. 'person' → logprob: -12.750003814697266
    3. '_people' → logprob: -14.875003814697266
    4. ',' → logprob: -15.250003814697266
    5. '_PERSON' → logprob: -15.750003814697266
    6. 'Person' → logprob: -16.250003814697266
    7. ')' → logprob: -16.625003814697266
    8. 'free' → logprob: -16.875003814697266
    9. 'PERSON' → logprob: -17.250003814697266
    10. '_free' → logprob: -17.375003814697266

Token 871: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002728985855355859
    2. ' ,' → logprob: -9.000272750854492
    3. '       ' → logprob: -9.125272750854492
    4. '   ' → logprob: -10.875272750854492
    5. '           ' → logprob: -11.375272750854492
    6. ')' → logprob: -12.750272750854492
    7. '```' → logprob: -13.000272750854492
    8. ',
' → logprob: -13.625272750854492
    9. '[' → logprob: -14.625272750854492
    10. ' ' → logprob: -15.125272750854492

Token 872: ' red' (ID: 3592)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.6931478977203369
    2. ' red' → logprob: -0.6931478977203369
    3. '           ' → logprob: -15.818147659301758
    4. '(red' → logprob: -16.318147659301758
    5. 'free' → logprob: -16.693147659301758
    6. '       ' → logprob: -16.818147659301758
    7. '0' → logprob: -16.943147659301758
    8. '          ' → logprob: -17.193147659301758
    9. '         ' → logprob: -17.193147659301758
    10. '   ' → logprob: -17.193147659301758

Token 873: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -5.5577775128767826e-06
    2. 'person' → logprob: -12.500005722045898
    3. '_green' → logprob: -13.750005722045898
    4. '_pair' → logprob: -14.500005722045898
    5. '_people' → logprob: -17.1250057220459
    6. '```' → logprob: -17.3750057220459
    7. 'Person' → logprob: -17.8750057220459
    8. '_p' → logprob: -18.0000057220459
    9. '_type' → logprob: -18.1250057220459
    10. '_parent' → logprob: -18.3750057220459

Token 874: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007443527574650943
    2. ' ,' → logprob: -7.375744342803955
    3. '       ' → logprob: -9.500744819641113
    4. '   ' → logprob: -11.125744819641113
    5. '           ' → logprob: -11.250744819641113
    6. '```' → logprob: -12.125744819641113
    7. '-' → logprob: -12.375744819641113
    8. ' -' → logprob: -13.250744819641113
    9. ' green' → logprob: -14.125744819641113
    10. ' ' → logprob: -14.500744819641113

Token 875: ' green' (ID: 8851)
  Prédit: 'green'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'green' → logprob: -0.20141403377056122
    2. ' green' → logprob: -1.7014139890670776
    3. '   ' → logprob: -15.076414108276367
    4. 'Green' → logprob: -16.576414108276367
    5. 'blue' → logprob: -16.701414108276367
    6. '_green' → logprob: -16.826414108276367
    7. '.green' → logprob: -16.951414108276367
    8. '       ' → logprob: -17.201414108276367
    9. '           ' → logprob: -17.201414108276367
    10. '```' → logprob: -17.326414108276367

Token 876: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -4.56102097814437e-05
    2. 'person' → logprob: -10.000045776367188
    3. '```' → logprob: -16.875045776367188
    4. '   ' → logprob: -17.250045776367188
    5. '_PERSON' → logprob: -18.500045776367188
    6. '_p' → logprob: -18.500045776367188
    7. 'personal' → logprob: -18.625045776367188
    8. '_user' → logprob: -18.875045776367188
    9. '_people' → logprob: -19.250045776367188
    10. 'Person' → logprob: -19.500045776367188

Token 877: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007707939948886633
    2. ' ,' → logprob: -7.500770568847656
    3. '-' → logprob: -9.375770568847656
    4. '       ' → logprob: -9.750770568847656
    5. ' -' → logprob: -10.000770568847656
    6. '```' → logprob: -11.250770568847656
    7. '           ' → logprob: -11.750770568847656
    8. '   ' → logprob: -12.250770568847656
    9. ',
' → logprob: -13.250770568847656
    10. '``' → logprob: -14.875770568847656

Token 878: ' blue' (ID: 9861)
  Prédit: ' blue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blue' → logprob: -0.16022513806819916
    2. 'blue' → logprob: -1.9102251529693604
    3. 'Blue' → logprob: -15.410224914550781
    4. ' ' → logprob: -15.535224914550781
    5. '```' → logprob: -16.53522491455078
    6. '   ' → logprob: -16.78522491455078
    7. '    ' → logprob: -16.91022491455078
    8. '           ' → logprob: -16.91022491455078
    9. '_blue' → logprob: -16.91022491455078
    10. '.blue' → logprob: -17.28522491455078

Token 879: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -1.9504606825648807e-05
    2. '```' → logprob: -12.250019073486328
    3. '   ' → logprob: -12.750019073486328
    4. '_product' → logprob: -13.375019073486328
    5. 'person' → logprob: -13.500019073486328
    6. '_p' → logprob: -13.625019073486328
    7. '_people' → logprob: -14.125019073486328
    8. '_post' → logprob: -14.250019073486328
    9. '_pair' → logprob: -14.250019073486328
    10. '_count' → logprob: -14.500019073486328

Token 880: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38528385758399963
    2. ' -' → logprob: -1.2602838277816772
    3. '-' → logprob: -3.385283946990967
    4. '           ' → logprob: -6.510283946990967
    5. ' ,' → logprob: -7.760283946990967
    6. '       ' → logprob: -8.510283470153809
    7. '   ' → logprob: -10.135283470153809
    8. ' ' → logprob: -10.635283470153809
    9. '          ' → logprob: -11.010283470153809
    10. '```' → logprob: -11.260283470153809

Token 881: ' red' (ID: 3592)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.31326186656951904
    2. ' red' → logprob: -1.313261866569519
    3. '           ' → logprob: -17.063261032104492
    4. ' ' → logprob: -17.688261032104492
    5. '                        ' → logprob: -17.813261032104492
    6. '                         ' → logprob: -18.063261032104492
    7. '                       ' → logprob: -18.063261032104492
    8. '            ' → logprob: -18.188261032104492
    9. '    ' → logprob: -18.313261032104492
    10. '   ' → logprob: -18.563261032104492

Token 882: '_green' (ID: 113714)
  Prédit: '_green'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_green' → logprob: -4.246537173457909e-06
    2. '_blue' → logprob: -13.125003814697266
    3. 'green' → logprob: -13.500003814697266
    4. '_GREEN' → logprob: -14.875003814697266
    5. '```' → logprob: -16.000003814697266
    6. '_red' → logprob: -16.125003814697266
    7. '
' → logprob: -16.625003814697266
    8. 'Green' → logprob: -17.125003814697266
    9. '   ' → logprob: -17.375003814697266
    10. '-green' → logprob: -17.625003814697266

Token 883: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -0.0002777822664938867
    2. 'pair' → logprob: -8.875277519226074
    3. '-' → logprob: -9.125277519226074
    4. '_pairs' → logprob: -11.750277519226074
    5. ' -' → logprob: -11.875277519226074
    6. ',' → logprob: -12.250277519226074
    7. '_' → logprob: -13.250277519226074
    8. '```' → logprob: -13.500277519226074
    9. 'Pair' → logprob: -13.625277519226074
    10. ' pair' → logprob: -13.625277519226074

Token 884: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4743318557739258
    2. '-' → logprob: -0.9743318557739258
    3. ',' → logprob: -8.724331855773926
    4. ' ' → logprob: -9.599331855773926
    5. '           ' → logprob: -11.349331855773926
    6. '       ' → logprob: -12.724331855773926
    7. ' ' → logprob: -13.224331855773926
    8. ')' → logprob: -13.599331855773926
    9. '        ' → logprob: -13.724331855773926
    10. '   ' → logprob: -13.849331855773926

Token 885: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.506661833962426e-05
    2. ' ' → logprob: -9.37508487701416
    3. '   ' → logprob: -17.125085830688477
    4. '           ' → logprob: -17.250085830688477
    5. '       ' → logprob: -19.000085830688477
    6. '```' → logprob: -19.250085830688477
    7. '۱' → logprob: -20.750085830688477
    8. '(' → logprob: -21.125085830688477
    9. '１' → logprob: -21.250085830688477
    10. 'def' → logprob: -21.375085830688477

Token 886: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -18.000001907348633
    4. '```' → logprob: -20.000001907348633
    5. '       ' → logprob: -20.375001907348633
    6. '۱' → logprob: -20.750001907348633
    7. '１' → logprob: -21.375001907348633
    8. '           ' → logprob: -21.500001907348633
    9. '-' → logprob: -21.875001907348633
    10. '
' → logprob: -21.875001907348633

Token 887: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015824666479602456
    2. ' ,' → logprob: -8.875158309936523
    3. '       ' → logprob: -11.750158309936523
    4. '           ' → logprob: -12.625158309936523
    5. '```' → logprob: -12.875158309936523
    6. ',
' → logprob: -13.125158309936523
    7. '   ' → logprob: -13.750158309936523
    8. ')' → logprob: -14.500158309936523
    9. '),' → logprob: -15.125158309936523
    10. '`,' → logprob: -15.875158309936523

Token 888: ' green' (ID: 8851)
  Prédit: 'green'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'green' → logprob: -0.3868762254714966
    2. ' green' → logprob: -1.1368762254714966
    3. 'free' → logprob: -12.386876106262207
    4. ' free' → logprob: -14.261876106262207
    5. '_green' → logprob: -15.511876106262207
    6. 'mod' → logprob: -15.761876106262207
    7. '.green' → logprob: -16.511877059936523
    8. 'Green' → logprob: -17.386877059936523
    9. ' зелен' → logprob: -18.261877059936523
    10. '           ' → logprob: -18.261877059936523

Token 889: '_blue' (ID: 81479)
  Prédit: '_blue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_blue' → logprob: -0.0021882106084376574
    2. '_green' → logprob: -6.127188205718994
    3. 'blue' → logprob: -13.877188682556152
    4. '_white' → logprob: -14.252188682556152
    5. '_BLUE' → logprob: -15.002188682556152
    6. '_black' → logprob: -15.377188682556152
    7. '```' → logprob: -15.627188682556152
    8. '
' → logprob: -15.752188682556152
    9. 'Blue' → logprob: -16.002187728881836
    10. '\' → logprob: -16.127187728881836

Token 890: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -4.842555426876061e-06
    2. 'pair' → logprob: -12.375004768371582
    3. '_pairs' → logprob: -14.875004768371582
    4. 'Pair' → logprob: -15.750004768371582
    5. '```' → logprob: -17.1250057220459
    6. '_' → logprob: -18.0000057220459
    7. '_p' → logprob: -18.5000057220459
    8. ' pair' → logprob: -18.6250057220459
    9. '_part' → logprob: -19.0000057220459
    10. '_PAIR' → logprob: -19.0000057220459

Token 891: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018327576981391758
    2. ' ,' → logprob: -8.62518310546875
    3. ',
' → logprob: -13.00018310546875
    4. '```' → logprob: -14.12518310546875
    5. ' blue' → logprob: -15.87518310546875
    6. '   ' → logprob: -16.37518310546875
    7. '       ' → logprob: -16.62518310546875
    8. ')' → logprob: -16.87518310546875
    9. '           ' → logprob: -17.00018310546875
    10. '`,' → logprob: -17.37518310546875

Token 892: ' blue' (ID: 9861)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.12693482637405396
    2. ' blue' → logprob: -2.126934766769409
    3. 'free' → logprob: -12.376935005187988
    4. ' ' → logprob: -13.376935005187988
    5. '   ' → logprob: -14.251935005187988
    6. ' free' → logprob: -16.376934051513672
    7. 'Blue' → logprob: -16.376934051513672
    8. '  ' → logprob: -17.126934051513672
    9. '    ' → logprob: -17.251934051513672
    10. '0' → logprob: -17.376934051513672

Token 893: '_red' (ID: 61951)
  Prédit: '_pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -0.313839852809906
    2. '_red' → logprob: -1.3138399124145508
    3. '_blue' → logprob: -7.688839912414551
    4. '_pairs' → logprob: -9.56383991241455
    5. '_right' → logprob: -10.68883991241455
    6. 'pair' → logprob: -11.56383991241455
    7. 'red' → logprob: -12.81383991241455
    8. '
' → logprob: -13.68883991241455
    9. '_green' → logprob: -13.81383991241455
    10. '_rest' → logprob: -13.93883991241455

Token 894: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -0.029757089912891388
    2. 'pair' → logprob: -3.529757022857666
    3. 'Pair' → logprob: -12.779757499694824
    4. '_pairs' → logprob: -12.779757499694824
    5. ' pair' → logprob: -14.529757499694824
    6. 'PAIR' → logprob: -16.279756546020508
    7. 'pairs' → logprob: -16.404756546020508
    8. '(pair' → logprob: -16.404756546020508
    9. 'red' → logprob: -16.779756546020508
    10. 'paired' → logprob: -17.279756546020508

Token 895: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.028892219066619873
    2. ')
' → logprob: -3.6538922786712646
    3. '       ' → logprob: -6.7788920402526855
    4. ',' → logprob: -6.9038920402526855
    5. '   ' → logprob: -7.9038920402526855
    6. ' )' → logprob: -10.153892517089844
    7. '           ' → logprob: -11.653892517089844
    8. '```' → logprob: -11.778892517089844
    9. ')`' → logprob: -12.653892517089844
    10. ')`
' → logprob: -13.028892517089844

Token 896: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025385632179677486
    2. 'elif' → logprob: -6.627538681030273
    3. '   ' → logprob: -7.502538681030273
    4. ',' → logprob: -7.502538681030273
    5. ' elif' → logprob: -9.877538681030273
    6. 'else' → logprob: -10.127538681030273
    7. '```' → logprob: -12.002538681030273
    8. ' else' → logprob: -12.752538681030273
    9. '           ' → logprob: -13.002538681030273
    10. ',
' → logprob: -13.252538681030273

Token 897: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.002454964676871896
    2. '       ' → logprob: -6.12745475769043
    3. ' elif' → logprob: -8.25245475769043
    4. 'else' → logprob: -12.37745475769043
    5. '   ' → logprob: -13.00245475769043
    6. '```' → logprob: -13.62745475769043
    7. '	elif' → logprob: -14.00245475769043
    8. '           ' → logprob: -15.00245475769043
    9. 'el' → logprob: -15.62745475769043
    10. '#elif' → logprob: -16.12745475769043

Token 898: ' red' (ID: 3592)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.2559491693973541
    2. ' red' → logprob: -1.5059491395950317
    3. 'green' → logprob: -6.630949020385742
    4. 'blue' → logprob: -7.005949020385742
    5. ' green' → logprob: -7.130949020385742
    6. '(red' → logprob: -7.630949020385742
    7. ' blue' → logprob: -7.755949020385742
    8. '(' → logprob: -10.755949020385742
    9. '   ' → logprob: -11.005949020385742
    10. ' (' → logprob: -11.755949020385742

Token 899: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -0.38690513372421265
    2. '_green' → logprob: -1.1369051933288574
    3. 'green' → logprob: -10.8869047164917
    4. '_blue' → logprob: -12.1369047164917
    5. '```' → logprob: -12.8869047164917
    6. '_people' → logprob: -12.8869047164917
    7. 'person' → logprob: -13.7619047164917
    8. '_white' → logprob: -14.6369047164917
    9. '_parent' → logprob: -14.7619047164917
    10. '_g' → logprob: -14.7619047164917

Token 900: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4675048887729645
    2. ':
' → logprob: -1.217504858970642
    3. '           ' → logprob: -2.5925049781799316
    4. '       ' → logprob: -6.342504978179932
    5. '```' → logprob: -7.967504978179932
    6. '==' → logprob: -8.592504501342773
    7. ',' → logprob: -9.592504501342773
    8. ':return' → logprob: -9.842504501342773
    9. '          ' → logprob: -10.467504501342773
    10. '   ' → logprob: -10.592504501342773

Token 901: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.41032499074935913
    2. '       ' → logprob: -1.160325050354004
    3. 'return' → logprob: -3.785325050354004
    4. ' return' → logprob: -7.910325050354004
    5. '   ' → logprob: -9.410325050354004
    6. '```' → logprob: -11.160325050354004
    7. '               ' → logprob: -12.285325050354004
    8. '(' → logprob: -12.785325050354004
    9. '          ' → logprob: -13.160325050354004
    10. ':return' → logprob: -13.410325050354004

Token 902: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.003251746529713273
    2. '       ' → logprob: -6.003251552581787
    3. ' return' → logprob: -7.253251552581787
    4. '           ' → logprob: -9.628252029418945
    5. '(' → logprob: -14.128252029418945
    6. '```' → logprob: -14.128252029418945
    7. '(return' → logprob: -15.128252029418945
    8. '   ' → logprob: -15.628252029418945
    9. '	return' → logprob: -16.378252029418945
    10. '               ' → logprob: -17.378252029418945

Token 903: ' (' (ID: 350)
  Prédit: '(acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.0006936123827472329
    2. '(' → logprob: -7.7506937980651855
    3. ' (' → logprob: -8.250693321228027
    4. '   ' → logprob: -14.250693321228027
    5. '(return' → logprob: -14.500693321228027
    6. '(update' → logprob: -15.500693321228027
    7. '(ans' → logprob: -16.000694274902344
    8. '```' → logprob: -16.625694274902344
    9. '(
' → logprob: -16.875694274902344
    10. '(abs' → logprob: -17.000694274902344

Token 904: 'acc' (ID: 3717)
  Prédit: '(acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -2.8444881536415778e-05
    2. 'acc' → logprob: -11.125028610229492
    3. ' (' → logprob: -11.375028610229492
    4. '(' → logprob: -13.875028610229492
    5. '   ' → logprob: -14.375028610229492
    6. ' accumulator' → logprob: -14.750028610229492
    7. 'Accumulator' → logprob: -16.625028610229492
    8. '	acc' → logprob: -17.000028610229492
    9. '(ac' → logprob: -17.375028610229492
    10. '(
' → logprob: -17.875028610229492

Token 905: 'umulator' (ID: 90989)
  Prédit: 'umulator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulator' → logprob: -0.6802343130111694
    2. '(acc' → logprob: -0.8052343130111694
    3. 'acc' → logprob: -3.555234432220459
    4. 'um' → logprob: -4.180234432220459
    5. '_acc' → logprob: -7.305234432220459
    6. 'umulate' → logprob: -7.555234432220459
    7. 'ulator' → logprob: -8.0552339553833
    8. '(' → logprob: -8.0552339553833
    9. 'umerator' → logprob: -8.6802339553833
    10. 'umul' → logprob: -9.3052339553833

Token 906: '_result' (ID: 11623)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4880666732788086
    2. '*' → logprob: -1.2380666732788086
    3. '_result' → logprob: -2.6130666732788086
    4. '   ' → logprob: -5.238066673278809
    5. '+' → logprob: -5.363066673278809
    6. '```' → logprob: -5.613066673278809
    7. ',' → logprob: -6.113066673278809
    8. ' +' → logprob: -6.363066673278809
    9. '       ' → logprob: -6.488066673278809
    10. '_acc' → logprob: -6.613066673278809

Token 907: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.008791954256594181
    2. '*' → logprob: -4.758791923522949
    3. ',' → logprob: -9.88379192352295
    4. '```' → logprob: -9.88379192352295
    5. '       ' → logprob: -10.00879192352295
    6. ' ' → logprob: -11.88379192352295
    7. ' +' → logprob: -12.00879192352295
    8. '+' → logprob: -12.13379192352295
    9. '   ' → logprob: -13.00879192352295
    10. ' ' → logprob: -13.00879192352295

Token 908: ' red' (ID: 3592)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.22581921517848969
    2. ' red' → logprob: -1.6008192300796509
    3. '(red' → logprob: -8.10081958770752
    4. 'blue' → logprob: -9.85081958770752
    5. ' blue' → logprob: -10.60081958770752
    6. '(' → logprob: -11.10081958770752
    7. ' (' → logprob: -12.72581958770752
    8. 'free' → logprob: -12.85081958770752
    9. ' ' → logprob: -13.35081958770752
    10. 're' → logprob: -14.72581958770752

Token 909: '_person' (ID: 53205)
  Prédit: '_green'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_green' → logprob: -0.2560732066631317
    2. '_person' → logprob: -1.506073236465454
    3. 'green' → logprob: -6.131072998046875
    4. '_pair' → logprob: -6.381072998046875
    5. '_red' → logprob: -8.506072998046875
    6. 'person' → logprob: -10.506072998046875
    7. '_pairs' → logprob: -11.506072998046875
    8. '_blue' → logprob: -11.506072998046875
    9. '_parent' → logprob: -12.256072998046875
    10. 'pair' → logprob: -12.756072998046875

Token 910: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.6934557505883276e-05
    2. ' ,' → logprob: -10.375057220458984
    3. '       ' → logprob: -11.000057220458984
    4. '           ' → logprob: -12.750057220458984
    5. '   ' → logprob: -13.625057220458984
    6. ')' → logprob: -13.750057220458984
    7. ',
' → logprob: -13.875057220458984
    8. '),' → logprob: -14.125057220458984
    9. ',input' → logprob: -14.750057220458984
    10. '```' → logprob: -14.750057220458984

Token 911: ' free' (ID: 2240)
  Prédit: ' free'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' free' → logprob: -0.01814994215965271
    2. 'free' → logprob: -4.0181498527526855
    3. 'Free' → logprob: -19.018150329589844
    4. '_free' → logprob: -19.518150329589844
    5. '.free' → logprob: -19.643150329589844
    6. '	free' → logprob: -20.268150329589844
    7. '       ' → logprob: -20.768150329589844
    8. '-free' → logprob: -22.518150329589844
    9. '           ' → logprob: -22.518150329589844
    10. '   ' → logprob: -22.768150329589844

Token 912: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -0.04635968059301376
    2. 'free' → logprob: -3.1713597774505615
    3. ' free' → logprob: -6.421359539031982
    4. ',' → logprob: -6.671359539031982
    5. '_free' → logprob: -8.04636001586914
    6. 'Person' → logprob: -9.54636001586914
    7. 'person' → logprob: -10.29636001586914
    8. '```' → logprob: -12.29636001586914
    9. '_result' → logprob: -12.67136001586914
    10. '_type' → logprob: -12.79636001586914

Token 913: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007072913460433483
    2. '-' → logprob: -5.257072925567627
    3. ' -' → logprob: -6.382072925567627
    4. ' ,' → logprob: -9.257072448730469
    5. '   ' → logprob: -10.757072448730469
    6. '       ' → logprob: -10.882072448730469
    7. ')' → logprob: -12.757072448730469
    8. '           ' → logprob: -13.132072448730469
    9. ' free' → logprob: -13.757072448730469
    10. ' ' → logprob: -13.757072448730469

Token 914: ' red' (ID: 3592)
  Prédit: ' red'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' red' → logprob: -0.023246178403496742
    2. 'red' → logprob: -3.7732462882995605
    3. ' ' → logprob: -15.898245811462402
    4. '   ' → logprob: -16.14824676513672
    5. 'Red' → logprob: -16.27324676513672
    6. ' blue' → logprob: -17.02324676513672
    7. '(red' → logprob: -17.02324676513672
    8. 'r' → logprob: -17.27324676513672
    9. '    ' → logprob: -17.39824676513672
    10. '           ' → logprob: -17.52324676513672

Token 915: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -4.320199877838604e-07
    2. 'person' → logprob: -15.5
    3. '_part' → logprob: -17.125
    4. '_people' → logprob: -17.875
    5. '```' → logprob: -18.25
    6. '_p' → logprob: -18.375
    7. '_PERSON' → logprob: -18.5
    8. ',' → logprob: -18.625
    9. '   ' → logprob: -18.75
    10. '_post' → logprob: -18.75

Token 916: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.05939197912812233
    2. '-' → logprob: -2.934391975402832
    3. ',' → logprob: -5.434391975402832
    4. '```' → logprob: -9.809391975402832
    5. '           ' → logprob: -10.184391975402832
    6. ' ' → logprob: -11.184391975402832
    7. '       ' → logprob: -11.684391975402832
    8. ' ,' → logprob: -12.434391975402832
    9. ' -,' → logprob: -12.684391975402832
    10. 'def' → logprob: -12.684391975402832

Token 917: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017032715259119868
    2. ' ' → logprob: -6.376703262329102
    3. '```' → logprob: -15.251703262329102
    4. '           ' → logprob: -15.501703262329102
    5. '   ' → logprob: -15.626703262329102
    6. '+' → logprob: -16.1267032623291
    7. '(' → logprob: -16.2517032623291
    8. ')' → logprob: -16.8767032623291
    9. ' +' → logprob: -16.8767032623291
    10. '=' → logprob: -17.0017032623291

Token 918: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '```' → logprob: -19.1250057220459
    4. '   ' → logprob: -19.2500057220459
    5. '0' → logprob: -20.5000057220459
    6. ',' → logprob: -21.1875057220459
    7. 'Multip' → logprob: -21.1875057220459
    8. '' → logprob: -21.1875057220459
    9. '-' → logprob: -21.5000057220459
    10. '.' → logprob: -21.5625057220459

Token 919: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.5941604690160602e-05
    2. ' ,' → logprob: -10.625025749206543
    3. ',
' → logprob: -14.500025749206543
    4. ')' → logprob: -14.500025749206543
    5. '```' → logprob: -15.250025749206543
    6. '),' → logprob: -16.12502670288086
    7. '           ' → logprob: -16.25002670288086
    8. '       ' → logprob: -16.62502670288086
    9. '   ' → logprob: -16.75002670288086
    10. ',g' → logprob: -17.00002670288086

Token 920: ' green' (ID: 8851)
  Prédit: ' green'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' green' → logprob: -0.2519293427467346
    2. 'green' → logprob: -1.5019292831420898
    3. 'Green' → logprob: -16.876930236816406
    4. '.green' → logprob: -17.001930236816406
    5. '_green' → logprob: -17.251930236816406
    6. ' blue' → logprob: -17.751930236816406
    7. ' зелен' → logprob: -18.126930236816406
    8. 'blue' → logprob: -18.376930236816406
    9. '```' → logprob: -18.501930236816406
    10. '   ' → logprob: -19.626930236816406

Token 921: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -6.704273118884885e-07
    2. 'person' → logprob: -16.0
    3. '```' → logprob: -16.25
    4. '   ' → logprob: -16.625
    5. ' _' → logprob: -16.875
    6. ',' → logprob: -16.875
    7. '_PERSON' → logprob: -17.5
    8. '_user' → logprob: -17.625
    9. ',_' → logprob: -18.0
    10. '_p' → logprob: -18.25

Token 922: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.049755782238208e-05
    2. ' ,' → logprob: -10.12505054473877
    3. '```' → logprob: -11.75005054473877
    4. '       ' → logprob: -13.37505054473877
    5. '   ' → logprob: -15.12505054473877
    6. ',
' → logprob: -15.37505054473877
    7. ')' → logprob: -15.75005054473877
    8. '           ' → logprob: -16.125049591064453
    9. '`,' → logprob: -16.375049591064453
    10. '``' → logprob: -16.625049591064453

Token 923: ' blue' (ID: 9861)
  Prédit: ' blue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blue' → logprob: -0.12692853808403015
    2. 'blue' → logprob: -2.1269285678863525
    3. ' ' → logprob: -16.001928329467773
    4. 'Blue' → logprob: -16.126928329467773
    5. '.blue' → logprob: -17.001928329467773
    6. '```' → logprob: -17.001928329467773
    7. '_blue' → logprob: -17.001928329467773
    8. '   ' → logprob: -17.126928329467773
    9. 'b' → logprob: -17.751928329467773
    10. '蓝' → logprob: -17.876928329467773

Token 924: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -4.008129963040119e-06
    2. 'person' → logprob: -12.500003814697266
    3. '```' → logprob: -16.000003814697266
    4. '_p' → logprob: -17.125003814697266
    5. '_PERSON' → logprob: -17.375003814697266
    6. '_people' → logprob: -17.500003814697266
    7. 'Person' → logprob: -18.000003814697266
    8. '_user' → logprob: -18.250003814697266
    9. '   ' → logprob: -18.750003814697266
    10. ',' → logprob: -19.250003814697266

Token 925: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022165567497722805
    2. ' ,' → logprob: -9.250221252441406
    3. '       ' → logprob: -9.625221252441406
    4. '```' → logprob: -10.000221252441406
    5. '           ' → logprob: -11.750221252441406
    6. ')' → logprob: -13.500221252441406
    7. '   ' → logprob: -13.500221252441406
    8. '*' → logprob: -14.375221252441406
    9. '``' → logprob: -14.375221252441406
    10. ',
' → logprob: -15.000221252441406

Token 926: ' red' (ID: 3592)
  Prédit: ' red'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' red' → logprob: -0.0009140860638581216
    2. 'red' → logprob: -7.000914096832275
    3. ' blue' → logprob: -12.875913619995117
    4. ' green' → logprob: -17.125913619995117
    5. 'blue' → logprob: -17.125913619995117
    6. '(red' → logprob: -17.375913619995117
    7. ' ' → logprob: -18.125913619995117
    8. '```' → logprob: -18.625913619995117
    9. 'Red' → logprob: -18.750913619995117
    10. '.red' → logprob: -18.750913619995117

Token 927: '_green' (ID: 113714)
  Prédit: '_green'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_green' → logprob: -1.0325924449716695e-05
    2. 'green' → logprob: -12.12501049041748
    3. '_blue' → logprob: -12.50001049041748
    4. '_GREEN' → logprob: -14.75001049041748
    5. 'Green' → logprob: -15.62501049041748
    6. '_g' → logprob: -15.87501049041748
    7. '```' → logprob: -16.125009536743164
    8. '_red' → logprob: -16.250009536743164
    9. '-green' → logprob: -16.375009536743164
    10. '_white' → logprob: -17.125009536743164

Token 928: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -4.024604277219623e-05
    2. '_pairs' → logprob: -10.750040054321289
    3. 'pair' → logprob: -11.125040054321289
    4. '+' → logprob: -12.875040054321289
    5. ' +' → logprob: -15.000040054321289
    6. 'Pair' → logprob: -15.375040054321289
    7. '_' → logprob: -15.750040054321289
    8. ' pair' → logprob: -16.00004005432129
    9. '   ' → logprob: -16.00004005432129
    10. ',' → logprob: -16.12504005432129

Token 929: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02777794376015663
    2. '+' → logprob: -3.902777910232544
    3. ' +' → logprob: -5.152778148651123
    4. ' ,' → logprob: -6.902778148651123
    5. '       ' → logprob: -8.402777671813965
    6. '+,' → logprob: -9.277777671813965
    7. '   ' → logprob: -10.527777671813965
    8. '           ' → logprob: -10.652777671813965
    9. '```' → logprob: -10.902777671813965
    10. ',
' → logprob: -11.902777671813965

Token 930: ' green' (ID: 8851)
  Prédit: 'green'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'green' → logprob: -0.16022513806819916
    2. ' green' → logprob: -1.9102251529693604
    3. 'blue' → logprob: -14.910224914550781
    4. 'red' → logprob: -15.410224914550781
    5. ' blue' → logprob: -15.910224914550781
    6. '.green' → logprob: -16.53522491455078
    7. '_green' → logprob: -16.78522491455078
    8. 'Green' → logprob: -17.16022491455078
    9. ' red' → logprob: -17.16022491455078
    10. '```' → logprob: -17.53522491455078

Token 931: '_blue' (ID: 81479)
  Prédit: '_blue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_blue' → logprob: -0.0024208449758589268
    2. '_pair' → logprob: -6.252420902252197
    3. '_green' → logprob: -7.627420902252197
    4. '_pairs' → logprob: -13.502420425415039
    5. 'blue' → logprob: -13.877420425415039
    6. 'pair' → logprob: -14.502420425415039
    7. 'Blue' → logprob: -14.502420425415039
    8. '_black' → logprob: -14.502420425415039
    9. '_plus' → logprob: -14.627420425415039
    10. '_white' → logprob: -14.627420425415039

Token 932: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -0.0005537479883059859
    2. 'pair' → logprob: -7.500553607940674
    3. '_pairs' → logprob: -14.125554084777832
    4. 'Pair' → logprob: -16.750553131103516
    5. ' pair' → logprob: -18.000553131103516
    6. '(pair' → logprob: -18.125553131103516
    7. '_trip' → logprob: -19.125553131103516
    8. 'PAIR' → logprob: -19.125553131103516
    9. '_PAIR' → logprob: -19.250553131103516
    10. 'paired' → logprob: -20.125553131103516

Token 933: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000477620807942003
    2. ' ,' → logprob: -8.00047779083252
    3. ' +' → logprob: -9.62547779083252
    4. '+' → logprob: -9.75047779083252
    5. '       ' → logprob: -11.50047779083252
    6. '```' → logprob: -13.12547779083252
    7. '           ' → logprob: -13.37547779083252
    8. ',
' → logprob: -13.62547779083252
    9. '   ' → logprob: -14.00047779083252
    10. '+,' → logprob: -14.12547779083252

Token 934: ' blue' (ID: 9861)
  Prédit: ' blue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blue' → logprob: -0.4740796685218811
    2. 'blue' → logprob: -0.9740796685218811
    3. '0' → logprob: -13.974080085754395
    4. ' ' → logprob: -14.099080085754395
    5. '   ' → logprob: -14.974080085754395
    6. 'Blue' → logprob: -15.724080085754395
    7. '       ' → logprob: -16.474079132080078
    8. '+' → logprob: -16.724079132080078
    9. ' ' → logprob: -16.849079132080078
    10. '    ' → logprob: -17.099079132080078

Token 935: '_red' (ID: 61951)
  Prédit: '_red'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_red' → logprob: -0.00231547630392015
    2. '_pair' → logprob: -6.252315521240234
    3. '_blue' → logprob: -7.877315521240234
    4. '_pairs' → logprob: -12.627315521240234
    5. '_black' → logprob: -13.627315521240234
    6. '_green' → logprob: -14.002315521240234
    7. '_right' → logprob: -14.502315521240234
    8. 'red' → logprob: -15.002315521240234
    9. '_' → logprob: -15.252315521240234
    10. 'Red' → logprob: -15.627315521240234

Token 936: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -0.000206401280593127
    2. 'pair' → logprob: -8.500205993652344
    3. '_pairs' → logprob: -13.500205993652344
    4. 'Pair' → logprob: -13.625205993652344
    5. '+' → logprob: -16.000205993652344
    6. '_trip' → logprob: -16.750205993652344
    7. ' pair' → logprob: -18.250205993652344
    8. '_PAIR' → logprob: -18.500205993652344
    9. 'PAIR' → logprob: -18.625205993652344
    10. ' +' → logprob: -18.750205993652344

Token 937: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.19630436599254608
    2. ',' → logprob: -2.3213043212890625
    3. '+' → logprob: -2.5713043212890625
    4. ')' → logprob: -6.1963043212890625
    5. '       ' → logprob: -6.8213043212890625
    6. '   ' → logprob: -8.946304321289062
    7. '           ' → logprob: -9.446304321289062
    8. ' ' → logprob: -9.446304321289062
    9. '```' → logprob: -9.696304321289062
    10. '),' → logprob: -9.821304321289062

Token 938: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.2994620242971e-06
    2. ' ' → logprob: -11.875008583068848
    3. '0' → logprob: -13.750008583068848
    4. '   ' → logprob: -17.50000762939453
    5. '-' → logprob: -17.62500762939453
    6. '```' → logprob: -17.75000762939453
    7. ')' → logprob: -18.62500762939453
    8. '+' → logprob: -18.68750762939453
    9. '
' → logprob: -19.18750762939453
    10. '(' → logprob: -19.37500762939453

Token 939: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.107425062713446e-06
    2. '0' → logprob: -12.125006675720215
    3. ' ' → logprob: -13.375006675720215
    4. '
' → logprob: -17.37500762939453
    5. '```' → logprob: -17.62500762939453
    6. '   ' → logprob: -18.37500762939453
    7. '(' → logprob: -19.37500762939453
    8. '-' → logprob: -19.93750762939453
    9. '+' → logprob: -20.18750762939453
    10. '``' → logprob: -20.31250762939453

Token 940: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.10171820223331451
    2. ')' → logprob: -2.3517181873321533
    3. '       ' → logprob: -6.726718425750732
    4. '   ' → logprob: -8.101717948913574
    5. ')
' → logprob: -12.101717948913574
    6. ' )
' → logprob: -13.476717948913574
    7. '           ' → logprob: -14.476717948913574
    8. 'else' → logprob: -14.476717948913574
    9. ')`
' → logprob: -14.976717948913574
    10. ' ' → logprob: -15.726717948913574

Token 941: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005993382073938847
    2. '```' → logprob: -5.505993366241455
    3. '   ' → logprob: -7.255993366241455
    4. 'else' → logprob: -7.380993366241455
    5. 'elif' → logprob: -7.505993366241455
    6. '``' → logprob: -11.255993843078613
    7. '           ' → logprob: -11.380993843078613
    8. ' else' → logprob: -12.755993843078613
    9. '(' → logprob: -12.880993843078613
    10. ' elif' → logprob: -13.380993843078613

Token 942: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.0005502910353243351
    2. ' elif' → logprob: -8.000550270080566
    3. '       ' → logprob: -9.000550270080566
    4. 'else' → logprob: -9.375550270080566
    5. '   ' → logprob: -12.625550270080566
    6. '	elif' → logprob: -13.250550270080566
    7. '           ' → logprob: -14.125550270080566
    8. 'el' → logprob: -14.500550270080566
    9. ' else' → logprob: -16.375551223754883
    10. 'elseif' → logprob: -16.750551223754883

Token 943: ' green' (ID: 8851)
  Prédit: ' blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blue' → logprob: -0.10121113061904907
    2. 'blue' → logprob: -2.3512110710144043
    3. ' green' → logprob: -6.976211071014404
    4. 'green' → logprob: -10.351211547851562
    5. ' free' → logprob: -10.476211547851562
    6. 'free' → logprob: -11.601211547851562
    7. '(' → logprob: -15.351211547851562
    8. '_blue' → logprob: -15.351211547851562
    9. ' ' → logprob: -15.976211547851562
    10. 'Blue' → logprob: -16.226211547851562

Token 944: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -3.128163257315464e-07
    2. 'person' → logprob: -16.0
    3. '```' → logprob: -16.25
    4. '_p' → logprob: -16.875
    5. '_' → logprob: -18.125
    6. '_user' → logprob: -18.25
    7. '_PERSON' → logprob: -18.25
    8. '_people' → logprob: -18.375
    9. '_pres' → logprob: -18.625
    10. '_present' → logprob: -19.0

Token 945: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.18221981823444366
    2. ':' → logprob: -1.8072198629379272
    3. '```' → logprob: -6.557219982147217
    4. '           ' → logprob: -7.807219982147217
    5. ',' → logprob: -8.307219505310059
    6. '       ' → logprob: -8.307219505310059
    7. '):
' → logprob: -10.057219505310059
    8. '>' → logprob: -10.557219505310059
    9. '``' → logprob: -11.057219505310059
    10. ',
' → logprob: -11.057219505310059

Token 946: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021257299929857254
    2. 'return' → logprob: -4.396257400512695
    3. '(' → logprob: -5.646257400512695
    4. '```' → logprob: -6.146257400512695
    5. '       ' → logprob: -6.396257400512695
    6. ' return' → logprob: -6.896257400512695
    7. ' (' → logprob: -9.146257400512695
    8. '(return' → logprob: -9.396257400512695
    9. ':
' → logprob: -10.271257400512695
    10. ':return' → logprob: -10.521257400512695

Token 947: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.002514069899916649
    2. ' return' → logprob: -6.002513885498047
    3. '       ' → logprob: -10.252513885498047
    4. '(' → logprob: -13.627513885498047
    5. '           ' → logprob: -13.752513885498047
    6. '(return' → logprob: -14.502513885498047
    7. '```' → logprob: -15.002513885498047
    8. '	return' → logprob: -17.377513885498047
    9. '   ' → logprob: -17.752513885498047
    10. ' (' → logprob: -18.127513885498047

Token 948: ' (' (ID: 350)
  Prédit: '(acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.023286012932658195
    2. ' (' → logprob: -3.7732861042022705
    3. '(' → logprob: -10.148285865783691
    4. '   ' → logprob: -13.773285865783691
    5. '(ans' → logprob: -16.648286819458008
    6. '(ac' → logprob: -16.648286819458008
    7. '       ' → logprob: -16.898286819458008
    8. '(input' → logprob: -17.273286819458008
    9. '           ' → logprob: -17.398286819458008
    10. '(abs' → logprob: -17.898286819458008

Token 949: 'acc' (ID: 3717)
  Prédit: '(acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.00014454191841650754
    2. 'acc' → logprob: -9.000144958496094
    3. ' (' → logprob: -11.000144958496094
    4. '(' → logprob: -12.875144958496094
    5. '(
' → logprob: -14.125144958496094
    6. '   ' → logprob: -14.375144958496094
    7. ' accumulator' → logprob: -15.375144958496094
    8. '           ' → logprob: -16.250144958496094
    9. '	acc' → logprob: -16.625144958496094
    10. 'Accumulator' → logprob: -17.250144958496094

Token 950: 'umulator' (ID: 90989)
  Prédit: 'umulator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulator' → logprob: -0.015428266488015652
    2. '_acc' → logprob: -5.265428066253662
    3. '(acc' → logprob: -6.390428066253662
    4. 'umerator' → logprob: -6.640428066253662
    5. '_free' → logprob: -6.890428066253662
    6. 'um' → logprob: -6.890428066253662
    7. 'ulator' → logprob: -7.015428066253662
    8. 'uator' → logprob: -7.390428066253662
    9. '_mod' → logprob: -7.515428066253662
    10. 'umulate' → logprob: -7.765428066253662

Token 951: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -8.2994620242971e-06
    2. 'result' → logprob: -11.750008583068848
    3. 'Result' → logprob: -16.12500762939453
    4. '_acc' → logprob: -16.25000762939453
    5. '   ' → logprob: -16.50000762939453
    6. '*' → logprob: -16.50000762939453
    7. ' *' → logprob: -18.00000762939453
    8. 'acc' → logprob: -18.00000762939453
    9. '_value' → logprob: -18.50000762939453
    10. '           ' → logprob: -18.50000762939453

Token 952: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0031273290514945984
    2. '*' → logprob: -6.003127098083496
    3. ',' → logprob: -7.378127098083496
    4. '*,' → logprob: -12.003127098083496
    5. '       ' → logprob: -12.378127098083496
    6. '```' → logprob: -12.503127098083496
    7. '           ' → logprob: -12.753127098083496
    8. ' ,' → logprob: -12.878127098083496
    9. ' *,' → logprob: -13.253127098083496
    10. ' +' → logprob: -13.378127098083496

Token 953: ' green' (ID: 8851)
  Prédit: ' green'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' green' → logprob: -0.09212728589773178
    2. 'green' → logprob: -2.9671273231506348
    3. '(g' → logprob: -3.3421273231506348
    4. ' free' → logprob: -7.342127323150635
    5. 'free' → logprob: -7.967127323150635
    6. '(' → logprob: -8.967126846313477
    7. ' (' → logprob: -9.592126846313477
    8. '(f' → logprob: -12.967126846313477
    9. ' g' → logprob: -13.467126846313477
    10. 'g' → logprob: -13.592126846313477

Token 954: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -1.9361264946837764e-07
    2. 'person' → logprob: -16.25
    3. '_PERSON' → logprob: -18.5
    4. '_people' → logprob: -18.625
    5. '_p' → logprob: -19.25
    6. '_user' → logprob: -19.375
    7. '_question' → logprob: -19.625
    8. 'Person' → logprob: -19.75
    9. '```' → logprob: -20.0
    10. '_part' → logprob: -21.0

Token 955: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.975612187583465e-05
    2. ' ,' → logprob: -11.250029563903809
    3. ',input' → logprob: -11.875029563903809
    4. '       ' → logprob: -12.500029563903809
    5. '`,' → logprob: -13.500029563903809
    6. '           ' → logprob: -13.500029563903809
    7. ',
' → logprob: -14.125029563903809
    8. '   ' → logprob: -14.625029563903809
    9. ')' → logprob: -14.750029563903809
    10. '),' → logprob: -15.500029563903809

Token 956: ' free' (ID: 2240)
  Prédit: ' free'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' free' → logprob: -0.0015023599844425917
    2. 'free' → logprob: -6.501502513885498
    3. '.free' → logprob: -19.251502990722656
    4. 'Free' → logprob: -19.501502990722656
    5. '_free' → logprob: -19.876502990722656
    6. '	free' → logprob: -20.001502990722656
    7. '-free' → logprob: -23.001502990722656
    8. ' ' → logprob: -23.251502990722656
    9. ' Free' → logprob: -23.876502990722656
    10. '```' → logprob: -24.251502990722656

Token 957: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -1.6240566083070007e-06
    2. 'person' → logprob: -13.875001907348633
    3. 'Person' → logprob: -14.750001907348633
    4. 'free' → logprob: -16.000001907348633
    5. '_PERSON' → logprob: -16.875001907348633
    6. '_free' → logprob: -17.000001907348633
    7. '_people' → logprob: -18.000001907348633
    8. 'PERSON' → logprob: -18.250001907348633
    9. '-person' → logprob: -19.500001907348633
    10. '_part' → logprob: -20.000001907348633

Token 958: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06409652531147003
    2. '-' → logprob: -2.939096450805664
    3. ' -' → logprob: -4.939096450805664
    4. '           ' → logprob: -6.689096450805664
    5. ' ,' → logprob: -7.439096450805664
    6. '       ' → logprob: -9.689096450805664
    7. '   ' → logprob: -10.689096450805664
    8. ')' → logprob: -10.814096450805664
    9. ',
' → logprob: -11.439096450805664
    10. '```' → logprob: -11.564096450805664

Token 959: ' red' (ID: 3592)
  Prédit: ' green'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' green' → logprob: -0.003509080270305276
    2. 'green' → logprob: -5.753509044647217
    3. ' blue' → logprob: -8.253509521484375
    4. ' red' → logprob: -10.003509521484375
    5. ' free' → logprob: -10.753509521484375
    6. 'blue' → logprob: -12.878509521484375
    7. 'free' → logprob: -13.253509521484375
    8. 'red' → logprob: -15.878509521484375
    9. 'Green' → logprob: -18.003509521484375
    10. ' Green' → logprob: -18.128509521484375

Token 960: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -2.0339031834737398e-05
    2. ' _' → logprob: -11.000020027160645
    3. '   ' → logprob: -13.875020027160645
    4. '```' → logprob: -14.125020027160645
    5. 'person' → logprob: -14.750020027160645
    6. ',' → logprob: -14.875020027160645
    7. '_p' → logprob: -15.375020027160645
    8. '_user' → logprob: -15.625020027160645
    9. '_' → logprob: -15.750020027160645
    10. '_PERSON' → logprob: -16.37502098083496

Token 961: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012603526702150702
    2. ' ,' → logprob: -7.126260280609131
    3. '-' → logprob: -8.751260757446289
    4. ' -' → logprob: -9.001260757446289
    5. '```' → logprob: -9.501260757446289
    6. '           ' → logprob: -9.876260757446289
    7. '+' → logprob: -11.251260757446289
    8. ' +' → logprob: -11.251260757446289
    9. '       ' → logprob: -11.876260757446289
    10. ',
' → logprob: -12.126260757446289

Token 962: ' green' (ID: 8851)
  Prédit: ' green'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' green' → logprob: -0.16022443771362305
    2. 'green' → logprob: -1.910224437713623
    3. 'Green' → logprob: -16.66022491455078
    4. ' blue' → logprob: -16.66022491455078
    5. 'blue' → logprob: -17.66022491455078
    6. '_green' → logprob: -17.78522491455078
    7. 'free' → logprob: -18.66022491455078
    8. '.green' → logprob: -19.03522491455078
    9. ' free' → logprob: -19.53522491455078
    10. '   ' → logprob: -19.53522491455078

Token 963: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -6.704273118884885e-07
    2. 'person' → logprob: -15.625000953674316
    3. ' _' → logprob: -16.0
    4. '_user' → logprob: -16.125
    5. '_p' → logprob: -17.125
    6. '_' → logprob: -17.125
    7. '_people' → logprob: -17.25
    8. '```' → logprob: -17.375
    9. '_PERSON' → logprob: -17.75
    10. '_present' → logprob: -17.875

Token 964: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03813811391592026
    2. '-' → logprob: -3.2881381511688232
    3. '           ' → logprob: -9.788138389587402
    4. '```' → logprob: -11.288138389587402
    5. ' ' → logprob: -11.538138389587402
    6. ',' → logprob: -11.663138389587402
    7. ' +' → logprob: -12.913138389587402
    8. '+' → logprob: -13.163138389587402
    9. ')' → logprob: -13.163138389587402
    10. '       ' → logprob: -14.288138389587402

Token 965: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -18.000139236450195
    4. '           ' → logprob: -18.375139236450195
    5. '```' → logprob: -19.375139236450195
    6. '       ' → logprob: -19.500139236450195
    7. ' ' → logprob: -20.625139236450195
    8. '[' → logprob: -20.875139236450195
    9. '0' → logprob: -21.500139236450195
    10. '
' → logprob: -21.625139236450195

Token 966: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '```' → logprob: -23.5
    4. '   ' → logprob: -23.625
    5. '           ' → logprob: -24.25
    6. '
' → logprob: -24.25
    7. '１' → logprob: -24.5
    8. '۱' → logprob: -24.625
    9. '-' → logprob: -24.875
    10. '0' → logprob: -25.25

Token 967: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010163593105971813
    2. ' ,' → logprob: -9.250102043151855
    3. '```' → logprob: -12.750102043151855
    4. ',
' → logprob: -13.625102043151855
    5. '`,' → logprob: -14.125102043151855
    6. '           ' → logprob: -15.875102043151855
    7. ')' → logprob: -15.875102043151855
    8. '),' → logprob: -16.12510108947754
    9. '``' → logprob: -16.37510108947754
    10. '       ' → logprob: -16.37510108947754

Token 968: ' blue' (ID: 9861)
  Prédit: ' blue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blue' → logprob: -0.0020997028332203627
    2. 'blue' → logprob: -6.752099514007568
    3. ' free' → logprob: -7.002099514007568
    4. 'free' → logprob: -10.877099990844727
    5. 'Blue' → logprob: -16.377099990844727
    6. ' Blue' → logprob: -17.127099990844727
    7. '```' → logprob: -17.127099990844727
    8. ' green' → logprob: -17.877099990844727
    9. '_blue' → logprob: -17.877099990844727
    10. '.blue' → logprob: -18.752099990844727

Token 969: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -9.729906196298543e-06
    2. 'person' → logprob: -11.625009536743164
    3. '```' → logprob: -14.500009536743164
    4. 'Person' → logprob: -16.625009536743164
    5. '_PERSON' → logprob: -17.375009536743164
    6. '_user' → logprob: -17.375009536743164
    7. '   ' → logprob: -17.625009536743164
    8. '_p' → logprob: -17.750009536743164
    9. ',' → logprob: -17.875009536743164
    10. '_type' → logprob: -18.000009536743164

Token 970: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017147827020380646
    2. ' ,' → logprob: -8.875171661376953
    3. '           ' → logprob: -11.125171661376953
    4. '       ' → logprob: -12.375171661376953
    5. ',
' → logprob: -12.375171661376953
    6. '```' → logprob: -12.625171661376953
    7. ')' → logprob: -13.125171661376953
    8. '   ' → logprob: -13.875171661376953
    9. '`,' → logprob: -14.250171661376953
    10. '),' → logprob: -15.125171661376953

Token 971: ' red' (ID: 3592)
  Prédit: ' red'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' red' → logprob: -0.0011746286181733012
    2. 'red' → logprob: -6.751174449920654
    3. ' blue' → logprob: -12.376174926757812
    4. ' free' → logprob: -16.251174926757812
    5. 'blue' → logprob: -16.751174926757812
    6. 'free' → logprob: -18.126174926757812
    7. '```' → logprob: -18.251174926757812
    8. ' green' → logprob: -18.376174926757812
    9. '(red' → logprob: -18.376174926757812
    10. '0' → logprob: -18.876174926757812

Token 972: '_green' (ID: 113714)
  Prédit: '_green'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_green' → logprob: -1.843177233240567e-05
    2. '_blue' → logprob: -11.125018119812012
    3. '```' → logprob: -14.250018119812012
    4. 'green' → logprob: -14.375018119812012
    5. '_GREEN' → logprob: -14.500018119812012
    6. '_' → logprob: -14.625018119812012
    7. '_under' → logprob: -15.000018119812012
    8. '_white' → logprob: -15.125018119812012
    9. '_red' → logprob: -15.375018119812012
    10. '-green' → logprob: -16.250019073486328

Token 973: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -2.570319702499546e-05
    2. 'pair' → logprob: -10.875025749206543
    3. '_pairs' → logprob: -12.000025749206543
    4. 'Pair' → logprob: -15.375025749206543
    5. '+' → logprob: -16.125024795532227
    6. '```' → logprob: -17.625024795532227
    7. ',' → logprob: -17.750024795532227
    8. '           ' → logprob: -17.875024795532227
    9. '_PAIR' → logprob: -17.875024795532227
    10. ' pair' → logprob: -17.875024795532227

Token 974: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05203308165073395
    2. ' +' → logprob: -3.1770331859588623
    3. '+' → logprob: -4.802032947540283
    4. ' ,' → logprob: -7.427032947540283
    5. '+,' → logprob: -9.302033424377441
    6. '           ' → logprob: -9.927033424377441
    7. '```' → logprob: -10.802033424377441
    8. ',
' → logprob: -11.802033424377441
    9. '       ' → logprob: -12.302033424377441
    10. ')' → logprob: -12.677033424377441

Token 975: ' green' (ID: 8851)
  Prédit: ' green'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' green' → logprob: -0.011048054322600365
    2. 'green' → logprob: -4.511047840118408
    3. '_green' → logprob: -16.38604736328125
    4. ' blue' → logprob: -17.01104736328125
    5. '.green' → logprob: -17.26104736328125
    6. ' free' → logprob: -18.51104736328125
    7. 'Green' → logprob: -18.76104736328125
    8. ' зелен' → logprob: -19.26104736328125
    9. '            ' → logprob: -19.63604736328125
    10. '绿色' → logprob: -19.88604736328125

Token 976: '_blue' (ID: 81479)
  Prédit: '_blue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_blue' → logprob: -0.00091217877343297
    2. '_green' → logprob: -7.000912189483643
    3. '_white' → logprob: -14.875911712646484
    4. '_black' → logprob: -16.000911712646484
    5. '_BLUE' → logprob: -16.750911712646484
    6. '```' → logprob: -17.625911712646484
    7. '_eye' → logprob: -17.625911712646484
    8. '\' → logprob: -18.125911712646484
    9. 'blue' → logprob: -18.125911712646484
    10. '_plus' → logprob: -18.250911712646484

Token 977: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -2.6895233531831764e-05
    2. 'pair' → logprob: -10.62502670288086
    3. '_pairs' → logprob: -13.62502670288086
    4. '+' → logprob: -14.62502670288086
    5. 'Pair' → logprob: -14.62502670288086
    6. ' +' → logprob: -16.37502670288086
    7. '_p' → logprob: -16.87502670288086
    8. '           ' → logprob: -16.87502670288086
    9. '_green' → logprob: -16.87502670288086
    10. ' pair' → logprob: -17.75002670288086

Token 978: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03438312187790871
    2. ' +' → logprob: -3.5343830585479736
    3. '+' → logprob: -5.534383296966553
    4. ' ,' → logprob: -7.409383296966553
    5. '```' → logprob: -10.284382820129395
    6. '           ' → logprob: -11.659382820129395
    7. '+,' → logprob: -12.034382820129395
    8. ' -' → logprob: -12.534382820129395
    9. ',
' → logprob: -13.034382820129395
    10. ')' → logprob: -13.034382820129395

Token 979: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06208420172333717
    2. ' ' → logprob: -2.812084197998047
    3. '0' → logprob: -9.062084197998047
    4. '           ' → logprob: -15.062084197998047
    5. '```' → logprob: -16.187084197998047
    6. '   ' → logprob: -16.437084197998047
    7. '(' → logprob: -17.312084197998047
    8. '=' → logprob: -17.687084197998047
    9. ' ' → logprob: -17.812084197998047
    10. '+' → logprob: -17.937084197998047

Token 980: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3319124011322856e-05
    2. ' ' → logprob: -10.875022888183594
    3. '0' → logprob: -12.375022888183594
    4. '```' → logprob: -18.125022888183594
    5. '+' → logprob: -18.750022888183594
    6. '   ' → logprob: -19.375022888183594
    7. '(' → logprob: -19.687522888183594
    8. '
' → logprob: -19.937522888183594
    9. '-' → logprob: -20.125022888183594
    10. ')' → logprob: -20.812522888183594

Token 981: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013262155698612332
    2. ' ,' → logprob: -9.62513256072998
    3. '```' → logprob: -10.25013256072998
    4. ')' → logprob: -11.50013256072998
    5. '`,' → logprob: -12.12513256072998
    6. '           ' → logprob: -12.25013256072998
    7. ',
' → logprob: -12.62513256072998
    8. '       ' → logprob: -13.00013256072998
    9. '   ' → logprob: -13.50013256072998
    10. '``' → logprob: -13.50013256072998

Token 982: ' blue' (ID: 9861)
  Prédit: ' blue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blue' → logprob: -0.023249322548508644
    2. 'blue' → logprob: -3.773249387741089
    3. ' green' → logprob: -13.898249626159668
    4. ' free' → logprob: -14.273249626159668
    5. 'Blue' → logprob: -14.398249626159668
    6. '```' → logprob: -14.523249626159668
    7. 'free' → logprob: -14.648249626159668
    8. ' ' → logprob: -15.773249626159668
    9. ' ' → logprob: -15.898249626159668
    10. '``' → logprob: -16.14824867248535

Token 983: '_red' (ID: 61951)
  Prédit: '_person'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -0.11172067373991013
    2. '_red' → logprob: -2.361720561981201
    3. '_pair' → logprob: -4.611720561981201
    4. '_blue' → logprob: -6.861720561981201
    5. '_green' → logprob: -7.861720561981201
    6. '_pairs' → logprob: -10.86172103881836
    7. '_people' → logprob: -11.36172103881836
    8. '_post' → logprob: -11.61172103881836
    9. '_parent' → logprob: -11.86172103881836
    10. '_black' → logprob: -12.11172103881836

Token 984: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -0.0619848296046257
    2. '_person' → logprob: -2.8119847774505615
    3. 'pair' → logprob: -11.56198501586914
    4. 'person' → logprob: -12.43698501586914
    5. '_pairs' → logprob: -13.18698501586914
    6. '_part' → logprob: -14.81198501586914
    7. 'Pair' → logprob: -14.81198501586914
    8. '_partner' → logprob: -15.56198501586914
    9. 'Person' → logprob: -15.81198501586914
    10. '_red' → logprob: -16.31198501586914

Token 985: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.044488705694675446
    2. ')
' → logprob: -3.1694886684417725
    3. '   ' → logprob: -7.794488906860352
    4. '       ' → logprob: -8.169488906860352
    5. '+' → logprob: -8.294488906860352
    6. ' +' → logprob: -8.544488906860352
    7. ' )' → logprob: -8.669488906860352
    8. ',' → logprob: -10.294488906860352
    9. ')`' → logprob: -10.419488906860352
    10. ' )
' → logprob: -10.669488906860352

Token 986: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8902935981750488
    2. '   ' → logprob: -1.1402935981750488
    3. '```' → logprob: -1.5152935981750488
    4. 'else' → logprob: -3.265293598175049
    5. ' else' → logprob: -5.265293598175049
    6. '``' → logprob: -5.640293598175049
    7. '           ' → logprob: -6.140293598175049
    8. ',' → logprob: -7.765293598175049
    9. '(' → logprob: -8.51529312133789
    10. '<|end|>' → logprob: -9.39029312133789

Token 987: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.003797584678977728
    2. '       ' → logprob: -5.75379753112793
    3. ' else' → logprob: -7.50379753112793
    4. '           ' → logprob: -9.75379753112793
    5. '```' → logprob: -12.00379753112793
    6. '	else' → logprob: -13.00379753112793
    7. '   ' → logprob: -13.25379753112793
    8. 'elif' → logprob: -15.12879753112793
    9. '               ' → logprob: -16.00379753112793
    10. '{
' → logprob: -17.25379753112793

Token 988: ':
' (ID: 734)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.005349497776478529
    2. '(' → logprob: -5.880349636077881
    3. '           ' → logprob: -6.505349636077881
    4. ' (
' → logprob: -7.380349636077881
    5. '(return' → logprob: -8.755349159240723
    6. '(
' → logprob: -9.130349159240723
    7. '(acc' → logprob: -10.130349159240723
    8. ':' → logprob: -10.380349159240723
    9. ':
' → logprob: -10.630349159240723
    10. '```' → logprob: -10.880349159240723

Token 989: '           ' (ID: 352)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.0322275161743164
    2. '           ' → logprob: -1.1572275161743164
    3. '(acc' → logprob: -1.2822275161743164
    4. ' return' → logprob: -3.6572275161743164
    5. '       ' → logprob: -4.532227516174316
    6. '(' → logprob: -4.532227516174316
    7. '(return' → logprob: -5.657227516174316
    8. 'return' → logprob: -6.782227516174316
    9. '   ' → logprob: -10.907227516174316
    10. '```' → logprob: -11.532227516174316

Token 990: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.07958755642175674
    2. ' return' → logprob: -2.579587459564209
    3. '(' → logprob: -8.079587936401367
    4. '(acc' → logprob: -8.579587936401367
    5. '(return' → logprob: -8.954587936401367
    6. '           ' → logprob: -10.079587936401367
    7. ' (' → logprob: -10.829587936401367
    8. '(
' → logprob: -12.454587936401367
    9. '       ' → logprob: -12.579587936401367
    10. '	return' → logprob: -14.704587936401367

Token 991: ' (' (ID: 350)
  Prédit: '(acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.00015467056073248386
    2. '(' → logprob: -9.125154495239258
    3. ' (' → logprob: -10.000154495239258
    4. 'acc' → logprob: -16.125154495239258
    5. '   ' → logprob: -16.125154495239258
    6. '(
' → logprob: -17.125154495239258
    7. '(att' → logprob: -17.500154495239258
    8. '(ans' → logprob: -17.750154495239258
    9. '(abs' → logprob: -18.250154495239258
    10. '(access' → logprob: -18.500154495239258

Token 992: 'acc' (ID: 3717)
  Prédit: 'acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.00043257648940198123
    2. '(acc' → logprob: -7.75043249130249
    3. ' accumulator' → logprob: -13.500432968139648
    4. 'Accumulator' → logprob: -15.750432968139648
    5. '	acc' → logprob: -16.37543296813965
    6. '
' → logprob: -17.12543296813965
    7. '_acc' → logprob: -17.62543296813965
    8. ''acc' → logprob: -17.87543296813965
    9. 'mod' → logprob: -17.87543296813965
    10. '   ' → logprob: -18.12543296813965

Token 993: 'umulator' (ID: 90989)
  Prédit: 'umulator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulator' → logprob: -0.0012704703258350492
    2. 'um' → logprob: -7.376270294189453
    3. 'umulate' → logprob: -8.126270294189453
    4. 'ulator' → logprob: -8.501270294189453
    5. 'umu' → logprob: -10.001270294189453
    6. '(acc' → logprob: -10.876270294189453
    7. 'u' → logprob: -11.001270294189453
    8. 'umul' → logprob: -11.001270294189453
    9. 'umerator' → logprob: -11.126270294189453
    10. 'uator' → logprob: -11.376270294189453

Token 994: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -4.36574100604048e-06
    2. 'result' → logprob: -12.500004768371582
    3. '_code' → logprob: -15.125004768371582
    4. '_results' → logprob: -16.000003814697266
    5. '_acc' → logprob: -16.625003814697266
    6. '_res' → logprob: -17.750003814697266
    7. 'Result' → logprob: -17.750003814697266
    8. '   ' → logprob: -18.250003814697266
    9. '```' → logprob: -18.250003814697266
    10. '_RESULT' → logprob: -19.500003814697266

Token 995: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.1269591897726059
    2. '*' → logprob: -2.1269590854644775
    3. ',' → logprob: -10.751958847045898
    4. ' ' → logprob: -13.251958847045898
    5. '```' → logprob: -13.626958847045898
    6. ')' → logprob: -13.751958847045898
    7. '*,' → logprob: -13.751958847045898
    8. '   ' → logprob: -14.001958847045898
    9. '           ' → logprob: -14.501958847045898
    10. '    ' → logprob: -14.501958847045898

Token 996: ' free' (ID: 2240)
  Prédit: 'free'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'free' → logprob: -0.06196858361363411
    2. ' free' → logprob: -2.8119685649871826
    3. '(' → logprob: -14.186968803405762
    4. 'Free' → logprob: -16.186967849731445
    5. '_free' → logprob: -16.811967849731445
    6. ' (' → logprob: -16.936967849731445
    7. 'acc' → logprob: -16.936967849731445
    8. '.free' → logprob: -17.436967849731445
    9. '	free' → logprob: -18.186967849731445
    10. '(Mod' → logprob: -18.311967849731445

Token 997: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -1.0280383548888494e-06
    2. ')_' → logprob: -14.500000953674316
    3. ')' → logprob: -15.375000953674316
    4. '_PERSON' → logprob: -16.125001907348633
    5. 'person' → logprob: -16.750001907348633
    6. '_user' → logprob: -18.125001907348633
    7. '_' → logprob: -18.250001907348633
    8. '_ball' → logprob: -18.375001907348633
    9. 'Person' → logprob: -18.625001907348633
    10. '```' → logprob: -18.875001907348633

Token 998: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015539318323135376
    2. '-' → logprob: -4.765539169311523
    3. ' -' → logprob: -5.015539169311523
    4. ' ,' → logprob: -8.765539169311523
    5. ')' → logprob: -10.015539169311523
    6. '           ' → logprob: -11.140539169311523
    7. ',
' → logprob: -11.265539169311523
    8. ' ' → logprob: -11.515539169311523
    9. ' +' → logprob: -12.515539169311523
    10. '       ' → logprob: -12.515539169311523

Token 999: ' free' (ID: 2240)
  Prédit: ' free'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' free' → logprob: -0.0019286326132714748
    2. 'free' → logprob: -6.251928806304932
    3. '_free' → logprob: -19.376928329467773
    4. '	free' → logprob: -19.501928329467773
    5. '.free' → logprob: -19.626928329467773
    6. 'Free' → logprob: -20.501928329467773
    7. ' ' → logprob: -22.376928329467773
    8. '-free' → logprob: -23.126928329467773
    9. ' fre' → logprob: -23.501928329467773
    10. ' freer' → logprob: -23.501928329467773

Token 1000: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -5.512236498361744e-07
    2. '_PERSON' → logprob: -15.750000953674316
    3. '_free' → logprob: -16.375
    4. 'person' → logprob: -16.75
    5. ' _' → logprob: -17.0
    6. ')_' → logprob: -17.25
    7. '_user' → logprob: -17.375
    8. 'Person' → logprob: -17.375
    9. '```' → logprob: -17.75
    10. ')' → logprob: -18.0

Token 1001: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.016046686097979546
    2. '-' → logprob: -4.141046524047852
    3. ' ' → logprob: -11.766046524047852
    4. '   ' → logprob: -13.016046524047852
    5. ' ' → logprob: -14.141046524047852
    6. '```' → logprob: -14.891046524047852
    7. '<|end|>' → logprob: -15.141046524047852
    8. ',' → logprob: -15.516046524047852
    9. ' -
' → logprob: -15.766046524047852
    10. ')' → logprob: -16.01604652404785

Token 1002: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029601677670143545
    2. ' ' → logprob: -8.125295639038086
    3. '0' → logprob: -17.625295639038086
    4. '   ' → logprob: -18.000295639038086
    5. '<|end|>' → logprob: -18.625295639038086
    6. '```' → logprob: -19.500295639038086
    7. '           ' → logprob: -20.000295639038086
    8. '2' → logprob: -20.125295639038086
    9. '_' → logprob: -20.500295639038086
    10. ')' → logprob: -20.625295639038086

Token 1003: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. 'Mod' → logprob: -16.875001907348633
    4. '```' → logprob: -17.875001907348633
    5. '   ' → logprob: -18.750001907348633
    6. '
' → logprob: -18.875001907348633
    7. '(Mod' → logprob: -19.937501907348633
    8. ')' → logprob: -20.125001907348633
    9. 'Modulo' → logprob: -20.125001907348633
    10. '۱' → logprob: -20.250001907348633

Token 1004: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.978233846486546e-05
    2. ' ,' → logprob: -10.000049591064453
    3. ',
' → logprob: -13.250049591064453
    4. '           ' → logprob: -14.000049591064453
    5. ' red' → logprob: -14.250049591064453
    6. '   ' → logprob: -14.375049591064453
    7. '       ' → logprob: -16.000049591064453
    8. '```' → logprob: -16.000049591064453
    9. '`,' → logprob: -16.250049591064453
    10. ')' → logprob: -16.375049591064453

Token 1005: ' red' (ID: 3592)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.018153570592403412
    2. ' red' → logprob: -4.018153667449951
    3. 'blue' → logprob: -12.518153190612793
    4. ' blue' → logprob: -16.51815414428711
    5. '           ' → logprob: -18.39315414428711
    6. '(red' → logprob: -20.01815414428711
    7. '               ' → logprob: -20.26815414428711
    8. 'green' → logprob: -20.26815414428711
    9. '_red' → logprob: -20.64315414428711
    10. '.red' → logprob: -20.76815414428711

Token 1006: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -6.704273118884885e-07
    2. '_people' → logprob: -15.625000953674316
    3. '_type' → logprob: -16.125
    4. '_p' → logprob: -16.125
    5. '```' → logprob: -16.75
    6. '_post' → logprob: -17.125
    7. '_' → logprob: -17.25
    8. '_part' → logprob: -17.375
    9. '_PERSON' → logprob: -17.75
    10. ' _' → logprob: -18.5

Token 1007: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.37946009635925293
    2. ' +' → logprob: -1.629460096359253
    3. '+' → logprob: -2.129460096359253
    4. ' ,' → logprob: -8.129460334777832
    5. '```' → logprob: -8.379460334777832
    6. '+,' → logprob: -8.754460334777832
    7. ',
' → logprob: -9.379460334777832
    8. '       ' → logprob: -11.129460334777832
    9. '   ' → logprob: -11.129460334777832
    10. ' ' → logprob: -12.004460334777832

Token 1008: ' green' (ID: 8851)
  Prédit: 'green'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'green' → logprob: -0.40502122044563293
    2. ' green' → logprob: -1.1550211906433105
    3. 'blue' → logprob: -4.4050211906433105
    4. ' blue' → logprob: -5.1550211906433105
    5. '```' → logprob: -17.03002166748047
    6. 'Green' → logprob: -17.15502166748047
    7. '_green' → logprob: -17.65502166748047
    8. '   ' → logprob: -17.65502166748047
    9. ' ' → logprob: -17.78002166748047
    10. '0' → logprob: -18.03002166748047

Token 1009: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -7.896309739408025e-07
    2. 'person' → logprob: -14.500000953674316
    3. '_people' → logprob: -16.75
    4. '_p' → logprob: -16.875
    5. '```' → logprob: -16.875
    6. '_PERSON' → logprob: -18.125
    7. ')_' → logprob: -18.25
    8. '   ' → logprob: -18.25
    9. ' _' → logprob: -18.25
    10. 'Person' → logprob: -19.125

Token 1010: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11170350760221481
    2. ' +' → logprob: -2.486703395843506
    3. '+' → logprob: -3.861703395843506
    4. ' ,' → logprob: -6.611703395843506
    5. '   ' → logprob: -9.861703872680664
    6. '       ' → logprob: -10.736703872680664
    7. '```' → logprob: -11.111703872680664
    8. ' ' → logprob: -11.361703872680664
    9. '+,' → logprob: -11.736703872680664
    10. ',
' → logprob: -11.861703872680664

Token 1011: ' blue' (ID: 9861)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.5759395360946655
    2. ' blue' → logprob: -0.8259395360946655
    3. 'Blue' → logprob: -16.575939178466797
    4. '_blue' → logprob: -17.950939178466797
    5. 'b' → logprob: -18.575939178466797
    6. ' green' → logprob: -18.950939178466797
    7. ' ' → logprob: -19.075939178466797
    8. '   ' → logprob: -19.200939178466797
    9. '.blue' → logprob: -19.325939178466797
    10. 'green' → logprob: -19.325939178466797

Token 1012: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -1.5048530030981055e-06
    2. 'person' → logprob: -13.875001907348633
    3. '```' → logprob: -15.500001907348633
    4. '_post' → logprob: -16.750001907348633
    5. 'Person' → logprob: -17.500001907348633
    6. '   ' → logprob: -17.625001907348633
    7. '_count' → logprob: -17.625001907348633
    8. '_p' → logprob: -17.750001907348633
    9. '_PERSON' → logprob: -18.250001907348633
    10. '_part' → logprob: -18.250001907348633

Token 1013: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -1.0633490085601807
    2. ' -' → logprob: -1.1883490085601807
    3. ',' → logprob: -1.4383490085601807
    4. '-' → logprob: -2.4383490085601807
    5. '+' → logprob: -3.8133490085601807
    6. '           ' → logprob: -6.813348770141602
    7. '```' → logprob: -7.188348770141602
    8. ' ' → logprob: -7.688348770141602
    9. ')' → logprob: -8.188348770141602
    10. ' ,' → logprob: -8.563348770141602

Token 1014: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019287518225610256
    2. ' ' → logprob: -6.251928806304932
    3. '   ' → logprob: -16.126928329467773
    4. '0' → logprob: -17.751928329467773
    5. '
' → logprob: -19.251928329467773
    6. '           ' → logprob: -19.751928329467773
    7. '       ' → logprob: -19.876928329467773
    8. '(' → logprob: -20.376928329467773
    9. '  ' → logprob: -20.501928329467773
    10. '```' → logprob: -20.501928329467773

Token 1015: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -11.625009536743164
    3. '0' → logprob: -16.375009536743164
    4. '   ' → logprob: -19.500009536743164
    5. '```' → logprob: -20.750009536743164
    6. '
' → logprob: -21.125009536743164
    7. '(' → logprob: -22.750009536743164
    8. '-' → logprob: -23.125009536743164
    9. ')' → logprob: -23.125009536743164
    10. '１' → logprob: -23.500009536743164

Token 1016: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016504127415828407
    2. ')' → logprob: -9.125164985656738
    3. ' ,' → logprob: -10.875164985656738
    4. '```' → logprob: -11.500164985656738
    5. '+' → logprob: -11.625164985656738
    6. ',
' → logprob: -12.000164985656738
    7. ' +' → logprob: -12.625164985656738
    8. '       ' → logprob: -13.125164985656738
    9. '   ' → logprob: -13.750164985656738
    10. '),' → logprob: -13.875164985656738

Token 1017: ' red' (ID: 3592)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.16022422909736633
    2. ' red' → logprob: -1.910224199295044
    3. '_red' → logprob: -17.78522491455078
    4. '0' → logprob: -18.28522491455078
    5. 'blue' → logprob: -18.41022491455078
    6. '(red' → logprob: -18.78522491455078
    7. 'reds' → logprob: -19.03522491455078
    8. '.red' → logprob: -19.03522491455078
    9. ' blue' → logprob: -19.53522491455078
    10. ' ' → logprob: -19.53522491455078

Token 1018: '_green' (ID: 113714)
  Prédit: '_green'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_green' → logprob: -1.0802738870552275e-05
    2. '_blue' → logprob: -12.50001049041748
    3. '_red' → logprob: -12.75001049041748
    4. '_GREEN' → logprob: -13.50001049041748
    5. '```' → logprob: -14.12501049041748
    6. 'green' → logprob: -14.62501049041748
    7. '_white' → logprob: -14.87501049041748
    8. '_free' → logprob: -15.25001049041748
    9. 'Green' → logprob: -15.62501049041748
    10. '
' → logprob: -15.75001049041748

Token 1019: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -8.590104698669165e-05
    2. 'pair' → logprob: -10.000085830688477
    3. '_pairs' → logprob: -10.125085830688477
    4. 'Pair' → logprob: -15.500085830688477
    5. '_part' → logprob: -16.750085830688477
    6. '_PAIR' → logprob: -17.500085830688477
    7. '```' → logprob: -17.625085830688477
    8. 'pairs' → logprob: -18.000085830688477
    9. '_p' → logprob: -18.250085830688477
    10. '_trip' → logprob: -18.375085830688477

Token 1020: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014671307289972901
    2. ' ,' → logprob: -6.626467227935791
    3. '+' → logprob: -9.626466751098633
    4. ' +' → logprob: -10.751466751098633
    5. ',
' → logprob: -11.126466751098633
    6. '       ' → logprob: -11.501466751098633
    7. ')' → logprob: -11.876466751098633
    8. '   ' → logprob: -12.001466751098633
    9. '           ' → logprob: -12.251466751098633
    10. '```' → logprob: -12.626466751098633

Token 1021: ' green' (ID: 8851)
  Prédit: 'green'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'green' → logprob: -0.20141363143920898
    2. ' green' → logprob: -1.701413631439209
    3. '_green' → logprob: -15.576414108276367
    4. 'mod' → logprob: -16.076414108276367
    5. '.green' → logprob: -17.076414108276367
    6. 'Green' → logprob: -17.701414108276367
    7. ' зелен' → logprob: -18.451414108276367
    8. ' ' → logprob: -18.826414108276367
    9. ')' → logprob: -19.326414108276367
    10. 'blue' → logprob: -19.451414108276367

Token 1022: '_blue' (ID: 81479)
  Prédit: '_blue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_blue' → logprob: -0.20141743123531342
    2. '_green' → logprob: -1.7014174461364746
    3. '_white' → logprob: -13.826416969299316
    4. '_black' → logprob: -14.451416969299316
    5. '```' → logprob: -14.826416969299316
    6. '_g' → logprob: -15.076416969299316
    7. '   ' → logprob: -15.326416969299316
    8. '_' → logprob: -15.576416969299316
    9. '\' → logprob: -15.701416969299316
    10. '_good' → logprob: -15.701416969299316

Token 1023: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -0.00010700009443098679
    2. 'pair' → logprob: -9.250106811523438
    3. '_green' → logprob: -12.250106811523438
    4. '_pairs' → logprob: -12.625106811523438
    5. '_blue' → logprob: -13.000106811523438
    6. 'Pair' → logprob: -14.500106811523438
    7. 'green' → logprob: -17.750106811523438
    8. '_PAIR' → logprob: -17.875106811523438
    9. 'PAIR' → logprob: -18.250106811523438
    10. ' pair' → logprob: -18.500106811523438

Token 1024: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02452993020415306
    2. ' +' → logprob: -4.149529933929443
    3. '+' → logprob: -4.899529933929443
    4. ' ,' → logprob: -7.024529933929443
    5. ')' → logprob: -10.274529457092285
    6. ',
' → logprob: -10.649529457092285
    7. '           ' → logprob: -11.524529457092285
    8. '```' → logprob: -11.774529457092285
    9. ' ' → logprob: -12.024529457092285
    10. ' -' → logprob: -12.024529457092285

Token 1025: ' blue' (ID: 9861)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.07888989895582199
    2. ' blue' → logprob: -2.578889846801758
    3. 'Blue' → logprob: -16.703889846801758
    4. ' ' → logprob: -17.078889846801758
    5. '_blue' → logprob: -17.828889846801758
    6. 'green' → logprob: -18.703889846801758
    7. '.blue' → logprob: -19.078889846801758
    8. 'BLUE' → logprob: -19.828889846801758
    9. '   ' → logprob: -20.078889846801758
    10. '0' → logprob: -20.078889846801758

Token 1026: '_red' (ID: 61951)
  Prédit: '_red'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_red' → logprob: -0.0002798087371047586
    2. '_pair' → logprob: -8.250279426574707
    3. '_blue' → logprob: -11.125279426574707
    4. 'red' → logprob: -13.375279426574707
    5. '_pairs' → logprob: -14.500279426574707
    6. '_right' → logprob: -14.500279426574707
    7. 'Red' → logprob: -14.750279426574707
    8. '_black' → logprob: -15.250279426574707
    9. '_ref' → logprob: -15.875279426574707
    10. 'pair' → logprob: -16.000280380249023

Token 1027: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -0.00026407750556245446
    2. 'pair' → logprob: -8.250264167785645
    3. '_pairs' → logprob: -13.000264167785645
    4. 'Pair' → logprob: -14.500264167785645
    5. 'PAIR' → logprob: -17.875263214111328
    6. '_PAIR' → logprob: -18.000263214111328
    7. ' pair' → logprob: -18.125263214111328
    8. '_trip' → logprob: -18.375263214111328
    9. '(pair' → logprob: -19.125263214111328
    10. '_part' → logprob: -19.250263214111328

Token 1028: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.8802491215174086e-05
    2. '   ' → logprob: -10.875028610229492
    3. ')
' → logprob: -11.625028610229492
    4. '       ' → logprob: -15.375028610229492
    5. '+' → logprob: -15.875028610229492
    6. ' )' → logprob: -15.875028610229492
    7. ')}' → logprob: -16.625028610229492
    8. '}' → logprob: -16.625028610229492
    9. ')return' → logprob: -16.750028610229492
    10. '```' → logprob: -16.750028610229492

Token 1029: 'final' (ID: 17196)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.511873722076416
    2. ')' → logprob: -2.511873722076416
    3. '(acc' → logprob: -2.511873722076416
    4. '```' → logprob: -2.511873722076416
    5. '(' → logprob: -2.886873722076416
    6. 'def' → logprob: -3.636873722076416
    7. '(
' → logprob: -4.386873722076416
    8. ':' → logprob: -4.386873722076416
    9. '(result' → logprob: -4.386873722076416
    10. ',' → logprob: -5.136873722076416

Token 1030: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -9.579495235811919e-05
    2. '_' → logprob: -9.87509536743164
    3. '_state' → logprob: -10.62509536743164
    4. ' =' → logprob: -11.37509536743164
    5. 'result' → logprob: -12.50009536743164
    6. '_final' → logprob: -14.00009536743164
    7. '=' → logprob: -14.12509536743164
    8. '_results' → logprob: -14.37509536743164
    9. '_res' → logprob: -14.62509536743164
    10. '_output' → logprob: -15.12509536743164

Token 1031: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04346920922398567
    2. '=' → logprob: -3.168469190597534
    3. ',' → logprob: -7.793469429016113
    4. '_' → logprob: -10.168469429016113
    5. '   ' → logprob: -12.668469429016113
    6. ' ' → logprob: -12.918469429016113
    7. ')' → logprob: -13.043469429016113
    8. '  ' → logprob: -13.293469429016113
    9. '_=' → logprob: -13.293469429016113
    10. ' ' → logprob: -14.043469429016113

Token 1032: ' *_' (ID: 48354)
  Prédit: 'free'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'free' → logprob: -0.027376463636755943
    2. ' free' → logprob: -3.652376413345337
    3. '0' → logprob: -7.402376651763916
    4. 'final' → logprob: -8.902376174926758
    5. 'input' → logprob: -8.902376174926758
    6. '1' → logprob: -9.652376174926758
    7. 'initial' → logprob: -9.902376174926758
    8. '3' → logprob: -10.652376174926758
    9. ' ' → logprob: -11.277376174926758
    10. '_free' → logprob: -11.652376174926758

Token 1033: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0031781906727701426
    2. ' =' → logprob: -5.753178119659424
    3. ',' → logprob: -14.878178596496582
    4. ')=' → logprob: -17.503177642822266
    5. '=
' → logprob: -17.753177642822266
    6. '＝' → logprob: -19.003177642822266
    7. ' ' → logprob: -19.378177642822266
    8. '<|end|>' → logprob: -20.003177642822266
    9. ')' → logprob: -20.128177642822266
    10. 'final' → logprob: -20.253177642822266

Token 1034: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.018160710111260414
    2. 'update' → logprob: -4.018160820007324
    3. '[' → logprob: -12.518160820007324
    4. 'fun' → logprob: -12.893160820007324
    5. 'fold' → logprob: -13.768160820007324
    6. '   ' → logprob: -14.018160820007324
    7. '(update' → logprob: -14.393160820007324
    8. ' reduce' → logprob: -14.518160820007324
    9. 'input' → logprob: -14.643160820007324
    10. '(' → logprob: -15.143160820007324

Token 1035: '(
' (ID: 1607)
  Prédit: '(update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(update' → logprob: -0.027939200401306152
    2. '(lambda' → logprob: -3.7779393196105957
    3. '(
' → logprob: -5.777939319610596
    4. '(' → logprob: -6.527939319610596
    5. 'update' → logprob: -9.027938842773438
    6. 'lambda' → logprob: -13.152938842773438
    7. '   ' → logprob: -13.652938842773438
    8. '(
' → logprob: -13.902938842773438
    9. ' (' → logprob: -15.152938842773438
    10. '(Update' → logprob: -15.402938842773438

Token 1036: '   ' (ID: 271)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.5230045914649963
    2. '   ' → logprob: -1.2730045318603516
    3. '(lambda' → logprob: -2.1480045318603516
    4. 'update' → logprob: -4.773004531860352
    5. '(
' → logprob: -6.898004531860352
    6. '(update' → logprob: -7.273004531860352
    7. ' lambda' → logprob: -8.148004531860352
    8. '       ' → logprob: -10.273004531860352
    9. '=lambda' → logprob: -10.398004531860352
    10. '           ' → logprob: -11.773004531860352

Token 1037: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' (adapté à ' lambda') → logprob: -0.16546380519866943
    2. 'update' → logprob: -2.165463924407959
    3. '   ' → logprob: -3.540463924407959
    4. '(lambda' → logprob: -4.790463924407959
    5. ' lambda' → logprob: -8.4154634475708
    6. '(update' → logprob: -8.5404634475708
    7. '(
' → logprob: -10.4154634475708
    8. 'None' → logprob: -11.1654634475708
    9. ' update' → logprob: -11.4154634475708
    10. '       ' → logprob: -11.5404634475708

Token 1038: ' accumulated' (ID: 64757)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.07819020748138428
    2. 'acc' → logprob: -2.828190326690674
    3. 'state' → logprob: -4.953190326690674
    4. ' lambda' → logprob: -5.578190326690674
    5. '   ' → logprob: -5.828190326690674
    6. '(lambda' → logprob: -6.328190326690674
    7. '_lambda' → logprob: -8.828189849853516
    8. '(acc' → logprob: -9.578189849853516
    9. ' accumulator' → logprob: -9.703189849853516
    10. ' ' → logprob: -9.703189849853516

Token 1039: '_state' (ID: 9479)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.5734130144119263
    2. 'acc' → logprob: -2.0734128952026367
    3. '_result' → logprob: -2.1984128952026367
    4. '(lambda' → logprob: -2.4484128952026367
    5. 'result' → logprob: -3.5734128952026367
    6. '   ' → logprob: -3.5734128952026367
    7. ',' → logprob: -3.6984128952026367
    8. '(
' → logprob: -4.573412895202637
    9. '_lambda' → logprob: -4.948412895202637
    10. ' lambda' → logprob: -5.198412895202637

Token 1040: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03351175785064697
    2. '   ' → logprob: -4.283511638641357
    3. 'lambda' → logprob: -4.658511638641357
    4. ':' → logprob: -5.033511638641357
    5. '(lambda' → logprob: -6.658511638641357
    6. '=lambda' → logprob: -7.033511638641357
    7. ',
' → logprob: -8.033512115478516
    8. ' ,' → logprob: -8.908512115478516
    9. '=' → logprob: -9.533512115478516
    10. '_,' → logprob: -9.658512115478516

Token 1041: ' current' (ID: 2208)
  Prédit: 'ball'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ball' → logprob: -0.0026672116946429014
    2. 'current' → logprob: -6.127667427062988
    3. 'next' → logprob: -8.377667427062988
    4. 'x' → logprob: -9.627667427062988
    5. ' ball' → logprob: -9.752667427062988
    6. 'b' → logprob: -10.502667427062988
    7. 'new' → logprob: -10.502667427062988
    8. 'color' → logprob: -10.752667427062988
    9. '   ' → logprob: -11.127667427062988
    10. 'curr' → logprob: -11.627667427062988

Token 1042: '_ball' (ID: 138751)
  Prédit: '_ball'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ball' → logprob: -0.23724249005317688
    2. ':' → logprob: -1.9872424602508545
    3. '_token' → logprob: -3.3622424602508545
    4. '_input' → logprob: -4.612242698669434
    5. '_sequence' → logprob: -4.987242698669434
    6. 'ball' → logprob: -5.112242698669434
    7. '_char' → logprob: -5.237242698669434
    8. '_:' → logprob: -6.237242698669434
    9. '   ' → logprob: -6.487242698669434
    10. '_' → logprob: -6.487242698669434

Token 1043: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000968987587839365
    2. '_type' → logprob: -7.500968933105469
    3. ':
' → logprob: -8.500968933105469
    4. ' :' → logprob: -10.000968933105469
    5. 'type' → logprob: -10.125968933105469
    6. '[' → logprob: -10.125968933105469
    7. '   ' → logprob: -10.375968933105469
    8. '_:' → logprob: -11.250968933105469
    9. ':type' → logprob: -11.875968933105469
    10. '```' → logprob: -12.125968933105469

Token 1044: '       ' (ID: 309)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.11709863692522049
    2. ' update' → logprob: -2.867098569869995
    3. '   ' → logprob: -2.992098569869995
    4. '       ' → logprob: -5.742098808288574
    5. '(update' → logprob: -8.867098808288574
    6. '    ' → logprob: -10.742098808288574
    7. '           ' → logprob: -10.992098808288574
    8. '      ' → logprob: -10.992098808288574
    9. '	update' → logprob: -11.117098808288574
    10. '     ' → logprob: -11.367098808288574

Token 1045: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' (adapté à ' update') → logprob: -0.00013977376511320472
    2. '   ' → logprob: -9.500140190124512
    3. ' update' → logprob: -9.750140190124512
    4. '(update' → logprob: -12.000140190124512
    5. '	update' → logprob: -16.500139236450195
    6. '(*' → logprob: -16.500139236450195
    7. '(' → logprob: -17.125139236450195
    8. '       ' → logprob: -17.250139236450195
    9. '
' → logprob: -17.250139236450195
    10. '  ' → logprob: -17.625139236450195

Token 1046: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.00029852005536668
    2. 'state' → logprob: -8.250298500061035
    3. 'current' → logprob: -11.000298500061035
    4. '_current' → logprob: -12.000298500061035
    5. '_' → logprob: -12.125298500061035
    6. '   ' → logprob: -12.875298500061035
    7. '_type' → logprob: -13.000298500061035
    8. 'acc' → logprob: -14.250298500061035
    9. '_states' → logprob: -14.375298500061035
    10. 'State' → logprob: -14.750298500061035

Token 1047: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.11765918880701065
    2. '(
' → logprob: -2.242659091949463
    3. 'current' → logprob: -5.742659091949463
    4. '(' → logprob: -6.492659091949463
    5. '(
' → logprob: -9.742659568786621
    6. '   ' → logprob: -10.367659568786621
    7. '(

' → logprob: -12.742659568786621
    8. '           ' → logprob: -12.867659568786621
    9. '       ' → logprob: -13.117659568786621
    10. ' current' → logprob: -13.492659568786621

Token 1048: '_ball' (ID: 138751)
  Prédit: '_ball'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ball' → logprob: -0.011827661655843258
    2. 'ball' → logprob: -4.51182746887207
    3. '(ball' → logprob: -8.01182746887207
    4. '_' → logprob: -9.01182746887207
    5. ')' → logprob: -9.38682746887207
    6. '[' → logprob: -9.76182746887207
    7. '_bal' → logprob: -11.01182746887207
    8. ')_' → logprob: -11.13682746887207
    9. '_b' → logprob: -11.38682746887207
    10. '(' → logprob: -11.51182746887207

Token 1049: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0036713294684886932
    2. ',
' → logprob: -5.753671169281006
    3. '(acc' → logprob: -9.003671646118164
    4. ' ,' → logprob: -9.378671646118164
    5. '   ' → logprob: -9.753671646118164
    6. ')' → logprob: -9.753671646118164
    7. '[' → logprob: -10.753671646118164
    8. '           ' → logprob: -10.753671646118164
    9. '       ' → logprob: -11.003671646118164
    10. '          ' → logprob: -11.253671646118164

Token 1050: ' *' (ID: 425)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.003417366649955511
    2. ' accumulated' → logprob: -5.878417491912842
    3. '*' → logprob: -8.128417015075684
    4. '   ' → logprob: -8.628417015075684
    5. '           ' → logprob: -11.003417015075684
    6. '
' → logprob: -11.253417015075684
    7. '_acc' → logprob: -11.378417015075684
    8. '                           ' → logprob: -11.503417015075684
    9. '                   ' → logprob: -11.753417015075684
    10. '       ' → logprob: -11.878417015075684

Token 1051: 'acc' (ID: 3717)
  Prédit: 'acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -4.320199877838604e-07
    2. ' accumulated' → logprob: -15.125
    3. '(acc' → logprob: -15.75
    4. '
' → logprob: -18.375
    5. '[' → logprob: -19.125
    6. '_acc' → logprob: -20.25
    7. '   ' → logprob: -20.5
    8. '[
' → logprob: -20.875
    9. '(
' → logprob: -21.5
    10. '(' → logprob: -21.5

Token 1052: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.0001290454383706674
    2. 'ulated' → logprob: -10.125128746032715
    3. 'umulate' → logprob: -10.250128746032715
    4. 'umul' → logprob: -11.000128746032715
    5. 'umulator' → logprob: -11.125128746032715
    6. 'umu' → logprob: -11.125128746032715
    7. 'om' → logprob: -13.000128746032715
    8. 'uml' → logprob: -14.000128746032715
    9. 'umulative' → logprob: -14.000128746032715
    10. '[' → logprob: -14.750128746032715

Token 1053: 'ulated' (ID: 13314)
  Prédit: 'ulated'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulated' → logprob: -0.17174208164215088
    2. 'ated' → logprob: -1.9217420816421509
    3. 'lated' → logprob: -4.796741962432861
    4. 'al' → logprob: -6.046741962432861
    5. 'ate' → logprob: -8.54674243927002
    6. 'ulate' → logprob: -8.79674243927002
    7. '   ' → logprob: -8.92174243927002
    8. 'aled' → logprob: -9.54674243927002
    9. 'um' → logprob: -9.67174243927002
    10. 'ator' → logprob: -10.17174243927002

Token 1054: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.0022364973556250334
    2. '_result' → logprob: -6.127236366271973
    3. 'state' → logprob: -10.127236366271973
    4. 'result' → logprob: -13.002236366271973
    5. ')' → logprob: -13.377236366271973
    6. '_states' → logprob: -13.502236366271973
    7. '   ' → logprob: -13.502236366271973
    8. 's' → logprob: -14.127236366271973
    9. '__' → logprob: -14.627236366271973
    10. 'ed' → logprob: -14.627236366271973

Token 1055: '),
' (ID: 2313)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5494097471237183
    2. '   ' → logprob: -1.0494097471237183
    3. '),' → logprob: -3.174409866333008
    4. '),
' → logprob: -3.799409866333008
    5. ',
' → logprob: -5.549409866333008
    6. 'input' → logprob: -6.424409866333008
    7. ',input' → logprob: -6.424409866333008
    8. '       ' → logprob: -7.799409866333008
    9. '(input' → logprob: -8.049409866333008
    10. ')' → logprob: -9.049409866333008

Token 1056: '   ' (ID: 271)
  Prédit: '(Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Mod' → logprob: -0.08159513026475906
    2. '   ' → logprob: -2.8315951824188232
    3. ' (' → logprob: -4.331594944000244
    4. '(
' → logprob: -5.581594944000244
    5. '(' → logprob: -6.081594944000244
    6. '(input' → logprob: -9.831595420837402
    7. 'Modulo' → logprob: -10.456595420837402
    8. 'Mod' → logprob: -10.831595420837402
    9. '([' → logprob: -10.956595420837402
    10. '(Module' → logprob: -11.081595420837402

Token 1057: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.0510413721203804
    2. ' input' → logprob: -3.0510413646698
    3. '   ' → logprob: -6.176041603088379
    4. 'list' → logprob: -8.301041603088379
    5. ' list' → logprob: -9.051041603088379
    6. '[input' → logprob: -12.926041603088379
    7. 'iter' → logprob: -13.801041603088379
    8. '(input' → logprob: -14.426041603088379
    9. '       ' → logprob: -14.801041603088379
    10. '	input' → logprob: -15.051041603088379

Token 1058: '_ball' (ID: 138751)
  Prédit: '_ball'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ball' → logprob: -5.512236498361744e-07
    2. 'ball' → logprob: -15.375000953674316
    3. '_bal' → logprob: -16.25
    4. '_' → logprob: -16.5
    5. '_b' → logprob: -17.625
    6. ')_' → logprob: -17.75
    7. '```' → logprob: -18.375
    8. 'Ball' → logprob: -19.0
    9. '_sequence' → logprob: -19.125
    10. '_input' → logprob: -19.625

Token 1059: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -9.610702363715973e-06
    2. 'sequence' → logprob: -11.750009536743164
    3. '_count' → logprob: -13.750009536743164
    4. 'Sequence' → logprob: -14.750009536743164
    5. ' sequence' → logprob: -16.625009536743164
    6. '_SEQUENCE' → logprob: -17.875009536743164
    7. '_sequences' → logprob: -17.875009536743164
    8. '_' → logprob: -18.000009536743164
    9. '_seq' → logprob: -18.000009536743164
    10. '(sequence' → logprob: -19.750009536743164

Token 1060: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00038801267510280013
    2. ',
' → logprob: -8.250388145446777
    3. '   ' → logprob: -9.375388145446777
    4. ',(' → logprob: -10.375388145446777
    5. ')' → logprob: -12.250388145446777
    6. ',[' → logprob: -12.750388145446777
    7. ' ,' → logprob: -14.125388145446777
    8. '),' → logprob: -14.875388145446777
    9. '[' → logprob: -15.000388145446777
    10. ')
' → logprob: -15.250388145446777

Token 1061: '   ' (ID: 271)
  Prédit: '(Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Mod' → logprob: -0.020973794162273407
    2. ' (' → logprob: -4.1459736824035645
    3. '   ' → logprob: -6.0209736824035645
    4. '(' → logprob: -6.3959736824035645
    5. '(
' → logprob: -7.3959736824035645
    6. '(input' → logprob: -10.145974159240723
    7. '(initial' → logprob: -10.145974159240723
    8. '[' → logprob: -10.270974159240723
    9. '(Module' → logprob: -10.770974159240723
    10. '((' → logprob: -10.770974159240723

Token 1062: ' (' (ID: 350)
  Prédit: '(Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Mod' → logprob: -0.00011415231710998341
    2. '(
' → logprob: -9.500114440917969
    3. '(' (adapté à ' (') → logprob: -10.500114440917969
    4. '   ' → logprob: -11.500114440917969
    5. '(Module' → logprob: -14.250114440917969
    6. ' (' → logprob: -14.625114440917969
    7. '((' → logprob: -15.000114440917969
    8. '(mod' → logprob: -17.00011444091797
    9. '  ' → logprob: -17.87511444091797
    10. ')' → logprob: -18.25011444091797

Token 1063: 'Modulo' (ID: 168265)
  Prédit: 'Modulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Modulo' → logprob: -3.8889261304575484e-06
    2. 'Mod' → logprob: -12.875003814697266
    3. '   ' → logprob: -14.375003814697266
    4. '(Mod' → logprob: -14.500003814697266
    5. '1' → logprob: -16.625003814697266
    6. '           ' → logprob: -17.000003814697266
    7. 'Modo' → logprob: -17.750003814697266
    8. '(M' → logprob: -18.375003814697266
    9. '       ' → logprob: -18.375003814697266
    10. 'mod' → logprob: -18.500003814697266

Token 1064: 'Integer' (ID: 5437)
  Prédit: 'Integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Integer' → logprob: 0.0
    2. '_integer' → logprob: -16.875
    3. 'integer' → logprob: -18.375
    4. '1' → logprob: -18.625
    5. 'Inte' → logprob: -19.625
    6. '(' → logprob: -19.75
    7. '_INTEGER' → logprob: -20.25
    8. '   ' → logprob: -20.25
    9. 'Modulo' → logprob: -20.25
    10. '```' → logprob: -20.25

Token 1065: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004074354947078973
    2. '1' → logprob: -8.250407218933105
    3. '(input' → logprob: -8.875407218933105
    4. ' (' → logprob: -13.500407218933105
    5. 'input' → logprob: -13.625407218933105
    6. '((' → logprob: -14.000407218933105
    7. '(
' → logprob: -14.250407218933105
    8. ')' → logprob: -15.000407218933105
    9. '(mod' → logprob: -15.000407218933105
    10. '(f' → logprob: -15.250407218933105

Token 1066: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017202809685841203
    2. 'input' → logprob: -6.501720428466797
    3. '(' → logprob: -9.126720428466797
    4. 'factor' → logprob: -10.626720428466797
    5. '3' → logprob: -10.876720428466797
    6. 'pow' → logprob: -11.126720428466797
    7. '(input' → logprob: -11.501720428466797
    8. '2' → logprob: -12.126720428466797
    9. '
' → logprob: -12.126720428466797
    10. 'int' → logprob: -12.251720428466797

Token 1067: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.002818789565935731
    2. '(input' → logprob: -6.377818584442139
    3. ',' → logprob: -7.877818584442139
    4. ')' → logprob: -8.127819061279297
    5. 'input' → logprob: -8.752819061279297
    6. '(' → logprob: -9.877819061279297
    7. '),
' → logprob: -10.377819061279297
    8. '   ' → logprob: -10.377819061279297
    9. '()),' → logprob: -10.752819061279297
    10. '<<' → logprob: -10.877819061279297

Token 1068: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0025833859108388424
    2. '(input' → logprob: -6.1275835037231445
    3. ' input' → logprob: -8.002583503723145
    4. 'Modulo' → logprob: -10.127583503723145
    5. 'Mod' → logprob: -12.127583503723145
    6. '   ' → logprob: -12.502583503723145
    7. '[input' → logprob: -12.877583503723145
    8. ' (' → logprob: -12.877583503723145
    9. '<input' → logprob: -13.127583503723145
    10. '(Mod' → logprob: -13.127583503723145

Token 1069: '_ball' (ID: 138751)
  Prédit: '_ball'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ball' → logprob: -3.054500666621607e-06
    2. '_free' → logprob: -14.00000286102295
    3. 'ball' → logprob: -14.25000286102295
    4. '_bal' → logprob: -14.75000286102295
    5. ')_' → logprob: -15.25000286102295
    6. '_' → logprob: -15.50000286102295
    7. '_b' → logprob: -16.000003814697266
    8. '_count' → logprob: -16.500003814697266
    9. '
' → logprob: -16.625003814697266
    10. ')' → logprob: -16.625003814697266

Token 1070: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -4.644463479053229e-05
    2. 'Count' → logprob: -10.125046730041504
    3. 'count' → logprob: -12.375046730041504
    4. '_COUNT' → logprob: -14.625046730041504
    5. ')' → logprob: -14.875046730041504
    6. '   ' → logprob: -15.000046730041504
    7. '_Count' → logprob: -15.625046730041504
    8. '
' → logprob: -16.125045776367188
    9. '_sequence' → logprob: -16.250045776367188
    10. '!' → logprob: -16.250045776367188

Token 1071: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003451818134635687
    2. '//' → logprob: -6.628451824188232
    3. ' //' → logprob: -6.628451824188232
    4. ' -' → logprob: -8.253451347351074
    5. '   ' → logprob: -8.753451347351074
    6. '-' → logprob: -9.003451347351074
    7. ',
' → logprob: -9.253451347351074
    8. ',input' → logprob: -9.503451347351074
    9. ' ,' → logprob: -9.878451347351074
    10. ')' → logprob: -11.128451347351074

Token 1072: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9027791495318525e-05
    2. 'Modulo' → logprob: -11.625019073486328
    3. '   ' → logprob: -12.250019073486328
    4. ' ' → logprob: -13.000019073486328
    5. 'Mod' → logprob: -13.125019073486328
    6. '           ' → logprob: -15.625019073486328
    7. '                   ' → logprob: -15.750019073486328
    8. '               ' → logprob: -16.000019073486328
    9. '
' → logprob: -16.125019073486328
    10. '(Mod' → logprob: -16.750019073486328

Token 1073: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.77627644513268e-06
    2. 'Modulo' → logprob: -12.250008583068848
    3. ' ' → logprob: -13.125008583068848
    4. '   ' → logprob: -13.500008583068848
    5. 'Mod' → logprob: -14.625008583068848
    6. '           ' → logprob: -18.000009536743164
    7. '(Mod' → logprob: -18.000009536743164
    8. '  ' → logprob: -18.625009536743164
    9. ')' → logprob: -18.625009536743164
    10. '(' → logprob: -18.750009536743164

Token 1074: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017672323156148195
    2. ' ,' → logprob: -9.000176429748535
    3. '0' → logprob: -10.250176429748535
    4. '   ' → logprob: -11.250176429748535
    5. ',
' → logprob: -13.125176429748535
    6. ')' → logprob: -13.750176429748535
    7. '```' → logprob: -14.875176429748535
    8. ' ' → logprob: -15.125176429748535
    9. '<|end|>' → logprob: -15.250176429748535
    10. '       ' → logprob: -15.250176429748535

Token 1075: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.3199920178740285e-05
    2. ' ' → logprob: -10.750022888183594
    3. '   ' → logprob: -13.375022888183594
    4. '  ' → logprob: -17.875022888183594
    5. '           ' → logprob: -18.250022888183594
    6. '       ' → logprob: -18.250022888183594
    7. '    ' → logprob: -18.250022888183594
    8. '۰' → logprob: -18.375022888183594
    9. ')' → logprob: -19.000022888183594
    10. '(' → logprob: -19.000022888183594

Token 1076: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.080963092041202e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -15.625004768371582
    4. '۰' → logprob: -18.2500057220459
    5. '<|end|>' → logprob: -19.2500057220459
    6. ')' → logprob: -19.5000057220459
    7. '  ' → logprob: -19.6250057220459
    8. '(' → logprob: -20.1250057220459
    9. '<|end|>' → logprob: -20.1250057220459
    10. '...' → logprob: -20.2500057220459

Token 1077: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.23917081207037e-05
    2. ' ,' → logprob: -10.875041961669922
    3. '0' → logprob: -11.125041961669922
    4. ',
' → logprob: -11.750041961669922
    5. '   ' → logprob: -15.125041961669922
    6. ')' → logprob: -15.750041961669922
    7. '```' → logprob: -16.500041961669922
    8. '<|end|>' → logprob: -16.500041961669922
    9. ' ' → logprob: -17.250041961669922
    10. ',

' → logprob: -18.375041961669922

Token 1078: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -16.125003814697266
    4. '۰' → logprob: -18.625003814697266
    5. '<|end|>' → logprob: -19.500003814697266
    6. ')' → logprob: -19.625003814697266
    7. '```' → logprob: -20.062503814697266
    8. '  ' → logprob: -20.062503814697266
    9. '<|end|>' → logprob: -20.062503814697266
    10. '    ' → logprob: -20.500003814697266

Token 1079: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '   ' → logprob: -18.375
    4. '۰' → logprob: -19.375
    5. ')' → logprob: -19.875
    6. '<|end|>' → logprob: -20.5
    7. '<|end|>' → logprob: -20.625
    8. '           ' → logprob: -20.75
    9. '০' → logprob: -21.0625
    10. '०' → logprob: -21.6875

Token 1080: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.870950215263292e-05
    2. ')' → logprob: -10.750048637390137
    3. '   ' → logprob: -11.500048637390137
    4. ' ,' → logprob: -11.625048637390137
    5. ',
' → logprob: -12.125048637390137
    6. '0' → logprob: -13.500048637390137
    7. '       ' → logprob: -15.375048637390137
    8. '```' → logprob: -15.875048637390137
    9. '           ' → logprob: -16.000049591064453
    10. '  ' → logprob: -16.125049591064453

Token 1081: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018161057960242033
    2. ' ' → logprob: -8.625181198120117
    3. '   ' → logprob: -13.250181198120117
    4. '  ' → logprob: -15.625181198120117
    5. '    ' → logprob: -18.250181198120117
    6. '           ' → logprob: -18.250181198120117
    7. ')' → logprob: -18.875181198120117
    8. 'Mod' → logprob: -18.875181198120117
    9. 'Modulo' → logprob: -19.000181198120117
    10. '     ' → logprob: -19.125181198120117

Token 1082: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.036524842376821e-05
    2. ' ' → logprob: -10.125040054321289
    3. '   ' → logprob: -15.625040054321289
    4. '  ' → logprob: -17.12504005432129
    5. 'Mod' → logprob: -18.12504005432129
    6. '۰' → logprob: -18.25004005432129
    7. 'Modulo' → logprob: -18.87504005432129
    8. '    ' → logprob: -20.25004005432129
    9. '(Mod' → logprob: -20.31254005432129
    10. '000' → logprob: -20.43754005432129

Token 1083: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02670302800834179
    2. ')' → logprob: -3.651703119277954
    3. '))' → logprob: -8.651702880859375
    4. '   ' → logprob: -9.026702880859375
    5. ')))' → logprob: -10.401702880859375
    6. ' ,' → logprob: -10.651702880859375
    7. ',
' → logprob: -11.151702880859375
    8. ')
' → logprob: -11.276702880859375
    9. '0' → logprob: -12.276702880859375
    10. ' )' → logprob: -12.276702880859375

Token 1084: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.688212614681106e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -16.000017166137695
    4. ')' → logprob: -17.000017166137695
    5. '<|end|>' → logprob: -18.375017166137695
    6. '<|end|>' → logprob: -18.375017166137695
    7. '۰' → logprob: -19.125017166137695
    8. '  ' → logprob: -19.375017166137695
    9. '    ' → logprob: -19.937517166137695
    10. '1' → logprob: -20.625017166137695

Token 1085: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -17.5000057220459
    4. ')' → logprob: -18.6250057220459
    5. '۰' → logprob: -19.2500057220459
    6. '<|end|>' → logprob: -19.5000057220459
    7. '  ' → logprob: -19.8750057220459
    8. '<|end|>' → logprob: -20.3750057220459
    9. '(' → logprob: -20.8125057220459
    10. '    ' → logprob: -20.8750057220459

Token 1086: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002929174806922674
    2. ')' → logprob: -8.250292778015137
    3. '0' → logprob: -11.250292778015137
    4. ' ,' → logprob: -11.250292778015137
    5. '   ' → logprob: -13.500292778015137
    6. '))' → logprob: -13.625292778015137
    7. ')))' → logprob: -13.750292778015137
    8. ',
' → logprob: -14.375292778015137
    9. ')
' → logprob: -14.875292778015137
    10. '```' → logprob: -15.500292778015137

Token 1087: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012368128227535635
    2. ' ' → logprob: -9.000123977661133
    3. ')' → logprob: -16.000123977661133
    4. '   ' → logprob: -16.250123977661133
    5. '۰' → logprob: -17.875123977661133
    6. '<|end|>' → logprob: -19.187623977661133
    7. '<|end|>' → logprob: -19.500123977661133
    8. '...' → logprob: -19.687623977661133
    9. '  ' → logprob: -19.937623977661133
    10. '    ' → logprob: -20.000123977661133

Token 1088: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1756367712223437e-05
    2. ' ' → logprob: -11.375011444091797
    3. ')' → logprob: -16.000011444091797
    4. '   ' → logprob: -16.000011444091797
    5. '۰' → logprob: -18.250011444091797
    6. '  ' → logprob: -18.937511444091797
    7. '       ' → logprob: -19.562511444091797
    8. '    ' → logprob: -19.750011444091797
    9. '00' → logprob: -19.937511444091797
    10. '     ' → logprob: -20.000011444091797

Token 1089: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09427845478057861
    2. ',' → logprob: -2.594278335571289
    3. '))' → logprob: -4.219278335571289
    4. ')
' → logprob: -7.969278335571289
    5. ')))' → logprob: -9.219278335571289
    6. '0' → logprob: -10.219278335571289
    7. ' )' → logprob: -10.219278335571289
    8. '   ' → logprob: -10.594278335571289
    9. '))
' → logprob: -12.469278335571289
    10. ',)' → logprob: -12.719278335571289

Token 1090: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.8889261304575484e-06
    2. '   ' → logprob: -13.250003814697266
    3. ')
' → logprob: -13.500003814697266
    4. '))' → logprob: -15.000003814697266
    5. ' )' → logprob: -15.750003814697266
    6. ')`' → logprob: -16.375003814697266
    7. '),' → logprob: -16.750003814697266
    8. ',)' → logprob: -17.375003814697266
    9. '```' → logprob: -18.000003814697266
    10. ');' → logprob: -18.125003814697266

Token 1091: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.6240566083070007e-06
    2. '
' → logprob: -13.375001907348633
    3. ' print' → logprob: -17.500001907348633
    4. '(print' → logprob: -18.375001907348633
    5. '.print' → logprob: -18.750001907348633
    6. 'final' → logprob: -18.750001907348633
    7. '```' → logprob: -19.250001907348633
    8. '#print' → logprob: -19.250001907348633
    9. '
' → logprob: -20.250001907348633
    10. ')
' → logprob: -20.375001907348633

Token 1092: '(final' (ID: 14111)
  Prédit: '(final'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(final' → logprob: -0.003178071230649948
    2. 'final' → logprob: -5.753178119659424
    3. '(' → logprob: -15.003177642822266
    4. ' final' → logprob: -16.378177642822266
    5. '(
' → logprob: -18.878177642822266
    6. '(str' → logprob: -18.878177642822266
    7. '()' → logprob: -19.253177642822266
    8. '(f' → logprob: -19.878177642822266
    9. '((' → logprob: -19.878177642822266
    10. '```' → logprob: -20.003177642822266

Token 1093: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -2.816093228830141e-06
    2. 'result' → logprob: -13.12500286102295
    3. 'Result' → logprob: -14.50000286102295
    4. '(result' → logprob: -15.75000286102295
    5. '_res' → logprob: -17.625001907348633
    6. ')' → logprob: -17.750001907348633
    7. '_RESULT' → logprob: -17.875001907348633
    8. '_Result' → logprob: -17.875001907348633
    9. '_results' → logprob: -18.125001907348633
    10. '_final' → logprob: -18.500001907348633

Token 1094: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.696889623621246e-06
    2. '())' → logprob: -13.62500286102295
    3. ')`' → logprob: -14.25000286102295
    4. '))' → logprob: -14.87500286102295
    5. '()' → logprob: -15.62500286102295
    6. '`)' → logprob: -15.75000286102295
    7. ' )' → logprob: -16.500001907348633
    8. '(' → logprob: -17.500001907348633
    9. '```' → logprob: -18.250001907348633
    10. ')
' → logprob: -18.250001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1092
Tokens correctement prédits (1ère position, stricte): 632
Tokens correctement prédits (1ère position, avec adaptation): 667
Tokens correctement prédits (top 10): 1032
Précision stricte (1ère position): 57.88%
Précision adaptée (1ère position): 61.08%
Précision (top 10): 94.51%
================================================================================
