================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:43:11
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
mod = 998244353
import collections

# Bon, on prend n
n = int(input())
x = input()
# Calcul initial - probablement ça sera modifié plus tard...
ans = (2 * n * (int(x, 2) + 1)) % mod

def make_divisors(n):
    # Renvoie tous les diviseurs de n, hmm
    lst = []
    for i in range(1, int(n ** 0.5) + 1):
        if n % i == 0:
            lst.append(i)
            # attention au carré parfait
            if i != n // i:
                lst.append(n // i)
    # Je veux les plus grands d'abord, c'est utile ensuite
    lst.sort(reverse=True)
    return lst

D = make_divisors(n)
CT = collections.defaultdict(int)

for d in D:
    # Pourquoi on saute les pairs et 1? Je ne sais pas, mais on continue comme l'auteur...
    if d == 1 or d % 2 == 0:
        continue
    k = n // d
    # Cycle truc: pas évident, faudrait vérifier :)
    try:
        y = (2 ** n - 2 ** k) // (2 ** k + 1)
    except:
        y = 0 # Bon, si ça explose, tant pis

    ct = ((int(x, 2) - y) // (y + 1)) + 1 if y + 1 else 0

    # Pour enlever les doublons, on check les diviseurs de k aussi
    Dk = make_divisors(k)
    for dk in Dk:
        if dk < k:
            ct -= CT[dk]
    CT[k] = ct

    # L'auteur fait (je crois) une correction ici, -2*(n-k) pour chaque truc de ce genre
    ans -= ct * 2 * (n - k)
    # allez savoir pourquoi!

# Croisons les doigts, c'est sûrement modulo le gros nombre habituel
print(ans % mod)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'mod' (ID: 4847)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' ' (ID: 220)
  → Token d'amorce (pas de prédiction)

Token 3: '998' (ID: 34589)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -1.1754748821258545
    2. 'math' → logprob: -1.1754748821258545
    3. '__' → logprob: -2.6754748821258545
    4. 'torch' → logprob: -2.8004748821258545
    5. '42' → logprob: -3.3004748821258545
    6. '100' → logprob: -3.6754748821258545
    7. 'import' → logprob: -3.8004748821258545
    8. 'pow' → logprob: -3.8004748821258545
    9. '1' → logprob: -3.9254748821258545
    10. '123' → logprob: -4.175475120544434

Token 4: '244' (ID: 25291)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.41257309913635254
    2. '*' → logprob: -2.5375730991363525
    3. '=' → logprob: -3.0375730991363525
    4. '.' → logprob: -3.1625730991363525
    5. '**' → logprob: -3.5375730991363525
    6. '`' → logprob: -3.6625730991363525
    7. '_' → logprob: -3.7875730991363525
    8. ',' → logprob: -4.037572860717773
    9. ';' → logprob: -4.287572860717773
    10. '+' → logprob: -4.537572860717773

Token 5: '353' (ID: 32996)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0033337296918034554
    2. '```' → logprob: -6.003333568572998
    3. '*' → logprob: -8.003334045410156
    4. '**' → logprob: -8.628334045410156
    5. '_' → logprob: -9.378334045410156
    6. '`' → logprob: -9.753334045410156
    7. '4' → logprob: -9.878334045410156
    8. '43' → logprob: -10.128334045410156
    9. '+' → logprob: -10.503334045410156
    10. '.' → logprob: -11.753334045410156

Token 6: '
' (ID: 198)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.8155412673950195
    2. '```' → logprob: -1.6905412673950195
    3. '**' → logprob: -2.0655412673950195
    4. '.' → logprob: -2.5655412673950195
    5. '+' → logprob: -3.3155412673950195
    6. '#' → logprob: -3.4405412673950195
    7. '`' → logprob: -3.6905412673950195
    8. '_' → logprob: -3.8155412673950195
    9. '\n' → logprob: -4.0655412673950195
    10. '=' → logprob: -4.3155412673950195

Token 7: 'import' (ID: 561)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3039156496524811
    2. '**' → logprob: -2.1789157390594482
    3. '+' → logprob: -3.4289157390594482
    4. ',' → logprob: -3.5539157390594482
    5. '\n' → logprob: -3.6789157390594482
    6. '\' → logprob: -4.053915500640869
    7. '
' → logprob: -4.928915500640869
    8. '=' → logprob: -4.928915500640869
    9. '```' → logprob: -4.928915500640869
    10. '#' → logprob: -5.303915500640869

Token 8: ' collections' (ID: 22690)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.9355363845825195
    2. ' math' → logprob: -1.0605363845825195
    3. ' ' → logprob: -1.5605363845825195
    4. ' numpy' → logprob: -3.1855363845825195
    5. ' random' → logprob: -5.5605363845825195
    6. ' itertools' → logprob: -6.3105363845825195
    7. '_' → logprob: -6.5605363845825195
    8. ' ' → logprob: -6.8105363845825195
    9. ' space' → logprob: -7.3105363845825195
    10. ' collections' → logprob: -8.43553638458252

Token 9: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8137348890304565
    2. '_' → logprob: -0.8137348890304565
    3. '\' → logprob: -3.313735008239746
    4. 'n' → logprob: -3.938735008239746
    5. '\n' → logprob: -4.438735008239746
    6. ',' → logprob: -4.938735008239746
    7. 'a' → logprob: -4.938735008239746
    8. 'newline' → logprob: -5.063735008239746
    9. '`' → logprob: -5.438735008239746
    10. '```' → logprob: -5.688735008239746

Token 10: '#' (ID: 2)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.17741329967975616
    2. 'def' → logprob: -2.92741322517395
    3. '=' → logprob: -3.42741322517395
    4. '.Counter' → logprob: -3.80241322517395
    5. '.' → logprob: -4.052413463592529
    6. 'd' → logprob: -4.927413463592529
    7. '`' → logprob: -5.177413463592529
    8. 'n' → logprob: -5.302413463592529
    9. '_' → logprob: -5.802413463592529
    10. 'deque' → logprob: -6.177413463592529

Token 11: ' Bon' (ID: 12658)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.9862719774246216
    2. ' defaultdict' → logprob: -1.1112719774246216
    3. ' ' → logprob: -2.486271858215332
    4. 'Counter' → logprob: -2.861271858215332
    5. ' Counter' → logprob: -3.361271858215332
    6. ' deque' → logprob: -3.486271858215332
    7. 'def' → logprob: -3.611271858215332
    8. ' def' → logprob: -3.986271858215332
    9. 'Deque' → logprob: -5.236271858215332
    10. '.Counter' → logprob: -5.361271858215332

Token 12: ',' (ID: 11)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.042128901928663254
    2. 'e' → logprob: -3.417128801345825
    3. 'def' → logprob: -5.792129039764404
    4. 'jour' → logprob: -7.167129039764404
    5. 'es' → logprob: -7.542129039764404
    6. 'd' → logprob: -7.542129039764404
    7. 'j' → logprob: -7.667129039764404
    8. 'mod' → logprob: -7.917129039764404
    9. 'uses' → logprob: -8.167128562927246
    10. 'ze' → logprob: -8.167128562927246

Token 13: ' on' (ID: 402)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13054262101650238
    2. '_' → logprob: -3.255542516708374
    3. ' collections' → logprob: -4.505542755126953
    4. 'mod' → logprob: -4.755542755126953
    5. 'def' → logprob: -5.130542755126953
    6. ' mod' → logprob: -5.255542755126953
    7. ' n' → logprob: -5.380542755126953
    8. ' def' → logprob: -5.380542755126953
    9. 'collections' → logprob: -5.505542755126953
    10. 'a' → logprob: -5.630542755126953

Token 14: ' prend' (ID: 37463)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.29832133650779724
    2. ' _' → logprob: -2.17332124710083
    3. ' ' → logprob: -3.42332124710083
    4. ' =' → logprob: -4.17332124710083
    5. '_space' → logprob: -4.42332124710083
    6. ' continue' → logprob: -4.54832124710083
    7. 'e' → logprob: -4.54832124710083
    8. ' va' → logprob: -4.54832124710083
    9. '_continue' → logprob: -5.17332124710083
    10. ' a' → logprob: -5.17332124710083

Token 15: ' n' (ID: 297)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2758010923862457
    2. '_' → logprob: -1.6508010625839233
    3. ' ' → logprob: -4.275801181793213
    4. ' un' → logprob: -4.900801181793213
    5. 'un' → logprob: -5.400801181793213
    6. ' =' → logprob: -5.775801181793213
    7. 'collections' → logprob: -5.775801181793213
    8. ' une' → logprob: -6.150801181793213
    9. ' _' → logprob: -6.400801181793213
    10. ' collections' → logprob: -6.525801181793213

Token 16: '
' (ID: 198)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.28465262055397034
    2. '=' → logprob: -1.784652590751648
    3. ' =' → logprob: -3.1596527099609375
    4. ',' → logprob: -3.6596527099609375
    5. ' ' → logprob: -6.0346527099609375
    6. ')' → logprob: -6.0346527099609375
    7. '[' → logprob: -6.4096527099609375
    8. '#' → logprob: -6.4096527099609375
    9. 'n' → logprob: -7.2846527099609375
    10. 'a' → logprob: -7.9096527099609375

Token 17: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.002270039403811097
    2. '_' → logprob: -7.002270221710205
    3. ' =' → logprob: -8.127269744873047
    4. ' n' → logprob: -8.377269744873047
    5. '=' → logprob: -8.502269744873047
    6. '\' → logprob: -9.252269744873047
    7. ',' → logprob: -9.377269744873047
    8. '_n' → logprob: -9.502269744873047
    9. '
' → logprob: -9.502269744873047
    10. '#' → logprob: -9.627269744873047

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012570171616971493
    2. '=' → logprob: -4.387570381164551
    3. ',' → logprob: -10.76257038116455
    4. ' ' → logprob: -11.13757038116455
    5. ' ' → logprob: -12.01257038116455
    6. ')' → logprob: -12.13757038116455
    7. ' ,' → logprob: -12.51257038116455
    8. 'space' → logprob: -13.26257038116455
    9. ' =)' → logprob: -13.26257038116455
    10. ' =
' → logprob: -13.38757038116455

Token 19: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.06456757336854935
    2. 'int' → logprob: -2.8145675659179688
    3. ' input' → logprob: -6.939567565917969
    4. ' ' → logprob: -7.064567565917969
    5. ' collections' → logprob: -7.939567565917969
    6. '0' → logprob: -8.564567565917969
    7. '10' → logprob: -9.439567565917969
    8. 'input' → logprob: -9.564567565917969
    9. 'collections' → logprob: -10.564567565917969
    10. '5' → logprob: -11.314567565917969

Token 20: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023266561329364777
    2. '(input' → logprob: -3.773266553878784
    3. '()' → logprob: -12.148266792297363
    4. ' (' → logprob: -12.648266792297363
    5. '('' → logprob: -12.648266792297363
    6. '(`' → logprob: -13.023266792297363
    7. 'input' → logprob: -13.523266792297363
    8. '(n' → logprob: -13.648266792297363
    9. '(
' → logprob: -13.898266792297363
    10. '(int' → logprob: -14.148266792297363

Token 21: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.03924942389130592
    2. '()' → logprob: -3.2892494201660156
    3. '(' → logprob: -7.039249420166016
    4. ')' → logprob: -8.164249420166016
    5. '()))' → logprob: -10.914249420166016
    6. ' ())' → logprob: -11.664249420166016
    7. '();)' → logprob: -12.289249420166016
    8. '());' → logprob: -13.039249420166016
    9. '()),' → logprob: -13.414249420166016
    10. '(),' → logprob: -13.539249420166016

Token 22: 'x' (ID: 87)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1368588209152222
    2. 's' → logprob: -1.3868588209152222
    3. 'a' → logprob: -2.1368589401245117
    4. 'n' → logprob: -2.6368589401245117
    5. 'x' → logprob: -2.8868589401245117
    6. '\n' → logprob: -3.0118589401245117
    7. ')' → logprob: -3.6368589401245117
    8. '#' → logprob: -3.6368589401245117
    9. '\' → logprob: -4.636858940124512
    10. ',' → logprob: -4.636858940124512

Token 23: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4802665114402771
    2. ' =' → logprob: -1.1052665710449219
    3. '=' → logprob: -3.355266571044922
    4. '_' → logprob: -5.355266571044922
    5. '_values' → logprob: -6.105266571044922
    6. 'es' → logprob: -6.355266571044922
    7. '_list' → logprob: -6.605266571044922
    8. ',' → logprob: -7.230266571044922
    9. '_s' → logprob: -7.230266571044922
    10. '_vals' → logprob: -7.230266571044922

Token 24: ' input' (ID: 3422)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.42110109329223633
    2. '[]' → logprob: -2.1711010932922363
    3. 'list' → logprob: -2.1711010932922363
    4. '[' → logprob: -2.5461010932922363
    5. ' collections' → logprob: -4.671101093292236
    6. '[int' → logprob: -4.796101093292236
    7. '[input' → logprob: -5.296101093292236
    8. 'input' → logprob: -5.546101093292236
    9. ' list' → logprob: -5.671101093292236
    10. ' [' → logprob: -6.421101093292236

Token 25: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0016494720475748181
    2. '('' → logprob: -6.876649379730225
    3. '()' → logprob: -8.126649856567383
    4. '(
' → logprob: -9.001649856567383
    5. '("("' → logprob: -9.751649856567383
    6. '[' → logprob: -10.001649856567383
    7. '(

' → logprob: -10.626649856567383
    8. ')' → logprob: -11.001649856567383
    9. ''' → logprob: -11.751649856567383
    10. '.' → logprob: -12.001649856567383

Token 26: '#' (ID: 2)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.5769933462142944
    2. '=' → logprob: -1.7019933462142944
    3. '[' → logprob: -2.201993465423584
    4. '.split' → logprob: -2.576993465423584
    5. 'a' → logprob: -2.826993465423584
    6. 's' → logprob: -2.951993465423584
    7. ' =' → logprob: -3.076993465423584
    8. '_' → logprob: -3.326993465423584
    9. ' ' → logprob: -3.576993465423584
    10. '[:]' → logprob: -3.576993465423584

Token 27: ' Calcul' (ID: 57243)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1178686618804932
    2. 'count' → logprob: -1.9928686618804932
    3. 'x' → logprob: -2.117868661880493
    4. 'a' → logprob: -2.242868661880493
    5. 'counts' → logprob: -3.117868661880493
    6. 'd' → logprob: -3.367868661880493
    7. 'freq' → logprob: -3.492868661880493
    8. 'c' → logprob: -3.492868661880493
    9. '_' → logprob: -3.992868661880493
    10. ' ' → logprob: -4.492868423461914

Token 28: ' initial' (ID: 4871)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3476056456565857
    2. 's' → logprob: -2.3476057052612305
    3. '(' → logprob: -2.7226057052612305
    4. '=' → logprob: -3.2226057052612305
    5. ' =' → logprob: -3.4726057052612305
    6. ' ' → logprob: -3.5976057052612305
    7. 'ations' → logprob: -3.8476057052612305
    8. '()' → logprob: -5.7226057052612305
    9. 'a' → logprob: -6.5976057052612305
    10. ')' → logprob: -6.9726057052612305

Token 29: ' -' (ID: 533)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.739591121673584
    2. 's' → logprob: -1.114591121673584
    3. 'x' → logprob: -2.864591121673584
    4. ' ' → logprob: -3.114591121673584
    5. '[' → logprob: -3.864591121673584
    6. ')' → logprob: -3.989591121673584
    7. ' =' → logprob: -4.239591121673584
    8. '=' → logprob: -4.364591121673584
    9. 'a' → logprob: -5.114591121673584
    10. 'd' → logprob: -6.489591121673584

Token 30: ' probablement' (ID: 87740)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0738176703453064
    2. 's' → logprob: -3.948817729949951
    3. 'x' → logprob: -4.073817729949951
    4. '_' → logprob: -4.573817729949951
    5. ' =' → logprob: -5.198817729949951
    6. '[' → logprob: -5.698817729949951
    7. ' x' → logprob: -5.823817729949951
    8. ' s' → logprob: -6.448817729949951
    9. 'sum' → logprob: -6.698817729949951
    10. '=' → logprob: -6.823817729949951

Token 31: ' ça' (ID: 13590)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0667332410812378
    2. ' x' → logprob: -1.8167332410812378
    3. 'x' → logprob: -2.3167333602905273
    4. 's' → logprob: -2.5667333602905273
    5. 'collections' → logprob: -3.0667333602905273
    6. '0' → logprob: -3.3167333602905273
    7. 'sum' → logprob: -3.8167333602905273
    8. ' =' → logprob: -4.066733360290527
    9. ' sum' → logprob: -4.316733360290527
    10. ' collections' → logprob: -4.441733360290527

Token 32: ' sera' (ID: 15511)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2191485166549683
    2. 'x' → logprob: -1.3441485166549683
    3. ' =' → logprob: -2.094148635864258
    4. 's' → logprob: -2.344148635864258
    5. '=' → logprob: -2.594148635864258
    6. '_' → logprob: -3.094148635864258
    7. 'n' → logprob: -4.219148635864258
    8. '#' → logprob: -4.344148635864258
    9. '.' → logprob: -4.469148635864258
    10. 'mod' → logprob: -4.844148635864258

Token 33: ' mod' (ID: 1812)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0456992387771606
    2. '0' → logprob: -1.2956992387771606
    3. 'collections' → logprob: -2.420699119567871
    4. 'n' → logprob: -3.170699119567871
    5. 'int' → logprob: -3.170699119567871
    6. ' x' → logprob: -3.170699119567871
    7. 'len' → logprob: -3.420699119567871
    8. 's' → logprob: -3.795699119567871
    9. 'sum' → logprob: -4.795699119567871
    10. '1' → logprob: -4.795699119567871

Token 34: 'ifié' (ID: 49927)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4893517792224884
    2. '=' → logprob: -1.489351749420166
    3. ' ' → logprob: -2.739351749420166
    4. 'x' → logprob: -4.114351749420166
    5. 'mod' → logprob: -4.114351749420166
    6. '%' → logprob: -4.239351749420166
    7. ' mod' → logprob: -4.489351749420166
    8. ' %=' → logprob: -5.364351749420166
    9. ' x' → logprob: -5.489351749420166
    10. 'u' → logprob: -5.739351749420166

Token 35: ' plus' (ID: 2932)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.4642508029937744
    2. 's' → logprob: -1.7142508029937744
    3. '=' → logprob: -1.8392508029937744
    4. '_' → logprob: -1.9642508029937744
    5. ' ' → logprob: -2.8392508029937744
    6. 'a' → logprob: -3.0892508029937744
    7. ' =' → logprob: -3.5892508029937744
    8. '(' → logprob: -3.9642508029937744
    9. 'result' → logprob: -4.089250564575195
    10. 'd' → logprob: -4.339250564575195

Token 36: ' tard' (ID: 30225)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7881460785865784
    2. 'x' → logprob: -1.1631460189819336
    3. '+' → logprob: -2.9131460189819336
    4. 'e' → logprob: -3.5381460189819336
    5. ' x' → logprob: -3.5381460189819336
    6. 'u' → logprob: -4.288146018981934
    7. ' =' → logprob: -4.663146018981934
    8. 'ieurs' → logprob: -4.913146018981934
    9. '+=' → logprob: -5.163146018981934
    10. '?' → logprob: -5.413146018981934

Token 37: '...
' (ID: 4908)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9797949194908142
    2. '=' → logprob: -1.479794979095459
    3. '_' → logprob: -2.229794979095459
    4. 'x' → logprob: -2.604794979095459
    5. ' ' → logprob: -3.104794979095459
    6. 'a' → logprob: -3.354794979095459
    7. ' =' → logprob: -3.979794979095459
    8. 'd' → logprob: -4.229794979095459
    9. 'result' → logprob: -4.229794979095459
    10. ')' → logprob: -4.729794979095459

Token 38: 'ans' (ID: 616)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6698506474494934
    2. 'count' → logprob: -2.2948505878448486
    3. 's' → logprob: -2.5448505878448486
    4. 'c' → logprob: -3.0448505878448486
    5. 'sum' → logprob: -3.0448505878448486
    6. 'total' → logprob: -3.4198505878448486
    7. 'ans' → logprob: -3.4198505878448486
    8. 'cnt' → logprob: -3.4198505878448486
    9. 'res' → logprob: -3.9198505878448486
    10. 'result' → logprob: -4.044850826263428

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.043041668832302094
    2. '=' → logprob: -3.168041706085205
    3. '_' → logprob: -10.918041229248047
    4. ' ' → logprob: -11.543041229248047
    5. ' +=' → logprob: -12.168041229248047
    6. ',' → logprob: -12.668041229248047
    7. ' ' → logprob: -13.918041229248047
    8. ' =
' → logprob: -14.043041229248047
    9. ' ,' → logprob: -14.293041229248047
    10. '.' → logprob: -14.668041229248047

Token 40: ' (' (ID: 350)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.031619392335414886
    2. ' ' → logprob: -4.031619548797607
    3. '1' → logprob: -4.406619548797607
    4. 'x' → logprob: -7.531619548797607
    5. 'n' → logprob: -8.40661907196045
    6. 'collections' → logprob: -8.53161907196045
    7. ' x' → logprob: -10.15661907196045
    8. 'int' → logprob: -10.28161907196045
    9. ' n' → logprob: -10.65661907196045
    10. '[' → logprob: -10.78161907196045

Token 41: '2' (ID: 17)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2952761650085449
    2. '1' → logprob: -2.795276165008545
    3. ' n' → logprob: -3.045276165008545
    4. 'int' → logprob: -3.045276165008545
    5. 'len' → logprob: -3.295276165008545
    6. 'pow' → logprob: -3.295276165008545
    7. '2' → logprob: -4.795276165008545
    8. 'x' → logprob: -5.795276165008545
    9. '10' → logprob: -6.170276165008545
    10. '0' → logprob: -6.420276165008545

Token 42: ' *' (ID: 425)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.18062138557434082
    2. ' **' → logprob: -1.9306213855743408
    3. '*' → logprob: -4.680621147155762
    4. ' *' → logprob: -4.930621147155762
    5. '*n' → logprob: -5.930621147155762
    6. '*x' → logprob: -8.180621147155762
    7. ' **)' → logprob: -8.305621147155762
    8. ' ' → logprob: -9.180621147155762
    9. '**)' → logprob: -9.180621147155762
    10. ')' → logprob: -9.305621147155762

Token 43: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.33343344926834106
    2. 'n' → logprob: -1.3334333896636963
    3. ' (' → logprob: -5.333433628082275
    4. ' int' → logprob: -5.708433628082275
    5. 'int' → logprob: -5.833433628082275
    6. ' ' → logprob: -6.333433628082275
    7. 'pow' → logprob: -6.333433628082275
    8. ')' → logprob: -7.333433628082275
    9. ' pow' → logprob: -7.458433628082275
    10. ' )' → logprob: -7.458433628082275

Token 44: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2985593378543854
    2. ' +' → logprob: -2.4235594272613525
    3. ' -' → logprob: -2.7985594272613525
    4. ' )' → logprob: -2.9235594272613525
    5. '+' → logprob: -3.5485594272613525
    6. '-' → logprob: -4.298559188842773
    7. '*' → logprob: -5.173559188842773
    8. ' *' → logprob: -5.298559188842773
    9. ')%' → logprob: -7.423559188842773
    10. '%' → logprob: -7.798559188842773

Token 45: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0592900514602661
    2. '(n' → logprob: -1.6842900514602661
    3. '(' → logprob: -1.8092900514602661
    4. ' (' → logprob: -2.0592899322509766
    5. ' n' → logprob: -2.5592899322509766
    6. '2' → logprob: -2.8092899322509766
    7. '3' → logprob: -4.809289932250977
    8. ' ' → logprob: -4.809289932250977
    9. ')' → logprob: -5.934289932250977
    10. '10' → logprob: -6.434289932250977

Token 46: 'int' (ID: 491)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.13984186947345734
    2. '(n' → logprob: -2.5148417949676514
    3. '(' → logprob: -4.1398420333862305
    4. '2' → logprob: -4.2648420333862305
    5. ' n' → logprob: -4.6398420333862305
    6. ' (' → logprob: -5.1398420333862305
    7. ')' → logprob: -6.2648420333862305
    8. '-' → logprob: -7.5148420333862305
    9. ' ' → logprob: -7.5148420333862305
    10. ')n' → logprob: -7.6398420333862305

Token 47: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.006422020960599184
    2. '(' → logprob: -5.75642204284668
    3. '(n' → logprob: -6.50642204284668
    4. ' (' → logprob: -7.38142204284668
    5. 'x' → logprob: -7.50642204284668
    6. '(
' → logprob: -8.63142204284668
    7. ')' → logprob: -9.25642204284668
    8. '(max' → logprob: -10.00642204284668
    9. ' )' → logprob: -10.38142204284668
    10. ' x' → logprob: -10.75642204284668

Token 48: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2032223790884018
    2. ')))' → logprob: -2.3282222747802734
    3. ')**' → logprob: -3.2032222747802734
    4. '))' → logprob: -3.9532222747802734
    5. ')%' → logprob: -4.703222274780273
    6. '[' → logprob: -5.078222274780273
    7. ')+' → logprob: -6.078222274780273
    8. '%' → logprob: -6.203222274780273
    9. '-' → logprob: -6.578222274780273
    10. ' )' → logprob: -6.703222274780273

Token 49: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.11870964616537094
    2. '10' → logprob: -2.3687095642089844
    3. ' ' → logprob: -4.993709564208984
    4. 'mod' → logprob: -5.243709564208984
    5. '16' → logprob: -5.618709564208984
    6. ')' → logprob: -7.243709564208984
    7. '```' → logprob: -7.868709564208984
    8. '9' → logprob: -7.993709564208984
    9. ' mod' → logprob: -8.368709564208984
    10. '1' → logprob: -8.618709564208984

Token 50: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2048943191766739
    2. '10' → logprob: -1.8298943042755127
    3. '16' → logprob: -4.204894542694092
    4. 'mod' → logprob: -5.079894542694092
    5. '3' → logprob: -7.329894542694092
    6. '36' → logprob: -7.329894542694092
    7. '4' → logprob: -7.329894542694092
    8. '9' → logprob: -7.579894542694092
    9. '5' → logprob: -9.204894065856934
    10. '8' → logprob: -9.204894065856934

Token 51: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03146253898739815
    2. ')))' → logprob: -3.7814624309539795
    3. '))' → logprob: -4.906462669372559
    4. ' )' → logprob: -8.406462669372559
    5. ')+' → logprob: -8.781462669372559
    6. '-' → logprob: -9.156462669372559
    7. ')%' → logprob: -9.531462669372559
    8. '+' → logprob: -9.781462669372559
    9. ')**' → logprob: -10.031462669372559
    10. '**' → logprob: -11.031462669372559

Token 52: ' +' (ID: 659)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3673655390739441
    2. ')' → logprob: -1.3673655986785889
    3. ' ))' → logprob: -3.867365598678589
    4. ' )' → logprob: -4.49236536026001
    5. '+' → logprob: -5.11736536026001
    6. '%' → logprob: -5.36736536026001
    7. ')%' → logprob: -5.61736536026001
    8. ')))' → logprob: -6.24236536026001
    9. ' +' → logprob: -6.49236536026001
    10. '-' → logprob: -6.49236536026001

Token 53: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0048040226101875305
    2. ' ' → logprob: -5.6298041343688965
    3. ')' → logprob: -7.7548041343688965
    4. 'mod' → logprob: -8.379803657531738
    5. '2' → logprob: -9.129803657531738
    6. '0' → logprob: -9.129803657531738
    7. ' mod' → logprob: -10.129803657531738
    8. 'n' → logprob: -10.379803657531738
    9. '(' → logprob: -10.379803657531738
    10. ' n' → logprob: -10.629803657531738

Token 54: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015024791937321424
    2. 'mod' → logprob: -7.376502513885498
    3. ' ' → logprob: -8.62650203704834
    4. '2' → logprob: -8.87650203704834
    5. '(' → logprob: -9.00150203704834
    6. '0' → logprob: -9.12650203704834
    7. 'ans' → logprob: -9.37650203704834
    8. 'n' → logprob: -10.00150203704834
    9. '(mod' → logprob: -10.50150203704834
    10. 'int' → logprob: -10.62650203704834

Token 55: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.35259348154067993
    2. ')' → logprob: -1.2275934219360352
    3. ' ))' → logprob: -6.352593421936035
    4. ')))' → logprob: -6.852593421936035
    5. ' )' → logprob: -7.352593421936035
    6. '-' → logprob: -8.477593421936035
    7. '+' → logprob: -8.602593421936035
    8. ' -' → logprob: -8.852593421936035
    9. ')%' → logprob: -9.477593421936035
    10. ' +' → logprob: -9.977593421936035

Token 56: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.26830366253852844
    2. ' %' → logprob: -1.518303632736206
    3. ')' → logprob: -4.268303871154785
    4. '%
' → logprob: -7.018303871154785
    5. ' %
' → logprob: -7.518303871154785
    6. '%n' → logprob: -7.643303871154785
    7. '
' → logprob: -9.018303871154785
    8. '%\' → logprob: -9.893303871154785
    9. ')%' → logprob: -10.768303871154785
    10. ')
' → logprob: -10.893303871154785

Token 57: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.2852652966976166
    2. 'mod' → logprob: -1.410265326499939
    3. '998' → logprob: -5.7852654457092285
    4. ' ' → logprob: -6.9102654457092285
    5. '(mod' → logprob: -11.28526496887207
    6. ' modul' → logprob: -11.53526496887207
    7. '`' → logprob: -12.28526496887207
    8. '	mod' → logprob: -13.41026496887207
    9. '999' → logprob: -13.53526496887207
    10. ' ' → logprob: -13.66026496887207

Token 58: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9422876834869385
    2. '\n' → logprob: -0.9422876834869385
    3. '+' → logprob: -2.5672876834869385
    4. '+
' → logprob: -3.1922876834869385
    5. '' → logprob: -3.3172876834869385
    6. '\' → logprob: -3.8172876834869385
    7. '*' → logprob: -3.8172876834869385
    8. '```' → logprob: -5.317287445068359
    9. '**' → logprob: -5.692287445068359
    10. '%' → logprob: -6.192287445068359

Token 59: 'def' (ID: 1314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3282880485057831
    2. '
' → logprob: -1.9532880783081055
    3. '#' → logprob: -3.4532880783081055
    4. '*' → logprob: -3.7032880783081055
    5. '+
' → logprob: -3.8282880783081055
    6. 'for' → logprob: -4.7032880783081055
    7. '.' → logprob: -4.9532880783081055
    8. ')' → logprob: -5.0782880783081055
    9. '\n' → logprob: -5.2032880783081055
    10. '' → logprob: -5.4532880783081055

Token 60: ' make' (ID: 1520)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -1.0076736211776733
    2. ' count' → logprob: -1.6326736211776733
    3. ' f' → logprob: -2.382673740386963
    4. ' pow' → logprob: -3.132673740386963
    5. ' calculate' → logprob: -3.257673740386963
    6. ' factor' → logprob: -3.507673740386963
    7. ' mod' → logprob: -3.507673740386963
    8. ' calc' → logprob: -3.757673740386963
    9. ' add' → logprob: -4.007673740386963
    10. ' compute' → logprob: -4.132673740386963

Token 61: '_div' (ID: 36926)
  Prédit: '_array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -1.3151041269302368
    2. '_' → logprob: -1.9401041269302368
    3. '_set' → logprob: -2.0651040077209473
    4. '_list' → logprob: -2.1901040077209473
    5. '_string' → logprob: -3.5651040077209473
    6. '_factor' → logprob: -3.6901040077209473
    7. '_mod' → logprob: -4.065104007720947
    8. '_div' → logprob: -4.190104007720947
    9. '_arr' → logprob: -4.190104007720947
    10. '_move' → logprob: -4.190104007720947

Token 62: 'is' (ID: 276)
  Prédit: 'isible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isible' → logprob: -0.30252891778945923
    2. 'isor' → logprob: -1.8025288581848145
    3. 'mod' → logprob: -3.3025288581848145
    4. 'ider' → logprob: -3.9275288581848145
    5. 'ide' → logprob: -4.1775288581848145
    6. 'is' → logprob: -4.6775288581848145
    7. 'ision' → logprob: -5.4275288581848145
    8. 'isions' → logprob: -6.8025288581848145
    9. 'ides' → logprob: -6.8025288581848145
    10. '(int' → logprob: -7.4275288581848145

Token 63: 'ors' (ID: 914)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.31383803486824036
    2. 'ors' → logprob: -2.063838005065918
    3. 'ible' → logprob: -2.188838005065918
    4. 'e' → logprob: -3.813838005065918
    5. 'er' → logprob: -6.063838005065918
    6. 'ibility' → logprob: -6.438838005065918
    7. 'ion' → logprob: -6.563838005065918
    8. 'isible' → logprob: -7.813838005065918
    9. ' or' → logprob: -8.188838005065918
    10. 'tor' → logprob: -8.313838005065918

Token 64: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.576617956161499
    2. '(n' → logprob: -0.826617956161499
    3. '(x' → logprob: -7.701618194580078
    4. ' (' → logprob: -9.576618194580078
    5. '(a' → logprob: -9.826618194580078
    6. '(num' → logprob: -10.951618194580078
    7. '(s' → logprob: -11.201618194580078
    8. '(
' → logprob: -11.326618194580078
    9. '(number' → logprob: -11.326618194580078
    10. '("("' → logprob: -11.701618194580078

Token 65: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0004606975708156824
    2. '(n' → logprob: -8.750460624694824
    3. '):
' → logprob: -8.875460624694824
    4. ')' → logprob: -9.125460624694824
    5. ':' → logprob: -11.125460624694824
    6. ' ):' → logprob: -11.125460624694824
    7. '):
' → logprob: -11.250460624694824
    8. '(' → logprob: -12.125460624694824
    9. 'n' → logprob: -12.875460624694824
    10. '=' → logprob: -14.250460624694824

Token 66: '   ' (ID: 271)
  Prédit: '	div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	div' → logprob: -0.7120063900947571
    2. 'div' → logprob: -1.3370063304901123
    3. '   ' → logprob: -2.0870063304901123
    4. ' divis' → logprob: -2.8370063304901123
    5. ' ' → logprob: -3.5870063304901123
    6. 'l' → logprob: -4.712006568908691
    7. ' i' → logprob: -5.087006568908691
    8. '	i' → logprob: -5.212006568908691
    9. '	l' → logprob: -5.337006568908691
    10. 'i' → logprob: -5.712006568908691

Token 67: ' #' (ID: 1069)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.29052793979644775
    2. ' divis' → logprob: -1.5405279397964478
    3. '	div' → logprob: -4.290527820587158
    4. 'l' → logprob: -4.790527820587158
    5. '   ' → logprob: -4.915527820587158
    6. ' div' → logprob: -5.665527820587158
    7. 'i' → logprob: -6.040527820587158
    8. ' i' → logprob: -7.415527820587158
    9. 'lst' → logprob: -7.915527820587158
    10. ' l' → logprob: -8.040528297424316

Token 68: ' Ren' (ID: 17631)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.08346500992774963
    2. ' divis' → logprob: -2.583465099334717
    3. 'i' → logprob: -6.708465099334717
    4. '	div' → logprob: -6.958465099334717
    5. ' div' → logprob: -7.333465099334717
    6. 'import' → logprob: -7.458465099334717
    7. '   ' → logprob: -7.708465099334717
    8. 'l' → logprob: -8.333464622497559
    9. 'd' → logprob: -9.083464622497559
    10. 'r' → logprob: -9.333464622497559

Token 69: 'voie' (ID: 70072)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.5783766508102417
    2. 't' → logprob: -1.4533766508102417
    3. 'def' → logprob: -2.7033767700195312
    4. 'tre' → logprob: -2.7033767700195312
    5. 'ge' → logprob: -4.203376770019531
    6. 'd' → logprob: -4.453376770019531
    7. '```' → logprob: -4.703376770019531
    8. 'tr' → logprob: -4.953376770019531
    9. 'ders' → logprob: -5.203376770019531
    10. 'turn' → logprob: -5.578376770019531

Token 70: ' tous' (ID: 10688)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.09123779833316803
    2. 'div' → logprob: -2.966237783432007
    3. ' []' → logprob: -3.841237783432007
    4. ' divis' → logprob: -4.716238021850586
    5. 'd' → logprob: -6.716238021850586
    6. 's' → logprob: -6.841238021850586
    7. '[' → logprob: -7.466238021850586
    8. 'a' → logprob: -7.841238021850586
    9. 'ans' → logprob: -8.091238021850586
    10. 'lst' → logprob: -8.091238021850586

Token 71: ' les' (ID: 1341)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.08117666095495224
    2. 'div' → logprob: -3.4561767578125
    3. '[' → logprob: -3.8311767578125
    4. ' divis' → logprob: -4.4561767578125
    5. ' []' → logprob: -4.9561767578125
    6. 's' → logprob: -6.5811767578125
    7. 'd' → logprob: -7.0811767578125
    8. '[
' → logprob: -7.3311767578125
    9. '	div' → logprob: -8.2061767578125
    10. '_div' → logprob: -8.2061767578125

Token 72: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.004923123866319656
    2. ' div' → logprob: -5.504923343658447
    3. ' divis' → logprob: -7.254923343658447
    4. 'd' → logprob: -9.879922866821289
    5. '_div' → logprob: -10.379922866821289
    6. ' facteurs' → logprob: -10.879922866821289
    7. '	div' → logprob: -11.004922866821289
    8. 'fact' → logprob: -12.379922866821289
    9. 'ent' → logprob: -12.754922866821289
    10. 'i' → logprob: -13.004922866821289

Token 73: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.8206394910812378
    2. 'is' → logprob: -1.0706394910812378
    3. 's' → logprob: -1.9456394910812378
    4. '   ' → logprob: -3.8206396102905273
    5. '```' → logprob: -3.8206396102905273
    6. ' is' → logprob: -5.695639610290527
    7. 'isers' → logprob: -5.945639610290527
    8. '       ' → logprob: -6.445639610290527
    9. 'isateurs' → logprob: -6.445639610290527
    10. '[]' → logprob: -6.570639610290527

Token 74: 'urs' (ID: 1628)
  Prédit: 'urs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -0.07127930968999863
    2. 'rs' → logprob: -2.696279287338257
    3. 's' → logprob: -6.821279525756836
    4. 'ors' → logprob: -9.321279525756836
    5. 'eurs' → logprob: -10.321279525756836
    6. 'ers' → logprob: -11.071279525756836
    7. 'reurs' → logprob: -11.071279525756836
    8. 'urses' → logprob: -11.196279525756836
    9. '```' → logprob: -11.321279525756836
    10. 'ursors' → logprob: -11.321279525756836

Token 75: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3823840618133545
    2. '(' → logprob: -1.2573840618133545
    3. '(n' → logprob: -3.5073840618133545
    4. '_' → logprob: -7.507384300231934
    5. 'n' → logprob: -7.632384300231934
    6. '   ' → logprob: -8.132384300231934
    7. '=' → logprob: -8.257384300231934
    8. ' ' → logprob: -8.257384300231934
    9. ',' → logprob: -8.507384300231934
    10. ' (' → logprob: -8.632384300231934

Token 76: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.18351280689239502
    2. ' n' → logprob: -1.808512806892395
    3. ' i' → logprob: -6.3085126876831055
    4. 'i' → logprob: -6.3085126876831055
    5. 'range' → logprob: -10.433512687683105
    6. ' ' → logprob: -10.558512687683105
    7. ' range' → logprob: -10.933512687683105
    8. '   ' → logprob: -10.933512687683105
    9. '```' → logprob: -11.558512687683105
    10. '1' → logprob: -12.683512687683105

Token 77: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3223118484020233
    2. '():' → logprob: -1.9473118782043457
    3. '   ' → logprob: -3.3223118782043457
    4. 's' → logprob: -3.4473118782043457
    5. ' :' → logprob: -3.4473118782043457
    6. '():
' → logprob: -4.947311878204346
    7. 'def' → logprob: -5.072311878204346
    8. '(' → logprob: -5.447311878204346
    9. '(n' → logprob: -5.697311878204346
    10. ':
' → logprob: -5.947311878204346

Token 78: ' hmm' (ID: 186402)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.8785862922668457
    2. ' divis' → logprob: -1.1285862922668457
    3. '   ' → logprob: -1.7535862922668457
    4. ' div' → logprob: -3.1285862922668457
    5. 'd' → logprob: -4.628586292266846
    6. 'n' → logprob: -5.003586292266846
    7. 'l' → logprob: -5.253586292266846
    8. ' l' → logprob: -5.378586292266846
    9. ' i' → logprob: -5.503586292266846
    10. ' d' → logprob: -5.878586292266846

Token 79: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43227583169937134
    2. ':' → logprob: -1.8072757720947266
    3. ' :' → logprob: -2.3072757720947266
    4. 's' → logprob: -3.3072757720947266
    5. ' ' → logprob: -4.432275772094727
    6. '():' → logprob: -4.807275772094727
    7. '(n' → logprob: -5.432275772094727
    8. '(s' → logprob: -5.557275772094727
    9. ' :
' → logprob: -5.557275772094727
    10. 'def' → logprob: -5.557275772094727

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45390474796295166
    2. 'div' → logprob: -1.0789047479629517
    3. '	div' → logprob: -4.328904628753662
    4. 'def' → logprob: -5.328904628753662
    5. 's' → logprob: -6.078904628753662
    6. ' divis' → logprob: -6.453904628753662
    7. ':' → logprob: -7.078904628753662
    8. '(div' → logprob: -7.203904628753662
    9. ' ' → logprob: -7.828904628753662
    10. ' div' → logprob: -7.828904628753662

Token 81: ' lst' (ID: 33384)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.09864809364080429
    2. ' divis' → logprob: -2.4736480712890625
    3. ' div' → logprob: -4.9736480712890625
    4. '   ' → logprob: -6.3486480712890625
    5. '	div' → logprob: -7.2236480712890625
    6. 'import' → logprob: -9.723648071289062
    7. 'd' → logprob: -9.848648071289062
    8. 'l' → logprob: -9.848648071289062
    9. 'i' → logprob: -10.973648071289062
    10. ' ' → logprob: -11.223648071289062

Token 82: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09187763929367065
    2. ' =' → logprob: -2.4668776988983154
    3. '=[]' → logprob: -5.841877460479736
    4. ',' → logprob: -11.716877937316895
    5. '[]' → logprob: -11.966877937316895
    6. '=[]
' → logprob: -12.216877937316895
    7. ' ' → logprob: -12.341877937316895
    8. '=[]
' → logprob: -12.841877937316895
    9. '   ' → logprob: -13.841877937316895
    10. 's' → logprob: -14.216877937316895

Token 83: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.029948566108942032
    2. ' []' → logprob: -3.5299484729766846
    3. '[' → logprob: -9.279948234558105
    4. ' [' → logprob: -9.404948234558105
    5. '[]
' → logprob: -10.904948234558105
    6. '[]}' → logprob: -13.779948234558105
    7. '[]

' → logprob: -13.904948234558105
    8. ' []
' → logprob: -14.529948234558105
    9. 'set' → logprob: -14.904948234558105
    10. '[n' → logprob: -15.029948234558105

Token 84: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.577521800994873
    2. 'i' → logprob: -1.577521800994873
    3. ' for' → logprob: -2.327521800994873
    4. ' i' → logprob: -2.702521800994873
    5. 'for' → logprob: -2.952521800994873
    6. ' ' → logprob: -4.452521800994873
    7. '	i' → logprob: -6.452521800994873
    8. '  ' → logprob: -7.327521800994873
    9. '	for' → logprob: -7.452521800994873
    10. 'd' → logprob: -7.827521800994873

Token 85: ' for' (ID: 395)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0005375436157919466
    2. 'for' (adapté à ' for') → logprob: -8.125537872314453
    3. ' i' → logprob: -9.125537872314453
    4. ' ' → logprob: -9.125537872314453
    5. '   ' → logprob: -11.125537872314453
    6. 'a' → logprob: -13.000537872314453
    7. 'd' → logprob: -13.375537872314453
    8. ' for' → logprob: -13.375537872314453
    9. '	i' → logprob: -13.500537872314453
    10. 'import' → logprob: -14.375537872314453

Token 86: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16028311848640442
    2. ' i' → logprob: -1.910283088684082
    3. ' ' → logprob: -10.160283088684082
    4. '	i' → logprob: -11.535283088684082
    5. 'd' → logprob: -12.035283088684082
    6. '   ' → logprob: -13.160283088684082
    7. ' d' → logprob: -13.535283088684082
    8. '  ' → logprob: -14.660283088684082
    9. '1' → logprob: -15.410283088684082
    10. ' ' → logprob: -15.535283088684082

Token 87: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007801807019859552
    2. 'in' → logprob: -4.8828020095825195
    3. ' ' → logprob: -9.13280200958252
    4. 'range' → logprob: -10.50780200958252
    5. '1' → logprob: -11.25780200958252
    6. 'n' → logprob: -11.50780200958252
    7. '  ' → logprob: -11.75780200958252
    8. '   ' → logprob: -12.13280200958252
    9. 's' → logprob: -12.63280200958252
    10. 'd' → logprob: -12.63280200958252

Token 88: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0040895589627325535
    2. 'range' → logprob: -5.50408935546875
    3. ' ' → logprob: -12.25408935546875
    4. '	range' → logprob: -12.87908935546875
    5. ' xrange' → logprob: -14.12908935546875
    6. '```' → logprob: -14.37908935546875
    7. '(range' → logprob: -14.62908935546875
    8. ' ran' → logprob: -14.62908935546875
    9. ')' → logprob: -15.25408935546875
    10. ' ra' → logprob: -15.37908935546875

Token 89: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1875571544806007e-05
    2. ' (' → logprob: -11.500011444091797
    3. '1' → logprob: -13.375011444091797
    4. ' ' → logprob: -16.000011444091797
    5. '(
' → logprob: -17.625011444091797
    6. '(int' → logprob: -17.875011444091797
    7. '(n' → logprob: -19.125011444091797
    8. '	' → logprob: -20.625011444091797
    9. ',' → logprob: -21.000011444091797
    10. '((' → logprob: -21.125011444091797

Token 90: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011164079420268536
    2. ' ' → logprob: -4.51116418838501
    3. '(' → logprob: -9.136163711547852
    4. 'int' → logprob: -12.636163711547852
    5. '2' → logprob: -13.636163711547852
    6. '   ' → logprob: -13.761163711547852
    7. 'n' → logprob: -13.886163711547852
    8. '	' → logprob: -14.886163711547852
    9. '  ' → logprob: -15.136163711547852
    10. '
' → logprob: -15.261163711547852

Token 91: ',' (ID: 11)
  Prédit: ' ,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ,' → logprob: -0.5766283273696899
    2. ',' → logprob: -0.8266283273696899
    3. ',int' → logprob: -7.5766282081604
    4. ',n' → logprob: -8.701628684997559
    5. ',i' → logprob: -12.951628684997559
    6. '1' → logprob: -13.076628684997559
    7. ' ' → logprob: -13.326628684997559
    8. ' ,
' → logprob: -13.576628684997559
    9. 'n' → logprob: -14.451628684997559
    10. ',
' → logprob: -14.576628684997559

Token 92: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.18108828365802765
    2. 'int' → logprob: -2.1810882091522217
    3. ' n' → logprob: -3.0560882091522217
    4. 'n' → logprob: -5.181088447570801
    5. ' ' → logprob: -11.1810884475708
    6. '	int' → logprob: -12.3060884475708
    7. ' i' → logprob: -12.8060884475708
    8. '(int' → logprob: -13.1810884475708
    9. ' in' → logprob: -13.8060884475708
    10. '   ' → logprob: -14.8060884475708

Token 93: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0008134396048262715
    2. '(' → logprob: -7.1258134841918945
    3. '(s' → logprob: -12.750813484191895
    4. 'n' → logprob: -13.000813484191895
    5. '((' → logprob: -13.000813484191895
    6. '(pow' → logprob: -13.875813484191895
    7. '(
' → logprob: -15.375813484191895
    8. ' (' → logprob: -16.125812530517578
    9. ' n' → logprob: -16.250812530517578
    10. ')n' → logprob: -16.500812530517578

Token 94: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.005021224729716778
    2. ' **' → logprob: -5.380021095275879
    3. '(' → logprob: -9.005021095275879
    4. '(n' → logprob: -9.130021095275879
    5. ' ' → logprob: -9.880021095275879
    6. ' (' → logprob: -10.130021095275879
    7. '*' → logprob: -10.630021095275879
    8. ')' → logprob: -11.005021095275879
    9. '+' → logprob: -11.380021095275879
    10. ')**' → logprob: -11.505021095275879

Token 95: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015389078762382269
    2. ' ' → logprob: -6.5015387535095215
    3. '(' → logprob: -10.50153923034668
    4. '.' → logprob: -11.62653923034668
    5. ' (' → logprob: -16.87653923034668
    6. '   ' → logprob: -18.37653923034668
    7. ')' → logprob: -19.50153923034668
    8. '{' → logprob: -20.12653923034668
    9. '2' → logprob: -20.37653923034668
    10. ' .' → logprob: -20.62653923034668

Token 96: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3425219549390022e-05
    2. '(' → logprob: -11.87501335144043
    3. '.' → logprob: -12.37501335144043
    4. ' ' → logprob: -13.00001335144043
    5. '{' → logprob: -18.62501335144043
    6. ')' → logprob: -19.00001335144043
    7. '   ' → logprob: -19.37501335144043
    8. '2' → logprob: -20.62501335144043
    9. '  ' → logprob: -21.12501335144043
    10. ' (' → logprob: -21.12501335144043

Token 97: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -2.463036435074173e-05
    2. '0' → logprob: -11.125024795532227
    3. ' .' → logprob: -12.750024795532227
    4. '5' → logprob: -13.125024795532227
    5. ' ' → logprob: -13.500024795532227
    6. '1' → logprob: -14.562524795532227
    7. '```' → logprob: -14.750024795532227
    8. '2' → logprob: -15.187524795532227
    9. '50' → logprob: -15.250024795532227
    10. '   ' → logprob: -15.687524795532227

Token 98: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -5.621933451038785e-05
    2. '.' → logprob: -10.375056266784668
    3. '```' → logprob: -11.375056266784668
    4. '   ' → logprob: -12.875056266784668
    5. '``' → logprob: -13.625056266784668
    6. '`' → logprob: -13.937556266784668
    7. ' ' → logprob: -14.000056266784668
    8. '0' → logprob: -14.812556266784668
    9. '6' → logprob: -14.937556266784668
    10. 'cin' → logprob: -14.937556266784668

Token 99: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35452476143836975
    2. ')+' → logprob: -1.8545247316360474
    3. '()' → logprob: -2.229524850845337
    4. '()+' → logprob: -3.729524850845337
    5. ' )' → logprob: -5.854524612426758
    6. '(' → logprob: -6.104524612426758
    7. '+' → logprob: -6.229524612426758
    8. '())' → logprob: -6.729524612426758
    9. ' +' → logprob: -7.229524612426758
    10. '2' → logprob: -7.479524612426758

Token 100: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8340283036231995
    2. ' +' → logprob: -1.4590282440185547
    3. '()+' → logprob: -2.0840282440185547
    4. '()' → logprob: -2.2090282440185547
    5. ')+' → logprob: -3.0840282440185547
    6. ')' → logprob: -3.7090282440185547
    7. '(' → logprob: -4.209028244018555
    8. ' ' → logprob: -4.709028244018555
    9. '(n' → logprob: -5.709028244018555
    10. ' ()' → logprob: -7.584028244018555

Token 101: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016034837812185287
    2. ' ' → logprob: -4.1410346031188965
    3. '   ' → logprob: -15.641035079956055
    4. '  ' → logprob: -15.766035079956055
    5. '```' → logprob: -16.266035079956055
    6. '2' → logprob: -16.766035079956055
    7. '(' → logprob: -16.891035079956055
    8. ' ' → logprob: -17.516035079956055
    9. '+' → logprob: -18.078535079956055
    10. '    ' → logprob: -18.453535079956055

Token 102: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7120533811976202e-05
    2. ' ' → logprob: -11.000017166137695
    3. '(' → logprob: -15.125017166137695
    4. '2' → logprob: -15.750017166137695
    5. '   ' → logprob: -18.125017166137695
    6. '```' → logprob: -18.750017166137695
    7. '  ' → logprob: -19.875017166137695
    8. ' (' → logprob: -20.000017166137695
    9. '{' → logprob: -21.000017166137695
    10. '１' → logprob: -21.062517166137695

Token 103: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.024976396933197975
    2. '):
' → logprob: -4.1499762535095215
    3. ' ):' → logprob: -5.1499762535095215
    4. ':' → logprob: -6.1499762535095215
    5. ')' → logprob: -7.3999762535095215
    6. ' ):
' → logprob: -8.77497673034668
    7. '   ' → logprob: -9.64997673034668
    8. '):
' → logprob: -9.89997673034668
    9. ' :' → logprob: -10.64997673034668
    10. '       ' → logprob: -11.39997673034668

Token 104: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.028229784220457077
    2. ' :' → logprob: -3.6532297134399414
    3. ' :
' → logprob: -7.028229713439941
    4. ':
' → logprob: -7.028229713439941
    5. ' ' → logprob: -9.403229713439941
    6. '):' → logprob: -10.028229713439941
    7. '   ' → logprob: -11.903229713439941
    8. ' if' → logprob: -12.153229713439941
    9. '       ' → logprob: -12.903229713439941
    10. ' :
' → logprob: -13.153229713439941

Token 105: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7700899243354797
    2. ' ' → logprob: -1.395089864730835
    3. 'if' (adapté à ' if') → logprob: -2.020089864730835
    4. '       ' → logprob: -2.145089864730835
    5. '   ' → logprob: -4.395090103149414
    6. ':' → logprob: -4.520090103149414
    7. '<|end|>' → logprob: -4.895090103149414
    8. ':
' → logprob: -6.270090103149414
    9. '           ' → logprob: -6.395090103149414
    10. ' :' → logprob: -7.020090103149414

Token 106: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.04859304800629616
    2. 'n' → logprob: -3.048593044281006
    3. '(n' → logprob: -12.673593521118164
    4. '	n' → logprob: -13.298593521118164
    5. ' (' → logprob: -14.923593521118164
    6. ' ' → logprob: -15.673593521118164
    7. ' ' → logprob: -15.923593521118164
    8. ' not' → logprob: -16.423593521118164
    9. '   ' → logprob: -17.923593521118164
    10. '(' → logprob: -18.673593521118164

Token 107: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.07970171421766281
    2. '%' → logprob: -2.5797016620635986
    3. ' ' → logprob: -7.704701900482178
    4. '%i' → logprob: -7.954701900482178
    5. ' ' → logprob: -11.82970142364502
    6. '%e' → logprob: -14.20470142364502
    7. '%n' → logprob: -14.57970142364502
    8. '%x' → logprob: -15.07970142364502
    9. '%s' → logprob: -15.70470142364502
    10. '%d' → logprob: -15.70470142364502

Token 108: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.014164102263748646
    2. ' i' → logprob: -4.264163970947266
    3. '	i' → logprob: -15.014163970947266
    4. ' ' → logprob: -15.514163970947266
    5. '   ' → logprob: -16.514163970947266
    6. '  ' → logprob: -18.264163970947266
    7. '*i' → logprob: -18.389163970947266
    8. '<|end|>' → logprob: -18.639163970947266
    9. '=i' → logprob: -18.764163970947266
    10. '%i' → logprob: -19.514163970947266

Token 109: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.576066792011261
    2. ' ==' → logprob: -0.826066792011261
    3. '=' → logprob: -9.201066970825195
    4. ' =' → logprob: -11.576066970825195
    5. '0' → logprob: -11.951066970825195
    6. '===' → logprob: -12.451066970825195
    7. ' ' → logprob: -12.951066970825195
    8. ')==' → logprob: -13.201066970825195
    9. '()==' → logprob: -14.076066970825195
    10. ')' → logprob: -14.326066970825195

Token 110: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01814994215965271
    2. ' ' → logprob: -4.0181498527526855
    3. '  ' → logprob: -18.768150329589844
    4. '۰' → logprob: -19.393150329589844
    5. '   ' → logprob: -19.768150329589844
    6. ' ' → logprob: -19.893150329589844
    7. '    ' → logprob: -20.580650329589844
    8. '00' → logprob: -21.330650329589844
    9. ' ' → logprob: -21.830650329589844
    10. '	' → logprob: -21.955650329589844

Token 111: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004879915213678032
    2. ' ' → logprob: -7.625487804412842
    3. '۰' → logprob: -18.62548828125
    4. '  ' → logprob: -19.68798828125
    5. '   ' → logprob: -20.00048828125
    6. '٠' → logprob: -20.25048828125
    7. ' ' → logprob: -20.43798828125
    8. '０' → logprob: -20.68798828125
    9. '
' → logprob: -20.87548828125
    10. '	' → logprob: -21.06298828125

Token 112: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023345522582530975
    2. ':
' → logprob: -3.773345470428467
    3. ':
' → logprob: -10.648345947265625
    4. ' :' → logprob: -10.648345947265625
    5. '):' → logprob: -10.648345947265625
    6. '):
' → logprob: -10.898345947265625
    7. ' :
' → logprob: -12.148345947265625
    8. ':list' → logprob: -13.273345947265625
    9. ')' → logprob: -13.398345947265625
    10. ':

' → logprob: -14.773345947265625

Token 113: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24984009563922882
    2. '           ' → logprob: -1.6248401403427124
    3. ':
' → logprob: -4.749840259552002
    4. ':' → logprob: -4.999840259552002
    5. 'lst' → logprob: -6.374840259552002
    6. ' lst' → logprob: -6.624840259552002
    7. '   ' → logprob: -6.749840259552002
    8. ' :' → logprob: -7.374840259552002
    9. '	   ' → logprob: -7.624840259552002
    10. ',' → logprob: -7.624840259552002

Token 114: ' lst' (ID: 33384)
  Prédit: ' lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lst' → logprob: -0.6940111517906189
    2. 'lst' (adapté à ' lst') → logprob: -0.6940111517906189
    3. '       ' → logprob: -7.444011211395264
    4. '           ' → logprob: -8.819010734558105
    5. '
' → logprob: -9.694010734558105
    6. '   ' → logprob: -10.444010734558105
    7. 'if' → logprob: -11.944010734558105
    8. '_lst' → logprob: -12.069010734558105
    9. ' ' → logprob: -12.194010734558105
    10. '(lst' → logprob: -12.319010734558105

Token 115: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0031922089401632547
    2. '.' → logprob: -5.75319242477417
    3. '.extend' → logprob: -11.878191947937012
    4. '.app' → logprob: -12.503191947937012
    5. '.ap' → logprob: -12.878191947937012
    6. ' .' → logprob: -13.628191947937012
    7. 'append' → logprob: -16.753192901611328
    8. '.a' → logprob: -17.753192901611328
    9. '.Append' → logprob: -19.128192901611328
    10. ' append' → logprob: -19.128192901611328

Token 116: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -3.5716304410016164e-05
    2. '(' → logprob: -10.250035285949707
    3. ' (' → logprob: -16.375036239624023
    4. '(
' → logprob: -16.375036239624023
    5. ' i' → logprob: -17.000036239624023
    6. 'i' → logprob: -17.875036239624023
    7. '(I' → logprob: -19.375036239624023
    8. ')' → logprob: -20.250036239624023
    9. '(

' → logprob: -20.375036239624023
    10. '	i' → logprob: -20.500036239624023

Token 117: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5762777924537659
    2. ')' → logprob: -0.8262777924537659
    3. ')
' → logprob: -8.076277732849121
    4. '       ' → logprob: -11.576277732849121
    5. '           ' → logprob: -12.201277732849121
    6. ' )
' → logprob: -12.326277732849121
    7. ')

' → logprob: -13.076277732849121
    8. ')`
' → logprob: -13.326277732849121
    9. ' )' → logprob: -13.701277732849121
    10. '   ' → logprob: -14.076277732849121

Token 118: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.4285862057004124e-05
    2. 'if' → logprob: -10.87503433227539
    3. '       ' → logprob: -11.50003433227539
    4. '            
' → logprob: -13.37503433227539
    5. ' if' → logprob: -13.37503433227539
    6. 'lst' → logprob: -14.00003433227539
    7. '```' → logprob: -14.25003433227539
    8. '
' → logprob: -15.75003433227539
    9. '          ' → logprob: -15.87503433227539
    10. '   ' → logprob: -16.37503433227539

Token 119: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.000556843588128686
    2. ' if' → logprob: -7.500556945800781
    3. '           ' → logprob: -12.500556945800781
    4. '            
' → logprob: -16.25055694580078
    5. '
' → logprob: -17.50055694580078
    6. '```' → logprob: -18.00055694580078
    7. 'If' → logprob: -18.87555694580078
    8. '	if' → logprob: -18.87555694580078
    9. 'lst' → logprob: -19.12555694580078
    10. '       ' → logprob: -19.25055694580078

Token 120: ' attention' (ID: 8684)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5760793089866638
    2. ' if' → logprob: -0.8260793089866638
    3. '           ' → logprob: -8.951079368591309
    4. '
' → logprob: -12.076079368591309
    5. ' ' → logprob: -13.826079368591309
    6. '            ' → logprob: -13.826079368591309
    7. '            
' → logprob: -14.076079368591309
    8. '```' → logprob: -14.201079368591309
    9. ' 
' → logprob: -15.576079368591309
    10. '``' → logprob: -15.576079368591309

Token 121: ' au' (ID: 2791)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.31328514218330383
    2. ' if' → logprob: -1.3132851123809814
    3. '
' → logprob: -11.563284873962402
    4. '           ' → logprob: -12.438284873962402
    5. ' 
' → logprob: -12.688284873962402
    6. ' ' → logprob: -12.813284873962402
    7. '```' → logprob: -13.563284873962402
    8. '            
' → logprob: -13.688284873962402
    9. ',' → logprob: -14.938284873962402
    10. ' ' → logprob: -15.563284873962402

Token 122: ' carré' (ID: 191546)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8408937454223633
    2. 'if' → logprob: -1.2158937454223633
    3. ' i' → logprob: -1.5908937454223633
    4. 'i' → logprob: -2.7158937454223633
    5. ' /' → logprob: -7.090893745422363
    6. ' ' → logprob: -7.715893745422363
    7. '/i' → logprob: -8.465893745422363
    8. 'n' → logprob: -8.965893745422363
    9. 'div' → logprob: -9.090893745422363
    10. ' n' → logprob: -9.090893745422363

Token 123: ' parfait' (ID: 39268)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0196705162525177
    2. 'if' → logprob: -4.019670486450195
    3. ' ' → logprob: -6.519670486450195
    4. ' ,' → logprob: -11.394670486450195
    5. ',' → logprob: -11.644670486450195
    6. '<|end|>' → logprob: -12.144670486450195
    7. '```' → logprob: -12.394670486450195
    8. ' ' → logprob: -12.894670486450195
    9. 'If' → logprob: -13.269670486450195
    10. '           ' → logprob: -13.394670486450195

Token 124: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.35426396131515503
    2. ' if' → logprob: -1.2292640209197998
    3. '           ' → logprob: -5.229263782501221
    4. '       ' → logprob: -7.979263782501221
    5. '   ' → logprob: -10.354264259338379
    6. ' ' → logprob: -10.854264259338379
    7. '	if' → logprob: -11.354264259338379
    8. '```' → logprob: -11.354264259338379
    9. '<|end|>' → logprob: -12.479264259338379
    10. '    ' → logprob: -12.729264259338379

Token 125: '           ' (ID: 352)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.49520930647850037
    2. ' if' → logprob: -0.9952093362808228
    3. '           ' → logprob: -3.870209217071533
    4. '            
' → logprob: -11.120209693908691
    5. '```' → logprob: -11.370209693908691
    6. ',' → logprob: -11.620209693908691
    7. '       ' → logprob: -11.870209693908691
    8. ' ' → logprob: -12.745209693908691
    9. '
' → logprob: -12.745209693908691
    10. '               ' → logprob: -13.745209693908691

Token 126: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.07898925989866257
    2. ' if' → logprob: -2.578989267349243
    3. '           ' → logprob: -9.453989028930664
    4. '            
' → logprob: -11.578989028930664
    5. '
' → logprob: -11.828989028930664
    6. '```' → logprob: -12.828989028930664
    7. '``' → logprob: -14.078989028930664
    8. ' 
' → logprob: -15.078989028930664
    9. '
' → logprob: -15.828989028930664
    10. 'd' → logprob: -16.078989028930664

Token 127: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.38720011711120605
    2. 'i' → logprob: -1.137200117111206
    3. '(i' → logprob: -9.137200355529785
    4. ' n' → logprob: -9.387200355529785
    5. 'n' → logprob: -9.512200355529785
    6. ' (' → logprob: -10.137200355529785
    7. '	i' → logprob: -11.387200355529785
    8. ' ' → logprob: -12.387200355529785
    9. '   ' → logprob: -12.512200355529785
    10. ' ' → logprob: -13.762200355529785

Token 128: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.04309739172458649
    2. ' !=' → logprob: -3.168097496032715
    3. '*' → logprob: -10.543097496032715
    4. ']!=' → logprob: -10.793097496032715
    5. '!==' → logprob: -11.043097496032715
    6. '*i' → logprob: -11.043097496032715
    7. ')!=' → logprob: -11.793097496032715
    8. '()!=' → logprob: -12.168097496032715
    9. '!=(' → logprob: -12.918097496032715
    10. '**' → logprob: -14.043097496032715

Token 129: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.17975687980651855
    2. 'n' → logprob: -1.8047568798065186
    3. '(n' → logprob: -12.304757118225098
    4. '	n' → logprob: -12.554757118225098
    5. ' ' → logprob: -12.929757118225098
    6. ' (' → logprob: -14.679757118225098
    7. '1' → logprob: -14.804757118225098
    8. ' ' → logprob: -15.054757118225098
    9. '```' → logprob: -15.804757118225098
    10. '    ' → logprob: -16.17975616455078

Token 130: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.20228087902069092
    2. ' //' → logprob: -1.702280879020691
    3. ' ' → logprob: -7.3272809982299805
    4. ' ' → logprob: -8.70228099822998
    5. '/' → logprob: -10.95228099822998
    6. '#' → logprob: -11.70228099822998
    7. '/i' → logprob: -12.70228099822998
    8. '//=' → logprob: -12.95228099822998
    9. '```' → logprob: -13.20228099822998
    10. ' /' → logprob: -13.32728099822998

Token 131: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005234713666141033
    2. ' i' → logprob: -5.255234718322754
    3. '   ' → logprob: -14.880234718322754
    4. '	i' → logprob: -15.005234718322754
    5. ' ' → logprob: -15.255234718322754
    6. '  ' → logprob: -16.755233764648438
    7. '```' → logprob: -17.880233764648438
    8. '    ' → logprob: -19.380233764648438
    9. '[i' → logprob: -19.505233764648438
    10. '       ' → logprob: -19.755233764648438

Token 132: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12796548008918762
    2. ':
' → logprob: -2.1279654502868652
    3. '):
' → logprob: -7.752965450286865
    4. ' and' → logprob: -8.252965927124023
    5. '):' → logprob: -8.752965927124023
    6. ' :' → logprob: -10.002965927124023
    7. ')' → logprob: -10.252965927124023
    8. ' :
' → logprob: -10.252965927124023
    9. ':
' → logprob: -11.002965927124023
    10. 'and' → logprob: -11.127965927124023

Token 133: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.014878070913255215
    2. ' lst' → logprob: -4.889878273010254
    3. 'lst' → logprob: -5.014878273010254
    4. '           ' → logprob: -7.889878273010254
    5. '                
' → logprob: -9.764878273010254
    6. '	           ' → logprob: -10.389878273010254
    7. ' ' → logprob: -10.389878273010254
    8. ',' → logprob: -10.514878273010254
    9. '(lst' → logprob: -11.139878273010254
    10. '.lst' → logprob: -11.389878273010254

Token 134: ' lst' (ID: 33384)
  Prédit: ' lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lst' → logprob: -0.014244012534618378
    2. 'lst' (adapté à ' lst') → logprob: -4.389244079589844
    3. '               ' → logprob: -6.389244079589844
    4. '                   ' → logprob: -11.389244079589844
    5. '           ' → logprob: -11.514244079589844
    6. '                ' → logprob: -11.639244079589844
    7. '            ' → logprob: -12.139244079589844
    8. '_lst' → logprob: -12.264244079589844
    9. '.lst' → logprob: -12.764244079589844
    10. '```' → logprob: -13.014244079589844

Token 135: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0006304710987024009
    2. '.' → logprob: -7.3756303787231445
    3. 'append' → logprob: -13.250630378723145
    4. '.extend' → logprob: -14.000630378723145
    5. '.app' → logprob: -14.125630378723145
    6. ' .' → logprob: -15.375630378723145
    7. '.Append' → logprob: -16.00063133239746
    8. '.setdefault' → logprob: -16.87563133239746
    9. '].' → logprob: -17.12563133239746
    10. ').' → logprob: -17.25063133239746

Token 136: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -7.505351095460355e-05
    2. '(' → logprob: -9.500075340270996
    3. '(
' → logprob: -15.875075340270996
    4. 'n' → logprob: -17.75007438659668
    5. '((' → logprob: -18.00007438659668
    6. ' (' → logprob: -20.25007438659668
    7. '(

' → logprob: -20.25007438659668
    8. '(
' → logprob: -21.37507438659668
    9. '()' → logprob: -22.12507438659668
    10. '(i' → logprob: -22.25007438659668

Token 137: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.20149052143096924
    2. '//' → logprob: -1.7014905214309692
    3. ' ' → logprob: -9.57649040222168
    4. ')' → logprob: -12.95149040222168
    5. ' ' → logprob: -13.07649040222168
    6. '%' → logprob: -14.07649040222168
    7. '#' → logprob: -14.45149040222168
    8. '/' → logprob: -15.20149040222168
    9. ' /' → logprob: -15.20149040222168
    10. '[n' → logprob: -15.57649040222168

Token 138: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0021855919621884823
    2. ' i' → logprob: -6.127185821533203
    3. '	i' → logprob: -15.002185821533203
    4. ' ' → logprob: -15.877185821533203
    5. '   ' → logprob: -16.627185821533203
    6. '_i' → logprob: -17.377185821533203
    7. '  ' → logprob: -18.127185821533203
    8. '```' → logprob: -18.627185821533203
    9. ')i' → logprob: -18.627185821533203
    10. '(i' → logprob: -18.877185821533203

Token 139: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.468279752880335e-05
    2. ')
' → logprob: -9.875064849853516
    3. ' )' → logprob: -11.375064849853516
    4. '())' → logprob: -14.250064849853516
    5. ')return' → logprob: -16.000064849853516
    6. '))' → logprob: -16.125064849853516
    7. ')i' → logprob: -16.250064849853516
    8. ')

' → logprob: -16.250064849853516
    9. ')
' → logprob: -16.375064849853516
    10. ')n' → logprob: -16.500064849853516

Token 140: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025661452673375607
    2. 'return' → logprob: -6.627566337585449
    3. ' return' → logprob: -6.877566337585449
    4. ' ' → logprob: -9.25256633758545
    5. '
' → logprob: -10.00256633758545
    6. '	return' → logprob: -10.75256633758545
    7. '    
' → logprob: -11.00256633758545
    8. ':return' → logprob: -12.12756633758545
    9. ',' → logprob: -12.37756633758545
    10. ')' → logprob: -12.37756633758545

Token 141: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3491162359714508
    2. ' return' → logprob: -1.8491162061691284
    3. '   ' → logprob: -2.224116325378418
    4. 'lst' → logprob: -3.849116325378418
    5. ' ' → logprob: -5.349116325378418
    6. '	return' → logprob: -6.724116325378418
    7. '    
' → logprob: -7.224116325378418
    8. ' lst' → logprob: -7.724116325378418
    9. ')' → logprob: -8.599116325378418
    10. '
' → logprob: -8.849116325378418

Token 142: ' Je' (ID: 4678)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1310720592737198
    2. 'lst' → logprob: -2.6310720443725586
    3. ' return' → logprob: -3.0060720443725586
    4. ' lst' → logprob: -6.631072044372559
    5. 'ret' → logprob: -11.506072044372559
    6. 'Return' → logprob: -12.381072044372559
    7. 'sorted' → logprob: -12.631072044372559
    8. '```' → logprob: -13.006072044372559
    9. ' ' → logprob: -13.131072044372559
    10. 'eturn' → logprob: -13.256072044372559

Token 143: ' veux' (ID: 55673)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.46875980496406555
    2. ' return' → logprob: -1.0937597751617432
    3. '.sort' → logprob: -3.968759775161743
    4. 'lst' → logprob: -4.343760013580322
    5. 's' → logprob: -5.593760013580322
    6. ' lst' → logprob: -7.093760013580322
    7. 'sort' → logprob: -7.343760013580322
    8. 'eturn' → logprob: -7.593760013580322
    9. ':return' → logprob: -8.218759536743164
    10. 'st' → logprob: -8.593759536743164

Token 144: ' les' (ID: 1341)
  Prédit: ' lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lst' → logprob: -0.7412728071212769
    2. 'lst' → logprob: -1.2412728071212769
    3. ' sorted' → logprob: -1.6162728071212769
    4. 'sorted' → logprob: -3.3662729263305664
    5. ' return' → logprob: -7.491272926330566
    6. ' ' → logprob: -7.866272926330566
    7. ' les' → logprob: -9.116272926330566
    8. 'return' → logprob: -9.241272926330566
    9. ' tri' → logprob: -9.991272926330566
    10. ' la' → logprob: -10.241272926330566

Token 145: ' plus' (ID: 2932)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.0027436506934463978
    2. ' lst' → logprob: -6.502743721008301
    3. 'sorted' → logprob: -6.752743721008301
    4. 'liste' → logprob: -10.8777437210083
    5. 'tri' → logprob: -11.2527437210083
    6. ' sorted' → logprob: -11.3777437210083
    7. 'lis' → logprob: -12.1277437210083
    8. 'l' → logprob: -12.5027437210083
    9. 'tr' → logprob: -12.6277437210083
    10. '.lst' → logprob: -12.7527437210083

Token 146: ' grands' (ID: 43085)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.7769472002983093
    2. 'sorted' → logprob: -1.776947259902954
    3. 'tr' → logprob: -2.151947259902954
    4. ' sorted' → logprob: -2.901947259902954
    5. ' petits' → logprob: -3.026947259902954
    6. 'pro' → logprob: -3.276947259902954
    7. 'tri' → logprob: -3.401947259902954
    8. 'gr' → logprob: -4.401947021484375
    9. ' pet' → logprob: -4.401947021484375
    10. '_sorted' → logprob: -4.776947021484375

Token 147: ' d' (ID: 272)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.0759650394320488
    2. ' lst' → logprob: -2.70096492767334
    3. '   ' → logprob: -5.82596492767334
    4. 'return' → logprob: -6.82596492767334
    5. ' return' → logprob: -7.32596492767334
    6. '
' → logprob: -7.57596492767334
    7. ' 
' → logprob: -8.45096492767334
    8. '(lst' → logprob: -8.45096492767334
    9. '    
' → logprob: -8.95096492767334
    10. '_lst' → logprob: -9.57596492767334

Token 148: ''abord' (ID: 89989)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.9975444674491882
    2. 'ans' → logprob: -0.9975444674491882
    3. 'sorted' → logprob: -1.872544527053833
    4. 'es' → logprob: -3.497544527053833
    5. 'eux' → logprob: -3.497544527053833
    6. 'ec' → logprob: -4.247544288635254
    7. 'esc' → logprob: -5.372544288635254
    8. 'éc' → logprob: -5.497544288635254
    9. 'descending' → logprob: -5.497544288635254
    10. 'lst' → logprob: -5.497544288635254

Token 149: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.402476042509079
    2. '
' → logprob: -1.4024760723114014
    3. 'lst' → logprob: -2.6524760723114014
    4. '    
' → logprob: -5.152475833892822
    5. '<|end|>' → logprob: -5.777475833892822
    6. ' lst' → logprob: -6.402475833892822
    7. ' ' → logprob: -7.152475833892822
    8. ' 
' → logprob: -7.152475833892822
    9. '  
' → logprob: -7.277475833892822
    10. '(lst' → logprob: -7.652475833892822

Token 150: ' c' (ID: 274)
  Prédit: ' lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lst' → logprob: -0.6935581564903259
    2. 'lst' → logprob: -0.6935581564903259
    3. ' return' → logprob: -8.193557739257812
    4. 'return' → logprob: -9.068557739257812
    5. ' ' → logprob: -12.318557739257812
    6. '_lst' → logprob: -12.318557739257812
    7. '(lst' → logprob: -12.693557739257812
    8. '.lst' → logprob: -12.818557739257812
    9. ' 
' → logprob: -13.318557739257812
    10. '   ' → logprob: -14.193557739257812

Token 151: ''est' (ID: 6616)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.9741790890693665
    2. 'ont' → logprob: -1.2241790294647217
    3. 'sorted' → logprob: -2.3491790294647217
    4. ''est' → logprob: -3.2241790294647217
    5. 'e' → logprob: -3.3491790294647217
    6. 'omme' → logprob: -3.4741790294647217
    7. 'a' → logprob: -3.4741790294647217
    8. 'ar' → logprob: -3.5991790294647217
    9. 'es' → logprob: -4.474179267883301
    10. ' sorted' → logprob: -5.099179267883301

Token 152: ' utile' (ID: 68237)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.23618796467781067
    2. 'lst' → logprob: -1.8611879348754883
    3. ' sorted' → logprob: -2.9861879348754883
    4. ' lst' → logprob: -5.611187934875488
    5. 'tri' → logprob: -8.361187934875488
    6. ' ' → logprob: -8.861187934875488
    7. ' tri' → logprob: -9.861187934875488
    8. '   ' → logprob: -10.236187934875488
    9. 'tr' → logprob: -10.236187934875488
    10. 'list' → logprob: -10.361187934875488

Token 153: ' ensuite' (ID: 39713)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7221177816390991
    2. 'lst' → logprob: -1.8471177816390991
    3. '    
' → logprob: -1.9721177816390991
    4. '   ' → logprob: -2.0971179008483887
    5. ' 
' → logprob: -3.3471179008483887
    6. '  
' → logprob: -4.222117900848389
    7. '   
' → logprob: -4.597117900848389
    8. ' lst' → logprob: -4.597117900848389
    9. ' ' → logprob: -5.097117900848389
    10. 'return' → logprob: -5.722117900848389

Token 154: '
' (ID: 198)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.22194121778011322
    2. '
' → logprob: -2.0969412326812744
    3. '   ' → logprob: -2.9719412326812744
    4. ' lst' → logprob: -4.096940994262695
    5. '    
' → logprob: -5.596940994262695
    6. 'return' → logprob: -6.221940994262695
    7. ' 
' → logprob: -6.721940994262695
    8. ' return' → logprob: -8.346940994262695
    9. '(lst' → logprob: -8.471940994262695
    10. '  
' → logprob: -8.596940994262695

Token 155: '   ' (ID: 271)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.12012891471385956
    2. '   ' → logprob: -2.370128870010376
    3. ' lst' → logprob: -4.495129108428955
    4. '    
' → logprob: -5.745129108428955
    5. '
' → logprob: -5.870129108428955
    6. 'return' → logprob: -6.370129108428955
    7. ' return' → logprob: -7.870129108428955
    8. ' 
' → logprob: -9.120128631591797
    9. ' ' → logprob: -9.495128631591797
    10. '(lst' → logprob: -9.870128631591797

Token 156: ' lst' (ID: 33384)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' (adapté à ' lst') → logprob: -0.0015230757417157292
    2. 'return' → logprob: -6.751523017883301
    3. ' lst' → logprob: -8.0015230178833
    4. ' return' → logprob: -11.5015230178833
    5. '
' → logprob: -12.6265230178833
    6. '   ' → logprob: -14.0015230178833
    7. '    
' → logprob: -14.1265230178833
    8. '_lst' → logprob: -14.2515230178833
    9. ' 
' → logprob: -14.6265230178833
    10. 'ls' → logprob: -14.7515230178833

Token 157: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.0024875495582818985
    2. '.' → logprob: -6.002487659454346
    3. 'sort' → logprob: -11.502487182617188
    4. '=' → logprob: -14.752487182617188
    5. ' .' → logprob: -14.877487182617188
    6. ' sort' → logprob: -15.127487182617188
    7. '.reverse' → logprob: -15.127487182617188
    8. '.Sort' → logprob: -15.502487182617188
    9. '.=' → logprob: -16.252487182617188
    10. '	sort' → logprob: -16.502487182617188

Token 158: '(reverse' (ID: 110806)
  Prédit: '(reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(reverse' → logprob: -5.1093578804284334e-05
    2. 'reverse' → logprob: -10.000051498413086
    3. '(' → logprob: -12.125051498413086
    4. '(key' → logprob: -16.000051498413086
    5. '()' → logprob: -16.375051498413086
    6. ' reverse' → logprob: -17.000051498413086
    7. '_reverse' → logprob: -17.125051498413086
    8. '.reverse' → logprob: -17.125051498413086
    9. 'Reverse' → logprob: -17.875051498413086
    10. '(re' → logprob: -18.375051498413086

Token 159: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.01334315538406372
    2. '())' → logprob: -4.513343334197998
    3. '()' → logprob: -6.888343334197998
    4. '(True' → logprob: -7.513343334197998
    5. ')' → logprob: -7.638343334197998
    6. '=' → logprob: -8.38834285736084
    7. '=False' → logprob: -12.13834285736084
    8. '(' → logprob: -12.26334285736084
    9. '(),' → logprob: -13.13834285736084
    10. ')=' → logprob: -13.51334285736084

Token 160: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07893473654985428
    2. ')
' → logprob: -2.578934669494629
    3. ')return' → logprob: -10.328934669494629
    4. ')
' → logprob: -11.453934669494629
    5. ')

' → logprob: -14.578934669494629
    6. ' )' → logprob: -14.828934669494629
    7. 'return' → logprob: -14.828934669494629
    8. '   ' → logprob: -15.828934669494629
    9. ' )
' → logprob: -15.828934669494629
    10. '))' → logprob: -17.078935623168945

Token 161: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30345016717910767
    2. 'return' → logprob: -1.803450107574463
    3. ' return' → logprob: -3.178450107574463
    4. '
' → logprob: -3.178450107574463
    5. '	return' → logprob: -5.428450107574463
    6. ')' → logprob: -5.928450107574463
    7. '<|end|>' → logprob: -5.928450107574463
    8. '    
' → logprob: -6.303450107574463
    9. ':return' → logprob: -7.303450107574463
    10. ' ' → logprob: -8.053450584411621

Token 162: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03162921592593193
    2. ' return' → logprob: -3.5316293239593506
    3. '   ' → logprob: -6.2816290855407715
    4. '	return' → logprob: -12.40662956237793
    5. ':return' → logprob: -13.40662956237793
    6. ' ' → logprob: -14.40662956237793
    7. '_return' → logprob: -16.28162956237793
    8. 'eturn' → logprob: -16.78162956237793
    9. ')return' → logprob: -17.03162956237793
    10. '
' → logprob: -17.03162956237793

Token 163: ' lst' (ID: 33384)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -9.639096970204264e-05
    2. ' lst' → logprob: -9.500096321105957
    3. '(lst' → logprob: -10.750096321105957
    4. 'list' → logprob: -17.375097274780273
    5. 'l' → logprob: -18.125097274780273
    6. 'ls' → logprob: -18.750097274780273
    7. '_lst' → logprob: -19.875097274780273
    8. '.lst' → logprob: -20.625097274780273
    9. 'Lst' → logprob: -21.250097274780273
    10. 'lis' → logprob: -22.375097274780273

Token 164: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 165: 'D' (ID: 35)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7836480736732483
    2. 'k' → logprob: -1.4086480140686035
    3. 'for' → logprob: -2.0336480140686035
    4. 'p' → logprob: -2.7836480140686035
    5. 'div' → logprob: -3.4086480140686035
    6. 'l' → logprob: -3.6586480140686035
    7. 'm' → logprob: -4.9086480140686035
    8. '#' → logprob: -5.0336480140686035
    9. 'def' → logprob: -5.0336480140686035
    10. 'ans' → logprob: -5.0336480140686035

Token 166: ' =' (ID: 314)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.25825899839401245
    2. 'ef' → logprob: -1.5082590579986572
    3. 'iv' → logprob: -5.508258819580078
    4. 'i' → logprob: -7.008258819580078
    5. '#' → logprob: -7.758258819580078
    6. 'f' → logprob: -8.008258819580078
    7. 'efs' → logprob: -8.633258819580078
    8. '=' → logprob: -9.508258819580078
    9. 'éf' → logprob: -9.883258819580078
    10. 'efi' → logprob: -9.883258819580078

Token 167: ' make' (ID: 1520)
  Prédit: 'make'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'make' → logprob: -0.22567035257816315
    2. ' make' → logprob: -1.600670337677002
    3. ' n' → logprob: -9.10067081451416
    4. '(make' → logprob: -9.47567081451416
    5. 'n' → logprob: -9.97567081451416
    6. '	make' → logprob: -11.97567081451416
    7. 'mod' → logprob: -12.85067081451416
    8. 'len' → logprob: -12.85067081451416
    9. ' len' → logprob: -12.97567081451416
    10. ' ' → logprob: -12.97567081451416

Token 168: '_div' (ID: 36926)
  Prédit: '_div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -0.00012368128227535635
    2. 'div' → logprob: -9.000123977661133
    3. 'Div' → logprob: -16.500123977661133
    4. '(div' → logprob: -16.875123977661133
    5. '_d' → logprob: -17.625123977661133
    6. '_dis' → logprob: -17.875123977661133
    7. ' divis' → logprob: -18.000123977661133
    8. '<div' → logprob: -18.000123977661133
    9. '_mod' → logprob: -18.250123977661133
    10. '_def' → logprob: -18.750123977661133

Token 169: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.00019173922191839665
    2. 's' → logprob: -9.000191688537598
    3. 'div' → logprob: -11.375191688537598
    4. 'tors' → logprob: -11.375191688537598
    5. 'ors' → logprob: -12.000191688537598
    6. ' divis' → logprob: -12.500191688537598
    7. '[' → logprob: -12.875191688537598
    8. '(' → logprob: -12.875191688537598
    9. 'itors' → logprob: -13.125191688537598
    10. 'n' → logprob: -13.250191688537598

Token 170: 'ors' (ID: 914)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4036867022514343
    2. 'ors' → logprob: -1.528686761856079
    3. 'tors' → logprob: -2.278686761856079
    4. 'rs' → logprob: -5.0286865234375
    5. 'rors' → logprob: -6.2786865234375
    6. 'se' → logprob: -6.6536865234375
    7. 'ators' → logprob: -7.6536865234375
    8. 'eurs' → logprob: -8.0286865234375
    9. 'sers' → logprob: -8.0286865234375
    10. 'teurs' → logprob: -8.2786865234375

Token 171: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0006575119914487004
    2. '(' → logprob: -7.375657558441162
    3. '(len' → logprob: -11.250657081604004
    4. '((' → logprob: -12.250657081604004
    5. '(x' → logprob: -12.500657081604004
    6. '(s' → logprob: -12.750657081604004
    7. '(
' → logprob: -13.250657081604004
    8. 'n' → logprob: -13.750657081604004
    9. '(mod' → logprob: -14.000657081604004
    10. ' (' → logprob: -14.000657081604004

Token 172: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011846343986690044
    2. '())' → logprob: -7.376184463500977
    3. '()' → logprob: -7.501184463500977
    4. ')
' → logprob: -13.376184463500977
    5. ' )' → logprob: -13.501184463500977
    6. '))' → logprob: -13.751184463500977
    7. '(' → logprob: -13.876184463500977
    8. ')`' → logprob: -15.001184463500977
    9. ')

' → logprob: -16.751184463500977
    10. ')}' → logprob: -17.501184463500977

Token 173: 'CT' (ID: 1895)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00356692704372108
    2. 'ans' → logprob: -6.878566741943359
    3. 'res' → logprob: -7.128566741943359
    4. ' for' → logprob: -7.503566741943359
    5. 'answer' → logprob: -8.87856674194336
    6. 'result' → logprob: -8.87856674194336
    7. '#' → logprob: -8.87856674194336
    8. 'p' → logprob: -9.25356674194336
    9. 'cnt' → logprob: -9.50356674194336
    10. 'def' → logprob: -9.62856674194336

Token 174: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18328379094600677
    2. ' =' → logprob: -1.808283805847168
    3. 'F' → logprob: -7.308283805847168
    4. 'E' → logprob: -7.558283805847168
    5. 'C' → logprob: -8.183283805847168
    6. 'O' → logprob: -8.308283805847168
    7. 'for' → logprob: -8.683283805847168
    8. 'R' → logprob: -8.683283805847168
    9. 'x' → logprob: -8.683283805847168
    10. 'f' → logprob: -9.058283805847168

Token 175: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.014929281547665596
    2. '[' → logprob: -4.389929294586182
    3. ' collections' → logprob: -6.639929294586182
    4. '[n' → logprob: -7.139929294586182
    5. '0' → logprob: -9.264928817749023
    6. ' [' → logprob: -9.889928817749023
    7. '[x' → logprob: -9.889928817749023
    8. '{' → logprob: -10.764928817749023
    9. '[len' → logprob: -10.889928817749023
    10. '[]' → logprob: -10.889928817749023

Token 176: '.default' (ID: 15648)
  Prédit: '.Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Counter' → logprob: -0.0013033337891101837
    2. '.default' → logprob: -7.001303195953369
    3. '.' → logprob: -7.876303195953369
    4. 'Counter' → logprob: -12.751303672790527
    5. ' Counter' → logprob: -12.876303672790527
    6. ' defaultdict' → logprob: -12.876303672790527
    7. 'default' → logprob: -13.751303672790527
    8. '.Default' → logprob: -14.251303672790527
    9. '.C' → logprob: -14.501303672790527
    10. '.Order' → logprob: -14.751303672790527

Token 177: 'dict' (ID: 20993)
  Prédit: 'dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dict' → logprob: -4.320199877838604e-07
    2. 'ct' → logprob: -15.875
    3. ' dict' → logprob: -16.375
    4. 'ict' → logprob: -16.375
    5. 'dic' → logprob: -18.75
    6. 'd' → logprob: -18.875
    7. 'Dict' → logprob: -18.875
    8. 'def' → logprob: -20.875
    9. 'default' → logprob: -21.625
    10. 'list' → logprob: -21.75

Token 178: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.005734078586101532
    2. 'int' → logprob: -5.255733966827393
    3. '(lambda' → logprob: -7.755733966827393
    4. '<int' → logprob: -10.13073444366455
    5. '[int' → logprob: -10.75573444366455
    6. 'lambda' → logprob: -12.75573444366455
    7. ',int' → logprob: -12.75573444366455
    8. ':int' → logprob: -13.50573444366455
    9. ']int' → logprob: -13.88073444366455
    10. ' int' → logprob: -14.38073444366455

Token 179: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003087993711233139
    2. ')
' → logprob: -5.878087997436523
    3. ')

' → logprob: -8.253087997436523
    4. '()' → logprob: -11.378087997436523
    5. ' )' → logprob: -12.128087997436523
    6. '())' → logprob: -12.503087997436523
    7. ')
' → logprob: -14.503087997436523
    8. '(' → logprob: -15.003087997436523
    9. '()
' → logprob: -15.503087997436523
    10. ')`' → logprob: -15.753087997436523

Token 180: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0002251125843031332
    2. 'i' → logprob: -9.500225067138672
    3. ' for' → logprob: -9.750225067138672
    4. '#' → logprob: -10.625225067138672
    5. 'def' → logprob: -11.125225067138672
    6. 'p' → logprob: -11.750225067138672
    7. 'ans' → logprob: -12.375225067138672
    8. ')' → logprob: -12.375225067138672
    9. 'x' → logprob: -12.750225067138672
    10. 'f' → logprob: -12.875225067138672

Token 181: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0497196726500988
    2. 'k' → logprob: -4.29971981048584
    3. 'i' → logprob: -4.42471981048584
    4. 'l' → logprob: -4.67471981048584
    5. ' d' → logprob: -5.04971981048584
    6. 'L' → logprob: -6.67471981048584
    7. 'c' → logprob: -6.67471981048584
    8. 'length' → logprob: -6.92471981048584
    9. 'p' → logprob: -7.29971981048584
    10. 'v' → logprob: -7.79971981048584

Token 182: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05501746013760567
    2. 'in' → logprob: -2.9300174713134766
    3. 'd' → logprob: -9.055017471313477
    4. ' ' → logprob: -11.930017471313477
    5. 's' → logprob: -12.805017471313477
    6. 'n' → logprob: -13.055017471313477
    7. ',' → logprob: -13.680017471313477
    8. 'import' → logprob: -14.680017471313477
    9. 'i' → logprob: -14.742517471313477
    10. '_in' → logprob: -14.805017471313477

Token 183: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0017030329909175634
    2. ' D' → logprob: -6.376703262329102
    3. '	D' → logprob: -14.626703262329102
    4. '   ' → logprob: -15.751703262329102
    5. ' range' → logprob: -16.1267032623291
    6. '[D' → logprob: -16.2517032623291
    7. '(D' → logprob: -16.7517032623291
    8. 'd' → logprob: -17.1267032623291
    9. ' ' → logprob: -17.7517032623291
    10. 'range' → logprob: -18.0017032623291

Token 184: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00018363336857873946
    2. ':
' → logprob: -8.625184059143066
    3. ' :' → logprob: -12.625184059143066
    4. ',' → logprob: -15.625184059143066
    5. '):' → logprob: -15.750184059143066
    6. ':def' → logprob: -16.25018310546875
    7. ':**' → logprob: -16.62518310546875
    8. ':

' → logprob: -16.75018310546875
    9. ':
' → logprob: -17.00018310546875
    10. 'd' → logprob: -17.25018310546875

Token 185: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022649431601166725
    2. '    
' → logprob: -5.52264928817749
    3. ' i' → logprob: -5.64764928817749
    4. '    ' → logprob: -6.27264928817749
    5. ' if' → logprob: -6.27264928817749
    6. ' ' → logprob: -6.39764928817749
    7. ' for' → logprob: -6.52264928817749
    8. '
' → logprob: -6.64764928817749
    9. '  ' → logprob: -7.39764928817749
    10. ' cnt' → logprob: -7.39764928817749

Token 186: ' #' (ID: 1069)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ct' → logprob: -1.356178879737854
    2. 'count' → logprob: -1.481178879737854
    3. 'CT' → logprob: -1.731178879737854
    4. 'for' → logprob: -2.2311787605285645
    5. '   ' → logprob: -2.6061787605285645
    6. 'cnt' → logprob: -2.7311787605285645
    7. 'if' → logprob: -3.2311787605285645
    8. 'valid' → logprob: -4.6061787605285645
    9. 'm' → logprob: -4.8561787605285645
    10. 'val' → logprob: -5.2311787605285645

Token 187: ' Pourquoi' (ID: 94511)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9401289820671082
    2. 'CT' → logprob: -1.315129041671753
    3. 'if' → logprob: -2.440129041671753
    4. 'ct' → logprob: -2.440129041671753
    5. 'count' → logprob: -2.815129041671753
    6. 'val' → logprob: -4.065128803253174
    7. 'cnt' → logprob: -4.065128803253174
    8. 's' → logprob: -4.565128803253174
    9. '   ' → logprob: -4.815128803253174
    10. '#' → logprob: -5.065128803253174

Token 188: ' on' (ID: 402)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8846709728240967
    2. ' for' → logprob: -1.1346709728240967
    3. 'for' → logprob: -2.1346709728240967
    4. '   ' → logprob: -2.5096709728240967
    5. ' if' → logprob: -3.8846709728240967
    6. ' :' → logprob: -4.009671211242676
    7. '    ' → logprob: -4.509671211242676
    8. 'if' → logprob: -5.884671211242676
    9. ' ' → logprob: -6.134671211242676
    10. 't' → logprob: -6.884671211242676

Token 189: ' saute' (ID: 146395)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.3874058723449707
    2. ' continue' → logprob: -1.6374058723449707
    3. 'for' → logprob: -1.6374058723449707
    4. 'fait' → logprob: -1.7624058723449707
    5. 'continue' → logprob: -2.7624058723449707
    6. 'range' → logprob: -3.5124058723449707
    7. ' fait' → logprob: -3.7624058723449707
    8. ' n' → logprob: -4.387405872344971
    9. '   ' → logprob: -4.637405872344971
    10. ' range' → logprob: -4.887405872344971

Token 190: ' les' (ID: 1341)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.04854716360569
    2. '?' → logprob: -3.7985472679138184
    3. 'le' → logprob: -4.298547267913818
    4. ' d' → logprob: -5.423547267913818
    5. 'if' → logprob: -6.298547267913818
    6. ':' → logprob: -6.798547267913818
    7. 'pass' → logprob: -7.298547267913818
    8. 'les' → logprob: -7.423547267913818
    9. 'continue' → logprob: -7.673547267913818
    10. '   ' → logprob: -7.673547267913818

Token 191: ' pairs' (ID: 24702)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1586921662092209
    2. '1' → logprob: -3.1586921215057373
    3. 'for' → logprob: -3.6586921215057373
    4. 'div' → logprob: -3.9086921215057373
    5. '...' → logprob: -4.533692359924316
    6. 'if' → logprob: -4.533692359924316
    7. 'n' → logprob: -4.533692359924316
    8. 'pass' → logprob: -4.908692359924316
    9. '0' → logprob: -5.408692359924316
    10. 'continue' → logprob: -6.033692359924316

Token 192: ' et' (ID: 859)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.660793125629425
    2. 'if' → logprob: -0.910793125629425
    3. ':' → logprob: -3.1607930660247803
    4. '   ' → logprob: -3.4107930660247803
    5. '    ' → logprob: -6.160793304443359
    6. 's' → logprob: -6.785793304443359
    7. '?' → logprob: -7.160793304443359
    8. ',' → logprob: -7.910793304443359
    9. ':
' → logprob: -7.910793304443359
    10. ' ' → logprob: -8.53579330444336

Token 193: ' ' (ID: 220)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.08972034603357315
    2. ' d' → logprob: -2.4647202491760254
    3. 'if' → logprob: -8.339720726013184
    4. 'n' → logprob: -8.714720726013184
    5. '(d' → logprob: -8.964720726013184
    6. ' (' → logprob: -9.464720726013184
    7. ' n' → logprob: -9.464720726013184
    8. ' if' → logprob: -10.214720726013184
    9. '   ' → logprob: -11.214720726013184
    10. ' not' → logprob: -11.589720726013184

Token 194: '1' (ID: 16)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0061988383531570435
    2. 'not' → logprob: -5.881198883056641
    3. ' d' → logprob: -6.881198883056641
    4. 'if' → logprob: -7.256198883056641
    5. '(d' → logprob: -7.506198883056641
    6. 'i' → logprob: -8.25619888305664
    7. '...' → logprob: -8.88119888305664
    8. 'for' → logprob: -9.00619888305664
    9. ' not' → logprob: -9.38119888305664
    10. 'n' → logprob: -9.88119888305664

Token 195: '?' (ID: 30)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.27722498774528503
    2. ':' → logprob: -1.6522250175476074
    3. 'if' → logprob: -3.5272250175476074
    4. ',' → logprob: -4.402225017547607
    5. ' and' → logprob: -5.277225017547607
    6. ' :' → logprob: -7.152225017547607
    7. 'and' → logprob: -7.277225017547607
    8. '   ' → logprob: -7.652225017547607
    9. '=' → logprob: -7.902225017547607
    10. ':
' → logprob: -8.02722454071045

Token 196: ' Je' (ID: 4678)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3214942514896393
    2. ' if' → logprob: -1.571494221687317
    3. 'if' → logprob: -3.5714943408966064
    4. ' 
' → logprob: -4.321494102478027
    5. '
' → logprob: -4.946494102478027
    6. ' ' → logprob: -5.196494102478027
    7. '<|end|>' → logprob: -5.696494102478027
    8. '	if' → logprob: -5.821494102478027
    9. '    
' → logprob: -6.196494102478027
    10. '  
' → logprob: -6.571494102478027

Token 197: ' ne' (ID: 453)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.08350295573472977
    2. 'if' → logprob: -2.958503007888794
    3. 'n' → logprob: -4.458502769470215
    4. 's' → logprob: -5.208502769470215
    5. ' if' → logprob: -5.833502769470215
    6. '   ' → logprob: -6.458502769470215
    7. ' f' → logprob: -6.708502769470215
    8. 'd' → logprob: -7.083502769470215
    9. ' n' → logprob: -7.458502769470215
    10. ':' → logprob: -7.458502769470215

Token 198: ' sais' (ID: 30010)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2748032808303833
    2. ' comprends' → logprob: -2.3998031616210938
    3. 'pas' → logprob: -2.7748031616210938
    4. ' sais' → logprob: -3.5248031616210938
    5. ' vois' → logprob: -3.6498031616210938
    6. 'veux' → logprob: -3.7748031616210938
    7. ' pas' → logprob: -6.149803161621094
    8. 'compr' → logprob: -6.524803161621094
    9. ' pense' → logprob: -6.774803161621094
    10. 'vais' → logprob: -7.399803161621094

Token 199: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.0035696611739695072
    2. ' pas' → logprob: -6.003569602966309
    3. 'p' → logprob: -7.378569602966309
    4. 'd' → logprob: -8.628569602966309
    5. '   ' → logprob: -9.128569602966309
    6. '_pas' → logprob: -10.253569602966309
    7. 'for' → logprob: -10.503569602966309
    8. '(p' → logprob: -10.628569602966309
    9. '
' → logprob: -10.628569602966309
    10. ' ' → logprob: -10.753569602966309

Token 200: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3108654320240021
    2. ':' → logprob: -1.9358654022216797
    3. ' if' → logprob: -2.3108654022216797
    4. ':
' → logprob: -5.06086540222168
    5. '       ' → logprob: -5.68586540222168
    6. 'if' → logprob: -5.68586540222168
    7. ',' → logprob: -5.68586540222168
    8. ' :' → logprob: -6.06086540222168
    9. '    ' → logprob: -6.43586540222168
    10. '	if' → logprob: -6.68586540222168

Token 201: ' mais' (ID: 2899)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.16081897914409637
    2. 'if' → logprob: -2.0358190536499023
    3. '   ' → logprob: -4.035819053649902
    4. ' continue' → logprob: -9.285819053649902
    5. '    ' → logprob: -9.785819053649902
    6. '	if' → logprob: -9.910819053649902
    7. 'continue' → logprob: -10.410819053649902
    8. '  ' → logprob: -10.660819053649902
    9. ' ' → logprob: -11.160819053649902
    10. '       ' → logprob: -11.410819053649902

Token 202: ' on' (ID: 402)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.44518113136291504
    2. 'd' → logprob: -1.070181131362915
    3. ' if' → logprob: -4.445180892944336
    4. 'if' → logprob: -5.445180892944336
    5. '   ' → logprob: -8.695180892944336
    6. ' ' → logprob: -9.945180892944336
    7. '	d' → logprob: -10.820180892944336
    8. ' continue' → logprob: -11.445180892944336
    9. '    ' → logprob: -11.695180892944336
    10. 'continue' → logprob: -12.070180892944336

Token 203: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.1563224792480469
    2. 'if' → logprob: -2.156322479248047
    3. ' ==' → logprob: -2.656322479248047
    4. ' if' → logprob: -2.781322479248047
    5. ' not' → logprob: -2.906322479248047
    6. 'continue' → logprob: -2.906322479248047
    7. ' >=' → logprob: -3.031322479248047
    8. ':' → logprob: -3.281322479248047
    9. ' >' → logprob: -3.281322479248047
    10. ' !=' → logprob: -3.656322479248047

Token 204: ' comme' (ID: 7971)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019399994984269142
    2. ' if' → logprob: -4.019400119781494
    3. 'if' → logprob: -8.019399642944336
    4. '    ' → logprob: -8.519399642944336
    5. '
' → logprob: -8.894399642944336
    6. '  ' → logprob: -8.894399642944336
    7. '    
' → logprob: -8.894399642944336
    8. ':' → logprob: -9.519399642944336
    9. '	if' → logprob: -9.769399642944336
    10. ' ' → logprob: -9.769399642944336

Token 205: ' l' (ID: 305)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08752197027206421
    2. ' ça' → logprob: -2.962522029876709
    3. ' cela' → logprob: -5.337522029876709
    4. 'd' → logprob: -5.337522029876709
    5. 'ça' → logprob: -5.337522029876709
    6. 'if' → logprob: -5.587522029876709
    7. 'cela' → logprob: -5.587522029876709
    8. '```' → logprob: -5.837522029876709
    9. '       ' → logprob: -6.212522029876709
    10. ' ceci' → logprob: -6.462522029876709

Token 206: ''auteur' (ID: 128474)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.31511425971984863
    2. 'e' → logprob: -2.0651142597198486
    3. 'a' → logprob: -2.6901142597198486
    4. '```' → logprob: -3.8151142597198486
    5. 'elif' → logprob: -4.4401140213012695
    6. 'if' → logprob: -5.9401140213012695
    7. ''on' → logprob: -6.0651140213012695
    8. ' d' → logprob: -6.0651140213012695
    9. 'à' → logprob: -6.1901140213012695
    10. ''a' → logprob: -6.1901140213012695

Token 207: '...
' (ID: 4908)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6722489595413208
    2. '   ' → logprob: -0.9222489595413208
    3. ' if' → logprob: -2.7972488403320312
    4. 'if' → logprob: -4.047248840332031
    5. ':
' → logprob: -4.797248840332031
    6. ' :' → logprob: -6.047248840332031
    7. ',' → logprob: -6.547248840332031
    8. '  ' → logprob: -8.047248840332031
    9. ' :
' → logprob: -8.297248840332031
    10. '	if' → logprob: -8.672248840332031

Token 208: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10624679923057556
    2. ' if' → logprob: -2.6062467098236084
    3. ' ' → logprob: -4.4812469482421875
    4. '	if' → logprob: -5.1062469482421875
    5. 'if' → logprob: -5.3562469482421875
    6. '  ' → logprob: -6.6062469482421875
    7. ':' → logprob: -7.1062469482421875
    8. '\t' → logprob: -7.7312469482421875
    9. ' 
' → logprob: -7.8562469482421875
    10. '
' → logprob: -7.9812469482421875

Token 209: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2571946084499359
    2. ' if' → logprob: -2.0071945190429688
    3. '   ' → logprob: -2.3821945190429688
    4. '	if' → logprob: -9.757194519042969
    5. '    ' → logprob: -12.507194519042969
    6. '  ' → logprob: -12.632194519042969
    7. ' ' → logprob: -13.257194519042969
    8. '    
' → logprob: -14.132194519042969
    9. 'for' → logprob: -14.507194519042969
    10. '       ' → logprob: -14.632194519042969

Token 210: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.3872942328453064
    2. 'd' → logprob: -1.1372942924499512
    3. '	d' → logprob: -8.887293815612793
    4. '(d' → logprob: -8.887293815612793
    5. ' (' → logprob: -9.637293815612793
    6. ' ' → logprob: -10.012293815612793
    7. '   ' → logprob: -11.262293815612793
    8. '  ' → logprob: -12.512293815612793
    9. '1' → logprob: -12.887293815612793
    10. '(' → logprob: -12.887293815612793

Token 211: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8454481363296509
    2. ' ==' → logprob: -1.4704481363296509
    3. '<=' → logprob: -1.5954481363296509
    4. ' <=' → logprob: -2.0954480171203613
    5. ' in' → logprob: -4.970448017120361
    6. 'in' → logprob: -5.970448017120361
    7. ' ' → logprob: -6.720448017120361
    8. '!=' → logprob: -6.845448017120361
    9. '<' → logprob: -7.095448017120361
    10. ' !=' → logprob: -7.220448017120361

Token 212: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005255933851003647
    2. ' ' → logprob: -5.255255699157715
    3. 'n' → logprob: -11.380255699157715
    4. '2' → logprob: -11.630255699157715
    5. ' n' → logprob: -13.505255699157715
    6. '0' → logprob: -15.255255699157715
    7. 'd' → logprob: -16.38025665283203
    8. '  ' → logprob: -16.88025665283203
    9. '   ' → logprob: -17.69275665283203
    10. ' d' → logprob: -18.44275665283203

Token 213: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003183041699230671
    2. 'n' → logprob: -8.12531852722168
    3. '2' → logprob: -10.87531852722168
    4. ' ' → logprob: -12.75031852722168
    5. '0' → logprob: -15.62531852722168
    6. ' n' → logprob: -16.25031852722168
    7. 'd' → logprob: -17.62531852722168
    8. '
' → logprob: -18.06281852722168
    9. '１' → logprob: -18.37531852722168
    10. '   ' → logprob: -18.50031852722168

Token 214: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.018203558400273323
    2. 'or' → logprob: -4.0182037353515625
    3. ':' → logprob: -10.643203735351562
    4. ' ' → logprob: -10.893203735351562
    5. ':
' → logprob: -12.393203735351562
    6. '	or' → logprob: -12.393203735351562
    7. ' или' → logprob: -14.518203735351562
    8. '=' → logprob: -14.768203735351562
    9. ')' → logprob: -14.768203735351562
    10. '   ' → logprob: -15.518203735351562

Token 215: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -8.180258191714529e-06
    2. ' d' → logprob: -11.750008583068848
    3. '(d' → logprob: -15.875008583068848
    4. '   ' → logprob: -17.25000762939453
    5. '
' → logprob: -17.62500762939453
    6. '

' → logprob: -18.25000762939453
    7. '	d' → logprob: -18.25000762939453
    8. ' ' → logprob: -18.50000762939453
    9. 'not' → logprob: -18.75000762939453
    10. '%d' → logprob: -19.00000762939453

Token 216: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.20141704380512238
    2. ' %' → logprob: -1.701417088508606
    3. '%
' → logprob: -13.451416969299316
    4. ' ' → logprob: -13.826416969299316
    5. '%d' → logprob: -14.201416969299316
    6. ' %
' → logprob: -14.951416969299316
    7. '2' → logprob: -16.576417922973633
    8. ' ' → logprob: -16.701417922973633
    9. 'd' → logprob: -16.701417922973633
    10. '
' → logprob: -17.451417922973633

Token 217: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007104054093360901
    2. ' ' → logprob: -7.250710487365723
    3. '1' → logprob: -16.250709533691406
    4. '  ' → logprob: -16.750709533691406
    5. '   ' → logprob: -16.813209533691406
    6. 'd' → logprob: -17.188209533691406
    7. '=' → logprob: -17.563209533691406
    8. '```' → logprob: -17.750709533691406
    9. '２' → logprob: -18.375709533691406
    10. '0' → logprob: -18.563209533691406

Token 218: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00043126524542458355
    2. ' ' → logprob: -7.750431060791016
    3. '1' → logprob: -15.500431060791016
    4. '  ' → logprob: -16.750431060791016
    5. '   ' → logprob: -16.812931060791016
    6. '0' → logprob: -17.125431060791016
    7. 'd' → logprob: -17.250431060791016
    8. '==' → logprob: -17.562931060791016
    9. '=' → logprob: -17.625431060791016
    10. '3' → logprob: -17.875431060791016

Token 219: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.019860319793224335
    2. ' ==' → logprob: -4.14486026763916
    3. '0' → logprob: -5.64486026763916
    4. '=' → logprob: -8.39486026763916
    5. '==
' → logprob: -10.14486026763916
    6. ' ' → logprob: -11.51986026763916
    7. '!=' → logprob: -12.64486026763916
    8. ':' → logprob: -13.76986026763916
    9. '()==' → logprob: -13.89486026763916
    10. '===' → logprob: -14.14486026763916

Token 220: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013295256067067385
    2. ' ' → logprob: -6.62632942199707
    3. '1' → logprob: -13.00132942199707
    4. '2' → logprob: -14.18882942199707
    5. '=' → logprob: -15.68882942199707
    6. '00' → logprob: -16.12632942199707
    7. 'd' → logprob: -16.62632942199707
    8. '
' → logprob: -16.75132942199707
    9. '   ' → logprob: -16.75132942199707
    10. '  ' → logprob: -16.87632942199707

Token 221: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00030114251421764493
    2. ' ' → logprob: -8.125301361083984
    3. '2' → logprob: -12.875301361083984
    4. '1' → logprob: -13.125301361083984
    5. '=' → logprob: -15.875301361083984
    6. '00' → logprob: -16.312801361083984
    7. '
' → logprob: -17.125301361083984
    8. '4' → logprob: -17.187801361083984
    9. 'o' → logprob: -17.250301361083984
    10. '۰' → logprob: -17.250301361083984

Token 222: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07966560870409012
    2. ':
' → logprob: -2.5796656608581543
    3. '   ' → logprob: -7.579665660858154
    4. '       ' → logprob: -8.454665184020996
    5. 'continue' → logprob: -10.829665184020996
    6. '	continue' → logprob: -11.079665184020996
    7. ' continue' → logprob: -11.954665184020996
    8. ':
' → logprob: -12.454665184020996
    9. ':return' → logprob: -13.579665184020996
    10. ' :' → logprob: -14.079665184020996

Token 223: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012344122864305973
    2. ' continue' → logprob: -4.8873443603515625
    3. '   ' → logprob: -6.8873443603515625
    4. ':' → logprob: -6.8873443603515625
    5. 'continue' → logprob: -6.8873443603515625
    6. ':
' → logprob: -7.0123443603515625
    7. '	continue' → logprob: -7.5123443603515625
    8. ' continues' → logprob: -10.012344360351562
    9. '
' → logprob: -10.137344360351562
    10. '	' → logprob: -10.262344360351562

Token 224: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.019424203783273697
    2. '   ' → logprob: -4.2694244384765625
    3. ' continue' → logprob: -5.2694244384765625
    4. '       ' → logprob: -9.519424438476562
    5. '	continue' → logprob: -10.644424438476562
    6. ' ' → logprob: -13.644424438476562
    7. 'contin' → logprob: -13.894424438476562
    8. '           ' → logprob: -14.769424438476562
    9. 'continu' → logprob: -14.894424438476562
    10. '```' → logprob: -15.894424438476562

Token 225: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07101108133792877
    2. '
' → logprob: -3.1960110664367676
    3. '<|end|>' → logprob: -4.196011066436768
    4. '    
' → logprob: -5.821011066436768
    5. ' for' → logprob: -5.946011066436768
    6. 'tokens' → logprob: -6.696011066436768
    7. 'for' → logprob: -7.571011066436768
    8. '\t' → logprob: -7.696011066436768
    9. '  ' → logprob: -7.946011066436768
    10. ' 
' → logprob: -8.071011543273926

Token 226: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08270584791898727
    2. 'cnt' → logprob: -4.082705974578857
    3. 'dp' → logprob: -4.457705974578857
    4. '    
' → logprob: -4.957705974578857
    5. 'count' → logprob: -5.082705974578857
    6. 'for' → logprob: -5.332705974578857
    7. 'k' → logprob: -5.582705974578857
    8. 'm' → logprob: -5.582705974578857
    9. 'ct' → logprob: -5.582705974578857
    10. ' for' → logprob: -5.707705974578857

Token 227: ' k' (ID: 372)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -1.1846753358840942
    2. 'for' → logprob: -2.1846752166748047
    3. 'count' → logprob: -2.3096752166748047
    4. '   ' → logprob: -2.5596752166748047
    5. 'p' → logprob: -2.6846752166748047
    6. 'm' → logprob: -2.6846752166748047
    7. 's' → logprob: -2.9346752166748047
    8. 'k' (adapté à ' k') → logprob: -3.5596752166748047
    9. 'mask' → logprob: -3.8096752166748047
    10. 't' → logprob: -4.434675216674805

Token 228: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06997834146022797
    2. '=' → logprob: -2.6949782371520996
    3. 'd' → logprob: -10.694978713989258
    4. 'for' → logprob: -12.694978713989258
    5. 'k' → logprob: -13.194978713989258
    6. '=k' → logprob: -13.319978713989258
    7. 'x' → logprob: -13.444978713989258
    8. ' ' → logprob: -13.694978713989258
    9. '=int' → logprob: -13.819978713989258
    10. 'e' → logprob: -13.819978713989258

Token 229: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03357701003551483
    2. '0' → logprob: -4.408576965332031
    3. 'd' → logprob: -4.408576965332031
    4. '(n' → logprob: -5.533576965332031
    5. '[n' → logprob: -6.908576965332031
    6. '2' → logprob: -7.033576965332031
    7. 'int' → logprob: -7.033576965332031
    8. ' n' → logprob: -7.658576965332031
    9. 'x' → logprob: -7.783576965332031
    10. 'len' → logprob: -8.408576965332031

Token 230: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.3485702872276306
    2. ' //' → logprob: -1.2235703468322754
    3. 'd' → logprob: -9.473569869995117
    4. '#' → logprob: -10.848569869995117
    5. '
' → logprob: -10.973569869995117
    6. '/d' → logprob: -12.723569869995117
    7. '%' → logprob: -13.223569869995117
    8. '%d' → logprob: -13.348569869995117
    9. ' ' → logprob: -13.723569869995117
    10. '   ' → logprob: -13.848569869995117

Token 231: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -3.547789674485102e-05
    2. ' d' → logprob: -10.250035285949707
    3. '	d' → logprob: -19.375036239624023
    4. '<|end|>' → logprob: -19.625036239624023
    5. ')d' → logprob: -20.250036239624023
    6. '_d' → logprob: -20.500036239624023
    7. '>d' → logprob: -20.875036239624023
    8. ' ' → logprob: -21.500036239624023
    9. '(d' → logprob: -21.500036239624023
    10. '*d' → logprob: -21.625036239624023

Token 232: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.051934391260147095
    2. '
' → logprob: -3.0519344806671143
    3. '    
' → logprob: -6.551934242248535
    4. 'for' → logprob: -7.051934242248535
    5. 's' → logprob: -8.301934242248535
    6. ' for' → logprob: -8.426934242248535
    7. '  
' → logprob: -9.426934242248535
    8. ' ' → logprob: -10.051934242248535
    9. '   
' → logprob: -10.176934242248535
    10. '
' → logprob: -10.176934242248535

Token 233: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28236493468284607
    2. 'ok' → logprob: -3.032364845275879
    3. 's' → logprob: -3.157364845275879
    4. 'cnt' → logprob: -3.907364845275879
    5. 'valid' → logprob: -4.032364845275879
    6. 'p' → logprob: -4.157364845275879
    7. 'm' → logprob: -4.657364845275879
    8. 'mask' → logprob: -4.782364845275879
    9. 'count' → logprob: -5.157364845275879
    10. 'flag' → logprob: -5.157364845275879

Token 234: ' #' (ID: 1069)
  Prédit: 'ok'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ok' → logprob: -0.8593225479125977
    2. 'for' → logprob: -2.1093225479125977
    3. 's' → logprob: -2.7343225479125977
    4. 'valid' → logprob: -2.8593225479125977
    5. 'CT' → logprob: -3.2343225479125977
    6. 'val' → logprob: -3.3593225479125977
    7. 'cur' → logprob: -3.7343225479125977
    8. 'cnt' → logprob: -3.7343225479125977
    9. 'good' → logprob: -3.8593225479125977
    10. 'ct' → logprob: -3.8593225479125977

Token 235: ' Cycle' (ID: 65262)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.8720595836639404
    2. 'val' → logprob: -1.9970595836639404
    3. 's' → logprob: -2.1220595836639404
    4. 'ct' → logprob: -2.6220595836639404
    5. 'mask' → logprob: -2.9970595836639404
    6. 'pattern' → logprob: -2.9970595836639404
    7. 'cnt' → logprob: -3.2470595836639404
    8. 'CT' → logprob: -3.3720595836639404
    9. 'ok' → logprob: -3.3720595836639404
    10. 'if' → logprob: -3.4970595836639404

Token 236: ' truc' (ID: 58342)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3370473384857178
    2. 's' → logprob: -1.4620473384857178
    3. 'length' → logprob: -1.4620473384857178
    4. 'count' → logprob: -2.5870473384857178
    5. 'd' → logprob: -3.0870473384857178
    6. ' =' → logprob: -3.4620473384857178
    7. '=' → logprob: -3.7120473384857178
    8. 'cnt' → logprob: -3.9620473384857178
    9. 'det' → logprob: -4.337047576904297
    10. 'len' → logprob: -4.462047576904297

Token 237: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4302096962928772
    2. '=' → logprob: -1.0552096366882324
    3. 's' → logprob: -7.180209636688232
    4. 'count' → logprob: -8.18021011352539
    5. '   ' → logprob: -9.43021011352539
    6. 'sum' → logprob: -9.68021011352539
    7. 'cnt' → logprob: -9.68021011352539
    8. 'for' → logprob: -10.18021011352539
    9. ',' → logprob: -10.43021011352539
    10. 'x' → logprob: -11.18021011352539

Token 238: ' pas' (ID: 2173)
  Prédit: 'ok'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ok' → logprob: -1.5874440670013428
    2. 'for' → logprob: -1.5874440670013428
    3. 's' → logprob: -2.2124440670013428
    4. 'cycle' → logprob: -2.5874440670013428
    5. 'c' → logprob: -2.7124440670013428
    6. 'cnt' → logprob: -2.8374440670013428
    7. 'val' → logprob: -3.2124440670013428
    8. ' for' → logprob: -3.7124440670013428
    9. ' s' → logprob: -3.9624440670013428
    10. ' ok' → logprob: -4.087444305419922

Token 239: ' évident' (ID: 153030)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -2.5113110542297363
    2. 'de' → logprob: -2.6363110542297363
    3. ' encore' → logprob: -2.8863110542297363
    4. 'possible' → logprob: -2.8863110542297363
    5. 'c' → logprob: -3.1363110542297363
    6. 'k' → logprob: -3.1363110542297363
    7. ' sûr' → logprob: -3.2613110542297363
    8. ' de' → logprob: -3.2613110542297363
    9. 'tout' → logprob: -3.2613110542297363
    10. ' possible' → logprob: -3.3863110542297363

Token 240: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5951727628707886
    2. 'for' → logprob: -1.0951727628707886
    3. 'cycle' → logprob: -3.470172882080078
    4. 'cnt' → logprob: -4.095172882080078
    5. 's' → logprob: -4.345172882080078
    6. ' for' → logprob: -4.970172882080078
    7. 'count' → logprob: -5.345172882080078
    8. 'ct' → logprob: -5.345172882080078
    9. 'val' → logprob: -5.595172882080078
    10. 'c' → logprob: -5.845172882080078

Token 241: ' faudrait' (ID: 128958)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6862239837646484
    2. ' for' → logprob: -1.5612239837646484
    3. 'val' → logprob: -3.5612239837646484
    4. 's' → logprob: -3.8112239837646484
    5. 'ct' → logprob: -3.8112239837646484
    6. ' ct' → logprob: -3.9362239837646484
    7. ' s' → logprob: -4.061223983764648
    8. ' val' → logprob: -4.061223983764648
    9. 'cnt' → logprob: -4.186223983764648
    10. 'c' → logprob: -4.311223983764648

Token 242: ' vérifier' (ID: 93671)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -1.240699052810669
    2. 'v' → logprob: -1.865699052810669
    3. 'voir' → logprob: -2.240699052810669
    4. 'contin' → logprob: -2.490699052810669
    5. 'coder' → logprob: -2.865699052810669
    6. 'penser' → logprob: -2.865699052810669
    7. 'for' → logprob: -3.115699052810669
    8. 'continue' → logprob: -3.240699052810669
    9. 'calcul' → logprob: -3.740699052810669
    10. 'an' → logprob: -3.990699052810669

Token 243: ' :)
' (ID: 57972)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1385485678911209
    2. 'count' → logprob: -3.6385486125946045
    3. 'cycle' → logprob: -3.7635486125946045
    4. 'cnt' → logprob: -3.7635486125946045
    5. 'for' → logprob: -4.638548374176025
    6. 's' → logprob: -4.638548374176025
    7. 'c' → logprob: -4.888548374176025
    8. ' for' → logprob: -5.638548374176025
    9. 'm' → logprob: -5.638548374176025
    10. ' cycle' → logprob: -6.013548374176025

Token 244: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2978273630142212
    2. 'ok' → logprob: -1.7978273630142212
    3. '   ' → logprob: -1.9228273630142212
    4. 'cycle' → logprob: -2.9228272438049316
    5. 's' → logprob: -3.0478272438049316
    6. 'ct' → logprob: -3.0478272438049316
    7. 'cnt' → logprob: -3.1728272438049316
    8. 'count' → logprob: -3.5478272438049316
    9. 'c' → logprob: -3.6728272438049316
    10. 'val' → logprob: -3.7978272438049316

Token 245: ' try' (ID: 2075)
  Prédit: 'ok'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ok' → logprob: -1.2259923219680786
    2. 'for' → logprob: -1.2259923219680786
    3. 'val' → logprob: -2.600992202758789
    4. 's' → logprob: -2.725992202758789
    5. 'valid' → logprob: -3.225992202758789
    6. 'cycle' → logprob: -3.350992202758789
    7. 'ct' → logprob: -3.475992202758789
    8. 'CT' → logprob: -3.850992202758789
    9. 'cur' → logprob: -3.975992202758789
    10. 'cnt' → logprob: -3.975992202758789

Token 246: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47467610239982605
    2. ':
' → logprob: -0.9746761322021484
    3. '   ' → logprob: -7.599676132202148
    4. ':
' → logprob: -10.349676132202148
    5. ' :' → logprob: -10.974676132202148
    6. '       ' → logprob: -11.349676132202148
    7. ' :
' → logprob: -11.724676132202148
    8. 's' → logprob: -11.974676132202148
    9. '=' → logprob: -13.099676132202148
    10. 'except' → logprob: -13.099676132202148

Token 247: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4442870020866394
    2. 's' → logprob: -2.319287061691284
    3. 'b' → logprob: -3.069287061691284
    4. '   ' → logprob: -3.444287061691284
    5. 'bits' → logprob: -4.194286823272705
    6. 'for' → logprob: -4.444286823272705
    7. 'c' → logprob: -4.694286823272705
    8. 't' → logprob: -4.819286823272705
    9. 'mask' → logprob: -4.819286823272705
    10. 'val' → logprob: -4.819286823272705

Token 248: ' y' (ID: 342)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.777847409248352
    2. 'val' → logprob: -2.1528472900390625
    3. 'y' (adapté à ' y') → logprob: -2.6528472900390625
    4. 'v' → logprob: -2.7778472900390625
    5. 'p' → logprob: -3.0278472900390625
    6. 'if' → logprob: -3.0278472900390625
    7. 's' → logprob: -3.0278472900390625
    8. ' val' → logprob: -3.1528472900390625
    9. 'pattern' → logprob: -3.2778472900390625
    10. 'b' → logprob: -3.7778472900390625

Token 249: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018288657069206238
    2. '=' → logprob: -4.018288612365723
    3. '[' → logprob: -10.393288612365723
    4. ' ' → logprob: -10.893288612365723
    5. '=int' → logprob: -11.268288612365723
    6. 's' → logprob: -11.393288612365723
    7. 'x' → logprob: -11.643288612365723
    8. 'd' → logprob: -11.768288612365723
    9. '_idx' → logprob: -12.393288612365723
    10. '[i' → logprob: -12.643288612365723

Token 250: ' (' (ID: 350)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.31119534373283386
    2. 'x' → logprob: -1.6861953735351562
    3. ' int' → logprob: -2.8111953735351562
    4. ' x' → logprob: -4.061195373535156
    5. '(int' → logprob: -6.311195373535156
    6. '(x' → logprob: -6.311195373535156
    7. 'pow' → logprob: -8.436195373535156
    8. ' (' → logprob: -8.561195373535156
    9. 'all' → logprob: -8.936195373535156
    10. '(' → logprob: -9.436195373535156

Token 251: '2' (ID: 17)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.12686678767204285
    2. '(int' → logprob: -3.1268668174743652
    3. 'pow' → logprob: -3.6268668174743652
    4. 'ans' → logprob: -3.6268668174743652
    5. 'x' → logprob: -5.001866817474365
    6. '(' → logprob: -5.376866817474365
    7. '(x' → logprob: -5.626866817474365
    8. '(ans' → logprob: -5.751866817474365
    9. 'sum' → logprob: -7.001866817474365
    10. '(pow' → logprob: -7.251866817474365

Token 252: ' **' (ID: 6240)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.7910373210906982
    2. '**' → logprob: -1.1660373210906982
    3. ' **' → logprob: -1.7910373210906982
    4. '*' → logprob: -2.9160373210906982
    5. '*k' → logprob: -4.916037559509277
    6. '*y' → logprob: -6.291037559509277
    7. '*d' → logprob: -6.416037559509277
    8. 'pow' → logprob: -6.916037559509277
    9. '*n' → logprob: -7.416037559509277
    10. 'k' → logprob: -7.791037559509277

Token 253: ' n' (ID: 297)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.8897913098335266
    2. '(k' → logprob: -0.8897913098335266
    3. 'd' → logprob: -1.8897912502288818
    4. '(d' → logprob: -4.389791488647461
    5. '(' → logprob: -4.764791488647461
    6. ' (' → logprob: -5.389791488647461
    7. '(n' → logprob: -7.139791488647461
    8. ' d' → logprob: -7.889791488647461
    9. ' k' → logprob: -8.139791488647461
    10. '((' → logprob: -8.889791488647461

Token 254: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.7766167521476746
    2. ')' → logprob: -1.2766168117523193
    3. '-' → logprob: -1.5266168117523193
    4. '%' → logprob: -4.15161657333374
    5. ' %' → logprob: -5.40161657333374
    6. ' //' → logprob: -5.40161657333374
    7. '//' → logprob: -5.52661657333374
    8. ' )' → logprob: -5.77661657333374
    9. 'd' → logprob: -6.27661657333374
    10. '%d' → logprob: -6.40161657333374

Token 255: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.36496594548225403
    2. '(' → logprob: -2.1149659156799316
    3. '2' → logprob: -2.1149659156799316
    4. 'pow' → logprob: -2.8649659156799316
    5. ' ' → logprob: -5.739965915679932
    6. ' (' → logprob: -6.364965915679932
    7. ' pow' → logprob: -6.489965915679932
    8. '(pow' → logprob: -7.739965915679932
    9. '((' → logprob: -8.61496639251709
    10. ')' → logprob: -9.23996639251709

Token 256: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2632119953632355
    2. '(' → logprob: -2.013211965560913
    3. '2' → logprob: -2.388211965560913
    4. 'pow' → logprob: -5.388212203979492
    5. ' (' → logprob: -7.763212203979492
    6. ' ' → logprob: -8.138212203979492
    7. 'k' → logprob: -8.638212203979492
    8. '((' → logprob: -9.263212203979492
    9. 'ans' → logprob: -9.638212203979492
    10. ')' → logprob: -9.763212203979492

Token 257: ' **' (ID: 6240)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06543141603469849
    2. '**' → logprob: -3.4404313564300537
    3. '*' → logprob: -4.190431594848633
    4. '+' → logprob: -4.690431594848633
    5. ' +' → logprob: -6.565431594848633
    6. '*d' → logprob: -7.065431594848633
    7. '*k' → logprob: -7.065431594848633
    8. ')%' → logprob: -7.315431594848633
    9. ' )' → logprob: -7.315431594848633
    10. 'd' → logprob: -7.565431594848633

Token 258: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.010713749565184116
    2. '(k' → logprob: -4.885713577270508
    3. '(n' → logprob: -6.385713577270508
    4. 'd' → logprob: -6.635713577270508
    5. '(' → logprob: -9.885713577270508
    6. ' (' → logprob: -11.010713577270508
    7. '(d' → logprob: -11.135713577270508
    8. 'n' → logprob: -11.385713577270508
    9. ' k' → logprob: -11.885713577270508
    10. ' ' → logprob: -13.885713577270508

Token 259: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002940144157037139
    2. ' )' → logprob: -6.3779401779174805
    3. 'd' → logprob: -8.00294017791748
    4. ')%' → logprob: -8.12794017791748
    5. '*' → logprob: -8.37794017791748
    6. '*d' → logprob: -8.62794017791748
    7. '[d' → logprob: -10.12794017791748
    8. '%' → logprob: -10.50294017791748
    9. 'k' → logprob: -11.12794017791748
    10. '*k' → logprob: -11.37794017791748

Token 260: ' //' (ID: 602)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6510177254676819
    2. ')' → logprob: -1.026017665863037
    3. ' %' → logprob: -2.401017665863037
    4. ')%' → logprob: -3.776017665863037
    5. ' )' → logprob: -5.276017665863037
    6. '%n' → logprob: -8.026018142700195
    7. '%)' → logprob: -8.651018142700195
    8. ' ' → logprob: -9.026018142700195
    9. '%d' → logprob: -9.151018142700195
    10. '%x' → logprob: -9.276018142700195

Token 261: ' (' (ID: 350)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0005444537382572889
    2. '(' → logprob: -8.250544548034668
    3. 'k' → logprob: -9.500544548034668
    4. ' d' → logprob: -9.625544548034668
    5. '2' → logprob: -9.750544548034668
    6. 'mod' → logprob: -10.000544548034668
    7. '(d' → logprob: -10.750544548034668
    8. 'n' → logprob: -12.000544548034668
    9. ' ' → logprob: -12.500544548034668
    10. '(mod' → logprob: -13.125544548034668

Token 262: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11560976505279541
    2. '2' → logprob: -2.365609645843506
    3. 'd' → logprob: -4.240609645843506
    4. ' (' → logprob: -8.615610122680664
    5. '((' → logprob: -8.740610122680664
    6. 'k' → logprob: -9.365610122680664
    7. 'mod' → logprob: -9.490610122680664
    8. ')' → logprob: -9.615610122680664
    9. ' ' → logprob: -9.615610122680664
    10. 'n' → logprob: -9.990610122680664

Token 263: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.08690700680017471
    2. 'd' → logprob: -3.461906909942627
    3. '*d' → logprob: -3.586906909942627
    4. '*k' → logprob: -4.336906909942627
    5. 'k' → logprob: -5.336906909942627
    6. '*' → logprob: -5.461906909942627
    7. ')' → logprob: -7.086906909942627
    8. '^' → logprob: -7.961906909942627
    9. ' d' → logprob: -8.336907386779785
    10. ' **' → logprob: -8.586907386779785

Token 264: ' k' (ID: 372)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.001052934443578124
    2. 'k' → logprob: -7.0010528564453125
    3. ' d' → logprob: -9.751052856445312
    4. '(' → logprob: -10.251052856445312
    5. '(d' → logprob: -10.751052856445312
    6. 'n' → logprob: -11.376052856445312
    7. ' ' → logprob: -12.376052856445312
    8. '(k' → logprob: -12.751052856445312
    9. '(n' → logprob: -13.251052856445312
    10. ' (' → logprob: -13.751052856445312

Token 265: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.044679317623376846
    2. ' -' → logprob: -3.9196794033050537
    3. ' )' → logprob: -4.419679164886475
    4. '%' → logprob: -5.044679164886475
    5. '-' → logprob: -5.919679164886475
    6. ')%' → logprob: -6.669679164886475
    7. ' %' → logprob: -7.544679164886475
    8. '+' → logprob: -8.294679641723633
    9. ' +' → logprob: -8.544679641723633
    10. '%)' → logprob: -9.419679641723633

Token 266: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007830646354705095
    2. ' ' → logprob: -7.3757829666137695
    3. '2' → logprob: -9.37578296661377
    4. '(' → logprob: -10.00078296661377
    5. ')' → logprob: -11.37578296661377
    6. '0' → logprob: -12.25078296661377
    7. '   ' → logprob: -13.25078296661377
    8. ' (' → logprob: -13.62578296661377
    9. '-' → logprob: -14.00078296661377
    10. '
' → logprob: -14.12578296661377

Token 267: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004716345574706793
    2. '2' → logprob: -6.004716396331787
    3. '(' → logprob: -6.129716396331787
    4. ' ' → logprob: -10.379715919494629
    5. 'mod' → logprob: -11.504715919494629
    6. '0' → logprob: -12.629715919494629
    7. ' (' → logprob: -13.129715919494629
    8. '(mod' → logprob: -13.254715919494629
    9. '-' → logprob: -13.504715919494629
    10. 'pow' → logprob: -13.504715919494629

Token 268: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00031162876985035837
    2. ' )' → logprob: -8.875311851501465
    3. '%' → logprob: -9.500311851501465
    4. ')
' → logprob: -10.125311851501465
    5. ')%' → logprob: -10.625311851501465
    6. '<|end|>' → logprob: -11.500311851501465
    7. '+' → logprob: -12.500311851501465
    8. '   ' → logprob: -12.750311851501465
    9. '%)' → logprob: -13.125311851501465
    10. ')return' → logprob: -13.500311851501465

Token 269: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7692543864250183
    2. '<|end|>' → logprob: -1.394254446029663
    3. ')' → logprob: -1.519254446029663
    4. '       ' → logprob: -3.019254446029663
    5. '<|end|>' → logprob: -5.019254207611084
    6. 'except' → logprob: -5.394254207611084
    7. ' except' → logprob: -5.394254207611084
    8. '	except' → logprob: -6.394254207611084
    9. '    ' → logprob: -7.644254207611084
    10. ':' → logprob: -7.644254207611084

Token 270: ' except' (ID: 6384)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7997804284095764
    2. ' except' → logprob: -0.7997804284095764
    3. 'except' (adapté à ' except') → logprob: -2.4247803688049316
    4. ')' → logprob: -5.799780368804932
    5. '       ' → logprob: -5.799780368804932
    6. '	except' → logprob: -5.799780368804932
    7. '    
' → logprob: -6.549780368804932
    8. '    ' → logprob: -7.674780368804932
    9. ',' → logprob: -8.42478084564209
    10. '.' → logprob: -8.79978084564209

Token 271: ':
' (ID: 734)
  Prédit: ' Zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Zero' → logprob: -0.1602640300989151
    2. 'Zero' → logprob: -1.910264015197754
    3. 'Overflow' → logprob: -11.160264015197754
    4. ' Overflow' → logprob: -11.160264015197754
    5. '(' → logprob: -12.160264015197754
    6. ':' → logprob: -12.660264015197754
    7. '.Zero' → logprob: -14.160264015197754
    8. ' Exception' → logprob: -14.285264015197754
    9. 'Exception' → logprob: -14.660264015197754
    10. '_zero' → logprob: -15.160264015197754

Token 272: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001752295414917171
    2. '   ' → logprob: -7.3767523765563965
    3. ' y' → logprob: -8.001751899719238
    4. ' continue' → logprob: -8.001751899719238
    5. 'continue' → logprob: -8.126751899719238
    6. '           ' → logprob: -9.126751899719238
    7. 'y' → logprob: -10.251751899719238
    8. ' pass' → logprob: -12.126751899719238
    9. '0' → logprob: -13.001751899719238
    10. 'pass' → logprob: -13.251751899719238

Token 273: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.0527818463742733
    2. 'continue' → logprob: -3.052781820297241
    3. '   ' → logprob: -6.42778205871582
    4. ' y' → logprob: -6.42778205871582
    5. 'pass' → logprob: -7.92778205871582
    6. 'break' → logprob: -8.42778205871582
    7. ' continue' → logprob: -8.42778205871582
    8. 'print' → logprob: -9.92778205871582
    9. '       ' → logprob: -10.30278205871582
    10. 'ans' → logprob: -10.80278205871582

Token 274: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07890895009040833
    2. ' =' → logprob: -2.578908920288086
    3. ':' → logprob: -11.328908920288086
    4. '=None' → logprob: -13.703908920288086
    5. '+=' → logprob: -13.828908920288086
    6. ')' → logprob: -13.828908920288086
    7. ' ' → logprob: -14.328908920288086
    8. ' +=' → logprob: -14.703908920288086
    9. ' =
' → logprob: -14.703908920288086
    10. '=
' → logprob: -14.828908920288086

Token 275: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0033188804518431425
    2. '(' → logprob: -6.128318786621094
    3. ' ' → logprob: -7.003318786621094
    4. ' (' → logprob: -9.003318786621094
    5. '-' → logprob: -9.753318786621094
    6. '((' → logprob: -11.253318786621094
    7. 'mod' → logprob: -12.003318786621094
    8. '1' → logprob: -12.503318786621094
    9. '(n' → logprob: -12.753318786621094
    10. '   ' → logprob: -12.753318786621094

Token 276: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007088895887136459
    2. '(' → logprob: -5.007088661193848
    3. '-' → logprob: -8.007088661193848
    4. '((' → logprob: -11.382088661193848
    5. '1' → logprob: -11.882088661193848
    6. 'mod' → logprob: -12.382088661193848
    7. 'int' → logprob: -12.757088661193848
    8. ' ' → logprob: -12.882088661193848
    9. '(-' → logprob: -12.882088661193848
    10. '(n' → logprob: -13.007088661193848

Token 277: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15541571378707886
    2. '<|end|>' → logprob: -2.1554157733917236
    3. ')' → logprob: -4.0304155349731445
    4. '
' → logprob: -5.4054155349731445
    5. ' ' → logprob: -6.1554155349731445
    6. '  ' → logprob: -6.6554155349731445
    7. '    
' → logprob: -7.1554155349731445
    8. '    ' → logprob: -8.405415534973145
    9. '<|end|>' → logprob: -8.405415534973145
    10. ':' → logprob: -8.905415534973145

Token 278: ' Bon' (ID: 12658)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0707988739013672
    2. ')' → logprob: -1.4457988739013672
    3. '<|end|>' → logprob: -1.6957988739013672
    4. ' continue' → logprob: -1.9457988739013672
    5. 'continue' → logprob: -2.945798873901367
    6. ' pass' → logprob: -4.070798873901367
    7. '       ' → logprob: -4.945798873901367
    8. 'pass' → logprob: -5.320798873901367
    9. ' ' → logprob: -5.820798873901367
    10. ' y' → logprob: -6.320798873901367

Token 279: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16632795333862305
    2. '<|end|>' → logprob: -1.916327953338623
    3. ')' → logprob: -6.041327953338623
    4. '
' → logprob: -6.916327953338623
    5. '<|end|>' → logprob: -6.916327953338623
    6. '#' → logprob: -8.291328430175781
    7. '  ' → logprob: -8.666328430175781
    8. '...' → logprob: -8.916328430175781
    9. '       ' → logprob: -8.916328430175781
    10. '    
' → logprob: -8.916328430175781

Token 280: ' si' (ID: 1784)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.6586629748344421
    2. 'pass' → logprob: -1.908663034439087
    3. ' continue' → logprob: -2.033663034439087
    4. '0' → logprob: -2.908663034439087
    5. '   ' → logprob: -2.908663034439087
    6. 'continue' → logprob: -3.033663034439087
    7. '       ' → logprob: -4.158662796020508
    8. ' y' → logprob: -4.158662796020508
    9. ' None' → logprob: -5.908662796020508
    10. 'y' → logprob: -6.033662796020508

Token 281: ' ça' (ID: 13590)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.1019147634506226
    2. 'k' → logprob: -1.7269147634506226
    3. 'True' → logprob: -2.226914882659912
    4. ' True' → logprob: -2.226914882659912
    5. 'y' → logprob: -2.851914882659912
    6. '0' → logprob: -3.101914882659912
    7. ' k' → logprob: -3.351914882659912
    8. 'pass' → logprob: -3.601914882659912
    9. 'False' → logprob: -3.601914882659912
    10. ' d' → logprob: -3.976914882659912

Token 282: ' expl' (ID: 3421)
  Prédit: 'ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.9640114903450012
    2. 'bug' → logprob: -2.5890114307403564
    3. 'continue' → logprob: -2.9640114307403564
    4. 'n' → logprob: -2.9640114307403564
    5. 'se' → logprob: -3.0890114307403564
    6. 'arr' → logprob: -3.0890114307403564
    7. ' plante' → logprob: -3.0890114307403564
    8. 'pl' → logprob: -3.3390114307403564
    9. 'pose' → logprob: -3.7140114307403564
    10. 'a' → logprob: -4.2140116691589355

Token 283: 'ose' (ID: 918)
  Prédit: 'ose'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ose' → logprob: -0.9960018992424011
    2. 'ique' → logprob: -1.871001958847046
    3. 'icit' → logprob: -1.996001958847046
    4. 'it' → logprob: -2.371001958847046
    5. 'oit' → logprob: -2.371001958847046
    6. 'ite' → logprob: -2.996001958847046
    7. 'q' → logprob: -4.246001720428467
    8. 'e' → logprob: -4.871001720428467
    9. 'que' → logprob: -4.871001720428467
    10. '```' → logprob: -4.996001720428467

Token 284: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0031847211066633463
    2. ')' → logprob: -6.378184795379639
    3. '<|end|>' → logprob: -7.003184795379639
    4. '    
' → logprob: -8.50318431854248
    5. '       ' → logprob: -9.12818431854248
    6. '
' → logprob: -10.50318431854248
    7. '<|end|>' → logprob: -10.87818431854248
    8. ',' → logprob: -10.87818431854248
    9. '        
' → logprob: -11.00318431854248
    10. 'for' → logprob: -11.00318431854248

Token 285: ' tant' (ID: 16235)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.4493383467197418
    2. ' pass' → logprob: -1.9493383169174194
    3. 'continue' → logprob: -2.824338436126709
    4. 'y' → logprob: -2.949338436126709
    5. ' y' → logprob: -3.074338436126709
    6. '       ' → logprob: -3.699338436126709
    7. ' continue' → logprob: -3.949338436126709
    8. '   ' → logprob: -4.074338436126709
    9. '           ' → logprob: -9.19933795928955
    10. '```' → logprob: -9.94933795928955

Token 286: ' pis' (ID: 19525)
  Prédit: 'pis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pis' → logprob: -0.003911576233804226
    2. 'p' → logprob: -5.75391149520874
    3. 'pi' → logprob: -7.75391149520874
    4. 'pas' → logprob: -8.378911972045898
    5. '   ' → logprob: -10.628911972045898
    6. 'que' → logprob: -11.503911972045898
    7. 'qu' → logprob: -12.128911972045898
    8. 'bien' → logprob: -12.253911972045898
    9. 'm' → logprob: -12.378911972045898
    10. ' ' → logprob: -12.628911972045898

Token 287: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012728836387395859
    2. '<|end|>' → logprob: -4.637728691101074
    3. ')' → logprob: -6.387728691101074
    4. '    
' → logprob: -8.387728691101074
    5. '    ' → logprob: -8.762728691101074
    6. '       ' → logprob: -8.887728691101074
    7. '
' → logprob: -9.137728691101074
    8. 'if' → logprob: -9.387728691101074
    9. '  ' → logprob: -9.762728691101074
    10. ' if' → logprob: -9.762728691101074

Token 288: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29697385430336
    2. ' if' → logprob: -2.546973943710327
    3. 'if' → logprob: -2.796973943710327
    4. ')' → logprob: -3.671973943710327
    5. 'ans' → logprob: -3.671973943710327
    6. 'for' → logprob: -4.296973705291748
    7. ' for' → logprob: -4.296973705291748
    8. '<|end|>' → logprob: -4.296973705291748
    9. 'CT' → logprob: -5.171973705291748
    10. ' ' → logprob: -5.546973705291748

Token 289: ' ct' (ID: 40541)
  Prédit: 'CT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CT' → logprob: -0.6906720995903015
    2. 'if' → logprob: -1.4406721591949463
    3. 'for' → logprob: -1.4406721591949463
    4. 'ct' (adapté à ' ct') → logprob: -4.315671920776367
    5. '   ' → logprob: -5.565671920776367
    6. 'ans' → logprob: -5.690671920776367
    7. ' for' → logprob: -6.815671920776367
    8. 'print' → logprob: -7.565671920776367
    9. ' if' → logprob: -7.815671920776367
    10. 'while' → logprob: -7.815671920776367

Token 290: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23920132219791412
    2. '=' → logprob: -1.739201307296753
    3. '[' → logprob: -3.989201307296753
    4. '[d' → logprob: -4.614201545715332
    5. 'CT' → logprob: -6.114201545715332
    6. 's' → logprob: -6.114201545715332
    7. 'd' → logprob: -7.239201545715332
    8. '=d' → logprob: -7.364201545715332
    9. 'e' → logprob: -7.614201545715332
    10. '_ct' → logprob: -8.239201545715332

Token 291: ' ((' (ID: 3536)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6484923958778381
    2. 'x' → logprob: -1.6484923362731934
    3. 'CT' → logprob: -1.6484923362731934
    4. 'sum' → logprob: -3.0234923362731934
    5. '(' → logprob: -4.398492336273193
    6. '(x' → logprob: -4.398492336273193
    7. 'y' → logprob: -5.523492336273193
    8. '2' → logprob: -5.898492336273193
    9. 'pow' → logprob: -5.898492336273193
    10. 'collections' → logprob: -6.148492336273193

Token 292: 'int' (ID: 491)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6139076948165894
    2. 'y' → logprob: -1.6139076948165894
    3. 'pow' → logprob: -2.363907814025879
    4. '(' → logprob: -2.988907814025879
    5. 'ans' → logprob: -3.613907814025879
    6. 'd' → logprob: -3.738907814025879
    7. '1' → logprob: -3.988907814025879
    8. 'int' → logprob: -4.613907814025879
    9. 'n' → logprob: -4.613907814025879
    10. '(y' → logprob: -4.863907814025879

Token 293: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0013675002846866846
    2. 'x' → logprob: -7.251367568969727
    3. '(' → logprob: -7.876367568969727
    4. '(y' → logprob: -9.376367568969727
    5. '(ans' → logprob: -9.376367568969727
    6. '('' → logprob: -10.626367568969727
    7. ')' → logprob: -10.876367568969727
    8. '(
' → logprob: -11.126367568969727
    9. '((' → logprob: -11.376367568969727
    10. ' (' → logprob: -11.626367568969727

Token 294: ',' (ID: 11)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.6826702952384949
    2. ',' → logprob: -0.9326702952384949
    3. '[-' → logprob: -2.4326703548431396
    4. '[(' → logprob: -5.6826701164245605
    5. '[' → logprob: -5.9326701164245605
    6. ',d' → logprob: -6.1826701164245605
    7. '[d' → logprob: -6.4326701164245605
    8. ' ,' → logprob: -6.8076701164245605
    9. '[n' → logprob: -7.6826701164245605
    10. ',k' → logprob: -7.8076701164245605

Token 295: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.020575758069753647
    2. ' ' → logprob: -3.895575761795044
    3. 'd' → logprob: -11.895575523376465
    4. '0' → logprob: -11.895575523376465
    5. '  ' → logprob: -12.520575523376465
    6. '   ' → logprob: -12.520575523376465
    7. '16' → logprob: -13.270575523376465
    8. '
' → logprob: -13.520575523376465
    9. ')' → logprob: -13.770575523376465
    10. '```' → logprob: -13.833075523376465

Token 296: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002222516923211515
    2. ' ' → logprob: -8.625222206115723
    3. 'd' → logprob: -10.250222206115723
    4. 'k' → logprob: -13.625222206115723
    5. '   ' → logprob: -13.750222206115723
    6. '0' → logprob: -13.875222206115723
    7. '
' → logprob: -14.250222206115723
    8. ')' → logprob: -14.625222206115723
    9. '1' → logprob: -14.750222206115723
    10. '  ' → logprob: -15.000222206115723

Token 297: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006496635265648365
    2. '>>' → logprob: -5.256496429443359
    3. ')>>' → logprob: -7.131496429443359
    4. ' )' → logprob: -9.13149642944336
    5. '   ' → logprob: -9.63149642944336
    6. '[:' → logprob: -9.75649642944336
    7. ' >>' → logprob: -9.75649642944336
    8. ')+' → logprob: -10.00649642944336
    9. '[-' → logprob: -10.63149642944336
    10. ')<<' → logprob: -11.13149642944336

Token 298: ' -' (ID: 533)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.05927492678165436
    2. ' >>' → logprob: -2.934274911880493
    3. '+' → logprob: -5.934275150299072
    4. '>>(' → logprob: -7.309275150299072
    5. ')' → logprob: -7.684275150299072
    6. '//' → logprob: -8.934274673461914
    7. '-' → logprob: -9.184274673461914
    8. '<<' → logprob: -9.184274673461914
    9. ' +' → logprob: -9.809274673461914
    10. ' //' → logprob: -9.809274673461914

Token 299: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.25605836510658264
    2. '(' → logprob: -2.38105845451355
    3. ' y' → logprob: -2.63105845451355
    4. '(y' → logprob: -4.131058216094971
    5. '1' → logprob: -4.631058216094971
    6. ' (' → logprob: -4.756058216094971
    7. 'int' → logprob: -5.006058216094971
    8. '((' → logprob: -5.006058216094971
    9. '2' → logprob: -5.131058216094971
    10. 'pow' → logprob: -6.381058216094971

Token 300: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02177778072655201
    2. ' +' → logprob: -4.521777629852295
    3. '+' → logprob: -4.896777629852295
    4. ' )' → logprob: -5.896777629852295
    5. ')+' → logprob: -8.771778106689453
    6. '   ' → logprob: -9.146778106689453
    7. ')>>' → logprob: -9.896778106689453
    8. ' -' → logprob: -10.146778106689453
    9. ')%' → logprob: -11.021778106689453
    10. '-' → logprob: -11.021778106689453

Token 301: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28713324666023254
    2. '+' → logprob: -2.16213321685791
    3. ' +' → logprob: -2.28713321685791
    4. '%' → logprob: -4.41213321685791
    5. ' )' → logprob: -5.41213321685791
    6. '>>' → logprob: -5.78713321685791
    7. ' //' → logprob: -5.91213321685791
    8. '//' → logprob: -6.16213321685791
    9. ' %' → logprob: -6.16213321685791
    10. '*' → logprob: -6.53713321685791

Token 302: ' (' (ID: 350)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4114483892917633
    2. 'k' → logprob: -1.161448359489441
    3. '(' → logprob: -4.5364484786987305
    4. ' d' → logprob: -5.0364484786987305
    5. ' k' → logprob: -6.0364484786987305
    6. '2' → logprob: -6.0364484786987305
    7. '(k' → logprob: -7.2864484786987305
    8. ' ' → logprob: -7.6614484786987305
    9. ' (' → logprob: -7.9114484786987305
    10. '(d' → logprob: -8.16144847869873

Token 303: 'y' (ID: 88)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3910312354564667
    2. '(' → logprob: -1.391031265258789
    3. 'd' → logprob: -3.266031265258789
    4. 'k' → logprob: -3.391031265258789
    5. '   ' → logprob: -7.016031265258789
    6. ' (' → logprob: -7.766031265258789
    7. ' ' → logprob: -7.891031265258789
    8. '(k' → logprob: -8.016031265258789
    9. 'mod' → logprob: -8.766031265258789
    10. '1' → logprob: -8.891031265258789

Token 304: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.09018056094646454
    2. ' +' → logprob: -2.4651806354522705
    3. 'd' → logprob: -8.340180397033691
    4. ')' → logprob: -8.590180397033691
    5. '2' → logprob: -8.715180397033691
    6. ' ' → logprob: -8.965180397033691
    7. '   ' → logprob: -9.465180397033691
    8. '
' → logprob: -9.590180397033691
    9. '+
' → logprob: -9.590180397033691
    10. '1' → logprob: -9.965180397033691

Token 305: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00021676832693628967
    2. ' ' → logprob: -8.625216484069824
    3. '2' → logprob: -11.000216484069824
    4. '(' → logprob: -12.000216484069824
    5. '   ' → logprob: -12.500216484069824
    6. ')' → logprob: -12.875216484069824
    7. '
' → logprob: -13.250216484069824
    8. ' (' → logprob: -13.687716484069824
    9. '  ' → logprob: -14.312716484069824
    10. 'd' → logprob: -14.812716484069824

Token 306: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.56233171664644e-05
    2. ' ' → logprob: -10.250055313110352
    3. '2' → logprob: -11.875055313110352
    4. '(' → logprob: -12.500055313110352
    5. '   ' → logprob: -13.250055313110352
    6. ')' → logprob: -13.500055313110352
    7. '0' → logprob: -13.812555313110352
    8. ' (' → logprob: -14.375055313110352
    9. 'mod' → logprob: -14.750055313110352
    10. 'd' → logprob: -14.812555313110352

Token 307: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0435296893119812
    2. '+' → logprob: -3.543529748916626
    3. ' +' → logprob: -4.668529510498047
    4. ' )' → logprob: -6.418529510498047
    5. ')*' → logprob: -6.918529510498047
    6. ')+' → logprob: -7.168529510498047
    7. '))' → logprob: -7.418529510498047
    8. ')%' → logprob: -8.543529510498047
    9. '   ' → logprob: -10.543529510498047
    10. '%' → logprob: -10.918529510498047

Token 308: ' +' (ID: 659)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18097807466983795
    2. '
' → logprob: -2.3059780597686768
    3. '<|end|>' → logprob: -2.9309780597686768
    4. 'CT' → logprob: -6.430978298187256
    5. ' CT' → logprob: -6.430978298187256
    6. ' +' → logprob: -6.555978298187256
    7. '+' → logprob: -6.805978298187256
    8. '    
' → logprob: -6.805978298187256
    9. '_CT' → logprob: -7.055978298187256
    10. '<|end|>' → logprob: -7.180978298187256

Token 309: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011813873425126076
    2. 'k' → logprob: -4.761813640594482
    3. ' ' → logprob: -6.011813640594482
    4. ' k' → logprob: -8.01181411743164
    5. '2' → logprob: -9.13681411743164
    6. 'ct' → logprob: -9.13681411743164
    7. 'd' → logprob: -9.76181411743164
    8. '(' → logprob: -10.13681411743164
    9. 'n' → logprob: -10.88681411743164
    10. ' (' → logprob: -11.13681411743164

Token 310: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02202865108847618
    2. 'k' → logprob: -3.897028684616089
    3. 'd' → logprob: -7.14702844619751
    4. 'ct' → logprob: -8.147028923034668
    5. '(' → logprob: -8.772028923034668
    6. '2' → logprob: -9.272028923034668
    7. 'n' → logprob: -10.147028923034668
    8. '(k' → logprob: -10.522028923034668
    9. 'mod' → logprob: -10.772028923034668
    10. 'CT' → logprob: -10.772028923034668

Token 311: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 312: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.08022356778383255
    2. '(y' → logprob: -3.205223560333252
    3. ' y' → logprob: -3.330223560333252
    4. ' (' → logprob: -7.455223560333252
    5. '(' → logprob: -9.08022403717041
    6. ' ' → logprob: -10.70522403717041
    7. '(x' → logprob: -11.08022403717041
    8. '   ' → logprob: -11.95522403717041
    9. 'x' → logprob: -12.33022403717041
    10. '((' → logprob: -12.95522403717041

Token 313: ' +' (ID: 659)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.6334981918334961
    2. '+' → logprob: -2.008498191833496
    3. '>=' → logprob: -2.008498191833496
    4. ' !=' → logprob: -2.008498191833496
    5. ' >=' → logprob: -3.133498191833496
    6. '>' → logprob: -4.883498191833496
    7. ' +' → logprob: -5.258498191833496
    8. '!=-' → logprob: -5.633498191833496
    9. ' is' → logprob: -6.008498191833496
    10. ' <' → logprob: -6.383498191833496

Token 314: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005164555623196065
    2. ' ' → logprob: -7.625516414642334
    3. '0' → logprob: -10.500516891479492
    4. '+' → logprob: -15.625516891479492
    5. '>' → logprob: -15.875516891479492
    6. '```' → logprob: -15.875516891479492
    7. '
' → logprob: -16.375516891479492
    8. '!=' → logprob: -16.500516891479492
    9. '(' → logprob: -17.063016891479492
    10. ' !=' → logprob: -17.688016891479492

Token 315: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.073596548754722e-05
    2. ' ' → logprob: -10.37505054473877
    3. '0' → logprob: -10.87505054473877
    4. '```' → logprob: -16.000051498413086
    5. '!=' → logprob: -16.000051498413086
    6. '>' → logprob: -16.375051498413086
    7. '+' → logprob: -16.500051498413086
    8. 'y' → logprob: -17.875051498413086
    9. '
' → logprob: -17.875051498413086
    10. '(' → logprob: -17.875051498413086

Token 316: ' else' (ID: 1203)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.3622998297214508
    2. ' !=' → logprob: -1.4872997999191284
    3. '>' → logprob: -2.862299919128418
    4. ' >' → logprob: -4.612299919128418
    5. '<=' → logprob: -5.487299919128418
    6. ' else' → logprob: -5.862299919128418
    7. 'else' → logprob: -6.237299919128418
    8. ' <=' → logprob: -6.737299919128418
    9. ' and' → logprob: -8.237299919128418
    10. 'and' → logprob: -8.862299919128418

Token 317: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015600931365042925
    2. ' ' → logprob: -6.626560211181641
    3. '1' → logprob: -8.37656021118164
    4. '   ' → logprob: -12.87656021118164
    5. '(' → logprob: -14.87656021118164
    6. '           ' → logprob: -15.25156021118164
    7. 'int' → logprob: -15.56406021118164
    8. 'None' → logprob: -16.25156021118164
    9. '-' → logprob: -16.37656021118164
    10. '  ' → logprob: -16.68906021118164

Token 318: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00025764419115148485
    2. '1' → logprob: -8.37525749206543
    3. ' ' → logprob: -10.62525749206543
    4. 'int' → logprob: -14.12525749206543
    5. '   ' → logprob: -14.81275749206543
    6. '(' → logprob: -15.06275749206543
    7. '-' → logprob: -15.25025749206543
    8. 'n' → logprob: -15.62525749206543
    9. 'None' → logprob: -15.81275749206543
    10. 'ans' → logprob: -15.87525749206543

Token 319: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12990257143974304
    2. '<|end|>' → logprob: -2.7549026012420654
    3. '
' → logprob: -2.8799026012420654
    4. '    
' → logprob: -7.629902362823486
    5. '<|end|>' → logprob: -7.879902362823486
    6. ')' → logprob: -8.129902839660645
    7. ' if' → logprob: -8.254902839660645
    8. ' ' → logprob: -8.754902839660645
    9. ' 
' → logprob: -9.379902839660645
    10. '  ' → logprob: -9.379902839660645

Token 320: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6393088102340698
    2. 'CT' → logprob: -2.2643089294433594
    3. 'ans' → logprob: -2.6393089294433594
    4. ' for' → logprob: -2.7643089294433594
    5. 'if' → logprob: -2.7643089294433594
    6. 'for' → logprob: -2.8893089294433594
    7. ' if' → logprob: -2.8893089294433594
    8. ')' → logprob: -4.014308929443359
    9. ' ans' → logprob: -4.389308929443359
    10. 'ct' → logprob: -5.014308929443359

Token 321: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7316575050354004
    2. 'CT' → logprob: -1.2316575050354004
    3. 'if' → logprob: -2.1066575050354004
    4. '   ' → logprob: -2.9816575050354004
    5. ' for' → logprob: -3.2316575050354004
    6. ' if' → logprob: -4.9816575050354
    7. 'ct' → logprob: -5.8566575050354
    8. 'print' → logprob: -6.1066575050354
    9. ' CT' → logprob: -6.6066575050354
    10. ')' → logprob: -7.2316575050354

Token 322: ' Pour' (ID: 13931)
  Prédit: 'CT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'CT' → logprob: -0.3417593836784363
    2. 'for' → logprob: -1.591759443283081
    3. 'if' → logprob: -2.466759443283081
    4. 'ct' → logprob: -7.966759204864502
    5. 'while' → logprob: -8.59175968170166
    6. '   ' → logprob: -8.71675968170166
    7. ' for' → logprob: -9.71675968170166
    8. ' CT' → logprob: -9.84175968170166
    9. 'found' → logprob: -10.21675968170166
    10. 'ans' → logprob: -10.21675968170166

Token 323: ' enlever' (ID: 196982)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.6470764875411987
    2. 'ct' → logprob: -1.7720764875411987
    3. 'dd' → logprob: -2.0220766067504883
    4. ' ct' → logprob: -2.0220766067504883
    5. 'd' → logprob: -2.1470766067504883
    6. ' c' → logprob: -2.6470766067504883
    7. ' d' → logprob: -3.0220766067504883
    8. ' dd' → logprob: -3.6470766067504883
    9. ' CT' → logprob: -4.522076606750488
    10. 'CT' → logprob: -4.772076606750488

Token 324: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.11833789199590683
    2. 'les' → logprob: -2.868337869644165
    3. ' la' → logprob: -4.243338108062744
    4. 'ct' → logprob: -4.993338108062744
    5. 'le' → logprob: -5.118338108062744
    6. ' for' → logprob: -5.243338108062744
    7. 'for' → logprob: -5.493338108062744
    8. ' le' → logprob: -5.618338108062744
    9. '   ' → logprob: -5.618338108062744
    10. ' ceux' → logprob: -6.243338108062744

Token 325: ' doubl' (ID: 127992)
  Prédit: ' multiples'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' multiples' → logprob: -1.1526764631271362
    2. 'multip' → logprob: -1.1526764631271362
    3. 'fact' → logprob: -2.652676582336426
    4. 'div' → logprob: -2.777676582336426
    5. 'd' → logprob: -2.902676582336426
    6. 'ct' → logprob: -3.152676582336426
    7. ' multip' → logprob: -3.777676582336426
    8. ' d' → logprob: -4.027676582336426
    9. 'k' → logprob: -4.402676582336426
    10. ' facteurs' → logprob: -4.402676582336426

Token 326: 'ons' (ID: 1808)
  Prédit: 'és'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.28207558393478394
    2. 'ons' → logprob: -1.6570756435394287
    3. 'es' → logprob: -3.0320756435394287
    4. 'ic' → logprob: -6.40707540512085
    5. 'c' → logprob: -7.03207540512085
    6. 'icates' → logprob: -7.03207540512085
    7. 'ications' → logprob: -7.15707540512085
    8. 'iques' → logprob: -7.40707540512085
    9. 'onn' → logprob: -8.282075881958008
    10. 'ages' → logprob: -8.282075881958008

Token 327: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6704050302505493
    2. '   ' → logprob: -0.7954050302505493
    3. ' for' → logprob: -3.2954049110412598
    4. '	for' → logprob: -10.795405387878418
    5. 'i' → logprob: -12.295405387878418
    6. 'j' → logprob: -12.420405387878418
    7. '
' → logprob: -12.545405387878418
    8. ',' → logprob: -13.045405387878418
    9. 'CT' → logprob: -13.045405387878418
    10. 'ct' → logprob: -13.295405387878418

Token 328: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.29333099722862244
    2. '   ' → logprob: -1.4183310270309448
    3. ' for' → logprob: -4.418331146240234
    4. 'ct' → logprob: -11.168331146240234
    5. 'CT' → logprob: -11.668331146240234
    6. '	for' → logprob: -11.918331146240234
    7. 'j' → logprob: -12.043331146240234
    8. 'temp' → logprob: -12.168331146240234
    9. '       ' → logprob: -12.668331146240234
    10. ' ' → logprob: -13.293331146240234

Token 329: ' check' (ID: 2371)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.26000407338142395
    2. ' for' → logprob: -1.6350040435791016
    3. '   ' → logprob: -3.3850040435791016
    4. '  ' → logprob: -10.385004043579102
    5. ':' → logprob: -10.885004043579102
    6. ' pour' → logprob: -11.385004043579102
    7. '    ' → logprob: -11.385004043579102
    8. 'pour' → logprob: -11.385004043579102
    9. '	for' → logprob: -11.885004043579102
    10. '       ' → logprob: -12.135004043579102

Token 330: ' les' (ID: 1341)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6814234256744385
    2. ' for' → logprob: -0.8064234256744385
    3. '   ' → logprob: -3.0564234256744385
    4. 'j' → logprob: -7.806423187255859
    5. ' j' → logprob: -8.93142318725586
    6. '	for' → logprob: -11.18142318725586
    7. 'if' → logprob: -11.30642318725586
    8. ' if' → logprob: -11.68142318725586
    9. ' ' → logprob: -12.30642318725586
    10. 'ct' → logprob: -12.80642318725586

Token 331: ' div' (ID: 4223)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25506630539894104
    2. ' for' → logprob: -2.755066394805908
    3. 'multip' → logprob: -3.505066394805908
    4. 'div' → logprob: -3.880066394805908
    5. 'dd' → logprob: -4.005066394805908
    6. 'D' → logprob: -4.005066394805908
    7. 'j' → logprob: -4.255066394805908
    8. 'ct' → logprob: -4.380066394805908
    9. 'm' → logprob: -4.755066394805908
    10. 'c' → logprob: -5.380066394805908

Token 332: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.10740917176008224
    2. 'D' → logprob: -2.7324092388153076
    3. 'is' → logprob: -4.1074090003967285
    4. 'eurs' → logprob: -5.6074090003967285
    5. 'iseur' → logprob: -5.9824090003967285
    6. 'div' → logprob: -6.2324090003967285
    7. 'isateurs' → logprob: -6.2324090003967285
    8. 'ct' → logprob: -6.4824090003967285
    9. 'ieurs' → logprob: -6.4824090003967285
    10. 'd' → logprob: -6.8574090003967285

Token 333: 'urs' (ID: 1628)
  Prédit: 'urs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -0.27449551224708557
    2. 'se' → logprob: -1.6494954824447632
    3. 's' → logprob: -3.1494956016540527
    4. 'eurs' → logprob: -6.524495601654053
    5. 'teurs' → logprob: -6.774495601654053
    6. 'rs' → logprob: -7.274495601654053
    7. 'sers' → logprob: -8.274495124816895
    8. 'urses' → logprob: -8.399495124816895
    9. 'reurs' → logprob: -8.399495124816895
    10. 'urse' → logprob: -8.649495124816895

Token 334: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9885680079460144
    2. 'for' → logprob: -0.9885680079460144
    3. ' for' → logprob: -1.3635680675506592
    4. '	for' → logprob: -11.238568305969238
    5. ' of' → logprob: -11.738568305969238
    6. '  ' → logprob: -12.738568305969238
    7. 'of' → logprob: -13.238568305969238
    8. ',' → logprob: -13.488568305969238
    9. ' and' → logprob: -13.738568305969238
    10. ' in' → logprob: -13.738568305969238

Token 335: ' k' (ID: 372)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0014347549295052886
    2. ' d' → logprob: -7.126434803009033
    3. 'ct' → logprob: -8.001434326171875
    4. 'k' → logprob: -8.251434326171875
    5. 'D' → logprob: -11.626434326171875
    6. '   ' → logprob: -12.251434326171875
    7. 'CT' → logprob: -12.251434326171875
    8. 'n' → logprob: -12.501434326171875
    9. '```' → logprob: -13.126434326171875
    10. '	d' → logprob: -13.626434326171875

Token 336: ' aussi' (ID: 9894)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25086772441864014
    2. '   ' → logprob: -1.6258677244186401
    3. ' for' → logprob: -3.7508678436279297
    4. 'ct' → logprob: -7.75086784362793
    5. 'sub' → logprob: -8.50086784362793
    6. 'flag' → logprob: -8.50086784362793
    7. 'valid' → logprob: -8.87586784362793
    8. 'm' → logprob: -9.37586784362793
    9. 'found' → logprob: -9.37586784362793
    10. 'mul' → logprob: -9.37586784362793

Token 337: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4531579911708832
    2. 'for' → logprob: -1.7031580209732056
    3. ' for' → logprob: -1.7031580209732056
    4. 'sub' → logprob: -10.578158378601074
    5. '    
' → logprob: -10.828158378601074
    6. '	for' → logprob: -10.953158378601074
    7. 'E' → logprob: -11.203158378601074
    8. '  ' → logprob: -11.328158378601074
    9. '
' → logprob: -11.578158378601074
    10. ' D' → logprob: -11.703158378601074

Token 338: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8697400093078613
    2. 'for' → logprob: -1.1197400093078613
    3. ' for' → logprob: -1.3697400093078613
    4. '	for' → logprob: -9.369739532470703
    5. 'sub' → logprob: -9.619739532470703
    6. '<|end|>' → logprob: -9.744739532470703
    7. 'E' → logprob: -10.619739532470703
    8. 'D' → logprob: -11.119739532470703
    9. '    
' → logprob: -11.244739532470703
    10. ' D' → logprob: -11.244739532470703

Token 339: ' D' (ID: 415)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0013694037916138768
    2. '   ' → logprob: -6.626369476318359
    3. ' for' → logprob: -10.12636947631836
    4. 'sub' → logprob: -14.00136947631836
    5. '	for' → logprob: -14.50136947631836
    6. 'flag' → logprob: -15.00136947631836
    7. 'CT' → logprob: -15.00136947631836
    8. 'ct' → logprob: -15.37636947631836
    9. 'if' → logprob: -15.50136947631836
    10. '       ' → logprob: -15.50136947631836

Token 340: 'k' (ID: 74)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8040413856506348
    2. 'k' → logprob: -1.4290413856506348
    3. '_k' → logprob: -1.5540413856506348
    4. '_for' → logprob: -3.4290413856506348
    5. '=' → logprob: -3.8040413856506348
    6. ' =' → logprob: -4.179041385650635
    7. '_' → logprob: -4.304041385650635
    8. '_sub' → logprob: -5.179041385650635
    9. '2' → logprob: -5.929041385650635
    10. ' for' → logprob: -6.179041385650635

Token 341: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18007901310920715
    2. '=' → logprob: -1.8050789833068848
    3. 'k' → logprob: -8.055079460144043
    4. 'd' → logprob: -12.680079460144043
    5. '_k' → logprob: -12.805079460144043
    6. 'for' → logprob: -13.055079460144043
    7. '_' → logprob: -13.055079460144043
    8. ' ' → logprob: -13.180079460144043
    9. '2' → logprob: -13.305079460144043
    10. '=k' → logprob: -13.680079460144043

Token 342: ' make' (ID: 1520)
  Prédit: 'make'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'make' → logprob: -0.0052377874962985516
    2. ' make' → logprob: -5.255237579345703
    3. 'set' → logprob: -13.255237579345703
    4. '	make' → logprob: -13.255237579345703
    5. '(make' → logprob: -15.630237579345703
    6. '[' → logprob: -15.630237579345703
    7. 'list' → logprob: -17.255237579345703
    8. ' set' → logprob: -17.505237579345703
    9. ' [' → logprob: -17.630237579345703
    10. ' ' → logprob: -18.005237579345703

Token 343: '_div' (ID: 36926)
  Prédit: '_div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -7.465036105713807e-06
    2. 'div' → logprob: -12.125007629394531
    3. '_' → logprob: -13.875007629394531
    4. '_def' → logprob: -15.000007629394531
    5. '_d' → logprob: -15.375007629394531
    6. '_dist' → logprob: -16.62500762939453
    7. '_dis' → logprob: -16.62500762939453
    8. ' divis' → logprob: -17.25000762939453
    9. '_di' → logprob: -17.25000762939453
    10. '<div' → logprob: -17.50000762939453

Token 344: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.13148152828216553
    2. 's' → logprob: -2.256481647491455
    3. 'k' → logprob: -4.256481647491455
    4. 'div' → logprob: -6.881481647491455
    5. 'ors' → logprob: -7.256481647491455
    6. 'd' → logprob: -7.381481647491455
    7. '_div' → logprob: -7.506481647491455
    8. 'tors' → logprob: -7.881481647491455
    9. '_k' → logprob: -8.131481170654297
    10. 'itors' → logprob: -9.381481170654297

Token 345: 'ors' (ID: 914)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7188464999198914
    2. 'ors' → logprob: -0.7188464999198914
    3. 'tors' → logprob: -3.843846559524536
    4. 'se' → logprob: -6.343846321105957
    5. 'sers' → logprob: -7.718846321105957
    6. 'rs' → logprob: -7.843846321105957
    7. 'rors' → logprob: -8.593846321105957
    8. 'eurs' → logprob: -8.968846321105957
    9. 'ators' → logprob: -9.218846321105957
    10. 'vers' → logprob: -9.343846321105957

Token 346: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -4.320199877838604e-07
    2. 'k' → logprob: -15.125
    3. '(' → logprob: -16.75
    4. '(n' → logprob: -19.75
    5. '[k' → logprob: -20.125
    6. '<|end|>' → logprob: -20.875
    7. ',k' → logprob: -21.0
    8. '(d' → logprob: -21.125
    9. ' (' → logprob: -21.75
    10. '=k' → logprob: -22.0

Token 347: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.11861902475357056
    2. ')' → logprob: -2.243618965148926
    3. '   ' → logprob: -5.243618965148926
    4. ')
' → logprob: -7.618618965148926
    5. ')

' → logprob: -12.493618965148926
    6. ' )
' → logprob: -13.493618965148926
    7. '       ' → logprob: -14.368618965148926
    8. ' ' → logprob: -14.368618965148926
    9. ')`
' → logprob: -15.118618965148926
    10. '  ' → logprob: -15.493618965148926

Token 348: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22768841683864594
    2. '   ' → logprob: -1.6026884317398071
    3. ' for' → logprob: -6.227688312530518
    4. 'ct' → logprob: -8.602688789367676
    5. '	for' → logprob: -10.102688789367676
    6. '       ' → logprob: -10.602688789367676
    7. 'CT' → logprob: -11.227688789367676
    8. 'valid' → logprob: -11.477688789367676
    9. '<|end|>' → logprob: -11.727688789367676
    10. '    
' → logprob: -12.602688789367676

Token 349: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07260239869356155
    2. '   ' → logprob: -2.8226025104522705
    3. 'valid' → logprob: -5.447602272033691
    4. 'ct' → logprob: -5.572602272033691
    5. 'flag' → logprob: -7.072602272033691
    6. 'CT' → logprob: -7.197602272033691
    7. ' for' → logprob: -7.447602272033691
    8. 'remove' → logprob: -9.947602272033691
    9. 'found' → logprob: -10.072602272033691
    10. '       ' → logprob: -10.822602272033691

Token 350: ' dk' (ID: 88261)
  Prédit: 'dd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dd' → logprob: -0.33909016847610474
    2. 'd' → logprob: -1.58909010887146
    3. 'dk' → logprob: -3.58909010887146
    4. 'e' → logprob: -3.58909010887146
    5. ' dd' → logprob: -5.964090347290039
    6. 'kd' → logprob: -6.089090347290039
    7. 'ck' → logprob: -6.339090347290039
    8. 'c' → logprob: -6.464090347290039
    9. 'sd' → logprob: -6.464090347290039
    10. 'v' → logprob: -6.589090347290039

Token 351: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.179898202419281
    2. 'in' → logprob: -1.8048982620239258
    3. 'd' → logprob: -9.054898262023926
    4. 'n' → logprob: -11.304898262023926
    5. '   ' → logprob: -12.179898262023926
    6. 'k' → logprob: -12.429898262023926
    7. '	in' → logprob: -12.429898262023926
    8. 'import' → logprob: -12.804898262023926
    9. ' ' → logprob: -13.429898262023926
    10. '_in' → logprob: -13.679898262023926

Token 352: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -9.698698704596609e-05
    2. ' D' → logprob: -9.250097274780273
    3. '   ' → logprob: -15.250097274780273
    4. ' ' → logprob: -16.250097274780273
    5. '	D' → logprob: -16.250097274780273
    6. '[D' → logprob: -16.250097274780273
    7. '[' → logprob: -16.625097274780273
    8. 'DK' → logprob: -16.625097274780273
    9. '  ' → logprob: -17.500097274780273
    10. 'Ds' → logprob: -17.750097274780273

Token 353: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -6.392202976712724e-06
    2. ':' → logprob: -12.375006675720215
    3. 'D' → logprob: -13.625006675720215
    4. ':k' → logprob: -14.875006675720215
    5. '_k' → logprob: -15.250006675720215
    6. '[k' → logprob: -16.3750057220459
    7. 'K' → logprob: -17.0000057220459
    8. '{k' → logprob: -17.2500057220459
    9. ' k' → logprob: -17.3750057220459
    10. 'к' → logprob: -17.6250057220459

Token 354: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6582508087158203
    2. '       ' → logprob: -0.7832508087158203
    3. ':' → logprob: -3.7832508087158203
    4. '   ' → logprob: -6.15825080871582
    5. 'if' → logprob: -9.15825080871582
    6. ' if' → logprob: -9.15825080871582
    7. '):
' → logprob: -10.15825080871582
    8. '=' → logprob: -10.28325080871582
    9. '	   ' → logprob: -10.40825080871582
    10. '[' → logprob: -10.78325080871582

Token 355: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01177346333861351
    2. ' if' → logprob: -4.886773586273193
    3. 'if' → logprob: -5.511773586273193
    4. '   ' → logprob: -9.511773109436035
    5. '	   ' → logprob: -11.261773109436035
    6. 'CT' → logprob: -11.761773109436035
    7. '           ' → logprob: -11.761773109436035
    8. 'ct' → logprob: -12.386773109436035
    9. '	' → logprob: -12.636773109436035
    10. '	if' → logprob: -12.886773109436035

Token 356: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04338119551539421
    2. 'CT' → logprob: -3.7933812141418457
    3. '           ' → logprob: -4.418381214141846
    4. '       ' → logprob: -5.418381214141846
    5. ' if' → logprob: -6.043381214141846
    6. '   ' → logprob: -7.043381214141846
    7. 'ct' → logprob: -8.918380737304688
    8. ' CT' → logprob: -9.793380737304688
    9. ' ' → logprob: -12.043380737304688
    10. '               ' → logprob: -13.293380737304688

Token 357: ' dk' (ID: 88261)
  Prédit: 'dk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dk' → logprob: -0.009544049389660358
    2. ' dk' → logprob: -4.7595438957214355
    3. 'ct' → logprob: -7.2595438957214355
    4. '   ' → logprob: -9.259544372558594
    5. 'CT' → logprob: -9.884544372558594
    6. 'd' → logprob: -10.384544372558594
    7. ' CT' → logprob: -11.509544372558594
    8. ' ' → logprob: -11.759544372558594
    9. 'dj' → logprob: -12.384544372558594
    10. 'ck' → logprob: -12.384544372558594

Token 358: ' <' (ID: 464)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14271266758441925
    2. 'in' → logprob: -2.0177125930786133
    3. '==' → logprob: -11.517712593078613
    4. '<' → logprob: -11.892712593078613
    5. 'd' → logprob: -11.892712593078613
    6. ' ' → logprob: -12.642712593078613
    7. ' ==' → logprob: -12.892712593078613
    8. '<|end|>' → logprob: -13.267712593078613
    9. ' <' → logprob: -13.767712593078613
    10. ' d' → logprob: -13.892712593078613

Token 359: ' k' (ID: 372)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.021342497318983078
    2. 'k' → logprob: -4.8963422775268555
    3. 'dk' → logprob: -5.0213422775268555
    4. ' d' → logprob: -5.1463422775268555
    5. 'ct' → logprob: -7.1463422775268555
    6. ' k' → logprob: -8.896342277526855
    7. ' dk' → logprob: -9.396342277526855
    8. ' ' → logprob: -10.021342277526855
    9. '1' → logprob: -10.271342277526855
    10. '=' → logprob: -10.521342277526855

Token 360: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.05720595270395279
    2. ':' → logprob: -3.68220591545105
    3. '           ' → logprob: -4.182206153869629
    4. ' and' → logprob: -4.557206153869629
    5. '       ' → logprob: -6.057206153869629
    6. 'and' → logprob: -6.182206153869629
    7. ' :
' → logprob: -9.182206153869629
    8. '):
' → logprob: -10.307206153869629
    9. '   ' → logprob: -10.432206153869629
    10. ':
' → logprob: -10.557206153869629

Token 361: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00024643904180265963
    2. 'CT' → logprob: -9.000246047973633
    3. 'ct' → logprob: -9.875246047973633
    4. '       ' → logprob: -10.125246047973633
    5. ' and' → logprob: -11.875246047973633
    6. '               ' → logprob: -11.875246047973633
    7. ' CT' → logprob: -12.000246047973633
    8. 'and' → logprob: -12.500246047973633
    9. '   ' → logprob: -13.125246047973633
    10. '	       ' → logprob: -13.250246047973633

Token 362: ' ct' (ID: 40541)
  Prédit: 'CT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CT' → logprob: -0.37769636511802673
    2. '               ' → logprob: -1.3776963949203491
    3. ' CT' → logprob: -3.2526962757110596
    4. '           ' → logprob: -3.8776962757110596
    5. 'ct' (adapté à ' ct') → logprob: -6.002696514129639
    6. '   ' → logprob: -8.25269603729248
    7. '_CT' → logprob: -9.50269603729248
    8. '       ' → logprob: -10.37769603729248
    9. ' ' → logprob: -10.37769603729248
    10. 'if' → logprob: -10.50269603729248

Token 363: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.011271221563220024
    2. ' -=' → logprob: -4.511270999908447
    3. '-' → logprob: -8.511271476745605
    4. '=' → logprob: -11.261271476745605
    5. '   ' → logprob: -12.136271476745605
    6. '+=' → logprob: -12.761271476745605
    7. '       ' → logprob: -15.136271476745605
    8. ' -' → logprob: -15.261271476745605
    9. '           ' → logprob: -15.636271476745605
    10. '    ' → logprob: -16.13627052307129

Token 364: ' CT' (ID: 24286)
  Prédit: 'CT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CT' → logprob: -6.704273118884885e-07
    2. 'ct' → logprob: -14.875000953674316
    3. '   ' → logprob: -15.625000953674316
    4. ' CT' → logprob: -16.0
    5. '_CT' → logprob: -18.125
    6. 'CTL' → logprob: -18.5
    7. '       ' → logprob: -20.0
    8. '           ' → logprob: -20.5
    9. 'C' → logprob: -20.625
    10. '	' → logprob: -20.75

Token 365: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.913265239447355e-05
    2. '[d' → logprob: -9.750099182128906
    3. '[(' → logprob: -10.375099182128906
    4. '[k' → logprob: -12.125099182128906
    5. 'dk' → logprob: -13.125099182128906
    6. '[
' → logprob: -14.125099182128906
    7. '[df' → logprob: -14.625099182128906
    8. ' [' → logprob: -15.250099182128906
    9. '   ' → logprob: -15.750099182128906
    10. '[[' → logprob: -16.375099182128906

Token 366: 'dk' (ID: 11963)
  Prédit: 'dk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dk' → logprob: -0.0003078142472077161
    2. '[' → logprob: -8.7503080368042
    3. 'd' → logprob: -9.5003080368042
    4. ' dk' → logprob: -9.8753080368042
    5. '(d' → logprob: -11.2503080368042
    6. '(' → logprob: -13.0003080368042
    7. '[d' → logprob: -13.3753080368042
    8. '	d' → logprob: -13.7503080368042
    9. ']' → logprob: -14.1253080368042
    10. ''d' → logprob: -14.2503080368042

Token 367: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00031532408320344985
    2. ' ]' → logprob: -8.50031566619873
    3. ']
' → logprob: -9.12531566619873
    4. 'd' → logprob: -13.87531566619873
    5. ']

' → logprob: -14.62531566619873
    6. ']
' → logprob: -14.87531566619873
    7. '   ' → logprob: -14.87531566619873
    8. '       ' → logprob: -15.50031566619873
    9. '[' → logprob: -16.250314712524414
    10. ']*' → logprob: -16.375314712524414

Token 368: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01670960709452629
    2. 'CT' → logprob: -4.266709804534912
    3. ' CT' → logprob: -6.516709804534912
    4. '    
' → logprob: -7.141709804534912
    5. '
' → logprob: -9.891709327697754
    6. '  
' → logprob: -10.016709327697754
    7. ' 
' → logprob: -10.641709327697754
    8. ')' → logprob: -10.766709327697754
    9. '       ' → logprob: -11.016709327697754
    10. ' ' → logprob: -11.016709327697754

Token 369: ' CT' (ID: 24286)
  Prédit: 'CT'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CT' (adapté à ' CT') → logprob: -0.254375696182251
    2. '   ' → logprob: -1.504375696182251
    3. '	' → logprob: -6.379375457763672
    4. ' CT' → logprob: -7.254375457763672
    5. '_CT' → logprob: -11.129375457763672
    6. 'CTL' → logprob: -11.754375457763672
    7. '  ' → logprob: -12.504375457763672
    8. '    
' → logprob: -12.504375457763672
    9. ' ' → logprob: -12.879375457763672
    10. '	ct' → logprob: -13.504375457763672

Token 370: '[k' (ID: 14298)
  Prédit: '[d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -1.9862216504407115e-05
    2. '[' → logprob: -10.875020027160645
    3. '[k' → logprob: -14.250020027160645
    4. '\[' → logprob: -16.500019073486328
    5. 'd' → logprob: -16.750019073486328
    6. ' [' → logprob: -17.750019073486328
    7. '[s' → logprob: -17.875019073486328
    8. '[df' → logprob: -18.125019073486328
    9. '[D' → logprob: -18.250019073486328
    10. '[
' → logprob: -18.250019073486328

Token 371: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001072823186405003
    2. ']=' → logprob: -7.001072883605957
    3. ']+=' → logprob: -9.376072883605957
    4. ' ]' → logprob: -9.501072883605957
    5. ']+' → logprob: -13.626072883605957
    6. ')]' → logprob: -15.376072883605957
    7. ']
' → logprob: -16.37607192993164
    8. '=' → logprob: -16.50107192993164
    9. '])' → logprob: -16.62607192993164
    10. '()]' → logprob: -17.50107192993164

Token 372: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.030110519379377365
    2. ' =' → logprob: -3.5301105976104736
    3. '+=' → logprob: -8.155110359191895
    4. ' +=' → logprob: -9.530110359191895
    5. '.=' → logprob: -16.90511131286621
    6. '=k' → logprob: -17.90511131286621
    7. '＝' → logprob: -18.28011131286621
    8. ')=' → logprob: -18.90511131286621
    9. '=int' → logprob: -18.90511131286621
    10. ']+=' → logprob: -18.90511131286621

Token 373: ' ct' (ID: 40541)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -7.107425062713446e-06
    2. 'max' → logprob: -12.000006675720215
    3. ' ct' → logprob: -14.000006675720215
    4. '	ct' → logprob: -17.87500762939453
    5. '(ct' → logprob: -18.25000762939453
    6. 'cnt' → logprob: -18.62500762939453
    7. 'cts' → logprob: -18.75000762939453
    8. ' max' → logprob: -20.12500762939453
    9. 'ctl' → logprob: -20.37500762939453
    10. 'cta' → logprob: -20.50000762939453

Token 374: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 375: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0031025409698486
    2. '<|end|>' → logprob: -1.2531025409698486
    3. 'for' → logprob: -1.6281025409698486
    4. ')' → logprob: -2.3781025409698486
    5. 'ans' → logprob: -3.3781025409698486
    6. '#' → logprob: -5.0031023025512695
    7. '...' → logprob: -5.6281023025512695
    8. 'return' → logprob: -5.8781023025512695
    9. '```' → logprob: -6.1281023025512695
    10. '<|end|>' → logprob: -6.6281023025512695

Token 376: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28495755791664124
    2. 'ans' → logprob: -1.9099575281143188
    3. 'for' → logprob: -2.5349576473236084
    4. ' ans' → logprob: -4.909957408905029
    5. ' for' → logprob: -5.409957408905029
    6. '(ans' → logprob: -6.034957408905029
    7. ' )' → logprob: -7.034957408905029
    8. ']' → logprob: -7.034957408905029
    9. '<|end|>' → logprob: -7.409957408905029
    10. 'print' → logprob: -7.659957408905029

Token 377: ' L' (ID: 451)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.02022464945912361
    2. ' ans' → logprob: -4.020224571228027
    3. '   ' → logprob: -7.020224571228027
    4. 'if' → logprob: -7.145224571228027
    5. 'for' → logprob: -8.270224571228027
    6. '(ans' → logprob: -10.270224571228027
    7. ' if' → logprob: -10.895224571228027
    8. ' for' → logprob: -11.020224571228027
    9. '	ans' → logprob: -11.020224571228027
    10. ')' → logprob: -11.145224571228027

Token 378: ''auteur' (ID: 128474)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3212922513484955
    2. ' ans' → logprob: -2.3212921619415283
    3. 'for' → logprob: -2.8212921619415283
    4. 'if' → logprob: -3.5712921619415283
    5. 'f' → logprob: -3.8212921619415283
    6. 'a' → logprob: -4.071292400360107
    7. '   ' → logprob: -4.696292400360107
    8. 'en' → logprob: -4.696292400360107
    9. ' for' → logprob: -4.821292400360107
    10. 'e' → logprob: -5.321292400360107

Token 379: ' fait' (ID: 7473)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.47146081924438477
    2. 'ans' → logprob: -1.2214608192443848
    3. ' +=' → logprob: -2.7214608192443848
    4. '=' → logprob: -5.846460819244385
    5. 'if' → logprob: -5.971460819244385
    6. ':' → logprob: -6.346460819244385
    7. '
' → logprob: -6.971460819244385
    8. ' ans' → logprob: -6.971460819244385
    9. '%=' → logprob: -7.096460819244385
    10. '%' → logprob: -7.471460819244385

Token 380: ' (' (ID: 350)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.14757508039474487
    2. ' ans' → logprob: -2.1475751399993896
    3. ' ' → logprob: -4.8975749015808105
    4. '  ' → logprob: -5.8975749015808105
    5. '   ' → logprob: -6.5225749015808105
    6. '	ans' → logprob: -6.5225749015808105
    7. 'pass' → logprob: -6.6475749015808105
    8. '(ans' → logprob: -6.8975749015808105
    9. 'une' → logprob: -7.3975749015808105
    10. 'print' → logprob: -7.7725749015808105

Token 381: 'je' (ID: 1587)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.15376631915569305
    2. ' ans' → logprob: -2.028766393661499
    3. '   ' → logprob: -6.27876615524292
    4. 'for' → logprob: -6.27876615524292
    5. '(ans' → logprob: -6.52876615524292
    6. 'if' → logprob: -6.65376615524292
    7. ')' → logprob: -6.77876615524292
    8. ' for' → logprob: -7.15376615524292
    9. 'print' → logprob: -7.27876615524292
    10. ' ' → logprob: -8.278766632080078

Token 382: ' crois' (ID: 65485)
  Prédit: ' pense'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pense' → logprob: -1.4737645387649536
    2. 'n' → logprob: -1.8487645387649536
    3. ' n' → logprob: -1.8487645387649536
    4. 's' → logprob: -1.8487645387649536
    5. 'ans' → logprob: -2.473764419555664
    6. ')' → logprob: -2.973764419555664
    7. ' continue' → logprob: -3.473764419555664
    8. 'continue' → logprob: -3.848764419555664
    9. '=' → logprob: -4.848764419555664
    10. ' ' → logprob: -5.098764419555664

Token 383: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20638281106948853
    2. ' +=' → logprob: -3.2063827514648438
    3. ' )' → logprob: -3.2063827514648438
    4. ' ans' → logprob: -3.2063827514648438
    5. '):' → logprob: -3.3313827514648438
    6. '   ' → logprob: -5.331382751464844
    7. 'ans' → logprob: -5.456382751464844
    8. ':' → logprob: -5.581382751464844
    9. ' ' → logprob: -6.081382751464844
    10. ' =' → logprob: -6.831382751464844

Token 384: ' une' (ID: 2463)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.7412254810333252
    2. ' ans' → logprob: -0.7412254810333252
    3. '   ' → logprob: -3.116225481033325
    4. ' if' → logprob: -6.991225242614746
    5. '	ans' → logprob: -7.616225242614746
    6. 'if' → logprob: -7.866225242614746
    7. ' for' → logprob: -7.866225242614746
    8. '(ans' → logprob: -8.616225242614746
    9. '       ' → logprob: -9.741225242614746
    10. '```' → logprob: -9.741225242614746

Token 385: ' correction' (ID: 43745)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.8681224584579468
    2. 'continue' → logprob: -2.6181225776672363
    3. 'mod' → logprob: -2.6181225776672363
    4. 's' → logprob: -2.8681225776672363
    5. 'for' → logprob: -2.9931225776672363
    6. 'tent' → logprob: -3.2431225776672363
    7. 'pass' → logprob: -3.3681225776672363
    8. 'ligne' → logprob: -3.3681225776672363
    9. 'print' → logprob: -3.6181225776672363
    10. 'if' → logprob: -3.8681225776672363

Token 386: ' ici' (ID: 27994)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6533131003379822
    2. 'ans' → logprob: -1.028313159942627
    3. ' ans' → logprob: -2.403313159942627
    4. ' if' → logprob: -4.528313159942627
    5. ' for' → logprob: -4.903313159942627
    6. '	ans' → logprob: -5.653313159942627
    7. 'if' → logprob: -5.903313159942627
    8. '
' → logprob: -6.153313159942627
    9. '    
' → logprob: -6.653313159942627
    10. '(ans' → logprob: -6.903313159942627

Token 387: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03911152109503746
    2. ' ans' → logprob: -3.914111614227295
    3. 'ans' → logprob: -4.039111614227295
    4. '	ans' → logprob: -8.039111137390137
    5. ' for' → logprob: -8.789111137390137
    6. ' if' → logprob: -9.164111137390137
    7. '
' → logprob: -10.164111137390137
    8. '    
' → logprob: -10.414111137390137
    9. '       ' → logprob: -10.539111137390137
    10. '  ' → logprob: -10.664111137390137

Token 388: ' -' (ID: 533)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.08444580435752869
    2. ' ans' → logprob: -2.7094457149505615
    3. '   ' → logprob: -4.459445953369141
    4. 'if' → logprob: -6.459445953369141
    5. ' if' → logprob: -7.334445953369141
    6. '	ans' → logprob: -8.33444595336914
    7. '#' → logprob: -9.33444595336914
    8. '(ans' → logprob: -9.58444595336914
    9. 'for' → logprob: -9.83444595336914
    10. '
' → logprob: -10.08444595336914

Token 389: '2' (ID: 17)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.5119595527648926
    2. 'ans' → logprob: -1.0119595527648926
    3. '   ' → logprob: -4.761959552764893
    4. ' for' → logprob: -4.886959552764893
    5. '(ans' → logprob: -5.136959552764893
    6. 'ct' → logprob: -6.011959552764893
    7. 'for' → logprob: -6.136959552764893
    8. '1' → logprob: -6.261959552764893
    9. ' if' → logprob: -6.261959552764893
    10. ' ' → logprob: -7.011959552764893

Token 390: '*(' (ID: 14793)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6345579624176025
    2. ' ans' → logprob: -0.8845579624176025
    3. '   ' → logprob: -3.0095579624176025
    4. '	ans' → logprob: -5.759557723999023
    5. '
' → logprob: -6.009557723999023
    6. '(ans' → logprob: -7.884557723999023
    7. '-' → logprob: -8.259557723999023
    8. ' ' → logprob: -8.509557723999023
    9. ')' → logprob: -8.759557723999023
    10. ' -' → logprob: -8.884557723999023

Token 391: 'n' (ID: 77)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.25064805150032043
    2. 'CT' → logprob: -2.125648021697998
    3. 'k' → logprob: -3.250648021697998
    4. 'ans' → logprob: -4.375648021697998
    5. 'n' → logprob: -4.625648021697998
    6. '(ct' → logprob: -4.875648021697998
    7. ' ct' → logprob: -5.000648021697998
    8. '(' → logprob: -5.125648021697998
    9. 'd' → logprob: -5.125648021697998
    10. '(n' → logprob: -5.625648021697998

Token 392: '-k' (ID: 10897)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.4438318610191345
    2. ' *' → logprob: -1.8188319206237793
    3. ' -' → logprob: -2.3188319206237793
    4. '-' → logprob: -2.9438319206237793
    5. ')' → logprob: -3.5688319206237793
    6. ' ' → logprob: -5.318831920623779
    7. '+' → logprob: -5.568831920623779
    8. '   ' → logprob: -6.443831920623779
    9. ' +' → logprob: -6.443831920623779
    10. ')*' → logprob: -6.818831920623779

Token 393: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017520057037472725
    2. ')*' → logprob: -5.142519950866699
    3. ' )' → logprob: -5.642519950866699
    4. ')
' → logprob: -5.767519950866699
    5. '   ' → logprob: -5.767519950866699
    6. '+' → logprob: -7.142519950866699
    7. '))' → logprob: -8.1425199508667
    8. '*' → logprob: -8.6425199508667
    9. ' +' → logprob: -9.1425199508667
    10. ' ' → logprob: -9.5175199508667

Token 394: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5715381503105164
    2. 'ans' → logprob: -1.1965382099151611
    3. '
' → logprob: -2.571538209915161
    4. ' ans' → logprob: -3.071538209915161
    5. ')' → logprob: -5.696537971496582
    6. ')
' → logprob: -5.946537971496582
    7. '	ans' → logprob: -6.571537971496582
    8. '    
' → logprob: -6.821537971496582
    9. '(ans' → logprob: -8.071537971496582
    10. '
' → logprob: -8.821537971496582

Token 395: ' chaque' (ID: 21194)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.6333050727844238
    2. 'd' → logprob: -0.8833050727844238
    3. 'ans' → logprob: -3.883305072784424
    4. ' ans' → logprob: -4.258305072784424
    5. ' k' → logprob: -4.883305072784424
    6. ' ct' → logprob: -5.633305072784424
    7. 'ct' → logprob: -6.008305072784424
    8. 'k' → logprob: -6.258305072784424
    9. ' ' → logprob: -6.883305072784424
    10. ' some' → logprob: -7.008305072784424

Token 396: ' truc' (ID: 58342)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.8263289928436279
    2. 'ans' → logprob: -0.9513289928436279
    3. '   ' → logprob: -2.576328992843628
    4. 'd' → logprob: -3.451328992843628
    5. ' d' → logprob: -4.576329231262207
    6. ' if' → logprob: -4.701329231262207
    7. 'k' → logprob: -4.701329231262207
    8. ' for' → logprob: -4.826329231262207
    9. 'for' → logprob: -5.201329231262207
    10. ')' → logprob: -5.326329231262207

Token 397: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1389797329902649
    2. 'ans' → logprob: -2.63897967338562
    3. ' ans' → logprob: -3.38897967338562
    4. '
' → logprob: -4.763979911804199
    5. ')' → logprob: -5.763979911804199
    6. ' if' → logprob: -6.013979911804199
    7. '	ans' → logprob: -6.513979911804199
    8. 'if' → logprob: -6.513979911804199
    9. ' for' → logprob: -6.638979911804199
    10. '    
' → logprob: -6.763979911804199

Token 398: ' ce' (ID: 2357)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.4367468357086182
    2. ' k' → logprob: -1.6867468357086182
    3. 'D' → logprob: -2.436746835708618
    4. ' range' → logprob: -2.561746835708618
    5. 'CT' → logprob: -2.561746835708618
    6. ' CT' → logprob: -2.811746835708618
    7. 'd' → logprob: -2.936746835708618
    8. 'ct' → logprob: -2.936746835708618
    9. ' D' → logprob: -3.061746835708618
    10. 'range' → logprob: -3.186746835708618

Token 399: ' genre' (ID: 20910)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.42528921365737915
    2. 'D' → logprob: -1.6752891540527344
    3. 'range' → logprob: -3.1752891540527344
    4. 'd' → logprob: -3.4252891540527344
    5. ' for' → logprob: -3.5502891540527344
    6. ' range' → logprob: -3.6752891540527344
    7. 'CT' → logprob: -4.425289154052734
    8. ' D' → logprob: -4.800289154052734
    9. 'div' → logprob: -6.175289154052734
    10. 'k' → logprob: -6.425289154052734

Token 400: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09086091816425323
    2. 'ans' → logprob: -2.7158608436584473
    3. ' ans' → logprob: -4.340860843658447
    4. '
' → logprob: -5.090860843658447
    5. '	ans' → logprob: -7.590860843658447
    6. '    
' → logprob: -8.965861320495605
    7. ')' → logprob: -9.215861320495605
    8. ' for' → logprob: -9.340861320495605
    9. ' if' → logprob: -9.465861320495605
    10. 'if' → logprob: -9.465861320495605

Token 401: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.0418603420257568
    2. '   ' → logprob: -1.1668603420257568
    3. ')' → logprob: -1.4168603420257568
    4. ' ans' → logprob: -3.541860342025757
    5. '-' → logprob: -4.541860580444336
    6. 'if' → logprob: -4.916860580444336
    7. '
' → logprob: -4.916860580444336
    8. ' if' → logprob: -5.041860580444336
    9. '	ans' → logprob: -5.291860580444336
    10. ' -' → logprob: -5.916860580444336

Token 402: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0015267637791112065
    2. ' ans' → logprob: -7.001526832580566
    3. 'if' → logprob: -7.626526832580566
    4. '   ' → logprob: -9.126526832580566
    5. '	ans' → logprob: -11.876526832580566
    6. 'for' → logprob: -12.251526832580566
    7. ' if' → logprob: -12.751526832580566
    8. '
' → logprob: -13.126526832580566
    9. '(ans' → logprob: -13.876526832580566
    10. 'answer' → logprob: -15.126526832580566

Token 403: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.2583625614643097
    2. ' -=' → logprob: -1.5083625316619873
    3. '-' → logprob: -5.633362770080566
    4. '+=' → logprob: -6.008362770080566
    5. ' +=' → logprob: -8.633362770080566
    6. '=' → logprob: -8.758362770080566
    7. ' =' → logprob: -10.883362770080566
    8. ' -' → logprob: -11.258362770080566
    9. '+=(' → logprob: -12.258362770080566
    10. '%=' → logprob: -12.883362770080566

Token 404: ' ct' (ID: 40541)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0013774950057268143
    2. ' ' → logprob: -7.126377582550049
    3. '(' → logprob: -7.501377582550049
    4. 'ct' → logprob: -11.50137710571289
    5. ' (' → logprob: -12.25137710571289
    6. '   ' → logprob: -12.50137710571289
    7. '(ct' → logprob: -13.75137710571289
    8. 'CT' → logprob: -15.00137710571289
    9. '  ' → logprob: -15.75137710571289
    10. '
' → logprob: -16.87637710571289

Token 405: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.20154890418052673
    2. '*' → logprob: -1.7015489339828491
    3. '*(' → logprob: -8.95154857635498
    4. ' *
' → logprob: -13.07654857635498
    5. ' ' → logprob: -13.95154857635498
    6. '*
' → logprob: -13.95154857635498
    7. ' ' → logprob: -14.82654857635498
    8. '   ' → logprob: -14.95154857635498
    9. '**' → logprob: -15.45154857635498
    10. '
' → logprob: -15.45154857635498

Token 406: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4022413194179535
    2. '(' → logprob: -1.2772413492202759
    3. '(n' → logprob: -3.6522412300109863
    4. '(d' → logprob: -4.027241230010986
    5. 'd' → logprob: -4.902241230010986
    6. ' (' → logprob: -7.652241230010986
    7. '(k' → logprob: -8.527241706848145
    8. ' ' → logprob: -8.652241706848145
    9. '((' → logprob: -9.152241706848145
    10. '   ' → logprob: -9.402241706848145

Token 407: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6837146282196045
    2. '2' → logprob: -1.0587146282196045
    3. '(n' → logprob: -2.4337146282196045
    4. 'd' → logprob: -3.3087146282196045
    5. '(d' → logprob: -3.8087146282196045
    6. '(k' → logprob: -7.308714866638184
    7. ' (' → logprob: -7.933714866638184
    8. '((' → logprob: -8.433714866638184
    9. '4' → logprob: -8.558714866638184
    10. '(mod' → logprob: -9.308714866638184

Token 408: ' *' (ID: 425)
  Prédit: '*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.26683858036994934
    2. '*' → logprob: -2.016838550567627
    3. ' *' → logprob: -2.766838550567627
    4. '(n' → logprob: -3.266838550567627
    5. '*n' → logprob: -9.766839027404785
    6. ' *(' → logprob: -10.141839027404785
    7. ' (' → logprob: -11.141839027404785
    8. '[n' → logprob: -12.016839027404785
    9. '*d' → logprob: -12.016839027404785
    10. '   ' → logprob: -12.516839027404785

Token 409: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.38689038157463074
    2. ' (' → logprob: -1.1368904113769531
    3. '(' → logprob: -11.261890411376953
    4. ' ' → logprob: -13.011890411376953
    5. '   ' → logprob: -13.261890411376953
    6. '*(' → logprob: -14.011890411376953
    7. '  ' → logprob: -14.136890411376953
    8. ' 
' → logprob: -15.761890411376953
    9. '(
' → logprob: -15.886890411376953
    10. '
' → logprob: -16.136890411376953

Token 410: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6592104434967041
    2. 'n' → logprob: -1.409210443496704
    3. ' (' → logprob: -1.534210443496704
    4. ' n' → logprob: -3.784210443496704
    5. '(' → logprob: -11.034210205078125
    6. ' ' → logprob: -11.534210205078125
    7. ')n' → logprob: -11.784210205078125
    8. '   ' → logprob: -12.409210205078125
    9. ')' → logprob: -12.409210205078125
    10. '(
' → logprob: -12.534210205078125

Token 411: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1723572462797165
    2. ' -' → logprob: -1.922357201576233
    3. '-k' → logprob: -4.422357082366943
    4. '-d' → logprob: -9.922357559204102
    5. '-n' → logprob: -12.672357559204102
    6. ' ' → logprob: -14.547357559204102
    7. '-
' → logprob: -14.922357559204102
    8. '   ' → logprob: -15.547357559204102
    9. '−' → logprob: -16.5473575592041
    10. '
' → logprob: -16.7973575592041

Token 412: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.005235190503299236
    2. ' k' → logprob: -5.255235195159912
    3. 'd' → logprob: -13.630234718322754
    4. '	k' → logprob: -16.38023567199707
    5. ' d' → logprob: -17.00523567199707
    6. '   ' → logprob: -17.50523567199707
    7. '_k' → logprob: -18.13023567199707
    8. ' ' → logprob: -18.88023567199707
    9. '  ' → logprob: -19.50523567199707
    10. ')' → logprob: -19.63023567199707

Token 413: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001742531661875546
    2. ')
' → logprob: -6.376742362976074
    3. ' )' → logprob: -10.751742362976074
    4. ')
' → logprob: -11.251742362976074
    5. ')\' → logprob: -13.126742362976074
    6. ')

' → logprob: -13.751742362976074
    7. '+' → logprob: -14.501742362976074
    8. '))' → logprob: -14.501742362976074
    9. '   ' → logprob: -15.001742362976074
    10. ')*' → logprob: -15.501742362976074

Token 414: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 415: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 416: ' allez' (ID: 72134)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 417: ' savoir' (ID: 22835)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.906968891620636
    2. 'print' → logprob: -1.1569688320159912
    3. '<|end|>' → logprob: -1.9069688320159912
    4. '
' → logprob: -2.531968832015991
    5. 'pass' → logprob: -3.531968832015991
    6. ' continue' → logprob: -4.78196907043457
    7. 'return' → logprob: -5.90696907043457
    8. ')' → logprob: -6.15696907043457
    9. 'n' → logprob: -6.28196907043457
    10. 'ans' → logprob: -6.40696907043457

Token 418: ' pourquoi' (ID: 39224)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 419: '!

' (ID: 1703)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6796266436576843
    2. '<|end|>' → logprob: -1.054626703262329
    3. '
' → logprob: -2.054626703262329
    4. ' ' → logprob: -4.80462646484375
    5. ')' → logprob: -5.55462646484375
    6. ' 
' → logprob: -5.92962646484375
    7. '```' → logprob: -7.67962646484375
    8. '\' → logprob: -8.30462646484375
    9. '<|end|>' → logprob: -8.42962646484375
    10. '\r' → logprob: -8.55462646484375

Token 420: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 421: ' Cro' (ID: 25186)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008097242563962936
    2. ' print' → logprob: -4.883097171783447
    3. ')' → logprob: -8.633097648620605
    4. '\n' → logprob: -8.883097648620605
    5. '
' → logprob: -9.008097648620605
    6. '```' → logprob: -10.383097648620605
    7. '.print' → logprob: -12.758097648620605
    8. '#print' → logprob: -12.883097648620605
    9. 'return' → logprob: -12.883097648620605
    10. '%' → logprob: -13.633097648620605

Token 422: 'isons' (ID: 47841)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6440795660018921
    2. 'print' → logprob: -0.8940795660018921
    3. 'pt' → logprob: -2.7690796852111816
    4. 't' → logprob: -7.269079685211182
    5. 'pit' → logprob: -7.644079685211182
    6. 'd' → logprob: -7.894079685211182
    7. 'ut' → logprob: -8.894079208374023
    8. 'n' → logprob: -9.019079208374023
    9. 'pp' → logprob: -9.019079208374023
    10. 'mp' → logprob: -9.394079208374023

Token 423: ' les' (ID: 1341)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00045700959162786603
    2. ' print' → logprob: -7.875456809997559
    3. '```' → logprob: -10.750456809997559
    4. ')' → logprob: -11.125456809997559
    5. 'for' → logprob: -11.500456809997559
    6. 'return' → logprob: -11.625456809997559
    7. '#' → logprob: -12.125456809997559
    8. 'ans' → logprob: -12.250456809997559
    9. 'if' → logprob: -13.250456809997559
    10. '
' → logprob: -13.500456809997559

Token 424: ' doigts' (ID: 133066)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00020020268857479095
    2. ' print' → logprob: -8.625200271606445
    3. 'assert' → logprob: -12.125200271606445
    4. 'pr' → logprob: -12.750200271606445
    5. 'ans' → logprob: -13.125200271606445
    6. '```' → logprob: -13.125200271606445
    7. '#' → logprob: -13.250200271606445
    8. 'for' → logprob: -13.250200271606445
    9. '#print' → logprob: -13.750200271606445
    10. 'return' → logprob: -13.875200271606445

Token 425: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.5716304410016164e-05
    2. ' print' → logprob: -10.250035285949707
    3. ')' → logprob: -15.375035285949707
    4. '
' → logprob: -16.875036239624023
    5. '#print' → logprob: -17.875036239624023
    6. '```' → logprob: -18.000036239624023
    7. '<|end|>' → logprob: -18.375036239624023
    8. '(print' → logprob: -19.500036239624023
    9. '.print' → logprob: -19.625036239624023
    10. '#' → logprob: -20.500036239624023

Token 426: ' c' (ID: 274)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.935296834039036e-06
    2. ' print' → logprob: -12.75000286102295
    3. '
' → logprob: -20.625003814697266
    4. '```' → logprob: -20.875003814697266
    5. '#print' → logprob: -21.125003814697266
    6. 'ans' → logprob: -21.250003814697266
    7. 'return' → logprob: -22.750003814697266
    8. ')' → logprob: -23.000003814697266
    9. 'Print' → logprob: -23.375003814697266
    10. 'assert' → logprob: -23.500003814697266

Token 427: ''est' (ID: 6616)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00031389365904033184
    2. ' print' → logprob: -8.125313758850098
    3. 'for' → logprob: -12.750313758850098
    4. 'ans' → logprob: -12.875313758850098
    5. 'r' → logprob: -13.375313758850098
    6. '(print' → logprob: -13.375313758850098
    7. 'ont' → logprob: -13.500313758850098
    8. 'pr' → logprob: -13.875313758850098
    9. '.print' → logprob: -14.125313758850098
    10. '#print' → logprob: -14.250313758850098

Token 428: ' sûrement' (ID: 158793)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0008650107774883509
    2. ' print' → logprob: -7.5008649826049805
    3. 'ans' → logprob: -8.12586498260498
    4. 'pr' → logprob: -11.62586498260498
    5. ' ans' → logprob: -12.37586498260498
    6. 'prin' → logprob: -14.12586498260498
    7. '(ans' → logprob: -14.12586498260498
    8. 'pri' → logprob: -14.62586498260498
    9. 'prit' → logprob: -15.50086498260498
    10. 'p' → logprob: -15.62586498260498

Token 429: ' modulo' (ID: 112372)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.534558552724775e-05
    2. 'ans' → logprob: -11.375025749206543
    3. ' print' → logprob: -11.625025749206543
    4. 'correct' → logprob: -12.500025749206543
    5. 'return' → logprob: -14.750025749206543
    6. 'final' → logprob: -15.625025749206543
    7. '```' → logprob: -16.000024795532227
    8. '   ' → logprob: -16.375024795532227
    9. '(ans' → logprob: -16.875024795532227
    10. 'done' → logprob: -17.000024795532227

Token 430: ' le' (ID: 505)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.33414989709854126
    2. ' ans' → logprob: -1.4591498374938965
    3. '
' → logprob: -3.9591498374938965
    4. '\n' → logprob: -4.7091498374938965
    5. ' %=' → logprob: -4.8341498374938965
    6. '%' → logprob: -5.4591498374938965
    7. '(ans' → logprob: -5.8341498374938965
    8. 'mod' → logprob: -6.4591498374938965
    9. ' %' → logprob: -6.5841498374938965
    10. ' =' → logprob: -6.8341498374938965

Token 431: ' gros' (ID: 28636)
  Prédit: ' mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.2526398301124573
    2. 'mod' → logprob: -1.5026397705078125
    3. ' ' → logprob: -8.127639770507812
    4. '998' → logprob: -8.252639770507812
    5. ' ' → logprob: -10.377639770507812
    6. ' ans' → logprob: -10.502639770507812
    7. '(mod' → logprob: -10.752639770507812
    8. 'ans' → logprob: -11.002639770507812
    9. ' modulo' → logprob: -11.377639770507812
    10. ' code' → logprob: -12.252639770507812

Token 432: ' nombre' (ID: 9733)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.30613407492637634
    2. 'ans' → logprob: -1.9311341047286987
    3. ' ans' → logprob: -2.806133985519409
    4. '%' → logprob: -3.181133985519409
    5. '\n' → logprob: -4.931134223937988
    6. ' %' → logprob: -5.931134223937988
    7. ' print' → logprob: -6.056134223937988
    8. '(ans' → logprob: -6.306134223937988
    9. '%
' → logprob: -7.181134223937988
    10. ')' → logprob: -7.931134223937988

Token 433: ' habit' (ID: 13260)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4386293590068817
    2. 'ans' → logprob: -1.063629388809204
    3. '%' → logprob: -5.063629150390625
    4. ' ans' → logprob: -6.313629150390625
    5. '(ans' → logprob: -7.313629150390625
    6. '\n' → logprob: -8.313629150390625
    7. '%
' → logprob: -8.813629150390625
    8. ' print' → logprob: -8.938629150390625
    9. 'mod' → logprob: -9.188629150390625
    10. ')' → logprob: -9.438629150390625

Token 434: 'uel' (ID: 4619)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.26835644245147705
    2. ' mod' → logprob: -2.0183563232421875
    3. '%
' → logprob: -3.2683563232421875
    4. ')' → logprob: -4.2683563232421875
    5. ')
' → logprob: -4.2683563232421875
    6. '_mod' → logprob: -4.8933563232421875
    7. '%' → logprob: -5.1433563232421875
    8. ' %
' → logprob: -5.1433563232421875
    9. ' modulo' → logprob: -5.2683563232421875
    10. '.
' → logprob: -5.8933563232421875

Token 435: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0024826733861118555
    2. 'ans' → logprob: -6.002482891082764
    3. ' print' → logprob: -12.127482414245605
    4. '(ans' → logprob: -14.252482414245605
    5. '```' → logprob: -14.752482414245605
    6. ' ans' → logprob: -15.127482414245605
    7. 'answer' → logprob: -15.627482414245605
    8. 'return' → logprob: -17.502483367919922
    9. '#print' → logprob: -18.002483367919922
    10. '
' → logprob: -18.627483367919922

Token 436: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2519506812095642
    2. 'ans' → logprob: -1.501950740814209
    3. ' ans' → logprob: -11.25195026397705
    4. '(ans' → logprob: -12.50195026397705
    5. 'answer' → logprob: -13.00195026397705
    6. ' print' → logprob: -13.12695026397705
    7. '```' → logprob: -14.50195026397705
    8. '_ans' → logprob: -16.626951217651367
    9. 'return' → logprob: -17.251951217651367
    10. '	ans' → logprob: -17.626951217651367

Token 437: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0007665063603781164
    2. '(' → logprob: -7.250766277313232
    3. 'ans' → logprob: -10.25076675415039
    4. ' (' → logprob: -10.87576675415039
    5. '((' → logprob: -14.00076675415039
    6. ' ans' → logprob: -14.12576675415039
    7. '(f' → logprob: -14.87576675415039
    8. '('' → logprob: -16.37576675415039
    9. '(answer' → logprob: -16.50076675415039
    10. '	ans' → logprob: -16.62576675415039

Token 438: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.20166008174419403
    2. '%' → logprob: -1.7016600370407104
    3. ')' → logprob: -8.32666015625
    4. ')%' → logprob: -12.57666015625
    5. ' )' → logprob: -13.95166015625
    6. ' ' → logprob: -15.20166015625
    7. ' ' → logprob: -16.32666015625
    8. ' %)' → logprob: -16.70166015625
    9. '%n' → logprob: -17.20166015625
    10. '%m' → logprob: -17.82666015625

Token 439: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.018186701461672783
    2. ' mod' → logprob: -4.018186569213867
    3. '998' → logprob: -10.268186569213867
    4. '(mod' → logprob: -13.393186569213867
    5. ' ' → logprob: -14.893186569213867
    6. '	mod' → logprob: -16.018186569213867
    7. ' мод' → logprob: -18.393186569213867
    8. ' modul' → logprob: -18.518186569213867
    9. '_mod' → logprob: -18.518186569213867
    10. 'MOD' → logprob: -19.143186569213867

Token 440: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0031259057577699423
    2. '<|end|>' → logprob: -5.8781256675720215
    3. '%' → logprob: -8.62812614440918
    4. '#' → logprob: -10.00312614440918
    5. '```' → logprob: -10.37812614440918
    6. ' ' → logprob: -11.00312614440918
    7. '}' → logprob: -11.50312614440918
    8. '
' → logprob: -11.62812614440918
    9. ' )' → logprob: -12.00312614440918
    10. '<|end|>' → logprob: -12.62812614440918


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 438
Tokens correctement prédits (1ère position, stricte): 112
Tokens correctement prédits (1ère position, avec adaptation): 122
Tokens correctement prédits (top 10): 265
Précision stricte (1ère position): 25.57%
Précision adaptée (1ère position): 27.85%
Précision (top 10): 60.50%
================================================================================
