================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:32:27
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Bon ben, on démarre avec la saisie utilisateur classique...
N = int(input())
C = [int(x) for x in input().split()]
MOD = 1000000007  # je préfère pas les underscores mais bon

# Tableau des puissances de deux (modulo truc)
B = []
for i in range(N+1):
    if i == 0:
        B.append(1)
    else:
        # franchement, il doit y avoir une façon plus élégante
        B.append((B[-1]*2)%MOD)
        
# on trie la liste, normal, on verra pourquoi après
C.sort()

resultat = 0

# Le coeur du calcul, pas super clair au début mais bon
for k in range(1, N+1):
    coeff = ((N-k)*B[N-k-1] if N-k-1>=0 else 0) + B[N-k]
    resultat += C[k-1]*coeff*B[k-1]
    resultat = resultat % MOD  # pour éviter que ça déborde

resultat = (resultat * B[N]) % MOD

print(resultat)

# -- Fragments de vieilles tentatives ci-dessous (à moitié utiles?) --
#
#S = [0] * N  # cumul... je crois
#S[0] = C[0]
#for i in range(1, N):
#    S[i] = S[i-1] + C[i]
#
#ans2 = 0
#for j in range(1, N+1):
#    ans2 += S[j-1] * B[j-1]
#    #print(S[j-1] * B[j-1])
#
# ---
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Bon' (ID: 12658)
  → Token d'amorce (pas de prédiction)

Token 2: ' ben' (ID: 2974)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.053627002984285355
    2. '
' → logprob: -4.178627014160156
    3. '``' → logprob: -4.678627014160156
    4. '`' → logprob: -4.803627014160156
    5. ',' → logprob: -5.053627014160156
    6. '\n' → logprob: -5.553627014160156
    7. '#' → logprob: -5.553627014160156
    8. '\' → logprob: -6.803627014160156
    9. ':' → logprob: -7.303627014160156
    10. '!' → logprob: -7.303627014160156

Token 4: ' on' (ID: 402)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0729256197810173
    2. '```' → logprob: -3.822925567626953
    3. ' je' → logprob: -4.072925567626953
    4. '`' → logprob: -4.322925567626953
    5. ''' → logprob: -6.322925567626953
    6. '  ' → logprob: -6.572925567626953
    7. ' ```' → logprob: -6.697925567626953
    8. '\n' → logprob: -6.697925567626953
    9. '\' → logprob: -6.822925567626953
    10. ' \' → logprob: -6.822925567626953

Token 5: ' démar' (ID: 72663)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1327933073043823
    2. ' continue' → logprob: -1.1327933073043823
    3. ' a' → logprob: -2.757793426513672
    4. ' va' → logprob: -3.007793426513672
    5. 'continue' → logprob: -3.132793426513672
    6. ' ```' → logprob: -3.382793426513672
    7. '_' → logprob: -3.882793426513672
    8. ' y' → logprob: -3.882793426513672
    9. ' continu' → logprob: -3.882793426513672
    10. '```' → logprob: -4.132793426513672

Token 6: 're' (ID: 264)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.9673152565956116
    2. 'rage' → logprob: -1.3423151969909668
    3. 're' → logprob: -1.9673151969909668
    4. 'ra' → logprob: -2.092315196990967
    5. 'ral' → logprob: -2.967315196990967
    6. 'rait' → logprob: -4.467315196990967
    7. 'rant' → logprob: -4.467315196990967
    8. '```' → logprob: -4.842315196990967
    9. '#' → logprob: -5.467315196990967
    10. 'rr' → logprob: -5.467315196990967

Token 7: ' avec' (ID: 3937)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.18555092811584473
    2. '\' → logprob: -2.5605509281158447
    3. '```' → logprob: -3.0605509281158447
    4. '#' → logprob: -3.3105509281158447
    5. '
' → logprob: -5.310550689697266
    6. '``' → logprob: -6.560550689697266
    7. '`' → logprob: -6.685550689697266
    8. ':' → logprob: -8.435550689697266
    9. '\r' → logprob: -9.060550689697266
    10. ' 
' → logprob: -9.185550689697266

Token 8: ' la' (ID: 557)
  Prédit: ' #'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' #' → logprob: -0.912054181098938
    2. ' ' → logprob: -1.662054181098938
    3. '#' → logprob: -2.0370540618896484
    4. ' une' → logprob: -2.7870540618896484
    5. '```' → logprob: -2.9120540618896484
    6. ' un' → logprob: -3.4120540618896484
    7. 'une' → logprob: -3.9120540618896484
    8. ' ' → logprob: -3.9120540618896484
    9. ' la' → logprob: -4.287054061889648
    10. '`' → logprob: -4.287054061889648

Token 9: ' sais' (ID: 30010)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0118260383605957
    2. 'def' → logprob: -1.5118260383605957
    3. 'fonction' → logprob: -2.1368260383605957
    4. 'dé' → logprob: -3.5118260383605957
    5. '```' → logprob: -3.7618260383605957
    6. 'prem' → logprob: -3.8868260383605957
    7. 'suite' → logprob: -4.136826038360596
    8. 'import' → logprob: -4.386826038360596
    9. 'from' → logprob: -4.636826038360596
    10. ' première' → logprob: -4.636826038360596

Token 10: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.3666260838508606
    2. 's' → logprob: -1.7416260242462158
    3. 'i' → logprob: -2.366626024246216
    4. 'e' → logprob: -3.366626024246216
    5. '#' → logprob: -6.366626262664795
    6. 'sie' → logprob: -7.366626262664795
    7. '```' → logprob: -8.116625785827637
    8. 'ies' → logprob: -8.491625785827637
    9. 'is' → logprob: -8.991625785827637
    10. '\' → logprob: -9.366625785827637

Token 11: ' utilisateur' (ID: 115595)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0451774597167969
    2. 's' → logprob: -1.6701774597167969
    3. ' ' → logprob: -2.045177459716797
    4. 'user' → logprob: -2.045177459716797
    5. '_' → logprob: -2.420177459716797
    6. 'n' → logprob: -3.170177459716797
    7. '```' → logprob: -4.420177459716797
    8. 'u' → logprob: -4.795177459716797
    9. 'x' → logprob: -4.920177459716797
    10. '`' → logprob: -5.045177459716797

Token 12: ' classique' (ID: 76895)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.8051282167434692
    2. '_' → logprob: -1.5551282167434692
    3. '#' → logprob: -2.6801280975341797
    4. '\n' → logprob: -2.6801280975341797
    5. 'u' → logprob: -3.1801280975341797
    6. '`' → logprob: -3.3051280975341797
    7. '\' → logprob: -3.6801280975341797
    8. '```' → logprob: -3.8051280975341797
    9. 'n' → logprob: -4.05512809753418
    10. 's' → logprob: -4.43012809753418

Token 13: '...
' (ID: 4908)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0339229106903076
    2. '\n' → logprob: -1.6589229106903076
    3. '```' → logprob: -2.0339229106903076
    4. '_' → logprob: -2.7839229106903076
    5. '\' → logprob: -2.7839229106903076
    6. '`' → logprob: -3.2839229106903076
    7. 'n' → logprob: -3.2839229106903076
    8. 's' → logprob: -3.5339229106903076
    9. 'user' → logprob: -3.6589229106903076
    10. ':' → logprob: -4.158923149108887

Token 14: 'N' (ID: 45)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9019225835800171
    2. ' ' → logprob: -1.401922583580017
    3. '#' → logprob: -1.526922583580017
    4. 'i' → logprob: -3.5269227027893066
    5. 'n' → logprob: -3.9019227027893066
    6. 'u' → logprob: -4.526922702789307
    7. 's' → logprob: -4.651922702789307
    8. '(' → logprob: -4.776922702789307
    9. '```' → logprob: -4.776922702789307
    10. '`' → logprob: -4.901922702789307

Token 15: ' =' (ID: 314)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5959819555282593
    2. '#' → logprob: -2.095982074737549
    3. 'o' → logprob: -2.220982074737549
    4. 'a' → logprob: -2.345982074737549
    5. '=' → logprob: -2.470982074737549
    6. 'u' → logprob: -4.095982074737549
    7. ' =' → logprob: -5.095982074737549
    8. ' ' → logprob: -5.720982074737549
    9. 'b' → logprob: -5.845982074737549
    10. '_' → logprob: -6.595982074737549

Token 16: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.19145582616329193
    2. ' input' → logprob: -2.066455841064453
    3. ' ' → logprob: -3.691455841064453
    4. 'int' → logprob: -4.316455841064453
    5. 'input' → logprob: -4.691455841064453
    6. ' ' → logprob: -9.691455841064453
    7. '10' → logprob: -10.566455841064453
    8. '1' → logprob: -10.816455841064453
    9. ' "' → logprob: -11.441455841064453
    10. '0' → logprob: -12.191455841064453

Token 17: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008650383912026882
    2. '(input' → logprob: -4.758650302886963
    3. ' (' → logprob: -11.133650779724121
    4. '('' → logprob: -12.008650779724121
    5. '(
' → logprob: -12.008650779724121
    6. '()' → logprob: -12.508650779724121
    7. 'input' → logprob: -14.258650779724121
    8. '(

' → logprob: -14.383650779724121
    9. '(N' → logprob: -14.383650779724121
    10. ' ' → logprob: -14.758650779724121

Token 18: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02051759883761406
    2. '()' → logprob: -4.020517826080322
    3. '('' → logprob: -6.520517826080322
    4. '("("' → logprob: -7.645517826080322
    5. '())' → logprob: -9.020517349243164
    6. '(""))' → logprob: -9.270517349243164
    7. '("")' → logprob: -9.520517349243164
    8. '("' → logprob: -10.020517349243164
    9. '(()' → logprob: -11.145517349243164
    10. '(
' → logprob: -11.145517349243164

Token 19: 'C' (ID: 34)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.694293737411499
    2. ')' → logprob: -1.944293737411499
    3. 'for' → logprob: -2.444293737411499
    4. '
' → logprob: -2.694293737411499
    5. '#' → logprob: -2.819293737411499
    6. ' 
' → logprob: -4.069293975830078
    7. 's' → logprob: -4.069293975830078
    8. ' )' → logprob: -4.444293975830078
    9. ' for' → logprob: -4.444293975830078
    10. '\n' → logprob: -4.444293975830078

Token 20: ' =' (ID: 314)
  Prédit: 'ount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ount' → logprob: -1.410629391670227
    2. ' =' → logprob: -1.535629391670227
    3. 'o' → logprob: -1.785629391670227
    4. 'ounter' → logprob: -2.5356292724609375
    5. 'on' → logprob: -3.2856292724609375
    6. 'ode' → logprob: -3.5356292724609375
    7. 'ont' → logprob: -3.7856292724609375
    8. 'h' → logprob: -3.7856292724609375
    9. 'har' → logprob: -3.9106292724609375
    10. ')' → logprob: -4.1606292724609375

Token 21: ' [' (ID: 723)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5346977114677429
    2. 'input' → logprob: -0.9096977114677429
    3. 'int' → logprob: -5.784697532653809
    4. ' N' → logprob: -5.909697532653809
    5. ' int' → logprob: -6.159697532653809
    6. ' ' → logprob: -6.409697532653809
    7. ' []' → logprob: -7.409697532653809
    8. 'N' → logprob: -7.784697532653809
    9. '0' → logprob: -8.534697532653809
    10. '"' → logprob: -8.909697532653809

Token 22: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0009820780251175165
    2. ' int' → logprob: -7.125982284545898
    3. '0' → logprob: -9.375982284545898
    4. 'input' → logprob: -10.750982284545898
    5. '(int' → logprob: -10.750982284545898
    6. ']' → logprob: -10.875982284545898
    7. ']int' → logprob: -10.875982284545898
    8. ')' → logprob: -12.000982284545898
    9. ' ]' → logprob: -13.125982284545898
    10. '])' → logprob: -14.250982284545898

Token 23: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25991910696029663
    2. '(input' → logprob: -1.5099191665649414
    3. '()' → logprob: -5.134919166564941
    4. '()]' → logprob: -6.384919166564941
    5. '(x' → logprob: -8.634919166564941
    6. ']' → logprob: -9.759919166564941
    7. ' (' → logprob: -10.259919166564941
    8. '(
' → logprob: -10.384919166564941
    9. '(

' → logprob: -10.634919166564941
    10. '(i' → logprob: -10.759919166564941

Token 24: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15420015156269073
    2. '())' → logprob: -2.1542000770568848
    3. '(input' → logprob: -3.6542000770568848
    4. '(' → logprob: -7.779200077056885
    5. 'input' → logprob: -8.154200553894043
    6. '()' → logprob: -8.529200553894043
    7. ' )' → logprob: -10.154200553894043
    8. '=input' → logprob: -11.029200553894043
    9. 'for' → logprob: -11.154200553894043
    10. '(x' → logprob: -11.279200553894043

Token 25: ' for' (ID: 395)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.08990111947059631
    2. ')' → logprob: -3.3399012088775635
    3. 'input' → logprob: -3.8399012088775635
    4. '(' → logprob: -4.214900970458984
    5. 'for' → logprob: -4.589900970458984
    6. ' for' → logprob: -5.839900970458984
    7. '=input' → logprob: -7.589900970458984
    8. ']' → logprob: -8.714900970458984
    9. ' input' → logprob: -8.839900970458984
    10. ')]' → logprob: -9.339900970458984

Token 26: ' x' (ID: 1215)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.005749133415520191
    2. 'input' → logprob: -5.255749225616455
    3. ' ' → logprob: -7.630749225616455
    4. '(input' → logprob: -11.380748748779297
    5. ' range' → logprob: -11.630748748779297
    6. '=input' → logprob: -13.005748748779297
    7. ' ' → logprob: -13.130748748779297
    8. '<|end|>' → logprob: -13.755748748779297
    9. '	input' → logprob: -14.005748748779297
    10. ' x' → logprob: -14.755748748779297

Token 27: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10852871090173721
    2. 'input' → logprob: -2.6085286140441895
    3. 'in' → logprob: -4.4835286140441895
    4. '(input' → logprob: -4.7335286140441895
    5. ' input' → logprob: -5.9835286140441895
    6. '.' → logprob: -6.2335286140441895
    7. '=input' → logprob: -6.3585286140441895
    8. ' ' → logprob: -6.6085286140441895
    9. '(' → logprob: -7.7335286140441895
    10. ')' → logprob: -8.733529090881348

Token 28: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2265016883611679
    2. ' input' → logprob: -1.601501703262329
    3. 'range' → logprob: -7.22650146484375
    4. ' range' → logprob: -7.97650146484375
    5. '(input' → logprob: -11.22650146484375
    6. ' ' → logprob: -12.72650146484375
    7. '(' → logprob: -15.22650146484375
    8. '	input' → logprob: -15.22650146484375
    9. '  ' → logprob: -15.47650146484375
    10. '=input' → logprob: -15.47650146484375

Token 29: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0024898070842027664
    2. '()' → logprob: -6.002490043640137
    3. '()]' → logprob: -11.502490043640137
    4. '())' → logprob: -12.627490043640137
    5. '()].' → logprob: -15.002490043640137
    6. '(' → logprob: -15.377490043640137
    7. ' ().' → logprob: -17.25248908996582
    8. '()))' → logprob: -17.62748908996582
    9. '());' → logprob: -17.62748908996582
    10. '()).' → logprob: -17.87748908996582

Token 30: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0032125303987413645
    2. 'strip' → logprob: -5.7532124519348145
    3. 'rstrip' → logprob: -10.503212928771973
    4. ' split' → logprob: -11.878212928771973
    5. 'spl' → logprob: -15.253212928771973
    6. '(split' → logprob: -16.878211975097656
    7. ' strip' → logprob: -17.628211975097656
    8. 'replace' → logprob: -18.128211975097656
    9. 's' → logprob: -18.628211975097656
    10. '.split' → logprob: -18.753211975097656

Token 31: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.050061143934726715
    2. '())' → logprob: -3.5500612258911133
    3. '(' → logprob: -4.300061225891113
    4. '()' → logprob: -5.050061225891113
    5. '('' → logprob: -9.175061225891113
    6. ')]' → logprob: -11.425061225891113
    7. '("' → logprob: -12.050061225891113
    8. '()))' → logprob: -12.925061225891113
    9. '()]
' → logprob: -13.925061225891113
    10. ']' → logprob: -14.050061225891113

Token 32: 'MOD' (ID: 52135)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6002325415611267
    2. ' ' → logprob: -1.9752326011657715
    3. '
' → logprob: -2.4752326011657715
    4. ')' → logprob: -2.8502326011657715
    5. '[' → logprob: -3.1002326011657715
    6. 'for' → logprob: -3.6002326011657715
    7. '.' → logprob: -3.9752326011657715
    8. ' 
' → logprob: -4.1002326011657715
    9. ']' → logprob: -4.3502326011657715
    10. '' → logprob: -4.6002326011657715

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.41592323780059814
    2. '=' → logprob: -1.1659232378005981
    3. ')' → logprob: -3.7909231185913086
    4. ' )' → logprob: -5.915923118591309
    5. '<|end|>' → logprob: -6.665923118591309
    6. '_' → logprob: -7.290923118591309
    7. ' ' → logprob: -7.665923118591309
    8. ' =)' → logprob: -7.790923118591309
    9. ' ' → logprob: -9.040923118591309
    10. ']' → logprob: -9.415923118591309

Token 34: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0986930131912231
    2. '10' → logprob: -1.0986930131912231
    3. '100' → logprob: -1.0986930131912231
    4. '1' → logprob: -9.848692893981934
    5. '998' → logprob: -10.848692893981934
    6. ' (' → logprob: -12.348692893981934
    7. '(' → logprob: -13.723692893981934
    8. ' ' → logprob: -13.723692893981934
    9. '109' → logprob: -14.723692893981934
    10. '0' → logprob: -14.848692893981934

Token 35: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.2524092197418213
    2. '10' → logprob: -1.5024092197418213
    3. ' ' → logprob: -8.252408981323242
    4. '998' → logprob: -9.127408981323242
    5. '1' → logprob: -9.252408981323242
    6. '(' → logprob: -11.377408981323242
    7. '999' → logprob: -13.877408981323242
    8. '109' → logprob: -14.377408981323242
    9. '123' → logprob: -14.502408981323242
    10. 'int' → logprob: -15.002408981323242

Token 36: '000' (ID: 1302)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.076639175415039
    2. '+' → logprob: -1.826639175415039
    3. ' ' → logprob: -1.951639175415039
    4. '%' → logprob: -2.576639175415039
    5. '*' → logprob: -2.701639175415039
    6. '0' → logprob: -3.201639175415039
    7. '\' → logprob: -3.326639175415039
    8. '```' → logprob: -3.826639175415039
    9. '' → logprob: -3.951639175415039
    10. '**' → logprob: -4.201639175415039

Token 37: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.29174843430519104
    2. '7' → logprob: -2.041748523712158
    3. '0' → logprob: -2.166748523712158
    4. '+' → logprob: -4.916748523712158
    5. '9' → logprob: -7.791748523712158
    6. '19' → logprob: -8.166748046875
    7. '007' → logprob: -8.291748046875
    8. '07' → logprob: -8.541748046875
    9. '3' → logprob: -9.416748046875
    10. ' +' → logprob: -10.166748046875

Token 38: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -3.8889261304575484e-06
    2. '9' → logprob: -13.250003814697266
    3. '+' → logprob: -13.500003814697266
    4. ' ' → logprob: -14.875003814697266
    5. '0' → logprob: -15.500003814697266
    6. '07' → logprob: -16.875003814697266
    7. ' +' → logprob: -17.750003814697266
    8. '```' → logprob: -18.375003814697266
    9. ')' → logprob: -19.000003814697266
    10. '   ' → logprob: -19.875003814697266

Token 39: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.024819187819957733
    2. '<|end|>' → logprob: -4.399819374084473
    3. 'for' → logprob: -5.774819374084473
    4. '\n' → logprob: -5.774819374084473
    5. '' → logprob: -6.149819374084473
    6. ' 
' → logprob: -7.024819374084473
    7. '
' → logprob: -7.149819374084473
    8. ')' → logprob: -7.899819374084473
    9. '

' → logprob: -8.024819374084473
    10. '#' → logprob: -8.024819374084473

Token 40: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01891864463686943
    2. '\n' → logprob: -4.893918514251709
    3. '' → logprob: -5.643918514251709
    4. '
' → logprob: -5.768918514251709
    5. '<|end|>' → logprob: -6.018918514251709
    6. ' 
' → logprob: -7.143918514251709
    7. '

' → logprob: -7.518918514251709
    8. '#' → logprob: -8.643918991088867
    9. '\' → logprob: -9.143918991088867
    10. '```' → logprob: -9.268918991088867

Token 41: ' je' (ID: 1264)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.48595696687698364
    2. 'def' → logprob: -2.360956907272339
    3. 'dp' → logprob: -2.485956907272339
    4. '#' → logprob: -3.110956907272339
    5. ' dp' → logprob: -3.860956907272339
    6. ' 
' → logprob: -3.860956907272339
    7. ' 

' → logprob: -3.985956907272339
    8. 'd' → logprob: -4.360957145690918
    9. '
' → logprob: -4.485957145690918
    10. 'for' → logprob: -4.485957145690918

Token 42: ' préfère' (ID: 141784)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.9243165850639343
    2. 's' → logprob: -1.174316644668579
    3. 'n' → logprob: -2.049316644668579
    4. ' ' → logprob: -2.924316644668579
    5. ' vais' → logprob: -4.04931640625
    6. ' pense' → logprob: -4.29931640625
    7. '.' → logprob: -4.54931640625
    8. ' s' → logprob: -4.79931640625
    9. ' m' → logprob: -4.79931640625
    10. ''s' → logprob: -5.17431640625

Token 43: ' pas' (ID: 2173)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22967469692230225
    2. '_' → logprob: -1.8546746969223022
    3. '<|end|>' → logprob: -4.354674816131592
    4. ' ' → logprob: -5.229674816131592
    5. '.' → logprob: -5.229674816131592
    6. 'def' → logprob: -5.479674816131592
    7. ' _' → logprob: -5.854674816131592
    8. ',' → logprob: -5.979674816131592
    9. '  ' → logprob: -6.479674816131592
    10. ' =' → logprob: -6.729674816131592

Token 44: ' les' (ID: 1341)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8629396557807922
    2. ' utiliser' → logprob: -1.9879395961761475
    3. ' mod' → logprob: -2.7379395961761475
    4. '*' → logprob: -3.4879395961761475
    5. 'div' → logprob: -3.7379395961761475
    6. ' calcul' → logprob: -3.7379395961761475
    7. '_' → logprob: -3.8629395961761475
    8. ' *' → logprob: -3.9879395961761475
    9. '(' → logprob: -4.362939834594727
    10. ' faire' → logprob: -4.550439834594727

Token 45: ' underscores' (ID: 168008)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13704544305801392
    2. '_' → logprob: -2.387045383453369
    3. ' espaces' → logprob: -5.137045383453369
    4. ',' → logprob: -5.387045383453369
    5. ' spaces' → logprob: -6.012045383453369
    6. '+' → logprob: -6.387045383453369
    7. ' _' → logprob: -6.387045383453369
    8. '-' → logprob: -6.699545383453369
    9. 's' → logprob: -6.887045383453369
    10. ' ' → logprob: -6.949545383453369

Token 46: ' mais' (ID: 2899)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.009631305001676083
    2. ' 
' → logprob: -5.759631156921387
    3. '' → logprob: -6.259631156921387
    4. '
' → logprob: -6.384631156921387
    5. '\n' → logprob: -6.759631156921387
    6. '

' → logprob: -7.384631156921387
    7. '<|end|>' → logprob: -8.009631156921387
    8. '#' → logprob: -9.384631156921387
    9. '\' → logprob: -9.384631156921387
    10. '  
' → logprob: -9.384631156921387

Token 47: ' bon' (ID: 4846)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5580847859382629
    2. ' c' → logprob: -1.0580847263336182
    3. '_' → logprob: -3.308084726333618
    4. ' ça' → logprob: -4.933084964752197
    5. ' les' → logprob: -5.058084964752197
    6. ' _' → logprob: -5.183084964752197
    7. ' ' → logprob: -5.433084964752197
    8. ' je' → logprob: -5.933084964752197
    9. ' ils' → logprob: -5.933084964752197
    10. ' eux' → logprob: -6.308084964752197

Token 48: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.052920371294021606
    2. '' → logprob: -4.052920341491699
    3. ' 
' → logprob: -4.052920341491699
    4. '<|end|>' → logprob: -5.177920341491699
    5. '
' → logprob: -5.677920341491699
    6. '\n' → logprob: -6.302920341491699
    7. '  
' → logprob: -6.802920341491699
    8. '

' → logprob: -7.302920341491699
    9. ' ' → logprob: -7.552920341491699
    10. '\' → logprob: -7.552920341491699

Token 49: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.010034659877419472
    2. ' 
' → logprob: -5.760034561157227
    3. '' → logprob: -5.885034561157227
    4. '
' → logprob: -6.010034561157227
    5. '\n' → logprob: -7.385034561157227
    6. 's' → logprob: -8.510034561157227
    7. '

' → logprob: -8.510034561157227
    8. '\' → logprob: -8.760034561157227
    9. '  
' → logprob: -8.885034561157227
    10. 'dp' → logprob: -10.260034561157227

Token 50: ' Tableau' (ID: 180833)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.25665348768234253
    2. 'dp' → logprob: -1.8816535472869873
    3. ' def' → logprob: -4.631653308868408
    4. 's' → logprob: -4.881653308868408
    5. ' result' → logprob: -5.006653308868408
    6. ' max' → logprob: -5.006653308868408
    7. ' f' → logprob: -5.256653308868408
    8. ' ans' → logprob: -5.506653308868408
    9. ' res' → logprob: -5.506653308868408
    10. ' #' → logprob: -5.756653308868408

Token 51: ' des' (ID: 731)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9675997495651245
    2. '_dp' → logprob: -1.0925997495651245
    3. 'dp' → logprob: -1.8425997495651245
    4. ' =' → logprob: -2.592599868774414
    5. '_de' → logprob: -3.967599868774414
    6. '[' → logprob: -4.592599868774414
    7. '=' → logprob: -5.592599868774414
    8. 's' → logprob: -5.717599868774414
    9. '_size' → logprob: -5.967599868774414
    10. '_s' → logprob: -6.217599868774414

Token 52: ' puiss' (ID: 102546)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.39463332295417786
    2. 'dp' → logprob: -1.3946332931518555
    3. '_dp' → logprob: -3.7696332931518555
    4. '_' → logprob: -4.1446332931518555
    5. ' ways' → logprob: -4.3946332931518555
    6. ' f' → logprob: -5.2696332931518555
    7. ' façons' → logprob: -5.5196332931518555
    8. 's' → logprob: -6.0196332931518555
    9. 'f' → logprob: -6.3946332931518555
    10. ' ' → logprob: -6.3946332931518555

Token 53: 'ances' (ID: 3528)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05680328980088234
    2. 'ances' → logprob: -2.9318032264709473
    3. 'an' → logprob: -6.556803226470947
    4. '#' → logprob: -8.181803703308105
    5. '```' → logprob: -10.431803703308105
    6. 'ance' → logprob: -10.556803703308105
    7. '{' → logprob: -10.556803703308105
    8. 'e' → logprob: -11.181803703308105
    9. 'а' → logprob: -11.306803703308105
    10. '*' → logprob: -11.306803703308105

Token 54: ' de' (ID: 334)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.4197719097137451
    2. 'P' → logprob: -2.044771909713745
    3. 'C' → logprob: -2.669771909713745
    4. ' p' → logprob: -3.544771909713745
    5. '[' → logprob: -3.794771909713745
    6. 's' → logprob: -4.294772148132324
    7. ' =' → logprob: -4.294772148132324
    8. 'pow' → logprob: -4.294772148132324
    9. '_' → logprob: -4.794772148132324
    10. 'c' → logprob: -5.169772148132324

Token 55: ' deux' (ID: 10301)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.058284785598516464
    2. ' ' → logprob: -3.1832847595214844
    3. '10' → logprob: -4.433284759521484
    4. 'de' → logprob: -6.183284759521484
    5. 'C' → logprob: -7.308284759521484
    6. ' C' → logprob: -8.308284759521484
    7. ' deux' → logprob: -9.558284759521484
    8. '26' → logprob: -9.683284759521484
    9. 'c' → logprob: -10.308284759521484
    10. '1' → logprob: -10.683284759521484

Token 56: ' (' (ID: 350)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.7376142144203186
    2. 'pow' → logprob: -0.8626142144203186
    3. 'dp' → logprob: -3.987614154815674
    4. ' =' → logprob: -4.237614154815674
    5. ':' → logprob: -4.362614154815674
    6. '2' → logprob: -4.737614154815674
    7. ' :' → logprob: -4.737614154815674
    8. ' p' → logprob: -4.862614154815674
    9. 'P' → logprob: -4.862614154815674
    10. ' pow' → logprob: -5.487614154815674

Token 57: 'mod' (ID: 4847)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05748409777879715
    2. ' )' → logprob: -3.1824841499328613
    3. 'pow' → logprob: -5.557484149932861
    4. '):' → logprob: -5.557484149932861
    5. 'p' → logprob: -6.432484149932861
    6. '2' → logprob: -6.557484149932861
    7. ',' → logprob: -6.932484149932861
    8. '[' → logprob: -7.682484149932861
    9. ' pow' → logprob: -8.432483673095703
    10. ' ' → logprob: -8.557483673095703

Token 58: 'ulo' (ID: 5953)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47213369607925415
    2. ' )' → logprob: -1.0971336364746094
    3. ' ' → logprob: -4.597133636474609
    4. 'MOD' → logprob: -4.597133636474609
    5. 'ulo' → logprob: -4.972133636474609
    6. '_MOD' → logprob: -5.597133636474609
    7. 'ULO' → logprob: -5.722133636474609
    8. ' MOD' → logprob: -5.972133636474609
    9. '_' → logprob: -6.347133636474609
    10. ' ' → logprob: -7.097133636474609

Token 59: ' truc' (ID: 58342)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15034940838813782
    2. ' )' → logprob: -2.2753493785858154
    3. 'MOD' → logprob: -3.7753493785858154
    4. ' MOD' → logprob: -5.2753496170043945
    5. '[' → logprob: -6.0253496170043945
    6. ' ' → logprob: -6.1503496170043945
    7. '(' → logprob: -6.5253496170043945
    8. '(M' → logprob: -7.7753496170043945
    9. 's' → logprob: -7.9003496170043945
    10. ' (' → logprob: -8.275349617004395

Token 60: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006641241256147623
    2. ')
' → logprob: -5.631641387939453
    3. ' )' → logprob: -6.256641387939453
    4. '):' → logprob: -7.881641387939453
    5. ')
' → logprob: -8.381641387939453
    6. ',' → logprob: -8.881641387939453
    7. ')

' → logprob: -9.256641387939453
    8. '[' → logprob: -9.881641387939453
    9. '),' → logprob: -10.006641387939453
    10. ' )
' → logprob: -10.506641387939453

Token 61: 'B' (ID: 33)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.7550223469734192
    2. 'pow' → logprob: -1.3800222873687744
    3. ' p' → logprob: -1.7550222873687744
    4. 'P' → logprob: -3.3800222873687744
    5. ' pow' → logprob: -3.3800222873687744
    6. ' ' → logprob: -4.7550225257873535
    7. '2' → logprob: -4.8800225257873535
    8. ' P' → logprob: -5.0050225257873535
    9. 'dp' → logprob: -5.8800225257873535
    10. 'power' → logprob: -6.6300225257873535

Token 62: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0005330175044946373
    2. '=' → logprob: -7.750533103942871
    3. '=[' → logprob: -9.625533103942871
    4. '2' → logprob: -11.000533103942871
    5. ' =[' → logprob: -11.875533103942871
    6. 'P' → logprob: -12.750533103942871
    7. 'in' → logprob: -12.875533103942871
    8. 'pow' → logprob: -13.750533103942871
    9. '[' → logprob: -13.750533103942871
    10. '=np' → logprob: -14.125533103942871

Token 63: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16024503111839294
    2. ' [' → logprob: -1.9102450609207153
    3. '[N' → logprob: -11.785244941711426
    4. '[B' → logprob: -12.160244941711426
    5. '[len' → logprob: -12.535244941711426
    6. '[n' → logprob: -13.660244941711426
    7. '[int' → logprob: -13.910244941711426
    8. ' ' → logprob: -14.535244941711426
    9. '[p' → logprob: -14.785244941711426
    10. '1' → logprob: -15.160244941711426

Token 64: 'for' (ID: 1938)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.8172885179519653
    2. 'p' → logprob: -0.9422885179519653
    3. 'b' → logprob: -3.067288398742676
    4. 'pow' → logprob: -3.192288398742676
    5. 'for' → logprob: -4.067288398742676
    6. 'cur' → logprob: -4.442288398742676
    7. '2' → logprob: -4.442288398742676
    8. 'val' → logprob: -4.692288398742676
    9. 'x' → logprob: -4.817288398742676
    10. '1' → logprob: -4.942288398742676

Token 65: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.00288261822424829
    2. 'i' → logprob: -6.002882480621338
    3. ' _' → logprob: -8.127882957458496
    4. ' ' → logprob: -9.877882957458496
    5. ' ' → logprob: -10.877882957458496
    6. '	i' → logprob: -11.252882957458496
    7. ' k' → logprob: -11.627882957458496
    8. ' x' → logprob: -12.752882957458496
    9. '_' → logprob: -12.752882957458496
    10. '_i' → logprob: -12.752882957458496

Token 66: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026870153844356537
    2. 'in' → logprob: -3.6518702507019043
    3. ' ' → logprob: -7.526870250701904
    4. 'range' → logprob: -12.026869773864746
    5. '  ' → logprob: -12.276869773864746
    6. '%' → logprob: -13.151869773864746
    7. 'n' → logprob: -13.151869773864746
    8. 'In' → logprob: -13.276869773864746
    9. 'B' → logprob: -13.526869773864746
    10. '+' → logprob: -13.651869773864746

Token 67: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0009583894861862063
    2. 'range' → logprob: -7.000958442687988
    3. ' ' → logprob: -10.375958442687988
    4. '  ' → logprob: -12.375958442687988
    5. '	range' → logprob: -12.625958442687988
    6. ' xrange' → logprob: -12.750958442687988
    7. '   ' → logprob: -13.375958442687988
    8. ' ' → logprob: -13.875958442687988
    9. ' rang' → logprob: -14.250958442687988
    10. ' ran' → logprob: -14.500958442687988

Token 68: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.5880983471870422
    2. '(' → logprob: -0.8380983471870422
    3. '(len' → logprob: -4.463098526000977
    4. '(n' → logprob: -7.713098526000977
    5. '(
' → logprob: -9.838098526000977
    6. ' (' → logprob: -10.213098526000977
    7. '(i' → logprob: -11.213098526000977
    8. '(

' → logprob: -12.588098526000977
    9. ' N' → logprob: -13.713098526000977
    10. 'N' → logprob: -14.588098526000977

Token 69: '+' (ID: 10)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0150842797011137
    2. '+' → logprob: -4.390084266662598
    3. ' ):' → logprob: -6.265084266662598
    4. ' +' → logprob: -7.890084266662598
    5. ')' → logprob: -8.390084266662598
    6. '):
' → logprob: -9.765084266662598
    7. ' ' → logprob: -12.515084266662598
    8. ':' → logprob: -13.515084266662598
    9. ' )' → logprob: -13.765084266662598
    10. '*' → logprob: -14.015084266662598

Token 70: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013652353081852198
    2. ' ' → logprob: -6.7513651847839355
    3. '2' → logprob: -8.626365661621094
    4. '10' → logprob: -11.751365661621094
    5. '5' → logprob: -12.626365661621094
    6. '3' → logprob: -13.126365661621094
    7. '20' → logprob: -14.501365661621094
    8. '4' → logprob: -14.751365661621094
    9. '7' → logprob: -14.876365661621094
    10. '6' → logprob: -15.126365661621094

Token 71: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0035617039538919926
    2. ' ):' → logprob: -6.253561496734619
    3. ')' → logprob: -6.503561496734619
    4. ':' → logprob: -9.503561973571777
    5. '):
' → logprob: -9.878561973571777
    6. ' )' → logprob: -12.003561973571777
    7. ']:' → logprob: -14.878561973571777
    8. ' ):
' → logprob: -15.128561973571777
    9. ' :' → logprob: -15.378561973571777
    10. '+' → logprob: -15.628561973571777

Token 72: '   ' (ID: 271)
  Prédit: ' B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.1657952219247818
    2. 'B' → logprob: -2.41579532623291
    3. '   ' → logprob: -2.91579532623291
    4. ' 
' → logprob: -5.66579532623291
    5. ' ' → logprob: -6.16579532623291
    6. '<|end|>' → logprob: -6.29079532623291
    7. '    
' → logprob: -7.29079532623291
    8. '	B' → logprob: -7.54079532623291
    9. ' ' → logprob: -8.41579532623291
    10. '```' → logprob: -9.79079532623291

Token 73: ' if' (ID: 538)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.6868883371353149
    2. ' B' → logprob: -0.9368883371353149
    3. ' if' → logprob: -2.3118882179260254
    4. 'if' (adapté à ' if') → logprob: -5.186888217926025
    5. ' ' → logprob: -8.686888694763184
    6. 'i' → logprob: -10.436888694763184
    7. 'b' → logprob: -10.561888694763184
    8. ' i' → logprob: -10.811888694763184
    9. '2' → logprob: -10.936888694763184
    10. '0' → logprob: -11.436888694763184

Token 74: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.009802012704312801
    2. 'i' → logprob: -4.634801864624023
    3. ' ' → logprob: -10.759801864624023
    4. '	i' → logprob: -11.634801864624023
    5. ' B' → logprob: -12.259801864624023
    6. '  ' → logprob: -12.884801864624023
    7. ' not' → logprob: -13.134801864624023
    8. ' ' → logprob: -13.259801864624023
    9. 'B' → logprob: -13.634801864624023
    10. '0' → logprob: -14.009801864624023

Token 75: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.386992484331131
    2. ' ==' → logprob: -1.1369924545288086
    3. '=' → logprob: -10.511992454528809
    4. ' ' → logprob: -11.261992454528809
    5. '0' → logprob: -11.636992454528809
    6. '>' → logprob: -11.636992454528809
    7. '<=' → logprob: -11.761992454528809
    8. ' =' → logprob: -11.886992454528809
    9. '===' → logprob: -12.011992454528809
    10. '<' → logprob: -12.011992454528809

Token 76: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06196802109479904
    2. ' ' → logprob: -2.8119680881500244
    3. '۰' → logprob: -16.186967849731445
    4. '  ' → logprob: -16.561967849731445
    5. '   ' → logprob: -16.686967849731445
    6. ' ' → logprob: -17.124467849731445
    7. '<|end|>' → logprob: -17.249467849731445
    8. '=' → logprob: -17.686967849731445
    9. '```' → logprob: -17.811967849731445
    10. '1' → logprob: -17.999467849731445

Token 77: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028049908578395844
    2. ' ' → logprob: -5.877804756164551
    3. '۰' → logprob: -16.502805709838867
    4. '  ' → logprob: -18.127805709838867
    5. ')' → logprob: -18.127805709838867
    6. '０' → logprob: -18.940305709838867
    7. '০' → logprob: -19.127805709838867
    8. '00' → logprob: -19.315305709838867
    9. '<|end|>' → logprob: -19.315305709838867
    10. '०' → logprob: -19.440305709838867

Token 78: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011672843247652054
    2. '):' → logprob: -4.5116729736328125
    3. ':
' → logprob: -7.6366729736328125
    4. ')' → logprob: -9.886672973632812
    5. ' :' → logprob: -10.011672973632812
    6. ':B' → logprob: -10.636672973632812
    7. '):
' → logprob: -11.136672973632812
    8. ':
' → logprob: -13.011672973632812
    9. ']:' → logprob: -13.761672973632812
    10. ' ):' → logprob: -14.386672973632812

Token 79: '       ' (ID: 309)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.5877273082733154
    2. ' B' → logprob: -1.0877273082733154
    3. '   ' → logprob: -2.4627273082733154
    4. ':' → logprob: -4.2127275466918945
    5. ':
' → logprob: -5.8377275466918945
    6. ' ' → logprob: -5.9627275466918945
    7. '       ' → logprob: -7.2127275466918945
    8. '):
' → logprob: -8.587727546691895
    9. '	B' → logprob: -8.837727546691895
    10. ' :' → logprob: -9.087727546691895

Token 80: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.5263023376464844
    2. ' B' → logprob: -0.9013023376464844
    3. '   ' → logprob: -5.776302337646484
    4. '       ' → logprob: -10.401302337646484
    5. '	B' → logprob: -11.026302337646484
    6. ' ' → logprob: -11.776302337646484
    7. '1' → logprob: -11.901302337646484
    8. '
' → logprob: -13.026302337646484
    9. '  ' → logprob: -13.526302337646484
    10. '0' → logprob: -13.526302337646484

Token 81: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.10034771263599396
    2. '.' → logprob: -2.3503477573394775
    3. '=' → logprob: -9.475347518920898
    4. ' .' → logprob: -10.350347518920898
    5. ' =' → logprob: -11.225347518920898
    6. '.app' → logprob: -11.725347518920898
    7. 'append' → logprob: -12.225347518920898
    8. '.ap' → logprob: -12.225347518920898
    9. '.Append' → logprob: -15.350347518920898
    10. '.a' → logprob: -15.350347518920898

Token 82: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005543439765460789
    2. '1' → logprob: -7.50055456161499
    3. ' (' → logprob: -14.125554084777832
    4. '(
' → logprob: -14.250554084777832
    5. ' ' → logprob: -17.75055503845215
    6. '(

' → logprob: -18.75055503845215
    7. '((' → logprob: -19.37555503845215
    8. '<|end|>' → logprob: -19.87555503845215
    9. '0' → logprob: -20.25055503845215
    10. '()' → logprob: -20.25055503845215

Token 83: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. ')' → logprob: -19.625024795532227
    4. '   ' → logprob: -19.750024795532227
    5. '۱' → logprob: -21.000024795532227
    6. ' ' → logprob: -21.125024795532227
    7. '(' → logprob: -21.250024795532227
    8. '0' → logprob: -21.500024795532227
    9. '１' → logprob: -21.625024795532227
    10. '  ' → logprob: -21.750024795532227

Token 84: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004128503613173962
    2. ')
' → logprob: -5.504128456115723
    3. ' )' → logprob: -11.129128456115723
    4. 'else' → logprob: -11.129128456115723
    5. ' else' → logprob: -11.504128456115723
    6. ')
' → logprob: -12.004128456115723
    7. ')

' → logprob: -13.004128456115723
    8. ' )
' → logprob: -14.129128456115723
    9. '*' → logprob: -14.379128456115723
    10. '))' → logprob: -15.754128456115723

Token 85: '   ' (ID: 271)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.6415620446205139
    2. 'else' → logprob: -0.8915620446205139
    3. '   ' → logprob: -2.766561985015869
    4. '	else' → logprob: -8.391562461853027
    5. 'elif' → logprob: -8.641562461853027
    6. ' ' → logprob: -9.391562461853027
    7. ' elif' → logprob: -10.016562461853027
    8. ')' → logprob: -10.141562461853027
    9. '  ' → logprob: -11.391562461853027
    10. '<|end|>' → logprob: -11.641562461853027

Token 86: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.5604590177536011
    2. ' else' → logprob: -0.9354590177536011
    3. '   ' → logprob: -3.3104591369628906
    4. ' ' → logprob: -9.68545913696289
    5. '	else' → logprob: -9.81045913696289
    6. 'elif' → logprob: -11.68545913696289
    7. '  ' → logprob: -11.81045913696289
    8. ' ' → logprob: -12.43545913696289
    9. ' elif' → logprob: -12.68545913696289
    10. '_else' → logprob: -13.31045913696289

Token 87: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06658965349197388
    2. ' B' → logprob: -3.316589593887329
    3. '<|end|>' → logprob: -5.316589832305908
    4. 'B' → logprob: -5.566589832305908
    5. ' ' → logprob: -5.566589832305908
    6. ')' → logprob: -5.691589832305908
    7. ' :' → logprob: -6.066589832305908
    8. '   ' → logprob: -6.316589832305908
    9. ':
' → logprob: -6.316589832305908
    10. '*' → logprob: -6.691589832305908

Token 88: '       ' (ID: 309)
  Prédit: ' B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.026632104068994522
    2. 'B' → logprob: -3.651632070541382
    3. '   ' → logprob: -9.276632308959961
    4. '       ' → logprob: -9.276632308959961
    5. ' ' → logprob: -10.026632308959961
    6. '	B' → logprob: -10.276632308959961
    7. ' 
' → logprob: -11.401632308959961
    8. '    ' → logprob: -11.401632308959961
    9. ' ' → logprob: -11.651632308959961
    10. '2' → logprob: -11.776632308959961

Token 89: ' #' (ID: 1069)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.31353285908699036
    2. ' B' → logprob: -1.313532829284668
    3. '(B' → logprob: -8.313532829284668
    4. ' (' → logprob: -10.938532829284668
    5. '(' → logprob: -12.188532829284668
    6. ' ' → logprob: -14.438532829284668
    7. '	B' → logprob: -14.438532829284668
    8. '2' → logprob: -14.563532829284668
    9. '_B' → logprob: -14.688532829284668
    10. 'b' → logprob: -15.563532829284668

Token 90: ' franchement' (ID: 182681)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.38690972328186035
    2. ' B' → logprob: -1.1369097232818604
    3. '   ' → logprob: -11.386909484863281
    4. '(B' → logprob: -11.636909484863281
    5. ' ' → logprob: -12.011909484863281
    6. '       ' → logprob: -12.261909484863281
    7. '_B' → logprob: -13.511909484863281
    8. '	B' → logprob: -13.636909484863281
    9. ' (' → logprob: -14.136909484863281
    10. 'b' → logprob: -14.261909484863281

Token 91: ',' (ID: 11)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.2521531283855438
    2. ' B' → logprob: -1.5021531581878662
    3. '   ' → logprob: -9.377153396606445
    4. '       ' → logprob: -9.877153396606445
    5. '	B' → logprob: -10.127153396606445
    6. ' ' → logprob: -11.002153396606445
    7. ' ' → logprob: -11.252153396606445
    8. '           ' → logprob: -11.502153396606445
    9. ',' → logprob: -13.377153396606445
    10. '    ' → logprob: -14.002153396606445

Token 92: ' il' (ID: 1793)
  Prédit: ' B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.4287993907928467
    2. 'B' → logprob: -1.0537993907928467
    3. ' ' → logprob: -9.928799629211426
    4. '   ' → logprob: -10.928799629211426
    5. ' ' → logprob: -11.428799629211426
    6. 'b' → logprob: -11.803799629211426
    7. '       ' → logprob: -12.553799629211426
    8. '        ' → logprob: -12.803799629211426
    9. '    ' → logprob: -13.303799629211426
    10. '	B' → logprob: -13.428799629211426

Token 93: ' doit' (ID: 21822)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.3782939016819
    2. '=' → logprob: -1.5032938718795776
    3. 's' → logprob: -3.003293991088867
    4. ' =' → logprob: -3.878293991088867
    5. '*' → logprob: -5.503293991088867
    6. ' B' → logprob: -5.753293991088867
    7. ' ' → logprob: -6.378293991088867
    8. '.' → logprob: -6.378293991088867
    9. 'a' → logprob: -6.628293991088867
    10. '+=' → logprob: -6.753293991088867

Token 94: ' y' (ID: 342)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.3133347034454346
    2. '=' → logprob: -1.4383347034454346
    3. ' ' → logprob: -1.6883347034454346
    4. 'B' → logprob: -2.3133347034454346
    5. ' B' → logprob: -2.6883347034454346
    6. '   ' → logprob: -2.6883347034454346
    7. '    ' → logprob: -3.4383347034454346
    8. ' be' → logprob: -4.8133344650268555
    9. '  ' → logprob: -5.1883344650268555
    10. '```' → logprob: -5.1883344650268555

Token 95: ' avoir' (ID: 16595)
  Prédit: 'avoir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avoir' → logprob: -0.10134180635213852
    2. ' avoir' → logprob: -2.601341724395752
    3. ''avoir' → logprob: -4.601341724395752
    4. 'voir' → logprob: -4.726341724395752
    5. 'a' → logprob: -6.226341724395752
    6. '```' → logprob: -8.10134220123291
    7. '’avoir' → logprob: -8.60134220123291
    8. 'have' → logprob: -8.72634220123291
    9. 'avait' → logprob: -9.35134220123291
    10. 'A' → logprob: -9.35134220123291

Token 96: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.14855755865573883
    2. 'une' → logprob: -3.148557662963867
    3. ' B' → logprob: -3.273557662963867
    4. ' mieux' → logprob: -4.148557662963867
    5. ' un' → logprob: -4.148557662963867
    6. 'B' → logprob: -4.523557662963867
    7. ' plus' → logprob: -5.773557662963867
    8. ' moyen' → logprob: -5.773557662963867
    9. 'un' → logprob: -6.148557662963867
    10. 'plus' → logprob: -6.648557662963867

Token 97: ' façon' (ID: 33381)
  Prédit: 'fa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fa' → logprob: -1.2810735702514648
    2. 'me' → logprob: -1.6560735702514648
    3. ' meilleure' → logprob: -2.281073570251465
    4. 'man' → logprob: -2.781073570251465
    5. 'm' → logprob: -3.156073570251465
    6. ' manière' → logprob: -3.281073570251465
    7. 'ast' → logprob: -3.406073570251465
    8. ' façon' → logprob: -3.406073570251465
    9. ' ast' → logprob: -3.781073570251465
    10. 'mé' → logprob: -3.781073570251465

Token 98: ' plus' (ID: 2932)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 99: ' élég' (ID: 102544)
  Prédit: 'simple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'simple' → logprob: -1.5253574848175049
    2. ' simple' → logprob: -1.7753574848175049
    3. 'python' → logprob: -1.7753574848175049
    4. ' python' → logprob: -2.150357484817505
    5. 'e' → logprob: -2.900357484817505
    6. ' efficace' → logprob: -3.150357484817505
    7. ' élég' → logprob: -3.150357484817505
    8. ' effic' → logprob: -3.275357484817505
    9. 'py' → logprob: -3.525357484817505
    10. 'eff' → logprob: -3.650357484817505

Token 100: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.003525121370330453
    2. 'e' → logprob: -6.253525257110596
    3. 'a' → logprob: -7.253525257110596
    4. 'ant' → logprob: -8.128524780273438
    5. 'de' → logprob: -9.628524780273438
    6. ')' → logprob: -9.753524780273438
    7. '*' → logprob: -9.753524780273438
    8. 'an' → logprob: -9.878524780273438
    9. '+' → logprob: -10.378524780273438
    10. 'à' → logprob: -10.628524780273438

Token 101: '
' (ID: 198)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.2737540006637573
    2. ' B' → logprob: -2.023754119873047
    3. ':' → logprob: -2.648754119873047
    4. '       ' → logprob: -4.023754119873047
    5. '   ' → logprob: -5.273754119873047
    6. ' ' → logprob: -5.398754119873047
    7. ',' → logprob: -5.898754119873047
    8. ' :' → logprob: -6.398754119873047
    9. ')' → logprob: -7.523754119873047
    10. '*' → logprob: -7.648754119873047

Token 102: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5078956484794617
    2. ' B' → logprob: -1.2578957080841064
    3. 'B' → logprob: -3.1328957080841064
    4. '   ' → logprob: -3.8828957080841064
    5. ' ' → logprob: -4.507895469665527
    6. '        ' → logprob: -4.882895469665527
    7. ',' → logprob: -5.257895469665527
    8. ')' → logprob: -5.257895469665527
    9. '           ' → logprob: -5.257895469665527
    10. ' )' → logprob: -5.757895469665527

Token 103: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.004080658778548241
    2. ' B' → logprob: -5.504080772399902
    3. '       ' → logprob: -14.129080772399902
    4. '   ' → logprob: -14.254080772399902
    5. 'b' → logprob: -14.379080772399902
    6. '	B' → logprob: -16.004079818725586
    7. ' ' → logprob: -16.504079818725586
    8. '_B' → logprob: -17.129079818725586
    9. '           ' → logprob: -17.379079818725586
    10. ' ' → logprob: -18.004079818725586

Token 104: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0009357591043226421
    2. '.' → logprob: -7.0009355545043945
    3. '.app' → logprob: -11.125935554504395
    4. 'append' → logprob: -11.875935554504395
    5. '.ap' → logprob: -13.625935554504395
    6. '.extend' → logprob: -14.000935554504395
    7. ' .' → logprob: -15.500935554504395
    8. '​.' → logprob: -16.50093650817871
    9. '.Append' → logprob: -16.75093650817871
    10. '.a' → logprob: -17.87593650817871

Token 105: '((' (ID: 2054)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.0025794629473239183
    2. '((' → logprob: -6.127579689025879
    3. '(' → logprob: -7.877579689025879
    4. 'B' → logprob: -11.627579689025879
    5. ' (' → logprob: -12.127579689025879
    6. ' B' → logprob: -14.752579689025879
    7. '(b' → logprob: -15.627579689025879
    8. '(
' → logprob: -16.377578735351562
    9. '	B' → logprob: -17.752578735351562
    10. '(M' → logprob: -17.877578735351562

Token 106: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0018048917409032583
    2. ' B' → logprob: -6.751804828643799
    3. '2' → logprob: -7.376804828643799
    4. ' ' → logprob: -11.876805305480957
    5. '   ' → logprob: -13.751805305480957
    6. '(B' → logprob: -14.626805305480957
    7. '	B' → logprob: -15.001805305480957
    8. '(' → logprob: -16.62680435180664
    9. '_B' → logprob: -17.37680435180664
    10. '1' → logprob: -18.12680435180664

Token 107: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.16022484004497528
    2. '[i' → logprob: -1.9102247953414917
    3. '-' → logprob: -14.785224914550781
    4. 'i' → logprob: -15.285224914550781
    5. '[' → logprob: -17.28522491455078
    6. '   ' → logprob: -17.91022491455078
    7. ' [-' → logprob: -18.66022491455078
    8. '[j' → logprob: -19.28522491455078
    9. '[
' → logprob: -19.41022491455078
    10. '-i' → logprob: -19.53522491455078

Token 108: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.50000286102295
    3. '   ' → logprob: -14.25000286102295
    4. '  ' → logprob: -16.125001907348633
    5. ']' → logprob: -16.375001907348633
    6. '```' → logprob: -16.562501907348633
    7. ')' → logprob: -16.812501907348633
    8. '    ' → logprob: -17.250001907348633
    9. '2' → logprob: -18.125001907348633
    10. '       ' → logprob: -18.312501907348633

Token 109: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.06198998540639877
    2. ' *' → logprob: -2.8119900226593018
    3. ' ' → logprob: -11.561989784240723
    4. ' ' → logprob: -11.811989784240723
    5. ')' → logprob: -12.811989784240723
    6. '2' → logprob: -13.436989784240723
    7. ')*' → logprob: -14.436989784240723
    8. '**' → logprob: -16.06199073791504
    9. '*
' → logprob: -16.18699073791504
    10. '```' → logprob: -16.56199073791504

Token 110: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.023250602185726166
    2. ' ' → logprob: -3.7732505798339844
    3. '   ' → logprob: -12.773250579833984
    4. '    ' → logprob: -14.023250579833984
    5. '
' → logprob: -14.398250579833984
    6. '  ' → logprob: -15.148250579833984
    7. ' ' → logprob: -15.773250579833984
    8. ')' → logprob: -16.148250579833984
    9. '

' → logprob: -16.523250579833984
    10. '```' → logprob: -16.710750579833984

Token 111: ')%' (ID: 57656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018233763054013252
    2. ')%' → logprob: -4.018233776092529
    3. ' )' → logprob: -9.393233299255371
    4. '%' → logprob: -15.268233299255371
    5. ')#' → logprob: -16.768234252929688
    6. '   ' → logprob: -16.768234252929688
    7. '%)' → logprob: -18.393234252929688
    8. '))' → logprob: -18.393234252929688
    9. ' ' → logprob: -18.518234252929688
    10. ')
' → logprob: -18.893234252929688

Token 112: 'MOD' (ID: 52135)
  Prédit: 'MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -4.842555426876061e-06
    2. ' MOD' → logprob: -12.250004768371582
    3. 'MO' → logprob: -18.8750057220459
    4. '_MOD' → logprob: -19.7500057220459
    5. ' ' → logprob: -20.3750057220459
    6. 'M' → logprob: -20.7500057220459
    7. '.MOD' → logprob: -21.2500057220459
    8. 'MD' → logprob: -22.3750057220459
    9. 'MODULE' → logprob: -22.8750057220459
    10. '100' → logprob: -23.2500057220459

Token 113: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.45848218582978e-06
    2. ' )' → logprob: -13.87500286102295
    3. '))' → logprob: -14.00000286102295
    4. ')
' → logprob: -14.37500286102295
    5. ')`' → logprob: -17.250001907348633
    6. ')return' → logprob: -17.750001907348633
    7. ')#' → logprob: -18.750001907348633
    8. ')))' → logprob: -18.875001907348633
    9. '),' → logprob: -19.125001907348633
    10. ')

' → logprob: -19.875001907348633

Token 114: '        
' (ID: 3564)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7958270907402039
    2. '#' → logprob: -1.0458271503448486
    3. '<|end|>' → logprob: -2.1708271503448486
    4. 'for' → logprob: -3.2958271503448486
    5. '\n' → logprob: -4.4208269119262695
    6. ' ' → logprob: -5.1708269119262695
    7. ' 
' → logprob: -5.2958269119262695
    8. '```' → logprob: -5.4208269119262695
    9. '  
' → logprob: -5.9208269119262695
    10. 'return' → logprob: -6.2958269119262695

Token 115: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.10607624053955078
    2. 'DP' → logprob: -3.606076240539551
    3. '#' → logprob: -3.981076240539551
    4. 'result' → logprob: -4.106076240539551
    5. 'S' → logprob: -4.481076240539551
    6. 'res' → logprob: -5.231076240539551
    7. 'for' → logprob: -5.481076240539551
    8. 's' → logprob: -6.106076240539551
    9. 'count' → logprob: -6.231076240539551
    10. 'total' → logprob: -6.481076240539551

Token 116: ' on' (ID: 402)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.09390324354171753
    2. 'result' → logprob: -3.9689033031463623
    3. 'DP' → logprob: -4.343903064727783
    4. 'res' → logprob: -4.343903064727783
    5. '#' → logprob: -4.593903064727783
    6. 'D' → logprob: -5.343903064727783
    7. 'total' → logprob: -5.718903064727783
    8. 'S' → logprob: -5.843903064727783
    9. 'f' → logprob: -5.843903064727783
    10. 'ans' → logprob: -5.968903064727783

Token 117: ' trie' (ID: 139428)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.4091893434524536
    2. 'for' → logprob: -1.7841893434524536
    3. ' =' → logprob: -1.9091893434524536
    4. ' vais' → logprob: -2.534189224243164
    5. '=' → logprob: -2.784189224243164
    6. ' peux' → logprob: -3.159189224243164
    7. '_' → logprob: -3.284189224243164
    8. ' for' → logprob: -3.784189224243164
    9. ' ' → logprob: -4.034189224243164
    10. ' continue' → logprob: -4.284189224243164

Token 118: ' la' (ID: 557)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -1.1398757123970427e-05
    2. ',' → logprob: -12.750011444091797
    3. ',
' → logprob: -13.125011444091797
    4. '
' → logprob: -13.250011444091797
    5. ' C' → logprob: -13.625011444091797
    6. ')' → logprob: -14.500011444091797
    7. 's' → logprob: -14.625011444091797
    8. '.' → logprob: -14.750011444091797
    9. ':
' → logprob: -15.375011444091797
    10. ':' → logprob: -15.750011444091797

Token 119: ' liste' (ID: 31719)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.023512400686740875
    2. ' C' → logprob: -3.773512363433838
    3. 's' → logprob: -8.898512840270996
    4. 'liste' → logprob: -10.648512840270996
    5. ' liste' → logprob: -10.648512840270996
    6. ' array' → logprob: -11.148512840270996
    7. ' list' → logprob: -11.398512840270996
    8. 'list' → logprob: -12.148512840270996
    9. 'c' → logprob: -12.273512840270996
    10. ')' → logprob: -12.523512840270996

Token 120: ',' (ID: 11)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -6.704273118884885e-07
    2. '
' → logprob: -15.750000953674316
    3. ',
' → logprob: -16.0
    4. ',' → logprob: -16.25
    5. ' C' → logprob: -16.25
    6. 'sorted' → logprob: -16.75
    7. '.sort' → logprob: -16.75
    8. 's' → logprob: -17.625
    9. '=' → logprob: -17.75
    10. '    
' → logprob: -17.875

Token 121: ' normal' (ID: 6078)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.010275863111019135
    2. ' C' → logprob: -4.635275840759277
    3. 's' → logprob: -7.885275840759277
    4. ' puis' → logprob: -11.260275840759277
    5. '<|end|>' → logprob: -11.385275840759277
    6. ' mais' → logprob: -11.510275840759277
    7. ' afin' → logprob: -11.760275840759277
    8. ' et' → logprob: -11.760275840759277
    9. 'sorted' → logprob: -12.010275840759277
    10. ' 
' → logprob: -12.135275840759277

Token 122: ',' (ID: 11)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0011522440472617745
    2. '
' → logprob: -6.876152038574219
    3. 's' → logprob: -10.251152038574219
    4. '<|end|>' → logprob: -10.376152038574219
    5. ',' → logprob: -11.376152038574219
    6. ',
' → logprob: -11.501152038574219
    7. ' C' → logprob: -11.876152038574219
    8. '.
' → logprob: -12.001152038574219
    9. '.' → logprob: -12.501152038574219
    10. ':
' → logprob: -12.626152038574219

Token 123: ' on' (ID: 402)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.008825987577438354
    2. ' C' → logprob: -4.758825778961182
    3. 's' → logprob: -9.50882625579834
    4. ' on' → logprob: -10.75882625579834
    5. ' et' → logprob: -11.50882625579834
    6. ' mais' → logprob: -11.63382625579834
    7. ' car' → logprob: -11.63382625579834
    8. ' puis' → logprob: -12.00882625579834
    9. ' ' → logprob: -12.13382625579834
    10. 'et' → logprob: -12.25882625579834

Token 124: ' verra' (ID: 159395)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.4076337516307831
    2. '.sort' → logprob: -1.5326337814331055
    3. 'continue' → logprob: -2.6576337814331055
    4. 's' → logprob: -4.1576337814331055
    5. '.' → logprob: -4.2826337814331055
    6. 'append' → logprob: -6.1576337814331055
    7. 'contin' → logprob: -6.2826337814331055
    8. ' sort' → logprob: -6.4076337814331055
    9. 'n' → logprob: -6.5326337814331055
    10. 'a' → logprob: -6.9076337814331055

Token 125: ' pourquoi' (ID: 39224)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.001368453842587769
    2. ' C' → logprob: -6.626368522644043
    3. 's' → logprob: -11.126368522644043
    4. '
' → logprob: -11.251368522644043
    5. '<|end|>' → logprob: -13.126368522644043
    6. 'A' → logprob: -13.376368522644043
    7. ',' → logprob: -13.626368522644043
    8. '()
' → logprob: -13.751368522644043
    9. '(
' → logprob: -14.001368522644043
    10. ':
' → logprob: -14.126368522644043

Token 126: ' après' (ID: 16460)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0004589094896800816
    2. '
' → logprob: -8.000458717346191
    3. '<|end|>' → logprob: -9.625458717346191
    4. '```' → logprob: -10.375458717346191
    5. 's' → logprob: -11.500458717346191
    6. ':' → logprob: -12.500458717346191
    7. ' C' → logprob: -12.500458717346191
    8. ':
' → logprob: -12.625458717346191
    9. ',' → logprob: -14.000458717346191
    10. '\' → logprob: -14.375458717346191

Token 127: '
' (ID: 198)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -5.1689596148207784e-05
    2. '
' → logprob: -10.000051498413086
    3. '```' → logprob: -13.500051498413086
    4. 's' → logprob: -14.000051498413086
    5. 'A' → logprob: -14.000051498413086
    6. 'sorted' → logprob: -14.375051498413086
    7. '\' → logprob: -14.500051498413086
    8. ' C' → logprob: -14.875051498413086
    9. '

' → logprob: -15.000051498413086
    10. '#' → logprob: -15.375051498413086

Token 128: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -4.429896944202483e-05
    2. ' C' → logprob: -10.125043869018555
    3. '
' → logprob: -12.625043869018555
    4. '```' → logprob: -14.375043869018555
    5. 's' → logprob: -15.875043869018555
    6. ' 
' → logprob: -16.625043869018555
    7. 'sorted' → logprob: -16.750043869018555
    8. 'A' → logprob: -17.125043869018555
    9. '``' → logprob: -18.125043869018555
    10. '<|end|>' → logprob: -18.125043869018555

Token 129: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.00034595211036503315
    2. '.' → logprob: -8.000346183776855
    3. '=' → logprob: -11.625346183776855
    4. 'sort' → logprob: -14.000346183776855
    5. ' =' → logprob: -16.12534523010254
    6. ' .' → logprob: -16.12534523010254
    7. ').' → logprob: -16.25034523010254
    8. '.Sort' → logprob: -16.37534523010254
    9. '.sorted' → logprob: -16.62534523010254
    10. '=.' → logprob: -16.75034523010254

Token 130: '()

' (ID: 5874)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25926917791366577
    2. 'for' → logprob: -1.8842692375183105
    3. '#' → logprob: -3.6342692375183105
    4. '\n' → logprob: -4.1342692375183105
    5. '<|end|>' → logprob: -4.2592692375183105
    6. ' 
' → logprob: -5.8842692375183105
    7. '[' → logprob: -5.8842692375183105
    8. ')' → logprob: -5.8842692375183105
    9. ',' → logprob: -6.1342692375183105
    10. '\' → logprob: -6.6342692375183105

Token 131: 'result' (ID: 2521)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2925553619861603
    2. 'result' → logprob: -2.542555332183838
    3. 'res' → logprob: -2.917555332183838
    4. 'S' → logprob: -3.542555332183838
    5. 'DP' → logprob: -4.292555332183838
    6. 'total' → logprob: -4.292555332183838
    7. 'answer' → logprob: -4.542555332183838
    8. 'count' → logprob: -4.667555332183838
    9. 'f' → logprob: -4.917555332183838
    10. 's' → logprob: -5.042555332183838

Token 132: 'at' (ID: 266)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.45121124386787415
    2. '=' → logprob: -1.0762112140655518
    3. '_' → logprob: -3.8262112140655518
    4. ' ' → logprob: -8.201210975646973
    5. 'space' → logprob: -9.951210975646973
    6. 's' → logprob: -10.451210975646973
    7. '_space' → logprob: -10.576210975646973
    8. '_=' → logprob: -10.701210975646973
    9. ' +=' → logprob: -10.826210975646973
    10. ')' → logprob: -11.326210975646973

Token 133: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5769686698913574
    2. ' =' → logprob: -0.8269686698913574
    3. '_' → logprob: -6.951968669891357
    4. 's' → logprob: -10.701969146728516
    5. ')' → logprob: -11.201969146728516
    6. '_=' → logprob: -11.701969146728516
    7. '[' → logprob: -12.201969146728516
    8. ' ' → logprob: -12.701969146728516
    9. ' ' → logprob: -12.701969146728516
    10. '=[]' → logprob: -12.826969146728516

Token 134: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008572661899961531
    2. ' ' → logprob: -7.125857353210449
    3. '1' → logprob: -9.87585735321045
    4. 'B' → logprob: -14.12585735321045
    5. '(' → logprob: -14.87585735321045
    6. 'C' → logprob: -16.125856399536133
    7. ' B' → logprob: -16.750856399536133
    8. '   ' → logprob: -16.875856399536133
    9. ' (' → logprob: -17.375856399536133
    10. ' ' → logprob: -17.750856399536133

Token 135: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00171563564799726
    2. '1' → logprob: -6.376715660095215
    3. '(' → logprob: -12.126715660095215
    4. 'B' → logprob: -12.251715660095215
    5. 'C' → logprob: -13.626715660095215
    6. '(B' → logprob: -13.751715660095215
    7. ' ' → logprob: -14.876715660095215
    8. '(C' → logprob: -15.876715660095215
    9. 'pow' → logprob: -16.1267147064209
    10. '2' → logprob: -16.5017147064209

Token 136: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0014295210130512714
    2. ' for' → logprob: -7.001429557800293
    3. '
' → logprob: -7.626429557800293
    4. 'i' → logprob: -11.126429557800293
    5. '' → logprob: -12.001429557800293
    6. ' 
' → logprob: -13.251429557800293
    7. ',' → logprob: -13.376429557800293
    8. '+' → logprob: -14.251429557800293
    9. 'n' → logprob: -14.501429557800293
    10. ',
' → logprob: -14.501429557800293

Token 137: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005794849130325019
    2. 'i' → logprob: -7.500579357147217
    3. ' for' → logprob: -11.000579833984375
    4. 'f' → logprob: -12.250579833984375
    5. '#' → logprob: -13.125579833984375
    6. 'j' → logprob: -14.250579833984375
    7. ',' → logprob: -14.875579833984375
    8. ')' → logprob: -14.875579833984375
    9. 'n' → logprob: -15.500579833984375
    10. '(' → logprob: -15.625579833984375

Token 138: ' Le' (ID: 2018)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0010927118128165603
    2. 'i' → logprob: -6.876092910766602
    3. ' for' → logprob: -10.001092910766602
    4. 'j' → logprob: -11.626092910766602
    5. 'from' → logprob: -14.126092910766602
    6. 'f' → logprob: -14.501092910766602
    7. 'range' → logprob: -14.751092910766602
    8. 'pow' → logprob: -14.876092910766602
    9. ' i' → logprob: -15.251092910766602
    10. 'fo' → logprob: -15.376092910766602

Token 139: ' coeur' (ID: 61137)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5489048361778259
    2. 'for' → logprob: -0.9239048361778259
    3. 'i' → logprob: -4.048904895782471
    4. ' i' → logprob: -5.173904895782471
    5. ' ' → logprob: -6.673904895782471
    6. 's' → logprob: -8.548904418945312
    7. ' fo' → logprob: -9.048904418945312
    8. 'r' → logprob: -9.048904418945312
    9. 'n' → logprob: -9.173904418945312
    10. ' ' → logprob: -9.298904418945312

Token 140: ' du' (ID: 1462)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0304978359490633
    2. 'de' → logprob: -4.280498027801514
    3. ' for' → logprob: -4.530498027801514
    4. ' de' → logprob: -5.405498027801514
    5. ' ' → logprob: -8.030497550964355
    6. 'du' → logprob: -8.280497550964355
    7. ' of' → logprob: -8.780497550964355
    8. 'of' → logprob: -10.280497550964355
    9. '_' → logprob: -10.280497550964355
    10. '=' → logprob: -10.780497550964355

Token 141: ' calcul' (ID: 7559)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21472899615764618
    2. ' for' → logprob: -2.089729070663452
    3. ' code' → logprob: -3.214729070663452
    4. 'code' → logprob: -3.589729070663452
    5. 'range' → logprob: -8.089729309082031
    6. ' algorithm' → logprob: -8.464729309082031
    7. 'programme' → logprob: -8.589729309082031
    8. 'algorithm' → logprob: -8.839729309082031
    9. ' programme' → logprob: -8.964729309082031
    10. ' problème' → logprob: -9.089729309082031

Token 142: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00010032468708232045
    2. ' for' → logprob: -9.375100135803223
    3. 'i' → logprob: -11.375100135803223
    4. '
' → logprob: -13.500100135803223
    5. ':' → logprob: -13.875100135803223
    6. ':
' → logprob: -15.125100135803223
    7. '=' → logprob: -15.125100135803223
    8. ',' → logprob: -15.250100135803223
    9. ')' → logprob: -15.750100135803223
    10. 'n' → logprob: -15.875100135803223

Token 143: ' pas' (ID: 2173)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22602558135986328
    2. ' for' → logprob: -1.6010255813598633
    3. ' i' → logprob: -7.976025581359863
    4. 'i' → logprob: -8.351025581359863
    5. ' j' → logprob: -11.226025581359863
    6. 'j' → logprob: -11.351025581359863
    7. ' 
' → logprob: -13.601025581359863
    8. '#' → logprob: -13.976025581359863
    9. 'pour' → logprob: -14.101025581359863
    10. ' pour' → logprob: -14.351025581359863

Token 144: ' super' (ID: 2539)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004642779938876629
    2. ' for' → logprob: -5.754642963409424
    3. 'pour' → logprob: -6.879642963409424
    4. ' ' → logprob: -9.129642486572266
    5. 'à' → logprob: -9.754642486572266
    6. 'en' → logprob: -9.879642486572266
    7. '#' → logprob: -10.379642486572266
    8. 'i' → logprob: -11.004642486572266
    9. '   ' → logprob: -11.129642486572266
    10. '```' → logprob: -11.254642486572266

Token 145: ' clair' (ID: 71396)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2368607521057129
    2. 'clair' → logprob: -2.611860752105713
    3. 'optimal' → logprob: -2.986860752105713
    4. 'com' → logprob: -3.861860752105713
    5. 'optim' → logprob: -3.986860752105713
    6. 'cl' → logprob: -4.361860752105713
    7. ' for' → logprob: -4.861860752105713
    8. ' clair' → logprob: -4.986860752105713
    9. 'indent' → logprob: -5.111860752105713
    10. 'é' → logprob: -5.736860752105713

Token 146: ' au' (ID: 2791)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00594610208645463
    2. ' for' → logprob: -5.130946159362793
    3. '
' → logprob: -11.005946159362793
    4. ',' → logprob: -16.005945205688477
    5. ' 
' → logprob: -16.130945205688477
    6. '<|end|>' → logprob: -16.255945205688477
    7. '	for' → logprob: -16.505945205688477
    8. '=' → logprob: -16.880945205688477
    9. '_for' → logprob: -17.255945205688477
    10. 'pour' → logprob: -17.255945205688477

Token 147: ' début' (ID: 29589)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.37494808435440063
    2. 'for' → logprob: -2.374948024749756
    3. 'range' → logprob: -2.624948024749756
    4. 'jourd' → logprob: -2.874948024749756
    5. 'pass' → logprob: -3.999948024749756
    6. 'prem' → logprob: -3.999948024749756
    7. '#' → logprob: -4.874948024749756
    8. 'i' → logprob: -4.999948024749756
    9. 'len' → logprob: -5.624948024749756
    10. 'c' → logprob: -5.624948024749756

Token 148: ' mais' (ID: 2899)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0009130131802521646
    2. ' for' → logprob: -7.000913143157959
    3. 'i' → logprob: -13.8759126663208
    4. '
' → logprob: -14.7509126663208
    5. '```' → logprob: -17.000913619995117
    6. 'n' → logprob: -17.500913619995117
    7. ':' → logprob: -18.250913619995117
    8. '' → logprob: -18.875913619995117
    9. ',' → logprob: -19.000913619995117
    10. '	for' → logprob: -19.125913619995117

Token 149: ' bon' (ID: 4846)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03584209457039833
    2. ' for' → logprob: -3.535842180252075
    3. 'pour' → logprob: -5.160841941833496
    4. ' pour' → logprob: -8.535841941833496
    5. '   ' → logprob: -10.035841941833496
    6. '#' → logprob: -10.910841941833496
    7. 'f' → logprob: -11.785841941833496
    8. 'bien' → logprob: -12.160841941833496
    9. 'j' → logprob: -12.285841941833496
    10. 'c' → logprob: -12.535841941833496

Token 150: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02681456319987774
    2. ' for' → logprob: -3.7768144607543945
    3. '
' → logprob: -5.6518144607543945
    4. '<|end|>' → logprob: -11.276814460754395
    5. '```' → logprob: -11.526814460754395
    6. ':' → logprob: -11.526814460754395
    7. '' → logprob: -11.651814460754395
    8. ' 
' → logprob: -12.901814460754395
    9. ':
' → logprob: -13.651814460754395
    10. 'i' → logprob: -13.776814460754395

Token 151: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2664456789934775e-06
    2. ' for' → logprob: -13.625000953674316
    3. '```' → logprob: -17.625001907348633
    4. '
' → logprob: -20.250001907348633
    5. 'from' → logprob: -20.875001907348633
    6. 'n' → logprob: -21.125001907348633
    7. 'i' → logprob: -21.500001907348633
    8. '	for' → logprob: -21.625001907348633
    9. '``' → logprob: -21.750001907348633
    10. '    
' → logprob: -22.750001907348633

Token 152: ' k' (ID: 372)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.001723607536405325
    2. 'i' → logprob: -6.376723766326904
    3. ' ' → logprob: -11.751723289489746
    4. '	i' → logprob: -11.751723289489746
    5. ' ' → logprob: -12.626723289489746
    6. ' range' → logprob: -14.251723289489746
    7. '   ' → logprob: -15.001723289489746
    8. '```' → logprob: -15.126723289489746
    9. '_i' → logprob: -15.251723289489746
    10. '(i' → logprob: -15.876723289489746

Token 153: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03588257357478142
    2. 'in' → logprob: -3.4108824729919434
    3. ' ' → logprob: -6.160882472991943
    4. 'k' → logprob: -10.285882949829102
    5. '  ' → logprob: -11.160882949829102
    6. ',' → logprob: -11.160882949829102
    7. ' k' → logprob: -11.535882949829102
    8. ' i' → logprob: -11.785882949829102
    9. ' ' → logprob: -11.910882949829102
    10. '	in' → logprob: -12.160882949829102

Token 154: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12696684896945953
    2. ' range' → logprob: -2.126966953277588
    3. 'C' → logprob: -11.12696647644043
    4. ' C' → logprob: -11.50196647644043
    5. ' ' → logprob: -12.25196647644043
    6. '(range' → logprob: -12.87696647644043
    7. '   ' → logprob: -13.37696647644043
    8. '  ' → logprob: -13.50196647644043
    9. '	range' → logprob: -13.62696647644043
    10. ')' → logprob: -14.00196647644043

Token 155: '(' (ID: 7)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0022020016331225634
    2. '(' → logprob: -6.127202033996582
    3. '(len' → logprob: -11.502202033996582
    4. '(n' → logprob: -12.252202033996582
    5. 'N' → logprob: -13.627202033996582
    6. '(
' → logprob: -15.127202033996582
    7. '(M' → logprob: -15.752202033996582
    8. '(C' → logprob: -16.627201080322266
    9. ' (' → logprob: -16.877201080322266
    10. '1' → logprob: -17.002201080322266

Token 156: '1' (ID: 16)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -5.676981345459353e-06
    2. '(N' → logprob: -12.125005722045898
    3. ' N' → logprob: -15.875005722045898
    4. '(' → logprob: -17.7500057220459
    5. '   ' → logprob: -18.0000057220459
    6. '1' → logprob: -18.1250057220459
    7. 'len' → logprob: -19.2500057220459
    8. '	N' → logprob: -19.5000057220459
    9. 'n' → logprob: -20.6250057220459
    10. '0' → logprob: -20.6250057220459

Token 157: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007251765113323927
    2. ',N' → logprob: -5.507251739501953
    3. ' ,' → logprob: -5.757251739501953
    4. ',len' → logprob: -12.882251739501953
    5. ',n' → logprob: -13.382251739501953
    6. ',
' → logprob: -13.382251739501953
    7. '(N' → logprob: -14.132251739501953
    8. '   ' → logprob: -14.257251739501953
    9. ' ' → logprob: -14.632251739501953
    10. '

' → logprob: -15.882251739501953

Token 158: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -5.848420551046729e-05
    2. ' N' → logprob: -9.7500581741333
    3. '   ' → logprob: -16.625059127807617
    4. 'len' → logprob: -16.750059127807617
    5. 'n' → logprob: -18.375059127807617
    6. ' ' → logprob: -19.625059127807617
    7. '	N' → logprob: -19.875059127807617
    8. '(N' → logprob: -20.750059127807617
    9. '```' → logprob: -21.375059127807617
    10. '  ' → logprob: -21.500059127807617

Token 159: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.007169266697019339
    2. '):' → logprob: -5.007169246673584
    3. ' +' → logprob: -8.007169723510742
    4. '):
' → logprob: -9.132169723510742
    5. ')' → logprob: -12.132169723510742
    6. '-' → logprob: -13.382169723510742
    7. '   ' → logprob: -13.507169723510742
    8. '1' → logprob: -14.007169723510742
    9. '```' → logprob: -14.382169723510742
    10. '):

' → logprob: -14.507169723510742

Token 160: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -13.25000286102295
    3. '2' → logprob: -14.25000286102295
    4. '```' → logprob: -16.000001907348633
    5. ')' → logprob: -16.250001907348633
    6. '   ' → logprob: -17.125001907348633
    7. '+' → logprob: -17.125001907348633
    8. '):
' → logprob: -17.500001907348633
    9. '):' → logprob: -18.500001907348633
    10. '{' → logprob: -19.625001907348633

Token 161: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00012296605564188212
    2. ':' → logprob: -9.625123023986816
    3. ')' → logprob: -10.375123023986816
    4. ' ):' → logprob: -11.125123023986816
    5. '):
' → logprob: -11.500123023986816
    6. '}:' → logprob: -15.375123023986816
    7. ']:' → logprob: -15.500123023986816
    8. ' :' → logprob: -16.1251220703125
    9. ',' → logprob: -16.5001220703125
    10. '():' → logprob: -17.0001220703125

Token 162: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03176386281847954
    2. 'result' → logprob: -3.531763792037964
    3. ' result' → logprob: -6.906764030456543
    4. '    
' → logprob: -7.406764030456543
    5. '       ' → logprob: -8.781764030456543
    6. '   ' → logprob: -10.031764030456543
    7. ' ' → logprob: -10.531764030456543
    8. '	result' → logprob: -10.531764030456543
    9. 's' → logprob: -10.656764030456543
    10. '```' → logprob: -11.156764030456543

Token 163: ' coeff' (ID: 34539)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.09675534814596176
    2. '   ' → logprob: -2.596755266189575
    3. 'val' → logprob: -5.596755504608154
    4. ' result' → logprob: -5.846755504608154
    5. 'diff' → logprob: -6.471755504608154
    6. 'min' → logprob: -6.596755504608154
    7. 'a' → logprob: -6.596755504608154
    8. 'for' → logprob: -6.721755504608154
    9. 'res' → logprob: -6.971755504608154
    10. 'x' → logprob: -7.096755504608154

Token 164: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20152170956134796
    2. '=' → logprob: -1.7015217542648315
    3. ')' → logprob: -10.076521873474121
    4. 's' → logprob: -10.951521873474121
    5. '=k' → logprob: -11.076521873474121
    6. ' ' → logprob: -11.701521873474121
    7. ' ' → logprob: -12.451521873474121
    8. 'k' → logprob: -12.451521873474121
    9. ']' → logprob: -13.326521873474121
    10. '_' → logprob: -13.326521873474121

Token 165: ' ((' (ID: 3536)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.23636330664157867
    2. '(B' → logprob: -1.7363632917404175
    3. ' B' → logprob: -3.736363410949707
    4. ' (' → logprob: -5.486363410949707
    5. '(C' → logprob: -5.861363410949707
    6. 'C' → logprob: -5.986363410949707
    7. '(' → logprob: -7.736363410949707
    8. '((' → logprob: -8.861363410949707
    9. ' C' → logprob: -9.236363410949707
    10. ' ' → logprob: -9.361363410949707

Token 166: 'N' (ID: 45)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0031221022363752127
    2. ' B' → logprob: -6.253122329711914
    3. '(B' → logprob: -7.378122329711914
    4. '2' → logprob: -8.628122329711914
    5. 'C' → logprob: -8.628122329711914
    6. 'k' → logprob: -9.003122329711914
    7. '(' → logprob: -10.628122329711914
    8. '   ' → logprob: -11.378122329711914
    9. ' ' → logprob: -11.503122329711914
    10. ' (' → logprob: -11.628122329711914

Token 167: '-k' (ID: 10897)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4034717381000519
    2. '-' → logprob: -1.6534717082977295
    3. '-k' → logprob: -2.0284717082977295
    4. '+' → logprob: -4.903471946716309
    5. '
' → logprob: -7.528471946716309
    6. ' +' → logprob: -8.028471946716309
    7. '+k' → logprob: -8.028471946716309
    8. ' ' → logprob: -8.903471946716309
    9. ' 
' → logprob: -9.153471946716309
    10. 'k' → logprob: -9.403471946716309

Token 168: ')*' (ID: 11043)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3379988372325897
    2. ')' → logprob: -1.962998867034912
    3. ' +' → logprob: -2.087998867034912
    4. ' )' → logprob: -4.962998867034912
    5. ' -' → logprob: -5.337998867034912
    6. ')*' → logprob: -5.587998867034912
    7. '-' → logprob: -6.087998867034912
    8. '))' → logprob: -6.712998867034912
    9. ')+' → logprob: -6.837998867034912
    10. ')-' → logprob: -7.712998867034912

Token 169: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.3552899658679962
    2. '2' → logprob: -1.9802899360656738
    3. ' B' → logprob: -3.480289936065674
    4. 'k' → logprob: -3.605289936065674
    5. '-' → logprob: -3.855289936065674
    6. '-B' → logprob: -4.355289936065674
    7. 'C' → logprob: -4.730289936065674
    8. '1' → logprob: -4.980289936065674
    9. '(B' → logprob: -5.105289936065674
    10. '*' → logprob: -5.230289936065674

Token 170: '[N' (ID: 49776)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.5265090465545654
    2. '[N' → logprob: -0.9015090465545654
    3. '[-' → logprob: -5.9015092849731445
    4. '[' → logprob: -7.6515092849731445
    5. '[C' → logprob: -9.776509284973145
    6. 'k' → logprob: -9.901509284973145
    7. '[B' → logprob: -11.151509284973145
    8. 'N' → logprob: -11.526509284973145
    9. '[len' → logprob: -12.151509284973145
    10. '[n' → logprob: -12.151509284973145

Token 171: '-k' (ID: 10897)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2822728157043457
    2. '-k' → logprob: -1.4072728157043457
    3. ' -' → logprob: -6.907272815704346
    4. '[k' → logprob: -9.282272338867188
    5. 'k' → logprob: -11.532272338867188
    6. '-n' → logprob: -12.032272338867188
    7. '[-' → logprob: -12.657272338867188
    8. '-N' → logprob: -13.407272338867188
    9. '[' → logprob: -13.532272338867188
    10. '   ' → logprob: -13.657272338867188

Token 172: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.19366766512393951
    2. ']' → logprob: -2.6936676502227783
    3. '()-' → logprob: -3.3186676502227783
    4. '()' → logprob: -3.6936676502227783
    5. '()]' → logprob: -3.9436676502227783
    6. '])' → logprob: -4.818667888641357
    7. ']+' → logprob: -5.193667888641357
    8. ' -' → logprob: -5.568667888641357
    9. ']-' → logprob: -5.943667888641357
    10. '+' → logprob: -6.568667888641357

Token 173: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007485175738111138
    2. ']' → logprob: -7.625748634338379
    3. '   ' → logprob: -9.375748634338379
    4. ' ' → logprob: -9.625748634338379
    5. 'k' → logprob: -10.375748634338379
    6. ')' → logprob: -10.375748634338379
    7. '2' → logprob: -11.500748634338379
    8. 's' → logprob: -12.125748634338379
    9. '```' → logprob: -12.625748634338379
    10. '  ' → logprob: -12.750748634338379

Token 174: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.24666818976402283
    2. '-' → logprob: -1.8716682195663452
    3. ')' → logprob: -3.1216681003570557
    4. '+' → logprob: -4.371668338775635
    5. '-C' → logprob: -5.871668338775635
    6. '-B' → logprob: -6.746668338775635
    7. ' )' → logprob: -6.871668338775635
    8. ')%' → logprob: -7.246668338775635
    9. ' +' → logprob: -7.746668338775635
    10. '-k' → logprob: -7.996668338775635

Token 175: ' if' (ID: 538)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3205636143684387
    2. '-' → logprob: -1.945563554763794
    3. '-B' → logprob: -2.195563554763794
    4. '-C' → logprob: -4.820563793182373
    5. ')' → logprob: -5.195563793182373
    6. '+' → logprob: -5.820563793182373
    7. '%' → logprob: -7.070563793182373
    8. '   ' → logprob: -7.695563793182373
    9. '-k' → logprob: -7.820563793182373
    10. ')%' → logprob: -8.070563316345215

Token 176: ' N' (ID: 478)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.10775312036275864
    2. ' k' → logprob: -2.357753038406372
    3. 'N' → logprob: -5.232753276824951
    4. ' N' → logprob: -6.732753276824951
    5. '(k' → logprob: -7.607753276824951
    6. '(N' → logprob: -7.982753276824951
    7. ' (' → logprob: -9.232752799987793
    8. ' ' → logprob: -10.857752799987793
    9. '(' → logprob: -11.857752799987793
    10. '0' → logprob: -12.357752799987793

Token 177: '-k' (ID: 10897)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20488879084587097
    2. '>' → logprob: -1.9548888206481934
    3. '-k' → logprob: -3.5798888206481934
    4. ' >' → logprob: -4.829888820648193
    5. 'else' → logprob: -5.829888820648193
    6. ' -' → logprob: -5.954888820648193
    7. '!=' → logprob: -6.954888820648193
    8. '>=' → logprob: -7.579888820648193
    9. ' else' → logprob: -8.704888343811035
    10. 'k' → logprob: -8.829888343811035

Token 178: '-' (ID: 12)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.41520923376083374
    2. '>=' → logprob: -1.7902092933654785
    3. 'else' → logprob: -2.1652092933654785
    4. '!=' → logprob: -3.4152092933654785
    5. ' >' → logprob: -4.0402092933654785
    6. ' >=' → logprob: -5.6652092933654785
    7. ' else' → logprob: -6.0402092933654785
    8. ' !=' → logprob: -6.7902092933654785
    9. ' ' → logprob: -9.16520881652832
    10. '!=-' → logprob: -9.29020881652832

Token 179: '1' (ID: 16)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.8601796627044678
    2. '1' → logprob: -1.1101796627044678
    3. '-' → logprob: -1.8601796627044678
    4. '0' → logprob: -2.7351796627044678
    5. ' ' → logprob: -4.485179901123047
    6. '>=' → logprob: -5.235179901123047
    7. 'else' → logprob: -5.610179901123047
    8. ' >' → logprob: -5.860179901123047
    9. ' -' → logprob: -5.985179901123047
    10. '>-' → logprob: -7.860179901123047

Token 180: '>=' (ID: 20974)
  Prédit: '>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.05536649003624916
    2. ' >=' → logprob: -2.9303665161132812
    3. '>' → logprob: -8.055366516113281
    4. 'else' → logprob: -10.180366516113281
    5. '!=' → logprob: -10.305366516113281
    6. ')>=' → logprob: -10.430366516113281
    7. ']>=' → logprob: -11.305366516113281
    8. ' ' → logprob: -11.430366516113281
    9. ' >' → logprob: -11.555366516113281
    10. '!=-' → logprob: -12.305366516113281

Token 181: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019289902411401272
    2. ' ' → logprob: -6.251928806304932
    3. '   ' → logprob: -15.62692928314209
    4. 'else' → logprob: -16.251928329467773
    5. '  ' → logprob: -17.001928329467773
    6. '1' → logprob: -17.251928329467773
    7. '۰' → logprob: -17.251928329467773
    8. '    ' → logprob: -17.501928329467773
    9. '
' → logprob: -17.501928329467773
    10. ')' → logprob: -18.064428329467773

Token 182: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.7211606502532959
    2. ' else' → logprob: -0.8461606502532959
    3. ' -' → logprob: -3.346160650253296
    4. '-' → logprob: -3.471160650253296
    5. '+' → logprob: -4.721160888671875
    6. ')' → logprob: -5.096160888671875
    7. ' +' → logprob: -6.971160888671875
    8. ' ' → logprob: -7.596160888671875
    9. ' )' → logprob: -7.721160888671875
    10. '-B' → logprob: -7.846160888671875

Token 183: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.038593679666519165
    2. '1' → logprob: -3.6635937690734863
    3. ' ' → logprob: -4.413593769073486
    4. '   ' → logprob: -10.163593292236328
    5. '(' → logprob: -10.413593292236328
    6. ')' → logprob: -11.538593292236328
    7. 'B' → logprob: -12.038593292236328
    8. 'k' → logprob: -12.601093292236328
    9. ' (' → logprob: -12.601093292236328
    10. ' B' → logprob: -12.663593292236328

Token 184: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12850992381572723
    2. '1' → logprob: -2.128509998321533
    3. ' ' → logprob: -6.503509998321533
    4. '(' → logprob: -9.878509521484375
    5. 'B' → logprob: -11.753509521484375
    6. '   ' → logprob: -11.878509521484375
    7. 'k' → logprob: -13.003509521484375
    8. ')' → logprob: -13.191009521484375
    9. '2' → logprob: -13.191009521484375
    10. ' (' → logprob: -13.816009521484375

Token 185: ')' (ID: 8)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -1.1485624313354492
    2. ')' → logprob: -1.2735624313354492
    3. '+' → logprob: -1.5235624313354492
    4. '-' → logprob: -2.523562431335449
    5. '   ' → logprob: -2.773562431335449
    6. ' +' → logprob: -3.523562431335449
    7. ')+' → logprob: -5.648562431335449
    8. ' )' → logprob: -6.148562431335449
    9. ')-(' → logprob: -6.273562431335449
    10. ' ' → logprob: -6.773562431335449

Token 186: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.31383445858955383
    2. '   ' → logprob: -1.8138344287872314
    3. ' +' → logprob: -2.8138344287872314
    4. '-' → logprob: -3.4388344287872314
    5. ' -' → logprob: -4.9388346672058105
    6. '+B' → logprob: -6.4388346672058105
    7. ')' → logprob: -6.8138346672058105
    8. '+
' → logprob: -6.8138346672058105
    9. ' ' → logprob: -7.1888346672058105
    10. '+C' → logprob: -7.4388346672058105

Token 187: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.17055781185626984
    2. '(B' → logprob: -2.170557737350464
    3. ' B' → logprob: -4.170557975769043
    4. '((' → logprob: -4.295557975769043
    5. ' (' → logprob: -5.545557975769043
    6. '(k' → logprob: -5.795557975769043
    7. '(' → logprob: -6.045557975769043
    8. '   ' → logprob: -6.795557975769043
    9. '(N' → logprob: -7.170557975769043
    10. 'k' → logprob: -7.295557975769043

Token 188: '[N' (ID: 49776)
  Prédit: '[N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.07185082137584686
    2. '[k' → logprob: -2.6968507766723633
    3. '[' → logprob: -6.571850776672363
    4. '[n' → logprob: -7.946850776672363
    5. 'k' → logprob: -9.821850776672363
    6. 'N' → logprob: -10.196850776672363
    7. '(N' → logprob: -10.321850776672363
    8. '[-' → logprob: -11.571850776672363
    9. '[
' → logprob: -12.196850776672363
    10. '[C' → logprob: -12.196850776672363

Token 189: '-k' (ID: 10897)
  Prédit: '-k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-k' → logprob: -0.020799370482563972
    2. 'k' → logprob: -4.520799160003662
    3. '-' → logprob: -4.645799160003662
    4. ' -' → logprob: -9.27079963684082
    5. '<|end|>' → logprob: -13.27079963684082
    6. '[' → logprob: -13.52079963684082
    7. '-n' → logprob: -13.77079963684082
    8. '-u' → logprob: -14.64579963684082
    9. '-token' → logprob: -14.64579963684082
    10. ' ' → logprob: -14.89579963684082

Token 190: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6375848650932312
    2. '-' → logprob: -0.7625848650932312
    3. '])' → logprob: -5.887584686279297
    4. ' -' → logprob: -7.762584686279297
    5. ']-' → logprob: -7.887584686279297
    6. ' ]' → logprob: -7.887584686279297
    7. '[' → logprob: -8.387584686279297
    8. '1' → logprob: -8.512584686279297
    9. ']
' → logprob: -9.262584686279297
    10. '[-' → logprob: -9.387584686279297

Token 191: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2640220522880554
    2. 'result' → logprob: -1.7640221118927002
    3. ')' → logprob: -3.6390221118927
    4. '
' → logprob: -4.764021873474121
    5. ' result' → logprob: -4.889021873474121
    6. '<|end|>' → logprob: -5.514021873474121
    7. '    
' → logprob: -5.639021873474121
    8. '*' → logprob: -5.889021873474121
    9. '%' → logprob: -6.014021873474121
    10. ' if' → logprob: -6.764021873474121

Token 192: ' resultat' (ID: 67404)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.07652196288108826
    2. '   ' → logprob: -3.201521873474121
    3. '*' → logprob: -4.451521873474121
    4. '    
' → logprob: -5.076521873474121
    5. ' result' → logprob: -5.326521873474121
    6. 'if' → logprob: -5.451521873474121
    7. ' if' → logprob: -6.201521873474121
    8. 'coeff' → logprob: -6.701521873474121
    9. '
' → logprob: -7.076521873474121
    10. ' *' → logprob: -7.201521873474121

Token 193: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.002938002347946167
    2. ' +=' → logprob: -6.3779377937316895
    3. '=' → logprob: -7.0029377937316895
    4. '+=(' → logprob: -8.252938270568848
    5. '%=' → logprob: -10.377938270568848
    6. '+' → logprob: -11.502938270568848
    7. ' =' → logprob: -11.627938270568848
    8. ']+=' → logprob: -12.252938270568848
    9. '(' → logprob: -12.627938270568848
    10. '```' → logprob: -13.627938270568848

Token 194: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.7116380333900452
    2. '(C' → logprob: -0.7116380333900452
    3. ' C' → logprob: -4.8366379737854
    4. 'coeff' → logprob: -5.2116379737854
    5. ' (' → logprob: -6.2116379737854
    6. '(coeff' → logprob: -6.3366379737854
    7. '(' → logprob: -7.5866379737854
    8. '((' → logprob: -8.336638450622559
    9. ' coeff' → logprob: -8.586638450622559
    10. '   ' → logprob: -9.586638450622559

Token 195: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -1.688212614681106e-05
    2. '[' → logprob: -11.625017166137695
    3. '[-' → logprob: -12.625017166137695
    4. '[N' → logprob: -12.875017166137695
    5. 'k' → logprob: -13.750017166137695
    6. '[i' → logprob: -15.000017166137695
    7. '[C' → logprob: -16.125017166137695
    8. '[n' → logprob: -16.500017166137695
    9. ' [' → logprob: -16.750017166137695
    10. '[
' → logprob: -16.875017166137695

Token 196: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.018896419554948807
    2. ']' → logprob: -4.268896579742432
    3. ' -' → logprob: -5.393896579742432
    4. '])' → logprob: -9.268896102905273
    5. '1' → logprob: -10.893896102905273
    6. ']*' → logprob: -11.268896102905273
    7. '   ' → logprob: -11.518896102905273
    8. ' ]' → logprob: -12.018896102905273
    9. '−' → logprob: -12.268896102905273
    10. '`]' → logprob: -12.268896102905273

Token 197: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.750024795532227
    3. '2' → logprob: -13.937524795532227
    4. '0' → logprob: -14.687524795532227
    5. '   ' → logprob: -14.750024795532227
    6. '```' → logprob: -15.812524795532227
    7. ')' → logprob: -16.562524795532227
    8. '  ' → logprob: -16.562524795532227
    9. '１' → logprob: -16.750024795532227
    10. '۱' → logprob: -16.812524795532227

Token 198: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.08975129574537277
    2. ' *' → logprob: -2.4647512435913086
    3. ']' → logprob: -7.464751243591309
    4. ']*' → logprob: -8.464751243591309
    5. ' ' → logprob: -11.964751243591309
    6. ')' → logprob: -11.964751243591309
    7. ' ' → logprob: -12.464751243591309
    8. ')*' → logprob: -12.839751243591309
    9. '   ' → logprob: -13.214751243591309
    10. '**' → logprob: -14.089751243591309

Token 199: 'coeff' (ID: 120059)
  Prédit: 'coeff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coeff' → logprob: -3.8889261304575484e-06
    2. ' coeff' → logprob: -12.875003814697266
    3. '(coeff' → logprob: -13.625003814697266
    4. 'coef' → logprob: -15.875003814697266
    5. '_coeff' → logprob: -20.875003814697266
    6. 'Coeff' → logprob: -21.250003814697266
    7. 'coe' → logprob: -21.375003814697266
    8. '   ' → logprob: -21.500003814697266
    9. 'pow' → logprob: -21.750003814697266
    10. '.coe' → logprob: -21.875003814697266

Token 200: '*' (ID: 9)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.3138628602027893
    2. '%' → logprob: -1.3138628005981445
    3. ')' → logprob: -7.9388628005981445
    4. ')%' → logprob: -9.188862800598145
    5. ' ' → logprob: -10.063862800598145
    6. '
' → logprob: -10.438862800598145
    7. ' %=' → logprob: -11.063862800598145
    8. '%B' → logprob: -11.188862800598145
    9. ' )' → logprob: -11.438862800598145
    10. ' %
' → logprob: -11.688862800598145

Token 201: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.5458533763885498
    2. 'k' → logprob: -1.9208533763885498
    3. 'C' → logprob: -2.17085337638855
    4. 'coeff' → logprob: -2.29585337638855
    5. '1' → logprob: -4.545853614807129
    6. '2' → logprob: -4.670853614807129
    7. ' B' → logprob: -4.920853614807129
    8. 'pow' → logprob: -5.045853614807129
    9. ' coeff' → logprob: -5.545853614807129
    10. ' k' → logprob: -5.795853614807129

Token 202: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.3513142466545105
    2. '[N' → logprob: -1.2263143062591553
    3. 'k' → logprob: -6.601314067840576
    4. '[' → logprob: -6.976314067840576
    5. '[-' → logprob: -8.476314544677734
    6. '[n' → logprob: -8.476314544677734
    7. 'N' → logprob: -10.226314544677734
    8. ' [' → logprob: -10.851314544677734
    9. '

' → logprob: -11.351314544677734
    10. '[
' → logprob: -11.476314544677734

Token 203: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.019363049417734146
    2. '[k' → logprob: -4.894362926483154
    3. '[-' → logprob: -5.394362926483154
    4. 'k' → logprob: -6.144362926483154
    5. ' -' → logprob: -6.269362926483154
    6. '-k' → logprob: -6.269362926483154
    7. '[N' → logprob: -7.394362926483154
    8. '[' → logprob: -8.269363403320312
    9. '(k' → logprob: -9.144363403320312
    10. ' k' → logprob: -9.769363403320312

Token 204: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.228561349213123e-05
    2. '2' → logprob: -10.125052452087402
    3. '-' → logprob: -11.625052452087402
    4. ' ' → logprob: -13.125052452087402
    5. '   ' → logprob: -14.750052452087402
    6. '```' → logprob: -15.000052452087402
    7. '3' → logprob: -15.875052452087402
    8. '0' → logprob: -15.875052452087402
    9. '(' → logprob: -16.625051498413086
    10. '
' → logprob: -16.750051498413086

Token 205: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8533570170402527
    2. ')%' → logprob: -0.8533570170402527
    3. ']%' → logprob: -2.1033570766448975
    4. ']' → logprob: -3.8533570766448975
    5. '%' → logprob: -5.603356838226318
    6. ' )' → logprob: -7.603356838226318
    7. '])' → logprob: -7.728356838226318
    8. ' %' → logprob: -9.978357315063477
    9. ')
' → logprob: -10.603357315063477
    10. ')]' → logprob: -11.353357315063477

Token 206: '   ' (ID: 271)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.16066184639930725
    2. ' %' → logprob: -2.1606619358062744
    3. ')' → logprob: -3.5356619358062744
    4. ')%' → logprob: -5.785661697387695
    5. '
' → logprob: -7.910661697387695
    6. 'result' → logprob: -8.410661697387695
    7. ' )' → logprob: -8.910661697387695
    8. '%
' → logprob: -9.285661697387695
    9. ' %=' → logprob: -10.410661697387695
    10. ' result' → logprob: -10.785661697387695

Token 207: ' resultat' (ID: 67404)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.21759174764156342
    2. ' %' → logprob: -1.9675917625427246
    3. ')' → logprob: -3.2175917625427246
    4. 'result' → logprob: -4.717591762542725
    5. ')%' → logprob: -5.467591762542725
    6. '
' → logprob: -6.842591762542725
    7. ' result' → logprob: -7.467591762542725
    8. ' )' → logprob: -7.842591762542725
    9. '%
' → logprob: -8.842591285705566
    10. '[result' → logprob: -9.592591285705566

Token 208: ' =' (ID: 314)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.8702688813209534
    2. ' %=' → logprob: -1.1202688217163086
    3. '%=' → logprob: -1.3702688217163086
    4. ' %' → logprob: -7.370268821716309
    5. '=' → logprob: -8.245268821716309
    6. ')%' → logprob: -11.370268821716309
    7. '%
' → logprob: -11.995268821716309
    8. ' ' → logprob: -12.120268821716309
    9. ' ' → logprob: -12.495268821716309
    10. ')' → logprob: -12.620268821716309

Token 209: ' resultat' (ID: 67404)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.011075528338551521
    2. ' resultat' → logprob: -4.511075496673584
    3. ' result' → logprob: -10.761075973510742
    4. '(result' → logprob: -12.886075973510742
    5. ' résultat' → logprob: -13.261075973510742
    6. '[result' → logprob: -13.761075973510742
    7. 'resultado' → logprob: -14.886075973510742
    8. 'res' → logprob: -15.011075973510742
    9. '$result' → logprob: -16.136075973510742
    10. '_result' → logprob: -16.261075973510742

Token 210: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.003178071230649948
    2. ' %' → logprob: -5.753178119659424
    3. '%B' → logprob: -16.003177642822266
    4. '%
' → logprob: -16.378177642822266
    5. '%s' → logprob: -17.503177642822266
    6. '%d' → logprob: -17.503177642822266
    7. '%A' → logprob: -18.128177642822266
    8. '%D' → logprob: -18.128177642822266
    9. '%i' → logprob: -18.128177642822266
    10. ' ' → logprob: -18.253177642822266

Token 211: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -3.128163257315464e-07
    2. ' MOD' → logprob: -15.25
    3. '(M' → logprob: -20.125
    4. '.MOD' → logprob: -20.25
    5. '_MOD' → logprob: -20.875
    6. 'MO' → logprob: -21.375
    7. '```' → logprob: -22.25
    8. '(' → logprob: -22.625
    9. '   ' → logprob: -22.75
    10. '100' → logprob: -22.875

Token 212: ' ' (ID: 220)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0029687879141420126
    2. '
' → logprob: -6.377968788146973
    3. ')' → logprob: -6.752968788146973
    4. '<|end|>' → logprob: -10.377968788146973
    5. '```' → logprob: -10.752968788146973
    6. ' print' → logprob: -10.752968788146973
    7. ')
' → logprob: -12.002968788146973
    8. '  
' → logprob: -12.252968788146973
    9. '(print' → logprob: -12.252968788146973
    10. ']' → logprob: -13.002968788146973

Token 213: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1583954244852066
    2. '<|end|>' → logprob: -2.158395528793335
    3. ')' → logprob: -4.033395290374756
    4. '
' → logprob: -4.533395290374756
    5. '```' → logprob: -6.408395290374756
    6. '#' → logprob: -8.408395767211914
    7. ' print' → logprob: -9.158395767211914
    8. 'return' → logprob: -9.408395767211914
    9. ']' → logprob: -9.408395767211914
    10. '<|end|>' → logprob: -9.783395767211914

Token 214: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 215: ' éviter' (ID: 64013)
  Prédit: 'év'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'év' → logprob: -0.056830767542123795
    2. 're' → logprob: -4.056830883026123
    3. 'g' → logprob: -4.181830883026123
    4. ' éviter' → logprob: -5.431830883026123
    5. 'ev' → logprob: -5.556830883026123
    6. 'contin' → logprob: -5.556830883026123
    7. 'reste' → logprob: -6.056830883026123
    8. 'é' → logprob: -6.681830883026123
    9. 'respect' → logprob: -6.681830883026123
    10. 'être' → logprob: -7.056830883026123

Token 216: ' que' (ID: 661)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.5712652206420898
    2. 'l' → logprob: -1.0712652206420898
    3. 'd' → logprob: -3.07126522064209
    4. 'overflow' → logprob: -3.69626522064209
    5. 'une' → logprob: -4.57126522064209
    6. ' les' → logprob: -5.94626522064209
    7. 'lest' → logprob: -5.94626522064209
    8. 'la' → logprob: -6.32126522064209
    9. 'de' → logprob: -7.19626522064209
    10. 'int' → logprob: -7.44626522064209

Token 217: ' ça' (ID: 13590)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.2716604471206665
    2. 'les' → logprob: -1.2716604471206665
    3. 'une' → logprob: -1.3966604471206665
    4. 'd' → logprob: -3.521660327911377
    5. 'overflow' → logprob: -3.646660327911377
    6. 'que' → logprob: -3.771660327911377
    7. 'int' → logprob: -3.896660327911377
    8. ' les' → logprob: -4.146660327911377
    9. 'un' → logprob: -4.396660327911377
    10. 'result' → logprob: -4.521660327911377

Token 218: ' déb' (ID: 37874)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2056390941143036
    2. 'dev' → logprob: -1.830639123916626
    3. 'dé' → logprob: -4.455638885498047
    4. 'expl' → logprob: -5.330638885498047
    5. 'de' → logprob: -6.330638885498047
    6. 'continue' → logprob: -6.455638885498047
    7. 'ne' → logprob: -6.705638885498047
    8. 'b' → logprob: -7.330638885498047
    9. ' dépasse' → logprob: -7.705638885498047
    10. 'deb' → logprob: -7.830638885498047

Token 219: 'orde' (ID: 14735)
  Prédit: 'orde'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orde' → logprob: -0.04341578856110573
    2. 'ord' → logprob: -3.1684157848358154
    3. 'ordre' → logprob: -8.168416023254395
    4. 'o' → logprob: -10.793416023254395
    5. 'order' → logprob: -10.793416023254395
    6. 'ug' → logprob: -11.168416023254395
    7. '
' → logprob: -11.293416023254395
    8. '

' → logprob: -11.793416023254395
    9. '       ' → logprob: -12.168416023254395
    10. 'u' → logprob: -12.293416023254395

Token 220: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00016086915275081992
    2. '
' → logprob: -9.375161170959473
    3. ')' → logprob: -10.125161170959473
    4. '<|end|>' → logprob: -10.875161170959473
    5. ' print' → logprob: -11.750161170959473
    6. '```' → logprob: -12.625161170959473
    7. '#' → logprob: -13.500161170959473
    8. '#print' → logprob: -13.500161170959473
    9. '(print' → logprob: -14.000161170959473
    10. 'return' → logprob: -14.125161170959473

Token 221: 'result' (ID: 2521)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0007906900718808174
    2. '<|end|>' → logprob: -7.750790596008301
    3. ')' → logprob: -8.5007905960083
    4. '
' → logprob: -9.1257905960083
    5. ' print' → logprob: -10.6257905960083
    6. '```' → logprob: -11.6257905960083
    7. '#' → logprob: -12.2507905960083
    8. '#print' → logprob: -12.6257905960083
    9. 'return' → logprob: -12.7507905960083
    10. '(print' → logprob: -14.2507905960083

Token 222: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -9.253090865968261e-06
    2. 'a' → logprob: -12.375009536743164
    3. 'ats' → logprob: -12.375009536743164
    4. 'ат' → logprob: -14.875009536743164
    5. ' at' → logprob: -16.250009536743164
    6. 'ât' → logprob: -16.875009536743164
    7. 'atl' → logprob: -17.000009536743164
    8. '_at' → logprob: -17.125009536743164
    9. 'atat' → logprob: -17.375009536743164
    10. 'att' → logprob: -17.500009536743164

Token 223: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 224: ' (' (ID: 350)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.16292491555213928
    2. ' resultat' → logprob: -2.4129250049591064
    3. ' result' → logprob: -3.2879250049591064
    4. '(result' → logprob: -3.7879250049591064
    5. 'str' → logprob: -8.287924766540527
    6. ' (' → logprob: -8.412924766540527
    7. 'int' → logprob: -9.162924766540527
    8. ' résultat' → logprob: -9.287924766540527
    9. '[result' → logprob: -10.287924766540527
    10. 'print' → logprob: -10.912924766540527

Token 225: 'result' (ID: 2521)
  Prédit: 'result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0015472410013899207
    2. '(result' → logprob: -6.626547336578369
    3. ' resultat' → logprob: -8.626546859741211
    4. ' result' → logprob: -10.751546859741211
    5. '[result' → logprob: -11.751546859741211
    6. 'res' → logprob: -12.126546859741211
    7. '2' → logprob: -13.751546859741211
    8. 'resultado' → logprob: -14.001546859741211
    9. '=result' → logprob: -14.126546859741211
    10. 'rés' → logprob: -14.501546859741211

Token 226: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -6.551721889991313e-05
    2. '%' → logprob: -10.250065803527832
    3. ' at' → logprob: -10.500065803527832
    4. ' %' → logprob: -14.375065803527832
    5. 'a' → logprob: -15.125065803527832
    6. 'ant' → logprob: -15.125065803527832
    7. ')' → logprob: -15.250065803527832
    8. 't' → logprob: -15.625065803527832
    9. 'ат' → logprob: -15.625065803527832
    10. '	at' → logprob: -16.125064849853516

Token 227: ' *' (ID: 425)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -1.1763707399368286
    2. ' *' → logprob: -1.5513707399368286
    3. '+' → logprob: -2.051370620727539
    4. '-' → logprob: -2.051370620727539
    5. ' +' → logprob: -2.301370620727539
    6. '*' → logprob: -2.426370620727539
    7. ')' → logprob: -3.926370620727539
    8. '%' → logprob: -4.926370620727539
    9. ' %' → logprob: -5.551370620727539
    10. ' )' → logprob: -6.176370620727539

Token 228: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.7506475448608398
    2. '2' → logprob: -1.0006475448608398
    3. 'pow' → logprob: -2.12564754486084
    4. '(B' → logprob: -4.12564754486084
    5. 'inv' → logprob: -5.37564754486084
    6. '(' → logprob: -5.50064754486084
    7. ' B' → logprob: -5.87564754486084
    8. ' ' → logprob: -6.00064754486084
    9. ' pow' → logprob: -6.00064754486084
    10. '3' → logprob: -6.37564754486084

Token 229: '[N' (ID: 49776)
  Prédit: '[N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.005640551447868347
    2. '[' → logprob: -5.505640506744385
    3. '[k' → logprob: -6.755640506744385
    4. '[-' → logprob: -8.880640983581543
    5. ' [' → logprob: -9.255640983581543
    6. 'N' → logprob: -9.880640983581543
    7. '[n' → logprob: -10.630640983581543
    8. '[
' → logprob: -10.630640983581543
    9. '[K' → logprob: -11.005640983581543
    10. '[B' → logprob: -11.630640983581543

Token 230: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0003992104611825198
    2. '-' → logprob: -8.250399589538574
    3. ']' → logprob: -9.750399589538574
    4. '//' → logprob: -9.750399589538574
    5. ' ])' → logprob: -11.625399589538574
    6. ')' → logprob: -12.750399589538574
    7. '*' → logprob: -12.750399589538574
    8. ']%' → logprob: -13.375399589538574
    9. '])-' → logprob: -14.125399589538574
    10. '))' → logprob: -14.500399589538574

Token 231: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.07901878654956818
    2. ' %' → logprob: -2.5790188312530518
    3. ')' → logprob: -9.579018592834473
    4. ')%' → logprob: -10.454018592834473
    5. '%B' → logprob: -10.829018592834473
    6. '
' → logprob: -12.579018592834473
    7. '%
' → logprob: -12.829018592834473
    8. 'print' → logprob: -13.329018592834473
    9. '%A' → logprob: -13.829018592834473
    10. '%D' → logprob: -14.204018592834473

Token 232: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.981667537620524e-06
    2. ' MOD' → logprob: -13.500001907348633
    3. '(M' → logprob: -14.500001907348633
    4. 'MO' → logprob: -17.000001907348633
    5. '(' → logprob: -17.875001907348633
    6. '.MOD' → logprob: -19.625001907348633
    7. '_MOD' → logprob: -19.875001907348633
    8. ' ' → logprob: -20.625001907348633
    9. '```' → logprob: -20.625001907348633
    10. 'MD' → logprob: -20.750001907348633

Token 233: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0008246336947195232
    2. '
' → logprob: -7.125824451446533
    3. '<|end|>' → logprob: -11.750824928283691
    4. ' print' → logprob: -12.125824928283691
    5. ')' → logprob: -12.625824928283691
    6. '#print' → logprob: -13.375824928283691
    7. '```' → logprob: -14.375824928283691
    8. '#' → logprob: -14.750824928283691
    9. '  
' → logprob: -14.750824928283691
    10. '(print' → logprob: -15.750824928283691

Token 234: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0280383548888494e-06
    2. '
' → logprob: -14.500000953674316
    3. ' print' → logprob: -15.125000953674316
    4. '```' → logprob: -16.750001907348633
    5. 'pr' → logprob: -17.125001907348633
    6. '#print' → logprob: -17.875001907348633
    7. '(print' → logprob: -17.875001907348633
    8. '<|end|>' → logprob: -17.875001907348633
    9. 'return' → logprob: -18.000001907348633
    10. ')' → logprob: -18.250001907348633

Token 235: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0015135504072532058
    2. '(' → logprob: -6.501513481140137
    3. '(resultado' → logprob: -12.376513481140137
    4. '(res' → logprob: -12.501513481140137
    5. '(results' → logprob: -13.376513481140137
    6. '(rest' → logprob: -14.626513481140137
    7. ' (' → logprob: -14.876513481140137
    8. 'result' → logprob: -15.501513481140137
    9. '(re' → logprob: -15.626513481140137
    10. '((' → logprob: -16.626514434814453

Token 236: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: 0.0
    2. 'ат' → logprob: -17.875
    3. 'a' → logprob: -19.25
    4. ' at' → logprob: -20.0
    5. 'result' → logprob: -20.375
    6. 't' → logprob: -20.5
    7. 'tat' → logprob: -20.5
    8. 'ats' → logprob: -21.0
    9. 'atat' → logprob: -21.5
    10. 'al' → logprob: -21.75

Token 237: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.77627644513268e-06
    2. ' )' → logprob: -12.250008583068848
    3. ')
' → logprob: -13.125008583068848
    4. '()' → logprob: -14.375008583068848
    5. '())' → logprob: -14.875008583068848
    6. '```' → logprob: -15.125008583068848
    7. '(' → logprob: -15.500008583068848
    8. '))' → logprob: -16.000009536743164
    9. '}' → logprob: -16.875009536743164
    10. '#' → logprob: -17.125009536743164

Token 238: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 239: ' --' (ID: 2230)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 240: ' Fr' (ID: 2312)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6432263851165771
    2. '<|end|>' → logprob: -0.7682263851165771
    3. '
' → logprob: -5.518226623535156
    4. '```' → logprob: -6.018226623535156
    5. '#' → logprob: -6.143226623535156
    6. ' ' → logprob: -7.643226623535156
    7. '}' → logprob: -8.018226623535156
    8. '<|end|>' → logprob: -8.018226623535156
    9. '\n' → logprob: -8.393226623535156
    10. ']' → logprob: -8.518226623535156

Token 241: 'agments' (ID: 64184)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 242: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 243: ' vie' (ID: 8585)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.204549178481102
    2. 'code' → logprob: -1.8295491933822632
    3. '#' → logprob: -4.579549312591553
    4. '<|end|>' → logprob: -4.704549312591553
    5. '...' → logprob: -6.829549312591553
    6. 'Code' → logprob: -6.954549312591553
    7. 'f' → logprob: -7.079549312591553
    8. '```' → logprob: -7.079549312591553
    9. '_code' → logprob: -8.579548835754395
    10. '<|end|>' → logprob: -8.829548835754395

Token 244: 'illes' (ID: 16849)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 245: ' tent' (ID: 11645)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 246: 'atives' (ID: 8015)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 247: ' ci' (ID: 7405)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 248: '-dessous' (ID: 76632)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0022813379764556885
    2. 'n' → logprob: -7.127281188964844
    3. '-' → logprob: -7.377281188964844
    4. '+' → logprob: -8.752281188964844
    5. '--' → logprob: -8.877281188964844
    6. 'u' → logprob: -9.252281188964844
    7. '=' → logprob: -9.752281188964844
    8. '#
' → logprob: -9.752281188964844
    9. 'ont' → logprob: -10.127281188964844
    10. '%' → logprob: -10.502281188964844

Token 249: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 250: 'à' (ID: 708)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39486733078956604
    2. '#' → logprob: -1.1448673009872437
    3. ')#' → logprob: -5.769867420196533
    4. '<|end|>' → logprob: -5.769867420196533
    5. ' )' → logprob: -7.019867420196533
    6. '```' → logprob: -9.019866943359375
    7. '')' → logprob: -9.394866943359375
    8. ')
' → logprob: -9.769866943359375
    9. '...' → logprob: -9.769866943359375
    10. '")' → logprob: -10.019866943359375

Token 251: ' moitié' (ID: 93216)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.000654654751997441
    2. '```' → logprob: -8.875654220581055
    3. ')' → logprob: -9.000654220581055
    4. '###' → logprob: -9.125654220581055
    5. '"""' → logprob: -9.375654220581055
    6. ' #' → logprob: -10.125654220581055
    7. '...' → logprob: -10.875654220581055
    8. ''''' → logprob: -10.875654220581055
    9. '#g' → logprob: -11.000654220581055
    10. ' ' → logprob: -11.125654220581055

Token 252: ' utiles' (ID: 121161)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5404616594314575
    2. 'comment' → logprob: -0.9154616594314575
    3. ')' → logprob: -4.915461540222168
    4. 'com' → logprob: -5.415461540222168
    5. ')#' → logprob: -5.665461540222168
    6. 'c' → logprob: -6.915461540222168
    7. 'compl' → logprob: -8.540461540222168
    8. 'cass' → logprob: -9.040461540222168
    9. 'comm' → logprob: -9.165461540222168
    10. ' #' → logprob: -9.290461540222168

Token 253: '?)' (ID: 16918)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5318366289138794
    2. '#' → logprob: -0.9068366289138794
    3. '...)' → logprob: -5.28183650970459
    4. ')#' → logprob: -6.40683650970459
    5. ' )' → logprob: -6.90683650970459
    6. '...' → logprob: -7.90683650970459
    7. ')
' → logprob: -8.78183650970459
    8. ',' → logprob: -8.78183650970459
    9. ')...' → logprob: -9.90683650970459
    10. '#
' → logprob: -10.28183650970459

Token 254: ' --
' (ID: 83199)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 255: '#
' (ID: 11240)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 256: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8956854343414307
    2. ')' → logprob: -1.0206854343414307
    3. '<|end|>' → logprob: -1.5206854343414307
    4. '```' → logprob: -4.895685195922852
    5. ' ' → logprob: -6.520685195922852
    6. ']' → logprob: -7.395685195922852
    7. '<|end|>' → logprob: -7.395685195922852
    8. '...' → logprob: -7.395685195922852
    9. ' #' → logprob: -7.520685195922852
    10. '[' → logprob: -8.270685195922852

Token 257: 'S' (ID: 50)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4254331886768341
    2. '<|end|>' → logprob: -1.1754331588745117
    3. '```' → logprob: -4.425433158874512
    4. ')' → logprob: -4.925433158874512
    5. ' ' → logprob: -5.050433158874512
    6. '[' → logprob: -5.300433158874512
    7. '<|end|>' → logprob: -5.675433158874512
    8. ']' → logprob: -6.175433158874512
    9. ' #' → logprob: -7.300433158874512
    10. '}' → logprob: -8.300433158874512

Token 258: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1903352588415146
    2. ' =' → logprob: -1.8153352737426758
    3. '#' → logprob: -4.940335273742676
    4. '[' → logprob: -7.690335273742676
    5. '.' → logprob: -7.815335273742676
    6. ' ' → logprob: -7.940335273742676
    7. '...' → logprob: -8.315335273742676
    8. '=[]' → logprob: -8.440335273742676
    9. 'um' → logprob: -8.565335273742676
    10. 'S' → logprob: -8.565335273742676

Token 259: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6832268238067627
    2. '0' → logprob: -1.9332268238067627
    3. ' [' → logprob: -2.0582268238067627
    4. '[]' → logprob: -2.4332268238067627
    5. 'sum' → logprob: -2.9332268238067627
    6. ' []' → logprob: -4.058226585388184
    7. ' ' → logprob: -4.058226585388184
    8. '#' → logprob: -4.308226585388184
    9. '[S' → logprob: -4.808226585388184
    10. '[int' → logprob: -5.308226585388184

Token 260: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6587825417518616
    2. 'int' → logprob: -0.9087825417518616
    3. ']' → logprob: -3.408782482147217
    4. 'x' → logprob: -4.908782482147217
    5. 'sum' → logprob: -4.908782482147217
    6. 'i' → logprob: -5.158782482147217
    7. '1' → logprob: -5.533782482147217
    8. 'N' → logprob: -5.658782482147217
    9. '(' → logprob: -5.658782482147217
    10. '#' → logprob: -6.033782482147217

Token 261: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011003728955984116
    2. ' ]' → logprob: -5.261003494262695
    3. ',' → logprob: -5.386003494262695
    4. ' for' → logprob: -7.886003494262695
    5. '#' → logprob: -8.511003494262695
    6. 'for' → logprob: -9.386003494262695
    7. '0' → logprob: -9.511003494262695
    8. ',
' → logprob: -9.886003494262695
    9. ')' → logprob: -9.886003494262695
    10. '<|end|>' → logprob: -10.011003494262695

Token 262: ' *' (ID: 425)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8833173513412476
    2. ']' → logprob: -1.1333173513412476
    3. '<|end|>' → logprob: -2.258317470550537
    4. '[' → logprob: -2.633317470550537
    5. 'for' → logprob: -3.758317470550537
    6. ' for' → logprob: -4.133317470550537
    7. '
' → logprob: -4.383317470550537
    8. ')' → logprob: -4.633317470550537
    9. ',' → logprob: -5.258317470550537
    10. '[:]' → logprob: -5.383317470550537

Token 263: ' N' (ID: 478)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.2300291657447815
    2. 'N' → logprob: -1.6050291061401367
    3. '(' → logprob: -5.730029106140137
    4. ' (' → logprob: -6.730029106140137
    5. ' N' → logprob: -9.855029106140137
    6. '0' → logprob: -10.480029106140137
    7. '1' → logprob: -10.605029106140137
    8. '100' → logprob: -11.730029106140137
    9. '10' → logprob: -12.480029106140137
    10. '(n' → logprob: -12.480029106140137

Token 264: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 265: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 266: ' cumul' (ID: 163119)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 267: '...' (ID: 1008)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 268: ' je' (ID: 1264)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 269: ' crois' (ID: 65485)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.30897995829582214
    2. '<|end|>' → logprob: -1.5589799880981445
    3. ']' → logprob: -3.6839799880981445
    4. '[' → logprob: -4.1839799880981445
    5. ')' → logprob: -5.1839799880981445
    6. '=' → logprob: -5.6839799880981445
    7. '...' → logprob: -6.6839799880981445
    8. ' ' → logprob: -6.8089799880981445
    9. '<|end|>' → logprob: -7.3089799880981445
    10. ' #' → logprob: -7.4339799880981445

Token 270: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 271: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 272: 'S' (ID: 50)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 273: '[' (ID: 58)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15958695113658905
    2. ' =' → logprob: -2.2845869064331055
    3. '<|end|>' → logprob: -3.9095869064331055
    4. '#' → logprob: -4.2845869064331055
    5. '[' → logprob: -5.2845869064331055
    6. ')' → logprob: -6.2845869064331055
    7. '=[]' → logprob: -6.4095869064331055
    8. '[:]' → logprob: -7.0345869064331055
    9. ']' → logprob: -7.5345869064331055
    10. ' ' → logprob: -8.159586906433105

Token 274: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006648106966167688
    2. '1' → logprob: -5.131648063659668
    3. ']' → logprob: -7.381648063659668
    4. ' ' → logprob: -10.631648063659668
    5. 'N' → logprob: -11.256648063659668
    6. 'i' → logprob: -11.506648063659668
    7. '-' → logprob: -11.631648063659668
    8. '=' → logprob: -12.006648063659668
    9. '   ' → logprob: -12.006648063659668
    10. ')' → logprob: -12.256648063659668

Token 275: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001426663831807673
    2. ']=' → logprob: -7.001426696777344
    3. ' ]' → logprob: -7.876426696777344
    4. '=' → logprob: -9.626426696777344
    5. '+' → logprob: -10.751426696777344
    6. '1' → logprob: -11.126426696777344
    7. ']+=' → logprob: -11.501426696777344
    8. ':]' → logprob: -11.876426696777344
    9. '#' → logprob: -12.376426696777344
    10. ']
' → logprob: -13.001426696777344

Token 276: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.010104524902999401
    2. ' =' → logprob: -4.635104656219482
    3. '=
' → logprob: -8.760104179382324
    4. ']' → logprob: -9.885104179382324
    5. '=

' → logprob: -10.260104179382324
    6. ',' → logprob: -10.760104179382324
    7. ')' → logprob: -11.260104179382324
    8. '#' → logprob: -11.635104179382324
    9. 'for' → logprob: -11.760104179382324
    10. ']=' → logprob: -11.760104179382324

Token 277: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0004317420825827867
    2. '0' → logprob: -8.375432014465332
    3. ' C' → logprob: -9.500432014465332
    4. '(C' → logprob: -9.500432014465332
    5. 'B' → logprob: -10.500432014465332
    6. '(' → logprob: -11.875432014465332
    7. '   ' → logprob: -12.875432014465332
    8. '1' → logprob: -13.125432014465332
    9. '#' → logprob: -13.375432014465332
    10. ' (' → logprob: -13.500432014465332

Token 278: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.44673779606819153
    2. '0' → logprob: -2.196737766265869
    3. ']' → logprob: -2.571737766265869
    4. '-' → logprob: -2.821737766265869
    5. '+' → logprob: -3.071737766265869
    6. '1' → logprob: -3.446737766265869
    7. '#' → logprob: -4.821737766265869
    8. '=' → logprob: -5.196737766265869
    9. ']+' → logprob: -5.446737766265869
    10. ' -' → logprob: -6.071737766265869

Token 279: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.23917081207037e-05
    2. ' ' → logprob: -10.750041961669922
    3. '1' → logprob: -11.250041961669922
    4. ']' → logprob: -13.000041961669922
    5. 'k' → logprob: -13.250041961669922
    6. '-' → logprob: -13.750041961669922
    7. '   ' → logprob: -14.562541961669922
    8. '])' → logprob: -15.312541961669922
    9. '
' → logprob: -15.625041961669922
    10. '#' → logprob: -15.625041961669922

Token 280: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03161811828613281
    2. ']
' → logprob: -3.531618118286133
    3. '+' → logprob: -7.281618118286133
    4. '#' → logprob: -7.656618118286133
    5. ' ]' → logprob: -8.156618118286133
    6. ')' → logprob: -9.281618118286133
    7. '1' → logprob: -9.406618118286133
    8. ' ]
' → logprob: -10.156618118286133
    9. '])' → logprob: -10.531618118286133
    10. ']

' → logprob: -10.531618118286133

Token 281: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 282: 'for' (ID: 1938)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.030995408073067665
    2. '<|end|>' → logprob: -3.6559953689575195
    3. ')' → logprob: -5.7809953689575195
    4. ' ' → logprob: -7.6559953689575195
    5. '0' → logprob: -8.15599536895752
    6. 'for' → logprob: -9.03099536895752
    7. '[' → logprob: -9.03099536895752
    8. ']' → logprob: -9.03099536895752
    9. ' #' → logprob: -9.40599536895752
    10. '#
' → logprob: -9.65599536895752

Token 283: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0036109976936131716
    2. ' i' → logprob: -5.628611087799072
    3. 'k' → logprob: -12.378610610961914
    4. ' ' → logprob: -13.128610610961914
    5. '	i' → logprob: -13.503610610961914
    6. '1' → logprob: -13.628610610961914
    7. ' ' → logprob: -14.503610610961914
    8. '_i' → logprob: -14.753610610961914
    9. 'j' → logprob: -14.878610610961914
    10. '   ' → logprob: -15.753610610961914

Token 284: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.055137161165475845
    2. 'in' → logprob: -2.9301371574401855
    3. '1' → logprob: -9.055137634277344
    4. ' i' → logprob: -10.055137634277344
    5. ' ' → logprob: -10.305137634277344
    6. 'i' → logprob: -10.680137634277344
    7. ' ' → logprob: -11.805137634277344
    8. '=' → logprob: -12.305137634277344
    9. '	in' → logprob: -12.305137634277344
    10. '(' → logprob: -12.430137634277344

Token 285: ' range' (ID: 3352)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7332134246826172
    2. 'range' → logprob: -1.2332134246826172
    3. ' range' → logprob: -1.4832134246826172
    4. ' ' → logprob: -6.608213424682617
    5. ' in' → logprob: -11.108213424682617
    6. '   ' → logprob: -12.483213424682617
    7. 'in' → logprob: -13.108213424682617
    8. '  ' → logprob: -13.858213424682617
    9. '```' → logprob: -14.108213424682617
    10. '(range' → logprob: -14.233213424682617

Token 286: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.007317567011341e-05
    2. ' ' → logprob: -9.375089645385742
    3. '(' → logprob: -13.000089645385742
    4. ' in' → logprob: -13.625089645385742
    5. '   ' → logprob: -14.500089645385742
    6. 'in' → logprob: -15.875089645385742
    7. 'range' → logprob: -15.875089645385742
    8. '```' → logprob: -16.000089645385742
    9. 'N' → logprob: -16.250089645385742
    10. '0' → logprob: -16.500089645385742

Token 287: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -13.50000286102295
    3. 'N' → logprob: -13.62500286102295
    4. 'i' → logprob: -16.000003814697266
    5. 'range' → logprob: -16.875003814697266
    6. '   ' → logprob: -17.750003814697266
    7. '0' → logprob: -18.250003814697266
    8. ')' → logprob: -18.375003814697266
    9. '(' → logprob: -18.375003814697266
    10. ' range' → logprob: -19.375003814697266

Token 288: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0737970694899559
    2. ',N' → logprob: -3.1987969875335693
    3. 'N' → logprob: -3.6987969875335693
    4. '(N' → logprob: -5.823797225952148
    5. ' N' → logprob: -6.948797225952148
    6. ' ,' → logprob: -7.573797225952148
    7. ':N' → logprob: -7.823797225952148
    8. '#' → logprob: -8.573797225952148
    9. ':' → logprob: -8.573797225952148
    10. '(' → logprob: -8.698797225952148

Token 289: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -4.1557283111615106e-05
    2. ' N' → logprob: -10.125041961669922
    3. '1' → logprob: -13.750041961669922
    4. 'n' → logprob: -15.125041961669922
    5. '   ' → logprob: -16.750041961669922
    6. '	N' → logprob: -17.000041961669922
    7. ' ' → logprob: -17.250041961669922
    8. 'len' → logprob: -17.375041961669922
    9. '
' → logprob: -18.250041961669922
    10. ')' → logprob: -18.250041961669922

Token 290: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11339294165372849
    2. '):
' → logprob: -2.2383928298950195
    3. ',' → logprob: -8.48839282989502
    4. 'N' → logprob: -8.73839282989502
    5. '+' → logprob: -8.98839282989502
    6. '#' → logprob: -10.86339282989502
    7. ' ):' → logprob: -11.48839282989502
    8. ',N' → logprob: -11.61339282989502
    9. ':' → logprob: -11.86339282989502
    10. '1' → logprob: -12.11339282989502

Token 291: '#' (ID: 2)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8319536447525024
    2. '<|end|>' → logprob: -1.5819536447525024
    3. ' ' → logprob: -2.456953525543213
    4. ')' → logprob: -2.456953525543213
    5. '[i' → logprob: -2.706953525543213
    6. '#' → logprob: -3.206953525543213
    7. '):' → logprob: -3.456953525543213
    8. '[' → logprob: -4.331953525543213
    9. '  ' → logprob: -5.206953525543213
    10. ' i' → logprob: -5.206953525543213

Token 292: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.024623559787869453
    2. '   ' → logprob: -4.399623394012451
    3. 'S' → logprob: -4.524623394012451
    4. ' #' → logprob: -7.524623394012451
    5. ' S' → logprob: -7.774623394012451
    6. ' ' → logprob: -8.64962387084961
    7. '  ' → logprob: -10.89962387084961
    8. '	S' → logprob: -11.27462387084961
    9. ' ' → logprob: -12.14962387084961
    10. 'C' → logprob: -12.89962387084961

Token 293: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' (adapté à ' S') → logprob: -0.0041611455380916595
    2. '#' → logprob: -5.879161357879639
    3. ' S' → logprob: -7.504161357879639
    4. 'i' → logprob: -8.12916088104248
    5. 'pass' → logprob: -8.87916088104248
    6. '   ' → logprob: -9.25416088104248
    7. 'C' → logprob: -10.12916088104248
    8. ' pass' → logprob: -10.25416088104248
    9. '...' → logprob: -10.50416088104248
    10. ' ' → logprob: -10.50416088104248

Token 294: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005396892665885389
    2. '[' → logprob: -7.875539779663086
    3. '=' → logprob: -9.375539779663086
    4. 'i' → logprob: -11.125539779663086
    5. '+=' → logprob: -11.250539779663086
    6. '[
' → logprob: -11.500539779663086
    7. ']+=' → logprob: -11.500539779663086
    8. ']' → logprob: -11.875539779663086
    9. '=i' → logprob: -12.875539779663086
    10. '   ' → logprob: -13.000539779663086

Token 295: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.220536470413208
    2. ']+=' → logprob: -2.345536470413208
    3. ')' → logprob: -2.595536470413208
    4. ']=' → logprob: -4.970536231994629
    5. '+=' → logprob: -4.970536231994629
    6. '+' → logprob: -5.220536231994629
    7. '=' → logprob: -6.095536231994629
    8. ' +=' → logprob: -6.595536231994629
    9. '):' → logprob: -6.720536231994629
    10. ']+' → logprob: -7.470536231994629

Token 296: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.11351744830608368
    2. '=' → logprob: -2.3635175228118896
    3. ' +=' → logprob: -4.7385172843933105
    4. ']+=' → logprob: -5.8635172843933105
    5. '+' → logprob: -6.7385172843933105
    6. '+=(' → logprob: -8.738517761230469
    7. '[' → logprob: -9.238517761230469
    8. ' =' → logprob: -9.738517761230469
    9. ']' → logprob: -9.863517761230469
    10. '+='' → logprob: -11.113517761230469

Token 297: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.10221361368894577
    2. '(S' → logprob: -2.3522136211395264
    3. '(' → logprob: -7.227213382720947
    4. ' (' → logprob: -7.352213382720947
    5. ' S' → logprob: -7.727213382720947
    6. 'C' → logprob: -8.727213859558105
    7. '   ' → logprob: -11.727213859558105
    8. '(C' → logprob: -11.852213859558105
    9. '(
' → logprob: -12.727213859558105
    10. '	S' → logprob: -13.102213859558105

Token 298: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.20208172500133514
    2. 'i' → logprob: -1.7020816802978516
    3. '(i' → logprob: -7.827081680297852
    4. '   ' → logprob: -9.452081680297852
    5. ']' → logprob: -10.077081680297852
    6. '
' → logprob: -10.202081680297852
    7. ' i' → logprob: -10.827081680297852
    8. '[' → logprob: -10.952081680297852
    9. ']+' → logprob: -11.202081680297852
    10. '+' → logprob: -11.452081680297852

Token 299: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07203376293182373
    2. ']+' → logprob: -3.1970338821411133
    3. '-' → logprob: -3.5720338821411133
    4. ' ]' → logprob: -8.572033882141113
    5. ']-' → logprob: -8.822033882141113
    6. '1' → logprob: -9.447033882141113
    7. ' -' → logprob: -9.947033882141113
    8. ']+=' → logprob: -11.697033882141113
    9. '+' → logprob: -12.322033882141113
    10. '#' → logprob: -12.447033882141113

Token 300: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.009893381036818027
    2. '1' → logprob: -4.634893417358398
    3. ']' → logprob: -9.384893417358398
    4. ' i' → logprob: -10.384893417358398
    5. '0' → logprob: -11.884893417358398
    6. ']+' → logprob: -12.134893417358398
    7. '   ' → logprob: -12.509893417358398
    8. '	i' → logprob: -13.384893417358398
    9. '[i' → logprob: -13.634893417358398
    10. ' ' → logprob: -14.259893417358398

Token 301: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1604388952255249
    2. ']+' → logprob: -1.910438895225525
    3. '+' → logprob: -8.910438537597656
    4. ' ]' → logprob: -9.910438537597656
    5. '+]' → logprob: -11.285438537597656
    6. '#' → logprob: -12.660438537597656
    7. ']
' → logprob: -12.910438537597656
    8. ']+=' → logprob: -13.160438537597656
    9. ']*' → logprob: -13.285438537597656
    10. '-' → logprob: -13.535438537597656

Token 302: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3755488395690918
    2. '%' → logprob: -1.2505488395690918
    3. ')' → logprob: -4.750548839569092
    4. '<|end|>' → logprob: -5.000548839569092
    5. '#' → logprob: -5.125548839569092
    6. ']' → logprob: -5.875548839569092
    7. ' +' → logprob: -7.625548839569092
    8. ' %' → logprob: -8.37554931640625
    9. ')%' → logprob: -8.37554931640625
    10. '%B' → logprob: -8.62554931640625

Token 303: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.00031413204851560295
    2. ' C' → logprob: -8.125313758850098
    3. '   ' → logprob: -11.375313758850098
    4. 'int' → logprob: -13.000313758850098
    5. '#' → logprob: -13.875313758850098
    6. '(C' → logprob: -14.000313758850098
    7. '	C' → logprob: -14.500313758850098
    8. 'x' → logprob: -14.875313758850098
    9. '(' → logprob: -14.875313758850098
    10. 'B' → logprob: -15.000313758850098

Token 304: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0009864849271252751
    2. '#' → logprob: -8.000986099243164
    3. '[' → logprob: -8.250986099243164
    4. '<|end|>' → logprob: -8.250986099243164
    5. ']' → logprob: -10.375986099243164
    6. 'i' → logprob: -11.000986099243164
    7. '[k' → logprob: -11.000986099243164
    8. ')' → logprob: -11.375986099243164
    9. '[-' → logprob: -11.500986099243164
    10. '```' → logprob: -11.875986099243164

Token 305: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004113692557439208
    2. '[i' → logprob: -8.500411033630371
    3. '])' → logprob: -9.625411033630371
    4. '#' → logprob: -9.750411033630371
    5. ')]' → logprob: -11.375411033630371
    6. ' ]' → logprob: -11.750411033630371
    7. 'i' → logprob: -11.750411033630371
    8. ')' → logprob: -11.750411033630371
    9. '']' → logprob: -11.875411033630371
    10. '+' → logprob: -12.000411033630371

Token 306: '#
' (ID: 11240)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 307: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 308: 'ans' (ID: 616)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 309: '2' (ID: 17)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 310: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 311: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06813182681798935
    2. ' ' → logprob: -3.693131923675537
    3. 'result' → logprob: -4.318131923675537
    4. 'S' → logprob: -5.068131923675537
    5. 'sum' → logprob: -5.693131923675537
    6. ' (' → logprob: -5.818131923675537
    7. '(ans' → logprob: -6.068131923675537
    8. '(S' → logprob: -6.568131923675537
    9. ' S' → logprob: -6.568131923675537
    10. 'ans' → logprob: -6.693131923675537

Token 312: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01090468280017376
    2. 'result' → logprob: -6.010904788970947
    3. '(' → logprob: -6.135904788970947
    4. '(S' → logprob: -6.385904788970947
    5. 'S' → logprob: -7.135904788970947
    6. '[' → logprob: -7.385904788970947
    7. '(result' → logprob: -7.760904788970947
    8. '(ans' → logprob: -7.760904788970947
    9. 'sum' → logprob: -8.135904312133789
    10. 'B' → logprob: -8.260904312133789

Token 313: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 314: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 315: 'for' (ID: 1938)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.12997417151927948
    2. 'for' → logprob: -2.254974126815796
    3. '<|end|>' → logprob: -4.754974365234375
    4. ')' → logprob: -5.004974365234375
    5. '0' → logprob: -7.629974365234375
    6. ' for' → logprob: -7.879974365234375
    7. '```' → logprob: -7.879974365234375
    8. '[' → logprob: -9.629974365234375
    9. 'f' → logprob: -10.004974365234375
    10. ']' → logprob: -10.129974365234375

Token 316: ' j' (ID: 441)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7912442088127136
    2. ' i' → logprob: -0.7912442088127136
    3. 'k' → logprob: -3.0412442684173584
    4. ' k' → logprob: -3.1662442684173584
    5. ' j' → logprob: -6.416244029998779
    6. 'j' → logprob: -7.166244029998779
    7. '_' → logprob: -8.666244506835938
    8. ' ' → logprob: -8.916244506835938
    9. '#' → logprob: -9.041244506835938
    10. ' range' → logprob: -9.041244506835938

Token 317: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.033851660788059235
    2. 'in' → logprob: -3.4088516235351562
    3. ' ' → logprob: -9.533851623535156
    4. ' j' → logprob: -9.658851623535156
    5. '+' → logprob: -11.283851623535156
    6. ' ' → logprob: -11.783851623535156
    7. '   ' → logprob: -11.908851623535156
    8. '...' → logprob: -12.033851623535156
    9. '1' → logprob: -12.158851623535156
    10. ',' → logprob: -12.408851623535156

Token 318: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.11402928829193115
    2. ' range' → logprob: -2.2390294075012207
    3. 'in' → logprob: -7.239029407501221
    4. ' in' → logprob: -7.989029407501221
    5. '(range' → logprob: -9.864028930664062
    6. '0' → logprob: -10.489028930664062
    7. '1' → logprob: -10.489028930664062
    8. ' ' → logprob: -11.239028930664062
    9. 'N' → logprob: -12.239028930664062
    10. '(' → logprob: -12.489028930664062

Token 319: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7881278395652771
    2. '(N' → logprob: -1.0381278991699219
    3. '1' → logprob: -2.288127899169922
    4. 'N' → logprob: -2.663127899169922
    5. 'range' → logprob: -4.538127899169922
    6. '0' → logprob: -5.538127899169922
    7. '2' → logprob: -6.288127899169922
    8. '(j' → logprob: -7.288127899169922
    9. 'j' → logprob: -7.663127899169922
    10. '(n' → logprob: -7.788127899169922

Token 320: '1' (ID: 16)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.1345018595457077
    2. '1' → logprob: -2.1345019340515137
    3. '0' → logprob: -5.134501934051514
    4. '(N' → logprob: -7.634501934051514
    5. '2' → logprob: -8.259501457214355
    6. '(' → logprob: -8.384501457214355
    7. 'j' → logprob: -8.509501457214355
    8. ' N' → logprob: -9.009501457214355
    9. 'range' → logprob: -9.384501457214355
    10. 'k' → logprob: -10.259501457214355

Token 321: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00680193305015564
    2. ',N' → logprob: -5.131802082061768
    3. 'N' → logprob: -8.00680160522461
    4. ' ,' → logprob: -8.13180160522461
    5. '(N' → logprob: -8.63180160522461
    6. '1' → logprob: -11.25680160522461
    7. '   ' → logprob: -11.50680160522461
    8. '(' → logprob: -11.63180160522461
    9. '#' → logprob: -11.75680160522461
    10. ')' → logprob: -12.00680160522461

Token 322: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00018113377154804766
    2. ' N' → logprob: -8.750181198120117
    3. '(N' → logprob: -11.125181198120117
    4. '1' → logprob: -13.375181198120117
    5. ' ' → logprob: -13.625181198120117
    6. '   ' → logprob: -14.000181198120117
    7. 'n' → logprob: -14.000181198120117
    8. 'len' → logprob: -14.625181198120117
    9. '(' → logprob: -14.875181198120117
    10. 'j' → logprob: -14.875181198120117

Token 323: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0013186928117647767
    2. '):' → logprob: -7.001318454742432
    3. '):
' → logprob: -8.50131893157959
    4. '+
' → logprob: -9.12631893157959
    5. ' +' → logprob: -10.62631893157959
    6. '#' → logprob: -10.62631893157959
    7. '+j' → logprob: -11.75131893157959
    8. '1' → logprob: -11.75131893157959
    9. ',' → logprob: -12.12631893157959
    10. 'N' → logprob: -12.62631893157959

Token 324: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00031651611789129674
    2. 'N' → logprob: -8.625316619873047
    3. '+' → logprob: -9.125316619873047
    4. '2' → logprob: -11.000316619873047
    5. ' ' → logprob: -12.250316619873047
    6. '(N' → logprob: -12.500316619873047
    7. ')' → logprob: -13.875316619873047
    8. 'j' → logprob: -14.750316619873047
    9. '   ' → logprob: -14.875316619873047
    10. ' N' → logprob: -15.250316619873047

Token 325: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0407421700656414
    2. '):
' → logprob: -3.4157421588897705
    3. ':' → logprob: -5.04074239730835
    4. ')' → logprob: -7.66574239730835
    5. '+' → logprob: -10.040741920471191
    6. '   ' → logprob: -10.790741920471191
    7. '#' → logprob: -11.165741920471191
    8. ':
' → logprob: -11.290741920471191
    9. '}:' → logprob: -11.790741920471191
    10. ',' → logprob: -11.915741920471191

Token 326: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.75948566198349
    2. ')' → logprob: -1.1344857215881348
    3. '<|end|>' → logprob: -1.8844857215881348
    4. '):' → logprob: -4.009485721588135
    5. '   ' → logprob: -4.259485721588135
    6. '+' → logprob: -4.884485721588135
    7. ':' → logprob: -5.134485721588135
    8. ' ' → logprob: -5.759485721588135
    9. ')#' → logprob: -6.759485721588135
    10. '  ' → logprob: -6.884485721588135

Token 327: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.008318226784467697
    2. '   ' → logprob: -5.6333184242248535
    3. ' #' → logprob: -6.6333184242248535
    4. 'for' → logprob: -7.5083184242248535
    5. 'S' → logprob: -7.6333184242248535
    6. ' for' → logprob: -7.7583184242248535
    7. '0' → logprob: -7.8833184242248535
    8. ' j' → logprob: -8.008317947387695
    9. ' S' → logprob: -8.508317947387695
    10. ' ' → logprob: -8.633317947387695

Token 328: ' ans' (ID: 3345)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5678794980049133
    2. 'pass' → logprob: -1.6928794384002686
    3. 'for' → logprob: -2.9428794384002686
    4. ' pass' → logprob: -3.1928794384002686
    5. 'ans' (adapté à ' ans') → logprob: -3.1928794384002686
    6. 'print' → logprob: -3.6928794384002686
    7. 'S' → logprob: -3.8178794384002686
    8. 'result' → logprob: -4.442879676818848
    9. 'j' → logprob: -4.567879676818848
    10. '0' → logprob: -4.817879676818848

Token 329: '2' (ID: 17)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5778089761734009
    2. '=' → logprob: -1.8278089761734009
    3. ' +=' → logprob: -1.9528089761734009
    4. ')' → logprob: -3.0778088569641113
    5. '2' → logprob: -3.0778088569641113
    6. '+' → logprob: -3.8278088569641113
    7. '<|end|>' → logprob: -4.702808856964111
    8. '[' → logprob: -5.577808856964111
    9. ']+=' → logprob: -6.202808856964111
    10. ' =' → logprob: -6.327808856964111

Token 330: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2992638051509857
    2. ' +=' → logprob: -1.549263834953308
    3. '+' → logprob: -4.174263954162598
    4. '#' → logprob: -4.674263954162598
    5. ')' → logprob: -4.924263954162598
    6. '=' → logprob: -5.174263954162598
    7. '<|end|>' → logprob: -5.674263954162598
    8. ']+=' → logprob: -6.174263954162598
    9. '   ' → logprob: -7.674263954162598
    10. ' =' → logprob: -8.049263954162598

Token 331: ' S' (ID: 336)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.26338642835617065
    2. 'S' → logprob: -1.7633864879608154
    3. ' C' → logprob: -3.8883864879608154
    4. '(C' → logprob: -4.513386249542236
    5. '(S' → logprob: -4.638386249542236
    6. ' (' → logprob: -4.888386249542236
    7. ' S' → logprob: -5.388386249542236
    8. 'B' → logprob: -6.263386249542236
    9. 'j' → logprob: -6.888386249542236
    10. '(' → logprob: -7.263386249542236

Token 332: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.07592669874429703
    2. '[' → logprob: -2.7009267807006836
    3. ']' → logprob: -5.325926780700684
    4. '[k' → logprob: -7.825926780700684
    5. '[
' → logprob: -8.200926780700684
    6. 'j' → logprob: -9.200926780700684
    7. '#' → logprob: -9.450926780700684
    8. ')' → logprob: -9.575926780700684
    9. '+' → logprob: -10.700926780700684
    10. '_j' → logprob: -10.950926780700684

Token 333: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.08959776908159256
    2. ']' → logprob: -2.464597702026367
    3. ' -' → logprob: -7.964597702026367
    4. '#' → logprob: -9.214597702026367
    5. ']-' → logprob: -9.964597702026367
    6. '])' → logprob: -10.214597702026367
    7. ')' → logprob: -10.714597702026367
    8. ' ]' → logprob: -10.839597702026367
    9. '-j' → logprob: -10.964597702026367
    10. '1' → logprob: -11.089597702026367

Token 334: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.817902173381299e-05
    2. ' ' → logprob: -9.87509822845459
    3. '2' → logprob: -10.25009822845459
    4. 'j' → logprob: -13.00009822845459
    5. '   ' → logprob: -13.00009822845459
    6. '0' → logprob: -13.43759822845459
    7. 'N' → logprob: -13.81259822845459
    8. '  ' → logprob: -14.93759822845459
    9. ']' → logprob: -15.12509822845459
    10. 'i' → logprob: -15.25009822845459

Token 335: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08340513706207275
    2. ']*' → logprob: -3.208405017852783
    3. '])' → logprob: -4.208405017852783
    4. '*' → logprob: -4.208405017852783
    5. ')' → logprob: -5.333405017852783
    6. '*j' → logprob: -6.208405017852783
    7. ' *' → logprob: -6.708405017852783
    8. ' ]' → logprob: -7.333405017852783
    9. ')*' → logprob: -7.958405017852783
    10. '])*' → logprob: -9.083405494689941

Token 336: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 337: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.15204539895057678
    2. 'j' → logprob: -2.277045488357544
    3. '(' → logprob: -4.652045249938965
    4. ' B' → logprob: -5.027045249938965
    5. 'C' → logprob: -5.402045249938965
    6. '2' → logprob: -5.402045249938965
    7. 'k' → logprob: -6.152045249938965
    8. '1' → logprob: -6.277045249938965
    9. ' (' → logprob: -6.402045249938965
    10. ' j' → logprob: -6.527045249938965

Token 338: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.01824125461280346
    2. '[N' → logprob: -4.2682414054870605
    3. '[' → logprob: -5.6432414054870605
    4. 'j' → logprob: -8.643240928649902
    5. '[k' → logprob: -9.018240928649902
    6. '(j' → logprob: -9.643240928649902
    7. '[n' → logprob: -10.143240928649902
    8. '[-' → logprob: -10.268240928649902
    9. ' [' → logprob: -10.518240928649902
    10. '(N' → logprob: -11.018240928649902

Token 339: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.01825178600847721
    2. ']' → logprob: -4.018251895904541
    3. ' -' → logprob: -9.768251419067383
    4. '])' → logprob: -11.518251419067383
    5. '#' → logprob: -11.768251419067383
    6. ' ]' → logprob: -11.893251419067383
    7. '[' → logprob: -12.143251419067383
    8. ']-' → logprob: -12.893251419067383
    9. '<|end|>' → logprob: -13.393251419067383
    10. '   ' → logprob: -13.393251419067383

Token 340: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024883802980184555
    2. '2' → logprob: -6.002488613128662
    3. ' ' → logprob: -12.252488136291504
    4. '3' → logprob: -13.252488136291504
    5. '   ' → logprob: -13.314988136291504
    6. '0' → logprob: -14.064988136291504
    7. '-' → logprob: -14.189988136291504
    8. '```' → logprob: -14.189988136291504
    9. 'j' → logprob: -14.439988136291504
    10. '(' → logprob: -14.502488136291504

Token 341: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006428414490073919
    2. ']' → logprob: -5.256428241729736
    3. '*' → logprob: -8.006428718566895
    4. '+' → logprob: -8.381428718566895
    5. '#' → logprob: -8.506428718566895
    6. '])' → logprob: -8.881428718566895
    7. ')
' → logprob: -9.881428718566895
    8. ' )' → logprob: -10.256428718566895
    9. '}' → logprob: -10.381428718566895
    10. ')]' → logprob: -10.381428718566895

Token 342: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 343: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4277676045894623
    2. '<|end|>' → logprob: -1.1777676343917847
    3. '#' → logprob: -3.552767515182495
    4. ']' → logprob: -5.427767753601074
    5. '```' → logprob: -5.677767753601074
    6. '<|end|>' → logprob: -6.177767753601074
    7. '}' → logprob: -8.052767753601074
    8. '%' → logprob: -8.302767753601074
    9. ' ' → logprob: -8.552767753601074
    10. '[' → logprob: -8.927767753601074

Token 344: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.1595262736082077
    2. ')' → logprob: -3.0345263481140137
    3. '<|end|>' → logprob: -3.0345263481140137
    4. 'print' → logprob: -3.9095263481140137
    5. ']' → logprob: -4.909526348114014
    6. 'ans' → logprob: -5.284526348114014
    7. '   ' → logprob: -5.909526348114014
    8. 'result' → logprob: -6.034526348114014
    9. ' ' → logprob: -6.034526348114014
    10. '0' → logprob: -6.409526348114014

Token 345: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09970918297767639
    2. '#' → logprob: -2.8497092723846436
    3. '<|end|>' → logprob: -3.7247092723846436
    4. ']' → logprob: -4.5997090339660645
    5. '<|end|>' → logprob: -7.7247090339660645
    6. ')#' → logprob: -7.7247090339660645
    7. '```' → logprob: -7.7247090339660645
    8. '}' → logprob: -7.7247090339660645
    9. ' ' → logprob: -8.224709510803223
    10. '...' → logprob: -8.474709510803223

Token 346: '(S' (ID: 6181)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.9963303208351135
    2. '(S' → logprob: -1.1213302612304688
    3. '(' → logprob: -2.2463302612304688
    4. '(ans' → logprob: -2.8713302612304688
    5. '(j' → logprob: -2.9963302612304688
    6. '(B' → logprob: -3.1213302612304688
    7. '(C' → logprob: -3.8713302612304688
    8. '("")' → logprob: -5.371330261230469
    9. 'S' → logprob: -5.496330261230469
    10. '(s' → logprob: -5.621330261230469

Token 347: '[j' (ID: 7895)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02696496807038784
    2. '])' → logprob: -3.9019649028778076
    3. ']' → logprob: -5.776965141296387
    4. '[' → logprob: -6.651965141296387
    5. '[j' → logprob: -6.776965141296387
    6. ')])' → logprob: -8.276965141296387
    7. '#' → logprob: -8.776965141296387
    8. 'j' → logprob: -9.401965141296387
    9. ')
' → logprob: -9.526965141296387
    10. '   ' → logprob: -10.401965141296387

Token 348: '-' (ID: 12)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.33721455931663513
    2. '-' → logprob: -1.3372145891189575
    3. ')' → logprob: -4.212214469909668
    4. ']' → logprob: -4.837214469909668
    5. ''])' → logprob: -8.712214469909668
    6. '#' → logprob: -8.712214469909668
    7. ' -' → logprob: -9.587214469909668
    8. '])-' → logprob: -9.587214469909668
    9. '[' → logprob: -9.837214469909668
    10. ']-' → logprob: -9.962214469909668

Token 349: '1' (ID: 16)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.6179520487785339
    2. ')' → logprob: -1.8679521083831787
    3. '1' → logprob: -2.1179521083831787
    4. '-' → logprob: -2.3679521083831787
    5. ']' → logprob: -2.6179521083831787
    6. 'j' → logprob: -4.1179518699646
    7. '0' → logprob: -6.6179518699646
    8. ')]' → logprob: -8.492952346801758
    9. '   ' → logprob: -8.617952346801758
    10. 'i' → logprob: -8.617952346801758

Token 350: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01851734146475792
    2. '])' → logprob: -4.01851749420166
    3. ')])' → logprob: -9.51851749420166
    4. '())' → logprob: -9.64351749420166
    5. '#' → logprob: -9.89351749420166
    6. '))' → logprob: -10.01851749420166
    7. ')#' → logprob: -10.64351749420166
    8. '})' → logprob: -10.64351749420166
    9. ']' → logprob: -11.14351749420166
    10. '[' → logprob: -11.64351749420166

Token 351: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002671853406354785
    2. '#' → logprob: -6.127671718597412
    3. ')#' → logprob: -8.25267219543457
    4. '')' → logprob: -9.50267219543457
    5. '])' → logprob: -9.50267219543457
    6. ']' → logprob: -11.25267219543457
    7. '))' → logprob: -11.37767219543457
    8. '")' → logprob: -11.37767219543457
    9. '`)' → logprob: -11.50267219543457
    10. '[' → logprob: -12.25267219543457

Token 352: ' B' (ID: 418)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.080595850944519
    2. 'B' → logprob: -1.205595850944519
    3. 'j' → logprob: -1.330595850944519
    4. 'k' → logprob: -3.7055959701538086
    5. '1' → logprob: -4.205595970153809
    6. ' ' → logprob: -4.580595970153809
    7. ''' → logprob: -5.080595970153809
    8. ' B' → logprob: -5.205595970153809
    9. '(N' → logprob: -5.330595970153809
    10. '(j' → logprob: -5.455595970153809

Token 353: '[j' (ID: 7895)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4337027370929718
    2. '[j' → logprob: -1.4337027072906494
    3. '])' → logprob: -2.3087027072906494
    4. '[' → logprob: -5.0587029457092285
    5. ']' → logprob: -5.6837029457092285
    6. '-' → logprob: -6.9337029457092285
    7. 'j' → logprob: -7.0587029457092285
    8. '#' → logprob: -7.4337029457092285
    9. ')])' → logprob: -7.5587029457092285
    10. '(j' → logprob: -8.68370246887207

Token 354: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.014416055753827095
    2. '])' → logprob: -4.264416217803955
    3. ']' → logprob: -8.514415740966797
    4. ')' → logprob: -11.139415740966797
    5. '#' → logprob: -11.889415740966797
    6. '1' → logprob: -12.139415740966797
    7. '-
' → logprob: -12.514415740966797
    8. '   ' → logprob: -12.639415740966797
    9. ' -' → logprob: -12.639415740966797
    10. '])
' → logprob: -12.764415740966797

Token 355: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.8325677703833207e-05
    2. '0' → logprob: -11.375028610229492
    3. ' ' → logprob: -11.625028610229492
    4. '-' → logprob: -12.500028610229492
    5. '2' → logprob: -13.125028610229492
    6. 'j' → logprob: -13.750028610229492
    7. ')' → logprob: -15.375028610229492
    8. ']' → logprob: -15.625028610229492
    9. '])' → logprob: -15.625028610229492
    10. '```' → logprob: -16.312528610229492

Token 356: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00042923877481371164
    2. '#' → logprob: -8.125429153442383
    3. ')#' → logprob: -10.250429153442383
    4. ' )' → logprob: -11.000429153442383
    5. '())' → logprob: -11.125429153442383
    6. '))' → logprob: -11.250429153442383
    7. '')' → logprob: -11.375429153442383
    8. '()' → logprob: -11.750429153442383
    9. '])' → logprob: -11.875429153442383
    10. ')
' → logprob: -11.875429153442383

Token 357: '#
' (ID: 11240)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6524544954299927
    2. '<|end|>' → logprob: -0.7774544954299927
    3. '#' → logprob: -4.527454376220703
    4. ']' → logprob: -5.277454376220703
    5. '```' → logprob: -6.652454376220703
    6. '}' → logprob: -6.652454376220703
    7. '<|end|>' → logprob: -7.402454376220703
    8. '[' → logprob: -9.152454376220703
    9. '+' → logprob: -9.652454376220703
    10. ' ' → logprob: -10.152454376220703

Token 358: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 359: ' ---' (ID: 26691)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26175397634506226
    2. '<|end|>' → logprob: -1.886754035949707
    3. '#' → logprob: -2.761754035949707
    4. ']' → logprob: -5.136754035949707
    5. '}' → logprob: -5.261754035949707
    6. '```' → logprob: -5.761754035949707
    7. '<|end|>' → logprob: -7.511754035949707
    8. '+' → logprob: -8.386754035949707
    9. '
' → logprob: -8.761754035949707
    10. '%' → logprob: -9.136754035949707


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 357
Tokens correctement prédits (1ère position, stricte): 99
Tokens correctement prédits (1ère position, avec adaptation): 104
Tokens correctement prédits (top 10): 224
Précision stricte (1ère position): 27.73%
Précision adaptée (1ère position): 29.13%
Précision (top 10): 62.75%
================================================================================
