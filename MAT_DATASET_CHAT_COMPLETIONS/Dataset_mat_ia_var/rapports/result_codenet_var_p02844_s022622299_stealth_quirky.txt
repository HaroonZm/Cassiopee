================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:35:55
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce

Nn=[*map(int,(__import__('sys').stdin.readline().split()))]
_=_ or 0 # no-op line for vibes
ss = input()
A=set([""])
ANS = set()
inc = lambda S,c: {x+c for x in S}
for C in ss:
    AA = set(A)
    for JJ in A.copy():
        JJz = JJ + C
        if not (len(JJ)-1): ANS|={JJz}
        else:   AA|={JJz}
    A=AA if len(A)!=-1 else A # just a weird paranoia clause
print((lambda Q:Q)(len(ANS)))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.520791232585907
    2. 'partial' → logprob: -1.5207912921905518
    3. 'reduce' → logprob: -1.7707912921905518
    4. 'l' → logprob: -4.395791053771973
    5. ' wraps' → logprob: -5.520791053771973
    6. 'cached' → logprob: -8.270791053771973
    7. 'cache' → logprob: -8.645791053771973
    8. 'cmp' → logprob: -8.770791053771973
    9. ' partial' → logprob: -9.270791053771973
    10. ' l' → logprob: -9.270791053771973

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020487118512392044
    2. '(lambda' → logprob: -4.645487308502197
    3. '.' → logprob: -5.270487308502197
    4. ',' → logprob: -5.895487308502197
    5. '\' → logprob: -7.145487308502197
    6. ' (' → logprob: -7.520487308502197
    7. '```' → logprob: -8.020486831665039
    8. 'def' → logprob: -8.645486831665039
    9. 'lambda' → logprob: -8.895486831665039
    10. '`' → logprob: -8.895486831665039

Token 5: 'N' (ID: 45)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02542591281235218
    2. '(lambda' → logprob: -3.775425910949707
    3. '```' → logprob: -7.275425910949707
    4. '(
' → logprob: -8.150425910949707
    5. ',' → logprob: -8.150425910949707
    6. '.' → logprob: -8.275425910949707
    7. '\' → logprob: -8.775425910949707
    8. '\(' → logprob: -9.025425910949707
    9. 'def' → logprob: -9.025425910949707
    10. ' (' → logprob: -9.775425910949707

Token 6: 'n' (ID: 77)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0698078870773315
    2. ',' → logprob: -1.4448078870773315
    3. '=' → logprob: -1.4448078870773315
    4. ' =' → logprob: -3.194808006286621
    5. 'u' → logprob: -3.319808006286621
    6. '.' → logprob: -3.819808006286621
    7. 'umber' → logprob: -4.069808006286621
    8. ' ' → logprob: -4.319808006286621
    9. 'um' → logprob: -4.319808006286621
    10. 'o' → logprob: -4.569808006286621

Token 7: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.746181309223175
    2. '_' → logprob: -1.4961812496185303
    3. '.' → logprob: -2.2461812496185303
    4. ',' → logprob: -2.4961812496185303
    5. 'u' → logprob: -3.3711812496185303
    6. 'umber' → logprob: -3.9961812496185303
    7. '(' → logprob: -4.246181488037109
    8. 'e' → logprob: -4.371181488037109
    9. ' =' → logprob: -4.496181488037109
    10. 'a' → logprob: -4.871181488037109

Token 8: '*' (ID: 9)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5833677053451538
    2. '0' → logprob: -0.8333677053451538
    3. ']' → logprob: -6.083367824554443
    4. '[' → logprob: -6.333367824554443
    5. '[]' → logprob: -6.708367824554443
    6. ' ' → logprob: -7.583367824554443
    7. '100' → logprob: -8.333367347717285
    8. 'int' → logprob: -8.333367347717285
    9. '10' → logprob: -8.458367347717285
    10. '(' → logprob: -8.708367347717285

Token 9: 'map' (ID: 3726)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001478796184528619
    2. 'map' → logprob: -9.125147819519043
    3. ' range' → logprob: -10.500147819519043
    4. '(range' → logprob: -11.500147819519043
    5. 'str' → logprob: -15.125147819519043
    6. 'filter' → logprob: -15.125147819519043
    7. 'zip' → logprob: -15.875147819519043
    8. '(' → logprob: -16.12514877319336
    9. 'iter' → logprob: -16.25014877319336
    10. '{' → logprob: -16.37514877319336

Token 10: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5880534052848816
    2. '(lambda' → logprob: -1.4630534648895264
    3. '(str' → logprob: -1.7130534648895264
    4. '(int' → logprob: -3.4630534648895264
    5. '(abs' → logprob: -7.838053226470947
    6. '(ord' → logprob: -8.463053703308105
    7. '(len' → logprob: -8.713053703308105
    8. '(pow' → logprob: -8.963053703308105
    9. '(chr' → logprob: -9.088053703308105
    10. '(eval' → logprob: -9.838053703308105

Token 11: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7237924933433533
    2. '(input' → logprob: -0.8487924933433533
    3. ',' → logprob: -2.848792552947998
    4. ')' → logprob: -4.973792552947998
    5. ',input' → logprob: -5.223792552947998
    6. '(range' → logprob: -5.223792552947998
    7. ')]' → logprob: -6.098792552947998
    8. '```' → logprob: -6.973792552947998
    9. '(n' → logprob: -7.223792552947998
    10. 'input' → logprob: -7.223792552947998

Token 12: '(__' (ID: 11782)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00790270697325468
    2. ' input' → logprob: -5.0079026222229
    3. '(input' → logprob: -7.0079026222229
    4. ',input' → logprob: -9.132903099060059
    5. ')' → logprob: -9.257903099060059
    6. '```' → logprob: -11.632903099060059
    7. 'range' → logprob: -11.757903099060059
    8. '=input' → logprob: -11.757903099060059
    9. '")' → logprob: -11.882903099060059
    10. 'open' → logprob: -11.882903099060059

Token 13: 'import' (ID: 561)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.22723689675331116
    2. 'import' → logprob: -1.6022368669509888
    3. 'file' → logprob: -7.602236747741699
    4. '_' → logprob: -7.727236747741699
    5. 'stdin' → logprob: -7.852236747741699
    6. 'range' → logprob: -9.8522367477417
    7. 'inp' → logprob: -9.8522367477417
    8. '(input' → logprob: -9.9772367477417
    9. '_input' → logprob: -9.9772367477417
    10. 'iter' → logprob: -10.2272367477417

Token 14: '__('' (ID: 54460)
  Prédit: '__(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__('' → logprob: -0.33023837208747864
    2. '(' → logprob: -2.2052383422851562
    3. '__("' → logprob: -2.4552383422851562
    4. '('' → logprob: -2.8302383422851562
    5. '("' → logprob: -4.455238342285156
    6. '('__' → logprob: -5.205238342285156
    7. '("("' → logprob: -6.455238342285156
    8. '__' → logprob: -6.580238342285156
    9. '("__' → logprob: -6.705238342285156
    10. '__(' → logprob: -6.955238342285156

Token 15: 'sys' (ID: 17324)
  Prédit: 'sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.03393302112817764
    2. 'built' → logprob: -3.90893292427063
    3. 'math' → logprob: -4.533933162689209
    4. 're' → logprob: -6.408933162689209
    5. 'it' → logprob: -7.908933162689209
    6. 'os' → logprob: -8.78393268585205
    7. 'random' → logprob: -8.78393268585205
    8. 'string' → logprob: -9.15893268585205
    9. 'cmath' → logprob: -9.40893268585205
    10. 'io' → logprob: -11.53393268585205

Token 16: '').' (ID: 3426)
  Prédit: '.stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.31528404355049133
    2. '.argv' → logprob: -1.315284013748169
    3. '').' → logprob: -6.690284252166748
    4. '.stdout' → logprob: -7.690284252166748
    5. ').' → logprob: -8.69028377532959
    6. 'stdin' → logprob: -10.19028377532959
    7. ' stdin' → logprob: -10.94028377532959
    8. '.modules' → logprob: -10.94028377532959
    9. '```' → logprob: -10.94028377532959
    10. '.' → logprob: -11.06528377532959

Token 17: 'stdin' (ID: 132953)
  Prédit: 'stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.0067310030572116375
    2. 'argv' → logprob: -5.006731033325195
    3. '.stdin' → logprob: -11.381731033325195
    4. ' stdin' → logprob: -13.006731033325195
    5. '(stdin' → logprob: -14.631731033325195
    6. 'std' → logprob: -14.756731033325195
    7. 'stderr' → logprob: -15.006731033325195
    8. 'arg' → logprob: -15.506731033325195
    9. 'stdout' → logprob: -15.506731033325195
    10. '.argv' → logprob: -15.631731033325195

Token 18: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.08014456927776337
    2. '.read' → logprob: -2.7051446437835693
    3. ').' → logprob: -5.83014440536499
    4. '.' → logprob: -5.83014440536499
    5. '.readlines' → logprob: -5.83014440536499
    6. 'read' → logprob: -7.20514440536499
    7. '.buffer' → logprob: -8.205144882202148
    8. ')' → logprob: -8.705144882202148
    9. '))' → logprob: -10.080144882202148
    10. '```' → logprob: -10.830144882202148

Token 19: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.18109624087810516
    2. '()' → logprob: -2.306096315383911
    3. '().' → logprob: -3.056096315383911
    4. '())' → logprob: -4.431096076965332
    5. '())))' → logprob: -5.931096076965332
    6. '()));' → logprob: -6.306096076965332
    7. ')' → logprob: -7.056096076965332
    8. '))' → logprob: -7.681096076965332
    9. '(),' → logprob: -8.431096076965332
    10. '()]' → logprob: -9.056096076965332

Token 20: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.023536615073680878
    2. 'rstrip' → logprob: -3.7735366821289062
    3. 'split' → logprob: -8.648536682128906
    4. 'read' → logprob: -9.398536682128906
    5. ' strip' → logprob: -10.648536682128906
    6. ')' → logprob: -12.023536682128906
    7. '_strip' → logprob: -14.023536682128906
    8. 'replace' → logprob: -14.398536682128906
    9. 'str' → logprob: -14.898536682128906
    10. '-strip' → logprob: -15.148536682128906

Token 21: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.08969299495220184
    2. '()' → logprob: -3.214693069458008
    3. '())' → logprob: -3.464693069458008
    4. '())))' → logprob: -4.339693069458008
    5. '))' → logprob: -7.839693069458008
    6. '()]' → logprob: -8.339693069458008
    7. '()));' → logprob: -8.339693069458008
    8. '(' → logprob: -8.714693069458008
    9. ')))' → logprob: -9.714693069458008
    10. ')' → logprob: -10.089693069458008

Token 22: ']
' (ID: 1592)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0784364640712738
    2. ')' → logprob: -2.8284363746643066
    3. ')])' → logprob: -4.328436374664307
    4. ']' → logprob: -6.203436374664307
    5. '])' → logprob: -7.453436374664307
    6. '])]' → logprob: -8.078436851501465
    7. '[' → logprob: -9.828436851501465
    8. '),' → logprob: -10.078436851501465
    9. '))' → logprob: -10.203436851501465
    10. ')][' → logprob: -10.703436851501465

Token 23: '_' (ID: 62)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02649768255650997
    2. '+' → logprob: -5.401497840881348
    3. ',' → logprob: -5.526497840881348
    4. ']' → logprob: -5.776497840881348
    5. '*' → logprob: -5.901497840881348
    6. ',
' → logprob: -6.151497840881348
    7. '[' → logprob: -6.276497840881348
    8. '#' → logprob: -6.776497840881348
    9. ')
' → logprob: -6.901497840881348
    10. 'def' → logprob: -7.151497840881348

Token 24: '=_' (ID: 51761)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04349065572023392
    2. ' =' → logprob: -3.1684906482696533
    3. '=[' → logprob: -8.668490409851074
    4. '=[]' → logprob: -9.043490409851074
    5. '_=' → logprob: -9.543490409851074
    6. '.' → logprob: -10.918490409851074
    7. '=int' → logprob: -11.043490409851074
    8. '_' → logprob: -11.293490409851074
    9. '[' → logprob: -11.418490409851074
    10. ' ' → logprob: -12.168490409851074

Token 25: ' or' (ID: 503)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.42036694288253784
    2. 'N' → logprob: -1.7953670024871826
    3. '0' → logprob: -3.1703670024871826
    4. '(' → logprob: -3.4203670024871826
    5. '[' → logprob: -3.4203670024871826
    6. '.' → logprob: -4.6703667640686035
    7. '=' → logprob: -4.7953667640686035
    8. '*' → logprob: -4.9203667640686035
    9. '1' → logprob: -4.9203667640686035
    10. '_' → logprob: -5.0453667640686035

Token 26: ' ' (ID: 220)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.3984440267086029
    2. ' N' → logprob: -2.0234439373016357
    3. 'reduce' → logprob: -2.8984439373016357
    4. ' True' → logprob: -3.3984439373016357
    5. 'True' → logprob: -3.8984439373016357
    6. ' reduce' → logprob: -4.398444175720215
    7. 'len' → logprob: -4.898444175720215
    8. 'None' → logprob: -5.023444175720215
    9. ' ' → logprob: -5.148444175720215
    10. '[' → logprob: -5.148444175720215

Token 27: '0' (ID: 15)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.8191730976104736
    2. 'reduce' → logprob: -1.0691730976104736
    3. '0' → logprob: -2.5691730976104736
    4. '[]' → logprob: -3.0691730976104736
    5. '1' → logprob: -3.8191730976104736
    6. '[' → logprob: -4.5691728591918945
    7. 'int' → logprob: -4.8191728591918945
    8. 'None' → logprob: -5.0691728591918945
    9. 'range' → logprob: -5.0691728591918945
    10. 'True' → logprob: -5.1941728591918945

Token 28: ' #' (ID: 1069)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7845869660377502
    2. '_' → logprob: -1.6595869064331055
    3. ' ' → logprob: -1.9095869064331055
    4. '<|end|>' → logprob: -2.4095869064331055
    5. '+' → logprob: -2.9095869064331055
    6. '
' → logprob: -4.4095869064331055
    7. ')' → logprob: -4.6595869064331055
    8. ' =' → logprob: -4.6595869064331055
    9. '#' → logprob: -5.4095869064331055
    10. '[' → logprob: -5.6595869064331055

Token 29: ' no' (ID: 860)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8580312132835388
    2. '_' → logprob: -1.1080312728881836
    3. ' _' → logprob: -2.3580312728881836
    4. '=' → logprob: -2.9830312728881836
    5. '<|end|>' → logprob: -3.1080312728881836
    6. '0' → logprob: -3.2330312728881836
    7. ' N' → logprob: -5.858031272888184
    8. ' =' → logprob: -5.858031272888184
    9. '_=' → logprob: -5.983031272888184
    10. 'N' → logprob: -6.233031272888184

Token 30: '-op' (ID: 37674)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3793642222881317
    2. '_' → logprob: -1.254364252090454
    3. '=' → logprob: -4.629364013671875
    4. ' _' → logprob: -5.504364013671875
    5. '<|end|>' → logprob: -5.629364013671875
    6. 'N' → logprob: -6.129364013671875
    7. ')' → logprob: -6.379364013671875
    8. ' N' → logprob: -6.379364013671875
    9. '+' → logprob: -6.879364013671875
    10. 'n' → logprob: -7.004364013671875

Token 31: ' line' (ID: 2543)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.1245372295379639
    2. '=' → logprob: -1.4995372295379639
    3. '#' → logprob: -1.6245372295379639
    4. '_' → logprob: -2.124537229537964
    5. '(' → logprob: -2.749537229537964
    6. ' ' → logprob: -4.249537467956543
    7. '[' → logprob: -4.374537467956543
    8. '*' → logprob: -4.624537467956543
    9. '
' → logprob: -4.624537467956543
    10. ';' → logprob: -5.499537467956543

Token 32: ' for' (ID: 395)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.100446343421936
    2. ' ' → logprob: -1.475446343421936
    3. '_' → logprob: -1.600446343421936
    4. '
' → logprob: -3.2254462242126465
    5. '[' → logprob: -3.6004462242126465
    6. '#' → logprob: -3.6004462242126465
    7. '*' → logprob: -3.7254462242126465
    8. 'N' → logprob: -3.9754462242126465
    9. '=' → logprob: -4.1004462242126465
    10. ')' → logprob: -4.3504462242126465

Token 33: ' vibes' (ID: 116306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06923556327819824
    2. ' _' → logprob: -3.6942355632781982
    3. '<|end|>' → logprob: -4.694235801696777
    4. ' now' → logprob: -5.319235801696777
    5. '...' → logprob: -5.569235801696777
    6. ' the' → logprob: -5.569235801696777
    7. '0' → logprob: -5.819235801696777
    8. ' continuation' → logprob: -5.944235801696777
    9. ' ' → logprob: -6.069235801696777
    10. 'the' → logprob: -6.819235801696777

Token 34: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.035001516342163
    2. '+' → logprob: -1.660001516342163
    3. '
' → logprob: -1.910001516342163
    4. '_' → logprob: -2.035001516342163
    5. '=' → logprob: -2.910001516342163
    6. ' 
' → logprob: -3.535001516342163
    7. '<|end|>' → logprob: -4.035001754760742
    8. '*' → logprob: -4.285001754760742
    9. '#' → logprob: -4.535001754760742
    10. '[' → logprob: -4.785001754760742

Token 35: 'ss' (ID: 1087)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.1207245588302612
    2. ' ' → logprob: -1.2457245588302612
    3. '_' → logprob: -1.9957245588302612
    4. '=' → logprob: -2.370724678039551
    5. '#' → logprob: -3.870724678039551
    6. ')' → logprob: -3.870724678039551
    7. '*' → logprob: -4.245724678039551
    8. '+
' → logprob: -4.370724678039551
    9. 'sum' → logprob: -4.620724678039551
    10. ' 
' → logprob: -4.870724678039551

Token 36: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.394938200712204
    2. 'um' → logprob: -1.3949382305145264
    3. ' =' → logprob: -3.1449382305145264
    4. 'u' → logprob: -4.769937992095947
    5. '.' → logprob: -5.269937992095947
    6. '=sum' → logprob: -5.644937992095947
    7. '=[' → logprob: -5.769937992095947
    8. '=[]' → logprob: -5.894937992095947
    9. 'e' → logprob: -6.394937992095947
    10. 'r' → logprob: -6.894937992095947

Token 37: ' input' (ID: 3422)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -1.05741548538208
    2. ' reduce' → logprob: -1.68241548538208
    3. 'sum' → logprob: -2.18241548538208
    4. ' []' → logprob: -2.43241548538208
    5. ' sum' → logprob: -2.55741548538208
    6. ' [' → logprob: -2.93241548538208
    7. '[]' → logprob: -3.30741548538208
    8. '[' → logprob: -3.68241548538208
    9. ' N' → logprob: -3.93241548538208
    10. 'N' → logprob: -4.80741548538208

Token 38: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2634880244731903
    2. '()' → logprob: -1.5134880542755127
    3. '().' → logprob: -5.638487815856934
    4. '```' → logprob: -6.013487815856934
    5. '('' → logprob: -7.138487815856934
    6. '.' → logprob: -7.263487815856934
    7. ')' → logprob: -7.388487815856934
    8. ' ' → logprob: -7.388487815856934
    9. ' (' → logprob: -7.763487815856934
    10. '`()' → logprob: -8.513487815856934

Token 39: 'A' (ID: 32)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9313930869102478
    2. '.' → logprob: -1.9313931465148926
    3. '=' → logprob: -2.3063931465148926
    4. '[' → logprob: -2.6813931465148926
    5. ' ' → logprob: -2.6813931465148926
    6. '_' → logprob: -3.3063931465148926
    7. '*' → logprob: -3.4313931465148926
    8. '(' → logprob: -3.5563931465148926
    9. '#' → logprob: -3.5563931465148926
    10. ')' → logprob: -3.9313931465148926

Token 40: '=set' (ID: 166509)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3707043528556824
    2. '=' → logprob: -1.3707044124603271
    3. '[' → logprob: -3.620704412460327
    4. 'A' → logprob: -5.495704174041748
    5. '.' → logprob: -5.495704174041748
    6. '_' → logprob: -5.745704174041748
    7. '=[' → logprob: -6.245704174041748
    8. 's' → logprob: -6.370704174041748
    9. '=[]' → logprob: -6.620704174041748
    10. ' ' → logprob: -6.620704174041748

Token 41: '(["' (ID: 41418)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0035232175141572952
    2. '()' → logprob: -5.753523349761963
    3. '([' → logprob: -9.253522872924805
    4. '((' → logprob: -10.003522872924805
    5. '<|end|>' → logprob: -10.253522872924805
    6. '(
' → logprob: -10.628522872924805
    7. '(range' → logprob: -10.628522872924805
    8. ' (' → logprob: -10.628522872924805
    9. '(A' → logprob: -11.378522872924805
    10. '('' → logprob: -11.753522872924805

Token 42: '"])
' (ID: 30883)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.47834479808807373
    2. '"' → logprob: -2.6033449172973633
    3. '0' → logprob: -2.6033449172973633
    4. '1' → logprob: -3.2283449172973633
    5. 's' → logprob: -3.3533449172973633
    6. 'h' → logprob: -4.478344917297363
    7. '_' → logprob: -4.603344917297363
    8. ' "' → logprob: -4.790844917297363
    9. 'A' → logprob: -4.853344917297363
    10. 'r' → logprob: -4.978344917297363

Token 43: 'ANS' (ID: 18850)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6757845282554626
    2. ')' → logprob: -1.5507845878601074
    3. '_' → logprob: -2.9257845878601074
    4. 'a' → logprob: -3.1757845878601074
    5. '.' → logprob: -3.3007845878601074
    6. 's' → logprob: -3.8007845878601074
    7. 'for' → logprob: -3.9257845878601074
    8. '#' → logprob: -4.175784587860107
    9. '=' → logprob: -4.425784587860107
    10. 'A' → logprob: -4.550784587860107

Token 44: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25536537170410156
    2. ' =' → logprob: -1.5053653717041016
    3. '=[]' → logprob: -6.505365371704102
    4. '.' → logprob: -7.505365371704102
    5. ' ' → logprob: -8.380365371704102
    6. '_' → logprob: -8.380365371704102
    7. '+=' → logprob: -8.505365371704102
    8. ' +=' → logprob: -8.755365371704102
    9. '={}' → logprob: -8.880365371704102
    10. '.append' → logprob: -9.380365371704102

Token 45: ' set' (ID: 920)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17513246834278107
    2. ' ' → logprob: -2.0501325130462646
    3. '[]' → logprob: -4.4251322746276855
    4. ' []' → logprob: -4.8001322746276855
    5. 'set' → logprob: -5.1751322746276855
    6. ' set' → logprob: -6.1751322746276855
    7. '{}' → logprob: -6.4251322746276855
    8. ' {}' → logprob: -7.8001322746276855
    9. '1' → logprob: -7.9251322746276855
    10. '{' → logprob: -8.175132751464844

Token 46: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.15078820288181305
    2. '()' → logprob: -2.2757883071899414
    3. '([' → logprob: -3.7757883071899414
    4. '([(' → logprob: -5.150788307189941
    5. '("("' → logprob: -5.775788307189941
    6. '([]' → logprob: -6.525788307189941
    7. '((' → logprob: -6.775788307189941
    8. '([...' → logprob: -7.525788307189941
    9. '(["' → logprob: -7.775788307189941
    10. '(A' → logprob: -7.900788307189941

Token 47: 'inc' (ID: 2768)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16348892450332642
    2. '.' → logprob: -3.5384888648986816
    3. ' for' → logprob: -3.5384888648986816
    4. ' ' → logprob: -3.6634888648986816
    5. '=' → logprob: -4.413488864898682
    6. ',' → logprob: -4.663488864898682
    7. ')' → logprob: -4.788488864898682
    8. 'f' → logprob: -5.038488864898682
    9. 's' → logprob: -5.413488864898682
    10. 'a' → logprob: -5.788488864898682

Token 48: ' =' (ID: 314)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -1.3679713010787964
    2. 'rement' → logprob: -1.3679713010787964
    3. 'lude' → logprob: -1.3679713010787964
    4. 'r' → logprob: -2.117971420288086
    5. '=' → logprob: -2.617971420288086
    6. 'l' → logprob: -3.492971420288086
    7. ' =' → logprob: -4.867971420288086
    8. '+=' → logprob: -7.992971420288086
    9. '=set' → logprob: -7.992971420288086
    10. '_counter' → logprob: -8.117971420288086

Token 49: ' lambda' (ID: 27871)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7549786567687988
    2. '1' → logprob: -0.7549786567687988
    3. ' ' → logprob: -2.879978656768799
    4. '{' → logprob: -6.504978656768799
    5. '{}' → logprob: -7.129978656768799
    6. '-' → logprob: -8.50497817993164
    7. 'len' → logprob: -8.87997817993164
    8. '100' → logprob: -9.00497817993164
    9. '[' → logprob: -9.00497817993164
    10. '10' → logprob: -9.25497817993164

Token 50: ' S' (ID: 336)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.6594445705413818
    2. ' x' → logprob: -1.1594445705413818
    3. ' lambda' → logprob: -2.534444570541382
    4. 's' → logprob: -3.409444570541382
    5. 'x' → logprob: -4.034444808959961
    6. ' ' → logprob: -4.409444808959961
    7. ' a' → logprob: -4.784444808959961
    8. 'lambda' → logprob: -5.159444808959961
    9. ' ss' → logprob: -6.159444808959961
    10. 'a' → logprob: -6.409444808959961

Token 51: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.48922601342201233
    2. ':' → logprob: -1.11422598361969
    3. ',S' → logprob: -3.3642261028289795
    4. ' :' → logprob: -5.4892258644104
    5. ':S' → logprob: -5.4892258644104
    6. ',s' → logprob: -5.7392258644104
    7. 'S' → logprob: -5.8642258644104
    8. ',:' → logprob: -6.7392258644104
    9. 's' → logprob: -6.8642258644104
    10. ',x' → logprob: -7.3642258644104

Token 52: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1128205955028534
    2. ':S' → logprob: -2.362820625305176
    3. ' :' → logprob: -4.737820625305176
    4. ':s' → logprob: -5.862820625305176
    5. ':c' → logprob: -8.862820625305176
    6. ',' → logprob: -9.362820625305176
    7. 'S' → logprob: -9.487820625305176
    8. ':t' → logprob: -9.612820625305176
    9. ':ss' → logprob: -9.612820625305176
    10. ',S' → logprob: -9.862820625305176

Token 53: ' {' (ID: 354)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.6084721684455872
    2. 'S' → logprob: -0.8584721684455872
    3. '{' → logprob: -3.6084721088409424
    4. ' {' → logprob: -5.8584723472595215
    5. ' ' → logprob: -6.9834723472595215
    6. ' (' → logprob: -8.608471870422363
    7. 's' → logprob: -8.608471870422363
    8. '(S' → logprob: -8.733471870422363
    9. '[' → logprob: -9.108471870422363
    10. ' s' → logprob: -9.733471870422363

Token 54: 'x' (ID: 87)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10338547080755234
    2. 'S' → logprob: -2.6033854484558105
    3. 'x' → logprob: -4.4783854484558105
    4. 'w' → logprob: -5.4783854484558105
    5. ' s' → logprob: -5.8533854484558105
    6. 'i' → logprob: -7.1033854484558105
    7. '*' → logprob: -7.3533854484558105
    8. 'a' → logprob: -7.6033854484558105
    9. 't' → logprob: -7.7283854484558105
    10. 'p' → logprob: -8.103385925292969

Token 55: '+c' (ID: 114860)
  Prédit: '+c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+c' → logprob: -0.06809362769126892
    2. '+' → logprob: -2.9430935382843018
    3. ' +' → logprob: -4.443093776702881
    4. '+x' → logprob: -6.693093776702881
    5. '+(' → logprob: -10.068093299865723
    6. '|' → logprob: -11.193093299865723
    7. '+s' → logprob: -11.193093299865723
    8. ' for' → logprob: -11.818093299865723
    9. '+i' → logprob: -11.943093299865723
    10. 'c' → logprob: -12.193093299865723

Token 56: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20143243670463562
    2. 'for' → logprob: -1.701432466506958
    3. ' ' → logprob: -11.451432228088379
    4. '	for' → logprob: -11.951432228088379
    5. 'or' → logprob: -13.451432228088379
    6. '  ' → logprob: -15.076432228088379
    7. ' or' → logprob: -16.076433181762695
    8. '   ' → logprob: -16.076433181762695
    9. '<|end|>' → logprob: -17.951433181762695
    10. '
' → logprob: -17.951433181762695

Token 57: ' x' (ID: 1215)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.008616581559181213
    2. ' S' → logprob: -4.7586164474487305
    3. ' ' → logprob: -13.88361644744873
    4. 's' → logprob: -14.63361644744873
    5. 'A' → logprob: -15.50861644744873
    6. 'SS' → logprob: -16.383617401123047
    7. 'Ss' → logprob: -16.758617401123047
    8. ' s' → logprob: -17.008617401123047
    9. '_S' → logprob: -17.133617401123047
    10. '{' → logprob: -17.383617401123047

Token 58: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14315751194953918
    2. 'in' → logprob: -2.018157482147217
    3. 's' → logprob: -8.768157958984375
    4. 'S' → logprob: -8.893157958984375
    5. ' ' → logprob: -9.018157958984375
    6. '<|end|>' → logprob: -10.393157958984375
    7. 'n' → logprob: -11.393157958984375
    8. 'x' → logprob: -12.518157958984375
    9. '<|end|>' → logprob: -12.768157958984375
    10. '_in' → logprob: -13.018157958984375

Token 59: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.005246091168373823
    2. ' S' → logprob: -5.255246162414551
    3. ' ' → logprob: -12.13024616241455
    4. 'A' → logprob: -13.25524616241455
    5. 's' → logprob: -13.75524616241455
    6. '{' → logprob: -14.00524616241455
    7. 'Ss' → logprob: -14.63024616241455
    8. 'SS' → logprob: -15.00524616241455
    9. '(S' → logprob: -15.13024616241455
    10. '<S' → logprob: -15.13024616241455

Token 60: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0005561320576816797
    2. ' }' → logprob: -8.000555992126465
    3. ',' → logprob: -8.500555992126465
    4. '}}' → logprob: -12.750555992126465
    5. '}+' → logprob: -12.750555992126465
    6. '"}' → logprob: -13.250555992126465
    7. '}s' → logprob: -13.875555992126465
    8. ' ,' → logprob: -14.000555992126465
    9. '}
' → logprob: -14.000555992126465
    10. 's' → logprob: -14.125555992126465

Token 61: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19125813245773315
    2. ' for' → logprob: -2.191258192062378
    3. 's' → logprob: -4.191257953643799
    4. '+' → logprob: -4.566257953643799
    5. ' ' → logprob: -4.566257953643799
    6. '{' → logprob: -5.066257953643799
    7. 'S' → logprob: -5.191257953643799
    8. '_' → logprob: -6.191257953643799
    9. 'A' → logprob: -6.441257953643799
    10. ')' → logprob: -6.566257953643799

Token 62: ' C' (ID: 363)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.05990532040596008
    2. ' i' → logprob: -3.4349052906036377
    3. 'c' → logprob: -3.8099052906036377
    4. 'i' → logprob: -6.684905529022217
    5. ' x' → logprob: -7.184905529022217
    6. ' s' → logprob: -7.684905529022217
    7. '_' → logprob: -8.059905052185059
    8. ' ' → logprob: -8.059905052185059
    9. ' _' → logprob: -8.059905052185059
    10. 'x' → logprob: -9.434905052185059

Token 63: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014197707176208496
    2. 'in' → logprob: -4.264197826385498
    3. ' ' → logprob: -11.38919734954834
    4. 's' → logprob: -11.51419734954834
    5. 'n' → logprob: -13.51419734954834
    6. 'In' → logprob: -13.76419734954834
    7. 'import' → logprob: -13.88919734954834
    8. 'i' → logprob: -13.88919734954834
    9. '_in' → logprob: -13.88919734954834
    10. '  ' → logprob: -14.38919734954834

Token 64: ' ss' (ID: 20928)
  Prédit: ' ss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ss' → logprob: -0.2256392538547516
    2. 'ss' → logprob: -1.6006392240524292
    3. ' range' → logprob: -9.600639343261719
    4. '(ss' → logprob: -9.725639343261719
    5. ' ' → logprob: -10.225639343261719
    6. 'range' → logprob: -10.975639343261719
    7. 's' → logprob: -11.600639343261719
    8. '	ss' → logprob: -12.100639343261719
    9. '  ' → logprob: -12.475639343261719
    10. ':ss' → logprob: -12.600639343261719

Token 65: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012129719834774733
    2. ' :' → logprob: -7.251213073730469
    3. ':
' → logprob: -7.626213073730469
    4. ',' → logprob: -12.251213073730469
    5. ':

' → logprob: -13.876213073730469
    6. ' :
' → logprob: -14.001213073730469
    7. ':def' → logprob: -14.501213073730469
    8. ':new' → logprob: -14.626213073730469
    9. '.' → logprob: -14.751213073730469
    10. ':**' → logprob: -14.876213073730469

Token 66: '   ' (ID: 271)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.5685503482818604
    2. ' AN' → logprob: -1.0685503482818604
    3. '   ' → logprob: -3.0685503482818604
    4. 'ANS' → logprob: -3.8185503482818604
    5. 'A' → logprob: -4.193550109863281
    6. 'AN' → logprob: -5.693550109863281
    7. ' ' → logprob: -7.443550109863281
    8. ' ' → logprob: -8.068550109863281
    9. ' inc' → logprob: -8.193550109863281
    10. ' s' → logprob: -8.318550109863281

Token 67: ' AA' (ID: 44568)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.29474762082099915
    2. 'A' → logprob: -2.4197475910186768
    3. ' AN' → logprob: -2.4197475910186768
    4. 'ANS' → logprob: -2.6697475910186768
    5. '   ' → logprob: -5.794747829437256
    6. 'AN' → logprob: -6.169747829437256
    7. ' new' → logprob: -7.169747829437256
    8. ' inc' → logprob: -7.794747829437256
    9. ' ' → logprob: -8.169747352600098
    10. ' ans' → logprob: -8.294747352600098

Token 68: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09629110246896744
    2. ' =' → logprob: -2.9712910652160645
    3. '=A' → logprob: -3.2212910652160645
    4. 'A' → logprob: -8.221291542053223
    5. '+=' → logprob: -8.971291542053223
    6. '=N' → logprob: -10.096291542053223
    7. '=set' → logprob: -10.096291542053223
    8. '=S' → logprob: -10.971291542053223
    9. '|' → logprob: -11.221291542053223
    10. 'N' → logprob: -11.346291542053223

Token 69: ' set' (ID: 920)
  Prédit: 'inc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inc' → logprob: -0.4752199649810791
    2. 'A' → logprob: -1.225219964981079
    3. ' A' → logprob: -3.350219964981079
    4. 'AA' → logprob: -4.2252197265625
    5. '{' → logprob: -4.3502197265625
    6. 'set' → logprob: -4.9752197265625
    7. ' inc' → logprob: -4.9752197265625
    8. ' set' → logprob: -6.1002197265625
    9. 'ANS' → logprob: -6.3502197265625
    10. ' AA' → logprob: -6.6002197265625

Token 70: '(A' (ID: 10706)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.029135629534721375
    2. '(' → logprob: -4.529135704040527
    3. '([' → logprob: -5.029135704040527
    4. '(A' → logprob: -5.529135704040527
    5. '(x' → logprob: -5.904135704040527
    6. '(map' → logprob: -6.779135704040527
    7. '()
' → logprob: -6.904135704040527
    8. '(list' → logprob: -7.654135704040527
    9. '().' → logprob: -8.404135704040527
    10. '.union' → logprob: -8.404135704040527

Token 71: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6361140012741089
    2. ')' → logprob: -0.8861140012741089
    3. ' |' → logprob: -3.2611141204833984
    4. '|' → logprob: -4.636114120483398
    5. ').' → logprob: -4.886114120483398
    6. ')|' → logprob: -7.261114120483398
    7. '.union' → logprob: -7.386114120483398
    8. ' )
' → logprob: -7.511114120483398
    9. ');' → logprob: -8.511114120483398
    10. ' )' → logprob: -8.636114120483398

Token 72: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31036534905433655
    2. '|' → logprob: -2.6853654384613037
    3. 'A' → logprob: -2.9353654384613037
    4. 'for' → logprob: -2.9353654384613037
    5. ' for' → logprob: -3.9353654384613037
    6. ' |' → logprob: -3.9353654384613037
    7. 'ANS' → logprob: -4.310365200042725
    8. '.union' → logprob: -4.310365200042725
    9. '
' → logprob: -4.685365200042725
    10. ' A' → logprob: -6.185365200042725

Token 73: ' for' (ID: 395)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5355425477027893
    2. '   ' → logprob: -1.4105424880981445
    3. 'for' (adapté à ' for') → logprob: -2.5355424880981445
    4. ' A' → logprob: -3.1605424880981445
    5. ' for' → logprob: -3.4105424880981445
    6. 'ANS' → logprob: -4.4105424880981445
    7. 'AN' → logprob: -6.9105424880981445
    8. ' ' → logprob: -7.6605424880981445
    9. '
' → logprob: -8.035542488098145
    10. '  ' → logprob: -8.035542488098145

Token 74: ' JJ' (ID: 132668)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9478880763053894
    2. ' a' → logprob: -1.4478881359100342
    3. 'x' → logprob: -1.9478881359100342
    4. ' x' → logprob: -2.197888135910034
    5. ' s' → logprob: -3.447888135910034
    6. ' S' → logprob: -3.447888135910034
    7. 'S' → logprob: -3.947888135910034
    8. 's' → logprob: -4.322887897491455
    9. ' B' → logprob: -5.572887897491455
    10. 'B' → logprob: -6.197887897491455

Token 75: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.34892162680625916
    2. 'in' → logprob: -1.2239216566085815
    3. '+' → logprob: -8.598921775817871
    4. '_in' → logprob: -10.098921775817871
    5. ' ' → logprob: -10.348921775817871
    6. 'In' → logprob: -10.473921775817871
    7. ',' → logprob: -10.848921775817871
    8. 'n' → logprob: -10.973921775817871
    9. '   ' → logprob: -10.973921775817871
    10. '  ' → logprob: -11.223921775817871

Token 76: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6574482917785645
    2. 'AA' → logprob: -0.7824482917785645
    3. 'inc' → logprob: -3.9074482917785645
    4. ' AA' → logprob: -6.2824482917785645
    5. ' A' → logprob: -6.4074482917785645
    6. '   ' → logprob: -7.7824482917785645
    7. 'list' → logprob: -9.532447814941406
    8. 'aa' → logprob: -9.782447814941406
    9. '  ' → logprob: -9.782447814941406
    10. ' ' → logprob: -9.907447814941406

Token 77: '.copy' (ID: 22925)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04387110471725464
    2. ':
' → logprob: -3.1688711643218994
    3. '   ' → logprob: -8.29387092590332
    4. ' :' → logprob: -8.54387092590332
    5. ',' → logprob: -10.04387092590332
    6. '       ' → logprob: -10.04387092590332
    7. ':

' → logprob: -10.16887092590332
    8. '|' → logprob: -10.16887092590332
    9. '{' → logprob: -10.41887092590332
    10. '+' → logprob: -10.66887092590332

Token 78: '():
' (ID: 8595)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20569731295108795
    2. ':
' → logprob: -1.7056972980499268
    3. '   ' → logprob: -6.330697536468506
    4. '():
' → logprob: -7.455697536468506
    5. '       ' → logprob: -7.705697536468506
    6. '+' → logprob: -8.205697059631348
    7. '):
' → logprob: -8.455697059631348
    8. ' :' → logprob: -8.580697059631348
    9. '):' → logprob: -8.705697059631348
    10. '|' → logprob: -9.205697059631348

Token 79: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23954623937606812
    2. '   ' → logprob: -1.739546298980713
    3. ' AN' → logprob: -3.864546298980713
    4. ':' → logprob: -4.989546298980713
    5. ':
' → logprob: -6.114546298980713
    6. '    ' → logprob: -6.364546298980713
    7. '<|end|>' → logprob: -6.739546298980713
    8. 'ANS' → logprob: -7.114546298980713
    9. '    
' → logprob: -7.614546298980713
    10. '        
' → logprob: -7.739546298980713

Token 80: ' JJ' (ID: 132668)
  Prédit: ' AN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' AN' → logprob: -0.4071076810359955
    2. '   ' → logprob: -1.4071077108383179
    3. 'ANS' → logprob: -2.5321075916290283
    4. 'AN' → logprob: -4.907107830047607
    5. '       ' → logprob: -6.657107830047607
    6. ' AA' → logprob: -8.15710735321045
    7. ' for' → logprob: -8.40710735321045
    8. ' ' → logprob: -8.40710735321045
    9. '           ' → logprob: -8.53210735321045
    10. 'AA' → logprob: -8.90710735321045

Token 81: 'z' (ID: 89)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9657332301139832
    2. '+' → logprob: -1.090733289718628
    3. '+=' → logprob: -1.840733289718628
    4. '+c' → logprob: -3.465733289718628
    5. ' +' → logprob: -3.590733289718628
    6. ' =' → logprob: -4.340733051300049
    7. ' +=' → logprob: -4.465733051300049
    8. '+C' → logprob: -4.465733051300049
    9. 'J' → logprob: -4.965733051300049
    10. 'c' → logprob: -5.090733051300049

Token 82: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18549120426177979
    2. ' =' → logprob: -1.9354912042617798
    3. '+' → logprob: -5.18549108505249
    4. 'z' → logprob: -5.68549108505249
    5. '+=' → logprob: -5.93549108505249
    6. 'JJ' → logprob: -6.06049108505249
    7. '.add' → logprob: -6.18549108505249
    8. ' ' → logprob: -6.81049108505249
    9. '   ' → logprob: -7.18549108505249
    10. 'J' → logprob: -7.43549108505249

Token 83: ' JJ' (ID: 132668)
  Prédit: 'JJ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'JJ' → logprob: -0.07774396240711212
    2. ' JJ' → logprob: -2.8277440071105957
    3. 'inc' → logprob: -4.452744007110596
    4. ' inc' → logprob: -6.827744007110596
    5. 'jj' → logprob: -6.827744007110596
    6. 'len' → logprob: -7.452744007110596
    7. ' jj' → logprob: -7.952744007110596
    8. ' ' → logprob: -8.327743530273438
    9. 'J' → logprob: -9.327743530273438
    10. '  ' → logprob: -9.577743530273438

Token 84: ' +' (ID: 659)
  Prédit: '+c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+c' → logprob: -0.03355751931667328
    2. ' +' → logprob: -4.158557415008545
    3. '+' → logprob: -4.533557415008545
    4. '+C' → logprob: -5.033557415008545
    5. '+j' → logprob: -9.408557891845703
    6. 'c' → logprob: -12.158557891845703
    7. '+[' → logprob: -12.783557891845703
    8. '+p' → logprob: -12.783557891845703
    9. '+x' → logprob: -13.158557891845703
    10. '+l' → logprob: -13.283557891845703

Token 85: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0011748670367524028
    2. ' C' → logprob: -6.7511749267578125
    3. ' ' → logprob: -13.501174926757812
    4. '<|end|>' → logprob: -13.501174926757812
    5. ''C' → logprob: -14.876174926757812
    6. '  ' → logprob: -15.001174926757812
    7. 'c' → logprob: -15.376174926757812
    8. '"C' → logprob: -15.626174926757812
    9. '>C' → logprob: -15.626174926757812
    10. '*C' → logprob: -16.376174926757812

Token 86: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.025358032435178757
    2. '
' → logprob: -5.275358200073242
    3. ' 
' → logprob: -5.525358200073242
    4. '<|end|>' → logprob: -6.150358200073242
    5. ' if' → logprob: -6.400358200073242
    6. '    
' → logprob: -6.525358200073242
    7. ' ' → logprob: -6.650358200073242
    8. ',' → logprob: -6.650358200073242
    9. ' and' → logprob: -6.650358200073242
    10. '   ' → logprob: -7.025358200073242

Token 87: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08046448230743408
    2. '<|end|>' → logprob: -2.5804643630981445
    3. '<|end|>' → logprob: -6.8304643630981445
    4. '       ' → logprob: -9.080464363098145
    5. '
' → logprob: -9.080464363098145
    6. '        
' → logprob: -9.330464363098145
    7. ' 
' → logprob: -10.080464363098145
    8. '  
' → logprob: -10.830464363098145
    9. ' ' → logprob: -11.330464363098145
    10. ';' → logprob: -11.455464363098145

Token 88: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6851962208747864
    2. ' AN' → logprob: -1.1851961612701416
    3. 'ANS' → logprob: -2.0601961612701416
    4. 'if' (adapté à ' if') → logprob: -3.6851961612701416
    5. 'AN' → logprob: -3.8101961612701416
    6. '   ' → logprob: -4.810196399688721
    7. '       ' → logprob: -5.685196399688721
    8. 'AA' → logprob: -6.685196399688721
    9. ' A' → logprob: -6.935196399688721
    10. ' AA' → logprob: -6.935196399688721

Token 89: ' not' (ID: 625)
  Prédit: 'JJ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'JJ' → logprob: -0.4479927718639374
    2. ' JJ' → logprob: -1.0729928016662598
    3. ' len' → logprob: -4.82299280166626
    4. 'len' → logprob: -5.07299280166626
    5. ' C' → logprob: -7.07299280166626
    6. 'jj' → logprob: -7.07299280166626
    7. ' jj' → logprob: -7.19799280166626
    8. ' ' → logprob: -7.57299280166626
    9. ' not' → logprob: -7.57299280166626
    10. 'C' → logprob: -7.82299280166626

Token 90: ' (' (ID: 350)
  Prédit: 'JJ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'JJ' → logprob: -0.52611243724823
    2. ' JJ' → logprob: -1.15111243724823
    3. ' any' → logprob: -4.1511125564575195
    4. 'len' → logprob: -4.7761125564575195
    5. 'C' → logprob: -4.9011125564575195
    6. ' C' → logprob: -5.0261125564575195
    7. 'any' → logprob: -5.0261125564575195
    8. ' AA' → logprob: -5.0261125564575195
    9. 'AA' → logprob: -5.1511125564575195
    10. 'jj' → logprob: -5.6511125564575195

Token 91: 'len' (ID: 3303)
  Prédit: 'JJ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'JJ' → logprob: -0.12344613671302795
    2. ' JJ' → logprob: -2.623446226119995
    3. 'len' → logprob: -4.873445987701416
    4. 'jj' → logprob: -4.873445987701416
    5. 'ss' → logprob: -5.748445987701416
    6. ' ' → logprob: -6.060945987701416
    7. 'AA' → logprob: -6.123445987701416
    8. 'C' → logprob: -6.248445987701416
    9. ' len' → logprob: -6.373445987701416
    10. ' jj' → logprob: -6.560945987701416

Token 92: '(J' (ID: 25268)
  Prédit: '(J'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(J' → logprob: -0.01586391031742096
    2. '(' → logprob: -4.64086389541626
    3. 'JJ' → logprob: -5.89086389541626
    4. ' (' → logprob: -7.01586389541626
    5. ' JJ' → logprob: -7.26586389541626
    6. ')' → logprob: -8.015864372253418
    7. '(j' → logprob: -8.265864372253418
    8. ' ' → logprob: -8.515864372253418
    9. 'J' → logprob: -8.765864372253418
    10. '(A' → logprob: -9.140864372253418

Token 93: 'J' (ID: 41)
  Prédit: 'J'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'J' → logprob: -0.00024382755509577692
    2. 'Z' → logprob: -9.500244140625
    3. 'JJ' → logprob: -9.500244140625
    4. 'z' → logprob: -10.625244140625
    5. ')' → logprob: -11.125244140625
    6. '(J' → logprob: -11.125244140625
    7. ' J' → logprob: -12.312744140625
    8. '<J' → logprob: -12.312744140625
    9. '<|end|>' → logprob: -12.562744140625
    10. '(' → logprob: -12.625244140625

Token 94: ')-' (ID: 14080)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.0004907185211777687
    2. ')' → logprob: -8.75049114227295
    3. '+' → logprob: -8.75049114227295
    4. 'JJ' → logprob: -10.12549114227295
    5. ' +' → logprob: -10.62549114227295
    6. 'zz' → logprob: -11.37549114227295
    7. ' z' → logprob: -11.37549114227295
    8. ' ' → logprob: -11.50049114227295
    9. '   ' → logprob: -12.00049114227295
    10. ')+' → logprob: -12.12549114227295

Token 95: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09111178666353226
    2. 'len' → logprob: -3.466111898422241
    3. 'JJ' → logprob: -3.966111898422241
    4. ' ' → logprob: -4.091111660003662
    5. '2' → logprob: -5.091111660003662
    6. '0' → logprob: -5.841111660003662
    7. '(len' → logprob: -6.341111660003662
    8. ' len' → logprob: -6.466111660003662
    9. ' JJ' → logprob: -6.591111660003662
    10. '3' → logprob: -7.216111660003662

Token 96: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4695642590522766
    2. 'and' → logprob: -2.719564199447632
    3. ' and' → logprob: -2.719564199447632
    4. ')>=' → logprob: -2.719564199447632
    5. ' in' → logprob: -2.844564199447632
    6. '>=' → logprob: -3.219564199447632
    7. 'in' → logprob: -3.719564199447632
    8. ' >=' → logprob: -4.094564437866211
    9. ' ' → logprob: -4.344564437866211
    10. '<|end|>' → logprob: -5.094564437866211

Token 97: ' AN' (ID: 3473)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 98: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.9266199160483666e-05
    2. '=' → logprob: -12.937519073486328
    3. '(S' → logprob: -13.312519073486328
    4. '=S' → logprob: -13.437519073486328
    5. ' S' → logprob: -13.750019073486328
    6. 'SZ' → logprob: -13.812519073486328
    7. 'SOR' → logprob: -14.187519073486328
    8. 'Sz' → logprob: -14.187519073486328
    9. '```' → logprob: -14.250019073486328
    10. ' =' → logprob: -14.375019073486328

Token 99: '|' (ID: 91)
  Prédit: '.add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.029371460899710655
    2. '.' → logprob: -3.654371500015259
    3. '.update' → logprob: -6.15437126159668
    4. 'add' → logprob: -7.65437126159668
    5. '|' → logprob: -8.27937126159668
    6. ' .' → logprob: -8.77937126159668
    7. ' |=' → logprob: -10.52937126159668
    8. '.union' → logprob: -11.90437126159668
    9. 'update' → logprob: -12.02937126159668
    10. '.dis' → logprob: -12.27937126159668

Token 100: '={' (ID: 1693)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1456018090248108
    2. '={' → logprob: -2.020601749420166
    3. '=set' → logprob: -6.145601749420166
    4. '{' → logprob: -7.895601749420166
    5. '={(' → logprob: -8.145602226257324
    6. '={"' → logprob: -9.895602226257324
    7. '={
' → logprob: -10.895602226257324
    8. '={'' → logprob: -11.145602226257324
    9. '={{' → logprob: -12.270602226257324
    10. ' ={' → logprob: -12.520602226257324

Token 101: 'JJ' (ID: 97143)
  Prédit: 'JJ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'JJ' → logprob: -0.012229072861373425
    2. ' JJ' → logprob: -4.512228965759277
    3. 'jj' → logprob: -7.512228965759277
    4. 'C' → logprob: -9.012228965759277
    5. ' ' → logprob: -9.262228965759277
    6. 'J' → logprob: -9.512228965759277
    7. '""' → logprob: -9.637228965759277
    8. '(J' → logprob: -9.887228965759277
    9. '   ' → logprob: -10.012228965759277
    10. '''' → logprob: -10.262228965759277

Token 102: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.0004715450922958553
    2. '}' → logprob: -8.000471115112305
    3. '+' → logprob: -9.500471115112305
    4. '})' → logprob: -10.875471115112305
    5. ' +' → logprob: -11.250471115112305
    6. ',' → logprob: -12.625471115112305
    7. '+C' → logprob: -12.625471115112305
    8. '}+' → logprob: -13.250471115112305
    9. ' }' → logprob: -13.375471115112305
    10. 'zz' → logprob: -13.375471115112305

Token 103: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.09034263342618942
    2. '}
' → logprob: -2.4653425216674805
    3. '}
' → logprob: -7.5903425216674805
    4. ' }' → logprob: -7.8403425216674805
    5. '};' → logprob: -9.09034252166748
    6. '}

' → logprob: -9.34034252166748
    7. ',' → logprob: -9.34034252166748
    8. '       ' → logprob: -9.59034252166748
    9. ' }
' → logprob: -9.84034252166748
    10. '}else' → logprob: -10.84034252166748

Token 104: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 105: ' else' (ID: 1203)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5533227920532227
    2. 'ANS' → logprob: -1.1783227920532227
    3. 'if' → logprob: -2.5533227920532227
    4. '   ' → logprob: -3.8033227920532227
    5. 'else' (adapté à ' else') → logprob: -5.928322792053223
    6. ' AN' → logprob: -6.053322792053223
    7. '       ' → logprob: -6.053322792053223
    8. 'A' → logprob: -6.053322792053223
    9. ' A' → logprob: -6.053322792053223
    10. ' else' → logprob: -6.553322792053223

Token 106: ':' (ID: 25)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3797469437122345
    2. '           ' → logprob: -1.754746913909912
    3. ' AN' → logprob: -2.129746913909912
    4. 'if' → logprob: -4.629746913909912
    5. '       ' → logprob: -5.754746913909912
    6. '   ' → logprob: -6.004746913909912
    7. ' JJ' → logprob: -6.254746913909912
    8. '        ' → logprob: -6.629746913909912
    9. 'ANS' → logprob: -6.754746913909912
    10. ' ' → logprob: -7.129746913909912

Token 107: '  ' (ID: 256)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.818606972694397
    2. ' AN' → logprob: -1.193606972694397
    3. '           ' → logprob: -2.4436068534851074
    4. '   ' → logprob: -2.6936068534851074
    5. '       ' → logprob: -3.1936068534851074
    6. 'if' → logprob: -3.5686068534851074
    7. 'ANS' → logprob: -3.6936068534851074
    8. ' for' → logprob: -6.318606853485107
    9. ' pass' → logprob: -6.943606853485107
    10. 'AN' → logprob: -7.693606853485107

Token 108: ' AA' (ID: 44568)
  Prédit: 'ANS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ANS' → logprob: -1.5203144550323486
    2. '           ' → logprob: -1.6453144550323486
    3. 'if' → logprob: -2.0203144550323486
    4. ' if' → logprob: -2.1453144550323486
    5. '       ' → logprob: -2.2703144550323486
    6. ' AN' → logprob: -2.2703144550323486
    7. '   ' → logprob: -2.3953144550323486
    8. '        ' → logprob: -5.1453142166137695
    9. 'JJ' → logprob: -5.2703142166137695
    10. 'AA' (adapté à ' AA') → logprob: -5.5203142166137695

Token 109: '|' (ID: 91)
  Prédit: '|'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.007144648116081953
    2. ' |=' → logprob: -5.257144451141357
    3. '.add' → logprob: -6.382144451141357
    4. '=' → logprob: -9.382144927978516
    5. '.update' → logprob: -9.632144927978516
    6. '|=
' → logprob: -10.132144927978516
    7. '.remove' → logprob: -12.007144927978516
    8. '-=' → logprob: -12.257144927978516
    9. '.dis' → logprob: -12.632144927978516
    10. '.' → logprob: -13.007144927978516

Token 110: '={' (ID: 1693)
  Prédit: '={'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '={' → logprob: -0.08375470340251923
    2. '=' → logprob: -2.583754777908325
    3. '{' → logprob: -5.583754539489746
    4. '={(' → logprob: -7.208754539489746
    5. '=set' → logprob: -8.833754539489746
    6. 'inc' → logprob: -9.583754539489746
    7. '={"' → logprob: -10.583754539489746
    8. '={
' → logprob: -10.583754539489746
    9. '={'' → logprob: -10.833754539489746
    10. '=(' → logprob: -10.958754539489746

Token 111: 'JJ' (ID: 97143)
  Prédit: 'JJ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'JJ' → logprob: -0.005224509630352259
    2. ' JJ' → logprob: -5.505224704742432
    3. 'jj' → logprob: -7.005224704742432
    4. 'J' → logprob: -9.380224227905273
    5. '   ' → logprob: -9.880224227905273
    6. '       ' → logprob: -10.880224227905273
    7. ' jj' → logprob: -11.005224227905273
    8. '           ' → logprob: -11.130224227905273
    9. ' ' → logprob: -11.130224227905273
    10. '  ' → logprob: -12.505224227905273

Token 112: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -8.482821431243792e-05
    2. '+' → logprob: -10.12508487701416
    3. ' +' → logprob: -10.62508487701416
    4. '+C' → logprob: -12.25008487701416
    5. '+c' → logprob: -12.87508487701416
    6. ' z' → logprob: -12.87508487701416
    7. 'zz' → logprob: -13.00008487701416
    8. '   ' → logprob: -13.37508487701416
    9. '+j' → logprob: -13.75008487701416
    10. '       ' → logprob: -14.87508487701416

Token 113: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.03695261478424072
    2. '}
' → logprob: -3.411952495574951
    3. '   ' → logprob: -6.286952495574951
    4. '       ' → logprob: -6.786952495574951
    5. ' }' → logprob: -8.91195297241211
    6. '}
' → logprob: -9.78695297241211
    7. '}}' → logprob: -10.66195297241211
    8. ',' → logprob: -11.16195297241211
    9. ' }
' → logprob: -11.28695297241211
    10. '}

' → logprob: -11.28695297241211

Token 114: '   ' (ID: 271)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.44061481952667236
    2. '   ' → logprob: -1.4406148195266724
    3. ' A' → logprob: -2.815614700317383
    4. '<|end|>' → logprob: -3.315614700317383
    5. ' ' → logprob: -4.190614700317383
    6. ')' → logprob: -5.815614700317383
    7. '  ' → logprob: -6.815614700317383
    8. '    ' → logprob: -7.190614700317383
    9. '    
' → logprob: -7.690614700317383
    10. ',' → logprob: -8.315614700317383

Token 115: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.0021478813141584396
    2. ' A' → logprob: -6.252147674560547
    3. '   ' → logprob: -8.502147674560547
    4. ' ' → logprob: -12.002147674560547
    5. ')' → logprob: -13.377147674560547
    6. 'a' → logprob: -13.877147674560547
    7. '    
' → logprob: -14.002147674560547
    8. '  ' → logprob: -14.502147674560547
    9. ',' → logprob: -14.627147674560547
    10. '_A' → logprob: -14.627147674560547

Token 116: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0031881670001894236
    2. ' =' → logprob: -5.753188133239746
    3. '=A' → logprob: -11.503188133239746
    4. '|' → logprob: -16.503189086914062
    5. '=}' → logprob: -16.503189086914062
    6. ' |=' → logprob: -16.628189086914062
    7. '=

' → logprob: -16.753189086914062
    8. '＝' → logprob: -17.378189086914062
    9. ',' → logprob: -17.503189086914062
    10. '.=' → logprob: -17.628189086914062

Token 117: 'AA' (ID: 8857)
  Prédit: 'AA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AA' → logprob: -0.007703633978962898
    2. ' AA' → logprob: -4.88270378112793
    3. '{' → logprob: -10.00770378112793
    4. 'A' → logprob: -10.25770378112793
    5. ' ' → logprob: -12.38270378112793
    6. 'aa' → logprob: -12.63270378112793
    7. 'set' → logprob: -13.13270378112793
    8. '   ' → logprob: -13.13270378112793
    9. 'inc' → logprob: -13.13270378112793
    10. 'AAA' → logprob: -14.25770378112793

Token 118: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 119: ' len' (ID: 4631)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.20239314436912537
    2. 'len' → logprob: -2.202393054962158
    3. ' C' → logprob: -3.702393054962158
    4. 'not' → logprob: -5.077393054962158
    5. ' not' → logprob: -5.327393054962158
    6. 'True' → logprob: -5.327393054962158
    7. 'JJ' → logprob: -5.327393054962158
    8. ' len' → logprob: -5.827393054962158
    9. 'A' → logprob: -5.952393054962158
    10. 'ss' → logprob: -6.077393054962158

Token 120: '(A' (ID: 10706)
  Prédit: '(J'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(J' → logprob: -1.075442910194397
    2. '(C' → logprob: -1.200442910194397
    3. '(' → logprob: -1.825442910194397
    4. '(A' → logprob: -1.950442910194397
    5. '(ss' → logprob: -2.9504427909851074
    6. '(s' → logprob: -6.700442790985107
    7. 'A' → logprob: -9.200443267822266
    8. '(CC' → logprob: -9.200443267822266
    9. 'ss' → logprob: -9.325443267822266
    10. 'C' → logprob: -9.700443267822266

Token 121: ')!=' (ID: 86517)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4791296124458313
    2. ')<' → logprob: -1.3541295528411865
    3. ')>' → logprob: -2.7291295528411865
    4. ')!=' → logprob: -3.4791295528411865
    5. ')==' → logprob: -4.104129791259766
    6. ')+' → logprob: -6.104129791259766
    7. ' )' → logprob: -6.479129791259766
    8. ')<=' → logprob: -6.979129791259766
    9. ')>=' → logprob: -6.979129791259766
    10. '<len' → logprob: -7.104129791259766

Token 122: '-' (ID: 12)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.1519884616136551
    2. '0' → logprob: -2.1519885063171387
    3. '1' → logprob: -4.276988506317139
    4. ' len' → logprob: -5.276988506317139
    5. ' ' → logprob: -5.776988506317139
    6. 'inc' → logprob: -6.526988506317139
    7. '2' → logprob: -8.52698802947998
    8. '   ' → logprob: -8.77698802947998
    9. '(len' → logprob: -8.77698802947998
    10. '{' → logprob: -8.77698802947998

Token 123: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0157479047775269
    2. '1' → logprob: -1.0157479047775269
    3. 'len' → logprob: -1.5157479047775269
    4. ' ' → logprob: -3.3907480239868164
    5. ' len' → logprob: -4.765748023986816
    6. '-' → logprob: -5.515748023986816
    7. '(len' → logprob: -5.640748023986816
    8. '2' → logprob: -5.765748023986816
    9. '   ' → logprob: -7.265748023986816
    10. '(' → logprob: -7.265748023986816

Token 124: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.7051358222961426
    2. 'else' → logprob: -0.7051358222961426
    3. '<|end|>' → logprob: -4.455135822296143
    4. ' ' → logprob: -9.455135345458984
    5. '+' → logprob: -9.830135345458984
    6. '	else' → logprob: -9.955135345458984
    7. '<|end|>' → logprob: -10.080135345458984
    8. '
' → logprob: -10.455135345458984
    9. '_else' → logprob: -11.330135345458984
    10. '   ' → logprob: -12.580135345458984

Token 125: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6352294087409973
    2. 'set' → logprob: -1.0102293491363525
    3. '{}' → logprob: -3.5102293491363525
    4. 'ANS' → logprob: -3.7602293491363525
    5. ' set' → logprob: -3.8852293491363525
    6. ' A' → logprob: -4.135229587554932
    7. '{' → logprob: -5.885229587554932
    8. 'AA' → logprob: -6.260229587554932
    9. 'AN' → logprob: -6.260229587554932
    10. '_' → logprob: -6.385229587554932

Token 126: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 127: ' just' (ID: 1327)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 128: ' a' (ID: 261)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.8024827837944031
    2. 'continue' → logprob: -1.5524828433990479
    3. '...' → logprob: -2.052482843399048
    4. ' A' → logprob: -2.552482843399048
    5. '_' → logprob: -4.177482604980469
    6. ' ' → logprob: -4.177482604980469
    7. '=' → logprob: -4.427482604980469
    8. ' continue' → logprob: -4.427482604980469
    9. 'not' → logprob: -4.552482604980469
    10. 'None' → logprob: -4.552482604980469

Token 129: ' weird' (ID: 28783)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.9034788608551025
    2. 'no' → logprob: -1.0284788608551025
    3. 'noop' → logprob: -2.4034788608551025
    4. 'continue' → logprob: -2.6534788608551025
    5. 'continu' → logprob: -3.9034788608551025
    6. 'placeholder' → logprob: -4.153478622436523
    7. ' no' → logprob: -4.528478622436523
    8. '_' → logprob: -4.903478622436523
    9. 'break' → logprob: -5.403478622436523
    10. ' pass' → logprob: -6.403478622436523

Token 130: ' paranoia' (ID: 178226)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.9509842991828918
    2. 'no' → logprob: -1.450984239578247
    3. ' no' → logprob: -1.950984239578247
    4. 'noop' → logprob: -2.700984239578247
    5. 'line' → logprob: -3.325984239578247
    6. ' trick' → logprob: -3.575984239578247
    7. 'increment' → logprob: -4.450984477996826
    8. 'placeholder' → logprob: -4.450984477996826
    9. 'continue' → logprob: -4.700984477996826
    10. ' line' → logprob: -4.825984477996826

Token 131: ' clause' (ID: 45470)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 132: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 133: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 134: '((' (ID: 2054)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.05340428277850151
    2. '(' → logprob: -3.0534043312072754
    3. '('' → logprob: -6.053404331207275
    4. '(max' → logprob: -6.928404331207275
    5. '(sum' → logprob: -7.553404331207275
    6. 'len' → logprob: -8.553403854370117
    7. '(min' → logprob: -8.803403854370117
    8. '()' → logprob: -8.803403854370117
    9. '("' → logprob: -9.053403854370117
    10. '(*' → logprob: -9.178403854370117

Token 135: 'lambda' (ID: 35280)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.2849918007850647
    2. 'max' → logprob: -1.65999174118042
    3. ' len' → logprob: -3.53499174118042
    4. ' max' → logprob: -4.03499174118042
    5. 'min' → logprob: -5.03499174118042
    6. 'sum' → logprob: -6.90999174118042
    7. 'ANS' → logprob: -7.28499174118042
    8. ' min' → logprob: -7.90999174118042
    9. '(len' → logprob: -7.90999174118042
    10. ''' → logprob: -8.034992218017578

Token 136: ' Q' (ID: 1486)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.9653846621513367
    2. ' x' → logprob: -0.9653846621513367
    3. 'x' → logprob: -2.2153847217559814
    4. 's' → logprob: -2.5903847217559814
    5. ' AN' → logprob: -3.7153847217559814
    6. ' ans' → logprob: -5.465384483337402
    7. 'ANS' → logprob: -5.840384483337402
    8. ' max' → logprob: -5.965384483337402
    9. ':' → logprob: -6.090384483337402
    10. ' l' → logprob: -6.215384483337402

Token 137: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31404241919517517
    2. 'x' → logprob: -3.064042329788208
    3. 'Q' → logprob: -3.314042329788208
    4. ':max' → logprob: -3.689042329788208
    5. 'max' → logprob: -4.064042568206787
    6. '(Q' → logprob: -4.189042568206787
    7. ' :' → logprob: -4.439042568206787
    8. '(x' → logprob: -4.439042568206787
    9. ':x' → logprob: -4.814042568206787
    10. 's' → logprob: -4.814042568206787

Token 138: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.9504812359809875
    2. 'max' → logprob: -1.3254811763763428
    3. 'len' → logprob: -1.7004811763763428
    4. ' Q' → logprob: -2.5754811763763428
    5. ' max' → logprob: -3.3254811763763428
    6. 'sum' → logprob: -4.575481414794922
    7. ' len' → logprob: -4.825481414794922
    8. '''.' → logprob: -4.950481414794922
    9. 'min' → logprob: -5.450481414794922
    10. 'sorted' → logprob: -5.950481414794922

Token 139: ')(' (ID: 4898)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.7830680012702942
    2. '(len' → logprob: -1.4080679416656494
    3. '(Q' → logprob: -1.5330679416656494
    4. '(' → logprob: -3.5330679416656494
    5. '(sorted' → logprob: -4.7830681800842285
    6. '({' → logprob: -4.9080681800842285
    7. 'max' → logprob: -4.9080681800842285
    8. '([' → logprob: -5.4080681800842285
    9. '(sum' → logprob: -6.0330681800842285
    10. '((' → logprob: -6.2830681800842285

Token 140: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.45617544651031494
    2. 'max' → logprob: -1.206175446510315
    3. 'ANS' → logprob: -3.2061753273010254
    4. ' max' → logprob: -4.581175327301025
    5. ' len' → logprob: -4.581175327301025
    6. 'ans' → logprob: -6.706175327301025
    7. 'str' → logprob: -7.081175327301025
    8. '(len' → logprob: -7.206175327301025
    9. 'min' → logprob: -7.456175327301025
    10. 'sum' → logprob: -7.581175327301025

Token 141: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.513339445111342e-05
    2. 'ANS' → logprob: -10.375044822692871
    3. '((' → logprob: -12.125044822692871
    4. '(A' → logprob: -12.625044822692871
    5. ' (' → logprob: -13.000044822692871
    6. '(
' → logprob: -13.875044822692871
    7. '(ans' → logprob: -14.125044822692871
    8. ')' → logprob: -15.500044822692871
    9. '(

' → logprob: -15.750044822692871
    10. '{' → logprob: -15.875044822692871

Token 142: 'ANS' (ID: 18850)
  Prédit: 'ANS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ANS' → logprob: -0.00044318195432424545
    2. '(' → logprob: -8.125443458557129
    3. ' AN' → logprob: -9.250443458557129
    4. 'AN' → logprob: -10.125443458557129
    5. 'A' → logprob: -12.375443458557129
    6. 'ans' → logprob: -13.375443458557129
    7. 'ANSWER' → logprob: -13.500443458557129
    8. '{' → logprob: -14.250443458557129
    9. 'ANN' → logprob: -14.500443458557129
    10. ' ' → logprob: -15.000443458557129

Token 143: ')))' (ID: 15975)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.003547924105077982
    2. ')))' → logprob: -5.7535481452941895
    3. ')' → logprob: -8.003547668457031
    4. '()))' → logprob: -11.003547668457031
    5. '))
' → logprob: -11.628547668457031
    6. ')+' → logprob: -13.378547668457031
    7. '))))' → logprob: -13.503547668457031
    8. '+' → logprob: -13.878547668457031
    9. '),' → logprob: -14.003547668457031
    10. ' ))' → logprob: -14.378547668457031


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 141
Tokens correctement prédits (1ère position, stricte): 36
Tokens correctement prédits (1ère position, avec adaptation): 37
Tokens correctement prédits (top 10): 83
Précision stricte (1ère position): 25.53%
Précision adaptée (1ère position): 26.24%
Précision (top 10): 58.87%
================================================================================
