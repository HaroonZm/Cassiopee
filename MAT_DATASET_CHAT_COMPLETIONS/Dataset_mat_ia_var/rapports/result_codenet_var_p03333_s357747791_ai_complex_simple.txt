================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:18
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from itertools import cycle, count, chain, repeat
from operator import itemgetter

N = int(input())
Sec = [tuple(map(int, input().split())) for _ in repeat(None, N)]
indices = list(range(N))
Left1 = sorted(((l, i) for i, (l, r) in enumerate(Sec)), key=itemgetter(0))
Right1 = sorted(((r, i) for i, (l, r) in enumerate(Sec)), key=itemgetter(0), reverse=True)
Left2 = Left1[:]
Right2 = Right1[:]

def process(seqA, seqB, init_flagA, init_flagB):
    sts = [False] * N
    pos = [0]
    pointerA, pointerB = [len(seqA)], [len(seqB)]
    indicesA = list(range(len(seqA)))
    indicesB = list(range(len(seqB)))
    flagA, flagB = [init_flagA], [init_flagB]
    val = [0]
    def pop_top(sq, p): sq.pop(); p[0] -= 1
    switch = cycle([0,1])
    idA, idB = len(seqA)-1, len(seqB)-1
    while seqA or seqB:
        s = next(switch)
        # Elegant iterator+logic contortion
        if (s and len(seqB)==0) or (not s and len(seqA)==0):
            pass
        elif (not s):
            while True:
                if not seqA:break
                l,i = seqA[-1]
                if sts[i]: pop_top(seqA, pointerA); continue
                if pos[0] < l:
                    val[0] += l - pos[0]; pos[0]=l; sts[i]=1; pop_top(seqA, pointerA); flagA[0]=0
                elif flagA[0]==1:
                    pop_top(seqA,pointerA); flagA[0]=0
                else:
                    flagA[0]=1
                break
        elif s:
            while True:
                if not seqB:break
                r,i = seqB[-1]
                if sts[i]: pop_top(seqB, pointerB); continue
                if r < pos[0]:
                    val[0] += pos[0] - r; pos[0]=r; sts[i]=1; pop_top(seqB, pointerB); flagB[0]=0
                elif flagB[0]==1:
                    pop_top(seqB,pointerB); flagB[0]=0
                else:
                    flagB[0]=1
                break
    return val[0]+abs(pos[0])

ans1 = process(Left1[:], Right1[:], 0, 0)
ans2 = process(Right2[:], Left2[:], 9, 0)
print(max(ans1, ans2))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.4987759292125702
    2. 'partial' → logprob: -1.2487759590148926
    3. 'reduce' → logprob: -2.4987759590148926
    4. ' wraps' → logprob: -3.9987759590148926
    5. 'l' → logprob: -5.748775959014893
    6. ' partial' → logprob: -7.248775959014893
    7. 'cached' → logprob: -7.623775959014893
    8. 'cache' → logprob: -7.623775959014893
    9. 'cmp' → logprob: -8.748775482177734
    10. ' reduce' → logprob: -9.373775482177734

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010317044332623482
    2. '(lambda' → logprob: -4.760316848754883
    3. ' (' → logprob: -7.385316848754883
    4. ',' → logprob: -7.885316848754883
    5. 'def' → logprob: -8.135316848754883
    6. '.' → logprob: -8.635316848754883
    7. '```' → logprob: -10.135316848754883
    8. '(
' → logprob: -10.385316848754883
    9. 'lambda' → logprob: -10.635316848754883
    10. ' ' → logprob: -10.760316848754883

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014403714798390865
    2. '(
' → logprob: -5.139403820037842
    3. '(lambda' → logprob: -5.389403820037842
    4. 'def' → logprob: -6.639403820037842
    5. ',' → logprob: -7.139403820037842
    6. '\' → logprob: -8.139403343200684
    7. ' ' → logprob: -8.264403343200684
    8. ' (' → logprob: -8.389403343200684
    9. '
' → logprob: -9.139403343200684
    10. '' → logprob: -9.139403343200684

Token 6: ' itertools' (ID: 103178)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.9289020299911499
    2. ' operator' → logprob: -1.42890202999115
    3. ' itertools' → logprob: -1.55390202999115
    4. ' collections' → logprob: -1.92890202999115
    5. ' os' → logprob: -4.9289021492004395
    6. 'operator' → logprob: -7.4289021492004395
    7. ' sys' → logprob: -8.553901672363281
    8. ' typing' → logprob: -8.553901672363281
    9. 'collections' → logprob: -8.928901672363281
    10. 'math' → logprob: -9.053901672363281

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.6127365827560425
    2. 'import' → logprob: -0.8627365827560425
    3. '.' → logprob: -3.362736701965332
    4. '.import' → logprob: -6.737736701965332
    5. ' .' → logprob: -9.362736701965332
    6. '	import' → logprob: -9.737736701965332
    7. '.im' → logprob: -10.112736701965332
    8. '_import' → logprob: -10.487736701965332
    9. ' ' → logprob: -10.487736701965332
    10. '<|end|>' → logprob: -11.487736701965332

Token 8: ' cycle' (ID: 15839)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -1.0864453315734863
    2. 'count' → logprob: -1.0864453315734863
    3. 'acc' → logprob: -2.3364453315734863
    4. 'cycle' → logprob: -2.7114453315734863
    5. ' group' → logprob: -2.8364453315734863
    6. 'chain' → logprob: -2.9614453315734863
    7. 'com' → logprob: -4.211445331573486
    8. ' cycle' → logprob: -4.836445331573486
    9. 'product' → logprob: -4.961445331573486
    10. ' chain' → logprob: -5.211445331573486

Token 9: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5095475316047668
    2. '\' → logprob: -1.884547472000122
    3. ',' → logprob: -2.884547472000122
    4. '\n' → logprob: -3.134547472000122
    5. '(
' → logprob: -3.384547472000122
    6. 'for' → logprob: -3.384547472000122
    7. '.' → logprob: -3.634547472000122
    8. 'def' → logprob: -4.009547710418701
    9. ')' → logprob: -4.759547710418701
    10. '#' → logprob: -5.384547710418701

Token 10: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.16983099281787872
    2. 'is' → logprob: -2.0448310375213623
    3. 'chain' → logprob: -4.919830799102783
    4. 'drop' → logprob: -5.544830799102783
    5. ' count' → logprob: -5.794830799102783
    6. 'acc' → logprob: -6.169830799102783
    7. 'group' → logprob: -6.169830799102783
    8. ' is' → logprob: -6.169830799102783
    9. 'com' → logprob: -6.794830799102783
    10. 'product' → logprob: -6.794830799102783

Token 11: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04492701217532158
    2. '(
' → logprob: -3.2949271202087402
    3. '\' → logprob: -6.16992712020874
    4. ',' → logprob: -6.54492712020874
    5. '\n' → logprob: -6.66992712020874
    6. 'def' → logprob: -7.66992712020874
    7. 'for' → logprob: -8.169926643371582
    8. '#' → logprob: -8.169926643371582
    9. '(

' → logprob: -8.669926643371582
    10. '\(' → logprob: -8.794926643371582

Token 12: ' chain' (ID: 13464)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.46390265226364136
    2. 'is' → logprob: -2.838902711868286
    3. ' accumulate' → logprob: -2.838902711868286
    4. 'acc' → logprob: -3.213902711868286
    5. ' chain' → logprob: -3.588902711868286
    6. ' group' → logprob: -3.588902711868286
    7. ' drop' → logprob: -3.838902711868286
    8. 'take' → logprob: -3.963902711868286
    9. ' take' → logprob: -3.963902711868286
    10. 'group' → logprob: -4.213902473449707

Token 13: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5339909195899963
    2. ',' → logprob: -2.1589908599853516
    3. 'def' → logprob: -2.7839908599853516
    4. '(
' → logprob: -3.0339908599853516
    5. '\' → logprob: -3.1589908599853516
    6. '#' → logprob: -3.6589908599853516
    7. '```' → logprob: -3.9089908599853516
    8. '\n' → logprob: -4.033990859985352
    9. '`' → logprob: -4.408990859985352
    10. 'for' → logprob: -4.533990859985352

Token 14: ' repeat' (ID: 22962)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -1.4687391519546509
    2. ' is' → logprob: -1.9687391519546509
    3. 'com' → logprob: -2.2187390327453613
    4. 'compress' → logprob: -2.2187390327453613
    5. 'acc' → logprob: -2.4687390327453613
    6. 'group' → logprob: -2.7187390327453613
    7. 'filter' → logprob: -2.8437390327453613
    8. 'product' → logprob: -3.0937390327453613
    9. 'repeat' → logprob: -3.5937390327453613
    10. 'drop' → logprob: -3.8437390327453613

Token 15: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.39783352613449097
    2. ',' → logprob: -2.0228335857391357
    3. '\' → logprob: -2.6478335857391357
    4. '\n' → logprob: -3.6478335857391357
    5. '.' → logprob: -3.7728335857391357
    6. '(
' → logprob: -4.022833347320557
    7. '```' → logprob: -4.397833347320557
    8. '#' → logprob: -4.397833347320557
    9. 'def' → logprob: -4.772833347320557
    10. '`' → logprob: -5.272833347320557

Token 16: 'from' (ID: 2845)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.8343838453292847
    2. '\n' → logprob: -2.084383964538574
    3. 'a' → logprob: -2.459383964538574
    4. ',' → logprob: -2.459383964538574
    5. '(' → logprob: -2.584383964538574
    6. '
' → logprob: -2.709383964538574
    7. 'for' → logprob: -2.709383964538574
    8. '#' → logprob: -2.709383964538574
    9. '\' → logprob: -2.834383964538574
    10. 'd' → logprob: -3.084383964538574

Token 17: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.443541020154953
    2. 'operator' → logprob: -1.1935410499572754
    3. ' math' → logprob: -3.8185410499572754
    4. 'math' → logprob: -3.9435410499572754
    5. 'collections' → logprob: -5.068541049957275
    6. ' collections' → logprob: -5.568541049957275
    7. 'os' → logprob: -7.193541049957275
    8. ' os' → logprob: -7.318541049957275
    9. ' random' → logprob: -7.443541049957275
    10. ' ' → logprob: -7.568541049957275

Token 18: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.12147015333175659
    2. 'import' → logprob: -2.2464702129364014
    3. '.' → logprob: -4.871469974517822
    4. ' ' → logprob: -7.746469974517822
    5. ' .' → logprob: -7.996469974517822
    6. '<|end|>' → logprob: -8.99647045135498
    7. ' as' → logprob: -11.37147045135498
    8. ',' → logprob: -11.62147045135498
    9. ' ,' → logprob: -11.74647045135498
    10. '	import' → logprob: -12.24647045135498

Token 19: ' item' (ID: 2169)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.122158482670784
    2. ' ' → logprob: -3.2471585273742676
    3. ' item' → logprob: -3.3721585273742676
    4. ' mul' → logprob: -3.8721585273742676
    5. ' import' → logprob: -4.872158527374268
    6. 'add' → logprob: -5.497158527374268
    7. ' icon' → logprob: -5.997158527374268
    8. ' is' → logprob: -7.122158527374268
    9. ' method' → logprob: -7.497158527374268
    10. ' i' → logprob: -7.497158527374268

Token 20: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -0.0012664210516959429
    2. 'get' → logprob: -6.7512664794921875
    3. 'getitem' → logprob: -9.376266479492188
    4. 'gett' → logprob: -12.126266479492188
    5. 's' → logprob: -12.876266479492188
    6. 'g' → logprob: -13.626266479492188
    7. 'got' → logprob: -15.001266479492188
    8. '_get' → logprob: -15.126266479492188
    9. 'attr' → logprob: -15.251266479492188
    10. 'item' → logprob: -15.501266479492188

Token 21: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06668869405984879
    2. ',' → logprob: -3.5666887760162354
    3. '(
' → logprob: -3.6916887760162354
    4. '\' → logprob: -5.441688537597656
    5. '.' → logprob: -5.566688537597656
    6. ',
' → logprob: -8.191688537597656
    7. '\(' → logprob: -8.191688537597656
    8. '#' → logprob: -8.191688537597656
    9. '(

' → logprob: -8.191688537597656
    10. '\n' → logprob: -8.316688537597656

Token 22: 'N' (ID: 45)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7799420356750488
    2. '#' → logprob: -1.4049420356750488
    3. 'def' → logprob: -1.5299420356750488
    4. 'f' → logprob: -4.029942035675049
    5. '(' → logprob: -4.404942035675049
    6. '=' → logprob: -5.154942035675049
    7. 'for' → logprob: -5.404942035675049
    8. '_' → logprob: -5.654942035675049
    9. '```' → logprob: -5.654942035675049
    10. ',' → logprob: -5.779942035675049

Token 23: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.22116248309612274
    2. '=' → logprob: -1.9711624383926392
    3. ' =' → logprob: -2.9711625576019287
    4. ',' → logprob: -5.47116231918335
    5. ')' → logprob: -8.096162796020508
    6. 'E' → logprob: -8.221162796020508
    7. 'AMES' → logprob: -8.221162796020508
    8. '>' → logprob: -8.346162796020508
    9. '_=' → logprob: -8.471162796020508
    10. 'um' → logprob: -8.596162796020508

Token 24: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07517021149396896
    2. '10' → logprob: -2.7001702785491943
    3. '100' → logprob: -5.450170040130615
    4. '5' → logprob: -7.950170040130615
    5. '1' → logprob: -8.575170516967773
    6. '0' → logprob: -8.825170516967773
    7. '20' → logprob: -9.575170516967773
    8. '50' → logprob: -9.950170516967773
    9. '3' → logprob: -10.450170516967773
    10. '  ' → logprob: -11.200170516967773

Token 25: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009955235756933689
    2. '('' → logprob: -4.759955406188965
    3. '(input' → logprob: -7.134955406188965
    4. '("("' → logprob: -8.509955406188965
    5. '(N' → logprob: -9.009955406188965
    6. '()' → logprob: -10.134955406188965
    7. '(`' → logprob: -10.384955406188965
    8. ''' → logprob: -10.509955406188965
    9. '```' → logprob: -11.134955406188965
    10. '`' → logprob: -11.134955406188965

Token 26: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06385588645935059
    2. '()' → logprob: -3.0638558864593506
    3. '('' → logprob: -4.81385612487793
    4. '())' → logprob: -5.68885612487793
    5. ')' → logprob: -5.93885612487793
    6. '(
' → logprob: -7.93885612487793
    7. '("("' → logprob: -8.18885612487793
    8. '(()' → logprob: -8.81385612487793
    9. '(

' → logprob: -9.81385612487793
    10. '(""))' → logprob: -10.31385612487793

Token 27: 'Sec' (ID: 22768)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.516963541507721
    2. 'a' → logprob: -2.016963481903076
    3. 'lst' → logprob: -2.391963481903076
    4. 'arr' → logprob: -2.766963481903076
    5. 'for' → logprob: -3.641963481903076
    6. ')' → logprob: -4.141963481903076
    7. 'array' → logprob: -4.266963481903076
    8. 'result' → logprob: -4.516963481903076
    9. 'numbers' → logprob: -4.641963481903076
    10. 'items' → logprob: -5.016963481903076

Token 28: ' =' (ID: 314)
  Prédit: 'ond'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ond' → logprob: -1.116736650466919
    2. 'onds' → logprob: -1.241736650466919
    3. 'ret' → logprob: -1.491736650466919
    4. 'rets' → logprob: -2.616736650466919
    5. 't' → logprob: -3.366736650466919
    6. 'tion' → logprob: -3.991736650466919
    7. 'on' → logprob: -4.36673641204834
    8. 'ure' → logprob: -5.11673641204834
    9. 'tor' → logprob: -6.49173641204834
    10. 'ons' → logprob: -6.86673641204834

Token 29: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.9318919777870178
    2. 'input' → logprob: -1.431891918182373
    3. '[input' → logprob: -1.556891918182373
    4. '[int' → logprob: -2.681891918182373
    5. '[]' → logprob: -3.556891918182373
    6. '[' → logprob: -3.556891918182373
    7. '(input' → logprob: -5.181891918182373
    8. ' input' → logprob: -5.431891918182373
    9. '[list' → logprob: -5.556891918182373
    10. ' list' → logprob: -5.556891918182373

Token 30: 'tuple' (ID: 52834)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4296397566795349
    2. 'map' → logprob: -2.4296398162841797
    3. 'list' → logprob: -2.4296398162841797
    4. 'tuple' → logprob: -2.4296398162841797
    5. '*' → logprob: -3.3046398162841797
    6. '(int' → logprob: -3.9296398162841797
    7. 'input' → logprob: -4.17963981628418
    8. '(map' → logprob: -5.92963981628418
    9. 'float' → logprob: -5.92963981628418
    10. '[]' → logprob: -5.92963981628418

Token 31: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00178429891820997
    2. '(input' → logprob: -6.501784324645996
    3. '(int' → logprob: -8.376784324645996
    4. '(' → logprob: -10.126784324645996
    5. 'map' → logprob: -12.376784324645996
    6. '()' → logprob: -13.501784324645996
    7. '(range' → logprob: -14.001784324645996
    8. '([' → logprob: -14.001784324645996
    9. '(i' → logprob: -14.126784324645996
    10. '(sorted' → logprob: -14.126784324645996

Token 32: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00035369666875340044
    2. 'int' → logprob: -8.625353813171387
    3. ',int' → logprob: -10.125353813171387
    4. '<int' → logprob: -10.500353813171387
    5. '(str' → logprob: -10.625353813171387
    6. '[int' → logprob: -10.625353813171387
    7. ')' → logprob: -11.250353813171387
    8. '(' → logprob: -11.250353813171387
    9. '<|end|>' → logprob: -11.625353813171387
    10. '=int' → logprob: -11.750353813171387

Token 33: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.02524900622665882
    2. '(input' → logprob: -4.275249004364014
    3. ',' → logprob: -4.775249004364014
    4. 'input' → logprob: -6.025249004364014
    5. '(' → logprob: -9.150249481201172
    6. ' input' → logprob: -11.025249481201172
    7. '))' → logprob: -11.400249481201172
    8. '=input' → logprob: -11.525249481201172
    9. ' ,' → logprob: -11.775249481201172
    10. ')' → logprob: -11.900249481201172

Token 34: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.004629838280379772
    2. ' input' → logprob: -5.379629611968994
    3. ' ' → logprob: -13.129630088806152
    4. ')' → logprob: -13.254630088806152
    5. '(input' → logprob: -13.754630088806152
    6. '	input' → logprob: -13.879630088806152
    7. '```' → logprob: -14.129630088806152
    8. '   ' → logprob: -14.379630088806152
    9. ',input' → logprob: -14.504630088806152
    10. '
' → logprob: -14.629630088806152

Token 35: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -9.662937372922897e-05
    2. '()' → logprob: -10.375096321105957
    3. '))' → logprob: -10.625096321105957
    4. ')' → logprob: -11.375096321105957
    5. 'split' → logprob: -12.000096321105957
    6. ' ().' → logprob: -12.000096321105957
    7. '()))' → logprob: -12.250096321105957
    8. '.split' → logprob: -12.625096321105957
    9. ' ' → logprob: -13.000096321105957
    10. 'input' → logprob: -13.375096321105957

Token 36: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00036168331280350685
    2. 'strip' → logprob: -8.000361442565918
    3. 'rstrip' → logprob: -11.000361442565918
    4. ' split' → logprob: -11.875361442565918
    5. '(split' → logprob: -13.500361442565918
    6. 'spl' → logprob: -14.250361442565918
    7. 's' → logprob: -15.375361442565918
    8. '.split' → logprob: -15.625361442565918
    9. 'read' → logprob: -17.000362396240234
    10. ' ' → logprob: -17.000362396240234

Token 37: '()))' (ID: 16829)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3906843066215515
    2. '()))' → logprob: -1.1406843662261963
    3. '())' → logprob: -6.765684127807617
    4. '()' → logprob: -6.890684127807617
    5. ')' → logprob: -7.265684127807617
    6. ')))' → logprob: -8.390684127807617
    7. '(' → logprob: -8.765684127807617
    8. '()))
' → logprob: -9.140684127807617
    9. ''))' → logprob: -9.140684127807617
    10. '),' → logprob: -9.390684127807617

Token 38: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0319606214761734
    2. 'for' → logprob: -3.9069607257843018
    3. '()' → logprob: -5.156960487365723
    4. ')]' → logprob: -5.906960487365723
    5. ' for' → logprob: -7.031960487365723
    6. '(' → logprob: -7.281960487365723
    7. '())' → logprob: -7.656960487365723
    8. ']' → logprob: -8.656960487365723
    9. '),' → logprob: -9.031960487365723
    10. '))' → logprob: -9.281960487365723

Token 39: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.022641856223344803
    2. ' range' → logprob: -3.897641897201538
    3. '_range' → logprob: -6.772641658782959
    4. 'range' → logprob: -7.272641658782959
    5. ' _' → logprob: -8.272642135620117
    6. '(range' → logprob: -13.647642135620117
    7. ' ' → logprob: -13.772642135620117
    8. '	range' → logprob: -14.647642135620117
    9. ' i' → logprob: -16.022642135620117
    10. '_RANGE' → logprob: -16.272642135620117

Token 40: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.8612655997276306
    2. 'range' → logprob: -0.9862655997276306
    3. ' in' → logprob: -1.6112656593322754
    4. ' range' → logprob: -5.361265659332275
    5. ' ' → logprob: -10.361265182495117
    6. '_' → logprob: -10.736265182495117
    7. '  ' → logprob: -12.736265182495117
    8. ')' → logprob: -12.736265182495117
    9. '	range' → logprob: -12.861265182495117
    10. 'i' → logprob: -13.111265182495117

Token 41: ' repeat' (ID: 22962)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007125511183403432
    2. ' range' → logprob: -7.2507123947143555
    3. '(range' → logprob: -13.250712394714355
    4. '	range' → logprob: -15.250712394714355
    5. '[' → logprob: -15.375712394714355
    6. 'count' → logprob: -16.500713348388672
    7. ' ' → logprob: -16.500713348388672
    8. 'rang' → logprob: -17.000713348388672
    9. '```' → logprob: -17.000713348388672
    10. 'repeat' → logprob: -17.125713348388672

Token 42: '(None' (ID: 65126)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.19573748111724854
    2. '(None' → logprob: -1.9457374811172485
    3. '(N' → logprob: -3.945737361907959
    4. '(' → logprob: -4.570737361907959
    5. 'range' → logprob: -6.320737361907959
    6. '(_,' → logprob: -6.570737361907959
    7. '(lambda' → logprob: -6.945737361907959
    8. '(int' → logprob: -7.820737361907959
    9. '(n' → logprob: -9.195737838745117
    10. '(_' → logprob: -9.195737838745117

Token 43: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006139949895441532
    2. ',N' → logprob: -5.256139755249023
    3. ' ,' → logprob: -7.256139755249023
    4. '(),' → logprob: -8.756139755249023
    5. ',n' → logprob: -10.631139755249023
    6. '(N' → logprob: -12.131139755249023
    7. 'N' → logprob: -12.381139755249023
    8. ' N' → logprob: -13.006139755249023
    9. ' ' → logprob: -13.381139755249023
    10. ' (),' → logprob: -14.131139755249023

Token 44: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00975868571549654
    2. ' N' → logprob: -4.634758472442627
    3. ' ' → logprob: -13.759758949279785
    4. '	N' → logprob: -14.009758949279785
    5. '(N' → logprob: -14.384758949279785
    6. '_N' → logprob: -16.38475799560547
    7. ',N' → logprob: -16.63475799560547
    8. ')' → logprob: -17.25975799560547
    9. 'n' → logprob: -17.38475799560547
    10. '   ' → logprob: -17.38475799560547

Token 45: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0010748496279120445
    2. ')' → logprob: -6.87607479095459
    3. '))' → logprob: -10.62607479095459
    4. ')])' → logprob: -11.50107479095459
    5. ')],' → logprob: -13.37607479095459
    6. '),' → logprob: -13.75107479095459
    7. ' )' → logprob: -13.87607479095459
    8. ']' → logprob: -13.87607479095459
    9. ')}' → logprob: -14.25107479095459
    10. ')]
' → logprob: -14.37607479095459

Token 46: 'indices' (ID: 30992)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5440930128097534
    2. ')' → logprob: -1.6690930128097534
    3. ']' → logprob: -1.9190930128097534
    4. '#' → logprob: -4.669093132019043
    5. '[' → logprob: -4.669093132019043
    6. '\n' → logprob: -4.919093132019043
    7. 'for' → logprob: -4.919093132019043
    8. 's' → logprob: -5.169093132019043
    9. ':' → logprob: -5.294093132019043
    10. ')
' → logprob: -5.419093132019043

Token 47: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10625570267438889
    2. ' =' → logprob: -2.3562557697296143
    3. '_' → logprob: -6.231255531311035
    4. ',' → logprob: -6.231255531311035
    5. '(' → logprob: -6.606255531311035
    6. '=[]' → logprob: -8.356255531311035
    7. '[' → logprob: -9.231255531311035
    8. ' ' → logprob: -9.356255531311035
    9. '.' → logprob: -9.606255531311035
    10. ')' → logprob: -9.856255531311035

Token 48: ' list' (ID: 1562)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.9349943995475769
    2. 'list' → logprob: -1.1849944591522217
    3. 'chain' → logprob: -1.9349944591522217
    4. '[' → logprob: -3.8099944591522217
    5. '[]' → logprob: -3.8099944591522217
    6. ' list' → logprob: -3.8099944591522217
    7. 'count' → logprob: -4.059994220733643
    8. 'sorted' → logprob: -4.309994220733643
    9. ' range' → logprob: -4.434994220733643
    10. 'cycle' → logprob: -4.559994220733643

Token 49: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.6139602065086365
    2. '(chain' → logprob: -0.9889602065086365
    3. '(' → logprob: -2.7389602661132812
    4. '(map' → logprob: -4.363960266113281
    5. '(item' → logprob: -4.988960266113281
    6. '(filter' → logprob: -7.488960266113281
    7. '(.' → logprob: -7.738960266113281
    8. '(en' → logprob: -7.863960266113281
    9. '```' → logprob: -8.113960266113281
    10. '(indices' → logprob: -8.238960266113281

Token 50: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.014656190760433674
    2. '(len' → logprob: -4.514656066894531
    3. '(' → logprob: -5.639656066894531
    4. '(n' → logprob: -11.014656066894531
    5. '(
' → logprob: -11.389656066894531
    6. 'len' → logprob: -11.889656066894531
    7. ' (' → logprob: -12.639656066894531
    8. ')' → logprob: -12.764656066894531
    9. 'N' → logprob: -12.764656066894531
    10. '(

' → logprob: -14.264656066894531

Token 51: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0007645991281606257
    2. ')' → logprob: -7.2507643699646
    3. ' ))' → logprob: -10.875764846801758
    4. '))
' → logprob: -11.000764846801758
    5. ')))' → logprob: -11.500764846801758
    6. '),' → logprob: -12.125764846801758
    7. ',' → logprob: -14.250764846801758
    8. '));' → logprob: -14.625764846801758
    9. '+' → logprob: -14.875764846801758
    10. '))

' → logprob: -14.875764846801758

Token 52: 'Left' (ID: 7471)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7808175086975098
    2. ')' → logprob: -1.4058175086975098
    3. '[' → logprob: -2.5308175086975098
    4. ':' → logprob: -3.9058175086975098
    5. '.' → logprob: -3.9058175086975098
    6. '' → logprob: -3.9058175086975098
    7. '#' → logprob: -4.28081750869751
    8. 'for' → logprob: -4.28081750869751
    9. ' ' → logprob: -4.28081750869751
    10. '<|end|>' → logprob: -4.28081750869751

Token 53: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0056991577148438
    2. ' =' → logprob: -1.0056991577148438
    3. '=' → logprob: -1.5056991577148438
    4. 's' → logprob: -4.630699157714844
    5. ')' → logprob: -5.005699157714844
    6. '(' → logprob: -5.255699157714844
    7. '_' → logprob: -5.505699157714844
    8. '[' → logprob: -5.630699157714844
    9. '_indices' → logprob: -5.630699157714844
    10. ' ,' → logprob: -6.005699157714844

Token 54: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11380835622549057
    2. ',' → logprob: -2.8638083934783936
    3. '=' → logprob: -3.7388083934783936
    4. ')' → logprob: -4.9888081550598145
    5. ' ,' → logprob: -5.2388081550598145
    6. ' ' → logprob: -5.9888081550598145
    7. '_' → logprob: -6.4888081550598145
    8. 's' → logprob: -6.4888081550598145
    9. ' )' → logprob: -6.4888081550598145
    10. ']' → logprob: -6.6138081550598145

Token 55: ' sorted' (ID: 20099)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.4034720659255981
    2. '0' → logprob: -1.9034720659255981
    3. 'list' → logprob: -2.2784719467163086
    4. '[min' → logprob: -2.5284719467163086
    5. 'indices' → logprob: -3.0284719467163086
    6. '[' → logprob: -3.0284719467163086
    7. '[]' → logprob: -3.1534719467163086
    8. 'chain' → logprob: -3.4034719467163086
    9. '(min' → logprob: -3.6534719467163086
    10. 'filter' → logprob: -3.7784719467163086

Token 56: '(((' (ID: 13163)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.35959261655807495
    2. '(indices' → logprob: -1.2345926761627197
    3. '(' → logprob: -4.859592437744141
    4. '((' → logprob: -5.984592437744141
    5. 'indices' → logprob: -8.23459243774414
    6. '(lambda' → logprob: -8.48459243774414
    7. '(((' → logprob: -10.10959243774414
    8. '(range' → logprob: -10.23459243774414
    9. '(Security' → logprob: -10.35959243774414
    10. '([(' → logprob: -10.73459243774414

Token 57: 'l' (ID: 75)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.3065849542617798
    2. 'i' → logprob: -1.5565849542617798
    3. 'l' → logprob: -2.0565848350524902
    4. 'a' → logprob: -2.3065848350524902
    5. 's' → logprob: -2.4315848350524902
    6. 'b' → logprob: -3.4315848350524902
    7. 'Sec' → logprob: -3.5565848350524902
    8. 'sec' → logprob: -3.9315848350524902
    9. 'v' → logprob: -4.43158483505249
    10. 'start' → logprob: -4.43158483505249

Token 58: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03647859767079353
    2. ',i' → logprob: -4.161478519439697
    3. '[' → logprob: -5.286478519439697
    4. '[i' → logprob: -5.411478519439697
    5. ',index' → logprob: -5.911478519439697
    6. 'ft' → logprob: -6.036478519439697
    7. 'idx' → logprob: -6.786478519439697
    8. 'i' → logprob: -7.036478519439697
    9. '[idx' → logprob: -7.536478519439697
    10. 'en' → logprob: -7.911478519439697

Token 59: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2565973103046417
    2. ' i' → logprob: -1.6315972805023193
    3. 'idx' → logprob: -4.631597518920898
    4. ' idx' → logprob: -4.756597518920898
    5. 'r' → logprob: -6.256597518920898
    6. 'l' → logprob: -6.256597518920898
    7. ' l' → logprob: -6.881597518920898
    8. ' r' → logprob: -6.881597518920898
    9. ' ' → logprob: -7.006597518920898
    10. ')' → logprob: -7.194097518920898

Token 60: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000206401280593127
    2. ',' → logprob: -9.375205993652344
    3. ' )' → logprob: -10.125205993652344
    4. 'ex' → logprob: -10.875205993652344
    5. 'x' → logprob: -11.250205993652344
    6. ')
' → logprob: -11.375205993652344
    7. '),' → logprob: -11.875205993652344
    8. '[' → logprob: -11.875205993652344
    9. ',)' → logprob: -12.500205993652344
    10. '-' → logprob: -12.750205993652344

Token 61: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.034383583813905716
    2. ',' → logprob: -3.409383535385132
    3. ' for' → logprob: -7.909383773803711
    4. 'for' → logprob: -8.909383773803711
    5. ',)' → logprob: -9.409383773803711
    6. ' )' → logprob: -9.909383773803711
    7. '[' → logprob: -10.409383773803711
    8. '+' → logprob: -11.159383773803711
    9. ' ,' → logprob: -11.534383773803711
    10. '),' → logprob: -12.034383773803711

Token 62: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07126142829656601
    2. ' i' → logprob: -2.696261405944824
    3. 'l' → logprob: -6.946261405944824
    4. ' l' → logprob: -9.071261405944824
    5. ',' → logprob: -9.571261405944824
    6. '(i' → logprob: -9.821261405944824
    7. ' (' → logprob: -10.446261405944824
    8. ',i' → logprob: -10.821261405944824
    9. ' ' → logprob: -10.946261405944824
    10. '  ' → logprob: -11.946261405944824

Token 63: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015368170104920864
    2. ',l' → logprob: -4.2653679847717285
    3. 'in' → logprob: -7.7653679847717285
    4. ' in' → logprob: -7.8903679847717285
    5. ',i' → logprob: -8.515368461608887
    6. ' ,' → logprob: -9.515368461608887
    7. ',n' → logprob: -9.890368461608887
    8. ',t' → logprob: -10.515368461608887
    9. ',s' → logprob: -11.640368461608887
    10. '<|end|>' → logprob: -12.265368461608887

Token 64: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5766186118125916
    2. '(l' → logprob: -0.8266186118125916
    3. '(n' → logprob: -8.826618194580078
    4. '(s' → logprob: -8.951618194580078
    5. '(L' → logprob: -9.576618194580078
    6. '<|end|>' → logprob: -9.576618194580078
    7. ',' → logprob: -9.701618194580078
    8. ' ' → logprob: -9.951618194580078
    9. '(' → logprob: -10.201618194580078
    10. '(t' → logprob: -10.451618194580078

Token 65: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0018203625222668052
    2. ' l' → logprob: -6.7518205642700195
    3. '(l' → logprob: -7.8768205642700195
    4. 's' → logprob: -8.87682056427002
    5. 'r' → logprob: -10.37682056427002
    6. 'L' → logprob: -11.00182056427002
    7. 'i' → logprob: -11.12682056427002
    8. ' (' → logprob: -11.68932056427002
    9. '[l' → logprob: -12.25182056427002
    10. ')' → logprob: -12.25182056427002

Token 66: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008862975984811783
    2. ',_' → logprob: -5.3838629722595215
    3. ',r' → logprob: -5.5088629722595215
    4. 'r' → logprob: -9.75886344909668
    5. ',v' → logprob: -10.25886344909668
    6. ' ,' → logprob: -11.38386344909668
    7. 'in' → logprob: -11.88386344909668
    8. '_,' → logprob: -12.00886344909668
    9. ',right' → logprob: -12.00886344909668
    10. ',)' → logprob: -12.38386344909668

Token 67: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0535103902220726
    2. '_' → logprob: -3.8035104274749756
    3. ' r' → logprob: -3.9285104274749756
    4. 's' → logprob: -5.8035101890563965
    5. '_,' → logprob: -5.9285101890563965
    6. '_)' → logprob: -6.5535101890563965
    7. '_r' → logprob: -6.6785101890563965
    8. ' _' → logprob: -8.053510665893555
    9. 'l' → logprob: -8.303510665893555
    10. ')' → logprob: -8.428510665893555

Token 68: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0030222758650779724
    2. 'in' → logprob: -5.878022193908691
    3. ' in' → logprob: -8.878022193908691
    4. ' )' → logprob: -9.753022193908691
    5. '),' → logprob: -13.253022193908691
    6. ',' → logprob: -13.253022193908691
    7. ' ' → logprob: -13.378022193908691
    8. 'n' → logprob: -13.628022193908691
    9. '))' → logprob: -13.628022193908691
    10. 'In' → logprob: -14.065522193908691

Token 69: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3215996325016022
    2. ' in' → logprob: -1.3215996026992798
    3. ')' → logprob: -4.94659948348999
    4. 'enumer' → logprob: -6.94659948348999
    5. ' enumerate' → logprob: -9.321599960327148
    6. ' ' → logprob: -9.696599960327148
    7. '<|end|>' → logprob: -9.946599960327148
    8. ' )' → logprob: -11.571599960327148
    9. '),' → logprob: -12.321599960327148
    10. ',' → logprob: -12.696599960327148

Token 70: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.023247340694069862
    2. 'enumer' → logprob: -3.773247241973877
    3. ' enumer' → logprob: -14.773247718811035
    4. '```' → logprob: -14.773247718811035
    5. ' en' → logprob: -15.023247718811035
    6. 'Enumer' → logprob: -15.648247718811035
    7. ' zip' → logprob: -16.27324676513672
    8. 'en' → logprob: -16.27324676513672
    9. '.enumer' → logprob: -16.27324676513672
    10. ' enumeration' → logprob: -16.52324676513672

Token 71: '(S' (ID: 6181)
  Prédit: 'Sec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sec' → logprob: -0.0043819439597427845
    2. ' Sec' → logprob: -5.504382133483887
    3. '(S' → logprob: -8.379382133483887
    4. ')' → logprob: -10.004382133483887
    5. 'Secs' → logprob: -11.629382133483887
    6. 'S' → logprob: -12.129382133483887
    7. 'sec' → logprob: -12.629382133483887
    8. ' ' → logprob: -13.504382133483887
    9. 'Se' → logprob: -13.504382133483887
    10. '	S' → logprob: -14.004382133483887

Token 72: 'ec' (ID: 1007)
  Prédit: 'ec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ec' → logprob: -0.00014001218369230628
    2. 'ecs' → logprob: -10.250140190124512
    3. 'Sec' → logprob: -10.500140190124512
    4. 'c' → logprob: -10.875140190124512
    5. 'sec' → logprob: -10.875140190124512
    6. 'e' → logprob: -11.250140190124512
    7. 'eq' → logprob: -12.312640190124512
    8. 'ex' → logprob: -12.625140190124512
    9. ')' → logprob: -13.312640190124512
    10. '_sec' → logprob: -13.750140190124512

Token 73: ')),' (ID: 12098)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09358131140470505
    2. '))' → logprob: -3.218581199645996
    3. ')))' → logprob: -3.218581199645996
    4. ')),' → logprob: -5.093581199645996
    5. '))),' → logprob: -7.093581199645996
    6. ' if' → logprob: -7.343581199645996
    7. ')])' → logprob: -8.218581199645996
    8. ' )' → logprob: -8.593581199645996
    9. ')));' → logprob: -8.593581199645996
    10. 'if' → logprob: -8.968581199645996

Token 74: ' key' (ID: 2140)
  Prédit: ' key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.3877558410167694
    2. 'key' → logprob: -1.1377558708190918
    3. 'reverse' → logprob: -7.512755870819092
    4. ' reverse' → logprob: -8.512755393981934
    5. ')' → logprob: -9.762755393981934
    6. ' ' → logprob: -10.887755393981934
    7. '  ' → logprob: -11.262755393981934
    8. '(key' → logprob: -11.387755393981934
    9. '0' → logprob: -11.762755393981934
    10. '1' → logprob: -12.137755393981934

Token 75: '=item' (ID: 76091)
  Prédit: '=item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=item' → logprob: -0.0030972622334957123
    2. '=lambda' → logprob: -6.253097057342529
    3. '=' → logprob: -6.753097057342529
    4. 'item' → logprob: -14.253097534179688
    5. '=index' → logprob: -17.253097534179688
    6. '=i' → logprob: -17.378097534179688
    7. '=_' → logprob: -18.128097534179688
    8. ' item' → logprob: -18.128097534179688
    9. '=len' → logprob: -18.503097534179688
    10. '=

' → logprob: -18.503097534179688

Token 76: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -6.968934758333489e-05
    2. 'get' → logprob: -9.875069618225098
    3. 'getitem' → logprob: -12.375069618225098
    4. 'Getter' → logprob: -13.250069618225098
    5. '_get' → logprob: -13.375069618225098
    6. '<|end|>' → logprob: -13.375069618225098
    7. ' getter' → logprob: -13.625069618225098
    8. 'generator' → logprob: -13.750069618225098
    9. '=get' → logprob: -13.750069618225098
    10. '@Getter' → logprob: -13.875069618225098

Token 77: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10026836395263672
    2. '0' → logprob: -2.3502683639526367
    3. '1' → logprob: -10.725268363952637
    4. ' (' → logprob: -11.100268363952637
    5. ' ' → logprob: -11.475268363952637
    6. '(
' → logprob: -12.350268363952637
    7. '```' → logprob: -12.725268363952637
    8. '`' → logprob: -13.850268363952637
    9. '<|end|>' → logprob: -14.287768363952637
    10. '
' → logprob: -14.350268363952637

Token 78: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0016668500611558557
    2. '1' → logprob: -6.626667022705078
    3. ' ' → logprob: -8.001667022705078
    4. ')' → logprob: -14.689167022705078
    5. '2' → logprob: -14.939167022705078
    6. '
' → logprob: -15.001667022705078
    7. '   ' → logprob: -15.064167022705078
    8. '  ' → logprob: -15.376667022705078
    9. '[' → logprob: -15.564167022705078
    10. '-' → logprob: -15.626667022705078

Token 79: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.022784382104873657
    2. ')' → logprob: -4.147784233093262
    3. '),' → logprob: -5.897784233093262
    4. ',' → logprob: -6.272784233093262
    5. ' ))' → logprob: -7.022784233093262
    6. '))
' → logprob: -7.272784233093262
    7. ')))' → logprob: -8.022784233093262
    8. ')),' → logprob: -10.022784233093262
    9. ' )' → logprob: -10.022784233093262
    10. '))

' → logprob: -10.897784233093262

Token 80: 'Right' (ID: 8627)
  Prédit: 'Right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Right' → logprob: -0.4424596130847931
    2. ',' → logprob: -1.8174595832824707
    3. 'Left' → logprob: -2.3174595832824707
    4. ')' → logprob: -3.3174595832824707
    5. '#' → logprob: -4.817459583282471
    6. 'l' → logprob: -5.067459583282471
    7. ']' → logprob: -5.067459583282471
    8. '[' → logprob: -5.067459583282471
    9. '1' → logprob: -5.317459583282471
    10. ')
' → logprob: -5.692459583282471

Token 81: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0282174963504076
    2. ' =' → logprob: -3.9032175540924072
    3. '=' → logprob: -5.403217315673828
    4. '2' → logprob: -5.903217315673828
    5. '_' → logprob: -8.653217315673828
    6. ' ' → logprob: -10.278217315673828
    7. '```' → logprob: -10.528217315673828
    8. '_sorted' → logprob: -10.653217315673828
    9. ',' → logprob: -11.028217315673828
    10. 's' → logprob: -11.153217315673828

Token 82: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16024810075759888
    2. '=' → logprob: -1.910248041152954
    3. ')' → logprob: -11.410247802734375
    4. ',' → logprob: -11.660247802734375
    5. ' ' → logprob: -14.035247802734375
    6. 'sorted' → logprob: -14.535247802734375
    7. '.' → logprob: -15.035247802734375
    8. '>' → logprob: -15.285247802734375
    9. ']' → logprob: -15.410247802734375
    10. '_sorted' → logprob: -15.410247802734375

Token 83: ' sorted' (ID: 20099)
  Prédit: ' sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -0.038092900067567825
    2. 'sorted' → logprob: -3.288092851638794
    3. '(sorted' → logprob: -10.413092613220215
    4. ' list' → logprob: -12.163092613220215
    5. '[' → logprob: -12.913092613220215
    6. '_sorted' → logprob: -13.038092613220215
    7. ' [' → logprob: -13.538092613220215
    8. ' sort' → logprob: -13.538092613220215
    9. '.sorted' → logprob: -13.538092613220215
    10. 'Sorted' → logprob: -13.663092613220215

Token 84: '(((' (ID: 13163)
  Prédit: '((('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(((' → logprob: -0.002407050458714366
    2. '((' → logprob: -6.127407073974609
    3. '([(' → logprob: -9.00240707397461
    4. '(' → logprob: -9.75240707397461
    5. '[((' → logprob: -11.00240707397461
    6. '((((' → logprob: -11.87740707397461
    7. '([' → logprob: -12.00240707397461
    8. '(S' → logprob: -12.25240707397461
    9. '```' → logprob: -14.37740707397461
    10. '(
' → logprob: -14.50240707397461

Token 85: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0019385118503123522
    2. '(r' → logprob: -6.751938343048096
    3. ' r' → logprob: -7.376938343048096
    4. 'l' → logprob: -9.876938819885254
    5. '   ' → logprob: -10.876938819885254
    6. ')' → logprob: -11.376938819885254
    7. 'lambda' → logprob: -11.689438819885254
    8. '[r' → logprob: -12.376938819885254
    9. '```' → logprob: -12.376938819885254
    10. ' ' → logprob: -12.501938819885254

Token 86: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003684401512145996
    2. ',i' → logprob: -5.8786845207214355
    3. ' ,' → logprob: -7.2536845207214355
    4. 'for' → logprob: -9.628684043884277
    5. ' for' → logprob: -10.253684043884277
    6. '1' → logprob: -11.128684043884277
    7. ')' → logprob: -12.003684043884277
    8. '   ' → logprob: -12.003684043884277
    9. ' ' → logprob: -12.128684043884277
    10. 'i' → logprob: -12.253684043884277

Token 87: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.014355769380927086
    2. ' i' → logprob: -4.264355659484863
    3. ' ' → logprob: -9.889355659484863
    4. ')' → logprob: -10.639355659484863
    5. '  ' → logprob: -10.764355659484863
    6. '   ' → logprob: -11.014355659484863
    7. '<|end|>' → logprob: -11.139355659484863
    8. 'index' → logprob: -12.201855659484863
    9. ',' → logprob: -12.264355659484863
    10. '1' → logprob: -12.451855659484863

Token 88: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010532920714467764
    2. 'for' → logprob: -7.001053333282471
    3. ' for' → logprob: -9.626052856445312
    4. ' )' → logprob: -10.001052856445312
    5. '   ' → logprob: -12.126052856445312
    6. ',' → logprob: -12.126052856445312
    7. '1' → logprob: -12.251052856445312
    8. ')
' → logprob: -13.126052856445312
    9. ' ' → logprob: -13.688552856445312
    10. '  ' → logprob: -14.063552856445312

Token 89: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12701231241226196
    2. 'for' → logprob: -2.127012252807617
    3. ')' → logprob: -9.502012252807617
    4. ' ' → logprob: -12.127012252807617
    5. '	for' → logprob: -13.252012252807617
    6. ',' → logprob: -14.377012252807617
    7. '  ' → logprob: -14.877012252807617
    8. ' )' → logprob: -15.002012252807617
    9. '1' → logprob: -15.127012252807617
    10. '   ' → logprob: -15.502012252807617

Token 90: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0539834089577198
    2. 'i' → logprob: -3.053983449935913
    3. ',' → logprob: -5.928983211517334
    4. ' l' → logprob: -6.303983211517334
    5. 'l' → logprob: -8.178983688354492
    6. ',i' → logprob: -8.678983688354492
    7. ' ' → logprob: -9.491483688354492
    8. ' ,' → logprob: -9.678983688354492
    9. ' r' → logprob: -9.991483688354492
    10. '1' → logprob: -10.366483688354492

Token 91: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.4153549020411447e-05
    2. ' ,' → logprob: -11.25002384185791
    3. '<|end|>' → logprob: -11.62502384185791
    4. '‌,' → logprob: -14.62502384185791
    5. ' in' → logprob: -14.62502384185791
    6. ',
' → logprob: -15.62502384185791
    7. ',(' → logprob: -15.62502384185791
    8. '<|end|>' → logprob: -16.125024795532227
    9. 'enumer' → logprob: -16.687524795532227
    10. ',item' → logprob: -16.687524795532227

Token 92: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.145348459482193
    2. '(l' → logprob: -2.27034854888916
    3. '(r' → logprob: -3.52034854888916
    4. '(s' → logprob: -7.77034854888916
    5. '(S' → logprob: -7.89534854888916
    6. '(' → logprob: -8.02034854888916
    7. 'enumer' → logprob: -8.14534854888916
    8. ' in' → logprob: -8.52034854888916
    9. ',' → logprob: -8.52034854888916
    10. ' ' → logprob: -8.77034854888916

Token 93: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6734836101531982
    2. 'Sec' → logprob: -0.9234836101531982
    3. 'r' → logprob: -3.1734836101531982
    4. 'enumer' → logprob: -3.4234836101531982
    5. 's' → logprob: -5.298483848571777
    6. '_,' → logprob: -5.923483848571777
    7. ' Sec' → logprob: -6.048483848571777
    8. ',' → logprob: -6.673483848571777
    9. '(l' → logprob: -6.923483848571777
    10. '(r' → logprob: -7.298483848571777

Token 94: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006285638664849102
    2. ',r' → logprob: -7.625628471374512
    3. 'r' → logprob: -9.000628471374512
    4. ' ,' → logprob: -12.250628471374512
    5. ' in' → logprob: -13.125628471374512
    6. ' ' → logprob: -13.375628471374512
    7. ' r' → logprob: -13.500628471374512
    8. '1' → logprob: -13.875628471374512
    9. '_,' → logprob: -14.000628471374512
    10. 'in' → logprob: -14.000628471374512

Token 95: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.47482791543006897
    2. ' r' → logprob: -0.9748278856277466
    3. '(r' → logprob: -7.724827766418457
    4. ' (' → logprob: -8.974827766418457
    5. '_r' → logprob: -10.224827766418457
    6. ' ' → logprob: -10.474827766418457
    7. ' ' → logprob: -10.474827766418457
    8. 's' → logprob: -10.912327766418457
    9. ' s' → logprob: -11.287327766418457
    10. '	r' → logprob: -11.537327766418457

Token 96: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021073482930660248
    2. ' in' → logprob: -4.521073341369629
    3. 'in' → logprob: -4.646073341369629
    4. '1' → logprob: -9.271073341369629
    5. '2' → logprob: -10.271073341369629
    6. ' )' → logprob: -10.271073341369629
    7. '))' → logprob: -10.396073341369629
    8. ' ' → logprob: -10.396073341369629
    9. '   ' → logprob: -10.771073341369629
    10. '0' → logprob: -10.771073341369629

Token 97: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1442839801311493
    2. 'in' → logprob: -2.0192840099334717
    3. ')' → logprob: -6.519283771514893
    4. ' ' → logprob: -10.39428424835205
    5. 'n' → logprob: -10.64428424835205
    6. '),' → logprob: -10.76928424835205
    7. '1' → logprob: -11.51928424835205
    8. 'import' → logprob: -11.51928424835205
    9. '
' → logprob: -12.39428424835205
    10. '```' → logprob: -12.51928424835205

Token 98: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.0003218766360078007
    2. ' enumerate' → logprob: -8.125322341918945
    3. 'Sec' → logprob: -10.875322341918945
    4. '(en' → logprob: -13.750322341918945
    5. 'range' → logprob: -14.000322341918945
    6. 'enum' → logprob: -14.000322341918945
    7. '((' → logprob: -14.500322341918945
    8. '[(' → logprob: -14.750322341918945
    9. 'en' → logprob: -14.875322341918945
    10. ')' → logprob: -15.000322341918945

Token 99: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.009946849197149277
    2. 'Sec' → logprob: -4.759946823120117
    3. 'S' → logprob: -6.634946823120117
    4. 'Se' → logprob: -13.009946823120117
    5. ')' → logprob: -13.634946823120117
    6. '_S' → logprob: -13.634946823120117
    7. ' Sec' → logprob: -13.759946823120117
    8. '(' → logprob: -13.759946823120117
    9. 'sec' → logprob: -13.759946823120117
    10. 'Secs' → logprob: -14.134946823120117

Token 100: 'ec' (ID: 1007)
  Prédit: 'ec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ec' → logprob: -0.00807252712547779
    2. 'Sec' → logprob: -5.008072376251221
    3. '1' → logprob: -7.008072376251221
    4. 'c' → logprob: -9.695572853088379
    5. 'sec' → logprob: -10.320572853088379
    6. '))' → logprob: -10.445572853088379
    7. 'ecs' → logprob: -10.445572853088379
    8. '[' → logprob: -10.758072853088379
    9. '```' → logprob: -10.758072853088379
    10. 'e' → logprob: -10.820572853088379

Token 101: ')),' (ID: 12098)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.04401792585849762
    2. '))' → logprob: -3.544018030166626
    3. ')),' → logprob: -4.294017791748047
    4. ')' → logprob: -8.044017791748047
    5. '))
' → logprob: -9.419017791748047
    6. ' ),' → logprob: -9.669017791748047
    7. '1' → logprob: -11.169017791748047
    8. '))

' → logprob: -11.919017791748047
    9. ' ' → logprob: -12.419017791748047
    10. '   ' → logprob: -12.544017791748047

Token 102: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.014180909842252731
    2. ' key' → logprob: -4.264181137084961
    3. 'reverse' → logprob: -11.764181137084961
    4. '(key' → logprob: -12.014181137084961
    5. ',key' → logprob: -13.889181137084961
    6. ' ' → logprob: -14.389181137084961
    7. '  ' → logprob: -14.889181137084961
    8. '[key' → logprob: -14.889181137084961
    9. ' reverse' → logprob: -15.639181137084961
    10. '   ' → logprob: -15.639181137084961

Token 103: '=item' (ID: 76091)
  Prédit: '=item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=item' → logprob: -0.0012808336177840829
    2. 'item' → logprob: -7.501280784606934
    3. '=lambda' → logprob: -7.876280784606934
    4. '(item' → logprob: -8.126280784606934
    5. '```' → logprob: -11.251280784606934
    6. ')item' → logprob: -11.251280784606934
    7. '=' → logprob: -11.751280784606934
    8. '(' → logprob: -11.876280784606934
    9. 'operator' → logprob: -12.251280784606934
    10. 'getitem' → logprob: -13.126280784606934

Token 104: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -0.00034142236108891666
    2. 'getitem' → logprob: -8.500341415405273
    3. 'get' → logprob: -9.500341415405273
    4. '(' → logprob: -10.250341415405273
    5. '```' → logprob: -12.125341415405273
    6. 'giver' → logprob: -12.875341415405273
    7. 'operator' → logprob: -13.250341415405273
    8. '1' → logprob: -13.625341415405273
    9. '(get' → logprob: -13.625341415405273
    10. '@Getter' → logprob: -13.750341415405273

Token 105: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.47626737493556e-05
    2. '0' → logprob: -10.75003433227539
    3. '1' → logprob: -12.00003433227539
    4. '(
' → logprob: -12.00003433227539
    5. ' (' → logprob: -15.12503433227539
    6. '```' → logprob: -15.12503433227539
    7. '
' → logprob: -15.25003433227539
    8. '	' → logprob: -17.37503433227539
    9. '   ' → logprob: -17.62503433227539
    10. ')(' → logprob: -17.62503433227539

Token 106: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013338132994249463
    2. '1' → logprob: -6.626333713531494
    3. ' ' → logprob: -12.626334190368652
    4. ')' → logprob: -13.126334190368652
    5. '(' → logprob: -14.126334190368652
    6. '[' → logprob: -15.001334190368652
    7. '```' → logprob: -15.376334190368652
    8. '۰' → logprob: -15.626334190368652
    9. '   ' → logprob: -15.876334190368652
    10. '' → logprob: -15.938834190368652

Token 107: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02325584553182125
    2. '))' → logprob: -3.7732558250427246
    3. ')))' → logprob: -12.148256301879883
    4. ')
' → logprob: -13.273256301879883
    5. ' )' → logprob: -13.648256301879883
    6. '),' → logprob: -14.273256301879883
    7. ')`' → logprob: -14.648256301879883
    8. '1' → logprob: -15.898256301879883
    9. ')}' → logprob: -15.898256301879883
    10. ')),' → logprob: -16.273256301879883

Token 108: ' reverse' (ID: 18199)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.12750805914402008
    2. ' reverse' → logprob: -2.6275081634521484
    3. 'key' → logprob: -3.2525081634521484
    4. ' key' → logprob: -4.877508163452148
    5. ')' → logprob: -6.877508163452148
    6. ')
' → logprob: -9.627508163452148
    7. '0' → logprob: -10.502508163452148
    8. '1' → logprob: -11.627508163452148
    9. '(reverse' → logprob: -12.252508163452148
    10. 'rev' → logprob: -12.627508163452148

Token 109: '=True' (ID: 7827)
  Prédit: '(True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(True' → logprob: -0.4003101587295532
    2. '(' → logprob: -1.4003101587295532
    3. '=True' → logprob: -3.2753100395202637
    4. ')' → logprob: -3.9003100395202637
    5. '()' → logprob: -4.150310039520264
    6. '())' → logprob: -5.150310039520264
    7. '(False' → logprob: -6.400310039520264
    8. 'True' → logprob: -6.900310039520264
    9. '(
' → logprob: -7.900310039520264
    10. '1' → logprob: -8.775310516357422

Token 110: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.2994620242971e-06
    2. '))' → logprob: -12.000008583068848
    3. ')
' → logprob: -13.250008583068848
    4. ')`' → logprob: -15.875008583068848
    5. ' )' → logprob: -16.37500762939453
    6. '),' → logprob: -17.00000762939453
    7. ')

' → logprob: -17.25000762939453
    8. ')))' → logprob: -17.37500762939453
    9. ')#' → logprob: -17.87500762939453
    10. '`)' → logprob: -18.25000762939453

Token 111: 'Left' (ID: 7471)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3825186491012573
    2. 'i' → logprob: -3.257518768310547
    3. 'for' → logprob: -3.382518768310547
    4. '[' → logprob: -3.382518768310547
    5. ']' → logprob: -3.507518768310547
    6. 'Left' → logprob: -3.507518768310547
    7. '#' → logprob: -3.882518768310547
    8. '
' → logprob: -4.132518768310547
    9. 'L' → logprob: -4.132518768310547
    10. ')
' → logprob: -5.132518768310547

Token 112: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5320735573768616
    2. '1' → logprob: -0.9070735573768616
    3. ' =' → logprob: -6.032073497772217
    4. 'indices' → logprob: -6.032073497772217
    5. '=' → logprob: -6.407073497772217
    6. '_indices' → logprob: -7.532073497772217
    7. '0' → logprob: -8.157073974609375
    8. 'Indices' → logprob: -8.532073974609375
    9. 'index' → logprob: -8.532073974609375
    10. ',' → logprob: -8.657073974609375

Token 113: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0790448933839798
    2. '=' → logprob: -2.579044818878174
    3. ',' → logprob: -9.329045295715332
    4. ')' → logprob: -10.954045295715332
    5. ' =
' → logprob: -11.579045295715332
    6. ' =)' → logprob: -12.204045295715332
    7. ' =[' → logprob: -12.579045295715332
    8. '[' → logprob: -12.579045295715332
    9. ' ,' → logprob: -12.829045295715332
    10. '=
' → logprob: -12.829045295715332

Token 114: ' Left' (ID: 26982)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.6292551755905151
    2. ' sorted' → logprob: -1.0042551755905151
    3. '[(' → logprob: -3.3792552947998047
    4. '(sorted' → logprob: -4.129255294799805
    5. '[' → logprob: -4.879255294799805
    6. ' list' → logprob: -4.879255294799805
    7. '[]' → logprob: -5.129255294799805
    8. ' [(' → logprob: -5.254255294799805
    9. 'Left' → logprob: -5.379255294799805
    10. 'list' → logprob: -5.504255294799805

Token 115: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006785470526665449
    2. '2' → logprob: -5.0067853927612305
    3. ')' → logprob: -10.38178539276123
    4. '<|end|>' → logprob: -11.63178539276123
    5. '(' → logprob: -12.13178539276123
    6. ' ' → logprob: -12.75678539276123
    7. '```' → logprob: -12.94428539276123
    8. '[' → logprob: -13.38178539276123
    9. ',' → logprob: -13.69428539276123
    10. '0' → logprob: -13.88178539276123

Token 116: '[:' (ID: 7808)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 117: ']
' (ID: 1592)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.020956166088581085
    2. ']' → logprob: -5.395956039428711
    3. '1' → logprob: -5.520956039428711
    4. '2' → logprob: -6.020956039428711
    5. 'len' → logprob: -6.020956039428711
    6. '(' → logprob: -6.395956039428711
    7. '(N' → logprob: -7.145956039428711
    8. '10' → logprob: -7.645956039428711
    9. 'int' → logprob: -7.770956039428711
    10. ')' → logprob: -7.770956039428711

Token 118: 'Right' (ID: 8627)
  Prédit: 'Right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Right' → logprob: -0.007485711015760899
    2. ']' → logprob: -6.882485866546631
    3. '#' → logprob: -7.007485866546631
    4. 'indices' → logprob: -7.007485866546631
    5. 'del' → logprob: -7.507485866546631
    6. ')' → logprob: -7.507485866546631
    7. 'for' → logprob: -7.757485866546631
    8. '[' → logprob: -7.882485866546631
    9. '.sort' → logprob: -8.007485389709473
    10. 'sort' → logprob: -8.382485389709473

Token 119: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008087906171567738
    2. '1' → logprob: -7.2508087158203125
    3. '=' → logprob: -9.625808715820312
    4. ' =' → logprob: -11.000808715820312
    5. ')' → logprob: -12.250808715820312
    6. ' ' → logprob: -13.000808715820312
    7. '```' → logprob: -13.375808715820312
    8. ']' → logprob: -13.438308715820312
    9. '[' → logprob: -14.500808715820312
    10. '_' → logprob: -14.625808715820312

Token 120: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1797488033771515
    2. ' =' → logprob: -1.804748773574829
    3. '<|end|>' → logprob: -14.17974853515625
    4. ',' → logprob: -14.30474853515625
    5. ')' → logprob: -14.80474853515625
    6. '=[]' → logprob: -15.17974853515625
    7. '=

' → logprob: -15.30474853515625
    8. ' ' → logprob: -15.30474853515625
    9. '＝' → logprob: -15.80474853515625
    10. '=
' → logprob: -15.80474853515625

Token 121: ' Right' (ID: 16354)
  Prédit: 'Right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Right' → logprob: -0.0012958350125700235
    2. ' Right' → logprob: -7.126296043395996
    3. 'Left' → logprob: -8.126296043395996
    4. '[]' → logprob: -9.376296043395996
    5. '[(' → logprob: -9.751296043395996
    6. '[' → logprob: -10.751296043395996
    7. 'sorted' → logprob: -11.626296043395996
    8. 'Sec' → logprob: -11.626296043395996
    9. 'list' → logprob: -12.376296043395996
    10. '[]
' → logprob: -13.001296043395996

Token 122: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.024604277219623e-05
    2. '[' → logprob: -11.375040054321289
    3. '2' → logprob: -11.500040054321289
    4. ']' → logprob: -12.750040054321289
    5. ')' → logprob: -12.937540054321289
    6. '```' → logprob: -13.187540054321289
    7. '[::-' → logprob: -13.375040054321289
    8. '...' → logprob: -13.562540054321289
    9. '[:' → logprob: -13.625040054321289
    10. '(' → logprob: -13.750040054321289

Token 123: '[:' (ID: 7808)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 124: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28265658020973206
    2. ']' → logprob: -1.4076565504074097
    3. '<|end|>' → logprob: -7.157656669616699
    4. '#' → logprob: -9.0326566696167
    5. ')
' → logprob: -9.1576566696167
    6. '])' → logprob: -9.4076566696167
    7. '[' → logprob: -9.5326566696167
    8. ')]' → logprob: -9.5326566696167
    9. ' )' → logprob: -10.4076566696167
    10. '
' → logprob: -10.5326566696167

Token 125: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9532448053359985
    2. '#' → logprob: -1.3282448053359985
    3. ']' → logprob: -2.078244686126709
    4. '[' → logprob: -2.453244686126709
    5. 'i' → logprob: -3.703244686126709
    6. 'for' → logprob: -3.828244686126709
    7. ',
' → logprob: -4.203244686126709
    8. '[
' → logprob: -4.328244686126709
    9. ',' → logprob: -4.453244686126709
    10. '
' → logprob: -5.078244686126709

Token 126: ' process' (ID: 2273)
  Prédit: ' merge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' merge' → logprob: -0.8026604056358337
    2. ' max' → logprob: -2.0526604652404785
    3. ' cover' → logprob: -2.4276604652404785
    4. ' find' → logprob: -2.5526604652404785
    5. ' solve' → logprob: -3.9276604652404785
    6. ' coverage' → logprob: -4.0526604652404785
    7. ' check' → logprob: -4.0526604652404785
    8. ' intersect' → logprob: -4.0526604652404785
    9. ' combine' → logprob: -4.3026604652404785
    10. ' remove' → logprob: -4.3026604652404785

Token 127: '(seq' (ID: 78669)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6515905261039734
    2. '(S' → logprob: -0.9015905261039734
    3. '(interval' → logprob: -3.776590585708618
    4. '_segments' → logprob: -4.276590347290039
    5. '_ranges' → logprob: -4.901590347290039
    6. '_inter' → logprob: -5.526590347290039
    7. '(_' → logprob: -5.776590347290039
    8. '(N' → logprob: -6.401590347290039
    9. '(L' → logprob: -6.401590347290039
    10. '(range' → logprob: -6.526590347290039

Token 128: 'A' (ID: 32)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2292262613773346
    2. ',' → logprob: -1.6042262315750122
    3. '):
' → logprob: -5.979226112365723
    4. ')' → logprob: -7.229226112365723
    5. '[' → logprob: -8.604226112365723
    6. '(seq' → logprob: -9.229226112365723
    7. '_seq' → logprob: -9.604226112365723
    8. '_sequence' → logprob: -10.104226112365723
    9. ':' → logprob: -10.229226112365723
    10. ' ):' → logprob: -11.104226112365723

Token 129: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.043214645236730576
    2. '):' → logprob: -3.1682145595550537
    3. ' ,' → logprob: -9.543214797973633
    4. ')' → logprob: -9.668214797973633
    5. ':' → logprob: -10.918214797973633
    6. '):
' → logprob: -10.918214797973633
    7. ' ):' → logprob: -11.793214797973633
    8. '[' → logprob: -12.168214797973633
    9. ',a' → logprob: -12.168214797973633
    10. '(seq' → logprob: -12.168214797973633

Token 130: ' seq' (ID: 26775)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.03098488785326481
    2. ' seq' → logprob: -3.530984878540039
    3. 'key' → logprob: -8.030984878540039
    4. 'indices' → logprob: -8.155984878540039
    5. 'func' → logprob: -9.280984878540039
    6. 'index' → logprob: -9.655984878540039
    7. ' key' → logprob: -10.030984878540039
    8. 'idx' → logprob: -10.030984878540039
    9. 'start' → logprob: -10.593484878540039
    10. 'se' → logprob: -10.655984878540039

Token 131: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.32400980591773987
    2. ',' → logprob: -1.6990097761154175
    3. 'A' → logprob: -3.074009895324707
    4. '):' → logprob: -3.199009895324707
    5. '):
' → logprob: -5.199009895324707
    6. ')' → logprob: -7.574009895324707
    7. 'a' → logprob: -8.699009895324707
    8. ',
' → logprob: -9.199009895324707
    9. 's' → logprob: -9.449009895324707
    10. '1' → logprob: -9.574009895324707

Token 132: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.027374951168894768
    2. ',' → logprob: -3.6523749828338623
    3. ')' → logprob: -7.027374744415283
    4. '):
' → logprob: -9.402375221252441
    5. ' ):' → logprob: -9.527375221252441
    6. ':' → logprob: -11.902375221252441
    7. ' ,' → logprob: -12.402375221252441
    8. ' ' → logprob: -13.027375221252441
    9. ')):' → logprob: -13.339875221252441
    10. '):
' → logprob: -13.402375221252441

Token 133: ' init' (ID: 6327)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'seq' → logprob: -1.652516484260559
    2. 'indices' → logprob: -2.0275163650512695
    3. ' seq' → logprob: -2.5275163650512695
    4. ' key' → logprob: -2.6525163650512695
    5. ' indices' → logprob: -2.6525163650512695
    6. 'key' → logprob: -3.0275163650512695
    7. 'func' → logprob: -3.2775163650512695
    8. 'idx' → logprob: -3.6525163650512695
    9. ' func' → logprob: -3.7775163650512695
    10. 'i' → logprob: -4.0275163650512695

Token 134: '_flag' (ID: 25269)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2524999976158142
    2. '_val' → logprob: -2.127500057220459
    3. '_value' → logprob: -2.877500057220459
    4. '):
' → logprob: -3.877500057220459
    5. '_acc' → logprob: -4.627500057220459
    6. '_state' → logprob: -4.752500057220459
    7. ',' → logprob: -6.002500057220459
    8. '_' → logprob: -6.127500057220459
    9. 'val' → logprob: -7.002500057220459
    10. ')' → logprob: -7.502500057220459

Token 135: 'A' (ID: 32)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18041278421878815
    2. ',' → logprob: -2.430412769317627
    3. '=' → logprob: -3.055412769317627
    4. ')' → logprob: -3.930412769317627
    5. '):
' → logprob: -4.805412769317627
    6. '=False' → logprob: -7.555412769317627
    7. '=True' → logprob: -7.805412769317627
    8. ')=' → logprob: -8.180413246154785
    9. '=None' → logprob: -8.555413246154785
    10. ')):' → logprob: -9.055413246154785

Token 136: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1842545121908188
    2. '):' → logprob: -1.80925452709198
    3. ')' → logprob: -5.9342546463012695
    4. ' ,' → logprob: -7.0592546463012695
    5. '=' → logprob: -8.18425464630127
    6. ' ):' → logprob: -8.18425464630127
    7. ',
' → logprob: -8.80925464630127
    8. '):
' → logprob: -9.05925464630127
    9. ' ' → logprob: -10.80925464630127
    10. '_flag' → logprob: -11.55925464630127

Token 137: ' init' (ID: 6327)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.020902225747704506
    2. ' init' → logprob: -4.145902156829834
    3. 'flag' → logprob: -6.270902156829834
    4. 'seq' → logprob: -6.270902156829834
    5. '   ' → logprob: -8.895902633666992
    6. 'index' → logprob: -9.020902633666992
    7. 'func' → logprob: -9.270902633666992
    8. ' seq' → logprob: -9.645902633666992
    9. 'idx' → logprob: -9.770902633666992
    10. ' flag' → logprob: -10.270902633666992

Token 138: '_flag' (ID: 25269)
  Prédit: '_flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flag' → logprob: -0.0016138888895511627
    2. '_val' → logprob: -7.001614093780518
    3. '_value' → logprob: -8.12661361694336
    4. '_state' → logprob: -9.62661361694336
    5. 'flag' → logprob: -10.00161361694336
    6. '_' → logprob: -10.37661361694336
    7. '_count' → logprob: -10.37661361694336
    8. '_pos' → logprob: -10.50161361694336
    9. '_flags' → logprob: -10.50161361694336
    10. '_counter' → logprob: -10.62661361694336

Token 139: 'B' (ID: 33)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.13604803383350372
    2. '):' → logprob: -2.3860480785369873
    3. ',' → logprob: -3.5110480785369873
    4. '):
' → logprob: -6.136047840118408
    5. ')' → logprob: -7.011047840118408
    6. 'B' → logprob: -7.636047840118408
    7. '_flag' → logprob: -8.011048316955566
    8. 'a' → logprob: -8.261048316955566
    9. '_A' → logprob: -8.636048316955566
    10. '):

' → logprob: -8.636048316955566

Token 140: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01839621178805828
    2. ',' → logprob: -4.018396377563477
    3. ')' → logprob: -9.143396377563477
    4. '):
' → logprob: -9.518396377563477
    5. ' ):' → logprob: -10.393396377563477
    6. ':' → logprob: -10.518396377563477
    7. '=' → logprob: -12.893396377563477
    8. ' ,' → logprob: -14.268396377563477
    9. ']:' → logprob: -14.643396377563477
    10. '):
' → logprob: -14.768396377563477

Token 141: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005986624397337437
    2. '    
' → logprob: -6.88098669052124
    3. ' 
' → logprob: -7.25598669052124
    4. ':' → logprob: -7.25598669052124
    5. 'def' → logprob: -7.25598669052124
    6. ' flag' → logprob: -7.63098669052124
    7. ':
' → logprob: -8.380986213684082
    8. '
' → logprob: -8.380986213684082
    9. '    ' → logprob: -8.630986213684082
    10. '(
' → logprob: -8.880986213684082

Token 142: ' sts' (ID: 135210)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.45573413372039795
    2. '   ' → logprob: -2.2057342529296875
    3. ' result' → logprob: -2.2057342529296875
    4. ' flag' → logprob: -2.8307342529296875
    5. 'flag' → logprob: -4.2057342529296875
    6. ' ans' → logprob: -4.5807342529296875
    7. 'res' → logprob: -5.0807342529296875
    8. ' max' → logprob: -5.2057342529296875
    9. 'result' → logprob: -5.3307342529296875
    10. ' left' → logprob: -5.5807342529296875

Token 143: ' =' (ID: 314)
  Prédit: 'ates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ates' → logprob: -0.6936245560646057
    2. ' =' → logprob: -1.568624496459961
    3. 'atus' → logprob: -1.818624496459961
    4. '=' → logprob: -2.568624496459961
    5. 'ate' → logprob: -3.818624496459961
    6. 'ats' → logprob: -4.693624496459961
    7. 'a' → logprob: -4.943624496459961
    8. 'art' → logprob: -5.818624496459961
    9. ',' → logprob: -5.943624496459961
    10. 'at' → logprob: -5.943624496459961

Token 144: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.650357186794281
    2. '[]' → logprob: -1.0253572463989258
    3. '{}' → logprob: -3.525357246398926
    4. '{' → logprob: -3.650357246398926
    5. 'set' → logprob: -4.025357246398926
    6. '0' → logprob: -4.400357246398926
    7. '[(' → logprob: -4.650357246398926
    8. '[]
' → logprob: -5.150357246398926
    9. '[-' → logprob: -5.150357246398926
    10. '[{' → logprob: -6.150357246398926

Token 145: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.41441619396209717
    2. '0' → logprob: -1.1644161939620972
    3. '-' → logprob: -4.914416313171387
    4. 'init' → logprob: -5.164416313171387
    5. '(' → logprob: -5.789416313171387
    6. '[' → logprob: -5.789416313171387
    7. 'True' → logprob: -5.914416313171387
    8. 'None' → logprob: -6.664416313171387
    9. 'float' → logprob: -6.789416313171387
    10. '(False' → logprob: -7.289416313171387

Token 146: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.25135543942451477
    2. ',' → logprob: -2.0013554096221924
    3. ' for' → logprob: -2.6263554096221924
    4. ']*' → logprob: -4.5013556480407715
    5. 'for' → logprob: -5.7513556480407715
    6. ' ]' → logprob: -8.376355171203613
    7. ')' → logprob: -9.251355171203613
    8. ']+' → logprob: -9.751355171203613
    9. ']*(' → logprob: -10.001355171203613
    10. ' ,' → logprob: -11.251355171203613

Token 147: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3596932291984558
    2. ',' → logprob: -1.3596932888031006
    3. '[' → logprob: -4.3596930503845215
    4. ' for' → logprob: -4.3596930503845215
    5. ')' → logprob: -5.6096930503845215
    6. 'for' → logprob: -5.7346930503845215
    7. ' ]' → logprob: -6.2346930503845215
    8. '   ' → logprob: -6.3596930503845215
    9. '<|end|>' → logprob: -6.7346930503845215
    10. ']*' → logprob: -6.8596930503845215

Token 148: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5885174870491028
    2. 'len' → logprob: -0.8385174870491028
    3. '(len' → logprob: -4.588517665863037
    4. '(' → logprob: -6.463517665863037
    5. '(N' → logprob: -7.338517665863037
    6. ' len' → logprob: -10.338517189025879
    7. '100' → logprob: -10.338517189025879
    8. 'n' → logprob: -11.838517189025879
    9. ' N' → logprob: -11.838517189025879
    10. 'max' → logprob: -11.838517189025879

Token 149: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.137356162071228
    2. '
' → logprob: -1.137356162071228
    3. '<|end|>' → logprob: -2.1373562812805176
    4. ',
' → logprob: -2.8873562812805176
    5. ')' → logprob: -3.0123562812805176
    6. '   ' → logprob: -3.1373562812805176
    7. ' 
' → logprob: -4.012356281280518
    8. ' for' → logprob: -4.387356281280518
    9. '    
' → logprob: -4.387356281280518
    10. ' ,' → logprob: -4.762356281280518

Token 150: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5968752503395081
    2. ' for' → logprob: -2.0968751907348633
    3. 'flag' → logprob: -2.7218751907348633
    4. 'i' → logprob: -3.0968751907348633
    5. ' flag' → logprob: -3.2218751907348633
    6. 'for' → logprob: -3.3468751907348633
    7. ' i' → logprob: -3.4718751907348633
    8. '    
' → logprob: -3.5968751907348633
    9. '
' → logprob: -3.8468751907348633
    10. 'idx' → logprob: -4.596875190734863

Token 151: ' pos' (ID: 1253)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.4006049931049347
    2. 'for' → logprob: -2.0256049633026123
    3. 'stack' → logprob: -2.5256049633026123
    4. 'i' → logprob: -3.9006049633026123
    5. 'pos' (adapté à ' pos') → logprob: -4.025605201721191
    6. 'flags' → logprob: -4.650605201721191
    7. ' for' → logprob: -4.650605201721191
    8. 'idx' → logprob: -4.775605201721191
    9. '   ' → logprob: -5.025605201721191
    10. ' flag' → logprob: -5.275605201721191

Token 152: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2041611522436142
    2. '=' → logprob: -1.7041611671447754
    3. 's' → logprob: -6.704161167144775
    4. ',' → logprob: -6.704161167144775
    5. 'A' → logprob: -9.829160690307617
    6. ' ' → logprob: -10.079160690307617
    7. ')' → logprob: -10.454160690307617
    8. 'sible' → logprob: -10.579160690307617
    9. '_' → logprob: -10.829160690307617
    10. '  ' → logprob: -11.079160690307617

Token 153: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.040956053882837296
    2. '-' → logprob: -3.2909560203552246
    3. 'seq' → logprob: -6.665956020355225
    4. ' ' → logprob: -7.790956020355225
    5. '[' → logprob: -8.415956497192383
    6. 'next' → logprob: -8.540956497192383
    7. 'len' → logprob: -8.915956497192383
    8. 'count' → logprob: -9.040956497192383
    9. 'init' → logprob: -9.165956497192383
    10. ' -' → logprob: -9.540956497192383

Token 154: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6469882130622864
    2. '0' → logprob: -0.8969882130622864
    3. 'None' → logprob: -3.1469881534576416
    4. 'False' → logprob: -4.146988391876221
    5. 'float' → logprob: -6.396988391876221
    6. 'seq' → logprob: -6.521988391876221
    7. '(-' → logprob: -6.646988391876221
    8. 'init' → logprob: -7.146988391876221
    9. '(' → logprob: -7.146988391876221
    10. 'len' → logprob: -7.146988391876221

Token 155: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008649318479001522
    2. ']*' → logprob: -4.7586493492126465
    3. ',' → logprob: -11.008648872375488
    4. ' ]' → logprob: -12.008648872375488
    5. ']*(' → logprob: -12.508648872375488
    6. ' for' → logprob: -12.883648872375488
    7. 'for' → logprob: -13.008648872375488
    8. ')' → logprob: -13.883648872375488
    9. ')]' → logprob: -14.508648872375488
    10. '])' → logprob: -14.758648872375488

Token 156: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0959808826446533
    2. '   ' → logprob: -1.0959808826446533
    3. '<|end|>' → logprob: -2.2209808826446533
    4. ' for' → logprob: -3.0959808826446533
    5. ')' → logprob: -3.2209808826446533
    6. ',' → logprob: -3.5959808826446533
    7. '
' → logprob: -3.9709808826446533
    8. ' while' → logprob: -4.220980644226074
    9. '  ' → logprob: -4.470980644226074
    10. '    ' → logprob: -4.595980644226074

Token 157: ' pointer' (ID: 16233)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.26057711243629456
    2. ' flag' → logprob: -2.3855772018432617
    3. 'idx' → logprob: -3.5105772018432617
    4. '   ' → logprob: -3.7605772018432617
    5. 'while' → logprob: -3.7605772018432617
    6. 'i' → logprob: -4.135577201843262
    7. ' while' → logprob: -4.260577201843262
    8. 'pos' → logprob: -5.260577201843262
    9. 'for' → logprob: -5.260577201843262
    10. ' idx' → logprob: -5.635577201843262

Token 158: 'A' (ID: 32)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03382907435297966
    2. '=' → logprob: -3.4088289737701416
    3. 'A' → logprob: -9.158828735351562
    4. ',' → logprob: -10.158828735351562
    5. 's' → logprob: -12.033828735351562
    6. ' ' → logprob: -12.158828735351562
    7. ' =
' → logprob: -12.158828735351562
    8. ')' → logprob: -12.408828735351562
    9. 'a' → logprob: -13.033828735351562
    10. '0' → logprob: -13.158828735351562

Token 159: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14310027658939362
    2. '=' → logprob: -2.0181002616882324
    3. ',' → logprob: -7.768100261688232
    4. ' ,' → logprob: -14.01810073852539
    5. ')' → logprob: -15.01810073852539
    6. ' +=' → logprob: -15.76810073852539
    7. ' ' → logprob: -16.01810073852539
    8. ' =
' → logprob: -16.26810073852539
    9. ' =)' → logprob: -16.76810073852539
    10. '=len' → logprob: -17.01810073852539

Token 160: ' pointer' (ID: 16233)
  Prédit: 'pointer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pointer' → logprob: -0.1438787579536438
    2. ' pointer' → logprob: -2.018878698348999
    3. '0' → logprob: -6.893878936767578
    4. ' ' → logprob: -9.643878936767578
    5. 'p' → logprob: -11.018878936767578
    6. '_pointer' → logprob: -11.018878936767578
    7. 'ptr' → logprob: -11.143878936767578
    8. '=' → logprob: -11.393878936767578
    9. '(pointer' → logprob: -11.393878936767578
    10. '1' → logprob: -11.768878936767578

Token 161: 'B' (ID: 33)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9590506553649902
    2. 'A' → logprob: -0.9590506553649902
    3. ' =' → logprob: -1.4590506553649902
    4. ',' → logprob: -7.70905065536499
    5. 'B' → logprob: -8.334051132202148
    6. ' ' → logprob: -9.584051132202148
    7. '```' → logprob: -9.584051132202148
    8. ')' → logprob: -10.084051132202148
    9. '<|end|>' → logprob: -10.459051132202148
    10. ']' → logprob: -11.209051132202148

Token 162: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6936649680137634
    2. ' =' → logprob: -0.6936649680137634
    3. ',' → logprob: -7.568665027618408
    4. ' ,' → logprob: -15.56866455078125
    5. ' ' → logprob: -15.69366455078125
    6. '=int' → logprob: -15.69366455078125
    7. ')' → logprob: -16.06866455078125
    8. ' =
' → logprob: -16.19366455078125
    9. '=
' → logprob: -16.56866455078125
    10. '<|end|>' → logprob: -16.56866455078125

Token 163: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02062036842107773
    2. ' ' → logprob: -3.895620346069336
    3. '1' → logprob: -10.770620346069336
    4. 'init' → logprob: -11.020620346069336
    5. '(' → logprob: -11.770620346069336
    6. 'len' → logprob: -11.895620346069336
    7. '  ' → logprob: -12.395620346069336
    8. '   ' → logprob: -12.520620346069336
    9. ' (' → logprob: -12.645620346069336
    10. '-' → logprob: -12.645620346069336

Token 164: 'len' (ID: 3303)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00424520019441843
    2. 'init' → logprob: -5.754245281219482
    3. ' ' → logprob: -8.004244804382324
    4. '-' → logprob: -8.379244804382324
    5. 'len' → logprob: -9.129244804382324
    6. '1' → logprob: -9.379244804382324
    7. '
' → logprob: -9.379244804382324
    8. 'next' → logprob: -10.379244804382324
    9. 'None' → logprob: -10.379244804382324
    10. 'iter' → logprob: -11.129244804382324

Token 165: '(seq' (ID: 78669)
  Prédit: '(seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -0.20250414311885834
    2. '(' → logprob: -1.7025041580200195
    3. '(S' → logprob: -7.8275041580200195
    4. 'seq' → logprob: -8.20250415802002
    5. 'Left' → logprob: -8.32750415802002
    6. '(L' → logprob: -10.70250415802002
    7. '(sec' → logprob: -10.70250415802002
    8. 'Seq' → logprob: -10.95250415802002
    9. '(sequence' → logprob: -11.20250415802002
    10. '(s' → logprob: -11.45250415802002

Token 166: 'A' (ID: 32)
  Prédit: '(seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -0.2895876169204712
    2. 'A' → logprob: -1.4145876169204712
    3. 'seq' → logprob: -4.914587497711182
    4. '(A' → logprob: -7.414587497711182
    5. ')' → logprob: -8.78958797454834
    6. 'B' → logprob: -9.53958797454834
    7. '(' → logprob: -10.16458797454834
    8. ' seq' → logprob: -10.66458797454834
    9. '(pos' → logprob: -11.03958797454834
    10. '[' → logprob: -11.03958797454834

Token 167: ')],' (ID: 60559)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4553329646587372
    2. ')-' → logprob: -1.3303329944610596
    3. '),' → logprob: -2.3303329944610596
    4. ')]' → logprob: -6.2053327560424805
    5. ')],' → logprob: -6.8303327560424805
    6. '-' → logprob: -8.20533275604248
    7. ' )' → logprob: -8.45533275604248
    8. ')
' → logprob: -8.58033275604248
    9. '   ' → logprob: -9.45533275604248
    10. ' ' → logprob: -10.33033275604248

Token 168: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3111908733844757
    2. 'len' → logprob: -2.0611908435821533
    3. '[' → logprob: -2.9361908435821533
    4. '[len' → logprob: -3.1861908435821533
    5. ' ' → logprob: -3.3111908435821533
    6. ' [' → logprob: -5.311191082000732
    7. ' len' → logprob: -5.561191082000732
    8. '[N' → logprob: -9.186190605163574
    9. '[int' → logprob: -9.811190605163574
    10. '1' → logprob: -9.811190605163574

Token 169: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00479441462084651
    2. '0' → logprob: -5.379794597625732
    3. '-' → logprob: -9.504794120788574
    4. '(len' → logprob: -9.879794120788574
    5. 'init' → logprob: -11.629794120788574
    6. '1' → logprob: -11.754794120788574
    7. ' len' → logprob: -11.879794120788574
    8. '
' → logprob: -12.379794120788574
    9. '   ' → logprob: -12.629794120788574
    10. ']' → logprob: -13.004794120788574

Token 170: '(seq' (ID: 78669)
  Prédit: '(seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -0.00031949623371474445
    2. 'seq' → logprob: -8.250319480895996
    3. '(' → logprob: -10.375319480895996
    4. ')' → logprob: -12.000319480895996
    5. '(sequence' → logprob: -12.125319480895996
    6. ' seq' → logprob: -12.875319480895996
    7. ']' → logprob: -13.125319480895996
    8. ' (' → logprob: -13.375319480895996
    9. '(se' → logprob: -13.375319480895996
    10. '(
' → logprob: -13.375319480895996

Token 171: 'B' (ID: 33)
  Prédit: '(seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -0.639947772026062
    2. 'A' → logprob: -1.389947772026062
    3. 'B' → logprob: -2.1399478912353516
    4. 'seq' → logprob: -2.2649478912353516
    5. ')' → logprob: -6.639947891235352
    6. ' seq' → logprob: -8.764947891235352
    7. ')-' → logprob: -9.264947891235352
    8. '))' → logprob: -9.264947891235352
    9. ')]' → logprob: -9.389947891235352
    10. '.seq' → logprob: -9.639947891235352

Token 172: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.15881188213825226
    2. ')' → logprob: -2.5338118076324463
    3. ']' → logprob: -2.7838118076324463
    4. '])' → logprob: -6.283812046051025
    5. '-' → logprob: -6.408812046051025
    6. ')])' → logprob: -7.408812046051025
    7. ')-' → logprob: -7.533812046051025
    8. '])]' → logprob: -8.033811569213867
    9. ']-' → logprob: -8.158811569213867
    10. ' -' → logprob: -9.033811569213867

Token 173: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5568018555641174
    2. '<|end|>' → logprob: -1.0568017959594727
    3. ',' → logprob: -3.6818017959594727
    4. ')' → logprob: -3.9318017959594727
    5. ' ' → logprob: -4.431801795959473
    6. '[' → logprob: -5.306801795959473
    7. '<|end|>' → logprob: -5.681801795959473
    8. 'def' → logprob: -6.056801795959473
    9. '  ' → logprob: -6.306801795959473
    10. '    ' → logprob: -6.556801795959473

Token 174: ' indices' (ID: 30378)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 175: 'A' (ID: 32)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5354005098342896
    2. '=' → logprob: -0.9104005098342896
    3. ',' → logprob: -5.160400390625
    4. '   ' → logprob: -6.160400390625
    5. ')' → logprob: -6.410400390625
    6. '[' → logprob: -7.410400390625
    7. '.' → logprob: -8.160400390625
    8. ':' → logprob: -8.285400390625
    9. '=[]' → logprob: -8.410400390625
    10. '<|end|>' → logprob: -8.410400390625

Token 176: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07671882957220078
    2. '=' → logprob: -2.701718807220459
    3. ',' → logprob: -5.076718807220459
    4. ' ,' → logprob: -9.076719284057617
    5. '   ' → logprob: -9.326719284057617
    6. '[' → logprob: -9.451719284057617
    7. ')' → logprob: -9.701719284057617
    8. ' +=' → logprob: -10.576719284057617
    9. '=[]' → logprob: -10.701719284057617
    10. '.append' → logprob: -10.951719284057617

Token 177: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -1.2255418300628662
    2. 'list' → logprob: -1.2255418300628662
    3. '[' → logprob: -1.9755418300628662
    4. '[]' → logprob: -2.725541830062866
    5. 'set' → logprob: -3.225541830062866
    6. ' [' → logprob: -3.225541830062866
    7. ' set' → logprob: -3.850541830062866
    8. 'indices' → logprob: -3.975541830062866
    9. ' []' → logprob: -4.100542068481445
    10. '[list' → logprob: -4.600542068481445

Token 178: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.09816744923591614
    2. '(chain' → logprob: -2.4731674194335938
    3. '(re' → logprob: -5.848167419433594
    4. '(indices' → logprob: -6.598167419433594
    5. '()' → logprob: -6.848167419433594
    6. '(pointer' → logprob: -6.848167419433594
    7. '(sequence' → logprob: -6.973167419433594
    8. '(' → logprob: -7.223167419433594
    9. '(map' → logprob: -8.223167419433594
    10. '(seq' → logprob: -8.473167419433594

Token 179: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.031235182657837868
    2. 'len' → logprob: -4.656235218048096
    3. '(N' → logprob: -4.656235218048096
    4. '(pointer' → logprob: -4.781235218048096
    5. 'pointer' → logprob: -6.156235218048096
    6. 'N' → logprob: -7.281235218048096
    7. '(' → logprob: -8.531234741210938
    8. '[len' → logprob: -9.031234741210938
    9. '(n' → logprob: -9.406234741210938
    10. '(-' → logprob: -10.531234741210938

Token 180: '(seq' (ID: 78669)
  Prédit: '(seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -0.0006405997555702925
    2. 'seq' → logprob: -7.625640392303467
    3. '(indices' → logprob: -9.625640869140625
    4. '(' → logprob: -10.000640869140625
    5. '(se' → logprob: -12.000640869140625
    6. '(sequence' → logprob: -12.250640869140625
    7. '(sec' → logprob: -12.500640869140625
    8. ')' → logprob: -12.500640869140625
    9. '(s' → logprob: -13.000640869140625
    10. '(pos' → logprob: -13.250640869140625

Token 181: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.24033679068088531
    2. '(seq' → logprob: -1.6153367757797241
    3. 'seq' → logprob: -4.240336894989014
    4. ')' → logprob: -9.115336418151855
    5. 'B' → logprob: -9.615336418151855
    6. ' seq' → logprob: -9.740336418151855
    7. 'Seq' → logprob: -9.990336418151855
    8. '(' → logprob: -10.240336418151855
    9. 'aseq' → logprob: -11.240336418151855
    10. '.seq' → logprob: -11.927836418151855

Token 182: ')))
' (ID: 12562)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0010532920714467764
    2. '))
' → logprob: -7.751053333282471
    3. ' ))' → logprob: -8.001052856445312
    4. ')))' → logprob: -8.626052856445312
    5. '));' → logprob: -10.251052856445312
    6. '))

' → logprob: -10.751052856445312
    7. '))[' → logprob: -11.001052856445312
    8. '()))' → logprob: -11.626052856445312
    9. ',' → logprob: -12.251052856445312
    10. ')' → logprob: -12.251052856445312

Token 183: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7434950470924377
    2. '   ' → logprob: -0.8684950470924377
    3. '<|end|>' → logprob: -2.368494987487793
    4. 'def' → logprob: -6.243494987487793
    5. '[' → logprob: -6.243494987487793
    6. '<|end|>' → logprob: -6.618494987487793
    7. ',' → logprob: -6.743494987487793
    8. ' ' → logprob: -7.368494987487793
    9. '    
' → logprob: -7.493494987487793
    10. '
' → logprob: -7.618494987487793

Token 184: ' indices' (ID: 30378)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24821437895298004
    2. ')' → logprob: -2.4982144832611084
    3. '[' → logprob: -2.8732144832611084
    4. '```' → logprob: -3.4982144832611084
    5. ':' → logprob: -4.498214244842529
    6. ',' → logprob: -5.123214244842529
    7. 'def' → logprob: -5.373214244842529
    8. '\t' → logprob: -5.998214244842529
    9. '<|end|>' → logprob: -5.998214244842529
    10. '):' → logprob: -6.123214244842529

Token 185: 'B' (ID: 33)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.13693121075630188
    2. '=' → logprob: -2.1369311809539795
    3. ' =' → logprob: -5.136931419372559
    4. '[' → logprob: -6.511931419372559
    5. ')' → logprob: -7.011931419372559
    6. ',' → logprob: -7.386931419372559
    7. 'B' → logprob: -8.136931419372559
    8. '   ' → logprob: -9.011931419372559
    9. '<|end|>' → logprob: -9.011931419372559
    10. '=[]' → logprob: -9.386931419372559

Token 186: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08379340171813965
    2. '=' → logprob: -2.7087934017181396
    3. ')' → logprob: -4.458793640136719
    4. '<|end|>' → logprob: -6.583793640136719
    5. ',' → logprob: -8.208793640136719
    6. ')=' → logprob: -9.083793640136719
    7. '<|end|>' → logprob: -9.208793640136719
    8. '=[]' → logprob: -9.833793640136719
    9. '[' → logprob: -9.958793640136719
    10. ']' → logprob: -10.083793640136719

Token 187: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.004627837799489498
    2. ' list' → logprob: -5.379627704620361
    3. 'range' → logprob: -12.75462818145752
    4. 'len' → logprob: -12.87962818145752
    5. '[list' → logprob: -13.75462818145752
    6. '[' → logprob: -14.25462818145752
    7. '(list' → logprob: -15.25462818145752
    8. ' range' → logprob: -17.004627227783203
    9. '=list' → logprob: -17.379627227783203
    10. ' ' → logprob: -17.379627227783203

Token 188: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -5.080963092041202e-06
    2. 'range' → logprob: -12.250004768371582
    3. '(len' → logprob: -15.625004768371582
    4. '(' → logprob: -16.0000057220459
    5. '(re' → logprob: -17.7500057220459
    6. '	range' → logprob: -18.6250057220459
    7. '(reverse' → logprob: -20.2500057220459
    8. ' range' → logprob: -20.2500057220459
    9. '(list' → logprob: -20.6250057220459
    10. '(zip' → logprob: -20.7500057220459

Token 189: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.005340963136404753
    2. 'len' → logprob: -5.255341053009033
    3. '[len' → logprob: -9.380340576171875
    4. '(' → logprob: -11.880340576171875
    5. 'pointer' → logprob: -12.880340576171875
    6. '<len' → logprob: -12.880340576171875
    7. '(pointer' → logprob: -13.005340576171875
    8. ',len' → logprob: -13.380340576171875
    9. '=len' → logprob: -13.505340576171875
    10. '   ' → logprob: -13.630340576171875

Token 190: '(seq' (ID: 78669)
  Prédit: '(seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -0.0012282043462619185
    2. 'seq' → logprob: -6.751228332519531
    3. '(' → logprob: -11.001228332519531
    4. '(indices' → logprob: -11.126228332519531
    5. ')' → logprob: -11.626228332519531
    6. 'pointer' → logprob: -13.001228332519531
    7. '(se' → logprob: -13.501228332519531
    8. '(sequence' → logprob: -13.501228332519531
    9. '```' → logprob: -13.626228332519531
    10. 'indices' → logprob: -13.626228332519531

Token 191: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.24769295752048492
    2. '(seq' → logprob: -1.7476929426193237
    3. 'A' → logprob: -3.1226930618286133
    4. 'seq' → logprob: -6.872693061828613
    5. '(' → logprob: -10.372693061828613
    6. ' seq' → logprob: -10.497693061828613
    7. '(sequence' → logprob: -10.872693061828613
    8. 'Seq' → logprob: -10.997693061828613
    9. ')' → logprob: -11.872693061828613
    10. '_seq' → logprob: -12.435193061828613

Token 192: ')))
' (ID: 12562)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0007354161934927106
    2. '))
' → logprob: -7.750735282897949
    3. ' ))' → logprob: -9.25073528289795
    4. ')))' → logprob: -9.37573528289795
    5. ')' → logprob: -10.37573528289795
    6. '))

' → logprob: -11.25073528289795
    7. ',' → logprob: -11.37573528289795
    8. '+' → logprob: -11.75073528289795
    9. ']))' → logprob: -11.75073528289795
    10. '),' → logprob: -11.75073528289795

Token 193: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 194: ' flag' (ID: 9641)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3334731161594391
    2. ' ' → logprob: -2.5834732055664062
    3. ')' → logprob: -2.7084732055664062
    4. '<|end|>' → logprob: -2.7084732055664062
    5. '    ' → logprob: -4.083473205566406
    6. '[' → logprob: -4.208473205566406
    7. ',' → logprob: -4.833473205566406
    8. 'def' → logprob: -4.958473205566406
    9. '  ' → logprob: -5.583473205566406
    10. ' 
' → logprob: -5.583473205566406

Token 195: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0017196849221363664
    2. ' =' → logprob: -7.1267194747924805
    3. 's' → logprob: -7.6267194747924805
    4. '_A' → logprob: -8.37671947479248
    5. '_' → logprob: -9.75171947479248
    6. '=' → logprob: -10.00171947479248
    7. '_a' → logprob: -10.62671947479248
    8. '   ' → logprob: -10.75171947479248
    9. ')' → logprob: -11.00171947479248
    10. ' A' → logprob: -12.12671947479248

Token 196: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3143959045410156
    2. '=' → logprob: -1.3143959045410156
    3. ',' → logprob: -6.939395904541016
    4. '[' → logprob: -9.314395904541016
    5. '   ' → logprob: -10.439395904541016
    6. '=True' → logprob: -10.939395904541016
    7. '=False' → logprob: -11.814395904541016
    8. ')' → logprob: -11.814395904541016
    9. ' ,' → logprob: -12.814395904541016
    10. ' ' → logprob: -13.439395904541016

Token 197: ' flag' (ID: 9641)
  Prédit: ' flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flag' → logprob: -0.6186614632606506
    2. 'flag' → logprob: -0.8686614632606506
    3. 'False' → logprob: -3.993661403656006
    4. ' False' → logprob: -4.118661403656006
    5. ' True' → logprob: -5.493661403656006
    6. 'True' → logprob: -6.743661403656006
    7. ' =' → logprob: -7.243661403656006
    8. '=False' → logprob: -7.993661403656006
    9. '=True' → logprob: -8.993661880493164
    10. '=' → logprob: -9.118661880493164

Token 198: 'B' (ID: 33)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3403254449367523
    2. ' =' → logprob: -1.8403254747390747
    3. 'A' → logprob: -2.090325355529785
    4. '=True' → logprob: -5.340325355529785
    5. '=False' → logprob: -6.840325355529785
    6. '_A' → logprob: -10.090325355529785
    7. ',' → logprob: -10.590325355529785
    8. ' ' → logprob: -11.090325355529785
    9. '_' → logprob: -11.090325355529785
    10. '=_' → logprob: -11.340325355529785

Token 199: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01105878408998251
    2. ' =' → logprob: -4.511058807373047
    3. ',' → logprob: -11.511058807373047
    4. '=True' → logprob: -14.386058807373047
    5. '=False' → logprob: -15.761058807373047
    6. '=

' → logprob: -16.511058807373047
    7. '=
' → logprob: -16.636058807373047
    8. ')' → logprob: -17.261058807373047
    9. '=}' → logprob: -17.386058807373047
    10. ' ' → logprob: -17.511058807373047

Token 200: ' [' (ID: 723)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.7365291118621826
    2. ' init' → logprob: -1.2365291118621826
    3. 'False' → logprob: -1.9865291118621826
    4. ' False' → logprob: -3.3615291118621826
    5. 'True' → logprob: -3.3615291118621826
    6. ' True' → logprob: -3.9865291118621826
    7. '   ' → logprob: -6.236529350280762
    8. '[' → logprob: -6.611529350280762
    9. ' [' → logprob: -7.236529350280762
    10. '0' → logprob: -7.736529350280762

Token 201: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.03348339721560478
    2. 'False' → logprob: -3.5334835052490234
    3. 'True' → logprob: -6.158483505249023
    4. '0' → logprob: -7.533483505249023
    5. ']' → logprob: -7.533483505249023
    6. ' init' → logprob: -8.783483505249023
    7. '   ' → logprob: -10.033483505249023
    8. 'None' → logprob: -10.033483505249023
    9. '(init' → logprob: -10.283483505249023
    10. 'int' → logprob: -10.283483505249023

Token 202: '_flag' (ID: 25269)
  Prédit: '_flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flag' → logprob: -4.727905979962088e-05
    2. '_' → logprob: -10.87504768371582
    3. '_FLAG' → logprob: -11.87504768371582
    4. 'Flag' → logprob: -12.25004768371582
    5. '_F' → logprob: -12.75004768371582
    6. '_flags' → logprob: -13.25004768371582
    7. 'flag' → logprob: -13.50004768371582
    8. 'A' → logprob: -13.62504768371582
    9. '_A' → logprob: -13.62504768371582
    10. '```' → logprob: -13.62504768371582

Token 203: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0003754999197553843
    2. ',' → logprob: -8.875375747680664
    3. '])' → logprob: -10.125375747680664
    4. 'B' → logprob: -10.250375747680664
    5. '],' → logprob: -10.625375747680664
    6. ']' → logprob: -10.750375747680664
    7. 'True' → logprob: -10.750375747680664
    8. ')' → logprob: -11.375375747680664
    9. 'False' → logprob: -11.625375747680664
    10. ' ,' → logprob: -11.875375747680664

Token 204: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.39126986265182495
    2. '],' → logprob: -1.1412699222564697
    3. ']' → logprob: -6.016269683837891
    4. ' ,' → logprob: -7.141269683837891
    5. '],[' → logprob: -7.516269683837891
    6. ' ],' → logprob: -7.641269683837891
    7. '   ' → logprob: -9.51626968383789
    8. '[' → logprob: -11.14126968383789
    9. '),' → logprob: -11.89126968383789
    10. ' ' → logprob: -12.14126968383789

Token 205: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.062138427048921585
    2. ' [' → logprob: -2.812138319015503
    3. 'init' → logprob: -8.937138557434082
    4. ' init' → logprob: -10.562138557434082
    5. '   ' → logprob: -11.812138557434082
    6. ' ' → logprob: -13.312138557434082
    7. '    ' → logprob: -13.937138557434082
    8. '(init' → logprob: -14.062138557434082
    9. '  ' → logprob: -14.187138557434082
    10. '[int' → logprob: -15.062138557434082

Token 206: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.00033320096554234624
    2. ' init' → logprob: -8.125332832336426
    3. '   ' → logprob: -11.625332832336426
    4. '(init' → logprob: -11.625332832336426
    5. '_init' → logprob: -12.750332832336426
    6. '
' → logprob: -12.875332832336426
    7. '	init' → logprob: -13.000332832336426
    8. '  ' → logprob: -13.375332832336426
    9. ')init' → logprob: -13.375332832336426
    10. 'import' → logprob: -14.000332832336426

Token 207: '_flag' (ID: 25269)
  Prédit: '_flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flag' → logprob: -0.00031854258850216866
    2. 'flag' → logprob: -8.12531852722168
    3. 'Flag' → logprob: -11.00031852722168
    4. '_FLAG' → logprob: -13.87531852722168
    5. '
' → logprob: -14.25031852722168
    6. '```' → logprob: -14.37531852722168
    7. '_f' → logprob: -14.37531852722168
    8. '_' → logprob: -14.62531852722168
    9. '=False' → logprob: -14.87531852722168
    10. 'A' → logprob: -15.00031852722168

Token 208: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -2.6656825866666622e-05
    2. 'A' → logprob: -11.25002670288086
    3. '_B' → logprob: -11.75002670288086
    4. '_flag' → logprob: -14.37502670288086
    5. ' B' → logprob: -14.50002670288086
    6. ']' → logprob: -14.62502670288086
    7. '])' → logprob: -14.62502670288086
    8. '
' → logprob: -14.75002670288086
    9. ')' → logprob: -14.75002670288086
    10. '

' → logprob: -15.00002670288086

Token 209: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4153803288936615
    2. ')' → logprob: -1.1653803586959839
    3. '   ' → logprob: -3.6653802394866943
    4. '])' → logprob: -6.540380477905273
    5. '<|end|>' → logprob: -7.915380477905273
    6. ')]' → logprob: -8.165380477905273
    7. ']
' → logprob: -8.915380477905273
    8. ',' → logprob: -9.415380477905273
    9. ')
' → logprob: -10.290380477905273
    10. ' ]' → logprob: -10.415380477905273

Token 210: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1329931914806366
    2. '<|end|>' → logprob: -2.257993221282959
    3. ')' → logprob: -4.632993221282959
    4. '    
' → logprob: -5.632993221282959
    5. ',' → logprob: -6.757993221282959
    6. '    ' → logprob: -6.882993221282959
    7. '<|end|>' → logprob: -7.132993221282959
    8. ' 
' → logprob: -7.382993221282959
    9. ' ' → logprob: -7.382993221282959
    10. 'def' → logprob: -8.2579927444458

Token 211: ' val' (ID: 1459)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1496836096048355
    2. ')' → logprob: -2.524683713912964
    3. ' ' → logprob: -4.524683475494385
    4. ':' → logprob: -4.899683475494385
    5. ',' → logprob: -4.899683475494385
    6. ' 
' → logprob: -5.399683475494385
    7. '<|end|>' → logprob: -5.524683475494385
    8. '\t' → logprob: -5.774683475494385
    9. '[' → logprob: -6.024683475494385
    10. '    
' → logprob: -6.274683475494385

Token 212: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4807012379169464
    2. '=' → logprob: -1.355701208114624
    3. 'ues' → logprob: -2.605701208114624
    4. 'ue' → logprob: -3.605701208114624
    5. ' =' → logprob: -3.980701208114624
    6. 'id' → logprob: -6.855701446533203
    7. ',' → logprob: -7.480701446533203
    8. 'u' → logprob: -7.605701446533203
    9. '=[]' → logprob: -7.980701446533203
    10. 'uer' → logprob: -8.105701446533203

Token 213: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20590361952781677
    2. ' ' → logprob: -2.0809035301208496
    3. ' float' → logprob: -4.08090353012085
    4. ' None' → logprob: -4.70590353012085
    5. 'float' → logprob: -5.20590353012085
    6. '-' → logprob: -5.45590353012085
    7. 'None' → logprob: -5.45590353012085
    8. ' [' → logprob: -5.58090353012085
    9. 'False' → logprob: -5.83090353012085
    10. '[' → logprob: -5.95590353012085

Token 214: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17365391552448273
    2. 'float' → logprob: -2.2986538410186768
    3. '-' → logprob: -3.5486538410186768
    4. 'None' → logprob: -4.048654079437256
    5. 'False' → logprob: -4.798654079437256
    6. 'pos' → logprob: -7.298654079437256
    7. 'seq' → logprob: -7.548654079437256
    8. 'max' → logprob: -7.548654079437256
    9. '[]' → logprob: -7.798654079437256
    10. ' ' → logprob: -8.048653602600098

Token 215: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007933334447443485
    2. ',' → logprob: -5.632933139801025
    3. ' ]' → logprob: -5.757933139801025
    4. ')' → logprob: -7.757933139801025
    5. ']
' → logprob: -7.757933139801025
    6. '   ' → logprob: -9.632933616638184
    7. ')]' → logprob: -9.632933616638184
    8. ',
' → logprob: -9.882933616638184
    9. '<|end|>' → logprob: -10.507933616638184
    10. '])' → logprob: -10.632933616638184

Token 216: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 217: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7325518131256104
    2. ')' → logprob: -0.9825518131256104
    3. ' ' → logprob: -3.3575518131256104
    4. ',' → logprob: -3.6075518131256104
    5. '<|end|>' → logprob: -4.107551574707031
    6. '\t' → logprob: -4.607551574707031
    7. '    ' → logprob: -4.982551574707031
    8. ':' → logprob: -5.232551574707031
    9. '[' → logprob: -5.232551574707031
    10. '.' → logprob: -5.482551574707031

Token 218: ' pop' (ID: 2735)
  Prédit: ' helper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' helper' → logprob: -0.5203536152839661
    2. ' update' → logprob: -1.8953535556793213
    3. ' inner' → logprob: -2.3953535556793213
    4. ' merge' → logprob: -3.1453535556793213
    5. ' step' → logprob: -4.0203537940979
    6. 'update' → logprob: -4.6453537940979
    7. ' f' → logprob: -4.6453537940979
    8. ' combine' → logprob: -4.8953537940979
    9. ' next' → logprob: -4.8953537940979
    10. ' func' → logprob: -5.1453537940979

Token 219: '_top' (ID: 23394)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.07473823428153992
    2. '()' → logprob: -2.6997382640838623
    3. '():
' → logprob: -6.324738025665283
    4. '(' → logprob: -6.699738025665283
    5. '_' → logprob: -7.324738025665283
    6. ' ():' → logprob: -8.074738502502441
    7. '()(' → logprob: -8.824738502502441
    8. ']()' → logprob: -9.449738502502441
    9. '():

' → logprob: -9.574738502502441
    10. '()]' → logprob: -9.949738502502441

Token 220: '(s' (ID: 1858)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0012091610115021467
    2. '():
' → logprob: -7.376209259033203
    3. '()' → logprob: -8.126209259033203
    4. ' ():' → logprob: -8.626209259033203
    5. '(' → logprob: -9.251209259033203
    6. '(stack' → logprob: -12.501209259033203
    7. '():
' → logprob: -13.501209259033203
    8. '():

' → logprob: -14.001209259033203
    9. ' ()' → logprob: -14.376209259033203
    10. '(a' → logprob: -14.501209259033203

Token 221: 'q' (ID: 80)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.021986903622746468
    2. '):' → logprob: -4.521986961364746
    3. '):
' → logprob: -4.771986961364746
    4. 'ts' → logprob: -6.771986961364746
    5. '):

' → logprob: -7.646986961364746
    6. ')' → logprob: -7.896986961364746
    7. 'tar' → logprob: -10.146986961364746
    8. ')t' → logprob: -10.146986961364746
    9. '):
' → logprob: -10.271986961364746
    10. 'eq' → logprob: -10.271986961364746

Token 222: ',' (ID: 11)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.27830326557159424
    2. '):' → logprob: -2.2783031463623047
    3. '):
' → logprob: -2.7783031463623047
    4. 'q' → logprob: -3.7783031463623047
    5. 'eq' → logprob: -3.7783031463623047
    6. ')' → logprob: -4.778303146362305
    7. 'u' → logprob: -4.903303146362305
    8. 'ence' → logprob: -5.028303146362305
    9. '):

' → logprob: -6.153303146362305
    10. 's' → logprob: -6.778303146362305

Token 223: ' p' (ID: 275)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.5287315845489502
    2. ' idx' → logprob: -1.5287315845489502
    3. 'flag' → logprob: -2.40373158454895
    4. 'pos' → logprob: -3.77873158454895
    5. 'stack' → logprob: -4.028731346130371
    6. 'index' → logprob: -4.403731346130371
    7. ' stack' → logprob: -4.528731346130371
    8. ' flag' → logprob: -4.778731346130371
    9. 'lst' → logprob: -5.028731346130371
    10. 'i' → logprob: -5.903731346130371

Token 224: '):' (ID: 3127)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.07271303236484528
    2. 'tr' → logprob: -3.3227131366729736
    3. 'op' → logprob: -4.6977128982543945
    4. '):
' → logprob: -5.1977128982543945
    5. 'ointer' → logprob: -5.5727128982543945
    6. 'osition' → logprob: -5.8227128982543945
    7. ',' → logprob: -5.9477128982543945
    8. '):' → logprob: -5.9477128982543945
    9. 'ops' → logprob: -6.0727128982543945
    10. ')' → logprob: -6.8227128982543945

Token 225: ' sq' (ID: 24743)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023013915866613388
    2. '   ' → logprob: -3.8980138301849365
    3. '
' → logprob: -6.898014068603516
    4. '    ' → logprob: -7.648014068603516
    5. '<|end|>' → logprob: -8.523014068603516
    6. ' return' → logprob: -9.148014068603516
    7. '[' → logprob: -9.273014068603516
    8. '    
' → logprob: -9.398014068603516
    9. '[]' → logprob: -9.773014068603516
    10. ')' → logprob: -9.898014068603516

Token 226: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.022051973268389702
    2. 'op' → logprob: -4.022051811218262
    3. '[-' → logprob: -6.897051811218262
    4. '[p' → logprob: -7.272051811218262
    5. '.p' → logprob: -7.522051811218262
    6. '.' → logprob: -7.647051811218262
    7. '.op' → logprob: -8.397051811218262
    8. '.append' → logprob: -8.397051811218262
    9. ' .' → logprob: -9.147051811218262
    10. 's' → logprob: -9.147051811218262

Token 227: '();' (ID: 4177)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.015166230499744415
    2. '(-' → logprob: -4.640166282653809
    3. '(' → logprob: -5.640166282653809
    4. '()
' → logprob: -6.890166282653809
    5. '()-' → logprob: -7.515166282653809
    6. '()]' → logprob: -9.140166282653809
    7. '(),' → logprob: -10.515166282653809
    8. '()

' → logprob: -10.515166282653809
    9. '();' → logprob: -10.765166282653809
    10. '(p' → logprob: -10.765166282653809

Token 228: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.5773677229881287
    2. ' pointer' → logprob: -1.5773677825927734
    3. ' pos' → logprob: -1.9523677825927734
    4. ' val' → logprob: -2.9523677825927734
    5. ' return' → logprob: -4.452367782592773
    6. 'pointer' → logprob: -5.077367782592773
    7. ' flag' → logprob: -5.202367782592773
    8. 'p' → logprob: -5.327367782592773
    9. 'pos' → logprob: -5.702367782592773
    10. ' ptr' → logprob: -6.702367782592773

Token 229: '[' (ID: 58)
  Prédit: '.pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.34765002131462097
    2. '[-' → logprob: -1.3476500511169434
    3. '-' → logprob: -4.347650051116943
    4. '.append' → logprob: -4.597650051116943
    5. '[' → logprob: -4.847650051116943
    6. '-=' → logprob: -7.347650051116943
    7. 'pop' → logprob: -7.472650051116943
    8. ' -=' → logprob: -7.847650051116943
    9. '[p' → logprob: -8.472649574279785
    10. '[len' → logprob: -9.097649574279785

Token 230: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004083891399204731
    2. '-' → logprob: -8.000408172607422
    3. ' ' → logprob: -9.625408172607422
    4. ' -' → logprob: -13.250408172607422
    5. ']' → logprob: -13.500408172607422
    6. '   ' → logprob: -14.250408172607422
    7. '
' → logprob: -14.250408172607422
    8. '=' → logprob: -14.625408172607422
    9. '])' → logprob: -15.125408172607422
    10. ':' → logprob: -15.125408172607422

Token 231: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2349003702402115
    2. '-=' → logprob: -2.48490047454834
    3. ' -=' → logprob: -2.98490047454834
    4. '-' → logprob: -2.98490047454834
    5. ']-' → logprob: -4.23490047454834
    6. ']+=' → logprob: -4.73490047454834
    7. '[' → logprob: -6.98490047454834
    8. '+=' → logprob: -8.60990047454834
    9. ' ]' → logprob: -9.23490047454834
    10. '```' → logprob: -9.35990047454834

Token 232: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.18785376846790314
    2. ' -=' → logprob: -1.9378538131713867
    3. '+=' → logprob: -3.6878538131713867
    4. ' +=' → logprob: -6.812853813171387
    5. '-' → logprob: -7.437853813171387
    6. '=' → logprob: -7.562853813171387
    7. ' ' → logprob: -11.562853813171387
    8. '[' → logprob: -13.062853813171387
    9. '  ' → logprob: -13.437853813171387
    10. '   ' → logprob: -13.562853813171387

Token 233: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017023178515955806
    2. ' ' → logprob: -6.376702308654785
    3. '   ' → logprob: -16.1267032623291
    4. '  ' → logprob: -16.8767032623291
    5. '
' → logprob: -18.5017032623291
    6. ' ' → logprob: -19.0017032623291
    7. '```' → logprob: -19.6267032623291
    8. '0' → logprob: -20.5017032623291
    9. '    ' → logprob: -20.6267032623291
    10. '<|end|>' → logprob: -21.1267032623291

Token 234: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9266199160483666e-05
    2. ' ' → logprob: -10.875019073486328
    3. '
' → logprob: -16.000019073486328
    4. '   ' → logprob: -16.750019073486328
    5. '  ' → logprob: -18.125019073486328
    6. '<|end|>' → logprob: -18.875019073486328
    7. '```' → logprob: -18.875019073486328
    8. '0' → logprob: -19.125019073486328
    9. '

' → logprob: -19.250019073486328
    10. ')' → logprob: -20.125019073486328

Token 235: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21148107945919037
    2. '<|end|>' → logprob: -1.7114810943603516
    3. '   ' → logprob: -5.961481094360352
    4. ')' → logprob: -6.211481094360352
    5. '<|end|>' → logprob: -6.961481094360352
    6. ' 
' → logprob: -6.961481094360352
    7. '    
' → logprob: -7.336481094360352
    8. '\n' → logprob: -7.461481094360352
    9. '  
' → logprob: -7.461481094360352
    10. '' → logprob: -8.211481094360352

Token 236: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 237: ' switch' (ID: 6160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02277039736509323
    2. '<|end|>' → logprob: -4.772770404815674
    3. '    
' → logprob: -5.897770404815674
    4. 'def' → logprob: -6.397770404815674
    5. '    ' → logprob: -6.397770404815674
    6. ')' → logprob: -6.647770404815674
    7. ',' → logprob: -6.647770404815674
    8. ' 
' → logprob: -7.022770404815674
    9. '
' → logprob: -7.022770404815674
    10. '[' → logprob: -7.897770404815674

Token 238: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4114578664302826
    2. '(' → logprob: -2.4114577770233154
    3. ' =' → logprob: -2.7864577770233154
    4. ' (' → logprob: -2.9114577770233154
    5. '()' → logprob: -3.6614577770233154
    6. '(s' → logprob: -3.7864577770233154
    7. '_flag' → logprob: -4.1614580154418945
    8. ' _' → logprob: -4.6614580154418945
    9. '=' → logprob: -4.9114580154418945
    10. ' ' → logprob: -5.1614580154418945

Token 239: ' cycle' (ID: 15839)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.2149690389633179
    2. ' lambda' → logprob: -1.3399690389633179
    3. 'lambda' → logprob: -1.8399690389633179
    4. 'True' → logprob: -2.2149691581726074
    5. ' True' → logprob: -2.5899691581726074
    6. ' False' → logprob: -3.2149691581726074
    7. '0' → logprob: -4.339969158172607
    8. '   ' → logprob: -4.714969158172607
    9. '(lambda' → logprob: -4.839969158172607
    10. ' not' → logprob: -5.089969158172607

Token 240: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.1637372076511383
    2. '(['' → logprob: -2.0387372970581055
    3. '((' → logprob: -4.4137372970581055
    4. '([(' → logprob: -5.7887372970581055
    5. '(('' → logprob: -6.2887372970581055
    6. '(([' → logprob: -6.6637372970581055
    7. '([
' → logprob: -7.0387372970581055
    8. '([{' → logprob: -7.9137372970581055
    9. '(' → logprob: -8.038737297058105
    10. '(["' → logprob: -8.413737297058105

Token 241: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.30325010418891907
    2. ''' → logprob: -2.8032500743865967
    3. '(' → logprob: -2.9282500743865967
    4. 'True' → logprob: -3.1782500743865967
    5. '1' → logprob: -3.5532500743865967
    6. ''A' → logprob: -3.9282500743865967
    7. 'False' → logprob: -4.553250312805176
    8. 'pointer' → logprob: -4.803250312805176
    9. '"' → logprob: -5.053250312805176
    10. '(True' → logprob: -5.428250312805176

Token 242: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014297593152150512
    2. '])' → logprob: -6.876429557800293
    3. ' ,' → logprob: -8.501429557800293
    4. ',
' → logprob: -8.876429557800293
    5. '1' → logprob: -11.001429557800293
    6. '])]' → logprob: -11.626429557800293
    7. ')])' → logprob: -11.876429557800293
    8. ']' → logprob: -12.376429557800293
    9. ' ])' → logprob: -12.751429557800293
    10. ' ' → logprob: -12.876429557800293

Token 243: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007611005567014217
    2. ' ' → logprob: -4.88261079788208
    3. '   ' → logprob: -12.757611274719238
    4. '  ' → logprob: -13.507611274719238
    5. '
' → logprob: -16.070110321044922
    6. '    ' → logprob: -16.195110321044922
    7. '])' → logprob: -16.445110321044922
    8. '```' → logprob: -16.632610321044922
    9. ' ' → logprob: -17.070110321044922
    10. '     ' → logprob: -17.445110321044922

Token 244: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00026860725483857095
    2. '])
' → logprob: -8.750268936157227
    3. ')])' → logprob: -10.500268936157227
    4. ',' → logprob: -10.625268936157227
    5. '])]' → logprob: -10.625268936157227
    6. ' ])' → logprob: -11.125268936157227
    7. ')' → logprob: -12.000268936157227
    8. ']))' → logprob: -13.125268936157227
    9. ')]' → logprob: -13.375268936157227
    10. '   ' → logprob: -13.500268936157227

Token 245: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20030106604099274
    2. '<|end|>' → logprob: -2.450301170349121
    3. '
' → logprob: -2.825301170349121
    4. '    
' → logprob: -4.200301170349121
    5. ',' → logprob: -5.200301170349121
    6. '<|end|>' → logprob: -5.700301170349121
    7. ')' → logprob: -5.825301170349121
    8. '    ' → logprob: -6.200301170349121
    9. ' 
' → logprob: -6.200301170349121
    10. 'def' → logprob: -6.825301170349121

Token 246: ' id' (ID: 1211)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1766858696937561
    2. ' while' → logprob: -2.6766858100891113
    3. 'while' → logprob: -3.4266858100891113
    4. ' for' → logprob: -3.6766858100891113
    5. ')' → logprob: -4.551685810089111
    6. 'for' → logprob: -5.176685810089111
    7. 'def' → logprob: -6.051685810089111
    8. '    
' → logprob: -6.051685810089111
    9. '    ' → logprob: -6.051685810089111
    10. ' ' → logprob: -6.301685810089111

Token 247: 'A' (ID: 32)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0003820524725597352
    2. '=' → logprob: -8.625382423400879
    3. ' =' → logprob: -9.250382423400879
    4. '_' → logprob: -9.875382423400879
    5. '_=' → logprob: -11.125382423400879
    6. 'xs' → logprob: -11.250382423400879
    7. '_iter' → logprob: -12.250382423400879
    8. 'ex' → logprob: -12.250382423400879
    9. 'xes' → logprob: -12.625382423400879
    10. 's' → logprob: -13.250382423400879

Token 248: ',' (ID: 11)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.05473749712109566
    2. ' =' → logprob: -3.3047375679016113
    3. '=' → logprob: -4.429737567901611
    4. ',' → logprob: -5.429737567901611
    5. 'ex' → logprob: -8.929737091064453
    6. 'xes' → logprob: -10.554737091064453
    7. ' ,' → logprob: -11.054737091064453
    8. ' ' → logprob: -11.304737091064453
    9. ']' → logprob: -11.304737091064453
    10. 'xa' → logprob: -11.679737091064453

Token 249: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.13198800384998322
    2. ' id' → logprob: -2.131988048553467
    3. '0' → logprob: -5.506988048553467
    4. ' ' → logprob: -8.006987571716309
    5. '   ' → logprob: -8.756987571716309
    6. ' =' → logprob: -8.756987571716309
    7. 'pointer' → logprob: -9.506987571716309
    8. '=' → logprob: -9.756987571716309
    9. 'idx' → logprob: -10.381987571716309
    10. '  ' → logprob: -10.381987571716309

Token 250: 'B' (ID: 33)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0710129663348198
    2. ' =' → logprob: -3.0710129737854004
    3. 'x' → logprob: -4.0710129737854
    4. 'A' → logprob: -5.4460129737854
    5. ',' → logprob: -7.6960129737854
    6. '<|end|>' → logprob: -9.196012496948242
    7. 's' → logprob: -9.821012496948242
    8. '_=' → logprob: -10.196012496948242
    9. '_' → logprob: -10.571012496948242
    10. 'ex' → logprob: -10.821012496948242

Token 251: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1439957171678543
    2. '=' → logprob: -2.018995761871338
    3. ',' → logprob: -6.643995761871338
    4. ' ,' → logprob: -11.64399528503418
    5. ' ' → logprob: -11.89399528503418
    6. '  ' → logprob: -14.89399528503418
    7. '   ' → logprob: -15.14399528503418
    8. ' =[' → logprob: -15.14399528503418
    9. ' =
' → logprob: -15.39399528503418
    10. '    ' → logprob: -15.51899528503418

Token 252: ' len' (ID: 4631)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6083480715751648
    2. ' ' → logprob: -1.7333481311798096
    3. ' pointer' → logprob: -2.1083481311798096
    4. 'pointer' → logprob: -2.1083481311798096
    5. 'next' → logprob: -4.2333478927612305
    6. ' next' → logprob: -4.4833478927612305
    7. '[' → logprob: -6.3583478927612305
    8. ' [' → logprob: -6.4833478927612305
    9. 'len' → logprob: -7.2333478927612305
    10. ' len' → logprob: -7.4208478927612305

Token 253: '(seq' (ID: 78669)
  Prédit: '(seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -0.0011961825657635927
    2. '(indices' → logprob: -7.126196384429932
    3. '(s' → logprob: -8.876195907592773
    4. '(ids' → logprob: -9.001195907592773
    5. '(sequence' → logprob: -10.126195907592773
    6. '(' → logprob: -10.251195907592773
    7. 'seq' → logprob: -11.626195907592773
    8. '(se' → logprob: -11.751195907592773
    9. '(pointer' → logprob: -12.001195907592773
    10. '(flag' → logprob: -12.251195907592773

Token 254: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.08009472489356995
    2. '(seq' → logprob: -2.580094814300537
    3. 'seq' → logprob: -7.205094814300537
    4. ')' → logprob: -8.830094337463379
    5. 'B' → logprob: -9.330094337463379
    6. '(A' → logprob: -9.455094337463379
    7. '(' → logprob: -9.955094337463379
    8. '(s' → logprob: -10.955094337463379
    9. '(sequence' → logprob: -11.330094337463379
    10. 's' → logprob: -11.705094337463379

Token 255: ')-' (ID: 14080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8712298274040222
    2. ')-' → logprob: -1.246229887008667
    3. '),' → logprob: -1.246229887008667
    4. '-' → logprob: -5.371229648590088
    5. ' -' → logprob: -7.121229648590088
    6. '[' → logprob: -7.996229648590088
    7. ',' → logprob: -8.871230125427246
    8. ' )' → logprob: -9.121230125427246
    9. '   ' → logprob: -9.496230125427246
    10. ' ),' → logprob: -9.871230125427246

Token 256: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006771695916540921
    2. ' ' → logprob: -7.500677108764648
    3. ',' → logprob: -9.375677108764648
    4. '
' → logprob: -11.250677108764648
    5. '2' → logprob: -11.375677108764648
    6. '<|end|>' → logprob: -11.625677108764648
    7. ' ,' → logprob: -13.750677108764648
    8. ')' → logprob: -13.750677108764648
    9. '```' → logprob: -14.313177108764648
    10. ' -' → logprob: -14.375677108764648

Token 257: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02930234745144844
    2. '+' → logprob: -3.7793023586273193
    3. ' +' → logprob: -6.02930212020874
    4. ' ,' → logprob: -6.40430212020874
    5. ',
' → logprob: -6.77930212020874
    6. ',id' → logprob: -7.65430212020874
    7. ')' → logprob: -9.904302597045898
    8. '   ' → logprob: -9.904302597045898
    9. '+,' → logprob: -10.779302597045898
    10. 'id' → logprob: -10.779302597045898

Token 258: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.061995141208171844
    2. ' len' → logprob: -2.811995029449463
    3. '0' → logprob: -11.561995506286621
    4. '   ' → logprob: -12.686995506286621
    5. '	len' → logprob: -12.686995506286621
    6. ' ' → logprob: -12.811995506286621
    7. '[len' → logprob: -12.936995506286621
    8. '(len' → logprob: -13.061995506286621
    9. '<len' → logprob: -13.811995506286621
    10. '=len' → logprob: -14.186995506286621

Token 259: '(seq' (ID: 78669)
  Prédit: '(seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -4.961759259458631e-06
    2. 'seq' → logprob: -12.750004768371582
    3. '(' → logprob: -13.625004768371582
    4. '(s' → logprob: -14.875004768371582
    5. '(se' → logprob: -16.5000057220459
    6. '(sequence' → logprob: -16.8750057220459
    7. ' (' → logprob: -16.8750057220459
    8. ' seq' → logprob: -17.0000057220459
    9. '(sec' → logprob: -17.6250057220459
    10. '(seg' → logprob: -17.8750057220459

Token 260: 'B' (ID: 33)
  Prédit: '(seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -0.43901005387306213
    2. 'A' → logprob: -1.0640100240707397
    3. 'seq' → logprob: -5.064010143280029
    4. 'B' → logprob: -5.689010143280029
    5. ' seq' → logprob: -8.939009666442871
    6. '(' → logprob: -8.939009666442871
    7. '_seq' → logprob: -9.439009666442871
    8. 'Seq' → logprob: -9.814009666442871
    9. ')-' → logprob: -10.064009666442871
    10. '-' → logprob: -10.439009666442871

Token 261: ')-' (ID: 14080)
  Prédit: ')-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')-' → logprob: -0.10453090816736221
    2. ')' → logprob: -2.3545308113098145
    3. '-' → logprob: -6.4795308113098145
    4. ')]' → logprob: -6.7295308113098145
    5. ']-' → logprob: -7.1045308113098145
    6. ')+' → logprob: -8.104531288146973
    7. '[' → logprob: -9.479531288146973
    8. ' )' → logprob: -9.854531288146973
    9. ' -' → logprob: -10.104531288146973
    10. ')-(' → logprob: -10.104531288146973

Token 262: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2113979209971149e-05
    2. ' ' → logprob: -11.750012397766113
    3. '2' → logprob: -12.500012397766113
    4. '0' → logprob: -15.625012397766113
    5. '-' → logprob: -16.750011444091797
    6. '```' → logprob: -17.062511444091797
    7. '<|end|>' → logprob: -17.625011444091797
    8. '   ' → logprob: -17.687511444091797
    9. '
' → logprob: -17.750011444091797
    10. '...' → logprob: -18.250011444091797

Token 263: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 264: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.332954466342926
    2. '<|end|>' → logprob: -2.3329544067382812
    3. ':' → logprob: -2.4579544067382812
    4. ' ' → logprob: -3.5829544067382812
    5. ',' → logprob: -3.7079544067382812
    6. ')' → logprob: -3.8329544067382812
    7. '    ' → logprob: -5.707954406738281
    8. '.' → logprob: -5.957954406738281
    9. ' 
' → logprob: -5.957954406738281
    10. '    
' → logprob: -6.332954406738281

Token 265: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30731475353240967
    2. ' while' → logprob: -1.8073147535324097
    3. ' for' → logprob: -3.682314872741699
    4. 'while' (adapté à ' while') → logprob: -4.557314872741699
    5. ' val' → logprob: -4.807314872741699
    6. ')' → logprob: -4.807314872741699
    7. ' ' → logprob: -4.932314872741699
    8. ' 
' → logprob: -5.057314872741699
    9. ',' → logprob: -5.432314872741699
    10. ':' → logprob: -5.682314872741699

Token 266: ' seq' (ID: 26775)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -1.3336849212646484
    2. ' pos' → logprob: -1.5836849212646484
    3. ' True' → logprob: -1.9586849212646484
    4. ' pointer' → logprob: -2.0836849212646484
    5. ' id' → logprob: -2.2086849212646484
    6. 'pos' → logprob: -3.4586849212646484
    7. ' flag' → logprob: -3.8336849212646484
    8. 'True' → logprob: -3.9586849212646484
    9. ' val' → logprob: -4.083684921264648
    10. ' not' → logprob: -4.208684921264648

Token 267: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.01004068087786436
    2. '[id' → logprob: -4.760040760040283
    3. 'B' → logprob: -7.010040760040283
    4. '[' → logprob: -8.135040283203125
    5. 's' → logprob: -9.760040283203125
    6. 'id' → logprob: -10.385040283203125
    7. '   ' → logprob: -10.635040283203125
    8. '[pos' → logprob: -10.885040283203125
    9. '[p' → logprob: -11.135040283203125
    10. ' id' → logprob: -11.385040283203125

Token 268: ' or' (ID: 503)
  Prédit: '[id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[id' → logprob: -0.01613900251686573
    2. '[' → logprob: -4.891139030456543
    3. ' and' → logprob: -5.016139030456543
    4. 'and' → logprob: -7.016139030456543
    5. ':' → logprob: -8.266139030456543
    6. 'id' → logprob: -8.641139030456543
    7. '>' → logprob: -8.891139030456543
    8. '   ' → logprob: -8.891139030456543
    9. ' [' → logprob: -10.266139030456543
    10. ' ' → logprob: -10.891139030456543

Token 269: ' seq' (ID: 26775)
  Prédit: ' seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seq' → logprob: -0.03699616342782974
    2. 'seq' → logprob: -3.4119961261749268
    3. ' id' → logprob: -6.536996364593506
    4. 'id' → logprob: -7.786996364593506
    5. ' pos' → logprob: -8.036995887756348
    6. 'True' → logprob: -9.036995887756348
    7. ' len' → logprob: -9.036995887756348
    8. 'pos' → logprob: -9.036995887756348
    9. '(seq' → logprob: -9.286995887756348
    10. ' True' → logprob: -9.411995887756348

Token 270: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -4.060365608893335e-05
    2. 'A' → logprob: -11.125041007995605
    3. '[' → logprob: -11.750041007995605
    4. ' B' → logprob: -12.500041007995605
    5. 'seq' → logprob: -12.500041007995605
    6. ':' → logprob: -12.625041007995605
    7. ' or' → logprob: -13.875041007995605
    8. 's' → logprob: -14.000041007995605
    9. '_B' → logprob: -14.125041007995605
    10. 'or' → logprob: -14.125041007995605

Token 271: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1322733610868454
    2. ':
' → logprob: -2.3822734355926514
    3. ' and' → logprob: -3.6322734355926514
    4. ',' → logprob: -6.507273197174072
    5. '       ' → logprob: -6.882273197174072
    6. '   ' → logprob: -7.007273197174072
    7. ' :' → logprob: -7.507273197174072
    8. '<|end|>' → logprob: -7.882273197174072
    9. 'and' → logprob: -8.63227367401123
    10. ' :
' → logprob: -8.88227367401123

Token 272: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3972227871417999
    2. '    ' → logprob: -1.8972227573394775
    3. '       ' → logprob: -2.1472227573394775
    4. '        ' → logprob: -3.8972227573394775
    5. '<|end|>' → logprob: -4.022222995758057
    6. ',' → logprob: -5.022222995758057
    7. ':' → logprob: -5.397222995758057
    8. '   ' → logprob: -6.272222995758057
    9. ' ' → logprob: -6.522222995758057
    10. '[' → logprob: -6.897222995758057

Token 273: ' s' (ID: 265)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8578539490699768
    2. '       ' → logprob: -1.232853889465332
    3. '    ' → logprob: -2.607853889465332
    4. '        ' → logprob: -2.982853889465332
    5. ' 
' → logprob: -3.482853889465332
    6. ',' → logprob: -4.357853889465332
    7. 'n' → logprob: -4.357853889465332
    8. ' ' → logprob: -4.357853889465332
    9. '        
' → logprob: -4.482853889465332
    10. 't' → logprob: -4.857853889465332

Token 274: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.001176357269287
    2. 'e' → logprob: -1.376176357269287
    3. 'ide' → logprob: -1.501176357269287
    4. 'elect' → logprob: -3.001176357269287
    5. 'el' → logprob: -3.126176357269287
    6. 'id' → logprob: -4.251176357269287
    7. '=' → logprob: -4.501176357269287
    8. 'eq' → logprob: -4.626176357269287
    9. 'witch' → logprob: -4.876176357269287
    10. 't' → logprob: -5.251176357269287

Token 275: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.3520596921443939
    2. ' next' → logprob: -1.2270597219467163
    3. '(next' → logprob: -6.102059841156006
    4. 'switch' → logprob: -7.727059841156006
    5. '[next' → logprob: -8.227059364318848
    6. ' switch' → logprob: -8.977059364318848
    7. '0' → logprob: -9.227059364318848
    8. ' ' → logprob: -9.727059364318848
    9. ' (' → logprob: -9.977059364318848
    10. ' sequence' → logprob: -10.102059364318848

Token 276: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.011051470413804054
    2. 'switch' → logprob: -4.511051654815674
    3. ' switch' → logprob: -12.886051177978516
    4. '(' → logprob: -13.886051177978516
    5. 's' → logprob: -16.136051177978516
    6. 'Switch' → logprob: -17.136051177978516
    7. '_switch' → logprob: -17.386051177978516
    8. '(
' → logprob: -17.386051177978516
    9. '	switch' → logprob: -18.261051177978516
    10. ' (' → logprob: -18.386051177978516

Token 277: 'witch' (ID: 8159)
  Prédit: 'witch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'witch' → logprob: -0.004097277764230967
    2. 'switch' → logprob: -5.5040974617004395
    3. ' switch' → logprob: -12.129096984863281
    4. '(s' → logprob: -12.254096984863281
    5. 'with' → logprob: -13.004096984863281
    6. ' witch' → logprob: -13.129096984863281
    7. ')' → logprob: -13.504096984863281
    8. 'itch' → logprob: -14.004096984863281
    9. 'w' → logprob: -14.629096984863281
    10. 'wit' → logprob: -14.879096984863281

Token 278: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021168719977140427
    2. ')
' → logprob: -3.8961687088012695
    3. ' )' → logprob: -7.5211687088012695
    4. ' )
' → logprob: -10.14616870880127
    5. '())' → logprob: -11.02116870880127
    6. ')
' → logprob: -11.52116870880127
    7. ')

' → logprob: -11.52116870880127
    8. '()' → logprob: -12.27116870880127
    9. '   ' → logprob: -13.64616870880127
    10. ' ' → logprob: -13.64616870880127

Token 279: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39505407214164734
    2. '<|end|>' → logprob: -1.1450541019439697
    3. '        ' → logprob: -5.770053863525391
    4. ' ' → logprob: -6.770053863525391
    5. '<|end|>' → logprob: -6.895053863525391
    6. ' if' → logprob: -7.145053863525391
    7. ')' → logprob: -7.770053863525391
    8. '        
' → logprob: -7.895053863525391
    9. '    ' → logprob: -8.27005386352539
    10. '   ' → logprob: -8.39505386352539

Token 280: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0987287759780884
    2. 'if' → logprob: -1.0987287759780884
    3. ' if' → logprob: -1.0987287759780884
    4. '   ' → logprob: -9.598729133605957
    5. '	if' → logprob: -11.348729133605957
    6. ' ' → logprob: -11.848729133605957
    7. '```' → logprob: -12.223729133605957
    8. '
' → logprob: -12.473729133605957
    9. '           ' → logprob: -12.723729133605957
    10. '        ' → logprob: -12.848729133605957

Token 281: ' Elegant' (ID: 100842)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.19964614510536194
    2. 'if' → logprob: -1.8246461153030396
    3. '       ' → logprob: -3.949646234512329
    4. '        ' → logprob: -7.94964599609375
    5. '   ' → logprob: -10.57464599609375
    6. ' ' → logprob: -11.07464599609375
    7. '    ' → logprob: -11.07464599609375
    8. 'If' → logprob: -12.19964599609375
    9. '           ' → logprob: -12.32464599609375
    10. '```' → logprob: -12.44964599609375

Token 282: ' iterator' (ID: 30787)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4403055012226105
    2. '<|end|>' → logprob: -1.690305471420288
    3. ' ' → logprob: -2.815305471420288
    4. 'ly' → logprob: -3.440305471420288
    5. ' code' → logprob: -4.815305709838867
    6. '        ' → logprob: -4.815305709838867
    7. '<|end|>' → logprob: -4.940305709838867
    8. ' and' → logprob: -5.190305709838867
    9. ',' → logprob: -5.315305709838867
    10. 'if' → logprob: -5.315305709838867

Token 283: '+' (ID: 10)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 284: 'logic' (ID: 42724)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.18740642070770264
    2. 'if' → logprob: -2.437406539916992
    3. ' try' → logprob: -3.312406539916992
    4. ' for' → logprob: -4.812406539916992
    5. 'try' → logprob: -4.937406539916992
    6. ' s' → logprob: -5.437406539916992
    7. ' continue' → logprob: -6.062406539916992
    8. 's' → logprob: -6.187406539916992
    9. ' indices' → logprob: -6.187406539916992
    10. '   ' → logprob: -6.562406539916992

Token 285: ' cont' (ID: 836)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21879570186138153
    2. '<|end|>' → logprob: -1.718795657157898
    3. ' if' → logprob: -4.7187957763671875
    4. ':' → logprob: -6.3437957763671875
    5. '<|end|>' → logprob: -6.4687957763671875
    6. '        ' → logprob: -6.7187957763671875
    7. '
' → logprob: -6.8437957763671875
    8. ',' → logprob: -6.9687957763671875
    9. '        
' → logprob: -8.093795776367188
    10. ')' → logprob: -8.718795776367188

Token 286: 'ortion' (ID: 51871)
  Prédit: 'inue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inue' → logprob: -0.010983562096953392
    2. 'in' → logprob: -5.260983467102051
    3. 'inu' → logprob: -5.885983467102051
    4. '       ' → logprob: -6.510983467102051
    5. ':
' → logprob: -8.01098346710205
    6. 'INUE' → logprob: -8.13598346710205
    7. ':' → logprob: -9.01098346710205
    8. '...' → logprob: -9.38598346710205
    9. '        
' → logprob: -9.51098346710205
    10. '   ' → logprob: -9.63598346710205

Token 287: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35033658146858215
    2. '<|end|>' → logprob: -1.3503365516662598
    3. ' if' → logprob: -4.22533655166626
    4. '
' → logprob: -4.72533655166626
    5. '<|end|>' → logprob: -5.35033655166626
    6. ':' → logprob: -5.60033655166626
    7. ',' → logprob: -6.97533655166626
    8. '        
' → logprob: -7.10033655166626
    9. ')' → logprob: -7.47533655166626
    10. '        ' → logprob: -7.85033655166626

Token 288: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5193396806716919
    2. '<|end|>' → logprob: -1.019339680671692
    3. ' if' → logprob: -3.8943395614624023
    4. ':' → logprob: -4.269339561462402
    5. '<|end|>' → logprob: -5.894339561462402
    6. ',' → logprob: -6.394339561462402
    7. ')' → logprob: -6.519339561462402
    8. '        ' → logprob: -7.519339561462402
    9. ':
' → logprob: -7.519339561462402
    10. '   ' → logprob: -7.519339561462402

Token 289: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2129853069782257
    2. ' if' → logprob: -1.9629852771759033
    3. 'if' (adapté à ' if') → logprob: -3.3379852771759033
    4. 'token' → logprob: -4.837985515594482
    5. '<|end|>' → logprob: -5.337985515594482
    6. '        ' → logprob: -7.712985515594482
    7. 'tokens' → logprob: -7.712985515594482
    8. ' token' → logprob: -7.837985515594482
    9. '   ' → logprob: -8.712985038757324
    10. 's' → logprob: -8.962985038757324

Token 290: ' (' (ID: 350)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.10154515504837036
    2. 's' → logprob: -2.8515450954437256
    3. ' (' → logprob: -4.101545333862305
    4. ' not' → logprob: -5.476545333862305
    5. ' seq' → logprob: -5.476545333862305
    6. '(s' → logprob: -5.851545333862305
    7. '(' → logprob: -5.976545333862305
    8. ' ' → logprob: -6.351545333862305
    9. '   ' → logprob: -6.351545333862305
    10. ' len' → logprob: -7.476545333862305

Token 291: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.42999541759490967
    2. ' s' → logprob: -1.3049954175949097
    3. '(s' → logprob: -3.054995536804199
    4. ' (' → logprob: -4.554995536804199
    5. ' not' → logprob: -5.179995536804199
    6. 'not' → logprob: -5.429995536804199
    7. '   ' → logprob: -6.054995536804199
    8. '(not' → logprob: -6.429995536804199
    9. 'seq' → logprob: -6.679995536804199
    10. '(seq' → logprob: -7.179995536804199

Token 292: ' and' (ID: 326)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6377411484718323
    2. '==' → logprob: -0.7627411484718323
    3. ')==' → logprob: -6.2627410888671875
    4. '
' → logprob: -7.3877410888671875
    5. ' and' → logprob: -7.6377410888671875
    6. ')' → logprob: -7.7627410888671875
    7. '==
' → logprob: -7.8877410888671875
    8. 'and' → logprob: -7.8877410888671875
    9. ' ==
' → logprob: -8.637741088867188
    10. ']==' → logprob: -8.637741088867188

Token 293: ' len' (ID: 4631)
  Prédit: ' pointer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pointer' → logprob: -1.0006723403930664
    2. ' id' → logprob: -2.0006723403930664
    3. 'pointer' → logprob: -2.2506723403930664
    4. 'id' → logprob: -2.6256723403930664
    5. ' not' → logprob: -2.7506723403930664
    6. ' seq' → logprob: -2.8756723403930664
    7. ' flag' → logprob: -3.0006723403930664
    8. 'flag' → logprob: -3.2506723403930664
    9. 'seq' → logprob: -3.8756723403930664
    10. ' (' → logprob: -4.125672340393066

Token 294: '(seq' (ID: 78669)
  Prédit: '(seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -0.0006533435662277043
    2. '(s' → logprob: -8.625653266906738
    3. '(pos' → logprob: -9.250653266906738
    4. 'seq' → logprob: -9.250653266906738
    5. '(' → logprob: -9.875653266906738
    6. ' (' → logprob: -10.125653266906738
    7. '(pointer' → logprob: -10.125653266906738
    8. '(ptr' → logprob: -10.250653266906738
    9. ' seq' → logprob: -10.625653266906738
    10. '(se' → logprob: -10.625653266906738

Token 295: 'B' (ID: 33)
  Prédit: '(seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -0.3060433268547058
    2. 'A' → logprob: -1.4310433864593506
    3. 'seq' → logprob: -4.5560431480407715
    4. 'B' → logprob: -5.1810431480407715
    5. 's' → logprob: -5.4310431480407715
    6. '(s' → logprob: -6.0560431480407715
    7. '(A' → logprob: -7.1810431480407715
    8. ' seq' → logprob: -8.30604362487793
    9. ')' → logprob: -8.93104362487793
    10. '(' → logprob: -8.93104362487793

Token 296: ')==' (ID: 35269)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6584802865982056
    2. ')>' → logprob: -0.9084802865982056
    3. '>' → logprob: -3.033480167388916
    4. ' >' → logprob: -4.283480167388916
    5. '))' → logprob: -4.658480167388916
    6. ')):' → logprob: -5.908480167388916
    7. ' and' → logprob: -6.533480167388916
    8. '):' → logprob: -6.533480167388916
    9. ')==' → logprob: -7.033480167388916
    10. ' )' → logprob: -8.533480644226074

Token 297: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.395740270614624
    2. 'pointer' → logprob: -1.395740270614624
    3. 'pos' → logprob: -3.645740270614624
    4. ' ' → logprob: -4.020740509033203
    5. ' pointer' → logprob: -4.145740509033203
    6. '1' → logprob: -5.020740509033203
    7. 'id' → logprob: -5.270740509033203
    8. 'p' → logprob: -6.270740509033203
    9. ' id' → logprob: -6.520740509033203
    10. '   ' → logprob: -6.895740509033203

Token 298: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015788980526849627
    2. ' )' → logprob: -6.6265788078308105
    3. '):' → logprob: -9.001579284667969
    4. ' or' → logprob: -10.001579284667969
    5. '       ' → logprob: -10.376579284667969
    6. '):
' → logprob: -10.501579284667969
    7. '        ' → logprob: -12.126579284667969
    8. ')
' → logprob: -12.501579284667969
    9. '           ' → logprob: -13.001579284667969
    10. 'or' → logprob: -13.126579284667969

Token 299: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20951247215270996
    2. ' or' → logprob: -1.70951247215271
    3. ':
' → logprob: -5.209512710571289
    4. '       ' → logprob: -7.584512710571289
    5. '           ' → logprob: -7.584512710571289
    6. '):' → logprob: -7.959512710571289
    7. ')' → logprob: -7.959512710571289
    8. ' and' → logprob: -8.334512710571289
    9. ' :' → logprob: -8.459512710571289
    10. 'or' → logprob: -9.209512710571289

Token 300: ' (' (ID: 350)
  Prédit: '(not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(not' → logprob: -0.021844852715730667
    2. '(len' → logprob: -4.521844863891602
    3. '(s' → logprob: -5.271844863891602
    4. '((' → logprob: -5.646844863891602
    5. ' (' → logprob: -6.896844863891602
    6. 'not' → logprob: -7.396844863891602
    7. '(' → logprob: -8.646844863891602
    8. '(id' → logprob: -9.771844863891602
    9. '   ' → logprob: -9.896844863891602
    10. '(no' → logprob: -10.146844863891602

Token 301: 'not' (ID: 2878)
  Prédit: 'not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.4541918933391571
    2. '(not' → logprob: -1.5791919231414795
    3. 's' → logprob: -1.9541919231414795
    4. '(s' → logprob: -4.3291916847229
    5. ' not' → logprob: -6.2041916847229
    6. '((' → logprob: -7.2041916847229
    7. ' s' → logprob: -8.204192161560059
    8. '
' → logprob: -8.704192161560059
    9. 'len' → logprob: -8.829192161560059
    10. ' (' → logprob: -8.829192161560059

Token 302: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03807225078344345
    2. ' s' → logprob: -3.288072347640991
    3. '
' → logprob: -12.47557258605957
    4. 'len' → logprob: -12.47557258605957
    5. '   ' → logprob: -12.60057258605957
    6. '(s' → logprob: -12.66307258605957
    7. ' ' → logprob: -12.66307258605957
    8. ' ' → logprob: -12.72557258605957
    9. ')' → logprob: -13.72557258605957
    10. ' len' → logprob: -14.16307258605957

Token 303: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2811577320098877
    2. 'and' → logprob: -1.4061577320098877
    3. ')' → logprob: -12.656157493591309
    4. ' ' → logprob: -13.781157493591309
    5. '	and' → logprob: -14.406157493591309
    6. '   ' → logprob: -14.656157493591309
    7. '```' → logprob: -15.406157493591309
    8. '):
' → logprob: -15.531157493591309
    9. '<|end|>' → logprob: -15.531157493591309
    10. ' ' → logprob: -15.656157493591309

Token 304: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.016536559909582138
    2. ' len' → logprob: -4.641536712646484
    3. 'not' → logprob: -5.141536712646484
    4. ' not' → logprob: -7.766536712646484
    5. '(len' → logprob: -8.266536712646484
    6. '   ' → logprob: -9.891536712646484
    7. 'id' → logprob: -10.141536712646484
    8. ' ' → logprob: -10.766536712646484
    9. 'pointer' → logprob: -11.016536712646484
    10. 'val' → logprob: -11.141536712646484

Token 305: '(seq' (ID: 78669)
  Prédit: '(seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -0.00408528558909893
    2. 'seq' → logprob: -5.504085063934326
    3. 'Seq' → logprob: -12.629085540771484
    4. ' seq' → logprob: -13.129085540771484
    5. 'A' → logprob: -15.504085540771484
    6. '(' → logprob: -15.504085540771484
    7. 's' → logprob: -15.879085540771484
    8. '(sec' → logprob: -15.879085540771484
    9. '_seq' → logprob: -16.004085540771484
    10. '.seq' → logprob: -16.379085540771484

Token 306: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0015331897884607315
    2. 'B' → logprob: -6.501533031463623
    3. ')' → logprob: -11.126533508300781
    4. '(seq' → logprob: -12.251533508300781
    5. 'seq' → logprob: -12.251533508300781
    6. 'А' → logprob: -13.751533508300781
    7. ')
' → logprob: -14.064033508300781
    8. ' A' → logprob: -14.564033508300781
    9. 'a' → logprob: -14.876533508300781
    10. '
' → logprob: -15.126533508300781

Token 307: ')==' (ID: 35269)
  Prédit: ')=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')==' → logprob: -0.034892093390226364
    2. '==' → logprob: -3.6598920822143555
    3. ')>' → logprob: -5.7848920822143555
    4. ')' → logprob: -6.0348920822143555
    5. '()==' → logprob: -6.1598920822143555
    6. ']==' → logprob: -7.6598920822143555
    7. '>' → logprob: -8.409892082214355
    8. ')!=' → logprob: -9.284892082214355
    9. '")==' → logprob: -10.284892082214355
    10. '))' → logprob: -10.409892082214355

Token 308: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005828189896419644
    2. ' ' → logprob: -7.500582695007324
    3. '   ' → logprob: -11.375582695007324
    4. '1' → logprob: -11.500582695007324
    5. '```' → logprob: -13.125582695007324
    6. ')' → logprob: -13.875582695007324
    7. '  ' → logprob: -14.313082695007324
    8. '
' → logprob: -14.375582695007324
    9. '>' → logprob: -14.563082695007324
    10. 'N' → logprob: -14.938082695007324

Token 309: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12912069261074066
    2. '):
' → logprob: -2.1291205883026123
    3. '       ' → logprob: -7.004120826721191
    4. ')' → logprob: -7.254120826721191
    5. ' ):' → logprob: -8.254120826721191
    6. ' ):
' → logprob: -9.504120826721191
    7. '):
' → logprob: -9.879120826721191
    8. ':' → logprob: -10.004120826721191
    9. '):

' → logprob: -10.129120826721191
    10. '           ' → logprob: -10.254120826721191

Token 310: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16229815781116486
    2. ':' → logprob: -2.6622982025146484
    3. ':
' → logprob: -3.1622982025146484
    4. '       ' → logprob: -3.6622982025146484
    5. '):' → logprob: -5.662298202514648
    6. '):
' → logprob: -6.162298202514648
    7. ' :' → logprob: -6.787298202514648
    8. ' continue' → logprob: -6.787298202514648
    9. '
' → logprob: -6.912298202514648
    10. ' :
' → logprob: -7.537298202514648

Token 311: ' pass' (ID: 1853)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7616853713989258
    2. ' if' → logprob: -1.0116853713989258
    3. ' break' → logprob: -2.511685371398926
    4. '       ' → logprob: -3.511685371398926
    5. ' continue' → logprob: -4.011685371398926
    6. 'if' → logprob: -4.636685371398926
    7. '               ' → logprob: -5.011685371398926
    8. ' val' → logprob: -5.261685371398926
    9. '   ' → logprob: -5.761685371398926
    10. ' s' → logprob: -6.011685371398926

Token 312: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1717270165681839
    2. '<|end|>' → logprob: -2.171726942062378
    3. ' else' → logprob: -4.046727180480957
    4. '
' → logprob: -4.296727180480957
    5. '<|end|>' → logprob: -6.296727180480957
    6. 'else' → logprob: -6.296727180480957
    7. ')' → logprob: -7.171727180480957
    8. '           ' → logprob: -7.296727180480957
    9. '   ' → logprob: -7.296727180480957
    10. '[' → logprob: -7.421727180480957

Token 313: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7985578179359436
    2. '
' → logprob: -1.0485577583312988
    3. '<|end|>' → logprob: -2.048557758331299
    4. ' else' → logprob: -3.173557758331299
    5. 'else' → logprob: -4.548557758331299
    6. '<|end|>' → logprob: -5.673557758331299
    7. '\n' → logprob: -5.923557758331299
    8. '[' → logprob: -6.423557758331299
    9. '\
' → logprob: -6.923557758331299
    10. ')' → logprob: -7.048557758331299

Token 314: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05032644048333168
    2. '<|end|>' → logprob: -3.925326347351074
    3. ' else' → logprob: -4.050326347351074
    4. 'else' → logprob: -6.050326347351074
    5. '   ' → logprob: -6.550326347351074
    6. '<|end|>' → logprob: -6.925326347351074
    7. ' s' → logprob: -7.050326347351074
    8. '        ' → logprob: -7.050326347351074
    9. '.' → logprob: -7.675326347351074
    10. ' ' → logprob: -7.675326347351074

Token 315: ' (' (ID: 350)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.30275341868400574
    2. ' not' → logprob: -1.5527534484863281
    3. 's' → logprob: -3.677753448486328
    4. 'not' → logprob: -4.802753448486328
    5. ' (' → logprob: -4.802753448486328
    6. ' len' → logprob: -5.927753448486328
    7. '(not' → logprob: -6.302753448486328
    8. '(s' → logprob: -7.177753448486328
    9. '(' → logprob: -7.427753448486328
    10. 'len' → logprob: -7.677753448486328

Token 316: 'not' (ID: 2878)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8427239060401917
    2. 'not' → logprob: -0.9677239060401917
    3. ' not' → logprob: -2.217723846435547
    4. ' s' → logprob: -2.717723846435547
    5. '(not' → logprob: -4.717723846435547
    6. '(s' → logprob: -6.092723846435547
    7. '   ' → logprob: -7.092723846435547
    8. ' (' → logprob: -7.217723846435547
    9. 'len' → logprob: -7.342723846435547
    10. '           ' → logprob: -8.342723846435547

Token 317: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.25226539373397827
    2. 's' → logprob: -1.502265453338623
    3. ' len' → logprob: -8.752264976501465
    4. 'len' → logprob: -9.502264976501465
    5. ' seq' → logprob: -10.314764976501465
    6. 'seq' → logprob: -10.877264976501465
    7. '(s' → logprob: -11.439764976501465
    8. ' ' → logprob: -12.252264976501465
    9. ' ' → logprob: -12.314764976501465
    10. ')' → logprob: -12.814764976501465

Token 318: '):
' (ID: 1883)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.014211690984666348
    2. 'and' → logprob: -4.264211654663086
    3. ')' → logprob: -10.639211654663086
    4. ' or' → logprob: -11.014211654663086
    5. ' ' → logprob: -12.139211654663086
    6. ' )' → logprob: -13.889211654663086
    7. '    ' → logprob: -15.389211654663086
    8. '        ' → logprob: -15.514211654663086
    9. ' ' → logprob: -15.764211654663086
    10. ' a' → logprob: -15.764211654663086

Token 319: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0335956811904907
    2. '           ' → logprob: -1.1585956811904907
    3. ':
' → logprob: -1.6585956811904907
    4. ' and' → logprob: -2.033595561981201
    5. ',' → logprob: -5.908595561981201
    6. '       ' → logprob: -6.283595561981201
    7. '):
' → logprob: -6.908595561981201
    8. ' ==' → logprob: -7.908595561981201
    9. '):' → logprob: -7.908595561981201
    10. '[' → logprob: -8.15859603881836

Token 320: ' while' (ID: 2049)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' val' → logprob: -1.2494113445281982
    2. ' id' → logprob: -1.6244113445281982
    3. ' if' → logprob: -1.7494113445281982
    4. '       ' → logprob: -2.3744113445281982
    5. 'if' → logprob: -3.1244113445281982
    6. 'id' → logprob: -3.1244113445281982
    7. 'val' → logprob: -3.2494113445281982
    8. '           ' → logprob: -3.3744113445281982
    9. 'pop' → logprob: -4.374411582946777
    10. ' top' → logprob: -4.624411582946777

Token 321: ' True' (ID: 6432)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' len' → logprob: -1.5826610326766968
    2. ' seq' → logprob: -1.7076610326766968
    3. ' id' → logprob: -1.8326610326766968
    4. ' pointer' → logprob: -2.4576611518859863
    5. 'len' → logprob: -2.7076611518859863
    6. ' val' → logprob: -2.7076611518859863
    7. 'seq' → logprob: -3.0826611518859863
    8. 'val' → logprob: -3.3326611518859863
    9. 'pointer' → logprob: -3.3326611518859863
    10. 'id' → logprob: -3.4576611518859863

Token 322: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6231667995452881
    2. ':' → logprob: -1.248166799545288
    3. ':
' → logprob: -2.373166799545288
    4. '               ' → logprob: -3.248166799545288
    5. '<|end|>' → logprob: -3.373166799545288
    6. 'and' → logprob: -5.373167037963867
    7. ' :' → logprob: -6.623167037963867
    8. ',' → logprob: -6.873167037963867
    9. '<|end|>' → logprob: -7.123167037963867
    10. '           ' → logprob: -7.623167037963867

Token 323: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14556129276752472
    2. ' if' → logprob: -2.6455612182617188
    3. '<|end|>' → logprob: -3.2705612182617188
    4. ' val' → logprob: -5.020561218261719
    5. ' id' → logprob: -5.395561218261719
    6. ' ' → logprob: -6.520561218261719
    7. ' and' → logprob: -6.770561218261719
    8. ' not' → logprob: -6.770561218261719
    9. '           ' → logprob: -6.895561218261719
    10. '                ' → logprob: -7.020561218261719

Token 324: ' if' (ID: 538)
  Prédit: ' id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' id' → logprob: -0.7863617539405823
    2. '                   ' → logprob: -1.9113616943359375
    3. ' val' → logprob: -2.1613616943359375
    4. 'id' → logprob: -2.2863616943359375
    5. ' if' → logprob: -2.4113616943359375
    6. 'val' → logprob: -3.4113616943359375
    7. 'if' (adapté à ' if') → logprob: -3.6613616943359375
    8. 'pop' → logprob: -4.9113616943359375
    9. ' pop' → logprob: -5.5363616943359375
    10. 'len' → logprob: -5.5363616943359375

Token 325: ' not' (ID: 625)
  Prédit: ' id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' id' → logprob: -1.1178778409957886
    2. 'id' → logprob: -1.7428778409957886
    3. ' not' → logprob: -1.9928778409957886
    4. ' seq' → logprob: -2.492877960205078
    5. 'seq' → logprob: -2.992877960205078
    6. 'val' → logprob: -3.367877960205078
    7. 'not' → logprob: -3.492877960205078
    8. ' len' → logprob: -3.617877960205078
    9. ' val' → logprob: -3.617877960205078
    10. ' pointer' → logprob: -3.742877960205078

Token 326: ' seq' (ID: 26775)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.2922467589378357
    2. ' seq' → logprob: -1.4172468185424805
    3. 'pos' → logprob: -5.9172468185424805
    4. '(seq' → logprob: -6.0422468185424805
    5. 'len' → logprob: -6.7922468185424805
    6. 'Left' → logprob: -7.0422468185424805
    7. 'val' → logprob: -7.2922468185424805
    8. ' len' → logprob: -7.4172468185424805
    9. 'pop' → logprob: -7.9172468185424805
    10. ' Left' → logprob: -8.41724681854248

Token 327: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -4.310693111619912e-05
    2. 'B' → logprob: -10.250042915344238
    3. ' A' → logprob: -12.375042915344238
    4. 's' → logprob: -13.375042915344238
    5. '                   ' → logprob: -14.750042915344238
    6. '               ' → logprob: -14.750042915344238
    7. '_A' → logprob: -14.875042915344238
    8. '[' → logprob: -15.000042915344238
    9. ')' → logprob: -16.000043869018555
    10. '           ' → logprob: -16.750043869018555

Token 328: ':' (ID: 25)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.024961160495877266
    2. ':
' → logprob: -4.649960994720459
    3. ':' → logprob: -5.524960994720459
    4. '.pop' → logprob: -5.524960994720459
    5. ' and' → logprob: -5.899960994720459
    6. 'or' → logprob: -6.899960994720459
    7. ')' → logprob: -6.899960994720459
    8. '                   ' → logprob: -6.899960994720459
    9. 'and' → logprob: -7.649960994720459
    10. '):
' → logprob: -8.149961471557617

Token 329: 'break' (ID: 15354)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.023107115179300308
    2. ' break' → logprob: -3.8981070518493652
    3. '                    
' → logprob: -7.023107051849365
    4. 'break' → logprob: -7.523107051849365
    5. '               ' → logprob: -8.023107528686523
    6. '                    ' → logprob: -8.648107528686523
    7. '                       ' → logprob: -8.773107528686523
    8. ' return' → logprob: -9.273107528686523
    9. ',' → logprob: -10.023107528686523
    10. '   ' → logprob: -10.273107528686523

Token 330: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07606038451194763
    2. '
' → logprob: -3.8260602951049805
    3. '<|end|>' → logprob: -3.9510602951049805
    4. '                
' → logprob: -4.3260602951049805
    5. ',' → logprob: -5.4510602951049805
    6. '                   ' → logprob: -5.5760602951049805
    7. '                ' → logprob: -6.0760602951049805
    8. ',
' → logprob: -6.4510602951049805
    9. '                    
' → logprob: -6.7010602951049805
    10. '\n' → logprob: -7.2010602951049805

Token 331: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14128358662128448
    2. '<|end|>' → logprob: -3.2662835121154785
    3. '                
' → logprob: -3.5162835121154785
    4. ' token' → logprob: -4.5162835121154785
    5. ',' → logprob: -4.5162835121154785
    6. '                ' → logprob: -4.7662835121154785
    7. ' tokens' → logprob: -5.3912835121154785
    8. '                   ' → logprob: -5.7662835121154785
    9. ' s' → logprob: -6.0162835121154785
    10. '                    
' → logprob: -6.0162835121154785

Token 332: ' l' (ID: 305)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -1.4535305500030518
    2. ' if' → logprob: -1.7035305500030518
    3. ' top' → logprob: -1.7035305500030518
    4. ' l' → logprob: -1.9535305500030518
    5. '               ' → logprob: -2.5785305500030518
    6. ' token' → logprob: -2.5785305500030518
    7. 'token' → logprob: -4.328530311584473
    8. ' x' → logprob: -4.703530311584473
    9. ' t' → logprob: -4.703530311584473
    10. ' i' → logprob: -4.953530311584473

Token 333: ',i' (ID: 25032)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0026246467605233192
    2. '=' → logprob: -7.50262451171875
    3. ' ,' → logprob: -8.12762451171875
    4. '_,' → logprob: -8.25262451171875
    5. ',val' → logprob: -8.37762451171875
    6. 's' → logprob: -8.75262451171875
    7. 'en' → logprob: -8.75262451171875
    8. ',l' → logprob: -8.87762451171875
    9. '0' → logprob: -9.25262451171875
    10. 'ist' → logprob: -9.50262451171875

Token 334: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11410799622535706
    2. ' =' → logprob: -2.239108085632324
    3. '               ' → logprob: -7.239108085632324
    4. ',' → logprob: -7.989108085632324
    5. '                   ' → logprob: -9.239108085632324
    6. '           ' → logprob: -9.739108085632324
    7. '   ' → logprob: -10.989108085632324
    8. '       ' → logprob: -11.864108085632324
    9. ')=' → logprob: -11.864108085632324
    10. ')' → logprob: -12.114108085632324

Token 335: ' seq' (ID: 26775)
  Prédit: ' seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seq' → logprob: -0.14268456399440765
    2. 'seq' → logprob: -2.0176844596862793
    3. '(seq' → logprob: -12.392684936523438
    4. ' ' → logprob: -13.392684936523438
    5. ' sequence' → logprob: -14.267684936523438
    6. 'pop' → logprob: -14.642684936523438
    7. ' sec' → logprob: -14.892684936523438
    8. 'se' → logprob: -15.392684936523438
    9. ' pop' → logprob: -15.392684936523438
    10. 'deque' → logprob: -15.517684936523438

Token 336: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.10421452671289444
    2. '(seq' → logprob: -2.4792144298553467
    3. 'seq' → logprob: -4.729214668273926
    4. ' seq' → logprob: -5.104214668273926
    5. '[' → logprob: -8.854214668273926
    6. '   ' → logprob: -10.979214668273926
    7. '1' → logprob: -11.354214668273926
    8. ' ' → logprob: -11.479214668273926
    9. '=' → logprob: -11.729214668273926
    10. ' A' → logprob: -11.979214668273926

Token 337: '[-' (ID: 17503)
  Prédit: '.pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.020286446437239647
    2. '[-' → logprob: -4.395286560058594
    3. '[id' → logprob: -5.520286560058594
    4. '               ' → logprob: -6.520286560058594
    5. '[' → logprob: -6.645286560058594
    6. '                   ' → logprob: -8.145286560058594
    7. 'pop' → logprob: -8.270286560058594
    8. '[len' → logprob: -9.020286560058594
    9. 'id' → logprob: -10.520286560058594
    10. '           ' → logprob: -10.520286560058594

Token 338: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ']' → logprob: -16.5
    3. ' ' → logprob: -16.625
    4. '-' → logprob: -18.125
    5. '```' → logprob: -18.5
    6. '
' → logprob: -18.625
    7. '])' → logprob: -19.25
    8. '   ' → logprob: -19.5
    9. ']
' → logprob: -19.625
    10. '(' → logprob: -20.0

Token 339: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5241987705230713
    2. ']
' → logprob: -0.8991987705230713
    3. ')' → logprob: -8.149198532104492
    4. '])' → logprob: -8.899198532104492
    5. '][' → logprob: -8.899198532104492
    6. ')
' → logprob: -9.024198532104492
    7. ']

' → logprob: -9.399198532104492
    8. '];' → logprob: -9.649198532104492
    9. ']
' → logprob: -9.899198532104492
    10. '],' → logprob: -10.274198532104492

Token 340: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3274366557598114
    2. '<|end|>' → logprob: -1.3274366855621338
    3. '                ' → logprob: -5.077436447143555
    4. '<|end|>' → logprob: -5.827436447143555
    5. ',' → logprob: -6.827436447143555
    6. '                
' → logprob: -6.952436447143555
    7. ' ' → logprob: -7.327436447143555
    8. '                   ' → logprob: -7.452436447143555
    9. '           ' → logprob: -8.202436447143555
    10. '              ' → logprob: -8.452436447143555

Token 341: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.18866759538650513
    2. '               ' → logprob: -2.5636675357818604
    3. ' seq' → logprob: -2.5636675357818604
    4. 'if' (adapté à ' if') → logprob: -5.1886677742004395
    5. ' val' → logprob: -5.5636677742004395
    6. 'seq' → logprob: -6.1886677742004395
    7. '           ' → logprob: -7.1886677742004395
    8. ' pop' → logprob: -7.3136677742004395
    9. 'pop' → logprob: -7.4386677742004395
    10. '       ' → logprob: -7.5636677742004395

Token 342: ' sts' (ID: 135210)
  Prédit: 'sts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sts' → logprob: -0.9752922654151917
    2. ' sts' → logprob: -1.4752922058105469
    3. ' not' → logprob: -1.8502922058105469
    4. 'not' → logprob: -2.475292205810547
    5. 'flag' → logprob: -2.600292205810547
    6. ' flag' → logprob: -4.100292205810547
    7. 'l' → logprob: -4.225292205810547
    8. ' l' → logprob: -4.725292205810547
    9. 'val' → logprob: -4.975292205810547
    10. 'st' → logprob: -5.100292205810547

Token 343: '[i' (ID: 1768)
  Prédit: '[l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.3504776358604431
    2. '[i' → logprob: -1.225477695465088
    3. '[' → logprob: -6.350477695465088
    4. 'i' → logprob: -9.72547721862793
    5. '[pos' → logprob: -10.22547721862793
    6. 'l' → logprob: -10.47547721862793
    7. ' [' → logprob: -10.47547721862793
    8. '[p' → logprob: -10.97547721862793
    9. '[s' → logprob: -11.60047721862793
    10. '[len' → logprob: -11.60047721862793

Token 344: ']:' (ID: 12433)
  Prédit: ']=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.3029634654521942
    2. ']:' → logprob: -2.3029634952545166
    3. ']' → logprob: -2.4279634952545166
    4. ']:
' → logprob: -3.0529634952545166
    5. ':' → logprob: -4.6779632568359375
    6. '==' → logprob: -4.9279632568359375
    7. ':
' → logprob: -5.9279632568359375
    8. '):' → logprob: -6.5529632568359375
    9. '):
' → logprob: -6.6779632568359375
    10. 'continue' → logprob: -7.1779632568359375

Token 345: ' pop' (ID: 2735)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.7390047907829285
    2. '                   ' → logprob: -0.8640047907829285
    3. ' pop' → logprob: -2.6140048503875732
    4. 'break' → logprob: -4.864004611968994
    5. 'pop' → logprob: -4.989004611968994
    6. ' seq' → logprob: -5.739004611968994
    7. '               ' → logprob: -6.114004611968994
    8. '```' → logprob: -6.364004611968994
    9. ' val' → logprob: -6.489004611968994
    10. '           ' → logprob: -7.114004611968994

Token 346: '_top' (ID: 23394)
  Prédit: '_top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_top' → logprob: -0.0008153468370437622
    2. '(seq' → logprob: -7.750815391540527
    3. 'top' → logprob: -8.000815391540527
    4. 'Top' → logprob: -11.125815391540527
    5. '(' → logprob: -11.250815391540527
    6. 'seq' → logprob: -12.500815391540527
    7. 'A' → logprob: -12.500815391540527
    8. '_' → logprob: -12.625815391540527
    9. '_TOP' → logprob: -13.375815391540527
    10. '(_' → logprob: -13.500815391540527

Token 347: '(seq' (ID: 78669)
  Prédit: '(seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -0.00046165118692442775
    2. '(' → logprob: -7.875461578369141
    3. ' (' → logprob: -10.12546157836914
    4. '(s' → logprob: -11.37546157836914
    5. '(sequence' → logprob: -11.62546157836914
    6. '(pos' → logprob: -12.00046157836914
    7. '(sec' → logprob: -12.50046157836914
    8. '(se' → logprob: -12.87546157836914
    9. '(val' → logprob: -12.87546157836914
    10. 'seq' → logprob: -13.62546157836914

Token 348: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.688212614681106e-05
    2. 'q' → logprob: -12.500017166137695
    3. 'seq' → logprob: -12.750017166137695
    4. '(seq' → logprob: -12.750017166137695
    5. '_A' → logprob: -13.375017166137695
    6. 'a' → logprob: -14.000017166137695
    7. ' A' → logprob: -14.500017166137695
    8. '[' → logprob: -14.500017166137695
    9. ')' → logprob: -14.625017166137695
    10. '```' → logprob: -14.750017166137695

Token 349: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00869304221123457
    2. ')' → logprob: -5.383693218231201
    3. ',p' → logprob: -5.633693218231201
    4. ')
' → logprob: -8.258692741394043
    5. ');' → logprob: -9.633692741394043
    6. '                   ' → logprob: -10.008692741394043
    7. ' ,' → logprob: -10.383692741394043
    8. '               ' → logprob: -10.758692741394043
    9. '),' → logprob: -11.258692741394043
    10. ',)' → logprob: -11.258692741394043

Token 350: ' pointer' (ID: 16233)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.014779767952859402
    2. 'pointer' → logprob: -4.514779567718506
    3. ' pos' → logprob: -5.889779567718506
    4. 'val' → logprob: -8.014780044555664
    5. '[' → logprob: -8.389780044555664
    6. ' pointer' → logprob: -8.639780044555664
    7. 'p' → logprob: -9.389780044555664
    8. '[pos' → logprob: -10.264780044555664
    9. 'ptr' → logprob: -10.639780044555664
    10. '   ' → logprob: -10.889780044555664

Token 351: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0010013706050813198
    2. 'B' → logprob: -7.376001358032227
    3. '[' → logprob: -8.126001358032227
    4. 's' → logprob: -9.751001358032227
    5. '0' → logprob: -11.751001358032227
    6. '[s' → logprob: -12.376001358032227
    7. ')' → logprob: -12.876001358032227
    8. ' A' → logprob: -13.501001358032227
    9. '[A' → logprob: -13.876001358032227
    10. '1' → logprob: -14.376001358032227

Token 352: ');' (ID: 2245)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6065719723701477
    2. ')' → logprob: -1.106571912765503
    3. ');' → logprob: -2.106571912765503
    4. '               ' → logprob: -6.356572151184082
    5. ')
' → logprob: -8.356572151184082
    6. '                   ' → logprob: -8.606572151184082
    7. ');
' → logprob: -9.356572151184082
    8. '[' → logprob: -9.981572151184082
    9. '           ' → logprob: -9.981572151184082
    10. ')

' → logprob: -10.106572151184082

Token 353: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.8376536965370178
    2. '               ' → logprob: -1.337653636932373
    3. 'continue' → logprob: -1.962653636932373
    4. ' else' → logprob: -2.962653636932373
    5. 'else' → logprob: -3.587653636932373
    6. ' flag' → logprob: -4.462653636932373
    7. ' break' → logprob: -4.587653636932373
    8. '                   ' → logprob: -4.712653636932373
    9. ' sts' → logprob: -4.712653636932373
    10. ' if' → logprob: -4.712653636932373

Token 354: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013561106286942959
    2. 'if' → logprob: -4.638561248779297
    3. ' if' → logprob: -6.388561248779297
    4. 'else' → logprob: -6.513561248779297
    5. 'sts' → logprob: -8.638561248779297
    6. ' else' → logprob: -9.013561248779297
    7. 'break' → logprob: -9.138561248779297
    8. '                
' → logprob: -9.263561248779297
    9. 'elif' → logprob: -10.638561248779297
    10. 's' → logprob: -10.888561248779297

Token 355: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005323054734617472
    2. ' else' → logprob: -6.5053229331970215
    3. '                ' → logprob: -6.6303229331970215
    4. '                
' → logprob: -7.0053229331970215
    5. ' l' → logprob: -7.3803229331970215
    6. 'else' → logprob: -7.8803229331970215
    7. ' if' → logprob: -8.88032341003418
    8. 'n' → logprob: -9.38032341003418
    9. 'token' → logprob: -10.00532341003418
    10. 's' → logprob: -10.63032341003418

Token 356: ' if' (ID: 538)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -1.526066780090332
    2. '               ' → logprob: -1.651066780090332
    3. ' flag' → logprob: -1.651066780090332
    4. ' if' → logprob: -2.151066780090332
    5. 'sts' → logprob: -2.151066780090332
    6. 'if' (adapté à ' if') → logprob: -2.776066780090332
    7. ' sts' → logprob: -3.276066780090332
    8. ' val' → logprob: -4.401066780090332
    9. 'val' → logprob: -4.401066780090332
    10. 'pos' → logprob: -4.526066780090332

Token 357: ' pos' (ID: 1253)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.5447216033935547
    2. 'l' → logprob: -2.0447216033935547
    3. 'val' → logprob: -2.0447216033935547
    4. 'flag' → logprob: -2.1697216033935547
    5. ' val' → logprob: -2.2947216033935547
    6. ' flag' → logprob: -2.5447216033935547
    7. ' l' → logprob: -2.5447216033935547
    8. 'pos' → logprob: -3.0447216033935547
    9. 'not' → logprob: -3.4197216033935547
    10. ' sts' → logprob: -3.9197216033935547

Token 358: '[' (ID: 58)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.03809749335050583
    2. '[' → logprob: -3.288097381591797
    3. '[pos' → logprob: -10.788097381591797
    4. ' [-' → logprob: -11.163097381591797
    5. '[len' → logprob: -11.663097381591797
    6. '==' → logprob: -12.913097381591797
    7. '0' → logprob: -13.288097381591797
    8. ' [' → logprob: -13.413097381591797
    9. '[id' → logprob: -13.663097381591797
    10. '[p' → logprob: -13.913097381591797

Token 359: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0034126094542443752
    2. '[' → logprob: -6.00341272354126
    3. '-' → logprob: -7.37841272354126
    4. ' ' → logprob: -8.628412246704102
    5. '[-' → logprob: -9.378412246704102
    6. ' [' → logprob: -11.503412246704102
    7. ']' → logprob: -11.753412246704102
    8. 's' → logprob: -11.878412246704102
    9. ' s' → logprob: -12.003412246704102
    10. ' -' → logprob: -12.253412246704102

Token 360: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3977547287940979
    2. '<' → logprob: -2.522754669189453
    3. ' <=' → logprob: -2.897754669189453
    4. ' >=' → logprob: -3.147754669189453
    5. '>' → logprob: -3.397754669189453
    6. '<=' → logprob: -3.647754669189453
    7. ' >' → logprob: -3.647754669189453
    8. '==' → logprob: -4.022754669189453
    9. '>=' → logprob: -4.022754669189453
    10. ' ==' → logprob: -4.272754669189453

Token 361: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.9597240090370178
    2. ' <' → logprob: -1.709723949432373
    3. '>=' → logprob: -1.834723949432373
    4. '<=' → logprob: -2.084723949432373
    5. ' >=' → logprob: -2.834723949432373
    6. ' <=' → logprob: -3.459723949432373
    7. '>' → logprob: -3.709723949432373
    8. '==' → logprob: -3.959723949432373
    9. '<len' → logprob: -5.209723949432373
    10. '[' → logprob: -5.709723949432373

Token 362: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.08966618776321411
    2. ' l' → logprob: -2.4646661281585693
    3. '=' → logprob: -9.214666366577148
    4. 'i' → logprob: -9.464666366577148
    5. 'val' → logprob: -9.464666366577148
    6. '0' → logprob: -9.589666366577148
    7. 'Left' → logprob: -9.839666366577148
    8. ' ' → logprob: -9.964666366577148
    9. '	l' → logprob: -10.089666366577148
    10. 'r' → logprob: -10.214666366577148

Token 363: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08578094840049744
    2. ':
' → logprob: -2.5857808589935303
    3. '                   ' → logprob: -6.085781097412109
    4. ' and' → logprob: -6.460781097412109
    5. '               ' → logprob: -7.085781097412109
    6. '           ' → logprob: -7.460781097412109
    7. ':return' → logprob: -7.585781097412109
    8. ' or' → logprob: -8.46078109741211
    9. '):' → logprob: -8.58578109741211
    10. '<|end|>' → logprob: -8.58578109741211

Token 364: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03717707842588425
    2. ' break' → logprob: -3.537177085876465
    3. 'break' → logprob: -5.537177085876465
    4. '               ' → logprob: -6.287177085876465
    5. '                       ' → logprob: -7.787177085876465
    6. '                           ' → logprob: -7.912177085876465
    7. '                ' → logprob: -8.537177085876465
    8. '                    ' → logprob: -8.912177085876465
    9. ' return' → logprob: -8.912177085876465
    10. '                    
' → logprob: -9.537177085876465

Token 365: ' val' (ID: 1459)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -1.0457491874694824
    2. 'break' → logprob: -1.0457491874694824
    3. '                   ' → logprob: -1.2957491874694824
    4. 'pos' → logprob: -4.795749187469482
    5. '                       ' → logprob: -5.545749187469482
    6. ' return' → logprob: -5.795749187469482
    7. 'val' (adapté à ' val') → logprob: -5.920749187469482
    8. ' val' → logprob: -6.045749187469482
    9. 'return' → logprob: -6.670749187469482
    10. ' pos' → logprob: -6.920749187469482

Token 366: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.010575404390692711
    2. '+=' → logprob: -5.635575294494629
    3. '=' → logprob: -6.010575294494629
    4. ' +=' → logprob: -6.385575294494629
    5. '[-' → logprob: -6.510575294494629
    6. '+' → logprob: -7.510575294494629
    7. '.append' → logprob: -7.885575294494629
    8. ' =' → logprob: -8.885575294494629
    9. '-' → logprob: -9.760575294494629
    10. '   ' → logprob: -10.510575294494629

Token 367: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005925900186412036
    2. '-' → logprob: -7.6255927085876465
    3. ' ' → logprob: -10.250592231750488
    4. ' -' → logprob: -10.625592231750488
    5. '
' → logprob: -10.750592231750488
    6. 'pos' → logprob: -12.750592231750488
    7. ']' → logprob: -12.750592231750488
    8. '1' → logprob: -12.875592231750488
    9. '   ' → logprob: -13.125592231750488
    10. '```' → logprob: -13.250592231750488

Token 368: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.12950877845287323
    2. ' +=' → logprob: -2.8795087337493896
    3. ']+=' → logprob: -3.5045087337493896
    4. '=' → logprob: -4.004508972167969
    5. ']' → logprob: -4.254508972167969
    6. '+' → logprob: -7.379508972167969
    7. '-=' → logprob: -7.504508972167969
    8. ')' → logprob: -7.754508972167969
    9. ']+' → logprob: -8.504508972167969
    10. ' =' → logprob: -8.629508972167969

Token 369: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.050982918590307236
    2. '=' → logprob: -3.30098295211792
    3. ' +=' → logprob: -4.55098295211792
    4. '-=' → logprob: -6.17598295211792
    5. ' =' → logprob: -9.425982475280762
    6. ' -=' → logprob: -10.175982475280762
    7. '*=' → logprob: -10.300982475280762
    8. '-' → logprob: -11.300982475280762
    9. '   ' → logprob: -11.425982475280762
    10. '+' → logprob: -11.425982475280762

Token 370: ' l' (ID: 305)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8298717737197876
    2. 'pos' → logprob: -1.8298717737197876
    3. 'l' → logprob: -2.204871654510498
    4. ' l' → logprob: -2.454871654510498
    5. ' pos' → logprob: -2.579871654510498
    6. ' ' → logprob: -3.454871654510498
    7. '(pos' → logprob: -3.829871654510498
    8. ' (' → logprob: -4.204871654510498
    9. '(l' → logprob: -4.454871654510498
    10. '0' → logprob: -4.454871654510498

Token 371: ' -' (ID: 533)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 372: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.00033546582562848926
    2. ' pos' → logprob: -8.000335693359375
    3. 'position' → logprob: -18.375335693359375
    4. '                   ' → logprob: -19.125335693359375
    5. '(pos' → logprob: -19.125335693359375
    6. '               ' → logprob: -19.625335693359375
    7. '[pos' → logprob: -19.625335693359375
    8. '	pos' → logprob: -20.000335693359375
    9. '           ' → logprob: -20.375335693359375
    10. 'val' → logprob: -20.875335693359375

Token 373: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00015062130114529282
    2. '0' → logprob: -8.875150680541992
    3. ' [' → logprob: -13.000150680541992
    4. '<|end|>' → logprob: -13.000150680541992
    5. ' ' → logprob: -13.250150680541992
    6. '(' → logprob: -13.625150680541992
    7. '```' → logprob: -13.625150680541992
    8. '.' → logprob: -14.625150680541992
    9. '	' → logprob: -15.000150680541992
    10. '   ' → logprob: -15.625150680541992

Token 374: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.126521035796031e-05
    2. ' ' → logprob: -9.625091552734375
    3. '[' → logprob: -10.750091552734375
    4. ']' → logprob: -13.750091552734375
    5. '<|end|>' → logprob: -14.375091552734375
    6. '```' → logprob: -14.750091552734375
    7. '   ' → logprob: -15.125091552734375
    8. ')' → logprob: -15.250091552734375
    9. '  ' → logprob: -15.500091552734375
    10. '-' → logprob: -15.687591552734375

Token 375: '];' (ID: 11464)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.619941234588623
    2. ')' → logprob: -1.119941234588623
    3. ']
' → logprob: -2.869941234588623
    4. '<|end|>' → logprob: -3.244941234588623
    5. ')
' → logprob: -3.494941234588623
    6. '                   ' → logprob: -4.994941234588623
    7. '];' → logprob: -7.369941234588623
    8. '               ' → logprob: -7.494941234588623
    9. '<|end|>' → logprob: -7.869941234588623
    10. ';' → logprob: -8.619941711425781

Token 376: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.5385971069335938
    2. 'pos' → logprob: -0.9135971069335938
    3. '                   ' → logprob: -4.288597106933594
    4. ' break' → logprob: -7.288597106933594
    5. 'break' → logprob: -7.413597106933594
    6. '                       ' → logprob: -8.788597106933594
    7. '               ' → logprob: -9.538597106933594
    8. '           ' → logprob: -11.163597106933594
    9. '```' → logprob: -11.288597106933594
    10. '
' → logprob: -11.413597106933594

Token 377: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.558399319241289e-05
    2. '=' → logprob: -12.000025749206543
    3. '```' → logprob: -12.000025749206543
    4. ' [' → logprob: -12.625025749206543
    5. '<|end|>' → logprob: -12.625025749206543
    6. '[
' → logprob: -13.250025749206543
    7. '0' → logprob: -13.375025749206543
    8. '.append' → logprob: -13.875025749206543
    9. '
' → logprob: -14.875025749206543
    10. '=[' → logprob: -14.875025749206543

Token 378: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02056162618100643
    2. '[' → logprob: -3.895561695098877
    3. ' ' → logprob: -11.645561218261719
    4. '```' → logprob: -11.770561218261719
    5. ' [' → logprob: -14.020561218261719
    6. '(' → logprob: -14.270561218261719
    7. '=' → logprob: -14.645561218261719
    8. '
' → logprob: -14.770561218261719
    9. '-' → logprob: -15.395561218261719
    10. '``' → logprob: -16.02056121826172

Token 379: ']=' (ID: 9539)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5776594281196594
    2. '+=' → logprob: -1.5776593685150146
    3. ' +=' → logprob: -1.7026593685150146
    4. ']' → logprob: -3.3276593685150146
    5. ' =' → logprob: -5.327659606933594
    6. '+' → logprob: -5.577659606933594
    7. ']+=' → logprob: -6.077659606933594
    8. ')' → logprob: -6.827659606933594
    9. '[' → logprob: -7.077659606933594
    10. '<' → logprob: -7.952659606933594

Token 380: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.008614808320999146
    2. ' l' → logprob: -4.758615016937256
    3. '                   ' → logprob: -15.883614540100098
    4. '	l' → logprob: -15.883614540100098
    5. ' ' → logprob: -17.133615493774414
    6. '```' → logprob: -17.383615493774414
    7. '               ' → logprob: -18.758615493774414
    8. 'val' → logprob: -18.883615493774414
    9. '[l' → logprob: -18.883615493774414
    10. '_l' → logprob: -19.008615493774414

Token 381: ';' (ID: 26)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.45710289478302
    2. '<|end|>' → logprob: -1.70710289478302
    3. '                   ' → logprob: -1.83210289478302
    4. ';' → logprob: -4.7071027755737305
    5. '
' → logprob: -5.4571027755737305
    6. '<|end|>' → logprob: -5.7071027755737305
    7. ' else' → logprob: -6.2071027755737305
    8. ',' → logprob: -6.5821027755737305
    9. 'else' → logprob: -6.8321027755737305
    10. '                    
' → logprob: -7.2071027755737305

Token 382: ' sts' (ID: 135210)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5118235349655151
    2. '                   ' → logprob: -1.6368235349655151
    3. ' break' → logprob: -2.3868236541748047
    4. 'break' → logprob: -3.0118236541748047
    5. ' else' → logprob: -3.5118236541748047
    6. 'else' → logprob: -4.636823654174805
    7. ' pop' → logprob: -5.761823654174805
    8. '                ' → logprob: -5.886823654174805
    9. ' continue' → logprob: -5.886823654174805
    10. 'pop' → logprob: -6.011823654174805

Token 383: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.054500666621607e-06
    2. '[' → logprob: -12.87500286102295
    3. '```' → logprob: -15.37500286102295
    4. '<|end|>' → logprob: -17.250003814697266
    5. '               ' → logprob: -17.375003814697266
    6. '[int' → logprob: -17.500003814697266
    7. '[s' → logprob: -17.625003814697266
    8. ' [' → logprob: -17.750003814697266
    9. '[ind' → logprob: -17.750003814697266
    10. 'i' → logprob: -17.750003814697266

Token 384: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.13305653631687164
    2. ']=' → logprob: -2.133056640625
    3. '[i' → logprob: -5.133056640625
    4. '=' → logprob: -9.133056640625
    5. ']==' → logprob: -9.758056640625
    6. '[' → logprob: -10.508056640625
    7. '=True' → logprob: -12.133056640625
    8. 'i' → logprob: -13.008056640625
    9. ']
' → logprob: -13.258056640625
    10. ']+=' → logprob: -13.383056640625

Token 385: '1' (ID: 16)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00011403311509639025
    2. ' True' → logprob: -9.500114440917969
    3. 'False' → logprob: -10.250114440917969
    4. 'not' → logprob: -13.000114440917969
    5. '1' → logprob: -13.500114440917969
    6. '   ' → logprob: -16.12511444091797
    7. '(True' → logprob: -16.75011444091797
    8. ' not' → logprob: -18.62511444091797
    9. '0' → logprob: -19.12511444091797
    10. 'true' → logprob: -19.25011444091797

Token 386: ';' (ID: 26)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.26158198714256287
    2. '                   ' → logprob: -1.7615820169448853
    3. ' else' → logprob: -3.1365818977355957
    4. 'else' → logprob: -4.761581897735596
    5. ';' → logprob: -6.386581897735596
    6. '<|end|>' → logprob: -6.636581897735596
    7. '           ' → logprob: -7.261581897735596
    8. '
' → logprob: -7.636581897735596
    9. 'continue' → logprob: -7.636581897735596
    10. ',' → logprob: -7.636581897735596

Token 387: ' pop' (ID: 2735)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.8988637924194336
    2. ' pop' → logprob: -1.6488637924194336
    3. ' continue' → logprob: -2.0238637924194336
    4. ' val' → logprob: -2.1488637924194336
    5. '               ' → logprob: -3.8988637924194336
    6. 'break' → logprob: -4.023863792419434
    7. ' else' → logprob: -4.023863792419434
    8. ' return' → logprob: -4.148863792419434
    9. ')' → logprob: -4.773863792419434
    10. 'val' → logprob: -5.023863792419434

Token 388: '_top' (ID: 23394)
  Prédit: '_top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_top' → logprob: -1.981667537620524e-06
    2. 'top' → logprob: -13.875001907348633
    3. 'Top' → logprob: -14.250001907348633
    4. '_pop' → logprob: -15.750001907348633
    5. '```' → logprob: -16.125001907348633
    6. '_TOP' → logprob: -17.000001907348633
    7. '_' → logprob: -18.125001907348633
    8. '_up' → logprob: -18.125001907348633
    9. '_bottom' → logprob: -18.250001907348633
    10. '(top' → logprob: -18.500001907348633

Token 389: '(seq' (ID: 78669)
  Prédit: '(seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -4.320199877838604e-07
    2. ' (' → logprob: -15.5
    3. '(' → logprob: -16.125
    4. 'seq' → logprob: -17.75
    5. '(sequence' → logprob: -18.0
    6. '(se' → logprob: -18.5
    7. '(sec' → logprob: -19.125
    8. '(seg' → logprob: -19.75
    9. '(s' → logprob: -19.75
    10. '```' → logprob: -20.125

Token 390: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -7.660315895918757e-05
    2. '(seq' → logprob: -9.500076293945312
    3. 'seq' → logprob: -13.625076293945312
    4. ')' → logprob: -16.375076293945312
    5. 'B' → logprob: -16.625076293945312
    6. '(' → logprob: -17.125076293945312
    7. '_seq' → logprob: -17.125076293945312
    8. ' seq' → logprob: -17.250076293945312
    9. 'a' → logprob: -17.375076293945312
    10. '_A' → logprob: -17.375076293945312

Token 391: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001182052365038544
    2. ',p' → logprob: -9.125118255615234
    3. ')' → logprob: -12.250118255615234
    4. ',
' → logprob: -13.125118255615234
    5. '),' → logprob: -13.875118255615234
    6. ' ,' → logprob: -14.750118255615234
    7. '(pointer' → logprob: -15.125118255615234
    8. '(' → logprob: -15.500118255615234
    9. '(p' → logprob: -15.625118255615234
    10. ' ' → logprob: -16.625118255615234

Token 392: ' pointer' (ID: 16233)
  Prédit: 'pointer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pointer' → logprob: -0.06196925416588783
    2. ' pointer' → logprob: -2.81196928024292
    3. '_pointer' → logprob: -14.311968803405762
    4. '(pointer' → logprob: -14.811968803405762
    5. 'Pointer' → logprob: -15.186968803405762
    6. '
' → logprob: -16.561969757080078
    7. '   ' → logprob: -16.811969757080078
    8. 'pos' → logprob: -16.936969757080078
    9. '.pointer' → logprob: -16.936969757080078
    10. 'position' → logprob: -16.936969757080078

Token 393: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -7.5649528298527e-05
    2. ')' → logprob: -10.000075340270996
    3. '[' → logprob: -11.000075340270996
    4. '   ' → logprob: -12.375075340270996
    5. ');' → logprob: -12.750075340270996
    6. '),' → logprob: -13.500075340270996
    7. '```' → logprob: -13.875075340270996
    8. '
' → logprob: -14.000075340270996
    9. ',' → logprob: -14.375075340270996
    10. 'А' → logprob: -14.625075340270996

Token 394: ');' (ID: 2245)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.245607390999794
    2. ');' → logprob: -1.7456073760986328
    3. ')
' → logprob: -3.495607376098633
    4. ';' → logprob: -4.495607376098633
    5. ');
' → logprob: -7.370607376098633
    6. ',' → logprob: -7.870607376098633
    7. '<|end|>' → logprob: -8.245607376098633
    8. ')return' → logprob: -9.620607376098633
    9. '               ' → logprob: -9.620607376098633
    10. ');}' → logprob: -9.745607376098633

Token 395: ' flag' (ID: 9641)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.6503036022186279
    2. '                   ' → logprob: -1.400303602218628
    3. '               ' → logprob: -1.900303602218628
    4. 'continue' → logprob: -3.275303602218628
    5. ' else' → logprob: -3.775303602218628
    6. ' break' → logprob: -4.275303840637207
    7. '                       ' → logprob: -6.275303840637207
    8. 'break' → logprob: -6.900303840637207
    9. 'else' → logprob: -7.150303840637207
    10. '                           ' → logprob: -7.150303840637207

Token 396: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -9.686778503237292e-05
    2. '[' → logprob: -9.250097274780273
    3. 'B' → logprob: -15.000097274780273
    4. 's' → logprob: -16.250097274780273
    5. '```' → logprob: -16.750097274780273
    6. '[i' → logprob: -17.000097274780273
    7. '.append' → logprob: -17.625097274780273
    8. '=' → logprob: -17.625097274780273
    9. '[s' → logprob: -17.625097274780273
    10. ' A' → logprob: -17.625097274780273

Token 397: '[' (ID: 58)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.25981438159942627
    2. '[' → logprob: -1.5098143815994263
    3. '[-' → logprob: -4.884814262390137
    4. '.extend' → logprob: -8.884814262390137
    5. 'append' → logprob: -9.509814262390137
    6. '.pop' → logprob: -10.884814262390137
    7. '=' → logprob: -11.384814262390137
    8. ' append' → logprob: -11.634814262390137
    9. '.insert' → logprob: -11.884814262390137
    10. '.' → logprob: -12.009814262390137

Token 398: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004402055055834353
    2. '-' → logprob: -8.00044059753418
    3. ' ' → logprob: -9.62544059753418
    4. '
' → logprob: -10.75044059753418
    5. '[' → logprob: -12.50044059753418
    6. ' -' → logprob: -12.62544059753418
    7. ']' → logprob: -13.12544059753418
    8. '(' → logprob: -13.62544059753418
    9. '
' → logprob: -14.00044059753418
    10. '   ' → logprob: -14.12544059753418

Token 399: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09008099138736725
    2. ']+=' → logprob: -2.840080976486206
    3. ']=' → logprob: -3.715080976486206
    4. '[' → logprob: -6.340081214904785
    5. '+=' → logprob: -7.590081214904785
    6. '=' → logprob: -7.590081214904785
    7. ']==' → logprob: -9.090081214904785
    8. ']+' → logprob: -9.090081214904785
    9. ')' → logprob: -9.465081214904785
    10. ']-' → logprob: -9.590081214904785

Token 400: '0' (ID: 15)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.8578616380691528
    2. '1' → logprob: -1.4828616380691528
    3. 'not' → logprob: -1.7328616380691528
    4. 'False' → logprob: -2.3578615188598633
    5. '0' → logprob: -2.8578615188598633
    6. 'l' → logprob: -4.232861518859863
    7. ' not' → logprob: -6.607861518859863
    8. ' True' → logprob: -7.107861518859863
    9. 'i' → logprob: -7.107861518859863
    10. 'val' → logprob: -7.857861518859863

Token 401: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.27653515338897705
    2. '<|end|>' → logprob: -2.5265350341796875
    3. ';' → logprob: -2.6515350341796875
    4. ' else' → logprob: -3.4015350341796875
    5. '
' → logprob: -3.5265350341796875
    6. '                   ' → logprob: -4.7765350341796875
    7. 'else' → logprob: -5.2765350341796875
    8. '<|end|>' → logprob: -6.0265350341796875
    9. ')' → logprob: -6.2765350341796875
    10. '           ' → logprob: -6.2765350341796875

Token 402: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 403: ' elif' (ID: 9497)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5509207844734192
    2. ' else' → logprob: -1.0509207248687744
    3. '<|end|>' → logprob: -3.0509207248687744
    4. '                ' → logprob: -4.3009209632873535
    5. 'else' → logprob: -5.4259209632873535
    6. ' ' → logprob: -5.8009209632873535
    7. '                
' → logprob: -6.3009209632873535
    8. ' elif' → logprob: -7.0509209632873535
    9. '<|end|>' → logprob: -7.6759209632873535
    10. '                   ' → logprob: -7.8009209632873535

Token 404: ' flag' (ID: 9641)
  Prédit: ' pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.21050037443637848
    2. 'pos' → logprob: -2.460500478744507
    3. ' val' → logprob: -2.460500478744507
    4. 'val' → logprob: -4.835500240325928
    5. ' not' → logprob: -4.960500240325928
    6. ' s' → logprob: -6.460500240325928
    7. ' flag' → logprob: -7.335500240325928
    8. '(pos' → logprob: -7.710500240325928
    9. ' (' → logprob: -7.835500240325928
    10. 'not' → logprob: -7.960500240325928

Token 405: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0017493189079687
    2. '[' → logprob: -6.376749515533447
    3. 'B' → logprob: -10.126749038696289
    4. 's' → logprob: -12.126749038696289
    5. 'a' → logprob: -14.626749038696289
    6. ' A' → logprob: -15.001749038696289
    7. '_A' → logprob: -15.376749038696289
    8. '=' → logprob: -15.376749038696289
    9. '```' → logprob: -15.876749038696289
    10. '_' → logprob: -16.25174903869629

Token 406: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0802738870552275e-05
    2. ' [' → logprob: -12.50001049041748
    3. '```' → logprob: -12.87501049041748
    4. '==' → logprob: -13.37501049041748
    5. '<|end|>' → logprob: -14.12501049041748
    6. 'A' → logprob: -14.50001049041748
    7. ' ==' → logprob: -15.12501049041748
    8. '<|end|>' → logprob: -15.62501049041748
    9. '__[' → logprob: -15.87501049041748
    10. '
' → logprob: -15.87501049041748

Token 407: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005245022010058165
    2. '0' → logprob: -5.255245208740234
    3. '```' → logprob: -12.255245208740234
    4. '==' → logprob: -13.505245208740234
    5. '[
' → logprob: -13.755245208740234
    6. ' [' → logprob: -14.005245208740234
    7. ' ' → logprob: -14.380245208740234
    8. '<|end|>' → logprob: -14.505245208740234
    9. '[-' → logprob: -14.630245208740234
    10. '(' → logprob: -15.130245208740234

Token 408: ']==' (ID: 34128)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2172253429889679
    2. ']==' → logprob: -1.8422253131866455
    3. '==' → logprob: -3.8422253131866455
    4. ')==' → logprob: -4.842225551605225
    5. ']' → logprob: -5.717225551605225
    6. ' ==' → logprob: -6.342225551605225
    7. ')' → logprob: -6.592225551605225
    8. '][' → logprob: -8.342225074768066
    9. '()==' → logprob: -9.092225074768066
    10. ' [' → logprob: -9.092225074768066

Token 409: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5771917700767517
    2. '0' → logprob: -0.8271917700767517
    3. ' ' → logprob: -6.7021918296813965
    4. '[' → logprob: -12.077191352844238
    5. 's' → logprob: -12.952191352844238
    6. '   ' → logprob: -13.077191352844238
    7. 'None' → logprob: -13.077191352844238
    8. '
' → logprob: -13.327191352844238
    9. '2' → logprob: -13.327191352844238
    10. 'False' → logprob: -13.639691352844238

Token 410: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02685842290520668
    2. ':
' → logprob: -3.776858329772949
    3. ' and' → logprob: -5.901858329772949
    4. '):' → logprob: -8.52685832977295
    5. '                   ' → logprob: -9.15185832977295
    6. ':return' → logprob: -9.40185832977295
    7. ',' → logprob: -9.52685832977295
    8. ' :' → logprob: -9.65185832977295
    9. '):
' → logprob: -9.65185832977295
    10. ' or' → logprob: -9.77685832977295

Token 411: '                   ' (ID: 699)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3693365454673767
    2. '                   ' → logprob: -1.9943366050720215
    3. ':
' → logprob: -2.1193366050720215
    4. ' and' → logprob: -4.4943366050720215
    5. ' :' → logprob: -4.4943366050720215
    6. '                    ' → logprob: -4.7443366050720215
    7. '               ' → logprob: -5.7443366050720215
    8. ' pop' → logprob: -5.8693366050720215
    9. '                ' → logprob: -5.9943366050720215
    10. '):' → logprob: -6.1193366050720215

Token 412: ' pop' (ID: 2735)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.1901574581861496
    2. ' break' → logprob: -2.815157413482666
    3. ' pop' → logprob: -3.315157413482666
    4. 'val' → logprob: -3.565157413482666
    5. ' flag' → logprob: -3.565157413482666
    6. '                   ' → logprob: -4.440157413482666
    7. ' pos' → logprob: -6.315157413482666
    8. ' pass' → logprob: -6.565157413482666
    9. 'break' → logprob: -6.565157413482666
    10. 'flag' → logprob: -6.565157413482666

Token 413: '_top' (ID: 23394)
  Prédit: '_top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_top' → logprob: -1.2113979209971149e-05
    2. 'Top' → logprob: -12.000012397766113
    3. 'top' → logprob: -12.750012397766113
    4. '```' → logprob: -13.250012397766113
    5. '_' → logprob: -15.375012397766113
    6. '_TOP' → logprob: -15.625012397766113
    7. '_pop' → logprob: -15.875012397766113
    8. '(top' → logprob: -16.125011444091797
    9. ')_' → logprob: -16.125011444091797
    10. '(' → logprob: -16.500011444091797

Token 414: '(seq' (ID: 78669)
  Prédit: '(seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -2.816093228830141e-06
    2. '(' → logprob: -13.00000286102295
    3. '(sequence' → logprob: -15.50000286102295
    4. 'seq' → logprob: -16.125001907348633
    5. ' (' → logprob: -16.750001907348633
    6. '(se' → logprob: -17.750001907348633
    7. '(s' → logprob: -18.125001907348633
    8. '(
' → logprob: -18.375001907348633
    9. '(sec' → logprob: -18.750001907348633
    10. '(seg' → logprob: -19.250001907348633

Token 415: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.693221390247345
    2. '(seq' → logprob: -0.693221390247345
    3. 'seq' → logprob: -9.943221092224121
    4. '[' → logprob: -11.568221092224121
    5. '_A' → logprob: -11.943221092224121
    6. ' seq' → logprob: -13.318221092224121
    7. '```' → logprob: -13.568221092224121
    8. '(' → logprob: -13.568221092224121
    9. ')' → logprob: -13.818221092224121
    10. ' (' → logprob: -13.943221092224121

Token 416: ',p' (ID: 14835)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.039936572313308716
    2. '(seq' → logprob: -3.2899365425109863
    3. '[' → logprob: -6.789936542510986
    4. ')' → logprob: -7.914936542510986
    5. 'A' → logprob: -8.414937019348145
    6. ' ,' → logprob: -10.164937019348145
    7. '   ' → logprob: -10.414937019348145
    8. '(sequence' → logprob: -10.664937019348145
    9. '),' → logprob: -11.039937019348145
    10. '(flag' → logprob: -11.414937019348145

Token 417: 'ointer' (ID: 6740)
  Prédit: 'ointer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ointer' → logprob: -0.00044675805838778615
    2. 'pointer' → logprob: -8.625446319580078
    3. 'inter' → logprob: -8.750446319580078
    4. '[' → logprob: -10.250446319580078
    5. 'A' → logprob: -10.750446319580078
    6. 'tr' → logprob: -11.500446319580078
    7. 'r' → logprob: -11.500446319580078
    8. '(pointer' → logprob: -12.500446319580078
    9. '   ' → logprob: -12.750446319580078
    10. '(' → logprob: -12.750446319580078

Token 418: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00035727277281694114
    2. ')' → logprob: -8.625357627868652
    3. '[' → logprob: -9.250357627868652
    4. '   ' → logprob: -10.125357627868652
    5. ');' → logprob: -11.000357627868652
    6. ',' → logprob: -11.250357627868652
    7. '_A' → logprob: -12.750357627868652
    8. ';' → logprob: -13.375357627868652
    9. '       ' → logprob: -13.375357627868652
    10. '),' → logprob: -13.500357627868652

Token 419: ');' (ID: 2245)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07475835829973221
    2. ');' → logprob: -2.949758291244507
    3. ')
' → logprob: -3.949758291244507
    4. ');
' → logprob: -8.574758529663086
    5. ')
' → logprob: -9.949758529663086
    6. ');}' → logprob: -10.324758529663086
    7. ')return' → logprob: -10.699758529663086
    8. '               ' → logprob: -10.824758529663086
    9. '<|end|>' → logprob: -11.199758529663086
    10. '                   ' → logprob: -11.324758529663086

Token 420: ' flag' (ID: 9641)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.1496618539094925
    2. '               ' → logprob: -2.8996617794036865
    3. ' continue' → logprob: -3.0246617794036865
    4. '                   ' → logprob: -4.149662017822266
    5. ' flag' → logprob: -4.774662017822266
    6. ' elif' → logprob: -5.649662017822266
    7. 'else' → logprob: -6.149662017822266
    8. '                ' → logprob: -6.524662017822266
    9. ' return' → logprob: -7.024662017822266
    10. ' ' → logprob: -8.024662017822266

Token 421: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00043817906407639384
    2. '[' → logprob: -7.750438213348389
    3. 'B' → logprob: -13.12543773651123
    4. '```' → logprob: -13.12543773651123
    5. '=' → logprob: -13.75043773651123
    6. '<|end|>' → logprob: -14.50043773651123
    7. ' A' → logprob: -14.75043773651123
    8. '(' → logprob: -15.12543773651123
    9. ' ' → logprob: -15.37543773651123
    10. '_A' → logprob: -16.000438690185547

Token 422: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.810037742368877e-05
    2. '<|end|>' → logprob: -10.375038146972656
    3. '=' → logprob: -12.875038146972656
    4. '```' → logprob: -13.750038146972656
    5. '.append' → logprob: -14.375038146972656
    6. ')[' → logprob: -14.625038146972656
    7. '=[' → logprob: -14.875038146972656
    8. '...' → logprob: -15.125038146972656
    9. '<|end|>' → logprob: -15.125038146972656
    10. '﻿' → logprob: -15.875038146972656

Token 423: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.578184497309849e-05
    2. '[' → logprob: -9.500085830688477
    3. ' ' → logprob: -11.625085830688477
    4. '
' → logprob: -14.000085830688477
    5. '```' → logprob: -15.000085830688477
    6. '-' → logprob: -15.875085830688477
    7. '(' → logprob: -16.000085830688477
    8. '<|end|>' → logprob: -16.437585830688477
    9. '   ' → logprob: -17.062585830688477
    10. ' [' → logprob: -17.062585830688477

Token 424: ']=' (ID: 9539)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04021795466542244
    2. '=' → logprob: -3.415217876434326
    3. '][' → logprob: -5.665217876434326
    4. ']=' → logprob: -6.790217876434326
    5. ')[' → logprob: -6.915217876434326
    6. '=[' → logprob: -7.790217876434326
    7. ')' → logprob: -8.540218353271484
    8. ']' → logprob: -9.040218353271484
    9. ')=' → logprob: -9.415218353271484
    10. '[
' → logprob: -10.415218353271484

Token 425: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010062543442472816
    2. '1' → logprob: -7.126006126403809
    3. ' ' → logprob: -8.626006126403809
    4. 'not' → logprob: -11.876006126403809
    5. '-' → logprob: -12.501006126403809
    6. '[' → logprob: -12.813506126403809
    7. '2' → logprob: -13.626006126403809
    8. '   ' → logprob: -13.938506126403809
    9. '
' → logprob: -14.063506126403809
    10. 's' → logprob: -14.188506126403809

Token 426: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10645440965890884
    2. '<|end|>' → logprob: -2.356454372406006
    3. ' else' → logprob: -5.856454372406006
    4. '<|end|>' → logprob: -6.981454372406006
    5. '			' → logprob: -7.856454372406006
    6. '
' → logprob: -8.106454849243164
    7. 'else' → logprob: -8.231454849243164
    8. ' elif' → logprob: -8.356454849243164
    9. '                ' → logprob: -8.356454849243164
    10. 'elif' → logprob: -8.356454849243164

Token 427: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16991198062896729
    2. ' else' → logprob: -1.9199119806289673
    3. 'else' → logprob: -5.419911861419678
    4. '<|end|>' → logprob: -6.169911861419678
    5. ' elif' → logprob: -6.544911861419678
    6. '                ' → logprob: -7.294911861419678
    7. 'elif' → logprob: -7.794911861419678
    8. '                
' → logprob: -8.794912338256836
    9. '                   ' → logprob: -9.169912338256836
    10. '       ' → logprob: -10.169912338256836

Token 428: ' else' (ID: 1203)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6566692590713501
    2. ' else' → logprob: -0.7816692590713501
    3. '<|end|>' → logprob: -4.6566691398620605
    4. 'else' (adapté à ' else') → logprob: -4.7816691398620605
    5. ' elif' → logprob: -5.9066691398620605
    6. '                ' → logprob: -7.2816691398620605
    7. ' ' → logprob: -7.7816691398620605
    8. 'elif' → logprob: -7.7816691398620605
    9. '			' → logprob: -8.156669616699219
    10. '	else' → logprob: -8.281669616699219

Token 429: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3582744896411896
    2. ':' → logprob: -1.2332744598388672
    3. '                   ' → logprob: -5.108274459838867
    4. ' :
' → logprob: -6.483274459838867
    5. ' :' → logprob: -7.358274459838867
    6. '[' → logprob: -7.983274459838867
    7. '               ' → logprob: -8.733274459838867
    8. '{' → logprob: -8.733274459838867
    9. '                    ' → logprob: -9.358274459838867
    10. '{
' → logprob: -9.358274459838867

Token 430: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5177015662193298
    2. ' val' → logprob: -1.8927016258239746
    3. ' flag' → logprob: -1.8927016258239746
    4. ' break' → logprob: -3.1427016258239746
    5. ' pop' → logprob: -3.1427016258239746
    6. '                    ' → logprob: -5.767701625823975
    7. ' return' → logprob: -6.017701625823975
    8. '               ' → logprob: -6.642701625823975
    9. 'flag' → logprob: -6.642701625823975
    10. 'pop' → logprob: -6.642701625823975

Token 431: ' flag' (ID: 9641)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.26923713088035583
    2. 'break' → logprob: -1.6442371606826782
    3. ' flag' → logprob: -4.269237041473389
    4. 'flag' (adapté à ' flag') → logprob: -4.644237041473389
    5. 'val' → logprob: -5.144237041473389
    6. ' val' → logprob: -5.269237041473389
    7. '                   ' → logprob: -5.644237041473389
    8. 'pos' → logprob: -6.894237041473389
    9. '               ' → logprob: -7.019237041473389
    10. ' pop' → logprob: -7.144237041473389

Token 432: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -4.4656579120783135e-05
    2. '[' → logprob: -10.375044822692871
    3. 'B' → logprob: -11.625044822692871
    4. '<|end|>' → logprob: -13.125044822692871
    5. '(' → logprob: -14.000044822692871
    6. ' ' → logprob: -14.750044822692871
    7. ' A' → logprob: -15.250044822692871
    8. 'a' → logprob: -15.500044822692871
    9. '=' → logprob: -15.875044822692871
    10. ')' → logprob: -16.250043869018555

Token 433: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.319370302458992e-06
    2. '<|end|>' → logprob: -13.125005722045898
    3. '```' → logprob: -14.250005722045898
    4. '=' → logprob: -14.625005722045898
    5. ' [' → logprob: -14.875005722045898
    6. '
' → logprob: -15.250005722045898
    7. '[
' → logprob: -15.375005722045898
    8. '   ' → logprob: -15.625005722045898
    9. ')[' → logprob: -15.875005722045898
    10. '.append' → logprob: -16.0000057220459

Token 434: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6944883465766907
    2. '[' → logprob: -0.6944883465766907
    3. ' ' → logprob: -6.944488525390625
    4. '1' → logprob: -8.444488525390625
    5. ' [' → logprob: -9.819488525390625
    6. '
' → logprob: -10.319488525390625
    7. '   ' → logprob: -11.069488525390625
    8. '	' → logprob: -11.819488525390625
    9. '  ' → logprob: -11.944488525390625
    10. 'not' → logprob: -12.069488525390625

Token 435: ']=' (ID: 9539)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.009689508005976677
    2. ']=' → logprob: -5.0096893310546875
    3. '[' → logprob: -6.0096893310546875
    4. '=[' → logprob: -8.134689331054688
    5. '+=' → logprob: -9.384689331054688
    6. ']' → logprob: -9.634689331054688
    7. ']+=' → logprob: -10.259689331054688
    8. ')=' → logprob: -11.509689331054688
    9. ' =' → logprob: -11.509689331054688
    10. '=[
' → logprob: -13.009689331054688

Token 436: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.250005722045898
    3. '0' → logprob: -14.625005722045898
    4. 's' → logprob: -16.1250057220459
    5. '   ' → logprob: -17.3125057220459
    6. '  ' → logprob: -18.4375057220459
    7. 'not' → logprob: -18.5000057220459
    8. '2' → logprob: -18.6875057220459
    9. 'int' → logprob: -18.8750057220459
    10. '-' → logprob: -19.0000057220459

Token 437: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 438: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 439: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1325320154428482
    2. '<|end|>' → logprob: -2.6325321197509766
    3. ' else' → logprob: -4.007532119750977
    4. '                ' → logprob: -4.882532119750977
    5. '                   ' → logprob: -5.007532119750977
    6. '                
' → logprob: -5.382532119750977
    7. '       ' → logprob: -5.882532119750977
    8. '\n' → logprob: -6.257532119750977
    9. 'else' → logprob: -6.507532119750977
    10. ' 
' → logprob: -6.757532119750977

Token 440: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 441: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 442: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0887945145368576
    2. ' else' → logprob: -3.213794469833374
    3. ')' → logprob: -4.338794708251953
    4. 'else' → logprob: -4.588794708251953
    5. '   ' → logprob: -5.088794708251953
    6. '<|end|>' → logprob: -5.713794708251953
    7. ' elif' → logprob: -5.713794708251953
    8. 'elif' (adapté à ' elif') → logprob: -6.088794708251953
    9. '```' → logprob: -6.838794708251953
    10. '        
' → logprob: -7.463794708251953

Token 443: ' s' (ID: 265)
  Prédit: '(not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(not' → logprob: -0.4094245135784149
    2. ' (' → logprob: -1.2844245433807373
    3. ' not' → logprob: -3.0344245433807373
    4. 'not' → logprob: -4.534424304962158
    5. '(True' → logprob: -8.909424781799316
    6. ' ' → logprob: -9.409424781799316
    7. '(' → logprob: -10.534424781799316
    8. ' True' → logprob: -10.659424781799316
    9. '   ' → logprob: -10.784424781799316
    10. 'True' → logprob: -11.909424781799316

Token 444: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09423321485519409
    2. ' and' → logprob: -3.469233274459839
    3. ':
' → logprob: -3.594233274459839
    4. '==' → logprob: -3.719233274459839
    5. ' ==' → logprob: -5.59423303604126
    6. 'and' → logprob: -6.21923303604126
    7. ' :' → logprob: -8.094233512878418
    8. '       ' → logprob: -8.219233512878418
    9. '=' → logprob: -8.219233512878418
    10. '[' → logprob: -9.344233512878418

Token 445: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003846867009997368
    2. ':' → logprob: -6.128846645355225
    3. 'while' → logprob: -7.128846645355225
    4. ' while' → logprob: -7.628846645355225
    5. ':
' → logprob: -8.128847122192383
    6. '       ' → logprob: -10.253847122192383
    7. '```' → logprob: -11.503847122192383
    8. '   ' → logprob: -11.628847122192383
    9. '               ' → logprob: -11.753847122192383
    10. '          ' → logprob: -12.753847122192383

Token 446: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.029616938903927803
    2. 'while' (adapté à ' while') → logprob: -4.029616832733154
    3. '           ' → logprob: -5.029616832733154
    4. '       ' → logprob: -5.904616832733154
    5. '   ' → logprob: -6.279616832733154
    6. '    ' → logprob: -9.404617309570312
    7. ' ' → logprob: -9.904617309570312
    8. '	while' → logprob: -9.904617309570312
    9. '        ' → logprob: -10.154617309570312
    10. '  ' → logprob: -11.279617309570312

Token 447: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.3484969139099121
    2. ' True' → logprob: -1.223496913909912
    3. 'len' → logprob: -10.97349739074707
    4. '(True' → logprob: -11.09849739074707
    5. 'seq' → logprob: -11.34849739074707
    6. ' seq' → logprob: -12.84849739074707
    7. ' len' → logprob: -13.22349739074707
    8. ' not' → logprob: -13.97349739074707
    9. ' ' → logprob: -14.47349739074707
    10. 'Right' → logprob: -14.72349739074707

Token 448: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.43894320726394653
    2. ':' → logprob: -1.1889431476593018
    3. '               ' → logprob: -3.0639431476593018
    4. '           ' → logprob: -5.813943386077881
    5. '```' → logprob: -7.688943386077881
    6. '<|end|>' → logprob: -8.938942909240723
    7. '{
' → logprob: -9.188942909240723
    8. '):
' → logprob: -9.438942909240723
    9. '       ' → logprob: -9.938942909240723
    10. '{' → logprob: -10.188942909240723

Token 449: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0012116642901673913
    2. '           ' → logprob: -6.751211643218994
    3. ' not' → logprob: -11.876212120056152
    4. '            ' → logprob: -11.876212120056152
    5. ' True' → logprob: -12.001212120056152
    6. '                ' → logprob: -12.376212120056152
    7. '              ' → logprob: -12.626212120056152
    8. '   ' → logprob: -12.626212120056152
    9. ' ' → logprob: -12.876212120056152
    10. '                   ' → logprob: -13.126212120056152

Token 450: ' if' (ID: 538)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.021474584937095642
    2. 'not' → logprob: -3.896474599838257
    3. 'True' → logprob: -7.271474361419678
    4. ' True' → logprob: -8.771474838256836
    5. '               ' → logprob: -9.771474838256836
    6. '(not' → logprob: -11.146474838256836
    7. ' if' → logprob: -12.646474838256836
    8. '           ' → logprob: -13.021474838256836
    9. 'if' (adapté à ' if') → logprob: -14.271474838256836
    10. 'Not' → logprob: -14.396474838256836

Token 451: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0019329203059896827
    2. 'not' → logprob: -6.2519330978393555
    3. ' len' → logprob: -12.626933097839355
    4. '(not' → logprob: -14.626933097839355
    5. 'len' → logprob: -15.251933097839355
    6. '	not' → logprob: -15.876933097839355
    7. '(len' → logprob: -16.87693214416504
    8. ' ' → logprob: -17.62693214416504
    9. ' no' → logprob: -17.62693214416504
    10. 'n' → logprob: -17.87693214416504

Token 452: ' seq' (ID: 26775)
  Prédit: ' seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seq' → logprob: -0.6931561827659607
    2. 'seq' → logprob: -0.6931561827659607
    3. '(seq' → logprob: -11.943156242370605
    4. 'len' → logprob: -13.443156242370605
    5. ' len' → logprob: -14.443156242370605
    6. 'Seq' → logprob: -16.06815528869629
    7. 'se' → logprob: -16.31815528869629
    8. ' ' → logprob: -16.31815528869629
    9. '.seq' → logprob: -17.06815528869629
    10. '```' → logprob: -17.94315528869629

Token 453: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -1.1472419600977446e-06
    2. 'A' → logprob: -14.500000953674316
    3. ' B' → logprob: -15.125000953674316
    4. '[' → logprob: -16.000001907348633
    5. '_B' → logprob: -16.500001907348633
    6. '```' → logprob: -16.500001907348633
    7. 's' → logprob: -18.125001907348633
    8. '(' → logprob: -18.125001907348633
    9. '   ' → logprob: -18.500001907348633
    10. ')' → logprob: -18.750001907348633

Token 454: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011793931480497122
    2. ':
' → logprob: -6.751179218292236
    3. '[' → logprob: -12.251179695129395
    4. '==' → logprob: -13.501179695129395
    5. '   ' → logprob: -14.251179695129395
    6. ' :' → logprob: -14.876179695129395
    7. ':
' → logprob: -15.001179695129395
    8. ':return' → logprob: -15.001179695129395
    9. '=' → logprob: -15.376179695129395
    10. '           ' → logprob: -15.501179695129395

Token 455: 'break' (ID: 15354)
  Prédit: 'break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.0030264330562204123
    2. ' break' → logprob: -5.878026485443115
    3. '                   ' → logprob: -9.003026008605957
    4. '               ' → logprob: -10.003026008605957
    5. 'pop' → logprob: -10.128026008605957
    6. 'b' → logprob: -12.378026008605957
    7. '                       ' → logprob: -12.503026008605957
    8. '           ' → logprob: -13.878026008605957
    9. '	break' → logprob: -13.878026008605957
    10. '```' → logprob: -14.378026008605957

Token 456: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.020628897473216057
    2. '                   ' → logprob: -4.020628929138184
    3. ' l' → logprob: -6.645628929138184
    4. '```' → logprob: -7.520628929138184
    5. 'l' → logprob: -8.645628929138184
    6. '                ' → logprob: -8.770628929138184
    7. '           ' → logprob: -9.270628929138184
    8. '
' → logprob: -10.270628929138184
    9. '              ' → logprob: -10.520628929138184
    10. '                
' → logprob: -10.645628929138184

Token 457: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.025971056893467903
    2. '                   ' → logprob: -3.9009711742401123
    3. '```' → logprob: -6.400970935821533
    4. ' l' → logprob: -6.525970935821533
    5. 'l' → logprob: -7.025970935821533
    6. '                ' → logprob: -7.400970935821533
    7. 'n' → logprob: -8.650971412658691
    8. '                
' → logprob: -8.775971412658691
    9. '           ' → logprob: -9.650971412658691
    10. 'b' → logprob: -9.650971412658691

Token 458: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.00035536551149562
    2. 'l' → logprob: -8.75035572052002
    3. ' r' → logprob: -8.87535572052002
    4. '               ' → logprob: -10.75035572052002
    5. '                   ' → logprob: -10.87535572052002
    6. '   ' → logprob: -12.25035572052002
    7. '           ' → logprob: -12.25035572052002
    8. '```' → logprob: -13.00035572052002
    9. 'v' → logprob: -13.50035572052002
    10. '(r' → logprob: -14.50035572052002

Token 459: ',i' (ID: 25032)
  Prédit: ',i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',i' → logprob: -0.020552517846226692
    2. ',' → logprob: -3.895552635192871
    3. 'i' → logprob: -11.645552635192871
    4. ' ,' → logprob: -14.770552635192871
    5. ',j' → logprob: -15.020552635192871
    6. ',_' → logprob: -15.020552635192871
    7. ',v' → logprob: -15.645552635192871
    8. '_,' → logprob: -16.145551681518555
    9. ',I' → logprob: -16.270551681518555
    10. ',s' → logprob: -16.520551681518555

Token 460: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47408369183540344
    2. '=' → logprob: -0.974083662033081
    3. ',' → logprob: -12.22408390045166
    4. ')' → logprob: -14.47408390045166
    5. ' ' → logprob: -15.47408390045166
    6. ')=' → logprob: -15.72408390045166
    7. '   ' → logprob: -16.349082946777344
    8. '```' → logprob: -16.349082946777344
    9. '=
' → logprob: -16.411582946777344
    10. '>' → logprob: -16.411582946777344

Token 461: ' seq' (ID: 26775)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.04858884960412979
    2. ' seq' → logprob: -3.048588752746582
    3. '(seq' → logprob: -14.548588752746582
    4. 'se' → logprob: -14.923588752746582
    5. 'Seq' → logprob: -14.923588752746582
    6. '   ' → logprob: -16.5485897064209
    7. 'sec' → logprob: -17.0485897064209
    8. 'sq' → logprob: -17.0485897064209
    9. 'sequence' → logprob: -17.4235897064209
    10. '_seq' → logprob: -17.4235897064209

Token 462: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00032354547875002027
    2. 'seq' → logprob: -8.125323295593262
    3. 'Seq' → logprob: -11.500323295593262
    4. ' seq' → logprob: -11.625323295593262
    5. '(seq' → logprob: -12.250323295593262
    6. 'q' → logprob: -13.250323295593262
    7. ' B' → logprob: -14.375323295593262
    8. '[' → logprob: -15.000323295593262
    9. '_seq' → logprob: -15.000323295593262
    10. 'sq' → logprob: -15.125323295593262

Token 463: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -9.253090865968261e-06
    2. '.pop' → logprob: -11.625009536743164
    3. '```' → logprob: -16.500009536743164
    4. '][-' → logprob: -17.000009536743164
    5. '-' → logprob: -17.125009536743164
    6. 'pop' → logprob: -17.125009536743164
    7. '   ' → logprob: -17.500009536743164
    8. '[' → logprob: -18.000009536743164
    9. ' [-' → logprob: -18.375009536743164
    10. '`' → logprob: -18.875009536743164

Token 464: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. '-' → logprob: -12.625003814697266
    3. 'B' → logprob: -15.250003814697266
    4. '```' → logprob: -16.250003814697266
    5. ' ' → logprob: -16.625003814697266
    6. '[' → logprob: -17.250003814697266
    7. '
' → logprob: -17.875003814697266
    8. '[-' → logprob: -18.375003814697266
    9. ' -' → logprob: -18.750003814697266
    10. '   ' → logprob: -19.000003814697266

Token 465: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6471888422966003
    2. ']' → logprob: -1.5221889019012451
    3. ')
' → logprob: -1.8971889019012451
    4. ']
' → logprob: -2.397188901901245
    5. '<|end|>' → logprob: -4.522188663482666
    6. '               ' → logprob: -5.897188663482666
    7. '])' → logprob: -7.272188663482666
    8. '           ' → logprob: -7.897188663482666
    9. '                   ' → logprob: -8.272189140319824
    10. '[' → logprob: -8.397189140319824

Token 466: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04908926784992218
    2. '<|end|>' → logprob: -3.049089193344116
    3. '<|end|>' → logprob: -8.424089431762695
    4. '```' → logprob: -9.174089431762695
    5. '                ' → logprob: -10.049089431762695
    6. ' if' → logprob: -10.174089431762695
    7. '              ' → logprob: -10.549089431762695
    8. '
' → logprob: -10.674089431762695
    9. ';if' → logprob: -11.549089431762695
    10. '                   ' → logprob: -12.174089431762695

Token 467: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.708372175693512
    2. ' if' → logprob: -0.708372175693512
    3. '               ' → logprob: -4.208372116088867
    4. '<|end|>' → logprob: -9.208372116088867
    5. 'If' → logprob: -9.458372116088867
    6. '```' → logprob: -10.208372116088867
    7. '                ' → logprob: -12.083372116088867
    8. '           ' → logprob: -12.208372116088867
    9. '                   ' → logprob: -12.958372116088867
    10. '<|end|>' → logprob: -13.208372116088867

Token 468: ' sts' (ID: 135210)
  Prédit: ' sts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sts' → logprob: -0.3484620153903961
    2. 'sts' → logprob: -1.2234619855880737
    3. ' not' → logprob: -12.098462104797363
    4. ' ' → logprob: -12.598462104797363
    5. 'not' → logprob: -13.098462104797363
    6. '   ' → logprob: -14.098462104797363
    7. 'STS' → logprob: -14.598462104797363
    8. 'ts' → logprob: -15.098462104797363
    9. '
' → logprob: -15.098462104797363
    10. ' stm' → logprob: -15.098462104797363

Token 469: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: 0.0
    2. 'i' → logprob: -17.125
    3. ' [' → logprob: -17.25
    4. '[' → logprob: -18.0
    5. '```' → logprob: -18.875
    6. '<|end|>' → logprob: -18.875
    7. '{i' → logprob: -19.75
    8. '(i' → logprob: -19.875
    9. '[
' → logprob: -19.875
    10. '[int' → logprob: -20.0

Token 470: ']:' (ID: 12433)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6513559222221375
    2. ']:' → logprob: -0.9013559222221375
    3. '[i' → logprob: -2.6513559818267822
    4. ':
' → logprob: -7.026355743408203
    5. ']:
' → logprob: -7.651355743408203
    6. '>:' → logprob: -8.651355743408203
    7. ':i' → logprob: -8.776355743408203
    8. ':return' → logprob: -9.651355743408203
    9. '):' → logprob: -9.901355743408203
    10. '==' → logprob: -10.401355743408203

Token 471: ' pop' (ID: 2735)
  Prédit: ' pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pop' → logprob: -0.0007121934904716909
    2. 'pop' → logprob: -7.2507123947143555
    3. '.pop' → logprob: -13.375712394714355
    4. '```' → logprob: -15.250712394714355
    5. '(pop' → logprob: -15.500712394714355
    6. '	pop' → logprob: -15.500712394714355
    7. '_pop' → logprob: -16.75071144104004
    8. ' pass' → logprob: -17.62571144104004
    9. ' p' → logprob: -18.06321144104004
    10. ' break' → logprob: -18.37571144104004

Token 472: '_top' (ID: 23394)
  Prédit: '_top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_top' → logprob: -0.00013285996101330966
    2. 'top' → logprob: -9.25013256072998
    3. 'Top' → logprob: -10.25013256072998
    4. '_right' → logprob: -15.00013256072998
    5. '_bottom' → logprob: -15.37513256072998
    6. '_TOP' → logprob: -15.62513256072998
    7. 's' → logprob: -16.250133514404297
    8. '_' → logprob: -16.375133514404297
    9. '```' → logprob: -16.625133514404297
    10. '(seq' → logprob: -16.875133514404297

Token 473: '(seq' (ID: 78669)
  Prédit: '(seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -6.2729995988775045e-06
    2. 'seq' → logprob: -12.000006675720215
    3. '(' → logprob: -17.7500057220459
    4. ' seq' → logprob: -19.3750057220459
    5. '```' → logprob: -19.5000057220459
    6. '(sequence' → logprob: -19.7500057220459
    7. ' (' → logprob: -19.8750057220459
    8. '(se' → logprob: -20.7500057220459
    9. '(sec' → logprob: -21.1250057220459
    10. '(
' → logprob: -21.3750057220459

Token 474: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.18485979735851288
    2. '(seq' → logprob: -1.8098597526550293
    3. 'seq' → logprob: -5.309859752655029
    4. '[' → logprob: -10.059860229492188
    5. 'Seq' → logprob: -10.434860229492188
    6. '```' → logprob: -10.809860229492188
    7. ' seq' → logprob: -10.934860229492188
    8. ')' → logprob: -11.934860229492188
    9. '_B' → logprob: -12.184860229492188
    10. '_seq' → logprob: -12.434860229492188

Token 475: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04861200228333473
    2. ',p' → logprob: -3.048612117767334
    3. ' ,' → logprob: -10.673611640930176
    4. 'pointer' → logprob: -13.923611640930176
    5. '(pointer' → logprob: -15.048611640930176
    6. ',
' → logprob: -15.798611640930176
    7. ':pointer' → logprob: -16.423612594604492
    8. ' pointer' → logprob: -16.798612594604492
    9. '),' → logprob: -17.298612594604492
    10. 'p' → logprob: -17.673612594604492

Token 476: ' pointer' (ID: 16233)
  Prédit: 'pointer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pointer' → logprob: -0.00861456897109747
    2. ' pointer' → logprob: -4.758614540100098
    3. '(pointer' → logprob: -16.758615493774414
    4. '_pointer' → logprob: -17.508615493774414
    5. 'Pointer' → logprob: -18.383615493774414
    6. '.pointer' → logprob: -19.008615493774414
    7. 'p' → logprob: -20.008615493774414
    8. '   ' → logprob: -20.508615493774414
    9. ':pointer' → logprob: -20.508615493774414
    10. '[' → logprob: -20.508615493774414

Token 477: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0003035266126971692
    2. '[' → logprob: -8.125303268432617
    3. ')' → logprob: -12.750303268432617
    4. '1' → logprob: -13.000303268432617
    5. '(' → logprob: -14.250303268432617
    6. '```' → logprob: -14.750303268432617
    7. ')[' → logprob: -15.000303268432617
    8. '-' → logprob: -16.000303268432617
    9. '
' → logprob: -16.125303268432617
    10. '=' → logprob: -16.125303268432617

Token 478: ');' (ID: 2245)
  Prédit: ');'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ');' → logprob: -3.786196975852363e-05
    2. ')' → logprob: -10.875038146972656
    3. '               ' → logprob: -11.875038146972656
    4. '           ' → logprob: -12.625038146972656
    5. ' );' → logprob: -12.875038146972656
    6. ';' → logprob: -13.000038146972656
    7. '                   ' → logprob: -13.250038146972656
    8. ')
' → logprob: -14.375038146972656
    9. ');
' → logprob: -14.500038146972656
    10. '),' → logprob: -15.250038146972656

Token 479: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.0792989730834961
    2. 'continue' → logprob: -2.579298973083496
    3. '                   ' → logprob: -7.954298973083496
    4. '               ' → logprob: -9.829298973083496
    5. '                       ' → logprob: -13.454298973083496
    6. '	continue' → logprob: -14.704298973083496
    7. 'Continue' → logprob: -14.954298973083496
    8. '                ' → logprob: -14.954298973083496
    9. '                 ' → logprob: -15.204298973083496
    10. ' break' → logprob: -15.454298973083496

Token 480: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0011508172610774636
    2. 'if' → logprob: -7.376150608062744
    3. ' if' → logprob: -7.626150608062744
    4. '                   ' → logprob: -11.126151084899902
    5. '                ' → logprob: -12.001151084899902
    6. '<|end|>' → logprob: -12.126151084899902
    7. '              ' → logprob: -12.501151084899902
    8. '```' → logprob: -13.001151084899902
    9. '           ' → logprob: -13.126151084899902
    10. '             ' → logprob: -14.751151084899902

Token 481: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00033546582562848926
    2. '<|end|>' → logprob: -8.250335693359375
    3. '              ' → logprob: -10.625335693359375
    4. '```' → logprob: -11.125335693359375
    5. '                ' → logprob: -11.500335693359375
    6. '                   ' → logprob: -11.875335693359375
    7. '
' → logprob: -12.000335693359375
    8. '                
' → logprob: -12.875335693359375
    9. '             ' → logprob: -13.250335693359375
    10. '<|end|>' → logprob: -13.375335693359375

Token 482: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5550360679626465
    2. '               ' → logprob: -1.0550360679626465
    3. ' if' → logprob: -2.5550360679626465
    4. 'pos' → logprob: -10.680036544799805
    5. 'If' → logprob: -10.680036544799805
    6. '           ' → logprob: -11.305036544799805
    7. '                   ' → logprob: -12.180036544799805
    8. '```' → logprob: -12.430036544799805
    9. ' ' → logprob: -13.305036544799805
    10. '#' → logprob: -13.805036544799805

Token 483: ' r' (ID: 428)
  Prédit: ' pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.03819055110216141
    2. 'pos' → logprob: -3.2881906032562256
    3. ' val' → logprob: -10.163190841674805
    4. ' not' → logprob: -10.788190841674805
    5. ' right' → logprob: -10.913190841674805
    6. ' r' → logprob: -11.038190841674805
    7. '(pos' → logprob: -11.288190841674805
    8. 'Right' → logprob: -11.413190841674805
    9. 'val' → logprob: -12.163190841674805
    10. 'r' → logprob: -12.413190841674805

Token 484: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.22113963961601257
    2. '[' → logprob: -1.721139669418335
    3. '<' → logprob: -4.221139430999756
    4. ' >' → logprob: -5.721139430999756
    5. '>' → logprob: -6.971139430999756
    6. ':' → logprob: -8.596139907836914
    7. ' [' → logprob: -9.221139907836914
    8. ' >=' → logprob: -9.846139907836914
    9. '+' → logprob: -9.971139907836914
    10. ')' → logprob: -10.096139907836914

Token 485: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.34851670265197754
    2. ' pos' → logprob: -1.2235167026519775
    3. 'val' → logprob: -10.348516464233398
    4. '[pos' → logprob: -11.723516464233398
    5. '(pos' → logprob: -12.098516464233398
    6. ' val' → logprob: -12.223516464233398
    7. '=' → logprob: -12.223516464233398
    8. 'p' → logprob: -12.973516464233398
    9. '	pos' → logprob: -13.223516464233398
    10. 'position' → logprob: -13.473516464233398

Token 486: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.2729995988775045e-06
    2. '```' → logprob: -12.750006675720215
    3. '0' → logprob: -13.625006675720215
    4. ' [' → logprob: -14.125006675720215
    5. '<|end|>' → logprob: -14.250006675720215
    6. '       ' → logprob: -15.375006675720215
    7. '           ' → logprob: -16.2500057220459
    8. '.' → logprob: -16.3750057220459
    9. '   ' → logprob: -16.3750057220459
    10. '                   ' → logprob: -16.8750057220459

Token 487: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04859282076358795
    2. '[' → logprob: -3.0485928058624268
    3. '```' → logprob: -12.548592567443848
    4. '(' → logprob: -14.548592567443848
    5. ' ' → logprob: -14.548592567443848
    6. '   ' → logprob: -15.673592567443848
    7. '<|end|>' → logprob: -15.798592567443848
    8. ' [' → logprob: -16.048593521118164
    9. '
' → logprob: -16.173593521118164
    10. '[
' → logprob: -16.298593521118164

Token 488: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8038704991340637
    2. '):' → logprob: -1.428870439529419
    3. '):
' → logprob: -1.928870439529419
    4. ':
' → logprob: -2.178870439529419
    5. '[' → logprob: -3.178870439529419
    6. '+' → logprob: -5.803870677947998
    7. ']:' → logprob: -5.928870677947998
    8. '       ' → logprob: -6.053870677947998
    9. ']:
' → logprob: -6.053870677947998
    10. '           ' → logprob: -8.05387020111084

Token 489: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.08907272666692734
    2. ' val' → logprob: -3.0890727043151855
    3. ':' → logprob: -3.8390727043151855
    4. '               ' → logprob: -5.3390727043151855
    5. ':
' → logprob: -5.9640727043151855
    6. '<|end|>' → logprob: -6.0890727043151855
    7. '```' → logprob: -6.2140727043151855
    8. 'val' → logprob: -6.2140727043151855
    9. ' pop' → logprob: -6.7140727043151855
    10. '):
' → logprob: -7.5890727043151855

Token 490: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.225645050406456
    2. 'val' (adapté à ' val') → logprob: -1.6006450653076172
    3. '                   ' → logprob: -8.975645065307617
    4. ' pop' → logprob: -10.100645065307617
    5. 'pop' → logprob: -10.225645065307617
    6. ' flag' → logprob: -12.350645065307617
    7. '```' → logprob: -12.350645065307617
    8. '                    ' → logprob: -12.725645065307617
    9. 'flag' → logprob: -12.850645065307617
    10. ' pass' → logprob: -12.975645065307617

Token 491: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.981667537620524e-06
    2. '```' → logprob: -14.250001907348633
    3. '<|end|>' → logprob: -14.375001907348633
    4. 'A' → logprob: -15.375001907348633
    5. 'token' → logprob: -15.875001907348633
    6. '.append' → logprob: -16.750001907348633
    7. '.pop' → logprob: -17.375001907348633
    8. 'def' → logprob: -17.500001907348633
    9. 'val' → logprob: -17.625001907348633
    10. '=' → logprob: -18.000001907348633

Token 492: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6326549053192139
    2. '[' → logprob: -0.7576549053192139
    3. 'val' → logprob: -10.757655143737793
    4. ' ' → logprob: -11.632655143737793
    5. '```' → logprob: -11.757655143737793
    6. ' [' → logprob: -12.257655143737793
    7. '(' → logprob: -12.757655143737793
    8. '
' → logprob: -12.757655143737793
    9. '[
' → logprob: -13.007655143737793
    10. '1' → logprob: -13.632655143737793

Token 493: ']' (ID: 60)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.41146883368492126
    2. '+=' → logprob: -1.7864688634872437
    3. ']+=' → logprob: -2.411468744277954
    4. '[' → logprob: -3.036468744277954
    5. ']' → logprob: -3.536468744277954
    6. ']+' → logprob: -6.661468982696533
    7. '+' → logprob: -6.786468982696533
    8. ' ]' → logprob: -8.286468505859375
    9. ')' → logprob: -9.036468505859375
    10. '    ' → logprob: -10.286468505859375

Token 494: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.13159523904323578
    2. ' +=' → logprob: -2.1315951347351074
    3. '-=' → logprob: -5.631595134735107
    4. ' -=' → logprob: -7.256595134735107
    5. '=' → logprob: -8.631595611572266
    6. '   ' → logprob: -10.131595611572266
    7. '[' → logprob: -10.256595611572266
    8. '+' → logprob: -10.631595611572266
    9. '    ' → logprob: -10.881595611572266
    10. '-' → logprob: -11.256595611572266

Token 495: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.03806467354297638
    2. ' pos' → logprob: -3.28806471824646
    3. 'val' → logprob: -11.913064956665039
    4. '(pos' → logprob: -12.413064956665039
    5. '	pos' → logprob: -12.913064956665039
    6. '   ' → logprob: -13.038064956665039
    7. '0' → logprob: -13.288064956665039
    8. '
' → logprob: -13.913064956665039
    9. ' val' → logprob: -14.038064956665039
    10. ' ' → logprob: -14.288064956665039

Token 496: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006054293364286423
    2. '-' → logprob: -5.381054401397705
    3. ' -' → logprob: -6.756054401397705
    4. ' [' → logprob: -8.381053924560547
    5. '```' → logprob: -10.881053924560547
    6. '(' → logprob: -11.506053924560547
    7. '[-' → logprob: -12.506053924560547
    8. ')' → logprob: -13.381053924560547
    9. '<|end|>' → logprob: -13.506053924560547
    10. ' (' → logprob: -13.631053924560547

Token 497: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.47472864389419556
    2. '0' → logprob: -0.9747286438941956
    3. ' ' → logprob: -8.22472858428955
    4. '-' → logprob: -8.34972858428955
    5. '```' → logprob: -8.97472858428955
    6. ' -' → logprob: -12.34972858428955
    7. ' [' → logprob: -12.72472858428955
    8. ')' → logprob: -13.09972858428955
    9. '   ' → logprob: -13.22472858428955
    10. '(' → logprob: -13.84972858428955

Token 498: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.14285694062709808
    2. '-' → logprob: -2.0178568363189697
    3. '[' → logprob: -9.26785659790039
    4. '-r' → logprob: -9.51785659790039
    5. ' ' → logprob: -12.39285659790039
    6. ')' → logprob: -13.26785659790039
    7. '[-' → logprob: -13.64285659790039
    8. ' r' → logprob: -14.26785659790039
    9. '-token' → logprob: -14.26785659790039
    10. ']' → logprob: -14.39285659790039

Token 499: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.28327620029449463
    2. '-' → logprob: -1.4082762002944946
    3. '-r' → logprob: -6.158276081085205
    4. ' ' → logprob: -13.783276557922363
    5. '[' → logprob: -14.158276557922363
    6. ' r' → logprob: -14.533276557922363
    7. 'r' → logprob: -14.533276557922363
    8. '<|end|>' → logprob: -14.658276557922363
    9. '-re' → logprob: -14.783276557922363
    10. '-s' → logprob: -14.908276557922363

Token 500: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00017970333283301443
    2. ' r' → logprob: -8.625179290771484
    3. '```' → logprob: -16.625179290771484
    4. '                   ' → logprob: -17.500179290771484
    5. '   ' → logprob: -17.875179290771484
    6. ' ' → logprob: -18.250179290771484
    7. '`' → logprob: -18.500179290771484
    8. '
' → logprob: -18.875179290771484
    9. '<|end|>' → logprob: -19.375179290771484
    10. '	r' → logprob: -19.500179290771484

Token 501: ';' (ID: 26)
  Prédit: ';'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ';' → logprob: -0.00031186718842945993
    2. '
' → logprob: -9.250311851501465
    3. '                   ' → logprob: -9.625311851501465
    4. ' ;' → logprob: -9.625311851501465
    5. '               ' → logprob: -11.000311851501465
    6. '           ' → logprob: -11.000311851501465
    7. 'pos' → logprob: -11.625311851501465
    8. '       ' → logprob: -11.875311851501465
    9. '[' → logprob: -12.125311851501465
    10. ');' → logprob: -12.500311851501465

Token 502: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.044119786471128464
    2. 'pos' → logprob: -3.1691198348999023
    3. ' pop' → logprob: -7.044119834899902
    4. 'pop' → logprob: -9.169119834899902
    5. '                   ' → logprob: -9.919119834899902
    6. ' r' → logprob: -11.669119834899902
    7. 's' → logprob: -11.919119834899902
    8. ' pass' → logprob: -11.919119834899902
    9. ' seq' → logprob: -11.919119834899902
    10. '```' → logprob: -11.919119834899902

Token 503: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.968312951968983e-06
    2. '(' → logprob: -12.375009536743164
    3. '<|end|>' → logprob: -12.375009536743164
    4. '0' → logprob: -14.375009536743164
    5. '```' → logprob: -14.750009536743164
    6. '[
' → logprob: -15.250009536743164
    7. '=' → logprob: -16.000009536743164
    8. ' [' → logprob: -16.375009536743164
    9. '=[' → logprob: -17.250009536743164
    10. '<|end|>' → logprob: -17.625009536743164

Token 504: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06994521617889404
    2. '[' → logprob: -2.6949453353881836
    3. '```' → logprob: -12.194945335388184
    4. ' ' → logprob: -13.569945335388184
    5. '(' → logprob: -13.819945335388184
    6. ' [' → logprob: -14.319945335388184
    7. '[
' → logprob: -15.069945335388184
    8. '<|end|>' → logprob: -15.194945335388184
    9. '{' → logprob: -16.319944381713867
    10. '   ' → logprob: -16.819944381713867

Token 505: ']=' (ID: 9539)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04341578856110573
    2. '=' → logprob: -3.1684157848358154
    3. ']=' → logprob: -8.293416023254395
    4. '=[' → logprob: -10.168416023254395
    5. '```' → logprob: -10.293416023254395
    6. '0' → logprob: -10.543416023254395
    7. '+=' → logprob: -11.043416023254395
    8. '][' → logprob: -11.168416023254395
    9. ']+=' → logprob: -12.293416023254395
    10. ')=' → logprob: -12.543416023254395

Token 506: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -9.729906196298543e-06
    2. ' r' → logprob: -11.625009536743164
    3. '   ' → logprob: -14.750009536743164
    4. '
' → logprob: -16.625009536743164
    5. '	r' → logprob: -16.750009536743164
    6. '[r' → logprob: -16.875009536743164
    7. 'pos' → logprob: -17.000009536743164
    8. ' ' → logprob: -17.375009536743164
    9. '           ' → logprob: -17.625009536743164
    10. '```' → logprob: -17.625009536743164

Token 507: ';' (ID: 26)
  Prédit: ';'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ';' → logprob: -0.0005819845828227699
    2. '                   ' → logprob: -8.250581741333008
    3. '               ' → logprob: -8.750581741333008
    4. ';
' → logprob: -10.250581741333008
    5. ' ;' → logprob: -10.375581741333008
    6. '
' → logprob: -10.500581741333008
    7. ';s' → logprob: -10.875581741333008
    8. '[' → logprob: -11.750581741333008
    9. '<|end|>' → logprob: -11.875581741333008
    10. '                       ' → logprob: -12.125581741333008

Token 508: ' sts' (ID: 135210)
  Prédit: 'sts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sts' → logprob: -0.2256099283695221
    2. ' sts' → logprob: -1.6006098985671997
    3. '                               ' → logprob: -9.72560977935791
    4. '               ' → logprob: -10.60060977935791
    5. '
' → logprob: -10.85060977935791
    6. 'sst' → logprob: -11.10060977935791
    7. 'st' → logprob: -11.22560977935791
    8. '                   ' → logprob: -11.47560977935791
    9. '                           ' → logprob: -12.10060977935791
    10. '   ' → logprob: -12.22560977935791

Token 509: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -16.125
    3. '[' → logprob: -16.375
    4. 'i' → logprob: -17.0
    5. '[
' → logprob: -19.125
    6. '{i' → logprob: -19.375
    7. '(i' → logprob: -19.5
    8. ' [' → logprob: -19.75
    9. '[int' → logprob: -19.75
    10. '<|end|>' → logprob: -20.125

Token 510: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.01958494819700718
    2. ']' → logprob: -4.769585132598877
    3. '][' → logprob: -5.269585132598877
    4. '[i' → logprob: -5.894585132598877
    5. '=' → logprob: -6.394585132598877
    6. '[' → logprob: -6.644585132598877
    7. ']==' → logprob: -11.394584655761719
    8. ')=' → logprob: -12.144584655761719
    9. '']=' → logprob: -12.394584655761719
    10. '=True' → logprob: -12.894584655761719

Token 511: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -14.000000953674316
    3. 'True' → logprob: -15.500000953674316
    4. '0' → logprob: -15.750000953674316
    5. '```' → logprob: -17.875001907348633
    6. '[' → logprob: -18.000001907348633
    7. '   ' → logprob: -19.000001907348633
    8. ' True' → logprob: -20.000001907348633
    9. '
' → logprob: -20.125001907348633
    10. 'pop' → logprob: -20.375001907348633

Token 512: ';' (ID: 26)
  Prédit: ';'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ';' → logprob: -0.003586295060813427
    2. ' pop' → logprob: -6.253586292266846
    3. 'pop' → logprob: -7.003586292266846
    4. '                   ' → logprob: -7.503586292266846
    5. '.pop' → logprob: -9.253586769104004
    6. '(pop' → logprob: -10.628586769104004
    7. ',' → logprob: -11.003586769104004
    8. '               ' → logprob: -11.503586769104004
    9. '
' → logprob: -11.628586769104004
    10. '<|end|>' → logprob: -11.753586769104004

Token 513: ' pop' (ID: 2735)
  Prédit: ' pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pop' → logprob: -0.38690564036369324
    2. 'pop' → logprob: -1.1369056701660156
    3. '.pop' → logprob: -10.636905670166016
    4. '(pop' → logprob: -12.386905670166016
    5. '	pop' → logprob: -12.761905670166016
    6. '```' → logprob: -14.636905670166016
    7. '                   ' → logprob: -14.636905670166016
    8. '_pop' → logprob: -14.886905670166016
    9. 'popover' → logprob: -15.011905670166016
    10. '
' → logprob: -15.511905670166016

Token 514: '_top' (ID: 23394)
  Prédit: '_top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_top' → logprob: -1.1160349458805285e-05
    2. 'Top' → logprob: -12.250011444091797
    3. 'top' → logprob: -12.375011444091797
    4. '_up' → logprob: -13.500011444091797
    5. '```' → logprob: -15.500011444091797
    6. '_bottom' → logprob: -16.125011444091797
    7. '_pop' → logprob: -16.375011444091797
    8. 'pop' → logprob: -16.625011444091797
    9. '_TOP' → logprob: -16.625011444091797
    10. '(top' → logprob: -17.375011444091797

Token 515: '(seq' (ID: 78669)
  Prédit: '(seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -2.15310683415737e-05
    2. 'seq' → logprob: -10.750021934509277
    3. '_seq' → logprob: -16.87502098083496
    4. ' seq' → logprob: -17.37502098083496
    5. 'Seq' → logprob: -17.75002098083496
    6. '(sequence' → logprob: -18.50002098083496
    7. '.seq' → logprob: -18.75002098083496
    8. '(' → logprob: -19.12502098083496
    9. '```' → logprob: -19.50002098083496
    10. '(se' → logprob: -20.87502098083496

Token 516: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.17631447315216064
    2. '(seq' → logprob: -1.9263144731521606
    3. 'seq' → logprob: -4.176314353942871
    4. 'Seq' → logprob: -7.676314353942871
    5. '_seq' → logprob: -9.176314353942871
    6. ' seq' → logprob: -10.551314353942871
    7. '(sequence' → logprob: -12.801314353942871
    8. '_B' → logprob: -12.926314353942871
    9. '(' → logprob: -13.051314353942871
    10. '```' → logprob: -13.426314353942871

Token 517: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6767198443412781
    2. ',p' → logprob: -0.9267198443412781
    3. '(pointer' → logprob: -2.426719903945923
    4. 'pointer' → logprob: -4.926719665527344
    5. ':pointer' → logprob: -9.176719665527344
    6. ' pointer' → logprob: -9.551719665527344
    7. ' ,' → logprob: -10.301719665527344
    8. '/p' → logprob: -10.301719665527344
    9. '_pointer' → logprob: -11.176719665527344
    10. 'Pointer' → logprob: -11.801719665527344

Token 518: ' pointer' (ID: 16233)
  Prédit: 'pointer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pointer' → logprob: -4.842555426876061e-06
    2. ' pointer' → logprob: -12.250004768371582
    3. '(pointer' → logprob: -17.0000057220459
    4. 'Pointer' → logprob: -21.3750057220459
    5. '_pointer' → logprob: -21.5000057220459
    6. '.pointer' → logprob: -21.8750057220459
    7. 'sequence' → logprob: -22.1250057220459
    8. ':pointer' → logprob: -23.2500057220459
    9. 'ptr' → logprob: -24.0000057220459
    10. 'p' → logprob: -24.0000057220459

Token 519: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00026777281891554594
    2. ',' → logprob: -8.75026798248291
    3. '[' → logprob: -10.12526798248291
    4. '(pointer' → logprob: -10.50026798248291
    5. 'pointer' → logprob: -10.62526798248291
    6. '```' → logprob: -12.50026798248291
    7. '   ' → logprob: -13.12526798248291
    8. ')' → logprob: -13.12526798248291
    9. ',p' → logprob: -13.25026798248291
    10. '),' → logprob: -13.37526798248291

Token 520: ');' (ID: 2245)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0036112358793616295
    2. ',p' → logprob: -5.628611087799072
    3. '   ' → logprob: -12.50361156463623
    4. ' ,' → logprob: -12.75361156463623
    5. 'pointer' → logprob: -13.25361156463623
    6. '(pointer' → logprob: -13.62861156463623
    7. ')' → logprob: -14.62861156463623
    8. '[' → logprob: -15.25361156463623
    9. '),' → logprob: -15.50361156463623
    10. '[p' → logprob: -15.75361156463623

Token 521: ' flag' (ID: 9641)
  Prédit: ' flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flag' → logprob: -0.016156600788235664
    2. 'flag' → logprob: -4.1411566734313965
    3. ' continue' → logprob: -9.516156196594238
    4. ' break' → logprob: -10.266156196594238
    5. 'continue' → logprob: -12.391156196594238
    6. '                   ' → logprob: -12.766156196594238
    7. '(flag' → logprob: -13.516156196594238
    8. '               ' → logprob: -13.641156196594238
    9. '	flag' → logprob: -13.766156196594238
    10. 'break' → logprob: -13.766156196594238

Token 522: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -9.610702363715973e-06
    2. 'A' → logprob: -11.750009536743164
    3. '[' → logprob: -13.375009536743164
    4. '```' → logprob: -16.750009536743164
    5. ' B' → logprob: -17.500009536743164
    6. '_B' → logprob: -18.375009536743164
    7. '=' → logprob: -18.375009536743164
    8. '=True' → logprob: -19.875009536743164
    9. '<|end|>' → logprob: -20.125009536743164
    10. '   ' → logprob: -20.250009536743164

Token 523: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.173704271830502e-06
    2. '=' → logprob: -14.00000286102295
    3. '```' → logprob: -14.00000286102295
    4. '=[' → logprob: -14.12500286102295
    5. '<|end|>' → logprob: -14.37500286102295
    6. ')[' → logprob: -16.375003814697266
    7. '﻿' → logprob: -16.875003814697266
    8. '\[' → logprob: -18.375003814697266
    9. '...' → logprob: -18.750003814697266
    10. '`' → logprob: -18.750003814697266

Token 524: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005236479919403791
    2. '[' → logprob: -5.255236625671387
    3. ' ' → logprob: -13.630236625671387
    4. '
' → logprob: -14.630236625671387
    5. '```' → logprob: -14.630236625671387
    6. ' [' → logprob: -15.880236625671387
    7. '(' → logprob: -16.56773567199707
    8. '   ' → logprob: -16.75523567199707
    9. '][' → logprob: -17.44273567199707
    10. '=' → logprob: -17.44273567199707

Token 525: ']=' (ID: 9539)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01680714637041092
    2. '[' → logprob: -4.1418070793151855
    3. ']=' → logprob: -7.7668070793151855
    4. '=[' → logprob: -8.016807556152344
    5. ')=' → logprob: -11.641807556152344
    6. '][' → logprob: -12.766807556152344
    7. '0' → logprob: -13.016807556152344
    8. '=
' → logprob: -13.891807556152344
    9. '```' → logprob: -14.016807556152344
    10. '<|end|>' → logprob: -14.266807556152344

Token 526: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004637791775166988
    2. '1' → logprob: -5.379637718200684
    3. ' ' → logprob: -11.129637718200684
    4. '[' → logprob: -15.254637718200684
    5. '   ' → logprob: -15.254637718200684
    6. '-' → logprob: -15.317137718200684
    7. '۰' → logprob: -15.317137718200684
    8. '01' → logprob: -15.379637718200684
    9. '```' → logprob: -15.567137718200684
    10. '=' → logprob: -15.692137718200684

Token 527: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0010854477295652032
    2. 'else' → logprob: -7.12608528137207
    3. ' else' → logprob: -8.87608528137207
    4. '<|end|>' → logprob: -9.62608528137207
    5. '```' → logprob: -10.62608528137207
    6. '
' → logprob: -10.87608528137207
    7. '           ' → logprob: -11.75108528137207
    8. '              ' → logprob: -11.87608528137207
    9. '                   ' → logprob: -12.37608528137207
    10. '                ' → logprob: -12.50108528137207

Token 528: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005340605042874813
    2. '<|end|>' → logprob: -5.380340576171875
    3. 'else' → logprob: -7.755340576171875
    4. ' else' → logprob: -8.755340576171875
    5. '```' → logprob: -9.755340576171875
    6. '                ' → logprob: -10.380340576171875
    7. '              ' → logprob: -11.130340576171875
    8. '			' → logprob: -11.755340576171875
    9. '<|end|>' → logprob: -12.130340576171875
    10. '                   ' → logprob: -13.005340576171875

Token 529: ' elif' (ID: 9497)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005132119636982679
    2. 'elif' (adapté à ' elif') → logprob: -6.00513219833374
    3. 'else' → logprob: -6.00513219833374
    4. ' else' → logprob: -9.005131721496582
    5. ' elif' → logprob: -9.880131721496582
    6. '```' → logprob: -12.880131721496582
    7. '                
' → logprob: -13.005131721496582
    8. '              ' → logprob: -13.130131721496582
    9. '           ' → logprob: -13.130131721496582
    10. '                   ' → logprob: -13.755131721496582

Token 530: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.181339293718338
    2. ' flag' → logprob: -1.8063392639160156
    3. ' not' → logprob: -6.806339263916016
    4. 'not' → logprob: -7.681339263916016
    5. '(flag' → logprob: -10.931339263916016
    6. '	flag' → logprob: -13.056339263916016
    7. ' ' → logprob: -13.556339263916016
    8. '   ' → logprob: -13.681339263916016
    9. 'val' → logprob: -13.931339263916016
    10. '.flag' → logprob: -15.306339263916016

Token 531: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -2.2007883671903983e-05
    2. '[' → logprob: -11.500021934509277
    3. 'A' → logprob: -11.625021934509277
    4. '```' → logprob: -13.250021934509277
    5. '=' → logprob: -14.625021934509277
    6. '<|end|>' → logprob: -15.375021934509277
    7. ' B' → logprob: -15.500021934509277
    8. '[
' → logprob: -17.125022888183594
    9. '   ' → logprob: -17.500022888183594
    10. ' ' → logprob: -17.750022888183594

Token 532: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.7432603272027336e-06
    2. '```' → logprob: -13.375001907348633
    3. '<|end|>' → logprob: -16.250001907348633
    4. '﻿' → logprob: -18.375001907348633
    5. '[
' → logprob: -18.875001907348633
    6. '==' → logprob: -19.000001907348633
    7. ' [' → logprob: -19.125001907348633
    8. '
' → logprob: -19.375001907348633
    9. '__[' → logprob: -19.625001907348633
    10. '...' → logprob: -19.750001907348633

Token 533: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00977616012096405
    2. '0' → logprob: -4.6347761154174805
    3. '```' → logprob: -11.00977611541748
    4. ' ' → logprob: -13.38477611541748
    5. ' [' → logprob: -13.75977611541748
    6. '[
' → logprob: -14.25977611541748
    7. '<|end|>' → logprob: -16.759777069091797
    8. '
' → logprob: -16.884777069091797
    9. '``' → logprob: -17.134777069091797
    10. '   ' → logprob: -17.634777069091797

Token 534: ']==' (ID: 34128)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0019376773852854967
    2. '==' → logprob: -6.2519378662109375
    3. ' ==' → logprob: -12.501937866210938
    4. '```' → logprob: -12.876937866210938
    5. ']==' → logprob: -14.376937866210938
    6. ')==' → logprob: -14.501937866210938
    7. '=[' → logprob: -14.876937866210938
    8. '==
' → logprob: -14.876937866210938
    9. ' [' → logprob: -15.251937866210938
    10. '==(' → logprob: -15.876937866210938

Token 535: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00597761943936348
    2. '0' → logprob: -5.130977630615234
    3. '[' → logprob: -10.380977630615234
    4. ' ' → logprob: -11.130977630615234
    5. '```' → logprob: -12.880977630615234
    6. '   ' → logprob: -14.755977630615234
    7. 'not' → logprob: -16.693477630615234
    8. '
' → logprob: -16.755977630615234
    9. '[
' → logprob: -17.443477630615234
    10. '	' → logprob: -17.630977630615234

Token 536: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.20120912790298462
    2. ':' → logprob: -1.8262090682983398
    3. '               ' → logprob: -4.57620906829834
    4. ':
' → logprob: -5.07620906829834
    5. '.pop' → logprob: -6.70120906829834
    6. '           ' → logprob: -6.95120906829834
    7. '```' → logprob: -8.20120906829834
    8. 'pop' → logprob: -8.20120906829834
    9. '<|end|>' → logprob: -8.32620906829834
    10. ')' → logprob: -8.45120906829834

Token 537: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005257833749055862
    2. 'pop' → logprob: -5.880257606506348
    3. ' pop' → logprob: -6.130257606506348
    4. '               ' → logprob: -8.880257606506348
    5. '           ' → logprob: -10.130257606506348
    6. '```' → logprob: -10.130257606506348
    7. '.pop' → logprob: -11.380257606506348
    8. '                  ' → logprob: -11.505257606506348
    9. '                       ' → logprob: -11.880257606506348
    10. '<|end|>' → logprob: -12.255257606506348

Token 538: ' pop' (ID: 2735)
  Prédit: 'pop'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pop' (adapté à ' pop') → logprob: -0.005270395893603563
    2. ' pop' → logprob: -5.255270481109619
    3. '                   ' → logprob: -10.255270004272461
    4. '```' → logprob: -14.505270004272461
    5. '	pop' → logprob: -15.130270004272461
    6. '.pop' → logprob: -15.380270004272461
    7. '               ' → logprob: -15.505270004272461
    8. 'flag' → logprob: -15.755270004272461
    9. '                       ' → logprob: -16.13027000427246
    10. '           ' → logprob: -17.50527000427246

Token 539: '_top' (ID: 23394)
  Prédit: '_top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_top' → logprob: -3.7697225252486533e-06
    2. 'top' → logprob: -13.000003814697266
    3. 'Top' → logprob: -14.625003814697266
    4. '_up' → logprob: -14.875003814697266
    5. '_TOP' → logprob: -15.500003814697266
    6. '_pop' → logprob: -16.250003814697266
    7. '_bottom' → logprob: -17.000003814697266
    8. '```' → logprob: -17.125003814697266
    9. '_token' → logprob: -17.250003814697266
    10. 'pop' → logprob: -17.500003814697266

Token 540: '(seq' (ID: 78669)
  Prédit: '(seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -1.306760805164231e-05
    2. 'seq' → logprob: -11.25001335144043
    3. '```' → logprob: -18.50001335144043
    4. 'Seq' → logprob: -19.25001335144043
    5. ' seq' → logprob: -19.62501335144043
    6. '(sequence' → logprob: -19.75001335144043
    7. '.seq' → logprob: -20.25001335144043
    8. '_seq' → logprob: -20.50001335144043
    9. '(s' → logprob: -21.00001335144043
    10. 'sq' → logprob: -21.12501335144043

Token 541: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.055644817650318146
    2. '(seq' → logprob: -2.9306447505950928
    3. 'seq' → logprob: -7.555644989013672
    4. '_B' → logprob: -8.555644989013672
    5. '```' → logprob: -10.930644989013672
    6. '[' → logprob: -11.055644989013672
    7. 'sq' → logprob: -12.180644989013672
    8. '_seq' → logprob: -13.180644989013672
    9. 'Seq' → logprob: -13.805644989013672
    10. '(' → logprob: -14.055644989013672

Token 542: ',p' (ID: 14835)
  Prédit: '(seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -0.5241140127182007
    2. ',p' → logprob: -1.0241140127182007
    3. ',' → logprob: -3.2741141319274902
    4. '(p' → logprob: -5.14911413192749
    5. 'seq' → logprob: -5.77411413192749
    6. ',s' → logprob: -6.52411413192749
    7. '(sequence' → logprob: -8.649113655090332
    8. '[p' → logprob: -9.024113655090332
    9. '(s' → logprob: -9.524113655090332
    10. ')' → logprob: -10.149113655090332

Token 543: 'ointer' (ID: 6740)
  Prédit: 'ointer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ointer' → logprob: -3.3213025744771585e-05
    2. 'pointer' → logprob: -10.750033378601074
    3. 'inter' → logprob: -11.750033378601074
    4. '[' → logprob: -12.875033378601074
    5. '```' → logprob: -14.750033378601074
    6. '
' → logprob: -15.750033378601074
    7. '   ' → logprob: -16.000032424926758
    8. 'OINTER' → logprob: -16.125032424926758
    9. 'r' → logprob: -16.250032424926758
    10. '`' → logprob: -16.250032424926758

Token 544: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -6.813969957875088e-05
    2. '[' → logprob: -9.625067710876465
    3. '1' → logprob: -14.375067710876465
    4. '```' → logprob: -14.375067710876465
    5. '_B' → logprob: -15.500067710876465
    6. ')' → logprob: -15.625067710876465
    7. 'A' → logprob: -16.25006866455078
    8. 'pointer' → logprob: -16.62506866455078
    9. '=' → logprob: -16.75006866455078
    10. '(' → logprob: -16.75006866455078

Token 545: ');' (ID: 2245)
  Prédit: ');'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ');' → logprob: -0.0003622793301474303
    2. ')' → logprob: -8.125362396240234
    3. ';' → logprob: -10.375362396240234
    4. '[' → logprob: -11.125362396240234
    5. '   ' → logprob: -11.625362396240234
    6. ' );' → logprob: -12.625362396240234
    7. ')
' → logprob: -13.500362396240234
    8. '),' → logprob: -13.750362396240234
    9. ',' → logprob: -14.000362396240234
    10. '];' → logprob: -14.125362396240234

Token 546: ' flag' (ID: 9641)
  Prédit: ' flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flag' → logprob: -0.061968132853507996
    2. 'flag' → logprob: -2.8119680881500244
    3. '	flag' → logprob: -15.311967849731445
    4. '(flag' → logprob: -15.811967849731445
    5. '```' → logprob: -17.061967849731445
    6. '.flag' → logprob: -17.686967849731445
    7. '[' → logprob: -17.936967849731445
    8. ' ' → logprob: -18.436967849731445
    9. '_flag' → logprob: -19.186967849731445
    10. 'Flag' → logprob: -19.561967849731445

Token 547: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -2.696889623621246e-06
    2. '[' → logprob: -12.87500286102295
    3. '```' → logprob: -17.000001907348633
    4. '_B' → logprob: -17.500001907348633
    5. 'A' → logprob: -18.250001907348633
    6. ' B' → logprob: -19.125001907348633
    7. '=' → logprob: -19.250001907348633
    8. '   ' → logprob: -20.250001907348633
    9. '0' → logprob: -20.375001907348633
    10. 's' → logprob: -21.000001907348633

Token 548: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.6047699318733066e-05
    2. '=' → logprob: -11.625016212463379
    3. '```' → logprob: -12.250016212463379
    4. '<|end|>' → logprob: -13.625016212463379
    5. '=[' → logprob: -15.125016212463379
    6. 'B' → logprob: -15.375016212463379
    7. '[
' → logprob: -15.500016212463379
    8. ')[' → logprob: -16.250015258789062
    9. '﻿' → logprob: -16.500015258789062
    10. '   ' → logprob: -17.125015258789062

Token 549: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007248217007145286
    2. '[' → logprob: -7.250724792480469
    3. 'B' → logprob: -11.375724792480469
    4. '1' → logprob: -13.000724792480469
    5. '```' → logprob: -14.500724792480469
    6. ' ' → logprob: -15.000724792480469
    7. '[B' → logprob: -15.625724792480469
    8. '(' → logprob: -17.12572479248047
    9. 's' → logprob: -17.50072479248047
    10. '=' → logprob: -17.87572479248047

Token 550: ']=' (ID: 9539)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0007513784803450108
    2. ']=' → logprob: -7.250751495361328
    3. '[' → logprob: -10.125751495361328
    4. ')=' → logprob: -14.125751495361328
    5. '=[' → logprob: -14.750751495361328
    6. ']' → logprob: -16.500751495361328
    7. '0' → logprob: -16.875751495361328
    8. '][' → logprob: -17.125751495361328
    9. '}=' → logprob: -18.000751495361328
    10. '```' → logprob: -18.000751495361328

Token 551: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.173704271830502e-06
    2. '1' → logprob: -13.00000286102295
    3. ' ' → logprob: -14.25000286102295
    4. '   ' → logprob: -17.312503814697266
    5. '```' → logprob: -17.375003814697266
    6. '۰' → logprob: -17.562503814697266
    7. '<|end|>' → logprob: -17.812503814697266
    8. '=' → logprob: -18.000003814697266
    9. '[' → logprob: -18.250003814697266
    10. '01' → logprob: -18.437503814697266

Token 552: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001093903905712068
    2. 'else' → logprob: -7.626093864440918
    3. '<|end|>' → logprob: -7.751093864440918
    4. ' else' → logprob: -9.251093864440918
    5. '			' → logprob: -9.751093864440918
    6. ')' → logprob: -12.251093864440918
    7. '                   ' → logprob: -12.751093864440918
    8. '                ' → logprob: -13.251093864440918
    9. '<|end|>' → logprob: -13.501093864440918
    10. '		       ' → logprob: -13.626093864440918

Token 553: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003202073508873582
    2. 'else' → logprob: -6.003201961517334
    3. ' else' → logprob: -7.253201961517334
    4. '<|end|>' → logprob: -12.128202438354492
    5. '```' → logprob: -13.003202438354492
    6. '                ' → logprob: -13.128202438354492
    7. '                   ' → logprob: -13.253202438354492
    8. '              ' → logprob: -13.253202438354492
    9. '           ' → logprob: -13.628202438354492
    10. '			' → logprob: -14.003202438354492

Token 554: ' else' (ID: 1203)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.020824238657951355
    2. 'else' (adapté à ' else') → logprob: -4.270824432373047
    3. ' else' → logprob: -5.020824432373047
    4. '           ' → logprob: -10.895824432373047
    5. '              ' → logprob: -12.395824432373047
    6. '                ' → logprob: -12.520824432373047
    7. '       ' → logprob: -12.770824432373047
    8. '                   ' → logprob: -13.020824432373047
    9. '			' → logprob: -13.395824432373047
    10. '<|end|>' → logprob: -13.395824432373047

Token 555: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0020267812069505453
    2. ':' → logprob: -7.252026557922363
    3. ':
' → logprob: -7.877026557922363
    4. '               ' → logprob: -8.377026557922363
    5. '                       ' → logprob: -8.502026557922363
    6. '```' → logprob: -9.127026557922363
    7. '{
' → logprob: -9.502026557922363
    8. '           ' → logprob: -9.877026557922363
    9. '                    ' → logprob: -9.877026557922363
    10. '   ' → logprob: -9.877026557922363

Token 556: '                   ' (ID: 699)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.007484764326363802
    2. '                   ' → logprob: -5.1324849128723145
    3. ' flag' → logprob: -6.5074849128723145
    4. '               ' → logprob: -10.632484436035156
    5. '	flag' → logprob: -11.257484436035156
    6. '```' → logprob: -11.257484436035156
    7. '           ' → logprob: -13.007484436035156
    8. '(flag' → logprob: -13.132484436035156
    9. '                  ' → logprob: -13.382484436035156
    10. '                       ' → logprob: -13.507484436035156

Token 557: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' (adapté à ' flag') → logprob: -4.723352049040841e-06
    2. ' flag' → logprob: -12.750004768371582
    3. '                   ' → logprob: -13.250004768371582
    4. '               ' → logprob: -17.125003814697266
    5. '	flag' → logprob: -18.875003814697266
    6. '                       ' → logprob: -19.750003814697266
    7. '           ' → logprob: -20.375003814697266
    8. '(flag' → logprob: -20.375003814697266
    9. '   ' → logprob: -20.625003814697266
    10. '                    ' → logprob: -20.750003814697266

Token 558: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -1.7432603272027336e-06
    2. 'A' → logprob: -13.375001907348633
    3. '[' → logprob: -16.000001907348633
    4. '<|end|>' → logprob: -17.500001907348633
    5. '```' → logprob: -18.250001907348633
    6. ' B' → logprob: -18.250001907348633
    7. '=' → logprob: -20.250001907348633
    8. 'b' → logprob: -20.625001907348633
    9. '_B' → logprob: -21.125001907348633
    10. 's' → logprob: -21.375001907348633

Token 559: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0445127372804563e-05
    2. '<|end|>' → logprob: -12.25001049041748
    3. '```' → logprob: -12.37501049041748
    4. '=' → logprob: -14.25001049041748
    5. 'B' → logprob: -15.50001049041748
    6. '
' → logprob: -16.000009536743164
    7. '[
' → logprob: -16.125009536743164
    8. '﻿' → logprob: -16.500009536743164
    9. ')[' → logprob: -16.750009536743164
    10. '   ' → logprob: -17.125009536743164

Token 560: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02334889955818653
    2. '0' → logprob: -3.773348808288574
    3. ' ' → logprob: -9.773348808288574
    4. '1' → logprob: -10.648348808288574
    5. ' [' → logprob: -10.898348808288574
    6. '```' → logprob: -12.773348808288574
    7. '   ' → logprob: -14.398348808288574
    8. '  ' → logprob: -15.398348808288574
    9. '[
' → logprob: -15.773348808288574
    10. '``' → logprob: -16.27334976196289

Token 561: ']=' (ID: 9539)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07981377094984055
    2. '=' → logprob: -2.5798137187957764
    3. '=[' → logprob: -7.2048139572143555
    4. '][' → logprob: -9.704813957214355
    5. ']=' → logprob: -9.829813957214355
    6. ')[' → logprob: -10.329813957214355
    7. '```' → logprob: -11.079813957214355
    8. ')=' → logprob: -12.829813957214355
    9. '[
' → logprob: -12.954813957214355
    10. '=[
' → logprob: -13.704813957214355

Token 562: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.375
    3. '0' → logprob: -18.375
    4. '<|end|>' → logprob: -18.625
    5. '```' → logprob: -18.875
    6. '   ' → logprob: -19.75
    7. '[' → logprob: -20.875
    8. 's' → logprob: -21.625
    9. 'True' → logprob: -21.8125
    10. 'not' → logprob: -22.0625

Token 563: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00021212305000517517
    2. '                   ' → logprob: -8.500211715698242
    3. '           ' → logprob: -12.625211715698242
    4. 'break' → logprob: -13.500211715698242
    5. '       ' → logprob: -13.625211715698242
    6. '<|end|>' → logprob: -14.000211715698242
    7. '                ' → logprob: -14.750211715698242
    8. '			' → logprob: -14.875211715698242
    9. '```' → logprob: -15.000211715698242
    10. '   ' → logprob: -15.375211715698242

Token 564: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002501343551557511
    2. '                   ' → logprob: -8.875249862670898
    3. '<|end|>' → logprob: -9.875249862670898
    4. '       ' → logprob: -10.625249862670898
    5. '           ' → logprob: -11.125249862670898
    6. '```' → logprob: -11.625249862670898
    7. 'break' → logprob: -13.000249862670898
    8. '                ' → logprob: -13.375249862670898
    9. '   ' → logprob: -13.500249862670898
    10. '			' → logprob: -13.625249862670898

Token 565: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -7.672236824873835e-05
    2. 'break' (adapté à ' break') → logprob: -9.875076293945312
    3. '                   ' → logprob: -10.750076293945312
    4. ' break' → logprob: -13.875076293945312
    5. '       ' → logprob: -14.500076293945312
    6. '           ' → logprob: -14.500076293945312
    7. '			' → logprob: -14.875076293945312
    8. '	break' → logprob: -15.000076293945312
    9. '<|end|>' → logprob: -15.125076293945312
    10. '   ' → logprob: -15.250076293945312

Token 566: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 567: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2186211794614792
    2. '<|end|>' → logprob: -1.7186211347579956
    3. '
' → logprob: -4.843621253967285
    4. '   ' → logprob: -5.593621253967285
    5. '<|end|>' → logprob: -6.593621253967285
    6. ')' → logprob: -6.968621253967285
    7. ',' → logprob: -7.468621253967285
    8. '```' → logprob: -7.593621253967285
    9. '        
' → logprob: -7.968621253967285
    10. '           ' → logprob: -8.343621253967285

Token 568: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12085659801959991
    2. ')' → logprob: -2.620856523513794
    3. '       ' → logprob: -4.745856761932373
    4. '    ' → logprob: -4.745856761932373
    5. '+' → logprob: -4.995856761932373
    6. '<|end|>' → logprob: -5.745856761932373
    7. ' ' → logprob: -6.370856761932373
    8. '[' → logprob: -6.620856761932373
    9. '-' → logprob: -6.995856761932373
    10. ' return' → logprob: -6.995856761932373

Token 569: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.5770041346549988
    2. ' val' → logprob: -0.8270041346549988
    3. '(val' → logprob: -7.2020039558410645
    4. ' (' → logprob: -8.827004432678223
    5. ' pos' → logprob: -9.702004432678223
    6. 'pos' → logprob: -10.202004432678223
    7. '(' → logprob: -10.202004432678223
    8. '[' → logprob: -11.827004432678223
    9. '[val' → logprob: -11.827004432678223
    10. '(pos' → logprob: -11.952004432678223

Token 570: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002043748099822551
    2. '```' → logprob: -9.500204086303711
    3. ',' → logprob: -10.250204086303711
    4. 's' → logprob: -11.250204086303711
    5. ')[' → logprob: -11.250204086303711
    6. '   ' → logprob: -11.375204086303711
    7. '<|end|>' → logprob: -11.375204086303711
    8. '
' → logprob: -11.750204086303711
    9. ')' → logprob: -11.875204086303711
    10. '][' → logprob: -12.500204086303711

Token 571: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.75
    3. ' ' → logprob: -15.875
    4. '```' → logprob: -18.25
    5. '-' → logprob: -19.625
    6. '
' → logprob: -20.625
    7. '   ' → logprob: -20.875
    8. '{' → logprob: -21.125
    9. '][' → logprob: -21.625
    10. '`' → logprob: -22.125

Token 572: ']+' (ID: 15344)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015542630571871996
    2. ']' → logprob: -6.501554489135742
    3. '[' → logprob: -11.251554489135742
    4. ')]' → logprob: -11.251554489135742
    5. '+' → logprob: -11.876554489135742
    6. ')
' → logprob: -12.001554489135742
    7. '}' → logprob: -12.501554489135742
    8. '])' → logprob: -12.876554489135742
    9. '   ' → logprob: -13.126554489135742
    10. '<|end|>' → logprob: -13.376554489135742

Token 573: 'abs' (ID: 6071)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.18586456775665283
    2. '1' → logprob: -2.5608644485473633
    3. 'abs' → logprob: -3.0608644485473633
    4. '(pos' → logprob: -4.185864448547363
    5. 'N' → logprob: -4.435864448547363
    6. 'max' → logprob: -5.185864448547363
    7. 'len' → logprob: -5.685864448547363
    8. '(' → logprob: -6.310864448547363
    9. 'min' → logprob: -6.310864448547363
    10. 'val' → logprob: -7.185864448547363

Token 574: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.012132041156291962
    2. '(S' → logprob: -4.887132167816162
    3. '(' → logprob: -6.012132167816162
    4. '(N' → logprob: -6.387132167816162
    5. '(Pos' → logprob: -8.762131690979004
    6. '(val' → logprob: -9.512131690979004
    7. '(sec' → logprob: -10.137131690979004
    8. '(left' → logprob: -10.387131690979004
    9. '(indices' → logprob: -10.512131690979004
    10. 'pos' → logprob: -11.512131690979004

Token 575: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -15.125000953674316
    3. '-' → logprob: -15.625000953674316
    4. ')' → logprob: -16.0
    5. '```' → logprob: -16.125
    6. '[
' → logprob: -16.625
    7. '0' → logprob: -17.625
    8. ' -' → logprob: -17.875
    9. '
' → logprob: -18.0
    10. ')[' → logprob: -18.125

Token 576: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08895561099052429
    2. '[' → logprob: -2.4639556407928467
    3. '<|end|>' → logprob: -12.463955879211426
    4. ' ' → logprob: -13.088955879211426
    5. '(' → logprob: -13.088955879211426
    6. ')' → logprob: -13.338955879211426
    7. '.' → logprob: -13.838955879211426
    8. '-' → logprob: -13.838955879211426
    9. '```' → logprob: -13.838955879211426
    10. '][' → logprob: -14.588955879211426

Token 577: '])

' (ID: 21045)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.036542851477861404
    2. ' -' → logprob: -4.161542892456055
    3. '[' → logprob: -4.786542892456055
    4. ']' → logprob: -5.411542892456055
    5. ')' → logprob: -5.536542892456055
    6. '])' → logprob: -5.786542892456055
    7. ']-' → logprob: -8.286542892456055
    8. ')])' → logprob: -10.286542892456055
    9. '-)' → logprob: -10.411542892456055
    10. ')]' → logprob: -10.411542892456055

Token 578: 'ans' (ID: 616)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05450248718261719
    2. '<|end|>' → logprob: -3.179502487182617
    3. '(' → logprob: -5.304502487182617
    4. '#' → logprob: -5.554502487182617
    5. ':' → logprob: -7.179502487182617
    6. '(
' → logprob: -7.554502487182617
    7. '```' → logprob: -7.554502487182617
    8. '[' → logprob: -8.304502487182617
    9. '
' → logprob: -8.679502487182617
    10. '<|end|>' → logprob: -9.679502487182617

Token 579: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16136673092842102
    2. ' =' → logprob: -1.9113667011260986
    3. '(' → logprob: -7.536366939544678
    4. ' +=' → logprob: -8.91136646270752
    5. '<|end|>' → logprob: -9.53636646270752
    6. ',' → logprob: -9.91136646270752
    7. '_' → logprob: -9.91136646270752
    8. '[' → logprob: -10.16136646270752
    9. '+=' → logprob: -10.16136646270752
    10. ')' → logprob: -10.16136646270752

Token 580: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03512173146009445
    2. ' =' → logprob: -3.6601216793060303
    3. '(' → logprob: -5.160121917724609
    4. '[' → logprob: -7.410121917724609
    5. '+' → logprob: -7.535121917724609
    6. ')' → logprob: -7.535121917724609
    7. '+=' → logprob: -7.660121917724609
    8. ' +=' → logprob: -8.03512191772461
    9. ']' → logprob: -8.41012191772461
    10. '1' → logprob: -9.41012191772461

Token 581: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.005737748462706804
    2. ' process' → logprob: -5.630737781524658
    3. 'min' → logprob: -6.505737781524658
    4. 'max' → logprob: -7.755737781524658
    5. 'abs' → logprob: -9.2557373046875
    6. '(process' → logprob: -10.1307373046875
    7. '0' → logprob: -10.7557373046875
    8. 'reduce' → logprob: -11.0057373046875
    9. ' min' → logprob: -11.7557373046875
    10. 'val' → logprob: -11.7557373046875

Token 582: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0011377158807590604
    2. '((' → logprob: -7.126137733459473
    3. '(S' → logprob: -8.126137733459473
    4. '(R' → logprob: -10.501137733459473
    5. '(L' → logprob: -13.126137733459473
    6. '(left' → logprob: -13.251137733459473
    7. ' (' → logprob: -13.626137733459473
    8. '(
' → logprob: -13.876137733459473
    9. '(Line' → logprob: -14.126137733459473
    10. '([' → logprob: -14.251137733459473

Token 583: 'Left' (ID: 7471)
  Prédit: 'Left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Left' → logprob: -8.41866585687967e-06
    2. 'Right' → logprob: -11.875008583068848
    3. '[' → logprob: -14.500008583068848
    4. '(' → logprob: -15.125008583068848
    5. 'left' → logprob: -15.125008583068848
    6. ' Left' → logprob: -15.375008583068848
    7. 'LEFT' → logprob: -17.62500762939453
    8. ')' → logprob: -17.75000762939453
    9. 'L' → logprob: -17.75000762939453
    10. 'copy' → logprob: -18.12500762939453

Token 584: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.762356209335849e-05
    2. '2' → logprob: -11.00003719329834
    3. ',' → logprob: -11.25003719329834
    4. '(' → logprob: -11.87503719329834
    5. '[' → logprob: -14.50003719329834
    6. ')' → logprob: -15.75003719329834
    7. ' ' → logprob: -16.750038146972656
    8. '```' → logprob: -16.750038146972656
    9. 'Left' → logprob: -16.750038146972656
    10. '   ' → logprob: -17.750038146972656

Token 585: '[:' (ID: 7808)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8670179997570813e-05
    2. ' ,' → logprob: -11.000019073486328
    3. ',
' → logprob: -13.500019073486328
    4. '[' → logprob: -15.000019073486328
    5. '[],' → logprob: -17.125019073486328
    6. ',

' → logprob: -18.125019073486328
    7. 'Right' → logprob: -18.250019073486328
    8. '   ' → logprob: -18.375019073486328
    9. '```' → logprob: -18.750019073486328
    10. '.copy' → logprob: -18.875019073486328

Token 586: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.43052953481674194
    2. ',' → logprob: -1.0555295944213867
    3. '),' → logprob: -6.430529594421387
    4. ' ,' → logprob: -10.055529594421387
    5. '(),' → logprob: -10.430529594421387
    6. '()],' → logprob: -10.555529594421387
    7. '],[' → logprob: -10.680529594421387
    8. ']' → logprob: -11.055529594421387
    9. ':],' → logprob: -11.555529594421387
    10. '  ' → logprob: -11.680529594421387

Token 587: ' Right' (ID: 16354)
  Prédit: 'Right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Right' → logprob: -3.6789137084269896e-05
    2. 'Left' → logprob: -10.75003719329834
    3. ' Right' → logprob: -11.12503719329834
    4. '   ' → logprob: -15.00003719329834
    5. ' ' → logprob: -16.625036239624023
    6. '.Right' → logprob: -18.000036239624023
    7. 'right' → logprob: -18.125036239624023
    8. '_Right' → logprob: -18.500036239624023
    9. '  ' → logprob: -18.625036239624023
    10. '
' → logprob: -19.250036239624023

Token 588: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.20141451060771942
    2. '1' → logprob: -1.7014144659042358
    3. '```' → logprob: -14.888914108276367
    4. '[' → logprob: -15.263914108276367
    5. '[:' → logprob: -16.701414108276367
    6. ')' → logprob: -16.951414108276367
    7. '0' → logprob: -17.076414108276367
    8. '[::-' → logprob: -17.201414108276367
    9. '(' → logprob: -17.263914108276367
    10. '[:-' → logprob: -17.263914108276367

Token 589: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.005360633134841919
    2. '[:]' → logprob: -5.3803606033325195
    3. '2' → logprob: -8.00536060333252
    4. '[:,' → logprob: -9.00536060333252
    5. '[:-' → logprob: -9.13036060333252
    6. ',' → logprob: -9.63036060333252
    7. '[' → logprob: -9.88036060333252
    8. ')' → logprob: -10.13036060333252
    9. '1' → logprob: -11.75536060333252
    10. ' [:' → logprob: -12.50536060333252

Token 590: '],' (ID: 2155)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004634234122931957
    2. ',' → logprob: -5.379634380340576
    3. ',)' → logprob: -11.879633903503418
    4. '))' → logprob: -13.129633903503418
    5. ')
' → logprob: -13.504633903503418
    6. ' )' → logprob: -13.629633903503418
    7. '),' → logprob: -14.504633903503418
    8. '[' → logprob: -15.004633903503418
    9. ')`' → logprob: -15.129633903503418
    10. ');' → logprob: -15.379633903503418

Token 591: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2015170305967331
    2. '0' → logprob: -1.7015169858932495
    3. 'True' → logprob: -9.951517105102539
    4. ' ' → logprob: -10.076517105102539
    5. 'False' → logprob: -11.701517105102539
    6. '   ' → logprob: -12.451517105102539
    7. '[' → logprob: -14.326517105102539
    8. '  ' → logprob: -15.201517105102539
    9. '```' → logprob: -15.826517105102539
    10. '
' → logprob: -15.889017105102539

Token 592: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1269616037607193
    2. '0' → logprob: -2.1269617080688477
    3. 'True' → logprob: -10.751961708068848
    4. ' ' → logprob: -11.751961708068848
    5. '   ' → logprob: -13.251961708068848
    6. 'False' → logprob: -13.376961708068848
    7. '2' → logprob: -15.689461708068848
    8. '[' → logprob: -16.06446075439453
    9. '
' → logprob: -16.12696075439453
    10. '```' → logprob: -16.18946075439453

Token 593: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8789383830153383e-05
    2. ')' → logprob: -11.250019073486328
    3. ' ,' → logprob: -12.875019073486328
    4. ',
' → logprob: -13.500019073486328
    5. ',)' → logprob: -14.250019073486328
    6. ',

' → logprob: -14.875019073486328
    7. '<|end|>' → logprob: -14.875019073486328
    8. '0' → logprob: -16.625019073486328
    9. '‌,' → logprob: -17.125019073486328
    10. '   ' → logprob: -17.125019073486328

Token 594: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01109557319432497
    2. '1' → logprob: -4.5110955238342285
    3. ' ' → logprob: -10.011096000671387
    4. '   ' → logprob: -12.886096000671387
    5. '```' → logprob: -16.19859504699707
    6. '  ' → logprob: -17.19859504699707
    7. '       ' → logprob: -17.44859504699707
    8. '           ' → logprob: -17.51109504699707
    9. ')' → logprob: -17.76109504699707
    10. '۰' → logprob: -18.01109504699707

Token 595: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07889672368764877
    2. '1' → logprob: -2.5788967609405518
    3. ' ' → logprob: -12.328896522521973
    4. '   ' → logprob: -14.141396522521973
    5. '```' → logprob: -14.266396522521973
    6. '۰' → logprob: -15.891396522521973
    7. ')' → logprob: -16.51639747619629
    8. '-' → logprob: -16.64139747619629
    9. '[' → logprob: -16.64139747619629
    10. '``' → logprob: -17.26639747619629

Token 596: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.2994620242971e-06
    2. ')
' → logprob: -11.875008583068848
    3. ')`' → logprob: -15.000008583068848
    4. '))' → logprob: -15.250008583068848
    5. ')}' → logprob: -15.750008583068848
    6. ')#' → logprob: -15.875008583068848
    7. ' )' → logprob: -16.00000762939453
    8. ')
' → logprob: -16.00000762939453
    9. '),' → logprob: -16.12500762939453
    10. ').' → logprob: -17.25000762939453

Token 597: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.007224538829177618
    2. ')' → logprob: -5.2572245597839355
    3. ',' → logprob: -7.3822245597839355
    4. '(ans' → logprob: -7.7572245597839355
    5. 'print' → logprob: -8.757224082946777
    6. '.' → logprob: -9.007224082946777
    7. '```' → logprob: -9.382224082946777
    8. '+' → logprob: -9.507224082946777
    9. ',
' → logprob: -9.757224082946777
    10. '#' → logprob: -9.757224082946777

Token 598: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.8590300139039755e-05
    2. '=' → logprob: -10.750048637390137
    3. '1' → logprob: -11.375048637390137
    4. '_' → logprob: -11.750048637390137
    5. '3' → logprob: -12.500048637390137
    6. ' =' → logprob: -13.375048637390137
    7. '0' → logprob: -13.500048637390137
    8. '[' → logprob: -14.625048637390137
    9. '_=' → logprob: -15.500048637390137
    10. '```' → logprob: -15.500048637390137

Token 599: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804275393486023
    2. '=' → logprob: -3.2880427837371826
    3. '(process' → logprob: -15.163043022155762
    4. ' =)' → logprob: -15.663043022155762
    5. ' =[' → logprob: -16.038042068481445
    6. '＝' → logprob: -16.538042068481445
    7. '<|end|>' → logprob: -16.788042068481445
    8. '=}' → logprob: -16.788042068481445
    9. '=subprocess' → logprob: -17.038042068481445
    10. ' =
' → logprob: -17.038042068481445

Token 600: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.023245712742209435
    2. ' process' → logprob: -3.7732458114624023
    3. '(process' → logprob: -15.273245811462402
    4. '	process' → logprob: -17.648244857788086
    5. '0' → logprob: -19.523244857788086
    6. 'proces' → logprob: -20.023244857788086
    7. '.process' → logprob: -20.273244857788086
    8. '   ' → logprob: -20.648244857788086
    9. '_process' → logprob: -20.648244857788086
    10. 'rocess' → logprob: -20.898244857788086

Token 601: '(R' (ID: 4092)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.3856492842023727e-06
    2. '((' → logprob: -14.500000953674316
    3. '(R' → logprob: -14.750000953674316
    4. 'Left' → logprob: -16.125001907348633
    5. '(S' → logprob: -16.250001907348633
    6. '(left' → logprob: -16.375001907348633
    7. ' (' → logprob: -16.625001907348633
    8. '(
' → logprob: -17.875001907348633
    9. '(L' → logprob: -18.625001907348633
    10. '(Line' → logprob: -19.250001907348633

Token 602: 'ight' (ID: 583)
  Prédit: 'ight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ight' → logprob: -0.00705303717404604
    2. 'Left' → logprob: -5.257052898406982
    3. 'eft' → logprob: -6.507052898406982
    4. 'Right' → logprob: -8.38205337524414
    5. 'ght' → logprob: -10.25705337524414
    6. 'ef' → logprob: -10.50705337524414
    7. 'ights' → logprob: -12.13205337524414
    8. 'igh' → logprob: -12.13205337524414
    9. 'e' → logprob: -12.38205337524414
    10. 'igth' → logprob: -12.50705337524414

Token 603: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008161775767803192
    2. '1' → logprob: -7.125816345214844
    3. '[' → logprob: -12.375816345214844
    4. '[::-' → logprob: -12.750816345214844
    5. '```' → logprob: -13.500816345214844
    6. '[:' → logprob: -13.750816345214844
    7. 'Right' → logprob: -15.000816345214844
    8. '_' → logprob: -15.125816345214844
    9. '(' → logprob: -15.625816345214844
    10. '[:-' → logprob: -15.938316345214844

Token 604: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.00011689399980241433
    2. '[:,' → logprob: -9.625117301940918
    3. '[:]' → logprob: -10.625117301940918
    4. '[::-' → logprob: -11.625117301940918
    5. '[' → logprob: -11.625117301940918
    6. ',' → logprob: -12.875117301940918
    7. '[:-' → logprob: -13.250117301940918
    8. ' [:' → logprob: -13.250117301940918
    9. '2' → logprob: -14.000117301940918
    10. '][:' → logprob: -14.500117301940918

Token 605: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017289682291448116
    2. '[:' → logprob: -7.0017290115356445
    3. '],' → logprob: -7.6267290115356445
    4. '[],' → logprob: -8.126729011535645
    5. ' ,' → logprob: -11.126729011535645
    6. '[::-' → logprob: -12.126729011535645
    7. '[,' → logprob: -12.126729011535645
    8. '[' → logprob: -13.126729011535645
    9. ' ' → logprob: -13.376729011535645
    10. ',:' → logprob: -13.626729011535645

Token 606: ' Left' (ID: 26982)
  Prédit: 'Left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Left' → logprob: -0.0016138888895511627
    2. ' Left' → logprob: -6.501614093780518
    3. '   ' → logprob: -9.12661361694336
    4. 'Right' → logprob: -14.00161361694336
    5. ' ' → logprob: -14.50161361694336
    6. '    ' → logprob: -14.75161361694336
    7. 'left' → logprob: -15.00161361694336
    8. '       ' → logprob: -15.25161361694336
    9. '_Left' → logprob: -15.87661361694336
    10. '  ' → logprob: -16.00161361694336

Token 607: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.306760805164231e-05
    2. '1' → logprob: -11.25001335144043
    3. '[:' → logprob: -17.81251335144043
    4. '
' → logprob: -18.00001335144043
    5. '[' → logprob: -18.25001335144043
    6. '_' → logprob: -18.31251335144043
    7. '```' → logprob: -18.43751335144043
    8. '۲' → logprob: -18.68751335144043
    9. '(' → logprob: -19.06251335144043
    10. '[::-' → logprob: -19.12501335144043

Token 608: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -3.583550642360933e-05
    2. '[:,' → logprob: -10.500036239624023
    3. '[:]' → logprob: -12.125036239624023
    4. '[::-' → logprob: -13.750036239624023
    5. ',' → logprob: -13.875036239624023
    6. '[' → logprob: -14.500036239624023
    7. '[:-' → logprob: -15.000036239624023
    8. '[,' → logprob: -17.000036239624023
    9. '1' → logprob: -17.125036239624023
    10. ' [:' → logprob: -17.375036239624023

Token 609: '],' (ID: 2155)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.25246647000312805
    2. ',' → logprob: -1.5024664402008057
    3. '[],' → logprob: -7.752466678619385
    4. '],' → logprob: -10.377466201782227
    5. '[:]' → logprob: -10.627466201782227
    6. '[:,' → logprob: -10.752466201782227
    7. '[,' → logprob: -11.127466201782227
    8. '[' → logprob: -11.752466201782227
    9. '[::-' → logprob: -12.377466201782227
    10. ' ,' → logprob: -14.252466201782227

Token 610: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01107033807784319
    2. '0' → logprob: -4.636070251464844
    3. ' ' → logprob: -6.636070251464844
    4. '   ' → logprob: -13.886070251464844
    5. '```' → logprob: -17.573570251464844
    6. '  ' → logprob: -17.761070251464844
    7. ')' → logprob: -17.886070251464844
    8. '           ' → logprob: -17.886070251464844
    9. 'True' → logprob: -18.198570251464844
    10. ',' → logprob: -18.198570251464844

Token 611: '9' (ID: 24)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0341845341026783
    2. '0' → logprob: -3.409184455871582
    3. ' ' → logprob: -7.534184455871582
    4. '   ' → logprob: -13.096684455871582
    5. '```' → logprob: -15.471684455871582
    6. '[' → logprob: -15.846684455871582
    7. '
' → logprob: -15.909184455871582
    8. '  ' → logprob: -15.971684455871582
    9. 'reverse' → logprob: -16.1591854095459
    10. 'True' → logprob: -16.2216854095459

Token 612: ',' (ID: 11)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5896595120429993
    2. '1' → logprob: -0.9646595120429993
    3. '9' → logprob: -2.8396594524383545
    4. ' ' → logprob: -5.464659690856934
    5. ',' → logprob: -6.964659690856934
    6. '   ' → logprob: -7.714659690856934
    7. '```' → logprob: -8.839659690856934
    8. ')' → logprob: -9.964659690856934
    9. '
' → logprob: -10.589659690856934
    10. '``' → logprob: -10.839659690856934

Token 613: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0011148543562740088
    2. '0' → logprob: -6.876114845275879
    3. '1' → logprob: -9.751114845275879
    4. ' ' → logprob: -11.001114845275879
    5. '10' → logprob: -12.751114845275879
    6. '8' → logprob: -14.001114845275879
    7. '```' → logprob: -14.126114845275879
    8. '7' → logprob: -14.751114845275879
    9. '999' → logprob: -15.126114845275879
    10. '90' → logprob: -15.251114845275879

Token 614: '0' (ID: 15)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.003207896137610078
    2. '0' → logprob: -5.878207683563232
    3. '1' → logprob: -7.878207683563232
    4. ' ' → logprob: -11.62820816040039
    5. '10' → logprob: -12.37820816040039
    6. '8' → logprob: -12.87820816040039
    7. '7' → logprob: -13.81570816040039
    8. '
' → logprob: -14.12820816040039
    9. '   ' → logprob: -14.19070816040039
    10. '2' → logprob: -14.25320816040039

Token 615: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029829973354935646
    2. ')
' → logprob: -3.529829978942871
    3. ')
' → logprob: -10.404829978942871
    4. '0' → logprob: -10.654829978942871
    5. '1' → logprob: -11.779829978942871
    6. '2' → logprob: -11.904829978942871
    7. ')

' → logprob: -12.404829978942871
    8. ' )' → logprob: -13.529829978942871
    9. '3' → logprob: -13.904829978942871
    10. '9' → logprob: -14.029829978942871

Token 616: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.4855663721391466e-05
    2. '
' → logprob: -11.625015258789062
    3. '```' → logprob: -12.875015258789062
    4. ')
' → logprob: -13.875015258789062
    5. ' print' → logprob: -14.250015258789062
    6. ')' → logprob: -14.375015258789062
    7. 'ans' → logprob: -15.500015258789062
    8. '``' → logprob: -15.500015258789062
    9. '<|end|>' → logprob: -15.500015258789062
    10. '\' → logprob: -16.750015258789062

Token 617: '(max' (ID: 17178)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.4130167067050934
    2. '(min' → logprob: -1.163016676902771
    3. '(max' → logprob: -3.6630167961120605
    4. 'ans' → logprob: -9.038016319274902
    5. 'min' → logprob: -10.538016319274902
    6. '(abs' → logprob: -12.913016319274902
    7. 'max' → logprob: -13.163016319274902
    8. '(' → logprob: -14.663016319274902
    9. '((' → logprob: -14.663016319274902
    10. '(answer' → logprob: -15.663016319274902

Token 618: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -8.061054359131958e-06
    2. 'ans' → logprob: -12.000007629394531
    3. '(' → logprob: -13.250007629394531
    4. '(
' → logprob: -17.37500762939453
    5. '	ans' → logprob: -17.75000762939453
    6. ')' → logprob: -17.75000762939453
    7. ' (' → logprob: -18.12500762939453
    8. '(answer' → logprob: -19.62500762939453
    9. ' ans' → logprob: -20.12500762939453
    10. '```' → logprob: -20.37500762939453

Token 619: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '2' → logprob: -15.625
    3. '(' → logprob: -16.625
    4. '(ans' → logprob: -17.375
    5. ')' → logprob: -17.5
    6. '[' → logprob: -19.0
    7. '１' → logprob: -20.375
    8. '))' → logprob: -20.875
    9. '([' → logprob: -21.875
    10. ' ' → logprob: -22.0

Token 620: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001263567479327321
    2. ')' → logprob: -6.751263618469238
    3. '+' → logprob: -10.376263618469238
    4. '(ans' → logprob: -10.876263618469238
    5. ',
' → logprob: -11.501263618469238
    6. ' ,' → logprob: -11.626263618469238
    7. ',)' → logprob: -11.751263618469238
    8. ',max' → logprob: -12.376263618469238
    9. '))' → logprob: -13.126263618469238
    10. '   ' → logprob: -13.376263618469238

Token 621: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.023251304402947426
    2. ' ans' → logprob: -3.7732512950897217
    3. '(ans' → logprob: -12.1482515335083
    4. '	ans' → logprob: -14.8982515335083
    5. '
' → logprob: -16.023250579833984
    6. '_ans' → logprob: -17.148250579833984
    7. '0' → logprob: -18.523250579833984
    8. 'Ans' → logprob: -18.773250579833984
    9. ')' → logprob: -18.898250579833984
    10. 'max' → logprob: -19.023250579833984

Token 622: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008464370621368289
    2. '(' → logprob: -7.1258463859558105
    3. '[' → logprob: -10.500846862792969
    4. '(ans' → logprob: -11.750846862792969
    5. '1' → logprob: -12.375846862792969
    6. '_' → logprob: -13.750846862792969
    7. ')' → logprob: -15.125846862792969
    8. '([' → logprob: -15.250846862792969
    9. '```' → logprob: -15.625846862792969
    10. '`' → logprob: -16.37584686279297

Token 623: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.04859236627817154
    2. ')' → logprob: -3.0485923290252686
    3. ')))' → logprob: -12.673592567443848
    4. '))
' → logprob: -14.173592567443848
    5. ')
' → logprob: -14.673592567443848
    6. '])' → logprob: -15.798592567443848
    7. '()))' → logprob: -16.04859161376953
    8. '})' → logprob: -16.42359161376953
    9. '()' → logprob: -16.54859161376953
    10. '+' → logprob: -16.54859161376953


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 621
Tokens correctement prédits (1ère position, stricte): 285
Tokens correctement prédits (1ère position, avec adaptation): 290
Tokens correctement prédits (top 10): 515
Précision stricte (1ère position): 45.89%
Précision adaptée (1ère position): 46.70%
Précision (top 10): 82.93%
================================================================================
