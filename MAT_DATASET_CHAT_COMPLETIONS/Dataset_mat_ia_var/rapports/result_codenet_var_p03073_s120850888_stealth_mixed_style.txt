================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:03:13
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def alternating_min_changes(S):
    res = [0, 0]
    for mode in (0, 1):
        check, cnt = mode, 0
        idx = 0
        while idx < len(S):
            if int(S[idx]) == check:
                cnt += 1
            check = 1 - check
            idx += 1
        res[mode] = cnt
    return len(S) - max(res)

if __name__ == "__main__":
    S = input()
    foo = lambda x: alternating_min_changes(x)
    answer = foo(S)
    print(answer)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' alternating' (ID: 125099)
  → Token d'amorce (pas de prédiction)

Token 2: '_min' (ID: 15950)
  → Token d'amorce (pas de prédiction)

Token 3: '_changes' (ID: 119201)
  Prédit: 'imum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'imum' → logprob: -0.7260269522666931
    2. '_' → logprob: -0.8510269522666931
    3. '```' → logprob: -3.601027011871338
    4. '(' → logprob: -4.476027011871338
    5. '_char' → logprob: -4.601027011871338
    6. 's' → logprob: -4.726027011871338
    7. '()' → logprob: -5.726027011871338
    8. '_chars' → logprob: -5.851027011871338
    9. '(_' → logprob: -6.101027011871338
    10. 'ute' → logprob: -6.101027011871338

Token 4: '(S' (ID: 6181)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.022814787924289703
    2. '_' → logprob: -4.397814750671387
    3. '(_:' → logprob: -5.522814750671387
    4. '(:' → logprob: -5.897814750671387
    5. '(_' → logprob: -6.397814750671387
    6. '_:' → logprob: -6.897814750671387
    7. '():' → logprob: -8.147814750671387
    8. '```' → logprob: -9.147814750671387
    9. '(a' → logprob: -9.272814750671387
    10. '_(' → logprob: -10.022814750671387

Token 5: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0118507519364357
    2. ')' → logprob: -4.761850833892822
    3. ':' → logprob: -5.886850833892822
    4. '[' → logprob: -8.011850357055664
    5. ',' → logprob: -9.511850357055664
    6. '):
' → logprob: -11.511850357055664
    7. '_' → logprob: -11.636850357055664
    8. '(' → logprob: -12.261850357055664
    9. ' ):' → logprob: -12.386850357055664
    10. '   ' → logprob: -13.011850357055664

Token 6: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017357517499476671
    2. '```' → logprob: -7.251735687255859
    3. '():' → logprob: -8.25173568725586
    4. '   ' → logprob: -8.37673568725586
    5. '`:' → logprob: -8.62673568725586
    6. '_:' → logprob: -9.62673568725586
    7. '':' → logprob: -9.62673568725586
    8. '(:' → logprob: -9.87673568725586
    9. ':
' → logprob: -10.00173568725586
    10. '":' → logprob: -10.37673568725586

Token 7: ' res' (ID: 694)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22226180136203766
    2. 'n' → logprob: -2.472261905670166
    3. '```' → logprob: -2.722261905670166
    4. '`' → logprob: -4.222261905670166
    5. ' ' → logprob: -5.222261905670166
    6. '
' → logprob: -5.222261905670166
    7. '_' → logprob: -5.722261905670166
    8. '"' → logprob: -5.847261905670166
    9. ''' → logprob: -6.097261905670166
    10. 'a' → logprob: -6.597261905670166

Token 8: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5837087035179138
    2. '=' → logprob: -0.8337087035179138
    3. 'ult' → logprob: -6.083708763122559
    4. ' ' → logprob: -6.083708763122559
    5. '[' → logprob: -6.208708763122559
    6. ' +=' → logprob: -8.333708763122559
    7. '[]' → logprob: -8.333708763122559
    8. '_' → logprob: -9.083708763122559
    9. 'ults' → logprob: -9.333708763122559
    10. '.' → logprob: -9.708708763122559

Token 9: ' [' (ID: 723)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2109680324792862
    2. '0' → logprob: -1.710968017578125
    3. ' []' → logprob: -4.835968017578125
    4. ' len' → logprob: -7.460968017578125
    5. ' float' → logprob: -7.835968017578125
    6. '[]' → logprob: -8.085968017578125
    7. 'len' → logprob: -8.835968017578125
    8. ' [' → logprob: -10.335968017578125
    9. ' ' → logprob: -10.585968017578125
    10. 'float' → logprob: -10.835968017578125

Token 10: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4815422296524048
    2. 'S' → logprob: -0.9815422296524048
    3. ']' → logprob: -5.731542110443115
    4. 'float' → logprob: -7.106542110443115
    5. '1' → logprob: -7.606542110443115
    6. '-' → logprob: -7.606542110443115
    7. '(S' → logprob: -7.606542110443115
    8. '[' → logprob: -7.731542110443115
    9. '(' → logprob: -7.731542110443115
    10. '[]' → logprob: -8.481542587280273

Token 11: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007935578003525734
    2. ',' → logprob: -4.882935523986816
    3. ' ]' → logprob: -8.507935523986816
    4. ')' → logprob: -9.257935523986816
    5. ' for' → logprob: -11.882935523986816
    6. ']
' → logprob: -12.132935523986816
    7. '])' → logprob: -12.507935523986816
    8. ')]' → logprob: -12.507935523986816
    9. ']*' → logprob: -13.007935523986816
    10. '   ' → logprob: -13.007935523986816

Token 12: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3080223500728607
    2. ' ' → logprob: -1.433022379875183
    3. '1' → logprob: -3.8080222606658936
    4. ' len' → logprob: -6.183022499084473
    5. 'len' → logprob: -6.433022499084473
    6. ' float' → logprob: -8.058022499084473
    7. 'float' → logprob: -9.308022499084473
    8. ' S' → logprob: -9.808022499084473
    9. ']' → logprob: -10.433022499084473
    10. '   ' → logprob: -10.683022499084473

Token 13: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.044851332902908325
    2. '1' → logprob: -3.169851303100586
    3. 'len' → logprob: -7.294851303100586
    4. ' ' → logprob: -7.544851303100586
    5. 'float' → logprob: -7.544851303100586
    6. ']' → logprob: -10.294851303100586
    7. '-' → logprob: -11.044851303100586
    8. ' float' → logprob: -11.169851303100586
    9. 'S' → logprob: -11.544851303100586
    10. '2' → logprob: -12.044851303100586

Token 14: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006805960554629564
    2. ',' → logprob: -5.256805896759033
    3. ')' → logprob: -6.756805896759033
    4. ' ]' → logprob: -8.006806373596191
    5. '])' → logprob: -10.006806373596191
    6. ']
' → logprob: -10.881806373596191
    7. ')]' → logprob: -13.131806373596191
    8. ',
' → logprob: -13.256806373596191
    9. '   ' → logprob: -13.256806373596191
    10. ']

' → logprob: -13.506806373596191

Token 15: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7252210974693298
    2. '   ' → logprob: -1.1002211570739746
    3. ' ' → logprob: -2.2252211570739746
    4. 'for' → logprob: -3.4752211570739746
    5. ' 
' → logprob: -4.100221157073975
    6. '
' → logprob: -4.850221157073975
    7. '    
' → logprob: -4.975221157073975
    8. 'n' → logprob: -5.350221157073975
    9. ',' → logprob: -5.975221157073975
    10. ' n' → logprob: -6.975221157073975

Token 16: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16417017579078674
    2. 'for' (adapté à ' for') → logprob: -2.289170265197754
    3. '   ' → logprob: -3.539170265197754
    4. 'n' → logprob: -4.664170265197754
    5. ' n' → logprob: -4.914170265197754
    6. ' prev' → logprob: -6.789170265197754
    7. ' last' → logprob: -7.414170265197754
    8. ' ' → logprob: -7.414170265197754
    9. ' current' → logprob: -7.664170265197754
    10. ' i' → logprob: -8.289170265197754

Token 17: ' mode' (ID: 6766)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7192991375923157
    2. ' i' → logprob: -0.7192991375923157
    3. ' c' → logprob: -3.969299077987671
    4. 'i' → logprob: -5.21929931640625
    5. 'c' → logprob: -7.71929931640625
    6. ' char' → logprob: -8.34429931640625
    7. ' x' → logprob: -8.84429931640625
    8. '  ' → logprob: -8.96929931640625
    9. ' _' → logprob: -9.21929931640625
    10. ' ' → logprob: -9.21929931640625

Token 18: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.021821295842528343
    2. 'in' → logprob: -3.8968212604522705
    3. ' ' → logprob: -6.89682149887085
    4. ',' → logprob: -8.771821022033691
    5. '  ' → logprob: -10.521821022033691
    6. '   ' → logprob: -10.646821022033691
    7. ' ,' → logprob: -10.896821022033691
    8. '_' → logprob: -11.646821022033691
    9. '```' → logprob: -11.646821022033691
    10. '_in' → logprob: -12.396821022033691

Token 19: ' (' (ID: 350)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.030420346185564995
    2. ' [' → logprob: -3.7804203033447266
    3. 'range' → logprob: -5.655420303344727
    4. '[' → logprob: -5.655420303344727
    5. ' ['' → logprob: -9.905420303344727
    6. ' ' → logprob: -10.030420303344727
    7. ' (' → logprob: -10.405420303344727
    8. '(range' → logprob: -11.280420303344727
    9. ' xrange' → logprob: -11.905420303344727
    10. '	range' → logprob: -12.280420303344727

Token 20: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004980782046914101
    2. ' ' → logprob: -5.504980564117432
    3. 'range' → logprob: -8.50498104095459
    4. '1' → logprob: -8.75498104095459
    5. '   ' → logprob: -8.87998104095459
    6. ' range' → logprob: -8.87998104095459
    7. 'True' → logprob: -9.12998104095459
    8. ' True' → logprob: -9.37998104095459
    9. '-' → logprob: -10.87998104095459
    10. 'False' → logprob: -11.25498104095459

Token 21: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.602024900028482e-05
    2. ' ,' → logprob: -9.375085830688477
    3. ',
' → logprob: -14.750085830688477
    4. '1' → logprob: -15.375085830688477
    5. ' ' → logprob: -15.875085830688477
    6. ',

' → logprob: -16.000085830688477
    7. ',)' → logprob: -16.500085830688477
    8. '‌,' → logprob: -17.000085830688477
    9. ',),' → logprob: -17.375085830688477
    10. '),' → logprob: -18.000085830688477

Token 22: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6326029300689697
    2. ' ' → logprob: -0.7576029300689697
    3. '   ' → logprob: -13.63260269165039
    4. ' ' → logprob: -14.19510269165039
    5. '  ' → logprob: -14.38260269165039
    6. ')' → logprob: -14.69510269165039
    7. '2' → logprob: -14.94510269165039
    8. '```' → logprob: -15.63260269165039
    9. ',' → logprob: -16.75760269165039
    10. '0' → logprob: -17.19510269165039

Token 23: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001097417771234177
    2. ' ' → logprob: -9.125109672546387
    3. '   ' → logprob: -15.000109672546387
    4. '  ' → logprob: -15.937609672546387
    5. ')' → logprob: -16.437610626220703
    6. '-' → logprob: -16.500110626220703
    7. '
' → logprob: -17.312610626220703
    8. '```' → logprob: -17.312610626220703
    9. '0' → logprob: -17.375110626220703
    10. '１' → logprob: -17.500110626220703

Token 24: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00032271104282699525
    2. ')' → logprob: -8.875322341918945
    3. ':' → logprob: -8.875322341918945
    4. '):
' → logprob: -10.125322341918945
    5. ' ):' → logprob: -13.250322341918945
    6. ',' → logprob: -15.375322341918945
    7. '   ' → logprob: -15.625322341918945
    8. '):

' → logprob: -16.125322341918945
    9. ''):' → logprob: -16.125322341918945
    10. '):
' → logprob: -16.250322341918945

Token 25: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3193860948085785
    2. ':' → logprob: -1.3193861246109009
    3. ',' → logprob: -5.819386005401611
    4. '   ' → logprob: -6.819386005401611
    5. '    ' → logprob: -7.444386005401611
    6. ':
' → logprob: -8.31938648223877
    7. ' :' → logprob: -8.31938648223877
    8. '):' → logprob: -8.31938648223877
    9. '<|end|>' → logprob: -8.44438648223877
    10. '     ' → logprob: -9.44438648223877

Token 26: ' check' (ID: 2371)
  Prédit: ' prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' prev' → logprob: -1.2028999328613281
    2. ' n' → logprob: -1.9528999328613281
    3. ' current' → logprob: -1.9528999328613281
    4. ' i' → logprob: -2.577899932861328
    5. '        ' → logprob: -2.952899932861328
    6. ' last' → logprob: -3.452899932861328
    7. '       ' → logprob: -3.827899932861328
    8. '           ' → logprob: -3.827899932861328
    9. 'prev' → logprob: -3.952899932861328
    10. 'n' → logprob: -3.952899932861328

Token 27: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.548071026802063
    2. '=' → logprob: -1.298071026802063
    3. 'ed' → logprob: -2.9230709075927734
    4. '_' → logprob: -3.5480709075927734
    5. 's' → logprob: -3.5480709075927734
    6. '_char' → logprob: -4.173070907592773
    7. '_idx' → logprob: -5.548070907592773
    8. '_val' → logprob: -6.048070907592773
    9. '_s' → logprob: -6.173070907592773
    10. 'ing' → logprob: -6.298070907592773

Token 28: ' cnt' (ID: 27340)
  Prédit: ' prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' prev' → logprob: -0.6889612078666687
    2. ' ' → logprob: -2.6889612674713135
    3. ' curr' → logprob: -2.9389612674713135
    4. ' S' → logprob: -3.1889612674713135
    5. 'prev' → logprob: -3.3139612674713135
    6. ' last' → logprob: -3.4389612674713135
    7. ' =' → logprob: -3.5639612674713135
    8. ' i' → logprob: -3.6889612674713135
    9. '   ' → logprob: -4.063961029052734
    10. ' current' → logprob: -4.188961029052734

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0022398277651518583
    2. '=' → logprob: -6.12723970413208
    3. ',' → logprob: -10.502240180969238
    4. ' ' → logprob: -11.127240180969238
    5. ')' → logprob: -12.127240180969238
    6. '  ' → logprob: -13.127240180969238
    7. ' ,' → logprob: -13.627240180969238
    8. '<|end|>' → logprob: -14.252240180969238
    9. ' =)' → logprob: -14.502240180969238
    10. 's' → logprob: -14.627240180969238

Token 30: ' mode' (ID: 6766)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5479676723480225
    2. '0' → logprob: -1.0479676723480225
    3. ' S' → logprob: -3.1729676723480225
    4. 'S' → logprob: -3.7979676723480225
    5. ' [' → logprob: -5.797967910766602
    6. '1' → logprob: -6.672967910766602
    7. '[' → logprob: -6.922967910766602
    8. ' (' → logprob: -7.797967910766602
    9. '  ' → logprob: -8.297967910766602
    10. ' [],' → logprob: -8.797967910766602

Token 31: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 32: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.029977256432175636
    2. '0' → logprob: -3.529977321624756
    3. '1' → logprob: -9.404976844787598
    4. ' len' → logprob: -10.029976844787598
    5. '<|end|>' → logprob: -10.029976844787598
    6. ' ' → logprob: -10.279976844787598
    7. '2' → logprob: -12.654976844787598
    8. 'len' → logprob: -12.842476844787598
    9. ' S' → logprob: -13.217476844787598
    10. '  ' → logprob: -13.529976844787598

Token 33: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.42884302139282227
    2. ' ' → logprob: -1.0538430213928223
    3. '1' → logprob: -8.928842544555664
    4. '   ' → logprob: -12.928842544555664
    5. '  ' → logprob: -13.178842544555664
    6. '<|end|>' → logprob: -14.116342544555664
    7. ' ' → logprob: -14.428842544555664
    8. ' len' → logprob: -14.616342544555664
    9. 'len' → logprob: -14.616342544555664
    10. '```' → logprob: -15.053842544555664

Token 34: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25709033012390137
    2. '<|end|>' → logprob: -1.5070903301239014
    3. '<|end|>' → logprob: -5.3820905685424805
    4. '  
' → logprob: -9.38209056854248
    5. ' 
' → logprob: -9.38209056854248
    6. '
' → logprob: -9.50709056854248
    7. '   ' → logprob: -10.00709056854248
    8. ' ' → logprob: -10.13209056854248
    9. '\n' → logprob: -10.25709056854248
    10. '    
' → logprob: -10.38209056854248

Token 35: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09182610362768173
    2. '<|end|>' → logprob: -2.4668262004852295
    3. '<|end|>' → logprob: -6.34182596206665
    4. '       ' → logprob: -8.216826438903809
    5. '  
' → logprob: -8.216826438903809
    6. '
' → logprob: -8.591826438903809
    7. ' 
' → logprob: -9.091826438903809
    8. '   ' → logprob: -9.466826438903809
    9. '    
' → logprob: -9.841826438903809
    10. ' ' → logprob: -10.466826438903809

Token 36: ' idx' (ID: 14016)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7970547676086426
    2. '<|end|>' → logprob: -1.4220547676086426
    3. '       ' → logprob: -1.9220547676086426
    4. ' 
' → logprob: -2.4220547676086426
    5. '   ' → logprob: -3.9220547676086426
    6. '\n' → logprob: -4.422054767608643
    7. '<|end|>' → logprob: -4.547054767608643
    8. '  
' → logprob: -4.797054767608643
    9. ' ' → logprob: -4.797054767608643
    10. ' for' → logprob: -5.172054767608643

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20921997725963593
    2. ' ' → logprob: -2.4592199325561523
    3. '<|end|>' → logprob: -2.9592199325561523
    4. '=' → logprob: -3.3342199325561523
    5. ' in' → logprob: -4.584219932556152
    6. '<|end|>' → logprob: -5.959219932556152
    7. ' +=' → logprob: -6.459219932556152
    8. ')' → logprob: -7.459219932556152
    9. 'in' → logprob: -8.584219932556152
    10. 's' → logprob: -8.709219932556152

Token 38: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4741102457046509
    2. '0' → logprob: -0.9741102457046509
    3. '1' → logprob: -10.84911060333252
    4. '2' → logprob: -12.59911060333252
    5. ' ' → logprob: -13.41161060333252
    6. ' len' → logprob: -13.78661060333252
    7. '<|end|>' → logprob: -14.16161060333252
    8. '  ' → logprob: -14.16161060333252
    9. 's' → logprob: -14.22411060333252
    10. '+' → logprob: -14.28661060333252

Token 39: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002826627343893051
    2. ' ' → logprob: -5.877826690673828
    3. '1' → logprob: -10.877826690673828
    4. '2' → logprob: -13.252826690673828
    5. '   ' → logprob: -15.002826690673828
    6. '  ' → logprob: -15.815326690673828
    7. 'len' → logprob: -15.877826690673828
    8. '```' → logprob: -16.815326690673828
    9. '`' → logprob: -16.877826690673828
    10. '=' → logprob: -17.002826690673828

Token 40: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 41: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 42: ' while' (ID: 2049)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 43: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.00018339496455155313
    2. 'idx' → logprob: -8.62518310546875
    3. '(idx' → logprob: -13.00018310546875
    4. '	idx' → logprob: -13.62518310546875
    5. ' len' → logprob: -16.37518310546875
    6. '[idx' → logprob: -16.62518310546875
    7. ' index' → logprob: -17.00018310546875
    8. ' <' → logprob: -17.00018310546875
    9. ' True' → logprob: -17.50018310546875
    10. ' ' → logprob: -17.62518310546875

Token 44: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0015381926205009222
    2. '<' → logprob: -6.626538276672363
    3. ' ' → logprob: -8.751538276672363
    4. '<len' → logprob: -10.126538276672363
    5. '<|end|>' → logprob: -11.501538276672363
    6. '<size' → logprob: -13.751538276672363
    7. '<n' → logprob: -15.001538276672363
    8. ' <
' → logprob: -15.126538276672363
    9. ' less' → logprob: -15.251538276672363
    10. ')' → logprob: -15.251538276672363

Token 45: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.0004892880679108202
    2. 'len' → logprob: -7.625489234924316
    3. '(len' → logprob: -14.375489234924316
    4. '=len' → logprob: -15.250489234924316
    5. '	len' → logprob: -15.375489234924316
    6. '<len' → logprob: -16.000490188598633
    7. ' ' → logprob: -17.000490188598633
    8. '[len' → logprob: -17.000490188598633
    9. '<|end|>' → logprob: -17.125490188598633
    10. ',len' → logprob: -17.250490188598633

Token 46: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.0009151478880085051
    2. '(' → logprob: -7.000915050506592
    3. '(s' → logprob: -12.62591552734375
    4. '(
' → logprob: -16.00091552734375
    5. ' (' → logprob: -16.62591552734375
    6. ')' → logprob: -17.00091552734375
    7. 'S' → logprob: -17.75091552734375
    8. '<|end|>' → logprob: -17.75091552734375
    9. 's' → logprob: -17.87591552734375
    10. '(

' → logprob: -18.75091552734375

Token 47: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.026768146082758904
    2. '):
' → logprob: -3.901768207550049
    3. ')' → logprob: -5.151768207550049
    4. ':' → logprob: -8.15176773071289
    5. ' and' → logprob: -9.90176773071289
    6. '):
' → logprob: -10.52676773071289
    7. '):

' → logprob: -10.90176773071289
    8. ' ):' → logprob: -11.15176773071289
    9. 'and' → logprob: -11.65176773071289
    10. '   ' → logprob: -12.52676773071289

Token 48: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 49: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5360219478607178
    2. '           ' → logprob: -1.2860219478607178
    3. ' ' → logprob: -2.9110219478607178
    4. 'if' (adapté à ' if') → logprob: -3.6610219478607178
    5. '               ' → logprob: -4.036022186279297
    6. '       ' → logprob: -4.411022186279297
    7. '            ' → logprob: -4.911022186279297
    8. '   ' → logprob: -5.536022186279297
    9. '```' → logprob: -5.661022186279297
    10. '    ' → logprob: -6.036022186279297

Token 50: ' int' (ID: 677)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.23127086460590363
    2. 'S' → logprob: -1.6062709093093872
    3. ' (' → logprob: -5.856270790100098
    4. ' check' → logprob: -6.231270790100098
    5. '(S' → logprob: -7.606270790100098
    6. 'check' → logprob: -8.356270790100098
    7. '           ' → logprob: -8.731270790100098
    8. ' ' → logprob: -10.606270790100098
    9. '(check' → logprob: -10.606270790100098
    10. '               ' → logprob: -10.856270790100098

Token 51: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.0001552665780764073
    2. '(' → logprob: -8.875155448913574
    3. 'S' → logprob: -11.500155448913574
    4. ')' → logprob: -13.000155448913574
    5. '(s' → logprob: -13.125155448913574
    6. ' (' → logprob: -14.250155448913574
    7. '[S' → logprob: -16.500154495239258
    8. ')(' → logprob: -17.125154495239258
    9. 's' → logprob: -17.250154495239258
    10. ' ' → logprob: -17.375154495239258

Token 52: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -4.1557283111615106e-05
    2. '[' → logprob: -10.250041961669922
    3. ')' → logprob: -12.875041961669922
    4. ')[' → logprob: -13.375041961669922
    5. ' [' → logprob: -14.750041961669922
    6. 'idx' → logprob: -14.750041961669922
    7. '[index' → logprob: -15.375041961669922
    8. '```' → logprob: -15.375041961669922
    9. '[int' → logprob: -15.875041961669922
    10. '   ' → logprob: -15.875041961669922

Token 53: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002512166043743491
    2. '])' → logprob: -6.252511978149414
    3. ')!=' → logprob: -8.252511978149414
    4. ' )' → logprob: -8.377511978149414
    5. '`)' → logprob: -10.877511978149414
    6. '))' → logprob: -10.877511978149414
    7. '())' → logprob: -11.627511978149414
    8. ')==' → logprob: -11.752511978149414
    9. '")' → logprob: -12.002511978149414
    10. '[])' → logprob: -12.002511978149414

Token 54: ' ==' (ID: 951)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.04043332859873772
    2. ' !=' → logprob: -3.665433406829834
    3. '==' → logprob: -4.290433406829834
    4. ' ==' → logprob: -8.415432929992676
    5. '()!=' → logprob: -10.290432929992676
    6. ')!=' → logprob: -10.415432929992676
    7. '^' → logprob: -11.290432929992676
    8. ')' → logprob: -11.415432929992676
    9. ' ' → logprob: -12.040432929992676
    10. '=' → logprob: -12.165432929992676

Token 55: ' check' (ID: 2371)
  Prédit: ' check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.009790443815290928
    2. 'check' → logprob: -4.634790420532227
    3. ' ' → logprob: -10.634790420532227
    4. '	check' → logprob: -11.759790420532227
    5. '(check' → logprob: -13.259790420532227
    6. ' ' → logprob: -15.634790420532227
    7. ' (' → logprob: -16.009790420532227
    8. '<|end|>' → logprob: -16.134790420532227
    9. '   ' → logprob: -16.259790420532227
    10. '  ' → logprob: -16.509790420532227

Token 56: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.027883097529411316
    2. ':
' → logprob: -3.6528830528259277
    3. '           ' → logprob: -7.277883052825928
    4. '):' → logprob: -8.027883529663086
    5. '):
' → logprob: -8.777883529663086
    6. '               ' → logprob: -9.277883529663086
    7. ')' → logprob: -9.527883529663086
    8. ' and' → logprob: -9.652883529663086
    9. ':
' → logprob: -10.402883529663086
    10. ' else' → logprob: -10.527883529663086

Token 57: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.044167354702949524
    2. '           ' → logprob: -3.5441672801971436
    3. ':' → logprob: -4.794167518615723
    4. ' and' → logprob: -5.919167518615723
    5. ':
' → logprob: -6.919167518615723
    6. '              ' → logprob: -7.794167518615723
    7. ',' → logprob: -8.044167518615723
    8. '	           ' → logprob: -8.169167518615723
    9. '            ' → logprob: -8.419167518615723
    10. ')' → logprob: -8.919167518615723

Token 58: ' cnt' (ID: 27340)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.26936352252960205
    2. '               ' → logprob: -2.0193634033203125
    3. ' cnt' → logprob: -3.0193634033203125
    4. ' idx' → logprob: -3.6443634033203125
    5. '```' → logprob: -4.6443634033203125
    6. 'idx' → logprob: -4.8943634033203125
    7. 'cnt' (adapté à ' cnt') → logprob: -5.1443634033203125
    8. '
' → logprob: -5.6443634033203125
    9. '``' → logprob: -7.5193634033203125
    10. ' ```' → logprob: -9.019363403320312

Token 59: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.009471077471971512
    2. ' =' → logprob: -4.7594709396362305
    3. '+=' → logprob: -7.1344709396362305
    4. '=' → logprob: -10.13447093963623
    5. ' ' → logprob: -12.13447093963623
    6. ' -=' → logprob: -12.63447093963623
    7. ' +' → logprob: -13.13447093963623
    8. '+' → logprob: -13.13447093963623
    9. '           ' → logprob: -13.50947093963623
    10. '   ' → logprob: -13.75947093963623

Token 60: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20154538750648499
    2. ' ' → logprob: -1.7015453577041626
    3. '0' → logprob: -9.076545715332031
    4. '2' → logprob: -11.826545715332031
    5. '4' → logprob: -13.576545715332031
    6. '<|end|>' → logprob: -13.639045715332031
    7. '  ' → logprob: -14.201545715332031
    8. '6' → logprob: -14.264045715332031
    9. 'idx' → logprob: -14.264045715332031
    10. ' idx' → logprob: -14.264045715332031

Token 61: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018196064978837967
    2. '0' → logprob: -4.018196105957031
    3. ' ' → logprob: -10.018196105957031
    4. '-' → logprob: -14.330696105957031
    5. '2' → logprob: -14.893196105957031
    6. '   ' → logprob: -15.455696105957031
    7. 'int' → logprob: -16.26819610595703
    8. '  ' → logprob: -16.76819610595703
    9. '```' → logprob: -17.45569610595703
    10. '(' → logprob: -17.64319610595703

Token 62: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7160829901695251
    2. '           ' → logprob: -1.09108304977417
    3. '               ' → logprob: -2.21608304977417
    4. ' else' → logprob: -3.34108304977417
    5. 'else' → logprob: -3.84108304977417
    6. '
' → logprob: -5.09108304977417
    7. 'idx' → logprob: -6.84108304977417
    8. '\n' → logprob: -8.341082572937012
    9. 'elif' → logprob: -8.341082572937012
    10. ' idx' → logprob: -8.466082572937012

Token 63: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.48231950402259827
    2. '               ' → logprob: -0.9823194742202759
    3. ' else' → logprob: -4.982319355010986
    4. 'else' → logprob: -8.107319831848145
    5. '
' → logprob: -8.732319831848145
    6. '```' → logprob: -8.732319831848145
    7. ' idx' → logprob: -8.732319831848145
    8. '       ' → logprob: -9.357319831848145
    9. ',' → logprob: -9.357319831848145
    10. ' elif' → logprob: -9.482319831848145

Token 64: ' check' (ID: 2371)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.5542170405387878
    2. '           ' → logprob: -1.5542171001434326
    3. 'else' → logprob: -1.5542171001434326
    4. 'check' (adapté à ' check') → logprob: -6.9292168617248535
    5. '       ' → logprob: -7.3042168617248535
    6. ' check' → logprob: -7.6792168617248535
    7. '               ' → logprob: -8.054217338562012
    8. '```' → logprob: -9.304217338562012
    9. 'idx' → logprob: -9.929217338562012
    10. ' idx' → logprob: -10.804217338562012

Token 65: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.23687796294689178
    2. ' =' → logprob: -1.7368779182434082
    3. ' ^=' → logprob: -3.361877918243408
    4. '^' → logprob: -8.736878395080566
    5. ' ' → logprob: -11.486878395080566
    6. ' ^' → logprob: -13.611878395080566
    7. ' ' → logprob: -14.611878395080566
    8. '	' → logprob: -15.611878395080566
    9. '+=' → logprob: -16.48687744140625
    10. ' +=' → logprob: -16.73687744140625

Token 66: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12709766626358032
    2. ' ' → logprob: -2.1270976066589355
    3. '(' → logprob: -10.127098083496094
    4. 'check' → logprob: -10.627098083496094
    5. ' (' → logprob: -10.752098083496094
    6. '   ' → logprob: -11.127098083496094
    7. ' ' → logprob: -11.627098083496094
    8. '```' → logprob: -11.627098083496094
    9. 'abs' → logprob: -11.689598083496094
    10. '(check' → logprob: -11.752098083496094

Token 67: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00025430647656321526
    2. ' ' → logprob: -8.37525463104248
    3. '(' → logprob: -11.37525463104248
    4. 'check' → logprob: -12.75025463104248
    5. '   ' → logprob: -12.87525463104248
    6. '0' → logprob: -13.00025463104248
    7. '`' → logprob: -13.75025463104248
    8. ' (' → logprob: -14.37525463104248
    9. '(check' → logprob: -14.75025463104248
    10. '```' → logprob: -14.75025463104248

Token 68: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.22046399116516113
    2. '-' → logprob: -1.7204639911651611
    3. '-check' → logprob: -3.970463991165161
    4. ' ' → logprob: -12.720463752746582
    5. '^' → logprob: -14.845463752746582
    6. '```' → logprob: -14.970463752746582
    7. '1' → logprob: -15.595463752746582
    8. 'check' → logprob: -15.845463752746582
    9. ' if' → logprob: -15.845463752746582
    10. '' → logprob: -15.970463752746582

Token 69: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.001502598519437015
    2. ' check' → logprob: -6.501502513885498
    3. '	check' → logprob: -15.251502990722656
    4. ' ' → logprob: -18.126502990722656
    5. '(check' → logprob: -18.376502990722656
    6. 'chec' → logprob: -18.501502990722656
    7. '<|end|>' → logprob: -19.626502990722656
    8. 'checking' → logprob: -19.751502990722656
    9. '  ' → logprob: -20.376502990722656
    10. '.check' → logprob: -20.501502990722656

Token 70: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05737076327204704
    2. '           ' → logprob: -3.432370662689209
    3. 'idx' → logprob: -3.932370662689209
    4. '
' → logprob: -6.932370662689209
    5. 'else' → logprob: -7.182370662689209
    6. '            
' → logprob: -7.807370662689209
    7. '  
' → logprob: -7.932370662689209
    8. ' idx' → logprob: -8.557371139526367
    9. '<|end|>' → logprob: -8.557371139526367
    10. '```' → logprob: -8.682371139526367

Token 71: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3161087930202484
    2. '           ' → logprob: -1.3161088228225708
    3. '<|end|>' → logprob: -6.816108703613281
    4. ' 
' → logprob: -7.566108703613281
    5. '
' → logprob: -7.691108703613281
    6. '    
' → logprob: -9.066108703613281
    7. '<|end|>' → logprob: -9.066108703613281
    8. '            
' → logprob: -9.191108703613281
    9. '  
' → logprob: -9.316108703613281
    10. ' ' → logprob: -9.566108703613281

Token 72: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.687724232673645
    2. 'idx' (adapté à ' idx') → logprob: -0.812724232673645
    3. '           ' → logprob: -2.9377241134643555
    4. '	idx' → logprob: -8.687724113464355
    5. ' ' → logprob: -9.062724113464355
    6. '       ' → logprob: -9.187724113464355
    7. '```' → logprob: -9.937724113464355
    8. '[idx' → logprob: -10.062724113464355
    9. '_idx' → logprob: -10.437724113464355
    10. '        ' → logprob: -10.687724113464355

Token 73: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.30677804350852966
    2. ' +=' → logprob: -1.806778073310852
    3. '+=' → logprob: -2.3067779541015625
    4. ' +' → logprob: -8.056777954101562
    5. '++' → logprob: -9.431777954101562
    6. '+++' → logprob: -11.556777954101562
    7. ' ' → logprob: -11.931777954101562
    8. '<|end|>' → logprob: -12.181777954101562
    9. '=' → logprob: -13.931777954101562
    10. '+='' → logprob: -14.181777954101562

Token 74: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.517272024415433e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -15.875075340270996
    4. '```' → logprob: -16.50007438659668
    5. '<|end|>' → logprob: -17.00007438659668
    6. '2' → logprob: -17.00007438659668
    7. '       ' → logprob: -18.87507438659668
    8. '4' → logprob: -19.00007438659668
    9. '0' → logprob: -19.12507438659668
    10. '۱' → logprob: -19.12507438659668

Token 75: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -11.625009536743164
    3. '   ' → logprob: -16.875009536743164
    4. '```' → logprob: -17.000009536743164
    5. '<|end|>' → logprob: -17.937509536743164
    6. '2' → logprob: -18.812509536743164
    7. '  ' → logprob: -19.125009536743164
    8. '0' → logprob: -19.625009536743164
    9. '۱' → logprob: -19.687509536743164
    10. '-' → logprob: -20.125009536743164

Token 76: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06088239699602127
    2. '       ' → logprob: -3.060882329940796
    3. '   ' → logprob: -5.435882568359375
    4. '<|end|>' → logprob: -5.435882568359375
    5. '  
' → logprob: -6.435882568359375
    6. '
' → logprob: -7.435882568359375
    7. '        
' → logprob: -8.185882568359375
    8. '    
' → logprob: -8.435882568359375
    9. ' 
' → logprob: -8.685882568359375
    10. ' ' → logprob: -8.935882568359375

Token 77: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10588227957487106
    2. '   ' → logprob: -2.855882167816162
    3. '
' → logprob: -3.355882167816162
    4. '[' → logprob: -6.230882167816162
    5. '<|end|>' → logprob: -6.355882167816162
    6. ')' → logprob: -7.230882167816162
    7. ' ' → logprob: -7.355882167816162
    8. ',' → logprob: -7.355882167816162
    9. ' if' → logprob: -7.605882167816162
    10. ' res' → logprob: -7.730882167816162

Token 78: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.4376724064350128
    2. ' res' → logprob: -1.4376723766326904
    3. '   ' → logprob: -2.1876723766326904
    4. ' if' → logprob: -5.9376726150512695
    5. '       ' → logprob: -6.8126726150512695
    6. 'if' → logprob: -7.4376726150512695
    7. '
' → logprob: -9.06267261505127
    8. ' ' → logprob: -9.31267261505127
    9. '	res' → logprob: -9.31267261505127
    10. '```' → logprob: -9.93767261505127

Token 79: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.003427577670663595
    2. '[min' → logprob: -6.378427505493164
    3. '[cnt' → logprob: -6.753427505493164
    4. '[idx' → logprob: -8.253427505493164
    5. '[count' → logprob: -9.503427505493164
    6. '[token' → logprob: -9.878427505493164
    7. '[max' → logprob: -10.378427505493164
    8. '[val' → logprob: -10.503427505493164
    9. '[counter' → logprob: -10.878427505493164
    10. '```' → logprob: -11.628427505493164

Token 80: 'mode' (ID: 17591)
  Prédit: 'mode'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mode' → logprob: -4.320199877838604e-07
    2. ' mode' → logprob: -14.75
    3. 'mod' → logprob: -18.625
    4. '1' → logprob: -19.25
    5. 'm' → logprob: -19.5
    6. 'model' → logprob: -20.375
    7. 'modus' → logprob: -21.0
    8. '	mode' → logprob: -21.125
    9. '0' → logprob: -21.25
    10. '(mode' → logprob: -21.25

Token 81: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -5.526570384972729e-05
    2. ' ]' → logprob: -9.875055313110352
    3. ']=' → logprob: -12.875055313110352
    4. ']+=' → logprob: -13.875055313110352
    5. ')]' → logprob: -16.00005531311035
    6. ')' → logprob: -17.00005531311035
    7. '])' → logprob: -17.50005531311035
    8. ']>' → logprob: -17.50005531311035
    9. '`]' → logprob: -17.87505531311035
    10. ']
' → logprob: -17.87505531311035

Token 82: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01111997663974762
    2. '=' → logprob: -4.511119842529297
    3. ' +=' → logprob: -9.636119842529297
    4. ' ' → logprob: -12.011119842529297
    5. '+=' → logprob: -15.261119842529297
    6. '  ' → logprob: -15.386119842529297
    7. ' |=' → logprob: -15.636119842529297
    8. ' *=' → logprob: -16.011119842529297
    9. ' =)' → logprob: -16.886119842529297
    10. '   ' → logprob: -17.261119842529297

Token 83: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.004878046456724405
    2. ' cnt' → logprob: -5.879878044128418
    3. 'len' → logprob: -6.504878044128418
    4. 'min' → logprob: -7.629878044128418
    5. 'cn' → logprob: -10.379878044128418
    6. 'max' → logprob: -10.504878044128418
    7. '(cnt' → logprob: -11.504878044128418
    8. ' min' → logprob: -11.879878044128418
    9. ' len' → logprob: -12.004878044128418
    10. ' ' → logprob: -13.504878044128418

Token 84: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08650299906730652
    2. '
' → logprob: -2.586503028869629
    3. ' return' → logprob: -5.211503028869629
    4. 'return' → logprob: -6.961503028869629
    5. ' ' → logprob: -8.211503028869629
    6. '    
' → logprob: -8.586503028869629
    7. '<|end|>' → logprob: -8.961503028869629
    8. '\n' → logprob: -9.211503028869629
    9. '```' → logprob: -9.461503028869629
    10. ')' → logprob: -9.461503028869629

Token 85: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0100857587531209
    2. ' return' → logprob: -5.260085582733154
    3. '
' → logprob: -6.010085582733154
    4. 'return' → logprob: -6.260085582733154
    5. '<|end|>' → logprob: -7.885085582733154
    6. '    
' → logprob: -10.260086059570312
    7. '[' → logprob: -11.760086059570312
    8. ' ' → logprob: -11.885086059570312
    9. '```' → logprob: -11.885086059570312
    10. '	return' → logprob: -11.885086059570312

Token 86: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5881279110908508
    2. 'return' (adapté à ' return') → logprob: -0.8381279110908508
    3. ' return' → logprob: -4.463128089904785
    4. '
' → logprob: -7.963128089904785
    5. '```' → logprob: -8.838128089904785
    6. ' ' → logprob: -10.213128089904785
    7. '	return' → logprob: -10.963128089904785
    8. '  ' → logprob: -11.463128089904785
    9. '<|end|>' → logprob: -11.838128089904785
    10. '    
' → logprob: -12.088128089904785

Token 87: ' len' (ID: 4631)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.4881732761859894
    2. 'max' → logprob: -1.363173246383667
    3. ' min' → logprob: -2.363173246383667
    4. ' max' → logprob: -3.363173246383667
    5. 'res' → logprob: -7.363173484802246
    6. 'len' → logprob: -7.738173484802246
    7. ' res' → logprob: -8.238173484802246
    8. ' ' → logprob: -9.238173484802246
    9. '[min' → logprob: -9.863173484802246
    10. 'sum' → logprob: -10.363173484802246

Token 88: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -2.5941604690160602e-05
    2. '(' → logprob: -10.750025749206543
    3. 'S' → logprob: -12.750025749206543
    4. '(s' → logprob: -14.500025749206543
    5. 's' → logprob: -14.625025749206543
    6. ' (' → logprob: -15.250025749206543
    7. '(res' → logprob: -16.00002670288086
    8. ')' → logprob: -16.75002670288086
    9. '```' → logprob: -16.87502670288086
    10. 'res' → logprob: -17.12502670288086

Token 89: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.756989700486884e-05
    2. ' )' → logprob: -9.75008773803711
    3. ')-' → logprob: -10.87508773803711
    4. '")' → logprob: -12.62508773803711
    5. ' -' → logprob: -13.62508773803711
    6. '`)' → logprob: -13.75008773803711
    7. '   ' → logprob: -13.87508773803711
    8. ' ' → logprob: -14.00008773803711
    9. '-' → logprob: -14.00008773803711
    10. '')' → logprob: -14.12508773803711

Token 90: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07081962376832962
    2. '-' → logprob: -2.820819616317749
    3. ' ' → logprob: -4.820819854736328
    4. '   ' → logprob: -8.195819854736328
    5. ')' → logprob: -9.070819854736328
    6. ' ' → logprob: -9.570819854736328
    7. '(' → logprob: -9.695819854736328
    8. '`' → logprob: -9.945819854736328
    9. '()' → logprob: -10.195819854736328
    10. '```' → logprob: -10.695819854736328

Token 91: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.6931902170181274
    2. 'max' → logprob: -0.6931902170181274
    3. 'min' → logprob: -10.693190574645996
    4. ' min' → logprob: -10.818190574645996
    5. ' ' → logprob: -16.56818962097168
    6. '(max' → logprob: -16.69318962097168
    7. '	max' → logprob: -17.06818962097168
    8. ' res' → logprob: -17.19318962097168
    9. 'res' → logprob: -17.69318962097168
    10. ' maximum' → logprob: -18.44318962097168

Token 92: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.00026181264547631145
    2. '(' → logprob: -8.250262260437012
    3. 'res' → logprob: -14.750262260437012
    4. ' (' → logprob: -16.000261306762695
    5. '(
' → logprob: -17.125261306762695
    6. '_res' → logprob: -18.875261306762695
    7. ',res' → logprob: -19.125261306762695
    8. '	res' → logprob: -19.375261306762695
    9. '(max' → logprob: -19.375261306762695
    10. ' ' → logprob: -19.625261306762695

Token 93: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0921942703134846e-05
    2. '[' → logprob: -11.87501049041748
    3. '))' → logprob: -13.62501049041748
    4. ' )' → logprob: -13.87501049041748
    5. '())' → logprob: -14.87501049041748
    6. ']' → logprob: -15.25001049041748
    7. ')
' → logprob: -15.37501049041748
    8. '()' → logprob: -15.50001049041748
    9. '])' → logprob: -15.75001049041748
    10. '[])' → logprob: -15.75001049041748

Token 94: 'if' (ID: 366)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04180987551808357
    2. '#' → logprob: -4.041810035705566
    3. '(' → logprob: -4.166810035705566
    4. '<|end|>' → logprob: -5.916810035705566
    5. '```' → logprob: -6.166810035705566
    6. '\' → logprob: -7.041810035705566
    7. '[' → logprob: -7.416810035705566
    8. '_' → logprob: -7.541810035705566
    9. '
' → logprob: -8.666810035705566
    10. ':' → logprob: -9.041810035705566

Token 95: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.004080062732100487
    2. '__' → logprob: -5.504080295562744
    3. ' ' → logprob: -13.504079818725586
    4. ' ' → logprob: -16.004079818725586
    5. '_' → logprob: -16.879079818725586
    6. '_name' → logprob: -17.629079818725586
    7. 'name' → logprob: -17.754079818725586
    8. '  ' → logprob: -18.504079818725586
    9. '___' → logprob: -19.129079818725586
    10. ' _' → logprob: -19.379079818725586

Token 96: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.01452638115733862
    2. ' ==' → logprob: -5.0145263671875
    3. '==' → logprob: -5.2645263671875
    4. ' __' → logprob: -6.5145263671875
    5. '__.__' → logprob: -7.6395263671875
    6. 'name' → logprob: -9.2645263671875
    7. '<|end|>' → logprob: -9.6395263671875
    8. '__":
' → logprob: -9.6395263671875
    9. '[' → logprob: -10.0145263671875
    10. '__.' → logprob: -10.0145263671875

Token 97: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00031186718842945993
    2. '__.__' → logprob: -9.000311851501465
    3. '__":
' → logprob: -9.625311851501465
    4. '==' → logprob: -10.375311851501465
    5. '__':
' → logprob: -11.000311851501465
    6. '____' → logprob: -11.250311851501465
    7. '__["' → logprob: -11.250311851501465
    8. '__('' → logprob: -11.500311851501465
    9. '__("' → logprob: -11.875311851501465
    10. '___' → logprob: -12.375311851501465

Token 98: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.18236248195171356
    2. ' ==' → logprob: -2.0573625564575195
    3. '==' → logprob: -4.0573625564575195
    4. '__":
' → logprob: -4.6823625564575195
    5. '__["' → logprob: -6.3073625564575195
    6. '[' → logprob: -6.6823625564575195
    7. '<|end|>' → logprob: -6.6823625564575195
    8. '=="' → logprob: -6.8073625564575195
    9. '__.__' → logprob: -6.8073625564575195
    10. '```' → logprob: -7.4323625564575195

Token 99: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.023341214284300804
    2. ''' → logprob: -3.773341178894043
    3. ' "__' → logprob: -9.398341178894043
    4. '__' → logprob: -11.773341178894043
    5. ' '__' → logprob: -13.023341178894043
    6. '   ' → logprob: -13.648341178894043
    7. ' "' → logprob: -14.773341178894043
    8. '"user' → logprob: -15.023341178894043
    9. '"_' → logprob: -15.648341178894043
    10. ''"' → logprob: -15.773341178894043

Token 100: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0003693013568408787
    2. '__' → logprob: -8.00036907196045
    3. '_main' → logprob: -10.87536907196045
    4. 'name' → logprob: -11.75036907196045
    5. '```' → logprob: -13.12536907196045
    6. ' main' → logprob: -13.37536907196045
    7. '__":
' → logprob: -14.12536907196045
    8. 'ma' → logprob: -14.62536907196045
    9. 'm' → logprob: -14.75036907196045
    10. '_MAIN' → logprob: -14.87536907196045

Token 101: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.023367883637547493
    2. '__' → logprob: -3.7733678817749023
    3. '__':
' → logprob: -9.023367881774902
    4. '__:' → logprob: -13.648367881774902
    5. '__["' → logprob: -14.898367881774902
    6. '__("' → logprob: -15.648367881774902
    7. '__
' → logprob: -16.64836883544922
    8. '__
' → logprob: -17.52336883544922
    9. '__((' → logprob: -17.77336883544922
    10. '__",' → logprob: -18.14836883544922

Token 102: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8060339689254761
    2. '   ' → logprob: -0.9310339689254761
    3. ':
' → logprob: -2.4310340881347656
    4. '<|end|>' → logprob: -3.8060340881347656
    5. '```' → logprob: -4.556034088134766
    6. ' input' → logprob: -4.806034088134766
    7. '    
' → logprob: -5.056034088134766
    8. 'input' → logprob: -5.306034088134766
    9. 'n' → logprob: -6.181034088134766
    10. '(input' → logprob: -6.431034088134766

Token 103: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.4955848753452301
    2. 'S' (adapté à ' S') → logprob: -0.9955848455429077
    3. '   ' → logprob: -5.495584964752197
    4. 's' → logprob: -5.495584964752197
    5. 'n' → logprob: -5.745584964752197
    6. ' import' → logprob: -5.870584964752197
    7. ' n' → logprob: -5.995584964752197
    8. 'import' → logprob: -6.120584964752197
    9. ' input' → logprob: -6.870584964752197
    10. ' s' → logprob: -6.995584964752197

Token 104: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.034010790288448334
    2. '=' → logprob: -3.409010887145996
    3. '=input' → logprob: -8.784010887145996
    4. '<|end|>' → logprob: -9.409010887145996
    5. 'input' → logprob: -10.409010887145996
    6. ' ' → logprob: -10.534010887145996
    7. ')' → logprob: -11.034010887145996
    8. '.' → logprob: -11.784010887145996
    9. '<|end|>' → logprob: -11.909010887145996
    10. '[' → logprob: -12.034010887145996

Token 105: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.31438371539115906
    2. ' input' → logprob: -1.3143837451934814
    3. '"' → logprob: -7.064383506774902
    4. ' "' → logprob: -8.314383506774902
    5. ''' → logprob: -12.439383506774902
    6. '<input' → logprob: -12.814383506774902
    7. '=input' → logprob: -12.814383506774902
    8. ' ' → logprob: -12.939383506774902
    9. '(input' → logprob: -13.064383506774902
    10. 'int' → logprob: -13.314383506774902

Token 106: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0014565435703843832
    2. '(' → logprob: -6.7514567375183105
    3. '().' → logprob: -8.376456260681152
    4. '())' → logprob: -11.251456260681152
    5. '()]' → logprob: -11.751456260681152
    6. '()>' → logprob: -12.501456260681152
    7. '("("' → logprob: -12.501456260681152
    8. '('' → logprob: -12.751456260681152
    9. '`()' → logprob: -12.751456260681152
    10. '("")' → logprob: -12.876456260681152

Token 107: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0006638261256739497
    2. '   ' → logprob: -7.375663757324219
    3. '```' → logprob: -10.625663757324219
    4. ' print' → logprob: -12.125663757324219
    5. '<|end|>' → logprob: -12.750663757324219
    6. '    
' → logprob: -12.875663757324219
    7. '
' → logprob: -14.250663757324219
    8. '	print' → logprob: -14.250663757324219
    9. '``' → logprob: -14.750663757324219
    10. '#print' → logprob: -15.500663757324219

Token 108: ' foo' (ID: 30551)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.088346359931165e-07
    2. ' print' → logprob: -14.250000953674316
    3. 'result' → logprob: -15.125000953674316
    4. '```' → logprob: -18.375
    5. '   ' → logprob: -19.125
    6. 'pr' → logprob: -19.25
    7. '    
' → logprob: -21.25
    8. '	print' → logprob: -21.625
    9. 'output' → logprob: -21.75
    10. '
' → logprob: -22.125

Token 109: ' =' (ID: 314)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2740645706653595
    2. 'altern' → logprob: -1.524064540863037
    3. ' alternating' → logprob: -5.024064540863037
    4. 'r' → logprob: -5.774064540863037
    5. '(' → logprob: -6.024064540863037
    6. 'alt' → logprob: -6.524064540863037
    7. ' =' → logprob: -6.649064540863037
    8. '(S' → logprob: -6.899064540863037
    9. '   ' → logprob: -7.274064540863037
    10. '=' → logprob: -7.399064540863037

Token 110: ' lambda' (ID: 27871)
  Prédit: 'altern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'altern' → logprob: -0.018162231892347336
    2. ' alternating' → logprob: -4.018162250518799
    3. ' altern' → logprob: -11.64316177368164
    4. 'Altern' → logprob: -13.64316177368164
    5. 'alter' → logprob: -14.14316177368164
    6. '   ' → logprob: -14.39316177368164
    7. 'alternative' → logprob: -14.51816177368164
    8. ' alternativ' → logprob: -15.26816177368164
    9. 'alternate' → logprob: -15.64316177368164
    10. '```' → logprob: -16.51816177368164

Token 111: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9821075201034546
    2. 'S' → logprob: -1.4821075201034546
    3. 's' → logprob: -1.7321075201034546
    4. ' x' → logprob: -2.732107639312744
    5. ' S' → logprob: -2.857107639312744
    6. ' s' → logprob: -2.982107639312744
    7. '<|end|>' → logprob: -3.857107639312744
    8. 'lambda' → logprob: -3.982107639312744
    9. ' lambda' → logprob: -5.232107639312744
    10. ' alternating' → logprob: -6.357107639312744

Token 112: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001419995678588748
    2. ' :' → logprob: -6.626420021057129
    3. ':int' → logprob: -10.001420021057129
    4. 'altern' → logprob: -10.751420021057129
    5. ' alternating' → logprob: -10.876420021057129
    6. ':not' → logprob: -13.376420021057129
    7. 'x' → logprob: -13.501420021057129
    8. ':x' → logprob: -13.626420021057129
    9. ':return' → logprob: -13.876420021057129
    10. '=' → logprob: -14.751420021057129

Token 113: ' alternating' (ID: 125099)
  Prédit: 'altern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'altern' → logprob: -0.47911781072616577
    2. ' alternating' → logprob: -1.3541178703308105
    3. 'int' → logprob: -3.2291178703308105
    4. 'sum' → logprob: -3.7291178703308105
    5. 'x' → logprob: -4.2291178703308105
    6. ' x' → logprob: -4.6041178703308105
    7. ' int' → logprob: -5.1041178703308105
    8. 'len' → logprob: -5.6041178703308105
    9. '1' → logprob: -5.6041178703308105
    10. '[int' → logprob: -6.2291178703308105

Token 114: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -1.9504606825648807e-05
    2. '_' → logprob: -11.000019073486328
    3. '_max' → logprob: -13.625019073486328
    4. 'min' → logprob: -13.875019073486328
    5. '<|end|>' → logprob: -15.750019073486328
    6. '_MIN' → logprob: -16.375019073486328
    7. ' _' → logprob: -16.375019073486328
    8. '_Min' → logprob: -17.625019073486328
    9. 'Min' → logprob: -18.000019073486328
    10. '_alt' → logprob: -18.125019073486328

Token 115: '_changes' (ID: 119201)
  Prédit: '_changes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_changes' → logprob: -1.2471589798224159e-05
    2. 'changes' → logprob: -12.000012397766113
    3. '_' → logprob: -12.750012397766113
    4. '_min' → logprob: -13.250012397766113
    5. ' changes' → logprob: -14.625012397766113
    6. '_change' → logprob: -15.250012397766113
    7. '```' → logprob: -15.375012397766113
    8. 'Changes' → logprob: -16.00001335144043
    9. ' _' → logprob: -16.00001335144043
    10. '_choices' → logprob: -16.37501335144043

Token 116: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0022205570712685585
    2. '(' → logprob: -6.752220630645752
    3. '(S' → logprob: -6.877220630645752
    4. ' (' → logprob: -11.252220153808594
    5. '((' → logprob: -12.877220153808594
    6. '(foo' → logprob: -13.502220153808594
    7. '(s' → logprob: -14.502220153808594
    8. 'x' → logprob: -15.252220153808594
    9. '(
' → logprob: -15.502220153808594
    10. '(str' → logprob: -15.627220153808594

Token 117: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014704519708175212
    2. ')
' → logprob: -9.250146865844727
    3. '))' → logprob: -10.375146865844727
    4. ' )' → logprob: -11.500146865844727
    5. '(' → logprob: -12.625146865844727
    6. ')

' → logprob: -12.875146865844727
    7. '(x' → logprob: -14.375146865844727
    8. ')))' → logprob: -14.375146865844727
    9. '(S' → logprob: -15.000146865844727
    10. ')`' → logprob: -15.125146865844727

Token 118: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3925175368785858
    2. '   ' → logprob: -1.1425175666809082
    3. '
' → logprob: -5.767517566680908
    4. ' print' → logprob: -6.767517566680908
    5. '<|end|>' → logprob: -7.267517566680908
    6. '    
' → logprob: -8.26751708984375
    7. ')' → logprob: -8.89251708984375
    8. '	print' → logprob: -9.51751708984375
    9. '(print' → logprob: -9.89251708984375
    10. 'result' → logprob: -10.64251708984375

Token 119: ' answer' (ID: 6052)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0001307142956648022
    2. '
' → logprob: -9.250130653381348
    3. 'result' → logprob: -11.000130653381348
    4. '   ' → logprob: -11.750130653381348
    5. ' print' → logprob: -11.750130653381348
    6. '    
' → logprob: -13.375130653381348
    7. '```' → logprob: -15.625130653381348
    8. '	print' → logprob: -17.000131607055664
    9. '

' → logprob: -17.250131607055664
    10. '  
' → logprob: -17.375131607055664

Token 120: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10636427998542786
    2. '=' → logprob: -2.3563642501831055
    3. '(' → logprob: -5.2313642501831055
    4. '   ' → logprob: -7.8563642501831055
    5. ')' → logprob: -8.731364250183105
    6. '()' → logprob: -10.106364250183105
    7. '[' → logprob: -10.106364250183105
    8. ' ' → logprob: -10.606364250183105
    9. '    ' → logprob: -10.856364250183105
    10. '```' → logprob: -10.981364250183105

Token 121: ' foo' (ID: 30551)
  Prédit: ' foo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' foo' → logprob: -0.03804321587085724
    2. 'foo' → logprob: -3.288043260574341
    3. '(foo' → logprob: -13.413043022155762
    4. ' ' → logprob: -16.538043975830078
    5. ' fo' → logprob: -17.038043975830078
    6. ' ' → logprob: -17.413043975830078
    7. '   ' → logprob: -17.663043975830078
    8. 'fo' → logprob: -17.913043975830078
    9. '/foo' → logprob: -17.913043975830078
    10. 'foobar' → logprob: -18.538043975830078

Token 122: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.00011212585377506912
    2. '(answer' → logprob: -9.625112533569336
    3. '(' → logprob: -10.250112533569336
    4. '(s' → logprob: -12.875112533569336
    5. '(input' → logprob: -13.000112533569336
    6. ' (' → logprob: -13.250112533569336
    7. '(foo' → logprob: -13.500112533569336
    8. '(ans' → logprob: -14.500112533569336
    9. '((' → logprob: -14.500112533569336
    10. ' ' → logprob: -15.750112533569336

Token 123: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007112398743629456
    2. ')
' → logprob: -7.250711441040039
    3. '))' → logprob: -14.750711441040039
    4. ')
' → logprob: -15.125711441040039
    5. ' )' → logprob: -15.625711441040039
    6. ')

' → logprob: -15.750711441040039
    7. '()' → logprob: -16.25071144104004
    8. ')`' → logprob: -16.62571144104004
    9. '())' → logprob: -17.37571144104004
    10. '   ' → logprob: -17.37571144104004

Token 124: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.030155405402183533
    2. '   ' → logprob: -3.5301554203033447
    3. '
' → logprob: -8.155155181884766
    4. ' print' → logprob: -9.905155181884766
    5. '    
' → logprob: -10.280155181884766
    6. '```' → logprob: -11.030155181884766
    7. '	print' → logprob: -11.905155181884766
    8. '<|end|>' → logprob: -12.530155181884766
    9. '  
' → logprob: -12.655155181884766
    10. '#print' → logprob: -14.280155181884766

Token 125: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: 0.0
    2. '   ' → logprob: -17.0
    3. ' print' → logprob: -17.0
    4. '	print' → logprob: -22.375
    5. '```' → logprob: -22.5
    6. '#print' → logprob: -23.375
    7. '(print' → logprob: -24.0
    8. 'pr' → logprob: -24.0
    9. '.print' → logprob: -24.25
    10. 'printf' → logprob: -24.625

Token 126: '(answer' (ID: 78433)
  Prédit: '(answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(answer' → logprob: -0.048597365617752075
    2. '(' → logprob: -3.0485973358154297
    3. ' (' → logprob: -12.54859733581543
    4. '()' → logprob: -12.92359733581543
    5. '(ans' → logprob: -13.29859733581543
    6. 'answer' → logprob: -14.17359733581543
    7. '(
' → logprob: -15.04859733581543
    8. '(end' → logprob: -15.17359733581543
    9. '('' → logprob: -15.92359733581543
    10. '	answer' → logprob: -15.92359733581543

Token 127: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. '))' → logprob: -16.125
    3. ')`' → logprob: -16.5
    4. ' )' → logprob: -17.25
    5. ')}' → logprob: -17.625
    6. '')' → logprob: -18.0
    7. ')
' → logprob: -18.0
    8. '`)' → logprob: -18.625
    9. '}' → logprob: -19.625
    10. '()' → logprob: -19.625


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 125
Tokens correctement prédits (1ère position, stricte): 61
Tokens correctement prédits (1ère position, avec adaptation): 63
Tokens correctement prédits (top 10): 103
Précision stricte (1ère position): 48.80%
Précision adaptée (1ère position): 50.40%
Précision (top 10): 82.40%
================================================================================
