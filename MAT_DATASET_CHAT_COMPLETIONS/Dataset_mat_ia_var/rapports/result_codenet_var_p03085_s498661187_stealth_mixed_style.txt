================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:04:44
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
s = input()
def comp(nu):
  if nu=="A":
    return "T"
  if nu=="T":
      return "A"
  elif nu=="G":
    return "C"
  if nu=="C": print("G"); return
  return None
x = comp(s)
if x is not None and x != "G":
    print(x)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 's' (ID: 82)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' input' (ID: 3422)
  → Token d'amorce (pas de prédiction)

Token 3: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003908014856278896
    2. '('' → logprob: -6.378908157348633
    3. '()' → logprob: -6.878908157348633
    4. ''' → logprob: -7.128908157348633
    5. '"' → logprob: -8.878908157348633
    6. '`' → logprob: -9.753908157348633
    7. '(
' → logprob: -9.878908157348633
    8. '("("' → logprob: -9.878908157348633
    9. '```' → logprob: -11.003908157348633
    10. ' (' → logprob: -11.628908157348633

Token 4: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.04509509354829788
    2. 'if' → logprob: -4.045094966888428
    3. '+' → logprob: -4.420094966888428
    4. '[' → logprob: -5.420094966888428
    5. '.strip' → logprob: -6.045094966888428
    6. '=' → logprob: -6.545094966888428
    7. 'print' → logprob: -6.670094966888428
    8. ''' → logprob: -7.045094966888428
    9. '[::-' → logprob: -7.045094966888428
    10. ' if' → logprob: -7.670094966888428

Token 5: ' comp' (ID: 1050)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.006354377605021
    2. ' s' → logprob: -5.881354331970215
    3. ' space' → logprob: -7.006354331970215
    4. ' a' → logprob: -7.631354331970215
    5. ' f' → logprob: -7.756354331970215
    6. ' my' → logprob: -8.381354331970215
    7. '_' → logprob: -8.506354331970215
    8. ' def' → logprob: -8.756354331970215
    9. '"' → logprob: -8.881354331970215
    10. ''' → logprob: -9.006354331970215

Token 6: '(n' (ID: 2406)
  Prédit: 'ute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ute' → logprob: -0.030472036451101303
    2. 'are' → logprob: -4.2804718017578125
    3. 'ut' → logprob: -5.4054718017578125
    4. 'uter' → logprob: -5.6554718017578125
    5. 'lete' → logprob: -5.7804718017578125
    6. 'ile' → logprob: -6.6554718017578125
    7. 'let' → logprob: -7.1554718017578125
    8. 'lement' → logprob: -7.4054718017578125
    9. '(' → logprob: -7.5304718017578125
    10. 'utation' → logprob: -7.9054718017578125

Token 7: 'u' (ID: 84)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10970350354909897
    2. ')' → logprob: -2.859703540802002
    3. 'a' → logprob: -3.484703540802002
    4. 'u' → logprob: -5.484703540802002
    5. 'ar' → logprob: -5.734703540802002
    6. 'ut' → logprob: -6.234703540802002
    7. '_' → logprob: -6.484703540802002
    8. ',' → logprob: -7.359703540802002
    9. 'e' → logprob: -7.734703540802002
    10. 'l' → logprob: -7.859703540802002

Token 8: '):
' (ID: 1883)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.05518274009227753
    2. 'mb' → logprob: -2.930182695388794
    3. 't' → logprob: -8.930182456970215
    4. 'ms' → logprob: -9.055182456970215
    5. 'mble' → logprob: -10.430182456970215
    6. 'meric' → logprob: -12.055182456970215
    7. 'ts' → logprob: -12.055182456970215
    8. 'mer' → logprob: -13.180182456970215
    9. 'mbio' → logprob: -13.555182456970215
    10. 'м' → logprob: -13.805182456970215

Token 9: ' ' (ID: 220)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.002233044244349003
    2. '   ' → logprob: -7.002233028411865
    3. ' ' → logprob: -7.377233028411865
    4. ' m' → logprob: -8.002233505249023
    5. 'r' → logprob: -8.752233505249023
    6. 'n' → logprob: -9.127233505249023
    7. 'mp' → logprob: -11.127233505249023
    8. '  ' → logprob: -11.752233505249023
    9. 't' → logprob: -11.752233505249023
    10. ':' → logprob: -11.877233505249023

Token 10: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09588263183832169
    2. 'm' → logprob: -2.9708826541900635
    3. 'n' → logprob: -4.095882415771484
    4. 'r' → logprob: -4.970882415771484
    5. 't' → logprob: -5.220882415771484
    6. 's' → logprob: -5.720882415771484
    7. 'p' → logprob: -5.845882415771484
    8. '(' → logprob: -7.095882415771484
    9. ')' → logprob: -7.220882415771484
    10. '   ' → logprob: -7.345882415771484

Token 11: ' nu' (ID: 4120)
  Prédit: ' nu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nu' → logprob: -0.20938821136951447
    2. 'nu' → logprob: -2.084388256072998
    3. ' ' → logprob: -3.834388256072998
    4. ' n' → logprob: -4.209388256072998
    5. 'n' → logprob: -4.459388256072998
    6. ' not' → logprob: -4.959388256072998
    7. 's' → logprob: -5.209388256072998
    8. ' s' → logprob: -6.209388256072998
    9. ' ' → logprob: -7.834388256072998
    10. 'not' → logprob: -8.20938777923584

Token 12: '=="' (ID: 24027)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.016460824757814407
    2. '%' → logprob: -5.01646089553833
    3. ' ' → logprob: -5.64146089553833
    4. '>' → logprob: -6.01646089553833
    5. 't' → logprob: -6.64146089553833
    6. 'mb' → logprob: -7.14146089553833
    7. '==' → logprob: -7.89146089553833
    8. ' %' → logprob: -8.391460418701172
    9. ' m' → logprob: -8.641460418701172
    10. ' ==' → logprob: -8.766460418701172

Token 13: 'A' (ID: 32)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8770590424537659
    2. 'a' → logprob: -1.877058982849121
    3. '"' → logprob: -2.252058982849121
    4. '1' → logprob: -2.752058982849121
    5. '":' → logprob: -2.877058982849121
    6. '"):' → logprob: -3.377058982849121
    7. 's' → logprob: -4.002058982849121
    8. 'yes' → logprob: -4.127058982849121
    9. ' "' → logprob: -4.127058982849121
    10. 'hi' → logprob: -4.627058982849121

Token 14: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '":' → logprob: -0.7723151445388794
    2. '"):' → logprob: -1.8973151445388794
    3. '+' → logprob: -2.02231502532959
    4. '"' → logprob: -2.64731502532959
    5. '+":' → logprob: -2.64731502532959
    6. 'C' → logprob: -3.39731502532959
    7. 'T' → logprob: -4.02231502532959
    8. 'A' → logprob: -4.64731502532959
    9. ' "' → logprob: -4.89731502532959
    10. '):' → logprob: -5.02231502532959

Token 15: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3356141746044159
    2. '   ' → logprob: -1.5856142044067383
    3. ' return' → logprob: -3.2106142044067383
    4. 'return' → logprob: -4.210614204406738
    5. '  ' → logprob: -5.460614204406738
    6. '       ' → logprob: -5.835614204406738
    7. ':' → logprob: -5.835614204406738
    8. '    ' → logprob: -6.085614204406738
    9. '     ' → logprob: -6.085614204406738
    10. 'r' → logprob: -6.335614204406738

Token 16: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.36512988805770874
    2. 'return' (adapté à ' return') → logprob: -1.7401299476623535
    3. ' ' → logprob: -2.2401299476623535
    4. '   ' → logprob: -3.8651299476623535
    5. '     ' → logprob: -6.8651299476623535
    6. '    ' → logprob: -7.6151299476623535
    7. '  ' → logprob: -8.240129470825195
    8. '	return' → logprob: -8.865129470825195
    9. 'r' → logprob: -9.115129470825195
    10. 's' → logprob: -9.302629470825195

Token 17: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.9861295223236084
    2. '1' → logprob: -1.8611295223236084
    3. '"T' → logprob: -1.9861295223236084
    4. ' ' → logprob: -2.1111295223236084
    5. ' "' → logprob: -2.6111295223236084
    6. '"B' → logprob: -2.9861295223236084
    7. ' True' → logprob: -3.2361295223236084
    8. ''' → logprob: -4.3611297607421875
    9. 'True' → logprob: -5.3611297607421875
    10. '0' → logprob: -5.4861297607421875

Token 18: 'T' (ID: 51)
  Prédit: 'T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.09777466952800751
    2. 'G' → logprob: -3.3477747440338135
    3. 'C' → logprob: -3.9727747440338135
    4. '1' → logprob: -4.597774505615234
    5. 'B' → logprob: -4.847774505615234
    6. 'X' → logprob: -5.097774505615234
    7. 'A' → logprob: -6.222774505615234
    8. '0' → logprob: -6.222774505615234
    9. 'TG' → logprob: -6.847774505615234
    10. 'U' → logprob: -7.097774505615234

Token 19: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0009230116847902536
    2. '"
' → logprob: -7.000923156738281
    3. '")' → logprob: -12.250923156738281
    4. '"
' → logprob: -13.500923156738281
    5. ' "' → logprob: -13.750923156738281
    6. '<|end|>' → logprob: -14.000923156738281
    7. '"A' → logprob: -14.000923156738281
    8. ''' → logprob: -14.125923156738281
    9. '"I' → logprob: -15.000923156738281
    10. '"

' → logprob: -15.125923156738281

Token 20: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.005100341513752937
    2. '  
' → logprob: -6.005100250244141
    3. '
' → logprob: -6.255100250244141
    4. '\n' → logprob: -7.755100250244141
    5. 'n' → logprob: -9.00510025024414
    6. '```' → logprob: -10.38010025024414
    7. '<|end|>' → logprob: -10.63010025024414
    8. '  ' → logprob: -10.75510025024414
    9. 'elif' → logprob: -10.88010025024414
    10. ' 
' → logprob: -11.13010025024414

Token 21: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0006332091288641095
    2. 'elif' → logprob: -7.750633239746094
    3. 'e' → logprob: -9.875633239746094
    4. 'n' → logprob: -10.000633239746094
    5. ' elif' → logprob: -10.125633239746094
    6. '  
' → logprob: -11.000633239746094
    7. '\n' → logprob: -11.625633239746094
    8. ')' → logprob: -12.125633239746094
    9. '  ' → logprob: -12.125633239746094
    10. 'else' → logprob: -12.250633239746094

Token 22: ' nu' (ID: 4120)
  Prédit: ' nu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nu' → logprob: -0.0020790016278624535
    2. 'nu' → logprob: -6.252079010009766
    3. ' ' → logprob: -9.377079010009766
    4. ' ' → logprob: -10.252079010009766
    5. 's' → logprob: -11.127079010009766
    6. ' s' → logprob: -12.252079010009766
    7. ' su' → logprob: -12.752079010009766
    8. ' n' → logprob: -12.877079010009766
    9. 'u' → logprob: -13.502079010009766
    10. 'n' → logprob: -13.752079010009766

Token 23: '=="' (ID: 24027)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.13061605393886566
    2. '=="' → logprob: -2.5056159496307373
    3. ' ==' → logprob: -3.2556159496307373
    4. '=' → logprob: -6.380616188049316
    5. ' =="' → logprob: -8.255616188049316
    6. '"' → logprob: -8.630616188049316
    7. '=='' → logprob: -9.380616188049316
    8. '="' → logprob: -11.505616188049316
    9. '==="' → logprob: -11.880616188049316
    10. ' ' → logprob: -11.880616188049316

Token 24: 'T' (ID: 51)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.3409305810928345
    2. 'C' → logprob: -1.5909305810928345
    3. 'T' → logprob: -2.465930461883545
    4. 'A' → logprob: -8.840930938720703
    5. ' ' → logprob: -10.840930938720703
    6. ' G' → logprob: -11.090930938720703
    7. 'a' → logprob: -11.840930938720703
    8. 'U' → logprob: -11.965930938720703
    9. ' C' → logprob: -12.340930938720703
    10. '"' → logprob: -12.403430938720703

Token 25: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.5319355726242065
    2. '"' → logprob: -1.1569355726242065
    3. ':' → logprob: -3.031935691833496
    4. '">' → logprob: -4.031935691833496
    5. '"):' → logprob: -5.031935691833496
    6. '"):
' → logprob: -5.156935691833496
    7. '<|end|>' → logprob: -5.281935691833496
    8. '":
' → logprob: -5.781935691833496
    9. '")' → logprob: -6.031935691833496
    10. ' ' → logprob: -6.156935691833496

Token 26: '     ' (ID: 530)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.11805742233991623
    2. ' ' → logprob: -2.7430574893951416
    3. '   ' → logprob: -3.6180574893951416
    4. ' return' → logprob: -4.6180572509765625
    5. 'return' → logprob: -5.3680572509765625
    6. '"A' → logprob: -6.3680572509765625
    7. ''' → logprob: -6.8680572509765625
    8. ' "' → logprob: -7.2430572509765625
    9. '  ' → logprob: -7.8680572509765625
    10. '	return' → logprob: -7.8680572509765625

Token 27: ' return' (ID: 622)
  Prédit: '"A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"A' → logprob: -0.021947259083390236
    2. '"' → logprob: -4.146947383880615
    3. ' ' → logprob: -6.146947383880615
    4. ''A' → logprob: -6.396947383880615
    5. 'A' → logprob: -7.146947383880615
    6. 'return' (adapté à ' return') → logprob: -7.146947383880615
    7. ' "' → logprob: -8.646946907043457
    8. ' A' → logprob: -8.771946907043457
    9. '"C' → logprob: -9.896946907043457
    10. ' return' → logprob: -10.021946907043457

Token 28: ' "' (ID: 392)
  Prédit: '"A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"A' → logprob: -0.005229848437011242
    2. '"' → logprob: -5.630229949951172
    3. ' "' → logprob: -7.005229949951172
    4. 'A' → logprob: -7.880229949951172
    5. ''A' → logprob: -9.005229949951172
    6. ' ' → logprob: -9.130229949951172
    7. ' A' → logprob: -9.255229949951172
    8. '```' → logprob: -12.630229949951172
    9. '   ' → logprob: -13.255229949951172
    10. '  ' → logprob: -13.380229949951172

Token 29: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00024846551241353154
    2. '"A' → logprob: -8.625248908996582
    3. ' A' → logprob: -10.250248908996582
    4. ''A' → logprob: -11.125248908996582
    5. 'a' → logprob: -12.625248908996582
    6. ' ' → logprob: -12.750248908996582
    7. '```' → logprob: -12.875248908996582
    8. '"' → logprob: -12.875248908996582
    9. '`' → logprob: -13.125248908996582
    10. '	A' → logprob: -14.125248908996582

Token 30: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.06319259107112885
    2. '")' → logprob: -2.81319260597229
    3. ' ' → logprob: -7.313192367553711
    4. '\n' → logprob: -8.563192367553711
    5. ')' → logprob: -8.813192367553711
    6. ' ")' → logprob: -9.688192367553711
    7. ' "' → logprob: -9.813192367553711
    8. '"
' → logprob: -10.188192367553711
    9. '<|end|>' → logprob: -11.188192367553711
    10. '")
' → logprob: -11.563192367553711

Token 31: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -9.376848902320489e-05
    2. '```' → logprob: -9.750093460083008
    3. '<|end|>' → logprob: -10.750093460083008
    4. '  
' → logprob: -12.000093460083008
    5. '  ' → logprob: -13.000093460083008
    6. ' ' → logprob: -13.500093460083008
    7. '`' → logprob: -13.875093460083008
    8. '``' → logprob: -14.000093460083008
    9. 'elif' → logprob: -14.750093460083008
    10. ' 
' → logprob: -15.000093460083008

Token 32: ' elif' (ID: 9497)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0007712708320468664
    2. '```' → logprob: -7.3757710456848145
    3. 'if' → logprob: -9.500771522521973
    4. '``' → logprob: -10.250771522521973
    5. ' if' → logprob: -11.125771522521973
    6. '`' → logprob: -11.250771522521973
    7. ' ```' → logprob: -13.750771522521973
    8. 's' → logprob: -14.000771522521973
    9. ''' → logprob: -14.000771522521973
    10. '  
' → logprob: -14.250771522521973

Token 33: ' nu' (ID: 4120)
  Prédit: ' nu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nu' → logprob: -0.015497050248086452
    2. 'nu' → logprob: -4.265497207641602
    3. ' ' → logprob: -7.265497207641602
    4. 's' → logprob: -8.265497207641602
    5. ' s' → logprob: -9.265497207641602
    6. '"' → logprob: -9.640497207641602
    7. ' ' → logprob: -10.140497207641602
    8. ' n' → logprob: -10.265497207641602
    9. ' "' → logprob: -10.640497207641602
    10. '<|end|>' → logprob: -10.765497207641602

Token 34: '=="' (ID: 24027)
  Prédit: '=="'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=="' → logprob: -0.00321336486376822
    2. '==' → logprob: -5.753213405609131
    3. '=='' → logprob: -10.628212928771973
    4. ' ==' → logprob: -12.128212928771973
    5. ' =="' → logprob: -13.003212928771973
    6. '"' → logprob: -13.378212928771973
    7. ']=="' → logprob: -14.003212928771973
    8. '==="' → logprob: -14.503212928771973
    9. '=' → logprob: -15.003212928771973
    10. '==
' → logprob: -15.378212928771973

Token 35: 'G' (ID: 38)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.5762826800346375
    2. 'G' → logprob: -0.8262826800346375
    3. ''C' → logprob: -8.826282501220703
    4. ''' → logprob: -9.826282501220703
    5. '"C' → logprob: -10.576282501220703
    6. '"' → logprob: -10.701282501220703
    7. '"G' → logprob: -11.263782501220703
    8. ' C' → logprob: -11.326282501220703
    9. 'T' → logprob: -11.576282501220703
    10. ' G' → logprob: -11.701282501220703

Token 36: '":
' (ID: 9213)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9499345421791077
    2. '<|end|>' → logprob: -1.449934482574463
    3. '">' → logprob: -1.824934482574463
    4. '":' → logprob: -1.949934482574463
    5. '")' → logprob: -3.574934482574463
    6. ' ' → logprob: -4.199934482574463
    7. '"' → logprob: -4.324934482574463
    8. '"):' → logprob: -4.949934482574463
    9. '<|end|>' → logprob: -5.699934482574463
    10. ':
' → logprob: -6.324934482574463

Token 37: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6823695302009583
    2. '     ' → logprob: -1.3073694705963135
    3. ' ' → logprob: -2.6823694705963135
    4. '      ' → logprob: -2.9323694705963135
    5. '"' → logprob: -3.4323694705963135
    6. '<|end|>' → logprob: -3.4323694705963135
    7. '   ' → logprob: -4.057369709014893
    8. '  ' → logprob: -5.057369709014893
    9. ')' → logprob: -6.182369709014893
    10. ' "' → logprob: -6.557369709014893

Token 38: ' return' (ID: 622)
  Prédit: '"C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"C' → logprob: -0.06407751888036728
    2. '"' → logprob: -3.189077615737915
    3. ' ' → logprob: -4.689077377319336
    4. '   ' → logprob: -5.189077377319336
    5. '    ' → logprob: -6.439077377319336
    6. '     ' → logprob: -6.564077377319336
    7. ' "' → logprob: -6.939077377319336
    8. ''C' → logprob: -7.314077377319336
    9. 'return' (adapté à ' return') → logprob: -7.439077377319336
    10. 'C' → logprob: -7.814077377319336

Token 39: ' "' (ID: 392)
  Prédit: '"C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"C' → logprob: -0.002180596347898245
    2. '"' → logprob: -6.752180576324463
    3. ''C' → logprob: -7.627180576324463
    4. ' "' → logprob: -8.002181053161621
    5. 'C' → logprob: -8.627181053161621
    6. ' ' → logprob: -12.752181053161621
    7. ' C' → logprob: -12.752181053161621
    8. '```' → logprob: -14.252181053161621
    9. '"""' → logprob: -14.377181053161621
    10. '>C' → logprob: -15.002181053161621

Token 40: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.017768247053027153
    2. '"C' → logprob: -4.267768383026123
    3. ''C' → logprob: -5.892768383026123
    4. '"' → logprob: -7.142768383026123
    5. ''' → logprob: -10.767767906188965
    6. ' C' → logprob: -10.892767906188965
    7. '	C' → logprob: -12.892767906188965
    8. '>C' → logprob: -14.267767906188965
    9. '"""' → logprob: -14.267767906188965
    10. 'С' → logprob: -14.517767906188965

Token 41: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.04934438690543175
    2. ' ' → logprob: -3.049344301223755
    3. '")' → logprob: -8.174344062805176
    4. '"
' → logprob: -9.049344062805176
    5. ')' → logprob: -9.174344062805176
    6. ''' → logprob: -9.799344062805176
    7. 'n' → logprob: -9.799344062805176
    8. ' "' → logprob: -10.049344062805176
    9. '```' → logprob: -10.174344062805176
    10. '\n' → logprob: -10.924344062805176

Token 42: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.016307314857840538
    2. '  
' → logprob: -4.641307353973389
    3. '  ' → logprob: -6.391307353973389
    4. ' 
' → logprob: -6.641307353973389
    5. '\n' → logprob: -6.641307353973389
    6. 'n' → logprob: -7.766307353973389
    7. ' \' → logprob: -8.39130687713623
    8. '
' → logprob: -8.51630687713623
    9. '```' → logprob: -8.51630687713623
    10. '   ' → logprob: -8.64130687713623

Token 43: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0005998577689751983
    2. '  ' → logprob: -8.62559986114502
    3. '  
' → logprob: -8.62559986114502
    4. ' 
' → logprob: -9.87559986114502
    5. 'n' → logprob: -10.25059986114502
    6. '   ' → logprob: -10.62559986114502
    7. '```' → logprob: -10.75059986114502
    8. ' elif' → logprob: -11.00059986114502
    9. ' ' → logprob: -11.25059986114502
    10. ''' → logprob: -11.62559986114502

Token 44: ' nu' (ID: 4120)
  Prédit: ' nu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nu' → logprob: -0.013813799247145653
    2. ' ' → logprob: -4.8888139724731445
    3. 'nu' → logprob: -5.1388139724731445
    4. ' ' → logprob: -9.263813972473145
    5. ' u' → logprob: -9.388813972473145
    6. 'u' → logprob: -9.888813972473145
    7. ' n' → logprob: -10.138813972473145
    8. '  ' → logprob: -10.763813972473145
    9. ' "' → logprob: -11.763813972473145
    10. 'n' → logprob: -11.763813972473145

Token 45: '=="' (ID: 24027)
  Prédit: '=="'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=="' → logprob: -0.017252134159207344
    2. '==' → logprob: -4.267251968383789
    3. '=' → logprob: -5.892251968383789
    4. '="' → logprob: -9.142251968383789
    5. '=='' → logprob: -9.392251968383789
    6. '"' → logprob: -9.517251968383789
    7. '==
' → logprob: -10.392251968383789
    8. ' =="' → logprob: -11.267251968383789
    9. ' ==' → logprob: -11.892251968383789
    10. '!="' → logprob: -13.267251968383789

Token 46: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -6.392202976712724e-06
    2. 'G' → logprob: -12.750006675720215
    3. 'c' → logprob: -13.875006675720215
    4. 'T' → logprob: -14.000006675720215
    5. 'A' → logprob: -14.625006675720215
    6. ' C' → logprob: -15.125006675720215
    7. '"C' → logprob: -15.625006675720215
    8. ')' → logprob: -16.2500057220459
    9. '"' → logprob: -16.5000057220459
    10. ' ' → logprob: -16.6250057220459

Token 47: '":' (ID: 1243)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.062016312032938004
    2. '":' → logprob: -2.812016248703003
    3. '">' → logprob: -11.062016487121582
    4. '")' → logprob: -11.062016487121582
    5. ')' → logprob: -12.312016487121582
    6. ' "' → logprob: -12.562016487121582
    7. ':' → logprob: -13.312016487121582
    8. '"}' → logprob: -13.437016487121582
    9. '":"' → logprob: -13.687016487121582
    10. '"):' → logprob: -14.062016487121582

Token 48: ' print' (ID: 2123)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3837225437164307
    2. 'return' → logprob: -1.6337225437164307
    3. '   ' → logprob: -1.8837225437164307
    4. ' return' → logprob: -2.1337225437164307
    5. '    ' → logprob: -2.5087225437164307
    6. '     ' → logprob: -2.5087225437164307
    7. '"' → logprob: -2.5087225437164307
    8. ''' → logprob: -4.633722305297852
    9. '  ' → logprob: -4.633722305297852
    10. '```' → logprob: -5.383722305297852

Token 49: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04560523480176926
    2. '("' → logprob: -3.795605182647705
    3. '"' → logprob: -3.920605182647705
    4. ' ' → logprob: -6.420605182647705
    5. ' (' → logprob: -8.545605659484863
    6. '("")' → logprob: -9.170605659484863
    7. ''' → logprob: -9.420605659484863
    8. '()' → logprob: -9.670605659484863
    9. ' "' → logprob: -10.170605659484863
    10. '('' → logprob: -10.420605659484863

Token 50: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.5135323405265808
    2. '"' → logprob: -2.1385324001312256
    3. ' ' → logprob: -2.1385324001312256
    4. '")' → logprob: -2.2635324001312256
    5. ' G' → logprob: -3.3885324001312256
    6. ' "' → logprob: -5.0135321617126465
    7. ')' → logprob: -5.0135321617126465
    8. 'C' → logprob: -5.8885321617126465
    9. '"G' → logprob: -5.8885321617126465
    10. ' ")' → logprob: -5.8885321617126465

Token 51: '");' (ID: 9835)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.006132603157311678
    2. '"' → logprob: -5.13113260269165
    3. '")
' → logprob: -9.131133079528809
    4. ')' → logprob: -9.381133079528809
    5. ' ")' → logprob: -11.881133079528809
    6. '")

' → logprob: -14.131133079528809
    7. '')' → logprob: -14.131133079528809
    8. '\n' → logprob: -14.631133079528809
    9. '"
' → logprob: -14.756133079528809
    10. ' ' → logprob: -15.256133079528809

Token 52: ' return' (ID: 622)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22751781344413757
    2. '<|end|>' → logprob: -2.10251784324646
    3. '   ' → logprob: -4.102517604827881
    4. '  
' → logprob: -4.102517604827881
    5. '\n' → logprob: -4.727517604827881
    6. '  ' → logprob: -5.102517604827881
    7. ':' → logprob: -5.477517604827881
    8. '
' → logprob: -5.477517604827881
    9. '\' → logprob: -5.477517604827881
    10. ')' → logprob: -5.602517604827881

Token 53: '
' (ID: 198)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4520283639431
    2. ' "' → logprob: -1.2020283937454224
    3. '"G' → logprob: -2.952028274536133
    4. '"C' → logprob: -4.952028274536133
    5. ' G' → logprob: -6.827028274536133
    6. ' ' → logprob: -6.827028274536133
    7. ''' → logprob: -7.702028274536133
    8. 'G' → logprob: -8.202028274536133
    9. ' '' → logprob: -9.077028274536133
    10. '(' → logprob: -9.202028274536133

Token 54: ' ' (ID: 220)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2136627435684204
    2. ' ' → logprob: -2.588662624359131
    3. ' "' → logprob: -2.963662624359131
    4. '(' → logprob: -3.838662624359131
    5. ' G' → logprob: -4.338662624359131
    6. 'G' → logprob: -4.463662624359131
    7. ''' → logprob: -5.088662624359131
    8. '"G' → logprob: -5.588662624359131
    9. 'C' → logprob: -6.213662624359131
    10. '<|end|>' → logprob: -6.463662624359131

Token 55: ' return' (ID: 622)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.21778661012649536
    2. ' ' → logprob: -2.4677865505218506
    3. ' "' → logprob: -3.3427865505218506
    4. '(' → logprob: -3.9677865505218506
    5. ' G' → logprob: -3.9677865505218506
    6. 'G' → logprob: -4.09278678894043
    7. ''' → logprob: -5.34278678894043
    8. '"G' → logprob: -5.34278678894043
    9. 'C' → logprob: -5.71778678894043
    10. ')' → logprob: -6.09278678894043

Token 56: ' None' (ID: 4662)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.23896524310112
    2. ' "' → logprob: -2.2389652729034424
    3. 'comp' → logprob: -3.2389652729034424
    4. ' comp' → logprob: -3.4889652729034424
    5. 's' → logprob: -4.613965034484863
    6. ' ' → logprob: -5.113965034484863
    7. '""' → logprob: -5.363965034484863
    8. '<|end|>' → logprob: -5.738965034484863
    9. ' None' → logprob: -6.113965034484863
    10. 'None' → logprob: -6.113965034484863

Token 57: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.34847018122673035
    2. '(
' → logprob: -2.7234702110290527
    3. 's' → logprob: -3.0984702110290527
    4. ')' → logprob: -3.0984702110290527
    5. ' ' → logprob: -3.0984702110290527
    6. '[' → logprob: -3.5984702110290527
    7. '<|end|>' → logprob: -4.473470211029053
    8. ':' → logprob: -4.723470211029053
    9. '(n' → logprob: -4.973470211029053
    10. 'G' → logprob: -5.223470211029053

Token 58: 'x' (ID: 87)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 59: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0743180513381958
    2. '=' → logprob: -1.1993180513381958
    3. '[' → logprob: -1.3243180513381958
    4. ' ' → logprob: -3.4493179321289062
    5. 's' → logprob: -3.6993179321289062
    6. '_' → logprob: -3.9493179321289062
    7. '(' → logprob: -5.949317932128906
    8. '[:]' → logprob: -5.949317932128906
    9. ')' → logprob: -6.074317932128906
    10. ',' → logprob: -6.449317932128906

Token 60: ' comp' (ID: 1050)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -1.2446104288101196
    2. '""' → logprob: -1.6196104288101196
    3. ' "".' → logprob: -1.8696104288101196
    4. '[' → logprob: -2.24461030960083
    5. ' [' → logprob: -2.49461030960083
    6. ' ""' → logprob: -2.74461030960083
    7. ' ''.' → logprob: -3.24461030960083
    8. '[s' → logprob: -3.61961030960083
    9. 's' → logprob: -4.11961030960083
    10. '''.' → logprob: -4.99461030960083

Token 61: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7004952430725098
    2. '(s' → logprob: -0.7004952430725098
    3. 's' → logprob: -5.07549524307251
    4. '(
' → logprob: -7.70049524307251
    5. '(x' → logprob: -8.075494766235352
    6. '('' → logprob: -9.325494766235352
    7. '(n' → logprob: -10.325494766235352
    8. '<|end|>' → logprob: -10.325494766235352
    9. ' ' → logprob: -10.450494766235352
    10. '((' → logprob: -11.075494766235352

Token 62: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002833848411682993
    2. '[' → logprob: -8.500283241271973
    3. '))' → logprob: -9.500283241271973
    4. ' )' → logprob: -12.625283241271973
    5. 's' → logprob: -14.625283241271973
    6. ')
' → logprob: -15.375283241271973
    7. ' ' → logprob: -16.12528419494629
    8. ')`' → logprob: -16.12528419494629
    9. ')s' → logprob: -16.12528419494629
    10. '[s' → logprob: -16.25028419494629

Token 63: 'if' (ID: 366)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04808396100997925
    2. '<|end|>' → logprob: -4.548083782196045
    3. '(
' → logprob: -4.673083782196045
    4. 's' → logprob: -5.048083782196045
    5. ')' → logprob: -5.673083782196045
    6. 'x' → logprob: -5.673083782196045
    7. '(x' → logprob: -6.048083782196045
    8. 'G' → logprob: -6.048083782196045
    9. '(s' → logprob: -6.048083782196045
    10. ' ' → logprob: -6.423083782196045

Token 64: ' x' (ID: 1215)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1134268045425415
    2. ' s' → logprob: -1.1134268045425415
    3. ' x' → logprob: -1.1134268045425415
    4. 'x' → logprob: -4.863426685333252
    5. 's' → logprob: -5.363426685333252
    6. ' ' → logprob: -6.238426685333252
    7. '  ' → logprob: -9.23842716217041
    8. '_' → logprob: -9.73842716217041
    9. ' not' → logprob: -10.36342716217041
    10. ' (' → logprob: -10.61342716217041

Token 65: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.26930180191993713
    2. ' !=' → logprob: -2.7693018913269043
    3. '!=' → logprob: -2.7693018913269043
    4. ' ==' → logprob: -2.8943018913269043
    5. '==' → logprob: -3.3943018913269043
    6. ' ' → logprob: -4.519301891326904
    7. ':' → logprob: -4.894301891326904
    8. ' :' → logprob: -7.394301891326904
    9. '<|end|>' → logprob: -7.519301891326904
    10. '=' → logprob: -8.019301414489746

Token 66: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.704908013343811
    2. ' None' → logprob: -0.829908013343811
    3. 'None' → logprob: -3.0799078941345215
    4. 'not' → logprob: -3.8299078941345215
    5. ' ' → logprob: -7.2049078941345215
    6. ' N' → logprob: -7.8299078941345215
    7. '"' → logprob: -8.32990837097168
    8. ' n' → logprob: -8.70490837097168
    9. 'N' → logprob: -8.82990837097168
    10. 'n' → logprob: -9.32990837097168

Token 67: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.3868807554244995
    2. ' None' → logprob: -1.1368807554244995
    3. ' ' → logprob: -12.636880874633789
    4. '"' → logprob: -13.386880874633789
    5. '(None' → logprob: -13.636880874633789
    6. '_None' → logprob: -13.636880874633789
    7. 'N' → logprob: -13.886880874633789
    8. '.None' → logprob: -15.011880874633789
    9. ' N' → logprob: -15.011880874633789
    10. '=None' → logprob: -15.511880874633789

Token 68: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012252279557287693
    2. ' :' → logprob: -6.751224994659424
    3. ':
' → logprob: -10.251225471496582
    4. ' and' → logprob: -12.001225471496582
    5. '):' → logprob: -12.001225471496582
    6. ')' → logprob: -13.626225471496582
    7. ' ' → logprob: -14.126225471496582
    8. ':**' → logprob: -14.251225471496582
    9. ':return' → logprob: -14.376225471496582
    10. ' print' → logprob: -14.376225471496582

Token 69: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5118201375007629
    2. ' s' → logprob: -1.0118200778961182
    3. 'x' → logprob: -4.636820316314697
    4. ' len' → logprob: -4.761820316314697
    5. 's' → logprob: -4.886820316314697
    6. ' comp' → logprob: -5.386820316314697
    7. ' ' → logprob: -5.386820316314697
    8. '"' → logprob: -7.261820316314697
    9. ' ' → logprob: -8.261819839477539
    10. ' "' → logprob: -8.261819839477539

Token 70: ' !=' (ID: 1666)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3084069490432739
    2. '==' → logprob: -1.683406949043274
    3. ' ' → logprob: -3.1834068298339844
    4. ' !=' → logprob: -4.058406829833984
    5. '!=' → logprob: -5.308406829833984
    6. '[' → logprob: -5.433406829833984
    7. '=' → logprob: -5.683406829833984
    8. ')' → logprob: -5.683406829833984
    9. ' in' → logprob: -5.808406829833984
    10. '.' → logprob: -8.308406829833984

Token 71: ' "' (ID: 392)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1878573894500732
    2. '"' → logprob: -1.5628573894500732
    3. '""' → logprob: -1.9378573894500732
    4. ' s' → logprob: -2.3128573894500732
    5. ' ""' → logprob: -2.3128573894500732
    6. ' "' → logprob: -3.3128573894500732
    7. ''' → logprob: -3.4378573894500732
    8. ' ''' → logprob: -3.8128573894500732
    9. '"s' → logprob: -4.062857627868652
    10. '''' → logprob: -4.437857627868652

Token 72: 'G' (ID: 38)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.10228517651557922
    2. '\n' → logprob: -3.477285146713257
    3. '":' → logprob: -3.727285146713257
    4. 'T' → logprob: -4.102285385131836
    5. 's' → logprob: -4.852285385131836
    6. 'A' → logprob: -5.477285385131836
    7. 'None' → logprob: -5.977285385131836
    8. '"T' → logprob: -6.352285385131836
    9. ' "' → logprob: -6.477285385131836
    10. '"A' → logprob: -6.977285385131836

Token 73: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.00485883466899395
    2. '"' → logprob: -5.37985897064209
    3. ':' → logprob: -9.37985897064209
    4. '":
' → logprob: -9.87985897064209
    5. ' ":' → logprob: -10.00485897064209
    6. '"):' → logprob: -10.75485897064209
    7. '":
' → logprob: -12.37985897064209
    8. '):' → logprob: -12.50485897064209
    9. '":

' → logprob: -12.50485897064209
    10. '")' → logprob: -12.50485897064209

Token 74: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10635495185852051
    2. ' :' → logprob: -2.4813549518585205
    3. ' print' → logprob: -4.231354713439941
    4. ' ' → logprob: -7.106354713439941
    5. ':
' → logprob: -7.356354713439941
    6. ' :
' → logprob: -7.481354713439941
    7. 'print' → logprob: -8.481354713439941
    8. ' and' → logprob: -8.606354713439941
    9. '):' → logprob: -9.231354713439941
    10. ')' → logprob: -9.856354713439941

Token 75: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.021082233637571335
    2. 'print' (adapté à ' print') → logprob: -3.8960821628570557
    3. ' ' → logprob: -8.646081924438477
    4. '    ' → logprob: -9.396081924438477
    5. ' s' → logprob: -9.646081924438477
    6. ' x' → logprob: -9.771081924438477
    7. ' prin' → logprob: -9.771081924438477
    8. ' p' → logprob: -10.521081924438477
    9. '   ' → logprob: -11.521081924438477
    10. '.print' → logprob: -11.646081924438477

Token 76: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3871597945690155
    2. '(x' → logprob: -1.137159824371338
    3. '("("' → logprob: -8.76215934753418
    4. '("' → logprob: -9.26215934753418
    5. '('' → logprob: -10.88715934753418
    6. '(s' → logprob: -11.76215934753418
    7. '(
' → logprob: -12.51215934753418
    8. '()' → logprob: -12.88715934753418
    9. ' (' → logprob: -13.76215934753418
    10. '((' → logprob: -14.01215934753418

Token 77: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.054500666621607e-06
    2. ' )' → logprob: -12.87500286102295
    3. '))' → logprob: -15.00000286102295
    4. '")' → logprob: -17.000003814697266
    5. ')
' → logprob: -17.250003814697266
    6. '')' → logprob: -17.625003814697266
    7. ')`' → logprob: -18.125003814697266
    8. ')#' → logprob: -19.000003814697266
    9. ')")' → logprob: -19.000003814697266
    10. ')}' → logprob: -19.250003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 75
Tokens correctement prédits (1ère position, stricte): 21
Tokens correctement prédits (1ère position, avec adaptation): 21
Tokens correctement prédits (top 10): 50
Précision stricte (1ère position): 28.00%
Précision adaptée (1ère position): 28.00%
Précision (top 10): 66.67%
================================================================================
