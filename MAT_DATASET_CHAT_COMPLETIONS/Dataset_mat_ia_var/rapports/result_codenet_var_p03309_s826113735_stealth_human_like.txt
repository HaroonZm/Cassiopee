================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:45
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
lst = list(map(int, input().split()))
# Je fais une opération bizarre avec les indices - ça marche mais à vérifier !
for i in range(n):
    lst[i] = lst[i] - (i+1 - 1)
# J'sais pas pourquoi, mais on trie parce qu'on veut le médian 
lst.sort()
if n % 2 != 0:
    mediane = lst[n//2]
else:
    # la moyenne de deux éléments du milieu, mais à l'arrache avec round
    mediane = (lst[n//2] + lst[n//2 - 1])
    mediane = int(round(mediane/2))
total = 0
for i in range(0, n):  # on peut aussi faire sans range mais c'est plus clair
    total += abs(lst[i] - mediane)
print(total)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00042768914136104286
    2. ''' → logprob: -8.62542724609375
    3. '('' → logprob: -9.37542724609375
    4. '(n' → logprob: -9.87542724609375
    5. '```' → logprob: -10.37542724609375
    6. '`' → logprob: -10.75042724609375
    7. '("("' → logprob: -11.12542724609375
    8. '(
' → logprob: -11.12542724609375
    9. ')' → logprob: -11.75042724609375
    10. '()' → logprob: -12.25042724609375

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13287097215652466
    2. ')' → logprob: -2.13287091255188
    3. '()' → logprob: -5.382871150970459
    4. '())' → logprob: -7.382871150970459
    5. '(
' → logprob: -8.1328706741333
    6. '```' → logprob: -9.8828706741333
    7. '(

' → logprob: -10.2578706741333
    8. '('' → logprob: -10.3828706741333
    9. ''' → logprob: -10.6328706741333
    10. '(n' → logprob: -10.7578706741333

Token 5: 'lst' (ID: 65430)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7040315866470337
    2. 'if' → logprob: -1.4540315866470337
    3. 'for' → logprob: -2.329031467437744
    4. 's' → logprob: -2.454031467437744
    5. 'f' → logprob: -4.329031467437744
    6. ' ' → logprob: -4.454031467437744
    7. 'x' → logprob: -4.829031467437744
    8. ')' → logprob: -4.954031467437744
    9. 'a' → logprob: -4.954031467437744
    10. ''' → logprob: -5.079031467437744

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3491479158401489
    2. '.' → logprob: -1.224147915840149
    3. ')' → logprob: -8.59914779663086
    4. '.append' → logprob: -9.34914779663086
    5. '\[' → logprob: -9.59914779663086
    6. '[n' → logprob: -9.84914779663086
    7. '[
' → logprob: -9.97414779663086
    8. 's' → logprob: -10.09914779663086
    9. '```' → logprob: -10.34914779663086
    10. '[]' → logprob: -10.47414779663086

Token 7: ' list' (ID: 1562)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.013140465132892132
    2. '[]' → logprob: -4.638140678405762
    3. ' [' → logprob: -6.513140678405762
    4. ' ' → logprob: -7.138140678405762
    5. ' list' → logprob: -7.513140678405762
    6. 'list' → logprob: -8.513140678405762
    7. '[' → logprob: -8.763140678405762
    8. '[input' → logprob: -9.013140678405762
    9. ' input' → logprob: -10.513140678405762
    10. 'input' → logprob: -10.638140678405762

Token 8: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00012892624363303185
    2. '(input' → logprob: -9.500128746032715
    3. '(range' → logprob: -10.625128746032715
    4. '()' → logprob: -11.875128746032715
    5. '(`' → logprob: -12.875128746032715
    6. '(int' → logprob: -13.125128746032715
    7. '(n' → logprob: -13.125128746032715
    8. '(

' → logprob: -13.125128746032715
    9. '(user' → logprob: -13.250128746032715
    10. '(
' → logprob: -13.250128746032715

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.013370801694691181
    2. '(' → logprob: -4.388370990753174
    3. '(str' → logprob: -8.263370513916016
    4. '<int' → logprob: -8.763370513916016
    5. '(input' → logprob: -8.763370513916016
    6. 'int' → logprob: -9.513370513916016
    7. '(lambda' → logprob: -9.763370513916016
    8. '[int' → logprob: -10.138370513916016
    9. ')' → logprob: -10.263370513916016
    10. '=int' → logprob: -10.763370513916016

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.09285423159599304
    2. '(' → logprob: -2.9678542613983154
    3. '))' → logprob: -3.9678542613983154
    4. ',' → logprob: -4.842854022979736
    5. ',input' → logprob: -5.092854022979736
    6. ')' → logprob: -6.217854022979736
    7. 'input' → logprob: -8.467854499816895
    8. '```' → logprob: -8.592854499816895
    9. '(eval' → logprob: -8.842854499816895
    10. '(user' → logprob: -8.967854499816895

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.02977004647254944
    2. ' input' → logprob: -3.5297701358795166
    3. '(input' → logprob: -10.904769897460938
    4. ',input' → logprob: -14.654769897460938
    5. '=input' → logprob: -15.154769897460938
    6. ')' → logprob: -15.404769897460938
    7. '	input' → logprob: -15.654769897460938
    8. '<input' → logprob: -16.779769897460938
    9. ' ' → logprob: -17.029769897460938
    10. '```' → logprob: -17.904769897460938

Token 12: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7241215705871582
    2. '())' → logprob: -1.4741215705871582
    3. '()))' → logprob: -1.4741215705871582
    4. '().' → logprob: -2.974121570587158
    5. ')' → logprob: -6.349121570587158
    6. '()));' → logprob: -6.474121570587158
    7. '(' → logprob: -6.974121570587158
    8. '))' → logprob: -7.474121570587158
    9. '())))' → logprob: -7.599121570587158
    10. '()>' → logprob: -8.59912109375

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00035143180866725743
    2. 'strip' → logprob: -8.000351905822754
    3. 'rstrip' → logprob: -11.125351905822754
    4. ' split' → logprob: -14.000351905822754
    5. '(split' → logprob: -15.125351905822754
    6. 'spl' → logprob: -16.125350952148438
    7. ')' → logprob: -17.500350952148438
    8. 's' → logprob: -19.375350952148438
    9. '.split' → logprob: -19.625350952148438
    10. '```' → logprob: -19.875350952148438

Token 14: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.23213228583335876
    2. '))' → logprob: -1.7321323156356812
    3. '())' → logprob: -4.107132434844971
    4. '()' → logprob: -5.107132434844971
    5. ')' → logprob: -5.232132434844971
    6. '(' → logprob: -6.482132434844971
    7. ')))' → logprob: -7.982132434844971
    8. '())))' → logprob: -8.482131958007812
    9. ''))' → logprob: -8.857131958007812
    10. '('' → logprob: -9.482131958007812

Token 15: '#' (ID: 2)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.33390694856643677
    2. 'for' → logprob: -2.333906888961792
    3. 'sum' → logprob: -2.708906888961792
    4. 'max' → logprob: -3.833906888961792
    5. 'm' → logprob: -4.083907127380371
    6. 'result' → logprob: -4.208907127380371
    7. 'total' → logprob: -4.333907127380371
    8. 'lst' → logprob: -4.333907127380371
    9. 'count' → logprob: -4.708907127380371
    10. 'c' → logprob: -5.333907127380371

Token 16: ' Je' (ID: 4678)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.14638036489486694
    2. 'm' → logprob: -3.5213804244995117
    3. 'c' → logprob: -3.6463804244995117
    4. ' s' → logprob: -3.6463804244995117
    5. 'sum' → logprob: -4.146380424499512
    6. 'd' → logprob: -4.646380424499512
    7. 'r' → logprob: -5.646380424499512
    8. ' m' → logprob: -5.896380424499512
    9. 'result' → logprob: -6.021380424499512
    10. 'max' → logprob: -6.146380424499512

Token 17: ' fais' (ID: 24376)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.1135750263929367
    2. 't' → logprob: -3.488574981689453
    3. 'mp' → logprob: -3.863574981689453
    4. 'd' → logprob: -4.613574981689453
    5. '#' → logprob: -4.988574981689453
    6. 'j' → logprob: -5.363574981689453
    7. 'n' → logprob: -5.801074981689453
    8. 'dge' → logprob: -5.863574981689453
    9. 'g' → logprob: -6.051074981689453
    10. ' m' → logprob: -6.238574981689453

Token 18: ' une' (ID: 2463)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -1.247584342956543
    2. ' ' → logprob: -1.372584342956543
    3. 's' → logprob: -1.747584342956543
    4. 'un' → logprob: -2.372584342956543
    5. '_' → logprob: -2.997584342956543
    6. 'print' → logprob: -3.747584342956543
    7. '```' → logprob: -4.372584342956543
    8. ' =' → logprob: -4.747584342956543
    9. 'une' → logprob: -4.747584342956543
    10. 'al' → logprob: -4.872584342956543

Token 19: ' opération' (ID: 86023)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.329848051071167
    2. ' ' → logprob: -1.454848051071167
    3. ' somme' → logprob: -1.579848051071167
    4. 'sum' → logprob: -2.329848051071167
    5. 'for' → logprob: -3.079848051071167
    6. 'som' → logprob: -3.954848051071167
    7. '#' → logprob: -4.204848289489746
    8. 'tri' → logprob: -4.704848289489746
    9. ' boucle' → logprob: -4.829848289489746
    10. 'liste' → logprob: -4.954848289489746

Token 20: ' bizarre' (ID: 61150)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21484364569187164
    2. '[' → logprob: -3.08984375
    3. 's' → logprob: -3.21484375
    4. 'for' → logprob: -3.58984375
    5. '_' → logprob: -3.83984375
    6. ' for' → logprob: -4.21484375
    7. ')' → logprob: -4.58984375
    8. '+' → logprob: -4.58984375
    9. 'lst' → logprob: -5.46484375
    10. '(' → logprob: -5.71484375

Token 21: ' avec' (ID: 3937)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11455788463354111
    2. 'lst' → logprob: -2.739557981491089
    3. ' for' → logprob: -3.989557981491089
    4. ')' → logprob: -4.61455774307251
    5. 's' → logprob: -5.48955774307251
    6. '*' → logprob: -5.98955774307251
    7. 'f' → logprob: -6.23955774307251
    8. '(' → logprob: -6.61455774307251
    9. 'result' → logprob: -7.36455774307251
    10. ' ' → logprob: -7.36455774307251

Token 22: ' les' (ID: 1341)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.056496329605579376
    2. ' lst' → logprob: -3.8064963817596436
    3. 'sum' → logprob: -4.3064961433410645
    4. '[' → logprob: -6.0564961433410645
    5. 'la' → logprob: -6.3064961433410645
    6. 'l' → logprob: -6.4314961433410645
    7. 'max' → logprob: -6.6814961433410645
    8. 'n' → logprob: -6.8064961433410645
    9. '*' → logprob: -7.0564961433410645
    10. ' ' → logprob: -7.1814961433410645

Token 23: ' indices' (ID: 30378)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.47198596596717834
    2. 'lst' → logprob: -1.971985936164856
    3. 'élé' → logprob: -2.3469860553741455
    4. 's' → logprob: -3.3469860553741455
    5. ' lst' → logprob: -3.5969860553741455
    6. ' éléments' → logprob: -3.8469860553741455
    7. ' elements' → logprob: -5.221985816955566
    8. '_lst' → logprob: -5.221985816955566
    9. ' nombres' → logprob: -5.471985816955566
    10. ' espaces' → logprob: -5.471985816955566

Token 24: ' -' (ID: 533)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.817947506904602
    2. 'for' → logprob: -1.067947506904602
    3. ' for' → logprob: -2.8179473876953125
    4. ' ' → logprob: -2.9429473876953125
    5. ')' → logprob: -3.6929473876953125
    6. 's' → logprob: -3.9429473876953125
    7. ',' → logprob: -4.5679473876953125
    8. ':' → logprob: -4.9429473876953125
    9. '#' → logprob: -5.0679473876953125
    10. 'i' → logprob: -5.3179473876953125

Token 25: ' ça' (ID: 13590)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0154811143875122
    2. 'for' → logprob: -1.5154811143875122
    3. ' ' → logprob: -1.6404811143875122
    4. ' for' → logprob: -2.0154809951782227
    5. ',' → logprob: -3.8904809951782227
    6. ')' → logprob: -4.140480995178223
    7. ':' → logprob: -4.265480995178223
    8. 's' → logprob: -4.765480995178223
    9. '[:]' → logprob: -5.515480995178223
    10. ']' → logprob: -5.640480995178223

Token 26: ' marche' (ID: 58191)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.6294814348220825
    2. 's' → logprob: -1.7544814348220825
    3. 'n' → logprob: -2.004481315612793
    4. ' n' → logprob: -2.004481315612793
    5. '<|end|>' → logprob: -2.254481315612793
    6. ' s' → logprob: -2.379481315612793
    7. ' va' → logprob: -4.004481315612793
    8. ' continue' → logprob: -4.504481315612793
    9. ' semble' → logprob: -4.754481315612793
    10. '#' → logprob: -4.754481315612793

Token 27: ' mais' (ID: 2899)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.40191033482551575
    2. ' for' → logprob: -2.2769103050231934
    3. '
' → logprob: -2.5269103050231934
    4. ',' → logprob: -3.2769103050231934
    5. ' ' → logprob: -4.151910305023193
    6. ')' → logprob: -4.151910305023193
    7. '\n' → logprob: -4.276910305023193
    8. ':' → logprob: -4.651910305023193
    9. '  
' → logprob: -4.901910305023193
    10. ' 
' → logprob: -5.026910305023193

Token 28: ' à' (ID: 1221)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.4795350134372711
    2. ' c' → logprob: -1.6045349836349487
    3. ' ce' → logprob: -2.7295351028442383
    4. 'pas' → logprob: -3.6045351028442383
    5. 'je' → logprob: -3.7295351028442383
    6. 'ce' → logprob: -3.7295351028442383
    7. 'ça' → logprob: -3.9795351028442383
    8. 'cela' → logprob: -4.854535102844238
    9. 'il' → logprob: -5.854535102844238
    10. '#' → logprob: -6.104535102844238

Token 29: ' vérifier' (ID: 93671)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pe' → logprob: -1.010392665863037
    2. 'part' → logprob: -1.760392665863037
    3. 'v' → logprob: -2.260392665863037
    4. 'l' → logprob: -2.635392665863037
    5. 're' → logprob: -3.135392665863037
    6. 'mon' → logprob: -3.510392665863037
    7. '```' → logprob: -3.885392665863037
    8. 'long' → logprob: -4.010392665863037
    9. 'la' → logprob: -4.260392665863037
    10. 'cha' → logprob: -4.385392665863037

Token 30: ' !
' (ID: 27498)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0947680473327637
    2. ')' → logprob: -1.3447680473327637
    3. ' for' → logprob: -1.9697680473327637
    4. ' ' → logprob: -2.2197680473327637
    5. '[' → logprob: -3.2197680473327637
    6. ' 
' → logprob: -3.3447680473327637
    7. 's' → logprob: -4.344768047332764
    8. ',' → logprob: -4.719768047332764
    9. 'n' → logprob: -4.969768047332764
    10. 'i' → logprob: -5.094768047332764

Token 31: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.24999170005321503
    2. ' for' → logprob: -2.3749916553497314
    3. 'i' → logprob: -3.2499916553497314
    4. 's' → logprob: -3.2499916553497314
    5. 'f' → logprob: -3.8749916553497314
    6. 'lst' → logprob: -5.6249918937683105
    7. 'result' → logprob: -5.9999918937683105
    8. 'r' → logprob: -5.9999918937683105
    9. 'n' → logprob: -6.2499918937683105
    10. '[' → logprob: -6.3749918937683105

Token 32: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.001450948417186737
    2. ' ' → logprob: -6.751451015472412
    3. ' _' → logprob: -8.626450538635254
    4. 'i' → logprob: -9.501450538635254
    5. '_' → logprob: -11.251450538635254
    6. ' ' → logprob: -11.501450538635254
    7. ' ‌' → logprob: -13.126450538635254
    8. '  ' → logprob: -14.251450538635254
    9. '	i' → logprob: -15.126450538635254
    10. ' ' → logprob: -15.501450538635254

Token 33: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.027553565800189972
    2. 'in' → logprob: -3.6525535583496094
    3. ' ' → logprob: -6.777553558349609
    4. '  ' → logprob: -10.02755355834961
    5. '+' → logprob: -10.52755355834961
    6. ' i' → logprob: -11.90255355834961
    7. 'range' → logprob: -12.27755355834961
    8. ',' → logprob: -12.52755355834961
    9. ')' → logprob: -12.52755355834961
    10. '	in' → logprob: -12.77755355834961

Token 34: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.00015693542081862688
    2. 'range' → logprob: -8.875157356262207
    3. ' ' → logprob: -11.125157356262207
    4. '	range' → logprob: -13.875157356262207
    5. ' xrange' → logprob: -14.625157356262207
    6. ' n' → logprob: -15.625157356262207
    7. ' lst' → logprob: -16.00015640258789
    8. '  ' → logprob: -16.12515640258789
    9. '   ' → logprob: -16.25015640258789
    10. '(range' → logprob: -16.37515640258789

Token 35: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.10042793303728104
    2. '(' → logprob: -2.3504278659820557
    3. '(len' → logprob: -8.475427627563477
    4. '(i' → logprob: -12.350427627563477
    5. ' (' → logprob: -12.350427627563477
    6. '(s' → logprob: -13.850427627563477
    7. '(
' → logprob: -13.975427627563477
    8. '((' → logprob: -14.225427627563477
    9. '(l' → logprob: -14.600427627563477
    10. '(

' → logprob: -14.975427627563477

Token 36: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08488491922616959
    2. '-' → logprob: -2.5848848819732666
    3. ' ):' → logprob: -5.959885120391846
    4. ' -' → logprob: -6.459885120391846
    5. '):
' → logprob: -6.584885120391846
    6. ')' → logprob: -7.959885120391846
    7. ' ' → logprob: -10.709884643554688
    8. '+' → logprob: -11.084884643554688
    9. '//' → logprob: -11.209884643554688
    10. '   ' → logprob: -11.834884643554688

Token 37: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19337423145771027
    2. ' ' → logprob: -2.0683741569519043
    3. ' lst' → logprob: -3.5683741569519043
    4. '    ' → logprob: -4.568374156951904
    5. 'lst' → logprob: -5.443374156951904
    6. ':' → logprob: -5.943374156951904
    7. ' if' → logprob: -7.068374156951904
    8. '  ' → logprob: -7.943374156951904
    9. '    
' → logprob: -7.943374156951904
    10. ' print' → logprob: -8.068374633789062

Token 38: ' lst' (ID: 33384)
  Prédit: ' lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lst' → logprob: -0.5749539136886597
    2. ' if' → logprob: -1.4499539136886597
    3. 'lst' (adapté à ' lst') → logprob: -2.324954032897949
    4. ' for' → logprob: -2.699954032897949
    5. 'if' → logprob: -4.449954032897949
    6. ' print' → logprob: -4.824954032897949
    7. 'for' → logprob: -5.074954032897949
    8. '   ' → logprob: -5.324954032897949
    9. ' ' → logprob: -6.324954032897949
    10. 'print' → logprob: -6.324954032897949

Token 39: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20273883640766144
    2. '[i' → logprob: -1.702738881111145
    3. '[:]' → logprob: -7.3277387619018555
    4. '[-' → logprob: -8.702738761901855
    5. '[(' → logprob: -9.577738761901855
    6. '[len' → logprob: -9.827738761901855
    7. '[min' → logprob: -9.827738761901855
    8. '[...]' → logprob: -9.952738761901855
    9. '\[' → logprob: -10.077738761901855
    10. '.append' → logprob: -10.077738761901855

Token 40: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010674129240214825
    2. '+' → logprob: -5.260673999786377
    3. '-' → logprob: -5.760673999786377
    4. ' ]' → logprob: -6.885673999786377
    5. ']+' → logprob: -8.010674476623535
    6. ']+=' → logprob: -8.260674476623535
    7. '//' → logprob: -9.010674476623535
    8. ']=' → logprob: -9.010674476623535
    9. '+]' → logprob: -9.510674476623535
    10. ' -' → logprob: -9.510674476623535

Token 41: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.44969168305397034
    2. ' =' → logprob: -1.324691653251648
    3. ' +=' → logprob: -2.8246917724609375
    4. '+=' → logprob: -4.0746917724609375
    5. ' *=' → logprob: -4.5746917724609375
    6. ' ' → logprob: -5.8246917724609375
    7. '+' → logprob: -6.3246917724609375
    8. ',' → logprob: -6.8246917724609375
    9. '*=' → logprob: -6.9496917724609375
    10. ' ^=' → logprob: -7.1996917724609375

Token 42: ' lst' (ID: 33384)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.6524986028671265
    2. ' lst' → logprob: -0.7774986028671265
    3. '(lst' → logprob: -5.152498722076416
    4. 'i' → logprob: -5.777498722076416
    5. ' i' → logprob: -6.152498722076416
    6. ' (' → logprob: -6.527498722076416
    7. '(i' → logprob: -6.527498722076416
    8. 'sum' → logprob: -6.652498722076416
    9. ' sum' → logprob: -7.152498722076416
    10. 'abs' → logprob: -7.152498722076416

Token 43: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.09063152223825455
    2. '[' → logprob: -2.4656314849853516
    3. '[(' → logprob: -6.840631484985352
    4. '[-' → logprob: -9.090631484985352
    5. '[:]' → logprob: -9.465631484985352
    6. '[min' → logprob: -9.590631484985352
    7. '[n' → logprob: -9.840631484985352
    8. 'i' → logprob: -10.340631484985352
    9. '[
' → logprob: -10.465631484985352
    10. '[:' → logprob: -10.465631484985352

Token 44: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1206866130232811
    2. ']' → logprob: -2.4956865310668945
    3. '+' → logprob: -4.3706865310668945
    4. ' -' → logprob: -4.4956865310668945
    5. '-i' → logprob: -6.1206865310668945
    6. ']-' → logprob: -6.2456865310668945
    7. ']+' → logprob: -6.9956865310668945
    8. '%' → logprob: -7.1206865310668945
    9. '+i' → logprob: -7.6206865310668945
    10. '*i' → logprob: -8.745686531066895

Token 45: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.33639654517173767
    2. '-' → logprob: -1.58639657497406
    3. '%' → logprob: -3.3363964557647705
    4. '*' → logprob: -4.33639669418335
    5. ' +' → logprob: -4.33639669418335
    6. '*i' → logprob: -5.71139669418335
    7. '+i' → logprob: -5.71139669418335
    8. ' -' → logprob: -5.96139669418335
    9. '[i' → logprob: -6.08639669418335
    10. ' ' → logprob: -6.58639669418335

Token 46: ' (' (ID: 350)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.2985462546348572
    2. ' lst' → logprob: -1.923546314239502
    3. 'i' → logprob: -2.423546314239502
    4. ' i' → logprob: -4.298546314239502
    5. '1' → logprob: -4.923546314239502
    6. ' (' → logprob: -7.548546314239502
    7. ' ' → logprob: -7.673546314239502
    8. '(i' → logprob: -7.673546314239502
    9. '(lst' → logprob: -8.173545837402344
    10. 'l' → logprob: -8.423545837402344

Token 47: 'i' (ID: 72)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.5667397379875183
    2. 'i' → logprob: -1.566739797592163
    3. ' lst' → logprob: -1.941739797592163
    4. '1' → logprob: -3.691739797592163
    5. ' i' → logprob: -4.191739559173584
    6. '(i' → logprob: -4.441739559173584
    7. ' (' → logprob: -4.941739559173584
    8. 'n' → logprob: -5.191739559173584
    9. '(' → logprob: -5.441739559173584
    10. '(lst' → logprob: -5.566739559173584

Token 48: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.18637007474899292
    2. ')' → logprob: -2.5613701343536377
    3. ' +' → logprob: -2.6863701343536377
    4. '*' → logprob: -4.686369895935059
    5. '%' → logprob: -5.061369895935059
    6. '-' → logprob: -5.186369895935059
    7. ' *' → logprob: -6.811369895935059
    8. ' %' → logprob: -7.186369895935059
    9. ' -' → logprob: -7.311369895935059
    10. ' ' → logprob: -8.311369895935059

Token 49: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.893480243277736e-05
    2. ' ' → logprob: -10.500039100646973
    3. '2' → logprob: -11.625039100646973
    4. ')' → logprob: -14.000039100646973
    5. '3' → logprob: -14.875039100646973
    6. '0' → logprob: -15.625039100646973
    7. 'i' → logprob: -15.750039100646973
    8. '10' → logprob: -15.875039100646973
    9. 'lst' → logprob: -16.375038146972656
    10. '5' → logprob: -16.625038146972656

Token 50: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.309382373117842e-05
    2. '))' → logprob: -11.125033378601074
    3. '*' → logprob: -12.125033378601074
    4. ' )' → logprob: -12.625033378601074
    5. ')
' → logprob: -13.125033378601074
    6. ')**' → logprob: -13.625033378601074
    7. ')*' → logprob: -13.750033378601074
    8. ')`' → logprob: -14.125033378601074
    9. ')))' → logprob: -14.250033378601074
    10. '**' → logprob: -14.500033378601074

Token 51: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5044335126876831
    2. 'lst' → logprob: -1.879433512687683
    3. ' lst' → logprob: -2.1294336318969727
    4. ' i' → logprob: -3.7544336318969727
    5. ' ' → logprob: -3.8794336318969727
    6. ' n' → logprob: -4.129433631896973
    7. 'i' → logprob: -4.254433631896973
    8. ')' → logprob: -4.254433631896973
    9. 'n' → logprob: -4.504433631896973
    10. '0' → logprob: -4.504433631896973

Token 52: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.41663670539855957
    2. 'lst' → logprob: -1.5416367053985596
    3. 'n' → logprob: -3.1666367053985596
    4. 'i' → logprob: -3.6666367053985596
    5. '0' → logprob: -4.0416364669799805
    6. 'len' → logprob: -4.9166364669799805
    7. ' lst' → logprob: -5.0416364669799805
    8. '(i' → logprob: -5.0416364669799805
    9. '(n' → logprob: -5.2916364669799805
    10. ')' → logprob: -5.7916364669799805

Token 53: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006896786508150399
    2. ' )' → logprob: -8.000689506530762
    3. '))' → logprob: -8.875689506530762
    4. '])' → logprob: -9.500689506530762
    5. ')))' → logprob: -10.625689506530762
    6. '0' → logprob: -10.750689506530762
    7. ')])' → logprob: -11.125689506530762
    8. ']' → logprob: -11.625689506530762
    9. '[' → logprob: -12.125689506530762
    10. ')*' → logprob: -12.125689506530762

Token 54: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.41432055830955505
    2. '<|end|>' → logprob: -1.6643205881118774
    3. ' ' → logprob: -2.164320468902588
    4. '+' → logprob: -4.164320468902588
    5. '
' → logprob: -5.789320468902588
    6. '```' → logprob: -6.039320468902588
    7. '<|end|>' → logprob: -6.164320468902588
    8. '1' → logprob: -6.289320468902588
    9. '\n' → logprob: -6.414320468902588
    10. '0' → logprob: -6.914320468902588

Token 55: ' J' (ID: 643)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 56: ''s' (ID: 885)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0031771177891641855
    2. 'u' → logprob: -6.378177165985107
    3. 'a' → logprob: -7.128177165985107
    4. 'uste' → logprob: -8.87817668914795
    5. 's' → logprob: -9.12817668914795
    6. 'i' → logprob: -9.25317668914795
    7. ''' → logprob: -9.62817668914795
    8. 'ust' → logprob: -9.87817668914795
    9. 'us' → logprob: -10.50317668914795
    10. ' continue' → logprob: -11.00317668914795

Token 57: 'ais' (ID: 1873)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.12618842720985413
    2. 'uste' → logprob: -2.3761885166168213
    3. 'ust' → logprob: -4.501188278198242
    4. 'u' → logprob: -4.876188278198242
    5. 'us' → logprob: -6.501188278198242
    6. 'a' → logprob: -6.501188278198242
    7. 'ui' → logprob: -6.626188278198242
    8. 'uis' → logprob: -7.001188278198242
    9. 'uge' → logprob: -8.501188278198242
    10. '```' → logprob: -8.626188278198242

Token 58: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.1483725905418396
    2. ' plus' → logprob: -2.8983726501464844
    3. 'pas' → logprob: -3.0233726501464844
    4. 'plus' → logprob: -3.6483726501464844
    5. ',' → logprob: -6.023372650146484
    6. ' rien' → logprob: -6.648372650146484
    7. '```' → logprob: -6.773372650146484
    8. '.' → logprob: -7.023372650146484
    9. ' ' → logprob: -7.023372650146484
    10. '+' → logprob: -8.148372650146484

Token 59: ' pourquoi' (ID: 39224)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9164440631866455
    2. '.' → logprob: -1.4164440631866455
    3. '```' → logprob: -2.2914440631866455
    4. ',' → logprob: -3.0414440631866455
    5. 'why' → logprob: -3.7914440631866455
    6. 'faire' → logprob: -3.7914440631866455
    7. 'i' → logprob: -3.7914440631866455
    8. ' if' → logprob: -4.166443824768066
    9. '+' → logprob: -4.166443824768066
    10. 's' → logprob: -4.291443824768066

Token 60: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3851805329322815
    2. ' ' → logprob: -1.5101804733276367
    3. '<|end|>' → logprob: -2.6351804733276367
    4. '+' → logprob: -5.260180473327637
    5. '   ' → logprob: -5.635180473327637
    6. 'n' → logprob: -5.885180473327637
    7. '```' → logprob: -6.010180473327637
    8. 'i' → logprob: -6.010180473327637
    9. '<|end|>' → logprob: -6.135180473327637
    10. '[' → logprob: -6.885180473327637

Token 61: ' mais' (ID: 2899)
  Prédit: ' but'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' but' → logprob: -0.3150658905506134
    2. ' mais' → logprob: -2.065065860748291
    3. ' lst' → logprob: -2.815065860748291
    4. 'lst' → logprob: -3.065065860748291
    5. ' i' → logprob: -4.190065860748291
    6. 'but' → logprob: -4.315065860748291
    7. ' c' → logprob: -6.315065860748291
    8. 'mais' → logprob: -6.315065860748291
    9. ' ' → logprob: -6.690065860748291
    10. ' je' → logprob: -7.190065860748291

Token 62: ' on' (ID: 402)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.6969165205955505
    2. ' lst' → logprob: -0.8219165205955505
    3. ' for' → logprob: -3.4469165802001953
    4. 'for' → logprob: -4.571916580200195
    5. ' i' → logprob: -5.446916580200195
    6. ' n' → logprob: -6.071916580200195
    7. 'i' → logprob: -6.321916580200195
    8. 'n' → logprob: -6.446916580200195
    9. ' if' → logprob: -6.696916580200195
    10. ' ' → logprob: -6.696916580200195

Token 63: ' trie' (ID: 139428)
  Prédit: ' dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dir' → logprob: -0.12269069999456406
    2. 'dir' → logprob: -2.4976906776428223
    3. 'a' → logprob: -4.622690677642822
    4. ' doit' → logprob: -5.247690677642822
    5. ' a' → logprob: -5.372690677642822
    6. 's' → logprob: -5.872690677642822
    7. 'i' → logprob: -6.872690677642822
    8. 'n' → logprob: -6.872690677642822
    9. 'for' → logprob: -7.247690677642822
    10. ' peut' → logprob: -7.372690677642822

Token 64: ' parce' (ID: 27146)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.13692766427993774
    2. '(lst' → logprob: -2.886927604675293
    3. '(' → logprob: -4.136927604675293
    4. '```' → logprob: -4.136927604675293
    5. 's' → logprob: -4.511927604675293
    6. '()' → logprob: -4.636927604675293
    7. '
' → logprob: -5.136927604675293
    8. '(
' → logprob: -5.386927604675293
    9. '()
' → logprob: -6.261927604675293
    10. '  
' → logprob: -6.511927604675293

Token 65: ' qu' (ID: 474)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.03890572488307953
    2. 'qu' → logprob: -3.413905620574951
    3. ' que' → logprob: -5.788905620574951
    4. ' qu' → logprob: -6.163905620574951
    5. 'ce' → logprob: -10.41390609741211
    6. 'qui' → logprob: -11.16390609741211
    7. 'q' → logprob: -11.66390609741211
    8. 'quec' → logprob: -11.66390609741211
    9. '#' → logprob: -12.66390609741211
    10. 'quoi' → logprob: -12.78890609741211

Token 66: ''on' (ID: 25812)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -1.2396012544631958
    2. ''il' → logprob: -1.4896012544631958
    3. ''on' → logprob: -1.4896012544631958
    4. 'qu' → logprob: -1.8646012544631958
    5. 'il' → logprob: -3.4896011352539062
    6. 'on' → logprob: -3.6146011352539062
    7. ' qu' → logprob: -4.114601135253906
    8. ' on' → logprob: -4.739601135253906
    9. 'ça' → logprob: -4.864601135253906
    10. ' que' → logprob: -5.364601135253906

Token 67: ' veut' (ID: 41653)
  Prédit: 'do'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'do' → logprob: -1.2607417106628418
    2. 'veux' → logprob: -1.8857417106628418
    3. ' veut' → logprob: -2.385741710662842
    4. ' doit' → logprob: -2.385741710662842
    5. 's' → logprob: -2.510741710662842
    6. 'a' → logprob: -2.885741710662842
    7. 've' → logprob: -3.010741710662842
    8. 'tr' → logprob: -3.760741710662842
    9. 'vais' → logprob: -4.135741710662842
    10. 'va' → logprob: -4.260741710662842

Token 68: ' le' (ID: 505)
  Prédit: ' lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lst' → logprob: -0.32830289006233215
    2. 'lst' → logprob: -1.3283028602600098
    3. ' la' → logprob: -5.57830286026001
    4. ' que' → logprob: -5.82830286026001
    5. ' les' → logprob: -6.20330286026001
    6. '(lst' → logprob: -7.32830286026001
    7. 's' → logprob: -7.70330286026001
    8. ' ensuite' → logprob: -7.70330286026001
    9. 'les' → logprob: -8.015803337097168
    10. ' ' → logprob: -8.078303337097168

Token 69: ' méd' (ID: 13387)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.96576988697052
    2. 'minimum' → logprob: -1.21576988697052
    3. 'lst' → logprob: -2.5907697677612305
    4. ' plus' → logprob: -3.0907697677612305
    5. ' minimum' → logprob: -3.3407697677612305
    6. 'min' → logprob: -3.3407697677612305
    7. 'maximum' → logprob: -3.9657697677612305
    8. 'm' → logprob: -3.9657697677612305
    9. 'moins' → logprob: -4.3407697677612305
    10. 'élé' → logprob: -4.4657697677612305

Token 70: 'ian' (ID: 1200)
  Prédit: 'ian'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ian' → logprob: -0.6001079082489014
    2. 'iane' → logprob: -1.4751079082489014
    3. 'i' → logprob: -1.6001079082489014
    4. 'a' → logprob: -5.3501081466674805
    5. 'an' → logprob: -5.8501081466674805
    6. 'ie' → logprob: -6.1001081466674805
    7. 'ia' → logprob: -6.2251081466674805
    8. 'ianne' → logprob: -6.4751081466674805
    9. 'o' → logprob: -6.7251081466674805
    10. 'e' → logprob: -6.7251081466674805

Token 71: ' 
' (ID: 793)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.9756612777709961
    2. '_' → logprob: -1.225661277770996
    3. 's' → logprob: -2.100661277770996
    4. ')' → logprob: -2.475661277770996
    5. '
' → logprob: -3.850661277770996
    6. '(' → logprob: -4.225661277770996
    7. '(lst' → logprob: -4.350661277770996
    8. '\' → logprob: -4.350661277770996
    9. '  
' → logprob: -4.725661277770996
    10. '_
' → logprob: -4.975661277770996

Token 72: 'lst' (ID: 65430)
  Prédit: 'lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.02101861499249935
    2. '
' → logprob: -5.1460185050964355
    3. ')' → logprob: -5.2710185050964355
    4. 's' → logprob: -5.8960185050964355
    5. '```' → logprob: -6.5210185050964355
    6. '\n' → logprob: -6.8960185050964355
    7. ',' → logprob: -7.0210185050964355
    8. '(lst' → logprob: -7.2710185050964355
    9. '_' → logprob: -7.7710185050964355
    10. '_lst' → logprob: -8.021018981933594

Token 73: '.sort' (ID: 19551)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4743419289588928
    2. '.sort' → logprob: -0.9743419289588928
    3. 'sort' → logprob: -9.349342346191406
    4. '<|end|>' → logprob: -9.849342346191406
    5. '.Sort' → logprob: -10.974342346191406
    6. '_sorted' → logprob: -11.099342346191406
    7. '=' → logprob: -11.599342346191406
    8. ')' → logprob: -11.599342346191406
    9. 'sorted' → logprob: -11.599342346191406
    10. '.sorted' → logprob: -11.724342346191406

Token 74: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0010818752925843
    2. '(' → logprob: -6.876081943511963
    3. '()
' → logprob: -10.501081466674805
    4. '()

' → logprob: -11.876081466674805
    5. '()`' → logprob: -12.001081466674805
    6. '();' → logprob: -13.626081466674805
    7. '()>' → logprob: -13.626081466674805
    8. '```' → logprob: -13.626081466674805
    9. '())' → logprob: -14.251081466674805
    10. ')' → logprob: -14.501081466674805

Token 75: 'if' (ID: 366)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.24832922220230103
    2. 'median' → logprob: -1.7483291625976562
    3. 'med' → logprob: -4.123329162597656
    4. 'mid' → logprob: -4.373329162597656
    5. '#' → logprob: -5.748329162597656
    6. 'k' → logprob: -6.248329162597656
    7. 'a' → logprob: -6.248329162597656
    8. ' 
' → logprob: -6.373329162597656
    9. 'x' → logprob: -6.498329162597656
    10. '
' → logprob: -6.873329162597656

Token 76: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0010418595047667623
    2. 'n' → logprob: -6.876041889190674
    3. ' lst' → logprob: -12.751041412353516
    4. ' ' → logprob: -13.001041412353516
    5. ' len' → logprob: -13.376041412353516
    6. ' ' → logprob: -13.876041412353516
    7. ' (' → logprob: -14.126041412353516
    8. '	n' → logprob: -15.001041412353516
    9. '(n' → logprob: -16.251041412353516
    10. ' l' → logprob: -17.001041412353516

Token 77: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.22330254316329956
    2. '%' → logprob: -1.8483026027679443
    3. ' ==' → logprob: -4.098302364349365
    4. ' >' → logprob: -4.223302364349365
    5. ' <=' → logprob: -5.098302364349365
    6. ' ' → logprob: -5.973302364349365
    7. '==' → logprob: -6.348302364349365
    8. '>' → logprob: -7.473302364349365
    9. '<=' → logprob: -8.973302841186523
    10. ' >=' → logprob: -9.348302841186523

Token 78: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0015024791937321424
    2. ' ' → logprob: -6.501502513885498
    3. '  ' → logprob: -16.626502990722656
    4. '```' → logprob: -16.626502990722656
    5. '3' → logprob: -17.251502990722656
    6. '20' → logprob: -17.876502990722656
    7. '   ' → logprob: -18.001502990722656
    8. ' ' → logprob: -18.501502990722656
    9. '۲' → logprob: -18.501502990722656
    10. '26' → logprob: -18.814002990722656

Token 79: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.000006675720215
    3. '```' → logprob: -15.875006675720215
    4. '   ' → logprob: -18.1875057220459
    5. '3' → logprob: -18.5000057220459
    6. '1' → logprob: -18.6875057220459
    7. '  ' → logprob: -18.9375057220459
    8. '20' → logprob: -19.0625057220459
    9. '!' → logprob: -19.1250057220459
    10. '{' → logprob: -19.2500057220459

Token 80: ' !=' (ID: 1666)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.313437283039093
    2. '==' → logprob: -1.3134372234344482
    3. '=' → logprob: -9.188437461853027
    4. ' !=' → logprob: -10.313437461853027
    5. ' =' → logprob: -10.813437461853027
    6. '!=' → logprob: -11.688437461853027
    7. ' ' → logprob: -12.563437461853027
    8. ')' → logprob: -13.313437461853027
    9. ')==' → logprob: -13.438437461853027
    10. '0' → logprob: -13.688437461853027

Token 81: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25202080607414246
    2. ' ' → logprob: -1.5020208358764648
    3. '=' → logprob: -9.627020835876465
    4. '1' → logprob: -11.002020835876465
    5. '2' → logprob: -12.252020835876465
    6. '```' → logprob: -13.502020835876465
    7. '  ' → logprob: -14.002020835876465
    8. ' ' → logprob: -14.252020835876465
    9. ')' → logprob: -14.689520835876465
    10. ' =' → logprob: -15.814520835876465

Token 82: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00026288547087460756
    2. ' ' → logprob: -8.250263214111328
    3. '1' → logprob: -13.875263214111328
    4. '=' → logprob: -14.625263214111328
    5. '```' → logprob: -16.875263214111328
    6. '2' → logprob: -16.937763214111328
    7. '00' → logprob: -17.375263214111328
    8. ':' → logprob: -17.500263214111328
    9. '۰' → logprob: -17.812763214111328
    10. '  ' → logprob: -18.625263214111328

Token 83: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00033999193692579865
    2. ' :' → logprob: -8.000340461730957
    3. ':
' → logprob: -12.375340461730957
    4. '):' → logprob: -16.00033950805664
    5. ':**' → logprob: -17.37533950805664
    6. ':

' → logprob: -17.50033950805664
    7. ':return' → logprob: -17.62533950805664
    8. ' :
' → logprob: -17.62533950805664
    9. ',' → logprob: -18.37533950805664
    10. ')' → logprob: -18.37533950805664

Token 84: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2874595522880554
    2. ':' → logprob: -2.4124596118927
    3. ' median' → logprob: -3.2874596118927
    4. ' print' → logprob: -3.4124596118927
    5. ' 
' → logprob: -3.9124596118927
    6. '    
' → logprob: -4.037459373474121
    7. '
' → logprob: -4.287459373474121
    8. ' ' → logprob: -5.412459373474121
    9. ' med' → logprob: -5.662459373474121
    10. ' ' → logprob: -5.787459373474121

Token 85: ' median' (ID: 31473)
  Prédit: ' median'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' median' → logprob: -0.4607600271701813
    2. ' print' → logprob: -1.3357599973678589
    3. ' m' → logprob: -2.9607601165771484
    4. ' med' → logprob: -4.210760116577148
    5. 'median' (adapté à ' median') → logprob: -4.460760116577148
    6. 'm' → logprob: -5.335760116577148
    7. ' a' → logprob: -5.710760116577148
    8. ' mid' → logprob: -6.085760116577148
    9. ' ' → logprob: -6.210760116577148
    10. ' t' → logprob: -6.335760116577148

Token 86: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.016185104846954346
    2. ' =' → logprob: -4.766185283660889
    3. '=' → logprob: -5.141185283660889
    4. 'a' → logprob: -6.516185283660889
    5. '=e' → logprob: -9.39118480682373
    6. '_e' → logprob: -10.01618480682373
    7. '_index' → logprob: -10.51618480682373
    8. '_' → logprob: -10.51618480682373
    9. '_value' → logprob: -11.76618480682373
    10. '_idx' → logprob: -12.01618480682373

Token 87: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.024646008387207985
    2. '=' → logprob: -4.149645805358887
    3. '_' → logprob: -5.274645805358887
    4. '_index' → logprob: -5.774645805358887
    5. '_idx' → logprob: -8.274645805358887
    6. '_val' → logprob: -10.649645805358887
    7. 'e' → logprob: -10.774645805358887
    8. '_value' → logprob: -11.274645805358887
    9. 'index' → logprob: -11.899645805358887
    10. ' ' → logprob: -12.274645805358887

Token 88: ' lst' (ID: 33384)
  Prédit: ' lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lst' → logprob: -0.16023194789886475
    2. 'lst' → logprob: -1.9102319478988647
    3. '(lst' → logprob: -11.910231590270996
    4. '_lst' → logprob: -14.535231590270996
    5. 'l' → logprob: -15.160231590270996
    6. 'Lst' → logprob: -16.035232543945312
    7. '.lst' → logprob: -16.535232543945312
    8. 'n' → logprob: -16.660232543945312
    9. ' ls' → logprob: -18.035232543945312
    10. 'ls' → logprob: -18.660232543945312

Token 89: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.006157250609248877
    2. 'n' → logprob: -5.381157398223877
    3. '[' → logprob: -7.006157398223877
    4. ' n' → logprob: -7.631157398223877
    5. '[len' → logprob: -9.131156921386719
    6. '[int' → logprob: -11.256156921386719
    7. '[(' → logprob: -12.256156921386719
    8. '	n' → logprob: -12.256156921386719
    9. '(n' → logprob: -12.631156921386719
    10. '   ' → logprob: -12.881156921386719

Token 90: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.0002762326330412179
    2. ' //' → logprob: -8.250276565551758
    3. '#' → logprob: -12.125276565551758
    4. '2' → logprob: -13.000276565551758
    5. '```' → logprob: -13.250276565551758
    6. ' ' → logprob: -13.625276565551758
    7. '1' → logprob: -14.250276565551758
    8. '[' → logprob: -14.250276565551758
    9. '<|end|>' → logprob: -14.750276565551758
    10. ')//' → logprob: -14.750276565551758

Token 91: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '۲' → logprob: -17.375009536743164
    4. '   ' → logprob: -17.750009536743164
    5. '22' → logprob: -18.625009536743164
    6. '٢' → logprob: -18.875009536743164
    7. '２' → logprob: -19.000009536743164
    8. '२' → logprob: -19.125009536743164
    9. '```' → logprob: -19.187509536743164
    10. '21' → logprob: -19.187509536743164

Token 92: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00023643692838959396
    2. ' ]' → logprob: -8.500236511230469
    3. ']
' → logprob: -11.125236511230469
    4. ')' → logprob: -11.125236511230469
    5. ')]' → logprob: -13.625236511230469
    6. ']

' → logprob: -14.000236511230469
    7. '']' → logprob: -15.000236511230469
    8. ']
' → logprob: -15.250236511230469
    9. '])' → logprob: -15.250236511230469
    10. '<|end|>' → logprob: -16.00023651123047

Token 93: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.002406573621556163
    2. ' else' → logprob: -6.627406597137451
    3. '    
' → logprob: -7.502406597137451
    4. 'e' → logprob: -9.002406120300293
    5. '
' → logprob: -9.127406120300293
    6. '  
' → logprob: -9.627406120300293
    7. ' 
' → logprob: -9.752406120300293
    8. 'elif' → logprob: -9.877406120300293
    9. '<|end|>' → logprob: -10.252406120300293
    10. '   
' → logprob: -11.252406120300293

Token 94: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006820866838097572
    2. ':
' → logprob: -5.0068206787109375
    3. ' :' → logprob: -9.256820678710938
    4. ' :
' → logprob: -11.756820678710938
    5. '   ' → logprob: -14.131820678710938
    6. ':
' → logprob: -15.006820678710938
    7. ':

' → logprob: -15.256820678710938
    8. '[' → logprob: -15.506820678710938
    9. '{' → logprob: -16.256820678710938
    10. ' ' → logprob: -16.381820678710938

Token 95: '   ' (ID: 271)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.07307476550340652
    2. '(lst' → logprob: -3.0730748176574707
    3. '   ' → logprob: -4.073074817657471
    4. '(m' → logprob: -5.948074817657471
    5. ' lst' → logprob: -6.323074817657471
    6. 'lst' → logprob: -7.323074817657471
    7. ' ' → logprob: -7.698074817657471
    8. '(' → logprob: -8.073074340820312
    9. '(n' → logprob: -8.573074340820312
    10. '(l' → logprob: -9.073074340820312

Token 96: ' #' (ID: 1069)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.5948652625083923
    2. ' (' → logprob: -1.094865322113037
    3. 'median' → logprob: -3.094865322113037
    4. ' median' → logprob: -3.219865322113037
    5. ' med' → logprob: -4.719865322113037
    6. '(' → logprob: -4.719865322113037
    7. 'med' → logprob: -5.469865322113037
    8. 'm' → logprob: -6.094865322113037
    9. '   ' → logprob: -6.719865322113037
    10. '(lst' → logprob: -7.219865322113037

Token 97: ' la' (ID: 557)
  Prédit: ' median'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' median' → logprob: -0.3182164132595062
    2. 'median' → logprob: -1.3182164430618286
    3. 'med' → logprob: -5.568216323852539
    4. ' med' → logprob: -7.568216323852539
    5. 'm' → logprob: -8.193216323852539
    6. '   ' → logprob: -9.693216323852539
    7. ' ' → logprob: -9.818216323852539
    8. 'a' → logprob: -10.068216323852539
    9. ' méd' → logprob: -10.193216323852539
    10. 'medi' → logprob: -10.943216323852539

Token 98: ' moyenne' (ID: 57480)
  Prédit: ' median'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' median' → logprob: -0.3598743975162506
    2. 'median' → logprob: -1.2348743677139282
    3. 'med' → logprob: -4.734874248504639
    4. ' med' → logprob: -6.609874248504639
    5. ' méd' → logprob: -6.984874248504639
    6. 'medi' → logprob: -9.484874725341797
    7. 'mediate' → logprob: -10.109874725341797
    8. 'm' → logprob: -10.484874725341797
    9. ' moyenne' → logprob: -10.734874725341797
    10. '   ' → logprob: -10.859874725341797

Token 99: ' de' (ID: 334)
  Prédit: '(lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.5360212326049805
    2. ' =' → logprob: -1.7860212326049805
    3. ' (' → logprob: -2.0360212326049805
    4. '(' → logprob: -3.0360212326049805
    5. 'lst' → logprob: -3.5360212326049805
    6. '=' → logprob: -3.9110212326049805
    7. '(m' → logprob: -4.4110212326049805
    8. ' ' → logprob: -6.7860212326049805
    9. ' lst' → logprob: -6.7860212326049805
    10. '(l' → logprob: -7.6610212326049805

Token 100: ' deux' (ID: 10301)
  Prédit: '(lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.7002109289169312
    2. ' lst' → logprob: -1.3252109289169312
    3. 'lst' → logprob: -1.8252109289169312
    4. ' (' → logprob: -2.5752110481262207
    5. '(l' → logprob: -8.700210571289062
    6. ' ' → logprob: -9.450210571289062
    7. '(n' → logprob: -10.200210571289062
    8. '(' → logprob: -10.325210571289062
    9. '_lst' → logprob: -10.325210571289062
    10. '.lst' → logprob: -10.825210571289062

Token 101: ' éléments' (ID: 57375)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.05970959737896919
    2. ' lst' → logprob: -3.4347095489501953
    3. '(lst' → logprob: -3.6847095489501953
    4. 'med' → logprob: -8.059709548950195
    5. 'median' → logprob: -8.809709548950195
    6. ' (' → logprob: -10.184709548950195
    7. '_lst' → logprob: -11.059709548950195
    8. 'val' → logprob: -11.309709548950195
    9. 'vals' → logprob: -11.809709548950195
    10. '.lst' → logprob: -11.934709548950195

Token 102: ' du' (ID: 1462)
  Prédit: '(lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lst' → logprob: -1.0998280048370361
    2. '(' → logprob: -1.2248280048370361
    3. ' (' → logprob: -1.5998280048370361
    4. 'lst' → logprob: -1.9748280048370361
    5. ' lst' → logprob: -4.849827766418457
    6. '(
' → logprob: -5.349827766418457
    7. '   ' → logprob: -5.724827766418457
    8. ':' → logprob: -5.849827766418457
    9. ' =' → logprob: -6.099827766418457
    10. 's' → logprob: -6.349827766418457

Token 103: ' milieu' (ID: 43149)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.3479824960231781
    2. ' lst' → logprob: -1.8479825258255005
    3. 'mil' → logprob: -2.597982406616211
    4. ' milieu' → logprob: -2.972982406616211
    5. 'list' → logprob: -5.597982406616211
    6. '(lst' → logprob: -6.222982406616211
    7. 'liste' → logprob: -6.597982406616211
    8. ' list' → logprob: -7.472982406616211
    9. ' ' → logprob: -7.722982406616211
    10. ' mil' → logprob: -7.972982406616211

Token 104: ',' (ID: 11)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.9340620636940002
    2. '(lst' → logprob: -1.6840620040893555
    3. ' =' → logprob: -1.8090620040893555
    4. '   ' → logprob: -2.3090620040893555
    5. '(' → logprob: -2.5590620040893555
    6. '(
' → logprob: -4.1840620040893555
    7. 'median' → logprob: -4.3090620040893555
    8. 'lst' → logprob: -4.6840620040893555
    9. '(m' → logprob: -4.8090620040893555
    10. '=' → logprob: -5.0590620040893555

Token 105: ' mais' (ID: 2899)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.1165282130241394
    2. '(lst' → logprob: -2.241528272628784
    3. ' lst' → logprob: -6.116528034210205
    4. '   ' → logprob: -7.991528034210205
    5. '(m' → logprob: -8.116528511047363
    6. ' ' → logprob: -8.491528511047363
    7. 'lst' → logprob: -8.616528511047363
    8. '(n' → logprob: -8.866528511047363
    9. '(l' → logprob: -9.116528511047363
    10. '(' → logprob: -9.491528511047363

Token 106: ' à' (ID: 1221)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.2208060771226883
    2. ' lst' → logprob: -1.9708061218261719
    3. '(lst' → logprob: -4.220806121826172
    4. 'n' → logprob: -4.720806121826172
    5. ')' → logprob: -5.345806121826172
    6. ' n' → logprob: -5.845806121826172
    7. '1' → logprob: -6.095806121826172
    8. '#' → logprob: -6.095806121826172
    9. ':' → logprob: -6.095806121826172
    10. '   ' → logprob: -6.095806121826172

Token 107: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.24434232711792
    2. 'la' → logprob: -1.61934232711792
    3. 'div' → logprob: -2.61934232711792
    4. 'prendre' → logprob: -2.74434232711792
    5. 'mettre' → logprob: -3.11934232711792
    6. 'faire' → logprob: -3.36934232711792
    7. 'int' → logprob: -3.49434232711792
    8. ' vérifier' → logprob: -3.61934232711792
    9. 'ce' → logprob: -4.11934232711792
    10. 'mi' → logprob: -4.24434232711792

Token 108: ''arr' (ID: 49695)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.4095878303050995
    2. 'e' → logprob: -2.159587860107422
    3. 'a' → logprob: -3.159587860107422
    4. 'int' → logprob: -3.284587860107422
    5. 'continue' → logprob: -3.659587860107422
    6. 'n' → logprob: -4.034587860107422
    7. 'elif' → logprob: -4.284587860107422
    8. 'print' → logprob: -5.409587860107422
    9. '(lst' → logprob: -5.409587860107422
    10. '1' → logprob: -5.534587860107422

Token 109: 'ache' (ID: 2285)
  Prédit: 'ond'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ond' → logprob: -0.003617647336795926
    2. 'ondi' → logprob: -5.753617763519287
    3. 'ondissement' → logprob: -8.753617286682129
    4. 'ont' → logprob: -9.503617286682129
    5. 'on' → logprob: -9.753617286682129
    6. '   ' → logprob: -11.003617286682129
    7. 'o' → logprob: -11.378617286682129
    8. '>' → logprob: -11.628617286682129
    9. '```' → logprob: -11.753617286682129
    10. '
' → logprob: -11.878617286682129

Token 110: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7908053398132324
    2. 'median' → logprob: -1.1658053398132324
    3. ' median' → logprob: -2.2908053398132324
    4. ' =' → logprob: -2.6658053398132324
    5. 'med' → logprob: -3.2908053398132324
    6. ' med' → logprob: -4.790805339813232
    7. ':' → logprob: -5.290805339813232
    8. ' (' → logprob: -5.915805339813232
    9. 'lst' → logprob: -6.040805339813232
    10. ' ' → logprob: -7.165805339813232

Token 111: ' round' (ID: 7353)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.42062920331954956
    2. '//' → logprob: -1.6706292629241943
    3. '(n' → logprob: -2.7956292629241943
    4. '(' → logprob: -3.7956292629241943
    5. 'int' → logprob: -4.045629024505615
    6. 'n' → logprob: -4.795629024505615
    7. 'lst' → logprob: -4.920629024505615
    8. ' ' → logprob: -5.045629024505615
    9. '3' → logprob: -5.420629024505615
    10. '/' → logprob: -5.545629024505615

Token 112: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7971237301826477
    2. '(m' → logprob: -1.422123670578003
    3. '   ' → logprob: -1.547123670578003
    4. 'med' → logprob: -3.297123670578003
    5. ' med' → logprob: -3.422123670578003
    6. '((' → logprob: -4.922123908996582
    7. 'median' → logprob: -5.047123908996582
    8. '(
' → logprob: -5.172123908996582
    9. 'm' → logprob: -6.547123908996582
    10. '(round' → logprob: -6.672123908996582

Token 113: '   ' (ID: 271)
  Prédit: ' median'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' median' → logprob: -0.6764499545097351
    2. '   ' → logprob: -1.1764500141143799
    3. ' med' → logprob: -2.05145001411438
    4. 'median' → logprob: -3.17645001411438
    5. 'med' → logprob: -4.426449775695801
    6. ' méd' → logprob: -8.1764497756958
    7. 'm' → logprob: -8.6764497756958
    8. ' ' → logprob: -9.4264497756958
    9. ' (' → logprob: -9.5514497756958
    10. '(' → logprob: -9.9264497756958

Token 114: ' median' (ID: 31473)
  Prédit: 'med'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'med' → logprob: -0.09176149219274521
    2. 'median' (adapté à ' median') → logprob: -2.591761589050293
    3. '   ' → logprob: -5.091761589050293
    4. ' median' → logprob: -5.591761589050293
    5. ' med' → logprob: -6.341761589050293
    6. 'm' → logprob: -8.091761589050293
    7. 'medi' → logprob: -8.466761589050293
    8. 'print' → logprob: -8.841761589050293
    9. 'mediate' → logprob: -9.591761589050293
    10. 'mé' → logprob: -10.216761589050293

Token 115: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -5.1689596148207784e-05
    2. ' =' → logprob: -10.500051498413086
    3. '=' → logprob: -10.750051498413086
    4. 'a' → logprob: -13.375051498413086
    5. '_' → logprob: -14.875051498413086
    6. 'ae' → logprob: -15.625051498413086
    7. '=e' → logprob: -15.875051498413086
    8. 'é' → logprob: -15.875051498413086
    9. '_e' → logprob: -16.125051498413086
    10. 'е' → logprob: -16.250051498413086

Token 116: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759401321411133
    2. '=' → logprob: -0.8259401321411133
    3. '=

' → logprob: -15.700940132141113
    4. ' =(' → logprob: -15.825940132141113
    5. ' ' → logprob: -16.325939178466797
    6. '＝' → logprob: -16.575939178466797
    7. '=int' → logprob: -16.575939178466797
    8. 's' → logprob: -16.950939178466797
    9. ')' → logprob: -17.575939178466797
    10. '=(' → logprob: -17.575939178466797

Token 117: ' (' (ID: 350)
  Prédit: ' round'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' round' → logprob: -0.4389015734195709
    2. 'round' → logprob: -1.0639015436172485
    3. '(round' → logprob: -4.813901424407959
    4. ' (' → logprob: -6.438901424407959
    5. '(lst' → logprob: -9.063901901245117
    6. ' int' → logprob: -9.063901901245117
    7. '   ' → logprob: -9.313901901245117
    8. ' lst' → logprob: -10.188901901245117
    9. '(int' → logprob: -10.938901901245117
    10. ' ' → logprob: -10.938901901245117

Token 118: 'lst' (ID: 65430)
  Prédit: 'lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.02128799445927143
    2. ' lst' → logprob: -4.02128791809082
    3. '(lst' → logprob: -5.77128791809082
    4. ' (' → logprob: -12.52128791809082
    5. '   ' → logprob: -12.64628791809082
    6. 'ls' → logprob: -12.77128791809082
    7. '_lst' → logprob: -13.14628791809082
    8. '.lst' → logprob: -13.52128791809082
    9. ' ' → logprob: -13.64628791809082
    10. 'l' → logprob: -14.14628791809082

Token 119: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.00043555660522542894
    2. '[(' → logprob: -7.7504353523254395
    3. 'n' → logprob: -12.500435829162598
    4. '[' → logprob: -15.125435829162598
    5. '(n' → logprob: -15.125435829162598
    6. '[len' → logprob: -15.500435829162598
    7. '[int' → logprob: -15.625435829162598
    8. ' n' → logprob: -17.12543487548828
    9. '[
' → logprob: -17.37543487548828
    10. '   ' → logprob: -17.37543487548828

Token 120: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -2.8921695047756657e-05
    2. ' //' → logprob: -10.625028610229492
    3. '/' → logprob: -12.750028610229492
    4. '#' → logprob: -13.625028610229492
    5. '2' → logprob: -15.625028610229492
    6. ' ' → logprob: -16.000028610229492
    7. '   ' → logprob: -16.500028610229492
    8. '-' → logprob: -17.750028610229492
    9. '//=' → logprob: -18.250028610229492
    10. '//#' → logprob: -18.375028610229492

Token 121: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.018172889947891235
    2. '1' → logprob: -4.018172740936279
    3. ' ' → logprob: -11.018173217773438
    4. '   ' → logprob: -12.393173217773438
    5. '```' → logprob: -14.143173217773438
    6. '  ' → logprob: -15.143173217773438
    7. '0' → logprob: -15.393173217773438
    8. '21' → logprob: -15.518173217773438
    9. '3' → logprob: -15.768173217773438
    10. '(' → logprob: -15.768173217773438

Token 122: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.24105356633663177
    2. ' -' → logprob: -1.616053581237793
    3. ' +' → logprob: -4.491053581237793
    4. ']' → logprob: -6.116053581237793
    5. '+' → logprob: -6.366053581237793
    6. ']+' → logprob: -8.616053581237793
    7. ' ' → logprob: -8.741053581237793
    8. '   ' → logprob: -10.616053581237793
    9. '1' → logprob: -11.866053581237793
    10. ' ]' → logprob: -12.866053581237793

Token 123: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.25193214416503906
    2. '+' → logprob: -1.501932144165039
    3. ' ' → logprob: -13.626932144165039
    4. '-' → logprob: -14.626932144165039
    5. 'lst' → logprob: -15.126932144165039
    6. ' ' → logprob: -15.251932144165039
    7. ' +
' → logprob: -15.376932144165039
    8. ' lst' → logprob: -15.501932144165039
    9. '+
' → logprob: -15.751932144165039
    10. '   ' → logprob: -16.87693214416504

Token 124: ' lst' (ID: 33384)
  Prédit: ' lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lst' → logprob: -0.03804952651262283
    2. 'lst' → logprob: -3.2880494594573975
    3. ' ' → logprob: -12.288049697875977
    4. ' ' → logprob: -13.288049697875977
    5. '(lst' → logprob: -14.038049697875977
    6. '_lst' → logprob: -15.038049697875977
    7. '1' → logprob: -15.788049697875977
    8. '.lst' → logprob: -16.038049697875977
    9. ' l' → logprob: -16.288049697875977
    10. '  ' → logprob: -16.288049697875977

Token 125: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.09854159504175186
    2. '[(' → logprob: -2.848541498184204
    3. '//' → logprob: -3.348541498184204
    4. 'n' → logprob: -7.848541736602783
    5. '(n' → logprob: -8.098541259765625
    6. '-' → logprob: -9.723541259765625
    7. '((' → logprob: -11.723541259765625
    8. '[
' → logprob: -12.098541259765625
    9. '[' → logprob: -12.973541259765625
    10. '1' → logprob: -13.598541259765625

Token 126: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -5.438573680294212e-06
    2. '#' → logprob: -13.125005722045898
    3. ' //' → logprob: -13.375005722045898
    4. '2' → logprob: -14.000005722045898
    5. '1' → logprob: -14.625005722045898
    6. '/' → logprob: -15.500005722045898
    7. '```' → logprob: -15.625005722045898
    8. '-' → logprob: -16.2500057220459
    9. '3' → logprob: -16.8750057220459
    10. '//=' → logprob: -17.1250057220459

Token 127: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5928495486150496e-05
    2. ' ' → logprob: -11.125016212463379
    3. '1' → logprob: -14.625016212463379
    4. '21' → logprob: -15.750016212463379
    5. '   ' → logprob: -16.500015258789062
    6. '  ' → logprob: -17.125015258789062
    7. '22' → logprob: -17.125015258789062
    8. '
' → logprob: -17.500015258789062
    9. '(' → logprob: -17.625015258789062
    10. '3' → logprob: -17.625015258789062

Token 128: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.002490641549229622
    2. ' -' → logprob: -6.002490520477295
    3. '1' → logprob: -11.252490997314453
    4. ' ' → logprob: -13.377490997314453
    5. '])' → logprob: -15.752490997314453
    6. '-
' → logprob: -16.252490997314453
    7. '   ' → logprob: -16.377490997314453
    8. '  ' → logprob: -17.502490997314453
    9. '−' → logprob: -17.502490997314453
    10. '```' → logprob: -18.002490997314453

Token 129: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5716304410016164e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -15.750035285949707
    4. '  ' → logprob: -17.500036239624023
    5. ')' → logprob: -17.875036239624023
    6. '<|end|>' → logprob: -18.125036239624023
    7. '    ' → logprob: -19.125036239624023
    8. '```' → logprob: -19.375036239624023
    9. '])' → logprob: -19.687536239624023
    10. ']' → logprob: -19.875036239624023

Token 130: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -16.375003814697266
    4. '  ' → logprob: -17.500003814697266
    5. '2' → logprob: -18.125003814697266
    6. ')' → logprob: -18.875003814697266
    7. '```' → logprob: -19.000003814697266
    8. '۱' → logprob: -19.062503814697266
    9. '<|end|>' → logprob: -19.125003814697266
    10. '    ' → logprob: -19.187503814697266

Token 131: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003422567679081112
    2. ')//' → logprob: -8.37534236907959
    3. ' )' → logprob: -9.12534236907959
    4. '+' → logprob: -13.37534236907959
    5. '）' → logprob: -14.50034236907959
    6. ')/' → logprob: -15.25034236907959
    7. ')>>' → logprob: -15.87534236907959
    8. '))' → logprob: -16.250341415405273
    9. ')
' → logprob: -16.875341415405273
    10. ' ' → logprob: -17.125341415405273

Token 132: '   ' (ID: 271)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.1460973620414734
    2. '//' → logprob: -2.271097421646118
    3. '   ' → logprob: -3.646097421646118
    4. ' /' → logprob: -5.896097183227539
    5. '#' → logprob: -6.396097183227539
    6. ')' → logprob: -7.021097183227539
    7. '2' → logprob: -7.896097183227539
    8. ' ' → logprob: -8.021097183227539
    9. '/' → logprob: -8.396097183227539
    10. ' #' → logprob: -9.271097183227539

Token 133: ' median' (ID: 31473)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.1587470918893814
    2. '//' → logprob: -2.2837471961975098
    3. '   ' → logprob: -3.2837471961975098
    4. ')' → logprob: -5.65874719619751
    5. '#' → logprob: -6.53374719619751
    6. ' /' → logprob: -6.65874719619751
    7. '2' → logprob: -8.158746719360352
    8. ' ' → logprob: -8.408746719360352
    9. '/' → logprob: -8.908746719360352
    10. ')//' → logprob: -9.158746719360352

Token 134: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.10062726587057114
    2. '=' → logprob: -2.3506271839141846
    3. ' =' → logprob: -7.850627422332764
    4. '=e' → logprob: -11.225626945495605
    5. 'е' → logprob: -11.975626945495605
    6. 'es' → logprob: -13.475626945495605
    7. '(e' → logprob: -13.475626945495605
    8. 'é' → logprob: -13.725626945495605
    9. '=int' → logprob: -13.850626945495605
    10. ' ' → logprob: -14.350626945495605

Token 135: ' =' (ID: 314)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.10741805285215378
    2. '//' → logprob: -2.4824180603027344
    3. '#' → logprob: -4.482418060302734
    4. '   ' → logprob: -5.857418060302734
    5. ' /' → logprob: -6.482418060302734
    6. ' ' → logprob: -7.357418060302734
    7. ' #' → logprob: -7.482418060302734
    8. ' ' → logprob: -7.607418060302734
    9. '/' → logprob: -8.107418060302734
    10. ')' → logprob: -8.357418060302734

Token 136: ' int' (ID: 677)
  Prédit: ' round'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' round' → logprob: -0.07361037284135818
    2. ' median' → logprob: -2.948610305786133
    3. 'round' → logprob: -4.073610305786133
    4. 'median' → logprob: -7.323610305786133
    5. '(round' → logprob: -7.448610305786133
    6. ' med' → logprob: -8.823610305786133
    7. ' (' → logprob: -9.448610305786133
    8. ' int' → logprob: -10.448610305786133
    9. ' ronde' → logprob: -11.448610305786133
    10. 'med' → logprob: -11.448610305786133

Token 137: '(round' (ID: 75171)
  Prédit: '(round'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(round' → logprob: -0.031038738787174225
    2. '(m' → logprob: -3.531038761138916
    3. 'round' → logprob: -7.156038761138916
    4. '(' → logprob: -8.031038284301758
    5. '(ro' → logprob: -9.531038284301758
    6. '((' → logprob: -9.906038284301758
    7. 'med' → logprob: -10.531038284301758
    8. '(mid' → logprob: -12.156038284301758
    9. '(ma' → logprob: -12.156038284301758
    10. '(r' → logprob: -12.531038284301758

Token 138: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.0012755923671647906
    2. '(' → logprob: -7.001275539398193
    3. '((' → logprob: -8.126276016235352
    4. '(mid' → logprob: -10.751276016235352
    5. '(ma' → logprob: -11.376276016235352
    6. ' (' → logprob: -12.126276016235352
    7. '(mac' → logprob: -12.251276016235352
    8. '(media' → logprob: -12.626276016235352
    9. '(ms' → logprob: -13.001276016235352
    10. '(mean' → logprob: -13.001276016235352

Token 139: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.013871044851839542
    2. 'edian' → logprob: -4.763871192932129
    3. 'med' → logprob: -5.763871192932129
    4. 'éd' → logprob: -6.513871192932129
    5. 'median' → logprob: -8.388871192932129
    6. 'd' → logprob: -9.388871192932129
    7. '[' → logprob: -10.513871192932129
    8. 'od' → logprob: -10.513871192932129
    9. 'id' → logprob: -10.513871192932129
    10. 'edians' → logprob: -10.888871192932129

Token 140: 'iane' (ID: 39704)
  Prédit: 'iane'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iane' → logprob: -0.010657024569809437
    2. 'ane' → logprob: -4.635656833648682
    3. 'ian' → logprob: -8.38565731048584
    4. 'at' → logprob: -8.51065731048584
    5. 'anee' → logprob: -8.51065731048584
    6. 'e' → logprob: -9.51065731048584
    7. 'ed' → logprob: -9.51065731048584
    8. 'i' → logprob: -10.63565731048584
    9. '   ' → logprob: -11.01065731048584
    10. 'iene' → logprob: -11.26065731048584

Token 141: '/' (ID: 14)
  Prédit: '/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.2519327998161316
    2. ' /' → logprob: -1.5019328594207764
    3. ')' → logprob: -12.751933097839355
    4. '2' → logprob: -15.501933097839355
    5. '))' → logprob: -16.12693214416504
    6. ' ' → logprob: -16.25193214416504
    7. ' ' → logprob: -16.37693214416504
    8. '3' → logprob: -17.50193214416504
    9. '1' → logprob: -17.50193214416504
    10. ' )' → logprob: -17.50193214416504

Token 142: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0010361451422795653
    2. ' ' → logprob: -6.876036167144775
    3. '   ' → logprob: -12.751035690307617
    4. '  ' → logprob: -15.126035690307617
    5. '۲' → logprob: -17.001035690307617
    6. '(' → logprob: -17.376035690307617
    7. '    ' → logprob: -17.563535690307617
    8. ')' → logprob: -18.126035690307617
    9. '２' → logprob: -18.188535690307617
    10. '     ' → logprob: -18.438535690307617

Token 143: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -6.551721889991313e-05
    2. '))
' → logprob: -10.375065803527832
    3. ' ))' → logprob: -10.625065803527832
    4. ')' → logprob: -11.875065803527832
    5. ')))' → logprob: -13.000065803527832
    6. ' ' → logprob: -15.750065803527832
    7. '()))' → logprob: -16.250064849853516
    8. '   ' → logprob: -16.250064849853516
    9. '));' → logprob: -16.500064849853516
    10. '))

' → logprob: -16.750064849853516

Token 144: 'total' (ID: 9577)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.021553803235292435
    2. 'diff' → logprob: -4.896553993225098
    3. 'ans' → logprob: -6.021553993225098
    4. 'x' → logprob: -6.271553993225098
    5. 'k' → logprob: -6.896553993225098
    6. '#' → logprob: -6.896553993225098
    7. 'target' → logprob: -6.896553993225098
    8. 'a' → logprob: -7.271553993225098
    9. 'answer' → logprob: -7.271553993225098
    10. 'best' → logprob: -7.396553993225098

Token 145: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15105320513248444
    2. '_' → logprob: -2.6510531902313232
    3. '_cost' → logprob: -3.6510531902313232
    4. '=' → logprob: -3.7760531902313232
    5. '_sum' → logprob: -4.026053428649902
    6. '_distance' → logprob: -6.526053428649902
    7. '_diff' → logprob: -7.901053428649902
    8. '_score' → logprob: -8.526053428649902
    9. '_difference' → logprob: -9.151053428649902
    10. '_total' → logprob: -9.401053428649902

Token 146: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010244477540254593
    2. ' ' → logprob: -5.135244369506836
    3. 'sum' → logprob: -6.260244369506836
    4. ' sum' → logprob: -6.635244369506836
    5. 'abs' → logprob: -7.260244369506836
    6. ' abs' → logprob: -7.885244369506836
    7. '   ' → logprob: -13.385244369506836
    8. '  ' → logprob: -14.885244369506836
    9. ' ' → logprob: -14.947744369506836
    10. 'int' → logprob: -15.260244369506836

Token 147: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1281125247478485
    2. 'sum' → logprob: -2.128112554550171
    3. 'abs' → logprob: -6.753112316131592
    4. ' sum' → logprob: -11.25311279296875
    5. ' ' → logprob: -13.12811279296875
    6. 'max' → logprob: -14.75311279296875
    7. 'int' → logprob: -15.37811279296875
    8. '(sum' → logprob: -15.62811279296875
    9. ' abs' → logprob: -16.12811279296875
    10. 'summ' → logprob: -16.37811279296875

Token 148: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18929007649421692
    2. '
' → logprob: -2.1892900466918945
    3. ' for' → logprob: -2.9392900466918945
    4. '<|end|>' → logprob: -4.9392900466918945
    5. '\n' → logprob: -8.189290046691895
    6. '<|end|>' → logprob: -10.439290046691895
    7. ' 
' → logprob: -10.689290046691895
    8. ')' → logprob: -11.439290046691895
    9. '  
' → logprob: -11.689290046691895
    10. '+' → logprob: -11.814290046691895

Token 149: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00788886658847332
    2. '
' → logprob: -5.1328887939453125
    3. ' for' → logprob: -6.2578887939453125
    4. '<|end|>' → logprob: -10.132888793945312
    5. '\n' → logprob: -14.132888793945312
    6. ')' → logprob: -14.257888793945312
    7. '```' → logprob: -14.507888793945312
    8. '\' → logprob: -14.882888793945312
    9. '

' → logprob: -15.257888793945312
    10. '	for' → logprob: -15.882888793945312

Token 150: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.03369526192545891
    2. 'i' → logprob: -3.4086952209472656
    3. ' ' → logprob: -11.033695220947266
    4. '	i' → logprob: -12.033695220947266
    5. ' value' → logprob: -12.283695220947266
    6. '(i' → logprob: -12.283695220947266
    7. ' lst' → logprob: -12.658695220947266
    8. 'value' → logprob: -12.658695220947266
    9. ' ' → logprob: -13.158695220947266
    10. 'lst' → logprob: -13.658695220947266

Token 151: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06199457868933678
    2. 'in' → logprob: -2.8119945526123047
    3. ' ' → logprob: -11.311994552612305
    4. ',' → logprob: -12.561994552612305
    5. '   ' → logprob: -12.561994552612305
    6. 'n' → logprob: -12.686994552612305
    7. 'range' → logprob: -12.936994552612305
    8. '  ' → logprob: -14.561994552612305
    9. '(n' → logprob: -15.186994552612305
    10. ' n' → logprob: -15.311994552612305

Token 152: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0022000980097800493
    2. ' range' → logprob: -6.127200126647949
    3. 'lst' → logprob: -11.25220012664795
    4. '(range' → logprob: -14.12720012664795
    5. ' ' → logprob: -14.87720012664795
    6. '   ' → logprob: -15.25220012664795
    7. '  ' → logprob: -15.50220012664795
    8. '	range' → logprob: -15.75220012664795
    9. ' lst' → logprob: -15.87720012664795
    10. 'rang' → logprob: -16.127199172973633

Token 153: '(' (ID: 7)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0027169028762727976
    2. 'n' → logprob: -6.002717018127441
    3. '(' → logprob: -8.377717018127441
    4. '(len' → logprob: -12.127717018127441
    5. ' n' → logprob: -12.252717018127441
    6. ' (' → logprob: -14.627717018127441
    7. ')' → logprob: -16.127716064453125
    8. 'len' → logprob: -16.627716064453125
    9. '(total' → logprob: -16.627716064453125
    10. ')n' → logprob: -16.627716064453125

Token 154: '0' (ID: 15)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -7.584239938296378e-06
    2. ' n' → logprob: -12.000007629394531
    3. 'len' → logprob: -14.625007629394531
    4. '   ' → logprob: -14.750007629394531
    5. '(n' → logprob: -14.875007629394531
    6. ')n' → logprob: -16.62500762939453
    7. ' ' → logprob: -16.87500762939453
    8. '	n' → logprob: -17.87500762939453
    9. ')' → logprob: -18.00000762939453
    10. ',n' → logprob: -19.25000762939453

Token 155: ',' (ID: 11)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04969130828976631
    2. ' n' → logprob: -3.0496912002563477
    3. ',n' → logprob: -7.424691200256348
    4. ',' → logprob: -8.049691200256348
    5. '(n' → logprob: -8.674691200256348
    6. '   ' → logprob: -11.549691200256348
    7. ')n' → logprob: -12.799691200256348
    8. ' ,' → logprob: -13.299691200256348
    9. ')' → logprob: -13.674691200256348
    10. '	n' → logprob: -13.799691200256348

Token 156: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0011709370883181691
    2. ' n' → logprob: -6.751171112060547
    3. 'len' → logprob: -14.751171112060547
    4. '   ' → logprob: -15.751171112060547
    5. ' ' → logprob: -16.001171112060547
    6. '  ' → logprob: -16.876171112060547
    7. '	n' → logprob: -18.626171112060547
    8. ')n' → logprob: -18.626171112060547
    9. ' len' → logprob: -19.126171112060547
    10. ')' → logprob: -19.751171112060547

Token 157: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12700612843036652
    2. '):
' → logprob: -2.1270060539245605
    3. ')' → logprob: -10.127006530761719
    4. '):
' → logprob: -10.752006530761719
    5. ':' → logprob: -11.502006530761719
    6. ' ):' → logprob: -12.877006530761719
    7. ',' → logprob: -13.252006530761719
    8. '):

' → logprob: -14.127006530761719
    9. '   ' → logprob: -14.377006530761719
    10. ' ):
' → logprob: -15.502006530761719

Token 158: ' ' (ID: 220)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.09176790714263916
    2. 'total' → logprob: -3.2167677879333496
    3. '   ' → logprob: -3.5917677879333496
    4. ' 
' → logprob: -5.09176778793335
    5. '<|end|>' → logprob: -5.21676778793335
    6. '	total' → logprob: -5.34176778793335
    7. '(total' → logprob: -6.46676778793335
    8. ' ' → logprob: -7.09176778793335
    9. '_total' → logprob: -8.091768264770508
    10. '
' → logprob: -8.091768264770508

Token 159: ' #' (ID: 1069)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.44731125235557556
    2. '   ' → logprob: -1.822311282157898
    3. 'total' → logprob: -1.822311282157898
    4. '	total' → logprob: -3.6973111629486084
    5. ' 
' → logprob: -5.4473114013671875
    6. '<|end|>' → logprob: -5.5723114013671875
    7. '
' → logprob: -6.4473114013671875
    8. '(total' → logprob: -6.9473114013671875
    9. '    
' → logprob: -7.1973114013671875
    10. '_total' → logprob: -8.197311401367188

Token 160: ' on' (ID: 402)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.15645864605903625
    2. ' total' → logprob: -2.281458616256714
    3. '   ' → logprob: -3.281458616256714
    4. '
' → logprob: -5.406458854675293
    5. '	total' → logprob: -8.156458854675293
    6. '    
' → logprob: -8.906458854675293
    7. ' 
' → logprob: -9.906458854675293
    8. '  
' → logprob: -10.406458854675293
    9. '<|end|>' → logprob: -10.406458854675293
    10. ' ' → logprob: -10.531458854675293

Token 161: ' peut' (ID: 9216)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.6146588921546936
    2. ' total' → logprob: -0.8646588921546936
    3. '   ' → logprob: -3.864658832550049
    4. '+=' → logprob: -5.239658832550049
    5. ' +=' → logprob: -5.489658832550049
    6. '_total' → logprob: -6.114658832550049
    7. ' ' → logprob: -6.614658832550049
    8. '  ' → logprob: -6.739658832550049
    9. '(total' → logprob: -7.239658832550049
    10. '+' → logprob: -7.364658832550049

Token 162: ' aussi' (ID: 9894)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15095101296901703
    2. ' range' → logprob: -3.2759509086608887
    3. 'range' → logprob: -3.4009509086608887
    4. ' for' → logprob: -4.650950908660889
    5. 'for' → logprob: -4.775950908660889
    6. 'total' → logprob: -4.900950908660889
    7. '<|end|>' → logprob: -5.025950908660889
    8. ' continue' → logprob: -5.150950908660889
    9. 'continue' → logprob: -5.275950908660889
    10. '  ' → logprob: -5.400950908660889

Token 163: ' faire' (ID: 8119)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5115301012992859
    2. 'total' → logprob: -1.6365301609039307
    3. ' total' → logprob: -2.3865301609039307
    4. ' range' → logprob: -2.5115301609039307
    5. '   ' → logprob: -3.6365301609039307
    6. 'abs' → logprob: -5.636529922485352
    7. ' ' → logprob: -6.386529922485352
    8. '  ' → logprob: -7.761529922485352
    9. 'n' → logprob: -9.386529922485352
    10. ' abs' → logprob: -9.511529922485352

Token 164: ' sans' (ID: 9828)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.7582821846008301
    2. ' total' → logprob: -1.25828218460083
    3. 'range' → logprob: -2.13328218460083
    4. '   ' → logprob: -3.13328218460083
    5. ' range' → logprob: -3.38328218460083
    6. 'n' → logprob: -3.88328218460083
    7. 'abs' → logprob: -4.25828218460083
    8. ' n' → logprob: -4.63328218460083
    9. ' abs' → logprob: -5.75828218460083
    10. ' ' → logprob: -6.38328218460083

Token 165: ' range' (ID: 3352)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.41792377829551697
    2. 'total' → logprob: -1.5429238080978394
    3. '   ' → logprob: -2.41792368888855
    4. '	total' → logprob: -4.167923927307129
    5. ':' → logprob: -4.542923927307129
    6. '(total' → logprob: -4.917923927307129
    7. ' ' → logprob: -5.792923927307129
    8. '_total' → logprob: -7.667923927307129
    9. '  ' → logprob: -7.917923927307129
    10. '<|end|>' → logprob: -7.917923927307129

Token 166: ' mais' (ID: 2899)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8245908617973328
    2. '   ' → logprob: -1.0745909214019775
    3. ' total' → logprob: -1.8245909214019775
    4. 'total' → logprob: -3.6995909214019775
    5. ':
' → logprob: -4.324590682983398
    6. '	total' → logprob: -4.699590682983398
    7. '(total' → logprob: -6.199590682983398
    8. ' ' → logprob: -6.199590682983398
    9. ' :' → logprob: -6.574590682983398
    10. '_total' → logprob: -6.699590682983398

Token 167: ' c' (ID: 274)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.0710170716047287
    2. 'total' → logprob: -2.821017026901245
    3. '   ' → logprob: -4.821017265319824
    4. ' ' → logprob: -8.321017265319824
    5. '    ' → logprob: -8.321017265319824
    6. ' for' → logprob: -9.071017265319824
    7. '_total' → logprob: -9.821017265319824
    8. '  ' → logprob: -10.071017265319824
    9. '	total' → logprob: -10.071017265319824
    10. 'for' → logprob: -10.196017265319824

Token 168: ''est' (ID: 6616)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3024546504020691
    2. ':' → logprob: -2.302454710006714
    3. ' for' → logprob: -2.677454710006714
    4. ' in' → logprob: -3.802454710006714
    5. 'ont' → logprob: -4.552454471588135
    6. '   ' → logprob: -4.802454471588135
    7. 'on' → logprob: -5.177454471588135
    8. ' ' → logprob: -5.427454471588135
    9. 'range' → logprob: -5.427454471588135
    10. 'urrent' → logprob: -5.677454471588135

Token 169: ' plus' (ID: 2932)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.23913176357746124
    2. 'range' → logprob: -2.2391316890716553
    3. ' n' → logprob: -2.4891316890716553
    4. 'total' → logprob: -4.864131927490234
    5. ' range' → logprob: -5.489131927490234
    6. 'len' → logprob: -5.864131927490234
    7. ' total' → logprob: -6.114131927490234
    8. ' OK' → logprob: -7.114131927490234
    9. 'tot' → logprob: -7.239131927490234
    10. 'lst' → logprob: -7.364131927490234

Token 170: ' clair' (ID: 71396)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16158835589885712
    2. 'len' → logprob: -2.161588430404663
    3. '(n' → logprob: -4.161588191986084
    4. ' n' → logprob: -4.411588191986084
    5. 'range' → logprob: -5.536588191986084
    6. ' len' → logprob: -7.661588191986084
    7. '(len' → logprob: -7.661588191986084
    8. '1' → logprob: -8.411588668823242
    9. 'enumer' → logprob: -8.661588668823242
    10. 'in' → logprob: -8.661588668823242

Token 171: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15260371565818787
    2. ':' → logprob: -2.4026036262512207
    3. ' total' → logprob: -3.4026036262512207
    4. 'total' → logprob: -4.777603626251221
    5. '	total' → logprob: -5.777603626251221
    6. ':
' → logprob: -6.152603626251221
    7. '(total' → logprob: -6.652603626251221
    8. '_total' → logprob: -6.902603626251221
    9. '  ' → logprob: -8.027604103088379
    10. ',' → logprob: -8.027604103088379

Token 172: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36822208762168884
    2. ' total' → logprob: -1.8682221174240112
    3. 'total' → logprob: -1.9932221174240112
    4. '	total' → logprob: -4.368222236633301
    5. '(total' → logprob: -6.118222236633301
    6. ':' → logprob: -7.243222236633301
    7. '_total' → logprob: -7.493222236633301
    8. '    
' → logprob: -8.4932222366333
    9. ',total' → logprob: -8.6182222366333
    10. ' ' → logprob: -8.7432222366333

Token 173: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.39934593439102173
    2. 'total' (adapté à ' total') → logprob: -1.149345874786377
    3. '   ' → logprob: -4.399345874786377
    4. '	total' → logprob: -9.274346351623535
    5. ' totale' → logprob: -12.274346351623535
    6. '       ' → logprob: -12.649346351623535
    7. '    
' → logprob: -12.774346351623535
    8. '
' → logprob: -13.524346351623535
    9. ' ' → logprob: -13.774346351623535
    10. '  ' → logprob: -13.774346351623535

Token 174: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.313539057970047
    2. '+=' → logprob: -1.3135390281677246
    3. '=' → logprob: -8.438539505004883
    4. ' =' → logprob: -10.063539505004883
    5. '+' → logprob: -11.813539505004883
    6. ']+=' → logprob: -12.313539505004883
    7. '   ' → logprob: -12.688539505004883
    8. '+=(' → logprob: -13.688539505004883
    9. '+='' → logprob: -14.563539505004883
    10. ' ' → logprob: -14.688539505004883

Token 175: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0003907543432433158
    2. ' abs' → logprob: -7.875390529632568
    3. '   ' → logprob: -11.625391006469727
    4. '(abs' → logprob: -13.375391006469727
    5. '  ' → logprob: -16.750391006469727
    6. ' ' → logprob: -16.750391006469727
    7. 'int' → logprob: -17.125391006469727
    8. 'lst' → logprob: -17.500391006469727
    9. '    ' → logprob: -18.000391006469727
    10. '1' → logprob: -19.000391006469727

Token 176: '(lst' (ID: 95688)
  Prédit: '(lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.16099517047405243
    2. '(m' → logprob: -1.9109951257705688
    3. '(l' → logprob: -8.035995483398438
    4. '(' → logprob: -8.160995483398438
    5. '(ls' → logprob: -9.410995483398438
    6. '(ma' → logprob: -10.035995483398438
    7. '((' → logprob: -11.785995483398438
    8. 'lst' → logprob: -12.160995483398438
    9. '(lat' → logprob: -12.285995483398438
    10. '(ms' → logprob: -12.910995483398438

Token 177: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.511406809295295e-06
    2. '[' → logprob: -12.875006675720215
    3. ' [' → logprob: -13.000006675720215
    4. 'i' → logprob: -14.000006675720215
    5. '   ' → logprob: -15.250006675720215
    6. ')' → logprob: -15.375006675720215
    7. ')[' → logprob: -16.2500057220459
    8. ' ' → logprob: -16.8750057220459
    9. '[
' → logprob: -17.1250057220459
    10. ' i' → logprob: -17.2500057220459

Token 178: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4295627772808075
    2. ' -' → logprob: -1.0545628070831299
    3. '-medi' → logprob: -7.804562568664551
    4. '-m' → logprob: -9.05456256866455
    5. '   ' → logprob: -9.17956256866455
    6. ')' → logprob: -9.17956256866455
    7. '-med' → logprob: -10.05456256866455
    8. ' ' → logprob: -10.42956256866455
    9. '[' → logprob: -10.67956256866455
    10. ']' → logprob: -10.92956256866455

Token 179: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.16473691165447235
    2. '-' → logprob: -1.9147368669509888
    3. '-medi' → logprob: -6.039736747741699
    4. '-m' → logprob: -6.664736747741699
    5. '-med' → logprob: -7.164736747741699
    6. ' ' → logprob: -9.9147367477417
    7. '   ' → logprob: -11.5397367477417
    8. '  ' → logprob: -12.7897367477417
    9. '-ma' → logprob: -12.7897367477417
    10. ' med' → logprob: -13.1647367477417

Token 180: ' median' (ID: 31473)
  Prédit: 'med'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'med' → logprob: -0.015473817475140095
    2. 'median' → logprob: -4.39047384262085
    3. ' median' → logprob: -5.89047384262085
    4. 'm' → logprob: -10.140473365783691
    5. ' med' → logprob: -10.390473365783691
    6. 'mediate' → logprob: -10.765473365783691
    7. 'media' → logprob: -11.140473365783691
    8. 'medi' → logprob: -11.140473365783691
    9. ' méd' → logprob: -11.515473365783691
    10. 'mé' → logprob: -11.890473365783691

Token 181: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0002901757834479213
    2. 'ene' → logprob: -9.000289916992188
    3. 'ae' → logprob: -10.125289916992188
    4. 'ane' → logprob: -10.125289916992188
    5. 'ee' → logprob: -10.125289916992188
    6. 'a' → logprob: -11.625289916992188
    7. 'eine' → logprob: -11.875289916992188
    8. 'ean' → logprob: -12.000289916992188
    9. 'é' → logprob: -12.125289916992188
    10. 'ea' → logprob: -12.125289916992188

Token 182: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2948405128554441e-05
    2. ' )' → logprob: -11.50001335144043
    3. '))' → logprob: -13.25001335144043
    4. ')
' → logprob: -14.00001335144043
    5. ')`' → logprob: -16.75001335144043
    6. ')}' → logprob: -17.75001335144043
    7. ')#' → logprob: -17.75001335144043
    8. '   ' → logprob: -17.75001335144043
    9. '+' → logprob: -18.00001335144043
    10. ')**' → logprob: -18.25001335144043

Token 183: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.3902033970225602e-05
    2. ' print' → logprob: -11.500014305114746
    3. '
' → logprob: -13.000014305114746
    4. '<|end|>' → logprob: -14.750014305114746
    5. '#' → logprob: -14.875014305114746
    6. ')' → logprob: -15.375014305114746
    7. '#print' → logprob: -16.00001335144043
    8. '```' → logprob: -16.12501335144043
    9. '    
' → logprob: -16.75001335144043
    10. '(print' → logprob: -16.75001335144043

Token 184: '(total' (ID: 39744)
  Prédit: '(total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.47415345907211304
    2. '(' → logprob: -0.974153459072113
    3. 'total' → logprob: -9.974153518676758
    4. '()' → logprob: -11.349153518676758
    5. '('' → logprob: -11.849153518676758
    6. ' (' → logprob: -12.099153518676758
    7. '(print' → logprob: -13.474153518676758
    8. '("("' → logprob: -14.099153518676758
    9. '(sum' → logprob: -14.349153518676758
    10. '((' → logprob: -14.599153518676758

Token 185: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.988221684878226e-06
    2. ' )' → logprob: -12.000006675720215
    3. ')
' → logprob: -15.250006675720215
    4. '))' → logprob: -15.500006675720215
    5. ')`' → logprob: -16.25000762939453
    6. '(' → logprob: -16.50000762939453
    7. '())' → logprob: -17.12500762939453
    8. '+' → logprob: -17.12500762939453
    9. ')#' → logprob: -17.87500762939453
    10. '()' → logprob: -17.87500762939453


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 183
Tokens correctement prédits (1ère position, stricte): 65
Tokens correctement prédits (1ère position, avec adaptation): 65
Tokens correctement prédits (top 10): 113
Précision stricte (1ère position): 35.52%
Précision adaptée (1ère position): 35.52%
Précision (top 10): 61.75%
================================================================================
