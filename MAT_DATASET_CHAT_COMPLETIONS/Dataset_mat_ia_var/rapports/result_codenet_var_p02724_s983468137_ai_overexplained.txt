================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:20:02
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Demande à l'utilisateur de saisir une valeur entière via la fonction input(), 
# puis convertit cette valeur de chaîne de caractères en entier à l'aide de int().
X = int(input())

# Calcul du nombre de billets de 500 que l'on peut obtenir à partir du montant X :
# L'opérateur // effectue une division entière, c'est-à-dire qu'il donne le quotient sans reste.
# Ensuite, on multiplie ce nombre de billets par 1000, car chaque billet de 500 rapporte 1000 unités.
ans = (X // 500) * 1000

# Mise à jour de la valeur de X pour trouver le reste après avoir utilisé le maximum de billets de 500 :
# L'opérateur % donne le reste de la division entière (modulo).
X = X % 500

# Calcul du nombre de pièces de 5 que l'on peut obtenir à partir du montant restant X.
# On prend à nouveau la division entière pour savoir combien de fois 5 rentre dans X,
# puis on multiplie ce nombre par 5, car chaque pièce de 5 rapporte 5 unités.
ans += (X // 5) * 5

# Affichage du résultat final : le montant total obtenu en utilisant d'abord les billets de 500,
# puis les pièces de 5. La fonction print() affiche la valeur de ans dans la console.
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dem' (ID: 9458)
  → Token d'amorce (pas de prédiction)

Token 2: 'ande' (ID: 4102)
  → Token d'amorce (pas de prédiction)

Token 3: ' à' (ID: 1221)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.46653008460998535
    2. '_' → logprob: -1.8415300846099854
    3. ' ' → logprob: -2.3415300846099854
    4. ':' → logprob: -3.0915300846099854
    5. ' de' → logprob: -3.3415300846099854
    6. 'u' → logprob: -4.966529846191406
    7. ' d' → logprob: -5.091529846191406
    8. 'd' → logprob: -5.466529846191406
    9. ' :' → logprob: -5.591529846191406
    10. ''' → logprob: -5.966529846191406

Token 4: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.010545680299401283
    2. ' l' → logprob: -4.63554573059082
    3. 'user' → logprob: -8.13554573059082
    4. '#' → logprob: -8.88554573059082
    5. 'util' → logprob: -9.01054573059082
    6. '`' → logprob: -10.38554573059082
    7. '```' → logprob: -10.38554573059082
    8. ''' → logprob: -10.63554573059082
    9. 'la' → logprob: -11.01054573059082
    10. '	l' → logprob: -11.51054573059082

Token 5: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.12758591771125793
    2. ''' → logprob: -2.5025858879089355
    3. 'u' → logprob: -4.0025858879089355
    4. 'a' → logprob: -4.8775858879089355
    5. 'e' → logprob: -5.0025858879089355
    6. '’utilisateur' → logprob: -5.8775858879089355
    7. ' utilisateur' → logprob: -7.2525858879089355
    8. 'é' → logprob: -8.002586364746094
    9. 'util' → logprob: -8.002586364746094
    10. ''espace' → logprob: -8.502586364746094

Token 6: ' de' (ID: 334)
  Prédit: 'name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.8802700638771057
    2. 'nom' → logprob: -0.8802700638771057
    3. 'n' → logprob: -2.255270004272461
    4. 'user' → logprob: -3.755270004272461
    5. 'print' → logprob: -4.755270004272461
    6. 's' → logprob: -4.880270004272461
    7. 'input' → logprob: -5.005270004272461
    8. 'username' → logprob: -5.255270004272461
    9. '`' → logprob: -5.880270004272461
    10. 'prenom' → logprob: -6.005270004272461

Token 7: ' saisir' (ID: 152120)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.020497161895036697
    2. 'entr' → logprob: -4.7704973220825195
    3. 'r' → logprob: -4.8954973220825195
    4. '```' → logprob: -6.5204973220825195
    5. ' saisir' → logprob: -6.8954973220825195
    6. '#' → logprob: -7.7704973220825195
    7. 'sa' → logprob: -8.39549732208252
    8. 'entrée' → logprob: -8.64549732208252
    9. 'don' → logprob: -8.89549732208252
    10. 'input' → logprob: -9.02049732208252

Token 8: ' une' (ID: 2463)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.7834512591362
    2. ' une' → logprob: -1.1584513187408447
    3. ' son' → logprob: -2.2834513187408447
    4. ' ' → logprob: -3.0334513187408447
    5. ' le' → logprob: -3.9084513187408447
    6. 'un' → logprob: -5.158451080322266
    7. 'une' → logprob: -5.158451080322266
    8. '_' → logprob: -5.283451080322266
    9. ''un' → logprob: -5.283451080322266
    10. 'le' → logprob: -5.408451080322266

Token 9: ' valeur' (ID: 41664)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01728341355919838
    2. ' chaîne' → logprob: -4.7672834396362305
    3. ' phrase' → logprob: -6.1422834396362305
    4. 'chaine' → logprob: -6.6422834396362305
    5. ' ligne' → logprob: -6.8922834396362305
    6. ' espace' → logprob: -7.3922834396362305
    7. 'space' → logprob: -7.3922834396362305
    8. ' valeur' → logprob: -7.6422834396362305
    9. ' chaine' → logprob: -7.8922834396362305
    10. 'phrase' → logprob: -8.14228343963623

Token 10: ' entière' (ID: 61583)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.14870551228523254
    2. 'value' → logprob: -3.52370548248291
    3. 'val' → logprob: -3.64870548248291
    4. '_' → logprob: -4.02370548248291
    5. 'x' → logprob: -4.02370548248291
    6. 's' → logprob: -4.89870548248291
    7. 'i' → logprob: -4.89870548248291
    8. '```' → logprob: -5.14870548248291
    9. '\n' → logprob: -5.14870548248291
    10. 'input' → logprob: -5.52370548248291

Token 11: ' via' (ID: 4493)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7892807722091675
    2. 'x' → logprob: -1.5392807722091675
    3. 'v' → logprob: -1.6642807722091675
    4. 'i' → logprob: -2.414280891418457
    5. 'val' → logprob: -4.414280891418457
    6. '#' → logprob: -4.914280891418457
    7. 'value' → logprob: -5.164280891418457
    8. '\' → logprob: -5.289280891418457
    9. '`' → logprob: -5.539280891418457
    10. '```' → logprob: -5.539280891418457

Token 12: ' la' (ID: 557)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.31363245844841003
    2. ' input' → logprob: -1.3136324882507324
    3. '=input' → logprob: -8.438632011413574
    4. '<input' → logprob: -10.188632011413574
    5. 'l' → logprob: -10.313632011413574
    6. '(input' → logprob: -10.688632011413574
    7. '```' → logprob: -11.313632011413574
    8. ' ' → logprob: -11.313632011413574
    9. 'une' → logprob: -11.938632011413574
    10. '`' → logprob: -12.188632011413574

Token 13: ' fonction' (ID: 17610)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.45508572459220886
    2. ' input' → logprob: -1.0800857543945312
    3. 's' → logprob: -4.705085754394531
    4. ' ' → logprob: -4.955085754394531
    5. '=input' → logprob: -5.080085754394531
    6. 'entrée' → logprob: -6.705085754394531
    7. 'n' → logprob: -7.955085754394531
    8. 'i' → logprob: -8.205085754394531
    9. ' i' → logprob: -8.705085754394531
    10. ' in' → logprob: -8.830085754394531

Token 14: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.014610015787184238
    2. ' input' → logprob: -5.1396098136901855
    3. '`' → logprob: -6.0146098136901855
    4. '_' → logprob: -6.1396098136901855
    5. 'i' → logprob: -7.0146098136901855
    6. '(input' → logprob: -7.6396098136901855
    7. 's' → logprob: -7.8896098136901855
    8. 'int' → logprob: -7.8896098136901855
    9. '```' → logprob: -8.139610290527344
    10. '(' → logprob: -8.139610290527344

Token 15: '(),' (ID: 2547)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.7526039481163025
    2. 'n' → logprob: -1.5026040077209473
    3. 'i' → logprob: -2.2526040077209473
    4. '(' → logprob: -2.5026040077209473
    5. 'x' → logprob: -3.2526040077209473
    6. '```' → logprob: -3.6276040077209473
    7. 'a' → logprob: -5.002604007720947
    8. ',' → logprob: -5.127604007720947
    9. 'e' → logprob: -5.502604007720947
    10. '\' → logprob: -5.627604007720947

Token 16: ' 
' (ID: 793)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7131922245025635
    2. 'n' → logprob: -2.5881922245025635
    3. ',' → logprob: -2.9631922245025635
    4. '.' → logprob: -2.9631922245025635
    5. 'i' → logprob: -2.9631922245025635
    6. 'a' → logprob: -2.9631922245025635
    7. 'x' → logprob: -3.2131922245025635
    8. 'v' → logprob: -3.2131922245025635
    9. '```' → logprob: -3.8381922245025635
    10. '_' → logprob: -3.9631922245025635

Token 17: '#' (ID: 2)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.33646100759506226
    2. 'n' → logprob: -1.461461067199707
    3. 'x' → logprob: -3.961461067199707
    4. 'ent' → logprob: -4.336461067199707
    5. 'value' → logprob: -4.461461067199707
    6. 's' → logprob: -5.586461067199707
    7. 'v' → logprob: -6.336461067199707
    8. 'a' → logprob: -7.211461067199707
    9. 'nombre' → logprob: -7.336461067199707
    10. ' valeur' → logprob: -7.836461067199707

Token 18: ' puis' (ID: 18766)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.37233129143714905
    2. 'value' → logprob: -2.497331380844116
    3. '#' → logprob: -2.747331380844116
    4. ' puis' → logprob: -2.997331380844116
    5. 'p' → logprob: -3.122331380844116
    6. 'ens' → logprob: -4.497331142425537
    7. 'ent' → logprob: -4.622331142425537
    8. 'et' → logprob: -4.747331142425537
    9. 'n' → logprob: -4.997331142425537
    10. ' value' → logprob: -5.497331142425537

Token 19: ' convert' (ID: 8452)
  Prédit: 'convert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'convert' → logprob: -0.5627055168151855
    2. 'aff' → logprob: -1.8127055168151855
    3. 'stock' → logprob: -2.8127055168151855
    4. 'effect' → logprob: -2.8127055168151855
    5. 'cal' → logprob: -3.3127055168151855
    6. '#' → logprob: -3.4377055168151855
    7. 'calcul' → logprob: -4.0627055168151855
    8. 'v' → logprob: -4.8127055168151855
    9. 'print' → logprob: -4.8127055168151855
    10. 'la' → logprob: -5.0627055168151855

Token 20: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.021406788378953934
    2. 'i' → logprob: -4.396406650543213
    3. 'ie' → logprob: -5.521406650543213
    4. 'is' → logprob: -5.771406650543213
    5. 'ir' → logprob: -6.771406650543213
    6. 'er' → logprob: -8.896407127380371
    7. 'issez' → logprob: -9.146407127380371
    8. 'e' → logprob: -9.271407127380371
    9. 'ies' → logprob: -10.021407127380371
    10. 't' → logprob: -10.146407127380371

Token 21: ' cette' (ID: 7696)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014634926803410053
    2. '_' → logprob: -4.51463508605957
    3. ' ' → logprob: -6.38963508605957
    4. ' (' → logprob: -7.76463508605957
    5. ' la' → logprob: -7.76463508605957
    6. 'l' → logprob: -8.26463508605957
    7. '()' → logprob: -8.38963508605957
    8. 'la' → logprob: -9.13963508605957
    9. '```' → logprob: -9.13963508605957
    10. '_l' → logprob: -10.38963508605957

Token 22: ' valeur' (ID: 41664)
  Prédit: ' valeur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeur' → logprob: -0.0337880440056324
    2. '_' → logprob: -4.158788204193115
    3. 'val' → logprob: -5.283788204193115
    4. ' val' → logprob: -5.658788204193115
    5. ' chaîne' → logprob: -5.783788204193115
    6. ' ' → logprob: -6.408788204193115
    7. '_val' → logprob: -6.658788204193115
    8. ' dernière' → logprob: -6.783788204193115
    9. ' value' → logprob: -7.658788204193115
    10. ' ' → logprob: -7.908788204193115

Token 23: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.40026041865348816
    2. ' ' → logprob: -1.2752604484558105
    3. 'int' → logprob: -3.9002604484558105
    4. ' en' → logprob: -4.5252604484558105
    5. ' int' → logprob: -5.7752604484558105
    6. ' _' → logprob: -5.7752604484558105
    7. '```' → logprob: -6.0252604484558105
    8. 'i' → logprob: -6.0252604484558105
    9. '_int' → logprob: -7.0252604484558105
    10. ' i' → logprob: -7.1502604484558105

Token 24: ' chaîne' (ID: 89288)
  Prédit: 'type'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'type' → logprob: -0.40084314346313477
    2. ' type' → logprob: -1.7758431434631348
    3. 'chaine' → logprob: -2.4008431434631348
    4. ' chaîne' → logprob: -3.2758431434631348
    5. 'string' → logprob: -4.150843143463135
    6. ' chaine' → logprob: -5.400843143463135
    7. 'str' → logprob: -5.650843143463135
    8. 'int' → logprob: -6.150843143463135
    9. ' string' → logprob: -6.275843143463135
    10. 's' → logprob: -7.150843143463135

Token 25: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.015493175014853477
    2. ' ' → logprob: -4.515493392944336
    3. ' _' → logprob: -6.515493392944336
    4. 's' → logprob: -7.265493392944336
    5. ')' → logprob: -8.265493392944336
    6. ''' → logprob: -8.265493392944336
    7. '```' → logprob: -8.515493392944336
    8. ' en' → logprob: -9.015493392944336
    9. '`' → logprob: -9.015493392944336
    10. '"' → logprob: -9.265493392944336

Token 26: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.10079670697450638
    2. ' caractères' → logprob: -2.350796699523926
    3. ' caractère' → logprob: -8.350796699523926
    4. ' caracteres' → logprob: -8.600796699523926
    5. ' caract' → logprob: -9.225796699523926
    6. '#' → logprob: -10.975796699523926
    7. 'texte' → logprob: -11.225796699523926
    8. '_car' → logprob: -11.725796699523926
    9. ' car' → logprob: -12.100796699523926
    10. 'chaine' → logprob: -12.350796699523926

Token 27: ' en' (ID: 469)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.19292770326137543
    2. ' en' → logprob: -2.817927598953247
    3. ',' → logprob: -3.692927598953247
    4. ' =' → logprob: -3.942927598953247
    5. 'en' → logprob: -4.567927837371826
    6. 'int' → logprob: -5.067927837371826
    7. 'i' → logprob: -5.192927837371826
    8. ' ,' → logprob: -5.192927837371826
    9. '=' → logprob: -5.317927837371826
    10. 'e' → logprob: -5.317927837371826

Token 28: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.7574779391288757
    2. ' int' → logprob: -1.3824779987335205
    3. ' un' → logprob: -1.8824779987335205
    4. 'ent' → logprob: -2.8824779987335205
    5. ' entier' → logprob: -3.0074779987335205
    6. 'un' → logprob: -3.8824779987335205
    7. 'une' → logprob: -7.882477760314941
    8. ' integer' → logprob: -8.132477760314941
    9. ' ent' → logprob: -8.132477760314941
    10. ' ' → logprob: -8.382477760314941

Token 29: ' à' (ID: 1221)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6329969167709351
    2. 'v' → logprob: -1.507996916770935
    3. 'val' → logprob: -2.3829970359802246
    4. 'x' → logprob: -2.7579970359802246
    5. 'value' → logprob: -3.6329970359802246
    6. 'i' → logprob: -4.007997035980225
    7. 'ent' → logprob: -4.507997035980225
    8. 'nombre' → logprob: -4.632997035980225
    9. '```' → logprob: -4.882997035980225
    10. '\n' → logprob: -5.507997035980225

Token 30: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.047543369233608246
    2. 'l' → logprob: -3.2975432872772217
    3. ''aide' → logprob: -6.297543525695801
    4. 'part' → logprob: -6.797543525695801
    5. 'a' → logprob: -6.922543525695801
    6. 'int' → logprob: -7.172543525695801
    7. '_' → logprob: -7.422543525695801
    8. '   ' → logprob: -7.797543525695801
    9. ' partir' → logprob: -7.797543525695801
    10. ' convertir' → logprob: -8.1725435256958

Token 31: ''aide' (ID: 75684)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.18831126391887665
    2. ''' → logprob: -2.0633113384246826
    3. 'e' → logprob: -3.8133113384246826
    4. ''ent' → logprob: -5.0633111000061035
    5. ''a' → logprob: -5.5633111000061035
    6. ''entrée' → logprob: -5.8133111000061035
    7. 'u' → logprob: -6.0633111000061035
    8. 'i' → logprob: -6.3133111000061035
    9. ''aide' → logprob: -6.3133111000061035
    10. '')' → logprob: -7.3133111000061035

Token 32: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.08458492904901505
    2. ' ' → logprob: -3.584584951400757
    3. '(' → logprob: -4.084584712982178
    4. ' int' → logprob: -4.709584712982178
    5. 'de' → logprob: -4.834584712982178
    6. ' d' → logprob: -4.959584712982178
    7. ')' → logprob: -5.709584712982178
    8. '_' → logprob: -5.959584712982178
    9. 'int' → logprob: -5.959584712982178
    10. ' )' → logprob: -7.084584712982178

Token 33: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3155001699924469
    2. 'int' → logprob: -1.4405001401901245
    3. ' la' → logprob: -4.065500259399414
    4. ' ' → logprob: -5.190500259399414
    5. 'l' → logprob: -5.315500259399414
    6. ' l' → logprob: -5.940500259399414
    7. '```' → logprob: -6.190500259399414
    8. 'la' → logprob: -7.690500259399414
    9. '`' → logprob: -8.065500259399414
    10. '=int' → logprob: -8.565500259399414

Token 34: '().
' (ID: 58434)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0444679260253906
    2. 'v' → logprob: -1.1694679260253906
    3. 'x' → logprob: -1.4194679260253906
    4. 'val' → logprob: -2.9194679260253906
    5. 'i' → logprob: -4.294467926025391
    6. 'value' → logprob: -5.169467926025391
    7. '```' → logprob: -5.419467926025391
    8. '\n' → logprob: -6.169467926025391
    9. 'nombre' → logprob: -6.169467926025391
    10. '(' → logprob: -6.294467926025391

Token 35: 'X' (ID: 55)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.30677682161331177
    2. 'x' → logprob: -1.806776762008667
    3. 'val' → logprob: -3.181776762008667
    4. 'nombre' → logprob: -3.681776762008667
    5. 'value' → logprob: -4.681777000427246
    6. 'v' → logprob: -4.931777000427246
    7. 'ent' → logprob: -4.931777000427246
    8. '```' → logprob: -5.181777000427246
    9. 'a' → logprob: -6.681777000427246
    10. 'user' → logprob: -7.556777000427246

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02636498026549816
    2. '=' → logprob: -3.651365041732788
    3. ' ' → logprob: -10.026365280151367
    4. ',' → logprob: -11.776365280151367
    5. ' =
' → logprob: -12.651365280151367
    6. '.' → logprob: -13.151365280151367
    7. 's' → logprob: -13.651365280151367
    8. '=input' → logprob: -13.776365280151367
    9. ')' → logprob: -13.901365280151367
    10. '=int' → logprob: -14.276365280151367

Token 37: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.25434979796409607
    2. 'int' → logprob: -1.5043498277664185
    3. ' input' → logprob: -6.504349708557129
    4. 'input' → logprob: -7.004349708557129
    5. ' ' → logprob: -12.129349708557129
    6. ' ' → logprob: -13.379349708557129
    7. '(int' → logprob: -13.879349708557129
    8. '=int' → logprob: -13.879349708557129
    9. '<int' → logprob: -14.004349708557129
    10. '[int' → logprob: -14.254349708557129

Token 38: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.20143437385559082
    2. '(' → logprob: -1.7014343738555908
    3. ' (' → logprob: -11.576434135437012
    4. 'input' → logprob: -11.826434135437012
    5. '(
' → logprob: -13.451434135437012
    6. '()' → logprob: -13.951434135437012
    7. '('' → logprob: -14.326434135437012
    8. '(

' → logprob: -14.701434135437012
    9. '(X' → logprob: -15.826434135437012
    10. '(in' → logprob: -16.201435089111328

Token 39: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02862849086523056
    2. '()' → logprob: -3.6536285877227783
    3. '())' → logprob: -6.278628349304199
    4. '('' → logprob: -8.7786283493042
    5. ')' → logprob: -9.2786283493042
    6. '(""))' → logprob: -10.2786283493042
    7. '("("' → logprob: -10.6536283493042
    8. '(()' → logprob: -10.9036283493042
    9. ' ())' → logprob: -11.0286283493042
    10. '()))' → logprob: -11.0286283493042

Token 40: '#' (ID: 2)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5008718371391296
    2. '+' → logprob: -1.2508718967437744
    3. ')' → logprob: -3.3758718967437744
    4. '*' → logprob: -3.5008718967437744
    5. ' ' → logprob: -4.500871658325195
    6. '#' → logprob: -5.000871658325195
    7. ' +' → logprob: -5.000871658325195
    8. '()' → logprob: -5.250871658325195
    9. '\' → logprob: -5.500871658325195
    10. '>' → logprob: -6.500871658325195

Token 41: ' Calcul' (ID: 57243)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.14907529950141907
    2. 'if' → logprob: -2.1490752696990967
    3. 'print' → logprob: -4.399075508117676
    4. ' print' → logprob: -4.899075508117676
    5. ' X' → logprob: -7.149075508117676
    6. ' ' → logprob: -7.774075508117676
    7. '#' → logprob: -8.149075508117676
    8. 'X' → logprob: -8.149075508117676
    9. ' #' → logprob: -8.399075508117676
    10. ' while' → logprob: -10.024075508117676

Token 42: ' du' (ID: 1462)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0107260188087821
    2. 'X' → logprob: -5.635725975036621
    3. '_' → logprob: -6.135725975036621
    4. '()' → logprob: -6.385725975036621
    5. ' (' → logprob: -6.885725975036621
    6. 's' → logprob: -7.385725975036621
    7. ')' → logprob: -7.885725975036621
    8. '('' → logprob: -8.135725975036621
    9. '("' → logprob: -9.010725975036621
    10. ' ' → logprob: -9.260725975036621

Token 43: ' nombre' (ID: 9733)
  Prédit: ' carré'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' carré' → logprob: -0.015689771622419357
    2. ' carre' → logprob: -5.015689849853516
    3. 'c' → logprob: -5.515689849853516
    4. 'car' → logprob: -6.765689849853516
    5. ' facteur' → logprob: -6.765689849853516
    6. ' carr' → logprob: -7.015689849853516
    7. 's' → logprob: -7.140689849853516
    8. 'Carr' → logprob: -8.515689849853516
    9. ' car' → logprob: -9.265689849853516
    10. ' résultat' → logprob: -9.515689849853516

Token 44: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8804381489753723
    2. '_s' → logprob: -2.0054380893707275
    3. '_factor' → logprob: -2.0054380893707275
    4. '_de' → logprob: -2.5054380893707275
    5. ' de' → logprob: -3.0054380893707275
    6. '_total' → logprob: -3.5054380893707275
    7. '_d' → logprob: -3.6304380893707275
    8. '_square' → logprob: -3.6304380893707275
    9. ' ' → logprob: -4.255438327789307
    10. '_pairs' → logprob: -4.630438327789307

Token 45: ' billets' (ID: 146301)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5913424491882324
    2. ' espaces' → logprob: -1.4663424491882324
    3. ' jours' → logprob: -2.7163424491882324
    4. '_' → logprob: -2.7163424491882324
    5. ' secondes' → logprob: -3.4663424491882324
    6. 'spaces' → logprob: -5.591342449188232
    7. ' caractères' → logprob: -5.591342449188232
    8. ' fois' → logprob: -5.841342449188232
    9. 'élé' → logprob: -6.153842449188232
    10. 'é' → logprob: -6.216342449188232

Token 46: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.38019832968711853
    2. 's' → logprob: -1.505198359489441
    3. '_' → logprob: -2.6301982402801514
    4. ' =' → logprob: -4.5051984786987305
    5. ' de' → logprob: -5.8801984786987305
    6. '[' → logprob: -7.0051984786987305
    7. ',' → logprob: -7.1301984786987305
    8. '  ' → logprob: -7.2551984786987305
    9. '100' → logprob: -7.5051984786987305
    10. '1' → logprob: -7.7551984786987305

Token 47: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05369355529546738
    2. '100' → logprob: -3.3036935329437256
    3. ' cinqu' → logprob: -5.428693771362305
    4. ' banque' → logprob: -5.803693771362305
    5. '50' → logprob: -6.178693771362305
    6. '500' → logprob: -6.803693771362305
    7. 'c' → logprob: -6.928693771362305
    8. ' billets' → logprob: -7.053693771362305
    9. '```' → logprob: -7.678693771362305
    10. ' billet' → logprob: -7.928693771362305

Token 48: '500' (ID: 3234)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.7270886898040771
    2. '500' → logprob: -1.3520886898040771
    3. '50' → logprob: -2.352088689804077
    4. ' ' → logprob: -2.477088689804077
    5. '10' → logprob: -3.602088689804077
    6. '200' → logprob: -4.227088928222656
    7. '20' → logprob: -4.477088928222656
    8. '5' → logprob: -4.727088928222656
    9. ' cinqu' → logprob: -4.852088928222656
    10. 'cent' → logprob: -6.102088928222656

Token 49: ' que' (ID: 661)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6791189312934875
    2. 's' → logprob: -0.9291189312934875
    3. ''' → logprob: -3.4291188716888428
    4. '_' → logprob: -5.054119110107422
    5. '500' → logprob: -5.054119110107422
    6. '0' → logprob: -5.304119110107422
    7. ')' → logprob: -5.304119110107422
    8. '"' → logprob: -5.429119110107422
    9. ',' → logprob: -5.554119110107422
    10. ' =' → logprob: -5.929119110107422

Token 50: ' l' (ID: 305)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.38350966572761536
    2. '"' → logprob: -2.883509635925293
    3. ' X' → logprob: -3.008509635925293
    4. '100' → logprob: -3.258509635925293
    5. ''' → logprob: -3.508509635925293
    6. 'X' → logprob: -3.883509635925293
    7. 's' → logprob: -4.133509635925293
    8. ' =' → logprob: -4.383509635925293
    9. ' "' → logprob: -4.508509635925293
    10. ' '' → logprob: -4.758509635925293

Token 51: ''on' (ID: 25812)
  Prédit: ''on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''on' → logprob: -0.8517139554023743
    2. 'a' → logprob: -0.9767139554023743
    3. ''' → logprob: -2.4767138957977295
    4. 'e' → logprob: -2.7267138957977295
    5. '_' → logprob: -4.226714134216309
    6. 'on' → logprob: -4.601714134216309
    7. ''''' → logprob: -5.601714134216309
    8. ''utilisateur' → logprob: -5.601714134216309
    9. 'ui' → logprob: -5.851714134216309
    10. 'o' → logprob: -6.226714134216309

Token 52: ' peut' (ID: 9216)
  Prédit: ' peut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.5171124935150146
    2. ' ' → logprob: -1.5171124935150146
    3. ' peux' → logprob: -2.7671124935150146
    4. ' pourra' → logprob: -3.1421124935150146
    5. '_' → logprob: -4.267112731933594
    6. ' souhaite' → logprob: -4.642112731933594
    7. ' a' → logprob: -5.267112731933594
    8. ' veut' → logprob: -5.267112731933594
    9. ' pourrait' → logprob: -5.267112731933594
    10. ' /' → logprob: -5.392112731933594

Token 53: ' obtenir' (ID: 54423)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0605512373149395
    2. ' retirer' → logprob: -3.685551166534424
    3. ' obtenir' → logprob: -4.060551166534424
    4. ' prendre' → logprob: -5.185551166534424
    5. ' récupérer' → logprob: -6.185551166534424
    6. ' rendre' → logprob: -6.310551166534424
    7. ' utiliser' → logprob: -6.685551166534424
    8. ' a' → logprob: -7.060551166534424
    9. ' acheter' → logprob: -7.435551166534424
    10. ' f' → logprob: -7.935551166534424

Token 54: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.37031126022338867
    2. '(' → logprob: -2.6203112602233887
    3. ' //' → logprob: -2.9953112602233887
    4. ' (' → logprob: -3.2453112602233887
    5. 's' → logprob: -3.3703112602233887
    6. ''' → logprob: -3.3703112602233887
    7. ')' → logprob: -4.370311260223389
    8. '"' → logprob: -4.370311260223389
    9. '500' → logprob: -5.120311260223389
    10. ',' → logprob: -5.495311260223389

Token 55: ' partir' (ID: 12100)
  Prédit: ' partir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' partir' → logprob: -0.020305834710597992
    2. 'part' → logprob: -4.020305633544922
    3. ' part' → logprob: -7.020305633544922
    4. ' ' → logprob: -8.020305633544922
    5. ' ' → logprob: -9.020305633544922
    6. 'div' → logprob: -9.395305633544922
    7. ' partire' → logprob: -9.520305633544922
    8. ' parts' → logprob: -9.645305633544922
    9. '	part' → logprob: -9.645305633544922
    10. ' repartir' → logprob: -9.895305633544922

Token 56: ' du' (ID: 1462)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.15496087074279785
    2. ' ' → logprob: -2.529960870742798
    3. ' X' → logprob: -3.404960870742798
    4. ' d' → logprob: -3.904960870742798
    5. 'X' → logprob: -5.154960632324219
    6. 'de' → logprob: -6.154960632324219
    7. ' du' → logprob: -6.654960632324219
    8. 'd' → logprob: -7.154960632324219
    9. ' des' → logprob: -8.779960632324219
    10. '_' → logprob: -9.529960632324219

Token 57: ' montant' (ID: 72364)
  Prédit: ' X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' X' → logprob: -0.08589954674243927
    2. 'X' → logprob: -3.460899591445923
    3. ' ' → logprob: -3.460899591445923
    4. ' montant' → logprob: -3.960899591445923
    5. ' nombre' → logprob: -9.335899353027344
    6. ' total' → logprob: -9.710899353027344
    7. 'mont' → logprob: -10.210899353027344
    8. '  ' → logprob: -10.585899353027344
    9. '`' → logprob: -10.710899353027344
    10. 'nombre' → logprob: -10.710899353027344

Token 58: ' X' (ID: 2127)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.009266166016459465
    2. ' X' → logprob: -5.509266376495361
    3. 'X' → logprob: -6.759266376495361
    4. ' :' → logprob: -6.884266376495361
    5. '_' → logprob: -7.134266376495361
    6. ',' → logprob: -8.509265899658203
    7. 'div' → logprob: -8.634265899658203
    8. ' ,' → logprob: -8.759265899658203
    9. ':' → logprob: -9.009265899658203
    10. 'total' → logprob: -9.009265899658203

Token 59: ' :
' (ID: 10039)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.4672277867794037
    2. ' ' → logprob: -1.217227816581726
    3. '500' → logprob: -4.467227935791016
    4. '  
' → logprob: -4.717227935791016
    5. '' → logprob: -4.842227935791016
    6. ' 
' → logprob: -4.967227935791016
    7. '```' → logprob: -5.092227935791016
    8. '//' → logprob: -5.217227935791016
    9. ' //
' → logprob: -5.592227935791016
    10. 'div' → logprob: -5.842227935791016

Token 60: '#' (ID: 2)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '500' → logprob: -1.2343394756317139
    2. '  
' → logprob: -1.8593394756317139
    3. ' ' → logprob: -2.234339475631714
    4. ' 
' → logprob: -2.234339475631714
    5. '\n' → logprob: -2.234339475631714
    6. '
' → logprob: -2.859339475631714
    7. '\' → logprob: -2.984339475631714
    8. '```' → logprob: -3.234339475631714
    9. '' → logprob: -4.109339714050293
    10. 's' → logprob: -4.484339714050293

Token 61: ' L' (ID: 451)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06537211686372757
    2. '500' → logprob: -2.9403722286224365
    3. 'n' → logprob: -5.690371990203857
    4. '_' → logprob: -6.940371990203857
    5. '```' → logprob: -7.065371990203857
    6. 's' → logprob: -7.190371990203857
    7. ''' → logprob: -7.690371990203857
    8. ' n' → logprob: -7.690371990203857
    9. ' ```' → logprob: -7.815371990203857
    10. '`' → logprob: -7.940371990203857

Token 62: ''op' (ID: 70747)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.9090054631233215
    2. '_' → logprob: -1.5340054035186768
    3. '500' → logprob: -2.1590054035186768
    4. 'es' → logprob: -2.4090054035186768
    5. 'b' → logprob: -3.5340054035186768
    6. 'et' → logprob: -4.659005641937256
    7. 'n' → logprob: -4.659005641937256
    8. 'nombre' → logprob: -4.659005641937256
    9. '_b' → logprob: -4.784005641937256
    10. 'i' → logprob: -5.034005641937256

Token 63: 'érateur' (ID: 108528)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.377746820449829
    2. 'u' → logprob: -2.127746820449829
    3. 'e' → logprob: -2.502746820449829
    4. 'X' → logprob: -2.752746820449829
    5. 'ti' → logprob: -2.752746820449829
    6. 'tim' → logprob: -3.127746820449829
    7. 'p' → logprob: -3.377746820449829
    8. 'ération' → logprob: -3.502746820449829
    9. 'o' → logprob: -3.627746820449829
    10. 'ur' → logprob: -4.00274658203125

Token 64: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.4677998721599579
    2. ' ' → logprob: -1.3427999019622803
    3. '//' → logprob: -2.8427999019622803
    4. ' de' → logprob: -4.717799663543701
    5. ' `' → logprob: -4.717799663543701
    6. '/' → logprob: -5.217799663543701
    7. '  ' → logprob: -5.217799663543701
    8. ' /' → logprob: -5.217799663543701
    9. 'de' → logprob: -5.592799663543701
    10. '_' → logprob: -6.217799663543701

Token 65: ' effect' (ID: 3159)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3127247095108032
    2. ' permet' → logprob: -1.6877247095108032
    3. '=' → logprob: -3.3127245903015137
    4. ' (' → logprob: -3.4377245903015137
    5. ' est' → logprob: -6.187724590301514
    6. ' X' → logprob: -6.312724590301514
    7. ' réalise' → logprob: -6.687724590301514
    8. 'per' → logprob: -7.312724590301514
    9. 's' → logprob: -7.437724590301514
    10. ' calc' → logprob: -7.437724590301514

Token 66: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -2.5107177862082608e-05
    2. 'u' → logprob: -11.250024795532227
    3. 'uez' → logprob: -12.875024795532227
    4. 'uer' → logprob: -13.000024795532227
    5. 'ué' → logprob: -13.000024795532227
    6. 'uant' → logprob: -13.500024795532227
    7. 'uera' → logprob: -13.625024795532227
    8. 'uent' → logprob: -13.625024795532227
    9. 'uée' → logprob: -14.750024795532227
    10. 'ues' → logprob: -15.625024795532227

Token 67: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.40919992327690125
    2. ' la' → logprob: -1.2841999530792236
    3. 'une' → logprob: -3.0341999530792236
    4. 'la' → logprob: -5.4091997146606445
    5. 'division' → logprob: -6.0341997146606445
    6. 'div' → logprob: -6.1591997146606445
    7. 'a' → logprob: -8.159199714660645
    8. 'La' → logprob: -8.409199714660645
    9. '```' → logprob: -8.534199714660645
    10. ''une' → logprob: -8.659199714660645

Token 68: ' division' (ID: 21629)
  Prédit: 'division'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'division' → logprob: -0.21317122876644135
    2. ' division' → logprob: -1.7131712436676025
    3. 'div' → logprob: -4.463171005249023
    4. ' ' → logprob: -9.338171005249023
    5. ' división' → logprob: -10.963171005249023
    6. ' div' → logprob: -11.463171005249023
    7. 'Division' → logprob: -11.588171005249023
    8. '_div' → logprob: -11.838171005249023
    9. ' divisão' → logprob: -11.963171005249023
    10. ' Division' → logprob: -12.088171005249023

Token 69: ' entière' (ID: 61583)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.4199945628643036
    2. ' entière' → logprob: -1.169994592666626
    3. 'enti' → logprob: -3.794994592666626
    4. ' ' → logprob: -5.669994354248047
    5. 'eu' → logprob: -6.544994354248047
    6. ' enti' → logprob: -6.544994354248047
    7. '#' → logprob: -7.169994354248047
    8. ' ent' → logprob: -7.669994354248047
    9. ' ' → logprob: -8.044994354248047
    10. 'floor' → logprob: -8.169994354248047

Token 70: ',' (ID: 11)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -1.0054142475128174
    2. ' ' → logprob: -1.3804142475128174
    3. ' X' → logprob: -1.3804142475128174
    4. ',' → logprob: -2.8804142475128174
    5. ' (' → logprob: -3.5054142475128174
    6. ' ,' → logprob: -4.880414009094238
    7. '(' → logprob: -5.255414009094238
    8. ')' → logprob: -5.505414009094238
    9. '.' → logprob: -5.505414009094238
    10. '0' → logprob: -5.755414009094238

Token 71: ' c' (ID: 274)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.8342896699905396
    2. ' X' → logprob: -1.7092896699905396
    3. '500' → logprob: -1.9592896699905396
    4. ' ' → logprob: -2.33428955078125
    5. ' on' → logprob: -4.08428955078125
    6. ' permettant' → logprob: -4.08428955078125
    7. ' donnant' → logprob: -4.33428955078125
    8. ' c' → logprob: -4.33428955078125
    9. 'c' → logprob: -4.70928955078125
    10. ' qui' → logprob: -4.70928955078125

Token 72: ''est' (ID: 6616)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.17901769280433655
    2. 'al' → logprob: -2.4290177822113037
    3. ''est' → logprob: -4.054017543792725
    4. 'alc' → logprob: -4.054017543792725
    5. 'omme' → logprob: -4.554017543792725
    6. 'es' → logprob: -5.054017543792725
    7. 'ette' → logprob: -5.429017543792725
    8. 'om' → logprob: -5.429017543792725
    9. 'ela' → logprob: -5.554017543792725
    10. ''e' → logprob: -6.429017543792725

Token 73: '-à' (ID: 56297)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.886712372303009
    2. 'une' → logprob: -2.2617123126983643
    3. 'la' → logprob: -2.3867123126983643
    4. ' la' → logprob: -2.5117123126983643
    5. 'le' → logprob: -2.6367123126983643
    6. 'floor' → logprob: -3.5117123126983643
    7. ' le' → logprob: -3.7617123126983643
    8. 'div' → logprob: -3.8867123126983643
    9. '```' → logprob: -3.8867123126983643
    10. 'ce' → logprob: -4.011712551116943

Token 74: '-dire' (ID: 76064)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -1.2690321207046509
    2. 'la' → logprob: -1.7690321207046509
    3. 'jour' → logprob: -2.2690320014953613
    4. 'part' → logprob: -2.7690320014953613
    5. '100' → logprob: -3.0190320014953613
    6. '500' → logprob: -3.2690320014953613
    7. 'j' → logprob: -3.8940320014953613
    8. 'près' → logprob: -3.8940320014953613
    9. '```' → logprob: -3.8940320014953613
    10. 'l' → logprob: -4.269032001495361

Token 75: ' qu' (ID: 474)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -1.6032917499542236
    2. ' que' → logprob: -1.9782917499542236
    3. 'le' → logprob: -2.2282917499542236
    4. 'sans' → logprob: -2.2282917499542236
    5. ' la' → logprob: -2.4782917499542236
    6. 'que' → logprob: -2.6032917499542236
    7. 'qu' → logprob: -2.6032917499542236
    8. ' qu' → logprob: -2.7282917499542236
    9. ' combien' → logprob: -3.1032917499542236
    10. 'la' → logprob: -3.2282917499542236

Token 76: ''il' (ID: 14683)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5307645797729492
    2. ''on' → logprob: -0.9057645797729492
    3. 'on' → logprob: -6.280764579772949
    4. ''il' → logprob: -6.405764579772949
    5. 'que' → logprob: -6.655764579772949
    6. 'u' → logprob: -6.905764579772949
    7. ' on' → logprob: -7.655764579772949
    8. ''elle' → logprob: -8.15576457977295
    9. ''' → logprob: -8.28076457977295
    10. '’on' → logprob: -8.40576457977295

Token 77: ' donne' (ID: 30004)
  Prédit: ' calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calc' → logprob: -0.26480257511138916
    2. ' permet' → logprob: -1.8898025751113892
    3. ' div' → logprob: -4.0148024559021
    4. ' ' → logprob: -4.2648024559021
    5. ' compte' → logprob: -4.7648024559021
    6. ' espace' → logprob: -5.1398024559021
    7. ' retourne' → logprob: -5.3898024559021
    8. 'div' → logprob: -5.5148024559021
    9. ' récup' → logprob: -5.8898024559021
    10. ' donne' → logprob: -6.0148024559021

Token 78: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.5821701288223267
    2. 'le' → logprob: -0.8321701288223267
    3. 'nombre' → logprob: -6.207170009613037
    4. ' la' → logprob: -6.582170009613037
    5. 'la' → logprob: -7.707170009613037
    6. ' combien' → logprob: -7.707170009613037
    7. 'l' → logprob: -7.832170009613037
    8. '_le' → logprob: -8.082170486450195
    9. 'quot' → logprob: -9.082170486450195
    10. ' nombre' → logprob: -9.207170486450195

Token 79: ' quotient' (ID: 169302)
  Prédit: ' nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.693570077419281
    2. 'nombre' → logprob: -0.693570077419281
    3. ' résultat' → logprob: -9.193570137023926
    4. 'quot' → logprob: -9.318570137023926
    5. 'n' → logprob: -9.693570137023926
    6. ' quotient' → logprob: -9.818570137023926
    7. ' nombres' → logprob: -10.818570137023926
    8. 'rés' → logprob: -10.943570137023926
    9. '_nombre' → logprob: -11.443570137023926
    10. 'nb' → logprob: -11.818570137023926

Token 80: ' sans' (ID: 9828)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11617168039083481
    2. 'X' → logprob: -3.8661715984344482
    3. '_' → logprob: -4.241171836853027
    4. ' de' → logprob: -4.366171836853027
    5. 'de' → logprob: -4.741171836853027
    6. ' X' → logprob: -4.866171836853027
    7. ''' → logprob: -5.366171836853027
    8. ' ,' → logprob: -5.616171836853027
    9. '  ' → logprob: -5.616171836853027
    10. '```' → logprob: -5.991171836853027

Token 81: ' reste' (ID: 26769)
  Prédit: ' remainder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remainder' → logprob: -1.667387843132019
    2. 'r' → logprob: -1.917387843132019
    3. ' la' → logprob: -2.4173879623413086
    4. 're' → logprob: -2.5423879623413086
    5. ' donner' → logprob: -2.9173879623413086
    6. ' le' → logprob: -2.9173879623413086
    7. 'le' → logprob: -3.0423879623413086
    8. 'la' → logprob: -3.2923879623413086
    9. ' reste' → logprob: -3.5423879623413086
    10. 'e' → logprob: -3.6673879623413086

Token 82: '.
' (ID: 558)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0293086767196655
    2. '500' → logprob: -2.029308795928955
    3. ' 
' → logprob: -2.029308795928955
    4. '_' → logprob: -2.404308795928955
    5. 's' → logprob: -2.404308795928955
    6. '\' → logprob: -3.279308795928955
    7. '  
' → logprob: -3.404308795928955
    8. ' ,' → logprob: -3.904308795928955
    9. ',' → logprob: -3.904308795928955
    10. '.' → logprob: -4.279308795928955

Token 83: '#' (ID: 2)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '500' → logprob: -0.9287805557250977
    2. '_' → logprob: -1.5537805557250977
    3. 'b' → logprob: -2.1787805557250977
    4. ' 
' → logprob: -2.5537805557250977
    5. ' ' → logprob: -2.8037805557250977
    6. 's' → logprob: -3.3037805557250977
    7. 'n' → logprob: -3.5537805557250977
    8. 'bil' → logprob: -4.303780555725098
    9. ' billets' → logprob: -4.428780555725098
    10. '' → logprob: -4.428780555725098

Token 84: ' Ensuite' (ID: 113884)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.2316694259643555
    2. '
' → logprob: -1.4816694259643555
    3. 'n' → logprob: -1.6066694259643555
    4. '500' → logprob: -1.8566694259643555
    5. '_' → logprob: -2.9816694259643555
    6. 'b' → logprob: -3.8566694259643555
    7. '  
' → logprob: -4.9816694259643555
    8. '' → logprob: -5.1066694259643555
    9. '
' → logprob: -5.2316694259643555
    10. '_
' → logprob: -5.2316694259643555

Token 85: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6745783090591431
    2. ',' → logprob: -1.174578309059143
    3. ' ,' → logprob: -3.1745781898498535
    4. '_' → logprob: -3.6745781898498535
    5. 's' → logprob: -3.7995781898498535
    6. 'X' → logprob: -4.1745781898498535
    7. 'n' → logprob: -4.2995781898498535
    8. ' ' → logprob: -4.4245781898498535
    9. ' X' → logprob: -4.5495781898498535
    10. ' :' → logprob: -5.6745781898498535

Token 86: ' on' (ID: 402)
  Prédit: ' X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' X' → logprob: -1.4167652130126953
    2. ' le' → logprob: -1.6667652130126953
    3. ' on' → logprob: -1.7917652130126953
    4. ' l' → logprob: -2.0417652130126953
    5. 'X' → logprob: -2.5417652130126953
    6. 'le' → logprob: -3.0417652130126953
    7. 'l' → logprob: -3.1667652130126953
    8. ' ' → logprob: -4.166765213012695
    9. ' ' → logprob: -4.416765213012695
    10. ' la' → logprob: -4.666765213012695

Token 87: ' multipl' (ID: 44269)
  Prédit: ' calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calc' → logprob: -0.09156506508588791
    2. 'cal' → logprob: -3.4665651321411133
    3. 'calc' → logprob: -4.591565132141113
    4. ' utilise' → logprob: -4.841565132141113
    5. 'aff' → logprob: -4.966565132141113
    6. 'div' → logprob: -5.216565132141113
    7. ' continue' → logprob: -5.591565132141113
    8. ' div' → logprob: -5.591565132141113
    9. ' récup' → logprob: -6.216565132141113
    10. ' cal' → logprob: -6.216565132141113

Token 88: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.07879945635795593
    2. 'ique' → logprob: -2.9537994861602783
    3. 'e' → logprob: -4.203799247741699
    4. 'ipl' → logprob: -5.828799247741699
    5. 'ip' → logprob: -6.328799247741699
    6. 'ies' → logprob: -6.953799247741699
    7. 'ier' → logprob: -7.078799247741699
    8. 'ipe' → logprob: -7.453799247741699
    9. 'iez' → logprob: -8.3287992477417
    10. 'uie' → logprob: -8.4537992477417

Token 89: ' ce' (ID: 2357)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14589989185333252
    2. '  ' → logprob: -3.270899772644043
    3. ' X' → logprob: -3.395899772644043
    4. 'X' → logprob: -3.895899772644043
    5. '_' → logprob: -3.895899772644043
    6. '(' → logprob: -5.520899772644043
    7. 'le' → logprob: -5.895899772644043
    8. ' le' → logprob: -6.145899772644043
    9. ' par' → logprob: -6.395899772644043
    10. 'par' → logprob: -6.520899772644043

Token 90: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.5835086107254028
    2. ' résultat' → logprob: -1.7085086107254028
    3. '_' → logprob: -2.4585084915161133
    4. ' ' → logprob: -2.8335084915161133
    5. ' X' → logprob: -3.8335084915161133
    6. ' montant' → logprob: -4.083508491516113
    7. 'nombre' → logprob: -4.458508491516113
    8. ' code' → logprob: -4.583508491516113
    9. ' espace' → logprob: -4.833508491516113
    10. 'X' → logprob: -5.083508491516113

Token 91: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.47900891304016113
    2. '_' → logprob: -1.1040089130401611
    3. '*' → logprob: -3.979008913040161
    4. '  ' → logprob: -5.104008674621582
    5. ' ' → logprob: -5.104008674621582
    6. ' *' → logprob: -5.604008674621582
    7. 's' → logprob: -6.104008674621582
    8. ' par' → logprob: -6.354008674621582
    9. ' de' → logprob: -6.479008674621582
    10. ' X' → logprob: -7.104008674621582

Token 92: ' billets' (ID: 146301)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05313517153263092
    2. ' billets' → logprob: -3.3031351566314697
    3. '500' → logprob: -4.928135395050049
    4. ' "' → logprob: -6.303135395050049
    5. ' '' → logprob: -6.428135395050049
    6. ' bil' → logprob: -6.553135395050049
    7. 'bil' → logprob: -6.928135395050049
    8. '5' → logprob: -8.30313491821289
    9. ' ' → logprob: -8.55313491821289
    10. '  ' → logprob: -8.55313491821289

Token 93: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.2215859740972519
    2. ' ' → logprob: -2.221585988998413
    3. '500' → logprob: -3.721585988998413
    4. ' X' → logprob: -4.096585750579834
    5. 'par' → logprob: -4.596585750579834
    6. 's' → logprob: -5.096585750579834
    7. ' by' → logprob: -5.096585750579834
    8. '  ' → logprob: -5.346585750579834
    9. '*' → logprob: -5.596585750579834
    10. ' de' → logprob: -6.096585750579834

Token 94: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10369371622800827
    2. '500' → logprob: -2.353693723678589
    3. ' ' → logprob: -5.72869348526001
    4. '5' → logprob: -9.728693962097168
    5. '50' → logprob: -9.978693962097168
    6. ' ' → logprob: -10.853693962097168
    7. '  ' → logprob: -11.103693962097168
    8. 'space' → logprob: -11.853693962097168
    9. ' a' → logprob: -11.853693962097168
    10. '```' → logprob: -11.978693962097168

Token 95: '100' (ID: 1353)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '500' → logprob: -0.38715633749961853
    2. ' ' → logprob: -1.137156367301941
    3. '5' → logprob: -8.51215648651123
    4. '50' → logprob: -10.01215648651123
    5. ' ' → logprob: -10.26215648651123
    6. '  ' → logprob: -13.63715648651123
    7. ' cinq' → logprob: -15.19965648651123
    8. ''' → logprob: -15.57465648651123
    9. ' 
' → logprob: -15.57465648651123
    10. '505' → logprob: -15.63715648651123

Token 96: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6167789697647095
    2. ' *' → logprob: -1.3667789697647095
    3. ' ' → logprob: -1.9917789697647095
    4. '*' → logprob: -2.74177885055542
    5. '5' → logprob: -6.49177885055542
    6. ' //' → logprob: -6.99177885055542
    7. ' *
' → logprob: -7.99177885055542
    8. ' ' → logprob: -8.741779327392578
    9. ' )' → logprob: -9.054279327392578
    10. '500' → logprob: -9.054279327392578

Token 97: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7076972723007202
    2. '*' → logprob: -1.3326972723007202
    3. ' *' → logprob: -1.4576972723007202
    4. '0' → logprob: -5.70769739151001
    5. ' //' → logprob: -6.58269739151001
    6. 's' → logprob: -7.08269739151001
    7. 'X' → logprob: -7.58269739151001
    8. ')' → logprob: -7.58269739151001
    9. '#' → logprob: -7.83269739151001
    10. '' → logprob: -7.83269739151001

Token 98: ' car' (ID: 1669)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05835101753473282
    2. ' *' → logprob: -3.6833510398864746
    3. '*' → logprob: -4.308351039886475
    4. ' )' → logprob: -4.808351039886475
    5. ' ,' → logprob: -6.308351039886475
    6. ' X' → logprob: -6.558351039886475
    7. ')' → logprob: -6.933351039886475
    8. '0' → logprob: -7.183351039886475
    9. '#' → logprob: -7.308351039886475
    10. ' 
' → logprob: -7.558351039886475

Token 99: ' chaque' (ID: 21194)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04771101847290993
    2. '500' → logprob: -3.172711133956909
    3. '5' → logprob: -5.79771089553833
    4. '2' → logprob: -8.297711372375488
    5. ' X' → logprob: -8.297711372375488
    6. ' le' → logprob: -8.547711372375488
    7. '50' → logprob: -8.797711372375488
    8. '  ' → logprob: -8.922711372375488
    9. ' ' → logprob: -8.922711372375488
    10. 'le' → logprob: -9.047711372375488

Token 100: ' billet' (ID: 117706)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3416145443916321
    2. ' billet' → logprob: -1.4666144847869873
    3. 'bil' → logprob: -3.5916144847869873
    4. '500' → logprob: -4.091614723205566
    5. ' bil' → logprob: -4.841614723205566
    6. '0' → logprob: -5.841614723205566
    7. ' billets' → logprob: -7.091614723205566
    8. '5' → logprob: -7.716614723205566
    9. ' ' → logprob: -8.216614723205566
    10. ' ticket' → logprob: -8.591614723205566

Token 101: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12866002321243286
    2. 's' → logprob: -2.628659963607788
    3. ' s' → logprob: -4.878660202026367
    4. ' *' → logprob: -4.878660202026367
    5. '500' → logprob: -5.003660202026367
    6. '*' → logprob: -5.128660202026367
    7. ' ' → logprob: -5.128660202026367
    8. '_' → logprob: -5.253660202026367
    9. ' de' → logprob: -6.378660202026367
    10. '0' → logprob: -6.878660202026367

Token 102: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1827472448348999
    2. '500' → logprob: -1.8077472448349
    3. '5' → logprob: -5.9327473640441895
    4. '50' → logprob: -8.557746887207031
    5. ' ' → logprob: -9.432746887207031
    6. ' cinq' → logprob: -10.995246887207031
    7. 's' → logprob: -11.307746887207031
    8. '  ' → logprob: -12.370246887207031
    9. '100' → logprob: -12.807746887207031
    10. ' X' → logprob: -12.870246887207031

Token 103: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.2815437912940979
    2. ' ' → logprob: -1.4065437316894531
    3. '5' → logprob: -8.156543731689453
    4. '50' → logprob: -9.656543731689453
    5. ' ' → logprob: -11.281543731689453
    6. '100' → logprob: -11.656543731689453
    7. '  ' → logprob: -12.719043731689453
    8. ' cinq' → logprob: -13.156543731689453
    9. 'bil' → logprob: -13.281543731689453
    10. ' X' → logprob: -13.594043731689453

Token 104: ' rapporte' (ID: 180891)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2725578248500824
    2. '0' → logprob: -2.5225577354431152
    3. ' ' → logprob: -2.5225577354431152
    4. ' )' → logprob: -3.6475577354431152
    5. ' //' → logprob: -3.7725577354431152
    6. '*' → logprob: -4.147557735443115
    7. ' ' → logprob: -5.147557735443115
    8. ')' → logprob: -5.272557735443115
    9. '00' → logprob: -7.897557735443115
    10. ' ,' → logprob: -8.272558212280273

Token 105: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.016440534964203835
    2. '0' → logprob: -4.516440391540527
    3. ' *' → logprob: -5.766440391540527
    4. '*' → logprob: -6.641440391540527
    5. ' ' → logprob: -7.766440391540527
    6. '500' → logprob: -9.266440391540527
    7. '5' → logprob: -9.391440391540527
    8. '  ' → logprob: -9.391440391540527
    9. '2' → logprob: -9.516440391540527
    10. ' )' → logprob: -10.266440391540527

Token 106: '100' (ID: 1353)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07006458938121796
    2. '500' → logprob: -3.5700645446777344
    3. '2' → logprob: -3.9450645446777344
    4. '5' → logprob: -4.070064544677734
    5. '0' → logprob: -6.195064544677734
    6. '50' → logprob: -7.070064544677734
    7. '200' → logprob: -10.882564544677734
    8. '  ' → logprob: -10.882564544677734
    9. '250' → logprob: -10.945064544677734
    10. '*' → logprob: -10.945064544677734

Token 107: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08352641761302948
    2. ' *' → logprob: -2.708526372909546
    3. ' ' → logprob: -4.458526611328125
    4. '*' → logprob: -6.333526611328125
    5. '00' → logprob: -10.271026611328125
    6. '000' → logprob: -10.958526611328125
    7. ' ' → logprob: -11.458526611328125
    8. '  ' → logprob: -11.583526611328125
    9. ' *
' → logprob: -11.896026611328125
    10. ' **' → logprob: -11.958526611328125

Token 108: ' unités' (ID: 176121)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.31423529982566833
    2. ' ' → logprob: -1.8142353296279907
    3. ')' → logprob: -2.314235210418701
    4. ' *' → logprob: -5.314235210418701
    5. ' //' → logprob: -6.314235210418701
    6. '*' → logprob: -8.18923568725586
    7. '0' → logprob: -8.31423568725586
    8. '500' → logprob: -9.43923568725586
    9. 'X' → logprob: -9.56423568725586
    10. ' )
' → logprob: -9.81423568725586

Token 109: '.
' (ID: 558)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3336949646472931
    2. '*' → logprob: -2.0836949348449707
    3. ' *' → logprob: -2.4586949348449707
    4. ')' → logprob: -3.3336949348449707
    5. 'X' → logprob: -3.9586949348449707
    6. ' //' → logprob: -5.583694934844971
    7. '#' → logprob: -5.833694934844971
    8. ' 
' → logprob: -5.958694934844971
    9. ' )' → logprob: -6.083694934844971
    10. '0' → logprob: -6.333694934844971

Token 110: 'ans' (ID: 616)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2730693519115448
    2. '*' → logprob: -2.273069381713867
    3. ')' → logprob: -3.273069381713867
    4. 'X' → logprob: -3.398069381713867
    5. '#' → logprob: -3.648069381713867
    6. ' *' → logprob: -4.773069381713867
    7. '_' → logprob: -4.898069381713867
    8. '<|end|>' → logprob: -4.898069381713867
    9. ' 
' → logprob: -5.523069381713867
    10. ' //' → logprob: -6.773069381713867

Token 111: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2459213137626648
    2. ' =' → logprob: -1.7459213733673096
    3. '=' → logprob: -3.8709213733673096
    4. 's' → logprob: -4.1209211349487305
    5. ' ' → logprob: -5.4959211349487305
    6. ' _' → logprob: -6.8709211349487305
    7. '1' → logprob: -7.9959211349487305
    8. '500' → logprob: -7.9959211349487305
    9. '_space' → logprob: -9.49592113494873
    10. 'es' → logprob: -9.49592113494873

Token 112: ' (' (ID: 350)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.2302669733762741
    2. ' X' → logprob: -1.6052669286727905
    3. '(X' → logprob: -5.60526704788208
    4. ' (' → logprob: -6.85526704788208
    5. ' ' → logprob: -9.855266571044922
    6. '(' → logprob: -9.980266571044922
    7. '	X' → logprob: -12.980266571044922
    8. ' ' → logprob: -13.480266571044922
    9. '   ' → logprob: -13.730266571044922
    10. 'x' → logprob: -13.730266571044922

Token 113: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0004884536610916257
    2. ' X' → logprob: -7.62548828125
    3. ')' → logprob: -15.87548828125
    4. '500' → logprob: -16.25048828125
    5. 'x' → logprob: -16.50048828125
    6. ' ' → logprob: -16.50048828125
    7. '(X' → logprob: -17.00048828125
    8. '   ' → logprob: -17.12548828125
    9. '	X' → logprob: -18.75048828125
    10. '#' → logprob: -19.25048828125

Token 114: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.013017749413847923
    2. '//' → logprob: -5.013017654418945
    3. ')' → logprob: -5.263017654418945
    4. ' )' → logprob: -7.013017654418945
    5. ' ' → logprob: -9.013017654418945
    6. ')//' → logprob: -9.638017654418945
    7. ' ' → logprob: -11.513017654418945
    8. ' //
' → logprob: -13.888017654418945
    9. '#' → logprob: -14.325517654418945
    10. '1' → logprob: -14.388017654418945

Token 115: ' ' (ID: 220)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.00043949027894996107
    2. ' ' → logprob: -7.750439643859863
    3. '5' → logprob: -12.250439643859863
    4. '100' → logprob: -13.125439643859863
    5. '  ' → logprob: -13.875439643859863
    6. '50' → logprob: -14.750439643859863
    7. '   ' → logprob: -15.250439643859863
    8. '1' → logprob: -16.250438690185547
    9. ')' → logprob: -16.687938690185547
    10. '501' → logprob: -17.187938690185547

Token 116: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.0009220616775564849
    2. ' ' → logprob: -7.125922203063965
    3. '100' → logprob: -9.750922203063965
    4. '5' → logprob: -10.250922203063965
    5. '50' → logprob: -10.875922203063965
    6. '  ' → logprob: -12.750922203063965
    7. '   ' → logprob: -14.313422203063965
    8. '1' → logprob: -14.875922203063965
    9. '10' → logprob: -15.625922203063965
    10. '(' → logprob: -16.37592124938965

Token 117: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003280751989223063
    2. ' )' → logprob: -8.125328063964844
    3. ')*' → logprob: -10.375328063964844
    4. '*' → logprob: -14.125328063964844
    5. ' *' → logprob: -16.625328063964844
    6. ' ' → logprob: -17.125328063964844
    7. '0' → logprob: -17.375328063964844
    8. '*)' → logprob: -17.500328063964844
    9. '))' → logprob: -18.250328063964844
    10. '1' → logprob: -18.250328063964844

Token 118: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.005305858328938484
    2. '*' → logprob: -5.255305767059326
    3. ' ' → logprob: -10.130306243896484
    4. ' ' → logprob: -10.630306243896484
    5. ')' → logprob: -12.755306243896484
    6. '0' → logprob: -13.005306243896484
    7. '100' → logprob: -14.255306243896484
    8. ' **' → logprob: -14.505306243896484
    9. '1' → logprob: -14.755306243896484
    10. '2' → logprob: -14.755306243896484

Token 119: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.01341044157743454
    2. ' ' → logprob: -5.013410568237305
    3. '500' → logprob: -5.013410568237305
    4. '1' → logprob: -10.888410568237305
    5. '50' → logprob: -13.450910568237305
    6. '5' → logprob: -13.638410568237305
    7. '0' → logprob: -14.138410568237305
    8. '10' → logprob: -14.638410568237305
    9. '   ' → logprob: -14.700910568237305
    10. '  ' → logprob: -15.013410568237305

Token 120: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.07947845757007599
    2. '500' → logprob: -2.5794785022735596
    3. ' ' → logprob: -7.7044782638549805
    4. '1' → logprob: -9.57947826385498
    5. '50' → logprob: -10.45447826385498
    6. '5' → logprob: -10.82947826385498
    7. '10' → logprob: -11.32947826385498
    8. '0' → logprob: -13.26697826385498
    9. '  ' → logprob: -13.26697826385498
    10. '   ' → logprob: -13.51697826385498

Token 121: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005079957190901041
    2. '<|end|>' → logprob: -8.500508308410645
    3. ')' → logprob: -8.750508308410645
    4. ' ' → logprob: -9.000508308410645
    5. ' 
' → logprob: -11.625508308410645
    6. '
' → logprob: -12.750508308410645
    7. '  
' → logprob: -13.125508308410645
    8. ' ' → logprob: -13.625508308410645
    9. '#' → logprob: -13.750508308410645
    10. '\n' → logprob: -13.875508308410645

Token 122: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 123: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24853993952274323
    2. '<|end|>' → logprob: -2.123539924621582
    3. 'print' → logprob: -2.873539924621582
    4. '#' → logprob: -3.373539924621582
    5. '
' → logprob: -5.998539924621582
    6. '' → logprob: -6.623539924621582
    7. ' ' → logprob: -6.748539924621582
    8. '\n' → logprob: -6.873539924621582
    9. '```' → logprob: -6.998539924621582
    10. ')' → logprob: -6.998539924621582

Token 124: ' Mise' (ID: 157932)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.659005157416686e-05
    2. ' print' → logprob: -9.875066757202148
    3. 'prin' → logprob: -12.250066757202148
    4. '#' → logprob: -12.375066757202148
    5. 'pr' → logprob: -12.875066757202148
    6. 'Print' → logprob: -13.375066757202148
    7. '#print' → logprob: -14.250066757202148
    8. 'p' → logprob: -14.250066757202148
    9. 'pri' → logprob: -14.625066757202148
    10. '```' → logprob: -17.25006675720215

Token 125: ' à' (ID: 1221)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.024195322766900063
    2. '#' → logprob: -4.774195194244385
    3. ' =' → logprob: -6.024195194244385
    4. 'à' → logprob: -6.274195194244385
    5. 'au' → logprob: -6.274195194244385
    6. ' print' → logprob: -6.274195194244385
    7. '=' → logprob: -6.399195194244385
    8. ' à' → logprob: -6.649195194244385
    9. 'de' → logprob: -7.024195194244385
    10. ' de' → logprob: -7.149195194244385

Token 126: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.01873837783932686
    2. 'jou' → logprob: -4.393738269805908
    3. 'print' → logprob: -5.393738269805908
    4. 'jours' → logprob: -7.393738269805908
    5. '```' → logprob: -8.268738746643066
    6. 'dis' → logprob: -8.393738746643066
    7. ' jour' → logprob: -9.143738746643066
    8. ' ' → logprob: -9.768738746643066
    9. 'place' → logprob: -9.893738746643066
    10. 'day' → logprob: -10.268738746643066

Token 127: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7058749198913574
    2. 'X' → logprob: -1.4558749198913574
    3. 'de' → logprob: -2.0808749198913574
    4. 'print' → logprob: -2.2058749198913574
    5. 'ans' → logprob: -4.580874919891357
    6. ' =' → logprob: -4.705874919891357
    7. ' du' → logprob: -5.830874919891357
    8. '=' → logprob: -5.830874919891357
    9. ' ans' → logprob: -5.955874919891357
    10. ' X' → logprob: -5.955874919891357

Token 128: ' la' (ID: 557)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.004511889070272446
    2. 'ans' → logprob: -5.754511833190918
    3. ' X' → logprob: -6.754511833190918
    4. 'la' → logprob: -10.129511833190918
    5. ' ans' → logprob: -10.129511833190918
    6. 'x' → logprob: -10.754511833190918
    7. 'l' → logprob: -10.879511833190918
    8. '#' → logprob: -11.254511833190918
    9. 'print' → logprob: -11.254511833190918
    10. ' la' → logprob: -12.129511833190918

Token 129: ' valeur' (ID: 41664)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -1.047849178314209
    2. ' valeur' → logprob: -1.422849178314209
    3. 'variable' → logprob: -2.172849178314209
    4. ' variable' → logprob: -2.422849178314209
    5. 'print' → logprob: -2.672849178314209
    6. 'ans' → logprob: -2.922849178314209
    7. ' X' → logprob: -3.672849178314209
    8. 'val' → logprob: -4.172849178314209
    9. 'value' → logprob: -4.422849178314209
    10. ' ans' → logprob: -5.172849178314209

Token 130: ' de' (ID: 334)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.5945820212364197
    2. ' de' → logprob: -1.2195820808410645
    3. 'de' → logprob: -2.0945820808410645
    4. ' X' → logprob: -3.8445820808410645
    5. 'ans' → logprob: -5.7195820808410645
    6. ' ans' → logprob: -5.7195820808410645
    7. 's' → logprob: -7.9695820808410645
    8. ' ' → logprob: -8.844581604003906
    9. 'd' → logprob: -9.094581604003906
    10. '_' → logprob: -9.094581604003906

Token 131: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.20338726043701172
    2. 'ans' → logprob: -1.7033872604370117
    3. ' ans' → logprob: -6.828387260437012
    4. ' X' → logprob: -7.078387260437012
    5. 'x' → logprob: -11.078387260437012
    6. '`' → logprob: -12.328387260437012
    7. 'Y' → logprob: -12.578387260437012
    8. 'answer' → logprob: -12.703387260437012
    9. '(ans' → logprob: -12.953387260437012
    10. '```' → logprob: -12.953387260437012

Token 132: ' pour' (ID: 1930)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.5783298015594482
    2. ' =' → logprob: -0.9533298015594482
    3. ' X' → logprob: -3.8283298015594482
    4. 'X' → logprob: -4.703330039978027
    5. ' -' → logprob: -4.953330039978027
    6. ' %=' → logprob: -5.078330039978027
    7. '=' → logprob: -5.203330039978027
    8. ' ' → logprob: -6.203330039978027
    9. '-' → logprob: -6.578330039978027
    10. '-=' → logprob: -8.203330039978027

Token 133: ' trouver' (ID: 23195)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.48349663615226746
    2. ' X' → logprob: -0.9834966659545898
    3. 're' → logprob: -6.10849666595459
    4. 'prendre' → logprob: -6.73349666595459
    5. ' refl' → logprob: -6.85849666595459
    6. 'reflect' → logprob: -7.60849666595459
    7. 'le' → logprob: -7.85849666595459
    8. ' enlever' → logprob: -7.85849666595459
    9. ' retirer' → logprob: -7.98349666595459
    10. ' prendre' → logprob: -7.98349666595459

Token 134: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.5335692763328552
    2. ' le' → logprob: -0.9085692763328552
    3. ' la' → logprob: -6.5335693359375
    4. 'la' → logprob: -6.7835693359375
    5. ' combien' → logprob: -6.7835693359375
    6. 'l' → logprob: -6.9085693359375
    7. ' ' → logprob: -7.2835693359375
    8. ' X' → logprob: -7.2835693359375
    9. 'X' → logprob: -7.4085693359375
    10. 'les' → logprob: -7.4085693359375

Token 135: ' reste' (ID: 26769)
  Prédit: 'reste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reste' → logprob: -0.9643714427947998
    2. 'nombre' → logprob: -1.2143714427947998
    3. ' reste' → logprob: -1.5893714427947998
    4. ' nombre' → logprob: -2.2143714427948
    5. ' montant' → logprob: -5.589371681213379
    6. 're' → logprob: -6.589371681213379
    7. 'rest' → logprob: -6.964371681213379
    8. '#' → logprob: -7.464371681213379
    9. ' remainder' → logprob: -7.589371681213379
    10. ' #' → logprob: -7.839371681213379

Token 136: ' après' (ID: 16460)
  Prédit: ' X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' X' → logprob: -0.7288567423820496
    2. 'X' → logprob: -1.2288568019866943
    3. ' =' → logprob: -1.6038568019866943
    4. '=' → logprob: -4.353856563568115
    5. '%' → logprob: -5.853856563568115
    6. 's' → logprob: -6.103856563568115
    7. ' %=' → logprob: -6.603856563568115
    8. ' ' → logprob: -6.853856563568115
    9. ' =
' → logprob: -7.478856563568115
    10. ',' → logprob: -7.478856563568115

Token 137: ' avoir' (ID: 16595)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7860230803489685
    2. ' la' → logprob: -1.7860231399536133
    3. ' l' → logprob: -2.2860231399536133
    4. 'la' → logprob: -2.4110231399536133
    5. ' avoir' → logprob: -3.1610231399536133
    6. 'le' → logprob: -3.4110231399536133
    7. 'division' → logprob: -3.6610231399536133
    8. ' le' → logprob: -4.161023139953613
    9. ' division' → logprob: -4.161023139953613
    10. 'avoir' → logprob: -4.411023139953613

Token 138: ' utilisé' (ID: 53138)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.5511007905006409
    2. 'div' → logprob: -2.301100730895996
    3. 'sou' → logprob: -2.426100730895996
    4. 'en' → logprob: -2.676100730895996
    5. ' retir' → logprob: -3.301100730895996
    6. 'util' → logprob: -3.676100730895996
    7. 'dé' → logprob: -3.676100730895996
    8. 'pris' → logprob: -4.051100730895996
    9. 'ret' → logprob: -4.676100730895996
    10. 'ex' → logprob: -4.801100730895996

Token 139: ' le' (ID: 505)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.013767820782959461
    2. 'les' → logprob: -4.763767719268799
    3. ' des' → logprob: -5.638767719268799
    4. ' ' → logprob: -7.138767719268799
    5. ' le' → logprob: -8.263768196105957
    6. ' (' → logprob: -9.013768196105957
    7. '500' → logprob: -9.263768196105957
    8. 'des' → logprob: -9.888768196105957
    9. '#' → logprob: -10.388768196105957
    10. ' la' → logprob: -10.513768196105957

Token 140: ' maximum' (ID: 10562)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.6501654386520386
    2. ' nombre' → logprob: -1.5251654386520386
    3. '500' → logprob: -1.9001654386520386
    4. 'bil' → logprob: -3.275165557861328
    5. 'ans' → logprob: -4.150165557861328
    6. 'mont' → logprob: -4.525165557861328
    7. 'b' → logprob: -5.025165557861328
    8. ' montant' → logprob: -5.025165557861328
    9. '100' → logprob: -5.650165557861328
    10. 'calcul' → logprob: -5.650165557861328

Token 141: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5349896550178528
    2. 'de' → logprob: -1.659989595413208
    3. ' des' → logprob: -2.034989595413208
    4. ' possible' → logprob: -3.659989595413208
    5. 'possible' → logprob: -3.909989595413208
    6. 'X' → logprob: -4.409989833831787
    7. '500' → logprob: -4.409989833831787
    8. 'des' → logprob: -4.534989833831787
    9. ' X' → logprob: -5.409989833831787
    10. ' ' → logprob: -5.534989833831787

Token 142: ' billets' (ID: 146301)
  Prédit: 'bil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bil' → logprob: -0.1176430732011795
    2. ' billets' → logprob: -2.742643117904663
    3. ' bil' → logprob: -3.492643117904663
    4. '500' → logprob: -4.367642879486084
    5. 'b' → logprob: -6.242642879486084
    6. ' ' → logprob: -6.617642879486084
    7. ' billet' → logprob: -9.242643356323242
    8. '	b' → logprob: -10.492643356323242
    9. 'tickets' → logprob: -10.992643356323242
    10. 'bi' → logprob: -11.742643356323242

Token 143: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5878755450248718
    2. 'X' → logprob: -1.7128756046295166
    3. '=' → logprob: -2.2128756046295166
    4. 'de' → logprob: -3.0878756046295166
    5. ' de' → logprob: -3.0878756046295166
    6. ' X' → logprob: -3.7128756046295166
    7. '500' → logprob: -3.9628756046295166
    8. ' %=' → logprob: -5.0878753662109375
    9. ' ' → logprob: -5.3378753662109375
    10. '%=' → logprob: -5.9628753662109375

Token 144: ' ' (ID: 220)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.0024779161904007196
    2. ' ' → logprob: -6.002478122711182
    3. 'bil' → logprob: -14.127477645874023
    4. 'cin' → logprob: -15.377477645874023
    5. '  ' → logprob: -15.689977645874023
    6. ' ' → logprob: -15.939977645874023
    7. '100' → logprob: -16.064977645874023
    8. '```' → logprob: -16.189977645874023
    9. 'c' → logprob: -16.314977645874023
    10. 'b' → logprob: -16.377477645874023

Token 145: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -9.674858301877975e-05
    2. ' ' → logprob: -9.250096321105957
    3. 'bil' → logprob: -15.375096321105957
    4. '```' → logprob: -16.562597274780273
    5. '100' → logprob: -16.875097274780273
    6. '5' → logprob: -17.187597274780273
    7. '  ' → logprob: -17.250097274780273
    8. 'cin' → logprob: -17.437597274780273
    9. 'b' → logprob: -17.687597274780273
    10. '50' → logprob: -17.750097274780273

Token 146: ' :
' (ID: 10039)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.08550573885440826
    2. ' X' → logprob: -2.710505723953247
    3. ' =' → logprob: -4.960505962371826
    4. '=' → logprob: -5.210505962371826
    5. ' ' → logprob: -7.085505962371826
    6. 's' → logprob: -7.460505962371826
    7. 'x' → logprob: -7.960505962371826
    8. ' 
' → logprob: -8.210505485534668
    9. ',' → logprob: -8.460505485534668
    10. '.' → logprob: -9.335505485534668

Token 147: '#' (ID: 2)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.25592002272605896
    2. ' X' → logprob: -1.5059200525283813
    3. ' 
' → logprob: -6.005919933319092
    4. '
' → logprob: -6.630919933319092
    5. '
' → logprob: -10.13092041015625
    6. '\n' → logprob: -10.38092041015625
    7. '  
' → logprob: -11.13092041015625
    8. '' → logprob: -11.25592041015625
    9. '\' → logprob: -11.25592041015625
    10. 'x' → logprob: -11.38092041015625

Token 148: ' L' (ID: 451)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.01251224149018526
    2. ' X' → logprob: -4.38751220703125
    3. '```' → logprob: -14.01251220703125
    4. '
' → logprob: -14.26251220703125
    5. 'x' → logprob: -14.76251220703125
    6. ' ' → logprob: -15.51251220703125
    7. '`' → logprob: -15.76251220703125
    8. '500' → logprob: -16.26251220703125
    9. '``' → logprob: -16.51251220703125
    10. ' 
' → logprob: -16.63751220703125

Token 149: ''op' (ID: 70747)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.022590812295675278
    2. 'e' → logprob: -4.772590637207031
    3. '#' → logprob: -5.147590637207031
    4. 'a' → logprob: -6.522590637207031
    5. ' =' → logprob: -6.522590637207031
    6. '=' → logprob: -6.772590637207031
    7. ''utilisateur' → logprob: -7.147590637207031
    8. ' X' → logprob: -7.897590637207031
    9. ''' → logprob: -7.897590637207031
    10. ''op' → logprob: -8.397590637207031

Token 150: 'érateur' (ID: 108528)
  Prédit: ''op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''op' → logprob: -0.8460301756858826
    2. 'es' → logprob: -1.4710302352905273
    3. 'érateur' → logprob: -2.2210302352905273
    4. 'ève' → logprob: -2.8460302352905273
    5. ''utilisateur' → logprob: -2.8460302352905273
    6. ' opér' → logprob: -4.096030235290527
    7. 'operator' → logprob: -4.471030235290527
    8. 'p' → logprob: -4.596030235290527
    9. 'isateur' → logprob: -4.721030235290527
    10. 'op' → logprob: -4.846030235290527

Token 151: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.1729494333267212
    2. ' %=' → logprob: -2.2979493141174316
    3. '%=' → logprob: -3.2979493141174316
    4. ' %' → logprob: -4.047949314117432
    5. '=' → logprob: -6.422949314117432
    6. ' =' → logprob: -6.547949314117432
    7. 'X' → logprob: -7.672949314117432
    8. ' ' → logprob: -8.79794979095459
    9. ' X' → logprob: -9.29794979095459
    10. 're' → logprob: -9.54794979095459

Token 152: ' donne' (ID: 30004)
  Prédit: ' permet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' permet' → logprob: -1.03632390499115
    2. ' X' → logprob: -1.53632390499115
    3. 'X' → logprob: -2.0363240242004395
    4. ' ' → logprob: -2.2863240242004395
    5. ' retourne' → logprob: -3.0363240242004395
    6. '(X' → logprob: -3.5363240242004395
    7. ' =' → logprob: -3.5363240242004395
    8. ' (' → logprob: -4.1613240242004395
    9. '=' → logprob: -4.6613240242004395
    10. ' est' → logprob: -4.7863240242004395

Token 153: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.06466569006443024
    2. 'X' → logprob: -3.8146657943725586
    3. 'le' → logprob: -4.064665794372559
    4. ' X' → logprob: -4.189665794372559
    5. ' la' → logprob: -4.939665794372559
    6. ' ' → logprob: -7.564665794372559
    7. ' ' → logprob: -9.314665794372559
    8. '_le' → logprob: -9.314665794372559
    9. '(X' → logprob: -9.564665794372559
    10. ' (' → logprob: -9.564665794372559

Token 154: ' reste' (ID: 26769)
  Prédit: ' reste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reste' → logprob: -0.18795809149742126
    2. 'reste' → logprob: -1.8129581212997437
    3. 're' → logprob: -5.687958240509033
    4. 'X' → logprob: -6.562958240509033
    5. 'rest' → logprob: -6.562958240509033
    6. ' remainder' → logprob: -7.437958240509033
    7. ' X' → logprob: -7.562958240509033
    8. 'mod' → logprob: -7.812958240509033
    9. ' rest' → logprob: -9.562957763671875
    10. ' ' → logprob: -9.562957763671875

Token 155: ' de' (ID: 334)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -1.0268009901046753
    2. ' de' → logprob: -1.0268009901046753
    3. ' X' → logprob: -1.4018009901046753
    4. 'de' → logprob: -3.526801109313965
    5. ' ' → logprob: -6.526801109313965
    6. ' =' → logprob: -6.526801109313965
    7. ' (' → logprob: -6.651801109313965
    8. ' après' → logprob: -7.026801109313965
    9. 's' → logprob: -7.651801109313965
    10. '=' → logprob: -7.901801109313965

Token 156: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.012887243181467056
    2. ' X' → logprob: -5.512887477874756
    3. 'division' → logprob: -5.887887477874756
    4. 'la' → logprob: -6.387887477874756
    5. 'X' → logprob: -6.887887477874756
    6. ' ' → logprob: -7.012887477874756
    7. ' division' → logprob: -7.012887477874756
    8. 'div' → logprob: -7.137887477874756
    9. 'l' → logprob: -8.012887001037598
    10. ' l' → logprob: -8.262887001037598

Token 157: ' division' (ID: 21629)
  Prédit: 'division'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'division' → logprob: -0.36324724555015564
    2. ' division' → logprob: -1.238247275352478
    3. 'div' → logprob: -4.238247394561768
    4. 'X' → logprob: -8.73824691772461
    5. ' X' → logprob: -9.86324691772461
    6. ' div' → logprob: -11.23824691772461
    7. ' ' → logprob: -11.36324691772461
    8. '#' → logprob: -12.48824691772461
    9. ' ' → logprob: -12.98824691772461
    10. 'Division' → logprob: -12.98824691772461

Token 158: ' entière' (ID: 61583)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.31502267718315125
    2. ' X' → logprob: -1.3150227069854736
    3. ' de' → logprob: -6.5650224685668945
    4. ' ' → logprob: -9.565022468566895
    5. 'de' → logprob: -9.565022468566895
    6. '#' → logprob: -10.190022468566895
    7. ',' → logprob: -10.440022468566895
    8. 'x' → logprob: -10.565022468566895
    9. ' (' → logprob: -10.565022468566895
    10. 's' → logprob: -10.690022468566895

Token 159: ' (' (ID: 350)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.43172845244407654
    2. ' X' → logprob: -1.056728482246399
    3. ' de' → logprob: -6.681728363037109
    4. ',' → logprob: -7.431728363037109
    5. '.' → logprob: -7.931728363037109
    6. ' ' → logprob: -8.30672836303711
    7. 's' → logprob: -8.93172836303711
    8. ' restante' → logprob: -10.05672836303711
    9. ' ,' → logprob: -10.18172836303711
    10. ' ' → logprob: -10.18172836303711

Token 160: 'mod' (ID: 4847)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.5764089822769165
    2. ' X' → logprob: -0.8264089822769165
    3. ')' → logprob: -7.826408863067627
    4. ' )' → logprob: -10.201409339904785
    5. ' ' → logprob: -10.826409339904785
    6. ' de' → logprob: -12.451409339904785
    7. ')
' → logprob: -13.451409339904785
    8. ' ' → logprob: -13.576409339904785
    9. 'x' → logprob: -13.701409339904785
    10. ' )
' → logprob: -14.201409339904785

Token 161: 'ulo' (ID: 5953)
  Prédit: 'ulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulo' → logprob: -0.15857763588428497
    2. 'ule' → logprob: -2.5335776805877686
    3. 'ulaire' → logprob: -3.4085776805877686
    4. ')' → logprob: -3.9085776805877686
    5. 'ulos' → logprob: -6.0335774421691895
    6. 'X' → logprob: -6.0335774421691895
    7. 'ULO' → logprob: -6.1585774421691895
    8. 'ulus' → logprob: -7.0335774421691895
    9. '500' → logprob: -7.1585774421691895
    10. 'ale' → logprob: -7.5335774421691895

Token 162: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15126822888851166
    2. ' )' → logprob: -2.276268243789673
    3. 'X' → logprob: -4.151268005371094
    4. ' X' → logprob: -4.401268005371094
    5. ').' → logprob: -5.026268005371094
    6. ' )
' → logprob: -7.276268005371094
    7. ')
' → logprob: -7.276268005371094
    8. ' ).' → logprob: -7.526268005371094
    9. ' de' → logprob: -8.026268005371094
    10. ' ' → logprob: -8.401268005371094

Token 163: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.05663670226931572
    2. ' X' → logprob: -2.9316368103027344
    3. '
' → logprob: -6.556636810302734
    4. ' 
' → logprob: -8.306636810302734
    5. '
' → logprob: -10.681636810302734
    6. '' → logprob: -11.181636810302734
    7. 'x' → logprob: -11.556636810302734
    8. '  
' → logprob: -11.806636810302734
    9. '```' → logprob: -12.056636810302734
    10. 's' → logprob: -12.431636810302734

Token 164: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9264214634895325
    2. ' =' → logprob: -0.9264214634895325
    3. ' %=' → logprob: -1.9264214038848877
    4. '%' → logprob: -3.4264214038848877
    5. '%=' → logprob: -3.5514214038848877
    6. ' %' → logprob: -6.801421642303467
    7. ' ' → logprob: -10.301421165466309
    8. ' ' → logprob: -10.551421165466309
    9. 'X' → logprob: -11.051421165466309
    10. '=X' → logprob: -11.551421165466309

Token 165: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.47408005595207214
    2. ' X' → logprob: -0.9740800857543945
    3. ' ' → logprob: -13.599080085754395
    4. 'x' → logprob: -13.974080085754395
    5. '	X' → logprob: -14.849080085754395
    6. ' ' → logprob: -15.349080085754395
    7. ' x' → logprob: -16.724079132080078
    8. '  ' → logprob: -16.849079132080078
    9. '10' → logprob: -17.224079132080078
    10. '(X' → logprob: -17.349079132080078

Token 166: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.3132653534412384
    2. ' %' → logprob: -1.313265323638916
    3. ' ' → logprob: -13.188265800476074
    4. 'X' → logprob: -14.188265800476074
    5. ' ' → logprob: -14.313265800476074
    6. ' X' → logprob: -14.938265800476074
    7. '#' → logprob: -17.438264846801758
    8. ')' → logprob: -17.813264846801758
    9. '%s' → logprob: -17.938264846801758
    10. '%i' → logprob: -18.563264846801758

Token 167: ' ' (ID: 220)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.006728161126375198
    2. ' ' → logprob: -5.006728172302246
    3. '5' → logprob: -11.506728172302246
    4. ' ' → logprob: -13.881728172302246
    5. '50' → logprob: -14.131728172302246
    6. '501' → logprob: -15.194228172302246
    7. '  ' → logprob: -15.444228172302246
    8. '```' → logprob: -16.06922721862793
    9. '510' → logprob: -17.13172721862793
    10. ' 
' → logprob: -17.25672721862793

Token 168: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '501' → logprob: -18.875003814697266
    4. '```' → logprob: -19.375003814697266
    5. '5' → logprob: -19.625003814697266
    6. '  ' → logprob: -20.687503814697266
    7. '`' → logprob: -20.937503814697266
    8. '510' → logprob: -21.000003814697266
    9. '50' → logprob: -21.125003814697266
    10. '{' → logprob: -21.187503814697266

Token 169: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 170: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.008862737566232681
    2. 'ans' → logprob: -6.0088629722595215
    3. 'if' → logprob: -6.6338629722595215
    4. '```' → logprob: -6.6338629722595215
    5. '+' → logprob: -6.8838629722595215
    6. 'print' → logprob: -7.1338629722595215
    7. '<|end|>' → logprob: -7.2588629722595215
    8. 'n' → logprob: -8.758862495422363
    9. 'rest' → logprob: -9.633862495422363
    10. '\n' → logprob: -9.633862495422363

Token 171: ' Calcul' (ID: 57243)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3915656507015228
    2. '#' → logprob: -1.1415656805038452
    3. 'print' → logprob: -6.641565799713135
    4. 'aj' → logprob: -6.766565799713135
    5. 'result' → logprob: -8.266565322875977
    6. '```' → logprob: -8.516565322875977
    7. 'if' → logprob: -8.641565322875977
    8. 'answer' → logprob: -9.141565322875977
    9. 'additional' → logprob: -9.141565322875977
    10. 'bil' → logprob: -9.266565322875977

Token 172: ' du' (ID: 1462)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.5555537343025208
    2. ' (' → logprob: -1.930553674697876
    3. '#' → logprob: -2.430553674697876
    4. 'des' → logprob: -2.430553674697876
    5. '<|end|>' → logprob: -3.430553674697876
    6. ' de' → logprob: -4.305553913116455
    7. '(' → logprob: -4.805553913116455
    8. 's' → logprob: -4.930553913116455
    9. ' ' → logprob: -4.930553913116455
    10. '_' → logprob: -5.055553913116455

Token 173: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.002168105449527502
    2. ' nombre' → logprob: -6.25216817855835
    3. '(nombre' → logprob: -8.502167701721191
    4. 'nb' → logprob: -11.377167701721191
    5. 'Nombre' → logprob: -12.252167701721191
    6. ' (' → logprob: -12.252167701721191
    7. 'n' → logprob: -12.377167701721191
    8. '_nombre' → logprob: -13.002167701721191
    9. 'ans' → logprob: -13.377167701721191
    10. '(' → logprob: -13.627167701721191

Token 174: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.0728835016489029
    2. 'de' → logprob: -2.8228836059570312
    3. '#' → logprob: -4.697883605957031
    4. ' ' → logprob: -7.197883605957031
    5. ' ' → logprob: -8.072883605957031
    6. '_' → logprob: -8.697883605957031
    7. 'd' → logprob: -9.197883605957031
    8. '<|end|>' → logprob: -9.322883605957031
    9. ' #' → logprob: -9.572883605957031
    10. '_de' → logprob: -9.947883605957031

Token 175: ' pièces' (ID: 49165)
  Prédit: ' billets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' billets' → logprob: -0.41477087140083313
    2. 'bil' → logprob: -1.1647708415985107
    3. ' bil' → logprob: -4.03977108001709
    4. 'b' → logprob: -5.91477108001709
    5. ' billet' → logprob: -6.16477108001709
    6. '200' → logprob: -6.28977108001709
    7. '100' → logprob: -6.78977108001709
    8. '250' → logprob: -7.53977108001709
    9. ' ' → logprob: -7.53977108001709
    10. ' nombre' → logprob: -8.53977108001709

Token 176: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.2045001983642578
    2. 'de' → logprob: -1.7045001983642578
    3. 'd' → logprob: -6.329500198364258
    4. '#' → logprob: -7.579500198364258
    5. ' d' → logprob: -8.704500198364258
    6. ' ' → logprob: -8.829500198364258
    7. ' ' → logprob: -9.204500198364258
    8. '500' → logprob: -9.329500198364258
    9. '100' → logprob: -9.579500198364258
    10. '_' → logprob: -10.079500198364258

Token 177: ' ' (ID: 220)
  Prédit: '200'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -0.29934465885162354
    2. '100' → logprob: -1.4243446588516235
    3. ' ' → logprob: -4.174344539642334
    4. '50' → logprob: -6.924344539642334
    5. '250' → logprob: -7.049344539642334
    6. '20' → logprob: -7.549344539642334
    7. '2' → logprob: -9.549345016479492
    8. '10' → logprob: -9.924345016479492
    9. '1' → logprob: -10.174345016479492
    10. '500' → logprob: -10.674345016479492

Token 178: '5' (ID: 20)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.2293727844953537
    2. '200' → logprob: -1.6043727397918701
    3. '50' → logprob: -6.104372978210449
    4. '250' → logprob: -7.229372978210449
    5. ' ' → logprob: -7.979372978210449
    6. '20' → logprob: -8.47937297821045
    7. '10' → logprob: -8.60437297821045
    8. '500' → logprob: -9.10437297821045
    9. '5' → logprob: -10.35437297821045
    10. '1' → logprob: -10.35437297821045

Token 179: ' que' (ID: 661)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8305826783180237
    2. '#' → logprob: -1.955582618713379
    3. ' (' → logprob: -2.330582618713379
    4. ')' → logprob: -2.955582618713379
    5. ' ' → logprob: -3.080582618713379
    6. 's' → logprob: -3.205582618713379
    7. 'de' → logprob: -3.705582618713379
    8. ' =' → logprob: -3.955582618713379
    9. '(' → logprob: -4.205582618713379
    10. '*' → logprob: -4.330582618713379

Token 180: ' l' (ID: 305)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.08829426765441895
    2. '(' → logprob: -3.713294267654419
    3. 'X' → logprob: -4.08829402923584
    4. '(X' → logprob: -4.08829402923584
    5. ' X' → logprob: -4.71329402923584
    6. ' ' → logprob: -5.08829402923584
    7. '#' → logprob: -5.58829402923584
    8. 'on' → logprob: -6.71329402923584
    9. '=' → logprob: -7.83829402923584
    10. '()' → logprob: -7.96329402923584

Token 181: ''on' (ID: 25812)
  Prédit: ''on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''on' → logprob: -0.00550007214769721
    2. 'on' → logprob: -5.255499839782715
    3. '_on' → logprob: -9.005499839782715
    4. ''' → logprob: -10.005499839782715
    5. '’on' → logprob: -10.255499839782715
    6. ''ont' → logprob: -11.255499839782715
    7. 'X' → logprob: -11.505499839782715
    8. 'e' → logprob: -12.255499839782715
    9. ' on' → logprob: -12.380499839782715
    10. 'possible' → logprob: -12.505499839782715

Token 182: ' peut' (ID: 9216)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.15717768669128418
    2. '//' → logprob: -2.032177686691284
    3. ' peux' → logprob: -5.282177925109863
    4. '=' → logprob: -6.407177925109863
    5. ' can' → logprob: -6.657177925109863
    6. ' ' → logprob: -6.782177925109863
    7. ' peut' → logprob: -6.907177925109863
    8. '#' → logprob: -7.657177925109863
    9. '*' → logprob: -8.032177925109863
    10. ' ' → logprob: -8.094677925109863

Token 183: ' obtenir' (ID: 54423)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ob' → logprob: -0.013545818626880646
    2. ' obtenir' → logprob: -4.388545989990234
    3. 'obt' → logprob: -7.388545989990234
    4. '=' → logprob: -9.263545989990234
    5. '#' → logprob: -9.263545989990234
    6. ' ob' → logprob: -9.763545989990234
    7. ' =' → logprob: -10.763545989990234
    8. 'avoir' → logprob: -10.763545989990234
    9. ' obten' → logprob: -11.013545989990234
    10. 'don' → logprob: -11.263545989990234

Token 184: ' à' (ID: 1221)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.39318734407424927
    2. '#' → logprob: -2.6431872844696045
    3. ' ans' → logprob: -3.2681872844696045
    4. ':' → logprob: -3.5181872844696045
    5. '(X' → logprob: -3.5181872844696045
    6. '(' → logprob: -3.7681872844696045
    7. ' ' → logprob: -4.018187522888184
    8. '<|end|>' → logprob: -4.018187522888184
    9. '(ans' → logprob: -4.143187522888184
    10. '5' → logprob: -4.268187522888184

Token 185: ' partir' (ID: 12100)
  Prédit: ' partir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' partir' → logprob: -0.5486128926277161
    2. '(X' → logprob: -1.2986128330230713
    3. 'part' → logprob: -2.5486128330230713
    4. '(' → logprob: -3.5486128330230713
    5. ' (' → logprob: -4.04861307144165
    6. 'X' → logprob: -5.04861307144165
    7. '(int' → logprob: -5.29861307144165
    8. 'from' → logprob: -5.54861307144165
    9. '#' → logprob: -5.54861307144165
    10. '(x' → logprob: -6.54861307144165

Token 186: ' du' (ID: 1462)
  Prédit: ' du'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' du' → logprob: -0.0811910629272461
    2. 'du' → logprob: -3.081191062927246
    3. ' de' → logprob: -4.206191062927246
    4. ' (' → logprob: -5.206191062927246
    5. '(X' → logprob: -5.456191062927246
    6. '#' → logprob: -5.581191062927246
    7. 'de' → logprob: -6.456191062927246
    8. '(' → logprob: -6.956191062927246
    9. 'X' → logprob: -7.956191062927246
    10. 'd' → logprob: -8.581191062927246

Token 187: ' montant' (ID: 72364)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.3146672248840332
    2. ' X' → logprob: -1.3146672248840332
    3. '(X' → logprob: -7.314667224884033
    4. ' (' → logprob: -7.689667224884033
    5. 'nombre' → logprob: -9.939666748046875
    6. ' ' → logprob: -10.314666748046875
    7. '5' → logprob: -10.314666748046875
    8. ' montant' → logprob: -10.314666748046875
    9. ' nombre' → logprob: -10.689666748046875
    10. 'mont' → logprob: -11.064666748046875

Token 188: ' restant' (ID: 172358)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4596780240535736
    2. ' X' → logprob: -1.334678053855896
    3. 'X' → logprob: -2.4596779346466064
    4. ' ' → logprob: -4.4596781730651855
    5. '(X' → logprob: -5.5846781730651855
    6. '5' → logprob: -5.9596781730651855
    7. '(' → logprob: -7.9596781730651855
    8. ' de' → logprob: -7.9596781730651855
    9. '#' → logprob: -7.9596781730651855
    10. ' ' → logprob: -8.834677696228027

Token 189: ' X' (ID: 2127)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.07146556675434113
    2. ' ans' → logprob: -3.321465492248535
    3. ':' → logprob: -3.821465492248535
    4. '#' → logprob: -6.321465492248535
    5. ' =' → logprob: -6.321465492248535
    6. ':
' → logprob: -6.321465492248535
    7. ' (' → logprob: -6.696465492248535
    8. '5' → logprob: -6.696465492248535
    9. '(ans' → logprob: -6.821465492248535
    10. 'num' → logprob: -8.071465492248535

Token 190: '.
' (ID: 558)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.03343094512820244
    2. ' ans' → logprob: -4.033431053161621
    3. '
' → logprob: -4.658431053161621
    4. '5' → logprob: -6.283431053161621
    5. 'pieces' → logprob: -7.283431053161621
    6. 'coins' → logprob: -7.783431053161621
    7. 'num' → logprob: -8.033431053161621
    8. '(ans' → logprob: -8.033431053161621
    9. '#' → logprob: -8.158431053161621
    10. ' =' → logprob: -8.533431053161621

Token 191: '#' (ID: 2)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.15327830612659454
    2. ' ans' → logprob: -2.778278350830078
    3. 'coins' → logprob: -3.403278350830078
    4. 'pieces' → logprob: -3.653278350830078
    5. ' coins' → logprob: -5.403278350830078
    6. 'nb' → logprob: -5.653278350830078
    7. 'num' → logprob: -6.028278350830078
    8. 'coin' → logprob: -6.278278350830078
    9. ' pieces' → logprob: -6.528278350830078
    10. 'n' → logprob: -7.028278350830078

Token 192: ' On' (ID: 2160)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.18386568129062653
    2. 'pieces' → logprob: -2.808865785598755
    3. ' ans' → logprob: -2.933865785598755
    4. 'coins' → logprob: -3.808865785598755
    5. ' (' → logprob: -5.183865547180176
    6. 'nb' → logprob: -5.433865547180176
    7. '(' → logprob: -5.558865547180176
    8. 'num' → logprob: -5.683865547180176
    9. ' coins' → logprob: -6.183865547180176
    10. '(ans' → logprob: -6.183865547180176

Token 193: ' prend' (ID: 37463)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3575381338596344
    2. ' =' → logprob: -1.232538104057312
    3. ' ' → logprob: -6.482538223266602
    4. ' #' → logprob: -6.732538223266602
    5. ' //' → logprob: -6.982538223266602
    6. '#' → logprob: -7.232538223266602
    7. ' +=' → logprob: -7.857538223266602
    8. 's' → logprob: -7.982538223266602
    9. 'ans' → logprob: -7.982538223266602
    10. 'continue' → logprob: -7.982538223266602

Token 194: ' à' (ID: 1221)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.25337347388267517
    2. ' le' → logprob: -2.628373384475708
    3. '(' → logprob: -2.753373384475708
    4. '(X' → logprob: -3.253373384475708
    5. 'le' → logprob: -4.003373622894287
    6. ' X' → logprob: -4.878373622894287
    7. 'X' → logprob: -5.003373622894287
    8. ' la' → logprob: -5.628373622894287
    9. ' ' → logprob: -5.628373622894287
    10. ' les' → logprob: -6.003373622894287

Token 195: ' nouveau' (ID: 23184)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.0279525518417358
    2. ' nouveau' → logprob: -2.1529526710510254
    3. 'len' → logprob: -2.2779526710510254
    4. 'new' → logprob: -2.4029526710510254
    5. '5' → logprob: -2.6529526710510254
    6. 'la' → logprob: -3.0279526710510254
    7. '100' → logprob: -3.0279526710510254
    8. 'X' → logprob: -3.4029526710510254
    9. 'div' → logprob: -3.7779526710510254
    10. 'nou' → logprob: -4.152952671051025

Token 196: ' la' (ID: 557)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3846980631351471
    2. '(X' → logprob: -1.2596980333328247
    3. ' X' → logprob: -4.384697914123535
    4. 'X' → logprob: -4.384697914123535
    5. '(' → logprob: -5.134697914123535
    6. ' ' → logprob: -5.509697914123535
    7. ' le' → logprob: -8.634697914123535
    8. 'le' → logprob: -9.759697914123535
    9. ',' → logprob: -9.759697914123535
    10. ' la' → logprob: -9.884697914123535

Token 197: ' division' (ID: 21629)
  Prédit: '(X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.048576466739177704
    2. 'X' → logprob: -3.1735763549804688
    3. ' X' → logprob: -6.298576354980469
    4. 'int' → logprob: -6.923576354980469
    5. '(x' → logprob: -7.173576354980469
    6. ' (' → logprob: -7.548576354980469
    7. '5' → logprob: -7.548576354980469
    8. 'div' → logprob: -8.173576354980469
    9. '(' → logprob: -9.048576354980469
    10. ' ' → logprob: -9.298576354980469

Token 198: ' entière' (ID: 61583)
  Prédit: ' entière'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entière' → logprob: -0.0200811754912138
    2. 'X' → logprob: -4.520081043243408
    3. 'ent' → logprob: -5.145081043243408
    4. ' X' → logprob: -6.895081043243408
    5. 'enti' → logprob: -7.145081043243408
    6. ' enti' → logprob: -8.145081520080566
    7. ' ent' → logprob: -8.520081520080566
    8. ' ' → logprob: -8.645081520080566
    9. '_ent' → logprob: -8.645081520080566
    10. ' //' → logprob: -9.520081520080566

Token 199: ' pour' (ID: 1930)
  Prédit: '(X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.4388495087623596
    2. 'X' → logprob: -1.6888494491577148
    3. ' (' → logprob: -2.563849449157715
    4. ',' → logprob: -3.438849449157715
    5. ' X' → logprob: -3.938849449157715
    6. '()' → logprob: -4.438849449157715
    7. '(' → logprob: -4.688849449157715
    8. ')' → logprob: -4.938849449157715
    9. ' ' → logprob: -6.063849449157715
    10. '#' → logprob: -6.313849449157715

Token 200: ' savoir' (ID: 22835)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7919329404830933
    2. ' calcul' → logprob: -1.6669329404830933
    3. ' X' → logprob: -2.416933059692383
    4. 'X' → logprob: -2.666933059692383
    5. 'div' → logprob: -3.166933059692383
    6. '(X' → logprob: -3.166933059692383
    7. ' div' → logprob: -3.416933059692383
    8. 'calcul' → logprob: -3.666933059692383
    9. ' compter' → logprob: -4.166933059692383
    10. ' ' → logprob: -4.541933059692383

Token 201: ' combien' (ID: 106648)
  Prédit: ' combien'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' combien' → logprob: -0.39630818367004395
    2. 'comb' → logprob: -1.271308183670044
    3. ' comb' → logprob: -3.771308183670044
    4. '(X' → logprob: -4.396307945251465
    5. ' (' → logprob: -5.146307945251465
    6. '(' → logprob: -6.646307945251465
    7. 'nombre' → logprob: -6.771307945251465
    8. ' le' → logprob: -6.896307945251465
    9. 'com' → logprob: -7.896307945251465
    10. 'le' → logprob: -7.896307945251465

Token 202: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.4511091113090515
    2. ' (' → logprob: -2.0761091709136963
    3. '(X' → logprob: -2.3261091709136963
    4. 'de' → logprob: -2.4511091709136963
    5. 'X' → logprob: -3.7011091709136963
    6. '(' → logprob: -4.451108932495117
    7. ' X' → logprob: -4.701108932495117
    8. ' ' → logprob: -5.576108932495117
    9. '   ' → logprob: -7.451108932495117
    10. 'd' → logprob: -7.701108932495117

Token 203: ' fois' (ID: 14697)
  Prédit: ' pièces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pièces' → logprob: -0.78828364610672
    2. 'pi' → logprob: -1.1632835865020752
    3. '5' → logprob: -2.163283586502075
    4. ' ' → logprob: -3.288283586502075
    5. ' pi' → logprob: -3.413283586502075
    6. 'pieces' → logprob: -3.538283586502075
    7. ' pieces' → logprob: -4.663283824920654
    8. 'coins' → logprob: -6.038283824920654
    9. ' coins' → logprob: -6.038283824920654
    10. ' fois' → logprob: -6.413283824920654

Token 204: ' ' (ID: 220)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.25031983852386475
    2. ' X' → logprob: -1.7503198385238647
    3. 'on' → logprob: -4.000319957733154
    4. ' on' → logprob: -4.500319957733154
    5. '5' → logprob: -4.750319957733154
    6. ' ' → logprob: -6.250319957733154
    7. '(X' → logprob: -6.250319957733154
    8. 'le' → logprob: -6.750319957733154
    9. ' (' → logprob: -6.750319957733154
    10. ' de' → logprob: -7.250319957733154

Token 205: '5' (ID: 20)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.018205896019935608
    2. '5' → logprob: -4.8932061195373535
    3. '(X' → logprob: -4.8932061195373535
    4. ' X' → logprob: -6.1432061195373535
    5. '(' → logprob: -8.018205642700195
    6. 'on' → logprob: -8.143205642700195
    7. 'le' → logprob: -9.393205642700195
    8. ' ' → logprob: -9.768205642700195
    9. ' (' → logprob: -9.893205642700195
    10. '500' → logprob: -10.893205642700195

Token 206: ' rent' (ID: 9462)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1604163646697998
    2. 'div' → logprob: -1.6604163646697998
    3. ' X' → logprob: -2.0354163646698
    4. ' div' → logprob: -3.0354163646698
    5. ' peut' → logprob: -3.1604163646698
    6. ' s' → logprob: -3.1604163646698
    7. '<|end|>' → logprob: -3.5354163646698
    8. 's' → logprob: -4.035416603088379
    9. ' ' → logprob: -4.035416603088379
    10. 'X' → logprob: -4.160416603088379

Token 207: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.013188816606998444
    2. 'r' → logprob: -5.26318883895874
    3. 'rent' → logprob: -5.26318883895874
    4. 'e' → logprob: -6.38818883895874
    5. 'ré' → logprob: -7.51318883895874
    6. 'ra' → logprob: -9.013188362121582
    7. 'rez' → logprob: -9.763188362121582
    8. 'X' → logprob: -9.888188362121582
    9. 'dans' → logprob: -9.888188362121582
    10. 'rait' → logprob: -10.013188362121582

Token 208: ' dans' (ID: 2671)
  Prédit: ' dans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dans' → logprob: -0.6432152986526489
    2. 'dans' → logprob: -0.8932152986526489
    3. 'X' → logprob: -3.8932151794433594
    4. ' dedans' → logprob: -4.518215179443359
    5. ' X' → logprob: -4.643215179443359
    6. ' (' → logprob: -4.768215179443359
    7. '(X' → logprob: -5.393215179443359
    8. '(' → logprob: -5.643215179443359
    9. '   ' → logprob: -6.018215179443359
    10. ' ' → logprob: -6.018215179443359

Token 209: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.4287225604057312
    2. ' X' → logprob: -1.053722620010376
    3. ' ' → logprob: -11.803722381591797
    4. ' la' → logprob: -12.678722381591797
    5. ' ' → logprob: -12.928722381591797
    6. '	X' → logprob: -12.928722381591797
    7. '5' → logprob: -13.303722381591797
    8. ' le' → logprob: -13.428722381591797
    9. 'le' → logprob: -14.803722381591797
    10. 'x' → logprob: -14.803722381591797

Token 210: ',
' (ID: 412)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.49559712409973145
    2. ' ans' → logprob: -1.3705971240997314
    3. 'pieces' → logprob: -2.6205971240997314
    4. 'coins' → logprob: -4.620596885681152
    5. '5' → logprob: -4.620596885681152
    6. ' pieces' → logprob: -4.870596885681152
    7. 'pi' → logprob: -5.370596885681152
    8. 'X' → logprob: -5.620596885681152
    9. ' coins' → logprob: -5.870596885681152
    10. ')' → logprob: -5.995596885681152

Token 211: '#' (ID: 2)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.9377380013465881
    2. 'ans' → logprob: -1.5627379417419434
    3. '(X' → logprob: -1.9377379417419434
    4. ' (' → logprob: -1.9377379417419434
    5. 'X' → logprob: -3.0627379417419434
    6. '(ans' → logprob: -3.5627379417419434
    7. ' X' → logprob: -4.062737941741943
    8. '(' → logprob: -5.312737941741943
    9. ')' → logprob: -5.812737941741943
    10. '5' → logprob: -5.937737941741943

Token 212: ' puis' (ID: 18766)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.33488914370536804
    2. ' ans' → logprob: -1.3348891735076904
    3. 'X' → logprob: -4.584888935089111
    4. ' (' → logprob: -6.084888935089111
    5. ' X' → logprob: -6.084888935089111
    6. '(ans' → logprob: -6.209888935089111
    7. ')' → logprob: -6.834888935089111
    8. '#' → logprob: -7.084888935089111
    9. '   ' → logprob: -7.709888935089111
    10. '(X' → logprob: -7.834888935089111

Token 213: ' on' (ID: 402)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.9218703508377075
    2. '*' → logprob: -1.6718703508377075
    3. 'ans' → logprob: -2.421870231628418
    4. ' X' → logprob: -2.546870231628418
    5. 'X' → logprob: -3.046870231628418
    6. ' ' → logprob: -3.171870231628418
    7. '5' → logprob: -3.421870231628418
    8. ' on' → logprob: -3.671870231628418
    9. ' *' → logprob: -3.921870231628418
    10. ' (' → logprob: -4.171870231628418

Token 214: ' multipl' (ID: 44269)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.919683039188385
    2. ' multipl' → logprob: -1.1696829795837402
    3. ' *' → logprob: -1.6696829795837402
    4. ' ' → logprob: -3.5446829795837402
    5. ' ans' → logprob: -4.16968297958374
    6. ' multiply' → logprob: -4.16968297958374
    7. ' ' → logprob: -4.29468297958374
    8. ')' → logprob: -4.91968297958374
    9. 'multiply' → logprob: -5.04468297958374
    10. 'ans' → logprob: -5.66968297958374

Token 215: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.1912708282470703
    2. 'e' → logprob: -2.1912708282470703
    3. 'ies' → logprob: -3.4412708282470703
    4. '*' → logprob: -4.81627082824707
    5. 'ip' → logprob: -4.94127082824707
    6. 'ipl' → logprob: -5.44127082824707
    7. 'ier' → logprob: -5.69127082824707
    8. 'es' → logprob: -6.56627082824707
    9. 'it' → logprob: -7.19127082824707
    10. 'ique' → logprob: -7.19127082824707

Token 216: ' ce' (ID: 2357)
  Prédit: '(X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.28735536336898804
    2. '(' → logprob: -1.9123554229736328
    3. ' (' → logprob: -2.787355422973633
    4. '(ans' → logprob: -4.037355422973633
    5. 'X' → logprob: -5.037355422973633
    6. ' ans' → logprob: -5.162355422973633
    7. 'ans' → logprob: -5.412355422973633
    8. ' par' → logprob: -6.537355422973633
    9. ' X' → logprob: -6.537355422973633
    10. 'par' → logprob: -6.912355422973633

Token 217: ' nombre' (ID: 9733)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3954946994781494
    2. '*' → logprob: -1.6454946994781494
    3. ' *' → logprob: -1.7704946994781494
    4. ')' → logprob: -2.2704946994781494
    5. ' ans' → logprob: -2.3954946994781494
    6. 'ans' → logprob: -2.7704946994781494
    7. ' #' → logprob: -3.2704946994781494
    8. ' )' → logprob: -3.5204946994781494
    9. ' ' → logprob: -3.7704946994781494
    10. '#' → logprob: -4.64549446105957

Token 218: ' par' (ID: 686)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.4088268578052521
    2. ' *' → logprob: -1.7838268280029297
    3. ' par' → logprob: -1.9088268280029297
    4. 'par' → logprob: -4.53382682800293
    5. ' ' → logprob: -5.40882682800293
    6. '_par' → logprob: -7.15882682800293
    7. '_' → logprob: -7.28382682800293
    8. ')' → logprob: -7.65882682800293
    9. ' ans' → logprob: -7.90882682800293
    10. ' ' → logprob: -8.03382682800293

Token 219: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.38885489106178284
    2. ' ' → logprob: -1.6388548612594604
    3. '10' → logprob: -2.51385498046875
    4. '100' → logprob: -4.13885498046875
    5. '1' → logprob: -4.51385498046875
    6. '500' → logprob: -4.88885498046875
    7. '50' → logprob: -4.88885498046875
    8. '2' → logprob: -5.88885498046875
    9. '20' → logprob: -7.01385498046875
    10. '200' → logprob: -7.38885498046875

Token 220: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.31150713562965393
    2. '10' → logprob: -1.8115071058273315
    3. '500' → logprob: -3.561507225036621
    4. '1' → logprob: -3.811507225036621
    5. '100' → logprob: -4.061507225036621
    6. ' ' → logprob: -4.311507225036621
    7. '2' → logprob: -4.561507225036621
    8. '50' → logprob: -4.561507225036621
    9. '20' → logprob: -7.186507225036621
    10. '200' → logprob: -7.311507225036621

Token 221: ',' (ID: 11)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00894461665302515
    2. ' ans' → logprob: -5.008944511413574
    3. '(ans' → logprob: -6.383944511413574
    4. '*' → logprob: -8.258944511413574
    5. '	ans' → logprob: -10.258944511413574
    6. '_ans' → logprob: -10.508944511413574
    7. '
' → logprob: -10.633944511413574
    8. ')' → logprob: -10.633944511413574
    9. 'print' → logprob: -10.633944511413574
    10. '5' → logprob: -10.883944511413574

Token 222: ' car' (ID: 1669)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.035373881459236145
    2. 'ans' → logprob: -3.7853739261627197
    3. ' ' → logprob: -4.910373687744141
    4. '5' → logprob: -6.035373687744141
    5. ' )' → logprob: -7.285373687744141
    6. ')' → logprob: -7.910373687744141
    7. 'print' → logprob: -8.16037368774414
    8. '(ans' → logprob: -8.41037368774414
    9. ' 
' → logprob: -8.53537368774414
    10. 'X' → logprob: -9.03537368774414

Token 223: ' chaque' (ID: 21194)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.2285853624343872
    2. ' chaque' → logprob: -1.8535853624343872
    3. ' ' → logprob: -3.6035852432250977
    4. 'cha' → logprob: -4.978585243225098
    5. 'each' → logprob: -5.978585243225098
    6. 'ces' → logprob: -6.103585243225098
    7. 'c' → logprob: -6.603585243225098
    8. ' each' → logprob: -6.603585243225098
    9. 'la' → logprob: -7.103585243225098
    10. 'le' → logprob: -7.228585243225098

Token 224: ' pièce' (ID: 56132)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1045248955488205
    2. '5' → logprob: -2.854524850845337
    3. ' )' → logprob: -5.229525089263916
    4. 'pi' → logprob: -5.479525089263916
    5. ' ' → logprob: -5.479525089263916
    6. 'piece' → logprob: -5.604525089263916
    7. ' (' → logprob: -5.729525089263916
    8. ' piece' → logprob: -5.979525089263916
    9. ' coin' → logprob: -6.104525089263916
    10. '<|end|>' → logprob: -6.229525089263916

Token 225: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.29623377323150635
    2. '*' → logprob: -2.046233654022217
    3. ' *' → logprob: -2.671233654022217
    4. 'de' → logprob: -2.921233654022217
    5. ' ' → logprob: -6.671233654022217
    6. ' =' → logprob: -7.046233654022217
    7. '=' → logprob: -7.171233654022217
    8. '   ' → logprob: -7.796233654022217
    9. ' of' → logprob: -9.046234130859375
    10. ')' → logprob: -9.546234130859375

Token 226: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.054926175624132156
    2. ' ' → logprob: -2.9299261569976807
    3. '1' → logprob: -10.929925918579102
    4. '  ' → logprob: -12.054925918579102
    5. '10' → logprob: -12.304925918579102
    6. ' ' → logprob: -12.804925918579102
    7. ' cinq' → logprob: -12.992425918579102
    8. '50' → logprob: -13.054925918579102
    9. '   ' → logprob: -13.867425918579102
    10. '2' → logprob: -13.929925918579102

Token 227: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.008660659193992615
    2. ' ' → logprob: -4.758660793304443
    3. '1' → logprob: -10.508660316467285
    4. '10' → logprob: -11.633660316467285
    5. '50' → logprob: -13.008660316467285
    6. ' cinq' → logprob: -13.383660316467285
    7. '  ' → logprob: -13.633660316467285
    8. '```' → logprob: -14.571160316467285
    9. '2' → logprob: -14.633660316467285
    10. '100' → logprob: -14.696160316467285

Token 228: ' rapporte' (ID: 180891)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.39873212575912476
    2. ')' → logprob: -2.2737321853637695
    3. ' rapporte' → logprob: -2.6487321853637695
    4. ' *' → logprob: -2.8987321853637695
    5. ' apporte' → logprob: -3.8987321853637695
    6. ' vaut' → logprob: -4.5237321853637695
    7. ' multipl' → logprob: -4.5237321853637695
    8. 'val' → logprob: -5.2737321853637695
    9. '<|end|>' → logprob: -5.6487321853637695
    10. 'rap' → logprob: -5.7737321853637695

Token 229: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20158971846103668
    2. '5' → logprob: -1.7015897035598755
    3. '10' → logprob: -9.951589584350586
    4. ' ' → logprob: -10.576589584350586
    5. '1' → logprob: -10.951589584350586
    6. '100' → logprob: -11.326589584350586
    7. '500' → logprob: -11.701589584350586
    8. ' des' → logprob: -12.014089584350586
    9. '50' → logprob: -12.326589584350586
    10. '  ' → logprob: -12.326589584350586

Token 230: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.029797237366437912
    2. ' ' → logprob: -3.529797315597534
    3. '1' → logprob: -10.529797554016113
    4. '10' → logprob: -12.529797554016113
    5. '50' → logprob: -12.779797554016113
    6. ' ' → logprob: -13.342297554016113
    7. ' X' → logprob: -13.654797554016113
    8. '  ' → logprob: -13.717297554016113
    9. 'X' → logprob: -13.842297554016113
    10. '```' → logprob: -13.967297554016113

Token 231: ' unités' (ID: 176121)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.37323179841041565
    2. 'ans' → logprob: -1.9982317686080933
    3. '<|end|>' → logprob: -3.123231887817383
    4. '
' → logprob: -3.248231887817383
    5. '*' → logprob: -3.248231887817383
    6. 'tokens' → logprob: -4.748231887817383
    7. '.' → logprob: -4.998231887817383
    8. ').' → logprob: -5.373231887817383
    9. '(ans' → logprob: -5.498231887817383
    10. 'print' → logprob: -5.623231887817383

Token 232: '.
' (ID: 558)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00042209390085190535
    2. '+' → logprob: -8.500422477722168
    3. ' ans' → logprob: -9.250422477722168
    4. '+
' → logprob: -9.750422477722168
    5. '
' → logprob: -10.750422477722168
    6. ' +' → logprob: -11.000422477722168
    7. '(ans' → logprob: -12.000422477722168
    8. '+=' → logprob: -12.625422477722168
    9. '	ans' → logprob: -12.625422477722168
    10. 'plus' → logprob: -12.750422477722168

Token 233: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -9.496052371105179e-05
    2. ' ans' → logprob: -9.37509536743164
    3. '(ans' → logprob: -11.87509536743164
    4. '*' → logprob: -14.75009536743164
    5. '5' → logprob: -14.75009536743164
    6. '
' → logprob: -14.87509536743164
    7. '+' → logprob: -14.87509536743164
    8. 'answer' → logprob: -15.00009536743164
    9. '```' → logprob: -15.00009536743164
    10. '(' → logprob: -15.25009536743164

Token 234: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.023472808301448822
    2. '+=' → logprob: -3.773472785949707
    3. ' =' → logprob: -8.898472785949707
    4. '=' → logprob: -9.398472785949707
    5. '+=(' → logprob: -12.523472785949707
    6. ' +' → logprob: -13.273472785949707
    7. '+' → logprob: -13.398472785949707
    8. ' ' → logprob: -14.398472785949707
    9. ' ' → logprob: -14.898472785949707
    10. ' -=' → logprob: -16.773473739624023

Token 235: ' (' (ID: 350)
  Prédit: '(X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.03878027945756912
    2. ' (' → logprob: -3.2887802124023438
    3. '((' → logprob: -7.288780212402344
    4. '(' → logprob: -10.413780212402344
    5. '5' → logprob: -11.538780212402344
    6. ' ' → logprob: -12.038780212402344
    7. ' ((' → logprob: -12.163780212402344
    8. '(x' → logprob: -13.038780212402344
    9. '   ' → logprob: -14.413780212402344
    10. '  ' → logprob: -15.163780212402344

Token 236: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -3.9054008084349334e-05
    2. '(X' → logprob: -10.500039100646973
    3. ' X' → logprob: -11.375039100646973
    4. ' ' → logprob: -18.125038146972656
    5. ' (' → logprob: -18.375038146972656
    6. '   ' → logprob: -18.625038146972656
    7. ')' → logprob: -19.375038146972656
    8. '	X' → logprob: -19.875038146972656
    9. '(' → logprob: -20.000038146972656
    10. '5' → logprob: -20.750038146972656

Token 237: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.00976470671594143
    2. '//' → logprob: -4.634764671325684
    3. ' ' → logprob: -12.634764671325684
    4. ' ' → logprob: -12.759764671325684
    5. '#' → logprob: -13.759764671325684
    6. ')' → logprob: -14.134764671325684
    7. ' #' → logprob: -14.259764671325684
    8. ' //
' → logprob: -16.634765625
    9. ')//' → logprob: -17.759765625
    10. ' /' → logprob: -17.884765625

Token 238: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.014165864326059818
    2. ' ' → logprob: -4.264165878295898
    3. '  ' → logprob: -14.139165878295898
    4. ' ' → logprob: -14.139165878295898
    5. '   ' → logprob: -15.264165878295898
    6. ')' → logprob: -15.639165878295898
    7. '٥' → logprob: -16.5766658782959
    8. '    ' → logprob: -16.9516658782959
    9. '۵' → logprob: -17.0766658782959
    10. '	' → logprob: -17.3266658782959

Token 239: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '500' → logprob: -18.000011444091797
    4. '٥' → logprob: -18.250011444091797
    5. '```' → logprob: -18.500011444091797
    6. '  ' → logprob: -18.500011444091797
    7. '۵' → logprob: -18.750011444091797
    8. '50' → logprob: -19.125011444091797
    9. '５' → logprob: -19.375011444091797
    10. '   ' → logprob: -19.687511444091797

Token 240: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012689977302215993
    2. ' )' → logprob: -9.000126838684082
    3. ')*' → logprob: -12.625126838684082
    4. '*' → logprob: -15.875126838684082
    5. '5' → logprob: -17.0001277923584
    6. '*)' → logprob: -17.8751277923584
    7. '   ' → logprob: -18.7501277923584
    8. ' ' → logprob: -19.1251277923584
    9. ' *' → logprob: -19.2501277923584
    10. '）' → logprob: -19.2501277923584

Token 241: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.4740857779979706
    2. ' *' → logprob: -0.974085807800293
    3. '5' → logprob: -12.599085807800293
    4. ' ' → logprob: -12.599085807800293
    5. ' ' → logprob: -13.599085807800293
    6. ')' → logprob: -14.349085807800293
    7. '**' → logprob: -16.974084854125977
    8. '*
' → logprob: -17.474084854125977
    9. ')*' → logprob: -17.599084854125977
    10. '   ' → logprob: -17.599084854125977

Token 242: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -8.518582762917504e-05
    2. ' ' → logprob: -9.37508487701416
    3. '۵' → logprob: -16.750085830688477
    4. '５' → logprob: -17.125085830688477
    5. '   ' → logprob: -17.250085830688477
    6. '  ' → logprob: -17.312585830688477
    7. '٥' → logprob: -17.312585830688477
    8. '50' → logprob: -17.437585830688477
    9. '```' → logprob: -18.062585830688477
    10. '৫' → logprob: -18.687585830688477

Token 243: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.12500286102295
    3. '５' → logprob: -16.937501907348633
    4. '25' → logprob: -17.000001907348633
    5. '٥' → logprob: -17.125001907348633
    6. '۵' → logprob: -17.312501907348633
    7. 'five' → logprob: -17.312501907348633
    8. '50' → logprob: -17.437501907348633
    9. '৫' → logprob: -17.875001907348633
    10. '10' → logprob: -18.125001907348633

Token 244: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20470772683620453
    2. '<|end|>' → logprob: -1.7047077417373657
    3. '#' → logprob: -6.579707622528076
    4. 'X' → logprob: -6.829707622528076
    5. '
' → logprob: -8.329708099365234
    6. '```' → logprob: -8.829708099365234
    7. ' print' → logprob: -9.079708099365234
    8. '<|end|>' → logprob: -9.454708099365234
    9. '#print' → logprob: -9.704708099365234
    10. '\n' → logprob: -9.954708099365234

Token 245: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.009365730918943882
    2. '<|end|>' → logprob: -4.759365558624268
    3. '#' → logprob: -8.134366035461426
    4. '
' → logprob: -8.259366035461426
    5. ' print' → logprob: -9.259366035461426
    6. '#print' → logprob: -9.884366035461426
    7. '\n' → logprob: -11.384366035461426
    8. '```' → logprob: -11.384366035461426
    9. '<|end|>' → logprob: -12.009366035461426
    10. ')' → logprob: -12.384366035461426

Token 246: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.935296834039036e-06
    2. ' print' → logprob: -12.87500286102295
    3. 'prin' → logprob: -16.125003814697266
    4. 'pr' → logprob: -16.750003814697266
    5. '#print' → logprob: -17.250003814697266
    6. '#' → logprob: -17.375003814697266
    7. 'pri' → logprob: -17.750003814697266
    8. '```' → logprob: -19.000003814697266
    9. 'return' → logprob: -19.250003814697266
    10. 'X' → logprob: -19.375003814697266

Token 247: 'ichage' (ID: 118475)
  Prédit: 'iche'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -0.5501903891563416
    2. '#' → logprob: -1.6751904487609863
    3. 'icher' → logprob: -2.1751904487609863
    4. 'print' → logprob: -3.1751904487609863
    5. 'ich' → logprob: -3.1751904487609863
    6. 'ichage' → logprob: -3.3001904487609863
    7. 'f' → logprob: -7.050190448760986
    8. 'ic' → logprob: -8.300189971923828
    9. 'fic' → logprob: -8.550189971923828
    10. 'iché' → logprob: -9.050189971923828

Token 248: ' du' (ID: 1462)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0044313049875199795
    2. '(' → logprob: -5.504431247711182
    3. '(print' → logprob: -8.12943172454834
    4. 'print' → logprob: -9.87943172454834
    5. 'ans' → logprob: -12.75443172454834
    6. '(answer' → logprob: -13.00443172454834
    7. '()' → logprob: -14.25443172454834
    8. ' (' → logprob: -14.75443172454834
    9. '("' → logprob: -15.00443172454834
    10. '(output' → logprob: -16.754430770874023

Token 249: ' résultat' (ID: 62556)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.08687902987003326
    2. '(ans' → logprob: -2.586879014968872
    3. ' ans' → logprob: -5.086879253387451
    4. '(' → logprob: -6.461879253387451
    5. 'result' → logprob: -8.961878776550293
    6. 'print' → logprob: -10.461878776550293
    7. 'answer' → logprob: -11.211878776550293
    8. ' (' → logprob: -11.336878776550293
    9. '	ans' → logprob: -11.336878776550293
    10. 'int' → logprob: -12.461878776550293

Token 250: ' final' (ID: 1721)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.420598219847307e-05
    2. '
' → logprob: -9.7500638961792
    3. ' print' → logprob: -12.1250638961792
    4. '```' → logprob: -15.1250638961792
    5. ')
' → logprob: -17.250064849853516
    6. '
' → logprob: -17.625064849853516
    7. '(print' → logprob: -17.750064849853516
    8. '#print' → logprob: -18.125064849853516
    9. '.print' → logprob: -18.125064849853516
    10. ' 
' → logprob: -18.625064849853516

Token 251: ' :' (ID: 712)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.943783253314905e-05
    2. '
' → logprob: -9.750059127807617
    3. ' print' → logprob: -13.875059127807617
    4. '```' → logprob: -16.375059127807617
    5. '
' → logprob: -17.375059127807617
    6. ')
' → logprob: -18.375059127807617
    7. '(print' → logprob: -18.625059127807617
    8. '.print' → logprob: -19.875059127807617
    9. '#print' → logprob: -20.000059127807617
    10. ' 
' → logprob: -20.375059127807617

Token 252: ' le' (ID: 505)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -19.0
    3. '```' → logprob: -20.0
    4. '
' → logprob: -24.5
    5. 'prin' → logprob: -26.25
    6. 'pr' → logprob: -26.75
    7. '``' → logprob: -27.0
    8. '#print' → logprob: -27.5
    9. '(print' → logprob: -28.375
    10. 'printf' → logprob: -28.5

Token 253: ' montant' (ID: 72364)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6218145489692688
    2. ' print' → logprob: -0.8718145489692688
    3. ' ' → logprob: -3.371814489364624
    4. ' ans' → logprob: -4.871814727783203
    5. 'ans' → logprob: -6.496814727783203
    6. ' ' → logprob: -8.746814727783203
    7. ''' → logprob: -8.871814727783203
    8. ' 
' → logprob: -8.996814727783203
    9. '"' → logprob: -9.121814727783203
    10. 's' → logprob: -9.121814727783203

Token 254: ' total' (ID: 3609)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.18746067583560944
    2. ' print' → logprob: -2.1874606609344482
    3. '(' → logprob: -4.187460899353027
    4. ' ' → logprob: -4.562460899353027
    5. ' de' → logprob: -5.187460899353027
    6. '(ans' → logprob: -5.312460899353027
    7. ' =' → logprob: -5.437460899353027
    8. ')' → logprob: -5.562460899353027
    9. 'ans' → logprob: -5.812460899353027
    10. '_' → logprob: -6.062460899353027

Token 255: ' obtenu' (ID: 117330)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0007306627230718732
    2. ' print' → logprob: -7.250730514526367
    3. '
' → logprob: -11.000730514526367
    4. '(print' → logprob: -14.250730514526367
    5. '(' → logprob: -14.500730514526367
    6. ',' → logprob: -14.750730514526367
    7. 'de' → logprob: -14.875730514526367
    8. 'ans' → logprob: -14.875730514526367
    9. ')' → logprob: -15.375730514526367
    10. '#' → logprob: -15.375730514526367

Token 256: ' en' (ID: 469)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0008279714384116232
    2. '
' → logprob: -7.125827789306641
    3. ' print' → logprob: -11.00082778930664
    4. '
' → logprob: -13.00082778930664
    5. ')
' → logprob: -13.12582778930664
    6. ' 
' → logprob: -13.87582778930664
    7. '(print' → logprob: -14.62582778930664
    8. ',' → logprob: -15.00082778930664
    9. '```' → logprob: -15.25082778930664
    10. '.print' → logprob: -15.87582778930664

Token 257: ' utilisant' (ID: 92474)
  Prédit: 'bil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bil' → logprob: -1.0609256029129028
    2. 'unit' → logprob: -1.6859256029129028
    3. ' billets' → logprob: -2.0609254837036133
    4. 'multip' → logprob: -2.5609254837036133
    5. 'pi' → logprob: -3.0609254837036133
    6. 'pieces' → logprob: -3.1859254837036133
    7. 'mon' → logprob: -3.3109254837036133
    8. 'print' → logprob: -3.5609254837036133
    9. ' monnaie' → logprob: -4.060925483703613
    10. ' pièces' → logprob: -4.060925483703613

Token 258: ' d' (ID: 272)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.39897042512893677
    2. ' les' → logprob: -2.148970365524292
    3. ' print' → logprob: -2.398970365524292
    4. ' des' → logprob: -2.523970365524292
    5. ' uniquement' → logprob: -4.273970603942871
    6. ' le' → logprob: -5.023970603942871
    7. ' la' → logprob: -5.148970603942871
    8. '100' → logprob: -5.523970603942871
    9. 'des' → logprob: -5.648970603942871
    10. 'les' → logprob: -6.148970603942871

Token 259: ''abord' (ID: 89989)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5296003222465515
    2. 'es' → logprob: -0.9046003222465515
    3. 'print' → logprob: -5.654600143432617
    4. 'u' → logprob: -7.029600143432617
    5. ''' → logprob: -7.029600143432617
    6. 'eux' → logprob: -8.404600143432617
    7. ''e' → logprob: -8.529600143432617
    8. ''es' → logprob: -9.029600143432617
    9. ' es' → logprob: -9.654600143432617
    10. 'a' → logprob: -9.904600143432617

Token 260: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -1.0281306505203247
    2. 'des' → logprob: -1.0281306505203247
    3. ' les' → logprob: -1.9031306505203247
    4. ' des' → logprob: -2.028130531311035
    5. '100' → logprob: -6.653130531311035
    6. 'le' → logprob: -7.403130531311035
    7. 'print' → logprob: -7.653130531311035
    8. '#' → logprob: -7.778130531311035
    9. '500' → logprob: -8.278130531311035
    10. 'la' → logprob: -8.403130531311035

Token 261: ' billets' (ID: 146301)
  Prédit: ' billets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' billets' → logprob: -0.108429454267025
    2. 'bil' → logprob: -2.483429431915283
    3. 'b' → logprob: -4.608429431915283
    4. ' bil' → logprob: -5.108429431915283
    5. '500' → logprob: -7.483429431915283
    6. ' ' → logprob: -7.608429431915283
    7. 'print' → logprob: -8.170929908752441
    8. ' billet' → logprob: -8.170929908752441
    9. ' ' → logprob: -8.483429908752441
    10. 'bill' → logprob: -9.045929908752441

Token 262: ' de' (ID: 334)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04636115953326225
    2. 'de' → logprob: -3.296361207962036
    3. ' de' → logprob: -5.671360969543457
    4. ' print' → logprob: -5.796360969543457
    5. ',' → logprob: -7.046360969543457
    6. '#' → logprob: -7.421360969543457
    7. 'et' → logprob: -9.171360969543457
    8. ' et' → logprob: -9.796360969543457
    9. 'rest' → logprob: -9.921360969543457
    10. '500' → logprob: -10.171360969543457

Token 263: ' ' (ID: 220)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.04311440885066986
    2. '100' → logprob: -3.293114423751831
    3. ' ' → logprob: -5.293114185333252
    4. 'c' → logprob: -12.16811466217041
    5. '50' → logprob: -12.16811466217041
    6. '5' → logprob: -12.66811466217041
    7. 'cin' → logprob: -13.04311466217041
    8. '```' → logprob: -13.04311466217041
    9. 'bil' → logprob: -13.16811466217041
    10. '600' → logprob: -13.29311466217041

Token 264: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.0017195657128468156
    2. '100' → logprob: -6.3767194747924805
    3. ' ' → logprob: -11.62671947479248
    4. '5' → logprob: -13.37671947479248
    5. 'cin' → logprob: -13.37671947479248
    6. 'c' → logprob: -13.37671947479248
    7. '50' → logprob: -13.75171947479248
    8. '1' → logprob: -14.25171947479248
    9. '```' → logprob: -14.62671947479248
    10. '10' → logprob: -15.25171947479248

Token 265: ',
' (ID: 412)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0022427968215197325
    2. ',' → logprob: -6.127242565155029
    3. ' print' → logprob: -10.377243041992188
    4. ')' → logprob: -10.877243041992188
    5. '+' → logprob: -13.502243041992188
    6. ',
' → logprob: -13.627243041992188
    7. '.' → logprob: -13.752243041992188
    8. '#print' → logprob: -14.252243041992188
    9. '(print' → logprob: -14.627243041992188
    10. ')
' → logprob: -14.752243041992188

Token 266: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6878358125686646
    2. ' puis' → logprob: -1.0628358125686646
    3. ' print' → logprob: -2.437835693359375
    4. '#' → logprob: -3.312835693359375
    5. ',' → logprob: -4.437835693359375
    6. ' #' → logprob: -5.187835693359375
    7. 'end' → logprob: -6.062835693359375
    8. 'ens' → logprob: -6.812835693359375
    9. ' ans' → logprob: -6.812835693359375
    10. ')' → logprob: -7.062835693359375

Token 267: ' puis' (ID: 18766)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.273994117975235
    2. ' puis' → logprob: -1.5239940881729126
    3. 'ens' → logprob: -4.398993968963623
    4. 'print' → logprob: -5.023993968963623
    5. ' print' → logprob: -6.523993968963623
    6. '#' → logprob: -7.773993968963623
    7. ' p' → logprob: -7.898993968963623
    8. 'pu' → logprob: -8.148994445800781
    9. ',' → logprob: -9.398994445800781
    10. ' ensuite' → logprob: -10.023994445800781

Token 268: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.04358915612101555
    2. 'les' → logprob: -3.1685891151428223
    3. 'des' → logprob: -8.29358959197998
    4. ' des' → logprob: -8.54358959197998
    5. '#' → logprob: -9.16858959197998
    6. ' ' → logprob: -11.29358959197998
    7. '5' → logprob: -11.79358959197998
    8. ' ' → logprob: -12.04358959197998
    9. 'l' → logprob: -12.91858959197998
    10. ' #' → logprob: -13.41858959197998

Token 269: ' pièces' (ID: 49165)
  Prédit: ' pièces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pièces' → logprob: -0.10868312418460846
    2. 'pi' → logprob: -2.3586831092834473
    3. 'pieces' → logprob: -5.608683109283447
    4. ' pieces' → logprob: -5.733683109283447
    5. ' pi' → logprob: -6.858683109283447
    6. '#' → logprob: -8.983683586120605
    7. ' ' → logprob: -9.733683586120605
    8. ' ' → logprob: -9.858683586120605
    9. ' monna' → logprob: -9.858683586120605
    10. 'coins' → logprob: -10.108683586120605

Token 270: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.22418157756328583
    2. ' de' → logprob: -1.8491815328598022
    3. 'print' → logprob: -3.349181652069092
    4. 'rest' → logprob: -6.349181652069092
    5. ' ' → logprob: -6.599181652069092
    6. '#' → logprob: -6.974181652069092
    7. ' print' → logprob: -7.724181652069092
    8. 'd' → logprob: -7.974181652069092
    9. '5' → logprob: -8.099181175231934
    10. '.' → logprob: -8.099181175231934

Token 271: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.09234882891178131
    2. ' ' → logprob: -2.46734881401062
    3. '10' → logprob: -5.842349052429199
    4. '1' → logprob: -8.2173490524292
    5. ' cinq' → logprob: -9.3423490524292
    6. '100' → logprob: -10.0923490524292
    7. 'c' → logprob: -10.7173490524292
    8. ' monnaie' → logprob: -10.9673490524292
    9. '500' → logprob: -11.2173490524292
    10. 'mon' → logprob: -11.3423490524292

Token 272: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.02039869874715805
    2. '10' → logprob: -4.5203986167907715
    3. ' ' → logprob: -5.2703986167907715
    4. '1' → logprob: -5.8953986167907715
    5. '100' → logprob: -7.0203986167907715
    6. '500' → logprob: -8.27039909362793
    7. 'c' → logprob: -9.27039909362793
    8. '50' → logprob: -9.89539909362793
    9. '2' → logprob: -10.39539909362793
    10. 'mon' → logprob: -11.27039909362793

Token 273: '.' (ID: 13)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0031844829209148884
    2. '
' → logprob: -5.7531843185424805
    3. '
' → logprob: -12.50318431854248
    4. ' print' → logprob: -12.87818431854248
    5. ' 
' → logprob: -16.003185272216797
    6. '```' → logprob: -16.128185272216797
    7. ')
' → logprob: -16.878185272216797
    8. '#print' → logprob: -17.128185272216797
    9. '.print' → logprob: -17.253185272216797
    10. '(print' → logprob: -17.253185272216797

Token 274: ' La' (ID: 3038)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.662937372922897e-05
    2. '
' → logprob: -9.250096321105957
    3. '```' → logprob: -15.250096321105957
    4. ' print' → logprob: -15.375096321105957
    5. '
' → logprob: -17.750097274780273
    6. '``' → logprob: -20.750097274780273
    7. '#print' → logprob: -20.875097274780273
    8. '(print' → logprob: -21.250097274780273
    9. '.print' → logprob: -21.875097274780273
    10. '

' → logprob: -22.500097274780273

Token 275: ' fonction' (ID: 17610)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.6789137084269896e-05
    2. ' print' → logprob: -10.25003719329834
    3. 'pr' → logprob: -14.00003719329834
    4. 'prin' → logprob: -14.62503719329834
    5. '
' → logprob: -16.625036239624023
    6. 'p' → logprob: -17.875036239624023
    7. 'pri' → logprob: -18.125036239624023
    8. '#' → logprob: -18.125036239624023
    9. '#print' → logprob: -18.250036239624023
    10. 'r' → logprob: -18.375036239624023

Token 276: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -8.061054359131958e-06
    2. ' print' → logprob: -11.750007629394531
    3. '(print' → logprob: -16.00000762939453
    4. 'prin' → logprob: -18.25000762939453
    5. 'pr' → logprob: -18.87500762939453
    6. '#print' → logprob: -19.62500762939453
    7. '.print' → logprob: -21.62500762939453
    8. 'printf' → logprob: -21.75000762939453
    9. 'Print' → logprob: -22.25000762939453
    10. '```' → logprob: -22.62500762939453

Token 277: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1500820815563202
    2. '(ans' → logprob: -2.4000821113586426
    3. '()' → logprob: -3.0250821113586426
    4. '(print' → logprob: -9.900081634521484
    5. ' (' → logprob: -11.150081634521484
    6. '(
' → logprob: -12.025081634521484
    7. ')' → logprob: -12.025081634521484
    8. '('' → logprob: -12.650081634521484
    9. '(output' → logprob: -12.900081634521484
    10. '("' → logprob: -13.150081634521484

Token 278: ' affiche' (ID: 127479)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8624119758605957
    2. '(ans' → logprob: -0.8624119758605957
    3. '()' → logprob: -1.8624119758605957
    4. '(print' → logprob: -8.362411499023438
    5. '(X' → logprob: -9.112411499023438
    6. '(output' → logprob: -11.112411499023438
    7. 'ans' → logprob: -11.237411499023438
    8. 'print' → logprob: -11.737411499023438
    9. '('' → logprob: -11.987411499023438
    10. '("")' → logprob: -12.112411499023438

Token 279: ' la' (ID: 557)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -3.6312321753939614e-05
    2. '(' → logprob: -10.250036239624023
    3. 'ans' → logprob: -14.250036239624023
    4. '()' → logprob: -16.375036239624023
    5. '(answer' → logprob: -17.125036239624023
    6. ' (' → logprob: -17.875036239624023
    7. '	ans' → logprob: -17.875036239624023
    8. '((' → logprob: -18.625036239624023
    9. '(abs' → logprob: -18.625036239624023
    10. '(
' → logprob: -18.875036239624023

Token 280: ' valeur' (ID: 41664)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.06168719381093979
    2. '(ans' → logprob: -3.0616872310638428
    3. 'val' → logprob: -4.561686992645264
    4. 'result' → logprob: -6.686686992645264
    5. 'value' → logprob: -7.186686992645264
    6. 'variable' → logprob: -7.811686992645264
    7. ' valeur' → logprob: -9.561687469482422
    8. '(' → logprob: -10.561687469482422
    9. 'answer' → logprob: -11.186687469482422
    10. ' ans' → logprob: -11.311687469482422

Token 281: ' de' (ID: 334)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.002530118217691779
    2. '(' → logprob: -6.002530097961426
    3. '()' → logprob: -10.002530097961426
    4. 'ans' → logprob: -11.752530097961426
    5. '(
' → logprob: -14.502530097961426
    6. '(answer' → logprob: -15.377530097961426
    7. ')' → logprob: -16.502531051635742
    8. ' (' → logprob: -16.627531051635742
    9. '("' → logprob: -16.877531051635742
    10. '(an' → logprob: -17.252531051635742

Token 282: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.12707027792930603
    2. '(ans' → logprob: -2.127070188522339
    3. ' ans' → logprob: -8.877070426940918
    4. '	ans' → logprob: -13.627070426940918
    5. '(' → logprob: -14.002070426940918
    6. 'answer' → logprob: -16.0020694732666
    7. '_ans' → logprob: -16.1270694732666
    8. 'ann' → logprob: -16.2520694732666
    9. 'anst' → logprob: -16.6270694732666
    10. 'Ans' → logprob: -16.7520694732666

Token 283: ' dans' (ID: 2671)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.6238991022109985
    2. '()' → logprob: -1.1238991022109985
    3. '(' → logprob: -1.9988991022109985
    4. 'print' → logprob: -6.373898983001709
    5. '(print' → logprob: -7.498898983001709
    6. '()
' → logprob: -7.498898983001709
    7. ')' → logprob: -7.873898983001709
    8. '(
' → logprob: -8.623899459838867
    9. 'ans' → logprob: -8.623899459838867
    10. ',' → logprob: -10.998899459838867

Token 284: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.779175341129303
    2. ' la' → logprob: -1.2791752815246582
    3. 'l' → logprob: -2.154175281524658
    4. 'le' → logprob: -2.529175281524658
    5. 'ans' → logprob: -4.154175281524658
    6. ' l' → logprob: -4.404175281524658
    7. ' le' → logprob: -4.904175281524658
    8. 'console' → logprob: -4.904175281524658
    9. 'print' → logprob: -5.779175281524658
    10. 'une' → logprob: -5.904175281524658

Token 285: ' console' (ID: 3887)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08283424377441406
    2. 'console' → logprob: -2.582834243774414
    3. ')' → logprob: -6.332834243774414
    4. 'fonction' → logprob: -7.707834243774414
    5. ' console' → logprob: -8.332834243774414
    6. 'code' → logprob: -8.332834243774414
    7. '()' → logprob: -8.707834243774414
    8. ' print' → logprob: -8.832834243774414
    9. '#' → logprob: -8.832834243774414
    10. 'ans' → logprob: -8.957834243774414

Token 286: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005259372293949127
    2. '
' → logprob: -5.8802595138549805
    3. '()
' → logprob: -6.5052595138549805
    4. ')
' → logprob: -7.0052595138549805
    5. '(print' → logprob: -10.88025951385498
    6. ' print' → logprob: -12.13025951385498
    7. '(ans' → logprob: -12.38025951385498
    8. '```' → logprob: -12.38025951385498
    9. '()' → logprob: -12.50525951385498
    10. ')' → logprob: -12.75525951385498

Token 287: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '```' → logprob: -18.25
    3. ' print' → logprob: -21.125
    4. '
' → logprob: -23.375
    5. 'pr' → logprob: -23.5
    6. 'prin' → logprob: -23.625
    7. '``' → logprob: -25.0
    8. '(print' → logprob: -25.875
    9. '#print' → logprob: -26.375
    10. 'pri' → logprob: -26.875

Token 288: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.02977699227631092
    2. '(' → logprob: -3.5297770500183105
    3. '()' → logprob: -10.654776573181152
    4. ' (' → logprob: -13.279776573181152
    5. 'ans' → logprob: -14.529776573181152
    6. '(answer' → logprob: -15.904776573181152
    7. '(print' → logprob: -16.02977752685547
    8. '(
' → logprob: -16.15477752685547
    9. '('' → logprob: -16.40477752685547
    10. '((' → logprob: -16.90477752685547

Token 289: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. '()' → logprob: -14.125000953674316
    3. ' )' → logprob: -14.625000953674316
    4. '())' → logprob: -16.000001907348633
    5. '))' → logprob: -17.750001907348633
    6. ')
' → logprob: -18.125001907348633
    7. ')`' → logprob: -18.625001907348633
    8. '')' → logprob: -20.125001907348633
    9. '(' → logprob: -20.250001907348633
    10. ')#' → logprob: -20.375001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 287
Tokens correctement prédits (1ère position, stricte): 74
Tokens correctement prédits (1ère position, avec adaptation): 74
Tokens correctement prédits (top 10): 175
Précision stricte (1ère position): 25.78%
Précision adaptée (1ère position): 25.78%
Précision (top 10): 60.98%
================================================================================
