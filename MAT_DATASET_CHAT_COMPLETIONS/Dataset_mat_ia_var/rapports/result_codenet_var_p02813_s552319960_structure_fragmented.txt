================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:32:05
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import itertools

def read_int():
    return int(input())

def read_tuple():
    return tuple(map(int, input().split()))

def get_input():
    N = read_int()
    P = read_tuple()
    Q = read_tuple()
    return N, P, Q

def are_equal(P, Q):
    return P == Q

def construct_pq_list(P, Q):
    return [P, Q]

def sort_pq(PQ):
    return sorted(PQ)

def create_li(N):
    return list(map(lambda x: x + 1, list(range(N))))

def generate_permutations(li, N):
    return itertools.permutations(li, N)

def find_positions(PQ, perms, N):
    i = 0
    j = 0
    a = []
    for v in perms:
        j = increment(j)
        if are_tuples_equal(PQ[i], v):
            a = append_to_list(a, j)
            if is_one(i):
                break_condition = True
                break
            else:
                i = increment(i)
    return a

def increment(x):
    return x + 1

def append_to_list(a, val):
    a.append(val)
    return a

def is_one(i):
    return i == 1

def are_tuples_equal(t1, t2):
    return t1 == t2

def get_difference(a):
    return a[1] - a[0]

def print_result(ans):
    print(ans)

def solve():
    N, P, Q = get_input()
    if are_equal(P, Q):
        ans = 0
    else:
        PQ = construct_pq_list(P, Q)
        PQ = sort_pq(PQ)
        li = create_li(N)
        perms = generate_permutations(li, N)
        a = []
        i = 0
        j = 0
        for v in perms:
            j = increment(j)
            if are_tuples_equal(PQ[i], v):
                a = append_to_list(a, j)
                if is_one(i):
                    break
                else:
                    i = increment(i)
        ans = get_difference(a)
    print_result(ans)

solve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' itertools' (ID: 103178)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.4736459888808895e-05
    2. '```' → logprob: -13.125014305114746
    3. ' as' → logprob: -13.375014305114746
    4. '\' → logprob: -13.625014305114746
    5. 'as' → logprob: -13.750014305114746
    6. 'import' → logprob: -13.875014305114746
    7. '\.' → logprob: -13.875014305114746
    8. '(' → logprob: -14.000014305114746
    9. ',' → logprob: -14.250014305114746
    10. '.as' → logprob: -14.500014305114746

Token 4: ' read' (ID: 1729)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.06189081817865372
    2. ' ' → logprob: -2.9368908405303955
    3. ' factorial' → logprob: -5.686890602111816
    4. '_' → logprob: -6.936890602111816
    5. ' space' → logprob: -8.186890602111816
    6. ' map' → logprob: -8.811890602111816
    7. ' chain' → logprob: -8.811890602111816
    8. ' permutations' → logprob: -8.811890602111816
    9. ' f' → logprob: -9.061890602111816
    10. ' iter' → logprob: -9.061890602111816

Token 5: '_int' (ID: 12285)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5802852511405945
    2. '_' → logprob: -0.8302852511405945
    3. ' (' → logprob: -5.58028507232666
    4. ' ' → logprob: -9.33028507232666
    5. '_line' → logprob: -9.45528507232666
    6. '_file' → logprob: -9.83028507232666
    7. '_csv' → logprob: -10.58028507232666
    8. '_data' → logprob: -10.70528507232666
    9. '```' → logprob: -10.70528507232666
    10. ')' → logprob: -10.83028507232666

Token 6: '():
' (ID: 8595)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7641692757606506
    2. '(' → logprob: -0.8891692757606506
    3. '():' → logprob: -2.139169216156006
    4. '()' → logprob: -6.139169216156006
    5. '(s' → logprob: -6.514169216156006
    6. '```' → logprob: -8.014169692993164
    7. '_s' → logprob: -8.139169692993164
    8. '):' → logprob: -8.639169692993164
    9. '_' → logprob: -9.264169692993164
    10. '_array' → logprob: -9.639169692993164

Token 7: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.8055546283721924
    2. '(' → logprob: -1.0555546283721924
    3. '()' → logprob: -2.0555546283721924
    4. ':' → logprob: -3.6805546283721924
    5. '   ' → logprob: -3.6805546283721924
    6. '```' → logprob: -4.430554389953613
    7. ' return' → logprob: -6.055554389953613
    8. 'return' → logprob: -6.430554389953613
    9. ' ():' → logprob: -6.555554389953613
    10. ':return' → logprob: -6.555554389953613

Token 8: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.38121297955513
    2. ' return' → logprob: -2.1312129497528076
    3. 'int' → logprob: -2.2562129497528076
    4. '   ' → logprob: -2.3812129497528076
    5. ' int' → logprob: -6.881213188171387
    6. '(int' → logprob: -10.756213188171387
    7. '<int' → logprob: -11.381213188171387
    8. '=int' → logprob: -12.256213188171387
    9. '```' → logprob: -12.256213188171387
    10. '    ' → logprob: -12.506213188171387

Token 9: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.00039647609810344875
    2. 'int' → logprob: -7.875396251678467
    3. ' ' → logprob: -11.125396728515625
    4. ' map' → logprob: -14.125396728515625
    5. '(int' → logprob: -14.875396728515625
    6. ' ' → logprob: -15.125396728515625
    7. '  ' → logprob: -16.000396728515625
    8. '<int' → logprob: -16.625396728515625
    9. '   ' → logprob: -17.000396728515625
    10. ' in' → logprob: -17.250396728515625

Token 10: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3133701980113983
    2. '(input' → logprob: -1.3133702278137207
    3. '('' → logprob: -9.938369750976562
    4. '()' → logprob: -11.188369750976562
    5. '("("' → logprob: -11.438369750976562
    6. '(
' → logprob: -11.938369750976562
    7. '(open' → logprob: -11.938369750976562
    8. 'input' → logprob: -11.938369750976562
    9. '(raw' → logprob: -12.688369750976562
    10. ' (' → logprob: -13.188369750976562

Token 11: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.06912999600172043
    2. '()))' → logprob: -3.0691299438476562
    3. '()' → logprob: -3.9441299438476562
    4. ')' → logprob: -7.194129943847656
    5. '(' → logprob: -9.569129943847656
    6. '))' → logprob: -9.694129943847656
    7. ' ())' → logprob: -10.444129943847656
    8. '().' → logprob: -11.194129943847656
    9. '()),' → logprob: -11.819129943847656
    10. '())))' → logprob: -12.069129943847656

Token 12: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.33710089325904846
    2. 'n' → logprob: -1.337100863456726
    3. '\n' → logprob: -4.962100982666016
    4. 'for' → logprob: -5.212100982666016
    5. 'num' → logprob: -5.837100982666016
    6. 'number' → logprob: -6.337100982666016
    7. 'a' → logprob: -6.837100982666016
    8. '```' → logprob: -6.962100982666016
    9. 'x' → logprob: -7.087100982666016
    10. '\' → logprob: -7.837100982666016

Token 13: ' read' (ID: 1729)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5808228254318237
    2. ' factorial' → logprob: -2.0808229446411133
    3. ' read' → logprob: -2.4558229446411133
    4. ' calculate' → logprob: -3.0808229446411133
    5. ' _' → logprob: -3.3308229446411133
    6. ' space' → logprob: -3.3308229446411133
    7. ' write' → logprob: -4.330822944641113
    8. ' count' → logprob: -4.705822944641113
    9. ' main' → logprob: -4.830822944641113
    10. ' itertools' → logprob: -4.955822944641113

Token 14: '_tuple' (ID: 53371)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0019956084433943033
    2. '_line' → logprob: -6.50199556350708
    3. '_int' → logprob: -8.251996040344238
    4. '_string' → logprob: -9.501996040344238
    5. ' _' → logprob: -10.626996040344238
    6. '_str' → logprob: -10.876996040344238
    7. '_token' → logprob: -11.376996040344238
    8. '_val' → logprob: -11.876996040344238
    9. '_char' → logprob: -11.876996040344238
    10. '(' → logprob: -12.001996040344238

Token 15: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.09029330313205719
    2. '()' → logprob: -2.4652934074401855
    3. '(' → logprob: -6.9652934074401855
    4. '()>' → logprob: -9.715292930603027
    5. '():
' → logprob: -9.715292930603027
    6. '()">' → logprob: -10.215292930603027
    7. '`()' → logprob: -10.340292930603027
    8. '()<' → logprob: -10.465292930603027
    9. '()*' → logprob: -10.465292930603027
    10. '()<<' → logprob: -10.715292930603027

Token 16: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.021229181438684464
    2. '(' → logprob: -4.646229267120361
    3. '   ' → logprob: -5.146229267120361
    4. '():' → logprob: -5.396229267120361
    5. ' ()' → logprob: -7.646229267120361
    6. 'return' → logprob: -8.396228790283203
    7. ' return' → logprob: -10.271228790283203
    8. '():
' → logprob: -10.271228790283203
    9. '(
' → logprob: -10.396228790283203
    10. 'def' → logprob: -10.521228790283203

Token 17: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.07140384614467621
    2. 'tuple' → logprob: -3.696403741836548
    3. ' return' → logprob: -3.821403741836548
    4. '   ' → logprob: -4.196403980255127
    5. ' tuple' → logprob: -5.696403980255127
    6. '()' → logprob: -6.321403980255127
    7. 'input' → logprob: -7.321403980255127
    8. '(' → logprob: -8.071403503417969
    9. 'int' → logprob: -8.071403503417969
    10. 'map' → logprob: -8.446403503417969

Token 18: ' tuple' (ID: 31311)
  Prédit: ' tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tuple' → logprob: -0.38737753033638
    2. 'tuple' → logprob: -1.1373775005340576
    3. '(tuple' → logprob: -8.637377738952637
    4. 'map' → logprob: -8.887377738952637
    5. 'int' → logprob: -9.262377738952637
    6. ' map' → logprob: -9.762377738952637
    7. ' int' → logprob: -10.762377738952637
    8. ' ' → logprob: -11.762377738952637
    9. '   ' → logprob: -12.887377738952637
    10. '  ' → logprob: -13.012377738952637

Token 19: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.21543562412261963
    2. '(int' → logprob: -2.09043550491333
    3. '(input' → logprob: -3.34043550491333
    4. '(' → logprob: -3.59043550491333
    5. '(it' → logprob: -5.21543550491333
    6. '(iter' → logprob: -7.09043550491333
    7. '(list' → logprob: -7.59043550491333
    8. '(i' → logprob: -9.715435981750488
    9. '(lambda' → logprob: -10.340435981750488
    10. '(ord' → logprob: -10.340435981750488

Token 20: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0008494134526699781
    2. '(' → logprob: -7.37584924697876
    3. 'int' → logprob: -8.625849723815918
    4. '<int' → logprob: -11.250849723815918
    5. '(str' → logprob: -11.875849723815918
    6. '(input' → logprob: -12.125849723815918
    7. '=int' → logprob: -12.250849723815918
    8. ',int' → logprob: -12.625849723815918
    9. '   ' → logprob: -13.375849723815918
    10. ' int' → logprob: -13.375849723815918

Token 21: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.26755544543266296
    2. ',input' → logprob: -1.7675554752349854
    3. ',' → logprob: -3.0175554752349854
    4. 'input' → logprob: -4.267555236816406
    5. '(' → logprob: -7.642555236816406
    6. ' input' → logprob: -8.142555236816406
    7. '),' → logprob: -9.767555236816406
    8. '))' → logprob: -9.892555236816406
    9. ' (' → logprob: -10.017555236816406
    10. ' ,' → logprob: -10.142555236816406

Token 22: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.03804917633533478
    2. ' input' → logprob: -3.2880492210388184
    3. '(input' → logprob: -12.78804874420166
    4. ',input' → logprob: -13.41304874420166
    5. '=input' → logprob: -13.78804874420166
    6. '   ' → logprob: -14.16304874420166
    7. '	input' → logprob: -14.78804874420166
    8. '<input' → logprob: -15.03804874420166
    9. ' ' → logprob: -15.41304874420166
    10. ')' → logprob: -15.41304874420166

Token 23: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00011236425780225545
    2. '()' → logprob: -9.125112533569336
    3. ' ().' → logprob: -13.500112533569336
    4. '.split' → logprob: -14.500112533569336
    5. '()))' → logprob: -15.250112533569336
    6. ')' → logprob: -15.375112533569336
    7. '.' → logprob: -15.625112533569336
    8. 'split' → logprob: -15.625112533569336
    9. '.strip' → logprob: -15.875112533569336
    10. '))' → logprob: -16.125112533569336

Token 24: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.008623674511909485
    2. 'strip' → logprob: -4.7586236000061035
    3. 'rstrip' → logprob: -11.758624076843262
    4. ' split' → logprob: -14.633624076843262
    5. ')' → logprob: -14.758624076843262
    6. '(split' → logprob: -15.258624076843262
    7. 'read' → logprob: -16.133623123168945
    8. 'spl' → logprob: -17.258623123168945
    9. '.split' → logprob: -17.758623123168945
    10. 's' → logprob: -18.383623123168945

Token 25: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.20827658474445343
    2. '))' → logprob: -1.708276629447937
    3. '()' → logprob: -5.458276748657227
    4. '())' → logprob: -6.083276748657227
    5. ')' → logprob: -8.833276748657227
    6. '(' → logprob: -9.833276748657227
    7. ')))' → logprob: -9.958276748657227
    8. '())))' → logprob: -10.708276748657227
    9. '()))
' → logprob: -10.958276748657227
    10. '()));' → logprob: -12.333276748657227

Token 26: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.021467115730047226
    2. 'd' → logprob: -4.271467208862305
    3. '\' → logprob: -5.771467208862305
    4. 'n' → logprob: -6.521467208862305
    5. 'for' → logprob: -7.021467208862305
    6. '\n' → logprob: -7.646467208862305
    7. '
' → logprob: -8.021467208862305
    8. '

' → logprob: -8.521467208862305
    9. '```' → logprob: -8.646467208862305
    10. 'de' → logprob: -9.146467208862305

Token 27: ' get' (ID: 717)
  Prédit: ' read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.391474187374115
    2. 'read' → logprob: -1.2664742469787598
    3. ' main' → logprob: -4.39147424697876
    4. ' product' → logprob: -4.64147424697876
    5. 'product' → logprob: -5.39147424697876
    6. ' combinations' → logprob: -6.01647424697876
    7. 'main' → logprob: -6.26647424697876
    8. ' count' → logprob: -6.39147424697876
    9. ' permutations' → logprob: -6.39147424697876
    10. 'count' → logprob: -6.51647424697876

Token 28: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.762921929359436
    2. '_per' → logprob: -1.262921929359436
    3. '_max' → logprob: -1.762921929359436
    4. '_com' → logprob: -4.3879218101501465
    5. '_factor' → logprob: -4.6379218101501465
    6. ' _' → logprob: -5.1379218101501465
    7. '_items' → logprob: -5.3879218101501465
    8. '_comb' → logprob: -5.3879218101501465
    9. '_s' → logprob: -5.8879218101501465
    10. '_sub' → logprob: -6.2629218101501465

Token 29: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.14426642656326294
    2. '_' → logprob: -2.894266366958618
    3. '(' → logprob: -3.019266366958618
    4. '():' → logprob: -4.144266605377197
    5. '_line' → logprob: -5.894266605377197
    6. '`()' → logprob: -6.019266605377197
    7. '_data' → logprob: -6.269266605377197
    8. '```' → logprob: -6.769266605377197
    9. '_lines' → logprob: -7.644266605377197
    10. '_parent' → logprob: -7.894266605377197

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018711816519498825
    2. ' return' → logprob: -5.018712043762207
    3. '()' → logprob: -5.768712043762207
    4. '    
' → logprob: -6.143712043762207
    5. 'return' → logprob: -6.143712043762207
    6. '\n' → logprob: -6.893712043762207
    7. '(' → logprob: -7.018712043762207
    8. '[]' → logprob: -7.643712043762207
    9. '[' → logprob: -8.018712043762207
    10. '```' → logprob: -8.268712043762207

Token 31: ' N' (ID: 478)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6659291386604309
    2. ' return' → logprob: -1.1659290790557861
    3. 'return' → logprob: -2.790929079055786
    4. '    ' → logprob: -3.040929079055786
    5. 'n' → logprob: -3.915929079055786
    6. 'input' → logprob: -4.915929317474365
    7. ' []' → logprob: -5.165929317474365
    8. ' n' → logprob: -5.290929317474365
    9. ' input' → logprob: -5.415929317474365
    10. 'data' → logprob: -5.540929317474365

Token 32: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4716000556945801
    2. ' =' → logprob: -1.09660005569458
    3. ' ,' → logprob: -3.72160005569458
    4. '=' → logprob: -4.09660005569458
    5. ' ' → logprob: -7.34660005569458
    6. ')' → logprob: -8.346599578857422
    7. '  ' → logprob: -9.221599578857422
    8. '   ' → logprob: -9.721599578857422
    9. ' =
' → logprob: -10.471599578857422
    10. '=int' → logprob: -11.096599578857422

Token 33: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.00017016702622640878
    2. 'read' → logprob: -8.75016975402832
    3. ' ' → logprob: -11.50016975402832
    4. ' int' → logprob: -13.62516975402832
    5. ' readline' → logprob: -16.25016975402832
    6. ' space' → logprob: -16.50016975402832
    7. '	read' → logprob: -16.62516975402832
    8. ' write' → logprob: -17.87516975402832
    9. '(read' → logprob: -18.25016975402832
    10. ' input' → logprob: -18.75016975402832

Token 34: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.05560332164168358
    2. '_' → logprob: -2.930603265762329
    3. '_line' → logprob: -8.18060302734375
    4. '_integer' → logprob: -8.80560302734375
    5. '_space' → logprob: -9.30560302734375
    6. ' _' → logprob: -10.18060302734375
    7. '_in' → logprob: -10.18060302734375
    8. '_INT' → logprob: -10.93060302734375
    9. '_i' → logprob: -11.43060302734375
    10. '_uint' → logprob: -11.43060302734375

Token 35: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.531315314830863e-06
    2. '()
' → logprob: -12.875003814697266
    3. '())' → logprob: -14.625003814697266
    4. ' ()' → logprob: -15.125003814697266
    5. '()

' → logprob: -16.375003814697266
    6. ')' → logprob: -17.125003814697266
    7. '()]' → logprob: -18.500003814697266
    8. '()`' → logprob: -18.500003814697266
    9. '()\' → logprob: -18.500003814697266
    10. '()<' → logprob: -18.625003814697266

Token 36: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08933125436306
    2. '<|end|>' → logprob: -3.0893311500549316
    3. '    
' → logprob: -4.339331150054932
    4. ')' → logprob: -5.339331150054932
    5. '
' → logprob: -5.589331150054932
    6. ' ' → logprob: -5.839331150054932
    7. '()' → logprob: -6.214331150054932
    8. ' 
' → logprob: -6.339331150054932
    9. '  ' → logprob: -6.589331150054932
    10. '    ' → logprob: -6.589331150054932

Token 37: ' P' (ID: 398)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.9204564690589905
    2. ' lst' → logprob: -3.0454564094543457
    3. 'data' → logprob: -3.1704564094543457
    4. 'A' → logprob: -3.1704564094543457
    5. ' L' → logprob: -3.2954564094543457
    6. '   ' → logprob: -3.2954564094543457
    7. '(' → logprob: -3.5454564094543457
    8. ' M' → logprob: -3.5454564094543457
    9. ' data' → logprob: -3.6704564094543457
    10. ' items' → logprob: -3.6704564094543457

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1875564455986023
    2. '=' → logprob: -1.812556505203247
    3. 's' → logprob: -5.562556266784668
    4. '=[]' → logprob: -6.937556266784668
    5. ',' → logprob: -8.062556266784668
    6. '   ' → logprob: -8.312556266784668
    7. ' ' → logprob: -8.437556266784668
    8. 'ermut' → logprob: -8.562556266784668
    9. '_list' → logprob: -8.562556266784668
    10. 'r' → logprob: -8.562556266784668

Token 39: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -1.07779860496521
    2. ' read' → logprob: -1.20279860496521
    3. ' [' → logprob: -1.45279860496521
    4. ' list' → logprob: -3.07779860496521
    5. '[' → logprob: -3.20279860496521
    6. 'list' → logprob: -4.202798843383789
    7. ' tuple' → logprob: -4.827798843383789
    8. 'tuple' → logprob: -5.702798843383789
    9. ' []' → logprob: -5.702798843383789
    10. '[]' → logprob: -6.202798843383789

Token 40: '_tuple' (ID: 53371)
  Prédit: '_tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tuple' → logprob: -0.008935756050050259
    2. '_int' → logprob: -4.883935928344727
    3. '_' → logprob: -6.758935928344727
    4. 'int' → logprob: -9.883935928344727
    5. '_line' → logprob: -10.008935928344727
    6. '_list' → logprob: -10.383935928344727
    7. '_array' → logprob: -11.133935928344727
    8. '_t' → logprob: -12.633935928344727
    9. 'tuple' → logprob: -12.883935928344727
    10. '```' → logprob: -12.883935928344727

Token 41: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.5570885807392187e-05
    2. '()
' → logprob: -11.500015258789062
    3. '(' → logprob: -12.625015258789062
    4. ' ()' → logprob: -14.000015258789062
    5. '())' → logprob: -14.750015258789062
    6. '()

' → logprob: -14.875015258789062
    7. '()`' → logprob: -15.625015258789062
    8. '()]' → logprob: -16.125015258789062
    9. '()"' → logprob: -17.250015258789062
    10. '()\' → logprob: -17.375015258789062

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0065031517297029495
    2. '    
' → logprob: -5.881503105163574
    3. '()' → logprob: -7.256503105163574
    4. '
' → logprob: -7.256503105163574
    5. 'return' → logprob: -7.256503105163574
    6. ' return' → logprob: -8.131503105163574
    7. ')' → logprob: -8.131503105163574
    8. '(' → logprob: -8.131503105163574
    9. '()
' → logprob: -8.631503105163574
    10. ' ' → logprob: -9.131503105163574

Token 43: ' Q' (ID: 1486)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6514300107955933
    2. 'return' → logprob: -1.5264300107955933
    3. ' return' → logprob: -1.7764300107955933
    4. ')' → logprob: -3.776430130004883
    5. 'R' → logprob: -3.901430130004883
    6. ' R' → logprob: -4.901430130004883
    7. 'I' → logprob: -5.401430130004883
    8. '
' → logprob: -5.526430130004883
    9. '    
' → logprob: -5.526430130004883
    10. ' ' → logprob: -5.526430130004883

Token 44: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519325315952301
    2. '=' → logprob: -1.5019325017929077
    3. '_' → logprob: -13.376932144165039
    4. '   ' → logprob: -14.751932144165039
    5. ' ' → logprob: -15.001932144165039
    6. ',' → logprob: -15.126932144165039
    7. '  ' → logprob: -15.251932144165039
    8. '＝' → logprob: -16.12693214416504
    9. '.' → logprob: -16.25193214416504
    10. 's' → logprob: -16.62693214416504

Token 45: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.007610770873725414
    2. 'read' → logprob: -4.88261079788208
    3. ' tuple' → logprob: -13.632610321044922
    4. '(read' → logprob: -13.632610321044922
    5. ' ' → logprob: -13.882610321044922
    6. '	read' → logprob: -14.507610321044922
    7. ' list' → logprob: -15.132610321044922
    8. '   ' → logprob: -15.382610321044922
    9. '  ' → logprob: -16.257610321044922
    10. ' get' → logprob: -16.507610321044922

Token 46: '_tuple' (ID: 53371)
  Prédit: '_tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tuple' → logprob: -0.0009795783553272486
    2. '_' → logprob: -7.375979423522949
    3. '_int' → logprob: -8.12597942352295
    4. 'int' → logprob: -10.12597942352295
    5. 'tuple' → logprob: -11.75097942352295
    6. '_t' → logprob: -12.50097942352295
    7. 'Tuple' → logprob: -12.87597942352295
    8. '```' → logprob: -13.87597942352295
    9. ' ' → logprob: -15.37597942352295
    10. ' _' → logprob: -15.50097942352295

Token 47: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.8908587662735954e-05
    2. '())' → logprob: -11.875019073486328
    3. '(' → logprob: -12.125019073486328
    4. '()
' → logprob: -13.000019073486328
    5. '()`' → logprob: -13.625019073486328
    6. '()

' → logprob: -13.750019073486328
    7. '()]' → logprob: -14.375019073486328
    8. ' ()' → logprob: -15.250019073486328
    9. '()<' → logprob: -15.375019073486328
    10. '`()' → logprob: -15.500019073486328

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004552215104922652
    2. '    
' → logprob: -7.875455379486084
    3. '<|end|>' → logprob: -10.625454902648926
    4. 'return' → logprob: -11.375454902648926
    5. '```' → logprob: -11.750454902648926
    6. ')' → logprob: -11.875454902648926
    7. 'def' → logprob: -11.875454902648926
    8. '	return' → logprob: -12.500454902648926
    9. '
' → logprob: -12.875454902648926
    10. '()' → logprob: -13.750454902648926

Token 49: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003414751496165991
    2. 'return' (adapté à ' return') → logprob: -5.878414630889893
    3. '    
' → logprob: -8.12841510772705
    4. ' return' → logprob: -9.12841510772705
    5. ')' → logprob: -9.37841510772705
    6. '```' → logprob: -10.00341510772705
    7. '
' → logprob: -10.50341510772705
    8. 'def' → logprob: -11.50341510772705
    9. 'result' → logprob: -12.25341510772705
    10. 'data' → logprob: -12.87841510772705

Token 50: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.10126758366823196
    2. ' N' → logprob: -2.3512675762176514
    3. '(N' → logprob: -7.2262678146362305
    4. ' (' → logprob: -8.72626781463623
    5. '   ' → logprob: -8.97626781463623
    6. ' ' → logprob: -10.72626781463623
    7. '(' → logprob: -11.60126781463623
    8. '[N' → logprob: -12.60126781463623
    9. 'P' → logprob: -12.85126781463623
    10. '	N' → logprob: -12.97626781463623

Token 51: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.048484254628419876
    2. ',N' → logprob: -3.4234843254089355
    3. ',P' → logprob: -4.6734843254089355
    4. '<|end|>' → logprob: -5.6734843254089355
    5. ' ,' → logprob: -6.7984843254089355
    6. '   ' → logprob: -8.173483848571777
    7. ' ' → logprob: -9.423483848571777
    8. 'N' → logprob: -9.548483848571777
    9. ',Q' → logprob: -10.048483848571777
    10. ')' → logprob: -10.048483848571777

Token 52: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.47410446405410767
    2. ' P' → logprob: -0.9741044640541077
    3. ' ' → logprob: -12.224104881286621
    4. ''' → logprob: -12.349104881286621
    5. ' ' → logprob: -12.474104881286621
    6. 'space' → logprob: -12.724104881286621
    7. '"' → logprob: -12.849104881286621
    8. '`' → logprob: -13.099104881286621
    9. ',P' → logprob: -14.224104881286621
    10. '(P' → logprob: -14.536604881286621

Token 53: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009445453062653542
    2. ',Q' → logprob: -5.009445667266846
    3. ' ,' → logprob: -6.009445667266846
    4. 'Q' → logprob: -9.009445190429688
    5. '   ' → logprob: -9.634445190429688
    6. ' Q' → logprob: -9.634445190429688
    7. ',
' → logprob: -11.759445190429688
    8. '	Q' → logprob: -12.759445190429688
    9. '  ' → logprob: -13.634445190429688
    10. ',q' → logprob: -13.634445190429688

Token 54: ' Q' (ID: 1486)
  Prédit: ' Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Q' → logprob: -0.005447435192763805
    2. 'Q' → logprob: -5.2554473876953125
    3. ' ' → logprob: -8.630447387695312
    4. ' ' → logprob: -10.505447387695312
    5. ''' → logprob: -13.255447387695312
    6. '	Q' → logprob: -13.630447387695312
    7. '"' → logprob: -14.255447387695312
    8. ' ,' → logprob: -14.630447387695312
    9. ',Q' → logprob: -14.755447387695312
    10. '`' → logprob: -14.755447387695312

Token 55: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.8017263412475586
    2. '
' → logprob: -1.3017263412475586
    3. 'def' → logprob: -1.3017263412475586
    4. '```' → logprob: -6.426726341247559
    5. '\' → logprob: -6.676726341247559
    6. '*' → logprob: -6.926726341247559
    7. '\n' → logprob: -7.426726341247559
    8. '
' → logprob: -7.551726341247559
    9. 'n' → logprob: -7.801726341247559
    10. '' → logprob: -7.926726341247559

Token 56: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0019057857571169734
    2. '

' → logprob: -7.376905918121338
    3. '
' → logprob: -7.501905918121338
    4. '\' → logprob: -8.25190544128418
    5. '```' → logprob: -8.62690544128418
    6. 'd' → logprob: -9.00190544128418
    7. '#' → logprob: -9.12690544128418
    8. 'for' → logprob: -11.62690544128418
    9. '\n' → logprob: -11.62690544128418
    10. 'de' → logprob: -12.37690544128418

Token 57: ' are' (ID: 553)
  Prédit: ' factorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -0.6754950881004333
    2. ' permutations' → logprob: -1.6754951477050781
    3. ' main' → logprob: -2.550495147705078
    4. ' solve' → logprob: -3.425495147705078
    5. ' permutation' → logprob: -3.550495147705078
    6. ' get' → logprob: -4.175495147705078
    7. ' perm' → logprob: -4.175495147705078
    8. ' calculate' → logprob: -4.175495147705078
    9. '_factor' → logprob: -4.175495147705078
    10. ' _' → logprob: -4.300495147705078

Token 58: '_equal' (ID: 27882)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.33258381485939026
    2. '_per' → logprob: -1.3325837850570679
    3. '_equal' → logprob: -4.582583904266357
    4. '_an' → logprob: -5.332583904266357
    5. '_in' → logprob: -7.207583904266357
    6. '_sequences' → logprob: -7.332583904266357
    7. '_same' → logprob: -7.957583904266357
    8. '_perm' → logprob: -8.4575834274292
    9. '_lists' → logprob: -8.5825834274292
    10. ' ' → logprob: -8.5825834274292

Token 59: '(P' (ID: 8952)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004402582533657551
    2. '(P' → logprob: -6.0044026374816895
    3. '(_' → logprob: -7.2544026374816895
    4. '(a' → logprob: -7.6294026374816895
    5. '_' → logprob: -8.379402160644531
    6. '(p' → logprob: -9.379402160644531
    7. '(_)' → logprob: -9.379402160644531
    8. ' (' → logprob: -9.629402160644531
    9. 's' → logprob: -9.754402160644531
    10. '(s' → logprob: -10.754402160644531

Token 60: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010328134521842003
    2. ' ,' → logprob: -5.51032829284668
    3. ',Q' → logprob: -5.63532829284668
    4. ',P' → logprob: -6.01032829284668
    5. ',N' → logprob: -9.88532829284668
    6. '[' → logprob: -10.63532829284668
    7. ',q' → logprob: -10.76032829284668
    8. ',p' → logprob: -10.76032829284668
    9. ')' → logprob: -11.01032829284668
    10. '   ' → logprob: -11.38532829284668

Token 61: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.17976652085781097
    2. ' Q' → logprob: -1.8047665357589722
    3. ')' → logprob: -11.429766654968262
    4. '	Q' → logprob: -12.554766654968262
    5. ' ' → logprob: -12.929766654968262
    6. '   ' → logprob: -13.304766654968262
    7. ',Q' → logprob: -13.929766654968262
    8. '    ' → logprob: -14.929766654968262
    9. '  ' → logprob: -15.179766654968262
    10. ' ' → logprob: -15.367266654968262

Token 62: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006148365326225758
    2. ')' → logprob: -5.131148338317871
    3. '):
' → logprob: -8.881148338317871
    4. ' ):' → logprob: -10.006148338317871
    5. ',' → logprob: -11.006148338317871
    6. ':' → logprob: -11.756148338317871
    7. '   ' → logprob: -12.131148338317871
    8. ' )' → logprob: -14.381148338317871
    9. ' ' → logprob: -14.631148338317871
    10. '**' → logprob: -14.756148338317871

Token 63: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3912560045719147
    2. '   ' → logprob: -2.016256093978882
    3. '(P' → logprob: -2.016256093978882
    4. '(p' → logprob: -3.391256093978882
    5. ':' → logprob: -4.016255855560303
    6. '):' → logprob: -7.141255855560303
    7. '[' → logprob: -7.266255855560303
    8. '(
' → logprob: -7.766255855560303
    9. ' return' → logprob: -7.766255855560303
    10. ' (' → logprob: -7.766255855560303

Token 64: ' return' (ID: 622)
  Prédit: ' P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' P' → logprob: -0.09881594032049179
    2. 'P' → logprob: -3.47381591796875
    3. ' all' → logprob: -3.72381591796875
    4. ' set' → logprob: -3.84881591796875
    5. ' return' → logprob: -4.47381591796875
    6. '   ' → logprob: -6.34881591796875
    7. ' sorted' → logprob: -6.59881591796875
    8. 'all' → logprob: -7.34881591796875
    9. 'set' → logprob: -7.34881591796875
    10. ' len' → logprob: -7.72381591796875

Token 65: ' P' (ID: 398)
  Prédit: ' P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' P' → logprob: -0.16912320256233215
    2. 'P' → logprob: -2.0441231727600098
    3. ' sorted' → logprob: -5.04412317276001
    4. ' all' → logprob: -5.16912317276001
    5. ' list' → logprob: -5.41912317276001
    6. 'sorted' → logprob: -5.91912317276001
    7. ' set' → logprob: -6.16912317276001
    8. 'all' → logprob: -6.41912317276001
    9. 'list' → logprob: -6.66912317276001
    10. 'set' → logprob: -7.41912317276001

Token 66: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2812669575214386
    2. ' ==' → logprob: -1.4062669277191162
    3. '=' → logprob: -9.656267166137695
    4. '[' → logprob: -11.156267166137695
    5. '==
' → logprob: -11.531267166137695
    6. '[:]' → logprob: -11.531267166137695
    7. ')==' → logprob: -11.906267166137695
    8. '!=' → logprob: -12.906267166137695
    9. '[::-' → logprob: -12.906267166137695
    10. ')' → logprob: -13.406267166137695

Token 67: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.6931478381156921
    2. ' Q' → logprob: -0.6931478381156921
    3. '	Q' → logprob: -14.943147659301758
    4. ' ' → logprob: -16.443147659301758
    5. '(Q' → logprob: -16.693147659301758
    6. ' ' → logprob: -16.943147659301758
    7. '_Q' → logprob: -17.068147659301758
    8. ',Q' → logprob: -17.693147659301758
    9. '<Q' → logprob: -17.943147659301758
    10. '.Q' → logprob: -18.443147659301758

Token 68: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.3839174509048462
    2. 'def' → logprob: -1.2589174509048462
    3. '
' → logprob: -3.3839173316955566
    4. '<|end|>' → logprob: -7.883917331695557
    5. '\n' → logprob: -8.633917808532715
    6. '
' → logprob: -9.383917808532715
    7. '```' → logprob: -9.758917808532715
    8. ' 

' → logprob: -10.008917808532715
    9. '


' → logprob: -10.508917808532715
    10. '\' → logprob: -10.633917808532715

Token 69: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007142275106161833
    2. '
' → logprob: -5.882142066955566
    3. '\' → logprob: -6.632142066955566
    4. '#' → logprob: -6.882142066955566
    5. '

' → logprob: -7.132142066955566
    6. '```' → logprob: -8.007142066955566
    7. '\n' → logprob: -8.132142066955566
    8. '(' → logprob: -9.882142066955566
    9. '<|end|>' → logprob: -10.007142066955566
    10. '  
' → logprob: -10.257142066955566

Token 70: ' construct' (ID: 12871)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.4475184381008148
    2. ' main' → logprob: -1.5725184679031372
    3. 'get' → logprob: -3.4475183486938477
    4. 'generate' → logprob: -3.8225183486938477
    5. 'per' → logprob: -3.9475183486938477
    6. 'factor' → logprob: -4.197518348693848
    7. 'perm' → logprob: -4.322518348693848
    8. ' permutations' → logprob: -4.822518348693848
    9. 'all' → logprob: -5.072518348693848
    10. 'def' → logprob: -5.197518348693848

Token 71: '_p' (ID: 1359)
  Prédit: '_per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_per' → logprob: -0.06493127346038818
    2. '(' → logprob: -4.189931392669678
    3. '_array' → logprob: -4.564931392669678
    4. '_' → logprob: -5.189931392669678
    5. '_perm' → logprob: -5.439931392669678
    6. '_sub' → logprob: -5.814931392669678
    7. '_sequence' → logprob: -5.939931392669678
    8. '_list' → logprob: -6.189931392669678
    9. '_all' → logprob: -6.189931392669678
    10. '_subset' → logprob: -6.314931392669678

Token 72: 'q' (ID: 80)
  Prédit: 'ermut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ermut' → logprob: -0.1909455806016922
    2. 'erm' → logprob: -1.8159456253051758
    3. 'er' → logprob: -4.940945625305176
    4. '(' → logprob: -6.690945625305176
    5. '_per' → logprob: -6.940945625305176
    6. '_' → logprob: -8.065945625305176
    7. 'ERM' → logprob: -8.940945625305176
    8. 'ermission' → logprob: -9.190945625305176
    9. '_sequence' → logprob: -9.440945625305176
    10. '[]' → logprob: -9.690945625305176

Token 73: '_list' (ID: 4162)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09033947438001633
    2. '(P' → logprob: -2.715339422225952
    3. '_' → logprob: -5.965339660644531
    4. '(N' → logprob: -6.090339660644531
    5. '(p' → logprob: -6.215339660644531
    6. '(_' → logprob: -6.215339660644531
    7. '(_)' → logprob: -6.215339660644531
    8. '()' → logprob: -6.340339660644531
    9. '(n' → logprob: -6.465339660644531
    10. 's' → logprob: -6.715339660644531

Token 74: '(P' (ID: 8952)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07716818153858185
    2. '(N' → logprob: -2.8271682262420654
    3. '()' → logprob: -4.952167987823486
    4. '():' → logprob: -5.452167987823486
    5. '(P' → logprob: -6.327167987823486
    6. '(n' → logprob: -6.577167987823486
    7. '(size' → logprob: -9.702168464660645
    8. '((' → logprob: -9.952168464660645
    9. '(s' → logprob: -10.077168464660645
    10. 's' → logprob: -10.202168464660645

Token 75: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3585940897464752
    2. ',' → logprob: -1.2335940599441528
    3. ')' → logprob: -4.733593940734863
    4. '):
' → logprob: -7.233593940734863
    5. ' ):' → logprob: -8.108593940734863
    6. ' ,' → logprob: -9.233593940734863
    7. ',n' → logprob: -10.108593940734863
    8. ':' → logprob: -10.483593940734863
    9. ',len' → logprob: -11.358593940734863
    10. ' )' → logprob: -11.483593940734863

Token 76: ' Q' (ID: 1486)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.12386582791805267
    2. ' N' → logprob: -2.373865842819214
    3. 'n' → logprob: -4.248865604400635
    4. ')' → logprob: -5.248865604400635
    5. ' n' → logprob: -6.248865604400635
    6. 'Q' → logprob: -7.498865604400635
    7. ' )' → logprob: -7.873865604400635
    8. ' ' → logprob: -8.998866081237793
    9. '   ' → logprob: -9.248866081237793
    10. 'k' → logprob: -9.748866081237793

Token 77: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02268334850668907
    2. ',' → logprob: -3.8976833820343018
    3. '):
' → logprob: -6.647683143615723
    4. ')' → logprob: -7.272683143615723
    5. ' ):' → logprob: -9.397683143615723
    6. '):
' → logprob: -10.522683143615723
    7. ':' → logprob: -11.397683143615723
    8. '   ' → logprob: -11.647683143615723
    9. ' ,' → logprob: -12.272683143615723
    10. ',n' → logprob: -13.272683143615723

Token 78: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014613081002607942
    2. ' return' → logprob: -7.876461505889893
    3. '[]' → logprob: -8.001461029052734
    4. ' list' → logprob: -8.126461029052734
    5. '[' → logprob: -9.376461029052734
    6. '    
' → logprob: -10.001461029052734
    7. 'return' → logprob: -10.001461029052734
    8. ' itertools' → logprob: -10.376461029052734
    9. '[]
' → logprob: -10.501461029052734
    10. 'list' → logprob: -10.751461029052734

Token 79: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3627841472625732
    2. 'list' → logprob: -1.9877841472625732
    3. ' return' → logprob: -2.1127841472625732
    4. 'return' (adapté à ' return') → logprob: -2.1127841472625732
    5. ' list' → logprob: -2.1127841472625732
    6. 'lst' → logprob: -2.4877841472625732
    7. '[]' → logprob: -3.6127841472625732
    8. ' lst' → logprob: -3.8627841472625732
    9. 'result' → logprob: -4.237784385681152
    10. ' pq' → logprob: -4.237784385681152

Token 80: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.17617593705654144
    2. '[P' → logprob: -2.051175832748413
    3. 'list' → logprob: -3.676175832748413
    4. '[it' → logprob: -5.551176071166992
    5. '[' → logprob: -6.426176071166992
    6. ' [' → logprob: -7.551176071166992
    7. ' list' → logprob: -7.801176071166992
    8. '[p' → logprob: -8.051176071166992
    9. '[i' → logprob: -8.551176071166992
    10. '[int' → logprob: -9.051176071166992

Token 81: 'P' (ID: 47)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.5664991736412048
    2. 'p' → logprob: -2.1914992332458496
    3. '(P' → logprob: -2.1914992332458496
    4. '(p' → logprob: -2.4414992332458496
    5. 'P' → logprob: -2.9414992332458496
    6. 'i' → logprob: -3.8164992332458496
    7. '(' → logprob: -4.56649923324585
    8. 'list' → logprob: -4.94149923324585
    9. '[i' → logprob: -5.19149923324585
    10. '(x' → logprob: -5.31649923324585

Token 82: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09062052518129349
    2. ']' → logprob: -2.715620517730713
    3. ',Q' → logprob: -4.215620517730713
    4. ' ,' → logprob: -5.340620517730713
    5. '[i' → logprob: -8.590620994567871
    6. '[' → logprob: -8.840620994567871
    7. ',
' → logprob: -9.090620994567871
    8. ' ]' → logprob: -9.090620994567871
    9. ',i' → logprob: -9.590620994567871
    10. ']+' → logprob: -9.840620994567871

Token 83: ' Q' (ID: 1486)
  Prédit: ' Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Q' → logprob: -0.47408074140548706
    2. 'Q' → logprob: -0.9740807414054871
    3. '	Q' → logprob: -13.849081039428711
    4. ' ' → logprob: -14.849081039428711
    5. ']' → logprob: -15.099081039428711
    6. '   ' → logprob: -15.224081039428711
    7. ')' → logprob: -15.224081039428711
    8. '*' → logprob: -15.349081039428711
    9. ',Q' → logprob: -15.349081039428711
    10. ' *' → logprob: -15.724081039428711

Token 84: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.641841820150148e-05
    2. ' ]' → logprob: -10.62502670288086
    3. ']
' → logprob: -14.00002670288086
    4. ',' → logprob: -14.62502670288086
    5. ')' → logprob: -15.00002670288086
    6. '}' → logprob: -16.50002670288086
    7. ']

' → logprob: -16.75002670288086
    8. ')]' → logprob: -17.12502670288086
    9. '   ' → logprob: -17.25002670288086
    10. '']' → logprob: -17.37502670288086

Token 85: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0138697549700737
    2. '
' → logprob: -5.388869762420654
    3. '<|end|>' → logprob: -5.388869762420654
    4. '

' → logprob: -5.513869762420654
    5. '<|end|>' → logprob: -8.013869285583496
    6. '[' → logprob: -9.888869285583496
    7. '```' → logprob: -9.888869285583496
    8. 'import' → logprob: -9.888869285583496
    9. '\' → logprob: -10.513869285583496
    10. '#' → logprob: -10.888869285583496

Token 86: ' sort' (ID: 4506)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.4448205828666687
    2. ' generate' → logprob: -2.6948206424713135
    3. ' permutations' → logprob: -2.8198206424713135
    4. ' get' → logprob: -3.0698206424713135
    5. 'main' → logprob: -3.0698206424713135
    6. ' perm' → logprob: -3.4448206424713135
    7. ' factorial' → logprob: -3.5698206424713135
    8. 'generate' → logprob: -4.069820404052734
    9. ' find' → logprob: -4.569820404052734
    10. 'perm' → logprob: -4.944820404052734

Token 87: '_p' (ID: 1359)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0161502361297607
    2. 'def' → logprob: -1.2661502361297607
    3. '_list' → logprob: -2.3911502361297607
    4. 'ed' → logprob: -2.5161502361297607
    5. '_p' → logprob: -2.6411502361297607
    6. '_' → logprob: -3.2661502361297607
    7. '<|end|>' → logprob: -4.14115047454834
    8. '(_' → logprob: -4.39115047454834
    9. '(P' → logprob: -4.51615047454834
    10. '(p' → logprob: -5.39115047454834

Token 88: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.09933384507894516
    2. 'ermut' → logprob: -3.0993337631225586
    3. 'Q' → logprob: -3.5993337631225586
    4. 'erm' → logprob: -4.724333763122559
    5. 'list' → logprob: -4.849333763122559
    6. 'air' → logprob: -6.349333763122559
    7. '_list' → logprob: -7.099333763122559
    8. 'qr' → logprob: -7.349333763122559
    9. 'qrst' → logprob: -8.099333763122559
    10. 'airs' → logprob: -8.349333763122559

Token 89: '(P' (ID: 8952)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.022501524537801743
    2. '(P' → logprob: -4.772501468658447
    3. '(p' → logprob: -5.397501468658447
    4. '(' → logprob: -5.522501468658447
    5. '(_' → logprob: -5.772501468658447
    6. '_p' → logprob: -7.647501468658447
    7. '_lst' → logprob: -7.772501468658447
    8. '```' → logprob: -8.647501945495605
    9. '_lists' → logprob: -9.022501945495605
    10. '_' → logprob: -9.022501945495605

Token 90: 'Q' (ID: 48)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6556005477905273
    2. ',' → logprob: -0.7806005477905273
    3. '):' → logprob: -4.030600547790527
    4. ',Q' → logprob: -5.780600547790527
    5. ' ,' → logprob: -7.655600547790527
    6. ' )' → logprob: -7.905600547790527
    7. '_list' → logprob: -8.030600547790527
    8. '[' → logprob: -9.280600547790527
    9. ',)' → logprob: -9.280600547790527
    10. ',P' → logprob: -9.780600547790527

Token 91: '):
' (ID: 1883)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.07702891528606415
    2. '):' → logprob: -3.07702898979187
    3. ')' → logprob: -4.202028751373291
    4. ',' → logprob: -5.577028751373291
    5. ')_' → logprob: -5.827028751373291
    6. 's' → logprob: -6.077028751373291
    7. 'List' → logprob: -6.452028751373291
    8. '_lst' → logprob: -7.827028751373291
    9. '_' → logprob: -7.952028751373291
    10. '):
' → logprob: -7.952028751373291

Token 92: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8088904619216919
    2. '.sort' → logprob: -0.8088904619216919
    3. 'sorted' → logprob: -3.0588903427124023
    4. ' sorted' → logprob: -3.3088903427124023
    5. '.sorted' → logprob: -5.058890342712402
    6. '.' → logprob: -5.183890342712402
    7. ' =' → logprob: -5.183890342712402
    8. ' return' → logprob: -5.558890342712402
    9. 'return' → logprob: -6.558890342712402
    10. '_sorted' → logprob: -7.183890342712402

Token 93: ' return' (ID: 622)
  Prédit: 'PQ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'PQ' → logprob: -0.4961045980453491
    2. 'sorted' → logprob: -1.6211045980453491
    3. 'return' (adapté à ' return') → logprob: -1.8711045980453491
    4. ' return' → logprob: -3.8711047172546387
    5. '   ' → logprob: -4.871104717254639
    6. ' PQ' → logprob: -4.996104717254639
    7. ' sorted' → logprob: -5.621104717254639
    8. ' ' → logprob: -8.74610424041748
    9. 'sort' → logprob: -9.24610424041748
    10. 'pq' → logprob: -9.49610424041748

Token 94: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.00977285485714674
    2. ' sorted' → logprob: -4.634772777557373
    3. '(sorted' → logprob: -12.009773254394531
    4. 'list' → logprob: -12.384773254394531
    5. '   ' → logprob: -12.884773254394531
    6. '[' → logprob: -13.759773254394531
    7. '.sorted' → logprob: -14.009773254394531
    8. 'tuple' → logprob: -14.134773254394531
    9. ' ' → logprob: -14.384773254394531
    10. 's' → logprob: -15.884773254394531

Token 95: '(P' (ID: 8952)
  Prédit: '(P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.34852030873298645
    2. '(' → logprob: -1.223520278930664
    3. '(
' → logprob: -10.348520278930664
    4. '(Q' → logprob: -10.973520278930664
    5. ' (' → logprob: -11.723520278930664
    6. '((' → logprob: -12.473520278930664
    7. '(

' → logprob: -12.598520278930664
    8. '(p' → logprob: -13.223520278930664
    9. 'PQ' → logprob: -13.348520278930664
    10. 'P' → logprob: -13.473520278930664

Token 96: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.16656191647052765
    2. ')' → logprob: -2.1665618419647217
    3. '[' → logprob: -3.4165618419647217
    4. ',' → logprob: -5.416562080383301
    5. '),' → logprob: -8.0415620803833
    6. ',
' → logprob: -8.6665620803833
    7. ')]' → logprob: -9.0415620803833
    8. '[
' → logprob: -9.2915620803833
    9. ',Q' → logprob: -9.7915620803833
    10. '])' → logprob: -10.0415620803833

Token 97: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002501343551557511
    2. ',' → logprob: -8.375249862670898
    3. ' )' → logprob: -11.375249862670898
    4. ',key' → logprob: -13.625249862670898
    5. '[' → logprob: -14.000249862670898
    6. ' ' → logprob: -14.000249862670898
    7. '))' → logprob: -14.125249862670898
    8. '   ' → logprob: -14.375249862670898
    9. '())' → logprob: -14.375249862670898
    10. ')
' → logprob: -14.625249862670898

Token 98: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0020672334358096123
    2. '<|end|>' → logprob: -6.8770670890808105
    3. 'for' → logprob: -7.7520670890808105
    4. '```' → logprob: -8.627067565917969
    5. '<|end|>' → logprob: -9.252067565917969
    6. 'print' → logprob: -9.377067565917969
    7. '#' → logprob: -10.127067565917969
    8. 'P' → logprob: -10.752067565917969
    9. '
' → logprob: -10.752067565917969
    10. '()' → logprob: -10.752067565917969

Token 99: ' create' (ID: 2501)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.2572650909423828
    2. 'main' → logprob: -1.5072650909423828
    3. ' factorial' → logprob: -6.632265090942383
    4. ' count' → logprob: -6.882265090942383
    5. 'count' → logprob: -7.007265090942383
    6. ' find' → logprob: -7.882265090942383
    7. ' is' → logprob: -8.382265090942383
    8. 'generate' → logprob: -9.007265090942383
    9. 'factor' → logprob: -9.007265090942383
    10. ' permutations' → logprob: -9.132265090942383

Token 100: '_li' (ID: 110647)
  Prédit: '_per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_per' → logprob: -0.6931988000869751
    2. '_list' → logprob: -1.443198800086975
    3. '_counter' → logprob: -2.5681986808776855
    4. '_factor' → logprob: -3.4431986808776855
    5. '_set' → logprob: -4.0681986808776855
    6. '_p' → logprob: -4.1931986808776855
    7. '_tuple' → logprob: -4.4431986808776855
    8. '_comb' → logprob: -4.4431986808776855
    9. '_perm' → logprob: -4.6931986808776855
    10. '_' → logprob: -4.6931986808776855

Token 101: '(N' (ID: 10564)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.0004825081559829414
    2. 'sts' → logprob: -7.875482559204102
    3. 'ne' → logprob: -9.875482559204102
    4. 'b' → logprob: -12.125482559204102
    5. 'n' → logprob: -12.250482559204102
    6. 'ist' → logprob: -12.500482559204102
    7. 'br' → logprob: -12.875482559204102
    8. 'nes' → logprob: -13.000482559204102
    9. 'sta' → logprob: -13.000482559204102
    10. '():
' → logprob: -13.375482559204102

Token 102: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04410986602306366
    2. ',' → logprob: -3.41910982131958
    3. '):
' → logprob: -4.66910982131958
    4. ')' → logprob: -7.29410982131958
    5. ' ):' → logprob: -8.919110298156738
    6. '):
' → logprob: -10.044110298156738
    7. 't' → logprob: -10.794110298156738
    8. '=' → logprob: -10.919110298156738
    9. 'n' → logprob: -11.044110298156738
    10. ' ,' → logprob: -11.294110298156738

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005069737322628498
    2. ' return' → logprob: -5.630069732666016
    3. '[' → logprob: -7.130069732666016
    4. ' [' → logprob: -7.880069732666016
    5. 'return' → logprob: -9.005069732666016
    6. ' range' → logprob: -9.255069732666016
    7. '[]' → logprob: -10.255069732666016
    8. '[]
' → logprob: -11.130069732666016
    9. 'range' → logprob: -12.505069732666016
    10. '	return' → logprob: -12.505069732666016

Token 104: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6598420143127441
    2. 'list' → logprob: -0.7848420143127441
    3. '   ' → logprob: -4.159842014312744
    4. ' return' → logprob: -5.159842014312744
    5. ' list' → logprob: -5.659842014312744
    6. '[' → logprob: -6.534842014312744
    7. '[list' → logprob: -8.409841537475586
    8. 'range' → logprob: -9.159841537475586
    9. ' [' → logprob: -9.909841537475586
    10. '[]' → logprob: -9.909841537475586

Token 105: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.016111908480525017
    2. '[list' → logprob: -4.266111850738525
    3. '[' → logprob: -6.891111850738525
    4. ' list' → logprob: -7.141111850738525
    5. '[n' → logprob: -10.516112327575684
    6. '[N' → logprob: -10.891112327575684
    7. ' [' → logprob: -11.016112327575684
    8. '(list' → logprob: -11.141112327575684
    9. 'range' → logprob: -11.391112327575684
    10. '[it' → logprob: -11.391112327575684

Token 106: '(map' (ID: 16946)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.00018577903392724693
    2. '(it' → logprob: -8.6251859664917
    3. 'range' → logprob: -12.3751859664917
    4. '(' → logprob: -13.5001859664917
    5. 'it' → logprob: -14.8751859664917
    6. '(iter' → logprob: -16.625185012817383
    7. '()' → logprob: -17.625185012817383
    8. '(map' → logprob: -18.125185012817383
    9. '(per' → logprob: -18.500185012817383
    10. '([' → logprob: -18.625185012817383

Token 107: '(lambda' (ID: 43341)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.005951432976871729
    2. '(str' → logprob: -5.380951404571533
    3. '(lambda' → logprob: -6.755951404571533
    4. 'int' → logprob: -9.130951881408691
    5. '(' → logprob: -10.130951881408691
    6. 'str' → logprob: -11.880951881408691
    7. ',int' → logprob: -13.255951881408691
    8. ')' → logprob: -13.380951881408691
    9. ' int' → logprob: -13.505951881408691
    10. '(float' → logprob: -13.505951881408691

Token 108: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3606763482093811
    2. 'x' → logprob: -1.2356762886047363
    3. ' i' → logprob: -4.610676288604736
    4. 'i' → logprob: -6.610676288604736
    5. '_:' → logprob: -8.360676765441895
    6. '_' → logprob: -8.485676765441895
    7. ' _:' → logprob: -8.860676765441895
    8. ' k' → logprob: -9.860676765441895
    9. 'k' → logprob: -10.110676765441895
    10. '   ' → logprob: -10.110676765441895

Token 109: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004734486574307084
    2. ' :' → logprob: -8.000473022460938
    3. ',' → logprob: -9.125473022460938
    4. ' x' → logprob: -11.875473022460938
    5. 'x' → logprob: -12.125473022460938
    6. ':int' → logprob: -12.125473022460938
    7. '   ' → logprob: -12.875473022460938
    8. ':N' → logprob: -13.500473022460938
    9. ':x' → logprob: -13.625473022460938
    10. 'N' → logprob: -13.750473022460938

Token 110: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07997466623783112
    2. ' x' → logprob: -3.20497465133667
    3. 'str' → logprob: -3.57997465133667
    4. ' str' → logprob: -5.45497465133667
    5. 'int' → logprob: -5.70497465133667
    6. ' int' → logprob: -8.329975128173828
    7. '(x' → logprob: -8.579975128173828
    8. '2' → logprob: -9.579975128173828
    9. 'it' → logprob: -10.204975128173828
    10. '(str' → logprob: -10.329975128173828

Token 111: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.22781279683113098
    2. ' +' → logprob: -1.6028127670288086
    3. ',' → logprob: -6.352812767028809
    4. ':' → logprob: -7.852812767028809
    5. 'range' → logprob: -9.602812767028809
    6. ' ,' → logprob: -9.727812767028809
    7. '+x' → logprob: -9.977812767028809
    8. ' plus' → logprob: -11.227812767028809
    9. ' x' → logprob: -11.352812767028809
    10. 'x' → logprob: -11.477812767028809

Token 112: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12710228562355042
    2. ' ' → logprob: -2.1271023750305176
    3. ',' → logprob: -10.37710189819336
    4. ' x' → logprob: -10.62710189819336
    5. '   ' → logprob: -10.62710189819336
    6. '0' → logprob: -11.00210189819336
    7. 'x' → logprob: -11.12710189819336
    8. '  ' → logprob: -11.25210189819336
    9. ' N' → logprob: -11.87710189819336
    10. '2' → logprob: -12.25210189819336

Token 113: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005079957190901041
    2. ' ' → logprob: -7.625507831573486
    3. '   ' → logprob: -11.125508308410645
    4. '0' → logprob: -13.500508308410645
    5. '2' → logprob: -13.750508308410645
    6. '  ' → logprob: -13.875508308410645
    7. '100' → logprob: -14.375508308410645
    8. 'import' → logprob: -15.750508308410645
    9. ',' → logprob: -16.313007354736328
    10. '    ' → logprob: -16.500507354736328

Token 114: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007211300544440746
    2. 'range' → logprob: -7.375720977783203
    3. ' ,' → logprob: -9.375720977783203
    4. ' range' → logprob: -12.125720977783203
    5. '(range' → logprob: -12.500720977783203
    6. '   ' → logprob: -14.750720977783203
    7. ',
' → logprob: -16.125720977783203
    8. '	range' → logprob: -16.750720977783203
    9. ',r' → logprob: -18.000720977783203
    10. '(),' → logprob: -18.125720977783203

Token 115: ' list' (ID: 1562)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16024748980998993
    2. ' range' → logprob: -1.9102474451065063
    3. '   ' → logprob: -11.535247802734375
    4. '	range' → logprob: -12.285247802734375
    5. '(range' → logprob: -12.410247802734375
    6. ' xrange' → logprob: -12.785247802734375
    7. '[' → logprob: -14.410247802734375
    8. ' ' → logprob: -14.410247802734375
    9. 'it' → logprob: -14.410247802734375
    10. '  ' → logprob: -15.785247802734375

Token 116: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -8.900034299585968e-05
    2. '(it' → logprob: -9.500088691711426
    3. 'range' → logprob: -11.250088691711426
    4. '(' → logprob: -13.750088691711426
    5. '(iter' → logprob: -16.875089645385742
    6. 'it' → logprob: -17.250089645385742
    7. ' range' → logprob: -18.625089645385742
    8. '	range' → logprob: -19.125089645385742
    9. '(map' → logprob: -21.000089645385742
    10. '(
' → logprob: -21.500089645385742

Token 117: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0009175319573841989
    2. '(' → logprob: -7.000917434692383
    3. '(n' → logprob: -12.750917434692383
    4. 'N' → logprob: -13.375917434692383
    5. ' (' → logprob: -13.750917434692383
    6. '(
' → logprob: -15.250917434692383
    7. '   ' → logprob: -16.750917434692383
    8. '	N' → logprob: -17.000917434692383
    9. '((' → logprob: -17.250917434692383
    10. ')' → logprob: -17.250917434692383

Token 118: '))))

' (ID: 161772)
  Prédit: '))))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))))' → logprob: -0.10212169587612152
    2. ')))' → logprob: -2.352121591567993
    3. ')' → logprob: -6.352121829986572
    4. '))' → logprob: -8.727121353149414
    5. '))))

' → logprob: -12.977121353149414
    6. '))))
' → logprob: -13.727121353149414
    7. ' ' → logprob: -13.727121353149414
    8. ')))),' → logprob: -13.977121353149414
    9. '   ' → logprob: -14.352121353149414
    10. '(' → logprob: -14.477121353149414

Token 119: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0015224798116832972
    2. ')' → logprob: -7.126522541046143
    3. '<|end|>' → logprob: -7.751522541046143
    4. '
' → logprob: -9.876522064208984
    5. '[' → logprob: -10.501522064208984
    6. '(' → logprob: -10.501522064208984
    7. 'for' → logprob: -10.751522064208984
    8. '```' → logprob: -10.876522064208984
    9. '_' → logprob: -11.126522064208984
    10. '<|end|>' → logprob: -11.251522064208984

Token 120: ' generate' (ID: 10419)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.4568667709827423
    2. ' count' → logprob: -1.70686674118042
    3. ' permutations' → logprob: -2.58186674118042
    4. ' solve' → logprob: -4.08186674118042
    5. ' factorial' → logprob: -4.08186674118042
    6. ' generate' → logprob: -4.20686674118042
    7. ' get' → logprob: -4.45686674118042
    8. ' perm' → logprob: -4.58186674118042
    9. ' find' → logprob: -5.08186674118042
    10. 'main' → logprob: -5.45686674118042

Token 121: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -0.21530193090438843
    2. ' permutations' → logprob: -1.9653019905090332
    3. '(' → logprob: -3.840301990509033
    4. 'per' → logprob: -4.090301990509033
    5. 's' → logprob: -5.215301990509033
    6. '(per' → logprob: -5.840301990509033
    7. '_p' → logprob: -6.340301990509033
    8. '_all' → logprob: -7.090301990509033
    9. '_' → logprob: -7.465301990509033
    10. ' (' → logprob: -7.465301990509033

Token 122: 'mut' (ID: 10522)
  Prédit: 'mut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mut' → logprob: -0.0022412508260458708
    2. 'utations' → logprob: -6.127241134643555
    3. 'r' → logprob: -11.127241134643555
    4. 'm' → logprob: -11.377241134643555
    5. 'mu' → logprob: -11.877241134643555
    6. ' mutations' → logprob: -12.002241134643555
    7. 'mutation' → logprob: -12.502241134643555
    8. 't' → logprob: -13.127241134643555
    9. 'ms' → logprob: -13.377241134643555
    10. '```' → logprob: -13.377241134643555

Token 123: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.001463692169636488
    2. 'utations' → logprob: -6.626463890075684
    3. 'at' → logprob: -9.501463890075684
    4. 't' → logprob: -9.751463890075684
    5. 'ation' → logprob: -12.751463890075684
    6. 'a' → logprob: -14.626463890075684
    7. 'ATIONS' → logprob: -15.001463890075684
    8. 'utions' → logprob: -15.251463890075684
    9. 's' → logprob: -15.251463890075684
    10. 'ut' → logprob: -15.626463890075684

Token 124: '(li' (ID: 111234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28597646951675415
    2. '(create' → logprob: -1.7859764099121094
    3. '(li' → logprob: -3.4109764099121094
    4. ' (' → logprob: -4.410976409912109
    5. '(generate' → logprob: -4.535976409912109
    6. '(range' → logprob: -5.160976409912109
    7. '(list' → logprob: -5.285976409912109
    8. '(lst' → logprob: -5.910976409912109
    9. '(N' → logprob: -6.160976409912109
    10. '(iter' → logprob: -6.285976409912109

Token 125: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3159387409687042
    2. ')):' → logprob: -2.065938711166382
    3. ',' → logprob: -3.065938711166382
    4. '))' → logprob: -3.190938711166382
    5. '):
' → logprob: -3.565938711166382
    6. ')' → logprob: -3.690938711166382
    7. ')):
' → logprob: -6.190938949584961
    8. ' ):' → logprob: -7.940938949584961
    9. '(' → logprob: -8.690938949584961
    10. '):

' → logprob: -8.690938949584961

Token 126: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.03904077783226967
    2. ' N' → logprob: -3.2890408039093018
    3. ')' → logprob: -7.539040565490723
    4. 'len' → logprob: -8.414040565490723
    5. 'r' → logprob: -10.039040565490723
    6. '2' → logprob: -10.039040565490723
    7. ' len' → logprob: -10.164040565490723
    8. ' ' → logprob: -10.289040565490723
    9. 'n' → logprob: -11.289040565490723
    10. '   ' → logprob: -11.289040565490723

Token 127: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.013927715830504894
    2. '):
' → logprob: -4.388927936553955
    3. ')' → logprob: -6.638927936553955
    4. ',' → logprob: -10.263927459716797
    5. ' ):' → logprob: -10.263927459716797
    6. '):
' → logprob: -10.638927459716797
    7. '   ' → logprob: -11.638927459716797
    8. ')):' → logprob: -13.763927459716797
    9. '):

' → logprob: -13.888927459716797
    10. ')：' → logprob: -14.013927459716797

Token 128: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006313397083431482
    2. ' return' → logprob: -6.006313323974609
    3. 'return' → logprob: -6.131313323974609
    4. ' itertools' → logprob: -6.506313323974609
    5. 'it' → logprob: -9.13131332397461
    6. '	return' → logprob: -11.00631332397461
    7. '(it' → logprob: -11.25631332397461
    8. '    ' → logprob: -12.38131332397461
    9. 'list' → logprob: -12.38131332397461
    10. '):
' → logprob: -12.50631332397461

Token 129: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5411985516548157
    2. 'it' → logprob: -1.166198492050171
    3. '   ' → logprob: -2.416198492050171
    4. 'list' → logprob: -4.29119873046875
    5. ' return' → logprob: -5.91619873046875
    6. ' itertools' → logprob: -7.41619873046875
    7. ' list' → logprob: -10.41619873046875
    8. 'iter' → logprob: -10.66619873046875
    9. 'import' → logprob: -11.04119873046875
    10. '       ' → logprob: -11.66619873046875

Token 130: ' itertools' (ID: 103178)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.2343333661556244
    2. 'it' → logprob: -1.6093333959579468
    3. ' list' → logprob: -5.359333515167236
    4. ' itertools' → logprob: -5.484333515167236
    5. 'iter' → logprob: -11.984333038330078
    6. 'set' → logprob: -12.484333038330078
    7. ' it' → logprob: -12.484333038330078
    8. '(it' → logprob: -12.609333038330078
    9. '   ' → logprob: -12.984333038330078
    10. '(list' → logprob: -13.359333038330078

Token 131: '.per' (ID: 18361)
  Prédit: '.per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.per' → logprob: -5.5577775128767826e-06
    2. '.' → logprob: -13.125005722045898
    3. '.com' → logprob: -13.625005722045898
    4. '.product' → logprob: -13.625005722045898
    5. ' .' → logprob: -14.500005722045898
    6. '.p' → logprob: -15.000005722045898
    7. 'per' → logprob: -16.5000057220459
    8. '	per' → logprob: -16.5000057220459
    9. ' permutations' → logprob: -16.5000057220459
    10. '.import' → logprob: -18.0000057220459

Token 132: 'mut' (ID: 10522)
  Prédit: 'mut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mut' → logprob: -9.253090865968261e-06
    2. 'm' → logprob: -13.000009536743164
    3. 'r' → logprob: -13.000009536743164
    4. 'mu' → logprob: -13.375009536743164
    5. 'mute' → logprob: -13.750009536743164
    6. 'utations' → logprob: -14.125009536743164
    7. 'mult' → logprob: -15.625009536743164
    8. 'mutation' → logprob: -15.750009536743164
    9. '```' → logprob: -15.750009536743164
    10. 'met' → logprob: -16.250009536743164

Token 133: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.002681248588487506
    2. 't' → logprob: -6.377681255340576
    3. 'utations' → logprob: -7.502681255340576
    4. 'r' → logprob: -8.002680778503418
    5. 'lations' → logprob: -9.752680778503418
    6. 'at' → logprob: -11.752680778503418
    7. 's' → logprob: -12.127680778503418
    8. 'utions' → logprob: -12.377680778503418
    9. 'a' → logprob: -13.127680778503418
    10. 'per' → logprob: -13.627680778503418

Token 134: '(li' (ID: 111234)
  Prédit: '(li'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(li' → logprob: -0.00010831133840838447
    2. '(' → logprob: -9.25010871887207
    3. 'li' → logprob: -11.87510871887207
    4. '(list' → logprob: -13.37510871887207
    5. '<li' → logprob: -13.62510871887207
    6. ' (' → logprob: -14.00010871887207
    7. '_li' → logprob: -14.00010871887207
    8. ' li' → logprob: -15.50010871887207
    9. '(lo' → logprob: -15.62510871887207
    10. '(lista' → logprob: -16.25010871887207

Token 135: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005506486631929874
    2. ',N' → logprob: -8.125550270080566
    3. ' ,' → logprob: -8.375550270080566
    4. ')' → logprob: -11.250550270080566
    5. ',n' → logprob: -11.875550270080566
    6. ' ' → logprob: -13.500550270080566
    7. '   ' → logprob: -14.125550270080566
    8. '(N' → logprob: -14.125550270080566
    9. '(' → logprob: -14.125550270080566
    10. '(),' → logprob: -15.125550270080566

Token 136: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.003177952254191041
    2. ' N' → logprob: -5.753178119659424
    3. '   ' → logprob: -15.878177642822266
    4. '	N' → logprob: -16.378177642822266
    5. ' ' → logprob: -17.253177642822266
    6. '  ' → logprob: -18.253177642822266
    7. 'n' → logprob: -18.503177642822266
    8. ')' → logprob: -19.378177642822266
    9. '_N' → logprob: -19.503177642822266
    10. 'len' → logprob: -19.628177642822266

Token 137: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2200749754119897e-06
    2. ' )' → logprob: -13.625001907348633
    3. ')
' → logprob: -14.375001907348633
    4. '<|end|>' → logprob: -16.000001907348633
    5. ')return' → logprob: -16.750001907348633
    6. ')#' → logprob: -16.875001907348633
    7. ')

' → logprob: -17.250001907348633
    8. '),' → logprob: -17.250001907348633
    9. '))' → logprob: -17.250001907348633
    10. ')}' → logprob: -17.750001907348633

Token 138: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0001366744691040367
    2. 'for' → logprob: -9.500136375427246
    3. '<|end|>' → logprob: -10.125136375427246
    4. '```' → logprob: -12.000136375427246
    5. '<|end|>' → logprob: -12.000136375427246
    6. '#' → logprob: -12.500136375427246
    7. ')' → logprob: -14.000136375427246
    8. 'import' → logprob: -14.125136375427246
    9. ' def' → logprob: -14.500136375427246
    10. '
' → logprob: -14.875136375427246

Token 139: ' find' (ID: 1646)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.18509691953659058
    2. ' main' → logprob: -2.4350969791412354
    3. 'count' → logprob: -2.5600969791412354
    4. ' count' → logprob: -6.060096740722656
    5. 'check' → logprob: -7.935096740722656
    6. 'def' → logprob: -8.060096740722656
    7. 'calculate' → logprob: -8.435096740722656
    8. 'solve' → logprob: -8.435096740722656
    9. 'find' → logprob: -8.810096740722656
    10. 'compare' → logprob: -8.935096740722656

Token 140: '_positions' (ID: 93193)
  Prédit: '_per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -1.165778636932373
    2. '_' → logprob: -1.665778636932373
    3. '_position' → logprob: -2.040778636932373
    4. '_index' → logprob: -2.165778636932373
    5. '_next' → logprob: -3.165778636932373
    6. '_k' → logprob: -3.165778636932373
    7. '_indices' → logprob: -3.290778636932373
    8. '_rank' → logprob: -3.290778636932373
    9. '_positions' → logprob: -4.040778636932373
    10. '_difference' → logprob: -4.290778636932373

Token 141: '(P' (ID: 8952)
  Prédit: '(P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.014196529053151608
    2. '(' → logprob: -4.764196395874023
    3. '(N' → logprob: -5.514196395874023
    4. ' (' → logprob: -6.639196395874023
    5. '(p' → logprob: -8.639196395874023
    6. '(S' → logprob: -11.514196395874023
    7. '(s' → logprob: -11.639196395874023
    8. 'def' → logprob: -11.764196395874023
    9. '(Q' → logprob: -12.139196395874023
    10. ':' → logprob: -13.389196395874023

Token 142: 'Q' (ID: 48)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003357251174747944
    2. ',Q' → logprob: -6.128357410430908
    3. ' ,' → logprob: -7.003357410430908
    4. ',P' → logprob: -8.75335693359375
    5. '):' → logprob: -9.75335693359375
    6. ')' → logprob: -10.75335693359375
    7. ',
' → logprob: -12.25335693359375
    8. ',N' → logprob: -12.50335693359375
    9. '<|end|>' → logprob: -12.87835693359375
    10. ',List' → logprob: -13.50335693359375

Token 143: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026753636077046394
    2. '):' → logprob: -3.9017536640167236
    3. ' ,' → logprob: -5.4017534255981445
    4. ')' → logprob: -6.7767534255981445
    5. ',P' → logprob: -8.026753425598145
    6. '):
' → logprob: -10.276753425598145
    7. ' ):' → logprob: -10.401753425598145
    8. '_list' → logprob: -10.776753425598145
    9. '_,' → logprob: -11.026753425598145
    10. '[' → logprob: -11.151753425598145

Token 144: ' perms' (ID: 189933)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.4254911541938782
    2. ' P' → logprob: -1.9254910945892334
    3. 'N' → logprob: -2.0504910945892334
    4. ' N' → logprob: -3.1754910945892334
    5. 'Q' → logprob: -5.0504913330078125
    6. 'li' → logprob: -5.1754913330078125
    7. 'p' → logprob: -5.6754913330078125
    8. ' Q' → logprob: -6.1754913330078125
    9. 'PQ' → logprob: -6.1754913330078125
    10. ' permutations' → logprob: -6.3004913330078125

Token 145: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4335658848285675
    2. '):
' → logprob: -1.9335658550262451
    3. 'utations' → logprob: -2.183565855026245
    4. 's' → logprob: -2.933565855026245
    5. ')' → logprob: -3.308565855026245
    6. 'u' → logprob: -6.933566093444824
    7. ',' → logprob: -6.933566093444824
    8. '):

' → logprob: -7.058566093444824
    9. 'ut' → logprob: -7.058566093444824
    10. '_list' → logprob: -7.933566093444824

Token 146: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.3739698529243469
    2. ' N' → logprob: -1.6239697933197021
    3. 'P' → logprob: -2.498969793319702
    4. ' P' → logprob: -3.623969793319702
    5. '   ' → logprob: -6.248970031738281
    6. 'PQ' → logprob: -6.248970031738281
    7. 'Q' → logprob: -7.248970031738281
    8. ' PQ' → logprob: -7.998970031738281
    9. ' Q' → logprob: -8.498970031738281
    10. 'target' → logprob: -8.498970031738281

Token 147: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008535616099834442
    2. ',' → logprob: -4.883535385131836
    3. '):
' → logprob: -7.133535385131836
    4. ')' → logprob: -9.258535385131836
    5. ' ):' → logprob: -10.508535385131836
    6. ':' → logprob: -12.758535385131836
    7. '   ' → logprob: -13.133535385131836
    8. '):
' → logprob: -13.133535385131836
    9. ' ,' → logprob: -14.258535385131836
    10. ' ' → logprob: -15.383535385131836

Token 148: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007330810185521841
    2. ' positions' → logprob: -5.632330894470215
    3. ' for' → logprob: -6.132330894470215
    4. ' pos' → logprob: -7.007330894470215
    5. 'positions' → logprob: -8.632330894470215
    6. ' p' → logprob: -9.007330894470215
    7. 'for' → logprob: -9.257330894470215
    8. ' position' → logprob: -9.632330894470215
    9. 'pos' → logprob: -9.757330894470215
    10. '```' → logprob: -10.507330894470215

Token 149: ' i' (ID: 575)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.33455178141593933
    2. '   ' → logprob: -2.2095518112182617
    3. 'positions' → logprob: -2.2095518112182617
    4. 'position' → logprob: -3.8345518112182617
    5. 'for' → logprob: -3.9595518112182617
    6. 'P' → logprob: -4.209551811218262
    7. 'p' → logprob: -5.834551811218262
    8. ' pos' → logprob: -5.959551811218262
    9. ' positions' → logprob: -6.584551811218262
    10. 'count' → logprob: -7.584551811218262

Token 150: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.48309531807899475
    2. ' =' → logprob: -0.9830952882766724
    3. 'n' → logprob: -5.108095169067383
    4. 'nd' → logprob: -6.608095169067383
    5. 'nt' → logprob: -7.108095169067383
    6. 's' → logprob: -8.358095169067383
    7. 'f' → logprob: -8.858095169067383
    8. ' ' → logprob: -9.108095169067383
    9. ',' → logprob: -9.608095169067383
    10. '_' → logprob: -9.733095169067383

Token 151: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.021033085882663727
    2. '0' → logprob: -3.8960330486297607
    3. ' ' → logprob: -7.64603328704834
    4. '   ' → logprob: -11.39603328704834
    5. '```' → logprob: -14.52103328704834
    6. '{}' → logprob: -15.39603328704834
    7. 'int' → logprob: -15.52103328704834
    8. '  ' → logprob: -15.89603328704834
    9. '{' → logprob: -16.021032333374023
    10. 'enumer' → logprob: -16.146032333374023

Token 152: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007612663321197033
    2. '0' → logprob: -4.882612705230713
    3. ' ' → logprob: -12.007612228393555
    4. '```' → logprob: -16.132612228393555
    5. 'enumer' → logprob: -16.132612228393555
    6. 'iter' → logprob: -16.257612228393555
    7. 'int' → logprob: -17.382612228393555
    8. '2' → logprob: -17.757612228393555
    9. '-' → logprob: -18.132612228393555
    10. '
' → logprob: -18.257612228393555

Token 153: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.043387699872255325
    2. '   ' → logprob: -3.9183876514434814
    3. '  
' → logprob: -4.9183878898620605
    4. ' for' → logprob: -5.2933878898620605
    5. '    
' → logprob: -5.7933878898620605
    6. 'for' → logprob: -6.0433878898620605
    7. ' ' → logprob: -6.2933878898620605
    8. ' 
' → logprob: -6.4183878898620605
    9. '   
' → logprob: -8.168387413024902
    10. '<|end|>' → logprob: -8.418387413024902

Token 154: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7227153778076172
    2. ' for' → logprob: -0.8477153778076172
    3. '   ' → logprob: -2.847715377807617
    4. '
' → logprob: -3.597715377807617
    5. ' ' → logprob: -8.222715377807617
    6. '    
' → logprob: -8.472715377807617
    7. '	for' → logprob: -8.722715377807617
    8. ' 
' → logprob: -9.972715377807617
    9. 'def' → logprob: -10.597715377807617
    10. ' positions' → logprob: -10.597715377807617

Token 155: ' j' (ID: 441)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2779526710510254
    2. 'positions' → logprob: -1.6529526710510254
    3. ' for' → logprob: -3.6529526710510254
    4. 'pos' → logprob: -4.277952671051025
    5. 'result' → logprob: -5.277952671051025
    6. ' positions' → logprob: -5.777952671051025
    7. 'position' → logprob: -6.027952671051025
    8. 'res' → logprob: -8.402952194213867
    9. '   ' → logprob: -8.402952194213867
    10. 'answer' → logprob: -9.027952194213867

Token 156: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17974989116191864
    2. '=' → logprob: -1.804749846458435
    3. ',' → logprob: -13.179749488830566
    4. ' ' → logprob: -14.304749488830566
    5. '   ' → logprob: -14.304749488830566
    6. 'i' → logprob: -15.179749488830566
    7. '0' → logprob: -15.304749488830566
    8. ' +=' → logprob: -15.304749488830566
    9. '<|end|>' → logprob: -15.304749488830566
    10. 'def' → logprob: -15.554749488830566

Token 157: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02084980718791485
    2. ' ' → logprob: -3.8958497047424316
    3. '-' → logprob: -9.02085018157959
    4. '1' → logprob: -9.27085018157959
    5. ' -' → logprob: -10.64585018157959
    6. 'len' → logprob: -10.77085018157959
    7. 'i' → logprob: -11.14585018157959
    8. 'None' → logprob: -11.52085018157959
    9. '   ' → logprob: -11.77085018157959
    10. ' i' → logprob: -12.64585018157959

Token 158: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004372254479676485
    2. '-' → logprob: -8.500436782836914
    3. '1' → logprob: -9.000436782836914
    4. ' ' → logprob: -9.250436782836914
    5. 'len' → logprob: -12.125436782836914
    6. 'None' → logprob: -12.625436782836914
    7. 'i' → logprob: -13.000436782836914
    8. ' -' → logprob: -13.750436782836914
    9. 'float' → logprob: -14.000436782836914
    10. '100' → logprob: -15.312936782836914

Token 159: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02158869057893753
    2. ' for' → logprob: -4.8965888023376465
    3. 'for' → logprob: -5.2715888023376465
    4. '   ' → logprob: -5.8965888023376465
    5. '  
' → logprob: -6.5215888023376465
    6. '<|end|>' → logprob: -6.5215888023376465
    7. ' 
' → logprob: -6.8965888023376465
    8. '    
' → logprob: -6.8965888023376465
    9. '	
' → logprob: -8.521588325500488
    10. '<|end|>' → logprob: -8.771588325500488

Token 160: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7672149538993835
    2. 'for' → logprob: -1.2672150135040283
    3. ' for' → logprob: -1.5172150135040283
    4. '
' → logprob: -3.3922150135040283
    5. '    
' → logprob: -7.142214775085449
    6. '	for' → logprob: -9.76721477508545
    7. 'while' → logprob: -9.89221477508545
    8. '  
' → logprob: -9.89221477508545
    9. 'def' → logprob: -10.51721477508545
    10. ',' → logprob: -10.64221477508545

Token 161: ' a' (ID: 261)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006528145633637905
    2. ' for' → logprob: -5.131528377532959
    3. '   ' → logprob: -7.506528377532959
    4. 'found' → logprob: -10.6315279006958
    5. 'while' → logprob: -11.1315279006958
    6. '
' → logprob: -12.6315279006958
    7. '	for' → logprob: -13.1315279006958
    8. ' ' → logprob: -13.7565279006958
    9. '    
' → logprob: -14.0065279006958
    10. 'positions' → logprob: -14.2565279006958

Token 162: ' =' (ID: 314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5323786735534668
    2. '   ' → logprob: -1.4073786735534668
    3. ' for' → logprob: -1.9073786735534668
    4. 'while' → logprob: -4.907378673553467
    5. ' ' → logprob: -5.282378673553467
    6. '=' → logprob: -6.907378673553467
    7. ' =' → logprob: -7.157378673553467
    8. ':' → logprob: -7.282378673553467
    9. 'b' → logprob: -7.407378673553467
    10. ' while' → logprob: -7.532378673553467

Token 163: ' []
' (ID: 8911)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0426998138427734
    2. 'None' → logprob: -1.4176998138427734
    3. '1' → logprob: -1.6676998138427734
    4. '[]' → logprob: -2.0426998138427734
    5. ' None' → logprob: -3.5426998138427734
    6. '-' → logprob: -4.042699813842773
    7. 'b' → logprob: -4.417699813842773
    8. '   ' → logprob: -5.042699813842773
    9. ' ' → logprob: -5.292699813842773
    10. '{}' → logprob: -5.292699813842773

Token 164: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08482709527015686
    2. 'for' → logprob: -2.834827184677124
    3. ' for' → logprob: -3.834827184677124
    4. '    
' → logprob: -7.584826946258545
    5. '
' → logprob: -7.709826946258545
    6. '	for' → logprob: -11.709827423095703
    7. '  
' → logprob: -12.084827423095703
    8. ' 
' → logprob: -12.209827423095703
    9. 'def' → logprob: -12.334827423095703
    10. ' ' → logprob: -12.709827423095703

Token 165: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.09792157262563705
    2. ' for' → logprob: -2.84792160987854
    3. '   ' → logprob: -3.34792160987854
    4. ' ' → logprob: -9.847921371459961
    5. 'def' → logprob: -10.847921371459961
    6. 'found' → logprob: -10.847921371459961
    7. 'per' → logprob: -11.347921371459961
    8. '	for' → logprob: -11.472921371459961
    9. 'while' → logprob: -11.472921371459961
    10. '       ' → logprob: -12.222921371459961

Token 166: ' v' (ID: 323)
  Prédit: 'perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'perm' → logprob: -0.1471354067325592
    2. 'p' → logprob: -2.0221354961395264
    3. ' perm' → logprob: -6.522135257720947
    4. 'per' → logprob: -7.272135257720947
    5. 'idx' → logprob: -7.647135257720947
    6. 'pq' → logprob: -8.272135734558105
    7. '_perm' → logprob: -8.397135734558105
    8. 'x' → logprob: -8.522135734558105
    9. 'P' → logprob: -8.647135734558105
    10. ' p' → logprob: -8.647135734558105

Token 167: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.010852559469640255
    2. 'in' → logprob: -5.135852336883545
    3. ',' → logprob: -5.510852336883545
    4. 'ersion' → logprob: -8.510852813720703
    5. '1' → logprob: -9.135852813720703
    6. 'alue' → logprob: -9.510852813720703
    7. '   ' → logprob: -9.635852813720703
    8. 'ector' → logprob: -9.885852813720703
    9. 'v' → logprob: -10.135852813720703
    10. ' ' → logprob: -10.385852813720703

Token 168: ' perms' (ID: 189933)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.00017755765293259174
    2. ' perms' → logprob: -8.750177383422852
    3. 'generate' → logprob: -12.250177383422852
    4. 'perm' → logprob: -12.375177383422852
    5. '   ' → logprob: -12.875177383422852
    6. '
' → logprob: -13.000177383422852
    7. 'list' → logprob: -13.125177383422852
    8. '	per' → logprob: -14.250177383422852
    9. '(per' → logprob: -14.875177383422852
    10. 'PQ' → logprob: -15.000177383422852

Token 169: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0019473218126222491
    2. ':
' → logprob: -6.251947402954102
    3. ',' → logprob: -12.001947402954102
    4. '):' → logprob: -12.251947402954102
    5. ' :' → logprob: -12.501947402954102
    6. '   ' → logprob: -13.251947402954102
    7. '():' → logprob: -14.001947402954102
    8. '):
' → logprob: -15.001947402954102
    9. '():
' → logprob: -15.876947402954102
    10. '       ' → logprob: -15.876947402954102

Token 170: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006304710987024009
    2. ' if' → logprob: -7.7506303787231445
    3. '   ' → logprob: -9.750630378723145
    4. 'if' → logprob: -10.000630378723145
    5. ',' → logprob: -10.625630378723145
    6. '        
' → logprob: -10.875630378723145
    7. '    ' → logprob: -12.000630378723145
    8. ':' → logprob: -12.125630378723145
    9. '<|end|>' → logprob: -12.250630378723145
    10. '[' → logprob: -12.750630378723145

Token 171: ' j' (ID: 441)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4880691468715668
    2. '       ' → logprob: -0.9880691766738892
    3. ' if' → logprob: -4.3630690574646
    4. '   ' → logprob: -7.3630690574646
    5. 'i' → logprob: -7.7380690574646
    6. '           ' → logprob: -10.238069534301758
    7. 'a' → logprob: -10.988069534301758
    8. 'v' → logprob: -11.363069534301758
    9. ' i' → logprob: -12.238069534301758
    10. '	if' → logprob: -12.488069534301758

Token 172: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3293587863445282
    2. ' +=' → logprob: -1.3293588161468506
    3. '=' → logprob: -4.2043585777282715
    4. ' =' → logprob: -7.2043585777282715
    5. '   ' → logprob: -9.07935905456543
    6. '==' → logprob: -9.32935905456543
    7. '+' → logprob: -10.32935905456543
    8. 'if' → logprob: -10.82935905456543
    9. '       ' → logprob: -11.07935905456543
    10. ' ==' → logprob: -12.07935905456543

Token 173: ' increment' (ID: 24032)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5289884805679321
    2. 'j' → logprob: -1.5289884805679321
    3. 'v' → logprob: -2.4039883613586426
    4. ' i' → logprob: -3.0289883613586426
    5. '0' → logprob: -3.6539883613586426
    6. ' j' → logprob: -4.903988361358643
    7. '   ' → logprob: -5.153988361358643
    8. '+' → logprob: -5.278988361358643
    9. ' v' → logprob: -5.403988361358643
    10. ' ' → logprob: -6.403988361358643

Token 174: '(j' (ID: 4997)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.06928028166294098
    2. ' j' → logprob: -3.5692803859710693
    3. '(j' → logprob: -3.9442803859710693
    4. 'i' → logprob: -5.44428014755249
    5. '+' → logprob: -5.56928014755249
    6. '(' → logprob: -5.81928014755249
    7. '(v' → logprob: -5.81928014755249
    8. 'v' → logprob: -6.44428014755249
    9. '(i' → logprob: -6.81928014755249
    10. '1' → logprob: -6.81928014755249

Token 175: ')
' (ID: 446)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08532679826021194
    2. ')' → logprob: -2.960326910018921
    3. ' +' → logprob: -3.585326910018921
    4. '1' → logprob: -7.335326671600342
    5. ',' → logprob: -8.0853271484375
    6. 'if' → logprob: -8.5853271484375
    7. ')+' → logprob: -8.5853271484375
    8. '+
' → logprob: -8.7103271484375
    9. ' by' → logprob: -8.8353271484375
    10. ')
' → logprob: -8.9603271484375

Token 176: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6297648549079895
    2. 'if' → logprob: -1.5047647953033447
    3. '       ' → logprob: -1.7547647953033447
    4. '
' → logprob: -4.254765033721924
    5. '()' → logprob: -4.254765033721924
    6. '+' → logprob: -4.379765033721924
    7. 'def' → logprob: -5.254765033721924
    8. '<|end|>' → logprob: -5.379765033721924
    9. '()
' → logprob: -5.629765033721924
    10. '(' → logprob: -5.629765033721924

Token 177: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7282298803329468
    2. 'if' (adapté à ' if') → logprob: -0.8532298803329468
    3. '       ' → logprob: -2.4782299995422363
    4. '
' → logprob: -5.978229999542236
    5. '   ' → logprob: -6.603229999542236
    6. ' ' → logprob: -7.228229999542236
    7. '        
' → logprob: -7.478229999542236
    8. 'def' → logprob: -7.728229999542236
    9. '<|end|>' → logprob: -7.728229999542236
    10. ' 
' → logprob: -7.978229999542236

Token 178: ' are' (ID: 553)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.5539228320121765
    2. 'v' → logprob: -1.3039228916168213
    3. 'are' → logprob: -2.5539228916168213
    4. ' are' → logprob: -2.6789228916168213
    5. ' P' → logprob: -5.803922653198242
    6. 'P' → logprob: -6.553922653198242
    7. ' list' → logprob: -7.053922653198242
    8. 'list' → logprob: -7.428922653198242
    9. ' tuple' → logprob: -8.178922653198242
    10. '(P' → logprob: -8.991422653198242

Token 179: '_t' (ID: 838)
  Prédit: '_equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_equal' → logprob: -6.630610641877865e-06
    2. 'equal' → logprob: -12.125006675720215
    3. '_' → logprob: -14.750006675720215
    4. '_equals' → logprob: -15.125006675720215
    5. '(v' → logprob: -15.875006675720215
    6. '_EQUAL' → logprob: -16.2500057220459
    7. '_e' → logprob: -17.5000057220459
    8. ' _' → logprob: -17.6250057220459
    9. '_equ' → logprob: -17.6250057220459
    10. '(P' → logprob: -18.0000057220459

Token 180: 'uples' (ID: 165982)
  Prédit: 'qual'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'qual' → logprob: -0.0022963248193264008
    2. 'equal' → logprob: -6.627296447753906
    3. '_equal' → logprob: -7.127296447753906
    4. 'quals' → logprob: -9.377296447753906
    5. 'ual' → logprob: -11.127296447753906
    6. '```' → logprob: -11.127296447753906
    7. 'r' → logprob: -11.252296447753906
    8. 'q' → logprob: -11.627296447753906
    9. 'u' → logprob: -11.752296447753906
    10. 'okens' → logprob: -12.127296447753906

Token 181: '_equal' (ID: 27882)
  Prédit: '_equal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_equal' → logprob: -0.035867273807525635
    2. '(v' → logprob: -3.410867214202881
    3. '(P' → logprob: -6.660867214202881
    4. 'equal' → logprob: -7.285867214202881
    5. '_are' → logprob: -9.035867691040039
    6. ' (' → logprob: -10.660867691040039
    7. ' equal' → logprob: -11.035867691040039
    8. '(' → logprob: -11.160867691040039
    9. 'Equal' → logprob: -11.285867691040039
    10. '
' → logprob: -11.785867691040039

Token 182: '(P' (ID: 8952)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.3919978439807892
    2. '(P' → logprob: -1.1419978141784668
    3. '(' → logprob: -5.391997814178467
    4. ' (' → logprob: -8.391998291015625
    5. '(Q' → logprob: -8.641998291015625
    6. '(s' → logprob: -9.766998291015625
    7. ')' → logprob: -11.016998291015625
    8. '(a' → logprob: -11.516998291015625
    9. '(j' → logprob: -11.641998291015625
    10. '((' → logprob: -11.766998291015625

Token 183: 'Q' (ID: 48)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18037806451320648
    2. ',v' → logprob: -1.9303780794143677
    3. ',Q' → logprob: -5.180377960205078
    4. '[v' → logprob: -5.305377960205078
    5. ' ,' → logprob: -5.555377960205078
    6. '[' → logprob: -6.180377960205078
    7. ',j' → logprob: -6.305377960205078
    8. 'v' → logprob: -7.180377960205078
    9. '[j' → logprob: -7.930377960205078
    10. ',[' → logprob: -8.930377960205078

Token 184: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2538183629512787
    2. ',' → logprob: -2.2538182735443115
    3. '[i' → logprob: -2.2538182735443115
    4. '   ' → logprob: -5.253818511962891
    5. ' ,' → logprob: -6.128818511962891
    6. ',i' → logprob: -6.128818511962891
    7. '[a' → logprob: -6.753818511962891
    8. '[v' → logprob: -6.878818511962891
    9. '[j' → logprob: -7.253818511962891
    10. ',[' → logprob: -8.00381851196289

Token 185: '],' (ID: 2155)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.49788251519203186
    2. '[i' → logprob: -1.4978824853897095
    3. '],' → logprob: -2.622882604598999
    4. '[j' → logprob: -2.997882604598999
    5. '[' → logprob: -3.997882604598999
    6. ',' → logprob: -4.49788236618042
    7. ']' → logprob: -4.99788236618042
    8. ' [' → logprob: -6.12288236618042
    9. '   ' → logprob: -6.49788236618042
    10. ' ,' → logprob: -6.87288236618042

Token 186: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.1272171288728714
    2. ' v' → logprob: -2.1272170543670654
    3. ')v' → logprob: -8.502217292785645
    4. ')' → logprob: -10.252217292785645
    5. '<|end|>' → logprob: -10.502217292785645
    6. ',v' → logprob: -11.877217292785645
    7. '	v' → logprob: -12.377217292785645
    8. 'vq' → logprob: -13.002217292785645
    9. '?v' → logprob: -13.752217292785645
    10. '<v' → logprob: -13.752217292785645

Token 187: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009162581525743008
    2. '):
' → logprob: -4.759162425994873
    3. ')' → logprob: -7.634162425994873
    4. '       ' → logprob: -10.759162902832031
    5. ':' → logprob: -11.259162902832031
    6. '   ' → logprob: -11.384162902832031
    7. ' ):' → logprob: -12.134162902832031
    8. '):

' → logprob: -12.259162902832031
    9. '):
' → logprob: -12.759162902832031
    10. ')==' → logprob: -13.134162902832031

Token 188: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.30067533254623413
    2. '           ' → logprob: -2.425675392150879
    3. ':
' → logprob: -2.800675392150879
    4. '):' → logprob: -3.175675392150879
    5. '       ' → logprob: -3.675675392150879
    6. '):
' → logprob: -4.050675392150879
    7. ' and' → logprob: -4.800675392150879
    8. '():
' → logprob: -5.800675392150879
    9. ')' → logprob: -6.050675392150879
    10. '():' → logprob: -6.300675392150879

Token 189: ' a' (ID: 261)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7423260807991028
    2. ' i' → logprob: -1.117326021194458
    3. ' j' → logprob: -2.992326021194458
    4. 'a' (adapté à ' a') → logprob: -2.992326021194458
    5. ' a' → logprob: -2.992326021194458
    6. 'j' → logprob: -3.617326021194458
    7. '           ' → logprob: -4.242326259613037
    8. '               ' → logprob: -5.867326259613037
    9. ' break' → logprob: -7.367326259613037
    10. '       ' → logprob: -7.742326259613037

Token 190: ' =' (ID: 314)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.01782047003507614
    2. 'pp' → logprob: -4.267820358276367
    3. '.' → logprob: -6.267820358276367
    4. ' .' → logprob: -6.392820358276367
    5. '.pp' → logprob: -10.392820358276367
    6. 'p' → logprob: -10.892820358276367
    7. '.p' → logprob: -10.892820358276367
    8. 'append' → logprob: -12.642820358276367
    9. '[p' → logprob: -13.392820358276367
    10. ' =' → logprob: -13.767820358276367

Token 191: ' append' (ID: 17147)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.45504721999168396
    2. 'j' → logprob: -1.2050472497940063
    3. ' j' → logprob: -3.955047130584717
    4. ' a' → logprob: -4.080047130584717
    5. 'i' → logprob: -4.080047130584717
    6. 'append' → logprob: -5.580047130584717
    7. '.append' → logprob: -5.955047130584717
    8. '[j' → logprob: -6.205047130584717
    9. ' i' → logprob: -7.080047130584717
    10. '[a' → logprob: -7.080047130584717

Token 192: '_to' (ID: 5089)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.004112354479730129
    2. 'a' → logprob: -5.504112243652344
    3. '(' → logprob: -10.629112243652344
    4. '(i' → logprob: -12.754112243652344
    5. '```' → logprob: -13.254112243652344
    6. '[a' → logprob: -13.504112243652344
    7. ' a' → logprob: -14.254112243652344
    8. '(
' → logprob: -14.254112243652344
    9. ' (' → logprob: -14.754112243652344
    10. '   ' → logprob: -14.879112243652344

Token 193: '_list' (ID: 4162)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.011112428270280361
    2. '(a' → logprob: -4.511112213134766
    3. 'list' → logprob: -9.761112213134766
    4. ' a' → logprob: -12.261112213134766
    5. '```' → logprob: -14.386112213134766
    6. '(' → logprob: -14.636112213134766
    7. '_list' → logprob: -15.386112213134766
    8. '[a' → logprob: -15.511112213134766
    9. '(i' → logprob: -16.011112213134766
    10. '
' → logprob: -16.261112213134766

Token 194: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -2.4153549020411447e-05
    2. 'a' → logprob: -10.87502384185791
    3. '(' → logprob: -12.75002384185791
    4. '(i' → logprob: -13.50002384185791
    5. '```' → logprob: -15.00002384185791
    6. ' (' → logprob: -15.25002384185791
    7. '(
' → logprob: -15.75002384185791
    8. '   ' → logprob: -16.250024795532227
    9. 'list' → logprob: -17.625024795532227
    10. 'def' → logprob: -17.875024795532227

Token 195: ',' (ID: 11)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.5841096043586731
    2. ',' → logprob: -1.0841095447540283
    3. ',v' → logprob: -2.8341095447540283
    4. ',j' → logprob: -3.4591095447540283
    5. '(j' → logprob: -4.709109783172607
    6. ')' → logprob: -6.334109783172607
    7. '(' → logprob: -7.084109783172607
    8. 'j' → logprob: -7.709109783172607
    9. 'v' → logprob: -7.834109783172607
    10. '(P' → logprob: -7.959109783172607

Token 196: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2180814892053604
    2. ' j' → logprob: -1.9680814743041992
    3. 'i' → logprob: -3.093081474304199
    4. ' i' → logprob: -4.718081474304199
    5. 'v' → logprob: -6.843081474304199
    6. ' v' → logprob: -7.718081474304199
    7. ' ' → logprob: -8.8430814743042
    8. 'a' → logprob: -10.0930814743042
    9. '   ' → logprob: -10.5930814743042
    10. ')' → logprob: -10.8430814743042

Token 197: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008838155306875706
    2. ')
' → logprob: -4.758838176727295
    3. '       ' → logprob: -8.508837699890137
    4. ')return' → logprob: -11.883837699890137
    5. ')

' → logprob: -12.258837699890137
    6. ' )' → logprob: -13.133837699890137
    7. '   ' → logprob: -13.633837699890137
    8. ',' → logprob: -13.883837699890137
    9. ')
' → logprob: -13.883837699890137
    10. '           ' → logprob: -14.008837699890137

Token 198: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16332420706748962
    2. '<|end|>' → logprob: -2.0383241176605225
    3. '
' → logprob: -4.038324356079102
    4. '<|end|>' → logprob: -7.038324356079102
    5. 'def' → logprob: -7.538324356079102
    6. ')' → logprob: -8.413324356079102
    7. 'return' → logprob: -8.788324356079102
    8. '        
' → logprob: -8.788324356079102
    9. '   ' → logprob: -9.038324356079102
    10. '```' → logprob: -9.413324356079102

Token 199: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0244998000562191
    2. 'i' → logprob: -4.149499893188477
    3. ' i' → logprob: -6.149499893188477
    4. 'if' (adapté à ' if') → logprob: -6.274499893188477
    5. ' if' → logprob: -6.649499893188477
    6. '   ' → logprob: -6.649499893188477
    7. '           ' → logprob: -7.274499893188477
    8. 'return' → logprob: -8.024499893188477
    9. 'break' → logprob: -8.649499893188477
    10. '
' → logprob: -8.774499893188477

Token 200: ' is' (ID: 382)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.35081514716148376
    2. ' i' → logprob: -1.2258151769638062
    3. 'len' → logprob: -7.350815296173096
    4. ' len' → logprob: -7.725815296173096
    5. 'a' → logprob: -8.225814819335938
    6. 'PQ' → logprob: -8.600814819335938
    7. ' a' → logprob: -8.725814819335938
    8. 'increment' → logprob: -9.100814819335938
    9. ' PQ' → logprob: -9.350814819335938
    10. 'are' → logprob: -9.850814819335938

Token 201: '_one' (ID: 26979)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.8818981647491455
    2. '(len' → logprob: -1.2568981647491455
    3. '_equal' → logprob: -1.5068981647491455
    4. '_empty' → logprob: -4.631897926330566
    5. ' len' → logprob: -4.756897926330566
    6. 'equal' → logprob: -4.756897926330566
    7. '(i' → logprob: -5.006897926330566
    8. '_len' → logprob: -5.256897926330566
    9. 'instance' → logprob: -5.256897926330566
    10. '_a' → logprob: -5.506897926330566

Token 202: '(i' (ID: 3649)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0728992447257042
    2. '(i' → logprob: -3.947899341583252
    3. '_based' → logprob: -4.322899341583252
    4. '(j' → logprob: -4.822899341583252
    5. '_of' → logprob: -4.947899341583252
    6. '_to' → logprob: -6.072899341583252
    7. '_equal' → logprob: -6.072899341583252
    8. '_more' → logprob: -6.072899341583252
    9. '_element' → logprob: -6.197899341583252
    10. 'def' → logprob: -6.447899341583252

Token 203: '):
' (ID: 1883)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.588485598564148
    2. ' ==' → logprob: -1.213485598564148
    3. '+' → logprob: -2.7134857177734375
    4. ')' → logprob: -3.2134857177734375
    5. ' +' → logprob: -4.5884857177734375
    6. ' <' → logprob: -4.8384857177734375
    7. '   ' → logprob: -5.2134857177734375
    8. ' ' → logprob: -5.4634857177734375
    9. '):' → logprob: -5.5884857177734375
    10. '<' → logprob: -6.0884857177734375

Token 204: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013524647802114487
    2. ' i' → logprob: -6.013524532318115
    3. '+' → logprob: -6.638524532318115
    4. ' and' → logprob: -6.763524532318115
    5. '       ' → logprob: -6.763524532318115
    6. '```' → logprob: -6.888524532318115
    7. '           ' → logprob: -7.263524532318115
    8. '                ' → logprob: -7.263524532318115
    9. '		       ' → logprob: -7.388524532318115
    10. 'i' → logprob: -8.138525009155273

Token 205: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.6310346126556396
    2. '               ' → logprob: -0.8810346126556396
    3. ' break' → logprob: -3.1310346126556396
    4. 'i' → logprob: -5.506034851074219
    5. 'return' → logprob: -5.631034851074219
    6. '           ' → logprob: -7.256034851074219
    7. '   ' → logprob: -7.381034851074219
    8. ' i' → logprob: -8.631034851074219
    9. 'a' → logprob: -8.756034851074219
    10. '       ' → logprob: -9.256034851074219

Token 206: '_condition' (ID: 64948)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00788732711225748
    2. '<|end|>' → logprob: -5.007887363433838
    3. '
' → logprob: -7.382887363433838
    4. '           ' → logprob: -8.88288688659668
    5. '<|end|>' → logprob: -9.00788688659668
    6. '   ' → logprob: -9.25788688659668
    7. 'def' → logprob: -10.13288688659668
    8. '        
' → logprob: -10.38288688659668
    9. '               ' → logprob: -10.50788688659668
    10. '```' → logprob: -10.88288688659668

Token 207: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.35895836353302
    2. ':
' → logprob: -1.48395836353302
    3. '       ' → logprob: -1.98395836353302
    4. '=' → logprob: -2.4839582443237305
    5. ':' → logprob: -2.6089582443237305
    6. '           ' → logprob: -2.8589582443237305
    7. '(i' → logprob: -3.2339582443237305
    8. '   ' → logprob: -3.3589582443237305
    9. 's' → logprob: -3.9839582443237305
    10. 'def' → logprob: -4.1089582443237305

Token 208: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.07384756207466125
    2. ' True' → logprob: -2.698847532272339
    3. '           ' → logprob: -5.823847770690918
    4. '   ' → logprob: -7.823847770690918
    5. '               ' → logprob: -8.323847770690918
    6. '       ' → logprob: -8.698847770690918
    7. '                   ' → logprob: -10.323847770690918
    8. 'j' → logprob: -10.698847770690918
    9. 'a' → logprob: -11.448847770690918
    10. '(True' → logprob: -11.448847770690918

Token 209: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 210: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 211: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05881139263510704
    2. '       ' → logprob: -3.6838114261627197
    3. ' break' → logprob: -4.558811187744141
    4. '           ' → logprob: -5.183811187744141
    5. 'break' (adapté à ' break') → logprob: -5.433811187744141
    6. '<|end|>' → logprob: -5.683811187744141
    7. ' i' → logprob: -5.808811187744141
    8. '   ' → logprob: -6.808811187744141
    9. 'i' → logprob: -7.433811187744141
    10. ' ' → logprob: -7.558811187744141

Token 212: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 213: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1282913237810135
    2. '<|end|>' → logprob: -2.378291368484497
    3. '           ' → logprob: -3.878291368484497
    4. '
' → logprob: -5.878291130065918
    5. '   ' → logprob: -6.503291130065918
    6. '<|end|>' → logprob: -6.878291130065918
    7. ' ' → logprob: -8.128291130065918
    8. '        
' → logprob: -8.253291130065918
    9. '               ' → logprob: -8.628291130065918
    10. '            
' → logprob: -9.003291130065918

Token 214: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05298120155930519
    2. '<|end|>' → logprob: -3.05298113822937
    3. '<|end|>' → logprob: -6.552981376647949
    4. '   ' → logprob: -7.552981376647949
    5. '        ' → logprob: -7.677981376647949
    6. '           ' → logprob: -7.677981376647949
    7. ')' → logprob: -8.30298137664795
    8. '
' → logprob: -8.55298137664795
    9. 'def' → logprob: -8.67798137664795
    10. 'i' → logprob: -8.92798137664795

Token 215: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8320990800857544
    2. ':
' → logprob: -1.2070990800857544
    3. '               ' → logprob: -1.5820990800857544
    4. ' :
' → logprob: -3.457098960876465
    5. ' :' → logprob: -4.082098960876465
    6. '           ' → logprob: -5.207098960876465
    7. '            ' → logprob: -6.457098960876465
    8. '              ' → logprob: -6.707098960876465
    9. '                ' → logprob: -6.832098960876465
    10. '                   ' → logprob: -7.207098960876465

Token 216: '               ' (ID: 506)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9819970726966858
    2. '               ' → logprob: -1.106997013092041
    3. ' i' → logprob: -1.231997013092041
    4. '           ' → logprob: -6.731997013092041
    5. '   ' → logprob: -6.856997013092041
    6. '                   ' → logprob: -7.481997013092041
    7. '       ' → logprob: -9.3569974899292
    8. '                ' → logprob: -9.6069974899292
    9. '              ' → logprob: -9.8569974899292
    10. ' ' → logprob: -10.3569974899292

Token 217: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.03856167197227478
    2. ' i' → logprob: -3.4135615825653076
    3. '               ' → logprob: -5.538561820983887
    4. '   ' → logprob: -7.413561820983887
    5. '           ' → logprob: -8.288561820983887
    6. '                   ' → logprob: -10.163561820983887
    7. '	i' → logprob: -10.788561820983887
    8. ' ' → logprob: -11.288561820983887
    9. '       ' → logprob: -11.538561820983887
    10. 'increment' → logprob: -12.038561820983887

Token 218: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.21359284222126007
    2. ' +=' → logprob: -1.9635928869247437
    3. '=' → logprob: -2.963592767715454
    4. ' =' → logprob: -8.088592529296875
    5. '+' → logprob: -10.463592529296875
    6. ']+=' → logprob: -15.463592529296875
    7. '```' → logprob: -15.838592529296875
    8. ' +' → logprob: -16.213592529296875
    9. ' ' → logprob: -16.338592529296875
    10. '++' → logprob: -16.338592529296875

Token 219: ' increment' (ID: 24032)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06563763320446014
    2. 'i' → logprob: -3.0656375885009766
    3. ' i' → logprob: -4.690637588500977
    4. ' ' → logprob: -4.940637588500977
    5. 'increment' → logprob: -7.940637588500977
    6. ' increment' → logprob: -9.190637588500977
    7. '0' → logprob: -9.690637588500977
    8. '(i' → logprob: -11.128137588500977
    9. '   ' → logprob: -11.878137588500977
    10. '+' → logprob: -12.315637588500977

Token 220: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0001246348983841017
    2. '(' → logprob: -9.00012493133545
    3. '(
' → logprob: -13.87512493133545
    4. 'i' → logprob: -16.250123977661133
    5. ' (' → logprob: -16.375123977661133
    6. '(ii' → logprob: -17.750123977661133
    7. '```' → logprob: -18.625123977661133
    8. '(x' → logprob: -18.750123977661133
    9. '()' → logprob: -19.625123977661133
    10. '(iv' → logprob: -19.750123977661133

Token 221: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017131395870819688
    2. ')
' → logprob: -6.501713275909424
    3. '<|end|>' → logprob: -9.376712799072266
    4. '       ' → logprob: -9.501712799072266
    5. ' )' → logprob: -11.376712799072266
    6. ')return' → logprob: -11.501712799072266
    7. '<|end|>' → logprob: -12.251712799072266
    8. '               ' → logprob: -12.251712799072266
    9. '           ' → logprob: -12.626712799072266
    10. '())' → logprob: -12.876712799072266

Token 222: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4262484610080719
    2. '<|end|>' → logprob: -1.3012484312057495
    3. 'def' → logprob: -3.176248550415039
    4. '   ' → logprob: -3.676248550415039
    5. '
' → logprob: -6.301248550415039
    6. '<|end|>' → logprob: -6.676248550415039
    7. '        ' → logprob: -7.176248550415039
    8. '               ' → logprob: -7.551248550415039
    9. '           ' → logprob: -7.801248550415039
    10. ')' → logprob: -7.801248550415039

Token 223: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 224: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6327086091041565
    2. 'a' → logprob: -0.7577086091041565
    3. ' ' → logprob: -10.757708549499512
    4. '(a' → logprob: -10.757708549499512
    5. '   ' → logprob: -11.132708549499512
    6. ' None' → logprob: -11.382708549499512
    7. '[a' → logprob: -11.382708549499512
    8. ' (' → logprob: -11.507708549499512
    9. 'None' → logprob: -12.257708549499512
    10. '	a' → logprob: -12.382708549499512

Token 225: '

' (ID: 279)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.66138756275177
    2. 'def' → logprob: -1.03638756275177
    3. '(' → logprob: -2.6613874435424805
    4. '(
' → logprob: -3.7863874435424805
    5. '[' → logprob: -4.5363874435424805
    6. '<|end|>' → logprob: -4.6613874435424805
    7. '
' → logprob: -5.7863874435424805
    8. '```' → logprob: -6.1613874435424805
    9. '(i' → logprob: -6.5363874435424805
    10. '()' → logprob: -6.7863874435424805

Token 226: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00648621516302228
    2. '_' → logprob: -5.131486415863037
    3. ' def' → logprob: -9.381485939025879
    4. '
' → logprob: -9.381485939025879
    5. '\' → logprob: -9.631485939025879
    6. '(
' → logprob: -9.881485939025879
    7. '   ' → logprob: -10.006485939025879
    8. '(' → logprob: -10.256485939025879
    9. '```' → logprob: -10.381485939025879
    10. ')' → logprob: -10.506485939025879

Token 227: ' increment' (ID: 24032)
  Prédit: 'increment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'increment' → logprob: -0.01642071269452572
    2. ' increment' → logprob: -4.391420841217041
    3. 'are' → logprob: -6.641420841217041
    4. 'append' → logprob: -6.766420841217041
    5. 'is' → logprob: -6.766420841217041
    6. ' append' → logprob: -9.766420364379883
    7. ' are' → logprob: -9.891420364379883
    8. ' is' → logprob: -9.891420364379883
    9. 'sort' → logprob: -10.516420364379883
    10. 'read' → logprob: -10.516420364379883

Token 228: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.33850738406181335
    2. '(i' → logprob: -1.3385074138641357
    3. '(j' → logprob: -4.088507175445557
    4. '(x' → logprob: -5.838507175445557
    5. '(n' → logprob: -6.088507175445557
    6. '(value' → logprob: -6.463507175445557
    7. '(index' → logprob: -6.963507175445557
    8. '(k' → logprob: -8.338507652282715
    9. '(
' → logprob: -9.588507652282715
    10. '(idx' → logprob: -10.088507652282715

Token 229: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3869214951992035
    2. '):
' → logprob: -1.1369215250015259
    3. ')' → logprob: -10.636921882629395
    4. '):
' → logprob: -11.386921882629395
    5. ' ):' → logprob: -12.011921882629395
    6. '):

' → logprob: -12.636921882629395
    7. '   ' → logprob: -13.261921882629395
    8. '(x' → logprob: -13.386921882629395
    9. ' ):
' → logprob: -13.511921882629395
    10. ',' → logprob: -15.011921882629395

Token 230: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16986340284347534
    2. ' return' → logprob: -2.16986346244812
    3. 'return' → logprob: -3.16986346244812
    4. ' x' → logprob: -11.7948637008667
    5. 'x' → logprob: -11.9198637008667
    6. '	return' → logprob: -13.0448637008667
    7. '    ' → logprob: -14.0448637008667
    8. ' ' → logprob: -16.544862747192383
    9. '   ' → logprob: -16.919862747192383
    10. '    
' → logprob: -17.419862747192383

Token 231: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.11783494055271149
    2. 'x' → logprob: -2.36783504486084
    3. ' return' → logprob: -4.11783504486084
    4. ' x' → logprob: -7.11783504486084
    5. '   ' → logprob: -7.86783504486084
    6. '	return' → logprob: -15.24283504486084
    7. '```' → logprob: -15.36783504486084
    8. ' ' → logprob: -15.99283504486084
    9. 'def' → logprob: -16.992834091186523
    10. '    ' → logprob: -17.742834091186523

Token 232: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03804149478673935
    2. ' x' → logprob: -3.288041591644287
    3. '(x' → logprob: -21.038042068481445
    4. '	x' → logprob: -21.288042068481445
    5. '   ' → logprob: -22.413042068481445
    6. ' ' → logprob: -22.663042068481445
    7. ' ' → logprob: -23.413042068481445
    8. '```' → logprob: -24.288042068481445
    9. '`' → logprob: -24.538042068481445
    10. '1' → logprob: -24.538042068481445

Token 233: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08043456077575684
    2. ' +' → logprob: -2.580434560775757
    3. 'x' → logprob: -6.580434799194336
    4. ' x' → logprob: -8.955434799194336
    5. '+x' → logprob: -11.330434799194336
    6. '1' → logprob: -12.205434799194336
    7. '(x' → logprob: -12.330434799194336
    8. '+
' → logprob: -12.830434799194336
    9. ' ' → logprob: -13.830434799194336
    10. ' +
' → logprob: -14.205434799194336

Token 234: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00033546582562848926
    2. ' ' → logprob: -8.000335693359375
    3. '   ' → logprob: -17.750335693359375
    4. '```' → logprob: -19.000335693359375
    5. '<|end|>' → logprob: -20.625335693359375
    6. '  ' → logprob: -20.625335693359375
    7. 'def' → logprob: -20.750335693359375
    8. ' ' → logprob: -22.250335693359375
    9. '=' → logprob: -22.625335693359375
    10. '(' → logprob: -22.750335693359375

Token 235: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.500001907348633
    3. '<|end|>' → logprob: -16.000001907348633
    4. '   ' → logprob: -16.875001907348633
    5. 'def' → logprob: -17.750001907348633
    6. '```' → logprob: -17.750001907348633
    7. '  ' → logprob: -18.875001907348633
    8. '...' → logprob: -19.875001907348633
    9. '{
' → logprob: -20.812501907348633
    10. '+' → logprob: -20.875001907348633

Token 236: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009311757050454617
    2. '<|end|>' → logprob: -4.759311676025391
    3. ' def' → logprob: -7.634311676025391
    4. '
' → logprob: -9.25931167602539
    5. '<|end|>' → logprob: -10.00931167602539
    6. '(' → logprob: -11.13431167602539
    7. '```' → logprob: -11.25931167602539
    8. ')' → logprob: -12.38431167602539
    9. '    
' → logprob: -12.38431167602539
    10. '  
' → logprob: -12.63431167602539

Token 237: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.8624639324116288e-06
    2. ' def' → logprob: -14.000001907348633
    3. 'a' → logprob: -14.875001907348633
    4. '<|end|>' → logprob: -15.250001907348633
    5. '```' → logprob: -15.500001907348633
    6. 'is' → logprob: -16.500001907348633
    7. 'ndef' → logprob: -17.250001907348633
    8. 'are' → logprob: -17.875001907348633
    9. '[' → logprob: -18.250001907348633
    10. '	def' → logprob: -18.250001907348633

Token 238: ' append' (ID: 17147)
  Prédit: 'are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'are' → logprob: -0.046982232481241226
    2. 'append' → logprob: -3.1719822883605957
    3. 'is' → logprob: -5.796982288360596
    4. ' are' → logprob: -7.171982288360596
    5. ' append' → logprob: -9.046981811523438
    6. 'de' → logprob: -11.296981811523438
    7. ' is' → logprob: -11.296981811523438
    8. 'increment' → logprob: -12.921981811523438
    9. 'def' → logprob: -13.109481811523438
    10. 'a' → logprob: -13.171981811523438

Token 239: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -4.320199877838604e-07
    2. '##_' → logprob: -16.375
    3. 'to' → logprob: -16.5
    4. ' _' → logprob: -17.25
    5. '_' → logprob: -18.25
    6. 'To' → logprob: -18.375
    7. ')_' → logprob: -18.5
    8. '(_' → logprob: -18.5
    9. '```' → logprob: -18.625
    10. ''_' → logprob: -18.75

Token 240: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0232557263225317
    2. 'list' → logprob: -3.7732558250427246
    3. 'append' → logprob: -12.648255348205566
    4. 'List' → logprob: -12.773255348205566
    5. 'a' → logprob: -13.023255348205566
    6. 'li' → logprob: -14.273255348205566
    7. 'lst' → logprob: -15.398255348205566
    8. 'l' → logprob: -15.398255348205566
    9. '```' → logprob: -15.523255348205566
    10. 'def' → logprob: -15.773255348205566

Token 241: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00039373442996293306
    2. '(lst' → logprob: -8.250393867492676
    3. '(l' → logprob: -9.125393867492676
    4. '(' → logprob: -10.875393867492676
    5. '(list' → logprob: -12.750393867492676
    6. ' (' → logprob: -14.125393867492676
    7. '(li' → logprob: -14.500393867492676
    8. '(lista' → logprob: -15.250393867492676
    9. '(ls' → logprob: -16.25039291381836
    10. '(x' → logprob: -16.75039291381836

Token 242: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0033721078652888536
    2. ',a' → logprob: -5.7533721923828125
    3. 'a' → logprob: -9.003372192382812
    4. ' ,' → logprob: -9.753372192382812
    5. '(a' → logprob: -11.628372192382812
    6. ',list' → logprob: -14.003372192382812
    7. ',
' → logprob: -14.378372192382812
    8. ',b' → logprob: -14.503372192382812
    9. ',p' → logprob: -15.503372192382812
    10. ',item' → logprob: -15.628372192382812

Token 243: ' val' (ID: 1459)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2563495337963104
    2. 'b' → logprob: -1.5063495635986328
    3. ' x' → logprob: -6.631349563598633
    4. 'elem' → logprob: -6.631349563598633
    5. 'v' → logprob: -7.881349563598633
    6. 'item' → logprob: -7.881349563598633
    7. ' b' → logprob: -8.006349563598633
    8. 'val' → logprob: -8.381349563598633
    9. 'value' → logprob: -8.381349563598633
    10. 'element' → logprob: -8.756349563598633

Token 244: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03813765197992325
    2. '):' → logprob: -3.288137674331665
    3. '):
' → logprob: -9.538137435913086
    4. ')' → logprob: -11.038137435913086
    5. '):

' → logprob: -12.038137435913086
    6. 'a' → logprob: -14.413137435913086
    7. '(a' → logprob: -14.913137435913086
    8. ':
' → logprob: -15.163137435913086
    9. ' ):
' → logprob: -15.288137435913086
    10. ':' → logprob: -15.663137435913086

Token 245: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0036611182149499655
    2. '   ' → logprob: -5.753661155700684
    3. ' a' → logprob: -7.753661155700684
    4. 'return' → logprob: -9.878661155700684
    5. ' return' → logprob: -12.878661155700684
    6. '```' → logprob: -15.753661155700684
    7. '	a' → logprob: -16.503660202026367
    8. '
' → logprob: -18.003660202026367
    9. '    
' → logprob: -18.503660202026367
    10. '  ' → logprob: -18.628660202026367

Token 246: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.0015737832291051745
    2. ' a' → logprob: -6.50157356262207
    3. '   ' → logprob: -9.75157356262207
    4. 'return' → logprob: -11.37657356262207
    5. ' return' → logprob: -13.25157356262207
    6. '	a' → logprob: -17.12657356262207
    7. '```' → logprob: -17.50157356262207
    8. '  ' → logprob: -18.37657356262207
    9. ' ' → logprob: -19.25157356262207
    10. '
' → logprob: -19.75157356262207

Token 247: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.2027428150177002
    2. '.' → logprob: -1.7027428150177002
    3. '+' → logprob: -6.827742576599121
    4. '=' → logprob: -8.827742576599121
    5. 'append' → logprob: -10.202742576599121
    6. '.app' → logprob: -10.452742576599121
    7. ' +' → logprob: -11.702742576599121
    8. ' .' → logprob: -11.827742576599121
    9. '+.' → logprob: -12.702742576599121
    10. '.ap' → logprob: -13.077742576599121

Token 248: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.0002624086628202349
    2. '(' → logprob: -8.250262260437012
    3. 'val' → logprob: -13.750262260437012
    4. ' val' → logprob: -17.875263214111328
    5. ',val' → logprob: -18.625263214111328
    6. '(
' → logprob: -19.125263214111328
    7. '[val' → logprob: -19.375263214111328
    8. '(value' → logprob: -19.500263214111328
    9. '	val' → logprob: -19.750263214111328
    10. ' (' → logprob: -19.875263214111328

Token 249: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.613945101387799e-05
    2. ')
' → logprob: -9.375085830688477
    3. ')return' → logprob: -13.750085830688477
    4. ' )' → logprob: -16.125085830688477
    5. ')a' → logprob: -18.125085830688477
    6. ')

' → logprob: -18.250085830688477
    7. '),' → logprob: -18.375085830688477
    8. ')`' → logprob: -18.625085830688477
    9. ')
' → logprob: -18.875085830688477
    10. '   ' → logprob: -19.000085830688477

Token 250: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1658993512392044
    2. '   ' → logprob: -1.915899395942688
    3. ' return' → logprob: -5.290899276733398
    4. 'def' → logprob: -7.665899276733398
    5. '```' → logprob: -10.040899276733398
    6. '    
' → logprob: -10.290899276733398
    7. '	return' → logprob: -10.540899276733398
    8. '
' → logprob: -10.915899276733398
    9. '<|end|>' → logprob: -11.415899276733398
    10. '       ' → logprob: -11.665899276733398

Token 251: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.030636459589004517
    2. ' return' → logprob: -3.5306365489959717
    3. '   ' → logprob: -7.030636310577393
    4. '	return' → logprob: -13.78063678741455
    5. ':return' → logprob: -16.030635833740234
    6. 'def' → logprob: -16.905635833740234
    7. '
' → logprob: -17.530635833740234
    8. ' ' → logprob: -17.655635833740234
    9. '```' → logprob: -17.905635833740234
    10. '  ' → logprob: -18.405635833740234

Token 252: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0001584850688232109
    2. ' a' → logprob: -8.750158309936523
    3. '	a' → logprob: -21.500158309936523
    4. 'а' → logprob: -22.250158309936523
    5. '_a' → logprob: -22.625158309936523
    6. '(a' → logprob: -22.750158309936523
    7. ''a' → logprob: -23.375158309936523
    8. '<a' → logprob: -23.500158309936523
    9. ' ' → logprob: -24.000158309936523
    10. '#a' → logprob: -24.000158309936523

Token 253: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.7432603272027336e-06
    2. '```' → logprob: -14.000001907348633
    3. ' def' → logprob: -14.500001907348633
    4. '<|end|>' → logprob: -16.250001907348633
    5. '
' → logprob: -16.500001907348633
    6. 'True' → logprob: -17.375001907348633
    7. '-def' → logprob: -17.375001907348633
    8. '[' → logprob: -17.500001907348633
    9. '1' → logprob: -17.750001907348633
    10. 'Def' → logprob: -17.750001907348633

Token 254: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.6240566083070007e-06
    2. ' def' → logprob: -13.750001907348633
    3. 'True' → logprob: -15.875001907348633
    4. '#' → logprob: -16.500001907348633
    5. '[' → logprob: -16.875001907348633
    6. ':def' → logprob: -16.875001907348633
    7. '```' → logprob: -16.875001907348633
    8. '	def' → logprob: -17.375001907348633
    9. 'from' → logprob: -18.125001907348633
    10. '-def' → logprob: -18.500001907348633

Token 255: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.6955054402351379
    2. 'are' → logprob: -0.6955054402351379
    3. ' is' → logprob: -6.695505619049072
    4. ' are' → logprob: -6.820505619049072
    5. 'def' → logprob: -11.445505142211914
    6. 'get' → logprob: -14.008005142211914
    7. 'increment' → logprob: -14.070505142211914
    8. 'aren' → logprob: -14.445505142211914
    9. ' ' → logprob: -14.570505142211914
    10. 'i' → logprob: -14.633005142211914

Token 256: '_one' (ID: 26979)
  Prédit: '_one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_one' → logprob: -2.868328920158092e-05
    2. '_' → logprob: -11.625028610229492
    3. '_equal' → logprob: -12.500028610229492
    4. '(i' → logprob: -12.500028610229492
    5. '1' → logprob: -13.000028610229492
    6. 'One' → logprob: -13.125028610229492
    7. '```' → logprob: -13.750028610229492
    8. '_ONE' → logprob: -13.875028610229492
    9. 'one' → logprob: -14.250028610229492
    10. '(x' → logprob: -14.375028610229492

Token 257: '(i' (ID: 3649)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0011742709903046489
    2. '(' → logprob: -7.001174449920654
    3. '(i' → logprob: -8.376173973083496
    4. '(n' → logprob: -11.626173973083496
    5. '(value' → logprob: -11.876173973083496
    6. 'def' → logprob: -11.876173973083496
    7. '(
' → logprob: -12.376173973083496
    8. '(num' → logprob: -12.876173973083496
    9. '(a' → logprob: -13.626173973083496
    10. 'x' → logprob: -13.876173973083496

Token 258: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5762248039245605
    2. '):
' → logprob: -0.8262248039245605
    3. ')' → logprob: -8.701225280761719
    4. '   ' → logprob: -10.451225280761719
    5. '(i' → logprob: -10.451225280761719
    6. ' ):
' → logprob: -10.701225280761719
    7. ' ):' → logprob: -10.951225280761719
    8. '):

' → logprob: -11.326225280761719
    9. '(' → logprob: -12.576225280761719
    10. '):
' → logprob: -12.951225280761719

Token 259: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019629953429102898
    2. 'return' → logprob: -4.019629955291748
    3. ' return' → logprob: -6.519629955291748
    4. '	return' → logprob: -12.76962947845459
    5. 'i' → logprob: -13.76962947845459
    6. ' i' → logprob: -14.64462947845459
    7. '  ' → logprob: -15.51962947845459
    8. '    ' → logprob: -15.51962947845459
    9. ' ' → logprob: -17.394630432128906
    10. '```' → logprob: -17.644630432128906

Token 260: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.008144191466271877
    2. '   ' → logprob: -5.508144378662109
    3. ' return' → logprob: -5.508144378662109
    4. 'i' → logprob: -13.00814437866211
    5. '
' → logprob: -13.88314437866211
    6. '	return' → logprob: -14.88314437866211
    7. '```' → logprob: -15.88314437866211
    8. '`' → logprob: -17.13314437866211
    9. ' i' → logprob: -17.50814437866211
    10. '    
' → logprob: -17.75814437866211

Token 261: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2519318461418152
    2. ' i' → logprob: -1.50193190574646
    3. '(i' → logprob: -13.251932144165039
    4. '	i' → logprob: -15.376932144165039
    5. ' ' → logprob: -15.501932144165039
    6. '   ' → logprob: -15.501932144165039
    7. '(' → logprob: -15.876932144165039
    8. '1' → logprob: -16.50193214416504
    9. ' (' → logprob: -16.50193214416504
    10. ' ' → logprob: -16.62693214416504

Token 262: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.47408756613731384
    2. '==' → logprob: -0.9740875959396362
    3. ' ' → logprob: -12.349087715148926
    4. '=' → logprob: -12.974087715148926
    5. ' ' → logprob: -13.224087715148926
    6. '==
' → logprob: -14.349087715148926
    7. '1' → logprob: -15.224087715148926
    8. '[' → logprob: -15.224087715148926
    9. ')' → logprob: -15.474087715148926
    10. '===' → logprob: -15.474087715148926

Token 263: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008228140883147717
    2. '0' → logprob: -4.883228302001953
    3. ' ' → logprob: -7.383228302001953
    4. '   ' → logprob: -16.133228302001953
    5. '(' → logprob: -17.195728302001953
    6. '```' → logprob: -17.695728302001953
    7. '' → logprob: -18.133228302001953
    8. '  ' → logprob: -18.320728302001953
    9. '۱' → logprob: -18.945728302001953
    10. 'len' → logprob: -19.133228302001953

Token 264: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029774323105812073
    2. '1' → logprob: -3.5297744274139404
    3. ' ' → logprob: -10.65477466583252
    4. '(' → logprob: -16.717273712158203
    5. '```' → logprob: -16.967273712158203
    6. '   ' → logprob: -17.154773712158203
    7. '' → logprob: -17.904773712158203
    8. '01' → logprob: -18.154773712158203
    9. '
' → logprob: -18.404773712158203
    10. '۰' → logprob: -18.654773712158203

Token 265: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 266: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04148433357477188
    2. '<|end|>' → logprob: -3.5414843559265137
    3. '#' → logprob: -5.416484355926514
    4. '<|end|>' → logprob: -6.166484355926514
    5. 'are' → logprob: -6.291484355926514
    6. 'for' → logprob: -7.291484355926514
    7. '[' → logprob: -7.416484355926514
    8. '```' → logprob: -7.666484355926514
    9. 'a' → logprob: -8.541483879089355
    10. '.' → logprob: -8.916483879089355

Token 267: ' are' (ID: 553)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.06419703364372253
    2. ' main' → logprob: -3.189197063446045
    3. 'get' → logprob: -4.939197063446045
    4. 'are' → logprob: -5.064197063446045
    5. 'read' → logprob: -6.189197063446045
    6. 'find' → logprob: -6.814197063446045
    7. 'break' → logprob: -6.814197063446045
    8. 'def' → logprob: -7.064197063446045
    9. '__' → logprob: -7.689197063446045
    10. 'sort' → logprob: -7.939197063446045

Token 268: '_t' (ID: 838)
  Prédit: '_equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_equal' → logprob: -0.07904808968305588
    2. '_t' → logprob: -2.5790481567382812
    3. 'equal' → logprob: -9.579048156738281
    4. '_' → logprob: -10.329048156738281
    5. 't' → logprob: -10.329048156738281
    6. '_equals' → logprob: -11.204048156738281
    7. '_to' → logprob: -13.329048156738281
    8. '_are' → logprob: -13.329048156738281
    9. 'tu' → logprob: -13.704048156738281
    10. '(P' → logprob: -14.204048156738281

Token 269: 'uples' (ID: 165982)
  Prédit: 'uples'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uples' → logprob: -0.0026862293016165495
    2. 'ples' → logprob: -6.377686023712158
    3. 'uple' → logprob: -7.502686023712158
    4. '_t' → logprob: -8.127686500549316
    5. 'tu' → logprob: -9.127686500549316
    6. 'u' → logprob: -11.877686500549316
    7. 'ple' → logprob: -12.252686500549316
    8. 'up' → logprob: -12.627686500549316
    9. 't' → logprob: -13.252686500549316
    10. 'iples' → logprob: -13.377686500549316

Token 270: '_equal' (ID: 27882)
  Prédit: '_equal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_equal' → logprob: -1.1160349458805285e-05
    2. 'equal' → logprob: -11.625011444091797
    3. '_equals' → logprob: -13.500011444091797
    4. '_equ' → logprob: -15.000011444091797
    5. '_are' → logprob: -15.250011444091797
    6. '_' → logprob: -16.625011444091797
    7. 'Equal' → logprob: -18.000011444091797
    8. '_EQUAL' → logprob: -18.250011444091797
    9. '_eq' → logprob: -18.375011444091797
    10. '_e' → logprob: -18.625011444091797

Token 271: '(t' (ID: 2025)
  Prédit: '(P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.00019507692195475101
    2. '(a' → logprob: -9.000195503234863
    3. '(' → logprob: -10.250195503234863
    4. '(A' → logprob: -10.875195503234863
    5. '(T' → logprob: -11.750195503234863
    6. '(p' → logprob: -12.750195503234863
    7. '(x' → logprob: -13.250195503234863
    8. '(tuple' → logprob: -13.500195503234863
    9. '(t' → logprob: -14.000195503234863
    10. '(Q' → logprob: -14.500195503234863

Token 272: '1' (ID: 16)
  Prédit: 'uples'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uples' → logprob: -0.00549224903807044
    2. 'uple' → logprob: -5.505492210388184
    3. '1' → logprob: -7.505492210388184
    4. '(t' → logprob: -8.005492210388184
    5. 'ples' → logprob: -8.630492210388184
    6. 'up' → logprob: -9.505492210388184
    7. 's' → logprob: -9.630492210388184
    8. ',' → logprob: -9.755492210388184
    9. 'u' → logprob: -10.380492210388184
    10. '_' → logprob: -11.130492210388184

Token 273: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016384923947043717
    2. ',t' → logprob: -8.750164031982422
    3. ' ,' → logprob: -12.250164031982422
    4. ',
' → logprob: -14.875164031982422
    5. 't' → logprob: -16.000164031982422
    6. '1' → logprob: -16.875164031982422
    7. ',

' → logprob: -17.000164031982422
    8. ' t' → logprob: -18.500164031982422
    9. '_,' → logprob: -18.625164031982422
    10. '‌,' → logprob: -18.750164031982422

Token 274: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.023245712742209435
    2. ' t' → logprob: -3.7732458114624023
    3. ',' → logprob: -15.898245811462402
    4. '	t' → logprob: -17.023244857788086
    5. '`t' → logprob: -18.398244857788086
    6. ' т' → logprob: -18.648244857788086
    7. '<|end|>' → logprob: -18.898244857788086
    8. ',t' → logprob: -19.023244857788086
    9. ' ' → logprob: -19.148244857788086
    10. '
' → logprob: -19.648244857788086

Token 275: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0006139091565273702
    2. '1' → logprob: -7.875613689422607
    3. ',' → logprob: -8.375614166259766
    4. '_' → logprob: -14.000614166259766
    5. ',_' → logprob: -14.500614166259766
    6. '):
' → logprob: -14.625614166259766
    7. '):' → logprob: -15.000614166259766
    8. 'ype' → logprob: -15.250614166259766
    9. '_,' → logprob: -15.750614166259766
    10. ',
' → logprob: -16.125614166259766

Token 276: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0021936828270554543
    2. '):
' → logprob: -6.127193450927734
    3. ')' → logprob: -11.877193450927734
    4. ':' → logprob: -14.877193450927734
    5. '):
' → logprob: -14.877193450927734
    6. ' ):' → logprob: -14.877193450927734
    7. '):

' → logprob: -15.002193450927734
    8. ',' → logprob: -17.127193450927734
    9. '[]):' → logprob: -17.377193450927734
    10. '   ' → logprob: -17.627193450927734

Token 277: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7857293486595154
    2. 'return' → logprob: -0.7857293486595154
    3. 't' → logprob: -2.78572940826416
    4. ' return' → logprob: -3.66072940826416
    5. ' t' → logprob: -6.91072940826416
    6. '	return' → logprob: -10.91072940826416
    7. ' ' → logprob: -12.66072940826416
    8. '  ' → logprob: -13.28572940826416
    9. '`t' → logprob: -13.66072940826416
    10. '	t' → logprob: -13.78572940826416

Token 278: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0016234104987233877
    2. ' return' → logprob: -6.751623630523682
    3. 't' → logprob: -7.751623630523682
    4. '   ' → logprob: -10.751623153686523
    5. ' t' → logprob: -13.501623153686523
    6. '```' → logprob: -16.751623153686523
    7. '
' → logprob: -16.876623153686523
    8. '	return' → logprob: -16.876623153686523
    9. '    
' → logprob: -17.626623153686523
    10. 'def' → logprob: -18.001623153686523

Token 279: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00861456897109747
    2. ' t' → logprob: -4.758614540100098
    3. 'tuple' → logprob: -16.883615493774414
    4. '	t' → logprob: -17.508615493774414
    5. ' ' → logprob: -19.883615493774414
    6. '(t' → logprob: -20.258615493774414
    7. '`t' → logprob: -20.508615493774414
    8. ' tuple' → logprob: -20.508615493774414
    9. '   ' → logprob: -20.633615493774414
    10. ' ' → logprob: -21.383615493774414

Token 280: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. 'uple' → logprob: -12.875003814697266
    3. ' t' → logprob: -15.000003814697266
    4. '_' → logprob: -15.000003814697266
    5. 'ype' → logprob: -15.750003814697266
    6. ' ' → logprob: -16.875003814697266
    7. '2' → logprob: -16.875003814697266
    8. '```' → logprob: -17.500003814697266
    9. 't' → logprob: -17.750003814697266
    10. 'uples' → logprob: -17.750003814697266

Token 281: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.023246178403496742
    2. '==' → logprob: -3.7732462882995605
    3. '[' → logprob: -15.273245811462402
    4. ' ' → logprob: -15.898245811462402
    5. ' ' → logprob: -16.64824676513672
    6. '=' → logprob: -17.02324676513672
    7. ')==' → logprob: -17.02324676513672
    8. ' ==
' → logprob: -17.14824676513672
    9. '==
' → logprob: -17.52324676513672
    10. ')' → logprob: -17.64824676513672

Token 282: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.01814994215965271
    2. ' t' → logprob: -4.0181498527526855
    3. '	t' → logprob: -18.643150329589844
    4. '_t' → logprob: -19.018150329589844
    5. ' ' → logprob: -19.768150329589844
    6. ' ' → logprob: -20.143150329589844
    7. '`t' → logprob: -20.268150329589844
    8. '(t' → logprob: -20.768150329589844
    9. ' т' → logprob: -21.268150329589844
    10. 'tu' → logprob: -21.643150329589844

Token 283: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.025427071377635002
    2. '1' → logprob: -4.150426864624023
    3. 'uple' → logprob: -5.025426864624023
    4. 'u' → logprob: -6.900426864624023
    5. '_' → logprob: -7.275426864624023
    6. 't' → logprob: -8.150426864624023
    7. 'up' → logprob: -8.275426864624023
    8. 'ple' → logprob: -8.400426864624023
    9. 'ples' → logprob: -9.275426864624023
    10. 'p' → logprob: -9.525426864624023

Token 284: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 285: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.38787829875946045
    2. 'N' → logprob: -1.1378782987594604
    3. '```' → logprob: -7.63787841796875
    4. '#' → logprob: -8.63787841796875
    5. 'if' → logprob: -8.88787841796875
    6. '<|end|>' → logprob: -9.51287841796875
    7. '(N' → logprob: -10.26287841796875
    8. '(' → logprob: -10.63787841796875
    9. '<|end|>' → logprob: -11.01287841796875
    10. 'data' → logprob: -11.63787841796875

Token 286: ' get' (ID: 717)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00020592445798683912
    2. 'def' → logprob: -9.000205993652344
    3. ' main' → logprob: -9.750205993652344
    4. 'solve' → logprob: -11.000205993652344
    5. 'calculate' → logprob: -13.250205993652344
    6. 'get' → logprob: -13.375205993652344
    7. 'solution' → logprob: -14.000205993652344
    8. 'count' → logprob: -14.000205993652344
    9. 'process' → logprob: -14.375205993652344
    10. 'check' → logprob: -15.125205993652344

Token 287: '_difference' (ID: 123771)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.17069149017333984
    2. '_positions' → logprob: -1.9206914901733398
    3. '_next' → logprob: -5.04569149017334
    4. '_per' → logprob: -6.79569149017334
    5. 'input' → logprob: -7.54569149017334
    6. 'positions' → logprob: -8.29569149017334
    7. '_position' → logprob: -8.67069149017334
    8. '_output' → logprob: -8.67069149017334
    9. '_' → logprob: -8.79569149017334
    10. '_pos' → logprob: -8.92069149017334

Token 288: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.044275470077991486
    2. '():' → logprob: -3.6692755222320557
    3. '(' → logprob: -4.044275283813477
    4. '()' → logprob: -9.169275283813477
    5. '()(' → logprob: -9.419275283813477
    6. '(A' → logprob: -9.919275283813477
    7. '():
' → logprob: -11.919275283813477
    8. ' (' → logprob: -12.169275283813477
    9. '(
' → logprob: -12.669275283813477
    10. '(i' → logprob: -12.794275283813477

Token 289: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02480441704392433
    2. '):
' → logprob: -3.7748043537139893
    3. '[' → logprob: -6.649804592132568
    4. ')' → logprob: -8.89980411529541
    5. ' ):' → logprob: -10.14980411529541
    6. '):

' → logprob: -10.52480411529541
    7. '(' → logprob: -10.89980411529541
    8. '):
' → logprob: -10.89980411529541
    9. '[]):' → logprob: -11.77480411529541
    10. '(a' → logprob: -12.52480411529541

Token 290: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03806697204709053
    2. 'return' → logprob: -3.288066864013672
    3. ' return' → logprob: -10.913066864013672
    4. 'a' → logprob: -12.038066864013672
    5. '```' → logprob: -14.413066864013672
    6. '	return' → logprob: -14.663066864013672
    7. 'def' → logprob: -15.163066864013672
    8. 'abs' → logprob: -17.163066864013672
    9. ':return' → logprob: -18.038066864013672
    10. '       ' → logprob: -18.038066864013672

Token 291: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.043814294040203094
    2. 'abs' → logprob: -3.293814182281494
    3. 'a' → logprob: -5.168814182281494
    4. '   ' → logprob: -10.293814659118652
    5. ' return' → logprob: -10.793814659118652
    6. 'def' → logprob: -11.918814659118652
    7. 'lambda' → logprob: -13.543814659118652
    8. '```' → logprob: -13.918814659118652
    9. ' abs' → logprob: -14.043814659118652
    10. 'max' → logprob: -15.043814659118652

Token 292: ' a' (ID: 261)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.04958002641797066
    2. 'a' → logprob: -3.0495800971984863
    3. ' abs' → logprob: -6.924580097198486
    4. ' a' → logprob: -11.799579620361328
    5. 'max' → logprob: -14.549579620361328
    6. 'int' → logprob: -14.799579620361328
    7. '(abs' → logprob: -15.174579620361328
    8. '   ' → logprob: -16.049579620361328
    9. ' ' → logprob: -17.049579620361328
    10. '  ' → logprob: -18.174579620361328

Token 293: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0003147280658595264
    2. '[-' → logprob: -8.125314712524414
    3. 'def' → logprob: -11.625314712524414
    4. '[len' → logprob: -13.375314712524414
    5. '\[' → logprob: -13.500314712524414
    6. '```' → logprob: -13.625314712524414
    7. '-' → logprob: -13.750314712524414
    8. '1' → logprob: -13.750314712524414
    9. '0' → logprob: -14.625314712524414
    10. '[::-' → logprob: -14.750314712524414

Token 294: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.301394023466855e-05
    2. '-' → logprob: -10.375062942504883
    3. '0' → logprob: -10.375062942504883
    4. ' -' → logprob: -16.000062942504883
    5. ' ' → logprob: -16.375062942504883
    6. '```' → logprob: -16.625062942504883
    7. '::-' → logprob: -16.875062942504883
    8. '   ' → logprob: -17.000062942504883
    9. '
' → logprob: -17.125062942504883
    10. '[' → logprob: -17.250062942504883

Token 295: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008399999933317304
    2. ']-' → logprob: -7.750840187072754
    3. '-' → logprob: -7.875840187072754
    4. ' -' → logprob: -10.875840187072754
    5. ' ]' → logprob: -12.125840187072754
    6. 'a' → logprob: -13.000840187072754
    7. '[' → logprob: -13.500840187072754
    8. '0' → logprob: -14.375840187072754
    9. '1' → logprob: -15.500840187072754
    10. ' ' → logprob: -16.500839233398438

Token 296: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3132900297641754
    2. ' -' → logprob: -1.313289999961853
    3. '[' → logprob: -11.563289642333984
    4. '   ' → logprob: -11.938289642333984
    5. '0' → logprob: -12.188289642333984
    6. 'a' → logprob: -13.313289642333984
    7. ' ' → logprob: -13.938289642333984
    8. '-
' → logprob: -14.188289642333984
    9. '1' → logprob: -14.438289642333984
    10. ')' → logprob: -14.813289642333984

Token 297: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0007100477814674377
    2. ' a' → logprob: -7.2507100105285645
    3. '   ' → logprob: -16.750709533691406
    4. '	a' → logprob: -17.750709533691406
    5. ' ' → logprob: -18.250709533691406
    6. '0' → logprob: -18.750709533691406
    7. '1' → logprob: -18.875709533691406
    8. '  ' → logprob: -19.875709533691406
    9. '[a' → logprob: -20.000709533691406
    10. '_a' → logprob: -20.500709533691406

Token 298: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004659861326217651
    2. '0' → logprob: -5.379659652709961
    3. '(' → logprob: -10.379659652709961
    4. ' [' → logprob: -12.754659652709961
    5. '```' → logprob: -13.254659652709961
    6. '\[' → logprob: -13.379659652709961
    7. ' ' → logprob: -14.129659652709961
    8. '1' → logprob: -14.504659652709961
    9. '[
' → logprob: -14.754659652709961
    10. '()[' → logprob: -15.879659652709961

Token 299: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -16.375001907348633
    4. '<|end|>' → logprob: -17.125001907348633
    5. '  ' → logprob: -17.437501907348633
    6. '[' → logprob: -17.625001907348633
    7. '۰' → logprob: -17.875001907348633
    8. '```' → logprob: -19.000001907348633
    9. '00' → logprob: -19.875001907348633
    10. ']' → logprob: -19.875001907348633

Token 300: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.25266993045806885
    2. ')' → logprob: -1.5026699304580688
    3. '])' → logprob: -7.502669811248779
    4. '[' → logprob: -9.252670288085938
    5. '<|end|>' → logprob: -10.002670288085938
    6. ')]' → logprob: -10.627670288085938
    7. '}' → logprob: -11.627670288085938
    8. ' ]' → logprob: -12.127670288085938
    9. '）' → logprob: -13.127670288085938
    10. ' )' → logprob: -13.627670288085938

Token 301: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.17967548966407776
    2. 'N' → logprob: -1.9296754598617554
    3. '```' → logprob: -4.179675579071045
    4. '#' → logprob: -6.304675579071045
    5. '<|end|>' → logprob: -6.429675579071045
    6. 'a' → logprob: -8.804675102233887
    7. '
' → logprob: -9.429675102233887
    8. '<|end|>' → logprob: -9.804675102233887
    9. 'import' → logprob: -10.554675102233887
    10. '(N' → logprob: -10.929675102233887

Token 302: ' print' (ID: 2123)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.4253166615962982
    2. 'main' → logprob: -1.5503166913986206
    3. ' get' → logprob: -3.050316572189331
    4. 'def' → logprob: -3.675316572189331
    5. 'get' → logprob: -3.925316572189331
    6. 'if' → logprob: -4.17531681060791
    7. '__' → logprob: -5.17531681060791
    8. ' if' → logprob: -5.17531681060791
    9. ' def' → logprob: -5.30031681060791
    10. ' __' → logprob: -5.42531681060791

Token 303: '_result' (ID: 11623)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005672322120517492
    2. '()' → logprob: -5.630672454833984
    3. '(a' → logprob: -6.380672454833984
    4. ' (' → logprob: -8.755672454833984
    5. 'a' → logprob: -9.130672454833984
    6. '('' → logprob: -9.880672454833984
    7. '("")' → logprob: -11.255672454833984
    8. '("("' → logprob: -11.755672454833984
    9. '(
' → logprob: -12.005672454833984
    10. '("' → logprob: -12.005672454833984

Token 304: '(ans' (ID: 70054)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.6076602935791016
    2. '(' → logprob: -0.8576602935791016
    3. '()' → logprob: -3.4826602935791016
    4. '(
' → logprob: -8.482660293579102
    5. '():' → logprob: -9.107660293579102
    6. ' (' → logprob: -9.732660293579102
    7. '((' → logprob: -10.857660293579102
    8. '("' → logprob: -10.982660293579102
    9. '(()' → logprob: -10.982660293579102
    10. '('' → logprob: -11.357660293579102

Token 305: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04749187082052231
    2. '):
' → logprob: -3.5474917888641357
    3. '):' → logprob: -4.422492027282715
    4. ')
' → logprob: -5.547492027282715
    5. ',' → logprob: -7.172492027282715
    6. '(ans' → logprob: -7.297492027282715
    7. '(' → logprob: -9.172492027282715
    8. '):

' → logprob: -9.672492027282715
    9. 'ans' → logprob: -10.547492027282715
    10. '):
' → logprob: -11.297492027282715

Token 306: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05360858514904976
    2. 'print' → logprob: -3.0536086559295654
    3. ' print' → logprob: -5.303608417510986
    4. '(print' → logprob: -10.928608894348145
    5. '```' → logprob: -11.428608894348145
    6. '(' → logprob: -12.678608894348145
    7. 'def' → logprob: -14.053608894348145
    8. '	print' → logprob: -14.303608894348145
    9. '    
' → logprob: -14.428608894348145
    10. '
' → logprob: -15.178608894348145

Token 307: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.320199877838604e-07
    2. ' print' → logprob: -14.75
    3. '```' → logprob: -18.125
    4. '   ' → logprob: -18.25
    5. 'for' → logprob: -20.0
    6. '`' → logprob: -21.75
    7. '
' → logprob: -22.75
    8. 'pr' → logprob: -22.75
    9. 'def' → logprob: -23.125
    10. '    
' → logprob: -24.5

Token 308: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -2.6060808522743173e-05
    2. '(' → logprob: -11.000025749206543
    3. '(*' → logprob: -11.750025749206543
    4. 'ans' → logprob: -14.000025749206543
    5. '()' → logprob: -14.875025749206543
    6. '(abs' → logprob: -16.25002670288086
    7. '(
' → logprob: -17.50002670288086
    8. '	ans' → logprob: -17.87502670288086
    9. '(answer' → logprob: -18.37502670288086
    10. ' (' → logprob: -19.00002670288086

Token 309: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ')
' → logprob: -15.375000953674316
    3. ' )' → logprob: -15.875000953674316
    4. ')`' → logprob: -16.0
    5. '))' → logprob: -16.375
    6. '')' → logprob: -17.375
    7. '())' → logprob: -18.0
    8. ')}' → logprob: -18.25
    9. '()' → logprob: -18.25
    10. '),' → logprob: -18.5

Token 310: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.9146995327901095e-05
    2. 'if' → logprob: -11.250019073486328
    3. '```' → logprob: -12.250019073486328
    4. 'N' → logprob: -14.125019073486328
    5. ' def' → logprob: -14.625019073486328
    6. '#' → logprob: -16.000019073486328
    7. '(' → logprob: -18.625019073486328
    8. '>' → logprob: -18.625019073486328
    9. 'import' → logprob: -18.750019073486328
    10. 'from' → logprob: -18.750019073486328

Token 311: ' solve' (ID: 17722)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0030351129826158285
    2. ' main' → logprob: -6.003035068511963
    3. 'def' → logprob: -7.503035068511963
    4. 'solve' → logprob: -11.878035545349121
    5. ' def' → logprob: -15.253035545349121
    6. 'process' → logprob: -15.753035545349121
    7. '	main' → logprob: -15.878035545349121
    8. 'run' → logprob: -16.378034591674805
    9. 'solution' → logprob: -16.753034591674805
    10. '_main' → logprob: -16.878034591674805

Token 312: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -2.6060808522743173e-05
    2. ' ():' → logprob: -10.875025749206543
    3. '():
' → logprob: -11.875025749206543
    4. '()' → logprob: -16.37502670288086
    5. '():
' → logprob: -18.87502670288086
    6. '():

' → logprob: -19.75002670288086
    7. '(' → logprob: -20.37502670288086
    8. ' ()' → logprob: -21.12502670288086
    9. '().' → logprob: -21.25002670288086
    10. '_' → logprob: -21.87502670288086

Token 313: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005638765869662166
    2. 'N' → logprob: -8.125563621520996
    3. ' N' → logprob: -8.250563621520996
    4. '(N' → logprob: -12.250563621520996
    5. '	N' → logprob: -14.000563621520996
    6. 'n' → logprob: -15.500563621520996
    7. '
' → logprob: -15.625563621520996
    8. '()' → logprob: -15.750563621520996
    9. '   ' → logprob: -15.750563621520996
    10. ' ' → logprob: -15.875563621520996

Token 314: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.006761436816304922
    2. '   ' → logprob: -5.00676155090332
    3. ' N' → logprob: -10.00676155090332
    4. '	N' → logprob: -14.50676155090332
    5. ' ' → logprob: -15.75676155090332
    6. '  ' → logprob: -16.00676155090332
    7. '#' → logprob: -16.13176155090332
    8. '    
' → logprob: -17.00676155090332
    9. '(N' → logprob: -17.13176155090332
    10. '
' → logprob: -17.13176155090332

Token 315: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007722083013504744
    2. '=' → logprob: -4.882721900939941
    3. ',' → logprob: -9.257721900939941
    4. '   ' → logprob: -11.132721900939941
    5. ')' → logprob: -13.257721900939941
    6. ' ' → logprob: -13.257721900939941
    7. ' ,' → logprob: -14.132721900939941
    8. '    ' → logprob: -14.257721900939941
    9. ' =
' → logprob: -15.257721900939941
    10. '=int' → logprob: -15.257721900939941

Token 316: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.029795385897159576
    2. ' P' → logprob: -3.5297954082489014
    3. '<|end|>' → logprob: -11.02979564666748
    4. ' =' → logprob: -12.15479564666748
    5. '  ' → logprob: -12.27979564666748
    6. ' ' → logprob: -12.27979564666748
    7. 'PQ' → logprob: -13.02979564666748
    8. 'get' → logprob: -13.15479564666748
    9. '*' → logprob: -13.52979564666748
    10. '=P' → logprob: -13.52979564666748

Token 317: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007058793562464416
    2. '=' → logprob: -8.00070571899414
    3. ' ,' → logprob: -8.50070571899414
    4. ' =' → logprob: -8.75070571899414
    5. ',P' → logprob: -12.25070571899414
    6. '   ' → logprob: -12.62570571899414
    7. ',Q' → logprob: -15.37570571899414
    8. ',N' → logprob: -16.00070571899414
    9. ' ' → logprob: -16.25070571899414
    10. '  ' → logprob: -17.12570571899414

Token 318: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.000553151941858232
    2. ' Q' → logprob: -7.500553131103516
    3. '   ' → logprob: -16.250553131103516
    4. '	Q' → logprob: -16.500553131103516
    5. ' ' → logprob: -17.875553131103516
    6. ',Q' → logprob: -18.125553131103516
    7. '  ' → logprob: -18.250553131103516
    8. '    ' → logprob: -18.875553131103516
    9. '<|end|>' → logprob: -19.125553131103516
    10. 'def' → logprob: -19.625553131103516

Token 319: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020752996206284
    2. '=' → logprob: -2.350207567214966
    3. '   ' → logprob: -14.350207328796387
    4. ' ' → logprob: -15.225207328796387
    5. '=P' → logprob: -16.600208282470703
    6. ',' → logprob: -17.850208282470703
    7. '  ' → logprob: -18.725208282470703
    8. '＝' → logprob: -18.850208282470703
    9. '=N' → logprob: -18.850208282470703
    10. '    ' → logprob: -19.850208282470703

Token 320: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.2014133334159851
    2. ' get' → logprob: -1.7014133930206299
    3. '	get' → logprob: -19.701414108276367
    4. '(get' → logprob: -20.326414108276367
    5. '=get' → logprob: -20.451414108276367
    6. '   ' → logprob: -20.826414108276367
    7. '_get' → logprob: -21.326414108276367
    8. '.get' → logprob: -22.326414108276367
    9. ',get' → logprob: -22.951414108276367
    10. '[get' → logprob: -23.201414108276367

Token 321: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -2.816093228830141e-06
    2. '_inputs' → logprob: -13.37500286102295
    3. '_' → logprob: -14.75000286102295
    4. 'input' → logprob: -15.25000286102295
    5. '(_' → logprob: -15.62500286102295
    6. ' _' → logprob: -16.625001907348633
    7. '(' → logprob: -16.750001907348633
    8. '_in' → logprob: -17.125001907348633
    9. '_Input' → logprob: -17.250001907348633
    10. '_output' → logprob: -17.500001907348633

Token 322: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -6.630610641877865e-06
    2. '()
' → logprob: -12.000006675720215
    3. ' ()' → logprob: -15.875006675720215
    4. '()`' → logprob: -16.5000057220459
    5. '()

' → logprob: -16.5000057220459
    6. '(' → logprob: -17.5000057220459
    7. '()"' → logprob: -18.0000057220459
    8. '()
' → logprob: -18.1250057220459
    9. '()]' → logprob: -18.3750057220459
    10. '()\' → logprob: -18.6250057220459

Token 323: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011720332317054272
    2. 'PQ' → logprob: -5.136720180511475
    3. 'li' → logprob: -5.511720180511475
    4. ' PQ' → logprob: -7.261720180511475
    5. ' li' → logprob: -7.386720180511475
    6. '```' → logprob: -8.886720657348633
    7. 'pq' → logprob: -9.011720657348633
    8. '   ' → logprob: -9.636720657348633
    9. ' pq' → logprob: -11.136720657348633
    10. ' ' → logprob: -11.636720657348633

Token 324: ' if' (ID: 538)
  Prédit: 'li'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'li' → logprob: -5.717296517104842e-05
    2. '   ' → logprob: -10.625057220458984
    3. ' li' → logprob: -10.625057220458984
    4. 'LI' → logprob: -12.750057220458984
    5. 'PQ' → logprob: -12.750057220458984
    6. 'a' → logprob: -14.750057220458984
    7. 'pq' → logprob: -14.875057220458984
    8. '```' → logprob: -14.875057220458984
    9. 'liq' → logprob: -15.125057220458984
    10. 'l' → logprob: -15.250057220458984

Token 325: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.19938603043556213
    2. ' P' → logprob: -2.4493861198425293
    3. 'are' → logprob: -2.5743861198425293
    4. 'P' → logprob: -4.074386119842529
    5. ' not' → logprob: -7.699386119842529
    6. ' ' → logprob: -8.449385643005371
    7. ' is' → logprob: -8.574385643005371
    8. '_are' → logprob: -9.449385643005371
    9. '   ' → logprob: -9.761885643005371
    10. ' N' → logprob: -10.261885643005371

Token 326: '_equal' (ID: 27882)
  Prédit: '_equal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_equal' → logprob: -3.1782583391759545e-05
    2. 'equal' → logprob: -10.375031471252441
    3. '_' → logprob: -15.625031471252441
    4. '_not' → logprob: -16.500032424926758
    5. '_equals' → logprob: -17.125032424926758
    6. 't' → logprob: -17.625032424926758
    7. '_t' → logprob: -17.750032424926758
    8. '_equ' → logprob: -17.750032424926758
    9. '_e' → logprob: -17.875032424926758
    10. '_EQUAL' → logprob: -18.375032424926758

Token 327: '(P' (ID: 8952)
  Prédit: '(P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.001604367163963616
    2. ' (' → logprob: -6.7516045570373535
    3. '(' → logprob: -7.7516045570373535
    4. '(Q' → logprob: -12.626604080200195
    5. '(Py' → logprob: -15.876604080200195
    6. ' ' → logprob: -16.001604080200195
    7. '(
' → logprob: -16.251604080200195
    8. '(C' → logprob: -16.876604080200195
    9. '((' → logprob: -17.001604080200195
    10. ',' → logprob: -17.001604080200195

Token 328: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006737126968801022
    2. ',Q' → logprob: -7.500673770904541
    3. ' ,' → logprob: -9.125673294067383
    4. ',
' → logprob: -11.625673294067383
    5. 'Q' → logprob: -13.875673294067383
    6. '   ' → logprob: -13.875673294067383
    7. ',P' → logprob: -14.250673294067383
    8. ',

' → logprob: -16.375673294067383
    9. ',q' → logprob: -16.750673294067383
    10. ',K' → logprob: -16.750673294067383

Token 329: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.007613136898726225
    2. ' Q' → logprob: -4.882613182067871
    3. '   ' → logprob: -13.257613182067871
    4. '(Q' → logprob: -13.382613182067871
    5. ')' → logprob: -13.632613182067871
    6. '[' → logprob: -13.757613182067871
    7. '(' → logprob: -14.757613182067871
    8. '	Q' → logprob: -14.882613182067871
    9. ' ' → logprob: -15.507613182067871
    10. '[]' → logprob: -16.132612228393555

Token 330: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3869653642177582
    2. '):
' → logprob: -1.1369653940200806
    3. ' ):' → logprob: -10.01196575164795
    4. ' ):
' → logprob: -10.88696575164795
    5. ')' → logprob: -11.13696575164795
    6. '):
' → logprob: -12.01196575164795
    7. ':' → logprob: -12.26196575164795
    8. '   ' → logprob: -13.01196575164795
    9. '):

' → logprob: -13.88696575164795
    10. ')==' → logprob: -14.13696575164795

Token 331: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005753037519752979
    2. ':
' → logprob: -5.255753040313721
    3. '):
' → logprob: -8.380752563476562
    4. 'print' → logprob: -9.130752563476562
    5. ':' → logprob: -9.380752563476562
    6. ' print' → logprob: -10.130752563476562
    7. ',' → logprob: -11.130752563476562
    8. '   ' → logprob: -11.630752563476562
    9. '():
' → logprob: -11.880752563476562
    10. '
' → logprob: -12.380752563476562

Token 332: ' ans' (ID: 3345)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0006582272471860051
    2. '   ' → logprob: -7.37565803527832
    3. ' print' → logprob: -10.62565803527832
    4. 'return' → logprob: -13.00065803527832
    5. '```' → logprob: -13.62565803527832
    6. '       ' → logprob: -13.75065803527832
    7. '0' → logprob: -14.25065803527832
    8. '1' → logprob: -14.50065803527832
    9. '
' → logprob: -14.62565803527832
    10. 'ans' (adapté à ' ans') → logprob: -15.12565803527832

Token 333: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06197631359100342
    2. '=' → logprob: -2.811976432800293
    3. '   ' → logprob: -11.936976432800293
    4. ':' → logprob: -14.561976432800293
    5. ' ' → logprob: -14.811976432800293
    6. '()' → logprob: -14.936976432800293
    7. 's' → logprob: -15.061976432800293
    8. '(' → logprob: -15.436976432800293
    9. '_' → logprob: -15.686976432800293
    10. '       ' → logprob: -16.561975479125977

Token 334: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00033534664544276893
    2. '1' → logprob: -8.125335693359375
    3. '   ' → logprob: -10.875335693359375
    4. ' ' → logprob: -11.125335693359375
    5. 'abs' → logprob: -12.250335693359375
    6. '(' → logprob: -15.375335693359375
    7. '```' → logprob: -15.750335693359375
    8. '  ' → logprob: -16.125335693359375
    9. '    ' → logprob: -16.250335693359375
    10. '
' → logprob: -17.125335693359375

Token 335: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.703443770878948e-06
    2. '1' → logprob: -11.875007629394531
    3. ' ' → logprob: -14.750007629394531
    4. 'abs' → logprob: -16.12500762939453
    5. '   ' → logprob: -16.87500762939453
    6. '```' → logprob: -17.62500762939453
    7. '(' → logprob: -18.56250762939453
    8. 'print' → logprob: -19.37500762939453
    9. '
' → logprob: -19.50000762939453
    10. '  ' → logprob: -20.00000762939453

Token 336: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006709783338010311
    2. 'else' → logprob: -7.500670909881592
    3. '       ' → logprob: -9.37567138671875
    4. ' else' → logprob: -10.37567138671875
    5. '
' → logprob: -13.62567138671875
    6. '```' → logprob: -15.37567138671875
    7. 'return' → logprob: -15.50067138671875
    8. 'import' → logprob: -16.25067138671875
    9. '	else' → logprob: -16.37567138671875
    10. '    
' → logprob: -16.75067138671875

Token 337: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0027409198228269815
    2. '       ' → logprob: -6.002740859985352
    3. 'else' → logprob: -8.252740859985352
    4. ' else' → logprob: -12.752740859985352
    5. 'return' → logprob: -13.502740859985352
    6. '
' → logprob: -15.127740859985352
    7. 'import' → logprob: -17.12774085998535
    8. '```' → logprob: -17.12774085998535
    9. ' return' → logprob: -17.37774085998535
    10. '    
' → logprob: -17.75274085998535

Token 338: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06208554655313492
    2. 'else' (adapté à ' else') → logprob: -3.0620856285095215
    3. ' else' → logprob: -4.3120856285095215
    4. '
' → logprob: -13.937085151672363
    5. '	else' → logprob: -14.812085151672363
    6. ',' → logprob: -15.937085151672363
    7. '    
' → logprob: -16.31208610534668
    8. ' ' → logprob: -16.56208610534668
    9. '  ' → logprob: -16.68708610534668
    10. '```' → logprob: -16.68708610534668

Token 339: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25275132060050964
    2. ':
' → logprob: -1.502751350402832
    3. '       ' → logprob: -7.627751350402832
    4. '   ' → logprob: -8.377751350402832
    5. ' :
' → logprob: -9.877751350402832
    6. ',' → logprob: -10.752751350402832
    7. ' :' → logprob: -11.002751350402832
    8. ':

' → logprob: -11.502751350402832
    9. ':
' → logprob: -12.627751350402832
    10. '):
' → logprob: -14.502751350402832

Token 340: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005319731775671244
    2. '   ' → logprob: -5.255319595336914
    3. '```' → logprob: -10.630319595336914
    4. ' N' → logprob: -10.755319595336914
    5. '    ' → logprob: -11.505319595336914
    6. ' PQ' → logprob: -11.755319595336914
    7. 'PQ' → logprob: -11.880319595336914
    8. '           ' → logprob: -12.880319595336914
    9. '      ' → logprob: -13.380319595336914
    10. '     ' → logprob: -13.505319595336914

Token 341: ' PQ' (ID: 77170)
  Prédit: 'li'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'li' → logprob: -0.1458939164876938
    2. 'PQ' (adapté à ' PQ') → logprob: -2.7708938121795654
    3. '   ' → logprob: -3.1458938121795654
    4. ' li' → logprob: -3.7708938121795654
    5. '       ' → logprob: -5.5208940505981445
    6. ' PQ' → logprob: -6.6458940505981445
    7. 'LI' → logprob: -7.2708940505981445
    8. 'pq' → logprob: -7.6458940505981445
    9. '           ' → logprob: -9.270894050598145
    10. ' ' → logprob: -9.270894050598145

Token 342: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12693282961845398
    2. ' =' → logprob: -2.1269328594207764
    3. '_list' → logprob: -12.376933097839355
    4. 'list' → logprob: -15.626933097839355
    5. 'List' → logprob: -16.00193214416504
    6. ',' → logprob: -16.37693214416504
    7. '_' → logprob: -16.37693214416504
    8. '[' → logprob: -16.87693214416504
    9. 's' → logprob: -17.12693214416504
    10. '=list' → logprob: -17.25193214416504

Token 343: ' construct' (ID: 12871)
  Prédit: 'construct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'construct' → logprob: -0.25468483567237854
    2. ' construct' → logprob: -1.5046848058700562
    3. ' [' → logprob: -6.629684925079346
    4. '[' → logprob: -6.879684925079346
    5. ' sort' → logprob: -8.504684448242188
    6. 'sort' → logprob: -9.129684448242188
    7. '   ' → logprob: -10.004684448242188
    8. ' create' → logprob: -11.254684448242188
    9. 'create' → logprob: -11.504684448242188
    10. ' sorted' → logprob: -11.504684448242188

Token 344: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -1.9361264946837764e-07
    2. '_q' → logprob: -15.875
    3. 'pq' → logprob: -17.625
    4. '_' → logprob: -18.375
    5. 'PQ' → logprob: -18.625
    6. '```' → logprob: -20.125
    7. '[' → logprob: -20.375
    8. '_list' → logprob: -20.5
    9. '_P' → logprob: -20.5
    10. 'p' → logprob: -21.125

Token 345: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -5.097437315271236e-05
    2. 'Q' → logprob: -10.50005054473877
    3. '_q' → logprob: -10.75005054473877
    4. 'ql' → logprob: -14.37505054473877
    5. ' q' → logprob: -15.62505054473877
    6. 'pq' → logprob: -15.62505054473877
    7. '[q' → logprob: -15.75005054473877
    8. 'qs' → logprob: -16.000051498413086
    9. '	q' → logprob: -16.250051498413086
    10. 'qrst' → logprob: -16.250051498413086

Token 346: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.006727803498506546
    2. 'list' → logprob: -5.006727695465088
    3. 'List' → logprob: -11.381728172302246
    4. 'li' → logprob: -15.006728172302246
    5. '_lists' → logprob: -15.881728172302246
    6. '(P' → logprob: -16.00672721862793
    7. '```' → logprob: -16.00672721862793
    8. '[' → logprob: -16.25672721862793
    9. ' list' → logprob: -16.38172721862793
    10. 'lst' → logprob: -17.25672721862793

Token 347: '(P' (ID: 8952)
  Prédit: '(P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.0016084164381027222
    2. '([' → logprob: -6.501608371734619
    3. '(' → logprob: -9.251608848571777
    4. ' (' → logprob: -11.876608848571777
    5. '((' → logprob: -13.126608848571777
    6. '   ' → logprob: -15.251608848571777
    7. '(p' → logprob: -15.876608848571777
    8. '```' → logprob: -15.876608848571777
    9. '(Q' → logprob: -15.876608848571777
    10. '(C' → logprob: -16.00160789489746

Token 348: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002538296685088426
    2. ',Q' → logprob: -8.375253677368164
    3. ' ,' → logprob: -10.875253677368164
    4. '(Q' → logprob: -13.000253677368164
    5. ',
' → logprob: -13.875253677368164
    6. '(' → logprob: -14.625253677368164
    7. ')' → logprob: -15.625253677368164
    8. 'Q' → logprob: -15.750253677368164
    9. '),' → logprob: -16.375253677368164
    10. '[' → logprob: -16.500253677368164

Token 349: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.03804229199886322
    2. ' Q' → logprob: -3.2880423069000244
    3. '   ' → logprob: -15.038042068481445
    4. '	Q' → logprob: -15.288042068481445
    5. ' ' → logprob: -15.788042068481445
    6. ',Q' → logprob: -16.538042068481445
    7. '<Q' → logprob: -16.663042068481445
    8. '(Q' → logprob: -17.288042068481445
    9. ')' → logprob: -17.288042068481445
    10. '       ' → logprob: -17.288042068481445

Token 350: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0067225913517177105
    2. ')
' → logprob: -5.006722450256348
    3. '   ' → logprob: -12.631722450256348
    4. ')
' → logprob: -12.881722450256348
    5. ' )' → logprob: -14.506722450256348
    6. ')

' → logprob: -14.756722450256348
    7. ')`' → logprob: -16.006723403930664
    8. ')\
' → logprob: -16.756723403930664
    9. ').' → logprob: -17.256723403930664
    10. ')`
' → logprob: -17.256723403930664

Token 351: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4196881651878357
    2. '       ' → logprob: -1.1696882247924805
    3. 'li' → logprob: -3.5446882247924805
    4. ' li' → logprob: -6.0446882247924805
    5. 'Li' → logprob: -7.7946882247924805
    6. '
' → logprob: -8.91968822479248
    7. '    
' → logprob: -9.66968822479248
    8. 'LI' → logprob: -10.04468822479248
    9. '    ' → logprob: -10.04468822479248
    10. '           ' → logprob: -10.16968822479248

Token 352: ' PQ' (ID: 77170)
  Prédit: 'li'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'li' → logprob: -0.0001158211671281606
    2. ' li' → logprob: -10.000115394592285
    3. '       ' → logprob: -10.875115394592285
    4. '   ' → logprob: -10.875115394592285
    5. 'sorted' → logprob: -11.500115394592285
    6. 'LI' → logprob: -12.250115394592285
    7. 'per' → logprob: -12.375115394592285
    8. 'l' → logprob: -12.875115394592285
    9. 'Li' → logprob: -13.125115394592285
    10. 'perm' → logprob: -13.125115394592285

Token 353: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12741276621818542
    2. ' =' → logprob: -2.127412796020508
    3. '_sorted' → logprob: -7.752412796020508
    4. 'sorted' → logprob: -9.877412796020508
    5. '.sort' → logprob: -13.502412796020508
    6. '_' → logprob: -14.252412796020508
    7. ' sorted' → logprob: -14.752412796020508
    8. 'sort' → logprob: -15.127412796020508
    9. 's' → logprob: -15.502412796020508
    10. 'Sorted' → logprob: -15.752412796020508

Token 354: ' sort' (ID: 4506)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.001326433615759015
    2. ' sort' → logprob: -6.626326560974121
    3. '   ' → logprob: -15.251326560974121
    4. 'sorted' → logprob: -15.626326560974121
    5. '(sort' → logprob: -16.626325607299805
    6. '	sort' → logprob: -16.876325607299805
    7. ' ' → logprob: -17.751325607299805
    8. '
' → logprob: -19.001325607299805
    9. 'list' → logprob: -19.251325607299805
    10. '[' → logprob: -19.626325607299805

Token 355: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.0012648787815123796
    2. '(P' → logprob: -6.751265048980713
    3. '_P' → logprob: -10.001264572143555
    4. 'PQ' → logprob: -10.626264572143555
    5. '_' → logprob: -11.751264572143555
    6. 'p' → logprob: -11.751264572143555
    7. 'P' → logprob: -12.751264572143555
    8. 'pq' → logprob: -13.126264572143555
    9. '_q' → logprob: -13.501264572143555
    10. '(' → logprob: -13.751264572143555

Token 356: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.34855911135673523
    2. 'Q' → logprob: -1.2235591411590576
    3. '(P' → logprob: -9.723559379577637
    4. '(Q' → logprob: -10.473559379577637
    5. 'PQ' → logprob: -11.223559379577637
    6. 'p' → logprob: -12.848559379577637
    7. '_q' → logprob: -13.348559379577637
    8. 'pq' → logprob: -13.473559379577637
    9. '
' → logprob: -14.223559379577637
    10. ' Q' → logprob: -14.473559379577637

Token 357: '(P' (ID: 8952)
  Prédit: '(P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.875000953674316
    3. 'P' → logprob: -15.500000953674316
    4. '(Q' → logprob: -16.875
    5. '((' → logprob: -17.0
    6. 'PQ' → logprob: -17.25
    7. '(
' → logprob: -17.75
    8. '```' → logprob: -18.0
    9. ' (' → logprob: -18.625
    10. '([' → logprob: -18.75

Token 358: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.0019633667543530464
    2. ')' → logprob: -7.001963138580322
    3. '(Q' → logprob: -7.001963138580322
    4. 'PQ' → logprob: -9.62696361541748
    5. '(' → logprob: -10.25196361541748
    6. '(P' → logprob: -11.00196361541748
    7. '[' → logprob: -11.87696361541748
    8. ')
' → logprob: -12.25196361541748
    9. '```' → logprob: -13.37696361541748
    10. ' Q' → logprob: -13.87696361541748

Token 359: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47430747747421265
    2. ')
' → logprob: -0.9743074774742126
    3. '   ' → logprob: -8.8493070602417
    4. '       ' → logprob: -10.4743070602417
    5. ')

' → logprob: -10.4743070602417
    6. ')
' → logprob: -10.9743070602417
    7. '(P' → logprob: -12.2243070602417
    8. 'def' → logprob: -12.4743070602417
    9. '(
' → logprob: -14.4743070602417
    10. '
' → logprob: -14.4743070602417

Token 360: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002141458389814943
    2. '	' → logprob: -9.750214576721191
    3. '   ' → logprob: -9.750214576721191
    4. 'li' → logprob: -10.125214576721191
    5. '
' → logprob: -10.625214576721191
    6. '        
' → logprob: -11.000214576721191
    7. '```' → logprob: -12.625214576721191
    8. ' li' → logprob: -13.250214576721191
    9. '
' → logprob: -13.500214576721191
    10. '    
' → logprob: -13.500214576721191

Token 361: ' li' (ID: 3476)
  Prédit: 'li'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'li' (adapté à ' li') → logprob: -0.001550332992337644
    2. ' li' → logprob: -7.126550197601318
    3. '       ' → logprob: -7.626550197601318
    4. '   ' → logprob: -8.501550674438477
    5. 'per' → logprob: -10.501550674438477
    6. 'Li' → logprob: -12.126550674438477
    7. 'LI' → logprob: -12.376550674438477
    8. 'perm' → logprob: -12.376550674438477
    9. 'liq' → logprob: -13.126550674438477
    10. 'l' → logprob: -13.376550674438477

Token 362: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0036003058776259422
    2. '=' → logprob: -5.628600120544434
    3. ' ' → logprob: -15.503600120544434
    4. ',' → logprob: -17.87860107421875
    5. '=create' → logprob: -17.87860107421875
    6. '  ' → logprob: -18.87860107421875
    7. ')' → logprob: -18.87860107421875
    8. '(' → logprob: -19.12860107421875
    9. 's' → logprob: -19.12860107421875
    10. '   ' → logprob: -19.25360107421875

Token 363: ' create' (ID: 2501)
  Prédit: 'create'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'create' → logprob: -0.1269317865371704
    2. ' create' → logprob: -2.126931667327881
    3. '(create' → logprob: -12.876932144165039
    4. '	create' → logprob: -15.126932144165039
    5. '.create' → logprob: -15.251932144165039
    6. '=create' → logprob: -15.751932144165039
    7. '   ' → logprob: -15.876932144165039
    8. 'list' → logprob: -16.00193214416504
    9. '_create' → logprob: -16.62693214416504
    10. '       ' → logprob: -17.00193214416504

Token 364: '_li' (ID: 110647)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0059523796662688255
    2. 'li' → logprob: -5.63095235824585
    3. '_li' → logprob: -6.75595235824585
    4. ' (' → logprob: -6.88095235824585
    5. '(' → logprob: -9.005952835083008
    6. ' li' → logprob: -11.755952835083008
    7. '_list' → logprob: -12.130952835083008
    8. ' ' → logprob: -12.255952835083008
    9. 'Li' → logprob: -12.505952835083008
    10. '_' → logprob: -13.130952835083008

Token 365: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -7.107425062713446e-06
    2. '(' → logprob: -12.125006675720215
    3. ' (' → logprob: -13.875006675720215
    4. 'N' → logprob: -14.750006675720215
    5. ',N' → logprob: -16.00000762939453
    6. ',' → logprob: -16.62500762939453
    7. '	N' → logprob: -17.00000762939453
    8. '(
' → logprob: -17.12500762939453
    9. '   ' → logprob: -17.50000762939453
    10. '
' → logprob: -17.75000762939453

Token 366: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01160698663443327
    2. ')
' → logprob: -4.5116071701049805
    3. ',' → logprob: -7.6366071701049805
    4. '   ' → logprob: -9.63660717010498
    5. ')
' → logprob: -12.51160717010498
    6. ')

' → logprob: -13.63660717010498
    7. '       ' → logprob: -13.63660717010498
    8. ' )' → logprob: -13.76160717010498
    9. ',
' → logprob: -13.88660717010498
    10. ',N' → logprob: -14.01160717010498

Token 367: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002890944480895996
    2. 'per' → logprob: -6.1278910636901855
    3. ' perms' → logprob: -7.8778910636901855
    4. '   ' → logprob: -8.502890586853027
    5. '	per' → logprob: -9.127890586853027
    6. 'perm' → logprob: -12.502890586853027
    7. ' ' → logprob: -13.377890586853027
    8. '```' → logprob: -13.502890586853027
    9. '(per' → logprob: -13.752890586853027
    10. '_per' → logprob: -13.752890586853027

Token 368: ' perms' (ID: 189933)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.000283265660982579
    2. ' perms' → logprob: -8.375283241271973
    3. '       ' → logprob: -10.000283241271973
    4. 'perm' → logprob: -12.625283241271973
    5. '   ' → logprob: -13.375283241271973
    6. '
' → logprob: -13.625283241271973
    7. '	per' → logprob: -14.750283241271973
    8. '```' → logprob: -15.625283241271973
    9. 'for' → logprob: -15.750283241271973
    10. 'from' → logprob: -16.87528419494629

Token 369: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048587825149297714
    2. '=' → logprob: -3.0485877990722656
    3. 's' → logprob: -14.798587799072266
    4. '(' → logprob: -16.673587799072266
    5. '   ' → logprob: -17.173587799072266
    6. ',' → logprob: -18.048587799072266
    7. ' ' → logprob: -18.423587799072266
    8. ' =)' → logprob: -19.298587799072266
    9. '＝' → logprob: -19.423587799072266
    10. '  ' → logprob: -19.423587799072266

Token 370: ' generate' (ID: 10419)
  Prédit: 'generate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'generate' → logprob: -0.04882387816905975
    2. ' generate' → logprob: -3.048823833465576
    3. 'it' → logprob: -8.548824310302734
    4. ' itertools' → logprob: -10.298824310302734
    5. '   ' → logprob: -12.298824310302734
    6. '(generate' → logprob: -13.298824310302734
    7. 'list' → logprob: -14.298824310302734
    8. 'iter' → logprob: -14.548824310302734
    9. '.generate' → logprob: -15.548824310302734
    10. ' ' → logprob: -15.673824310302734

Token 371: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -0.0001305950863752514
    2. '_p' → logprob: -9.125130653381348
    3. '(li' → logprob: -11.000130653381348
    4. '(per' → logprob: -12.750130653381348
    5. 'per' → logprob: -13.375130653381348
    6. '_li' → logprob: -15.500130653381348
    7. '	per' → logprob: -17.00012969970703
    8. '_perm' → logprob: -17.12512969970703
    9. '_permissions' → logprob: -17.50012969970703
    10. 'li' → logprob: -18.00012969970703

Token 372: 'mut' (ID: 10522)
  Prédit: 'mut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mut' → logprob: -0.0004948906716890633
    2. 'utations' → logprob: -7.875494956970215
    3. 'm' → logprob: -9.500494956970215
    4. 'ut' → logprob: -10.500494956970215
    5. 'mu' → logprob: -12.125494956970215
    6. '(' → logprob: -13.000494956970215
    7. 'um' → logprob: -13.250494956970215
    8. 'li' → logprob: -14.375494956970215
    9. 't' → logprob: -14.625494956970215
    10. '(mut' → logprob: -14.750494956970215

Token 373: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -9.782141569303349e-05
    2. 'utations' → logprob: -9.25009822845459
    3. 'li' → logprob: -14.50009822845459
    4. 't' → logprob: -14.75009822845459
    5. '(' → logprob: -15.75009822845459
    6. 's' → logprob: -15.87509822845459
    7. 'utions' → logprob: -16.250097274780273
    8. 'lations' → logprob: -16.375097274780273
    9. 'ATIONS' → logprob: -16.875097274780273
    10. '(li' → logprob: -17.000097274780273

Token 374: '(li' (ID: 111234)
  Prédit: '(li'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(li' → logprob: -1.7432603272027336e-06
    2. '(' → logprob: -13.875001907348633
    3. '<li' → logprob: -14.500001907348633
    4. '(lo' → logprob: -16.500001907348633
    5. ' (' → logprob: -16.875001907348633
    6. '(mi' → logprob: -16.875001907348633
    7. 'li' → logprob: -18.000001907348633
    8. '/li' → logprob: -18.250001907348633
    9. ' li' → logprob: -18.500001907348633
    10. '(le' → logprob: -18.625001907348633

Token 375: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00032247265335172415
    2. ',N' → logprob: -8.250322341918945
    3. ' ,' → logprob: -9.750322341918945
    4. '(N' → logprob: -13.875322341918945
    5. ',
' → logprob: -14.250322341918945
    6. ')' → logprob: -14.250322341918945
    7. ',n' → logprob: -15.625322341918945
    8. '(),' → logprob: -16.250322341918945
    9. '(' → logprob: -16.500322341918945
    10. '),' → logprob: -16.625322341918945

Token 376: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -9.615255839889869e-05
    2. ' N' → logprob: -9.250096321105957
    3. '   ' → logprob: -18.00009536743164
    4. 'len' → logprob: -20.25009536743164
    5. '	N' → logprob: -20.37509536743164
    6. ')' → logprob: -21.00009536743164
    7. '       ' → logprob: -21.37509536743164
    8. '
' → logprob: -21.87509536743164
    9. ' ' → logprob: -21.87509536743164
    10. '    ' → logprob: -22.50009536743164

Token 377: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006722826045006514
    2. ')
' → logprob: -5.006722927093506
    3. ')

' → logprob: -12.256722450256348
    4. '   ' → logprob: -13.506722450256348
    5. ' )' → logprob: -14.381722450256348
    6. ')
' → logprob: -14.631722450256348
    7. '))' → logprob: -16.381723403930664
    8. '       ' → logprob: -16.631723403930664
    9. ' ' → logprob: -17.006723403930664
    10. ')`' → logprob: -17.756723403930664

Token 378: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6075138449668884
    2. 'a' → logprob: -1.6075139045715332
    3. ' a' → logprob: -1.9825139045715332
    4. '   ' → logprob: -2.232513904571533
    5. ' positions' → logprob: -5.107513904571533
    6. 'positions' → logprob: -5.732513904571533
    7. '```' → logprob: -8.482513427734375
    8. '	a' → logprob: -8.857513427734375
    9. 'pos' → logprob: -10.357513427734375
    10. ' ' → logprob: -10.607513427734375

Token 379: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.08312005549669266
    2. 'positions' → logprob: -2.583120107650757
    3. 'pos' → logprob: -5.708119869232178
    4. '       ' → logprob: -7.958119869232178
    5. 'ans' → logprob: -8.208120346069336
    6. '   ' → logprob: -8.833120346069336
    7. ' positions' → logprob: -10.083120346069336
    8. ' a' → logprob: -10.583120346069336
    9. 'result' → logprob: -10.833120346069336
    10. 'position' → logprob: -11.208120346069336

Token 380: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029750604182481766
    2. '=' → logprob: -3.5297505855560303
    3. ' ' → logprob: -16.90475082397461
    4. '[' → logprob: -17.65475082397461
    5. '=[]' → logprob: -17.65475082397461
    6. ' +=' → logprob: -17.77975082397461
    7. ',' → logprob: -17.77975082397461
    8. 's' → logprob: -18.77975082397461
    9. ' =
' → logprob: -19.02975082397461
    10. ' =[' → logprob: -19.15475082397461

Token 381: ' []
' (ID: 8911)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.007679026573896408
    2. ' find' → logprob: -4.882678985595703
    3. '[]' → logprob: -9.757678985595703
    4. '[]
' → logprob: -11.257678985595703
    5. '(find' → logprob: -14.132678985595703
    6. ' []' → logprob: -14.257678985595703
    7. '[]

' → logprob: -15.507678985595703
    8. 'list' → logprob: -15.632678985595703
    9. '	find' → logprob: -15.882678985595703
    10. '[' → logprob: -16.132678985595703

Token 382: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31464049220085144
    2. '       ' → logprob: -1.6896405220031738
    3. 'a' → logprob: -3.439640522003174
    4. 'for' → logprob: -3.439640522003174
    5. ' for' → logprob: -3.939640522003174
    6. ' a' → logprob: -6.564640522003174
    7. '<|end|>' → logprob: -9.314640045166016
    8. '           ' → logprob: -9.814640045166016
    9. '```' → logprob: -10.189640045166016
    10. ' ' → logprob: -10.314640045166016

Token 383: ' i' (ID: 575)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3508163392543793
    2. 'for' → logprob: -1.2258163690567017
    3. 'positions' → logprob: -6.850816249847412
    4. '   ' → logprob: -7.350816249847412
    5. '       ' → logprob: -8.10081672668457
    6. 'find' → logprob: -9.35081672668457
    7. ' for' → logprob: -9.47581672668457
    8. 'def' → logprob: -9.72581672668457
    9. '```' → logprob: -9.85081672668457
    10. 'found' → logprob: -10.35081672668457

Token 384: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931552886962891
    2. ' =' → logprob: -0.6931552886962891
    3. ' ' → logprob: -12.693155288696289
    4. ' +=' → logprob: -12.818155288696289
    5. '<|end|>' → logprob: -14.693155288696289
    6. ' =
' → logprob: -14.943155288696289
    7. '+=' → logprob: -14.943155288696289
    8. '0' → logprob: -15.318155288696289
    9. '==' → logprob: -15.568155288696289
    10. '   ' → logprob: -15.943155288696289

Token 385: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002036595979006961
    2. ' ' → logprob: -8.500204086303711
    3. '   ' → logprob: -16.12520408630371
    4. '<|end|>' → logprob: -18.12520408630371
    5. '  ' → logprob: -18.37520408630371
    6. '۰' → logprob: -18.50020408630371
    7. '```' → logprob: -18.62520408630371
    8. '00' → logprob: -18.81270408630371
    9. '1' → logprob: -19.37520408630371
    10. '000' → logprob: -19.37520408630371

Token 386: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1875571544806007e-05
    2. ' ' → logprob: -11.375011444091797
    3. '-' → logprob: -15.250011444091797
    4. '1' → logprob: -17.250011444091797
    5. '```' → logprob: -17.687511444091797
    6. '۰' → logprob: -18.062511444091797
    7. 'a' → logprob: -18.125011444091797
    8. 'i' → logprob: -18.500011444091797
    9. '2' → logprob: -18.687511444091797
    10. '   ' → logprob: -18.875011444091797

Token 387: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.032158154994249344
    2. '       ' → logprob: -4.032158374786377
    3. '<|end|>' → logprob: -5.407158374786377
    4. '	for' → logprob: -6.157158374786377
    5. '   ' → logprob: -6.407158374786377
    6. ' for' → logprob: -6.407158374786377
    7. '  
' → logprob: -6.657158374786377
    8. '        
' → logprob: -7.282158374786377
    9. 'for' → logprob: -7.782158374786377
    10. ' 
' → logprob: -8.157157897949219

Token 388: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02243683859705925
    2. '   ' → logprob: -4.397436618804932
    3. 'for' → logprob: -5.147436618804932
    4. 'j' → logprob: -5.772436618804932
    5. ' for' → logprob: -7.522436618804932
    6. ' j' → logprob: -8.89743709564209
    7. '	j' → logprob: -9.39743709564209
    8. '	for' → logprob: -10.39743709564209
    9. '        
' → logprob: -10.52243709564209
    10. '
' → logprob: -10.52243709564209

Token 389: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.7100035548210144
    2. 'for' → logprob: -0.9600035548210144
    3. '       ' → logprob: -2.085003614425659
    4. '   ' → logprob: -7.83500337600708
    5. 'a' → logprob: -8.335003852844238
    6. ' for' → logprob: -8.460003852844238
    7. 'while' → logprob: -9.210003852844238
    8. 'break' → logprob: -9.835003852844238
    9. '```' → logprob: -9.960003852844238
    10. 'pos' → logprob: -10.585003852844238

Token 390: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687199354171753
    2. '=' → logprob: -1.1368720531463623
    3. '0' → logprob: -14.886872291564941
    4. ',' → logprob: -15.386872291564941
    5. ' ' → logprob: -15.761872291564941
    6. ' +=' → logprob: -16.261871337890625
    7. '=
' → logprob: -16.386871337890625
    8. '+=' → logprob: -16.386871337890625
    9. ' =
' → logprob: -16.886871337890625
    10. '   ' → logprob: -17.386871337890625

Token 391: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02975604310631752
    2. ' ' → logprob: -3.5297560691833496
    3. '1' → logprob: -12.904755592346191
    4. 'increment' → logprob: -13.279755592346191
    5. '   ' → logprob: -14.654755592346191
    6. '=' → logprob: -15.592255592346191
    7. '  ' → logprob: -15.842255592346191
    8. ' increment' → logprob: -16.092256546020508
    9. ' -' → logprob: -16.592256546020508
    10. ' =' → logprob: -16.904756546020508

Token 392: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001438266917830333
    2. ' ' → logprob: -9.000144004821777
    3. '1' → logprob: -10.875144004821777
    4. 'increment' → logprob: -14.437644004821777
    5. '=' → logprob: -15.125144004821777
    6. '```' → logprob: -15.875144004821777
    7. 'int' → logprob: -16.68764305114746
    8. '-' → logprob: -16.81264305114746
    9. 'o' → logprob: -17.00014305114746
    10. '   ' → logprob: -17.12514305114746

Token 393: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00044353955308906734
    2. ' for' → logprob: -8.375443458557129
    3. 'for' → logprob: -9.500443458557129
    4. '
' → logprob: -9.750443458557129
    5. '   ' → logprob: -9.875443458557129
    6. '        
' → logprob: -11.500443458557129
    7. ' ' → logprob: -11.750443458557129
    8. '  
' → logprob: -13.125443458557129
    9. '	for' → logprob: -14.000443458557129
    10. 'a' → logprob: -14.125443458557129

Token 394: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.035773541778326035
    2. 'for' → logprob: -3.910773515701294
    3. ' for' → logprob: -4.285773754119873
    4. '   ' → logprob: -6.660773754119873
    5. '        
' → logprob: -11.285773277282715
    6. '<|end|>' → logprob: -11.410773277282715
    7. '```' → logprob: -11.535773277282715
    8. ',' → logprob: -11.785773277282715
    9. '
' → logprob: -11.910773277282715
    10. ' ' → logprob: -12.410773277282715

Token 395: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0021010141354054213
    2. '       ' → logprob: -6.752100944519043
    3. ' for' → logprob: -7.752100944519043
    4. 'break' → logprob: -7.877100944519043
    5. 'while' → logprob: -9.877100944519043
    6. '   ' → logprob: -10.252100944519043
    7. 'a' → logprob: -10.377100944519043
    8. '```' → logprob: -14.252100944519043
    9. 'per' → logprob: -14.377100944519043
    10. 'import' → logprob: -14.877100944519043

Token 396: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.02054912969470024
    2. ' v' → logprob: -3.8955490589141846
    3. 'perm' → logprob: -12.520548820495605
    4. 'p' → logprob: -13.395548820495605
    5. '   ' → logprob: -14.145548820495605
    6. '	v' → logprob: -14.645548820495605
    7. ' perm' → logprob: -15.020548820495605
    8. ' ' → logprob: -15.770548820495605
    9. 'per' → logprob: -15.895548820495605
    10. '_v' → logprob: -15.895548820495605

Token 397: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016037534922361374
    2. 'in' → logprob: -4.141037464141846
    3. ' ' → logprob: -14.016037940979004
    4. '	in' → logprob: -14.141037940979004
    5. '   ' → logprob: -14.641037940979004
    6. ',' → logprob: -15.016037940979004
    7. 's' → logprob: -15.391037940979004
    8. '        ' → logprob: -15.391037940979004
    9. '    ' → logprob: -15.641037940979004
    10. '       ' → logprob: -16.391036987304688

Token 398: ' perms' (ID: 189933)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.20142608880996704
    2. ' perms' → logprob: -1.7014260292053223
    3. 'perm' → logprob: -12.57642650604248
    4. '   ' → logprob: -13.07642650604248
    5. '	per' → logprob: -13.45142650604248
    6. ' permutations' → logprob: -13.70142650604248
    7. '_per' → logprob: -14.07642650604248
    8. '(per' → logprob: -14.07642650604248
    9. ' ' → logprob: -14.20142650604248
    10. 'generate' → logprob: -14.20142650604248

Token 399: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11374601721763611
    2. ':
' → logprob: -2.238745927810669
    3. '       ' → logprob: -7.863746166229248
    4. '=' → logprob: -8.36374568939209
    5. '           ' → logprob: -8.86374568939209
    6. ' =' → logprob: -9.98874568939209
    7. '):
' → logprob: -10.48874568939209
    8. ',' → logprob: -10.73874568939209
    9. '<|end|>' → logprob: -11.36374568939209
    10. '   ' → logprob: -11.48874568939209

Token 400: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22950659692287445
    2. '	       ' → logprob: -2.854506492614746
    3. '       ' → logprob: -2.979506492614746
    4. '<|end|>' → logprob: -3.604506492614746
    5. 'j' → logprob: -4.479506492614746
    6. '		' → logprob: -4.729506492614746
    7. '
' → logprob: -4.854506492614746
    8. '<|end|>' → logprob: -4.854506492614746
    9. '   ' → logprob: -5.104506492614746
    10. '        ' → logprob: -5.229506492614746

Token 401: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.1602245420217514
    2. '       ' → logprob: -2.160224437713623
    3. ' j' → logprob: -4.160224437713623
    4. '   ' → logprob: -4.535224437713623
    5. '               ' → logprob: -5.285224437713623
    6. '           ' → logprob: -7.035224437713623
    7. '	j' → logprob: -7.910224437713623
    8. '
' → logprob: -10.535224914550781
    9. ' ' → logprob: -11.285224914550781
    10. '	       ' → logprob: -11.535224914550781

Token 402: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25691139698028564
    2. ' =' → logprob: -1.5069113969802856
    3. '+=' → logprob: -5.506911277770996
    4. ' +=' → logprob: -7.006911277770996
    5. '=j' → logprob: -12.256911277770996
    6. '.=' → logprob: -15.131911277770996
    7. ' ' → logprob: -15.256911277770996
    8. '=
' → logprob: -15.756911277770996
    9. '=i' → logprob: -16.881912231445312
    10. '＝' → logprob: -17.006912231445312

Token 403: ' increment' (ID: 24032)
  Prédit: 'increment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'increment' → logprob: -0.4550371468067169
    2. 'j' → logprob: -1.0800371170043945
    3. ' increment' → logprob: -3.8300371170043945
    4. ' j' → logprob: -5.4550371170043945
    5. 'increments' → logprob: -12.705037117004395
    6. 'Increment' → logprob: -13.705037117004395
    7. 'inc' → logprob: -13.955037117004395
    8. ' increments' → logprob: -14.330037117004395
    9. '	j' → logprob: -14.330037117004395
    10. 'in' → logprob: -14.455037117004395

Token 404: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -1.3425219549390022e-05
    2. '(' → logprob: -11.75001335144043
    3. 'j' → logprob: -12.12501335144043
    4. ' (' → logprob: -18.12501335144043
    5. '(
' → logprob: -20.62501335144043
    6. '	j' → logprob: -20.87501335144043
    7. '[j' → logprob: -21.00001335144043
    8. '(v' → logprob: -21.12501335144043
    9. '(J' → logprob: -22.12501335144043
    10. '```' → logprob: -22.12501335144043

Token 405: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.021064257249236107
    2. ')' → logprob: -4.021064281463623
    3. '           ' → logprob: -5.896064281463623
    4. ')
' → logprob: -8.771063804626465
    5. '       ' → logprob: -13.146063804626465
    6. ')

' → logprob: -13.896063804626465
    7. '               ' → logprob: -14.646063804626465
    8. ' )
' → logprob: -14.771063804626465
    9. '):
' → logprob: -15.396063804626465
    10. '```' → logprob: -15.771063804626465

Token 406: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5765472650527954
    2. 'if' → logprob: -0.8265472650527954
    3. ' if' → logprob: -7.701547145843506
    4. '   ' → logprob: -9.576547622680664
    5. '       ' → logprob: -9.701547622680664
    6. '```' → logprob: -11.076547622680664
    7. ' ' → logprob: -12.451547622680664
    8. '               ' → logprob: -12.451547622680664
    9. 'for' → logprob: -14.201547622680664
    10. '	if' → logprob: -14.826547622680664

Token 407: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0016870817635208368
    2. '           ' → logprob: -6.501687049865723
    3. ' if' → logprob: -8.626687049865723
    4. 'for' → logprob: -12.876687049865723
    5. '               ' → logprob: -13.376687049865723
    6. '       ' → logprob: -14.376687049865723
    7. '   ' → logprob: -14.751687049865723
    8. ' ' → logprob: -15.751687049865723
    9. '```' → logprob: -15.876687049865723
    10. '
' → logprob: -16.87668800354004

Token 408: ' are' (ID: 553)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.4240187108516693
    2. 'are' → logprob: -1.1740187406539917
    3. ' v' → logprob: -3.924018621444702
    4. ' are' → logprob: -4.799018859863281
    5. 'PQ' → logprob: -4.924018859863281
    6. ' PQ' → logprob: -7.299018859863281
    7. 'a' → logprob: -9.299018859863281
    8. '(v' → logprob: -9.361518859863281
    9. 'P' → logprob: -10.049018859863281
    10. '   ' → logprob: -10.236518859863281

Token 409: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.0004039785999339074
    2. '(P' → logprob: -8.000404357910156
    3. 'tu' → logprob: -10.000404357910156
    4. 't' → logprob: -12.625404357910156
    5. 's' → logprob: -12.750404357910156
    6. '(v' → logprob: -12.750404357910156
    7. 'v' → logprob: -12.875404357910156
    8. '(' → logprob: -13.000404357910156
    9. '_equal' → logprob: -13.375404357910156
    10. 'a' → logprob: -13.625404357910156

Token 410: 'uples' (ID: 165982)
  Prédit: 'uples'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uples' → logprob: -0.0011428380385041237
    2. 'ples' → logprob: -6.876142978668213
    3. 'uple' → logprob: -9.751142501831055
    4. 'up' → logprob: -10.876142501831055
    5. 'tu' → logprob: -11.376142501831055
    6. 'u' → logprob: -11.751142501831055
    7. '_t' → logprob: -12.876142501831055
    8. 'ules' → logprob: -13.001142501831055
    9. 'ups' → logprob: -13.251142501831055
    10. 'iples' → logprob: -13.376142501831055

Token 411: '_equal' (ID: 27882)
  Prédit: '_equal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_equal' → logprob: -0.0001872094871941954
    2. 'equal' → logprob: -8.625186920166016
    3. '(P' → logprob: -12.000186920166016
    4. '_equals' → logprob: -14.625186920166016
    5. 'Equal' → logprob: -15.125186920166016
    6. '
' → logprob: -15.375186920166016
    7. ' equal' → logprob: -16.000186920166016
    8. '_EQUAL' → logprob: -16.750186920166016
    9. ')' → logprob: -16.750186920166016
    10. '(equal' → logprob: -17.125186920166016

Token 412: '(P' (ID: 8952)
  Prédit: '(P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -1.3544423381972592e-05
    2. '(' → logprob: -11.87501335144043
    3. '(Q' → logprob: -12.12501335144043
    4. 'P' → logprob: -14.50001335144043
    5. 'PQ' → logprob: -15.25001335144043
    6. '(v' → logprob: -16.12501335144043
    7. '(Py' → logprob: -16.37501335144043
    8. 'v' → logprob: -17.37501335144043
    9. '   ' → logprob: -17.62501335144043
    10. '(p' → logprob: -17.75001335144043

Token 413: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.0005020392127335072
    2. '(Q' → logprob: -8.37550163269043
    3. '[' → logprob: -8.50050163269043
    4. '(P' → logprob: -10.50050163269043
    5. ' Q' → logprob: -11.62550163269043
    6. ')' → logprob: -12.37550163269043
    7. '[(' → logprob: -12.62550163269043
    8. '[i' → logprob: -12.62550163269043
    9. '[](' → logprob: -12.62550163269043
    10. '(' → logprob: -13.00050163269043

Token 414: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.080963092041202e-06
    2. '[' → logprob: -12.250004768371582
    3. '[j' → logprob: -15.625004768371582
    4. '   ' → logprob: -16.7500057220459
    5. '[a' → logprob: -18.5000057220459
    6. '```' → logprob: -18.6250057220459
    7. '[
' → logprob: -19.0000057220459
    8. ' ' → logprob: -19.1250057220459
    9. ' [' → logprob: -19.3750057220459
    10. '[u' → logprob: -20.1250057220459

Token 415: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02263009361922741
    2. ',v' → logprob: -4.522630214691162
    3. '],' → logprob: -4.522630214691162
    4. ' ,' → logprob: -7.647630214691162
    5. '),' → logprob: -9.647629737854004
    6. ',j' → logprob: -10.397629737854004
    7. '   ' → logprob: -11.522629737854004
    8. '           ' → logprob: -11.647629737854004
    9. '```' → logprob: -11.772629737854004
    10. '`,' → logprob: -12.147629737854004

Token 416: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.2519325315952301
    2. ' v' → logprob: -1.5019325017929077
    3. '	v' → logprob: -13.626932144165039
    4. ')v' → logprob: -14.001932144165039
    5. '(v' → logprob: -14.626932144165039
    6. '[v' → logprob: -15.501932144165039
    7. ',v' → logprob: -16.00193214416504
    8. '<v' → logprob: -16.00193214416504
    9. ')' → logprob: -16.37693214416504
    10. '   ' → logprob: -16.50193214416504

Token 417: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.575966477394104
    2. '):' → logprob: -0.825966477394104
    3. '):
' → logprob: -11.575966835021973
    4. ':' → logprob: -11.700966835021973
    5. '):

' → logprob: -11.950966835021973
    6. '       ' → logprob: -13.825966835021973
    7. ':
' → logprob: -14.325966835021973
    8. ')' → logprob: -14.825966835021973
    9. '           ' → logprob: -15.200966835021973
    10. '=' → logprob: -15.575966835021973

Token 418: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.29872825741767883
    2. 'a' → logprob: -1.4237282276153564
    3. ' a' → logprob: -4.1737284660339355
    4. '
' → logprob: -6.9237284660339355
    5. '           ' → logprob: -7.0487284660339355
    6. '                
' → logprob: -10.173727989196777
    7. '```' → logprob: -10.423727989196777
    8. '              ' → logprob: -10.798727989196777
    9. '   ' → logprob: -10.923727989196777
    10. ',' → logprob: -11.423727989196777

Token 419: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.0317893847823143
    2. ' a' → logprob: -3.5317893028259277
    3. '   ' → logprob: -6.406789302825928
    4. '           ' → logprob: -8.156789779663086
    5. '               ' → logprob: -9.406789779663086
    6. '       ' → logprob: -11.781789779663086
    7. '                   ' → logprob: -12.531789779663086
    8. ' ' → logprob: -12.781789779663086
    9. 'i' → logprob: -13.781789779663086
    10. '```' → logprob: -14.031789779663086

Token 420: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16023194789886475
    2. ' =' → logprob: -1.9102319478988647
    3. '.append' → logprob: -11.785231590270996
    4. '   ' → logprob: -16.660232543945312
    5. 'append' → logprob: -17.410232543945312
    6. '.' → logprob: -18.410232543945312
    7. '.=' → logprob: -18.785232543945312
    8. '＝' → logprob: -18.910232543945312
    9. ':' → logprob: -19.035232543945312
    10. ' ' → logprob: -19.285232543945312

Token 421: ' append' (ID: 17147)
  Prédit: 'append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.0019286326132714748
    2. ' append' → logprob: -6.251928806304932
    3. 'a' → logprob: -18.001928329467773
    4. '	append' → logprob: -18.501928329467773
    5. '.append' → logprob: -18.626928329467773
    6. 'Append' → logprob: -20.001928329467773
    7. '   ' → logprob: -21.501928329467773
    8. '_append' → logprob: -22.251928329467773
    9. 'increment' → logprob: -22.251928329467773
    10. 'appen' → logprob: -23.126928329467773

Token 422: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -4.4849443838757e-06
    2. 'to' → logprob: -12.875004768371582
    3. '(a' → logprob: -13.500004768371582
    4. 'a' → logprob: -15.125004768371582
    5. 'To' → logprob: -15.250004768371582
    6. ' to' → logprob: -17.875003814697266
    7. 'tolist' → logprob: -18.250003814697266
    8. '```' → logprob: -18.250003814697266
    9. 'toa' → logprob: -19.625003814697266
    10. '-to' → logprob: -19.750003814697266

Token 423: '_list' (ID: 4162)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.023246755823493004
    2. '_list' → logprob: -3.7732467651367188
    3. 'append' → logprob: -14.773246765136719
    4. 'a' → logprob: -14.773246765136719
    5. 'List' → logprob: -15.023246765136719
    6. 'li' → logprob: -16.64824676513672
    7. 'tolist' → logprob: -17.39824676513672
    8. 'ist' → logprob: -17.64824676513672
    9. ' list' → logprob: -18.14824676513672
    10. 'lst' → logprob: -18.39824676513672

Token 424: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -7.896309739408025e-07
    2. 'a' → logprob: -14.250000953674316
    3. '(' → logprob: -16.75
    4. '(
' → logprob: -19.25
    5. ' (' → logprob: -19.5
    6. '   ' → logprob: -21.125
    7. '(ai' → logprob: -21.25
    8. '           ' → logprob: -21.5
    9. '(A' → logprob: -21.5
    10. ' a' → logprob: -21.5

Token 425: ',' (ID: 11)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.9981420336989686e-05
    2. 'a' → logprob: -10.875020027160645
    3. '(' → logprob: -14.250020027160645
    4. ' (' → logprob: -16.125019073486328
    5. ',' → logprob: -16.375019073486328
    6. '(
' → logprob: -16.625019073486328
    7. ',a' → logprob: -16.750019073486328
    8. '```' → logprob: -17.000019073486328
    9. ' a' → logprob: -18.625019073486328
    10. ')' → logprob: -18.625019073486328

Token 426: ' j' (ID: 441)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1472419600977446e-06
    2. ' a' → logprob: -13.750000953674316
    3. '	a' → logprob: -21.625001907348633
    4. '(a' → logprob: -22.125001907348633
    5. 'а' → logprob: -23.250001907348633
    6. '"a' → logprob: -23.250001907348633
    7. ')a' → logprob: -23.250001907348633
    8. '           ' → logprob: -24.250001907348633
    9. '_a' → logprob: -24.250001907348633
    10. '$a' → logprob: -24.250001907348633

Token 427: ')
' (ID: 446)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.021766001358628273
    2. ')' → logprob: -4.021766185760498
    3. ')
' → logprob: -5.646766185760498
    4. ',' → logprob: -10.14676570892334
    5. '              ' → logprob: -11.39676570892334
    6. '                   ' → logprob: -11.89676570892334
    7. '           ' → logprob: -12.02176570892334
    8. '                
' → logprob: -12.52176570892334
    9. '                ' → logprob: -12.77176570892334
    10. '),' → logprob: -13.02176570892334

Token 428: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00031532408320344985
    2. 'if' → logprob: -8.25031566619873
    3. ' if' → logprob: -10.00031566619873
    4. '```' → logprob: -12.87531566619873
    5. 'i' → logprob: -13.12531566619873
    6. ' i' → logprob: -13.25031566619873
    7. '                
' → logprob: -15.12531566619873
    8. '              ' → logprob: -15.12531566619873
    9. '<|end|>' → logprob: -15.12531566619873
    10. ' ' → logprob: -15.50031566619873

Token 429: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.387467622756958
    2. '               ' → logprob: -1.137467622756958
    3. '           ' → logprob: -8.387467384338379
    4. 'i' → logprob: -8.637467384338379
    5. ' if' → logprob: -9.137467384338379
    6. '       ' → logprob: -9.762467384338379
    7. '   ' → logprob: -10.637467384338379
    8. ' ' → logprob: -14.387467384338379
    9. '                   ' → logprob: -14.637467384338379
    10. '              ' → logprob: -15.262467384338379

Token 430: ' is' (ID: 382)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0046619176864624
    2. ' is' → logprob: -1.2546619176864624
    3. ' i' → logprob: -1.6296619176864624
    4. 'is' → logprob: -1.8796619176864624
    5. ' not' → logprob: -11.504661560058594
    6. 'not' → logprob: -12.879661560058594
    7. ' are' → logprob: -13.004661560058594
    8. '   ' → logprob: -13.504661560058594
    9. ' ' → logprob: -13.817161560058594
    10. 'are' → logprob: -13.942161560058594

Token 431: '_one' (ID: 26979)
  Prédit: '_one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_one' → logprob: -1.5048530030981055e-06
    2. 'one' → logprob: -13.500001907348633
    3. 'One' → logprob: -17.875001907348633
    4. '(one' → logprob: -18.625001907348633
    5. '_once' → logprob: -19.500001907348633
    6. '(i' → logprob: -19.875001907348633
    7. '_ONE' → logprob: -20.000001907348633
    8. '_zero' → logprob: -20.125001907348633
    9. '1' → logprob: -20.250001907348633
    10. '(' → logprob: -20.375001907348633

Token 432: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -15.875
    3. ' (' → logprob: -16.5
    4. '(ii' → logprob: -19.25
    5. '   ' → logprob: -20.125
    6. '(I' → logprob: -20.75
    7. '(
' → logprob: -20.875
    8. '```' → logprob: -21.125
    9. '(in' → logprob: -22.125
    10. '(ierr' → logprob: -22.125

Token 433: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2528384327888489
    2. '):' → logprob: -1.502838373184204
    3. '():
' → logprob: -7.502838611602783
    4. '()):
' → logprob: -8.627838134765625
    5. ')' → logprob: -10.002838134765625
    6. '():' → logprob: -10.377838134765625
    7. ' ):
' → logprob: -10.627838134765625
    8. '):

' → logprob: -11.002838134765625
    9. '()' → logprob: -11.627838134765625
    10. ':' → logprob: -11.627838134765625

Token 434: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0026791063137352467
    2. ':' → logprob: -6.502678871154785
    3. ':
' → logprob: -7.127678871154785
    4. '               ' → logprob: -8.877678871154785
    5. '                       ' → logprob: -9.252678871154785
    6. 'break' → logprob: -10.002678871154785
    7. '           ' → logprob: -10.377678871154785
    8. '                    ' → logprob: -11.127678871154785
    9. '                  ' → logprob: -11.502678871154785
    10. ' and' → logprob: -11.877678871154785

Token 435: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.3045406937599182
    2. '                   ' → logprob: -1.6795406341552734
    3. '                       ' → logprob: -2.9295406341552734
    4. ' break' → logprob: -4.179540634155273
    5. 'i' → logprob: -5.679540634155273
    6. '               ' → logprob: -5.804540634155273
    7. ' i' → logprob: -7.179540634155273
    8. '   ' → logprob: -9.804540634155273
    9. '       ' → logprob: -9.804540634155273
    10. '           ' → logprob: -10.804540634155273

Token 436: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006876522093079984
    2. 'else' → logprob: -8.375687599182129
    3. '                
' → logprob: -8.500687599182129
    4. ' else' → logprob: -9.375687599182129
    5. '<|end|>' → logprob: -9.375687599182129
    6. '
' → logprob: -10.625687599182129
    7. '           ' → logprob: -11.250687599182129
    8. '       ' → logprob: -11.875687599182129
    9. '                   ' → logprob: -11.875687599182129
    10. '```' → logprob: -11.875687599182129

Token 437: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002116831485182047
    2. 'else' → logprob: -6.252116680145264
    3. ' else' → logprob: -8.627117156982422
    4. '           ' → logprob: -12.252117156982422
    5. '<|end|>' → logprob: -13.627117156982422
    6. '```' → logprob: -14.002117156982422
    7. '       ' → logprob: -14.252117156982422
    8. '              ' → logprob: -15.252117156982422
    9. '                   ' → logprob: -15.252117156982422
    10. 's' → logprob: -15.877117156982422

Token 438: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.48770418763160706
    2. '               ' → logprob: -1.2377041578292847
    3. ' else' → logprob: -2.362704277038574
    4. '           ' → logprob: -6.362704277038574
    5. '              ' → logprob: -11.112704277038574
    6. '   ' → logprob: -12.612704277038574
    7. '       ' → logprob: -13.237704277038574
    8. '	else' → logprob: -13.487704277038574
    9. '                   ' → logprob: -13.612704277038574
    10. '```' → logprob: -14.237704277038574

Token 439: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01029580645263195
    2. ':' → logprob: -4.635295867919922
    3. ':
' → logprob: -7.885295867919922
    4. '                       ' → logprob: -9.885295867919922
    5. ' :' → logprob: -10.135295867919922
    6. '               ' → logprob: -10.510295867919922
    7. '   ' → logprob: -10.885295867919922
    8. '           ' → logprob: -12.385295867919922
    9. ',' → logprob: -12.385295867919922
    10. ' ' → logprob: -12.760295867919922

Token 440: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06316573917865753
    2. 'i' → logprob: -2.8131656646728516
    3. ' i' → logprob: -7.438165664672852
    4. '               ' → logprob: -7.563165664672852
    5. '   ' → logprob: -10.438165664672852
    6. '                       ' → logprob: -10.688165664672852
    7. '       ' → logprob: -10.813165664672852
    8. '           ' → logprob: -11.063165664672852
    9. '                  ' → logprob: -14.313165664672852
    10. ' ' → logprob: -14.813165664672852

Token 441: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.01862546056509018
    2. ' i' → logprob: -4.018625259399414
    3. '                   ' → logprob: -8.143625259399414
    4. '                       ' → logprob: -9.143625259399414
    5. '       ' → logprob: -10.018625259399414
    6. '               ' → logprob: -10.643625259399414
    7. '   ' → logprob: -12.018625259399414
    8. '           ' → logprob: -13.143625259399414
    9. ' ' → logprob: -14.518625259399414
    10. '	i' → logprob: -15.268625259399414

Token 442: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.313268780708313
    2. ' =' → logprob: -1.313268780708313
    3. '+=' → logprob: -12.438268661499023
    4. ' +=' → logprob: -12.688268661499023
    5. ' ' → logprob: -18.563268661499023
    6. '＝' → logprob: -18.563268661499023
    7. '.=' → logprob: -18.813268661499023
    8. '   ' → logprob: -19.563268661499023
    9. '=i' → logprob: -19.938268661499023
    10. ')' → logprob: -20.438268661499023

Token 443: ' increment' (ID: 24032)
  Prédit: ' increment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' increment' → logprob: -0.6931557655334473
    2. 'increment' → logprob: -0.6931557655334473
    3. '1' → logprob: -11.818155288696289
    4. 'increments' → logprob: -15.068155288696289
    5. '.increment' → logprob: -15.318155288696289
    6. ' increments' → logprob: -15.568155288696289
    7. ' incre' → logprob: -16.06815528869629
    8. ' incremental' → logprob: -16.19315528869629
    9. 'in' → logprob: -16.19315528869629
    10. 'i' → logprob: -16.81815528869629

Token 444: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.625
    3. 'i' → logprob: -19.125
    4. '(ii' → logprob: -20.625
    5. '(I' → logprob: -21.75
    6. '(
' → logprob: -22.0
    7. ' (' → logprob: -23.125
    8. '(in' → logprob: -23.125
    9. '(iv' → logprob: -23.5
    10. '```' → logprob: -23.75

Token 445: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005555360112339258
    2. ')
' → logprob: -7.500555515289307
    3. ' )' → logprob: -14.500555992126465
    4. ')

' → logprob: -14.750555992126465
    5. ')i' → logprob: -15.000555992126465
    6. ')return' → logprob: -15.125555992126465
    7. '       ' → logprob: -15.375555992126465
    8. '           ' → logprob: -15.625555992126465
    9. ')}' → logprob: -16.12555503845215
    10. '               ' → logprob: -16.37555503845215

Token 446: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012340416433289647
    2. '   ' → logprob: -6.87623405456543
    3. '```' → logprob: -9.50123405456543
    4. '<|end|>' → logprob: -10.50123405456543
    5. 'return' → logprob: -10.75123405456543
    6. 'print' → logprob: -10.87623405456543
    7. '           ' → logprob: -11.50123405456543
    8. 'continue' → logprob: -11.62623405456543
    9. ' return' → logprob: -11.87623405456543
    10. '[]' → logprob: -12.12623405456543

Token 447: ' ans' (ID: 3345)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04903842508792877
    2. 'ans' (adapté à ' ans') → logprob: -3.0490384101867676
    3. ' ans' → logprob: -8.424038887023926
    4. 'print' → logprob: -8.799038887023926
    5. '
' → logprob: -10.924038887023926
    6. '	ans' → logprob: -11.174038887023926
    7. '       ' → logprob: -11.299038887023926
    8. '    
' → logprob: -11.549038887023926
    9. 'result' → logprob: -11.799038887023926
    10. 'diff' → logprob: -12.049038887023926

Token 448: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07888989895582199
    2. '=' → logprob: -2.578889846801758
    3. ',' → logprob: -16.703889846801758
    4. '   ' → logprob: -17.703889846801758
    5. ' ' → logprob: -17.828889846801758
    6. ' =)' → logprob: -18.078889846801758
    7. '    ' → logprob: -18.328889846801758
    8. '	' → logprob: -18.453889846801758
    9. '.' → logprob: -18.703889846801758
    10. 's' → logprob: -18.953889846801758

Token 449: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.0040325685404241085
    2. ' get' → logprob: -5.629032611846924
    3. 'a' → logprob: -7.754032611846924
    4. 'abs' → logprob: -13.504032135009766
    5. ' a' → logprob: -13.879032135009766
    6. '(get' → logprob: -14.504032135009766
    7. '   ' → logprob: -15.129032135009766
    8. '	get' → logprob: -16.004032135009766
    9. '  ' → logprob: -17.754032135009766
    10. 'ans' → logprob: -18.129032135009766

Token 450: '_difference' (ID: 123771)
  Prédit: '_difference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_difference' → logprob: -3.531315314830863e-06
    2. 'difference' → logprob: -12.875003814697266
    3. '_d' → logprob: -14.750003814697266
    4. '_' → logprob: -15.875003814697266
    5. '_distance' → logprob: -15.875003814697266
    6. '_result' → logprob: -16.125003814697266
    7. '```' → logprob: -17.250003814697266
    8. 'd' → logprob: -18.125003814697266
    9. '\' → logprob: -18.625003814697266
    10. ' ' → logprob: -18.750003814697266

Token 451: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -14.250000953674316
    3. ' (' → logprob: -17.5
    4. 'a' → logprob: -19.375
    5. '```' → logprob: -20.375
    6. '(
' → logprob: -20.5
    7. '(ans' → logprob: -20.75
    8. '((' → logprob: -21.0
    9. '(ab' → logprob: -21.125
    10. '(ai' → logprob: -22.0

Token 452: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005344874691218138
    2. '())' → logprob: -5.630344867706299
    3. '(a' → logprob: -7.005344867706299
    4. '(' → logprob: -7.505344867706299
    5. ')a' → logprob: -8.880345344543457
    6. '()' → logprob: -9.505345344543457
    7. ')
' → logprob: -10.380345344543457
    8. '   ' → logprob: -10.755345344543457
    9. ' )' → logprob: -11.755345344543457
    10. ')`' → logprob: -13.255345344543457

Token 453: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04867025464773178
    2. 'print' → logprob: -3.0486702919006348
    3. ' print' → logprob: -9.423669815063477
    4. '	print' → logprob: -14.173669815063477
    5. '(print' → logprob: -14.298669815063477
    6. '```' → logprob: -14.298669815063477
    7. '
' → logprob: -16.298669815063477
    8. '       ' → logprob: -17.048669815063477
    9. '    
' → logprob: -17.423669815063477
    10. '   ' → logprob: -17.548669815063477

Token 454: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.1602773368358612
    2. '   ' → logprob: -1.9102773666381836
    3. ' print' → logprob: -9.910277366638184
    4. '```' → logprob: -12.785277366638184
    5. '
' → logprob: -14.910277366638184
    6. '(print' → logprob: -15.160277366638184
    7. '	print' → logprob: -16.160276412963867
    8. '  ' → logprob: -17.410276412963867
    9. '    
' → logprob: -17.660276412963867
    10. '
' → logprob: -18.410276412963867

Token 455: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.00025883622583933175
    2. '(' → logprob: -9.000258445739746
    3. '(ans' → logprob: -9.375258445739746
    4. '(result' → logprob: -10.625258445739746
    5. '(_' → logprob: -11.250258445739746
    6. 'result' → logprob: -12.125258445739746
    7. '_RESULT' → logprob: -13.375258445739746
    8. 'Result' → logprob: -13.375258445739746
    9. '_results' → logprob: -13.750258445739746
    10. '_Result' → logprob: -13.750258445739746

Token 456: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -15.0
    3. '(answer' → logprob: -16.875
    4. 'ans' → logprob: -17.5
    5. ' (' → logprob: -17.625
    6. '(
' → logprob: -20.0
    7. '```' → logprob: -20.0
    8. '(an' → logprob: -20.25
    9. '((' → logprob: -20.375
    10. '	ans' → logprob: -20.5

Token 457: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.816093228830141e-06
    2. ')
' → logprob: -13.12500286102295
    3. ' )' → logprob: -14.75000286102295
    4. '())' → logprob: -15.37500286102295
    5. '()' → logprob: -16.125001907348633
    6. ')`' → logprob: -16.625001907348633
    7. '))' → logprob: -18.500001907348633
    8. ')

' → logprob: -19.000001907348633
    9. ')}' → logprob: -19.250001907348633
    10. ')#' → logprob: -19.250001907348633

Token 458: 'solve' (ID: 117273)
  Prédit: 'solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.023259690031409264
    2. 'if' → logprob: -3.7732596397399902
    3. '#' → logprob: -12.023260116577148
    4. ' solve' → logprob: -12.523260116577148
    5. '```' → logprob: -13.273260116577148
    6. '.solve' → logprob: -13.523260116577148
    7. ' if' → logprob: -13.648260116577148
    8. '<|end|>' → logprob: -16.14826011657715
    9. 'resolve' → logprob: -17.02326011657715
    10. 'save' → logprob: -17.52326011657715

Token 459: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 457
Tokens correctement prédits (1ère position, stricte): 182
Tokens correctement prédits (1ère position, avec adaptation): 209
Tokens correctement prédits (top 10): 385
Précision stricte (1ère position): 39.82%
Précision adaptée (1ère position): 45.73%
Précision (top 10): 84.25%
================================================================================
