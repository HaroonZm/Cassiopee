================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:21:29
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
row_count, col_count = map(int, input().split())
min_steps = [0] + [300] * col_count
for row_index in range(row_count):
    row_string = input()
    if row_index == 0:
        target_char = row_string[0]
    for col_index in range(col_count):
        is_target = row_string[col_index] == target_char
        flip_needed = is_target ^ (min_steps[col_index] % 2 == 0)
        min_steps[col_index] += flip_needed
        if col_index > 0:
            prev_flip_needed = is_target ^ (min_steps[col_index - 1] % 2 == 0)
            min_steps[col_index] = min(min_steps[col_index], min_steps[col_index - 1] + prev_flip_needed)
final_result = (min_steps[-2] + (target_char == "#") + 1) // 2
print(final_result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'row' (ID: 843)
  → Token d'amorce (pas de prédiction)

Token 1: '_count' (ID: 7536)
  → Token d'amorce (pas de prédiction)

Token 2: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 3: ' col' (ID: 996)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7179958820343018
    2. '=' → logprob: -1.8429958820343018
    3. ' =' → logprob: -2.2179958820343018
    4. ' max' → logprob: -3.4679958820343018
    5. ')' → logprob: -3.8429958820343018
    6. 'max' → logprob: -4.092995643615723
    7. ' rows' → logprob: -4.217995643615723
    8. ',' → logprob: -4.342995643615723
    9. 'total' → logprob: -4.592995643615723
    10. '_' → logprob: -4.592995643615723

Token 4: '_count' (ID: 7536)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.01873919740319252
    2. 's' → logprob: -4.393739223480225
    3. '_count' → logprob: -5.518739223480225
    4. '_,' → logprob: -7.393739223480225
    5. ',' → logprob: -8.268738746643066
    6. ')' → logprob: -8.393738746643066
    7. '```' → logprob: -8.393738746643066
    8. '=' → logprob: -8.518738746643066
    9. '_=' → logprob: -8.643738746643066
    10. '_s' → logprob: -8.893738746643066

Token 5: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09062793105840683
    2. ',' → logprob: -2.590627908706665
    3. '_' → logprob: -4.840628147125244
    4. ' =' → logprob: -6.340628147125244
    5. '```' → logprob: -6.590628147125244
    6. ':' → logprob: -8.340627670288086
    7. '.' → logprob: -9.090627670288086
    8. ')' → logprob: -9.715627670288086
    9. '_,' → logprob: -9.965627670288086
    10. '_=' → logprob: -10.340627670288086

Token 6: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6121630668640137
    2. '0' → logprob: -1.2371630668640137
    3. '10' → logprob: -3.4871630668640137
    4. ' matrix' → logprob: -3.7371630668640137
    5. ' map' → logprob: -3.7371630668640137
    6. ' df' → logprob: -3.7371630668640137
    7. ' data' → logprob: -4.237163066864014
    8. ' len' → logprob: -4.362163066864014
    9. '5' → logprob: -4.737163066864014
    10. 'map' → logprob: -4.987163066864014

Token 7: '(int' (ID: 2742)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.9971767067909241
    2. '(' → logprob: -1.1221766471862793
    3. '<|end|>' → logprob: -1.9971766471862793
    4. '(int' → logprob: -2.2471766471862793
    5. '```' → logprob: -3.4971766471862793
    6. '[int' → logprob: -4.622176647186279
    7. '(str' → logprob: -5.247176647186279
    8. '<|end|>' → logprob: -5.497176647186279
    9. '(token' → logprob: -6.247176647186279
    10. '[' → logprob: -6.497176647186279

Token 8: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.014128131791949272
    2. ')' → logprob: -4.6391282081604
    3. '(' → logprob: -5.8891282081604
    4. '(user' → logprob: -7.8891282081604
    5. 'input' → logprob: -8.014127731323242
    6. '('' → logprob: -8.264127731323242
    7. '(row' → logprob: -9.264127731323242
    8. '```' → logprob: -9.264127731323242
    9. '[input' → logprob: -9.389127731323242
    10. '(raw' → logprob: -9.639127731323242

Token 9: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.25194624066352844
    2. ' input' → logprob: -1.501946210861206
    3. '(input' → logprob: -11.876946449279785
    4. ')' → logprob: -12.001946449279785
    5. 'row' → logprob: -13.501946449279785
    6. ',input' → logprob: -14.376946449279785
    7. 'line' → logprob: -15.001946449279785
    8. '<input' → logprob: -15.376946449279785
    9. '```' → logprob: -15.626946449279785
    10. 'user' → logprob: -15.751946449279785

Token 10: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -1.116904616355896
    2. '()' → logprob: -1.241904616355896
    3. ')' → logprob: -1.741904616355896
    4. '(' → logprob: -2.1169047355651855
    5. '().' → logprob: -4.4919047355651855
    6. '(()' → logprob: -4.7419047355651855
    7. '('' → logprob: -4.9919047355651855
    8. '(token' → logprob: -5.1169047355651855
    9. '();)' → logprob: -5.1169047355651855
    10. '(""))' → logprob: -5.3669047355651855

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0011790355201810598
    2. 'strip' → logprob: -6.751179218292236
    3. ' split' → logprob: -11.876178741455078
    4. 'rstrip' → logprob: -13.376178741455078
    5. '(split' → logprob: -15.876178741455078
    6. 'read' → logprob: -16.876178741455078
    7. '```' → logprob: -17.251178741455078
    8. 'spl' → logprob: -17.376178741455078
    9. ')' → logprob: -17.376178741455078
    10. 'startswith' → logprob: -17.626178741455078

Token 12: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.09162880480289459
    2. ')' → logprob: -2.5916287899017334
    3. '()))' → logprob: -5.3416290283203125
    4. '))' → logprob: -5.4666290283203125
    5. '()' → logprob: -5.7166290283203125
    6. '(' → logprob: -8.341629028320312
    7. '('' → logprob: -10.466629028320312
    8. ' ())' → logprob: -10.716629028320312
    9. '`)' → logprob: -11.591629028320312
    10. '`()' → logprob: -11.841629028320312

Token 13: 'min' (ID: 1493)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3850266933441162
    2. '#' → logprob: -1.8850266933441162
    3. '[' → logprob: -2.385026693344116
    4. 'print' → logprob: -2.760026693344116
    5. 'if' → logprob: -3.010026693344116
    6. ',' → logprob: -3.010026693344116
    7. '\n' → logprob: -3.010026693344116
    8. ')' → logprob: -3.135026693344116
    9. 'n' → logprob: -3.260026693344116
    10. '```' → logprob: -3.510026693344116

Token 14: '_steps' (ID: 52120)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.027109991759061813
    2. '(' → logprob: -3.6521100997924805
    3. '_val' → logprob: -8.40211009979248
    4. '_row' → logprob: -9.77711009979248
    5. '_space' → logprob: -9.77711009979248
    6. '(_)' → logprob: -9.77711009979248
    7. ' _' → logprob: -9.90211009979248
    8. '_value' → logprob: -10.02711009979248
    9. 'space' → logprob: -10.15211009979248
    10. '_)' → logprob: -10.40211009979248

Token 15: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.202475905418396
    2. ' =' → logprob: -1.952475905418396
    3. '(' → logprob: -3.7024760246276855
    4. '=' → logprob: -4.2024760246276855
    5. '_space' → logprob: -7.8274760246276855
    6. '_=' → logprob: -7.9524760246276855
    7. ',' → logprob: -8.577475547790527
    8. ' _' → logprob: -8.702475547790527
    9. ' ' → logprob: -9.077475547790527
    10. ')' → logprob: -9.827475547790527

Token 16: ' [' (ID: 723)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'row' → logprob: -1.0645192861557007
    2. 'float' → logprob: -1.5645192861557007
    3. ' float' → logprob: -1.6895192861557007
    4. ' row' → logprob: -2.4395194053649902
    5. 'abs' → logprob: -2.9395194053649902
    6. '0' → logprob: -3.1895194053649902
    7. ' abs' → logprob: -3.4395194053649902
    8. ' ' → logprob: -3.9395194053649902
    9. ' min' → logprob: -4.31451940536499
    10. 'min' → logprob: -4.93951940536499

Token 17: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.23340392112731934
    2. 'float' → logprob: -1.9834039211273193
    3. '[' → logprob: -3.7334039211273193
    4. 'row' → logprob: -3.8584039211273193
    5. ']' → logprob: -4.358404159545898
    6. '-' → logprob: -5.733404159545898
    7. '[]' → logprob: -6.108404159545898
    8. '100' → logprob: -6.233404159545898
    9. '999' → logprob: -6.483404159545898
    10. '[row' → logprob: -6.858404159545898

Token 18: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03923027589917183
    2. ',' → logprob: -3.2892303466796875
    3. ' ]' → logprob: -7.2892303466796875
    4. ' for' → logprob: -8.164230346679688
    5. ']*' → logprob: -9.414230346679688
    6. ')]' → logprob: -10.414230346679688
    7. ' ,' → logprob: -10.664230346679688
    8. ')' → logprob: -11.164230346679688
    9. 'for' → logprob: -11.164230346679688
    10. '][' → logprob: -11.289230346679688

Token 19: ' +' (ID: 659)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9715365171432495
    2. ' for' → logprob: -1.3465365171432495
    3. ',' → logprob: -1.9715365171432495
    4. ' ]' → logprob: -2.846536636352539
    5. '<|end|>' → logprob: -3.221536636352539
    6. ' ' → logprob: -3.596536636352539
    7. 'for' → logprob: -3.596536636352539
    8. '[' → logprob: -3.596536636352539
    9. '0' → logprob: -4.471536636352539
    10. '*' → logprob: -4.971536636352539

Token 20: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06334366649389267
    2. ' [' → logprob: -3.5633437633514404
    3. '[list' → logprob: -4.063343524932861
    4. '[row' → logprob: -4.813343524932861
    5. '[min' → logprob: -5.938343524932861
    6. '[col' → logprob: -5.938343524932861
    7. '[int' → logprob: -6.938343524932861
    8. '[input' → logprob: -7.438343524932861
    9. '[-' → logprob: -8.43834400177002
    10. '[List' → logprob: -9.56334400177002

Token 21: '300' (ID: 4095)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.11148599535226822
    2. '10' → logprob: -2.6114859580993652
    3. 'int' → logprob: -4.361485958099365
    4. '100' → logprob: -4.986485958099365
    5. '-' → logprob: -5.861485958099365
    6. 'row' → logprob: -5.861485958099365
    7. '999' → logprob: -6.111485958099365
    8. '0' → logprob: -6.736485958099365
    9. '1' → logprob: -6.736485958099365
    10. 'None' → logprob: -7.611485958099365

Token 22: ']' (ID: 60)
  Prédit: '00'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.14757230877876282
    2. '000' → logprob: -2.2725722789764404
    3. '0' → logprob: -3.6475722789764404
    4. ']' → logprob: -5.2725725173950195
    5. '01' → logprob: -6.7725725173950195
    6. '001' → logprob: -6.8975725173950195
    7. '1' → logprob: -7.7725725173950195
    8. ']int' → logprob: -9.64757251739502
    9. ' ' → logprob: -9.89757251739502
    10. ']*' → logprob: -10.27257251739502

Token 23: ' *' (ID: 425)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7896072268486023
    2. '00' → logprob: -0.7896072268486023
    3. '```' → logprob: -3.164607286453247
    4. ']' → logprob: -3.789607286453247
    5. '000' → logprob: -3.914607286453247
    6. ']*' → logprob: -6.289607048034668
    7. ']*(' → logprob: -6.789607048034668
    8. '*' → logprob: -7.039607048034668
    9. ']+' → logprob: -7.414607048034668
    10. ' ' → logprob: -7.414607048034668

Token 24: ' col' (ID: 996)
  Prédit: '(col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(col' → logprob: -0.14348402619361877
    2. '(row' → logprob: -2.143484115600586
    3. '(' → logprob: -4.643484115600586
    4. 'col' → logprob: -5.143484115600586
    5. 'row' → logprob: -7.893484115600586
    6. '100' → logprob: -8.643484115600586
    7. '9' → logprob: -9.143484115600586
    8. ' (' → logprob: -9.518484115600586
    9. '(max' → logprob: -10.143484115600586
    10. ' col' → logprob: -10.393484115600586

Token 25: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.006958446465432644
    2. 's' → logprob: -5.131958484649658
    3. '_' → logprob: -7.006958484649658
    4. ' _' → logprob: -10.3819580078125
    5. '_s' → logprob: -10.5069580078125
    6. '_counts' → logprob: -10.7569580078125
    7. '_cnt' → logprob: -11.3819580078125
    8. '_c' → logprob: -12.2569580078125
    9. '_co' → logprob: -12.2569580078125
    10. 'count' → logprob: -12.5069580078125

Token 26: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 27: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0204174518585205
    2. '
' → logprob: -1.3954174518585205
    3. '<|end|>' → logprob: -2.3954174518585205
    4. '[' → logprob: -3.0204174518585205
    5. '+' → logprob: -3.1454174518585205
    6. '\n' → logprob: -3.3954174518585205
    7. ' ' → logprob: -3.3954174518585205
    8. '0' → logprob: -3.7704174518585205
    9. ' for' → logprob: -3.8954174518585205
    10. '```' → logprob: -4.020417213439941

Token 28: ' row' (ID: 5225)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.8102893233299255
    2. ' _' → logprob: -0.9352893233299255
    3. ' col' → logprob: -2.1852893829345703
    4. ' row' → logprob: -3.8102893829345703
    5. '_' → logprob: -3.9352893829345703
    6. ' j' → logprob: -5.43528938293457
    7. ' r' → logprob: -6.18528938293457
    8. ' ' → logprob: -6.68528938293457
    9. ' c' → logprob: -8.18528938293457
    10. 'i' → logprob: -8.81028938293457

Token 29: '_index' (ID: 7748)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04102642461657524
    2. ' in' → logprob: -3.4160263538360596
    3. '_count' → logprob: -6.041026592254639
    4. 'in' → logprob: -6.416026592254639
    5. '_in' → logprob: -6.666026592254639
    6. '_i' → logprob: -7.166026592254639
    7. '_index' → logprob: -7.416026592254639
    8. '_idx' → logprob: -7.666026592254639
    9. ' _' → logprob: -8.91602611541748
    10. 's' → logprob: -11.04102611541748

Token 30: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14290912449359894
    2. 'in' → logprob: -2.017909049987793
    3. ',' → logprob: -8.642909049987793
    4. ' ' → logprob: -10.392909049987793
    5. '	in' → logprob: -11.517909049987793
    6. ' ,' → logprob: -12.267909049987793
    7. '```' → logprob: -12.892909049987793
    8. '<|end|>' → logprob: -13.142909049987793
    9. ')' → logprob: -13.267909049987793
    10. '_in' → logprob: -14.330409049987793

Token 31: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.10021205991506577
    2. 'range' → logprob: -2.3502120971679688
    3. '	range' → logprob: -12.475212097167969
    4. '(range' → logprob: -14.100212097167969
    5. ' xrange' → logprob: -14.850212097167969
    6. ' ' → logprob: -15.225212097167969
    7. '_range' → logprob: -15.350212097167969
    8. ')' → logprob: -17.47521209716797
    9. '  ' → logprob: -17.85021209716797
    10. '.range' → logprob: -18.35021209716797

Token 32: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.3877083361148834
    2. '(' → logprob: -1.137708306312561
    3. '(col' → logprob: -8.01270866394043
    4. ' (' → logprob: -8.13770866394043
    5. '(rows' → logprob: -8.63770866394043
    6. '(len' → logprob: -10.76270866394043
    7. '(column' → logprob: -12.01270866394043
    8. '(
' → logprob: -13.13770866394043
    9. '(line' → logprob: -13.88770866394043
    10. '(range' → logprob: -14.01270866394043

Token 33: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0001317871210630983
    2. '_index' → logprob: -9.250131607055664
    3. '_' → logprob: -10.375131607055664
    4. ')_' → logprob: -14.125131607055664
    5. '_c' → logprob: -14.250131607055664
    6. ' _' → logprob: -14.500131607055664
    7. '_COUNT' → logprob: -14.750131607055664
    8. ')' → logprob: -14.750131607055664
    9. '-' → logprob: -15.375131607055664
    10. '__' → logprob: -15.750131607055664

Token 34: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009513601544313133
    2. '+' → logprob: -7.875951290130615
    3. '):
' → logprob: -8.250951766967773
    4. ')' → logprob: -9.250951766967773
    5. ':' → logprob: -9.375951766967773
    6. ' ):' → logprob: -9.375951766967773
    7. ',' → logprob: -10.875951766967773
    8. '-' → logprob: -11.500951766967773
    9. ' +' → logprob: -12.375951766967773
    10. ']:' → logprob: -12.750951766967773

Token 35: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08547969162464142
    2. ' for' → logprob: -3.460479736328125
    3. ' min' → logprob: -4.085479736328125
    4. ' ' → logprob: -4.460479736328125
    5. 'min' → logprob: -5.335479736328125
    6. '    ' → logprob: -5.710479736328125
    7. ' new' → logprob: -5.960479736328125
    8. '```' → logprob: -5.960479736328125
    9. 'for' → logprob: -6.460479736328125
    10. '    
' → logprob: -6.835479736328125

Token 36: ' row' (ID: 5225)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0360851287841797
    2. '   ' → logprob: -1.5360851287841797
    3. ' for' → logprob: -2.1610851287841797
    4. ' row' → logprob: -2.5360851287841797
    5. ' min' → logprob: -3.0360851287841797
    6. ' current' → logprob: -3.0360851287841797
    7. ' new' → logprob: -3.2860851287841797
    8. '    ' → logprob: -3.5360851287841797
    9. ' col' → logprob: -3.5360851287841797
    10. '```' → logprob: -4.78608512878418

Token 37: '_string' (ID: 8609)
  Prédit: '_values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.3764103949069977
    2. ' =' → logprob: -1.8764103651046753
    3. '_' → logprob: -2.126410484313965
    4. '_data' → logprob: -4.126410484313965
    5. '_steps' → logprob: -4.751410484313965
    6. '_vals' → logprob: -4.751410484313965
    7. '=' → logprob: -5.751410484313965
    8. '_cells' → logprob: -7.376410484313965
    9. 'values' → logprob: -7.501410484313965
    10. '_row' → logprob: -7.876410484313965

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03365376591682434
    2. '=' → logprob: -3.408653736114502
    3. ',' → logprob: -12.78365421295166
    4. ' ' → logprob: -13.53365421295166
    5. 's' → logprob: -13.78365421295166
    6. ')' → logprob: -14.03365421295166
    7. '   ' → logprob: -14.53365421295166
    8. '_' → logprob: -14.90865421295166
    9. '=input' → logprob: -14.90865421295166
    10. '```' → logprob: -15.40865421295166

Token 39: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5232595205307007
    2. 'input' → logprob: -0.8982595205307007
    3. 'list' → logprob: -9.648259162902832
    4. ' list' → logprob: -9.648259162902832
    5. '=input' → logprob: -13.648259162902832
    6. ' ' → logprob: -14.148259162902832
    7. '	input' → logprob: -14.273259162902832
    8. '(input' → logprob: -14.273259162902832
    9. 'str' → logprob: -14.398259162902832
    10. 'int' → logprob: -14.523259162902832

Token 40: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.014320511370897293
    2. '().' → logprob: -4.264320373535156
    3. '(' → logprob: -9.639320373535156
    4. '`()' → logprob: -11.014320373535156
    5. '())' → logprob: -11.139320373535156
    6. '```' → logprob: -11.889320373535156
    7. '()]' → logprob: -12.014320373535156
    8. '()`' → logprob: -12.264320373535156
    9. '()>' → logprob: -12.389320373535156
    10. ' ()' → logprob: -12.514320373535156

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0354272685945034
    2. ' for' → logprob: -3.7854273319244385
    3. 'for' → logprob: -5.285427093505859
    4. '    
' → logprob: -5.785427093505859
    5. '<|end|>' → logprob: -6.410427093505859
    6. '
' → logprob: -7.160427093505859
    7. ' ' → logprob: -8.03542709350586
    8. '```' → logprob: -8.28542709350586
    9. '	for' → logprob: -9.03542709350586
    10. '    ' → logprob: -9.03542709350586

Token 42: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5193079710006714
    2. 'for' → logprob: -1.0193079710006714
    3. '   ' → logprob: -3.519308090209961
    4. 'min' → logprob: -5.894308090209961
    5. 'new' → logprob: -6.144308090209961
    6. ' new' → logprob: -6.144308090209961
    7. 'temp' → logprob: -6.644308090209961
    8. ' min' → logprob: -6.894308090209961
    9. '```' → logprob: -7.394308090209961
    10. 'current' → logprob: -7.644308090209961

Token 43: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.3905189335346222
    2. 'row' → logprob: -2.0155189037323
    3. ''' → logprob: -2.5155189037323
    4. ' '' → logprob: -2.8905189037323
    5. '"' → logprob: -4.265519142150879
    6. ' col' → logprob: -4.390519142150879
    7. ' ' → logprob: -4.390519142150879
    8. ' "' → logprob: -5.390519142150879
    9. ' not' → logprob: -5.765519142150879
    10. ' len' → logprob: -6.015519142150879

Token 44: '_index' (ID: 7748)
  Prédit: '_string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.062481608241796494
    2. '_index' → logprob: -2.812481641769409
    3. '[_' → logprob: -9.187481880187988
    4. '_strings' → logprob: -9.187481880187988
    5. '[index' → logprob: -9.312481880187988
    6. '_count' → logprob: -9.437481880187988
    7. 'string' → logprob: -10.687481880187988
    8. '[' → logprob: -10.937481880187988
    9. '```' → logprob: -11.312481880187988
    10. '_[' → logprob: -11.562481880187988

Token 45: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10346996039152145
    2. '==' → logprob: -2.6034698486328125
    3. ' >' → logprob: -3.9784698486328125
    4. '>' → logprob: -5.8534698486328125
    5. '%' → logprob: -6.6034698486328125
    6. ' %' → logprob: -7.8534698486328125
    7. ' ' → logprob: -8.228469848632812
    8. ' !=' → logprob: -8.478469848632812
    9. ' <' → logprob: -8.853469848632812
    10. '<|end|>' → logprob: -8.853469848632812

Token 46: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2811586260795593
    2. '0' → logprob: -1.406158685684204
    3. ' row' → logprob: -13.406158447265625
    4. '   ' → logprob: -13.531158447265625
    5. 'row' → logprob: -13.718658447265625
    6. ' col' → logprob: -13.843658447265625
    7. ' ' → logprob: -14.406158447265625
    8. '=' → logprob: -14.468658447265625
    9. '1' → logprob: -14.718658447265625
    10. 'col' → logprob: -15.343658447265625

Token 47: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0031866247300058603
    2. ' ' → logprob: -5.7531867027282715
    3. 'row' → logprob: -12.128186225891113
    4. '   ' → logprob: -13.503186225891113
    5. '1' → logprob: -14.690686225891113
    6. 'col' → logprob: -14.815686225891113
    7. ' row' → logprob: -15.128186225891113
    8. ' col' → logprob: -16.31568717956543
    9. '  ' → logprob: -16.50318717956543
    10. '```' → logprob: -16.50318717956543

Token 48: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03298294544219971
    2. ':
' → logprob: -4.03298282623291
    3. ' and' → logprob: -4.40798282623291
    4. ' or' → logprob: -6.53298282623291
    5. ' :' → logprob: -7.90798282623291
    6. '   ' → logprob: -7.90798282623291
    7. 'and' → logprob: -9.03298282623291
    8. ' :
' → logprob: -9.53298282623291
    9. ' ' → logprob: -10.03298282623291
    10. ' ==' → logprob: -10.40798282623291

Token 49: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2185235619544983
    2. '       ' → logprob: -1.9685235023498535
    3. ':' → logprob: -2.9685235023498535
    4. ' and' → logprob: -6.4685235023498535
    5. ' for' → logprob: -6.7185235023498535
    6. ' continue' → logprob: -7.3435235023498535
    7. '    ' → logprob: -7.9685235023498535
    8. ' ' → logprob: -8.218523979187012
    9. ' :' → logprob: -8.343523979187012
    10. ' min' → logprob: -8.593523979187012

Token 50: ' target' (ID: 3783)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7796090245246887
    2. ' min' → logprob: -1.654608964920044
    3. '   ' → logprob: -2.029608964920044
    4. 'min' → logprob: -2.154608964920044
    5. 'for' → logprob: -2.404608964920044
    6. '       ' → logprob: -5.154609203338623
    7. ' continue' → logprob: -5.779609203338623
    8. 'continue' → logprob: -6.904609203338623
    9. ' if' → logprob: -7.404609203338623
    10. ' ' → logprob: -7.779609203338623

Token 51: '_char' (ID: 23398)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_index' → logprob: -1.703381896018982
    2. '_string' → logprob: -1.953381896018982
    3. '_positions' → logprob: -2.2033820152282715
    4. '_count' → logprob: -2.3283820152282715
    5. '_row' → logprob: -2.4533820152282715
    6. '_pos' → logprob: -2.9533820152282715
    7. '_col' → logprob: -3.0783820152282715
    8. '_column' → logprob: -3.0783820152282715
    9. ' =' → logprob: -3.3283820152282715
    10. 's' → logprob: -3.4533820152282715

Token 52: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.36147764325141907
    2. 's' → logprob: -1.4864776134490967
    3. '=' → logprob: -2.6114776134490967
    4. '_' → logprob: -6.486477851867676
    5. '_index' → logprob: -6.611477851867676
    6. '_counts' → logprob: -8.361477851867676
    7. '_positions' → logprob: -8.736477851867676
    8. '_idx' → logprob: -8.861477851867676
    9. ' ' → logprob: -9.611477851867676
    10. ',' → logprob: -9.611477851867676

Token 53: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.1386537104845047
    2. ' row' → logprob: -2.1386537551879883
    3. ''' → logprob: -4.638653755187988
    4. ' '' → logprob: -6.638653755187988
    5. ''s' → logprob: -8.388653755187988
    6. '   ' → logprob: -9.513653755187988
    7. ' ' → logprob: -9.638653755187988
    8. 'r' → logprob: -9.638653755187988
    9. '"' → logprob: -10.138653755187988
    10. ''A' → logprob: -10.826153755187988

Token 54: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.0006041454034857452
    2. '_' → logprob: -7.750604152679443
    3. '_index' → logprob: -9.250603675842285
    4. 'string' → logprob: -10.000603675842285
    5. 'String' → logprob: -11.750603675842285
    6. '_char' → logprob: -11.750603675842285
    7. '```' → logprob: -13.000603675842285
    8. '_count' → logprob: -13.125603675842285
    9. '_s' → logprob: -13.250603675842285
    10. ' _' → logprob: -13.375603675842285

Token 55: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.007204301655292511
    2. '[row' → logprob: -5.507204532623291
    3. '[-' → logprob: -5.882204532623291
    4. '   ' → logprob: -9.632204055786133
    5. '[:]' → logprob: -10.132204055786133
    6. '[col' → logprob: -10.382204055786133
    7. '[len' → logprob: -10.507204055786133
    8. '[min' → logprob: -10.757204055786133
    9. '[target' → logprob: -11.007204055786133
    10. '[::-' → logprob: -11.632204055786133

Token 56: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010485276579856873
    2. ' ' → logprob: -7.376048564910889
    3. 'col' → logprob: -8.37604808807373
    4. ' col' → logprob: -8.87604808807373
    5. '1' → logprob: -10.12604808807373
    6. '-' → logprob: -12.25104808807373
    7. '   ' → logprob: -13.50104808807373
    8. 'i' → logprob: -14.31354808807373
    9. ']' → logprob: -14.31354808807373
    10. ':' → logprob: -14.50104808807373

Token 57: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003160393098369241
    2. ' ]' → logprob: -8.25031566619873
    3. ']
' → logprob: -10.37531566619873
    4. ')]' → logprob: -12.00031566619873
    5. '[' → logprob: -12.37531566619873
    6. ':]' → logprob: -13.12531566619873
    7. '   ' → logprob: -13.12531566619873
    8. ']]' → logprob: -13.25031566619873
    9. ']==' → logprob: -13.37531566619873
    10. '']' → logprob: -14.12531566619873

Token 58: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5552380084991455
    2. '<|end|>' → logprob: -1.0552380084991455
    3. '
' → logprob: -3.3052380084991455
    4. ' ' → logprob: -4.805237770080566
    5. '    
' → logprob: -5.055237770080566
    6. ':' → logprob: -5.180237770080566
    7. ' for' → logprob: -5.430237770080566
    8. '\n' → logprob: -5.930237770080566
    9. '<|end|>' → logprob: -6.305237770080566
    10. 'for' → logprob: -6.305237770080566

Token 59: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08140558749437332
    2. ' for' → logprob: -3.0814056396484375
    3. 'for' (adapté à ' for') → logprob: -4.8314056396484375
    4. '
' → logprob: -5.2064056396484375
    5. ' else' → logprob: -5.2064056396484375
    6. '<|end|>' → logprob: -5.5814056396484375
    7. ' ' → logprob: -5.9564056396484375
    8. 'else' → logprob: -6.0814056396484375
    9. '    
' → logprob: -6.3314056396484375
    10. '  ' → logprob: -7.4564056396484375

Token 60: ' col' (ID: 996)
  Prédit: ' col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.0007054025190882385
    2. 'col' → logprob: -7.750705242156982
    3. ' range' → logprob: -9.37570571899414
    4. ' char' → logprob: -9.50070571899414
    5. ' ' → logprob: -10.37570571899414
    6. ' index' → logprob: -10.62570571899414
    7. ' column' → logprob: -10.75070571899414
    8. ' i' → logprob: -11.62570571899414
    9. '	col' → logprob: -12.25070571899414
    10. ' _' → logprob: -12.37570571899414

Token 61: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.025490518659353256
    2. '_' → logprob: -3.7754905223846436
    3. ' in' → logprob: -6.6504902839660645
    4. '_in' → logprob: -8.025490760803223
    5. ' _' → logprob: -8.150490760803223
    6. '_idx' → logprob: -9.650490760803223
    7. '_count' → logprob: -9.650490760803223
    8. '_ind' → logprob: -10.400490760803223
    9. 'in' → logprob: -10.525490760803223
    10. '```' → logprob: -10.775490760803223

Token 62: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009807917289435863
    2. 'in' → logprob: -4.63480806350708
    3. ',' → logprob: -10.259807586669922
    4. ' ' → logprob: -11.884807586669922
    5. '<|end|>' → logprob: -12.384807586669922
    6. ' ,' → logprob: -12.884807586669922
    7. '	in' → logprob: -13.634807586669922
    8. ')' → logprob: -14.509807586669922
    9. '   ' → logprob: -14.509807586669922
    10. '```' → logprob: -15.634807586669922

Token 63: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.10020741820335388
    2. 'range' → logprob: -2.3502073287963867
    3. '(range' → logprob: -14.600207328796387
    4. '	range' → logprob: -14.975207328796387
    5. ' xrange' → logprob: -18.225208282470703
    6. '_range' → logprob: -18.225208282470703
    7. '<|end|>' → logprob: -18.350208282470703
    8. ' ' → logprob: -18.975208282470703
    9. '.range' → logprob: -19.475208282470703
    10. 'Range' → logprob: -20.600208282470703

Token 64: '(col' (ID: 37070)
  Prédit: '(col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(col' → logprob: -0.4884359836578369
    2. '(' → logprob: -0.9884359836578369
    3. ' col' → logprob: -4.613435745239258
    4. ' (' → logprob: -6.488435745239258
    5. '1' → logprob: -6.738435745239258
    6. 'col' → logprob: -7.113435745239258
    7. '	col' → logprob: -7.988435745239258
    8. '(len' → logprob: -8.113435745239258
    9. '(row' → logprob: -9.613435745239258
    10. '   ' → logprob: -9.738435745239258

Token 65: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.01126862782984972
    2. '_index' → logprob: -4.511268615722656
    3. 'ount' → logprob: -9.636268615722656
    4. ')' → logprob: -10.011268615722656
    5. '_' → logprob: -10.136268615722656
    6. 'count' → logprob: -10.136268615722656
    7. 'unt' → logprob: -11.261268615722656
    8. '_idx' → logprob: -12.886268615722656
    9. '   ' → logprob: -13.011268615722656
    10. 'index' → logprob: -13.511268615722656

Token 66: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001963128335773945
    2. ')' → logprob: -7.251963138580322
    3. ':' → logprob: -7.376963138580322
    4. '):
' → logprob: -7.876963138580322
    5. '   ' → logprob: -9.376962661743164
    6. ' ):' → logprob: -9.376962661743164
    7. '+' → logprob: -9.876962661743164
    8. '       ' → logprob: -11.501962661743164
    9. '():' → logprob: -13.001962661743164
    10. '):

' → logprob: -13.376962661743164

Token 67: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20819739997386932
    2. '<|end|>' → logprob: -1.9581973552703857
    3. ' ' → logprob: -3.4581973552703857
    4. ' if' → logprob: -5.583197593688965
    5. '    ' → logprob: -5.708197593688965
    6. '   ' → logprob: -6.083197593688965
    7. ':' → logprob: -6.458197593688965
    8. ',' → logprob: -6.833197593688965
    9. 'if' → logprob: -7.208197593688965
    10. '<|end|>' → logprob: -7.458197593688965

Token 68: ' is' (ID: 382)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.032187480479478836
    2. ' if' → logprob: -4.532187461853027
    3. '<|end|>' → logprob: -4.657187461853027
    4. '        ' → logprob: -6.032187461853027
    5. '       ' → logprob: -6.407187461853027
    6. ' 
' → logprob: -6.407187461853027
    7. 'if' → logprob: -6.782187461853027
    8. '    ' → logprob: -7.282187461853027
    9. '_' → logprob: -7.407187461853027
    10. '#' → logprob: -7.657187461853027

Token 69: '_target' (ID: 24705)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.35117483139038086
    2. '_' → logprob: -1.4761748313903809
    3. ' _' → logprob: -4.476174831390381
    4. '<|end|>' → logprob: -4.476174831390381
    5. '_valid' → logprob: -4.601174831390381
    6. ')' → logprob: -5.226174831390381
    7. ' row' → logprob: -5.601174831390381
    8. 'row' → logprob: -5.976174831390381
    9. '_target' → logprob: -6.101174831390381
    10. 's' → logprob: -6.101174831390381

Token 70: ' =' (ID: 314)
  Prédit: '_char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.0666777640581131
    2. '_' → logprob: -3.0666778087615967
    3. ' =' → logprob: -4.441677570343018
    4. '=' → logprob: -5.441677570343018
    5. '_character' → logprob: -7.816677570343018
    6. 'char' → logprob: -8.191678047180176
    7. 'ed' → logprob: -8.691678047180176
    8. 'Char' → logprob: -8.691678047180176
    9. '_chars' → logprob: -8.816678047180176
    10. '_=' → logprob: -9.066678047180176

Token 71: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.04527101293206215
    2. ' (' → logprob: -3.9202709197998047
    3. '(row' → logprob: -4.420270919799805
    4. 'row' → logprob: -4.420270919799805
    5. '(' → logprob: -8.795270919799805
    6. ' ' → logprob: -9.170270919799805
    7. ' True' → logprob: -9.670270919799805
    8. '[row' → logprob: -11.795270919799805
    9. 'True' → logprob: -12.045270919799805
    10. ' int' → logprob: -12.045270919799805

Token 72: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.0012108299415558577
    2. '_index' → logprob: -6.751210689544678
    3. '_' → logprob: -10.876211166381836
    4. 'String' → logprob: -11.876211166381836
    5. 'string' → logprob: -12.001211166381836
    6. '_count' → logprob: -13.251211166381836
    7. '_strings' → logprob: -13.501211166381836
    8. '_String' → logprob: -13.751211166381836
    9. '_char' → logprob: -13.876211166381836
    10. '_STRING' → logprob: -14.001211166381836

Token 73: '[col' (ID: 75852)
  Prédit: '[col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[col' → logprob: -2.3557529857498594e-05
    2. '[' → logprob: -10.87502384185791
    3. ' [' → logprob: -13.62502384185791
    4. '[column' → logprob: -13.87502384185791
    5. '[c' → logprob: -14.75002384185791
    6. '```' → logprob: -15.12502384185791
    7. '[cell' → logprob: -15.37502384185791
    8. '[
' → logprob: -15.50002384185791
    9. '[count' → logprob: -15.87502384185791
    10. '[row' → logprob: -16.125022888183594

Token 74: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.00018161057960242033
    2. 'index' → logprob: -9.375181198120117
    3. 'dex' → logprob: -10.500181198120117
    4. 'ex' → logprob: -10.625181198120117
    5. '```' → logprob: -10.875181198120117
    6. 'nd' → logprob: -12.000181198120117
    7. '_' → logprob: -12.750181198120117
    8. 'Index' → logprob: -12.875181198120117
    9. '_INDEX' → logprob: -13.250181198120117
    10. 'um' → logprob: -13.875181198120117

Token 75: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.9120291471481323
    2. ']' → logprob: -1.0370291471481323
    3. '==' → logprob: -1.5370291471481323
    4. ']==' → logprob: -3.787029266357422
    5. ' ]' → logprob: -5.412029266357422
    6. '=' → logprob: -7.287029266357422
    7. ')' → logprob: -7.537029266357422
    8. ' ' → logprob: -8.412029266357422
    9. '[' → logprob: -9.787029266357422
    10. ')]' → logprob: -10.537029266357422

Token 76: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0552213191986084
    2. '==' → logprob: -2.9302213191986084
    3. ' ' → logprob: -8.805221557617188
    4. ' !=' → logprob: -9.180221557617188
    5. '=' → logprob: -10.180221557617188
    6. '[' → logprob: -11.430221557617188
    7. '!=' → logprob: -11.805221557617188
    8. ' =' → logprob: -12.680221557617188
    9. ')' → logprob: -12.680221557617188
    10. '	' → logprob: -13.305221557617188

Token 77: ' target' (ID: 3783)
  Prédit: ' target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' target' → logprob: -0.007716412656009197
    2. 'target' → logprob: -5.007716178894043
    3. ' ' → logprob: -7.257716178894043
    4. ' '' → logprob: -8.382716178894043
    5. ''' → logprob: -10.007716178894043
    6. '"' → logprob: -11.882716178894043
    7. ' ' → logprob: -12.257716178894043
    8. ' t' → logprob: -12.882716178894043
    9. ' "' → logprob: -13.257716178894043
    10. '(target' → logprob: -13.507716178894043

Token 78: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.00042209390085190535
    2. 'char' → logprob: -8.250422477722168
    3. '_' → logprob: -9.125422477722168
    4. 'Char' → logprob: -10.875422477722168
    5. '_character' → logprob: -11.625422477722168
    6. '_target' → logprob: -12.500422477722168
    7. ' _' → logprob: -12.625422477722168
    8. '_CHAR' → logprob: -12.750422477722168
    9. '_chars' → logprob: -13.000422477722168
    10. '```' → logprob: -13.500422477722168

Token 79: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 80: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 81: ' flip' (ID: 29130)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9165971875190735
    2. '<|end|>' → logprob: -1.2915971279144287
    3. 'if' → logprob: -1.9165971279144287
    4. ' ' → logprob: -3.1665971279144287
    5. 'min' → logprob: -3.2915971279144287
    6. '       ' → logprob: -3.2915971279144287
    7. ' min' → logprob: -3.5415971279144287
    8. '   ' → logprob: -5.166597366333008
    9. '    ' → logprob: -5.666597366333008
    10. '#' → logprob: -5.666597366333008

Token 82: '_needed' (ID: 148421)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.6924262642860413
    2. '_count' → logprob: -1.4424262046813965
    3. '_steps' → logprob: -2.6924262046813965
    4. ' =' → logprob: -2.9424262046813965
    5. 's' → logprob: -3.0674262046813965
    6. '_counts' → logprob: -3.9424262046813965
    7. '_' → logprob: -4.1924262046813965
    8. 'ping' → logprob: -4.4424262046813965
    9. 'ed' → logprob: -4.5674262046813965
    10. '_mask' → logprob: -4.6924262046813965

Token 83: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006826905999332666
    2. '=' → logprob: -5.006826877593994
    3. ' ' → logprob: -9.631827354431152
    4. ' |=' → logprob: -10.881827354431152
    5. '[' → logprob: -11.006827354431152
    6. '   ' → logprob: -12.631827354431152
    7. '    ' → logprob: -12.881827354431152
    8. '  ' → logprob: -13.631827354431152
    9. ' +=' → logprob: -14.506827354431152
    10. 'if' → logprob: -14.631827354431152

Token 84: ' is' (ID: 382)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.4057713747024536
    2. ' min' → logprob: -2.155771255493164
    3. ' ' → logprob: -2.655771255493164
    4. '0' → logprob: -2.905771255493164
    5. 'not' → logprob: -3.280771255493164
    6. '1' → logprob: -3.780771255493164
    7. ' (' → logprob: -4.655771255493164
    8. 'min' → logprob: -4.780771255493164
    9. ' int' → logprob: -4.905771255493164
    10. 'int' → logprob: -6.405771255493164

Token 85: '_target' (ID: 24705)
  Prédit: '_target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_target' → logprob: -0.0032573307398706675
    2. '_' → logprob: -5.8782572746276855
    3. 'target' → logprob: -8.003257751464844
    4. '_t' → logprob: -9.503257751464844
    5. 't' → logprob: -11.628257751464844
    6. '_tar' → logprob: -12.128257751464844
    7. 's' → logprob: -13.003257751464844
    8. '_
' → logprob: -13.003257751464844
    9. '_Target' → logprob: -13.253257751464844
    10. 'arget' → logprob: -13.253257751464844

Token 86: ' ^' (ID: 7602)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.3464529514312744
    2. ' ^' → logprob: -2.0964529514312744
    3. '<|end|>' → logprob: -2.4714529514312744
    4. ' ==' → logprob: -3.4714529514312744
    5. ' ' → logprob: -3.5964529514312744
    6. '!=' → logprob: -4.346452713012695
    7. '==' → logprob: -5.596452713012695
    8. ' and' → logprob: -6.096452713012695
    9. ' not' → logprob: -6.346452713012695
    10. ' is' → logprob: -6.596452713012695

Token 87: ' (' (ID: 350)
  Prédit: '(True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(True' → logprob: -0.35888779163360596
    2. 'True' → logprob: -1.733887791633606
    3. '1' → logprob: -2.9838876724243164
    4. '(row' → logprob: -3.9838876724243164
    5. ' True' → logprob: -4.108887672424316
    6. ' (' → logprob: -4.108887672424316
    7. '(' → logprob: -4.983887672424316
    8. '(min' → logprob: -5.108887672424316
    9. '(False' → logprob: -6.108887672424316
    10. '((' → logprob: -6.483887672424316

Token 88: 'min' (ID: 1493)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.3866545259952545
    2. '(col' → logprob: -1.7616544961929321
    3. '(True' → logprob: -2.8866546154022217
    4. 'min' → logprob: -3.6366546154022217
    5. '((' → logprob: -3.8866546154022217
    6. '(' → logprob: -4.011654376983643
    7. ' (' → logprob: -5.261654376983643
    8. '(row' → logprob: -5.386654376983643
    9. '1' → logprob: -5.386654376983643
    10. '(False' → logprob: -5.886654376983643

Token 89: '_steps' (ID: 52120)
  Prédit: '_steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_steps' → logprob: -6.015305552864447e-05
    2. 'steps' → logprob: -9.875060081481934
    3. '_' → logprob: -13.000060081481934
    4. 's' → logprob: -13.375060081481934
    5. 'Steps' → logprob: -14.375060081481934
    6. '_s' → logprob: -14.750060081481934
    7. '   ' → logprob: -14.875060081481934
    8. '```' → logprob: -14.875060081481934
    9. '_counts' → logprob: -15.250060081481934
    10. ' _' → logprob: -15.375060081481934

Token 90: '[col' (ID: 75852)
  Prédit: '[col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[col' → logprob: -0.00048536903341300786
    2. '[' → logprob: -8.50048542022705
    3. ' [' → logprob: -8.75048542022705
    4. '[-' → logprob: -9.75048542022705
    5. '[min' → logprob: -10.87548542022705
    6. '[column' → logprob: -11.25048542022705
    7. '[j' → logprob: -12.62548542022705
    8. '   ' → logprob: -12.75048542022705
    9. '```' → logprob: -12.87548542022705
    10. ' ' → logprob: -12.87548542022705

Token 91: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.008524148724973202
    2. 'index' → logprob: -5.383523941040039
    3. 'ex' → logprob: -6.008523941040039
    4. 'dex' → logprob: -7.008523941040039
    5. '_count' → logprob: -8.258523941040039
    6. 'nd' → logprob: -9.258523941040039
    7. 'x' → logprob: -10.008523941040039
    8. '_' → logprob: -11.383523941040039
    9. 'ount' → logprob: -11.508523941040039
    10. ']' → logprob: -11.508523941040039

Token 92: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0690196305513382
    2. '-' → logprob: -2.9440195560455322
    3. ' -' → logprob: -4.944019794464111
    4. ']==' → logprob: -5.444019794464111
    5. ']%' → logprob: -6.444019794464111
    6. ' ]' → logprob: -7.944019794464111
    7. ']>' → logprob: -8.319019317626953
    8. '   ' → logprob: -8.819019317626953
    9. ']>=' → logprob: -9.819019317626953
    10. '%' → logprob: -10.194019317626953

Token 93: ' %' (ID: 1851)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5261808633804321
    2. '==' → logprob: -1.5261808633804321
    3. ' >' → logprob: -2.5261807441711426
    4. '>' → logprob: -3.1511807441711426
    5. ' ' → logprob: -3.6511807441711426
    6. ' +' → logprob: -4.276180744171143
    7. '%' → logprob: -4.776180744171143
    8. '+' → logprob: -4.776180744171143
    9. ' %' → logprob: -5.276180744171143
    10. ' <' → logprob: -6.401180744171143

Token 94: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0015230757417157292
    2. ' ' → logprob: -6.501523017883301
    3. '300' → logprob: -11.8765230178833
    4. '```' → logprob: -12.0015230178833
    5. '202' → logprob: -13.5015230178833
    6. '   ' → logprob: -13.6265230178833
    7. '  ' → logprob: -13.8765230178833
    8. '200' → logprob: -14.0015230178833
    9. ' ' → logprob: -14.6890230178833
    10. '
' → logprob: -14.8765230178833

Token 95: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.729906196298543e-06
    2. ' ' → logprob: -11.625009536743164
    3. '300' → logprob: -14.625009536743164
    4. '3' → logprob: -16.750009536743164
    5. '```' → logprob: -16.875009536743164
    6. '200' → logprob: -17.250009536743164
    7. '   ' → logprob: -17.250009536743164
    8. '  ' → logprob: -17.625009536743164
    9. '10' → logprob: -17.687509536743164
    10. '２' → logprob: -18.437509536743164

Token 96: ' ==' (ID: 951)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09646734595298767
    2. ' )' → logprob: -2.5964672565460205
    3. ' ==' → logprob: -4.3464674949646
    4. '==' → logprob: -5.7214674949646
    5. ')==' → logprob: -7.5964674949646
    6. ' !=' → logprob: -8.346467018127441
    7. ')
' → logprob: -8.596467018127441
    8. ' )
' → logprob: -9.471467018127441
    9. '))' → logprob: -9.846467018127441
    10. ' ' → logprob: -10.346467018127441

Token 97: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03604092821478844
    2. '1' → logprob: -3.411041021347046
    3. ' ' → logprob: -6.036040782928467
    4. '   ' → logprob: -14.661041259765625
    5. 'flip' → logprob: -15.411041259765625
    6. ')' → logprob: -16.098541259765625
    7. '```' → logprob: -16.286041259765625
    8. '  ' → logprob: -16.286041259765625
    9. '<|end|>' → logprob: -17.161041259765625
    10. '۰' → logprob: -17.286041259765625

Token 98: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1426837295293808
    2. '1' → logprob: -2.017683744430542
    3. ' ' → logprob: -11.767683982849121
    4. 'flip' → logprob: -14.392683982849121
    5. '```' → logprob: -17.080183029174805
    6. '   ' → logprob: -17.142683029174805
    7. '۰' → logprob: -17.767683029174805
    8. 'fl' → logprob: -18.080183029174805
    9. 's' → logprob: -18.330183029174805
    10. ' ' → logprob: -18.330183029174805

Token 99: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005811125040054321
    2. ' )' → logprob: -5.7558112144470215
    3. ')
' → logprob: -6.0058112144470215
    4. '       ' → logprob: -9.255810737609863
    5. ' )
' → logprob: -10.505810737609863
    6. '):' → logprob: -11.255810737609863
    7. ')
' → logprob: -11.755810737609863
    8. '))' → logprob: -11.880810737609863
    9. '   ' → logprob: -12.505810737609863
    10. ')

' → logprob: -13.130810737609863

Token 100: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.048473916947841644
    2. '<|end|>' → logprob: -3.298473834991455
    3. ' ' → logprob: -6.048473834991455
    4. ')' → logprob: -6.548473834991455
    5. '        
' → logprob: -6.548473834991455
    6. '           ' → logprob: -6.798473834991455
    7. '   ' → logprob: -7.423473834991455
    8. '<|end|>' → logprob: -7.423473834991455
    9. '        ' → logprob: -7.923473834991455
    10. ' if' → logprob: -8.048474311828613

Token 101: ' min' (ID: 1349)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9243682026863098
    2. '       ' → logprob: -1.299368143081665
    3. '           ' → logprob: -2.049368143081665
    4. ' ' → logprob: -2.924368143081665
    5. 'if' → logprob: -3.174368143081665
    6. '<|end|>' → logprob: -3.424368143081665
    7. ' min' → logprob: -4.299368381500244
    8. '        ' → logprob: -4.549368381500244
    9. '   ' → logprob: -4.799368381500244
    10. '               ' → logprob: -4.924368381500244

Token 102: '_steps' (ID: 52120)
  Prédit: '_steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_steps' → logprob: -7.302704761968926e-05
    2. '_' → logprob: -9.875073432922363
    3. '<|end|>' → logprob: -12.250073432922363
    4. '_s' → logprob: -12.375073432922363
    5. '_step' → logprob: -12.500073432922363
    6. 'steps' → logprob: -13.000073432922363
    7. '```' → logprob: -13.250073432922363
    8. 'Steps' → logprob: -13.875073432922363
    9. '_counts' → logprob: -14.125073432922363
    10. ' _' → logprob: -14.375073432922363

Token 103: '[col' (ID: 75852)
  Prédit: '[col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[col' → logprob: -0.005250125657767057
    2. '[' → logprob: -5.380249977111816
    3. ' =' → logprob: -8.130249977111816
    4. ' [' → logprob: -8.880249977111816
    5. ' col' → logprob: -9.755249977111816
    6. '<|end|>' → logprob: -10.380249977111816
    7. ' ' → logprob: -10.630249977111816
    8. '[:]' → logprob: -11.005249977111816
    9. '=' → logprob: -12.130249977111816
    10. ' =[' → logprob: -12.130249977111816

Token 104: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.05443757399916649
    2. 'index' → logprob: -3.0544376373291016
    3. 'ex' → logprob: -6.179437637329102
    4. 'nd' → logprob: -6.304437637329102
    5. 'dex' → logprob: -6.554437637329102
    6. 'Index' → logprob: -8.929437637329102
    7. '```' → logprob: -9.554437637329102
    8. 'ount' → logprob: -9.804437637329102
    9. 'n' → logprob: -10.304437637329102
    10. '_count' → logprob: -10.304437637329102

Token 105: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05484425649046898
    2. ' ]' → logprob: -3.0548441410064697
    3. ' +=' → logprob: -6.179844379425049
    4. ']+=' → logprob: -6.429844379425049
    5. ' =' → logprob: -6.554844379425049
    6. '=' → logprob: -7.679844379425049
    7. '+' → logprob: -8.80484390258789
    8. '+=' → logprob: -9.17984390258789
    9. ']=' → logprob: -9.30484390258789
    10. ' ' → logprob: -9.42984390258789

Token 106: ' +=' (ID: 2757)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17829293012619019
    2. ' +=' → logprob: -2.428292989730835
    3. '=' → logprob: -2.678292989730835
    4. '+=' → logprob: -5.178292751312256
    5. ' ' → logprob: -7.678292751312256
    6. '<|end|>' → logprob: -9.053293228149414
    7. '+' → logprob: -9.803293228149414
    8. '   ' → logprob: -10.928293228149414
    9. ' +' → logprob: -10.928293228149414
    10. ' |=' → logprob: -11.053293228149414

Token 107: ' flip' (ID: 29130)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03887556493282318
    2. ' ' → logprob: -4.163875579833984
    3. 'flip' → logprob: -4.163875579833984
    4. '0' → logprob: -6.288875579833984
    5. ' flip' → logprob: -6.288875579833984
    6. 'int' → logprob: -6.538875579833984
    7. 'not' → logprob: -7.038875579833984
    8. ' not' → logprob: -7.788875579833984
    9. ' int' → logprob: -8.288875579833984
    10. '   ' → logprob: -9.288875579833984

Token 108: '_needed' (ID: 148421)
  Prédit: '_needed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_needed' → logprob: -0.0005844878032803535
    2. 'ed' → logprob: -7.500584602355957
    3. 'needed' → logprob: -10.625584602355957
    4. 's' → logprob: -13.125584602355957
    5. ' ' → logprob: -14.125584602355957
    6. 'd' → logprob: -14.250584602355957
    7. 'Needed' → logprob: -14.375584602355957
    8. '```' → logprob: -14.500584602355957
    9. '_required' → logprob: -14.625584602355957
    10. 'ned' → logprob: -14.875584602355957

Token 109: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 110: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 111: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6571075320243835
    2. 'if' (adapté à ' if') → logprob: -1.1571075916290283
    3. 'min' → logprob: -3.0321075916290283
    4. '       ' → logprob: -3.5321075916290283
    5. '   ' → logprob: -4.032107353210449
    6. 'for' → logprob: -4.657107353210449
    7. ' for' → logprob: -4.657107353210449
    8. ' min' → logprob: -4.907107353210449
    9. ')' → logprob: -5.032107353210449
    10. ' ' → logprob: -5.032107353210449

Token 112: ' col' (ID: 996)
  Prédit: ' col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.03737302124500275
    2. 'col' → logprob: -4.037373065948486
    3. ' flip' → logprob: -4.662373065948486
    4. ' row' → logprob: -5.537373065948486
    5. ' not' → logprob: -5.912373065948486
    6. ' min' → logprob: -7.037373065948486
    7. 'flip' → logprob: -7.037373065948486
    8. ' is' → logprob: -7.787373065948486
    9. 'row' → logprob: -8.537372589111328
    10. ' ' → logprob: -8.662372589111328

Token 113: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -1.0802738870552275e-05
    2. 'index' → logprob: -13.00001049041748
    3. '_count' → logprob: -13.00001049041748
    4. '_idx' → logprob: -13.12501049041748
    5. '```' → logprob: -13.62501049041748
    6. '_' → logprob: -14.00001049041748
    7. '_ind' → logprob: -15.00001049041748
    8. ' _' → logprob: -15.37501049041748
    9. 'Index' → logprob: -15.87501049041748
    10. '==' → logprob: -15.87501049041748

Token 114: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.13612408936023712
    2. '>' → logprob: -2.1361241340637207
    3. ' ' → logprob: -5.511124134063721
    4. ' ==' → logprob: -6.511124134063721
    5. ' <' → logprob: -6.636124134063721
    6. ' and' → logprob: -7.386124134063721
    7. '==' → logprob: -7.386124134063721
    8. 'and' → logprob: -8.261123657226562
    9. ' ' → logprob: -8.261123657226562
    10. ' !=' → logprob: -9.011123657226562

Token 115: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2523450553417206
    2. ' ' → logprob: -1.502345085144043
    3. '=' → logprob: -7.877345085144043
    4. '>' → logprob: -11.502345085144043
    5. '<|end|>' → logprob: -11.877345085144043
    6. '   ' → logprob: -12.502345085144043
    7. '  ' → logprob: -12.627345085144043
    8. '1' → logprob: -13.377345085144043
    9. ' ' → logprob: -13.564845085144043
    10. '_' → logprob: -14.064845085144043

Token 116: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002314303710591048
    2. ' ' → logprob: -8.375231742858887
    3. '=' → logprob: -15.375231742858887
    4. '1' → logprob: -15.500231742858887
    5. '   ' → logprob: -15.500231742858887
    6. '  ' → logprob: -17.12523078918457
    7. 'col' → logprob: -18.00023078918457
    8. '<|end|>' → logprob: -18.18773078918457
    9. '     ' → logprob: -18.25023078918457
    10. '[' → logprob: -18.25023078918457

Token 117: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.078287772834301
    2. '           ' → logprob: -2.8282878398895264
    3. ':' → logprob: -4.328287601470947
    4. ':
' → logprob: -6.328287601470947
    5. '       ' → logprob: -7.203287601470947
    6. 'and' → logprob: -8.078288078308105
    7. '   ' → logprob: -10.328288078308105
    8. '<|end|>' → logprob: -10.703288078308105
    9. ' :' → logprob: -11.203288078308105
    10. ',' → logprob: -11.328288078308105

Token 118: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.31711167097091675
    2. ' min' → logprob: -1.3171117305755615
    3. ' if' → logprob: -6.442111492156982
    4. 'min' → logprob: -6.817111492156982
    5. '   ' → logprob: -7.192111492156982
    6. '               ' → logprob: -9.31711196899414
    7. '       ' → logprob: -9.56711196899414
    8. ' ' → logprob: -9.56711196899414
    9. '```' → logprob: -9.94211196899414
    10. '	min' → logprob: -10.56711196899414

Token 119: ' prev' (ID: 10258)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.2527381479740143
    2. 'min' → logprob: -1.502738118171692
    3. '           ' → logprob: -7.502737998962402
    4. '               ' → logprob: -8.627737998962402
    5. '   ' → logprob: -10.752737998962402
    6. '	min' → logprob: -11.002737998962402
    7. ' if' → logprob: -11.252737998962402
    8. ' ' → logprob: -12.002737998962402
    9. 'if' → logprob: -12.502737998962402
    10. ',min' → logprob: -12.627737998962402

Token 120: '_flip' (ID: 150878)
  Prédit: '_min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.050642773509025574
    2. 'min' → logprob: -4.175642967224121
    3. '_steps' → logprob: -4.175642967224121
    4. '_col' → logprob: -5.425642967224121
    5. ' =' → logprob: -5.800642967224121
    6. '_step' → logprob: -6.175642967224121
    7. '_max' → logprob: -6.300642967224121
    8. '_cost' → logprob: -6.675642967224121
    9. '_token' → logprob: -6.675642967224121
    10. ' min' → logprob: -7.425642967224121

Token 121: '_needed' (ID: 148421)
  Prédit: '_needed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_needed' → logprob: -0.7419865727424622
    2. 's' → logprob: -1.6169865131378174
    3. ' =' → logprob: -1.6169865131378174
    4. 'ed' → logprob: -2.3669865131378174
    5. '_steps' → logprob: -4.4919867515563965
    6. '_count' → logprob: -5.1169867515563965
    7. '=' → logprob: -5.2419867515563965
    8. '_min' → logprob: -5.9919867515563965
    9. 'es' → logprob: -6.2419867515563965
    10. '_cost' → logprob: -6.4919867515563965

Token 122: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1802648901939392
    2. '=' → logprob: -1.805264949798584
    3. '           ' → logprob: -7.930264949798584
    4. '|' → logprob: -9.555264472961426
    5. '=min' → logprob: -10.180264472961426
    6. '       ' → logprob: -11.055264472961426
    7. ' |=' → logprob: -11.555264472961426
    8. '   ' → logprob: -11.680264472961426
    9. 'min' → logprob: -12.555264472961426
    10. '_min' → logprob: -13.555264472961426

Token 123: ' is' (ID: 382)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.703690230846405
    2. 'flip' → logprob: -1.3286902904510498
    3. ' min' → logprob: -1.9536902904510498
    4. ' flip' → logprob: -2.70369029045105
    5. '(min' → logprob: -4.203690052032471
    6. 'is' → logprob: -4.828690052032471
    7. ' (' → logprob: -6.328690052032471
    8. ' is' → logprob: -6.578690052032471
    9. '       ' → logprob: -6.828690052032471
    10. 'row' → logprob: -7.078690052032471

Token 124: '_target' (ID: 24705)
  Prédit: '_target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_target' → logprob: -0.0004462812503334135
    2. 'target' → logprob: -7.750446319580078
    3. '_' → logprob: -12.250446319580078
    4. '_flip' → logprob: -12.875446319580078
    5. 'Target' → logprob: -13.750446319580078
    6. 'flip' → logprob: -13.875446319580078
    7. '-target' → logprob: -14.125446319580078
    8. ' target' → logprob: -14.250446319580078
    9. 'col' → logprob: -14.375446319580078
    10. '_t' → logprob: -14.875446319580078

Token 125: ' ^' (ID: 7602)
  Prédit: ' ^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ^' → logprob: -0.08900205790996552
    2. '^' → logprob: -2.4640021324157715
    3. '!=' → logprob: -11.339001655578613
    4. ' !=' → logprob: -11.339001655578613
    5. '^(' → logprob: -11.964001655578613
    6. ' ^=' → logprob: -12.214001655578613
    7. ' ' → logprob: -12.589001655578613
    8. ' and' → logprob: -12.839001655578613
    9. '=' → logprob: -12.839001655578613
    10. ' ' → logprob: -12.964001655578613

Token 126: ' (' (ID: 350)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.3152211606502533
    2. ' (' → logprob: -1.3152211904525757
    3. '(prev' → logprob: -6.815221309661865
    4. '((' → logprob: -7.315221309661865
    5. ' ((' → logprob: -9.440220832824707
    6. '           ' → logprob: -9.440220832824707
    7. '       ' → logprob: -11.190220832824707
    8. '(next' → logprob: -12.690220832824707
    9. '(row' → logprob: -12.815220832824707
    10. ' ' → logprob: -13.190220832824707

Token 127: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.3038696348667145
    2. '(min' → logprob: -1.428869605064392
    3. ' min' → logprob: -3.9288697242736816
    4. ' (' → logprob: -6.178869724273682
    5. '((' → logprob: -7.428869724273682
    6. '[min' → logprob: -9.678869247436523
    7. ' ((' → logprob: -10.303869247436523
    8. '(' → logprob: -12.053869247436523
    9. '   ' → logprob: -12.553869247436523
    10. ' ' → logprob: -12.928869247436523

Token 128: '_steps' (ID: 52120)
  Prédit: '_steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_steps' → logprob: -1.8670179997570813e-05
    2. 'steps' → logprob: -11.000019073486328
    3. 'Steps' → logprob: -14.625019073486328
    4. 'min' → logprob: -15.000019073486328
    5. '(min' → logprob: -15.125019073486328
    6. '```' → logprob: -15.500019073486328
    7. '(_' → logprob: -16.250019073486328
    8. '(' → logprob: -16.250019073486328
    9. '
' → logprob: -16.500019073486328
    10. ' steps' → logprob: -17.375019073486328

Token 129: '[col' (ID: 75852)
  Prédit: '[col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[col' → logprob: -8.137130498653278e-05
    2. '[' → logprob: -9.500081062316895
    3. ' [' → logprob: -13.000081062316895
    4. '[
' → logprob: -13.500081062316895
    5. '

' → logprob: -14.250081062316895
    6. '```' → logprob: -14.625081062316895
    7. '\[' → logprob: -15.000081062316895
    8. '[column' → logprob: -15.625081062316895
    9. '
' → logprob: -15.875081062316895
    10. ')[' → logprob: -16.12508201599121

Token 130: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0005925900186412036
    2. 'index' → logprob: -8.375592231750488
    3. '_count' → logprob: -8.625592231750488
    4. '[col' → logprob: -9.500592231750488
    5. '-' → logprob: -10.000592231750488
    6. '[index' → logprob: -11.750592231750488
    7. 'dex' → logprob: -11.750592231750488
    8. '   ' → logprob: -11.875592231750488
    9. '][' → logprob: -12.625592231750488
    10. 'Index' → logprob: -12.625592231750488

Token 131: ' -' (ID: 533)
  Prédit: '[col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[col' → logprob: -7.85104202805087e-05
    2. '[' → logprob: -10.625078201293945
    3. '```' → logprob: -11.125078201293945
    4. ' [' → logprob: -11.875078201293945
    5. '
' → logprob: -12.250078201293945
    6. '-' → logprob: -12.375078201293945
    7. '[c' → logprob: -12.375078201293945
    8. '[-' → logprob: -13.000078201293945
    9. 'col' → logprob: -13.000078201293945
    10. '   ' → logprob: -13.000078201293945

Token 132: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00038336371653713286
    2. ' ' → logprob: -7.875383377075195
    3. ']' → logprob: -13.125383377075195
    4. '   ' → logprob: -14.125383377075195
    5. '```' → logprob: -15.375383377075195
    6. '
' → logprob: -16.375383377075195
    7. '-' → logprob: -16.500383377075195
    8. '  ' → logprob: -16.500383377075195
    9. '+' → logprob: -17.062883377075195
    10. '%' → logprob: -17.250383377075195

Token 133: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00040004486800171435
    2. ' ' → logprob: -7.875400066375732
    3. '0' → logprob: -11.625399589538574
    4. '%' → logprob: -12.250399589538574
    5. '   ' → logprob: -13.125399589538574
    6. '```' → logprob: -13.875399589538574
    7. '
' → logprob: -14.000399589538574
    8. '2' → logprob: -14.250399589538574
    9. '-' → logprob: -14.687899589538574
    10. '  ' → logprob: -15.125399589538574

Token 134: ']' (ID: 60)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.3850647211074829
    2. '%' → logprob: -1.510064721107483
    3. ']' → logprob: -2.3850646018981934
    4. '```' → logprob: -6.510064601898193
    5. ')' → logprob: -6.760064601898193
    6. ' ' → logprob: -7.010064601898193
    7. ']%' → logprob: -7.135064601898193
    8. '   ' → logprob: -7.385064601898193
    9. '+' → logprob: -7.510064601898193
    10. '[' → logprob: -8.635065078735352

Token 135: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.22569841146469116
    2. ' %' → logprob: -1.600698471069336
    3. '```' → logprob: -9.975698471069336
    4. '
' → logprob: -10.100698471069336
    5. ' ' → logprob: -10.225698471069336
    6. '+' → logprob: -10.350698471069336
    7. '==' → logprob: -10.475698471069336
    8. '[' → logprob: -10.975698471069336
    9. ' ==' → logprob: -11.475698471069336
    10. '>' → logprob: -11.475698471069336

Token 136: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0141702089458704
    2. ' ' → logprob: -4.264170169830322
    3. '           ' → logprob: -12.88917064666748
    4. '```' → logprob: -14.01417064666748
    5. '               ' → logprob: -14.13917064666748
    6. '   ' → logprob: -14.26417064666748
    7. '         ' → logprob: -15.45167064666748
    8. '       ' → logprob: -15.70167064666748
    9. '             ' → logprob: -15.70167064666748
    10. '  ' → logprob: -15.70167064666748

Token 137: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001254693343071267
    2. ' ' → logprob: -9.000125885009766
    3. '   ' → logprob: -14.687625885009766
    4. '```' → logprob: -14.750125885009766
    5. '
' → logprob: -15.062625885009766
    6. '           ' → logprob: -16.125125885009766
    7. '

' → logprob: -16.687625885009766
    8. '       ' → logprob: -16.687625885009766
    9. '  ' → logprob: -16.875125885009766
    10. '=' → logprob: -16.875125885009766

Token 138: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4366568922996521
    2. '==' → logprob: -1.0616569519042969
    3. ' !=' → logprob: -5.061656951904297
    4. '!=' → logprob: -6.811656951904297
    5. ')' → logprob: -8.561656951904297
    6. ' ' → logprob: -8.936656951904297
    7. '0' → logprob: -9.311656951904297
    8. ')==' → logprob: -10.936656951904297
    9. '```' → logprob: -11.311656951904297
    10. ' ' → logprob: -11.811656951904297

Token 139: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04311566427350044
    2. ' ' → logprob: -3.2931156158447266
    3. '1' → logprob: -5.293115615844727
    4. '==' → logprob: -11.418115615844727
    5. '   ' → logprob: -11.980615615844727
    6. '=' → logprob: -12.418115615844727
    7. '
' → logprob: -12.730615615844727
    8. '```' → logprob: -13.293115615844727
    9. ' ' → logprob: -13.730615615844727
    10. ' ==' → logprob: -14.168115615844727

Token 140: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008341663633473217
    2. '1' → logprob: -7.375833988189697
    3. ' ' → logprob: -8.500834465026855
    4. '
' → logprob: -13.500834465026855
    5. '==' → logprob: -14.063334465026855
    6. '```' → logprob: -14.625834465026855
    7. '=' → logprob: -15.000834465026855
    8. '   ' → logprob: -15.125834465026855
    9. '

' → logprob: -15.750834465026855
    10. ' ' → logprob: -16.18833351135254

Token 141: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.43578973412513733
    2. ')' → logprob: -1.060789704322815
    3. '       ' → logprob: -5.060789585113525
    4. ')
' → logprob: -7.435789585113525
    5. ' )
' → logprob: -9.935790061950684
    6. '           ' → logprob: -10.185790061950684
    7. ')

' → logprob: -11.185790061950684
    8. ' )' → logprob: -11.435790061950684
    9. '):
' → logprob: -11.810790061950684
    10. '   ' → logprob: -13.060790061950684

Token 142: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6001161932945251
    2. '       ' → logprob: -0.9751161932945251
    3. '<|end|>' → logprob: -2.72511625289917
    4. ')' → logprob: -5.22511625289917
    5. ',' → logprob: -7.47511625289917
    6. '
' → logprob: -7.60011625289917
    7. '<|end|>' → logprob: -7.72511625289917
    8. 'min' → logprob: -8.100115776062012
    9. ' if' → logprob: -8.100115776062012
    10. ' and' → logprob: -8.475115776062012

Token 143: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.01144684012979269
    2. '           ' → logprob: -5.136446952819824
    3. ' min' → logprob: -5.261446952819824
    4. 'if' → logprob: -8.261446952819824
    5. ' if' → logprob: -11.386446952819824
    6. '       ' → logprob: -11.386446952819824
    7. '   ' → logprob: -11.636446952819824
    8. '               ' → logprob: -12.386446952819824
    9. 'prev' → logprob: -12.761446952819824
    10. 'flip' → logprob: -12.886446952819824

Token 144: '_steps' (ID: 52120)
  Prédit: '_steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_steps' → logprob: -3.6550729419104755e-05
    2. 'steps' → logprob: -10.500036239624023
    3. '           ' → logprob: -12.625036239624023
    4. '```' → logprob: -12.875036239624023
    5. '       ' → logprob: -13.250036239624023
    6. '_' → logprob: -14.875036239624023
    7. 'if' → logprob: -15.000036239624023
    8. 'Steps' → logprob: -15.500036239624023
    9. '_step' → logprob: -15.500036239624023
    10. '   ' → logprob: -16.875036239624023

Token 145: '[col' (ID: 75852)
  Prédit: '[col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[col' → logprob: -5.991464786347933e-05
    2. '[min' → logprob: -10.000060081481934
    3. ' [' → logprob: -12.750060081481934
    4. '[' → logprob: -13.375060081481934
    5. ' =' → logprob: -13.500060081481934
    6. '```' → logprob: -13.750060081481934
    7. '[c' → logprob: -13.875060081481934
    8. 'col' → logprob: -14.000060081481934
    9. '=' → logprob: -14.250060081481934
    10. ' col' → logprob: -14.250060081481934

Token 146: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0009510025265626609
    2. 'index' → logprob: -7.750950813293457
    3. '_count' → logprob: -7.875950813293457
    4. '       ' → logprob: -10.125950813293457
    5. 'Index' → logprob: -11.125950813293457
    6. 's' → logprob: -11.125950813293457
    7. '   ' → logprob: -11.250950813293457
    8. '-' → logprob: -11.375950813293457
    9. ']' → logprob: -11.750950813293457
    10. '```' → logprob: -11.750950813293457

Token 147: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.48283228278160095
    2. ' =' → logprob: -0.9828323125839233
    3. '=min' → logprob: -4.857832431793213
    4. 'min' → logprob: -8.107831954956055
    5. ']' → logprob: -8.357831954956055
    6. ']=' → logprob: -8.607831954956055
    7. ' min' → logprob: -9.857831954956055
    8. '+=' → logprob: -9.982831954956055
    9. '   ' → logprob: -10.732831954956055
    10. ',' → logprob: -10.982831954956055

Token 148: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.031086813658475876
    2. ' =' → logprob: -3.5310869216918945
    3. '=min' → logprob: -6.6560869216918945
    4. 'min' → logprob: -10.281086921691895
    5. '+=' → logprob: -12.156086921691895
    6. ' min' → logprob: -12.281086921691895
    7. '   ' → logprob: -13.656086921691895
    8. '>' → logprob: -14.406086921691895
    9. ',min' → logprob: -14.531086921691895
    10. '	min' → logprob: -14.781086921691895

Token 149: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.004080420359969139
    2. ' min' → logprob: -5.504080295562744
    3. 'max' → logprob: -14.004080772399902
    4. '           ' → logprob: -15.004080772399902
    5. '	min' → logprob: -15.004080772399902
    6. '   ' → logprob: -15.129080772399902
    7. '               ' → logprob: -15.379080772399902
    8. '(min' → logprob: -17.629079818725586
    9. '[min' → logprob: -18.504079818725586
    10. ' ' → logprob: -19.004079818725586

Token 150: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.02569456957280636
    2. '(
' → logprob: -3.7756946086883545
    3. '(' → logprob: -6.275694370269775
    4. 'min' → logprob: -7.525694370269775
    5. '(

' → logprob: -11.150694847106934
    6. '(
' → logprob: -13.025694847106934
    7. '[min' → logprob: -13.150694847106934
    8. '(max' → logprob: -13.525694847106934
    9. '(m' → logprob: -13.775694847106934
    10. ' min' → logprob: -14.275694847106934

Token 151: '_steps' (ID: 52120)
  Prédit: '_steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_steps' → logprob: -0.0015704454854130745
    2. 'steps' → logprob: -6.501570224761963
    3. '(min' → logprob: -10.376570701599121
    4. 'min' → logprob: -10.751570701599121
    5. '(' → logprob: -11.626570701599121
    6. 'Steps' → logprob: -12.876570701599121
    7. 's' → logprob: -13.251570701599121
    8. '```' → logprob: -14.126570701599121
    9. '(
' → logprob: -15.126570701599121
    10. '[min' → logprob: -15.251570701599121

Token 152: '[col' (ID: 75852)
  Prédit: '[col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[col' → logprob: -0.04867343604564667
    2. '[min' → logprob: -3.048673391342163
    3. '[
' → logprob: -9.548673629760742
    4. '```' → logprob: -12.173673629760742
    5. '(col' → logprob: -12.798673629760742
    6. 'min' → logprob: -12.923673629760742
    7. '   ' → logprob: -13.798673629760742
    8. '[' → logprob: -14.048673629760742
    9. '(min' → logprob: -14.673673629760742
    10. 'col' → logprob: -14.798673629760742

Token 153: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0008182040764950216
    2. '_count' → logprob: -7.250818252563477
    3. 'index' → logprob: -10.000818252563477
    4. '-' → logprob: -10.250818252563477
    5. 'x' → logprob: -11.625818252563477
    6. '   ' → logprob: -13.125818252563477
    7. '```' → logprob: -13.125818252563477
    8. 'Index' → logprob: -13.250818252563477
    9. '_steps' → logprob: -13.250818252563477
    10. 'dex' → logprob: -13.250818252563477

Token 154: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02791764587163925
    2. ' ,' → logprob: -3.6529176235198975
    3. ',min' → logprob: -7.152917861938477
    4. ',col' → logprob: -8.027917861938477
    5. '],' → logprob: -8.527917861938477
    6. '[col' → logprob: -8.652917861938477
    7. ',
' → logprob: -9.402917861938477
    8. '[min' → logprob: -10.902917861938477
    9. '       ' → logprob: -11.152917861938477
    10. '   ' → logprob: -12.527917861938477

Token 155: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.05556632950901985
    2. ' min' → logprob: -3.3055663108825684
    3. '           ' → logprob: -4.555566310882568
    4. 'prev' → logprob: -6.055566310882568
    5. '               ' → logprob: -6.930566310882568
    6. '   ' → logprob: -7.305566310882568
    7. '            ' → logprob: -7.930566310882568
    8. '          ' → logprob: -8.055566787719727
    9. ' prev' → logprob: -8.055566787719727
    10. '             ' → logprob: -8.180566787719727

Token 156: '_steps' (ID: 52120)
  Prédit: '_steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_steps' → logprob: -1.9361264946837764e-07
    2. 'steps' → logprob: -16.5
    3. 'Steps' → logprob: -19.0
    4. '(_' → logprob: -20.5
    5. '_' → logprob: -20.75
    6. '_step' → logprob: -21.0
    7. '```' → logprob: -21.375
    8. ' steps' → logprob: -21.5
    9. '_
' → logprob: -21.75
    10. ' Steps' → logprob: -22.0

Token 157: '[col' (ID: 75852)
  Prédit: '[col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[col' → logprob: -1.0280383548888494e-06
    2. ' [' → logprob: -14.500000953674316
    3. ')[' → logprob: -16.125001907348633
    4. '[' → logprob: -16.500001907348633
    5. '[
' → logprob: -17.125001907348633
    6. '[column' → logprob: -17.375001907348633
    7. ' ' → logprob: -17.375001907348633
    8. ' col' → logprob: -17.500001907348633
    9. '[row' → logprob: -17.500001907348633
    10. '
' → logprob: -17.625001907348633

Token 158: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0009955333080142736
    2. '_count' → logprob: -7.250995635986328
    3. 'x' → logprob: -9.125995635986328
    4. 'index' → logprob: -9.250995635986328
    5. 'dex' → logprob: -10.750995635986328
    6. '-' → logprob: -11.125995635986328
    7. 's' → logprob: -11.625995635986328
    8. '_col' → logprob: -11.625995635986328
    9. '_steps' → logprob: -12.625995635986328
    10. 'col' → logprob: -12.625995635986328

Token 159: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07918785512447357
    2. ' -' → logprob: -2.5791878700256348
    3. '[col' → logprob: -8.579187393188477
    4. ' col' → logprob: -9.704187393188477
    5. ' ' → logprob: -11.329187393188477
    6. '   ' → logprob: -11.579187393188477
    7. 'col' → logprob: -11.704187393188477
    8. '-col' → logprob: -11.829187393188477
    9. '_col' → logprob: -12.454187393188477
    10. ' ' → logprob: -13.079187393188477

Token 160: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.629921436891891e-05
    2. ' ' → logprob: -10.75002670288086
    3. 'col' → logprob: -12.62502670288086
    4. '   ' → logprob: -14.37502670288086
    5. '```' → logprob: -14.75002670288086
    6. ' col' → logprob: -15.00002670288086
    7. '
' → logprob: -16.00002670288086
    8. 'index' → logprob: -17.00002670288086
    9. '       ' → logprob: -17.37502670288086
    10. '  ' → logprob: -17.87502670288086

Token 161: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012689977302215993
    2. ' ' → logprob: -9.000126838684082
    3. '```' → logprob: -13.625126838684082
    4. '   ' → logprob: -14.000126838684082
    5. '  ' → logprob: -15.500126838684082
    6. ')' → logprob: -15.562626838684082
    7. '
' → logprob: -15.750126838684082
    8. 'col' → logprob: -16.2501277923584
    9. 'index' → logprob: -16.3751277923584
    10. '0' → logprob: -16.3751277923584

Token 162: ']' (ID: 60)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.09233610332012177
    2. ']' → logprob: -2.4673361778259277
    3. ')' → logprob: -6.467336177825928
    4. '])
' → logprob: -6.967336177825928
    5. ']+' → logprob: -7.592336177825928
    6. ' ])' → logprob: -8.09233570098877
    7. ' ]' → logprob: -10.71733570098877
    8. '+' → logprob: -11.46733570098877
    9. ' )' → logprob: -11.46733570098877
    10. '])

' → logprob: -11.59233570098877

Token 163: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.37623339891433716
    2. ' +' → logprob: -1.7512333393096924
    3. '+' → logprob: -2.0012333393096924
    4. ' )' → logprob: -6.0012335777282715
    5. ')
' → logprob: -6.3762335777282715
    6. '+)' → logprob: -8.126233100891113
    7. ')+' → logprob: -9.626233100891113
    8. '<|end|>' → logprob: -9.751233100891113
    9. '   ' → logprob: -10.126233100891113
    10. '```' → logprob: -10.751233100891113

Token 164: ' prev' (ID: 10258)
  Prédit: 'flip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flip' → logprob: -0.4682016670703888
    2. ' flip' → logprob: -1.5932016372680664
    3. '1' → logprob: -1.8432016372680664
    4. ' ' → logprob: -4.468201637268066
    5. '   ' → logprob: -7.718201637268066
    6. ' (' → logprob: -9.468201637268066
    7. 'prev' → logprob: -9.843201637268066
    8. '  ' → logprob: -9.968201637268066
    9. ' prev' → logprob: -10.593201637268066
    10. '_flip' → logprob: -10.843201637268066

Token 165: '_flip' (ID: 150878)
  Prédit: '_flip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flip' → logprob: -0.00013333676906768233
    2. 'flip' → logprob: -9.375133514404297
    3. ')' → logprob: -10.875133514404297
    4. '_' → logprob: -11.750133514404297
    5. '_fl' → logprob: -13.000133514404297
    6. '
' → logprob: -13.000133514404297
    7. '_step' → logprob: -13.125133514404297
    8. '_needed' → logprob: -13.250133514404297
    9. '_)' → logprob: -13.625133514404297
    10. ')_' → logprob: -13.750133514404297

Token 166: '_needed' (ID: 148421)
  Prédit: '_needed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_needed' → logprob: -2.534558552724775e-05
    2. 'needed' → logprob: -10.625025749206543
    3. 'ed' → logprob: -14.375025749206543
    4. '```' → logprob: -15.875025749206543
    5. '_required' → logprob: -16.125024795532227
    6. '-needed' → logprob: -17.000024795532227
    7. '_steps' → logprob: -17.000024795532227
    8. 'Needed' → logprob: -17.125024795532227
    9. 'eded' → logprob: -17.750024795532227
    10. ')' → logprob: -17.750024795532227

Token 167: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001126026691053994
    2. ')
' → logprob: -9.375112533569336
    3. ' )' → logprob: -10.875112533569336
    4. '       ' → logprob: -12.125112533569336
    5. '))' → logprob: -13.250112533569336
    6. '   ' → logprob: -13.750112533569336
    7. ')`' → logprob: -15.875112533569336
    8. '})' → logprob: -16.625112533569336
    9. '])' → logprob: -16.750112533569336
    10. '`)' → logprob: -16.875112533569336

Token 168: 'final' (ID: 17196)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08815457671880722
    2. '<|end|>' → logprob: -3.4631545543670654
    3. ')' → logprob: -4.0881547927856445
    4. '```' → logprob: -4.4631547927856445
    5. ' ' → logprob: -5.0881547927856445
    6. ']' → logprob: -5.5881547927856445
    7. '
' → logprob: -5.5881547927856445
    8. '\n' → logprob: -5.9631547927856445
    9. ' print' → logprob: -6.3381547927856445
    10. '[' → logprob: -6.7131547927856445

Token 169: '_result' (ID: 11623)
  Prédit: '_steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_steps' → logprob: -0.837235152721405
    2. '_' → logprob: -1.0872352123260498
    3. '_result' → logprob: -2.08723521232605
    4. '_answer' → logprob: -2.71223521232605
    5. '_min' → logprob: -3.33723521232605
    6. '_step' → logprob: -6.587234973907471
    7. '_ans' → logprob: -6.837234973907471
    8. '_flip' → logprob: -7.962234973907471
    9. '_count' → logprob: -8.087235450744629
    10. '_output' → logprob: -8.962235450744629

Token 170: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5245047211647034
    2. '=' → logprob: -0.8995047211647034
    3. '_' → logprob: -6.649504661560059
    4. ')' → logprob: -10.774504661560059
    5. '[' → logprob: -11.024504661560059
    6. ' ' → logprob: -11.399504661560059
    7. 's' → logprob: -11.774504661560059
    8. ',' → logprob: -12.024504661560059
    9. '()' → logprob: -12.524504661560059
    10. ']' → logprob: -12.524504661560059

Token 171: ' (' (ID: 350)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.05496195703744888
    2. ' min' → logprob: -2.929961919784546
    3. 'str' → logprob: -10.179962158203125
    4. '(min' → logprob: -11.554962158203125
    5. 'max' → logprob: -11.679962158203125
    6. '   ' → logprob: -11.679962158203125
    7. '[min' → logprob: -12.679962158203125
    8. ' ' → logprob: -13.054962158203125
    9. '  ' → logprob: -13.242462158203125
    10. '=min' → logprob: -13.617462158203125

Token 172: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.03779403120279312
    2. ' min' → logprob: -3.4127941131591797
    3. 'max' → logprob: -6.28779411315918
    4. 'col' → logprob: -7.28779411315918
    5. '300' → logprob: -7.66279411315918
    6. 'row' → logprob: -8.16279411315918
    7. 'sum' → logprob: -8.66279411315918
    8. '   ' → logprob: -8.78779411315918
    9. ' max' → logprob: -9.53779411315918
    10. ' col' → logprob: -9.53779411315918

Token 173: '_steps' (ID: 52120)
  Prédit: '_steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_steps' → logprob: -1.0445127372804563e-05
    2. 'steps' → logprob: -11.50001049041748
    3. 'max' → logprob: -16.750009536743164
    4. 'min' → logprob: -16.875009536743164
    5. '(min' → logprob: -17.750009536743164
    6. 'Steps' → logprob: -17.875009536743164
    7. '_' → logprob: -17.875009536743164
    8. '_rows' → logprob: -17.875009536743164
    9. '(max' → logprob: -18.250009536743164
    10. '_step' → logprob: -18.375009536743164

Token 174: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.02975858747959137
    2. '[col' → logprob: -3.5297586917877197
    3. ' [-' → logprob: -12.27975845336914
    4. '[' → logprob: -13.02975845336914
    5. '[column' → logprob: -15.40475845336914
    6. '[len' → logprob: -15.90475845336914
    7. '][-' → logprob: -15.90475845336914
    8. '   ' → logprob: -16.15475845336914
    9. '[:-' → logprob: -16.27975845336914
    10. '[end' → logprob: -16.27975845336914

Token 175: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6405310816480778e-05
    2. ' ' → logprob: -11.125016212463379
    3. '   ' → logprob: -15.125016212463379
    4. ']' → logprob: -15.250016212463379
    5. '0' → logprob: -15.500016212463379
    6. '])' → logprob: -15.625016212463379
    7. '2' → logprob: -15.750016212463379
    8. '-' → logprob: -16.437517166137695
    9. '  ' → logprob: -16.562517166137695
    10. '```' → logprob: -16.562517166137695

Token 176: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5940696597099304
    2. '])' → logprob: -1.7190697193145752
    3. ' if' → logprob: -2.219069719314575
    4. ' +' → logprob: -2.594069719314575
    5. '+' → logprob: -3.469069719314575
    6. ')' → logprob: -3.469069719314575
    7. 'if' → logprob: -4.844069480895996
    8. ']+' → logprob: -4.844069480895996
    9. ' )' → logprob: -6.469069480895996
    10. ',' → logprob: -6.594069480895996

Token 177: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7602984309196472
    2. ' if' → logprob: -1.385298490524292
    3. '+' → logprob: -2.010298490524292
    4. ')' → logprob: -2.135298490524292
    5. 'if' → logprob: -3.760298490524292
    6. ',' → logprob: -5.260298252105713
    7. ' )' → logprob: -7.010298252105713
    8. '>' → logprob: -8.760298728942871
    9. 'min' → logprob: -9.635298728942871
    10. ' ' → logprob: -9.635298728942871

Token 178: ' (' (ID: 350)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -1.077008605003357
    2. '(row' → logprob: -1.577008605003357
    3. '1' → logprob: -1.952008605003357
    4. 'min' → logprob: -1.952008605003357
    5. ' (' → logprob: -2.4520087242126465
    6. ' min' → logprob: -3.7020087242126465
    7. '(' → logprob: -4.5770087242126465
    8. 'row' → logprob: -5.0770087242126465
    9. 'flip' → logprob: -5.0770087242126465
    10. ' ' → logprob: -5.3270087242126465

Token 179: 'target' (ID: 10857)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6644216775894165
    2. 'min' → logprob: -1.4144216775894165
    3. 'row' → logprob: -1.9144216775894165
    4. '0' → logprob: -3.539421558380127
    5. '(row' → logprob: -3.664421558380127
    6. '(min' → logprob: -4.164421558380127
    7. 'col' → logprob: -4.664421558380127
    8. 'is' → logprob: -6.164421558380127
    9. '(' → logprob: -6.289421558380127
    10. 'target' → logprob: -6.414421558380127

Token 180: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -4.60414821645827e-06
    2. '!=' → logprob: -13.125004768371582
    3. 'char' → logprob: -14.000004768371582
    4. '==' → logprob: -14.500004768371582
    5. '_col' → logprob: -14.500004768371582
    6. '_str' → logprob: -15.625004768371582
    7. ' !=' → logprob: -16.125003814697266
    8. 'Char' → logprob: -16.375003814697266
    9. '_string' → logprob: -17.000003814697266
    10. '_' → logprob: -17.125003814697266

Token 181: ' ==' (ID: 951)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.6571485996246338
    2. ' !=' → logprob: -0.9071485996246338
    3. '==' → logprob: -2.657148599624634
    4. ' ==' → logprob: -5.032148361206055
    5. '!='' → logprob: -7.282148361206055
    6. '!="' → logprob: -8.657148361206055
    7. ' ' → logprob: -8.907148361206055
    8. '=='' → logprob: -9.407148361206055
    9. ']' → logprob: -10.157148361206055
    10. ')' → logprob: -10.282148361206055

Token 182: ' "#' (ID: 11351)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.32697346806526184
    2. 'row' → logprob: -2.2019734382629395
    3. ' '' → logprob: -2.2019734382629395
    4. ' row' → logprob: -3.0769734382629395
    5. ''A' → logprob: -5.9519734382629395
    6. '"' → logprob: -5.9519734382629395
    7. ''\' → logprob: -7.0769734382629395
    8. '')' → logprob: -7.3269734382629395
    9. ''r' → logprob: -7.4519734382629395
    10. ''a' → logprob: -7.7019734382629395

Token 183: '")' (ID: 1405)
  Prédit: '"))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"))' → logprob: -0.05761116370558739
    2. '")' → logprob: -3.4326112270355225
    3. '"' → logprob: -4.057610988616943
    4. '))' → logprob: -5.682610988616943
    5. ')' → logprob: -6.557610988616943
    6. ' "))' → logprob: -7.307610988616943
    7. ''))' → logprob: -7.932610988616943
    8. '"))
' → logprob: -8.807611465454102
    9. '"#' → logprob: -9.432611465454102
    10. '#' → logprob: -9.807611465454102

Token 184: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002462813863530755
    2. '*' → logprob: -7.877462863922119
    3. ' )' → logprob: -8.002462387084961
    4. ')%' → logprob: -8.252462387084961
    5. '%' → logprob: -8.377462387084961
    6. ')
' → logprob: -8.502462387084961
    7. '+' → logprob: -8.627462387084961
    8. ' *' → logprob: -8.627462387084961
    9. ' if' → logprob: -8.752462387084961
    10. ' +' → logprob: -9.002462387084961

Token 185: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0101078748703003
    2. ' (' → logprob: -1.8851078748703003
    3. 'min' → logprob: -2.01010799407959
    4. ' min' → logprob: -2.13510799407959
    5. '(min' → logprob: -2.51010799407959
    6. ' col' → logprob: -2.63510799407959
    7. ' ' → logprob: -3.51010799407959
    8. '(col' → logprob: -4.38510799407959
    9. 'col' → logprob: -4.76010799407959
    10. '(row' → logprob: -4.88510799407959

Token 186: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1604338884353638
    2. '(min' → logprob: -1.5354338884353638
    3. 'min' → logprob: -1.6604338884353638
    4. ' (' → logprob: -2.160433769226074
    5. ' min' → logprob: -3.285433769226074
    6. '(col' → logprob: -3.535433769226074
    7. ' col' → logprob: -3.660433769226074
    8. '(row' → logprob: -3.910433769226074
    9. 'col' → logprob: -4.410433769226074
    10. ' ' → logprob: -4.660433769226074

Token 187: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.872261317563243e-05
    2. ' )' → logprob: -10.125059127807617
    3. '))' → logprob: -12.000059127807617
    4. ')
' → logprob: -12.750059127807617
    5. ')%' → logprob: -13.375059127807617
    6. ')*' → logprob: -13.750059127807617
    7. '*' → logprob: -13.875059127807617
    8. '**' → logprob: -14.375059127807617
    9. ')))' → logprob: -14.375059127807617
    10. ')#' → logprob: -14.375059127807617

Token 188: ' //' (ID: 602)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 189: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01508368831127882
    2. ' ' → logprob: -4.2650837898254395
    3. '1' → logprob: -7.0150837898254395
    4. 'row' → logprob: -11.640083312988281
    5. '3' → logprob: -12.515083312988281
    6. 'col' → logprob: -12.640083312988281
    7. '10' → logprob: -13.515083312988281
    8. '  ' → logprob: -14.140083312988281
    9. '```' → logprob: -14.265083312988281
    10. ' col' → logprob: -14.265083312988281

Token 190: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00771700544282794
    2. '1' → logprob: -4.882717132568359
    3. ' ' → logprob: -9.13271713256836
    4. '  ' → logprob: -14.00771713256836
    5. '3' → logprob: -14.50771713256836
    6. 'col' → logprob: -14.50771713256836
    7. '```' → logprob: -14.88271713256836
    8. '10' → logprob: -15.50771713256836
    9. '   ' → logprob: -15.88271713256836
    10. '100' → logprob: -16.88271713256836

Token 191: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02568097412586212
    2. '<|end|>' → logprob: -4.275681018829346
    3. '
' → logprob: -4.775681018829346
    4. ')' → logprob: -6.150681018829346
    5. ' print' → logprob: -7.400681018829346
    6. '#' → logprob: -9.400680541992188
    7. '[' → logprob: -9.900680541992188
    8. '.print' → logprob: -10.400680541992188
    9. '#print' → logprob: -10.400680541992188
    10. ']' → logprob: -10.525680541992188

Token 192: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.282920129597187e-05
    2. ' print' → logprob: -11.375012397766113
    3. 'return' → logprob: -14.875012397766113
    4. '```' → logprob: -14.875012397766113
    5. ')' → logprob: -15.250012397766113
    6. '<|end|>' → logprob: -15.750012397766113
    7. 'final' → logprob: -16.50001335144043
    8. '#' → logprob: -16.75001335144043
    9. '#print' → logprob: -17.75001335144043
    10. '
' → logprob: -17.87501335144043

Token 193: '(final' (ID: 14111)
  Prédit: '(final'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(final' → logprob: -0.038071904331445694
    2. '(' → logprob: -3.288071870803833
    3. '(min' → logprob: -11.288071632385254
    4. 'final' → logprob: -11.538071632385254
    5. '(f' → logprob: -12.038071632385254
    6. '()' → logprob: -13.913071632385254
    7. '(`' → logprob: -14.913071632385254
    8. '((' → logprob: -14.913071632385254
    9. '(*' → logprob: -15.413071632385254
    10. '('' → logprob: -16.16307258605957

Token 194: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -7.465036105713807e-06
    2. ')' → logprob: -12.750007629394531
    3. '_res' → logprob: -13.125007629394531
    4. '_' → logprob: -13.375007629394531
    5. '_results' → logprob: -15.375007629394531
    6. 'result' → logprob: -15.500007629394531
    7. '_RESULT' → logprob: -16.25000762939453
    8. '_)' → logprob: -16.50000762939453
    9. ' _' → logprob: -16.62500762939453
    10. ')_' → logprob: -16.75000762939453

Token 195: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1008713702030946e-06
    2. ' )' → logprob: -13.250001907348633
    3. ')
' → logprob: -15.875001907348633
    4. '))' → logprob: -16.875001907348633
    5. '+' → logprob: -16.875001907348633
    6. ')`' → logprob: -17.625001907348633
    7. ')#' → logprob: -18.750001907348633
    8. '`)' → logprob: -18.875001907348633
    9. '```' → logprob: -19.125001907348633
    10. '）' → logprob: -19.500001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 193
Tokens correctement prédits (1ère position, stricte): 97
Tokens correctement prédits (1ère position, avec adaptation): 98
Tokens correctement prédits (top 10): 163
Précision stricte (1ère position): 50.26%
Précision adaptée (1ère position): 50.78%
Précision (top 10): 84.46%
================================================================================
