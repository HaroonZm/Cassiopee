================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:08:35
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Préférences excentriques : noms étranges, lambda, ternaires, espacement non-standard, contrôle de flux inversé

parse    = lambda: [int(x) for x in input().split()]
Uno , Dos = parse()

def check_weird(x,y):return not~(x&1)&not~(y&1)
print(  ['No','Yes'][ check_weird( Uno   ,   Dos )   ]   )
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Pré' (ID: 86400)
  → Token d'amorce (pas de prédiction)

Token 2: 'fér' (ID: 21958)
  → Token d'amorce (pas de prédiction)

Token 3: 'ences' (ID: 3851)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1376357078552246
    2. 'e' → logprob: -1.6376357078552246
    3. 'ence' → logprob: -1.8876357078552246
    4. 'r' → logprob: -2.5126357078552246
    5. 'ences' → logprob: -2.6376357078552246
    6. 'é' → logprob: -2.8876357078552246
    7. 'er' → logprob: -3.0126357078552246
    8. '```' → logprob: -3.5126357078552246
    9. 'rence' → logprob: -4.262635707855225
    10. 'en' → logprob: -5.137635707855225

Token 4: ' ex' (ID: 513)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.44058093428611755
    2. '_' → logprob: -1.56558096408844
    3. ' :' → logprob: -2.9405808448791504
    4. ' =' → logprob: -3.4405808448791504
    5. '```' → logprob: -3.8155808448791504
    6. '=' → logprob: -4.31558084487915
    7. ' ' → logprob: -4.69058084487915
    8. '#' → logprob: -4.94058084487915
    9. 's' → logprob: -5.19058084487915
    10. '[' → logprob: -6.81558084487915

Token 5: 'cent' (ID: 1939)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0462096706032753
    2. 'c' → logprob: -3.9212095737457275
    3. '=' → logprob: -5.046209812164307
    4. ':' → logprob: -5.421209812164307
    5. 'p' → logprob: -5.546209812164307
    6. 'port' → logprob: -5.921209812164307
    7. ' :' → logprob: -6.796209812164307
    8. '_' → logprob: -6.921209812164307
    9. 't' → logprob: -7.046209812164307
    10. 'r' → logprob: -7.046209812164307

Token 6: 'riques' (ID: 82813)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3094162344932556
    2. 'r' → logprob: -1.4344162940979004
    3. 'nt' → logprob: -4.0594162940979
    4. 's' → logprob: -6.0594162940979
    5. 'd' → logprob: -6.6844162940979
    6. '```' → logprob: -6.8094162940979
    7. 'z' → logprob: -7.3094162940979
    8. 'riques' → logprob: -7.5594162940979
    9. 'p' → logprob: -7.8094162940979
    10. 'a' → logprob: -7.9344162940979

Token 7: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07752996683120728
    2. '#' → logprob: -3.9525299072265625
    3. ' :' → logprob: -4.0775299072265625
    4. '=' → logprob: -4.3275299072265625
    5. 's' → logprob: -4.7025299072265625
    6. ' ' → logprob: -5.5775299072265625
    7. '_' → logprob: -6.0775299072265625
    8. 'es' → logprob: -6.4525299072265625
    9. '```' → logprob: -6.5775299072265625
    10. ' =' → logprob: -6.5775299072265625

Token 8: ' noms' (ID: 97041)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2892239093780518
    2. 'é' → logprob: -1.6642239093780518
    3. 's' → logprob: -1.9142239093780518
    4. 'es' → logprob: -2.5392239093780518
    5. '_' → logprob: -3.5392239093780518
    6. '```' → logprob: -3.7892239093780518
    7. 'ex' → logprob: -3.9142239093780518
    8. '#' → logprob: -4.039223670959473
    9. ':' → logprob: -4.164223670959473
    10. ' ' → logprob: -4.289223670959473

Token 9: ' étr' (ID: 52537)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.046238012611866
    2. '=' → logprob: -4.046237945556641
    3. ':' → logprob: -5.296237945556641
    4. ' =' → logprob: -5.296237945556641
    5. 's' → logprob: -5.421237945556641
    6. ' ' → logprob: -5.921237945556641
    7. ',' → logprob: -6.046237945556641
    8. '_ex' → logprob: -6.671237945556641
    9. '-' → logprob: -6.921237945556641
    10. '_=' → logprob: -7.046237945556641

Token 10: 'anges' (ID: 8273)
  Prédit: 'anges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anges' → logprob: -0.003276818199083209
    2. '' → logprob: -7.128276824951172
    3. '```' → logprob: -7.253276824951172
    4. 'ange' → logprob: -8.003276824951172
    5. '``' → logprob: -8.253276824951172
    6. '#' → logprob: -8.253276824951172
    7. '`' → logprob: -8.628276824951172
    8. 'ges' → logprob: -9.128276824951172
    9. '' → logprob: -9.753276824951172
    10. 'ang' → logprob: -10.253276824951172

Token 11: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.47606271505355835
    2. '#' → logprob: -1.8510627746582031
    3. ':' → logprob: -2.976062774658203
    4. ' ' → logprob: -2.976062774658203
    5. 's' → logprob: -3.101062774658203
    6. ',' → logprob: -3.726062774658203
    7. ' :' → logprob: -4.601062774658203
    8. ' =' → logprob: -4.726062774658203
    9. '-' → logprob: -4.851062774658203
    10. ' #' → logprob: -5.101062774658203

Token 12: ' lambda' (ID: 27871)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9727214574813843
    2. ',' → logprob: -1.4727214574813843
    3. ' espaces' → logprob: -2.597721576690674
    4. ' ,' → logprob: -2.972721576690674
    5. 'é' → logprob: -3.722721576690674
    6. '_' → logprob: -3.847721576690674
    7. ' caractères' → logprob: -4.097721576690674
    8. ' étr' → logprob: -4.097721576690674
    9. '#' → logprob: -4.472721576690674
    10. ' et' → logprob: -4.472721576690674

Token 13: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7788070440292358
    2. '=' → logprob: -1.4038070440292358
    3. ',' → logprob: -1.9038070440292358
    4. '(' → logprob: -3.5288071632385254
    5. ')' → logprob: -3.9038071632385254
    6. ':' → logprob: -4.028807163238525
    7. ' =' → logprob: -4.028807163238525
    8. '```' → logprob: -4.028807163238525
    9. '#' → logprob: -4.778807163238525
    10. ''' → logprob: -5.278807163238525

Token 14: ' tern' (ID: 81796)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8561670780181885
    2. '_' → logprob: -0.9811670780181885
    3. '=' → logprob: -3.3561670780181885
    4. ' ' → logprob: -3.4811670780181885
    5. ' ,' → logprob: -3.4811670780181885
    6. ' =' → logprob: -3.9811670780181885
    7. 's' → logprob: -4.106166839599609
    8. '```' → logprob: -4.231166839599609
    9. ' _' → logprob: -4.856166839599609
    10. ')' → logprob: -5.231166839599609

Token 15: 'aires' (ID: 8507)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.13008125126361847
    2. '?' → logprob: -3.1300811767578125
    3. '=' → logprob: -4.2550811767578125
    4. 'ary' → logprob: -4.2550811767578125
    5. ':' → logprob: -4.6300811767578125
    6. '>' → logprob: -5.0050811767578125
    7. '```' → logprob: -5.3800811767578125
    8. 'ar' → logprob: -5.5050811767578125
    9. ',' → logprob: -5.6300811767578125
    10. 'al' → logprob: -5.7550811767578125

Token 16: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1118967533111572
    2. ' =' → logprob: -1.3618967533111572
    3. '_' → logprob: -2.1118967533111572
    4. ':' → logprob: -2.6118967533111572
    5. '#' → logprob: -2.7368967533111572
    6. ',' → logprob: -3.4868967533111572
    7. '```' → logprob: -3.4868967533111572
    8. 'a' → logprob: -3.7368967533111572
    9. '`' → logprob: -4.361896514892578
    10. ' ' → logprob: -4.611896514892578

Token 17: ' esp' (ID: 7461)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8286150693893433
    2. ',' → logprob: -1.5786150693893433
    3. ' ' → logprob: -1.9536150693893433
    4. ' =' → logprob: -2.953615188598633
    5. ' ,' → logprob: -3.328615188598633
    6. '```' → logprob: -3.578615188598633
    7. '=' → logprob: -3.828615188598633
    8. '#' → logprob: -4.203615188598633
    9. ' #' → logprob: -4.828615188598633
    10. '`' → logprob: -5.078615188598633

Token 18: 'acement' (ID: 27929)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.080658197402954
    2. 'é' → logprob: -1.330658197402954
    3. 'a' → logprob: -1.330658197402954
    4. '=' → logprob: -3.330658197402954
    5. 'ace' → logprob: -4.330657958984375
    6. '```' → logprob: -4.455657958984375
    7. 'r' → logprob: -4.830657958984375
    8. ',' → logprob: -4.830657958984375
    9. ' ' → logprob: -5.080657958984375
    10. '#' → logprob: -5.080657958984375

Token 19: ' non' (ID: 2893)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1665438562631607
    2. '#' → logprob: -3.166543960571289
    3. ' ' → logprob: -3.541543960571289
    4. 'e' → logprob: -4.416543960571289
    5. 'd' → logprob: -4.541543960571289
    6. 'a' → logprob: -4.541543960571289
    7. '```' → logprob: -5.041543960571289
    8. ',' → logprob: -5.166543960571289
    9. 'x' → logprob: -5.291543960571289
    10. '.' → logprob: -5.541543960571289

Token 20: '-standard' (ID: 108271)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'con' → logprob: -0.50703364610672
    2. 'standard' → logprob: -1.1320335865020752
    3. 'class' → logprob: -3.632033586502075
    4. 'breaking' → logprob: -4.507033824920654
    5. 'norm' → logprob: -5.382033824920654
    6. 'respect' → logprob: -5.507033824920654
    7. ' convention' → logprob: -5.757033824920654
    8. 'trad' → logprob: -5.882033824920654
    9. 's' → logprob: -6.382033824920654
    10. 'conv' → logprob: -6.632033824920654

Token 21: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.181334376335144
    2. '#' → logprob: -1.931334376335144
    3. 'def' → logprob: -2.4313344955444336
    4. 'x' → logprob: -2.5563344955444336
    5. ' ' → logprob: -2.8063344955444336
    6. 'd' → logprob: -2.9313344955444336
    7. 'a' → logprob: -3.3063344955444336
    8. 'é' → logprob: -3.3063344955444336
    9. '=' → logprob: -3.5563344955444336
    10. 'e' → logprob: -3.8063344955444336

Token 22: ' contrôle' (ID: 57360)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.253219485282898
    2. '_' → logprob: -1.503219485282898
    3. '#' → logprob: -1.878219485282898
    4. ' ' → logprob: -2.3782196044921875
    5. 'd' → logprob: -3.1282196044921875
    6. 'é' → logprob: -3.6282196044921875
    7. 'n' → logprob: -3.7532196044921875
    8. ' def' → logprob: -3.8782196044921875
    9. '=' → logprob: -4.2532196044921875
    10. 'a' → logprob: -4.6282196044921875

Token 23: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0764564797282219
    2. ' ' → logprob: -2.8264565467834473
    3. '#' → logprob: -5.326456546783447
    4. '_
' → logprob: -6.701456546783447
    5. '[' → logprob: -6.951456546783447
    6. '.' → logprob: -7.201456546783447
    7. 's' → logprob: -7.326456546783447
    8. '=' → logprob: -7.451456546783447
    9. '```' → logprob: -7.451456546783447
    10. ' _' → logprob: -7.451456546783447

Token 24: ' flux' (ID: 36547)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.08223700523376465
    2. 'indent' → logprob: -2.5822370052337646
    3. ' l' → logprob: -7.082237243652344
    4. 's' → logprob: -7.082237243652344
    5. 'la' → logprob: -7.582237243652344
    6. 'ligne' → logprob: -8.832237243652344
    7. ' indentation' → logprob: -9.207237243652344
    8. 'ident' → logprob: -9.332237243652344
    9. 'tabs' → logprob: -9.457237243652344
    10. '```' → logprob: -9.707237243652344

Token 25: ' invers' (ID: 38721)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.52717924118042
    2. 'd' → logprob: -1.52717924118042
    3. '_' → logprob: -2.15217924118042
    4. 'def' → logprob: -2.15217924118042
    5. '```' → logprob: -2.65217924118042
    6. ' ' → logprob: -3.02717924118042
    7. '\n' → logprob: -3.65217924118042
    8. 'a' → logprob: -4.15217924118042
    9. '\' → logprob: -4.27717924118042
    10. 'é' → logprob: -4.40217924118042

Token 26: 'é' (ID: 377)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.8540705442428589
    2. '_' → logprob: -1.9790705442428589
    3. 'e' → logprob: -1.9790705442428589
    4. '#' → logprob: -2.2290706634521484
    5. '-' → logprob: -2.2290706634521484
    6. '```' → logprob: -2.4790706634521484
    7. 'r' → logprob: -2.8540706634521484
    8. 'n' → logprob: -3.2290706634521484
    9. '=' → logprob: -3.3540706634521484
    10. ')' → logprob: -3.8540706634521484

Token 27: '

' (ID: 279)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7910701036453247
    2. 'd' → logprob: -1.9160701036453247
    3. '```' → logprob: -2.041069984436035
    4. 'i' → logprob: -3.541069984436035
    5. '\n' → logprob: -3.791069984436035
    6. '-' → logprob: -3.791069984436035
    7. '
' → logprob: -3.916069984436035
    8. 'n' → logprob: -3.916069984436035
    9. '_' → logprob: -4.041069984436035
    10. 'e' → logprob: -4.041069984436035

Token 28: 'parse' (ID: 4841)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.254258394241333
    2. 'i' → logprob: -2.004258394241333
    3. '#' → logprob: -2.129258394241333
    4. 'a' → logprob: -2.879258394241333
    5. ':' → logprob: -2.879258394241333
    6. 'p' → logprob: -3.004258394241333
    7. 'e' → logprob: -3.254258394241333
    8. '_' → logprob: -3.379258394241333
    9. '```' → logprob: -3.379258394241333
    10. 'def' → logprob: -3.629258394241333

Token 29: '   ' (ID: 271)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.732851505279541
    2. '(' → logprob: -1.107851505279541
    3. ':' → logprob: -2.732851505279541
    4. 'r' → logprob: -3.232851505279541
    5. '=' → logprob: -3.857851505279541
    6. ' =' → logprob: -4.357851505279541
    7. '.' → logprob: -4.857851505279541
    8. ')' → logprob: -5.357851505279541
    9. ' ' → logprob: -5.732851505279541
    10. 'ur' → logprob: -5.732851505279541

Token 30: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06767014414072037
    2. ':' → logprob: -3.6926701068878174
    3. '_' → logprob: -4.0676703453063965
    4. ' (' → logprob: -5.4426703453063965
    5. '=' (adapté à ' =') → logprob: -5.8176703453063965
    6. ')' → logprob: -6.3176703453063965
    7. ' ' → logprob: -6.9426703453063965
    8. '(parse' → logprob: -6.9426703453063965
    9. '(lambda' → logprob: -7.1926703453063965
    10. '[' → logprob: -7.1926703453063965

Token 31: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.5017037987709045
    2. '(lambda' → logprob: -1.6267037391662598
    3. 'lambda' → logprob: -1.7517037391662598
    4. ' (' → logprob: -5.00170373916626
    5. ' input' → logprob: -5.87670373916626
    6. '(' → logprob: -5.87670373916626
    7. ' {' → logprob: -6.25170373916626
    8. ' λ' → logprob: -6.50170373916626
    9. ' fun' → logprob: -6.75170373916626
    10. ' ' → logprob: -6.87670373916626

Token 32: ':' (ID: 25)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.3868422508239746
    2. ' x' → logprob: -1.6368422508239746
    3. ' parse' → logprob: -1.7618422508239746
    4. ' lambda' → logprob: -2.5118422508239746
    5. ' f' → logprob: -2.8868422508239746
    6. ' code' → logprob: -3.2618422508239746
    7. ' expr' → logprob: -3.5118422508239746
    8. ' ' → logprob: -3.5118422508239746
    9. ' input' → logprob: -4.136842250823975
    10. ' (' → logprob: -4.261842250823975

Token 33: ' [' (ID: 723)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -1.3539432287216187
    2. 'input' → logprob: -1.4789432287216187
    3. ' not' → logprob: -1.6039432287216187
    4. 'not' → logprob: -2.478943347930908
    5. ' True' → logprob: -3.603943347930908
    6. ' (' → logprob: -3.978943347930908
    7. '(input' → logprob: -4.228943347930908
    8. ' None' → logprob: -4.353943347930908
    9. 'tokens' → logprob: -4.603943347930908
    10. 'None' → logprob: -4.728943347930908

Token 34: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.3228788375854492
    2. 'x' → logprob: -1.5728788375854492
    3. 'i' → logprob: -2.072878837585449
    4. 'token' → logprob: -2.447878837585449
    5. '(' → logprob: -2.947878837585449
    6. '   ' → logprob: -3.322878837585449
    7. 'input' → logprob: -3.697878837585449
    8. 'not' → logprob: -3.697878837585449
    9. '(x' → logprob: -4.322878837585449
    10. '1' → logprob: -4.322878837585449

Token 35: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.33041322231292725
    2. '(input' → logprob: -1.9554132223129272
    3. '(i' → logprob: -2.205413341522217
    4. '(' → logprob: -3.955413341522217
    5. '(c' → logprob: -5.330413341522217
    6. '(s' → logprob: -6.330413341522217
    7. ']' → logprob: -6.830413341522217
    8. '(next' → logprob: -7.955413341522217
    9. '((' → logprob: -8.080412864685059
    10. '(n' → logprob: -8.205412864685059

Token 36: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01277567446231842
    2. '())' → logprob: -4.887775897979736
    3. '.strip' → logprob: -6.762775897979736
    4. '(' → logprob: -7.137775897979736
    5. ' )' → logprob: -7.262775897979736
    6. '(x' → logprob: -7.512775897979736
    7. ' for' → logprob: -7.762775897979736
    8. '()' → logprob: -8.012775421142578
    9. '.split' → logprob: -8.012775421142578
    10. '[::-' → logprob: -8.637775421142578

Token 37: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7309064865112305
    2. ' for' → logprob: -0.9809064865112305
    3. '()' → logprob: -1.9809064865112305
    4. '(' → logprob: -5.4809064865112305
    5. '(x' → logprob: -7.4809064865112305
    6. ')' → logprob: -8.85590648651123
    7. ' ' → logprob: -8.98090648651123
    8. '(input' → logprob: -9.60590648651123
    9. '.strip' → logprob: -9.85590648651123
    10. '+' → logprob: -10.10590648651123

Token 38: ' x' (ID: 1215)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.38771989941596985
    2. 'input' → logprob: -1.1377198696136475
    3. ' ' → logprob: -8.012720108032227
    4. ' raw' → logprob: -8.137720108032227
    5. 'raw' → logprob: -9.387720108032227
    6. 'x' → logprob: -10.887720108032227
    7. '(input' → logprob: -10.887720108032227
    8. '  ' → logprob: -11.262720108032227
    9. ' x' → logprob: -11.387720108032227
    10. '   ' → logprob: -11.512720108032227

Token 39: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04019025340676308
    2. 'in' → logprob: -3.4151902198791504
    3. ' input' → logprob: -6.04019021987915
    4. 'input' → logprob: -6.16519021987915
    5. '=input' → logprob: -7.04019021987915
    6. ' ' → logprob: -7.54019021987915
    7. '(input' → logprob: -7.79019021987915
    8. '   ' → logprob: -9.790190696716309
    9. '  ' → logprob: -10.165190696716309
    10. ',input' → logprob: -11.165190696716309

Token 40: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.16109177470207214
    2. ' input' → logprob: -1.9110918045043945
    3. ' ' → logprob: -8.286091804504395
    4. 'raw' → logprob: -8.661091804504395
    5. '(input' → logprob: -8.661091804504395
    6. '   ' → logprob: -9.911091804504395
    7. ' raw' → logprob: -10.161091804504395
    8. 'open' → logprob: -10.911091804504395
    9. 'range' → logprob: -11.036091804504395
    10. 're' → logprob: -11.161091804504395

Token 41: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.012042985297739506
    2. '()' → logprob: -4.512042999267578
    3. '()]' → logprob: -7.137042999267578
    4. '(' → logprob: -8.762042999267578
    5. '.split' → logprob: -11.387042999267578
    6. '()[' → logprob: -12.012042999267578
    7. '())' → logprob: -12.137042999267578
    8. ' ()' → logprob: -12.262042999267578
    9. 'split' → logprob: -12.262042999267578
    10. ' ().' → logprob: -13.012042999267578

Token 42: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.038350027054548264
    2. 'strip' → logprob: -3.2883501052856445
    3. 'replace' → logprob: -8.788350105285645
    4. 'rstrip' → logprob: -9.038350105285645
    5. ' split' → logprob: -10.538350105285645
    6. 'spl' → logprob: -12.163350105285645
    7. 's' → logprob: -13.163350105285645
    8. ' strip' → logprob: -13.288350105285645
    9. 'sp' → logprob: -14.163350105285645
    10. 'rs' → logprob: -14.788350105285645

Token 43: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0451633520424366
    2. '(' → logprob: -3.54516339302063
    3. '('' → logprob: -4.670163154602051
    4. '()' → logprob: -5.170163154602051
    5. '())' → logprob: -8.54516315460205
    6. ']' → logprob: -11.42016315460205
    7. '("' → logprob: -11.92016315460205
    8. '("("' → logprob: -11.92016315460205
    9. '()],' → logprob: -12.79516315460205
    10. ' ()' → logprob: -12.92016315460205

Token 44: 'Uno' (ID: 70316)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3251333236694336
    2. ',' → logprob: -2.0751333236694336
    3. '
' → logprob: -2.3251333236694336
    4. ';' → logprob: -2.5751333236694336
    5. ':' → logprob: -2.7001333236694336
    6. 'x' → logprob: -3.0751333236694336
    7. 'for' → logprob: -3.0751333236694336
    8. 'parse' → logprob: -3.0751333236694336
    9. '=' → logprob: -3.2001333236694336
    10. '[' → logprob: -3.4501333236694336

Token 45: ' ,' (ID: 1366)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2464556694030762
    2. 'r' → logprob: -1.4964556694030762
    3. '()' → logprob: -1.7464556694030762
    4. '=' → logprob: -1.7464556694030762
    5. 'reverse' → logprob: -4.246455669403076
    6. 'f' → logprob: -4.371455669403076
    7. 'n' → logprob: -4.621455669403076
    8. '.reverse' → logprob: -4.871455669403076
    9. '.py' → logprob: -5.121455669403076
    10. 'card' → logprob: -5.246455669403076

Token 46: ' Dos' (ID: 50574)
  Prédit: 'Dos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dos' → logprob: -0.35467901825904846
    2. ' Dos' → logprob: -2.8546791076660156
    3. '_' → logprob: -3.2296791076660156
    4. 'Deux' → logprob: -3.3546791076660156
    5. 'Due' → logprob: -3.7296791076660156
    6. ' ' → logprob: -4.354679107666016
    7. 'dos' → logprob: -4.417179107666016
    8. ' dos' → logprob: -4.604679107666016
    9. 'D' → logprob: -5.042179107666016
    10. 'De' → logprob: -5.104679107666016

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3971753418445587
    2. '=' → logprob: -1.5221753120422363
    3. ',' → logprob: -2.7721753120422363
    4. ' ,' → logprob: -3.1471753120422363
    5. ' ' → logprob: -5.772175312042236
    6. '   ' → logprob: -7.647175312042236
    7. '  ' → logprob: -8.147175788879395
    8. '    ' → logprob: -10.272175788879395
    9. ',d' → logprob: -11.147175788879395
    10. ',s' → logprob: -11.334675788879395

Token 48: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.227042093873024
    2. ' parse' → logprob: -1.6020420789718628
    3. 'map' → logprob: -6.977042198181152
    4. ' map' → logprob: -7.602042198181152
    5. ' ' → logprob: -10.227042198181152
    6. '(parse' → logprob: -10.602042198181152
    7. '	parse' → logprob: -11.102042198181152
    8. '   ' → logprob: -11.102042198181152
    9. 'input' → logprob: -11.227042198181152
    10. '0' → logprob: -11.539542198181152

Token 49: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00027706706896424294
    2. '(' → logprob: -9.125277519226074
    3. '(),' → logprob: -10.000277519226074
    4. ' ()' → logprob: -10.000277519226074
    5. '()
' → logprob: -10.375277519226074
    6. '()]' → logprob: -10.500277519226074
    7. '()

' → logprob: -12.625277519226074
    8. ']()' → logprob: -12.625277519226074
    9. '();' → logprob: -13.125277519226074
    10. '()`' → logprob: -13.625277519226074

Token 50: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08375514298677444
    2. ' if' → logprob: -2.5837552547454834
    3. '
' → logprob: -5.583755016326904
    4. ';' → logprob: -8.833755493164062
    5. 'while' → logprob: -8.833755493164062
    6. 'for' → logprob: -9.208755493164062
    7. 'print' → logprob: -9.208755493164062
    8. '#' → logprob: -9.708755493164062
    9. '\n' → logprob: -9.708755493164062
    10. ' 
' → logprob: -10.083755493164062

Token 51: ' check' (ID: 2371)
  Prédit: ' strange'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' strange' → logprob: -1.7095465660095215
    2. ' reverse' → logprob: -2.4595465660095215
    3. ' f' → logprob: -2.7095465660095215
    4. ' weird' → logprob: -2.7095465660095215
    5. ' play' → logprob: -2.8345465660095215
    6. ' bizarre' → logprob: -2.8970465660095215
    7. ' ' → logprob: -3.0220465660095215
    8. ' jeu' → logprob: -3.5845465660095215
    9. ' jouer' → logprob: -3.7095465660095215
    10. ' main' → logprob: -4.0845465660095215

Token 52: '_we' (ID: 97919)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.795764684677124
    2. '():' → logprob: -1.920764684677124
    3. '(U' → logprob: -2.420764684677124
    4. '(x' → logprob: -2.545764684677124
    5. '_' → logprob: -2.795764684677124
    6. '(n' → logprob: -3.420764684677124
    7. '(num' → logprob: -3.795764684677124
    8. '(N' → logprob: -4.670764923095703
    9. '(value' → logprob: -4.920764923095703
    10. '(number' → logprob: -4.920764923095703

Token 53: 'ird' (ID: 2716)
  Prédit: 'ird'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ird' → logprob: -0.07304684817790985
    2. 'ek' → logprob: -3.448046922683716
    3. 'ak' → logprob: -3.823046922683716
    4. 'll' → logprob: -5.448046684265137
    5. 'ight' → logprob: -5.573046684265137
    6. 'ir' → logprob: -5.948046684265137
    7. 'b' → logprob: -6.948046684265137
    8. 'st' → logprob: -7.448046684265137
    9. 'l' → logprob: -7.573046684265137
    10. 'rd' → logprob: -7.823046684265137

Token 54: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.2117493152618408
    2. '_' → logprob: -1.4617493152618408
    3. '_name' → logprob: -2.086749315261841
    4. '(x' → logprob: -3.086749315261841
    5. 'ness' → logprob: -3.211749315261841
    6. '_number' → logprob: -3.711749315261841
    7. '_condition' → logprob: -4.086749076843262
    8. '(n' → logprob: -4.211749076843262
    9. '_conditions' → logprob: -4.211749076843262
    10. '(_' → logprob: -4.336749076843262

Token 55: ',y' (ID: 16103)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014329568482935429
    2. ')' → logprob: -4.514329433441162
    3. ' ):' → logprob: -6.264329433441162
    4. ':' → logprob: -7.389329433441162
    5. ',' → logprob: -8.01432991027832
    6. '=' → logprob: -9.01432991027832
    7. '):
' → logprob: -9.26432991027832
    8. ' :' → logprob: -9.26432991027832
    9. ' ' → logprob: -10.26432991027832
    10. ' )' → logprob: -10.76432991027832

Token 56: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0035080108791589737
    2. ')' → logprob: -5.8785080909729
    3. ' ):' → logprob: -8.128507614135742
    4. ':' → logprob: -8.503507614135742
    5. '):
' → logprob: -9.128507614135742
    6. '=' → logprob: -10.628507614135742
    7. ' ' → logprob: -10.878507614135742
    8. ',' → logprob: -11.003507614135742
    9. '   ' → logprob: -11.378507614135742
    10. ' :' → logprob: -12.003507614135742

Token 57: 'return' (ID: 1034)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5773953199386597
    2. ' if' → logprob: -1.5773953199386597
    3. ' return' → logprob: -1.9523953199386597
    4. '	return' → logprob: -3.327395439147949
    5. ' ' → logprob: -3.577395439147949
    6. '	if' → logprob: -4.702395439147949
    7. ':return' → logprob: -5.077395439147949
    8. '\t' → logprob: -5.702395439147949
    9. '  ' → logprob: -6.327395439147949
    10. 'if' → logprob: -7.202395439147949

Token 58: ' not' (ID: 625)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.8088488578796387
    2. 'x' → logprob: -1.0588488578796387
    3. '(x' → logprob: -2.6838488578796387
    4. ' (' → logprob: -3.3088488578796387
    5. ' y' → logprob: -3.4338488578796387
    6. ' all' → logprob: -4.683848857879639
    7. 'y' → logprob: -4.683848857879639
    8. ' any' → logprob: -4.933848857879639
    9. ' not' → logprob: -4.933848857879639
    10. '(' → logprob: -5.058848857879639

Token 59: '~' (ID: 93)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.4196135103702545
    2. ' (' → logprob: -1.9196134805679321
    3. '(' → logprob: -2.6696135997772217
    4. ' x' → logprob: -3.0446135997772217
    5. 'x' → logprob: -3.1696135997772217
    6. '((' → logprob: -3.4196135997772217
    7. ' ((' → logprob: -6.419613361358643
    8. '(y' → logprob: -7.544613361358643
    9. '(((' → logprob: -7.669613361358643
    10. '(bool' → logprob: -7.919613361358643

Token 60: '(' (ID: 7)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.4820336699485779
    2. 'x' → logprob: -1.1070337295532227
    3. ' x' → logprob: -4.107033729553223
    4. '(' → logprob: -4.107033729553223
    5. ' (' → logprob: -4.357033729553223
    6. '((' → logprob: -5.357033729553223
    7. 'y' → logprob: -7.982033729553223
    8. '(y' → logprob: -8.232033729553223
    9. '(abs' → logprob: -8.607033729553223
    10. '(((' → logprob: -9.357033729553223

Token 61: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.017907820641994476
    2. '(x' → logprob: -4.642907619476318
    3. ' x' → logprob: -5.267907619476318
    4. 'y' → logprob: -6.767907619476318
    5. '(' → logprob: -7.642907619476318
    6. '((' → logprob: -7.767907619476318
    7. ' (' → logprob: -8.517908096313477
    8. '~' → logprob: -8.642908096313477
    9. ' ' → logprob: -9.142908096313477
    10. 'int' → logprob: -10.017908096313477

Token 62: '&' (ID: 5)
  Prédit: '&'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.5967084765434265
    2. '|' → logprob: -1.3467085361480713
    3. '^' → logprob: -2.0967085361480713
    4. '%' → logprob: -3.7217085361480713
    5. ' &' → logprob: -4.346708297729492
    6. '<' → logprob: -5.096708297729492
    7. '==' → logprob: -5.721708297729492
    8. 'and' → logprob: -5.721708297729492
    9. '>' → logprob: -6.096708297729492
    10. ')' → logprob: -6.471708297729492

Token 63: '1' (ID: 16)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.01143092755228281
    2. ' y' → logprob: -4.511430740356445
    3. '   ' → logprob: -9.823930740356445
    4. '~' → logprob: -10.136430740356445
    5. '1' → logprob: -10.323930740356445
    6. ' ' → logprob: -10.386430740356445
    7. 'x' → logprob: -10.573930740356445
    8. '-' → logprob: -10.636430740356445
    9. '  ' → logprob: -10.698930740356445
    10. ' ' → logprob: -10.886430740356445

Token 64: ')&' (ID: 34370)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35518768429756165
    2. '^' → logprob: -2.2301876544952393
    3. '|' → logprob: -2.6051876544952393
    4. ' and' → logprob: -3.6051876544952393
    5. 'and' → logprob: -3.9801876544952393
    6. 'y' → logprob: -4.605187892913818
    7. ' ^' → logprob: -4.605187892913818
    8. ' or' → logprob: -4.605187892913818
    9. ' )' → logprob: -4.730187892913818
    10. ')^' → logprob: -5.105187892913818

Token 65: 'not' (ID: 2878)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.0596723556518555
    2. '(y' → logprob: -1.1846723556518555
    3. ' y' → logprob: -1.6846723556518555
    4. 'not' → logprob: -3.5596723556518555
    5. '~' → logprob: -3.5596723556518555
    6. '(' → logprob: -3.6846723556518555
    7. ' (' → logprob: -3.8096723556518555
    8. '(not' → logprob: -3.9346723556518555
    9. ' not' → logprob: -4.0596723556518555
    10. '(~' → logprob: -5.0596723556518555

Token 66: '~' (ID: 93)
  Prédit: '~'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '~' → logprob: -0.4955761730670929
    2. '(y' → logprob: -1.1205761432647705
    3. ' (' → logprob: -3.3705761432647705
    4. '(x' → logprob: -4.12057638168335
    5. '(' → logprob: -5.37057638168335
    6. ' ~(' → logprob: -5.62057638168335
    7. ' y' → logprob: -5.87057638168335
    8. 'y' → logprob: -6.62057638168335
    9. '((' → logprob: -7.37057638168335
    10. '(not' → logprob: -7.99557638168335

Token 67: '(' (ID: 7)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.00807122327387333
    2. 'y' → logprob: -5.758071422576904
    3. '(' → logprob: -6.133071422576904
    4. ' (' → logprob: -6.383071422576904
    5. '((' → logprob: -7.133071422576904
    6. '(x' → logprob: -9.258070945739746
    7. ' y' → logprob: -9.883070945739746
    8. ' ' → logprob: -11.945570945739746
    9. '(~' → logprob: -12.133070945739746
    10. '  ' → logprob: -12.195570945739746

Token 68: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.016448980197310448
    2. ' y' → logprob: -4.391448974609375
    3. 'x' → logprob: -5.766448974609375
    4. '(y' → logprob: -7.641448974609375
    5. ')y' → logprob: -9.891448974609375
    6. ' ' → logprob: -10.141448974609375
    7. '   ' → logprob: -10.266448974609375
    8. ' x' → logprob: -10.641448974609375
    9. '  ' → logprob: -10.703948974609375
    10. '(x' → logprob: -10.828948974609375

Token 69: '&' (ID: 5)
  Prédit: '&'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.0012348759919404984
    2. ' &' → logprob: -7.001235008239746
    3. '|' → logprob: -8.501235008239746
    4. '1' → logprob: -10.501235008239746
    5. ')' → logprob: -10.751235008239746
    6. '%' → logprob: -10.751235008239746
    7. ' ' → logprob: -12.063735008239746
    8. ')&' → logprob: -12.126235008239746
    9. '   ' → logprob: -12.501235008239746
    10. '&)' → logprob: -12.751235008239746

Token 70: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002039391314610839
    2. ' ' → logprob: -6.252039432525635
    3. '0' → logprob: -9.877038955688477
    4. '   ' → logprob: -11.877038955688477
    5. '(' → logprob: -12.189538955688477
    6. '!' → logprob: -12.377038955688477
    7. '2' → logprob: -12.439538955688477
    8. ')' → logprob: -12.564538955688477
    9. '```' → logprob: -12.689538955688477
    10. '3' → logprob: -12.752038955688477

Token 71: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004221809096634388
    2. ' )' → logprob: -6.5042219161987305
    3. ')&' → logprob: -6.5042219161987305
    4. ')return' → logprob: -8.37922191619873
    5. ')+' → logprob: -8.62922191619873
    6. ')>>' → logprob: -8.87922191619873
    7. ')<<' → logprob: -9.12922191619873
    8. '))' → logprob: -9.25422191619873
    9. ')}' → logprob: -9.50422191619873
    10. ')-' → logprob: -10.00422191619873

Token 72: 'print' (ID: 1598)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05588867887854576
    2. '(' → logprob: -3.1808886528015137
    3. ' :' → logprob: -5.055888652801514
    4. '<|end|>' → logprob: -5.930888652801514
    5. ':
' → logprob: -7.430888652801514
    6. ' ' → logprob: -7.430888652801514
    7. ' (' → logprob: -7.680888652801514
    8. '(
' → logprob: -7.805888652801514
    9. ')' → logprob: -7.930888652801514
    10. '.' → logprob: -8.555889129638672

Token 73: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04179352521896362
    2. '(check' → logprob: -3.2917935848236084
    3. '((' → logprob: -6.166793346405029
    4. '('' → logprob: -7.416793346405029
    5. '("("' → logprob: -7.541793346405029
    6. '(()' → logprob: -8.291793823242188
    7. '(`' → logprob: -9.541793823242188
    8. '("' → logprob: -10.541793823242188
    9. ' (' → logprob: -10.541793823242188
    10. '(
' → logprob: -10.916793823242188

Token 74: ' ' (ID: 220)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.001963128335773945
    2. ' check' → logprob: -7.376963138580322
    3. 'Uno' → logprob: -7.751963138580322
    4. 'Dos' → logprob: -8.501962661743164
    5. '"' → logprob: -8.626962661743164
    6. '(check' → logprob: -8.876962661743164
    7. ')' → logprob: -9.126962661743164
    8. ''' → logprob: -10.126962661743164
    9. ' ' → logprob: -10.126962661743164
    10. 'f' → logprob: -10.251962661743164

Token 75: ' ['' (ID: 5140)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.0018511776579543948
    2. ' check' → logprob: -7.3768510818481445
    3. '"' → logprob: -7.5018510818481445
    4. '(check' → logprob: -8.876851081848145
    5. 'f' → logprob: -9.001851081848145
    6. ''' → logprob: -9.251851081848145
    7. 'Uno' → logprob: -9.501851081848145
    8. ')' → logprob: -9.751851081848145
    9. ' ' → logprob: -10.501851081848145
    10. '1' → logprob: -10.501851081848145

Token 76: 'No' (ID: 3160)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5821666717529297
    2. ''' → logprob: -2.4571666717529297
    3. '"No' → logprob: -2.7071666717529297
    4. ''O' → logprob: -3.3321666717529297
    5. 'check' → logprob: -3.5821666717529297
    6. 'Dos' → logprob: -3.5821666717529297
    7. 'Uno' → logprob: -3.9571666717529297
    8. '"O' → logprob: -4.20716667175293
    9. '"D' → logprob: -4.33216667175293
    10. 'No' → logprob: -4.64466667175293

Token 77: '','' (ID: 4074)
  Prédit: 'ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.00620334642007947
    2. 't' → logprob: -6.1312031745910645
    3. 'pe' → logprob: -7.6312031745910645
    4. ',' → logprob: -8.006203651428223
    5. ' ' → logprob: -8.131203651428223
    6. '
' → logprob: -8.131203651428223
    7. ' ,' → logprob: -8.381203651428223
    8. ' NE' → logprob: -8.381203651428223
    9. ' one' → logprob: -8.506203651428223
    10. ' '' → logprob: -8.506203651428223

Token 78: 'Yes' (ID: 13022)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4925059378147125
    2. ' Yes' → logprob: -1.9925059080123901
    3. 'Yes' → logprob: -2.3675060272216797
    4. ' '' → logprob: -2.6175060272216797
    5. ' Si' → logprob: -3.4925060272216797
    6. ' Oui' → logprob: -3.8675060272216797
    7. ' ' → logprob: -4.99250602722168
    8. 'Si' → logprob: -5.36750602722168
    9. ''O' → logprob: -5.99250602722168
    10. '','' → logprob: -5.99250602722168

Token 79: ''][' (ID: 22110)
  Prédit: '']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''][' → logprob: -0.0505252480506897
    2. '][' → logprob: -3.300525188446045
    3. '"][' → logprob: -4.800525188446045
    4. '']' → logprob: -5.675525188446045
    5. '')[' → logprob: -8.175525665283203
    6. ''[' → logprob: -9.175525665283203
    7. '']['' → logprob: -9.300525665283203
    8. ''' → logprob: -9.425525665283203
    9. ']' → logprob: -9.800525665283203
    10. ' ][' → logprob: -10.050525665283203

Token 80: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.03829232603311539
    2. ' check' → logprob: -3.288292407989502
    3. '(check' → logprob: -9.288291931152344
    4. ' ' → logprob: -9.538291931152344
    5. '  ' → logprob: -10.163291931152344
    6. '   ' → logprob: -11.038291931152344
    7. 'int' → logprob: -11.538291931152344
    8. '1' → logprob: -11.913291931152344
    9. 'not' → logprob: -13.038291931152344
    10. '(' → logprob: -13.288291931152344

Token 81: '_we' (ID: 97919)
  Prédit: '_we'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_we' → logprob: -1.5048530030981055e-06
    2. '_' → logprob: -13.750001907348633
    3. '_w' → logprob: -15.125001907348633
    4. '_WE' → logprob: -16.875001907348633
    5. '_you' → logprob: -17.125001907348633
    6. 'we' → logprob: -17.625001907348633
    7. 'We' → logprob: -18.250001907348633
    8. '```' → logprob: -19.125001907348633
    9. ' _' → logprob: -19.500001907348633
    10. '   ' → logprob: -19.875001907348633

Token 82: 'ird' (ID: 2716)
  Prédit: 'ird'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ird' → logprob: -0.00015133652777876705
    2. 'ir' → logprob: -9.750151634216309
    3. 'ard' → logprob: -10.625151634216309
    4. 'ierd' → logprob: -11.000151634216309
    5. 'ord' → logprob: -12.000151634216309
    6. '(' → logprob: -12.125151634216309
    7. 'irds' → logprob: -12.500151634216309
    8. '   ' → logprob: -12.500151634216309
    9. '

' → logprob: -13.187651634216309
    10. 'iro' → logprob: -13.250151634216309

Token 83: '(' (ID: 7)
  Prédit: '(U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(U' → logprob: -0.20441751182079315
    2. '(' → logprob: -1.7044174671173096
    3. '(Un' → logprob: -6.454417705535889
    4. '(D' → logprob: -6.954417705535889
    5. '((' → logprob: -7.829417705535889
    6. '(
' → logprob: -9.95441722869873
    7. ' (' → logprob: -11.32941722869873
    8. '(

' → logprob: -11.82941722869873
    9. '(O' → logprob: -13.32941722869873
    10. '(Unit' → logprob: -14.82941722869873

Token 84: ' Uno' (ID: 76232)
  Prédit: '(U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(U' → logprob: -0.6340945363044739
    2. 'Uno' → logprob: -0.7590945363044739
    3. '(' → logprob: -7.259094715118408
    4. ' Uno' → logprob: -7.884094715118408
    5. '(Un' → logprob: -8.63409423828125
    6. 'U' → logprob: -9.50909423828125
    7. 'Una' → logprob: -9.63409423828125
    8. 'Un' → logprob: -10.13409423828125
    9. '_U' → logprob: -11.50909423828125
    10. ' (' → logprob: -11.50909423828125

Token 85: '  ' (ID: 256)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13953199982643127
    2. ',D' → logprob: -2.2645320892333984
    3. ' ,' → logprob: -3.6395320892333984
    4. ' ' → logprob: -10.014532089233398
    5. ',d' → logprob: -11.139532089233398
    6. ')' → logprob: -12.014532089233398
    7. ',y' → logprob: -12.139532089233398
    8. ',
' → logprob: -12.639532089233398
    9. ',

' → logprob: -12.764532089233398
    10. '  ' → logprob: -13.764532089233398

Token 86: ' ,' (ID: 1366)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' (adapté à ' ,') → logprob: -0.1758282333612442
    2. ',D' → logprob: -1.925828218460083
    3. ' ,' → logprob: -4.175828456878662
    4. ' ' → logprob: -10.050827980041504
    5. ',d' → logprob: -11.050827980041504
    6. '-' → logprob: -11.300827980041504
    7. ',y' → logprob: -11.300827980041504
    8. ',
' → logprob: -11.675827980041504
    9. ',

' → logprob: -11.925827980041504
    10. '  ' → logprob: -12.550827980041504

Token 87: '  ' (ID: 256)
  Prédit: 'Dos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dos' → logprob: -0.42922115325927734
    2. ' Dos' → logprob: -1.0542211532592773
    3. ' ' → logprob: -7.679221153259277
    4. '  ' → logprob: -10.429221153259277
    5. '   ' → logprob: -11.679221153259277
    6. ' dos' → logprob: -11.679221153259277
    7. '    ' → logprob: -12.054221153259277
    8. ' ' → logprob: -13.429221153259277
    9. 'Dose' → logprob: -13.554221153259277
    10. '     ' → logprob: -14.554221153259277

Token 88: ' Dos' (ID: 50574)
  Prédit: 'Dos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dos' (adapté à ' Dos') → logprob: -0.0059470487758517265
    2. ' Dos' → logprob: -5.130947113037109
    3. ' ' → logprob: -11.25594711303711
    4. '  ' → logprob: -12.75594711303711
    5. '   ' → logprob: -13.88094711303711
    6. 'Dose' → logprob: -14.50594711303711
    7. ' dos' → logprob: -15.13094711303711
    8. '    ' → logprob: -15.13094711303711
    9. 'D' → logprob: -16.25594711303711
    10. '     ' → logprob: -16.38094711303711

Token 89: ' )' (ID: 1546)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01874784380197525
    2. ')]' → logprob: -4.643747806549072
    3. ' )' → logprob: -5.268747806549072
    4. ')])' → logprob: -5.643747806549072
    5. ' ' → logprob: -9.39374828338623
    6. ')==' → logprob: -10.14374828338623
    7. '())' → logprob: -10.39374828338623
    8. '(' → logprob: -11.26874828338623
    9. '()' → logprob: -11.39374828338623
    10. ')>' → logprob: -11.51874828338623

Token 90: '  ' (ID: 256)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.6435285210609436
    2. ']' → logprob: -0.7685285210609436
    3. ')]' → logprob: -5.143528461456299
    4. ' ])' → logprob: -6.393528461456299
    5. ')])' → logprob: -6.768528461456299
    6. ')' → logprob: -6.768528461456299
    7. ' ]' → logprob: -7.393528461456299
    8. '])]' → logprob: -9.143528938293457
    9. ']))' → logprob: -9.268528938293457
    10. ']>' → logprob: -9.768528938293457

Token 91: ' ]' (ID: 6045)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' (adapté à ' ]') → logprob: -0.35486480593681335
    2. '])' → logprob: -1.2298648357391357
    3. ')]' → logprob: -5.604864597320557
    4. ')' → logprob: -6.854864597320557
    5. ')])' → logprob: -7.604864597320557
    6. ' ])' → logprob: -7.729864597320557
    7. ' ]' → logprob: -8.229865074157715
    8. '])]' → logprob: -9.229865074157715
    9. ']>' → logprob: -9.354865074157715
    10. ']])' → logprob: -9.729865074157715

Token 92: '  ' (ID: 256)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006503634504042566
    2. ' )' → logprob: -7.375650405883789
    3. '))' → logprob: -10.875650405883789
    4. '])' → logprob: -13.250650405883789
    5. ' ' → logprob: -14.750650405883789
    6. ')#' → logprob: -15.000650405883789
    7. '(' → logprob: -15.125650405883789
    8. ']' → logprob: -15.125650405883789
    9. '）' → logprob: -15.250650405883789
    10. '#' → logprob: -15.250650405883789

Token 93: ' )' (ID: 1546)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' (adapté à ' )') → logprob: -0.0003015001420862973
    2. ' )' → logprob: -8.125301361083984
    3. '))' → logprob: -12.875301361083984
    4. ')
' → logprob: -13.875301361083984
    5. '])' → logprob: -14.625301361083984
    6. ')#' → logprob: -14.875301361083984
    7. '）' → logprob: -15.125301361083984
    8. ')`' → logprob: -16.000301361083984
    9. ' ' → logprob: -16.125301361083984
    10. '#' → logprob: -16.125301361083984


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 91
Tokens correctement prédits (1ère position, stricte): 21
Tokens correctement prédits (1ère position, avec adaptation): 25
Tokens correctement prédits (top 10): 53
Précision stricte (1ère position): 23.08%
Précision adaptée (1ère position): 27.47%
Précision (top 10): 58.24%
================================================================================
