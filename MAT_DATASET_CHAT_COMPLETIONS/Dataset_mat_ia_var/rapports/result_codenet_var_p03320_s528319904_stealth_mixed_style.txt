================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:41
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def s(n):
    return sum(list(map(int, str(n))))
    
def ss(n):
    return n / s(n)

K = int(input())
i = 0
d = 1

while K:
    check = lambda x: ss(x)
    t1 = check(i + d)
    def t2calc():
        return ss(i + 10 * d)
    t2 = t2calc()
    if t1 > t2:
        d = d * 10
    i += d
    print(i)
    K -= 1
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' s' (ID: 265)
  → Token d'amorce (pas de prédiction)

Token 2: '(n' (ID: 2406)
  → Token d'amorce (pas de prédiction)

Token 3: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6331742405891418
    2. ')' → logprob: -0.7581742405891418
    3. ',' → logprob: -8.508173942565918
    4. 'u' → logprob: -8.758173942565918
    5. '*' → logprob: -10.133173942565918
    6. '[' → logprob: -10.508173942565918
    7. 'e' → logprob: -10.633173942565918
    8. '=' → logprob: -10.883173942565918
    9. ':' → logprob: -10.883173942565918
    10. 'a' → logprob: -11.133173942565918

Token 4: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6479133367538452
    2. '   ' → logprob: -0.7729133367538452
    3. ':return' → logprob: -5.397913455963135
    4. '```' → logprob: -6.272913455963135
    5. ' return' → logprob: -6.522913455963135
    6. ' if' → logprob: -6.647913455963135
    7. '    ' → logprob: -6.772913455963135
    8. ' ' → logprob: -6.772913455963135
    9. ' :' → logprob: -7.022913455963135
    10. ''' → logprob: -7.147913455963135

Token 5: ' return' (ID: 622)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.348190575838089
    2. ' ' → logprob: -2.0981905460357666
    3. 'if' → logprob: -2.8481905460357666
    4. ' if' → logprob: -3.2231905460357666
    5. '   ' → logprob: -3.3481905460357666
    6. 'r' → logprob: -3.7231905460357666
    7. ''' → logprob: -5.598190784454346
    8. ' i' → logprob: -6.223190784454346
    9. 'return' (adapté à ' return') → logprob: -6.473190784454346
    10. '```' → logprob: -6.723190784454346

Token 6: ' sum' (ID: 4215)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.08323775976896286
    2. 'n' → logprob: -2.708237648010254
    3. ' ' → logprob: -4.333237648010254
    4. 's' → logprob: -10.708237648010254
    5. '(n' → logprob: -10.958237648010254
    6. '"' → logprob: -11.208237648010254
    7. ''' → logprob: -11.333237648010254
    8. ' None' → logprob: -12.458237648010254
    9. '[n' → logprob: -12.708237648010254
    10. ' "' → logprob: -12.833237648010254

Token 7: '(list' (ID: 13116)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005681642796844244
    2. '(n' → logprob: -7.625568389892578
    3. ' (' → logprob: -10.875568389892578
    4. ')' → logprob: -11.500568389892578
    5. '```' → logprob: -11.625568389892578
    6. '((' → logprob: -11.750568389892578
    7. '(range' → logprob: -11.875568389892578
    8. '(
' → logprob: -12.125568389892578
    9. '[' → logprob: -12.500568389892578
    10. '(

' → logprob: -13.000568389892578

Token 8: '(map' (ID: 16946)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.1297140270471573
    2. '(' → logprob: -2.129714012145996
    3. '(n' → logprob: -6.254714012145996
    4. '(map' → logprob: -8.129714012145996
    5. '(str' → logprob: -8.629714012145996
    6. '(s' → logprob: -9.254714012145996
    7. '(filter' → logprob: -9.629714012145996
    8. ')' → logprob: -10.129714012145996
    9. '(i' → logprob: -10.629714012145996
    10. '(int' → logprob: -10.754714012145996

Token 9: '(int' (ID: 2742)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.5311474800109863
    2. '(' → logprob: -1.1561474800109863
    3. '(str' → logprob: -2.6561474800109863
    4. '(int' → logprob: -3.9061474800109863
    5. '(abs' → logprob: -5.031147480010986
    6. 'lambda' → logprob: -9.281147003173828
    7. 'str' → logprob: -9.281147003173828
    8. ')' → logprob: -9.656147003173828
    9. 'abs' → logprob: -9.781147003173828
    10. '(chr' → logprob: -9.906147003173828

Token 10: ',' (ID: 11)
  Prédit: '(str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.03016916662454605
    2. '(' → logprob: -3.5301692485809326
    3. 'str' → logprob: -9.530169486999512
    4. ',' → logprob: -9.530169486999512
    5. '(s' → logprob: -9.655169486999512
    6. '(list' → logprob: -9.905169486999512
    7. '(n' → logprob: -10.030169486999512
    8. ',str' → logprob: -10.405169486999512
    9. ' str' → logprob: -10.780169486999512
    10. ')' → logprob: -10.780169486999512

Token 11: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.10190685093402863
    2. ' str' → logprob: -2.3519067764282227
    3. '(str' → logprob: -7.101906776428223
    4. 'list' → logprob: -7.226906776428223
    5. 'n' → logprob: -9.476906776428223
    6. ' list' → logprob: -10.226906776428223
    7. ' n' → logprob: -11.476906776428223
    8. ')' → logprob: -11.851906776428223
    9. 's' → logprob: -11.976906776428223
    10. '   ' → logprob: -12.476906776428223

Token 12: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0007379194721579552
    2. '(' → logprob: -7.250738143920898
    3. 'n' → logprob: -10.500738143920898
    4. ' (' → logprob: -15.875738143920898
    5. ')n' → logprob: -15.875738143920898
    6. '((' → logprob: -16.8757381439209
    7. '(
' → logprob: -17.0007381439209
    8. '(s' → logprob: -17.3757381439209
    9. ' n' → logprob: -17.3757381439209
    10. '(abs' → logprob: -17.5007381439209

Token 13: '))))
' (ID: 55084)
  Prédit: '))))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))))' → logprob: -0.0468933992087841
    2. ')' → logprob: -3.921893358230591
    3. '))' → logprob: -4.04689359664917
    4. ')))' → logprob: -4.79689359664917
    5. ' ))' → logprob: -9.296893119812012
    6. '   ' → logprob: -9.546893119812012
    7. ')))))
' → logprob: -10.796893119812012
    8. '))))

' → logprob: -11.046893119812012
    9. ')+' → logprob: -11.171893119812012
    10. ')))),' → logprob: -11.171893119812012

Token 14: '    
' (ID: 1944)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005900949705392122
    2. '(
' → logprob: -6.130900859832764
    3. '+' → logprob: -6.630900859832764
    4. '*' → logprob: -7.005900859832764
    5. ')' → logprob: -7.130900859832764
    6. '#' → logprob: -9.005901336669922
    7. '**' → logprob: -9.005901336669922
    8. '(n' → logprob: -9.130901336669922
    9. '(

' → logprob: -9.255901336669922
    10. '*(' → logprob: -10.755901336669922

Token 15: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08545102179050446
    2. '+' → logprob: -3.085451126098633
    3. '#' → logprob: -4.835451126098633
    4. '(
' → logprob: -4.960451126098633
    5. ')' → logprob: -5.585451126098633
    6. '(n' → logprob: -5.710451126098633
    7. '*' → logprob: -5.835451126098633
    8. 'def' → logprob: -5.835451126098633
    9. '+
' → logprob: -6.210451126098633
    10. '\n' → logprob: -6.835451126098633

Token 16: ' ss' (ID: 20928)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.09985989332199097
    2. ' f' → logprob: -2.8498599529266357
    3. ' p' → logprob: -3.8498599529266357
    4. 's' → logprob: -4.849859714508057
    5. ' a' → logprob: -6.724859714508057
    6. ' ' → logprob: -6.849859714508057
    7. ' c' → logprob: -6.974859714508057
    8. ' t' → logprob: -7.099859714508057
    9. '_' → logprob: -7.349859714508057
    10. ' g' → logprob: -7.974859714508057

Token 17: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.35354533791542053
    2. '(' → logprob: -1.4785453081130981
    3. 's' → logprob: -3.8535454273223877
    4. 'd' → logprob: -3.8535454273223877
    5. 'u' → logprob: -5.228545188903809
    6. 'q' → logprob: -5.353545188903809
    7. 'm' → logprob: -5.603545188903809
    8. '(a' → logprob: -6.103545188903809
    9. '(s' → logprob: -6.353545188903809
    10. 'a' → logprob: -6.353545188903809

Token 18: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.39481237530708313
    2. ')' → logprob: -1.8948123455047607
    3. ')):' → logprob: -1.8948123455047607
    4. '))' → logprob: -4.64481258392334
    5. '_' → logprob: -5.01981258392334
    6. '(n' → logprob: -6.14481258392334
    7. 's' → logprob: -6.26981258392334
    8. ' ):' → logprob: -6.64481258392334
    9. 'u' → logprob: -6.76981258392334
    10. 'e' → logprob: -7.76981258392334

Token 19: '   ' (ID: 271)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06488703191280365
    2. ' s' → logprob: -2.814887046813965
    3. 'n' → logprob: -6.189887046813965
    4. '   ' → logprob: -8.314887046813965
    5. ' n' → logprob: -8.939887046813965
    6. '(s' → logprob: -8.939887046813965
    7. '(n' → logprob: -9.314887046813965
    8. '(' → logprob: -9.564887046813965
    9. ' return' → logprob: -9.939887046813965
    10. 'return' → logprob: -9.939887046813965

Token 20: ' return' (ID: 622)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.4845631718635559
    2. 's' → logprob: -1.4845631122589111
    3. ' return' → logprob: -2.109563112258911
    4. 'return' (adapté à ' return') → logprob: -3.609563112258911
    5. '   ' → logprob: -5.85956335067749
    6. ' n' → logprob: -6.35956335067749
    7. 'n' → logprob: -6.48456335067749
    8. ' if' → logprob: -6.73456335067749
    9. ' ' → logprob: -7.85956335067749
    10. 'r' → logprob: -8.109562873840332

Token 21: ' n' (ID: 297)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.03449634462594986
    2. 's' → logprob: -3.409496307373047
    3. ' sum' → logprob: -7.659496307373047
    4. ' ' → logprob: -9.159496307373047
    5. 'sum' → logprob: -9.284496307373047
    6. ' ss' → logprob: -9.409496307373047
    7. ' n' → logprob: -11.034496307373047
    8. 'ss' → logprob: -11.034496307373047
    9. ' int' → logprob: -11.034496307373047
    10. ' ' → logprob: -11.284496307373047

Token 22: ' /' (ID: 820)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6466178297996521
    2. '(' → logprob: -1.7716178894042969
    3. '(n' → logprob: -2.896617889404297
    4. ' ' → logprob: -3.271617889404297
    5. ' %' → logprob: -3.396617889404297
    6. '%' → logprob: -3.396617889404297
    7. ' +' → logprob: -3.521617889404297
    8. '(s' → logprob: -4.146617889404297
    9. 'def' → logprob: -4.396617889404297
    10. '+' → logprob: -4.396617889404297

Token 23: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3843763768672943
    2. '2' → logprob: -2.509376287460327
    3. 'sum' → logprob: -2.634376287460327
    4. ' s' → logprob: -2.759376287460327
    5. '10' → logprob: -2.884376287460327
    6. ' ' → logprob: -3.884376287460327
    7. '9' → logprob: -4.884376525878906
    8. '1' → logprob: -5.134376525878906
    9. ' sum' → logprob: -5.384376525878906
    10. '100' → logprob: -6.009376525878906

Token 24: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0009199160267598927
    2. '(' → logprob: -7.000919818878174
    3. 's' → logprob: -12.125920295715332
    4. '(s' → logprob: -13.000920295715332
    5. ' (' → logprob: -14.875920295715332
    6. '(int' → logprob: -16.125919342041016
    7. 'n' → logprob: -16.500919342041016
    8. '(nn' → logprob: -17.500919342041016
    9. '(len' → logprob: -17.875919342041016
    10. ')' → logprob: -17.875919342041016

Token 25: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06200947239995003
    2. '))' → logprob: -2.812009572982788
    3. ')))' → logprob: -10.562009811401367
    4. ' )' → logprob: -12.062009811401367
    5. ')n' → logprob: -13.187009811401367
    6. '(n' → logprob: -13.437009811401367
    7. ')`' → logprob: -13.687009811401367
    8. ')
' → logprob: -13.937009811401367
    9. '())' → logprob: -14.687009811401367
    10. ')>' → logprob: -14.812009811401367

Token 26: 'K' (ID: 42)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5170251727104187
    2. '(' → logprob: -1.8920252323150635
    3. ')' → logprob: -2.3920252323150635
    4. 'def' → logprob: -2.8920252323150635
    5. '#' → logprob: -4.142024993896484
    6. 's' → logprob: -4.392024993896484
    7. '<|end|>' → logprob: -4.392024993896484
    8. 'n' → logprob: -5.017024993896484
    9. '.' → logprob: -5.142024993896484
    10. '+' → logprob: -5.142024993896484

Token 27: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01745433732867241
    2. '_' → logprob: -5.517454147338867
    3. '(n' → logprob: -5.767454147338867
    4. 'e' → logprob: -5.767454147338867
    5. '()' → logprob: -5.892454147338867
    6. '[' → logprob: -7.642454147338867
    7. '\(' → logprob: -7.642454147338867
    8. '(e' → logprob: -7.767454147338867
    9. 'K' → logprob: -8.642454147338867
    10. '\' → logprob: -8.892454147338867

Token 28: ' int' (ID: 677)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.4623781740665436
    2. '100' → logprob: -1.3373781442642212
    3. 'int' → logprob: -3.5873782634735107
    4. ' ' → logprob: -3.5873782634735107
    5. '18' → logprob: -4.462378025054932
    6. '1' → logprob: -4.587378025054932
    7. '0' → logprob: -5.212378025054932
    8. '20' → logprob: -5.587378025054932
    9. '50' → logprob: -5.587378025054932
    10. '5' → logprob: -5.712378025054932

Token 29: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.20434093475341797
    2. '(' → logprob: -1.704340934753418
    3. '('' → logprob: -6.204340934753418
    4. 'input' → logprob: -7.579340934753418
    5. '(K' → logprob: -9.329340934753418
    6. '("' → logprob: -9.579340934753418
    7. '()' → logprob: -9.704340934753418
    8. ''' → logprob: -10.204340934753418
    9. 'K' → logprob: -10.454340934753418
    10. ' (' → logprob: -10.704340934753418

Token 30: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.586690366268158
    2. '()' → logprob: -0.961690366268158
    3. '())' → logprob: -3.0866904258728027
    4. '('' → logprob: -4.461690425872803
    5. '("("' → logprob: -6.086690425872803
    6. '()))' → logprob: -7.336690425872803
    7. '(""))' → logprob: -7.961690425872803
    8. '("' → logprob: -8.086689949035645
    9. ')' → logprob: -8.461689949035645
    10. '("")' → logprob: -8.711689949035645

Token 31: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5653829574584961
    2. 'result' → logprob: -1.065382957458496
    3. 'print' → logprob: -3.565382957458496
    4. 'n' → logprob: -3.690382957458496
    5. 'x' → logprob: -4.815382957458496
    6. 'a' → logprob: -5.315382957458496
    7. 'res' → logprob: -5.690382957458496
    8. 'data' → logprob: -5.940382957458496
    9. 'num' → logprob: -6.065382957458496
    10. ' for' → logprob: -6.065382957458496

Token 32: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34725627303123474
    2. ' =' → logprob: -1.3472563028335571
    3. 'f' → logprob: -4.097256183624268
    4. 'n' → logprob: -4.347256183624268
    5. 'nt' → logprob: -5.722256183624268
    6. 'nd' → logprob: -8.347256660461426
    7. ' ' → logprob: -8.972256660461426
    8. 's' → logprob: -9.847256660461426
    9. 'd' → logprob: -10.597256660461426
    10. '+=' → logprob: -10.847256660461426

Token 33: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.021310050040483475
    2. '1' → logprob: -4.146309852600098
    3. ' K' → logprob: -5.646309852600098
    4. '0' → logprob: -6.646309852600098
    5. '2' → logprob: -8.271309852600098
    6. 'K' → logprob: -9.646309852600098
    7. ' s' → logprob: -9.646309852600098
    8. 's' → logprob: -11.146309852600098
    9. '10' → logprob: -11.521309852600098
    10. '100' → logprob: -13.146309852600098

Token 34: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.022744055837392807
    2. '0' → logprob: -4.022744178771973
    3. 'K' → logprob: -5.772744178771973
    4. '2' → logprob: -7.272744178771973
    5. 's' → logprob: -7.772744178771973
    6. '10' → logprob: -9.147744178771973
    7. ' ' → logprob: -9.772744178771973
    8. '999' → logprob: -9.772744178771973
    9. '100' → logprob: -10.022744178771973
    10. '9' → logprob: -11.272744178771973

Token 35: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.058110229671001434
    2. '<|end|>' → logprob: -3.058110237121582
    3. 'while' → logprob: -5.433110237121582
    4. ' while' → logprob: -5.933110237121582
    5. ' 
' → logprob: -6.433110237121582
    6. '<|end|>' → logprob: -8.058110237121582
    7. '
' → logprob: -8.808110237121582
    8. ' ' → logprob: -9.433110237121582
    9. '  
' → logprob: -9.433110237121582
    10. '\n' → logprob: -10.058110237121582

Token 36: 'd' (ID: 67)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2797081768512726
    2. 'while' → logprob: -1.6547081470489502
    3. ' 
' → logprob: -3.27970814704895
    4. ' while' → logprob: -4.404708385467529
    5. '<|end|>' → logprob: -6.404708385467529
    6. '  
' → logprob: -7.779708385467529
    7. 'w' → logprob: -8.404707908630371
    8. '
' → logprob: -9.029707908630371
    9. '\n' → logprob: -9.029707908630371
    10. '' → logprob: -9.529707908630371

Token 37: ' =' (ID: 314)
  Prédit: 'ef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ef' → logprob: -0.6178736686706543
    2. '=' → logprob: -1.4928736686706543
    3. ' =' → logprob: -1.6178736686706543
    4. 'ic' → logprob: -3.8678736686706543
    5. ' ' → logprob: -5.617873668670654
    6. 'e' → logprob: -5.617873668670654
    7. 'i' → logprob: -6.242873668670654
    8. 'ict' → logprob: -6.367873668670654
    9. '={}' → logprob: -6.367873668670654
    10. 'f' → logprob: -6.867873668670654

Token 38: ' ' (ID: 220)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.01840171217918396
    2. ' {}' → logprob: -4.018401622772217
    3. 'dict' → logprob: -9.393402099609375
    4. '{' → logprob: -10.018402099609375
    5. ' ' → logprob: -10.268402099609375
    6. '0' → logprob: -10.268402099609375
    7. '[]' → logprob: -11.143402099609375
    8. ' []' → logprob: -11.268402099609375
    9. ' dict' → logprob: -12.393402099609375
    10. '{}
' → logprob: -12.518402099609375

Token 39: '1' (ID: 16)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.0013053566217422485
    2. 'dict' → logprob: -7.62630558013916
    3. '1' → logprob: -8.12630558013916
    4. '{' → logprob: -8.25130558013916
    5. '0' → logprob: -8.62630558013916
    6. '[]' → logprob: -10.50130558013916
    7. '100' → logprob: -11.37630558013916
    8. ' {}' → logprob: -11.75130558013916
    9. '{})' → logprob: -11.75130558013916
    10. '2' → logprob: -12.12630558013916

Token 40: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02139442227780819
    2. ' 
' → logprob: -4.3963942527771
    3. '0' → logprob: -5.6463942527771
    4. 'while' → logprob: -6.1463942527771
    5. ' while' → logprob: -6.6463942527771
    6. '  
' → logprob: -7.2713942527771
    7. '+
' → logprob: -8.396394729614258
    8. '

' → logprob: -8.771394729614258
    9. '
' → logprob: -8.771394729614258
    10. '+' → logprob: -9.271394729614258

Token 41: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6794590353965759
    2. '
' → logprob: -1.5544590950012207
    3. ' while' → logprob: -1.5544590950012207
    4. '+' → logprob: -3.3044590950012207
    5. '+
' → logprob: -4.179459095001221
    6. ' 
' → logprob: -5.429459095001221
    7. ':' → logprob: -6.179459095001221
    8. '*' → logprob: -6.179459095001221
    9. '0' → logprob: -6.679459095001221
    10. 'While' → logprob: -6.804459095001221

Token 42: ' K' (ID: 658)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3082325756549835
    2. ' d' → logprob: -1.4332325458526611
    3. 'd' → logprob: -4.30823278427124
    4. 'i' → logprob: -4.43323278427124
    5. ' ' → logprob: -7.43323278427124
    6. ' True' → logprob: -7.43323278427124
    7. 'True' → logprob: -9.433232307434082
    8. ' K' → logprob: -9.683232307434082
    9. '  ' → logprob: -11.433232307434082
    10. ' (' → logprob: -11.683232307434082

Token 43: ':
' (ID: 734)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.6514659523963928
    2. '>' → logprob: -1.151465892791748
    3. ' >=' → logprob: -2.151465892791748
    4. '>=' → logprob: -3.151465892791748
    5. ' !=' → logprob: -6.651465892791748
    6. '!=' → logprob: -7.151465892791748
    7. '%' → logprob: -7.651465892791748
    8. '-' → logprob: -8.526466369628906
    9. ' %' → logprob: -8.901466369628906
    10. ' ' → logprob: -9.276466369628906

Token 44: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9568037390708923
    2. ' ' → logprob: -1.331803798675537
    3. ' if' → logprob: -1.956803798675537
    4. ' 
' → logprob: -3.081803798675537
    5. ' >' → logprob: -3.706803798675537
    6. '    ' → logprob: -3.831803798675537
    7. 'd' → logprob: -3.956803798675537
    8. ' i' → logprob: -4.206803798675537
    9. '=' → logprob: -4.831803798675537
    10. '    
' → logprob: -4.956803798675537

Token 45: ' check' (ID: 2371)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.9741467833518982
    2. 'i' → logprob: -1.599146842956543
    3. ' d' → logprob: -1.974146842956543
    4. 'd' → logprob: -1.974146842956543
    5. ' if' → logprob: -2.474146842956543
    6. '   ' → logprob: -3.474146842956543
    7. ' ' → logprob: -5.099146842956543
    8. 'if' → logprob: -5.099146842956543
    9. ' n' → logprob: -5.849146842956543
    10. ' while' → logprob: -6.099146842956543

Token 46: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47493159770965576
    2. '=' → logprob: -1.5999315977096558
    3. '_' → logprob: -2.2249317169189453
    4. 'd' → logprob: -4.099931716918945
    5. '_d' → logprob: -4.099931716918945
    6. ' ' → logprob: -4.599931716918945
    7. 'ed' → logprob: -5.349931716918945
    8. 's' → logprob: -5.474931716918945
    9. '=d' → logprob: -6.099931716918945
    10. 'er' → logprob: -6.224931716918945

Token 47: ' lambda' (ID: 27871)
  Prédit: ' ss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ss' → logprob: -0.7638126015663147
    2. 'ss' → logprob: -1.26381254196167
    3. ' d' → logprob: -2.51381254196167
    4. ' i' → logprob: -3.01381254196167
    5. 'd' → logprob: -3.13881254196167
    6. ' s' → logprob: -3.51381254196167
    7. 'i' → logprob: -4.01381254196167
    8. 's' → logprob: -4.01381254196167
    9. ' (' → logprob: -6.13881254196167
    10. ' ' → logprob: -6.26381254196167

Token 48: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.2670502662658691
    2. 'x' → logprob: -1.5170502662658691
    3. ' n' → logprob: -2.142050266265869
    4. 'd' → logprob: -2.142050266265869
    5. 'n' → logprob: -2.517050266265869
    6. ' d' → logprob: -2.517050266265869
    7. ' i' → logprob: -3.142050266265869
    8. 'i' → logprob: -3.517050266265869
    9. ' lambda' → logprob: -4.392050266265869
    10. 'lambda' → logprob: -4.517050266265869

Token 49: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009003927931189537
    2. ' :' → logprob: -4.75900411605835
    3. ':x' → logprob: -8.384003639221191
    4. 'x' → logprob: -9.884003639221191
    5. ',' → logprob: -10.509003639221191
    6. ':i' → logprob: -10.884003639221191
    7. ' x' → logprob: -11.134003639221191
    8. ':n' → logprob: -11.384003639221191
    9. 'd' → logprob: -11.384003639221191
    10. ':d' → logprob: -12.634003639221191

Token 50: ' ss' (ID: 20928)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.8615317344665527
    2. 'x' → logprob: -1.1115317344665527
    3. 'ss' → logprob: -2.8615317344665527
    4. ' s' → logprob: -3.3615317344665527
    5. ' ss' → logprob: -3.6115317344665527
    6. 'd' → logprob: -3.7365317344665527
    7. 's' → logprob: -3.7365317344665527
    8. ' d' → logprob: -3.9865317344665527
    9. ' (' → logprob: -4.361531734466553
    10. '(ss' → logprob: -4.736531734466553

Token 51: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0017596713732928038
    2. 'x' → logprob: -7.2517595291137695
    3. '(' → logprob: -7.3767595291137695
    4. '(i' → logprob: -9.37675952911377
    5. '(int' → logprob: -9.37675952911377
    6. '(str' → logprob: -9.75175952911377
    7. '(d' → logprob: -9.75175952911377
    8. 'd' → logprob: -9.87675952911377
    9. '(s' → logprob: -10.75175952911377
    10. '(check' → logprob: -10.75175952911377

Token 52: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017465583980083466
    2. ')==' → logprob: -4.267465591430664
    3. ' )' → logprob: -6.392465591430664
    4. ')%' → logprob: -7.142465591430664
    5. ')>' → logprob: -8.642465591430664
    6. ')>=' → logprob: -9.017465591430664
    7. ').' → logprob: -9.267465591430664
    8. ')<=' → logprob: -9.517465591430664
    9. ')*' → logprob: -10.017465591430664
    10. ')x' → logprob: -10.267465591430664

Token 53: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6576387286186218
    2. '(i' → logprob: -0.9076387286186218
    3. '<|end|>' → logprob: -3.4076387882232666
    4. '(x' → logprob: -3.9076387882232666
    5. ' ==' → logprob: -5.2826385498046875
    6. '(d' → logprob: -5.2826385498046875
    7. ')' → logprob: -5.6576385498046875
    8. '   ' → logprob: -6.5326385498046875
    9. '(K' → logprob: -6.9076385498046875
    10. '(check' → logprob: -6.9076385498046875

Token 54: ' t' (ID: 260)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.867551863193512
    2. '(' → logprob: -0.992551863193512
    3. '(x' → logprob: -2.867551803588867
    4. '(K' → logprob: -2.992551803588867
    5. '(k' → logprob: -3.992551803588867
    6. ' if' → logprob: -4.117551803588867
    7. ' ==' → logprob: -4.742551803588867
    8. '<|end|>' → logprob: -4.992551803588867
    9. '(n' → logprob: -5.242551803588867
    10. '   ' → logprob: -5.367551803588867

Token 55: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4403320550918579
    2. '=' → logprob: -1.065332055091858
    3. 'arget' → logprob: -6.315331935882568
    4. '+=' → logprob: -6.565331935882568
    5. 'emp' → logprob: -6.565331935882568
    6. 'ry' → logprob: -6.690331935882568
    7. '=i' → logprob: -6.940331935882568
    8. 'r' → logprob: -7.565331935882568
    9. ' +=' → logprob: -7.690331935882568
    10. 'est' → logprob: -8.190332412719727

Token 56: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11146297305822372
    2. '=' → logprob: -2.3614630699157715
    3. ' ' → logprob: -5.1114630699157715
    4. '+' → logprob: -6.7364630699157715
    5. ' +=' → logprob: -6.8614630699157715
    6. ',' → logprob: -7.4864630699157715
    7. ' +' → logprob: -7.8614630699157715
    8. '+=' → logprob: -7.9864630699157715
    9. ' ==' → logprob: -8.236462593078613
    10. 'ime' → logprob: -8.486462593078613

Token 57: ' check' (ID: 2371)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.8000100255012512
    2. ' check' → logprob: -1.3000099658966064
    3. 'd' → logprob: -2.4250099658966064
    4. ' i' → logprob: -2.8000099658966064
    5. 'check' → logprob: -3.1750099658966064
    6. ' s' → logprob: -3.8000099658966064
    7. ' ss' → logprob: -4.0500102043151855
    8. ' ' → logprob: -4.4250102043151855
    9. 'i' → logprob: -4.5500102043151855
    10. 'ss' → logprob: -5.1750102043151855

Token 58: '(i' (ID: 3649)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.26560652256011963
    2. '(i' → logprob: -1.5156065225601196
    3. '(' → logprob: -4.51560640335083
    4. '(K' → logprob: -6.39060640335083
    5. '((' → logprob: -7.64060640335083
    6. '(s' → logprob: -8.640606880187988
    7. '(t' → logprob: -9.390606880187988
    8. '(D' → logprob: -9.515606880187988
    9. 'd' → logprob: -10.140606880187988
    10. '(n' → logprob: -10.515606880187988

Token 59: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.027399776503443718
    2. '+' → logprob: -4.15239953994751
    3. ')
' → logprob: -5.15239953994751
    4. ' )' → logprob: -6.02739953994751
    5. ' +' → logprob: -6.52739953994751
    6. ')+' → logprob: -7.65239953994751
    7. '+d' → logprob: -8.652400016784668
    8. '+)' → logprob: -9.027400016784668
    9. '-' → logprob: -9.152400016784668
    10. ')
' → logprob: -9.152400016784668

Token 60: ' d' (ID: 272)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9075890183448792
    2. 'd' → logprob: -1.0325889587402344
    3. ' d' → logprob: -1.7825889587402344
    4. ' ' → logprob: -2.6575889587402344
    5. '2' → logprob: -6.407588958740234
    6. '3' → logprob: -9.532588958740234
    7. '7' → logprob: -10.032588958740234
    8. '  ' → logprob: -10.157588958740234
    9. '   ' → logprob: -10.282588958740234
    10. '10' → logprob: -10.282588958740234

Token 61: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005878544878214598
    2. ')
' → logprob: -5.255878448486328
    3. ' )' → logprob: -7.630878448486328
    4. ')

' → logprob: -9.505878448486328
    5. ')
' → logprob: -10.630878448486328
    6. ' )
' → logprob: -11.005878448486328
    7. '))' → logprob: -11.505878448486328
    8. ')`' → logprob: -12.005878448486328
    9. ')>' → logprob: -12.630878448486328
    10. ')==' → logprob: -12.755878448486328

Token 62: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8979014158248901
    2. ' if' → logprob: -1.1479014158248901
    3. 'if' → logprob: -2.5229015350341797
    4. ')' → logprob: -2.6479015350341797
    5. '   ' → logprob: -3.3979015350341797
    6. '<|end|>' → logprob: -3.6479015350341797
    7. ' 
' → logprob: -4.52290153503418
    8. '+' → logprob: -4.64790153503418
    9. ')
' → logprob: -4.77290153503418
    10. ' ' → logprob: -4.89790153503418

Token 63: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9744335412979126
    2. '
' → logprob: -1.3494335412979126
    3. ' if' → logprob: -1.7244335412979126
    4. ' ' → logprob: -2.974433422088623
    5. ' 
' → logprob: -3.724433422088623
    6. '    
' → logprob: -4.474433422088623
    7. '  
' → logprob: -4.599433422088623
    8. '+' → logprob: -4.599433422088623
    9. '  ' → logprob: -4.724433422088623
    10. '    ' → logprob: -4.974433422088623

Token 64: ' t' (ID: 260)
  Prédit: ' check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.07009704411029816
    2. ' f' → logprob: -3.445096969604492
    3. ' t' → logprob: -4.445096969604492
    4. ' inner' → logprob: -5.445096969604492
    5. 't' → logprob: -5.820096969604492
    6. ' s' → logprob: -6.320096969604492
    7. ' ' → logprob: -6.695096969604492
    8. ' test' → logprob: -6.820096969604492
    9. ' checker' → logprob: -6.945096969604492
    10. ' compare' → logprob: -7.132596969604492

Token 65: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.31470298767089844
    2. '1' → logprob: -1.4397029876708984
    3. 't' → logprob: -5.814702987670898
    4. 's' → logprob: -5.939702987670898
    5. 'ss' → logprob: -5.939702987670898
    6. '_' → logprob: -6.064702987670898
    7. ' =' → logprob: -6.064702987670898
    8. 'f' → logprob: -6.064702987670898
    9. '_check' → logprob: -6.314702987670898
    10. 'est' → logprob: -6.752202987670898

Token 66: 'calc' (ID: 49633)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.16959992051124573
    2. '(n' → logprob: -2.294600009918213
    3. ' =' → logprob: -3.919600009918213
    4. ' (' → logprob: -3.919600009918213
    5. '(i' → logprob: -5.294600009918213
    6. '=' → logprob: -5.669600009918213
    7. '():' → logprob: -6.294600009918213
    8. '(t' → logprob: -6.419600009918213
    9. '():
' → logprob: -7.669600009918213
    10. ':' → logprob: -7.794600009918213

Token 67: '():
' (ID: 8595)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.322488009929657
    2. '(n' → logprob: -1.6974880695343018
    3. '():' → logprob: -3.4474880695343018
    4. '(t' → logprob: -4.072487831115723
    5. '():
' → logprob: -4.322487831115723
    6. '(i' → logprob: -4.447487831115723
    7. ' (' → logprob: -4.447487831115723
    8. '(' → logprob: -5.822487831115723
    9. '(d' → logprob: -6.447487831115723
    10. ' ():' → logprob: -7.322487831115723

Token 68: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029573088511824608
    2. '   ' → logprob: -3.9045732021331787
    3. ' return' → logprob: -5.4045729637146
    4. ' for' → logprob: -6.7795729637146
    5. 'return' → logprob: -7.0295729637146
    6. ' t' → logprob: -7.9045729637146
    7. '    ' → logprob: -8.029573440551758
    8. '     ' → logprob: -8.279573440551758
    9. 't' → logprob: -8.779573440551758
    10. ' while' → logprob: -9.154573440551758

Token 69: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5656920671463013
    2. 'return' (adapté à ' return') → logprob: -1.3156920671463013
    3. ' non' → logprob: -3.9406919479370117
    4. ' t' → logprob: -4.190691947937012
    5. '       ' → logprob: -4.315691947937012
    6. 't' → logprob: -4.315691947937012
    7. '   ' → logprob: -4.440691947937012
    8. ' for' → logprob: -4.565691947937012
    9. ' while' → logprob: -4.815691947937012
    10. 'r' → logprob: -5.190691947937012

Token 70: ' ss' (ID: 20928)
  Prédit: ' ss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ss' → logprob: -0.6190003156661987
    2. 'ss' → logprob: -0.9940003156661987
    3. ' check' → logprob: -3.3690004348754883
    4. 'check' → logprob: -4.244000434875488
    5. '(ss' → logprob: -4.619000434875488
    6. ' (' → logprob: -4.619000434875488
    7. ' t' → logprob: -5.619000434875488
    8. 't' → logprob: -5.869000434875488
    9. ' ' → logprob: -6.119000434875488
    10. ' s' → logprob: -6.244000434875488

Token 71: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0012305884156376123
    2. '(' → logprob: -6.751230716705322
    3. '((' → logprob: -10.501230239868164
    4. ' (' → logprob: -11.501230239868164
    5. '(d' → logprob: -12.376230239868164
    6. '(x' → logprob: -12.501230239868164
    7. '(I' → logprob: -12.751230239868164
    8. '(n' → logprob: -13.001230239868164
    9. '(t' → logprob: -13.376230239868164
    10. '(
' → logprob: -13.501230239868164

Token 72: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.27396419644355774
    2. ' +' → logprob: -1.6489641666412354
    3. '+d' → logprob: -3.3989641666412354
    4. '-' → logprob: -5.0239644050598145
    5. ')' → logprob: -5.6489644050598145
    6. ' -' → logprob: -6.0239644050598145
    7. ' ' → logprob: -7.7739644050598145
    8. 'd' → logprob: -8.773963928222656
    9. ')+' → logprob: -8.898963928222656
    10. ' )' → logprob: -9.148963928222656

Token 73: ' ' (ID: 220)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.29166755080223083
    2. '2' → logprob: -1.5416675806045532
    3. '1' → logprob: -4.166667461395264
    4. ' d' → logprob: -4.916667461395264
    5. '(d' → logprob: -5.291667461395264
    6. ' ' → logprob: -5.541667461395264
    7. '(' → logprob: -5.666667461395264
    8. '3' → logprob: -6.166667461395264
    9. ' (' → logprob: -7.791667461395264
    10. '10' → logprob: -8.041667938232422

Token 74: '10' (ID: 702)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5522764921188354
    2. '2' → logprob: -0.9272764921188354
    3. '1' → logprob: -4.302276611328125
    4. '(d' → logprob: -5.427276611328125
    5. '(' → logprob: -5.552276611328125
    6. '3' → logprob: -5.552276611328125
    7. ' ' → logprob: -6.677276611328125
    8. ' d' → logprob: -7.302276611328125
    9. '10' → logprob: -8.302276611328125
    10. ' (' → logprob: -9.052276611328125

Token 75: ' *' (ID: 425)
  Prédit: '*d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*d' → logprob: -0.08591026067733765
    2. 'd' → logprob: -2.7109103202819824
    3. ' *' → logprob: -4.710910320281982
    4. ')' → logprob: -5.210910320281982
    5. '0' → logprob: -7.460910320281982
    6. ' d' → logprob: -8.585909843444824
    7. ')d' → logprob: -9.335909843444824
    8. '000' → logprob: -9.460909843444824
    9. '*' → logprob: -9.585909843444824
    10. '00' → logprob: -9.835909843444824

Token 76: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0022314980160444975
    2. ' d' → logprob: -6.127231597900391
    3. '   ' → logprob: -11.12723159790039
    4. ' ' → logprob: -11.12723159790039
    5. '  ' → logprob: -12.00223159790039
    6. '    ' → logprob: -13.68973159790039
    7. '*d' → logprob: -13.68973159790039
    8. '(d' → logprob: -14.12723159790039
    9. 'i' → logprob: -14.43973159790039
    10. '       ' → logprob: -14.56473159790039

Token 77: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002843384863808751
    2. ' )' → logprob: -8.625284194946289
    3. ')
' → logprob: -9.750284194946289
    4. '))' → logprob: -11.125284194946289
    5. '+)' → logprob: -12.125284194946289
    6. ')return' → logprob: -12.750284194946289
    7. '+' → logprob: -12.750284194946289
    8. '   ' → logprob: -12.875284194946289
    9. ' ' → logprob: -13.000284194946289
    10. ')

' → logprob: -13.375284194946289

Token 78: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46079370379447937
    2. '
' → logprob: -1.0857937335968018
    3. '<|end|>' → logprob: -3.8357937335968018
    4. '    
' → logprob: -5.210793495178223
    5. ')' → logprob: -6.960793495178223
    6. ' ' → logprob: -7.460793495178223
    7. '

' → logprob: -7.460793495178223
    8. '  
' → logprob: -7.835793495178223
    9. '  ' → logprob: -8.210793495178223
    10. 't' → logprob: -8.210793495178223

Token 79: ' t' (ID: 260)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.597683846950531
    2. '<|end|>' → logprob: -1.4726839065551758
    3. '
' → logprob: -1.7226839065551758
    4. '    
' → logprob: -4.347683906555176
    5. ' ' → logprob: -5.347683906555176
    6. 't' (adapté à ' t') → logprob: -5.347683906555176
    7. '  
' → logprob: -5.472683906555176
    8. '<|end|>' → logprob: -5.472683906555176
    9. ')' → logprob: -5.597683906555176
    10. ' t' → logprob: -6.597683906555176

Token 80: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.4617256056226324e-05
    2. 'o' → logprob: -12.500014305114746
    3. '1' → logprob: -12.750014305114746
    4. ' ' → logprob: -13.625014305114746
    5. '_' → logprob: -13.750014305114746
    6. ' =' → logprob: -13.875014305114746
    7. '₂' → logprob: -14.000014305114746
    8. 'c' → logprob: -14.375014305114746
    9. 'p' → logprob: -14.875014305114746
    10. 'wo' → logprob: -15.000014305114746

Token 81: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3884652554988861
    2. '=' → logprob: -1.2634652853012085
    3. 'calc' → logprob: -3.263465166091919
    4. 'cal' → logprob: -8.51346492767334
    5. '_' → logprob: -8.63846492767334
    6. 'c' → logprob: -9.01346492767334
    7. '   ' → logprob: -9.01346492767334
    8. ' ' → logprob: -9.26346492767334
    9. ',' → logprob: -9.38846492767334
    10. '  ' → logprob: -10.01346492767334

Token 82: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.348514586687088
    2. 't' → logprob: -1.2235145568847656
    3. ' ' → logprob: -10.223514556884766
    4. 'None' → logprob: -12.223514556884766
    5. ' None' → logprob: -12.598514556884766
    6. 's' → logprob: -12.598514556884766
    7. '   ' → logprob: -12.723514556884766
    8. '    ' → logprob: -12.723514556884766
    9. ' ' → logprob: -12.723514556884766
    10. 'd' → logprob: -13.098514556884766

Token 83: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.009202866815030575
    2. 'calc' → logprob: -4.75920295715332
    3. '1' → logprob: -7.63420295715332
    4. 'c' → logprob: -9.50920295715332
    5. 'cal' → logprob: -11.25920295715332
    6. '.calc' → logprob: -12.25920295715332
    7. '(calc' → logprob: -12.50920295715332
    8. 'o' → logprob: -13.63420295715332
    9. 'ocal' → logprob: -13.75920295715332
    10. 'check' → logprob: -13.88420295715332

Token 84: 'calc' (ID: 49633)
  Prédit: 'calc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.00034774013329297304
    2. 'cal' → logprob: -8.000348091125488
    3. 'calculate' → logprob: -12.750348091125488
    4. '+' → logprob: -13.250348091125488
    5. '.calc' → logprob: -13.625348091125488
    6. ' calc' → logprob: -13.750348091125488
    7. 'c' → logprob: -13.875348091125488
    8. '(calc' → logprob: -14.000348091125488
    9. '-' → logprob: -14.500348091125488
    10. ' +' → logprob: -14.750348091125488

Token 85: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -6.2729995988775045e-06
    2. '()
' → logprob: -13.125006675720215
    3. ']()' → logprob: -13.500006675720215
    4. '()(' → logprob: -13.750006675720215
    5. '(' → logprob: -14.625006675720215
    6. '`()' → logprob: -14.750006675720215
    7. ' ()' → logprob: -15.250006675720215
    8. '()

' → logprob: -15.500006675720215
    9. '>()' → logprob: -16.1250057220459
    10. '()]' → logprob: -16.6250057220459

Token 86: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01723220758140087
    2. '<|end|>' → logprob: -4.392232418060303
    3. '
' → logprob: -6.017232418060303
    4. '    
' → logprob: -6.892232418060303
    5. ' if' → logprob: -8.267231941223145
    6. ' 
' → logprob: -8.392231941223145
    7. '  
' → logprob: -8.517231941223145
    8. '  ' → logprob: -8.767231941223145
    9. '<|end|>' → logprob: -9.267231941223145
    10. ' ' → logprob: -9.392231941223145

Token 87: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09185012429952621
    2. ' if' → logprob: -2.5918500423431396
    3. 'if' (adapté à ' if') → logprob: -4.466850280761719
    4. ' ' → logprob: -7.591850280761719
    5. '    ' → logprob: -8.341850280761719
    6. ' while' → logprob: -8.716850280761719
    7. '+' → logprob: -9.216850280761719
    8. '  ' → logprob: -9.466850280761719
    9. ')' → logprob: -10.091850280761719
    10. '    
' → logprob: -10.216850280761719

Token 88: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.09130538254976273
    2. 't' → logprob: -2.4663054943084717
    3. ' abs' → logprob: -6.591305255889893
    4. ' ' → logprob: -7.591305255889893
    5. 'abs' → logprob: -8.59130573272705
    6. ' (' → logprob: -9.21630573272705
    7. ' K' → logprob: -10.34130573272705
    8. '(' → logprob: -10.59130573272705
    9. 'K' → logprob: -10.71630573272705
    10. ' s' → logprob: -10.71630573272705

Token 89: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.029867349192500114
    2. '2' → logprob: -3.52986741065979
    3. ' ' → logprob: -10.529867172241211
    4. ' >' → logprob: -11.029867172241211
    5. '(' → logprob: -11.154867172241211
    6. '_' → logprob: -11.529867172241211
    7. ' <' → logprob: -11.904867172241211
    8. 'e' → logprob: -12.029867172241211
    9. ' (' → logprob: -12.279867172241211
    10. 'est' → logprob: -12.529867172241211

Token 90: ' >' (ID: 1424)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3963945209980011
    2. ' >' → logprob: -1.1463944911956787
    3. '>' → logprob: -5.646394729614258
    4. '<' → logprob: -6.021394729614258
    5. ' ' → logprob: -6.521394729614258
    6. ' ==' → logprob: -6.771394729614258
    7. ' <=' → logprob: -8.021394729614258
    8. ' /' → logprob: -8.896394729614258
    9. ' *' → logprob: -9.021394729614258
    10. ' >=' → logprob: -9.271394729614258

Token 91: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.14283958077430725
    2. 't' → logprob: -2.0178396701812744
    3. ' ' → logprob: -8.892839431762695
    4. '0' → logprob: -11.017839431762695
    5. ' ' → logprob: -13.142839431762695
    6. '=' → logprob: -13.392839431762695
    7. 's' → logprob: -14.267839431762695
    8. '  ' → logprob: -14.455339431762695
    9. '   ' → logprob: -14.455339431762695
    10. ' s' → logprob: -14.517839431762695

Token 92: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.817902173381299e-05
    2. ' ' → logprob: -9.25009822845459
    3. '1' → logprob: -14.75009822845459
    4. '_' → logprob: -14.87509822845459
    5. 's' → logprob: -15.12509822845459
    6. '₂' → logprob: -15.62509822845459
    7. 't' → logprob: -16.187597274780273
    8. '۲' → logprob: -16.562597274780273
    9. '   ' → logprob: -16.625097274780273
    10. ' s' → logprob: -16.687597274780273

Token 93: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00017350474081467837
    2. ':
' → logprob: -8.750173568725586
    3. ' :' → logprob: -11.875173568725586
    4. ' and' → logprob: -12.750173568725586
    5. ' or' → logprob: -13.000173568725586
    6. '   ' → logprob: -13.500173568725586
    7. '       ' → logprob: -15.375173568725586
    8. ':i' → logprob: -15.500173568725586
    9. '):' → logprob: -15.875173568725586
    10. '=' → logprob: -16.000173568725586

Token 94: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.039236582815647125
    2. '   ' → logprob: -4.164236545562744
    3. ' i' → logprob: -4.289236545562744
    4. ' d' → logprob: -5.289236545562744
    5. 'd' → logprob: -5.914236545562744
    6. 'i' → logprob: -6.914236545562744
    7. '    ' → logprob: -8.289237022399902
    8. '      ' → logprob: -9.914237022399902
    9. ':' → logprob: -10.539237022399902
    10. ' ' → logprob: -10.789237022399902

Token 95: ' d' (ID: 272)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.8245118856430054
    2. ' d' → logprob: -0.9495118856430054
    3. '   ' → logprob: -2.449512004852295
    4. 'd' (adapté à ' d') → logprob: -2.949512004852295
    5. 'i' → logprob: -3.574512004852295
    6. '       ' → logprob: -4.949512004852295
    7. '    ' → logprob: -7.574512004852295
    8. '  ' → logprob: -9.949511528015137
    9. '    
' → logprob: -10.199511528015137
    10. '
' → logprob: -10.324511528015137

Token 96: ' =' (ID: 314)
  Prédit: ' *='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *=' → logprob: -0.08523824065923691
    2. '*=' → logprob: -2.835238218307495
    3. ' =' → logprob: -4.210238456726074
    4. '=' → logprob: -5.585238456726074
    5. ' +=' → logprob: -5.835238456726074
    6. ' <<=' → logprob: -7.335238456726074
    7. '+=' → logprob: -7.460238456726074
    8. ' ' → logprob: -9.335238456726074
    9. '*' → logprob: -10.085238456726074
    10. ' *' → logprob: -10.585238456726074

Token 97: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.7974016070365906
    2. 'd' → logprob: -1.1724016666412354
    3. '10' → logprob: -1.6724016666412354
    4. ' ' → logprob: -3.2974016666412354
    5. '1' → logprob: -4.547401428222656
    6. '0' → logprob: -5.797401428222656
    7. '    ' → logprob: -7.797401428222656
    8. '2' → logprob: -8.547401428222656
    9. '5' → logprob: -8.547401428222656
    10. '	d' → logprob: -8.672401428222656

Token 98: ' *' (ID: 425)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22872573137283325
    2. '*' → logprob: -1.6037256717681885
    3. ' *' → logprob: -6.728725910186768
    4. '+' → logprob: -6.978725910186768
    5. ' ' → logprob: -7.603725910186768
    6. '10' → logprob: -7.978725910186768
    7. '1' → logprob: -8.22872543334961
    8. '2' → logprob: -9.97872543334961
    9. '*
' → logprob: -12.72872543334961
    10. '   ' → logprob: -13.22872543334961

Token 99: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.08939807116985321
    2. '1' → logprob: -2.714398145675659
    3. '0' → logprob: -4.08939790725708
    4. ' ' → logprob: -6.83939790725708
    5. '2' → logprob: -7.46439790725708
    6. '5' → logprob: -7.71439790725708
    7. '   ' → logprob: -8.964398384094238
    8. '-' → logprob: -9.339398384094238
    9. '  ' → logprob: -10.464398384094238
    10. '9' → logprob: -10.651898384094238

Token 100: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.019671335816383362
    2. '1' → logprob: -4.019671440124512
    3. '0' → logprob: -6.769671440124512
    4. '2' → logprob: -8.894671440124512
    5. ' ' → logprob: -9.644671440124512
    6. '-' → logprob: -9.894671440124512
    7. '5' → logprob: -10.144671440124512
    8. '   ' → logprob: -10.769671440124512
    9. '7' → logprob: -11.707171440124512
    10. '  ' → logprob: -12.144671440124512

Token 101: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24161173403263092
    2. 'else' → logprob: -1.7416117191314697
    3. ' else' → logprob: -3.4916117191314697
    4. '
' → logprob: -5.491611957550049
    5. '    
' → logprob: -5.491611957550049
    6. '<|end|>' → logprob: -8.99161148071289
    7. 'elif' → logprob: -8.99161148071289
    8. '	else' → logprob: -9.11661148071289
    9. 'i' → logprob: -9.49161148071289
    10. '  
' → logprob: -9.61661148071289

Token 102: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.3685043156147003
    2. ' else' → logprob: -1.493504285812378
    3. '   ' → logprob: -2.493504285812378
    4. 'i' → logprob: -8.243504524230957
    5. 'elif' → logprob: -8.243504524230957
    6. '	else' → logprob: -8.368504524230957
    7. '    
' → logprob: -9.618504524230957
    8. '
' → logprob: -10.118504524230957
    9. ' ' → logprob: -10.243504524230957
    10. '<|end|>' → logprob: -10.493504524230957

Token 103: ' i' (ID: 575)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.044366925954818726
    2. ' else' → logprob: -3.2943668365478516
    3. '   ' → logprob: -5.169366836547852
    4. 'elif' → logprob: -7.419366836547852
    5. '	else' → logprob: -12.044366836547852
    6. ' elif' → logprob: -12.169366836547852
    7. '<|end|>' → logprob: -13.419366836547852
    8. '
' → logprob: -13.544366836547852
    9. '    
' → logprob: -13.794366836547852
    10. ' ' → logprob: -14.169366836547852

Token 104: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.04549884423613548
    2. '+' → logprob: -3.545498847961426
    3. '+=' → logprob: -4.545498847961426
    4. ' +' → logprob: -5.670498847961426
    5. ' ' → logprob: -7.045498847961426
    6. ' =' → logprob: -7.670498847961426
    7. '=' → logprob: -8.545498847961426
    8. '<|end|>' → logprob: -11.045498847961426
    9. '   ' → logprob: -13.045498847961426
    10. '    ' → logprob: -13.170498847961426

Token 105: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.6561824679374695
    2. 'd' → logprob: -0.7811824679374695
    3. '1' → logprob: -4.156182289123535
    4. ' ' → logprob: -4.906182289123535
    5. '10' → logprob: -8.906182289123535
    6. ' i' → logprob: -10.156182289123535
    7. 'i' → logprob: -11.031182289123535
    8. ' t' → logprob: -11.906182289123535
    9. 't' → logprob: -12.343682289123535
    10. '	d' → logprob: -12.343682289123535

Token 106: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2747713327407837
    2. '<|end|>' → logprob: -2.149771213531494
    3. '-' → logprob: -3.149771213531494
    4. 'K' → logprob: -4.274771213531494
    5. '```' → logprob: -4.399771213531494
    6. '#' → logprob: -4.524771213531494
    7. ' if' → logprob: -4.524771213531494
    8. 'if' → logprob: -5.274771213531494
    9. '    ' → logprob: -5.399771213531494
    10. ' K' → logprob: -5.649771213531494

Token 107: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03649032488465309
    2. '-' → logprob: -3.5364904403686523
    3. '<|end|>' → logprob: -5.411490440368652
    4. '    ' → logprob: -7.786490440368652
    5. '#' → logprob: -7.911490440368652
    6. '    
' → logprob: -8.036490440368652
    7. '-
' → logprob: -8.536490440368652
    8. ')' → logprob: -8.661490440368652
    9. '
' → logprob: -9.161490440368652
    10. '```' → logprob: -9.411490440368652

Token 108: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09032357484102249
    2. 'K' → logprob: -2.4653236865997314
    3. '-' → logprob: -7.465323448181152
    4. ' K' → logprob: -7.965323448181152
    5. '#' → logprob: -9.465323448181152
    6. 'print' (adapté à ' print') → logprob: -9.465323448181152
    7. '1' → logprob: -9.590323448181152
    8. '    ' → logprob: -9.965323448181152
    9. ')' → logprob: -10.715323448181152
    10. '  ' → logprob: -10.715323448181152

Token 109: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0017728772945702076
    2. '(' → logprob: -6.376772880554199
    3. '()' → logprob: -10.0017728805542
    4. '(s' → logprob: -11.6267728805542
    5. '(t' → logprob: -12.2517728805542
    6. '((' → logprob: -12.2517728805542
    7. ' (' → logprob: -13.0017728805542
    8. 'i' → logprob: -13.6267728805542
    9. '('' → logprob: -13.8767728805542
    10. '(I' → logprob: -14.3767728805542

Token 110: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.584239938296378e-06
    2. ' )' → logprob: -11.875007629394531
    3. ')
' → logprob: -15.625007629394531
    4. '))' → logprob: -16.25000762939453
    5. ')`' → logprob: -16.37500762939453
    6. ')#' → logprob: -16.37500762939453
    7. '')' → logprob: -17.62500762939453
    8. ')}' → logprob: -18.50000762939453
    9. ')i' → logprob: -18.62500762939453
    10. '#' → logprob: -18.75000762939453

Token 111: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 112: ' K' (ID: 658)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 113: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.18569794297218323
    2. ' -=' → logprob: -1.9356979131698608
    3. '-' → logprob: -3.6856980323791504
    4. '=' → logprob: -9.810697555541992
    5. '+=' → logprob: -12.060697555541992
    6. ' ' → logprob: -12.560697555541992
    7. ' -' → logprob: -12.560697555541992
    8. '   ' → logprob: -12.685697555541992
    9. ' ' → logprob: -13.935697555541992
    10. '  ' → logprob: -15.435697555541992

Token 114: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01815006136894226
    2. ' ' → logprob: -4.0181498527526855
    3. '   ' → logprob: -17.268150329589844
    4. ' ' → logprob: -18.143150329589844
    5. '<|end|>' → logprob: -18.268150329589844
    6. '  ' → logprob: -18.393150329589844
    7. '    ' → logprob: -19.643150329589844
    8. 'd' → logprob: -19.768150329589844
    9. '```' → logprob: -20.143150329589844
    10. '１' → logprob: -20.330650329589844

Token 115: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.165027217415627e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -16.37502098083496
    4. '  ' → logprob: -18.00002098083496
    5. '```' → logprob: -19.81252098083496
    6. '<|end|>' → logprob: -20.18752098083496
    7. '    ' → logprob: -20.25002098083496
    8. 'd' → logprob: -20.31252098083496
    9. '>' → logprob: -20.37502098083496
    10. ')' → logprob: -20.75002098083496


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 113
Tokens correctement prédits (1ère position, stricte): 37
Tokens correctement prédits (1ère position, avec adaptation): 37
Tokens correctement prédits (top 10): 86
Précision stricte (1ère position): 32.74%
Précision adaptée (1ère position): 32.74%
Précision (top 10): 76.11%
================================================================================
