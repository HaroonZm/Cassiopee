================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:46:23
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import heapq
import re
import bisect
import random
import math
import itertools
from collections import defaultdict, deque
from copy import deepcopy
from decimal import *

def read_int():
    return int(sys.stdin.readline())

def read_line_as_int_list():
    return list(map(int, sys.stdin.readline().split()))

def initial_left():
    return 0

def initial_right():
    return 1

def initial_mx():
    return 0

def initial_current():
    return 0

def is_single_element(n):
    return n == 1

def print_zero_and_exit():
    print(0)
    exit()

def condition_should_continue(left, right, n):
    return not (left >= n or right >= n)

def compare_and_update(t, left, right, current, mx):
    if t[left] >= t[right]:
        current += 1
        mx = max(current, mx)
    else:
        current = 0
    return current, mx

def increment_indices(left, right):
    return left + 1, right + 1

def print_result(mx):
    print(mx)

def main():
    n = read_int()
    t = read_line_as_int_list()
    left = initial_left()
    right = initial_right()
    mx = initial_mx()
    current = initial_current()
    if is_single_element(n):
        print_zero_and_exit()
    while True:
        current, mx = compare_and_update(t, left, right, current, mx)
        left, right = increment_indices(left, right)
        if not condition_should_continue(left, right, n):
            break
    print_result(mx)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6975938677787781
    2. '\n' → logprob: -0.8225938677787781
    3. '<|end|>' → logprob: -3.572593927383423
    4. '\' → logprob: -4.322593688964844
    5. 'newline' → logprob: -5.072593688964844
    6. 'import' → logprob: -5.322593688964844
    7. '<|end|>' → logprob: -5.947593688964844
    8. '```' → logprob: -6.572593688964844
    9. '' → logprob: -6.697593688964844
    10. '
' → logprob: -6.947593688964844

Token 4: ' heap' (ID: 37237)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00012535012501757592
    2. 'os' → logprob: -9.00012493133545
    3. ' math' → logprob: -13.87512493133545
    4. '"os' → logprob: -15.12512493133545
    5. ' re' → logprob: -15.50012493133545
    6. ' o' → logprob: -15.87512493133545
    7. ' ' → logprob: -16.125125885009766
    8. ' json' → logprob: -16.250125885009766
    9. '	os' → logprob: -16.375125885009766
    10. '_os' → logprob: -16.875125885009766

Token 5: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.0087516784551553e-05
    2. '.' → logprob: -12.37501049041748
    3. '=' → logprob: -13.75001049041748
    4. '_' → logprob: -13.87501049041748
    5. 'ify' → logprob: -14.00001049041748
    6. '#' → logprob: -14.25001049041748
    7. '[' → logprob: -15.12501049041748
    8. 'u' → logprob: -15.25001049041748
    9. 'p' → logprob: -15.25001049041748
    10. 'space' → logprob: -15.50001049041748

Token 6: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5876707434654236
    2. '
' → logprob: -1.4626708030700684
    3. '\n' → logprob: -2.0876708030700684
    4. '\' → logprob: -3.0876708030700684
    5. '<|end|>' → logprob: -4.337670803070068
    6. '

' → logprob: -4.962670803070068
    7. '```' → logprob: -5.587670803070068
    8. 'import' → logprob: -5.587670803070068
    9. '.
' → logprob: -5.587670803070068
    10. '' → logprob: -5.587670803070068

Token 7: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.4621509909629822
    2. '\' → logprob: -1.462151050567627
    3. '
' → logprob: -2.837151050567627
    4. '.' → logprob: -3.087151050567627
    5. '```' → logprob: -3.962151050567627
    6. 'def' → logprob: -5.712151050567627
    7. '

' → logprob: -5.837151050567627
    8. '' → logprob: -5.962151050567627
    9. 'import' → logprob: -6.712151050567627
    10. '<|end|>' → logprob: -6.962151050567627

Token 8: ' re' (ID: 322)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.11597329378128052
    2. ' os' → logprob: -2.6159732341766357
    3. ' itertools' → logprob: -3.9909732341766357
    4. 'collections' → logprob: -4.615973472595215
    5. ' math' → logprob: -4.990973472595215
    6. ' threading' → logprob: -7.240973472595215
    7. 'os' → logprob: -8.490973472595215
    8. ' queue' → logprob: -8.865973472595215
    9. ' re' → logprob: -10.240973472595215
    10. ' random' → logprob: -10.490973472595215

Token 9: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.02884243242442608
    2. '
' → logprob: -4.528842449188232
    3. '\' → logprob: -5.153842449188232
    4. '

' → logprob: -5.153842449188232
    5. '```' → logprob: -5.903842449188232
    6. 'import' → logprob: -7.528842449188232
    7. '.' → logprob: -7.653842449188232
    8. '' → logprob: -8.028841972351074
    9. 'def' → logprob: -8.028841972351074
    10. '[' → logprob: -8.153841972351074

Token 10: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.08009989559650421
    2. '\' → logprob: -3.7050998210906982
    3. '
' → logprob: -4.330100059509277
    4. '

' → logprob: -4.455100059509277
    5. '```' → logprob: -5.205100059509277
    6. '' → logprob: -5.330100059509277
    7. '.' → logprob: -5.455100059509277
    8. '#' → logprob: -5.705100059509277
    9. 'def' → logprob: -6.330100059509277
    10. 'import' → logprob: -6.455100059509277

Token 11: ' bis' (ID: 7204)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.7658210396766663
    2. ' math' → logprob: -1.5158209800720215
    3. 'collections' → logprob: -1.7658209800720215
    4. ' os' → logprob: -2.1408209800720215
    5. 'math' → logprob: -4.6408209800720215
    6. ' itertools' → logprob: -4.7658209800720215
    7. 'os' → logprob: -5.0158209800720215
    8. ' string' → logprob: -7.1408209800720215
    9. ' threading' → logprob: -7.6408209800720215
    10. 'string' → logprob: -8.51582145690918

Token 12: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -3.309382373117842e-05
    2. 'ected' → logprob: -11.000033378601074
    3. 'ects' → logprob: -12.250033378601074
    4. 'ection' → logprob: -12.250033378601074
    5. 'e' → logprob: -13.000033378601074
    6. 'ec' → logprob: -13.500033378601074
    7. 'ectl' → logprob: -14.375033378601074
    8. 't' → logprob: -14.375033378601074
    9. 'ective' → logprob: -14.375033378601074
    10. 'ector' → logprob: -15.000033378601074

Token 13: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.7662526965141296
    2. '
' → logprob: -1.3912527561187744
    3. 'import' → logprob: -2.3912527561187744
    4. '```' → logprob: -2.5162527561187744
    5. '\n' → logprob: -3.1412527561187744
    6. '\' → logprob: -3.7662527561187744
    7. '' → logprob: -4.391252517700195
    8. '#' → logprob: -4.891252517700195
    9. '<|end|>' → logprob: -5.641252517700195
    10. '
' → logprob: -5.641252517700195

Token 14: 'import' (ID: 561)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.2791559398174286
    2. '
' → logprob: -2.529155969619751
    3. 'import' → logprob: -2.904155969619751
    4. 'def' → logprob: -3.654155969619751
    5. '```' → logprob: -3.904155969619751
    6. '\n' → logprob: -4.029155731201172
    7. 'class' → logprob: -4.154155731201172
    8. 'from' → logprob: -5.029155731201172
    9. '' → logprob: -5.529155731201172
    10. '#' → logprob: -5.654155731201172

Token 15: ' random' (ID: 7526)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.6851862668991089
    2. ' math' → logprob: -1.4351862668991089
    3. 'collections' → logprob: -1.4351862668991089
    4. ' collections' → logprob: -4.185186386108398
    5. ' itertools' → logprob: -5.685186386108398
    6. 'string' → logprob: -8.435186386108398
    7. 'random' → logprob: -8.435186386108398
    8. 'os' → logprob: -8.810186386108398
    9. ' threading' → logprob: -8.810186386108398
    10. 'time' → logprob: -9.185186386108398

Token 16: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -1.2871118783950806
    2. '
' → logprob: -1.5371118783950806
    3. 'import' → logprob: -1.5371118783950806
    4. '<|end|>' → logprob: -2.412111759185791
    5. '' → logprob: -2.662111759185791
    6. '\n' → logprob: -2.787111759185791
    7. '\' → logprob: -4.162111759185791
    8. '```' → logprob: -4.287111759185791
    9. ',' → logprob: -4.412111759185791
    10. '#' → logprob: -5.037111759185791

Token 17: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6725209951400757
    2. '

' → logprob: -1.5475209951400757
    3. '
' → logprob: -2.1725211143493652
    4. '<|end|>' → logprob: -2.7975211143493652
    5. '\n' → logprob: -3.9225211143493652
    6. 'def' → logprob: -4.297521114349365
    7. 'from' → logprob: -4.422521114349365
    8. '#' → logprob: -4.422521114349365
    9. '```' → logprob: -4.547521114349365
    10. '' → logprob: -4.797521114349365

Token 18: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.6647814512252808
    2. 'math' → logprob: -0.9147814512252808
    3. 'collections' → logprob: -3.5397815704345703
    4. ' string' → logprob: -4.16478157043457
    5. ' collections' → logprob: -4.28978157043457
    6. 'string' → logprob: -4.28978157043457
    7. ' itertools' → logprob: -5.03978157043457
    8. 'time' → logprob: -5.28978157043457
    9. ' time' → logprob: -6.78978157043457
    10. ' threading' → logprob: -8.53978157043457

Token 19: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.1175578832626343
    2. '
' → logprob: -1.4925578832626343
    3. '

' → logprob: -2.117558002471924
    4. '<|end|>' → logprob: -2.242558002471924
    5. 'import' → logprob: -2.992558002471924
    6. '.' → logprob: -3.117558002471924
    7. '#' → logprob: -3.117558002471924
    8. '\' → logprob: -3.617558002471924
    9. '```' → logprob: -3.617558002471924
    10. ',' → logprob: -4.742558002471924

Token 20: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.2654874324798584
    2. '

' → logprob: -1.6404874324798584
    3. '
' → logprob: -1.8904874324798584
    4. '\' → logprob: -2.3904874324798584
    5. '```' → logprob: -2.5154874324798584
    6. '#' → logprob: -3.1404874324798584
    7. 'import' → logprob: -3.2654874324798584
    8. 'def' → logprob: -3.3904874324798584
    9. '' → logprob: -3.8904874324798584
    10. 'class' → logprob: -4.2654876708984375

Token 21: ' itertools' (ID: 103178)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.21798503398895264
    2. ' collections' → logprob: -1.9679850339889526
    3. ' itertools' → logprob: -3.217985153198242
    4. 'time' → logprob: -5.342985153198242
    5. 'statistics' → logprob: -6.092985153198242
    6. ' statistics' → logprob: -6.592985153198242
    7. ' os' → logprob: -6.592985153198242
    8. 'os' → logprob: -6.717985153198242
    9. ' time' → logprob: -6.717985153198242
    10. ' functools' → logprob: -6.842985153198242

Token 22: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.9769003987312317
    2. '
' → logprob: -1.351900339126587
    3. '.' → logprob: -2.101900339126587
    4. '

' → logprob: -2.226900339126587
    5. '\' → logprob: -2.851900339126587
    6. '' → logprob: -3.601900339126587
    7. '#' → logprob: -3.976900339126587
    8. '<|end|>' → logprob: -4.601900577545166
    9. '```' → logprob: -4.851900577545166
    10. 'import' → logprob: -5.601900577545166

Token 23: 'from' (ID: 2845)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6500558853149414
    2. '
' → logprob: -1.6500558853149414
    3. '```' → logprob: -2.5250558853149414
    4. '\' → logprob: -2.6500558853149414
    5. '

' → logprob: -2.9000558853149414
    6. 'import' → logprob: -3.6500558853149414
    7. '.' → logprob: -4.525055885314941
    8. '#' → logprob: -4.525055885314941
    9. '' → logprob: -4.775055885314941
    10. '<|end|>' → logprob: -4.900055885314941

Token 24: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.0338761992752552
    2. 'collections' → logprob: -3.5338761806488037
    3. ' ' → logprob: -6.783876419067383
    4. ' operator' → logprob: -6.908876419067383
    5. ' typing' → logprob: -7.033876419067383
    6. ' functools' → logprob: -7.408876419067383
    7. '_' → logprob: -9.158876419067383
    8. ' sys' → logprob: -9.158876419067383
    9. ' enum' → logprob: -9.658876419067383
    10. 'operator' → logprob: -10.283876419067383

Token 25: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.07984315603971481
    2. ' import' → logprob: -2.579843044281006
    3. '.' → logprob: -7.329843044281006
    4. '.Counter' → logprob: -9.329843521118164
    5. '```' → logprob: -10.204843521118164
    6. 'from' → logprob: -10.329843521118164
    7. ' ' → logprob: -10.579843521118164
    8. ' defaultdict' → logprob: -10.704843521118164
    9. 'abc' → logprob: -11.079843521118164
    10. '	import' → logprob: -11.454843521118164

Token 26: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.12850698828697205
    2. ' deque' → logprob: -2.128506898880005
    3. 'deque' → logprob: -6.628507137298584
    4. ' abc' → logprob: -8.753506660461426
    5. ' named' → logprob: -10.253506660461426
    6. ' Counter' → logprob: -10.628506660461426
    7. 'default' → logprob: -10.753506660461426
    8. ' ' → logprob: -11.628506660461426
    9. ' default' → logprob: -13.003506660461426
    10. 'abc' → logprob: -13.753506660461426

Token 27: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9556093215942383
    2. '\n' → logprob: -1.9556093215942383
    3. 'import' → logprob: -2.0806093215942383
    4. '

' → logprob: -2.2056093215942383
    5. ',' → logprob: -2.7056093215942383
    6. '<|end|>' → logprob: -3.4556093215942383
    7. '```' → logprob: -3.4556093215942383
    8. '\' → logprob: -3.5806093215942383
    9. '' → logprob: -3.5806093215942383
    10. '.' → logprob: -4.455609321594238

Token 28: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.31690171360969543
    2. ' deque' → logprob: -1.316901683807373
    3. 'Counter' → logprob: -5.691901683807373
    4. ' Counter' → logprob: -8.441902160644531
    5. 'Deque' → logprob: -11.066902160644531
    6. 'de' → logprob: -11.191902160644531
    7. 'Ordered' → logprob: -11.816902160644531
    8. 'named' → logprob: -11.941902160644531
    9. ' named' → logprob: -14.441902160644531
    10. ' Ordered' → logprob: -15.066902160644531

Token 29: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6052197813987732
    2. '

' → logprob: -1.355219841003418
    3. '\n' → logprob: -2.480219841003418
    4. '```' → logprob: -3.605219841003418
    5. ',' → logprob: -3.855219841003418
    6. '' → logprob: -4.355219841003418
    7. '#' → logprob: -4.355219841003418
    8. 'import' → logprob: -4.355219841003418
    9. '\' → logprob: -4.605219841003418
    10. '<|end|>' → logprob: -4.980219841003418

Token 30: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8047003149986267
    2. '

' → logprob: -1.0547003746032715
    3. '```' → logprob: -2.6797003746032715
    4. 'import' → logprob: -3.1797003746032715
    5. '\n' → logprob: -3.4297003746032715
    6. '<|end|>' → logprob: -3.9297003746032715
    7. '#' → logprob: -4.6797003746032715
    8. 'class' → logprob: -4.8047003746032715
    9. 'def' → logprob: -5.0547003746032715
    10. '' → logprob: -5.0547003746032715

Token 31: ' copy' (ID: 5150)
  Prédit: ' typing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.41298314929008484
    2. ' operator' → logprob: -2.2879831790924072
    3. ' heap' → logprob: -2.6629831790924072
    4. ' queue' → logprob: -3.2879831790924072
    5. ' functools' → logprob: -3.6629831790924072
    6. 'typing' → logprob: -3.6629831790924072
    7. ' collections' → logprob: -3.9129831790924072
    8. 'collections' → logprob: -4.037982940673828
    9. ' ' → logprob: -4.412982940673828
    10. 'operator' → logprob: -4.912982940673828

Token 32: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.18043389916419983
    2. 'import' → logprob: -1.8054338693618774
    3. ' ' → logprob: -7.555433750152588
    4. '	import' → logprob: -9.305434226989746
    5. '<|end|>' → logprob: -10.305434226989746
    6. '_import' → logprob: -11.430434226989746
    7. ' im' → logprob: -11.805434226989746
    8. ' ' → logprob: -12.805434226989746
    9. ' importar' → logprob: -12.805434226989746
    10. ' imports' → logprob: -13.305434226989746

Token 33: ' deepcopy' (ID: 130230)
  Prédit: ' deepcopy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deepcopy' → logprob: -0.01427104789763689
    2. ' copy' → logprob: -4.264271259307861
    3. 'copy' → logprob: -9.639270782470703
    4. '.deepcopy' → logprob: -10.264270782470703
    5. 'deep' → logprob: -12.264270782470703
    6. ' deep' → logprob: -13.014270782470703
    7. ' import' → logprob: -15.264270782470703
    8. ' dee' → logprob: -15.889270782470703
    9. ' ' → logprob: -16.639270782470703
    10. '.copy' → logprob: -16.764270782470703

Token 34: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5680031776428223
    2. '\n' → logprob: -1.6930031776428223
    3. '

' → logprob: -2.1930031776428223
    4. '<|end|>' → logprob: -2.5680031776428223
    5. '\' → logprob: -4.193003177642822
    6. '#' → logprob: -4.193003177642822
    7. 'import' → logprob: -4.443003177642822
    8. '```' → logprob: -5.318003177642822
    9. '' → logprob: -5.443003177642822
    10. 'def' → logprob: -5.568003177642822

Token 35: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5529069900512695
    2. '

' → logprob: -1.1779069900512695
    3. '#' → logprob: -3.1779069900512695
    4. '\n' → logprob: -3.3029069900512695
    5. '' → logprob: -4.6779069900512695
    6. '<|end|>' → logprob: -5.1779069900512695
    7. '\' → logprob: -5.3029069900512695
    8. '```' → logprob: -5.5529069900512695
    9. 'def' → logprob: -5.6779069900512695
    10. 'd' → logprob: -6.1779069900512695

Token 36: ' decimal' (ID: 26964)
  Prédit: ' functools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' functools' → logprob: -1.042086124420166
    2. ' itertools' → logprob: -1.542086124420166
    3. ' typing' → logprob: -1.917086124420166
    4. ' math' → logprob: -2.167086124420166
    5. ' operator' → logprob: -2.667086124420166
    6. ' heap' → logprob: -3.667086124420166
    7. ' threading' → logprob: -4.167086124420166
    8. ' collections' → logprob: -4.292086124420166
    9. ' dat' → logprob: -4.792086124420166
    10. ' ' → logprob: -4.792086124420166

Token 37: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.08412069827318192
    2. ' ' → logprob: -2.959120750427246
    3. '.' → logprob: -3.959120750427246
    4. 'import' → logprob: -4.834120750427246
    5. '<|end|>' → logprob: -6.584120750427246
    6. ' ```' → logprob: -9.209120750427246
    7. '	import' → logprob: -9.584120750427246
    8. ' ' → logprob: -9.584120750427246
    9. '```' → logprob: -10.709120750427246
    10. ' im' → logprob: -10.709120750427246

Token 38: ' *

' (ID: 40558)
  Prédit: ' Decimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Decimal' → logprob: -0.026695948094129562
    2. 'Decimal' → logprob: -4.026695728302002
    3. ' ' → logprob: -5.026695728302002
    4. ' ' → logprob: -7.026695728302002
    5. '.Decimal' → logprob: -7.276695728302002
    6. ' decimal' → logprob: -9.15169620513916
    7. 'decimal' → logprob: -9.77669620513916
    8. ' get' → logprob: -9.90169620513916
    9. '`' → logprob: -9.90169620513916
    10. '	' → logprob: -10.77669620513916

Token 39: 'def' (ID: 1314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.386029452085495
    2. '#' → logprob: -1.5110294818878174
    3. '\' → logprob: -3.8860294818878174
    4. '' → logprob: -4.136029243469238
    5. 'n' → logprob: -4.136029243469238
    6. '
' → logprob: -4.261029243469238
    7. '\n' → logprob: -5.011029243469238
    8. 'a' → logprob: -5.136029243469238
    9. '_' → logprob: -6.011029243469238
    10. '

' → logprob: -6.386029243469238

Token 40: ' read' (ID: 1729)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04953566938638687
    2. '_' → logprob: -3.5495357513427734
    3. ' space' → logprob: -5.299535751342773
    4. ' ' → logprob: -5.424535751342773
    5. ' main' → logprob: -5.924535751342773
    6. ' _' → logprob: -6.174535751342773
    7. ' max' → logprob: -7.424535751342773
    8. ' a' → logprob: -7.549535751342773
    9. '  ' → logprob: -7.674535751342773
    10. ' s' → logprob: -7.674535751342773

Token 41: '_int' (ID: 12285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5276289582252502
    2. '(' → logprob: -0.9026289582252502
    3. '_line' → logprob: -6.4026288986206055
    4. ' (' → logprob: -6.9026288986206055
    5. '()' → logprob: -6.9026288986206055
    6. ' ' → logprob: -8.902628898620605
    7. '_input' → logprob: -9.027628898620605
    8. '_space' → logprob: -9.402628898620605
    9. 's' → logprob: -9.652628898620605
    10. ' _' → logprob: -10.027628898620605

Token 42: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.07127963751554489
    2. '()' → logprob: -2.696279525756836
    3. 's' → logprob: -7.571279525756836
    4. ' ()' → logprob: -7.696279525756836
    5. ' ():' → logprob: -8.696279525756836
    6. '(' → logprob: -9.821279525756836
    7. '():
' → logprob: -10.321279525756836
    8. '32' → logprob: -11.196279525756836
    9. '()*' → logprob: -11.321279525756836
    10. '（）' → logprob: -11.696279525756836

Token 43: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.008497916162014008
    2. '():' → logprob: -5.383497714996338
    3. ' ()' → logprob: -6.258497714996338
    4. '(' → logprob: -6.383497714996338
    5. 'return' → logprob: -9.883498191833496
    6. '()\' → logprob: -9.883498191833496
    7. '()
' → logprob: -10.258498191833496
    8. ':' → logprob: -10.758498191833496
    9. ' return' → logprob: -10.883498191833496
    10. ':return' → logprob: -11.008498191833496

Token 44: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.23032352328300476
    2. 'return' (adapté à ' return') → logprob: -1.6053235530853271
    3. ' ' → logprob: -6.230323314666748
    4. '   ' → logprob: -6.355323314666748
    5. 'r' → logprob: -7.355323314666748
    6. 'n' → logprob: -9.105323791503906
    7. ' r' → logprob: -9.230323791503906
    8. ' n' → logprob: -9.605323791503906
    9. '    ' → logprob: -9.855323791503906
    10. '  ' → logprob: -10.355323791503906

Token 45: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.00018613664724398404
    2. ' ' → logprob: -9.0001859664917
    3. 'int' → logprob: -10.1251859664917
    4. '(int' → logprob: -10.8751859664917
    5. ' in' → logprob: -12.8751859664917
    6. ' map' → logprob: -14.2501859664917
    7. ' ' → logprob: -16.125186920166016
    8. '	int' → logprob: -16.250186920166016
    9. ' i' → logprob: -16.250186920166016
    10. ' list' → logprob: -17.125186920166016

Token 46: '(sys' (ID: 41042)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009185493923723698
    2. '(input' → logprob: -5.009185314178467
    3. '(sys' → logprob: -6.009185314178467
    4. '(
' → logprob: -12.134185791015625
    5. '(

' → logprob: -13.384185791015625
    6. '((' → logprob: -13.884185791015625
    7. ' (' → logprob: -14.009185791015625
    8. 'input' → logprob: -14.634185791015625
    9. '(open' → logprob: -14.634185791015625
    10. '('' → logprob: -15.259185791015625

Token 47: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0013902351493015885
    2. '.' → logprob: -6.75139045715332
    3. '.argv' → logprob: -8.50139045715332
    4. '.readline' → logprob: -11.37639045715332
    5. '.stdout' → logprob: -13.00139045715332
    6. '.std' → logprob: -13.12639045715332
    7. '.st' → logprob: -14.62639045715332
    8. '(stdin' → logprob: -15.62639045715332
    9. '.read' → logprob: -15.87639045715332
    10. '.input' → logprob: -16.75139045715332

Token 48: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00046498890151269734
    2. '.' → logprob: -8.250465393066406
    3. '.read' → logprob: -8.500465393066406
    4. '.stdin' → logprob: -16.125465393066406
    5. '.readlines' → logprob: -16.625465393066406
    6. '.Read' → logprob: -16.625465393066406
    7. '.)' → logprob: -16.625465393066406
    8. ').' → logprob: -17.250465393066406
    9. ' readline' → logprob: -17.500465393066406
    10. '().' → logprob: -17.625465393066406

Token 49: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.08375459164381027
    2. '().' → logprob: -2.583754539489746
    3. '()' → logprob: -5.333754539489746
    4. ' ())' → logprob: -11.083754539489746
    5. '()[' → logprob: -12.708754539489746
    6. '()]' → logprob: -13.208754539489746
    7. '();)' → logprob: -13.458754539489746
    8. '()))' → logprob: -13.833754539489746
    9. '()`' → logprob: -14.083754539489746
    10. '()\' → logprob: -14.208754539489746

Token 50: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07997522503137589
    2. '
' → logprob: -2.579975128173828
    3. ' def' → logprob: -8.079975128173828
    4. '\n' → logprob: -8.329975128173828
    5. '

' → logprob: -9.079975128173828
    6. '#' → logprob: -9.329975128173828
    7. '\' → logprob: -9.454975128173828
    8. '```' → logprob: -9.579975128173828
    9. 'newline' → logprob: -10.454975128173828
    10. '<|end|>' → logprob: -10.454975128173828

Token 51: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.0009811243508011103
    2. 'read' → logprob: -7.875981330871582
    3. '_' → logprob: -8.000981330871582
    4. '_read' → logprob: -9.125981330871582
    5. ' write' → logprob: -9.625981330871582
    6. ' readline' → logprob: -10.125981330871582
    7. ' _' → logprob: -10.875981330871582
    8. ' ' → logprob: -11.375981330871582
    9. ' space' → logprob: -12.000981330871582
    10. ' reads' → logprob: -12.500981330871582

Token 52: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.21462802588939667
    2. '_' → logprob: -1.714627981185913
    3. '_str' → logprob: -5.214628219604492
    4. '_int' → logprob: -5.589628219604492
    5. '_string' → logprob: -6.214628219604492
    6. '()' → logprob: -7.839628219604492
    7. '_float' → logprob: -8.464628219604492
    8. '_raw' → logprob: -8.589628219604492
    9. '_char' → logprob: -9.214628219604492
    10. '_n' → logprob: -9.214628219604492

Token 53: '_as' (ID: 25206)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.693365216255188
    2. '():' → logprob: -0.693365216255188
    3. ' ()' → logprob: -9.318365097045898
    4. '().' → logprob: -10.318365097045898
    5. '():
' → logprob: -10.568365097045898
    6. '()>' → logprob: -11.443365097045898
    7. '()">' → logprob: -11.443365097045898
    8. '`()' → logprob: -11.693365097045898
    9. ' ():' → logprob: -12.068365097045898
    10. '()`' → logprob: -12.443365097045898

Token 54: '_int' (ID: 12285)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0065372660756111145
    2. 'list' → logprob: -5.881537437438965
    3. '_str' → logprob: -5.881537437438965
    4. '_int' → logprob: -7.131537437438965
    5. 'str' → logprob: -9.631537437438965
    6. 'List' → logprob: -10.881537437438965
    7. 'int' → logprob: -11.256537437438965
    8. '_string' → logprob: -11.506537437438965
    9. '_lst' → logprob: -12.006537437438965
    10. 's' → logprob: -12.131537437438965

Token 55: '_list' (ID: 4162)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0012597566237673163
    2. '_list' → logprob: -7.126259803771973
    3. '()' → logprob: -8.001259803771973
    4. '_array' → logprob: -9.251259803771973
    5. '_s' → logprob: -10.876259803771973
    6. 'list' → logprob: -13.001259803771973
    7. '_' → logprob: -14.501259803771973
    8. ' s' → logprob: -14.626259803771973
    9. 'List' → logprob: -14.876259803771973
    10. 'S' → logprob: -15.126259803771973

Token 56: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.2821832597255707
    2. '()' → logprob: -1.407183289527893
    3. '(' → logprob: -7.1571831703186035
    4. ' ()' → logprob: -8.907183647155762
    5. '():
' → logprob: -10.157183647155762
    6. ' ():' → logprob: -11.157183647155762
    7. '():

' → logprob: -11.157183647155762
    8. '()">' → logprob: -11.657183647155762
    9. '().' → logprob: -12.032183647155762
    10. '(){' → logprob: -12.032183647155762

Token 57: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.014322631061077118
    2. '(' → logprob: -4.889322757720947
    3. '():' → logprob: -5.389322757720947
    4. ' ()' → logprob: -6.389322757720947
    5. '():
' → logprob: -9.514322280883789
    6. '()[' → logprob: -9.889322280883789
    7. '().' → logprob: -10.014322280883789
    8. '   ' → logprob: -10.264322280883789
    9. '()
' → logprob: -10.264322280883789
    10. '[]' → logprob: -10.264322280883789

Token 58: ' return' (ID: 622)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.09755021333694458
    2. ' list' → logprob: -2.5975501537323
    3. 'return' (adapté à ' return') → logprob: -4.097550392150879
    4. 'map' → logprob: -6.847550392150879
    5. ' return' → logprob: -7.472550392150879
    6. '   ' → logprob: -8.472550392150879
    7. ' map' → logprob: -10.597550392150879
    8. ' ' → logprob: -12.222550392150879
    9. '  ' → logprob: -13.847550392150879
    10. 'List' → logprob: -14.097550392150879

Token 59: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.0031338706612586975
    2. 'list' → logprob: -5.878133773803711
    3. ' [' → logprob: -8.503133773803711
    4. '[list' → logprob: -9.378133773803711
    5. '[' → logprob: -10.253133773803711
    6. ' ' → logprob: -12.753133773803711
    7. '(list' → logprob: -13.628133773803711
    8. '	list' → logprob: -13.753133773803711
    9. ' ' → logprob: -15.253133773803711
    10. '   ' → logprob: -15.628133773803711

Token 60: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0007293514790944755
    2. '(' → logprob: -7.250729560852051
    3. '(int' → logprob: -11.12572956085205
    4. '(sys' → logprob: -12.37572956085205
    5. '()' → logprob: -16.375728607177734
    6. 'map' → logprob: -16.375728607177734
    7. '(

' → logprob: -17.500728607177734
    8. '(s' → logprob: -17.625728607177734
    9. '	map' → logprob: -17.750728607177734
    10. '(
' → logprob: -18.000728607177734

Token 61: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0006440493743866682
    2. '(' → logprob: -7.375644207000732
    3. '<int' → logprob: -12.125643730163574
    4. '(
' → logprob: -12.375643730163574
    5. '=int' → logprob: -12.625643730163574
    6. '[int' → logprob: -13.375643730163574
    7. 'int' → logprob: -14.125643730163574
    8. ']int' → logprob: -14.375643730163574
    9. ',int' → logprob: -14.625643730163574
    10. ')' → logprob: -14.625643730163574

Token 62: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.20697547495365143
    2. ',' → logprob: -1.7069754600524902
    3. '(' → logprob: -5.45697546005249
    4. ' ,' → logprob: -7.20697546005249
    5. 'sys' → logprob: -8.456975936889648
    6. '=sys' → logprob: -8.831975936889648
    7. '	sys' → logprob: -9.831975936889648
    8. ' (' → logprob: -10.456975936889648
    9. ' sys' → logprob: -10.456975936889648
    10. ',(' → logprob: -10.456975936889648

Token 63: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0790143758058548
    2. ' sys' → logprob: -2.579014301300049
    3. '(sys' → logprob: -9.329014778137207
    4. '	sys' → logprob: -10.704014778137207
    5. '=sys' → logprob: -11.954014778137207
    6. '   ' → logprob: -12.454014778137207
    7. ')' → logprob: -13.829014778137207
    8. '.sys' → logprob: -14.454014778137207
    9. ' ' → logprob: -14.829014778137207
    10. 'str' → logprob: -15.704014778137207

Token 64: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -2.816093228830141e-06
    2. 'stdin' → logprob: -13.00000286102295
    3. '.stdout' → logprob: -15.50000286102295
    4. '.std' → logprob: -16.000001907348633
    5. '.argv' → logprob: -16.375001907348633
    6. '.readline' → logprob: -16.625001907348633
    7. '(stdin' → logprob: -16.875001907348633
    8. '.' → logprob: -17.500001907348633
    9. ' stdin' → logprob: -18.250001907348633
    10. '.sys' → logprob: -18.375001907348633

Token 65: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0001085497424355708
    2. '().' → logprob: -10.25010871887207
    3. '(sys' → logprob: -10.37510871887207
    4. '.' → logprob: -11.00010871887207
    5. '.stdin' → logprob: -11.25010871887207
    6. '.readlines' → logprob: -12.75010871887207
    7. '.read' → logprob: -12.75010871887207
    8. '=sys' → logprob: -13.12510871887207
    9. 'sys' → logprob: -13.50010871887207
    10. '.sys' → logprob: -14.00010871887207

Token 66: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00014573395310435444
    2. '()' → logprob: -8.87514591217041
    3. '()))' → logprob: -12.50014591217041
    4. ' ().' → logprob: -13.62514591217041
    5. '.readline' → logprob: -14.87514591217041
    6. '())' → logprob: -15.25014591217041
    7. '()));' → logprob: -15.87514591217041
    8. '())))' → logprob: -16.500144958496094
    9. '()-' → logprob: -17.250144958496094
    10. '().__' → logprob: -18.125144958496094

Token 67: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.4204525649547577
    2. 'read' → logprob: -1.17045259475708
    3. 'rstrip' → logprob: -3.42045259475708
    4. '.readline' → logprob: -8.545452117919922
    5. 'split' → logprob: -9.420452117919922
    6. ')' → logprob: -10.670452117919922
    7. ' readline' → logprob: -10.795452117919922
    8. 'decode' → logprob: -13.170452117919922
    9. ' strip' → logprob: -13.795452117919922
    10. '_strip' → logprob: -13.920452117919922

Token 68: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.005883168429136276
    2. '()' → logprob: -5.50588321685791
    3. '))' → logprob: -6.50588321685791
    4. '())' → logprob: -8.25588321685791
    5. '()))
' → logprob: -10.75588321685791
    6. '())))' → logprob: -11.00588321685791
    7. '(' → logprob: -12.00588321685791
    8. '()))

' → logprob: -13.38088321685791
    9. '()));' → logprob: -13.63088321685791
    10. ')))' → logprob: -14.50588321685791

Token 69: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04377606511116028
    2. 'd' → logprob: -3.293776035308838
    3. '
' → logprob: -6.168776035308838
    4. '\' → logprob: -6.668776035308838
    5. '

' → logprob: -6.918776035308838
    6. '#' → logprob: -7.168776035308838
    7. 'class' → logprob: -8.293776512145996
    8. 'de' → logprob: -9.043776512145996
    9. '```' → logprob: -9.543776512145996
    10. 'n' → logprob: -10.418776512145996

Token 70: ' initial' (ID: 4871)
  Prédit: ' read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.06128353625535965
    2. 'read' → logprob: -3.561283588409424
    3. ' main' → logprob: -4.561283588409424
    4. ' is' → logprob: -5.936283588409424
    5. ' readline' → logprob: -5.936283588409424
    6. ' solve' → logprob: -6.061283588409424
    7. ' randint' → logprob: -6.186283588409424
    8. ' write' → logprob: -6.311283588409424
    9. ' factorial' → logprob: -6.561283588409424
    10. ' input' → logprob: -6.936283588409424

Token 71: '_left' (ID: 22189)
  Prédit: '_state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.5901789665222168
    2. '_' → logprob: -1.2151789665222168
    3. 'ize' → logprob: -2.465178966522217
    4. '_data' → logprob: -3.840178966522217
    5. '_heap' → logprob: -4.215178966522217
    6. '_queue' → logprob: -5.215178966522217
    7. '_array' → logprob: -5.465178966522217
    8. '_value' → logprob: -5.590178966522217
    9. '_capacity' → logprob: -5.840178966522217
    10. '_position' → logprob: -5.840178966522217

Token 72: '():
' (ID: 8595)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.48047810792922974
    2. '_stack' → logprob: -1.480478048324585
    3. '_cursor' → logprob: -4.105478286743164
    4. '_over' → logprob: -4.230478286743164
    5. '_pos' → logprob: -4.480478286743164
    6. '_queue' → logprob: -4.605478286743164
    7. '_index' → logprob: -4.730478286743164
    8. '_position' → logprob: -4.980478286743164
    9. '_right' → logprob: -5.105478286743164
    10. '_bound' → logprob: -5.355478286743164

Token 73: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.2054470777511597
    2. '()' → logprob: -1.7054470777511597
    3. ':' → logprob: -1.8304470777511597
    4. '   ' → logprob: -2.205447196960449
    5. '[]' → logprob: -2.330447196960449
    6. '[' → logprob: -2.830447196960449
    7. '(' → logprob: -3.580447196960449
    8. '_' → logprob: -3.830447196960449
    9. '[:]' → logprob: -4.330447196960449
    10. ' =' → logprob: -4.830447196960449

Token 74: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.048187255859375
    2. '[' → logprob: -1.173187255859375
    3. '[]' → logprob: -1.923187255859375
    4. 'return' (adapté à ' return') → logprob: -2.173187255859375
    5. ' ' → logprob: -4.173187255859375
    6. '   ' → logprob: -4.298187255859375
    7. ' [' → logprob: -5.048187255859375
    8. '(' → logprob: -5.173187255859375
    9. 'left' → logprob: -5.298187255859375
    10. ' []' → logprob: -5.298187255859375

Token 75: ' ' (ID: 220)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6022821068763733
    2. ' []' → logprob: -1.1022820472717285
    3. '0' → logprob: -3.1022820472717285
    4. ' ' → logprob: -3.6022820472717285
    5. '[' → logprob: -3.9772820472717285
    6. ' [' → logprob: -4.3522820472717285
    7. '-' → logprob: -5.2272820472717285
    8. 'deque' → logprob: -5.7272820472717285
    9. ' -' → logprob: -6.1022820472717285
    10. '[-' → logprob: -7.2272820472717285

Token 76: '0' (ID: 15)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.21729950606822968
    2. '[' → logprob: -2.467299461364746
    3. '0' → logprob: -2.842299461364746
    4. 'deque' → logprob: -3.467299461364746
    5. '{}' → logprob: -5.217299461364746
    6. '-' → logprob: -5.467299461364746
    7. 'default' → logprob: -5.967299461364746
    8. 'float' → logprob: -6.342299461364746
    9. '{' → logprob: -6.342299461364746
    10. '[-' → logprob: -6.717299461364746

Token 77: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 78: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0522383488714695
    2. '<|end|>' → logprob: -3.1772384643554688
    3. '<|end|>' → logprob: -5.677238464355469
    4. '
' → logprob: -5.927238464355469
    5. '

' → logprob: -6.427238464355469
    6. ' def' → logprob: -7.302238464355469
    7. '```' → logprob: -9.052238464355469
    8. ':' → logprob: -9.052238464355469
    9. ':def' → logprob: -9.177238464355469
    10. '*' → logprob: -9.552238464355469

Token 79: ' initial' (ID: 4871)
  Prédit: ' initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' initial' → logprob: -0.009324755519628525
    2. ' ' → logprob: -5.259324550628662
    3. '_' → logprob: -6.509324550628662
    4. 'initial' → logprob: -6.634324550628662
    5. ' _' → logprob: -6.884324550628662
    6. '_initial' → logprob: -8.75932502746582
    7. '(initial' → logprob: -10.63432502746582
    8. ' ' → logprob: -10.75932502746582
    9. '	initial' → logprob: -11.38432502746582
    10. '  ' → logprob: -11.50932502746582

Token 80: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.027821887284517288
    2. '_' → logprob: -3.6528217792510986
    3. '_r' → logprob: -6.902822017669678
    4. '_left' → logprob: -8.90282154083252
    5. '_center' → logprob: -9.52782154083252
    6. '__' → logprob: -9.90282154083252
    7. '_middle' → logprob: -10.02782154083252
    8. '_space' → logprob: -10.77782154083252
    9. '_random' → logprob: -10.90282154083252
    10. '_Right' → logprob: -10.90282154083252

Token 81: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.006110686343163252
    2. '()' → logprob: -5.131110668182373
    3. ' ():' → logprob: -8.756111145019531
    4. ' ()' → logprob: -11.381111145019531
    5. '():
' → logprob: -11.756111145019531
    6. '(' → logprob: -12.381111145019531
    7. ':' → logprob: -15.506111145019531
    8. '()>' → logprob: -15.881111145019531
    9. '()*' → logprob: -16.38111114501953
    10. '_' → logprob: -16.38111114501953

Token 82: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12776070833206177
    2. '100' → logprob: -3.127760648727417
    3. '10' → logprob: -3.502760648727417
    4. ' sys' → logprob: -4.502760887145996
    5. ' ' → logprob: -4.627760887145996
    6. '0' → logprob: -5.252760887145996
    7. ' len' → logprob: -5.627760887145996
    8. ' return' → logprob: -5.627760887145996
    9. 'sys' → logprob: -5.877760887145996
    10. '1' → logprob: -6.377760887145996

Token 83: ' return' (ID: 622)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5453088879585266
    2. ' ' → logprob: -1.7953088283538818
    3. '100' → logprob: -1.9203088283538818
    4. '0' → logprob: -2.420308828353882
    5. '1' → logprob: -5.420309066772461
    6. 'float' → logprob: -5.670309066772461
    7. 'int' → logprob: -5.795309066772461
    8. ' float' → logprob: -6.420309066772461
    9. 'sys' → logprob: -6.795309066772461
    10. ' sys' → logprob: -6.795309066772461

Token 84: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.38242587447166443
    2. '10' → logprob: -1.7574259042739868
    3. '100' → logprob: -3.1324257850646973
    4. '0' → logprob: -3.1324257850646973
    5. ' sys' → logprob: -4.257425785064697
    6. '1' → logprob: -4.507425785064697
    7. ' len' → logprob: -4.632425785064697
    8. ' int' → logprob: -5.257425785064697
    9. ' float' → logprob: -5.507425785064697
    10. 'len' → logprob: -5.632425785064697

Token 85: '1' (ID: 16)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.36620885133743286
    2. '100' → logprob: -1.616208791732788
    3. '0' → logprob: -2.491208791732788
    4. '1' → logprob: -4.616209030151367
    5. 'int' → logprob: -5.366209030151367
    6. 'sys' → logprob: -6.241209030151367
    7. 'float' → logprob: -6.366209030151367
    8. ' ' → logprob: -6.491209030151367
    9. 'len' → logprob: -6.491209030151367
    10. '-' → logprob: -6.991209030151367

Token 86: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5677550435066223
    2. ':' → logprob: -1.9427549839019775
    3. '

' → logprob: -2.1927549839019775
    4. '<|end|>' → logprob: -3.1927549839019775
    5. 'def' → logprob: -3.5677549839019775
    6. '\n' → logprob: -3.8177549839019775
    7. '_' → logprob: -3.9427549839019775
    8. '0' → logprob: -4.442755222320557
    9. '\' → logprob: -5.192755222320557
    10. '*' → logprob: -5.192755222320557

Token 87: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4051656424999237
    2. '

' → logprob: -2.405165672302246
    3. '#' → logprob: -2.530165672302246
    4. ':' → logprob: -2.780165672302246
    5. '
' → logprob: -2.780165672302246
    6. '_' → logprob: -4.155165672302246
    7. '\' → logprob: -4.905165672302246
    8. '\n' → logprob: -6.030165672302246
    9. ' def' → logprob: -6.030165672302246
    10. ':def' → logprob: -6.780165672302246

Token 88: ' initial' (ID: 4871)
  Prédit: ' binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' binary' → logprob: -0.6605711579322815
    2. ' initial' → logprob: -1.4105710983276367
    3. ' main' → logprob: -2.7855710983276367
    4. ' solve' → logprob: -2.9105710983276367
    5. ' search' → logprob: -3.1605710983276367
    6. ' find' → logprob: -4.160571098327637
    7. ' ' → logprob: -4.410571098327637
    8. ' compute' → logprob: -5.160571098327637
    9. 'binary' → logprob: -5.410571098327637
    10. ' max' → logprob: -5.410571098327637

Token 89: '_m' (ID: 1285)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_value' → logprob: -1.1451303958892822
    2. '_middle' → logprob: -1.5201303958892822
    3. '_mid' → logprob: -1.8951303958892822
    4. '_center' → logprob: -2.1451303958892822
    5. '_' → logprob: -2.8951303958892822
    6. '_left' → logprob: -4.020130157470703
    7. '_count' → logprob: -4.270130157470703
    8. '_size' → logprob: -4.520130157470703
    9. '_index' → logprob: -4.645130157470703
    10. '_counter' → logprob: -5.020130157470703

Token 90: 'x' (ID: 87)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.030225489288568497
    2. 'iddle' → logprob: -3.5302255153656006
    3. '_id' → logprob: -7.7802252769470215
    4. 'i' → logprob: -11.03022575378418
    5. '   ' → logprob: -12.03022575378418
    6. ' id' → logprob: -12.15522575378418
    7. 'edium' → logprob: -12.40522575378418
    8. '_' → logprob: -13.03022575378418
    9. '```' → logprob: -13.03022575378418
    10. '	id' → logprob: -13.28022575378418

Token 91: '():
' (ID: 8595)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07065236568450928
    2. '_value' → logprob: -2.945652484893799
    3. '_val' → logprob: -4.570652484893799
    4. '()' → logprob: -6.070652484893799
    5. '_left' → logprob: -6.695652484893799
    6. '_x' → logprob: -7.445652484893799
    7. '_right' → logprob: -7.820652484893799
    8. '_a' → logprob: -8.94565200805664
    9. '_v' → logprob: -9.69565200805664
    10. '_m' → logprob: -9.94565200805664

Token 92: '   ' (ID: 271)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.7437156438827515
    2. ' float' → logprob: -1.6187156438827515
    3. '-' → logprob: -1.8687156438827515
    4. '0' → logprob: -2.493715763092041
    5. 'float' → logprob: -3.243715763092041
    6. '-inf' → logprob: -3.243715763092041
    7. ' ' → logprob: -5.493715763092041
    8. '-in' → logprob: -5.743715763092041
    9. '   ' → logprob: -7.493715763092041
    10. '-int' → logprob: -7.868715763092041

Token 93: ' return' (ID: 622)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3642852008342743
    2. '-' → logprob: -2.4892852306365967
    3. '-inf' → logprob: -2.4892852306365967
    4. '0' → logprob: -2.6142852306365967
    5. '-in' → logprob: -3.7392852306365967
    6. 'float' → logprob: -3.9892852306365967
    7. ' float' → logprob: -4.114284992218018
    8. ' ' → logprob: -6.739284992218018
    9. '-f' → logprob: -6.989284992218018
    10. '-s' → logprob: -6.989284992218018

Token 94: ' ' (ID: 220)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -1.1556497812271118
    2. '-' → logprob: -1.2806497812271118
    3. '-inf' → logprob: -1.5306497812271118
    4. 'float' → logprob: -2.9056496620178223
    5. '0' → logprob: -3.0306496620178223
    6. '-in' → logprob: -3.2806496620178223
    7. ' float' → logprob: -4.155649662017822
    8. '-f' → logprob: -4.405649662017822
    9. '-int' → logprob: -4.905649662017822
    10. '-m' → logprob: -5.655649662017822

Token 95: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4739518463611603
    2. '-inf' → logprob: -1.973951816558838
    3. '0' → logprob: -2.098951816558838
    4. 'float' → logprob: -2.723951816558838
    5. '-int' → logprob: -3.723951816558838
    6. '-(' → logprob: -4.723951816558838
    7. '-in' → logprob: -5.098951816558838
    8. '-f' → logprob: -5.223951816558838
    9. '-s' → logprob: -6.348951816558838
    10. ' -' → logprob: -6.473951816558838

Token 96: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11493393033742905
    2. '\' → logprob: -3.864933967590332
    3. '#' → logprob: -3.989933967590332
    4. '<|end|>' → logprob: -3.989933967590332
    5. '
' → logprob: -4.114933967590332
    6. '_' → logprob: -4.364933967590332
    7. '\n' → logprob: -4.614933967590332
    8. ':' → logprob: -5.364933967590332
    9. '

' → logprob: -6.364933967590332
    10. ' def' → logprob: -7.239933967590332

Token 97: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00423771608620882
    2. 'd' → logprob: -6.129237651824951
    3. '#' → logprob: -6.754237651824951
    4. '\' → logprob: -7.379237651824951
    5. 'class' → logprob: -9.50423812866211
    6. 'n' → logprob: -10.12923812866211
    7. '_' → logprob: -10.75423812866211
    8. 'de' → logprob: -10.75423812866211
    9. '.' → logprob: -10.87923812866211
    10. ':' → logprob: -11.37923812866211

Token 98: ' initial' (ID: 4871)
  Prédit: ' initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' initial' → logprob: -0.4971243739128113
    2. ' solve' → logprob: -1.872124433517456
    3. ' main' → logprob: -1.997124433517456
    4. ' binary' → logprob: -3.997124433517456
    5. ' update' → logprob: -4.622124195098877
    6. 'solve' → logprob: -4.622124195098877
    7. ' max' → logprob: -4.747124195098877
    8. 'initial' → logprob: -4.872124195098877
    9. ' find' → logprob: -5.247124195098877
    10. ' sliding' → logprob: -5.747124195098877

Token 99: '_current' (ID: 23981)
  Prédit: '_min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.977957546710968
    2. '_sum' → logprob: -1.6029574871063232
    3. '_m' → logprob: -1.9779574871063232
    4. '_val' → logprob: -2.7279574871063232
    5. '_idx' → logprob: -3.2279574871063232
    6. '_mid' → logprob: -3.7279574871063232
    7. '_cnt' → logprob: -4.102957725524902
    8. '_' → logprob: -4.227957725524902
    9. '_count' → logprob: -4.352957725524902
    10. '_value' → logprob: -4.352957725524902

Token 100: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.6937142610549927
    2. '_' → logprob: -0.8187142610549927
    3. '()' → logprob: -3.193714141845703
    4. '_value' → logprob: -4.443714141845703
    5. '():
' → logprob: -5.943714141845703
    6. '_sum' → logprob: -6.568714141845703
    7. ' ()' → logprob: -7.443714141845703
    8. ' ():' → logprob: -7.943714141845703
    9. '_count' → logprob: -8.443714141845703
    10. '_val' → logprob: -8.818714141845703

Token 101: '   ' (ID: 271)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.017587289214134216
    2. '   ' → logprob: -4.892587184906006
    3. ' ' → logprob: -5.017587184906006
    4. 'None' → logprob: -6.267587184906006
    5. '[]' → logprob: -7.517587184906006
    6. ' None' → logprob: -8.017587661743164
    7. 'return' → logprob: -8.892587661743164
    8. '{}' → logprob: -9.392587661743164
    9. '  ' → logprob: -9.642587661743164
    10. '()' → logprob: -9.767587661743164

Token 102: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.025543173775076866
    2. 'None' → logprob: -4.775543212890625
    3. '{}' → logprob: -5.025543212890625
    4. '[]' → logprob: -5.150543212890625
    5. 'deque' → logprob: -6.650543212890625
    6. ' ' → logprob: -6.775543212890625
    7. 'default' → logprob: -7.650543212890625
    8. 'set' → logprob: -8.150543212890625
    9. '{' → logprob: -8.400543212890625
    10. '''' → logprob: -8.775543212890625

Token 103: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.037873461842536926
    2. ' ' → logprob: -3.9128735065460205
    3. 'None' → logprob: -4.787873268127441
    4. '{}' → logprob: -5.662873268127441
    5. ' None' → logprob: -6.037873268127441
    6. '[]' → logprob: -6.037873268127441
    7. ' defaultdict' → logprob: -8.912873268127441
    8. ' []' → logprob: -8.912873268127441
    9. ' {}' → logprob: -9.037873268127441
    10. 'False' → logprob: -10.287873268127441

Token 104: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.013000565581023693
    2. 'None' → logprob: -4.88800048828125
    3. '{}' → logprob: -6.01300048828125
    4. '[]' → logprob: -6.13800048828125
    5. '-' → logprob: -8.13800048828125
    6. ' ' → logprob: -9.51300048828125
    7. 'deque' → logprob: -9.51300048828125
    8. '''' → logprob: -9.63800048828125
    9. 'default' → logprob: -9.88800048828125
    10. '{' → logprob: -10.38800048828125

Token 105: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.015551641583442688
    2. '
' → logprob: -4.515551567077637
    3. '

' → logprob: -6.015551567077637
    4. '\' → logprob: -6.765551567077637
    5. '<|end|>' → logprob: -7.765551567077637
    6. '\n' → logprob: -8.140551567077637
    7. '#' → logprob: -9.890551567077637
    8. ' def' → logprob: -10.765551567077637
    9. '```' → logprob: -10.765551567077637
    10. 'd' → logprob: -11.265551567077637

Token 106: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008539512753486633
    2. 'd' → logprob: -5.50853967666626
    3. '#' → logprob: -6.63353967666626
    4. '_' → logprob: -6.88353967666626
    5. '\' → logprob: -7.13353967666626
    6. ':' → logprob: -8.008539199829102
    7. 'n' → logprob: -8.258539199829102
    8. 'de' → logprob: -8.508539199829102
    9. '\n' → logprob: -9.508539199829102
    10. 'x' → logprob: -9.633539199829102

Token 107: ' is' (ID: 382)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -1.2039660215377808
    2. ' main' → logprob: -1.7039660215377808
    3. ' sliding' → logprob: -2.0789661407470703
    4. ' max' → logprob: -2.7039661407470703
    5. ' find' → logprob: -2.9539661407470703
    6. ' initial' → logprob: -3.3289661407470703
    7. ' count' → logprob: -3.3289661407470703
    8. ' process' → logprob: -3.4539661407470703
    9. ' longest' → logprob: -3.7039661407470703
    10. ' update' → logprob: -3.7039661407470703

Token 108: '_single' (ID: 46053)
  Prédit: '_valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_valid' → logprob: -0.07465271651744843
    2. '_' → logprob: -3.324652671813965
    3. '_in' → logprob: -3.949652671813965
    4. '_pal' → logprob: -5.199652671813965
    5. ' _' → logprob: -6.699652671813965
    6. '_s' → logprob: -7.074652671813965
    7. '_possible' → logprob: -7.074652671813965
    8. '_l' → logprob: -7.199652671813965
    9. '_allowed' → logprob: -7.449652671813965
    10. '_sorted' → logprob: -7.449652671813965

Token 109: '_element' (ID: 21131)
  Prédit: 'ton'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ton' → logprob: -0.22594265639781952
    2. '_char' → logprob: -2.600942611694336
    3. '_character' → logprob: -2.850942611694336
    4. '_element' → logprob: -3.725942611694336
    5. '_' → logprob: -4.600942611694336
    6. '_word' → logprob: -4.975942611694336
    7. '_line' → logprob: -5.600942611694336
    8. '_segment' → logprob: -5.725942611694336
    9. '()' → logprob: -6.225942611694336
    10. '_chunk' → logprob: -6.225942611694336

Token 110: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0014263062039390206
    2. '_' → logprob: -7.6264262199401855
    3. '(_' → logprob: -7.8764262199401855
    4. '(_)' → logprob: -9.001426696777344
    5. '(x' → logprob: -9.876426696777344
    6. '_list' → logprob: -10.001426696777344
    7. '(a' → logprob: -10.001426696777344
    8. '_(' → logprob: -10.376426696777344
    9. '("("' → logprob: -10.501426696777344
    10. '_parent' → logprob: -10.751426696777344

Token 111: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.025110788643360138
    2. ')' → logprob: -3.7751107215881348
    3. 'u' → logprob: -7.275110721588135
    4. '_' → logprob: -7.900110721588135
    5. '):
' → logprob: -7.900110721588135
    6. 'e' → logprob: -8.900111198425293
    7. ' ):' → logprob: -9.525111198425293
    8. '(' → logprob: -9.900111198425293
    9. ',' → logprob: -10.025111198425293
    10. '(n' → logprob: -11.275111198425293

Token 112: '   ' (ID: 271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.42306774854660034
    2. '(' → logprob: -1.2980678081512451
    3. '   ' → logprob: -2.923067808151245
    4. ':' → logprob: -4.548067569732666
    5. '(
' → logprob: -5.798067569732666
    6. 'n' → logprob: -6.673067569732666
    7. 'return' → logprob: -7.048067569732666
    8. ' return' → logprob: -7.173067569732666
    9. ':
' → logprob: -7.173067569732666
    10. ':return' → logprob: -8.423068046569824

Token 113: ' return' (ID: 622)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4588159918785095
    2. ' return' → logprob: -1.4588160514831543
    3. 'n' → logprob: -2.2088160514831543
    4. 'return' (adapté à ' return') → logprob: -3.8338160514831543
    5. '   ' → logprob: -5.583816051483154
    6. '(n' → logprob: -8.583815574645996
    7. ' ' → logprob: -10.833815574645996
    8. ':return' → logprob: -11.708815574645996
    9. '(' → logprob: -12.208815574645996
    10. ' (' → logprob: -12.583815574645996

Token 114: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.02329171448945999
    2. 'n' → logprob: -3.773291826248169
    3. ' (' → logprob: -10.77329158782959
    4. '(n' → logprob: -10.77329158782959
    5. '(' → logprob: -13.39829158782959
    6. ' ' → logprob: -13.64829158782959
    7. '   ' → logprob: -14.64829158782959
    8. '1' → logprob: -14.77329158782959
    9. ' True' → logprob: -14.89829158782959
    10. '	n' → logprob: -15.89829158782959

Token 115: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1678529679775238
    2. '==' → logprob: -1.9178529977798462
    3. ' <=' → logprob: -5.042852878570557
    4. '<=' → logprob: -6.917852878570557
    5. ' ' → logprob: -9.042853355407715
    6. '1' → logprob: -11.042853355407715
    7. '=' → logprob: -11.292853355407715
    8. ' ' → logprob: -12.917853355407715
    9. ' =' → logprob: -13.667853355407715
    10. '==
' → logprob: -14.292853355407715

Token 116: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0181526318192482
    2. ' ' → logprob: -4.018152713775635
    3. '0' → logprob: -13.143152236938477
    4. '   ' → logprob: -14.268152236938477
    5. '  ' → logprob: -17.143152236938477
    6. '```' → logprob: -19.143152236938477
    7. ' ' → logprob: -19.393152236938477
    8. '=' → logprob: -19.518152236938477
    9. '
' → logprob: -20.205652236938477
    10. '' → logprob: -20.205652236938477

Token 117: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011033779446734115
    2. ' ' → logprob: -9.125110626220703
    3. '0' → logprob: -13.750110626220703
    4. '   ' → logprob: -15.375110626220703
    5. '  ' → logprob: -17.500110626220703
    6. '```' → logprob: -19.062610626220703
    7. '１' → logprob: -19.375110626220703
    8. ' ' → logprob: -19.625110626220703
    9. '' → logprob: -19.750110626220703
    10. '۱' → logprob: -19.750110626220703

Token 118: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06545083969831467
    2. '<|end|>' → logprob: -3.06545090675354
    3. '\' → logprob: -5.565450668334961
    4. ':' → logprob: -5.565450668334961
    5. '\n' → logprob: -6.315450668334961
    6. '

' → logprob: -6.440450668334961
    7. '
' → logprob: -6.565450668334961
    8. '#' → logprob: -6.690450668334961
    9. '```' → logprob: -7.315450668334961
    10. ' def' → logprob: -7.565450668334961

Token 119: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0040838588029146194
    2. '#' → logprob: -6.754083633422852
    3. '<|end|>' → logprob: -6.879083633422852
    4. '\' → logprob: -7.504083633422852
    5. '
' → logprob: -8.004083633422852
    6. '_' → logprob: -8.004083633422852
    7. ':' → logprob: -9.129083633422852
    8. ')' → logprob: -9.129083633422852
    9. '\n' → logprob: -9.254083633422852
    10. ' def' → logprob: -9.879083633422852

Token 120: ' print' (ID: 2123)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.7711988091468811
    2. ' main' → logprob: -2.7711987495422363
    3. ' max' → logprob: -2.8961987495422363
    4. ' find' → logprob: -3.0211987495422363
    5. ' solve' → logprob: -3.1461987495422363
    6. ' can' → logprob: -3.2711987495422363
    7. ' binary' → logprob: -3.2711987495422363
    8. ' has' → logprob: -3.5211987495422363
    9. ' check' → logprob: -3.6461987495422363
    10. ' all' → logprob: -3.7711987495422363

Token 121: '_zero' (ID: 53468)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01080220565199852
    2. '()' → logprob: -4.635802268981934
    3. '("")' → logprob: -8.260802268981934
    4. '("("' → logprob: -8.385802268981934
    5. '_' → logprob: -8.635802268981934
    6. '('' → logprob: -9.760802268981934
    7. '(_' → logprob: -10.260802268981934
    8. '(
' → logprob: -10.385802268981934
    9. '<|end|>' → logprob: -10.635802268981934
    10. '("' → logprob: -10.760802268981934

Token 122: '_and' (ID: 18645)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.42985183000564575
    2. '()' → logprob: -1.054851770401001
    3. '_' → logprob: -7.30485200881958
    4. '():
' → logprob: -8.304851531982422
    5. ' ()' → logprob: -9.179851531982422
    6. '_zero' → logprob: -9.929851531982422
    7. ' ():' → logprob: -10.429851531982422
    8. '(' → logprob: -11.304851531982422
    9. '();' → logprob: -12.679851531982422
    10. '_value' → logprob: -12.679851531982422

Token 123: '_exit' (ID: 41242)
  Prédit: '_one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_one' → logprob: -0.7408454418182373
    2. '_exit' → logprob: -1.6158454418182373
    3. '_space' → logprob: -1.9908454418182373
    4. '_continue' → logprob: -2.1158454418182373
    5. '_' → logprob: -3.8658454418182373
    6. '_n' → logprob: -4.365845680236816
    7. '_new' → logprob: -4.740845680236816
    8. '_empty' → logprob: -4.990845680236816
    9. '_return' → logprob: -5.990845680236816
    10. '_none' → logprob: -6.115845680236816

Token 124: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.06224808841943741
    2. '()' → logprob: -2.8122479915618896
    3. '():
' → logprob: -9.062248229980469
    4. ' ()' → logprob: -9.812248229980469
    5. ' ():' → logprob: -9.812248229980469
    6. '(' → logprob: -9.937248229980469
    7. '():

' → logprob: -13.437248229980469
    8. '();' → logprob: -13.687248229980469
    9. ':' → logprob: -14.062248229980469
    10. '().' → logprob: -14.437248229980469

Token 125: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.2994620242971e-06
    2. 'print' → logprob: -12.375008583068848
    3. '   ' → logprob: -13.125008583068848
    4. 'import' → logprob: -14.125008583068848
    5. '```' → logprob: -14.625008583068848
    6. ' print' → logprob: -14.750008583068848
    7. '(' → logprob: -15.375008583068848
    8. '()' → logprob: -16.87500762939453
    9. '    
' → logprob: -17.50000762939453
    10. '   ' → logprob: -17.50000762939453

Token 126: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00038586699520237744
    2. '   ' → logprob: -8.000386238098145
    3. ' print' → logprob: -10.000386238098145
    4. 'import' → logprob: -13.000386238098145
    5. 'sys' → logprob: -13.000386238098145
    6. '```' → logprob: -14.875386238098145
    7. 'exit' → logprob: -16.250385284423828
    8. '0' → logprob: -18.125385284423828
    9. '	print' → logprob: -18.250385284423828
    10. ' sys' → logprob: -19.000385284423828

Token 127: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07889463007450104
    2. '0' → logprob: -2.57889461517334
    3. '(
' → logprob: -12.95389461517334
    4. '('' → logprob: -13.45389461517334
    5. '("' → logprob: -14.82889461517334
    6. ' (' → logprob: -14.95389461517334
    7. '()' → logprob: -15.45389461517334
    8. ' ' → logprob: -16.328895568847656
    9. '(

' → logprob: -17.078895568847656
    10. 'zero' → logprob: -17.703895568847656

Token 128: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -14.250001907348633
    3. '(' → logprob: -14.375001907348633
    4. '"' → logprob: -16.250001907348633
    5. ')' → logprob: -16.875001907348633
    6. ''' → logprob: -18.375001907348633
    7. '۰' → logprob: -19.250001907348633
    8. '０' → logprob: -19.500001907348633
    9. '```' → logprob: -19.625001907348633
    10. '00' → logprob: -19.750001907348633

Token 129: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.693182110786438
    2. ')
' → logprob: -0.693182110786438
    3. ')
' → logprob: -10.318181991577148
    4. ' )
' → logprob: -14.443181991577148
    5. ')

' → logprob: -14.693181991577148
    6. ' )' → logprob: -14.943181991577148
    7. ')return' → logprob: -15.318181991577148
    8. '))' → logprob: -16.44318199157715
    9. ')`
' → logprob: -17.06818199157715
    10. ');
' → logprob: -17.19318199157715

Token 130: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17824774980545044
    2. '<|end|>' → logprob: -2.0532476902008057
    3. 'exit' → logprob: -4.553247928619385
    4. 'import' → logprob: -4.678247928619385
    5. '
' → logprob: -5.428247928619385
    6. '	exit' → logprob: -5.803247928619385
    7. 'return' → logprob: -5.928247928619385
    8. '<|end|>' → logprob: -6.053247928619385
    9. 'sys' → logprob: -7.178247928619385
    10. '    
' → logprob: -7.428247928619385

Token 131: ' exit' (ID: 10654)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' (adapté à ' exit') → logprob: -0.0489179901778698
    2. 'sys' → logprob: -3.0489180088043213
    3. '   ' → logprob: -8.298917770385742
    4. 'return' → logprob: -9.548917770385742
    5. ' exit' → logprob: -12.298917770385742
    6. 'import' → logprob: -12.298917770385742
    7. ' sys' → logprob: -13.798917770385742
    8. 'quit' → logprob: -15.048917770385742
    9. '	exit' → logprob: -17.548917770385742
    10. '```' → logprob: -18.548917770385742

Token 132: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0005890139145776629
    2. '(' → logprob: -7.500588893890381
    3. '()
' → logprob: -10.625589370727539
    4. ' ()' → logprob: -12.000589370727539
    5. '()

' → logprob: -13.250589370727539
    6. '(
' → logprob: -13.375589370727539
    7. '()\' → logprob: -13.750589370727539
    8. '()`' → logprob: -15.250589370727539
    9. '(

' → logprob: -15.625589370727539
    10. '();' → logprob: -15.750589370727539

Token 133: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.842555426876061e-06
    2. 'n' → logprob: -13.250004768371582
    3. 'ndef' → logprob: -14.000004768371582
    4. ' def' → logprob: -14.375004768371582
    5. '<|end|>' → logprob: -14.625004768371582
    6. '#' → logprob: -14.875004768371582
    7. '\' → logprob: -15.250004768371582
    8. '
' → logprob: -15.875004768371582
    9. '  
' → logprob: -16.8750057220459
    10. '-def' → logprob: -17.0000057220459

Token 134: ' condition' (ID: 7060)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.2606838345527649
    2. 'main' → logprob: -1.6356837749481201
    3. ' solve' → logprob: -4.260684013366699
    4. 'solve' → logprob: -5.010684013366699
    5. ' sliding' → logprob: -5.385684013366699
    6. ' find' → logprob: -6.635684013366699
    7. ' max' → logprob: -6.635684013366699
    8. 'max' → logprob: -6.635684013366699
    9. ' process' → logprob: -7.135684013366699
    10. ' binary' → logprob: -7.385684013366699

Token 135: '_should' (ID: 92933)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.027242248877882957
    2. ' (' → logprob: -4.902242183685303
    3. '(left' → logprob: -4.902242183685303
    4. '(n' → logprob: -5.652242183685303
    5. '(current' → logprob: -6.277242183685303
    6. '(s' → logprob: -6.652242183685303
    7. '()' → logprob: -7.027242183685303
    8. '(a' → logprob: -7.277242183685303
    9. '(mid' → logprob: -7.277242183685303
    10. '_left' → logprob: -7.527242183685303

Token 136: '_continue' (ID: 188911)
  Prédit: '_continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_continue' → logprob: -0.08524984866380692
    2. '_expand' → logprob: -3.460249900817871
    3. '_extend' → logprob: -4.460249900817871
    4. '_check' → logprob: -4.710249900817871
    5. '_break' → logprob: -5.210249900817871
    6. '_include' → logprob: -5.335249900817871
    7. '_update' → logprob: -5.335249900817871
    8. '_stop' → logprob: -5.585249900817871
    9. '_move' → logprob: -6.335249900817871
    10. '_count' → logprob: -6.460249900817871

Token 137: '(left' (ID: 32958)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25470730662345886
    2. '():' → logprob: -2.3797073364257812
    3. '(left' → logprob: -2.6297073364257812
    4. '(current' → logprob: -3.5047073364257812
    5. '(n' → logprob: -4.754707336425781
    6. '(s' → logprob: -5.504707336425781
    7. '(start' → logprob: -6.129707336425781
    8. '(i' → logprob: -6.504707336425781
    9. '(:' → logprob: -6.879707336425781
    10. '(_' → logprob: -7.004707336425781

Token 138: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00037263904232531786
    2. ' ,' → logprob: -8.000372886657715
    3. ',right' → logprob: -10.625372886657715
    4. '):' → logprob: -12.125372886657715
    5. ' ' → logprob: -13.125372886657715
    6. ',
' → logprob: -13.500372886657715
    7. ',current' → logprob: -13.875372886657715
    8. ',left' → logprob: -13.875372886657715
    9. ')' → logprob: -15.250372886657715
    10. '   ' → logprob: -15.500372886657715

Token 139: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.5232191681861877
    2. ' right' → logprob: -0.8982191681861877
    3. '   ' → logprob: -10.898219108581543
    4. ' current' → logprob: -11.023219108581543
    5. 'mid' → logprob: -11.148219108581543
    6. 'current' → logprob: -11.648219108581543
    7. 'middle' → logprob: -11.773219108581543
    8. ' middle' → logprob: -11.773219108581543
    9. ' mid' → logprob: -12.273219108581543
    10. '	right' → logprob: -12.273219108581543

Token 140: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.039505794644355774
    2. '):' → logprob: -3.28950572013855
    3. ' ,' → logprob: -6.789505958557129
    4. ' ):' → logprob: -8.789505958557129
    5. ')' → logprob: -9.164505958557129
    6. '):
' → logprob: -10.539505958557129
    7. ',n' → logprob: -10.539505958557129
    8. ' ' → logprob: -11.789505958557129
    9. '   ' → logprob: -12.539505958557129
    10. ',
' → logprob: -12.539505958557129

Token 141: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.29611825942993164
    2. 'n' → logprob: -2.0461182594299316
    3. ' arr' → logprob: -2.6711182594299316
    4. 'arr' → logprob: -3.6711182594299316
    5. ' current' → logprob: -4.921118259429932
    6. ' data' → logprob: -5.171118259429932
    7. ' mx' → logprob: -5.671118259429932
    8. ' mid' → logprob: -5.796118259429932
    9. 'mid' → logprob: -5.796118259429932
    10. ' array' → logprob: -6.546118259429932

Token 142: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04187046363949776
    2. ',' → logprob: -3.416870355606079
    3. '):
' → logprob: -5.166870594024658
    4. ')' → logprob: -6.166870594024658
    5. ' ):' → logprob: -8.0418701171875
    6. ' ,' → logprob: -10.6668701171875
    7. '):
' → logprob: -11.4168701171875
    8. ':' → logprob: -12.0418701171875
    9. '_' → logprob: -12.2918701171875
    10. ',
' → logprob: -12.4168701171875

Token 143: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00043221889063715935
    2. ' return' → logprob: -7.875432014465332
    3. 'return' → logprob: -10.000432014465332
    4. '    
' → logprob: -13.125432014465332
    5. '	return' → logprob: -13.875432014465332
    6. '  ' → logprob: -14.250432014465332
    7. '    ' → logprob: -14.500432014465332
    8. '
' → logprob: -15.000432014465332
    9. '       ' → logprob: -15.000432014465332
    10. '   ' → logprob: -15.000432014465332

Token 144: ' return' (ID: 622)
  Prédit: ' right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.3801284730434418
    2. 'right' → logprob: -1.8801285028457642
    3. ' return' → logprob: -2.2551283836364746
    4. ' left' → logprob: -3.5051283836364746
    5. 'return' (adapté à ' return') → logprob: -3.7551283836364746
    6. 'left' → logprob: -5.255128383636475
    7. '   ' → logprob: -9.130128860473633
    8. ' while' → logprob: -11.255128860473633
    9. 'while' → logprob: -12.130128860473633
    10. '(right' → logprob: -13.255128860473633

Token 145: ' not' (ID: 625)
  Prédit: ' right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.26750707626342773
    2. ' left' → logprob: -1.7675070762634277
    3. 'right' → logprob: -2.8925070762634277
    4. 'left' → logprob: -4.767507076263428
    5. '	right' → logprob: -11.642507553100586
    6. '	left' → logprob: -12.392507553100586
    7. '(right' → logprob: -13.642507553100586
    8. '(left' → logprob: -14.267507553100586
    9. ' ' → logprob: -14.392507553100586
    10. ' lef' → logprob: -14.517507553100586

Token 146: ' (' (ID: 350)
  Prédit: ' right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.31188395619392395
    2. '(right' → logprob: -1.8118839263916016
    3. ' (' → logprob: -2.3118839263916016
    4. 'right' → logprob: -5.311883926391602
    5. '(left' → logprob: -8.186883926391602
    6. '(' → logprob: -8.811883926391602
    7. '[right' → logprob: -9.811883926391602
    8. ' left' → logprob: -9.936883926391602
    9. '	right' → logprob: -11.061883926391602
    10. ' ' → logprob: -11.811883926391602

Token 147: 'left' (ID: 4530)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.05504928529262543
    2. 'left' → logprob: -2.930049180984497
    3. ' right' → logprob: -8.930048942565918
    4. ' left' → logprob: -10.930048942565918
    5. '(right' → logprob: -11.555048942565918
    6. '(left' → logprob: -12.555048942565918
    7. ')' → logprob: -13.430048942565918
    8. '	right' → logprob: -14.430048942565918
    9. '[right' → logprob: -15.180048942565918
    10. '
' → logprob: -15.680048942565918

Token 148: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.5827664732933044
    2. '>=' → logprob: -1.0827665328979492
    3. '>' → logprob: -3.332766532897949
    4. ' >' → logprob: -3.457766532897949
    5. ' <' → logprob: -3.957766532897949
    6. '<' → logprob: -4.707766532897949
    7. '==' → logprob: -5.957766532897949
    8. '<=' → logprob: -6.707766532897949
    9. '+' → logprob: -6.832766532897949
    10. ' <=' → logprob: -6.957766532897949

Token 149: ' n' (ID: 297)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.12066463381052017
    2. ' right' → logprob: -2.245664596557617
    3. 'n' → logprob: -4.995664596557617
    4. ' n' → logprob: -6.870664596557617
    5. '
' → logprob: -13.370664596557617
    6. ' ' → logprob: -13.370664596557617
    7. '   ' → logprob: -13.620664596557617
    8. '	right' → logprob: -13.745664596557617
    9. '(right' → logprob: -15.120664596557617
    10. ')' → logprob: -16.120664596557617

Token 150: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.034348566085100174
    2. ')' → logprob: -4.034348487854004
    3. 'or' → logprob: -4.284348487854004
    4. ' and' → logprob: -6.284348487854004
    5. 'and' → logprob: -8.034348487854004
    6. ' )' → logprob: -10.159348487854004
    7. ' ' → logprob: -10.784348487854004
    8. '   ' → logprob: -11.284348487854004
    9. '	or' → logprob: -11.784348487854004
    10. 'right' → logprob: -12.284348487854004

Token 151: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.038051363080739975
    2. ' right' → logprob: -3.2880513668060303
    3. '	right' → logprob: -12.66305160522461
    4. ' ' → logprob: -13.66305160522461
    5. 'left' → logprob: -13.78805160522461
    6. '(right' → logprob: -13.91305160522461
    7. '   ' → logprob: -13.91305160522461
    8. '
' → logprob: -14.03805160522461
    9. '[right' → logprob: -14.53805160522461
    10. '_right' → logprob: -15.16305160522461

Token 152: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.6153591871261597
    2. '>' → logprob: -1.2403591871261597
    3. ' >=' → logprob: -2.115359306335449
    4. ' >' → logprob: -3.115359306335449
    5. '<=' → logprob: -5.490359306335449
    6. ' <=' → logprob: -6.990359306335449
    7. '<' → logprob: -9.74035930633545
    8. ')' → logprob: -9.74035930633545
    9. '   ' → logprob: -9.99035930633545
    10. '==' → logprob: -10.61535930633545

Token 153: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3132840096950531
    2. ' n' → logprob: -1.3132840394973755
    3. ')n' → logprob: -11.813283920288086
    4. '	n' → logprob: -12.438283920288086
    5. '<|end|>' → logprob: -12.938283920288086
    6. ')' → logprob: -13.188283920288086
    7. ' ' → logprob: -13.313283920288086
    8. '
' → logprob: -13.563283920288086
    9. '   ' → logprob: -13.813283920288086
    10. '<|end|>' → logprob: -14.438283920288086

Token 154: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00026419671485200524
    2. ' )' → logprob: -8.750264167785645
    3. ' or' → logprob: -9.250264167785645
    4. ' and' → logprob: -12.750264167785645
    5. '))' → logprob: -13.125264167785645
    6. '())' → logprob: -13.250264167785645
    7. '   ' → logprob: -14.000264167785645
    8. ')
' → logprob: -14.250264167785645
    9. 'or' → logprob: -15.000264167785645
    10. 'and' → logprob: -15.875264167785645

Token 155: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006349287927150726
    2. ')' → logprob: -6.131349086761475
    3. '<|end|>' → logprob: -6.631349086761475
    4. ':' → logprob: -6.631349086761475
    5. '_' → logprob: -7.506349086761475
    6. '
' → logprob: -8.131349563598633
    7. '#' → logprob: -8.256349563598633
    8. ' def' → logprob: -9.256349563598633
    9. ',' → logprob: -9.756349563598633
    10. ':def' → logprob: -10.131349563598633

Token 156: ' compare' (ID: 12221)
  Prédit: ' condition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' condition' → logprob: -1.0249007940292358
    2. 'def' → logprob: -1.2749007940292358
    3. ' def' → logprob: -2.3999009132385254
    4. 'condition' → logprob: -2.7749009132385254
    5. ' update' → logprob: -2.7749009132385254
    6. ' binary' → logprob: -4.149900913238525
    7. ' move' → logprob: -4.274900913238525
    8. 'binary' → logprob: -4.399900913238525
    9. 'update' → logprob: -4.774900913238525
    10. ' is' → logprob: -4.774900913238525

Token 157: '_and' (ID: 18645)
  Prédit: '(left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.5800268054008484
    2. '(' → logprob: -2.205026865005493
    3. '_' → logprob: -2.205026865005493
    4. '(a' → logprob: -2.830026865005493
    5. '_tokens' → logprob: -2.955026865005493
    6. '_values' → logprob: -3.205026865005493
    7. '_elements' → logprob: -3.580026865005493
    8. '_left' → logprob: -4.080026626586914
    9. '_(' → logprob: -5.580026626586914
    10. '_strings' → logprob: -5.705026626586914

Token 158: '_update' (ID: 19528)
  Prédit: '_update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_update' → logprob: -0.06754245609045029
    2. '_swap' → logprob: -3.442542552947998
    3. 'update' → logprob: -3.942542552947998
    4. '_return' → logprob: -6.317542552947998
    5. 'swap' → logprob: -6.317542552947998
    6. '_increment' → logprob: -6.442542552947998
    7. '_get' → logprob: -6.817542552947998
    8. '_set' → logprob: -6.942542552947998
    9. '_continue' → logprob: -6.942542552947998
    10. '_move' → logprob: -7.442542552947998

Token 159: '(t' (ID: 2025)
  Prédit: '(left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.5613158345222473
    2. '(current' → logprob: -1.1863157749176025
    3. '(' → logprob: -2.5613157749176025
    4. '(max' → logprob: -3.4363157749176025
    5. '(m' → logprob: -5.061316013336182
    6. '(mx' → logprob: -5.936316013336182
    7. '_current' → logprob: -6.186316013336182
    8. '_m' → logprob: -7.561316013336182
    9. '_left' → logprob: -7.561316013336182
    10. ' (' → logprob: -7.686316013336182

Token 160: ',' (ID: 11)
  Prédit: 'uple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uple' → logprob: -0.9193350076675415
    2. 'mp' → logprob: -1.1693350076675415
    3. ',' → logprob: -2.669334888458252
    4. 'arget' → logprob: -2.794334888458252
    5. 'emp' → logprob: -3.044334888458252
    6. 'up' → logprob: -4.419334888458252
    7. 'r' → logprob: -4.669334888458252
    8. '_current' → logprob: -4.669334888458252
    9. 'uples' → logprob: -4.794334888458252
    10. 'okens' → logprob: -5.169334888458252

Token 161: ' left' (ID: 3561)
  Prédit: ' mx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mx' → logprob: -1.1548207998275757
    2. ' current' → logprob: -1.2798207998275757
    3. ' left' → logprob: -1.2798207998275757
    4. ' best' → logprob: -3.1548209190368652
    5. 'mx' → logprob: -4.029820919036865
    6. 'current' → logprob: -4.154820919036865
    7. 'left' → logprob: -4.279820919036865
    8. ' max' → logprob: -5.154820919036865
    9. 'best' → logprob: -5.654820919036865
    10. ' key' → logprob: -5.779820919036865

Token 162: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007876326330006123
    2. ' ,' → logprob: -4.882876396179199
    3. ',right' → logprob: -9.0078763961792
    4. ')' → logprob: -9.3828763961792
    5. '   ' → logprob: -11.7578763961792
    6. ' ' → logprob: -12.1328763961792
    7. ',current' → logprob: -12.1328763961792
    8. ' )' → logprob: -12.1328763961792
    9. '):' → logprob: -12.2578763961792
    10. '),' → logprob: -12.2578763961792

Token 163: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.6353608965873718
    2. 'right' → logprob: -0.7603608965873718
    3. ' current' → logprob: -6.8853607177734375
    4. ' mx' → logprob: -6.8853607177734375
    5. ' t' → logprob: -8.385360717773438
    6. 'current' → logprob: -8.635360717773438
    7. 'mx' → logprob: -8.635360717773438
    8. 't' → logprob: -9.510360717773438
    9. ' ' → logprob: -11.010360717773438
    10. '   ' → logprob: -11.635360717773438

Token 164: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6336488127708435
    2. ',' → logprob: -0.7586488127708435
    3. '):
' → logprob: -7.508648872375488
    4. ')' → logprob: -8.508648872375488
    5. ' ):' → logprob: -8.508648872375488
    6. ' ,' → logprob: -9.758648872375488
    7. '   ' → logprob: -11.508648872375488
    8. '):

' → logprob: -12.258648872375488
    9. ',t' → logprob: -13.008648872375488
    10. ' ' → logprob: -13.383648872375488

Token 165: ' current' (ID: 2208)
  Prédit: 'mx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mx' → logprob: -0.8210082650184631
    2. 'current' → logprob: -1.1960082054138184
    3. ' current' → logprob: -1.9460082054138184
    4. ' mx' → logprob: -2.1960082054138184
    5. 'max' → logprob: -7.071008205413818
    6. 'best' → logprob: -7.696008205413818
    7. 't' → logprob: -7.946008205413818
    8. ' best' → logprob: -8.321008682250977
    9. 'm' → logprob: -8.696008682250977
    10. ' t' → logprob: -9.071008682250977

Token 166: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06084920093417168
    2. ',' → logprob: -3.185849189758301
    3. ' ):' → logprob: -4.810849189758301
    4. '):
' → logprob: -5.060849189758301
    5. ' ,' → logprob: -7.060849189758301
    6. '_' → logprob: -7.310849189758301
    7. ')' → logprob: -8.0608491897583
    8. '_m' → logprob: -8.4358491897583
    9. '_,' → logprob: -8.5608491897583
    10. ' ' → logprob: -8.8108491897583

Token 167: ' mx' (ID: 28004)
  Prédit: 'mx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mx' → logprob: -0.47498348355293274
    2. ' mx' → logprob: -0.9749834537506104
    3. '   ' → logprob: -8.849983215332031
    4. 't' → logprob: -9.474983215332031
    5. 'initial' → logprob: -9.599983215332031
    6. 'm' → logprob: -9.724983215332031
    7. ' initial' → logprob: -9.724983215332031
    8. ' t' → logprob: -9.724983215332031
    9. ' current' → logprob: -9.974983215332031
    10. 'max' → logprob: -9.974983215332031

Token 168: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004800345748662949
    2. '):
' → logprob: -5.379800319671631
    3. ',' → logprob: -9.504800796508789
    4. ' ):' → logprob: -9.504800796508789
    5. ')' → logprob: -10.879800796508789
    6. '):
' → logprob: -12.879800796508789
    7. '):

' → logprob: -13.129800796508789
    8. '   ' → logprob: -13.254800796508789
    9. '_' → logprob: -13.754800796508789
    10. ':' → logprob: -14.129800796508789

Token 169: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10510209202766418
    2. '   ' → logprob: -2.480102062225342
    3. '():' → logprob: -4.980102062225342
    4. '):' → logprob: -5.480102062225342
    5. ':
' → logprob: -6.230102062225342
    6. ' :' → logprob: -6.480102062225342
    7. ',' → logprob: -7.605102062225342
    8. ':return' → logprob: -8.4801025390625
    9. ' ' → logprob: -9.2301025390625
    10. '<|end|>' → logprob: -9.4801025390625

Token 170: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14292916655540466
    2. 'if' (adapté à ' if') → logprob: -2.1429290771484375
    3. ' if' → logprob: -4.2679290771484375
    4. 'updated' → logprob: -7.5179290771484375
    5. 'for' → logprob: -8.267929077148438
    6. ' updated' → logprob: -8.392929077148438
    7. 'new' → logprob: -8.642929077148438
    8. 'length' → logprob: -9.642929077148438
    9. 'changed' → logprob: -9.892929077148438
    10. 'max' → logprob: -9.892929077148438

Token 171: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5699060559272766
    2. ' t' → logprob: -1.0699059963226318
    3. ' right' → logprob: -3.319905996322632
    4. 'right' → logprob: -3.319905996322632
    5. ' current' → logprob: -4.819906234741211
    6. ' (' → logprob: -5.569906234741211
    7. 'current' → logprob: -6.319906234741211
    8. '(t' → logprob: -6.569906234741211
    9. '(right' → logprob: -7.319906234741211
    10. '   ' → logprob: -7.569906234741211

Token 172: '[left' (ID: 98859)
  Prédit: '[left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[left' → logprob: -0.24785150587558746
    2. '[right' → logprob: -1.7478514909744263
    3. '[' → logprob: -3.122851610183716
    4. '==' → logprob: -7.997851371765137
    5. '>' → logprob: -8.247851371765137
    6. '[current' → logprob: -8.497851371765137
    7. '   ' → logprob: -9.997851371765137
    8. ' [' → logprob: -10.372851371765137
    9. '[int' → logprob: -10.372851371765137
    10. '[mid' → logprob: -10.372851371765137

Token 173: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04999697208404541
    2. '[left' → logprob: -4.174996852874756
    3. '[right' → logprob: -4.424996852874756
    4. ']==' → logprob: -4.924996852874756
    5. '][' → logprob: -5.174996852874756
    6. '[' → logprob: -5.799996852874756
    7. ']>' → logprob: -6.924996852874756
    8. ' ]' → logprob: -6.924996852874756
    9. '+' → logprob: -7.299996852874756
    10. '   ' → logprob: -7.424996852874756

Token 174: ' >=' (ID: 5064)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3965955674648285
    2. '<' → logprob: -2.1465954780578613
    3. ' <' → logprob: -2.1465954780578613
    4. '==' → logprob: -3.5215954780578613
    5. ' ==' → logprob: -4.146595478057861
    6. '>' → logprob: -4.271595478057861
    7. '+' → logprob: -4.271595478057861
    8. ' >' → logprob: -5.021595478057861
    9. ']' → logprob: -5.396595478057861
    10. '=' → logprob: -6.271595478057861

Token 175: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.031143896281719208
    2. ' t' → logprob: -3.5311439037323
    3. 'current' → logprob: -7.281143665313721
    4. 'mx' → logprob: -8.156144142150879
    5. ' current' → logprob: -8.531144142150879
    6. '0' → logprob: -9.281144142150879
    7. 'right' → logprob: -9.906144142150879
    8. ' mx' → logprob: -10.406144142150879
    9. ' ' → logprob: -10.906144142150879
    10. ' right' → logprob: -12.281144142150879

Token 176: '[right' (ID: 112866)
  Prédit: '[right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[right' → logprob: -7.636475493200123e-05
    2. 'right' → logprob: -10.250076293945312
    3. '[left' → logprob: -10.250076293945312
    4. '[' → logprob: -12.375076293945312
    5. ':right' → logprob: -14.625076293945312
    6. '	right' → logprob: -15.500076293945312
    7. ' right' → logprob: -16.250076293945312
    8. '```' → logprob: -16.250076293945312
    9. ' [' → logprob: -16.375076293945312
    10. ' ' → logprob: -16.625076293945312

Token 177: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.13622581958770752
    2. ']:
' → logprob: -2.136225700378418
    3. ']' → logprob: -5.386225700378418
    4. ' ]' → logprob: -6.136225700378418
    5. ']:
' → logprob: -6.761225700378418
    6. ':' → logprob: -7.386225700378418
    7. '   ' → logprob: -8.761225700378418
    8. ' and' → logprob: -9.261225700378418
    9. ']):' → logprob: -9.886225700378418
    10. '       ' → logprob: -9.886225700378418

Token 178: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4208143651485443
    2. ':' → logprob: -1.1708143949508667
    3. ':
' → logprob: -4.920814514160156
    4. '   ' → logprob: -4.920814514160156
    5. ' :' → logprob: -5.045814514160156
    6. '):' → logprob: -5.295814514160156
    7. ',' → logprob: -6.420814514160156
    8. ' :
' → logprob: -7.295814514160156
    9. '<|end|>' → logprob: -7.420814514160156
    10. ':return' → logprob: -7.545814514160156

Token 179: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -1.4335849285125732
    2. 'return' → logprob: -1.5585849285125732
    3. 'current' (adapté à ' current') → logprob: -1.5585849285125732
    4. ' return' → logprob: -2.0585849285125732
    5. '       ' → logprob: -2.3085849285125732
    6. '   ' → logprob: -3.6835849285125732
    7. 'mx' → logprob: -3.6835849285125732
    8. ' if' → logprob: -4.058585166931152
    9. ' mx' → logprob: -4.058585166931152
    10. 'if' → logprob: -4.433585166931152

Token 180: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.10102947801351547
    2. '+=' → logprob: -2.976029396057129
    3. ' =' → logprob: -3.601029396057129
    4. ' +' → logprob: -4.851029396057129
    5. '=' → logprob: -5.351029396057129
    6. '+' → logprob: -5.476029396057129
    7. ',' → logprob: -8.226029396057129
    8. ' ' → logprob: -8.726029396057129
    9. ' -=' → logprob: -8.726029396057129
    10. '[' → logprob: -8.976029396057129

Token 181: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2605592608451843
    2. 't' → logprob: -2.010559320449829
    3. ' t' → logprob: -3.010559320449829
    4. ' ' → logprob: -3.135559320449829
    5. 'right' → logprob: -6.38555908203125
    6. ' (' → logprob: -8.13555908203125
    7. ' right' → logprob: -8.38555908203125
    8. '(t' → logprob: -8.38555908203125
    9. 'left' → logprob: -9.51055908203125
    10. '2' → logprob: -9.94805908203125

Token 182: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.036103710532188416
    2. 't' → logprob: -3.4111037254333496
    3. 'right' → logprob: -6.28610372543335
    4. ' ' → logprob: -8.411103248596191
    5. '(t' → logprob: -9.036103248596191
    6. 'left' → logprob: -10.036103248596191
    7. '0' → logprob: -10.036103248596191
    8. '(' → logprob: -10.161103248596191
    9. ' t' → logprob: -10.286103248596191
    10. 'current' → logprob: -10.411103248596191

Token 183: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28457576036453247
    2. '       ' → logprob: -1.6595757007598877
    3. '
' → logprob: -3.4095757007598877
    4. ' else' → logprob: -4.659575939178467
    5. '<|end|>' → logprob: -5.409575939178467
    6. '        
' → logprob: -5.659575939178467
    7. '    
' → logprob: -5.659575939178467
    8. 'else' → logprob: -6.409575939178467
    9. ' 
' → logprob: -7.659575939178467
    10. ',' → logprob: -8.409575462341309

Token 184: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41643115878105164
    2. '       ' → logprob: -1.166431188583374
    3. ' else' → logprob: -3.916431188583374
    4. 'else' → logprob: -5.791430950164795
    5. '<|end|>' → logprob: -5.916430950164795
    6. '
' → logprob: -6.291430950164795
    7. '        
' → logprob: -7.916430950164795
    8. '    
' → logprob: -8.041431427001953
    9. '    ' → logprob: -9.041431427001953
    10. ',' → logprob: -9.041431427001953

Token 185: ' mx' (ID: 28004)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.645462691783905
    2. 'right' → logprob: -0.895462691783905
    3. 'return' → logprob: -3.64546275138855
    4. ' left' → logprob: -3.89546275138855
    5. ' right' → logprob: -4.645462512969971
    6. '   ' → logprob: -5.520462512969971
    7. ' return' → logprob: -5.895462512969971
    8. 'if' → logprob: -6.520462512969971
    9. 'mx' (adapté à ' mx') → logprob: -6.645462512969971
    10. 'else' → logprob: -8.145462989807129

Token 186: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04859577491879463
    2. '=' → logprob: -3.048595666885376
    3. '=max' → logprob: -11.923595428466797
    4. ' ' → logprob: -14.298595428466797
    5. ' +=' → logprob: -14.673595428466797
    6. ',' → logprob: -14.923595428466797
    7. '.' → logprob: -15.923595428466797
    8. '+=' → logprob: -16.798595428466797
    9. 'max' → logprob: -16.798595428466797
    10. '	' → logprob: -16.923595428466797

Token 187: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.13247635960578918
    2. ' max' → logprob: -2.132476329803467
    3. 'current' → logprob: -5.382476329803467
    4. ' current' → logprob: -7.007476329803467
    5. '	max' → logprob: -10.632476806640625
    6. '(max' → logprob: -13.382476806640625
    7. 'left' → logprob: -13.507476806640625
    8. ' ' → logprob: -14.257476806640625
    9. '   ' → logprob: -14.257476806640625
    10. '[max' → logprob: -14.382476806640625

Token 188: '(current' (ID: 15023)
  Prédit: '(mx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mx' → logprob: -0.3225485384464264
    2. '(current' → logprob: -1.322548508644104
    3. '(' → logprob: -4.6975483894348145
    4. '(max' → logprob: -9.447548866271973
    5. 'current' → logprob: -11.197548866271973
    6. 'mx' → logprob: -11.197548866271973
    7. '(mc' → logprob: -11.447548866271973
    8. '(cur' → logprob: -12.572548866271973
    9. '(curr' → logprob: -13.447548866271973
    10. '(m' → logprob: -13.947548866271973

Token 189: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0023298633750528097
    2. ')' → logprob: -6.1273298263549805
    3. ',)' → logprob: -9.50232982635498
    4. ' ,' → logprob: -10.37732982635498
    5. ',
' → logprob: -11.25232982635498
    6. ' )' → logprob: -11.37732982635498
    7. ',m' → logprob: -11.75232982635498
    8. ' ' → logprob: -13.50232982635498
    9. ',max' → logprob: -14.00232982635498
    10. '<|end|>' → logprob: -14.00232982635498

Token 190: ' mx' (ID: 28004)
  Prédit: 'mx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mx' → logprob: -0.3132866322994232
    2. ' mx' → logprob: -1.3132866621017456
    3. '(mx' → logprob: -10.688286781311035
    4. ' ' → logprob: -13.938286781311035
    5. '.mx' → logprob: -15.438286781311035
    6. '   ' → logprob: -15.813286781311035
    7. ')' → logprob: -16.18828582763672
    8. 'm' → logprob: -16.18828582763672
    9. 'max' → logprob: -16.18828582763672
    10. '
' → logprob: -16.31328582763672

Token 191: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20634034276008606
    2. ')
' → logprob: -1.7063403129577637
    3. '   ' → logprob: -5.331340312957764
    4. '       ' → logprob: -10.456340789794922
    5. ' )' → logprob: -11.081340789794922
    6. ',' → logprob: -11.081340789794922
    7. ' )
' → logprob: -11.831340789794922
    8. ')

' → logprob: -12.456340789794922
    9. ')return' → logprob: -12.831340789794922
    10. ')
' → logprob: -12.956340789794922

Token 192: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4976465106010437
    2. '       ' → logprob: -0.9976465106010437
    3. 'else' → logprob: -4.372646331787109
    4. ' else' → logprob: -4.622646331787109
    5. 'return' → logprob: -8.12264633178711
    6. ' return' → logprob: -8.62264633178711
    7. '	else' → logprob: -9.37264633178711
    8. '	return' → logprob: -9.99764633178711
    9. '        
' → logprob: -10.24764633178711
    10. ',' → logprob: -10.37264633178711

Token 193: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6970398426055908
    2. 'else' (adapté à ' else') → logprob: -0.6970398426055908
    3. ' else' → logprob: -5.572039604187012
    4. 'return' → logprob: -10.447039604187012
    5. '       ' → logprob: -10.572039604187012
    6. 'elif' → logprob: -11.197039604187012
    7. '	else' → logprob: -11.947039604187012
    8. '```' → logprob: -13.322039604187012
    9. '
' → logprob: -13.947039604187012
    10. ')' → logprob: -14.447039604187012

Token 194: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5573149919509888
    2. ':' → logprob: -0.9323149919509888
    3. 'current' → logprob: -3.807314872741699
    4. '       ' → logprob: -5.182314872741699
    5. ' current' → logprob: -5.682314872741699
    6. '   ' → logprob: -6.182314872741699
    7. '_current' → logprob: -9.4323148727417
    8. ',' → logprob: -10.0573148727417
    9. '(current' → logprob: -10.1823148727417
    10. 'Current' → logprob: -10.3073148727417

Token 195: '       ' (ID: 309)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.47293975949287415
    2. '       ' → logprob: -1.0979397296905518
    3. '   ' → logprob: -3.3479397296905518
    4. ' current' → logprob: -4.847939968109131
    5. '	current' → logprob: -8.472939491271973
    6. '_current' → logprob: -11.722939491271973
    7. '0' → logprob: -12.097939491271973
    8. '[current' → logprob: -12.222939491271973
    9. 'urrent' → logprob: -12.347939491271973
    10. '	' → logprob: -12.347939491271973

Token 196: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.0009370702900923789
    2. ' current' → logprob: -7.375936985015869
    3. '   ' → logprob: -8.125937461853027
    4. '       ' → logprob: -11.875937461853027
    5. '	current' → logprob: -12.375937461853027
    6. 'return' → logprob: -13.000937461853027
    7. 'Current' → logprob: -15.000937461853027
    8. 'urrent' → logprob: -16.00093650817871
    9. '(current' → logprob: -16.12593650817871
    10. '$current' → logprob: -16.25093650817871

Token 197: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.126930832862854
    2. ' =' → logprob: -2.1269307136535645
    3. ',' → logprob: -13.751931190490723
    4. ' ' → logprob: -13.751931190490723
    5. '   ' → logprob: -15.501931190490723
    6. '.=' → logprob: -15.751931190490723
    7. ' +=' → logprob: -16.376930236816406
    8. '+=' → logprob: -16.376930236816406
    9. '-=' → logprob: -16.876930236816406
    10. ' -=' → logprob: -17.001930236816406

Token 198: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5560306310653687
    2. '0' → logprob: -0.9310306310653687
    3. ' ' → logprob: -3.431030750274658
    4. 'current' → logprob: -12.2435302734375
    5. '   ' → logprob: -12.4310302734375
    6. '  ' → logprob: -13.1810302734375
    7. 'initial' → logprob: -13.5560302734375
    8. ' ' → logprob: -13.9935302734375
    9. ' current' → logprob: -14.3685302734375
    10. '2' → logprob: -14.4935302734375

Token 199: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4289235472679138
    2. '0' → logprob: -1.0539236068725586
    3. ' ' → logprob: -8.428923606872559
    4. '   ' → logprob: -13.866423606872559
    5. 'current' → logprob: -14.241423606872559
    6. ' ' → logprob: -15.053923606872559
    7. '  ' → logprob: -15.303923606872559
    8. '' → logprob: -15.491423606872559
    9. '2' → logprob: -15.678923606872559
    10. '```' → logprob: -15.741423606872559

Token 200: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006944431224837899
    2. 'return' → logprob: -8.125694274902344
    3. '
' → logprob: -9.000694274902344
    4. ' return' → logprob: -9.125694274902344
    5. '    
' → logprob: -9.250694274902344
    6. '<|end|>' → logprob: -10.375694274902344
    7. ',' → logprob: -11.375694274902344
    8. '       ' → logprob: -11.500694274902344
    9. '	return' → logprob: -12.625694274902344
    10. '        
' → logprob: -13.000694274902344

Token 201: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011637273244559765
    2. 'return' → logprob: -4.511637210845947
    3. ' return' → logprob: -7.511637210845947
    4. '       ' → logprob: -10.511637687683105
    5. ',' → logprob: -12.011637687683105
    6. '	return' → logprob: -12.261637687683105
    7. '    
' → logprob: -13.511637687683105
    8. ' ' → logprob: -14.636637687683105
    9. '
' → logprob: -15.011637687683105
    10. ')' → logprob: -15.011637687683105

Token 202: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08764603734016418
    2. 'return' (adapté à ' return') → logprob: -2.962646007537842
    3. ' return' → logprob: -3.462646007537842
    4. '	return' → logprob: -7.712646007537842
    5. ' ' → logprob: -8.837646484375
    6. '    ' → logprob: -9.462646484375
    7. '<|end|>' → logprob: -9.962646484375
    8. ')' → logprob: -10.587646484375
    9. '  ' → logprob: -10.837646484375
    10. ' else' → logprob: -10.962646484375

Token 203: ' current' (ID: 2208)
  Prédit: 'mx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mx' → logprob: -0.2824637293815613
    2. ' mx' → logprob: -1.782463788986206
    3. 'current' → logprob: -3.282463788986206
    4. '(mx' → logprob: -3.782463788986206
    5. ' current' → logprob: -4.157463550567627
    6. 'left' → logprob: -6.782463550567627
    7. ' left' → logprob: -8.032464027404785
    8. '(current' → logprob: -8.532464027404785
    9. ' ' → logprob: -9.782464027404785
    10. ' (' → logprob: -10.032464027404785

Token 204: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06206526979804039
    2. ',m' → logprob: -2.812065362930298
    3. ',max' → logprob: -9.937065124511719
    4. ' ,' → logprob: -10.062065124511719
    5. '(mx' → logprob: -12.937065124511719
    6. ',
' → logprob: -13.937065124511719
    7. 'mx' → logprob: -14.437065124511719
    8. ',M' → logprob: -14.937065124511719
    9. ' mx' → logprob: -15.062065124511719
    10. ',x' → logprob: -15.062065124511719

Token 205: ' mx' (ID: 28004)
  Prédit: 'mx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mx' → logprob: -0.007611243985593319
    2. ' mx' → logprob: -4.882611274719238
    3. '(mx' → logprob: -12.757611274719238
    4. 'm' → logprob: -13.632611274719238
    5. 'max' → logprob: -14.757611274719238
    6. ' ' → logprob: -14.882611274719238
    7. '.mx' → logprob: -16.507610321044922
    8. '	m' → logprob: -17.132610321044922
    9. 'right' → logprob: -18.007610321044922
    10. 'mc' → logprob: -18.132610321044922

Token 206: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0042776004411280155
    2. '<|end|>' → logprob: -5.50427770614624
    3. 't' → logprob: -9.504277229309082
    4. '#' → logprob: -10.129277229309082
    5. '<|end|>' → logprob: -11.129277229309082
    6. 'for' → logprob: -11.129277229309082
    7. ')' → logprob: -11.504277229309082
    8. '```' → logprob: -11.879277229309082
    9. ',' → logprob: -12.004277229309082
    10. 'left' → logprob: -12.129277229309082

Token 207: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -6.110668618930504e-05
    2. '#' → logprob: -10.50006103515625
    3. 'for' → logprob: -10.50006103515625
    4. ')' → logprob: -12.87506103515625
    5. 't' → logprob: -13.87506103515625
    6. '```' → logprob: -14.50006103515625
    7. 'if' → logprob: -15.37506103515625
    8. ' def' → logprob: -15.37506103515625
    9. '<|end|>' → logprob: -15.50006103515625
    10. '[]' → logprob: -15.50006103515625

Token 208: ' increment' (ID: 24032)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.42348960041999817
    2. 'main' → logprob: -1.2984895706176758
    3. ' solve' → logprob: -3.923489570617676
    4. 'solve' → logprob: -4.173489570617676
    5. ' find' → logprob: -4.673489570617676
    6. 'process' → logprob: -5.298489570617676
    7. 'def' → logprob: -5.423489570617676
    8. 'max' → logprob: -5.423489570617676
    9. ' process' → logprob: -5.548489570617676
    10. ' max' → logprob: -5.923489570617676

Token 209: '_indices' (ID: 43508)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5591874122619629
    2. '_right' → logprob: -1.809187412261963
    3. '_left' → logprob: -2.184187412261963
    4. '(left' → logprob: -2.434187412261963
    5. '_' → logprob: -3.559187412261963
    6. '(right' → logprob: -3.684187412261963
    7. '(_' → logprob: -6.059187412261963
    8. ' (' → logprob: -6.309187412261963
    9. '_current' → logprob: -6.559187412261963
    10. '()' → logprob: -6.684187412261963

Token 210: '(left' (ID: 32958)
  Prédit: '(left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.004132303409278393
    2. '(' → logprob: -5.504132270812988
    3. ' (' → logprob: -10.254132270812988
    4. '(right' → logprob: -11.629132270812988
    5. '():' → logprob: -12.754132270812988
    6. '   ' → logprob: -13.504132270812988
    7. '(
' → logprob: -13.629132270812988
    8. 'left' → logprob: -14.254132270812988
    9. '(line' → logprob: -14.254132270812988
    10. '(lhs' → logprob: -15.004132270812988

Token 211: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005823683459311724
    2. ' ,' → logprob: -5.255823612213135
    3. ',right' → logprob: -7.630823612213135
    4. '+' → logprob: -10.130824089050293
    5. ' +' → logprob: -11.130824089050293
    6. ',
' → logprob: -11.380824089050293
    7. '):' → logprob: -11.755824089050293
    8. '   ' → logprob: -11.755824089050293
    9. '+,' → logprob: -11.880824089050293
    10. '):
' → logprob: -13.005824089050293

Token 212: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.31328079104423523
    2. ' right' → logprob: -1.3132808208465576
    3. '   ' → logprob: -11.938281059265137
    4. ' ' → logprob: -12.063281059265137
    5. '	right' → logprob: -12.688281059265137
    6. '  ' → logprob: -14.438281059265137
    7. ',right' → logprob: -14.563281059265137
    8. '[right' → logprob: -14.688281059265137
    9. 'Right' → logprob: -15.313281059265137
    10. '(right' → logprob: -15.563281059265137

Token 213: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005511688068509102
    2. '):' → logprob: -5.88051176071167
    3. '):
' → logprob: -6.00551176071167
    4. ' ,' → logprob: -8.630511283874512
    5. ',
' → logprob: -10.255511283874512
    6. '   ' → logprob: -11.255511283874512
    7. ':' → logprob: -12.255511283874512
    8. ')' → logprob: -13.630511283874512
    9. ' ' → logprob: -13.755511283874512
    10. '):
' → logprob: -14.005511283874512

Token 214: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004343645414337516
    2. '	return' → logprob: -7.875434398651123
    3. '	left' → logprob: -10.250433921813965
    4. ' return' → logprob: -12.000433921813965
    5. 'return' → logprob: -12.375433921813965
    6. 'left' → logprob: -12.625433921813965
    7. '   ' → logprob: -13.125433921813965
    8. ' left' → logprob: -13.375433921813965
    9. '\t' → logprob: -15.000433921813965
    10. '
' → logprob: -15.250433921813965

Token 215: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020746368914842606
    2. 'return' (adapté à ' return') → logprob: -4.020746231079102
    3. 'left' → logprob: -6.520746231079102
    4. '	return' → logprob: -7.520746231079102
    5. ' return' → logprob: -7.645746231079102
    6. '	left' → logprob: -9.770746231079102
    7. ' left' → logprob: -10.145746231079102
    8. '   ' → logprob: -13.770746231079102
    9. '\t' → logprob: -14.270746231079102
    10. '    ' → logprob: -14.520746231079102

Token 216: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0015089125372469425
    2. ' left' → logprob: -6.501508712768555
    3. '(left' → logprob: -12.376508712768555
    4. '   ' → logprob: -13.001508712768555
    5. '	left' → logprob: -16.126508712768555
    6. ' (' → logprob: -18.001508712768555
    7. '[left' → logprob: -18.251508712768555
    8. ' ' → logprob: -18.626508712768555
    9. 'right' → logprob: -19.376508712768555
    10. ',left' → logprob: -19.501508712768555

Token 217: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5780723094940186
    2. '+' → logprob: -0.8280723094940186
    3. ',' → logprob: -6.203072547912598
    4. '+,' → logprob: -9.828072547912598
    5. ' ,' → logprob: -9.953072547912598
    6. ' ' → logprob: -13.078072547912598
    7. '1' → logprob: -13.953072547912598
    8. ' plus' → logprob: -13.953072547912598
    9. ' ' → logprob: -14.953072547912598
    10. ' +
' → logprob: -14.953072547912598

Token 218: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001330360071733594
    2. ' ' → logprob: -6.876330375671387
    3. '2' → logprob: -8.126330375671387
    4. '   ' → logprob: -13.876330375671387
    5. '
' → logprob: -15.313830375671387
    6. '3' → logprob: -15.438830375671387
    7. '  ' → logprob: -15.626330375671387
    8. '0' → logprob: -16.12632942199707
    9. '	' → logprob: -16.81382942199707
    10. ' ' → logprob: -17.12632942199707

Token 219: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005576779949478805
    2. ' ' → logprob: -7.625557899475098
    3. '2' → logprob: -9.625557899475098
    4. '   ' → logprob: -13.500557899475098
    5. '0' → logprob: -14.375557899475098
    6. '3' → logprob: -14.625557899475098
    7. '
' → logprob: -14.875557899475098
    8. '  ' → logprob: -15.375557899475098
    9. '	' → logprob: -15.813057899475098
    10. '4' → logprob: -15.813057899475098

Token 220: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009118752554059029
    2. ' ,' → logprob: -4.759118556976318
    3. ',right' → logprob: -7.634118556976318
    4. ' ' → logprob: -12.009119033813477
    5. ',
' → logprob: -12.384119033813477
    6. '   ' → logprob: -12.759119033813477
    7. ',left' → logprob: -13.884119033813477
    8. 'right' → logprob: -13.884119033813477
    9. '<|end|>' → logprob: -13.884119033813477
    10. ' right' → logprob: -14.259119033813477

Token 221: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.12693031132221222
    2. ' right' → logprob: -2.1269302368164062
    3. '	right' → logprob: -13.126930236816406
    4. 'left' → logprob: -16.251930236816406
    5. '(right' → logprob: -16.501930236816406
    6. ' ' → logprob: -16.876930236816406
    7. '[right' → logprob: -16.876930236816406
    8. '   ' → logprob: -17.501930236816406
    9. '.right' → logprob: -17.876930236816406
    10. '  ' → logprob: -18.251930236816406

Token 222: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3134382665157318
    2. '+' → logprob: -1.3134382963180542
    3. '<|end|>' → logprob: -8.813438415527344
    4. '1' → logprob: -11.438438415527344
    5. ' ' → logprob: -11.813438415527344
    6. ',' → logprob: -12.938438415527344
    7. '<|end|>' → logprob: -13.313438415527344
    8. '2' → logprob: -13.813438415527344
    9. ')' → logprob: -14.438438415527344
    10. '0' → logprob: -14.438438415527344

Token 223: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013515453319996595
    2. ' ' → logprob: -6.751351356506348
    3. '2' → logprob: -8.626351356506348
    4. '3' → logprob: -14.376351356506348
    5. '0' → logprob: -14.501351356506348
    6. '  ' → logprob: -15.626351356506348
    7. '   ' → logprob: -15.876351356506348
    8. '4' → logprob: -16.188852310180664
    9. '5' → logprob: -16.376352310180664
    10. '7' → logprob: -16.751352310180664

Token 224: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0036404537968337536
    2. '2' → logprob: -5.628640651702881
    3. '3' → logprob: -11.003640174865723
    4. ' ' → logprob: -11.003640174865723
    5. '4' → logprob: -13.316140174865723
    6. '0' → logprob: -13.316140174865723
    7. '5' → logprob: -13.941140174865723
    8. '10' → logprob: -14.628640174865723
    9. '-' → logprob: -15.441140174865723
    10. '   ' → logprob: -15.503640174865723

Token 225: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0008918096427805722
    2. '<|end|>' → logprob: -7.12589168548584
    3. '<|end|>' → logprob: -10.37589168548584
    4. '#' → logprob: -10.37589168548584
    5. '```' → logprob: -11.25089168548584
    6. ')' → logprob: -12.50089168548584
    7. ' def' → logprob: -13.25089168548584
    8. '...' → logprob: -13.75089168548584
    9. '.' → logprob: -13.87589168548584
    10. 'for' → logprob: -14.25089168548584

Token 226: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -7.941850526549388e-06
    2. 't' → logprob: -12.500007629394531
    3. 'for' → logprob: -13.500007629394531
    4. '#' → logprob: -13.625007629394531
    5. 'if' → logprob: -13.875007629394531
    6. ' def' → logprob: -15.750007629394531
    7. 'n' → logprob: -15.875007629394531
    8. '```' → logprob: -16.50000762939453
    9. 'de' → logprob: -17.37500762939453
    10. 'data' → logprob: -18.00000762939453

Token 227: ' print' (ID: 2123)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.6896067261695862
    2. 'def' → logprob: -0.8146067261695862
    3. ' main' → logprob: -2.9396066665649414
    4. 'main' → logprob: -6.314606666564941
    5. ' process' → logprob: -8.564606666564941
    6. 't' → logprob: -9.064606666564941
    7. ' solve' → logprob: -9.189606666564941
    8. 'process' → logprob: -9.939606666564941
    9. 'solve' → logprob: -10.189606666564941
    10. '
' → logprob: -10.439606666564941

Token 228: '_result' (ID: 11623)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5810293555259705
    2. '(mx' → logprob: -0.8310293555259705
    3. '(m' → logprob: -6.331029415130615
    4. '()' → logprob: -6.331029415130615
    5. '(max' → logprob: -6.581029415130615
    6. '(_' → logprob: -10.456028938293457
    7. '_' → logprob: -10.831028938293457
    8. 'mx' → logprob: -10.956028938293457
    9. '('' → logprob: -11.331028938293457
    10. '(
' → logprob: -11.706028938293457

Token 229: '(mx' (ID: 160663)
  Prédit: '(mx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mx' → logprob: -0.031671829521656036
    2. '(' → logprob: -3.5316717624664307
    3. '(m' → logprob: -6.28167200088501
    4. '():' → logprob: -10.156671524047852
    5. '(
' → logprob: -12.406671524047852
    6. ' (' → logprob: -13.656671524047852
    7. '(x' → logprob: -14.406671524047852
    8. '(ma' → logprob: -14.531671524047852
    9. '(mi' → logprob: -14.531671524047852
    10. '(mm' → logprob: -14.781671524047852

Token 230: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.17505742609500885
    2. '()' → logprob: -2.9250574111938477
    3. '():' → logprob: -2.9250574111938477
    4. '):
' → logprob: -3.6750574111938477
    5. ')' → logprob: -4.175057411193848
    6. '():
' → logprob: -4.425057411193848
    7. '())' → logprob: -8.425057411193848
    8. ' ):' → logprob: -8.800057411193848
    9. '()):
' → logprob: -9.050057411193848
    10. ':' → logprob: -10.550057411193848

Token 231: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025357098784297705
    2. 'print' → logprob: -6.002535820007324
    3. ' print' → logprob: -9.752535820007324
    4. '```' → logprob: -13.377535820007324
    5. '	print' → logprob: -15.752535820007324
    6. '(print' → logprob: -17.127534866333008
    7. '    
' → logprob: -17.877534866333008
    8. '   ' → logprob: -18.002534866333008
    9. '       ' → logprob: -19.127534866333008
    10. '
' → logprob: -19.502534866333008

Token 232: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -9.088346359931165e-07
    2. ' print' → logprob: -14.000000953674316
    3. '   ' → logprob: -18.25
    4. '```' → logprob: -20.5
    5. 'printf' → logprob: -24.625
    6. '	print' → logprob: -24.75
    7. 'pr' → logprob: -25.875
    8. '.print' → logprob: -26.25
    9. 'println' → logprob: -26.375
    10. '``' → logprob: -26.625

Token 233: '(mx' (ID: 160663)
  Prédit: '(mx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mx' → logprob: -0.00026205103495158255
    2. 'mx' → logprob: -8.250262260437012
    3. '(' → logprob: -14.250262260437012
    4. ' mx' → logprob: -16.000261306762695
    5. '(max' → logprob: -17.875261306762695
    6. '.mx' → logprob: -18.500261306762695
    7. '(x' → logprob: -20.125261306762695
    8. '(mc' → logprob: -20.375261306762695
    9. '(
' → logprob: -20.625261306762695
    10. '(nx' → logprob: -21.000261306762695

Token 234: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -15.625
    3. ')
' → logprob: -15.875
    4. '())' → logprob: -17.875
    5. '()' → logprob: -18.25
    6. '))' → logprob: -19.25
    7. '),' → logprob: -20.0
    8. '')' → logprob: -20.125
    9. '<|end|>' → logprob: -20.125
    10. ')}' → logprob: -20.25

Token 235: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3425219549390022e-05
    2. '#' → logprob: -12.00001335144043
    3. 'if' → logprob: -12.00001335144043
    4. 't' → logprob: -15.25001335144043
    5. '```' → logprob: -15.25001335144043
    6. 'for' → logprob: -15.37501335144043
    7. ' def' → logprob: -15.62501335144043
    8. '<|end|>' → logprob: -16.87501335144043
    9. 'ndef' → logprob: -18.12501335144043
    10. 'n' → logprob: -18.37501335144043

Token 236: ' main' (ID: 2758)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.5305496454238892
    2. ' main' → logprob: -1.5305496454238892
    3. 'def' → logprob: -1.6555496454238892
    4. 'main' → logprob: -6.2805495262146
    5. ' __' → logprob: -6.4055495262146
    6. ' ' → logprob: -8.155550003051758
    7. '__' → logprob: -9.280550003051758
    8. 'if' → logprob: -9.280550003051758
    9. '_' → logprob: -9.530550003051758
    10. ' if' → logprob: -10.280550003051758

Token 237: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -8.149051427608356e-05
    2. '(' → logprob: -9.625081062316895
    3. '()' → logprob: -11.500081062316895
    4. ' ():' → logprob: -12.625081062316895
    5. '():
' → logprob: -13.875081062316895
    6. ':' → logprob: -14.875081062316895
    7. '(:' → logprob: -15.375081062316895
    8. '_' → logprob: -15.500081062316895
    9. '()>' → logprob: -16.87508201599121
    10. '(":' → logprob: -17.00008201599121

Token 238: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -7.350386295001954e-05
    2. 'n' → logprob: -9.875073432922363
    3. ' n' → logprob: -11.000073432922363
    4. 'import' → logprob: -13.375073432922363
    5. ' sys' → logprob: -14.000073432922363
    6. '   ' → logprob: -14.125073432922363
    7. 't' → logprob: -14.250073432922363
    8. ' t' → logprob: -15.375073432922363
    9. '```' → logprob: -15.375073432922363
    10. '
' → logprob: -15.750073432922363

Token 239: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.0008521550917066634
    2. '   ' → logprob: -7.250852108001709
    3. ' n' → logprob: -8.875852584838867
    4. 't' → logprob: -13.125852584838867
    5. '
' → logprob: -15.375852584838867
    6. '	n' → logprob: -15.875852584838867
    7. '    
' → logprob: -17.625852584838867
    8. '```' → logprob: -18.250852584838867
    9. ' ' → logprob: -18.500852584838867
    10. '_n' → logprob: -18.625852584838867

Token 240: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0020096488296985626
    2. '=' → logprob: -6.252009868621826
    3. ',' → logprob: -9.627009391784668
    4. ' ' → logprob: -12.002009391784668
    5. ' =
' → logprob: -12.002009391784668
    6. '=int' → logprob: -14.002009391784668
    7. ' ,' → logprob: -14.377009391784668
    8. ')' → logprob: -14.752009391784668
    9. ' =)' → logprob: -15.127009391784668
    10. ' =
' → logprob: -15.627009391784668

Token 241: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.3352645933628082
    2. ' read' → logprob: -1.3352645635604858
    3. 'int' → logprob: -4.460264682769775
    4. ' int' → logprob: -4.585264682769775
    5. ' ' → logprob: -14.335264205932617
    6. '	read' → logprob: -14.335264205932617
    7. '   ' → logprob: -14.585264205932617
    8. '  ' → logprob: -15.210264205932617
    9. '(read' → logprob: -16.085264205932617
    10. 'len' → logprob: -16.585264205932617

Token 242: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.07233674824237823
    2. '_line' → logprob: -2.6973366737365723
    3. '_' → logprob: -6.072336673736572
    4. 'int' → logprob: -10.07233715057373
    5. '_in' → logprob: -11.57233715057373
    6. '```' → logprob: -11.57233715057373
    7. ' _' → logprob: -12.44733715057373
    8. '(' → logprob: -12.82233715057373
    9. '(_' → logprob: -12.94733715057373
    10. '()' → logprob: -13.19733715057373

Token 243: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -7.541112427134067e-05
    2. '()
' → logprob: -9.500075340270996
    3. ' ()' → logprob: -15.625075340270996
    4. '()\' → logprob: -16.625076293945312
    5. '()

' → logprob: -16.750076293945312
    6. '())' → logprob: -16.875076293945312
    7. ')' → logprob: -17.250076293945312
    8. '(' → logprob: -17.625076293945312
    9. '()`' → logprob: -18.125076293945312
    10. '(),' → logprob: -18.125076293945312

Token 244: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1439005434513092
    2. 't' → logprob: -2.0189006328582764
    3. ' t' → logprob: -6.768900394439697
    4. '	t' → logprob: -9.768900871276855
    5. '   ' → logprob: -11.768900871276855
    6. ' ' → logprob: -12.518900871276855
    7. 'if' → logprob: -13.018900871276855
    8. '`t' → logprob: -13.768900871276855
    9. '  ' → logprob: -13.893900871276855
    10. '```' → logprob: -14.018900871276855

Token 245: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.004131472669541836
    2. 'if' → logprob: -5.504131317138672
    3. '   ' → logprob: -10.004131317138672
    4. ' t' → logprob: -12.004131317138672
    5. ' if' → logprob: -14.504131317138672
    6. '```' → logprob: -15.129131317138672
    7. '	t' → logprob: -15.629131317138672
    8. '`t' → logprob: -15.629131317138672
    9. 'arr' → logprob: -15.879131317138672
    10. '    
' → logprob: -16.129131317138672

Token 246: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889220863580704
    2. '=' → logprob: -2.578892230987549
    3. ' ' → logprob: -13.82889175415039
    4. '[' → logprob: -14.57889175415039
    5. ',' → logprob: -15.20389175415039
    6. '	' → logprob: -15.45389175415039
    7. ' ' → logprob: -15.70389175415039
    8. ' =
' → logprob: -16.20389175415039
    9. '   ' → logprob: -16.32889175415039
    10. ' =[' → logprob: -16.45389175415039

Token 247: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.04007252678275108
    2. ' read' → logprob: -3.290072441101074
    3. 'list' → logprob: -6.290072441101074
    4. ' list' → logprob: -8.665072441101074
    5. '[' → logprob: -14.040072441101074
    6. ' [' → logprob: -14.790072441101074
    7. '[]' → logprob: -14.915072441101074
    8. '	read' → logprob: -15.540072441101074
    9. '(read' → logprob: -17.54007339477539
    10. '.read' → logprob: -17.66507339477539

Token 248: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -4.4849443838757e-06
    2. '_list' → logprob: -12.500004768371582
    3. '_' → logprob: -15.000004768371582
    4. 'line' → logprob: -15.625004768371582
    5. '_int' → logprob: -16.750003814697266
    6. '_LINE' → logprob: -17.375003814697266
    7. 'Line' → logprob: -17.875003814697266
    8. ' line' → logprob: -18.000003814697266
    9. 'int' → logprob: -18.500003814697266
    10. '(_' → logprob: -19.750003814697266

Token 249: '_as' (ID: 25206)
  Prédit: '_as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_as' → logprob: 0.0
    2. '()' → logprob: -19.25
    3. ' as' → logprob: -19.625
    4. '_' → logprob: -19.75
    5. '_list' → logprob: -19.875
    6. '_to' → logprob: -20.0
    7. '_As' → logprob: -20.375
    8. 'as' → logprob: -21.25
    9. '_or' → logprob: -21.25
    10. ' _' → logprob: -21.5

Token 250: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.5760248899459839
    2. 'int' → logprob: -0.8260248899459839
    3. '_list' → logprob: -10.701025009155273
    4. 'list' → logprob: -10.701025009155273
    5. ' int' → logprob: -10.951025009155273
    6. 'nt' → logprob: -11.701025009155273
    7. '[int' → logprob: -12.201025009155273
    8. '(int' → logprob: -12.576025009155273
    9. '=int' → logprob: -13.826025009155273
    10. 't' → logprob: -13.951025009155273

Token 251: '_list' (ID: 4162)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.04994015395641327
    2. '_list' → logprob: -3.0499401092529297
    3. 'list' → logprob: -6.67494010925293
    4. 'st' → logprob: -9.42494010925293
    5. '()' → logprob: -12.04994010925293
    6. 'List' → logprob: -13.92494010925293
    7. '_' → logprob: -14.42494010925293
    8. '()
' → logprob: -14.67494010925293
    9. 't' → logprob: -15.29994010925293
    10. ' list' → logprob: -15.29994010925293

Token 252: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00034595211036503315
    2. '()
' → logprob: -8.000346183776855
    3. '   ' → logprob: -11.750346183776855
    4. '(' → logprob: -14.375346183776855
    5. ' ()' → logprob: -14.750346183776855
    6. ')' → logprob: -15.125346183776855
    7. '())' → logprob: -15.125346183776855
    8. '()\' → logprob: -15.125346183776855
    9. '()

' → logprob: -15.625346183776855
    10. '()
' → logprob: -15.875346183776855

Token 253: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012368950992822647
    2. 'left' → logprob: -7.376236915588379
    3. ' left' → logprob: -7.501236915588379
    4. '    ' → logprob: -10.626236915588379
    5. ' if' → logprob: -11.251236915588379
    6. '  ' → logprob: -11.876236915588379
    7. 'if' → logprob: -12.626236915588379
    8. '	left' → logprob: -12.626236915588379
    9. '    
' → logprob: -13.251236915588379
    10. '   ' → logprob: -13.751236915588379

Token 254: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.03371370583772659
    2. 'if' → logprob: -3.4087138175964355
    3. ' left' → logprob: -10.158713340759277
    4. '   ' → logprob: -11.283713340759277
    5. 'l' → logprob: -12.408713340759277
    6. ' if' → logprob: -12.533713340759277
    7. 'n' → logprob: -13.033713340759277
    8. '#' → logprob: -14.033713340759277
    9. 'lef' → logprob: -14.033713340759277
    10. '	left' → logprob: -14.533713340759277

Token 255: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.30712890625
    2. ',' → logprob: -1.55712890625
    3. '=' → logprob: -2.93212890625
    4. ' ,' → logprob: -8.18212890625
    5. ' ' → logprob: -8.93212890625
    6. ')' → logprob: -12.43212890625
    7. '  ' → logprob: -14.43212890625
    8. ' =)' → logprob: -14.68212890625
    9. '=int' → logprob: -14.93212890625
    10. '   ' → logprob: -15.05712890625

Token 256: ' initial' (ID: 4871)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.0942041352391243
    2. ' initial' → logprob: -2.8442041873931885
    3. '0' → logprob: -3.4692041873931885
    4. ' ' → logprob: -7.469203948974609
    5. '	initial' → logprob: -12.09420394897461
    6. '   ' → logprob: -13.46920394897461
    7. '  ' → logprob: -13.59420394897461
    8. '(initial' → logprob: -13.71920394897461
    9. '    ' → logprob: -15.71920394897461
    10. 'int' → logprob: -15.84420394897461

Token 257: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.0004606975708156824
    2. 'left' → logprob: -8.000460624694824
    3. '_' → logprob: -9.125460624694824
    4. '(' → logprob: -12.000460624694824
    5. '()' → logprob: -12.125460624694824
    6. '_right' → logprob: -13.125460624694824
    7. 'Left' → logprob: -14.125460624694824
    8. '_le' → logprob: -14.625460624694824
    9. '(left' → logprob: -14.750460624694824
    10. '_LEFT' → logprob: -15.250460624694824

Token 258: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00026181264547631145
    2. '()
' → logprob: -8.250262260437012
    3. ' ()' → logprob: -15.000262260437012
    4. '()

' → logprob: -16.625261306762695
    5. '()
' → logprob: -17.000261306762695
    6. '()\' → logprob: -17.125261306762695
    7. '(' → logprob: -17.625261306762695
    8. '(),' → logprob: -18.000261306762695
    9. '()<' → logprob: -18.500261306762695
    10. '())' → logprob: -18.500261306762695

Token 259: '   ' (ID: 271)
  Prédit: '	right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	right' → logprob: -0.46702373027801514
    2. 'right' → logprob: -1.4670237302780151
    3. '   ' → logprob: -1.9670237302780151
    4. ' right' → logprob: -5.967023849487305
    5. ',right' → logprob: -10.592023849487305
    6. '[right' → logprob: -11.217023849487305
    7. ' ' → logprob: -11.592023849487305
    8. '.right' → logprob: -12.342023849487305
    9. '    ' → logprob: -12.342023849487305
    10. '	' → logprob: -12.717023849487305

Token 260: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.001504982472397387
    2. ' right' → logprob: -6.501504898071289
    3. '   ' → logprob: -13.251504898071289
    4. '	right' → logprob: -14.001504898071289
    5. ' ' → logprob: -18.37650489807129
    6. ',right' → logprob: -19.12650489807129
    7. 'Right' → logprob: -19.25150489807129
    8. '[right' → logprob: -19.62650489807129
    9. '_right' → logprob: -20.00150489807129
    10. '  ' → logprob: -20.00150489807129

Token 261: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.32511720061302185
    2. '=' → logprob: -2.3251171112060547
    3. ' +' → logprob: -2.4501171112060547
    4. ' ' → logprob: -3.2001171112060547
    5. '()' → logprob: -3.4501171112060547
    6. ')' → logprob: -4.950117111206055
    7. '+' → logprob: -4.950117111206055
    8. ' )' → logprob: -5.950117111206055
    9. ' +=' → logprob: -6.450117111206055
    10. '   ' → logprob: -6.700117111206055

Token 262: ' initial' (ID: 4871)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.011101936921477318
    2. ' initial' → logprob: -4.511101722717285
    3. '1' → logprob: -10.261101722717285
    4. '   ' → logprob: -11.386101722717285
    5. ' ' → logprob: -12.636101722717285
    6. '0' → logprob: -13.261101722717285
    7. '(initial' → logprob: -13.761101722717285
    8. 'left' → logprob: -14.511101722717285
    9. '	initial' → logprob: -14.511101722717285
    10. '  ' → logprob: -14.886101722717285

Token 263: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.03005269169807434
    2. 'right' → logprob: -3.530052661895752
    3. '()' → logprob: -8.53005313873291
    4. 'Right' → logprob: -9.78005313873291
    5. ')' → logprob: -10.90505313873291
    6. ' right' → logprob: -12.03005313873291
    7. '+' → logprob: -12.03005313873291
    8. '())' → logprob: -12.40505313873291
    9. '(' → logprob: -12.65505313873291
    10. '_' → logprob: -13.53005313873291

Token 264: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35349932312965393
    2. '
' → logprob: -1.2284992933273315
    3. '    
' → logprob: -5.853499412536621
    4. '<|end|>' → logprob: -6.353499412536621
    5. '<|end|>' → logprob: -9.478499412536621
    6. '  
' → logprob: -9.603499412536621
    7. 'while' → logprob: -9.853499412536621
    8. '```' → logprob: -9.978499412536621
    9. '	
' → logprob: -10.603499412536621
    10. '	while' → logprob: -10.603499412536621

Token 265: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014000488445162773
    2. 'current' → logprob: -4.639000415802002
    3. 'while' → logprob: -6.264000415802002
    4. '
' → logprob: -7.139000415802002
    5. ' current' → logprob: -7.389000415802002
    6. ' while' → logprob: -7.514000415802002
    7. '    
' → logprob: -8.76400089263916
    8. '	current' → logprob: -9.63900089263916
    9. '	while' → logprob: -10.13900089263916
    10. '  ' → logprob: -10.13900089263916

Token 266: ' mx' (ID: 28004)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0791667103767395
    2. 'mx' (adapté à ' mx') → logprob: -2.5791666507720947
    3. '   ' → logprob: -8.954166412353516
    4. ' current' → logprob: -9.329166412353516
    5. 'n' → logprob: -10.579166412353516
    6. ' mx' → logprob: -10.954166412353516
    7. 'while' → logprob: -11.329166412353516
    8. '	current' → logprob: -14.454166412353516
    9. 'curr' → logprob: -14.704166412353516
    10. 'cur' → logprob: -14.829166412353516

Token 267: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12700413167476654
    2. ' =' → logprob: -2.1270041465759277
    3. ',' → logprob: -9.50200366973877
    4. ' ' → logprob: -14.12700366973877
    5. ' ,' → logprob: -15.00200366973877
    6. '   ' → logprob: -16.377004623413086
    7. ')' → logprob: -16.877004623413086
    8. '=int' → logprob: -17.252004623413086
    9. '=

' → logprob: -17.252004623413086
    10. '  ' → logprob: -17.627004623413086

Token 268: ' initial' (ID: 4871)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.014218974858522415
    2. ' initial' → logprob: -4.264218807220459
    3. '0' → logprob: -9.889219284057617
    4. '	initial' → logprob: -13.389219284057617
    5. '(initial' → logprob: -13.389219284057617
    6. ' ' → logprob: -13.764219284057617
    7. '   ' → logprob: -14.639219284057617
    8. '  ' → logprob: -16.639219284057617
    9. '.initial' → logprob: -17.514219284057617
    10. '_initial' → logprob: -18.014219284057617

Token 269: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -7.839121826691553e-05
    2. 'mx' → logprob: -10.125078201293945
    3. '(mx' → logprob: -11.500078201293945
    4. '_' → logprob: -12.375078201293945
    5. '
' → logprob: -12.500078201293945
    6. '```' → logprob: -12.500078201293945
    7. '_
' → logprob: -12.750078201293945
    8. '_current' → logprob: -12.875078201293945
    9. 'current' → logprob: -13.000078201293945
    10. '(_' → logprob: -14.000078201293945

Token 270: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -6.704273118884885e-07
    2. 'ax' → logprob: -14.500000953674316
    3. 'mx' → logprob: -17.125
    4. '   ' → logprob: -17.25
    5. '```' → logprob: -17.5
    6. ' ' → logprob: -17.625
    7. '
' → logprob: -18.0
    8. ' x' → logprob: -18.5625
    9. 'xx' → logprob: -19.375
    10. 'm' → logprob: -19.375

Token 271: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.48326700925827026
    2. '   ' → logprob: -0.9832670092582703
    3. 'current' → logprob: -4.858266830444336
    4. '    
' → logprob: -6.983266830444336
    5. ' current' → logprob: -8.858266830444336
    6. ',current' → logprob: -8.983266830444336
    7. '(current' → logprob: -9.858266830444336
    8. '	current' → logprob: -10.358266830444336
    9. ',' → logprob: -10.733266830444336
    10. '  
' → logprob: -11.233266830444336

Token 272: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3145475387573242
    2. 'current' → logprob: -1.3145475387573242
    3. ' current' → logprob: -6.689547538757324
    4. '	current' → logprob: -10.189547538757324
    5. 'Current' → logprob: -14.064547538757324
    6. '_current' → logprob: -14.189547538757324
    7. ',current' → logprob: -14.564547538757324
    8. '[current' → logprob: -14.939547538757324
    9. ' ' → logprob: -15.314547538757324
    10. '(current' → logprob: -15.564547538757324

Token 273: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -5.6934557505883276e-05
    2. ' current' → logprob: -10.250057220458984
    3. '   ' → logprob: -10.750057220458984
    4. '	current' → logprob: -17.750057220458984
    5. 'while' → logprob: -18.125057220458984
    6. '.current' → logprob: -18.625057220458984
    7. 'Current' → logprob: -18.750057220458984
    8. ' ' → logprob: -19.375057220458984
    9. '
' → logprob: -19.500057220458984
    10. '(current' → logprob: -19.875057220458984

Token 274: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5305827260017395
    2. '=' → logprob: -0.9055827260017395
    3. ',' → logprob: -4.905582904815674
    4. ' ,' → logprob: -11.280582427978516
    5. '<|end|>' → logprob: -11.655582427978516
    6. ' ' → logprob: -13.280582427978516
    7. '<|end|>' → logprob: -14.030582427978516
    8. '  ' → logprob: -15.030582427978516
    9. '0' → logprob: -15.530582427978516
    10. '```' → logprob: -15.718082427978516

Token 275: ' initial' (ID: 4871)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.0006446453626267612
    2. '0' → logprob: -7.875644683837891
    3. ' initial' → logprob: -8.25064468383789
    4. '	initial' → logprob: -13.12564468383789
    5. ' ' → logprob: -14.12564468383789
    6. '(initial' → logprob: -14.75064468383789
    7. '   ' → logprob: -16.25064468383789
    8. '  ' → logprob: -17.00064468383789
    9. '<|end|>' → logprob: -17.25064468383789
    10. '.initial' → logprob: -17.50064468383789

Token 276: '_current' (ID: 23981)
  Prédit: '_current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_current' → logprob: -4.961759259458631e-06
    2. 'current' → logprob: -12.250004768371582
    3. '_' → logprob: -16.7500057220459
    4. 'Current' → logprob: -17.8750057220459
    5. '(current' → logprob: -18.1250057220459
    6. '_
' → logprob: -18.5000057220459
    7. '0' → logprob: -19.1250057220459
    8. '```' → logprob: -19.1250057220459
    9. ' current' → logprob: -19.5000057220459
    10. ' _' → logprob: -19.5000057220459

Token 277: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5932388305664062
    2. '
' → logprob: -0.8432388305664062
    3. '<|end|>' → logprob: -4.593238830566406
    4. '    
' → logprob: -5.218238830566406
    5. ' while' → logprob: -7.468238830566406
    6. 'while' → logprob: -7.468238830566406
    7. '<|end|>' → logprob: -8.468238830566406
    8. '  
' → logprob: -9.468238830566406
    9. '	while' → logprob: -9.843238830566406
    10. '```' → logprob: -10.093238830566406

Token 278: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022345207631587982
    2. 'while' → logprob: -3.8973453044891357
    3. ' while' → logprob: -6.397345066070557
    4. '	while' → logprob: -9.272345542907715
    5. '<|end|>' → logprob: -10.272345542907715
    6. '    
' → logprob: -12.647345542907715
    7. '```' → logprob: -13.022345542907715
    8. '
' → logprob: -14.272345542907715
    9. 'While' → logprob: -14.772345542907715
    10. '   ' → logprob: -15.522345542907715

Token 279: ' if' (ID: 538)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0003175889723934233
    2. '   ' → logprob: -8.750317573547363
    3. ' while' → logprob: -8.750317573547363
    4. '	while' → logprob: -14.250317573547363
    5. 'While' → logprob: -17.25031852722168
    6. '```' → logprob: -19.25031852722168
    7. '<|end|>' → logprob: -19.62531852722168
    8. '  ' → logprob: -19.87531852722168
    9. '
' → logprob: -20.12531852722168
    10. '    
' → logprob: -20.12531852722168

Token 280: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.038075003772974014
    2. 'is' → logprob: -3.2880749702453613
    3. '(is' → logprob: -10.41307544708252
    4. ' n' → logprob: -13.16307544708252
    5. 'n' → logprob: -14.41307544708252
    6. '   ' → logprob: -14.66307544708252
    7. ' (' → logprob: -14.78807544708252
    8. '(' → logprob: -15.41307544708252
    9. ' not' → logprob: -17.288074493408203
    10. '(n' → logprob: -17.288074493408203

Token 281: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -2.5776860184123507e-06
    2. 'single' → logprob: -13.50000286102295
    3. '(n' → logprob: -13.75000286102295
    4. '_s' → logprob: -17.875001907348633
    5. 'Single' → logprob: -18.000001907348633
    6. '_SINGLE' → logprob: -18.125001907348633
    7. '_(' → logprob: -18.250001907348633
    8. '_' → logprob: -18.750001907348633
    9. '_n' → logprob: -18.875001907348633
    10. ' single' → logprob: -19.000001907348633

Token 282: '_element' (ID: 21131)
  Prédit: '_element'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_element' → logprob: -6.988221684878226e-06
    2. '_elements' → logprob: -13.000006675720215
    3. '_' → logprob: -13.500006675720215
    4. '_elem' → logprob: -13.750006675720215
    5. ' _' → logprob: -13.875006675720215
    6. '_ele' → logprob: -14.750006675720215
    7. '(_' → logprob: -15.250006675720215
    8. '_e' → logprob: -15.375006675720215
    9. '_n' → logprob: -16.50000762939453
    10. '(n' → logprob: -16.62500762939453

Token 283: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.975612187583465e-05
    2. '(' → logprob: -11.000029563903809
    3. ' (' → logprob: -11.250029563903809
    4. '(
' → logprob: -17.500030517578125
    5. 'n' → logprob: -19.625030517578125
    6. '
' → logprob: -20.500030517578125
    7. ',' → logprob: -21.250030517578125
    8. ',n' → logprob: -21.250030517578125
    9. '(num' → logprob: -21.500030517578125
    10. ' ' → logprob: -21.500030517578125

Token 284: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07950598001480103
    2. '):
' → logprob: -2.5795059204101562
    3. '():' → logprob: -7.829505920410156
    4. '():
' → logprob: -9.454505920410156
    5. ' ):' → logprob: -9.704505920410156
    6. '()):
' → logprob: -10.079505920410156
    7. '()' → logprob: -10.829505920410156
    8. ')' → logprob: -11.704505920410156
    9. ' ):
' → logprob: -12.454505920410156
    10. ':' → logprob: -12.454505920410156

Token 285: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00034142236108891666
    2. 'print' → logprob: -9.125341415405273
    3. '   ' → logprob: -9.750341415405273
    4. ' print' → logprob: -10.000341415405273
    5. ':' → logprob: -10.125341415405273
    6. ':
' → logprob: -10.250341415405273
    7. ',' → logprob: -11.125341415405273
    8. '0' → logprob: -11.250341415405273
    9. '():
' → logprob: -12.000341415405273
    10. '()' → logprob: -12.250341415405273

Token 286: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00043221889063715935
    2. '   ' → logprob: -8.000432014465332
    3. ' print' → logprob: -9.500432014465332
    4. '       ' → logprob: -10.750432014465332
    5. '	print' → logprob: -15.125432014465332
    6. '
' → logprob: -16.37543296813965
    7. '```' → logprob: -17.12543296813965
    8. '(print' → logprob: -17.50043296813965
    9. ' ' → logprob: -18.00043296813965
    10. '  ' → logprob: -18.25043296813965

Token 287: '_zero' (ID: 53468)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13200616836547852
    2. '_zero' → logprob: -2.1320061683654785
    3. '0' → logprob: -5.3820061683654785
    4. 'zero' → logprob: -8.00700569152832
    5. '_' → logprob: -9.75700569152832
    6. 'Zero' → logprob: -10.00700569152832
    7. ' (' → logprob: -11.50700569152832
    8. ' zero' → logprob: -11.50700569152832
    9. '_ZERO' → logprob: -11.75700569152832
    10. '-zero' → logprob: -14.13200569152832

Token 288: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -0.00023512568441219628
    2. '()' → logprob: -8.375235557556152
    3. '_' → logprob: -12.750235557556152
    4. 'and' → logprob: -14.125235557556152
    5. '()
' → logprob: -15.000235557556152
    6. '_then' → logprob: -15.500235557556152
    7. ' and' → logprob: -16.375234603881836
    8. '_or' → logprob: -16.875234603881836
    9. '```' → logprob: -16.875234603881836
    10. '_AND' → logprob: -17.750234603881836

Token 289: '_exit' (ID: 41242)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.000133098365040496
    2. '_exit' → logprob: -9.000133514404297
    3. ' exit' → logprob: -11.875133514404297
    4. 'return' → logprob: -13.625133514404297
    5. 'xit' → logprob: -13.875133514404297
    6. 'Exit' → logprob: -15.250133514404297
    7. '	exit' → logprob: -16.250133514404297
    8. '
' → logprob: -16.625133514404297
    9. ' ' → logprob: -17.250133514404297
    10. '(exit' → logprob: -17.750133514404297

Token 290: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0009138475870713592
    2. '()
' → logprob: -7.000913619995117
    3. '()

' → logprob: -13.750913619995117
    4. '(' → logprob: -13.875913619995117
    5. '(
' → logprob: -16.375913619995117
    6. '()
' → logprob: -16.500913619995117
    7. '()`' → logprob: -16.625913619995117
    8. ' ()' → logprob: -17.000913619995117
    9. '()"' → logprob: -18.000913619995117
    10. '()\' → logprob: -18.250913619995117

Token 291: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22983983159065247
    2. 'while' → logprob: -1.72983980178833
    3. ' while' → logprob: -3.72983980178833
    4. '
' → logprob: -5.85483980178833
    5. '```' → logprob: -7.35483980178833
    6. '    
' → logprob: -7.60483980178833
    7. '	while' → logprob: -10.854840278625488
    8. 'While' → logprob: -13.604840278625488
    9. '  
' → logprob: -13.854840278625488
    10. ' 
' → logprob: -14.229840278625488

Token 292: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.025070922449231148
    2. '   ' → logprob: -4.275071144104004
    3. ' while' → logprob: -4.525071144104004
    4. '	while' → logprob: -11.275071144104004
    5. '```' → logprob: -15.025071144104004
    6. '  ' → logprob: -15.150071144104004
    7. '
' → logprob: -15.275071144104004
    8. '    
' → logprob: -15.275071144104004
    9. 'While' → logprob: -15.275071144104004
    10. '    ' → logprob: -16.900070190429688

Token 293: ' True' (ID: 6432)
  Prédit: ' condition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' condition' → logprob: -0.022157156839966774
    2. 'condition' → logprob: -4.022157192230225
    3. '(condition' → logprob: -5.522157192230225
    4. '_condition' → logprob: -14.022156715393066
    5. ' not' → logprob: -14.897156715393066
    6. '(' → logprob: -15.147156715393066
    7. 'Condition' → logprob: -15.272156715393066
    8. 'not' → logprob: -15.772156715393066
    9. '.condition' → logprob: -16.522157669067383
    10. 'left' → logprob: -18.897157669067383

Token 294: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009765983559191227
    2. ':
' → logprob: -7.2509765625
    3. ' :' → logprob: -8.3759765625
    4. '   ' → logprob: -11.3759765625
    5. '():' → logprob: -11.5009765625
    6. '):' → logprob: -12.5009765625
    7. '       ' → logprob: -12.5009765625
    8. ' :
' → logprob: -13.1259765625
    9. ' and' → logprob: -13.8759765625
    10. ',' → logprob: -13.8759765625

Token 295: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00327598350122571
    2. '    ' → logprob: -6.6282758712768555
    3. '   ' → logprob: -7.0032758712768555
    4. ' if' → logprob: -7.1282758712768555
    5. '      ' → logprob: -9.753275871276855
    6. ' condition' → logprob: -9.878275871276855
    7. '     ' → logprob: -10.253275871276855
    8. ' not' → logprob: -10.753275871276855
    9. '<|end|>' → logprob: -11.503275871276855
    10. 'if' → logprob: -11.753275871276855

Token 296: ' current' (ID: 2208)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.014514977112412453
    2. ' if' → logprob: -4.764514923095703
    3. '       ' → logprob: -5.139514923095703
    4. '   ' → logprob: -10.764514923095703
    5. '	if' → logprob: -14.139514923095703
    6. 'not' → logprob: -15.264514923095703
    7. '           ' → logprob: -16.264514923095703
    8. 'condition' → logprob: -16.514514923095703
    9. ' ' → logprob: -16.764514923095703
    10. '    ' → logprob: -17.014514923095703

Token 297: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5570885807392187e-05
    2. ',current' → logprob: -12.000015258789062
    3. ' ,' → logprob: -12.375015258789062
    4. ',right' → logprob: -12.875015258789062
    5. ',left' → logprob: -14.250015258789062
    6. '=' → logprob: -14.375015258789062
    7. ',m' → logprob: -14.750015258789062
    8. '‌,' → logprob: -16.125015258789062
    9. ',new' → logprob: -16.500015258789062
    10. ',next' → logprob: -16.625015258789062

Token 298: ' mx' (ID: 28004)
  Prédit: 'mx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mx' → logprob: -0.07899323105812073
    2. ' mx' → logprob: -2.578993320465088
    3. '<|end|>' → logprob: -9.57899284362793
    4. '(mx' → logprob: -10.45399284362793
    5. ' =' → logprob: -13.20399284362793
    6. ' ' → logprob: -13.45399284362793
    7. 'm' → logprob: -14.32899284362793
    8. '=' → logprob: -14.45399284362793
    9. '.mx' → logprob: -15.20399284362793
    10. '
' → logprob: -15.70399284362793

Token 299: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740903675556183
    2. '=' → logprob: -0.9740903377532959
    3. ',' → logprob: -11.349090576171875
    4. '=current' → logprob: -14.724090576171875
    5. '<|end|>' → logprob: -14.724090576171875
    6. ' ' → logprob: -15.599090576171875
    7. '   ' → logprob: -15.974090576171875
    8. ')' → logprob: -16.224090576171875
    9. '	' → logprob: -17.099090576171875
    10. '    ' → logprob: -17.099090576171875

Token 300: ' compare' (ID: 12221)
  Prédit: 'compare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compare' → logprob: -0.04859213903546333
    2. ' compare' → logprob: -3.0485920906066895
    3. '(compare' → logprob: -12.298592567443848
    4. '   ' → logprob: -16.04859161376953
    5. 'condition' → logprob: -16.67359161376953
    6. '_compare' → logprob: -16.79859161376953
    7. '.compare' → logprob: -17.17359161376953
    8. 'combine' → logprob: -17.79859161376953
    9. ' ' → logprob: -18.17359161376953
    10. '
' → logprob: -18.42359161376953

Token 301: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -7.290784560609609e-05
    2. '(t' → logprob: -9.750072479248047
    3. 'and' → logprob: -11.375072479248047
    4. '_' → logprob: -13.250072479248047
    5. 'And' → logprob: -15.000072479248047
    6. ' and' → logprob: -15.375072479248047
    7. 't' → logprob: -15.625072479248047
    8. '   ' → logprob: -16.000072479248047
    9. '_AND' → logprob: -16.125072479248047
    10. '_t' → logprob: -16.500072479248047

Token 302: '_update' (ID: 19528)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.004673156887292862
    2. '_update' → logprob: -5.379673004150391
    3. ' update' → logprob: -9.87967300415039
    4. 'updated' → logprob: -15.12967300415039
    5. 'current' → logprob: -15.37967300415039
    6. '(update' → logprob: -15.50467300415039
    7. '.update' → logprob: -15.87967300415039
    8. ' ' → logprob: -15.87967300415039
    9. 't' → logprob: -16.00467300415039
    10. 'Update' → logprob: -16.25467300415039

Token 303: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -7.703443770878948e-06
    2. '(' → logprob: -12.375007629394531
    3. 't' → logprob: -12.750007629394531
    4. ' (' → logprob: -14.875007629394531
    5. '   ' → logprob: -16.25000762939453
    6. '	t' → logprob: -18.12500762939453
    7. '(
' → logprob: -18.37500762939453
    8. ' t' → logprob: -19.25000762939453
    9. ' ' → logprob: -19.87500762939453
    10. '
' → logprob: -20.62500762939453

Token 304: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012797261297237128
    2. ',left' → logprob: -9.250127792358398
    3. ' ,' → logprob: -10.375127792358398
    4. '[left' → logprob: -15.625127792358398
    5. ',right' → logprob: -15.750127792358398
    6. ',
' → logprob: -16.6251277923584
    7. 'left' → logprob: -17.0001277923584
    8. ' left' → logprob: -17.2501277923584
    9. ',current' → logprob: -17.2501277923584
    10. ')' → logprob: -17.6251277923584

Token 305: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.00861729308962822
    2. ' left' → logprob: -4.758617401123047
    3. '   ' → logprob: -13.133617401123047
    4. '	left' → logprob: -15.008617401123047
    5. ' ' → logprob: -15.633617401123047
    6. '[left' → logprob: -16.508617401123047
    7. '
' → logprob: -16.758617401123047
    8. '  ' → logprob: -16.883617401123047
    9. '    ' → logprob: -17.383617401123047
    10. '_left' → logprob: -17.508617401123047

Token 306: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003044802288059145
    2. ' ,' → logprob: -8.125304222106934
    3. ',right' → logprob: -11.875304222106934
    4. '   ' → logprob: -13.750304222106934
    5. '+' → logprob: -15.375304222106934
    6. ',
' → logprob: -17.00030517578125
    7. ' ' → logprob: -18.00030517578125
    8. ',next' → logprob: -18.25030517578125
    9. '```' → logprob: -18.37530517578125
    10. ' +' → logprob: -18.50030517578125

Token 307: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0019288709154352546
    2. ' right' → logprob: -6.251928806304932
    3. '	right' → logprob: -16.626928329467773
    4. '   ' → logprob: -16.626928329467773
    5. '[right' → logprob: -17.376928329467773
    6. ' ' → logprob: -17.626928329467773
    7. '(right' → logprob: -18.126928329467773
    8. '
' → logprob: -18.251928329467773
    9. ',right' → logprob: -18.251928329467773
    10. 'Right' → logprob: -18.376928329467773

Token 308: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.968934758333489e-05
    2. ' ,' → logprob: -9.625069618225098
    3. ')' → logprob: -13.750069618225098
    4. '   ' → logprob: -13.875069618225098
    5. ',current' → logprob: -14.250069618225098
    6. ',
' → logprob: -14.375069618225098
    7. '```' → logprob: -16.625070571899414
    8. ' ' → logprob: -16.750070571899414
    9. '
' → logprob: -16.875070571899414
    10. '

' → logprob: -17.500070571899414

Token 309: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.02324547804892063
    2. ' current' → logprob: -3.7732455730438232
    3. '   ' → logprob: -18.648244857788086
    4. '	current' → logprob: -18.773244857788086
    5. 'Current' → logprob: -19.648244857788086
    6. '(current' → logprob: -19.898244857788086
    7. ' ' → logprob: -20.773244857788086
    8. '_current' → logprob: -20.898244857788086
    9. '.current' → logprob: -20.898244857788086
    10. 'urrent' → logprob: -21.023244857788086

Token 310: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.400689305039123e-05
    2. ' ,' → logprob: -9.750094413757324
    3. ',m' → logprob: -10.250094413757324
    4. ',
' → logprob: -15.750094413757324
    5. '   ' → logprob: -16.625093460083008
    6. ')' → logprob: -17.375093460083008
    7. '‌,' → logprob: -18.625093460083008
    8. ',my' → logprob: -19.500093460083008
    9. ',\
' → logprob: -19.750093460083008
    10. '_,' → logprob: -20.000093460083008

Token 311: ' mx' (ID: 28004)
  Prédit: 'mx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mx' → logprob: -0.011048408225178719
    2. ' mx' → logprob: -4.511048316955566
    3. '(mx' → logprob: -14.761048316955566
    4. '
' → logprob: -17.261049270629883
    5. '.mx' → logprob: -17.636049270629883
    6. ' ' → logprob: -17.761049270629883
    7. ')' → logprob: -18.261049270629883
    8. '   ' → logprob: -18.886049270629883
    9. 'm' → logprob: -19.011049270629883
    10. 'max' → logprob: -20.761049270629883

Token 312: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31631752848625183
    2. ')
' → logprob: -1.3163175582885742
    3. '       ' → logprob: -5.816317558288574
    4. '   ' → logprob: -9.941317558288574
    5. ')
' → logprob: -11.566317558288574
    6. ')

' → logprob: -11.816317558288574
    7. '
' → logprob: -12.816317558288574
    8. ' )' → logprob: -14.066317558288574
    9. ' ' → logprob: -14.316317558288574
    10. ')\
' → logprob: -14.441317558288574

Token 313: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020951840560883284
    2. '   ' → logprob: -7.0020952224731445
    3. '
' → logprob: -7.7520952224731445
    4. '        
' → logprob: -8.002095222473145
    5. '<|end|>' → logprob: -8.752095222473145
    6. ' if' → logprob: -9.627095222473145
    7. '    ' → logprob: -10.252095222473145
    8. ' ' → logprob: -10.377095222473145
    9. '    
' → logprob: -10.752095222473145
    10. '  
' → logprob: -11.002095222473145

Token 314: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.31311753392219543
    2. ' left' → logprob: -1.688117504119873
    3. 'if' → logprob: -3.063117504119873
    4. '       ' → logprob: -3.938117504119873
    5. ' if' → logprob: -4.063117504119873
    6. '   ' → logprob: -7.688117504119873
    7. '	left' → logprob: -10.688117980957031
    8. '[left' → logprob: -10.813117980957031
    9. '(left' → logprob: -11.188117980957031
    10. ' ' → logprob: -11.438117980957031

Token 315: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.191489642835222e-05
    2. ',right' → logprob: -10.250041961669922
    3. ' ,' → logprob: -12.750041961669922
    4. '=' → logprob: -12.875041961669922
    5. '+=' → logprob: -14.750041961669922
    6. ' +=' → logprob: -15.250041961669922
    7. '+' → logprob: -16.625041961669922
    8. '‌,' → logprob: -17.250041961669922
    9. '+,' → logprob: -17.375041961669922
    10. ',r' → logprob: -17.625041961669922

Token 316: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.20151400566101074
    2. 'right' → logprob: -1.7015140056610107
    3. '<|end|>' → logprob: -9.32651424407959
    4. '	right' → logprob: -11.82651424407959
    5. '[right' → logprob: -13.45151424407959
    6. '(right' → logprob: -13.70151424407959
    7. ' ' → logprob: -14.57651424407959
    8. ',right' → logprob: -14.70151424407959
    9. '.right' → logprob: -15.57651424407959
    10. ' rights' → logprob: -15.70151424407959

Token 317: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.575940728187561
    2. ' =' → logprob: -0.825940728187561
    3. '<|end|>' → logprob: -14.07594108581543
    4. ',' → logprob: -15.45094108581543
    5. '＝' → logprob: -16.82594108581543
    6. ')' → logprob: -16.95094108581543
    7. ' ' → logprob: -17.07594108581543
    8. ')=' → logprob: -17.57594108581543
    9. ' =)' → logprob: -17.82594108581543
    10. '<|end|>' → logprob: -17.82594108581543

Token 318: ' increment' (ID: 24032)
  Prédit: 'increment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'increment' → logprob: -0.1269284337759018
    2. ' increment' → logprob: -2.1269283294677734
    3. ' incremental' → logprob: -15.251928329467773
    4. 'Increment' → logprob: -16.126928329467773
    5. '_increment' → logprob: -17.001928329467773
    6. '.increment' → logprob: -17.376928329467773
    7. '   ' → logprob: -17.501928329467773
    8. 'increments' → logprob: -17.751928329467773
    9. 'in' → logprob: -18.501928329467773
    10. 'crement' → logprob: -19.376928329467773

Token 319: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.002487787976861
    2. 'indices' → logprob: -6.002487659454346
    3. 'left' → logprob: -12.127488136291504
    4. '(indices' → logprob: -12.627488136291504
    5. '(left' → logprob: -13.502488136291504
    6. '"indices' → logprob: -14.002488136291504
    7. 'right' → logprob: -14.502488136291504
    8. 'Indices' → logprob: -14.627488136291504
    9. '```' → logprob: -17.002487182617188
    10. ' indices' → logprob: -17.002487182617188

Token 320: '(left' (ID: 32958)
  Prédit: '(left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -2.176947600673884e-05
    2. 'left' → logprob: -10.750021934509277
    3. '(' → logprob: -15.500021934509277
    4. ' left' → logprob: -17.37502098083496
    5. ',left' → logprob: -17.75002098083496
    6. '(
' → logprob: -18.12502098083496
    7. '[left' → logprob: -18.37502098083496
    8. '	left' → logprob: -19.25002098083496
    9. '(right' → logprob: -19.87502098083496
    10. ':left' → logprob: -20.25002098083496

Token 321: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.392824874026701e-05
    2. ',right' → logprob: -10.87503433227539
    3. ' ,' → logprob: -11.12503433227539
    4. ',
' → logprob: -16.37503433227539
    5. '   ' → logprob: -17.87503433227539
    6. 'right' → logprob: -18.12503433227539
    7. '‌,' → logprob: -18.25003433227539
    8. ',user' → logprob: -19.00003433227539
    9. ',current' → logprob: -19.00003433227539
    10. ')' → logprob: -19.37503433227539

Token 322: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.004078758880496025
    2. ' right' → logprob: -5.5040788650512695
    3. '	right' → logprob: -15.87907886505127
    4. '[right' → logprob: -16.754077911376953
    5. '(right' → logprob: -17.004077911376953
    6. ',right' → logprob: -17.004077911376953
    7. ' ' → logprob: -18.254077911376953
    8. '   ' → logprob: -19.004077911376953
    9. '.right' → logprob: -19.254077911376953
    10. ')' → logprob: -19.254077911376953

Token 323: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.12696222960948944
    2. ')' → logprob: -2.126962184906006
    3. ')
' → logprob: -10.876962661743164
    4. ')

' → logprob: -12.001962661743164
    5. '       ' → logprob: -12.126962661743164
    6. '   ' → logprob: -13.501962661743164
    7. '<|end|>' → logprob: -13.626962661743164
    8. ' )
' → logprob: -15.376962661743164
    9. ')return' → logprob: -15.626962661743164
    10. ')\
' → logprob: -15.751962661743164

Token 324: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004236435634084046
    2. '<|end|>' → logprob: -8.500423431396484
    3. '   ' → logprob: -8.625423431396484
    4. ' if' → logprob: -10.375423431396484
    5. 'if' → logprob: -12.375423431396484
    6. '```' → logprob: -13.000423431396484
    7. '           ' → logprob: -14.500423431396484
    8. '
' → logprob: -14.750423431396484
    9. ' ' → logprob: -14.750423431396484
    10. '<|end|>' → logprob: -14.750423431396484

Token 325: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.006878172513097525
    2. ' if' → logprob: -5.00687837600708
    3. '       ' → logprob: -8.756877899169922
    4. '   ' → logprob: -12.131877899169922
    5. '	if' → logprob: -16.131877899169922
    6. ' ' → logprob: -18.006877899169922
    7. '
' → logprob: -18.381877899169922
    8. '    ' → logprob: -19.256877899169922
    9. '  ' → logprob: -19.506877899169922
    10. 'If' → logprob: -19.506877899169922

Token 326: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.048614732921123505
    2. ' not' → logprob: -3.048614740371704
    3. 'condition' → logprob: -10.798614501953125
    4. '(not' → logprob: -12.423614501953125
    5. '	not' → logprob: -13.923614501953125
    6. ' condition' → logprob: -14.298614501953125
    7. '   ' → logprob: -14.423614501953125
    8. 'right' → logprob: -14.923614501953125
    9. ' ' → logprob: -15.798614501953125
    10. '!' → logprob: -16.173614501953125

Token 327: ' condition' (ID: 7060)
  Prédit: 'condition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'condition' → logprob: -0.03819410875439644
    2. ' condition' → logprob: -3.288194179534912
    3. '(condition' → logprob: -8.788193702697754
    4. '(' → logprob: -17.28819465637207
    5. '_condition' → logprob: -18.66319465637207
    6. '.condition' → logprob: -19.16319465637207
    7. 'Condition' → logprob: -19.28819465637207
    8. ' (' → logprob: -20.16319465637207
    9. '   ' → logprob: -20.91319465637207
    10. ' ' → logprob: -20.91319465637207

Token 328: '_should' (ID: 92933)
  Prédit: '_should'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_should' → logprob: 0.0
    2. '_Should' → logprob: -17.5
    3. 'should' → logprob: -17.625
    4. '(' → logprob: -19.125
    5. '_' → logprob: -19.375
    6. '_(' → logprob: -20.25
    7. ' _' → logprob: -20.625
    8. '(_' → logprob: -20.875
    9. 'Should' → logprob: -20.875
    10. ' (' → logprob: -20.875

Token 329: '_continue' (ID: 188911)
  Prédit: '_continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_continue' → logprob: -0.061969365924596786
    2. 'continue' → logprob: -2.81196928024292
    3. 'Continue' → logprob: -13.561969757080078
    4. ' continue' → logprob: -14.686969757080078
    5. '
' → logprob: -18.061969757080078
    6. '继续' → logprob: -18.811969757080078
    7. ' Continue' → logprob: -18.811969757080078
    8. '	continue' → logprob: -19.061969757080078
    9. 'continu' → logprob: -19.811969757080078
    10. 'contin' → logprob: -20.436969757080078

Token 330: '(left' (ID: 32958)
  Prédit: '(left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -14.625000953674316
    3. 'left' → logprob: -16.25
    4. ' (' → logprob: -18.25
    5. ',left' → logprob: -18.375
    6. '(
' → logprob: -18.75
    7. '[left' → logprob: -19.0
    8. ' left' → logprob: -19.375
    9. '(right' → logprob: -19.375
    10. ':left' → logprob: -19.75

Token 331: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021105022460687906
    2. ',right' → logprob: -8.875210762023926
    3. ' ,' → logprob: -9.625210762023926
    4. 'right' → logprob: -13.375210762023926
    5. ',n' → logprob: -13.500210762023926
    6. ',
' → logprob: -13.750210762023926
    7. ')' → logprob: -14.875210762023926
    8. '),' → logprob: -15.875210762023926
    9. '(right' → logprob: -16.000211715698242
    10. '```' → logprob: -16.375211715698242

Token 332: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0067161982879042625
    2. ' right' → logprob: -5.006716251373291
    3. 'n' → logprob: -14.506715774536133
    4. '   ' → logprob: -16.631715774536133
    5. '	right' → logprob: -16.881715774536133
    6. '
' → logprob: -16.881715774536133
    7. ',right' → logprob: -17.256715774536133
    8. '(right' → logprob: -17.756715774536133
    9. '[right' → logprob: -18.131715774536133
    10. ' ' → logprob: -18.131715774536133

Token 333: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023406077176332474
    2. ',n' → logprob: -3.7734060287475586
    3. ' ,' → logprob: -9.148406028747559
    4. 'n' → logprob: -10.523406028747559
    5. '(n' → logprob: -10.773406028747559
    6. ',
' → logprob: -12.273406028747559
    7. '```' → logprob: -14.898406028747559
    8. '<n' → logprob: -15.023406028747559
    9. '   ' → logprob: -15.148406028747559
    10. '(' → logprob: -15.773406028747559

Token 334: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0001589618914294988
    2. ' n' → logprob: -8.75015926361084
    3. '   ' → logprob: -15.00015926361084
    4. '
' → logprob: -16.250158309936523
    5. '	n' → logprob: -17.125158309936523
    6. ')n' → logprob: -17.125158309936523
    7. ')' → logprob: -17.500158309936523
    8. '```' → logprob: -18.750158309936523
    9. '    ' → logprob: -19.500158309936523
    10. '       ' → logprob: -19.500158309936523

Token 335: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01420522853732109
    2. '):
' → logprob: -4.264205455780029
    3. ')' → logprob: -10.264204978942871
    4. ':' → logprob: -12.139204978942871
    5. '):
' → logprob: -14.639204978942871
    6. '):

' → logprob: -15.514204978942871
    7. '():' → logprob: -15.514204978942871
    8. '   ' → logprob: -15.514204978942871
    9. ' ):' → logprob: -15.764204978942871
    10. ':
' → logprob: -16.514205932617188

Token 336: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000516813131980598
    2. '       ' → logprob: -7.625516891479492
    3. 'break' → logprob: -11.125516891479492
    4. ' break' → logprob: -11.500516891479492
    5. '
' → logprob: -14.125516891479492
    6. '		' → logprob: -14.375516891479492
    7. '   ' → logprob: -14.375516891479492
    8. '	       ' → logprob: -14.500516891479492
    9. '          ' → logprob: -14.500516891479492
    10. '               ' → logprob: -14.875516891479492

Token 337: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10859672725200653
    2. 'break' (adapté à ' break') → logprob: -2.8585968017578125
    3. '           ' → logprob: -3.1085968017578125
    4. ' break' → logprob: -7.2335968017578125
    5. '   ' → logprob: -9.108596801757812
    6. '
' → logprob: -10.608596801757812
    7. '	break' → logprob: -10.733596801757812
    8. '        
' → logprob: -12.108596801757812
    9. '               ' → logprob: -12.483596801757812
    10. '```' → logprob: -13.483596801757812

Token 338: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4012984335422516
    2. '
' → logprob: -1.1512984037399292
    3. 'print' → logprob: -4.276298522949219
    4. '```' → logprob: -8.401298522949219
    5. '    
' → logprob: -8.776298522949219
    6. ' print' → logprob: -10.276298522949219
    7. '
' → logprob: -12.151298522949219
    8. '  
' → logprob: -12.526298522949219
    9. '(print' → logprob: -12.901298522949219
    10. '        
' → logprob: -13.651298522949219

Token 339: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10038803517818451
    2. 'print' → logprob: -2.3503880500793457
    3. ' print' → logprob: -9.350387573242188
    4. '
' → logprob: -9.475387573242188
    5. '```' → logprob: -11.225387573242188
    6. 'main' → logprob: -13.225387573242188
    7. '    
' → logprob: -13.600387573242188
    8. '	print' → logprob: -14.100387573242188
    9. '(print' → logprob: -14.850387573242188
    10. '.print' → logprob: -17.225387573242188

Token 340: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0005985465249978006
    2. '   ' → logprob: -7.500598430633545
    3. ' print' → logprob: -10.000598907470703
    4. '```' → logprob: -16.250598907470703
    5. '  ' → logprob: -17.250598907470703
    6. ' ' → logprob: -17.625598907470703
    7. '
' → logprob: -18.750598907470703
    8. '	print' → logprob: -19.000598907470703
    9. '(print' → logprob: -20.625598907470703
    10. '``' → logprob: -20.875598907470703

Token 341: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.00014299227041192353
    2. '(mx' → logprob: -9.125143051147461
    3. '(' → logprob: -11.000143051147461
    4. 'result' → logprob: -11.375143051147461
    5. '(result' → logprob: -13.625143051147461
    6. '(_' → logprob: -13.625143051147461
    7. 'Result' → logprob: -13.750143051147461
    8. '(m' → logprob: -14.125143051147461
    9. '_' → logprob: -14.125143051147461
    10. '_results' → logprob: -14.250143051147461

Token 342: '(mx' (ID: 160663)
  Prédit: '(mx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mx' → logprob: -3.8889261304575484e-06
    2. '(' → logprob: -12.625003814697266
    3. '(mc' → logprob: -15.250003814697266
    4. '(mi' → logprob: -16.375003814697266
    5. '(max' → logprob: -16.500003814697266
    6. '(nx' → logprob: -17.000003814697266
    7. '(ms' → logprob: -17.875003814697266
    8. ' (' → logprob: -18.000003814697266
    9. '(ma' → logprob: -18.125003814697266
    10. '(m' → logprob: -18.500003814697266

Token 343: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.988221684878226e-06
    2. ')
' → logprob: -12.000006675720215
    3. '()' → logprob: -15.000006675720215
    4. '())' → logprob: -15.125006675720215
    5. ' )' → logprob: -15.750006675720215
    6. ')`' → logprob: -17.87500762939453
    7. ')

' → logprob: -19.37500762939453
    8. '`)' → logprob: -19.62500762939453
    9. '))' → logprob: -19.62500762939453
    10. '(' → logprob: -20.00000762939453

Token 344: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.9504606825648807e-05
    2. ' if' → logprob: -11.250019073486328
    3. '
' → logprob: -13.125019073486328
    4. 'main' → logprob: -13.250019073486328
    5. '```' → logprob: -13.250019073486328
    6. '<|end|>' → logprob: -15.000019073486328
    7. '#' → logprob: -15.250019073486328
    8. '\' → logprob: -17.000019073486328
    9. 'print' → logprob: -17.000019073486328
    10. '__' → logprob: -17.500019073486328

Token 345: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 343
Tokens correctement prédits (1ère position, stricte): 135
Tokens correctement prédits (1ère position, avec adaptation): 149
Tokens correctement prédits (top 10): 288
Précision stricte (1ère position): 39.36%
Précision adaptée (1ère position): 43.44%
Précision (top 10): 83.97%
================================================================================
