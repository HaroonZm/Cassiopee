================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:19:13
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from itertools import compress, repeat, starmap

N, M = map(int, input().split())
A = list(map(int, input().split()))
S = reduce(lambda x, y: x + y, A)
criteria = list(starmap(lambda a, s, m: a*4*m >= s, zip(A, repeat(S), repeat(M))))
c = sum(list(compress(repeat(1, N), criteria)))
print(["No", "Yes"][(lambda x, y: x >= y)(c, M)])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.2957019507884979
    2. 'partial' → logprob: -1.5457019805908203
    3. 'reduce' → logprob: -3.2957019805908203
    4. 'l' → logprob: -5.92070198059082
    5. ' wraps' → logprob: -6.29570198059082
    6. 'cached' → logprob: -7.29570198059082
    7. 'cache' → logprob: -8.29570198059082
    8. 'cmp' → logprob: -8.79570198059082
    9. '`' → logprob: -9.67070198059082
    10. '```' → logprob: -9.79570198059082

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.019195254892110825
    2. '(lambda' → logprob: -4.394195079803467
    3. '.' → logprob: -5.144195079803467
    4. ',' → logprob: -8.019195556640625
    5. ' (' → logprob: -8.519195556640625
    6. '```' → logprob: -9.519195556640625
    7. '(
' → logprob: -10.144195556640625
    8. '\(' → logprob: -10.269195556640625
    9. '\' → logprob: -10.394195556640625
    10. 'lambda' → logprob: -11.019195556640625

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.028644466772675514
    2. '\' → logprob: -4.153644561767578
    3. 'def' → logprob: -5.028644561767578
    4. '(
' → logprob: -6.028644561767578
    5. '(lambda' → logprob: -6.653644561767578
    6. ',' → logprob: -7.653644561767578
    7. '\n' → logprob: -7.778644561767578
    8. '```' → logprob: -7.903644561767578
    9. '\(' → logprob: -8.403644561767578
    10. '`' → logprob: -9.278644561767578

Token 6: ' itertools' (ID: 103178)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.16519209742546082
    2. ' itertools' → logprob: -2.290192127227783
    3. ' collections' → logprob: -3.915192127227783
    4. ' math' → logprob: -4.040192127227783
    5. 'operator' → logprob: -4.415192127227783
    6. 'collections' → logprob: -7.665192127227783
    7. ' typing' → logprob: -8.040191650390625
    8. 'math' → logprob: -8.165191650390625
    9. ' os' → logprob: -8.665191650390625
    10. ' ' → logprob: -9.665191650390625

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.20238447189331055
    2. 'import' → logprob: -1.7023844718933105
    3. '.' → logprob: -7.3273844718933105
    4. '.import' → logprob: -8.827384948730469
    5. ' .' → logprob: -9.952384948730469
    6. '	import' → logprob: -10.077384948730469
    7. ' ' → logprob: -10.202384948730469
    8. '_import' → logprob: -11.452384948730469
    9. '.groupby' → logprob: -12.077384948730469
    10. '.im' → logprob: -12.327384948730469

Token 8: ' compress' (ID: 34112)
  Prédit: ' group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' group' → logprob: -0.7443960905075073
    2. 'acc' → logprob: -2.494396209716797
    3. ' cycle' → logprob: -2.619396209716797
    4. 'group' → logprob: -2.619396209716797
    5. ' accumulate' → logprob: -2.619396209716797
    6. 'count' → logprob: -2.869396209716797
    7. 'import' → logprob: -3.369396209716797
    8. ' chain' → logprob: -3.744396209716797
    9. 'cycle' → logprob: -3.869396209716797
    10. 'com' → logprob: -3.869396209716797

Token 9: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06771805882453918
    2. '(
' → logprob: -3.317718029022217
    3. ',' → logprob: -4.567718029022217
    4. '\n' → logprob: -4.692718029022217
    5. '\' → logprob: -6.192718029022217
    6. '#' → logprob: -6.442718029022217
    7. 'def' → logprob: -6.692718029022217
    8. '[' → logprob: -7.067718029022217
    9. ')' → logprob: -7.567718029022217
    10. '```' → logprob: -7.692718029022217

Token 10: ' repeat' (ID: 22962)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'group' → logprob: -1.0489228963851929
    2. 'filter' → logprob: -1.6739228963851929
    3. 'cycle' → logprob: -2.4239230155944824
    4. 'count' → logprob: -2.5489230155944824
    5. 'drop' → logprob: -3.0489230155944824
    6. ' group' → logprob: -3.0489230155944824
    7. 'chain' → logprob: -3.2989230155944824
    8. 'is' → logprob: -3.5489230155944824
    9. 'product' → logprob: -3.5489230155944824
    10. 'tee' → logprob: -3.7989230155944824

Token 11: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4956554174423218
    2. 'def' → logprob: -1.9956554174423218
    3. '\n' → logprob: -2.7456555366516113
    4. ',' → logprob: -2.8706555366516113
    5. '\' → logprob: -3.3706555366516113
    6. '(
' → logprob: -3.7456555366516113
    7. '.' → logprob: -4.245655536651611
    8. '#' → logprob: -4.495655536651611
    9. ')' → logprob: -4.620655536651611
    10. '`' → logprob: -4.995655536651611

Token 12: ' st' (ID: 420)
  Prédit: 'filter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'filter' → logprob: -1.9418599605560303
    2. 'cycle' → logprob: -2.0668599605560303
    3. 'count' → logprob: -2.1918599605560303
    4. 'group' → logprob: -2.1918599605560303
    5. 'chain' → logprob: -2.3168599605560303
    6. 'acc' → logprob: -2.6918599605560303
    7. 'product' → logprob: -2.6918599605560303
    8. 'tee' → logprob: -3.3168599605560303
    9. 'take' → logprob: -3.5668599605560303
    10. ' cycle' → logprob: -3.6918599605560303

Token 13: 'arm' (ID: 2218)
  Prédit: 'arm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arm' → logprob: -0.545423150062561
    2. 'ar' → logprob: -0.920423150062561
    3. 'r' → logprob: -4.1704230308532715
    4. 'ep' → logprob: -6.5454230308532715
    5. 'ring' → logprob: -6.9204230308532715
    6. 'art' → logprob: -7.1704230308532715
    7. 'arp' → logprob: -7.2954230308532715
    8. 'arl' → logprob: -7.7954230308532715
    9. 'rat' → logprob: -8.29542350769043
    10. 'range' → logprob: -8.42042350769043

Token 14: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -1.27099974633893e-05
    2. 'atch' → logprob: -11.625012397766113
    3. 'ethod' → logprob: -13.000012397766113
    4. 'apse' → logprob: -14.125012397766113
    5. 'up' → logprob: -15.125012397766113
    6. 'e' → logprob: -15.250012397766113
    7. 'app' → logprob: -16.62501335144043
    8. 'a' → logprob: -16.87501335144043
    9. 'apping' → logprob: -16.87501335144043
    10. 'aps' → logprob: -17.25001335144043

Token 15: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16747431457042694
    2. '(
' → logprob: -3.2924742698669434
    3. 'def' → logprob: -3.5424742698669434
    4. '\' → logprob: -3.6674742698669434
    5. '\n' → logprob: -3.6674742698669434
    6. ',' → logprob: -4.292474269866943
    7. '.' → logprob: -5.917474269866943
    8. '[' → logprob: -5.917474269866943
    9. '#' → logprob: -5.917474269866943
    10. '_' → logprob: -6.292474269866943

Token 16: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9199615120887756
    2. '(' → logprob: -1.4199614524841309
    3. 'd' → logprob: -2.169961452484131
    4. '\' → logprob: -2.919961452484131
    5. ',' → logprob: -3.294961452484131
    6. '\n' → logprob: -3.669961452484131
    7. '#' → logprob: -3.794961452484131
    8. '```' → logprob: -3.919961452484131
    9. '[' → logprob: -4.044961452484131
    10. '`' → logprob: -4.169961452484131

Token 17: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.021388467401266098
    2. '=' → logprob: -4.146388530731201
    3. ' =' → logprob: -5.646388530731201
    4. ',' → logprob: -7.021388530731201
    5. 'UM' → logprob: -8.896388053894043
    6. 'um' → logprob: -8.896388053894043
    7. ')' → logprob: -9.021388053894043
    8. 'umber' → logprob: -9.146388053894043
    9. ' _' → logprob: -10.271388053894043
    10. '_=' → logprob: -10.396388053894043

Token 18: ' M' (ID: 391)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.6717168688774109
    2. ' M' → logprob: -1.9217169284820557
    3. ' =' → logprob: -2.2967169284820557
    4. ' ' → logprob: -2.5467169284820557
    5. ' n' → logprob: -3.9217169284820557
    6. 'K' → logprob: -4.234216690063477
    7. '=' → logprob: -4.671716690063477
    8. '<|end|>' → logprob: -4.796716690063477
    9. 'M' → logprob: -5.109216690063477
    10. ' T' → logprob: -5.171716690063477

Token 19: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011073531582951546
    2. '=' → logprob: -4.511073589324951
    3. ',' → logprob: -11.136073112487793
    4. ' ' → logprob: -12.261073112487793
    5. ' =
' → logprob: -12.761073112487793
    6. ')' → logprob: -13.636073112487793
    7. '<|end|>' → logprob: -13.886073112487793
    8. ' ,' → logprob: -14.886073112487793
    9. ' =)' → logprob: -15.386073112487793
    10. '  ' → logprob: -15.886073112487793

Token 20: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06337477266788483
    2. ' map' → logprob: -3.5633747577667236
    3. '10' → logprob: -4.438374996185303
    4. '0' → logprob: -4.563374996185303
    5. 'map' → logprob: -4.688374996185303
    6. '100' → logprob: -7.688374996185303
    7. '1' → logprob: -8.563374519348145
    8. '20' → logprob: -8.563374519348145
    9. '5' → logprob: -8.688374519348145
    10. '50' → logprob: -8.813374519348145

Token 21: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0956827849149704
    2. '(' → logprob: -2.4706828594207764
    3. '(str' → logprob: -5.470682621002197
    4. '(lambda' → logprob: -6.470682621002197
    5. 'int' → logprob: -7.595682621002197
    6. '(input' → logprob: -7.970682621002197
    7. 'input' → logprob: -10.720683097839355
    8. '(tuple' → logprob: -10.970683097839355
    9. '<int' → logprob: -11.470683097839355
    10. 'str' → logprob: -11.595683097839355

Token 22: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5718405246734619
    2. '(input' → logprob: -1.321840524673462
    3. ')' → logprob: -2.071840524673462
    4. ',' → logprob: -3.321840524673462
    5. 'input' → logprob: -5.821840286254883
    6. ',input' → logprob: -7.321840286254883
    7. '('' → logprob: -7.571840286254883
    8. '```' → logprob: -8.196840286254883
    9. '()' → logprob: -8.571840286254883
    10. ')(' → logprob: -8.696840286254883

Token 23: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0700872614979744
    2. ' input' → logprob: -2.695087194442749
    3. ')' → logprob: -9.195087432861328
    4. '(input' → logprob: -10.195087432861328
    5. ' ' → logprob: -12.320087432861328
    6. ',input' → logprob: -13.195087432861328
    7. '=input' → logprob: -13.320087432861328
    8. ' )' → logprob: -13.695087432861328
    9. 'open' → logprob: -14.070087432861328
    10. '	input' → logprob: -14.445087432861328

Token 24: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -1.1750199794769287
    2. '()' → logprob: -1.4250199794769287
    3. '().' → logprob: -1.6750199794769287
    4. '(' → logprob: -1.9250199794769287
    5. '('' → logprob: -2.6750199794769287
    6. ')' → logprob: -4.050020217895508
    7. '(()' → logprob: -4.050020217895508
    8. '());' → logprob: -5.800020217895508
    9. '("("' → logprob: -6.175020217895508
    10. '("' → logprob: -6.425020217895508

Token 25: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -8.73314929776825e-05
    2. 'strip' → logprob: -9.37508773803711
    3. 'rstrip' → logprob: -13.37508773803711
    4. ' split' → logprob: -15.00008773803711
    5. '(split' → logprob: -15.50008773803711
    6. ')' → logprob: -15.62508773803711
    7. 'spl' → logprob: -16.50008773803711
    8. 'read' → logprob: -17.75008773803711
    9. '```' → logprob: -18.50008773803711
    10. ' ' → logprob: -19.00008773803711

Token 26: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04865561053156853
    2. '))' → logprob: -3.0486555099487305
    3. '),' → logprob: -10.29865550994873
    4. ')
' → logprob: -11.67365550994873
    5. '()' → logprob: -12.04865550994873
    6. '())' → logprob: -12.04865550994873
    7. ')))' → logprob: -12.54865550994873
    8. ')`' → logprob: -13.17365550994873
    9. '`)' → logprob: -13.17365550994873
    10. '')' → logprob: -13.42365550994873

Token 27: 'A' (ID: 32)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -1.007910132408142
    2. 'matrix' → logprob: -1.632910132408142
    3. '
' → logprob: -2.6329102516174316
    4. 'a' → logprob: -2.6329102516174316
    5. 'arr' → logprob: -2.7579102516174316
    6. 'array' → logprob: -3.1329102516174316
    7. 'result' → logprob: -4.007910251617432
    8. 'A' → logprob: -4.382910251617432
    9. 'numbers' → logprob: -4.382910251617432
    10. 'lst' → logprob: -4.507910251617432

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3728460669517517
    2. '[' → logprob: -1.4978461265563965
    3. '=' → logprob: -3.2478461265563965
    4. ',' → logprob: -3.6228461265563965
    5. 's' → logprob: -5.2478461265563965
    6. ' ' → logprob: -5.3728461265563965
    7. '.' → logprob: -5.4978461265563965
    8. '_' → logprob: -5.9978461265563965
    9. '[:]' → logprob: -6.4978461265563965
    10. '[:' → logprob: -7.1228461265563965

Token 29: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.641973078250885
    2. ' list' → logprob: -0.766973078250885
    3. ' [' → logprob: -5.51697301864624
    4. '[list' → logprob: -5.76697301864624
    5. '[' → logprob: -6.26697301864624
    6. 'map' → logprob: -9.641973495483398
    7. '[]' → logprob: -9.891973495483398
    8. ' map' → logprob: -10.141973495483398
    9. '[*' → logprob: -10.266973495483398
    10. '[int' → logprob: -10.641973495483398

Token 30: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.16126739978790283
    2. '(' → logprob: -2.2862672805786133
    3. '(int' → logprob: -3.7862672805786133
    4. '(com' → logprob: -4.411267280578613
    5. '(input' → logprob: -5.161267280578613
    6. '(range' → logprob: -5.286267280578613
    7. '(re' → logprob: -6.911267280578613
    8. '(filter' → logprob: -8.911267280578613
    9. '(str' → logprob: -9.286267280578613
    10. '(iter' → logprob: -9.786267280578613

Token 31: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.005266599822789431
    2. '(' → logprob: -5.2552666664123535
    3. 'int' → logprob: -10.505266189575195
    4. '<int' → logprob: -13.880266189575195
    5. '[int' → logprob: -14.130266189575195
    6. '(
' → logprob: -14.130266189575195
    7. '(str' → logprob: -14.255266189575195
    8. '(lambda' → logprob: -14.880266189575195
    9. '=int' → logprob: -15.005266189575195
    10. '(input' → logprob: -15.255266189575195

Token 32: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.3443077802658081
    2. '(input' → logprob: -1.469307780265808
    3. ',' → logprob: -2.8443078994750977
    4. '(' → logprob: -6.469307899475098
    5. 'input' → logprob: -6.594307899475098
    6. ' ,' → logprob: -9.844307899475098
    7. '```' → logprob: -11.219307899475098
    8. '=input' → logprob: -11.219307899475098
    9. ' input' → logprob: -11.469307899475098
    10. '(),' → logprob: -12.469307899475098

Token 33: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.03368430957198143
    2. ' input' → logprob: -3.408684253692627
    3. '(input' → logprob: -10.908684730529785
    4. ',input' → logprob: -11.533684730529785
    5. ' ' → logprob: -12.533684730529785
    6. ')' → logprob: -13.158684730529785
    7. '	input' → logprob: -13.408684730529785
    8. '=input' → logprob: -14.533684730529785
    9. ',' → logprob: -14.658684730529785
    10. 'list' → logprob: -14.908684730529785

Token 34: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.2994620242971e-06
    2. '()' → logprob: -12.000008583068848
    3. '()))' → logprob: -13.875008583068848
    4. ' ().' → logprob: -15.000008583068848
    5. '()));' → logprob: -15.500008583068848
    6. ')' → logprob: -16.00000762939453
    7. '())' → logprob: -16.62500762939453
    8. '))' → logprob: -16.87500762939453
    9. '.' → logprob: -17.00000762939453
    10. '())))' → logprob: -17.25000762939453

Token 35: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.742448022123426e-05
    2. 'strip' → logprob: -9.625067710876465
    3. '(split' → logprob: -14.125067710876465
    4. ' split' → logprob: -15.125067710876465
    5. ')' → logprob: -15.500067710876465
    6. 'rstrip' → logprob: -16.00006675720215
    7. 'spl' → logprob: -17.75006675720215
    8. '())' → logprob: -17.87506675720215
    9. '()' → logprob: -17.87506675720215
    10. '().' → logprob: -18.00006675720215

Token 36: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.06223834678530693
    2. ')' → logprob: -2.8122384548187256
    3. '()))' → logprob: -8.937238693237305
    4. ')))' → logprob: -9.437238693237305
    5. '(' → logprob: -10.062238693237305
    6. '())' → logprob: -12.187238693237305
    7. '),' → logprob: -12.562238693237305
    8. '()' → logprob: -12.937238693237305
    9. ' ))' → logprob: -13.312238693237305
    10. ''))' → logprob: -13.687238693237305

Token 37: 'S' (ID: 50)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.1995046138763428
    2. 'B' → logprob: -2.4495046138763428
    3. 'p' → logprob: -2.5745046138763428
    4. 's' → logprob: -2.6995046138763428
    5. 'd' → logprob: -3.1995046138763428
    6. 'c' → logprob: -3.1995046138763428
    7. 'a' → logprob: -3.1995046138763428
    8. '_' → logprob: -3.4495046138763428
    9. 'C' → logprob: -3.8245046138763428
    10. ')' → logprob: -3.8245046138763428

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5278195738792419
    2. '=' → logprob: -0.9028195738792419
    3. '_' → logprob: -5.652819633483887
    4. ',' → logprob: -7.777819633483887
    5. 'paces' → logprob: -8.652819633483887
    6. '=input' → logprob: -9.152819633483887
    7. '=[]' → logprob: -9.777819633483887
    8. 'p' → logprob: -10.027819633483887
    9. 'um' → logprob: -10.152819633483887
    10. ' ' → logprob: -10.402819633483887

Token 39: ' reduce' (ID: 10389)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.8684545755386353
    2. ' input' → logprob: -2.1184544563293457
    3. 'list' → logprob: -2.3684544563293457
    4. ' [' → logprob: -2.6184544563293457
    5. 'set' → logprob: -2.8684544563293457
    6. '[input' → logprob: -2.8684544563293457
    7. '[' → logprob: -2.9934544563293457
    8. ' []' → logprob: -3.3684544563293457
    9. '[]' → logprob: -3.3684544563293457
    10. ' list' → logprob: -3.8684544563293457

Token 40: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.20358538627624512
    2. '(' → logprob: -1.7035853862762451
    3. '((' → logprob: -6.328585624694824
    4. '(operator' → logprob: -8.328585624694824
    5. '(sum' → logprob: -10.203585624694824
    6. '(+' → logprob: -10.953585624694824
    7. '(()' → logprob: -11.203585624694824
    8. '(int' → logprob: -11.703585624694824
    9. '(
' → logprob: -11.953585624694824
    10. '(len' → logprob: -12.078585624694824

Token 41: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.8070077896118164
    2. ' a' → logprob: -0.9320077896118164
    3. 'a' → logprob: -2.4320077896118164
    4. 'x' → logprob: -3.1820077896118164
    5. ' lambda' → logprob: -3.8070077896118164
    6. 'lambda' → logprob: -5.307007789611816
    7. ' acc' → logprob: -6.057007789611816
    8. ',' → logprob: -8.432007789611816
    9. ' ' → logprob: -8.682007789611816
    10. 'acc' → logprob: -8.807007789611816

Token 42: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003228933084756136
    2. ',x' → logprob: -6.003229141235352
    3. 'lambda' → logprob: -8.378229141235352
    4. ' ,' → logprob: -8.503229141235352
    5. ',y' → logprob: -10.003229141235352
    6. '+' → logprob: -10.003229141235352
    7. 'a' → logprob: -10.253229141235352
    8. 'x' → logprob: -10.253229141235352
    9. '=lambda' → logprob: -10.378229141235352
    10. '1' → logprob: -10.753229141235352

Token 43: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.1603633463382721
    2. ' y' → logprob: -1.9103633165359497
    3. 'x' → logprob: -9.91036319732666
    4. 'a' → logprob: -10.78536319732666
    5. ' ' → logprob: -10.78536319732666
    6. 'lambda' → logprob: -11.41036319732666
    7. ',' → logprob: -11.66036319732666
    8. ' lambda' → logprob: -12.16036319732666
    9. ',y' → logprob: -12.41036319732666
    10. ' x' → logprob: -12.53536319732666

Token 44: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005469724535942078
    2. ',' → logprob: -5.755469799041748
    3. ':x' → logprob: -6.755469799041748
    4. ' :' → logprob: -7.255469799041748
    5. ',x' → logprob: -8.13046932220459
    6. ',y' → logprob: -10.13046932220459
    7. ',:' → logprob: -10.38046932220459
    8. ':y' → logprob: -11.63046932220459
    9. ':A' → logprob: -12.38046932220459
    10. ':(' → logprob: -12.38046932220459

Token 45: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4741932153701782
    2. ' x' → logprob: -0.9741932153701782
    3. ' ' → logprob: -9.599193572998047
    4. ' (' → logprob: -11.849193572998047
    5. '	x' → logprob: -12.224193572998047
    6. '(x' → logprob: -12.286693572998047
    7. '  ' → logprob: -12.411693572998047
    8. 'lambda' → logprob: -12.536693572998047
    9. '   ' → logprob: -12.724193572998047
    10. ' ' → logprob: -13.411693572998047

Token 46: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.008257580921053886
    2. '+y' → logprob: -5.7582573890686035
    3. ' +' → logprob: -6.0082573890686035
    4. '|' → logprob: -6.2582573890686035
    5. '^' → logprob: -8.133257865905762
    6. '*' → logprob: -8.883257865905762
    7. '+x' → logprob: -9.008257865905762
    8. '-' → logprob: -9.758257865905762
    9. '+[' → logprob: -11.008257865905762
    10. ' |' → logprob: -11.258257865905762

Token 47: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.10028398036956787
    2. ' y' → logprob: -2.3502840995788574
    3. '[' → logprob: -10.9752836227417
    4. ' ' → logprob: -11.1002836227417
    5. ' [' → logprob: -11.7252836227417
    6. '[y' → logprob: -11.8502836227417
    7. '(y' → logprob: -12.2252836227417
    8. '1' → logprob: -12.4752836227417
    9. 'x' → logprob: -12.7252836227417
    10. ' (' → logprob: -12.7252836227417

Token 48: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14957183599472046
    2. 'A' → logprob: -2.3995718955993652
    3. '+' → logprob: -4.149571895599365
    4. ' A' → logprob: -4.649571895599365
    5. '+A' → logprob: -4.649571895599365
    6. ',A' → logprob: -5.524571895599365
    7. ' +' → logprob: -5.774571895599365
    8. '(A' → logprob: -6.149571895599365
    9. ')' → logprob: -6.149571895599365
    10. ' ,' → logprob: -7.399571895599365

Token 49: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.3871367573738098
    2. ' A' → logprob: -1.137136697769165
    3. '[' → logprob: -8.887136459350586
    4. '[A' → logprob: -10.137136459350586
    5. ')' → logprob: -10.387136459350586
    6. ' [' → logprob: -11.137136459350586
    7. 'range' → logprob: -11.387136459350586
    8. ' ' → logprob: -11.637136459350586
    9. '(A' → logprob: -12.012136459350586
    10. ' range' → logprob: -12.512136459350586

Token 50: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020076262298971415
    2. '[' → logprob: -6.877007484436035
    3. '))' → logprob: -7.627007484436035
    4. ',' → logprob: -8.502007484436035
    5. '[:' → logprob: -9.127007484436035
    6. ')))' → logprob: -9.752007484436035
    7. ' )' → logprob: -10.502007484436035
    8. '   ' → logprob: -11.502007484436035
    9. '[:-' → logprob: -11.502007484436035
    10. '`)' → logprob: -11.752007484436035

Token 51: 'criteria' (ID: 33611)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.5018703937530518
    2. '*' → logprob: -2.0018703937530518
    3. '#' → logprob: -2.3768703937530518
    4. '-' → logprob: -2.5018703937530518
    5. '%' → logprob: -2.6268703937530518
    6. ')' → logprob: -3.3768703937530518
    7. 'S' → logprob: -3.5018703937530518
    8. ' 
' → logprob: -3.5018703937530518
    9. '
' → logprob: -3.8768703937530518
    10. '\n' → logprob: -4.001870155334473

Token 52: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3807465732097626
    2. 's' → logprob: -1.380746603012085
    3. '=' → logprob: -2.880746603012085
    4. '_' → logprob: -4.880746364593506
    5. '_s' → logprob: -7.880746364593506
    6. ' ' → logprob: -8.005746841430664
    7. '.' → logprob: -8.880746841430664
    8. ',' → logprob: -9.130746841430664
    9. '[' → logprob: -9.130746841430664
    10. '[:]' → logprob: -9.505746841430664

Token 53: ' list' (ID: 1562)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.8471721410751343
    2. '[' → logprob: -1.0971721410751343
    3. '[S' → logprob: -2.347172260284424
    4. 'S' → logprob: -3.222172260284424
    5. ' S' → logprob: -3.472172260284424
    6. '[A' → logprob: -4.222172260284424
    7. 'lambda' → logprob: -4.472172260284424
    8. ' lambda' → logprob: -4.722172260284424
    9. '[s' → logprob: -5.347172260284424
    10. '[i' → logprob: -5.472172260284424

Token 54: '(st' (ID: 4065)
  Prédit: '(com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.7236578464508057
    2. '(filter' → logprob: -0.8486578464508057
    3. '(' → logprob: -3.2236578464508057
    4. '(lambda' → logprob: -3.7236578464508057
    5. '(map' → logprob: -4.473657608032227
    6. '(range' → logprob: -5.473657608032227
    7. '(re' → logprob: -5.723657608032227
    8. '(st' → logprob: -6.848657608032227
    9. '(part' → logprob: -7.473657608032227
    10. '(int' → logprob: -7.473657608032227

Token 55: 'arm' (ID: 2218)
  Prédit: 'arm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arm' → logprob: -0.00027480217977426946
    2. 'map' → logprob: -8.375274658203125
    3. 'ar' → logprob: -10.125274658203125
    4. 'arp' → logprob: -12.750274658203125
    5. 'r' → logprob: -15.000274658203125
    6. 'erm' → logprob: -15.625274658203125
    7. '(map' → logprob: -16.875274658203125
    8. '[' → logprob: -17.000274658203125
    9. 'am' → logprob: -17.000274658203125
    10. 'arr' → logprob: -17.000274658203125

Token 56: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -1.9361264946837764e-07
    2. 'map' → logprob: -16.125
    3. 'ап' → logprob: -17.625
    4. 'app' → logprob: -18.625
    5. 'a' → logprob: -19.25
    6. '	ap' → logprob: -19.5
    7. 'aps' → logprob: -19.75
    8. 'ask' → logprob: -19.875
    9. 'apply' → logprob: -20.0
    10. 'at' → logprob: -20.0

Token 57: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.025325957685709
    2. 'lambda' → logprob: -3.9003260135650635
    3. '(' → logprob: -6.900325775146484
    4. '(operator' → logprob: -6.900325775146484
    5. 'abs' → logprob: -7.275325775146484
    6. '(abs' → logprob: -7.400325775146484
    7. 'operator' → logprob: -7.775325775146484
    8. '(str' → logprob: -8.900325775146484
    9. '(int' → logprob: -9.025325775146484
    10. ')' → logprob: -9.400325775146484

Token 58: ' a' (ID: 261)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.4227895140647888
    2. ' lambda' → logprob: -1.1727895736694336
    3. 'abs' → logprob: -4.672789573669434
    4. ',' → logprob: -4.922789573669434
    5. 'a' → logprob: -5.297789573669434
    6. 'int' → logprob: -5.797789573669434
    7. '(lambda' → logprob: -6.047789573669434
    8. 'x' → logprob: -6.547789573669434
    9. 'operator' → logprob: -6.547789573669434
    10. '=lambda' → logprob: -6.922789573669434

Token 59: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0033040239941328764
    2. ' ,' → logprob: -6.8783040046691895
    3. 'a' → logprob: -8.003304481506348
    4. 'lambda' → logprob: -8.378304481506348
    5. ',b' → logprob: -8.753304481506348
    6. ',a' → logprob: -8.878304481506348
    7. '=lambda' → logprob: -9.003304481506348
    8. '=' → logprob: -9.440804481506348
    9. 'abs' → logprob: -9.690804481506348
    10. ',y' → logprob: -9.753304481506348

Token 60: ' s' (ID: 265)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.25326621532440186
    2. ' b' → logprob: -2.5032663345336914
    3. 's' → logprob: -2.7532663345336914
    4. ' s' → logprob: -3.6282663345336914
    5. 'm' → logprob: -4.253266334533691
    6. 'c' → logprob: -4.503266334533691
    7. 'n' → logprob: -5.753266334533691
    8. 'x' → logprob: -5.753266334533691
    9. ' m' → logprob: -6.003266334533691
    10. 'k' → logprob: -6.128266334533691

Token 61: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014835665002465248
    2. ',' → logprob: -5.014835834503174
    3. ' :' → logprob: -5.014835834503174
    4. ':s' → logprob: -7.764835834503174
    5. '=' → logprob: -8.514835357666016
    6. ':S' → logprob: -8.764835357666016
    7. 'a' → logprob: -8.889835357666016
    8. 's' → logprob: -9.014835357666016
    9. ',s' → logprob: -9.639835357666016
    10. ':a' → logprob: -9.889835357666016

Token 62: ' m' (ID: 284)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.9672852754592896
    2. 'b' → logprob: -1.8422852754592896
    3. 't' → logprob: -2.71728515625
    4. ' c' → logprob: -2.84228515625
    5. 'm' → logprob: -3.09228515625
    6. ' t' → logprob: -3.46728515625
    7. 'r' → logprob: -3.71728515625
    8. ' b' → logprob: -3.71728515625
    9. 'l' → logprob: -3.84228515625
    10. 'n' → logprob: -3.84228515625

Token 63: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.024841975420713425
    2. ' :' → logprob: -4.274841785430908
    3. ',' → logprob: -4.649841785430908
    4. 'a' → logprob: -7.899841785430908
    5. 's' → logprob: -8.399842262268066
    6. ':s' → logprob: -9.024842262268066
    7. ':a' → logprob: -9.274842262268066
    8. ',a' → logprob: -10.274842262268066
    9. ',:' → logprob: -10.399842262268066
    10. '=' → logprob: -10.649842262268066

Token 64: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6284964084625244
    2. ' a' → logprob: -0.8784964084625244
    3. ' s' → logprob: -4.503496170043945
    4. ' abs' → logprob: -4.628496170043945
    5. '(a' → logprob: -5.003496170043945
    6. 's' → logprob: -5.128496170043945
    7. ' (' → logprob: -5.128496170043945
    8. 'abs' → logprob: -5.628496170043945
    9. ' m' → logprob: -6.378496170043945
    10. 'm' → logprob: -6.628496170043945

Token 65: '*' (ID: 9)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -1.1175439357757568
    2. '>' → logprob: -1.8675439357757568
    3. ' %' → logprob: -1.9925439357757568
    4. '>=' → logprob: -2.492543935775757
    5. ' >' → logprob: -3.117543935775757
    6. '*' → logprob: -3.117543935775757
    7. '<' → logprob: -3.117543935775757
    8. '<=' → logprob: -3.242543935775757
    9. ' >=' → logprob: -3.492543935775757
    10. ' <=' → logprob: -3.742543935775757

Token 66: '4' (ID: 19)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3106342554092407
    2. 'm' → logprob: -1.9356342554092407
    3. ' s' → logprob: -3.060634136199951
    4. '2' → logprob: -3.810634136199951
    5. '(s' → logprob: -4.310634136199951
    6. ' m' → logprob: -4.560634136199951
    7. '(m' → logprob: -4.935634136199951
    8. 'a' → logprob: -5.060634136199951
    9. '(' → logprob: -5.435634136199951
    10. ' (' → logprob: -5.810634136199951

Token 67: '*m' (ID: 85049)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.671409249305725
    2. '-' → logprob: -1.921409249305725
    3. '>' → logprob: -1.921409249305725
    4. '>=' → logprob: -2.1714091300964355
    5. ' -' → logprob: -2.4214091300964355
    6. ' +' → logprob: -2.5464091300964355
    7. ' >' → logprob: -2.7964091300964355
    8. ' >=' → logprob: -3.4214091300964355
    9. ',' → logprob: -3.4214091300964355
    10. '*' → logprob: -3.9214091300964355

Token 68: ' >=' (ID: 5064)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8980888724327087
    2. '>' → logprob: -1.6480889320373535
    3. '>=' → logprob: -1.8980889320373535
    4. ' >' → logprob: -3.1480889320373535
    5. '<=' → logprob: -3.6480889320373535
    6. ' >=' → logprob: -3.6480889320373535
    7. '-' → logprob: -3.8980889320373535
    8. '/' → logprob: -3.8980889320373535
    9. ' -' → logprob: -4.1480889320373535
    10. '==' → logprob: -4.1480889320373535

Token 69: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16530658304691315
    2. ' s' → logprob: -1.915306568145752
    3. ' ' → logprob: -6.415306568145752
    4. '2' → logprob: -6.540306568145752
    5. '3' → logprob: -6.540306568145752
    6. '4' → logprob: -8.41530704498291
    7. '(s' → logprob: -9.91530704498291
    8. ' (' → logprob: -10.16530704498291
    9. '5' → logprob: -10.54030704498291
    10. '(' → logprob: -10.54030704498291

Token 70: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019053159281611443
    2. ' ,' → logprob: -4.019052982330322
    3. '),' → logprob: -8.01905345916748
    4. ',A' → logprob: -8.64405345916748
    5. ' ' → logprob: -9.39405345916748
    6. '  ' → logprob: -9.64405345916748
    7. '(A' → logprob: -10.14405345916748
    8. ',
' → logprob: -10.39405345916748
    9. '   ' → logprob: -10.64405345916748
    10. 'A' → logprob: -10.89405345916748

Token 71: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.44362837076187134
    2. ' zip' → logprob: -1.0686283111572266
    3. 'repeat' → logprob: -4.443628311157227
    4. ' repeat' → logprob: -6.568628311157227
    5. 'A' → logprob: -6.818628311157227
    6. ' A' → logprob: -8.068628311157227
    7. '(zip' → logprob: -9.568628311157227
    8. ' ' → logprob: -10.443628311157227
    9. '[(' → logprob: -10.568628311157227
    10. '   ' → logprob: -10.568628311157227

Token 72: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0011928485473617911
    2. '(' → logprob: -6.751193046569824
    3. '(
' → logprob: -11.501193046569824
    4. ' (' → logprob: -11.876193046569824
    5. '((' → logprob: -13.876193046569824
    6. 'A' → logprob: -14.251193046569824
    7. ' ' → logprob: -14.501193046569824
    8. ' A' → logprob: -14.501193046569824
    9. ')' → logprob: -14.626193046569824
    10. '   ' → logprob: -14.876193046569824

Token 73: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021657170727849007
    2. ' ,' → logprob: -3.8966572284698486
    3. ',A' → logprob: -7.5216569900512695
    4. ',S' → logprob: -8.02165699005127
    5. ',N' → logprob: -9.52165699005127
    6. 'A' → logprob: -10.27165699005127
    7. ',
' → logprob: -10.77165699005127
    8. ' ' → logprob: -10.89665699005127
    9. '  ' → logprob: -11.27165699005127
    10. '   ' → logprob: -11.52165699005127

Token 74: ' repeat' (ID: 22962)
  Prédit: 'repeat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repeat' → logprob: -0.3622269332408905
    2. '[' → logprob: -1.237226963043213
    3. '[A' → logprob: -5.237226963043213
    4. ' [' → logprob: -5.487226963043213
    5. '[S' → logprob: -6.112226963043213
    6. ' repeat' → logprob: -7.612226963043213
    7. '[N' → logprob: -8.362226486206055
    8. '(re' → logprob: -8.362226486206055
    9. 'S' → logprob: -8.612226486206055
    10. ' ' → logprob: -8.987226486206055

Token 75: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.1088264137506485
    2. '([' → logprob: -2.4838263988494873
    3. '((' → logprob: -4.108826637268066
    4. '(' → logprob: -6.233826637268066
    5. '(A' → logprob: -7.108826637268066
    6. ',' → logprob: -8.983826637268066
    7. ')' → logprob: -9.608826637268066
    8. ',S' → logprob: -10.108826637268066
    9. ' (' → logprob: -10.358826637268066
    10. ' ' → logprob: -10.358826637268066

Token 76: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11323743313550949
    2. '),' → logprob: -2.2382373809814453
    3. ' ,' → logprob: -9.113237380981445
    4. ',),' → logprob: -9.363237380981445
    5. ',M' → logprob: -9.488237380981445
    6. ')' → logprob: -9.488237380981445
    7. ',N' → logprob: -10.113237380981445
    8. ' ),' → logprob: -11.113237380981445
    9. 'M' → logprob: -13.113237380981445
    10. ' ' → logprob: -13.363237380981445

Token 77: ' repeat' (ID: 22962)
  Prédit: 'repeat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repeat' → logprob: -0.003266361076384783
    2. ' repeat' → logprob: -6.128266334533691
    3. '[' → logprob: -7.003266334533691
    4. 'range' → logprob: -10.253266334533691
    5. ' [' → logprob: -10.253266334533691
    6. '(re' → logprob: -10.503266334533691
    7. ' ' → logprob: -10.503266334533691
    8. 're' → logprob: -10.628266334533691
    9. 'it' → logprob: -12.878266334533691
    10. '   ' → logprob: -13.003266334533691

Token 78: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.0018802082631736994
    2. 'M' → logprob: -6.501880168914795
    3. '(' → logprob: -8.126880645751953
    4. '(N' → logprob: -10.501880645751953
    5. ')' → logprob: -11.001880645751953
    6. ' (' → logprob: -12.251880645751953
    7. '[M' → logprob: -12.376880645751953
    8. ' M' → logprob: -12.501880645751953
    9. '))' → logprob: -12.751880645751953
    10. '4' → logprob: -12.751880645751953

Token 79: '))))
' (ID: 55084)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.04638710618019104
    2. ')' → logprob: -3.171387195587158
    3. '))))' → logprob: -5.921387195587158
    4. '))' → logprob: -7.296387195587158
    5. ')));' → logprob: -11.54638671875
    6. '),' → logprob: -12.79638671875
    7. ' ' → logprob: -12.79638671875
    8. ')))
' → logprob: -13.29638671875
    9. '')))' → logprob: -13.42138671875
    10. '))).' → logprob: -13.79638671875

Token 80: 'c' (ID: 66)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.21037451922893524
    2. 'for' → logprob: -2.960374593734741
    3. ' ' → logprob: -3.085374593734741
    4. '<|end|>' → logprob: -3.460374593734741
    5. '[' → logprob: -3.960374593734741
    6. ')' → logprob: -4.835374355316162
    7. 'criteria' → logprob: -4.960374355316162
    8. ' for' → logprob: -5.585374355316162
    9. ' 
' → logprob: -5.585374355316162
    10. 'if' → logprob: -5.710374355316162

Token 81: ' =' (ID: 314)
  Prédit: 'riteria'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'riteria' → logprob: -0.5370433330535889
    2. 'om' → logprob: -1.4120433330535889
    3. 'andidates' → logprob: -2.537043333053589
    4. 'ount' → logprob: -3.287043333053589
    5. 'ounter' → logprob: -4.662043571472168
    6. 'riter' → logprob: -4.662043571472168
    7. 'omp' → logprob: -4.912043571472168
    8. 'riterion' → logprob: -5.162043571472168
    9. 'andidate' → logprob: -5.662043571472168
    10. 'r' → logprob: -5.912043571472168

Token 82: ' sum' (ID: 4215)
  Prédit: 'criteria'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'criteria' → logprob: -0.7940809726715088
    2. ' criteria' → logprob: -1.0440809726715088
    3. ' sum' → logprob: -2.294080972671509
    4. 'sum' → logprob: -2.419080972671509
    5. ' len' → logprob: -6.04408073425293
    6. ' list' → logprob: -6.79408073425293
    7. 'len' → logprob: -6.91908073425293
    8. 'list' → logprob: -7.41908073425293
    9. 'criter' → logprob: -8.79408073425293
    10. ' ' → logprob: -9.16908073425293

Token 83: '(list' (ID: 13116)
  Prédit: '(criteria'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(criteria' → logprob: -0.003638203488662839
    2. '(' → logprob: -6.37863826751709
    3. '(com' → logprob: -6.37863826751709
    4. 'criteria' → logprob: -8.50363826751709
    5. '(list' → logprob: -10.75363826751709
    6. '(c' → logprob: -11.87863826751709
    7. '$criteria' → logprob: -14.00363826751709
    8. '((' → logprob: -14.12863826751709
    9. '(i' → logprob: -14.37863826751709
    10. '(filter' → logprob: -14.75363826751709

Token 84: '(com' (ID: 27868)
  Prédit: '(com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.162061870098114
    2. '(criteria' → logprob: -1.9120619297027588
    3. '(' → logprob: -6.78706169128418
    4. '(map' → logprob: -7.78706169128418
    5. 'criteria' → logprob: -8.41206169128418
    6. '(filter' → logprob: -9.91206169128418
    7. 'compress' → logprob: -11.66206169128418
    8. ')' → logprob: -12.28706169128418
    9. ' (' → logprob: -13.91206169128418
    10. '(filters' → logprob: -14.16206169128418

Token 85: 'press' (ID: 2020)
  Prédit: 'press'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'press' → logprob: -0.00021807955636177212
    2. 'pr' → logprob: -9.750218391418457
    3. '(criteria' → logprob: -9.750218391418457
    4. 'criteria' → logprob: -10.000218391418457
    5. 'prise' → logprob: -11.000218391418457
    6. 'pression' → logprob: -11.625218391418457
    7. '```' → logprob: -11.750218391418457
    8. 'pres' → logprob: -12.000218391418457
    9. 'p' → logprob: -12.625218391418457
    10. '(' → logprob: -12.750218391418457

Token 86: '(re' (ID: 8178)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.004673503804951906
    2. '(' → logprob: -5.379673480987549
    3. '(
' → logprob: -10.129673957824707
    4. '(N' → logprob: -12.754673957824707
    5. ')' → logprob: -13.004673957824707
    6. '((' → logprob: -13.254673957824707
    7. 'A' → logprob: -13.754673957824707
    8. '(C' → logprob: -13.879673957824707
    9. '(B' → logprob: -14.004673957824707
    10. ')(' → logprob: -14.254673957824707

Token 87: 'peat' (ID: 18888)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.7248290777206421
    2. 's' → logprob: -2.0998291969299316
    3. '(criteria' → logprob: -2.8498291969299316
    4. 'verse' → logprob: -2.9748291969299316
    5. 'criteria' → logprob: -2.9748291969299316
    6. 'd' → logprob: -3.2248291969299316
    7. 'ad' → logprob: -3.2248291969299316
    8. 'turn' → logprob: -3.5998291969299316
    9. 'range' → logprob: -3.7248291969299316
    10. 'quire' → logprob: -4.599829196929932

Token 88: '(' (ID: 7)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.09319497644901276
    2. '(criteria' → logprob: -2.5931949615478516
    3. '(N' → logprob: -4.968194961547852
    4. '(' → logprob: -5.093194961547852
    5. '((' → logprob: -8.093194961547852
    6. '(range' → logprob: -8.843194961547852
    7. '(C' → logprob: -9.093194961547852
    8. '(a' → logprob: -9.218194961547852
    9. '(c' → logprob: -9.218194961547852
    10. '(M' → logprob: -9.343194961547852

Token 89: '1' (ID: 16)
  Prédit: 'criteria'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'criteria' → logprob: -0.10431623458862305
    2. '(criteria' → logprob: -2.354316234588623
    3. 'A' → logprob: -5.854316234588623
    4. ' criteria' → logprob: -8.479316711425781
    5. 'N' → logprob: -8.479316711425781
    6. '1' → logprob: -8.604316711425781
    7. '(' → logprob: -8.854316711425781
    8. '(A' → logprob: -8.979316711425781
    9. '$criteria' → logprob: -10.104316711425781
    10. '(N' → logprob: -10.354316711425781

Token 90: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032069424632936716
    2. ' ,' → logprob: -6.753206729888916
    3. ',c' → logprob: -6.753206729888916
    4. ',N' → logprob: -7.753206729888916
    5. '(),' → logprob: -8.878207206726074
    6. ',len' → logprob: -9.378207206726074
    7. ',n' → logprob: -9.628207206726074
    8. ',(' → logprob: -10.253207206726074
    9. '),' → logprob: -10.628207206726074
    10. '(N' → logprob: -11.003207206726074

Token 91: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.11527317762374878
    2. ' N' → logprob: -3.1152732372283936
    3. 'len' → logprob: -3.3652732372283936
    4. 'M' → logprob: -3.7402732372283936
    5. ' M' → logprob: -5.9902729988098145
    6. ' len' → logprob: -5.9902729988098145
    7. ' ' → logprob: -7.9902729988098145
    8. '  ' → logprob: -8.615273475646973
    9. '   ' → logprob: -8.615273475646973
    10. '(len' → logprob: -9.115273475646973

Token 92: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.049195047467947006
    2. ',' → logprob: -3.0491950511932373
    3. ' ),' → logprob: -8.674195289611816
    4. ' ,' → logprob: -8.924195289611816
    5. ',),' → logprob: -9.174195289611816
    6. ',c' → logprob: -9.299195289611816
    7. ')' → logprob: -10.049195289611816
    8. '),(' → logprob: -11.049195289611816
    9. '(),' → logprob: -11.424195289611816
    10. '   ' → logprob: -12.049195289611816

Token 93: ' criteria' (ID: 17572)
  Prédit: 'criteria'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'criteria' → logprob: -0.11480288952589035
    2. ' criteria' → logprob: -2.239802837371826
    3. '(criteria' → logprob: -6.239802837371826
    4. '$criteria' → logprob: -11.489803314208984
    5. ' ' → logprob: -12.489803314208984
    6. 'criter' → logprob: -12.614803314208984
    7. '.criteria' → logprob: -13.114803314208984
    8. ' criter' → logprob: -13.364803314208984
    9. ' criterios' → logprob: -13.489803314208984
    10. ')' → logprob: -13.739803314208984

Token 94: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.12745097279548645
    2. '))' → logprob: -2.127450942993164
    3. ')' → logprob: -7.877450942993164
    4. ')))
' → logprob: -9.502450942993164
    5. '))))' → logprob: -10.252450942993164
    6. '))
' → logprob: -11.627450942993164
    7. ')))

' → logprob: -12.002450942993164
    8. ')));' → logprob: -12.377450942993164
    9. ' ))' → logprob: -13.002450942993164
    10. ' ' → logprob: -13.252450942993164

Token 95: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.015504458919167519
    2. 'if' → logprob: -4.765504360198975
    3. '"\' → logprob: -6.140504360198975
    4. ''\' → logprob: -6.265504360198975
    5. '
' → logprob: -6.390504360198975
    6. '\n' → logprob: -8.140504837036133
    7. ' print' → logprob: -8.390504837036133
    8. ' if' → logprob: -8.765504837036133
    9. '<|end|>' → logprob: -8.890504837036133
    10. ' 
' → logprob: -9.390504837036133

Token 96: '(["' (ID: 41418)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47855815291404724
    2. '(c' → logprob: -0.9785581827163696
    3. '((' → logprob: -6.10355806350708
    4. '('' → logprob: -6.47855806350708
    5. '(f' → logprob: -8.353558540344238
    6. '("("' → logprob: -8.728558540344238
    7. '()' → logprob: -9.103558540344238
    8. '(len' → logprob: -9.853558540344238
    9. '(C' → logprob: -10.103558540344238
    10. '(s' → logprob: -10.603558540344238

Token 97: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.1983589082956314
    2. 'Yes' → logprob: -2.1983590126037598
    3. '"' → logprob: -3.8233590126037598
    4. '"No' → logprob: -4.82335901260376
    5. 'Fail' → logprob: -5.19835901260376
    6. 'N' → logprob: -5.19835901260376
    7. 'Poor' → logprob: -5.44835901260376
    8. 'M' → logprob: -5.82335901260376
    9. 'Safe' → logprob: -6.32335901260376
    10. 'c' → logprob: -6.69835901260376

Token 98: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.3137153685092926
    2. '","' → logprob: -1.3137153387069702
    3. '"' → logprob: -8.188714981079102
    4. ' ",' → logprob: -9.438714981079102
    5. ' ","' → logprob: -10.313714981079102
    6. ',' → logprob: -10.938714981079102
    7. 'Yes' → logprob: -10.938714981079102
    8. 'print' → logprob: -11.938714981079102
    9. ',"' → logprob: -12.938714981079102
    10. 'if' → logprob: -13.063714981079102

Token 99: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0017544300062581897
    2. ' "' → logprob: -6.376754283905029
    3. '"No' → logprob: -10.251754760742188
    4. ''' → logprob: -11.626754760742188
    5. ' ' → logprob: -12.376754760742188
    6. '"A' → logprob: -14.126754760742188
    7. '"O' → logprob: -14.751754760742188
    8. '"You' → logprob: -15.001754760742188
    9. '["' → logprob: -15.126754760742188
    10. '"What' → logprob: -15.376754760742188

Token 100: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.0013633318012580276
    2. ' Yes' → logprob: -6.626363277435303
    3. '"' → logprob: -10.376363754272461
    4. 'Ye' → logprob: -12.626363754272461
    5. 'YES' → logprob: -13.501363754272461
    6. 'Ok' → logprob: -15.376363754272461
    7. 'No' → logprob: -15.501363754272461
    8. ' ' → logprob: -15.501363754272461
    9. ' yes' → logprob: -15.501363754272461
    10. 'Yeah' → logprob: -15.751363754272461

Token 101: '"]' (ID: 2601)
  Prédit: '"]['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"][' → logprob: -0.01701049879193306
    2. '"]' → logprob: -4.517010688781738
    3. '"])' → logprob: -5.142010688781738
    4. '")[' → logprob: -9.642010688781738
    5. '][' → logprob: -10.642010688781738
    6. '"]["' → logprob: -13.392010688781738
    7. ''][' → logprob: -13.517010688781738
    8. '"]);' → logprob: -13.517010688781738
    9. '"[' → logprob: -13.642010688781738
    10. '])[' → logprob: -14.142010688781738

Token 102: '[(' (ID: 20542)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.008114037103950977
    2. '[' → logprob: -4.883113861083984
    3. '][' → logprob: -8.383113861083984
    4. ')[' → logprob: -8.883113861083984
    5. ' [' → logprob: -10.258113861083984
    6. ']' → logprob: -10.258113861083984
    7. ')' → logprob: -10.883113861083984
    8. '[
' → logprob: -11.133113861083984
    9. ',' → logprob: -11.258113861083984
    10. 'c' → logprob: -11.383113861083984

Token 103: 'lambda' (ID: 35280)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0011970169143751264
    2. ' c' → logprob: -6.75119686126709
    3. ')c' → logprob: -11.75119686126709
    4. '   ' → logprob: -12.25119686126709
    5. '2' → logprob: -12.37619686126709
    6. ' ' → logprob: -12.75119686126709
    7. ')' → logprob: -13.37619686126709
    8. '(c' → logprob: -14.00119686126709
    9. '1' → logprob: -14.12619686126709
    10. 'N' → logprob: -14.12619686126709

Token 104: ' x' (ID: 1215)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.5924814939498901
    2. 'c' → logprob: -1.4674814939498901
    3. ' x' → logprob: -1.9674814939498901
    4. 'x' → logprob: -2.7174816131591797
    5. ' n' → logprob: -5.96748161315918
    6. ':' → logprob: -6.34248161315918
    7. 'n' → logprob: -6.84248161315918
    8. ' count' → logprob: -7.21748161315918
    9. 'count' → logprob: -7.46748161315918
    10. ' _' → logprob: -8.09248161315918

Token 105: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.381341814994812
    2. 'c' → logprob: -1.881341814994812
    3. 'x' → logprob: -2.5063419342041016
    4. ' c' → logprob: -3.1313419342041016
    5. ' x' → logprob: -3.5063419342041016
    6. ' :' → logprob: -5.006341934204102
    7. ':c' → logprob: -6.631341934204102
    8. ':x' → logprob: -7.881341934204102
    9. 'lambda' → logprob: -8.006341934204102
    10. 'n' → logprob: -8.131341934204102

Token 106: ' y' (ID: 342)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.26846572756767273
    2. 'c' → logprob: -1.6434657573699951
    3. ' x' → logprob: -3.518465757369995
    4. ' c' → logprob: -4.768465518951416
    5. ':' → logprob: -6.893465518951416
    6. 'y' → logprob: -7.268465518951416
    7. 'lambda' → logprob: -7.518465518951416
    8. 'M' → logprob: -7.768465518951416
    9. '   ' → logprob: -7.768465518951416
    10. 'N' → logprob: -9.143465995788574

Token 107: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4891884922981262
    2. ' :' → logprob: -0.9891884922981262
    3. ':c' → logprob: -5.1141886711120605
    4. ' x' → logprob: -6.1141886711120605
    5. ':x' → logprob: -6.1141886711120605
    6. ' c' → logprob: -6.4891886711120605
    7. 'c' → logprob: -6.7391886711120605
    8. 'x' → logprob: -7.1141886711120605
    9. ',' → logprob: -8.114188194274902
    10. ' y' → logprob: -8.989188194274902

Token 108: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.20423296093940735
    2. ' x' → logprob: -1.704232931137085
    3. 'y' → logprob: -7.329233169555664
    4. ' y' → logprob: -7.454233169555664
    5. '   ' → logprob: -7.704233169555664
    6. 'lambda' → logprob: -7.954233169555664
    7. ' lambda' → logprob: -8.454233169555664
    8. ' ' → logprob: -8.579233169555664
    9. 'c' → logprob: -8.704233169555664
    10. '  ' → logprob: -10.079233169555664

Token 109: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.3026887774467468
    2. '>=' → logprob: -1.4276888370513916
    3. ' y' → logprob: -5.5526885986328125
    4. ' <=' → logprob: -5.8026885986328125
    5. ':' → logprob: -5.9276885986328125
    6. 'y' → logprob: -6.6776885986328125
    7. ' c' → logprob: -6.6776885986328125
    8. ' >' → logprob: -6.6776885986328125
    9. '=lambda' → logprob: -6.8026885986328125
    10. '<=' → logprob: -6.9276885986328125

Token 110: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.17033995687961578
    2. '(y' → logprob: -2.170340061187744
    3. ' y' → logprob: -4.545340061187744
    4. '(' → logprob: -4.920340061187744
    5. ' (' → logprob: -5.545340061187744
    6. 'c' → logprob: -5.545340061187744
    7. '(M' → logprob: -5.545340061187744
    8. 'M' → logprob: -5.920340061187744
    9. '((' → logprob: -6.170340061187744
    10. '(c' → logprob: -6.295340061187744

Token 111: ')(' (ID: 4898)
  Prédit: ')('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')(' → logprob: -0.02461588755249977
    2. '(c' → logprob: -3.899616003036499
    3. ')' → logprob: -6.27461576461792
    4. ':' → logprob: -7.02461576461792
    5. ' )(' → logprob: -8.274616241455078
    6. '(' → logprob: -8.399616241455078
    7. '(N' → logprob: -8.524616241455078
    8. '(S' → logprob: -9.149616241455078
    9. ')c' → logprob: -9.649616241455078
    10. '](' → logprob: -9.774616241455078

Token 112: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0008165352046489716
    2. 'M' → logprob: -7.625816345214844
    3. ' c' → logprob: -8.500816345214844
    4. 'N' → logprob: -10.375816345214844
    5. 'S' → logprob: -10.500816345214844
    6. '(c' → logprob: -11.125816345214844
    7. '4' → logprob: -11.625816345214844
    8. '   ' → logprob: -11.750816345214844
    9. ')c' → logprob: -11.750816345214844
    10. '(S' → logprob: -12.250816345214844

Token 113: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2853109836578369
    2. 'M' → logprob: -1.910310983657837
    3. ' M' → logprob: -2.910310983657837
    4. ' ,' → logprob: -3.660310983657837
    5. '(M' → logprob: -4.785310745239258
    6. ',M' → logprob: -5.535310745239258
    7. 'N' → logprob: -5.785310745239258
    8. ' (' → logprob: -6.285310745239258
    9. ' N' → logprob: -6.910310745239258
    10. '(' → logprob: -8.160310745239258

Token 114: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0034715402871370316
    2. 'N' → logprob: -6.378471374511719
    3. ' M' → logprob: -6.503471374511719
    4. '(M' → logprob: -9.128471374511719
    5. ' ' → logprob: -10.128471374511719
    6. '(' → logprob: -10.128471374511719
    7. ' (' → logprob: -11.378471374511719
    8. 'len' → logprob: -11.628471374511719
    9. '5' → logprob: -11.753471374511719
    10. '((' → logprob: -11.753471374511719

Token 115: ')])' (ID: 99066)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.2543489634990692
    2. ')])' → logprob: -1.5043489933013916
    3. ')' → logprob: -6.1293487548828125
    4. '])]' → logprob: -9.504348754882812
    5. ' )' → logprob: -10.129348754882812
    6. '))' → logprob: -10.254348754882812
    7. ')])
' → logprob: -11.129348754882812
    8. ')],' → logprob: -11.129348754882812
    9. '+' → logprob: -11.254348754882812
    10. '])' → logprob: -11.504348754882812


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 113
Tokens correctement prédits (1ère position, stricte): 41
Tokens correctement prédits (1ère position, avec adaptation): 41
Tokens correctement prédits (top 10): 84
Précision stricte (1ère position): 36.28%
Précision adaptée (1ère position): 36.28%
Précision (top 10): 74.34%
================================================================================
