================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:21:12
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math
import string
import itertools as it
import fractions
import heapq
import collections as cl
import re
import array
import bisect
import sys
import copy as cp
import functools
import time
import random as rnd

sys.setrecursionlimit(10000000)
INF = float('inf')
EPSILON = pow(10, -10)
MOD1 = 10 ** 9 + 7
m2 = 998244353

steps4 = [(-1,0),(0,1),(1,0),(0,-1)]
steps8 = [(-1,0),(-1,1),(0,1),(1,1),(1,0),(1,-1),(0,-1),(-1,-1)]

readints = lambda: list(map(int, sys.stdin.readline().split()))
readlines_intlist = lambda: [list(map(int, l.split())) for l in sys.stdin.readlines()]
readints_0 = lambda: [int(x)-1 for x in sys.stdin.readline().split()]
readfloats = lambda: [float(x) for x in sys.stdin.readline().split()]
readstrs = lambda: sys.stdin.readline().split()
readi = lambda: int(sys.stdin.readline())
readf = lambda: float(sys.stdin.readline())
reads = input

def echo(x): print(x, flush=True)
def error(x): print(str(x), file=sys.stderr)
def joinA(arr, sep): return sep.join([str(u) for u in arr])
def joinRow(grid, s, t): return s.join([t.join(str(e) for e in row) for row in grid])

def main():
    aa = readints()
    if hasattr(aa, '__getitem__'):
        n, s = aa[0], aa[1]
    else:
        n, s = 0, 0  # fallback
    a1 = readints()
    result = 0
    DP = [0 for _ in range(s+1)]
    DP[0] = True
    for idx, x in enumerate(a1):
        v = x
        if v > s:
            DP[0] = DP[0] + 1
            continue
        DP[s] = (DP[s] + DP[s-v]*(n-idx)) % m2
        j = s-1
        while j >= v:
            DP[j] = (DP[j] + DP[j-v]) % m2
            j -= 1
        DP[0] += 1
    return DP[-1] % m2

if __name__=='__main__':
    print(main())
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00784805603325367
    2. '\n' → logprob: -5.757848262786865
    3. '\' → logprob: -6.507848262786865
    4. '<|end|>' → logprob: -6.882848262786865
    5. '```' → logprob: -7.132848262786865
    6. 'import' → logprob: -7.257848262786865
    7. '<|end|>' → logprob: -9.507847785949707
    8. '
' → logprob: -9.757847785949707
    9. '.

' → logprob: -10.007847785949707
    10. '.pi' → logprob: -10.132847785949707

Token 4: ' string' (ID: 1621)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.43858253955841064
    2. ' os' → logprob: -1.0635825395584106
    3. ' numpy' → logprob: -4.938582420349121
    4. ' random' → logprob: -6.688582420349121
    5. 'sys' → logprob: -7.938582420349121
    6. ' ' → logprob: -8.188582420349121
    7. 'os' → logprob: -8.188582420349121
    8. ' re' → logprob: -8.563582420349121
    9. ' statistics' → logprob: -8.938582420349121
    10. ' cm' → logprob: -10.063582420349121

Token 5: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.2859513759613037
    2. '<|end|>' → logprob: -2.5359513759613037
    3. '\' → logprob: -2.9109513759613037
    4. '
' → logprob: -3.2859513759613037
    5. '#' → logprob: -3.7859513759613037
    6. 'import' → logprob: -4.160951614379883
    7. '.' → logprob: -4.535951614379883
    8. '

' → logprob: -4.785951614379883
    9. '```' → logprob: -5.035951614379883
    10. ',' → logprob: -5.660951614379883

Token 6: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.430135041475296
    2. '\' → logprob: -2.3051350116729736
    3. '#' → logprob: -2.8051350116729736
    4. 'import' → logprob: -3.0551350116729736
    5. 'def' → logprob: -3.1801350116729736
    6. '.' → logprob: -3.3051350116729736
    7. '
' → logprob: -3.4301350116729736
    8. ',' → logprob: -4.430135250091553
    9. '```' → logprob: -5.430135250091553
    10. '

' → logprob: -5.805135250091553

Token 7: ' itertools' (ID: 103178)
  Prédit: 'random'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'random' → logprob: -1.1091828346252441
    2. 're' → logprob: -1.4841828346252441
    3. ' random' → logprob: -1.6091828346252441
    4. 'os' → logprob: -2.734182834625244
    5. ' os' → logprob: -2.984182834625244
    6. ' sys' → logprob: -3.109182834625244
    7. ' re' → logprob: -3.109182834625244
    8. 'sys' → logprob: -3.359182834625244
    9. 'collections' → logprob: -6.109182834625244
    10. ' collections' → logprob: -6.859182834625244

Token 8: ' as' (ID: 472)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0020362993236631155
    2. '\' → logprob: -7.252036094665527
    3. 'import' → logprob: -7.627036094665527
    4. '\n' → logprob: -8.752036094665527
    5. '.
' → logprob: -8.752036094665527
    6. ',' → logprob: -9.377036094665527
    7. 'def' → logprob: -9.502036094665527
    8. '#' → logprob: -9.627036094665527
    9. '.

' → logprob: -9.877036094665527
    10. '```' → logprob: -10.127036094665527

Token 9: ' it' (ID: 480)
  Prédit: ' it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' it' → logprob: -0.4797167479991913
    2. 'it' → logprob: -0.9797167778015137
    3. ' ' → logprob: -6.354716777801514
    4. 'It' → logprob: -7.354716777801514
    5. ' ' → logprob: -7.604716777801514
    6. '```' → logprob: -7.604716777801514
    7. 'itl' → logprob: -8.229716300964355
    8. '    ' → logprob: -8.229716300964355
    9. ' itertools' → logprob: -8.604716300964355
    10. '1' → logprob: -8.729716300964355

Token 10: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.016074957326054573
    2. '\n' → logprob: -5.266075134277344
    3. '\' → logprob: -5.516075134277344
    4. '_' → logprob: -7.016075134277344
    5. '.

' → logprob: -7.016075134277344
    6. ',' → logprob: -7.141075134277344
    7. '.
' → logprob: -7.266075134277344
    8. '
' → logprob: -7.266075134277344
    9. 'import' → logprob: -7.641075134277344
    10. '

' → logprob: -8.266075134277344

Token 11: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.037298593670129776
    2. 'import' → logprob: -5.162298679351807
    3. '.
' → logprob: -5.162298679351807
    4. '#' → logprob: -5.287298679351807
    5. '.

' → logprob: -5.287298679351807
    6. 'def' → logprob: -6.037298679351807
    7. '
' → logprob: -6.037298679351807
    8. '\n' → logprob: -6.037298679351807
    9. '

' → logprob: -6.412298679351807
    10. ',' → logprob: -6.412298679351807

Token 12: ' fractions' (ID: 110523)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.9392654895782471
    2. ' collections' → logprob: -1.314265489578247
    3. ' functools' → logprob: -2.314265489578247
    4. 'fun' → logprob: -2.689265489578247
    5. 're' → logprob: -2.939265489578247
    6. ' numpy' → logprob: -3.564265489578247
    7. 'numpy' → logprob: -3.689265489578247
    8. ' sys' → logprob: -4.314265251159668
    9. 'sys' → logprob: -4.439265251159668
    10. 'random' → logprob: -4.439265251159668

Token 13: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3047787547111511
    2. 'import' → logprob: -2.804778814315796
    3. '
' → logprob: -3.054778814315796
    4. ' as' → logprob: -3.304778814315796
    5. '\' → logprob: -3.554778814315796
    6. '\n' → logprob: -3.554778814315796
    7. ',' → logprob: -4.429778575897217
    8. '

' → logprob: -4.804778575897217
    9. 'as' → logprob: -4.804778575897217
    10. '```' → logprob: -5.054778575897217

Token 14: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.932044267654419
    2. '.' → logprob: -1.557044267654419
    3. '
' → logprob: -1.807044267654419
    4. '

' → logprob: -3.307044267654419
    5. '\n' → logprob: -3.432044267654419
    6. 'from' → logprob: -3.432044267654419
    7. ',' → logprob: -3.557044267654419
    8. '<|end|>' → logprob: -3.807044267654419
    9. ' as' → logprob: -4.05704402923584
    10. 'as' → logprob: -4.68204402923584

Token 15: ' heap' (ID: 37237)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -1.426750659942627
    2. ' functools' → logprob: -1.801750659942627
    3. 'collections' → logprob: -1.926750659942627
    4. ' decimal' → logprob: -2.176750659942627
    5. 'random' → logprob: -2.176750659942627
    6. ' random' → logprob: -2.676750659942627
    7. 'decimal' → logprob: -3.051750659942627
    8. ' operator' → logprob: -3.426750659942627
    9. ' sys' → logprob: -4.051750659942627
    10. 'operator' → logprob: -4.051750659942627

Token 16: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -9.372294698550832e-06
    2. 'queue' → logprob: -11.625009536743164
    3. ' queue' → logprob: -15.625009536743164
    4. 't' → logprob: -16.750009536743164
    5. '_queue' → logprob: -16.875009536743164
    6. 'Queue' → logprob: -17.750009536743164
    7. 'u' → logprob: -18.000009536743164
    8. '```' → logprob: -18.000009536743164
    9. '큐' → logprob: -18.500009536743164
    10. '

' → logprob: -18.750009536743164

Token 17: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4697006344795227
    2. '
' → logprob: -1.844700574874878
    3. 'import' → logprob: -2.844700574874878
    4. '\n' → logprob: -2.969700574874878
    5. '\' → logprob: -3.094700574874878
    6. '

' → logprob: -3.969700574874878
    7. '#' → logprob: -4.344700813293457
    8. '<|end|>' → logprob: -4.719700813293457
    9. ',' → logprob: -5.594700813293457
    10. '' → logprob: -5.719700813293457

Token 18: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4912903308868408
    2. '#' → logprob: -2.366290330886841
    3. 'import' → logprob: -2.616290330886841
    4. 'def' → logprob: -2.616290330886841
    5. '
' → logprob: -3.116290330886841
    6. '\' → logprob: -3.866290330886841
    7. '\n' → logprob: -3.991290330886841
    8. ',' → logprob: -4.116290092468262
    9. '<|end|>' → logprob: -4.241290092468262
    10. 'from' → logprob: -5.116290092468262

Token 19: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.35679110884666443
    2. ' collections' → logprob: -1.4817911386489868
    3. 'operator' → logprob: -3.3567910194396973
    4. ' operator' → logprob: -3.4817910194396973
    5. 'random' → logprob: -6.481791019439697
    6. ' functools' → logprob: -6.856791019439697
    7. 'bis' → logprob: -6.981791019439697
    8. 'copy' → logprob: -7.106791019439697
    9. ' bis' → logprob: -7.231791019439697
    10. 'sys' → logprob: -7.481791019439697

Token 20: ' as' (ID: 472)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.02691807597875595
    2. 'import' → logprob: -4.526917934417725
    3. '
' → logprob: -5.526917934417725
    4. '

' → logprob: -5.901917934417725
    5. '<|end|>' → logprob: -6.276917934417725
    6. '.

' → logprob: -6.651917934417725
    7. '\' → logprob: -6.651917934417725
    8. '.
' → logprob: -7.026917934417725
    9. '\n' → logprob: -7.151917934417725
    10. ',' → logprob: -7.401917934417725

Token 21: ' cl' (ID: 567)
  Prédit: ' col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.6875080466270447
    2. 'col' → logprob: -0.9375080466270447
    3. ' coll' → logprob: -2.9375081062316895
    4. ' ' → logprob: -3.9375081062316895
    5. ' co' → logprob: -3.9375081062316895
    6. 'coll' → logprob: -5.3125081062316895
    7. ' cole' → logprob: -6.0625081062316895
    8. 'c' → logprob: -6.3125081062316895
    9. 'co' → logprob: -6.6875081062316895
    10. 'collections' → logprob: -7.1875081062316895

Token 22: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.40855276584625244
    2. '
' → logprob: -2.033552646636963
    3. 'import' → logprob: -2.908552646636963
    4. '_' → logprob: -2.908552646636963
    5. '<|end|>' → logprob: -3.533552646636963
    6. '' → logprob: -4.408552646636963
    7. '#' → logprob: -4.658552646636963
    8. '.
' → logprob: -5.158552646636963
    9. ',' → logprob: -5.283552646636963
    10. 'n' → logprob: -5.533552646636963

Token 23: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8022115230560303
    2. '.' → logprob: -1.6772115230560303
    3. 'import' → logprob: -2.1772115230560303
    4. '#' → logprob: -3.0522115230560303
    5. '

' → logprob: -3.1772115230560303
    6. 'def' → logprob: -3.6772115230560303
    7. '' → logprob: -3.6772115230560303
    8. '\n' → logprob: -4.302211761474609
    9. 'd' → logprob: -4.427211761474609
    10. 'n' → logprob: -4.802211761474609

Token 24: ' re' (ID: 322)
  Prédit: 'operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'operator' → logprob: -1.136218547821045
    2. ' functools' → logprob: -1.511218547821045
    3. ' operator' → logprob: -1.636218547821045
    4. 'random' → logprob: -2.761218547821045
    5. 'fun' → logprob: -3.011218547821045
    6. 're' → logprob: -3.136218547821045
    7. 'copy' → logprob: -4.136218547821045
    8. 'os' → logprob: -4.386218547821045
    9. 'sys' → logprob: -4.386218547821045
    10. ' sys' → logprob: -4.636218547821045

Token 25: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.57784903049469
    2. '

' → logprob: -1.57784903049469
    3. 'import' → logprob: -1.82784903049469
    4. '\n' → logprob: -2.3278489112854004
    5. '.' → logprob: -2.4528489112854004
    6. '#' → logprob: -2.8278489112854004
    7. ' 

' → logprob: -3.2028489112854004
    8. 'def' → logprob: -3.4528489112854004
    9. ',' → logprob: -3.7028489112854004
    10. '<|end|>' → logprob: -4.0778489112854

Token 26: 'import' (ID: 561)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3271812200546265
    2. 'import' → logprob: -1.5771812200546265
    3. 'def' → logprob: -2.202181339263916
    4. '
' → logprob: -2.202181339263916
    5. '\n' → logprob: -2.327181339263916
    6. '

' → logprob: -2.702181339263916
    7. '.' → logprob: -3.702181339263916
    8. '<|end|>' → logprob: -4.077181339263916
    9. '```' → logprob: -4.327181339263916
    10. 'class' → logprob: -4.452181339263916

Token 27: ' array' (ID: 2644)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.6607763767242432
    2. ' os' → logprob: -1.9107763767242432
    3. 'sys' → logprob: -2.035776376724243
    4. ' functools' → logprob: -2.535776376724243
    5. 'os' → logprob: -2.785776376724243
    6. 'random' → logprob: -3.660776376724243
    7. ' random' → logprob: -4.160776138305664
    8. ' operator' → logprob: -4.910776138305664
    9. 'operator' → logprob: -5.035776138305664
    10. 'fun' → logprob: -6.035776138305664

Token 28: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6692199110984802
    2. '<|end|>' → logprob: -1.169219970703125
    3. '[' → logprob: -2.919219970703125
    4. 'import' → logprob: -3.044219970703125
    5. '
' → logprob: -3.919219970703125
    6. '<|end|>' → logprob: -4.794219970703125
    7. ',' → logprob: -5.044219970703125
    8. '\' → logprob: -5.294219970703125
    9. '

' → logprob: -5.294219970703125
    10. '```' → logprob: -5.294219970703125

Token 29: 'import' (ID: 561)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 30: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.7984416484832764
    2. ' os' → logprob: -1.1734416484832764
    3. ' sys' → logprob: -1.9234416484832764
    4. ' functools' → logprob: -3.5484416484832764
    5. ' numpy' → logprob: -4.0484418869018555
    6. 'os' → logprob: -4.1734418869018555
    7. 'bis' → logprob: -4.4234418869018555
    8. 'sys' → logprob: -5.0484418869018555
    9. ' random' → logprob: -5.5484418869018555
    10. ' copy' → logprob: -5.7984418869018555

Token 31: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -7.584239938296378e-06
    2. 'e' → logprob: -12.875007629394531
    3. 'ected' → logprob: -13.500007629394531
    4. 'ec' → logprob: -13.875007629394531
    5. 'ectl' → logprob: -13.875007629394531
    6. '```' → logprob: -14.125007629394531
    7. 't' → logprob: -15.500007629394531
    8. 'ection' → logprob: -15.625007629394531
    9. 'ector' → logprob: -15.750007629394531
    10. 'ects' → logprob: -15.875007629394531

Token 32: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 33: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.09144006669521332
    2. '#' → logprob: -4.216440200805664
    3. ',' → logprob: -4.341440200805664
    4. '
' → logprob: -4.341440200805664
    5. '_' → logprob: -4.716440200805664
    6. '<|end|>' → logprob: -4.966440200805664
    7. 'import' → logprob: -5.466440200805664
    8. '[' → logprob: -5.466440200805664
    9. '\n' → logprob: -5.466440200805664
    10. '\' → logprob: -5.591440200805664

Token 34: ' sys' (ID: 12228)
  Prédit: ' functools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' functools' → logprob: -1.1964503526687622
    2. ' sys' → logprob: -1.5714503526687622
    3. 'random' → logprob: -1.6964503526687622
    4. 'sys' → logprob: -2.3214502334594727
    5. ' random' → logprob: -2.3214502334594727
    6. 'copy' → logprob: -3.5714502334594727
    7. ' copy' → logprob: -3.6964502334594727
    8. 'operator' → logprob: -4.446450233459473
    9. ' operator' → logprob: -4.696450233459473
    10. 'fun' → logprob: -5.196450233459473

Token 35: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.12672491371631622
    2. '
' → logprob: -2.5017249584198
    3. '<|end|>' → logprob: -4.251724720001221
    4. '

' → logprob: -5.001724720001221
    5. '\n' → logprob: -5.001724720001221
    6. '#' → logprob: -6.376724720001221
    7. '```' → logprob: -6.876724720001221
    8. '.
' → logprob: -7.001724720001221
    9. '\' → logprob: -7.251724720001221
    10. '.

' → logprob: -7.376724720001221

Token 36: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3095794916152954
    2. '.' → logprob: -2.309579372406006
    3. '#' → logprob: -2.934579372406006
    4. '

' → logprob: -3.559579372406006
    5. '\n' → logprob: -3.559579372406006
    6. '' → logprob: -3.809579372406006
    7. 'def' → logprob: -4.559579372406006
    8. '<|end|>' → logprob: -4.934579372406006
    9. '\' → logprob: -5.184579372406006
    10. 'd' → logprob: -6.059579372406006

Token 37: ' copy' (ID: 5150)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.5773031711578369
    2. ' os' → logprob: -0.8273031711578369
    3. ' functools' → logprob: -7.577302932739258
    4. 'operator' → logprob: -8.202302932739258
    5. 'io' → logprob: -8.577302932739258
    6. 'random' → logprob: -8.952302932739258
    7. ' operator' → logprob: -9.452302932739258
    8. '"os' → logprob: -9.952302932739258
    9. ' random' → logprob: -10.202302932739258
    10. ' io' → logprob: -10.202302932739258

Token 38: ' as' (ID: 472)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3309582769870758
    2. '
' → logprob: -1.8309582471847534
    3. '

' → logprob: -2.830958366394043
    4. '<|end|>' → logprob: -3.580958366394043
    5. '.

' → logprob: -4.955958366394043
    6. '\n' → logprob: -5.330958366394043
    7. '' → logprob: -5.330958366394043
    8. '.
' → logprob: -5.705958366394043
    9. '
' → logprob: -5.955958366394043
    10. '```' → logprob: -6.080958366394043

Token 39: ' cp' (ID: 27776)
  Prédit: ' cp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cp' → logprob: -0.07808514684438705
    2. 'cpy' → logprob: -2.82808518409729
    3. 'cp' → logprob: -4.203084945678711
    4. 'copy' → logprob: -8.328084945678711
    5. ' copy' → logprob: -8.578084945678711
    6. ' ' → logprob: -8.703084945678711
    7. ' deepcopy' → logprob: -8.703084945678711
    8. ' c' → logprob: -9.203084945678711
    9. 'cop' → logprob: -10.203084945678711
    10. ' co' → logprob: -10.328084945678711

Token 40: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18116337060928345
    2. '<|end|>' → logprob: -2.6811633110046387
    3. '

' → logprob: -3.1811633110046387
    4. '.' → logprob: -3.6811633110046387
    5. '' → logprob: -5.056163311004639
    6. 'import' → logprob: -5.181163311004639
    7. '#' → logprob: -5.306163311004639
    8. '\n' → logprob: -5.806163311004639
    9. 'def' → logprob: -6.431163311004639
    10. '
' → logprob: -6.431163311004639

Token 41: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2287295162677765
    2. '

' → logprob: -1.853729486465454
    3. '.' → logprob: -4.478729724884033
    4. '<|end|>' → logprob: -4.853729724884033
    5. '#' → logprob: -5.103729724884033
    6. '' → logprob: -5.228729724884033
    7. '
' → logprob: -5.603729724884033
    8. '\n' → logprob: -5.853729724884033
    9. 'import' → logprob: -6.103729724884033
    10. ' 

' → logprob: -6.478729724884033

Token 42: ' functools' (ID: 142636)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'os' → logprob: -1.965206503868103
    2. 'operator' → logprob: -1.965206503868103
    3. ' numpy' → logprob: -1.965206503868103
    4. ' functools' → logprob: -1.965206503868103
    5. ' os' → logprob: -2.2152066230773926
    6. 'numpy' → logprob: -2.3402066230773926
    7. 'random' → logprob: -2.7152066230773926
    8. ' operator' → logprob: -2.8402066230773926
    9. ' random' → logprob: -3.4652066230773926
    10. 'json' → logprob: -4.590206623077393

Token 43: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 44: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.018473928794264793
    2. '<|end|>' → logprob: -5.393474102020264
    3. '
' → logprob: -5.643474102020264
    4. ',' → logprob: -6.143474102020264
    5. 'import' → logprob: -6.268474102020264
    6. 'def' → logprob: -6.768474102020264
    7. '\' → logprob: -7.018474102020264
    8. '#' → logprob: -7.018474102020264
    9. '\n' → logprob: -7.518474102020264
    10. '.
' → logprob: -7.893474102020264

Token 45: ' time' (ID: 1058)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.20396974682807922
    2. 'operator' → logprob: -1.7039697170257568
    3. ' random' → logprob: -6.953969955444336
    4. ' os' → logprob: -7.203969955444336
    5. 'os' → logprob: -7.828969955444336
    6. 'random' → logprob: -8.328969955444336
    7. ' time' → logprob: -10.328969955444336
    8. ' threading' → logprob: -10.328969955444336
    9. ' math' → logprob: -10.453969955444336
    10. ' decimal' → logprob: -10.953969955444336

Token 46: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8479584455490112
    2. '
' → logprob: -1.7229584455490112
    3. '<|end|>' → logprob: -1.9729584455490112
    4. '\' → logprob: -2.097958564758301
    5. '.' → logprob: -2.472958564758301
    6. '#' → logprob: -3.972958564758301
    7. 'def' → logprob: -5.222958564758301
    8. 'import' → logprob: -5.722958564758301
    9. '

' → logprob: -5.847958564758301
    10. '' → logprob: -5.972958564758301

Token 47: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.32093772292137146
    2. '\n' → logprob: -2.6959376335144043
    3. 'def' → logprob: -2.9459376335144043
    4. '#' → logprob: -3.0709376335144043
    5. '

' → logprob: -3.3209376335144043
    6. '<|end|>' → logprob: -3.5709376335144043
    7. '\' → logprob: -4.445937633514404
    8. 'd' → logprob: -4.820937633514404
    9. '.' → logprob: -4.945937633514404
    10. '' → logprob: -5.570937633514404

Token 48: ' random' (ID: 7526)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.9183477759361267
    2. ' random' → logprob: -1.1683478355407715
    3. ' operator' → logprob: -2.1683478355407715
    4. 'random' → logprob: -2.9183478355407715
    5. ' datetime' → logprob: -3.0433478355407715
    6. 'os' → logprob: -3.2933478355407715
    7. 'operator' → logprob: -4.0433478355407715
    8. ' threading' → logprob: -4.2933478355407715
    9. 'datetime' → logprob: -5.5433478355407715
    10. ' json' → logprob: -8.293347358703613

Token 49: ' as' (ID: 472)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3076382875442505
    2. '
' → logprob: -2.182638168334961
    3. '<|end|>' → logprob: -2.432638168334961
    4. '\n' → logprob: -3.557638168334961
    5. '

' → logprob: -4.307638168334961
    6. '\' → logprob: -5.057638168334961
    7. '' → logprob: -5.682638168334961
    8. '#' → logprob: -5.932638168334961
    9. 'def' → logprob: -6.557638168334961
    10. 'n' → logprob: -6.807638168334961

Token 50: ' rnd' (ID: 80668)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.3536410927772522
    2. ' rnd' → logprob: -1.8536410331726074
    3. ' rd' → logprob: -3.3536410331726074
    4. ' rand' → logprob: -3.4786410331726074
    5. ' ra' → logprob: -3.7286410331726074
    6. ' rn' → logprob: -4.103641033172607
    7. ' ' → logprob: -4.603641033172607
    8. ' ran' → logprob: -4.853641033172607
    9. 'r' → logprob: -5.228641033172607
    10. ' random' → logprob: -5.353641033172607

Token 51: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.1902788877487183
    2. '
' → logprob: -1.3152788877487183
    3. '<|end|>' → logprob: -1.3152788877487183
    4. '\n' → logprob: -2.815279006958008
    5. '#' → logprob: -3.815279006958008
    6. '' → logprob: -4.190279006958008
    7. '\' → logprob: -4.440279006958008
    8. '

' → logprob: -4.440279006958008
    9. 'n' → logprob: -4.565279006958008
    10. '<|end|>' → logprob: -5.565279006958008

Token 52: 'sys' (ID: 17324)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4554142653942108
    2. '#' → logprob: -2.080414295196533
    3. '

' → logprob: -2.580414295196533
    4. 'd' → logprob: -2.705414295196533
    5. 'def' → logprob: -3.330414295196533
    6. '' → logprob: -4.330414295196533
    7. '\n' → logprob: -4.455414295196533
    8. '\' → logprob: -5.455414295196533
    9. 'n' → logprob: -5.580414295196533
    10. '.' → logprob: -5.580414295196533

Token 53: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.8670179997570813e-05
    2. ' .' → logprob: -11.625019073486328
    3. '.readline' → logprob: -13.875019073486328
    4. '.setdefault' → logprob: -14.000019073486328
    5. '.exit' → logprob: -14.125019073486328
    6. '.user' → logprob: -14.125019073486328
    7. '.`' → logprob: -14.500019073486328
    8. '.stdout' → logprob: -14.750019073486328
    9. '."""' → logprob: -14.750019073486328
    10. '.​' → logprob: -14.750019073486328

Token 54: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -1.052069902420044
    2. '_limit' → logprob: -1.302069902420044
    3. '_rec' → logprob: -2.677069902420044
    4. '_' → logprob: -2.927069902420044
    5. '_exc' → logprob: -3.302069902420044
    6. '_stack' → logprob: -3.677069902420044
    7. 'attr' → logprob: -4.177069664001465
    8. '_attr' → logprob: -4.177069664001465
    9. '_int' → logprob: -4.302069664001465
    10. '_max' → logprob: -4.427069664001465

Token 55: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.013631422072649002
    2. 'limit' → logprob: -4.638631343841553
    3. 'urs' → logprob: -6.013631343841553
    4. 'ursive' → logprob: -7.388631343841553
    5. 'ur' → logprob: -8.138631820678711
    6. '_limit' → logprob: -8.513631820678711
    7. 'ut' → logprob: -9.138631820678711
    8. 'urf' → logprob: -9.888631820678711
    9. 'utf' → logprob: -10.513631820678711
    10. 'urse' → logprob: -10.888631820678711

Token 56: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.0007151735480874777
    2. '_limit' → logprob: -7.250715255737305
    3. ' limit' → logprob: -12.750715255737305
    4. 'lim' → logprob: -13.750715255737305
    5. 'depth' → logprob: -14.500715255737305
    6. '-limit' → logprob: -15.000715255737305
    7. '_depth' → logprob: -16.250715255737305
    8. '(limit' → logprob: -16.250715255737305
    9. '_LIMIT' → logprob: -16.375715255737305
    10. 'Limit' → logprob: -16.500715255737305

Token 57: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.2200749754119897e-06
    2. '(
' → logprob: -14.000001907348633
    3. '(

' → logprob: -14.500001907348633
    4. '((' → logprob: -15.000001907348633
    5. ' (' → logprob: -15.125001907348633
    6. '()' → logprob: -16.625001907348633
    7. '("("' → logprob: -16.625001907348633
    8. '(\' → logprob: -17.875001907348633
    9. '\(' → logprob: -18.375001907348633
    10. '(
' → logprob: -18.875001907348633

Token 58: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.10027308762073517
    2. '100' → logprob: -2.3502731323242188
    3. ' ' → logprob: -10.725273132324219
    4. '1' → logprob: -10.725273132324219
    5. '999' → logprob: -11.725273132324219
    6. '400' → logprob: -12.225273132324219
    7. '500' → logprob: -12.725273132324219
    8. '9' → logprob: -13.100273132324219
    9. '300' → logprob: -13.350273132324219
    10. '200' → logprob: -13.850273132324219

Token 59: '000' (ID: 1302)
  Prédit: '00'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.47408777475357056
    2. '000' → logprob: -0.9740877747535706
    3. '0' → logprob: -11.474087715148926
    4. '007' → logprob: -16.224088668823242
    5. '050' → logprob: -16.224088668823242
    6. '006' → logprob: -16.849088668823242
    7. '_' → logprob: -17.099088668823242
    8. '009' → logprob: -17.099088668823242
    9. '001' → logprob: -17.224088668823242
    10. '005' → logprob: -17.599088668823242

Token 60: '00' (ID: 504)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2014213353395462
    2. '0' → logprob: -1.7014213800430298
    3. '1' → logprob: -12.951421737670898
    4. ')
' → logprob: -12.951421737670898
    5. ' )' → logprob: -13.701421737670898
    6. '))' → logprob: -14.576421737670898
    7. '9' → logprob: -14.701421737670898
    8. '00' → logprob: -15.701421737670898
    9. '')' → logprob: -15.826421737670898
    10. '_' → logprob: -16.3264217376709

Token 61: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ')
' → logprob: -14.500000953674316
    3. ' )' → logprob: -14.625000953674316
    4. '))' → logprob: -18.125001907348633
    5. ')
' → logprob: -18.750001907348633
    6. ')`' → logprob: -18.875001907348633
    7. '0' → logprob: -19.125001907348633
    8. ')

' → logprob: -19.125001907348633
    9. '),' → logprob: -19.750001907348633
    10. '
' → logprob: -20.500001907348633

Token 62: 'INF' (ID: 64358)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.25575312972068787
    2. '
' → logprob: -1.5057531595230103
    3. '
' → logprob: -6.505753040313721
    4. 'def' → logprob: -7.130753040313721
    5. 'class' → logprob: -7.505753040313721
    6. '\n' → logprob: -8.505753517150879
    7. '' → logprob: -8.630753517150879
    8. '


' → logprob: -8.880753517150879
    9. ' 

' → logprob: -9.130753517150879
    10. '\' → logprob: -9.380753517150879

Token 63: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47669368982315063
    2. '=' → logprob: -0.9766936898231506
    3. '_' → logprob: -6.726693630218506
    4. ',' → logprob: -7.601693630218506
    5. '<|end|>' → logprob: -7.851693630218506
    6. ')' → logprob: -8.476694107055664
    7. ' ' → logprob: -8.726694107055664
    8. '.' → logprob: -10.851694107055664
    9. ' ,' → logprob: -10.851694107055664
    10. ' =
' → logprob: -10.976694107055664

Token 64: ' float' (ID: 4428)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15987947583198547
    2. '10' → logprob: -2.659879446029663
    3. ' float' → logprob: -2.784879446029663
    4. 'float' → logprob: -4.159879684448242
    5. '1' → logprob: -8.409879684448242
    6. '100' → logprob: -9.284879684448242
    7. ' math' → logprob: -10.784879684448242
    8. ' int' → logprob: -10.909879684448242
    9. '	float' → logprob: -11.409879684448242
    10. 'int' → logprob: -11.409879684448242

Token 65: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.00020663968462031335
    2. '(' → logprob: -8.87520694732666
    3. '("' → logprob: -10.25020694732666
    4. ''' → logprob: -10.87520694732666
    5. '('+' → logprob: -12.00020694732666
    6. '('.' → logprob: -13.00020694732666
    7. '('.')' → logprob: -13.75020694732666
    8. ''in' → logprob: -14.00020694732666
    9. '"' → logprob: -14.62520694732666
    10. '('-' → logprob: -14.75020694732666

Token 66: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.0003986144147347659
    2. 'in' → logprob: -8.625398635864258
    3. ''in' → logprob: -9.125398635864258
    4. '"' → logprob: -10.375398635864258
    5. ''' → logprob: -10.750398635864258
    6. '-inf' → logprob: -11.000398635864258
    7. 'info' → logprob: -11.500398635864258
    8. ' inf' → logprob: -12.000398635864258
    9. 'INF' → logprob: -12.375398635864258
    10. 'i' → logprob: -12.875398635864258

Token 67: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.038048721849918365
    2. '')' → logprob: -3.28804874420166
    3. ' )' → logprob: -12.78804874420166
    4. '")' → logprob: -13.16304874420166
    5. ')'' → logprob: -13.66304874420166
    6. '))' → logprob: -14.66304874420166
    7. '`)' → logprob: -15.91304874420166
    8. ')'),' → logprob: -16.163047790527344
    9. '()' → logprob: -16.288047790527344
    10. '),' → logprob: -16.413047790527344

Token 68: 'EPS' (ID: 82793)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24558594822883606
    2. 'def' → logprob: -2.2455859184265137
    3. '

' → logprob: -2.8705859184265137
    4. 'class' → logprob: -3.2455859184265137
    5. '
' → logprob: -4.745585918426514
    6. '' → logprob: -5.870585918426514
    7. '#' → logprob: -6.745585918426514
    8. '\n' → logprob: -7.245585918426514
    9. '\' → logprob: -7.370585918426514
    10. 'd' → logprob: -7.620585918426514

Token 69: 'ILON' (ID: 137330)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5254616141319275
    2. '=' → logprob: -1.2754616737365723
    3. ')' → logprob: -3.0254616737365723
    4. ' )' → logprob: -3.2754616737365723
    5. '_' → logprob: -3.6504616737365723
    6. ' ' → logprob: -5.025461673736572
    7. ' =)' → logprob: -5.525461673736572
    8. '.' → logprob: -6.275461673736572
    9. '<|end|>' → logprob: -6.275461673736572
    10. ' _' → logprob: -6.525461673736572

Token 70: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002298586070537567
    2. '=' → logprob: -6.127298355102539
    3. ' ' → logprob: -9.377298355102539
    4. '_' → logprob: -10.877298355102539
    5. ' _' → logprob: -12.752298355102539
    6. ' ,' → logprob: -13.752298355102539
    7. ' ' → logprob: -13.877298355102539
    8. ' =)' → logprob: -14.002298355102539
    9. ' )' → logprob: -14.377298355102539
    10. ' =
' → logprob: -14.752298355102539

Token 71: ' pow' (ID: 9779)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.34848716855049133
    2. ' ' → logprob: -1.223487138748169
    3. '10' → logprob: -10.59848690032959
    4. '0' → logprob: -11.09848690032959
    5. ' ' → logprob: -13.22348690032959
    6. '   ' → logprob: -15.47348690032959
    7. '  ' → logprob: -16.285987854003906
    8. '2' → logprob: -16.535987854003906
    9. '```' → logprob: -17.035987854003906
    10. '    ' → logprob: -17.473487854003906

Token 72: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.6060808522743173e-05
    2. '(E' → logprob: -12.125025749206543
    3. '(.' → logprob: -12.250025749206543
    4. '10' → logprob: -12.250025749206543
    5. '(
' → logprob: -13.000025749206543
    6. '(-' → logprob: -13.000025749206543
    7. '(e' → logprob: -13.625025749206543
    8. '2' → logprob: -13.750025749206543
    9. '((' → logprob: -14.000025749206543
    10. ' (' → logprob: -14.125025749206543

Token 73: '10' (ID: 702)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.311970978975296
    2. '10' → logprob: -1.4369709491729736
    3. '(' → logprob: -3.8119709491729736
    4. '0' → logprob: -5.436971187591553
    5. '1' → logprob: -5.686971187591553
    6. ')' → logprob: -7.811971187591553
    7. ' ' → logprob: -9.936970710754395
    8. '-' → logprob: -10.561970710754395
    9. '(
' → logprob: -11.561970710754395
    10. '```' → logprob: -12.686970710754395

Token 74: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -4.320199877838604e-07
    2. ' -' → logprob: -15.625
    3. '-)' → logprob: -16.5
    4. ')' → logprob: -17.375
    5. '```' → logprob: -17.5
    6. '−' → logprob: -18.0
    7. '-E' → logprob: -18.0
    8. '-​' → logprob: -18.25
    9. '**' → logprob: -19.0
    10. '(-' → logprob: -19.125

Token 75: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: 0.0
    2. '(-' → logprob: -18.0
    3. ' -' → logprob: -18.125
    4. '−' → logprob: -19.5
    5. '```' → logprob: -19.875
    6. '-)' → logprob: -20.5
    7. '{-' → logprob: -20.625
    8. '

' → logprob: -21.125
    9. '-ħ' → logprob: -21.25
    10. '<|end|>' → logprob: -21.375

Token 76: '10' (ID: 702)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.06841140985488892
    2. '7' → logprob: -3.443411350250244
    3. '12' → logprob: -3.943411350250244
    4. '10' → logprob: -4.693411350250244
    5. '8' → logprob: -5.943411350250244
    6. '15' → logprob: -6.568411350250244
    7. '6' → logprob: -6.568411350250244
    8. '14' → logprob: -8.943411827087402
    9. '5' → logprob: -10.818411827087402
    10. '13' → logprob: -11.068411827087402

Token 77: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.704065213445574e-05
    2. ' )' → logprob: -10.000046730041504
    3. ')
' → logprob: -14.000046730041504
    4. '6' → logprob: -15.125046730041504
    5. '))' → logprob: -16.75004768371582
    6. ')

' → logprob: -17.00004768371582
    7. '),' → logprob: -17.12504768371582
    8. ')
' → logprob: -17.12504768371582
    9. '0' → logprob: -17.25004768371582
    10. '')' → logprob: -17.62504768371582

Token 78: 'MOD' (ID: 52135)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.314020574092865
    2. '

' → logprob: -1.9390206336975098
    3. 'def' → logprob: -2.1890206336975098
    4. 'class' → logprob: -4.81402063369751
    5. 'd' → logprob: -6.56402063369751
    6. '
' → logprob: -6.81402063369751
    7. '' → logprob: -6.81402063369751
    8. '#' → logprob: -7.56402063369751
    9. '\' → logprob: -7.68902063369751
    10. '\n' → logprob: -8.439020156860352

Token 79: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026377519592642784
    2. '=' → logprob: -3.9013774394989014
    3. ' ' → logprob: -5.1513776779174805
    4. ' =
' → logprob: -11.77637767791748
    5. ' =)' → logprob: -11.77637767791748
    6. '_' → logprob: -12.52637767791748
    7. ' )' → logprob: -13.02637767791748
    8. ' ,' → logprob: -13.40137767791748
    9. ' ' → logprob: -14.02637767791748
    10. '  ' → logprob: -14.15137767791748

Token 80: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0034585874527692795
    2. '=' → logprob: -5.878458499908447
    3. ' ' → logprob: -7.378458499908447
    4. ' =
' → logprob: -11.378458976745605
    5. '_' → logprob: -12.503458976745605
    6. ' =)' → logprob: -12.753458976745605
    7. '1' → logprob: -13.003458976745605
    8. ',' → logprob: -13.253458976745605
    9. ' ,' → logprob: -13.378458976745605
    10. ' ' → logprob: -13.628458976745605

Token 81: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13769051432609558
    2. '10' → logprob: -2.512690544128418
    3. '100' → logprob: -3.137690544128418
    4. '998' → logprob: -5.637690544128418
    5. '1' → logprob: -7.637690544128418
    6. '9' → logprob: -10.387690544128418
    7. 'int' → logprob: -10.512690544128418
    8. '999' → logprob: -10.637690544128418
    9. '2' → logprob: -11.762690544128418
    10. ' int' → logprob: -11.887690544128418

Token 82: '10' (ID: 702)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.09878310561180115
    2. '10' → logprob: -2.598783016204834
    3. '998' → logprob: -3.973783016204834
    4. '1' → logprob: -7.973783016204834
    5. '999' → logprob: -8.223783493041992
    6. '9' → logprob: -8.348783493041992
    7. '2' → logprob: -11.598783493041992
    8. '(' → logprob: -11.723783493041992
    9. 'int' → logprob: -11.973783493041992
    10. '123' → logprob: -11.973783493041992

Token 83: ' **' (ID: 6240)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.07039518654346466
    2. '09' → logprob: -2.6953952312469482
    3. '**' → logprob: -8.195395469665527
    4. '000' → logprob: -9.070395469665527
    5. '00' → logprob: -10.820395469665527
    6. '07' → logprob: -10.820395469665527
    7. '7' → logprob: -11.695395469665527
    8. '009' → logprob: -12.070395469665527
    9. ' ' → logprob: -12.320395469665527
    10. '0' → logprob: -12.820395469665527

Token 84: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.375000953674316
    3. '09' → logprob: -15.375000953674316
    4. '+' → logprob: -17.25
    5. '10' → logprob: -18.25
    6. '0' → logprob: -18.75
    7. '18' → logprob: -19.0
    8. '7' → logprob: -19.5
    9. '19' → logprob: -20.0
    10. '12' → logprob: -20.0

Token 85: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -4.320199877838604e-07
    2. '09' → logprob: -15.375
    3. '10' → logprob: -16.375
    4. '18' → logprob: -16.625
    5. '+' → logprob: -17.75
    6. '7' → logprob: -17.875
    7. '8' → logprob: -18.0
    8. '12' → logprob: -18.5
    9. '15' → logprob: -18.625
    10. ' ' → logprob: -18.75

Token 86: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0010444821091368794
    2. ' +' → logprob: -6.876044273376465
    3. '7' → logprob: -11.751044273376465
    4. '+
' → logprob: -12.751044273376465
    5. '+

' → logprob: -15.001044273376465
    6. '＋' → logprob: -15.751044273376465
    7. '9' → logprob: -16.62604522705078
    8. ' +
' → logprob: -16.75104522705078
    9. ' plus' → logprob: -16.75104522705078
    10. '19' → logprob: -16.87604522705078

Token 87: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -9.088346359931165e-07
    2. '+' → logprob: -15.000000953674316
    3. ' ' → logprob: -15.125000953674316
    4. '9' → logprob: -16.375
    5. '07' → logprob: -17.625
    6. '```' → logprob: -17.625
    7. '17' → logprob: -18.75
    8. '   ' → logprob: -18.75
    9. '79' → logprob: -18.75
    10. '19' → logprob: -19.0

Token 88: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '9' → logprob: -18.0
    3. ' ' → logprob: -19.375
    4. '07' → logprob: -20.125
    5. '```' → logprob: -20.125
    6. '+' → logprob: -20.25
    7. '   ' → logprob: -20.625
    8. '79' → logprob: -21.25
    9. '

' → logprob: -21.5
    10. '17' → logprob: -21.875

Token 89: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07057394087314606
    2. '

' → logprob: -2.8205740451812744
    3. '
' → logprob: -5.570573806762695
    4. '' → logprob: -5.945573806762695
    5. 'def' → logprob: -6.570573806762695
    6. '#' → logprob: -8.195573806762695
    7. '\n' → logprob: -8.945573806762695
    8. '


' → logprob: -8.945573806762695
    9. '\' → logprob: -10.195573806762695
    10. 'newline' → logprob: -10.570573806762695

Token 90: 'm' (ID: 76)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.4413939416408539
    2. '
' → logprob: -1.0663939714431763
    3. '
' → logprob: -4.816393852233887
    4. 'def' → logprob: -6.066393852233887
    5. '' → logprob: -7.191393852233887
    6. '


' → logprob: -7.941393852233887
    7. '\n' → logprob: -8.066393852233887
    8. '#' → logprob: -8.316393852233887
    9. '

' → logprob: -8.941393852233887
    10. '\' → logprob: -9.691393852233887

Token 91: '2' (ID: 17)
  Prédit: 'OD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'OD' → logprob: -0.023341214284300804
    2. 'O' → logprob: -3.773341178894043
    3. '_OD' → logprob: -10.773341178894043
    4. 'ODE' → logprob: -11.148341178894043
    5. 'od' → logprob: -11.398341178894043
    6. '_od' → logprob: -11.648341178894043
    7. '0' → logprob: -12.023341178894043
    8. ' OD' → logprob: -12.273341178894043
    9. 'ODS' → logprob: -12.898341178894043
    10. 'A' → logprob: -13.023341178894043

Token 92: ' =' (ID: 314)
  Prédit: 'OD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OD' → logprob: -0.026550263166427612
    2. 'O' → logprob: -3.77655029296875
    3. '0' → logprob: -5.77655029296875
    4. ' =' → logprob: -10.15155029296875
    5. '=' → logprob: -10.40155029296875
    6. '_OD' → logprob: -11.02655029296875
    7. 'ODE' → logprob: -11.15155029296875
    8. 'ODULE' → logprob: -11.27655029296875
    9. '2' → logprob: -11.40155029296875
    10. 'ОД' → logprob: -11.65155029296875

Token 93: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.035414036363363266
    2. '10' → logprob: -4.410414218902588
    3. '998' → logprob: -5.035414218902588
    4. ' MOD' → logprob: -5.660414218902588
    5. 'pow' → logprob: -6.035414218902588
    6. ' (' → logprob: -6.035414218902588
    7. '0' → logprob: -6.535414218902588
    8. '100' → logprob: -6.535414218902588
    9. '2' → logprob: -6.535414218902588
    10. 'MOD' → logprob: -6.910414218902588

Token 94: '998' (ID: 34589)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.4658430218696594
    2. ' ' → logprob: -1.5908429622650146
    3. '998' → logprob: -2.3408429622650146
    4. '100' → logprob: -3.3408429622650146
    5. 'MOD' → logprob: -4.465843200683594
    6. '2' → logprob: -4.965843200683594
    7. ' MOD' → logprob: -5.590843200683594
    8. 'pow' → logprob: -5.965843200683594
    9. '(' → logprob: -6.090843200683594
    10. ' (' → logprob: -6.590843200683594

Token 95: '244' (ID: 25291)
  Prédit: '244'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '244' → logprob: -3.128163257315464e-07
    2. '243' → logprob: -15.875
    3. '247' → logprob: -17.5
    4. '344' → logprob: -17.625
    5. '544' → logprob: -18.5
    6. '245' → logprob: -18.5
    7. '29' → logprob: -18.625
    8. '242' → logprob: -18.75
    9. '444' → logprob: -18.875
    10. '224' → logprob: -19.25

Token 96: '353' (ID: 32996)
  Prédit: '353'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '353' → logprob: -0.004078639671206474
    2. '853' → logprob: -5.5040788650512695
    3. '3' → logprob: -16.629077911376953
    4. '857' → logprob: -17.254077911376953
    5. '433' → logprob: -17.379077911376953
    6. '349' → logprob: -17.879077911376953
    7. '753' → logprob: -18.629077911376953
    8. '85' → logprob: -18.629077911376953
    9. 'a' → logprob: -19.254077911376953
    10. '351' → logprob: -19.254077911376953

Token 97: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01661488600075245
    2. '

' → logprob: -4.64161491394043
    3. '
' → logprob: -5.51661491394043
    4. '' → logprob: -6.51661491394043
    5. 'def' → logprob: -7.51661491394043
    6. '#' → logprob: -8.01661491394043
    7. '\n' → logprob: -9.26661491394043
    8. ' 
' → logprob: -9.39161491394043
    9. 'n' → logprob: -9.39161491394043
    10. '

' → logprob: -10.01661491394043

Token 98: 'steps' (ID: 27176)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4485355615615845
    2. 'd' → logprob: -1.5735355615615845
    3. 'def' → logprob: -1.9485355615615845
    4. '

' → logprob: -5.448535442352295
    5. '\' → logprob: -5.948535442352295
    6. 'n' → logprob: -6.698535442352295
    7. '' → logprob: -6.823535442352295
    8. '#' → logprob: -6.948535442352295
    9. '
' → logprob: -7.448535442352295
    10. 'class' → logprob: -8.073535919189453

Token 99: '4' (ID: 19)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11201988160610199
    2. '=' → logprob: -2.7370197772979736
    3. '_' → logprob: -3.2370197772979736
    4. 's' → logprob: -8.112019538879395
    5. '_steps' → logprob: -8.487019538879395
    6. ' ' → logprob: -8.612019538879395
    7. '[' → logprob: -8.737019538879395
    8. ',' → logprob: -8.737019538879395
    9. '=[]' → logprob: -8.862019538879395
    10. '_space' → logprob: -8.987019538879395

Token 100: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005950483493506908
    2. '=' → logprob: -5.130950450897217
    3. ' ' → logprob: -11.255950927734375
    4. ' =[' → logprob: -13.005950927734375
    5. 'dire' → logprob: -13.755950927734375
    6. 'Directions' → logprob: -13.880950927734375
    7. ' =
' → logprob: -13.880950927734375
    8. '=[' → logprob: -14.255950927734375
    9. '_offsets' → logprob: -14.630950927734375
    10. '4' → logprob: -14.755950927734375

Token 101: ' [' (ID: 723)
  Prédit: ' [('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [(' → logprob: -0.31503868103027344
    2. '[(' → logprob: -1.3150386810302734
    3. ' [' → logprob: -6.565038681030273
    4. '[' → logprob: -8.940038681030273
    5. ' ((' → logprob: -9.065038681030273
    6. ' ' → logprob: -10.440038681030273
    7. '[((' → logprob: -10.440038681030273
    8. ' [
' → logprob: -10.940038681030273
    9. '((' → logprob: -11.190038681030273
    10. '[
' → logprob: -11.440038681030273

Token 102: '(-' (ID: 8087)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007248322479426861
    2. '(-' → logprob: -5.007248401641846
    3. '[' → logprob: -8.132247924804688
    4. ' (' → logprob: -8.382247924804688
    5. '[-' → logprob: -11.882247924804688
    6. '(+' → logprob: -13.132247924804688
    7. ' (-' → logprob: -15.007247924804688
    8. ' [' → logprob: -15.507247924804688
    9. '[(' → logprob: -15.882247924804688
    10. '0' → logprob: -16.007247924804688

Token 103: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.625003814697266
    3. '0' → logprob: -16.750003814697266
    4. '2' → logprob: -17.375003814697266
    5. '-' → logprob: -18.375003814697266
    6. '3' → logprob: -18.937503814697266
    7. ')' → logprob: -19.187503814697266
    8. '4' → logprob: -19.375003814697266
    9. '
' → logprob: -19.687503814697266
    10. ',' → logprob: -19.750003814697266

Token 104: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001439459010725841
    2. ' ,' → logprob: -8.875144004821777
    3. '0' → logprob: -12.500144004821777
    4. ',
' → logprob: -15.750144004821777
    5. '),' → logprob: -15.875144004821777
    6. ',),' → logprob: -17.50014305114746
    7. '),(' → logprob: -17.62514305114746
    8. ')' → logprob: -17.62514305114746
    9. '<|end|>' → logprob: -18.00014305114746
    10. '',' → logprob: -18.37514305114746

Token 105: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01416398212313652
    2. ' ' → logprob: -4.264163970947266
    3. ')' → logprob: -14.764163970947266
    4. ' ' → logprob: -16.514163970947266
    5. ',' → logprob: -18.139163970947266
    6. '
' → logprob: -18.264163970947266
    7. ' 
' → logprob: -18.389163970947266
    8. '  ' → logprob: -18.951663970947266
    9. ' )' → logprob: -19.264163970947266
    10. '۰' → logprob: -19.451663970947266

Token 106: '),(' (ID: 54876)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.020970290526747704
    2. '),(' → logprob: -3.895970344543457
    3. ')' → logprob: -8.270970344543457
    4. '),
' → logprob: -9.145970344543457
    5. ' ),' → logprob: -10.145970344543457
    6. '),

' → logprob: -11.270970344543457
    7. ',' → logprob: -12.020970344543457
    8. ',),' → logprob: -12.020970344543457
    9. '),
' → logprob: -14.520970344543457
    10. ''),' → logprob: -14.895970344543457

Token 107: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010660802945494652
    2. '0' → logprob: -4.635660648345947
    3. ' ' → logprob: -7.010660648345947
    4. '-' → logprob: -15.010661125183105
    5. ' ' → logprob: -15.010661125183105
    6. '+' → logprob: -15.135661125183105
    7. '   ' → logprob: -15.323161125183105
    8. '

' → logprob: -15.323161125183105
    9. '  ' → logprob: -15.448161125183105
    10. '```' → logprob: -16.13566017150879

Token 108: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3132764399051666
    2. ',-' → logprob: -1.3132764101028442
    3. '1' → logprob: -12.313276290893555
    4. ' ,' → logprob: -12.688276290893555
    5. ' ,-' → logprob: -12.688276290893555
    6. ',+' → logprob: -13.313276290893555
    7. ',-

' → logprob: -14.188276290893555
    8. ',-
' → logprob: -14.688276290893555
    9. '-' → logprob: -14.813276290893555
    10. ',
' → logprob: -15.188276290893555

Token 109: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07898012548685074
    2. '1' → logprob: -2.5789802074432373
    3. ' ' → logprob: -10.078980445861816
    4. ' -' → logprob: -10.078980445861816
    5. '−' → logprob: -12.828980445861816
    6. '0' → logprob: -13.578980445861816
    7. '-
' → logprob: -14.828980445861816
    8. '   ' → logprob: -15.016480445861816
    9. '```' → logprob: -15.266480445861816
    10. ')' → logprob: -15.391480445861816

Token 110: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.38755884766578674
    2. '),' → logprob: -1.1375588178634644
    3. ')' → logprob: -7.887558937072754
    4. ' ),' → logprob: -8.137558937072754
    5. '),
' → logprob: -11.512558937072754
    6. ',' → logprob: -12.637558937072754
    7. ',),' → logprob: -12.887558937072754
    8. ' ' → logprob: -14.137558937072754
    9. '),

' → logprob: -14.137558937072754
    10. '),'' → logprob: -14.262558937072754

Token 111: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011272187111899257
    2. '0' → logprob: -10.000112533569336
    3. ' ' → logprob: -10.000112533569336
    4. '(' → logprob: -10.750112533569336
    5. '```' → logprob: -15.750112533569336
    6. ' (' → logprob: -16.125112533569336
    7. '+' → logprob: -16.875112533569336
    8. '   ' → logprob: -16.875112533569336
    9. '	' → logprob: -17.000112533569336
    10. '  ' → logprob: -17.500112533569336

Token 112: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006192696164362133
    2. '0' → logprob: -7.500619411468506
    3. ' ,' → logprob: -9.625618934631348
    4. ' ' → logprob: -16.000619888305664
    5. ',
' → logprob: -17.625619888305664
    6. '```' → logprob: -17.625619888305664
    7. '‌,' → logprob: -18.625619888305664
    8. ' ' → logprob: -18.875619888305664
    9. '<|end|>' → logprob: -19.250619888305664
    10. '`,' → logprob: -19.750619888305664

Token 113: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.813969957875088e-05
    2. ' ' → logprob: -9.625067710876465
    3. ',' → logprob: -13.750067710876465
    4. '1' → logprob: -14.875067710876465
    5. ')' → logprob: -15.687567710876465
    6. '```' → logprob: -15.875067710876465
    7. '۰' → logprob: -16.50006866455078
    8. '<|end|>' → logprob: -17.18756866455078
    9. '-' → logprob: -17.50006866455078
    10. '  ' → logprob: -17.87506866455078

Token 114: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.019316868856549263
    2. '),' → logprob: -4.394316673278809
    3. ',' → logprob: -5.269316673278809
    4. ',(' → logprob: -6.519316673278809
    5. ')' → logprob: -9.269316673278809
    6. ' ),' → logprob: -9.769316673278809
    7. ' ,' → logprob: -11.894316673278809
    8. ',),' → logprob: -13.394316673278809
    9. ' ' → logprob: -13.894316673278809
    10. ',-' → logprob: -14.519316673278809

Token 115: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00024477019906044006
    2. '-' → logprob: -8.375245094299316
    3. ' ' → logprob: -11.500245094299316
    4. '(' → logprob: -12.875245094299316
    5. ')' → logprob: -15.000245094299316
    6. ',' → logprob: -15.000245094299316
    7. '1' → logprob: -15.937745094299316
    8. '```' → logprob: -15.937745094299316
    9. ' -' → logprob: -16.500244140625
    10. '۰' → logprob: -16.562744140625

Token 116: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.005337047390639782
    2. ',' → logprob: -5.255337238311768
    3. '-' → logprob: -9.25533676147461
    4. ' ,-' → logprob: -12.75533676147461
    5. ',-
' → logprob: -13.38033676147461
    6. ',-

' → logprob: -13.50533676147461
    7. ',
' → logprob: -14.38033676147461
    8. '```' → logprob: -15.13033676147461
    9. '",-' → logprob: -15.63033676147461
    10. '1' → logprob: -15.88033676147461

Token 117: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.5
    3. ')' → logprob: -16.375
    4. '-' → logprob: -16.625
    5. '```' → logprob: -17.375
    6. '１' → logprob: -19.3125
    7. '

' → logprob: -19.375
    8. '۱' → logprob: -20.0625
    9. '
' → logprob: -20.25
    10. ')]' → logprob: -20.3125

Token 118: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0019957278855144978
    2. '),' → logprob: -6.87699556350708
    3. ')' → logprob: -7.00199556350708
    4. ')],' → logprob: -11.001996040344238
    5. ' )' → logprob: -11.126996040344238
    6. ']' → logprob: -11.251996040344238
    7. '),(' → logprob: -12.751996040344238
    8. ')]
' → logprob: -13.751996040344238
    9. '')]' → logprob: -14.001996040344238
    10. ')])' → logprob: -14.001996040344238

Token 119: 'steps' (ID: 27176)
  Prédit: 'steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.04874201864004135
    2. 'def' → logprob: -3.2987420558929443
    3. '#' → logprob: -5.298741817474365
    4. '
' → logprob: -6.423741817474365
    5. 'dire' → logprob: -6.423741817474365
    6. ')' → logprob: -8.673742294311523
    7. 'neighbors' → logprob: -8.673742294311523
    8. 'class' → logprob: -8.798742294311523
    9. ',' → logprob: -9.048742294311523
    10. ']' → logprob: -9.298742294311523

Token 120: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -1.664371848164592e-05
    2. '4' → logprob: -11.125016212463379
    3. '_' → logprob: -14.000016212463379
    4. ' ' → logprob: -15.000016212463379
    5. 'eight' → logprob: -15.125016212463379
    6. '6' → logprob: -15.750016212463379
    7. '```' → logprob: -16.250017166137695
    8. '68' → logprob: -17.375017166137695
    9. '9' → logprob: -17.875017166137695
    10. '2' → logprob: -18.000017166137695

Token 121: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.001173321157693863
    2. '=' → logprob: -6.751173496246338
    3. ' =[' → logprob: -12.75117301940918
    4. ' ' → logprob: -16.25117301940918
    5. '=[' → logprob: -17.62617301940918
    6. ' =(' → logprob: -17.87617301940918
    7. ' =)' → logprob: -17.87617301940918
    8. ' =
' → logprob: -18.50117301940918
    9. ' ='' → logprob: -18.62617301940918
    10. ' ' → logprob: -18.75117301940918

Token 122: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7003715634346008
    2. ' [' → logprob: -0.7003715634346008
    3. '[(' → logprob: -5.575371742248535
    4. 'steps' → logprob: -6.450371742248535
    5. ' [(' → logprob: -7.075371742248535
    6. ' steps' → logprob: -7.825371742248535
    7. '[
' → logprob: -7.825371742248535
    8. ' [
' → logprob: -9.575371742248535
    9. '[((' → logprob: -9.575371742248535
    10. ' ' → logprob: -10.575371742248535

Token 123: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -1.4259644558478612e-05
    2. ' (-' → logprob: -11.375014305114746
    3. '(' → logprob: -13.125014305114746
    4. '(x' → logprob: -14.625014305114746
    5. '(i' → logprob: -15.750014305114746
    6. '((-' → logprob: -16.75001335144043
    7. '-' → logprob: -17.25001335144043
    8. ' ' → logprob: -18.12501335144043
    9. '*(-' → logprob: -18.25001335144043
    10. '   ' → logprob: -18.62501335144043

Token 124: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -14.125000953674316
    3. ' -' → logprob: -16.125001907348633
    4. ',' → logprob: -16.562501907348633
    5. '-' → logprob: -16.625001907348633
    6. '

' → logprob: -17.312501907348633
    7. '
' → logprob: -17.812501907348633
    8. '১' → logprob: -18.125001907348633
    9. '   ' → logprob: -18.375001907348633
    10. ')' → logprob: -18.500001907348633

Token 125: ',' (ID: 11)
  Prédit: ',-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.023291829973459244
    2. ',' → logprob: -3.773291826248169
    3. ' ,-' → logprob: -10.27329158782959
    4. ' ,' → logprob: -11.77329158782959
    5. '-' → logprob: -13.77329158782959
    6. ',-

' → logprob: -14.02329158782959
    7. ',-
' → logprob: -14.52329158782959
    8. '",-' → logprob: -15.02329158782959
    9. ',
' → logprob: -15.52329158782959
    10. ' -' → logprob: -15.89829158782959

Token 126: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.006055235862731934
    2. '0' → logprob: -5.1310553550720215
    3. '1' → logprob: -9.131054878234863
    4. ' -' → logprob: -11.381054878234863
    5. ' ' → logprob: -11.881054878234863
    6. ')' → logprob: -17.38105583190918
    7. '(-' → logprob: -18.38105583190918
    8. '+' → logprob: -18.94355583190918
    9. '−' → logprob: -18.94355583190918
    10. '   ' → logprob: -19.56855583190918

Token 127: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.10059266537427902
    2. '),(' → logprob: -2.350592613220215
    3. ',' → logprob: -8.350592613220215
    4. ' ),' → logprob: -9.100592613220215
    5. ')' → logprob: -11.100592613220215
    6. ',),' → logprob: -11.225592613220215
    7. '1' → logprob: -12.600592613220215
    8. '7' → logprob: -12.975592613220215
    9. ',(' → logprob: -13.350592613220215
    10. '),
' → logprob: -14.350592613220215

Token 128: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -1.3856492842023727e-06
    2. '(' → logprob: -13.875000953674316
    3. ' (-' → logprob: -14.750000953674316
    4. '-' → logprob: -17.125001907348633
    5. '[-' → logprob: -23.125001907348633
    6. '(+' → logprob: -23.250001907348633
    7. ' ' → logprob: -23.375001907348633
    8. '{-' → logprob: -24.625001907348633
    9. '((-' → logprob: -24.750001907348633
    10. ',-' → logprob: -25.500001907348633

Token 129: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.562500953674316
    3. '<|end|>' → logprob: -16.000001907348633
    4. '-' → logprob: -16.062501907348633
    5. ',' → logprob: -16.062501907348633
    6. '১' → logprob: -17.062501907348633
    7. '१' → logprob: -17.250001907348633
    8. '۱' → logprob: -17.500001907348633
    9. '```' → logprob: -17.625001907348633
    10. '１' → logprob: -17.875001907348633

Token 130: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5759756565093994
    2. ',-' → logprob: -0.8259756565093994
    3. '1' → logprob: -11.20097541809082
    4. ' ,' → logprob: -11.95097541809082
    5. ',
' → logprob: -12.32597541809082
    6. '-' → logprob: -12.57597541809082
    7. ',+' → logprob: -12.57597541809082
    8. ' ,-' → logprob: -13.32597541809082
    9. ',-
' → logprob: -13.82597541809082
    10. ',-

' → logprob: -14.07597541809082

Token 131: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0789363831281662
    2. '1' → logprob: -2.5789363384246826
    3. ' ' → logprob: -10.078936576843262
    4. ' -' → logprob: -12.328936576843262
    5. '+' → logprob: -16.078935623168945
    6. ')' → logprob: -16.078935623168945
    7. '[' → logprob: -18.328935623168945
    8. '-)' → logprob: -19.078935623168945
    9. '−' → logprob: -19.203935623168945
    10. '-
' → logprob: -20.078935623168945

Token 132: '),(' (ID: 54876)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.043285876512527466
    2. '),(' → logprob: -3.168285846710205
    3. ')' → logprob: -8.418286323547363
    4. ' ),' → logprob: -10.168286323547363
    5. ',' → logprob: -10.793286323547363
    6. '),
' → logprob: -12.793286323547363
    7. ',),' → logprob: -13.168286323547363
    8. '),

' → logprob: -14.043286323547363
    9. '],' → logprob: -15.293286323547363
    10. ')]' → logprob: -15.543286323547363

Token 133: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.005964699666947126
    2. '0' → logprob: -5.130964756011963
    3. ' -' → logprob: -10.630964279174805
    4. ' ' → logprob: -11.755964279174805
    5. '(-' → logprob: -12.755964279174805
    6. '1' → logprob: -14.005964279174805
    7. '(' → logprob: -16.130964279174805
    8. ',-' → logprob: -16.505964279174805
    9. ',' → logprob: -16.630964279174805
    10. '
' → logprob: -17.005964279174805

Token 134: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018308231374248862
    2. ',-' → logprob: -6.6268310546875
    3. '1' → logprob: -7.6268310546875
    4. ' ,' → logprob: -11.1268310546875
    5. ',
' → logprob: -13.3768310546875
    6. '

' → logprob: -15.6268310546875
    7. ' ' → logprob: -15.6268310546875
    8. '-' → logprob: -15.6268310546875
    9. ',+' → logprob: -15.7518310546875
    10. '
' → logprob: -15.8143310546875

Token 135: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08895112574100494
    2. '-' → logprob: -2.4639511108398438
    3. ' ' → logprob: -11.838951110839844
    4. ' -' → logprob: -12.463951110839844
    5. '```' → logprob: -15.338951110839844
    6. '−' → logprob: -15.463951110839844
    7. ')' → logprob: -17.026451110839844
    8. '–' → logprob: -17.338951110839844
    9. '  ' → logprob: -17.651451110839844
    10. '--' → logprob: -17.963951110839844

Token 136: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.012601005844771862
    2. '),' → logprob: -4.387600898742676
    3. ')' → logprob: -10.137600898742676
    4. ',(' → logprob: -10.762600898742676
    5. ',' → logprob: -11.012600898742676
    6. ' ),' → logprob: -11.387600898742676
    7. '(' → logprob: -13.637600898742676
    8. ' ' → logprob: -14.637600898742676
    9. '),
' → logprob: -14.887600898742676
    10. '',(' → logprob: -15.512600898742676

Token 137: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.038048144429922104
    2. '-' → logprob: -3.288048028945923
    3. '0' → logprob: -12.538047790527344
    4. ' ' → logprob: -13.288047790527344
    5. ' -' → logprob: -13.663047790527344
    6. '(-' → logprob: -15.413047790527344
    7. '(' → logprob: -16.413047790527344
    8. '
' → logprob: -18.163047790527344
    9. '```' → logprob: -18.288047790527344
    10. '−' → logprob: -18.663047790527344

Token 138: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00071695790393278
    2. '1' → logprob: -8.000717163085938
    3. '0' → logprob: -8.500717163085938
    4. ' ,' → logprob: -9.000717163085938
    5. ',-' → logprob: -9.875717163085938
    6. ' ' → logprob: -12.875717163085938
    7. '-' → logprob: -14.750717163085938
    8. '```' → logprob: -16.375717163085938
    9. '<|end|>' → logprob: -16.875717163085938
    10. ' -' → logprob: -16.875717163085938

Token 139: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010623442940413952
    2. '0' → logprob: -6.876062393188477
    3. ' ' → logprob: -11.126062393188477
    4. '-' → logprob: -11.251062393188477
    5. '<|end|>' → logprob: -13.501062393188477
    6. ' -' → logprob: -15.251062393188477
    7. '```' → logprob: -16.251062393188477
    8. ')' → logprob: -17.126062393188477
    9. '+' → logprob: -18.001062393188477
    10. '<|end|>' → logprob: -18.251062393188477

Token 140: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.0012139255413785577
    2. '),' → logprob: -6.751214027404785
    3. ')' → logprob: -10.751214027404785
    4. ',(' → logprob: -11.126214027404785
    5. ',' → logprob: -12.126214027404785
    6. ' ),' → logprob: -13.251214027404785
    7. ' ' → logprob: -16.25121307373047
    8. '(' → logprob: -16.25121307373047
    9. '',(' → logprob: -16.25121307373047
    10. '],[' → logprob: -16.75121307373047

Token 141: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4649287760257721
    2. '0' → logprob: -1.2149287462234497
    3. '(' → logprob: -2.5899288654327393
    4. ' (' → logprob: -10.08992862701416
    5. ' ' → logprob: -10.83992862701416
    6. '-' → logprob: -13.83992862701416
    7. '(-' → logprob: -14.21492862701416
    8. '```' → logprob: -14.83992862701416
    9. ',' → logprob: -16.027429580688477
    10. ')' → logprob: -16.339929580688477

Token 142: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003611474297940731
    2. '0' → logprob: -5.6286115646362305
    3. ' ,' → logprob: -11.62861156463623
    4. ',-' → logprob: -13.25361156463623
    5. ',
' → logprob: -14.87861156463623
    6. ')' → logprob: -16.316110610961914
    7. ' ' → logprob: -16.566110610961914
    8. '-' → logprob: -17.066110610961914
    9. '```' → logprob: -17.128610610961914
    10. '1' → logprob: -17.878610610961914

Token 143: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.47495681833243e-05
    2. '-' → logprob: -11.125024795532227
    3. ' ' → logprob: -11.750024795532227
    4. '1' → logprob: -13.375024795532227
    5. ')' → logprob: -15.375024795532227
    6. ' -' → logprob: -16.500024795532227
    7. '<|end|>' → logprob: -17.250024795532227
    8. '```' → logprob: -18.187524795532227
    9. '۰' → logprob: -18.500024795532227
    10. ',' → logprob: -19.312524795532227

Token 144: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.007608278188854456
    2. ',(' → logprob: -5.007608413696289
    3. '),' → logprob: -7.757608413696289
    4. ',' → logprob: -8.257608413696289
    5. ')' → logprob: -8.507608413696289
    6. '',(' → logprob: -13.632608413696289
    7. '(' → logprob: -14.007608413696289
    8. ' ,' → logprob: -14.507608413696289
    9. ' ),' → logprob: -14.632608413696289
    10. '",(' → logprob: -14.882608413696289

Token 145: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. '-' → logprob: -12.625004768371582
    3. ' ' → logprob: -13.875004768371582
    4. '0' → logprob: -14.625004768371582
    5. '(' → logprob: -15.875004768371582
    6. '```' → logprob: -18.2500057220459
    7. ' -' → logprob: -19.1250057220459
    8. ',' → logprob: -19.9375057220459
    9. '   ' → logprob: -20.3125057220459
    10. '
' → logprob: -20.6250057220459

Token 146: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.02324652671813965
    2. ',' → logprob: -3.7732465267181396
    3. '-' → logprob: -14.648246765136719
    4. ' ,-' → logprob: -14.898246765136719
    5. '1' → logprob: -16.39824676513672
    6. ',-
' → logprob: -16.77324676513672
    7. ',-

' → logprob: -17.14824676513672
    8. ' ,' → logprob: -17.39824676513672
    9. '",-' → logprob: -17.52324676513672
    10. ',(' → logprob: -18.02324676513672

Token 147: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '```' → logprob: -18.0
    4. ',' → logprob: -18.3125
    5. '0' → logprob: -18.375
    6. '-' → logprob: -18.8125
    7. '１' → logprob: -19.4375
    8. ')' → logprob: -19.4375
    9. '۱' → logprob: -19.9375
    10. '
' → logprob: -20.1875

Token 148: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.0003146088565699756
    2. ',(' → logprob: -8.125314712524414
    3. '),' → logprob: -11.250314712524414
    4. ',' → logprob: -12.375314712524414
    5. ')' → logprob: -14.000314712524414
    6. '(' → logprob: -15.375314712524414
    7. ' ),' → logprob: -16.000314712524414
    8. '',(' → logprob: -16.125314712524414
    9. '",(' → logprob: -16.625314712524414
    10. ' ,' → logprob: -17.375314712524414

Token 149: '0' (ID: 15)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20156575739383698
    2. '0' → logprob: -1.7015657424926758
    3. ' (' → logprob: -8.826565742492676
    4. ' ' → logprob: -12.451565742492676
    5. '(-' → logprob: -13.576565742492676
    6. ',' → logprob: -15.326565742492676
    7. '
' → logprob: -16.951566696166992
    8. '-' → logprob: -16.951566696166992
    9. ' ' → logprob: -17.326566696166992
    10. '۰' → logprob: -17.451566696166992

Token 150: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.001352379797026515
    2. '-' → logprob: -6.751352310180664
    3. ',' → logprob: -8.626352310180664
    4. ' ,-' → logprob: -13.001352310180664
    5. ',-

' → logprob: -15.626352310180664
    6. ',-
' → logprob: -15.751352310180664
    7. '1' → logprob: -15.876352310180664
    8. ' -' → logprob: -16.376352310180664
    9. '-,' → logprob: -17.751352310180664
    10. '",-' → logprob: -17.751352310180664

Token 151: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.0219828002154827e-05
    2. '-' → logprob: -10.875020027160645
    3. ' ' → logprob: -14.250020027160645
    4. '```' → logprob: -15.937520027160645
    5. 'steps' → logprob: -16.62502098083496
    6. ' -' → logprob: -16.75002098083496
    7. '

' → logprob: -17.25002098083496
    8. ')' → logprob: -17.37502098083496
    9. '0' → logprob: -17.56252098083496
    10. ',' → logprob: -17.68752098083496

Token 152: '),' (ID: 936)
  Prédit: '),('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.004530162084847689
    2. '),' → logprob: -5.50452995300293
    3. ')]' → logprob: -8.25452995300293
    4. ')' → logprob: -8.62952995300293
    5. ',(' → logprob: -11.62952995300293
    6. ',' → logprob: -12.75452995300293
    7. ' ),' → logprob: -15.00452995300293
    8. '(' → logprob: -15.25452995300293
    9. ')],' → logprob: -15.62952995300293
    10. '],[' → logprob: -16.00452995300293

Token 153: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -2.816093228830141e-06
    2. '-' → logprob: -13.12500286102295
    3. '(' → logprob: -14.25000286102295
    4. ' (-' → logprob: -16.625001907348633
    5. ')' → logprob: -18.875001907348633
    6. '   ' → logprob: -19.875001907348633
    7. '	' → logprob: -20.250001907348633
    8. '[-' → logprob: -20.500001907348633
    9. '1' → logprob: -20.625001907348633
    10. ',-' → logprob: -20.875001907348633

Token 154: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.125
    3. ',' → logprob: -18.5625
    4. '```' → logprob: -18.625
    5. '-' → logprob: -18.875
    6. '2' → logprob: -18.9375
    7. '[' → logprob: -19.125
    8. '(' → logprob: -19.1875
    9. '১' → logprob: -19.375
    10. ')' → logprob: -19.4375

Token 155: ',-' (ID: 8202)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07903145253658295
    2. ',-' → logprob: -2.579031467437744
    3. '1' → logprob: -9.079030990600586
    4. '0' → logprob: -10.704030990600586
    5. '-' → logprob: -13.079030990600586
    6. ' ,' → logprob: -13.954030990600586
    7. ' ,-' → logprob: -14.579030990600586
    8. ',
' → logprob: -14.704030990600586
    9. ',-
' → logprob: -14.829030990600586
    10. ')' → logprob: -15.454030990600586

Token 156: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.375000953674316
    3. ')' → logprob: -16.25
    4. '-' → logprob: -17.0
    5. '```' → logprob: -17.3125
    6. '<|end|>' → logprob: -17.9375
    7. '۱' → logprob: -18.875
    8. '১' → logprob: -18.875
    9. '१' → logprob: -19.0625
    10. '１' → logprob: -19.4375

Token 157: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0002004410926019773
    2. ')' → logprob: -8.875200271606445
    3. ']' → logprob: -9.875200271606445
    4. '),' → logprob: -11.875200271606445
    5. ')],' → logprob: -14.625200271606445
    6. '])' → logprob: -15.000200271606445
    7. ' )' → logprob: -15.125200271606445
    8. ')]
' → logprob: -15.500200271606445
    9. '))' → logprob: -15.500200271606445
    10. ')])' → logprob: -15.750200271606445

Token 158: 'read' (ID: 1293)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.012070552445948124
    2. 'class' → logprob: -4.512070655822754
    3. 'd' → logprob: -7.762070655822754
    4. '#' → logprob: -8.387070655822754
    5. '
' → logprob: -9.012070655822754
    6. 'de' → logprob: -9.262070655822754
    7. '

' → logprob: -9.512070655822754
    8. '\' → logprob: -11.137070655822754
    9. 'n' → logprob: -11.262070655822754
    10. 'from' → logprob: -11.887070655822754

Token 159: 'ints' (ID: 20448)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19057124853134155
    2. '=' → logprob: -2.3155713081359863
    3. '_line' → logprob: -3.0655713081359863
    4. 'line' → logprob: -4.190571308135986
    5. '()' → logprob: -4.815571308135986
    6. '_' → logprob: -5.690571308135986
    7. '(' → logprob: -7.190571308135986
    8. ')' → logprob: -8.690570831298828
    9. '_lines' → logprob: -9.190570831298828
    10. '_input' → logprob: -9.440570831298828

Token 160: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1227647140622139
    2. ' =' → logprob: -2.247764825820923
    3. '(' → logprob: -4.997764587402344
    4. '()' → logprob: -6.372764587402344
    5. ')' → logprob: -7.747764587402344
    6. '=[]' → logprob: -8.372764587402344
    7. '=lambda' → logprob: -8.872764587402344
    8. ',' → logprob: -8.997764587402344
    9. '=sys' → logprob: -9.622764587402344
    10. '[:]' → logprob: -9.747764587402344

Token 161: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -7.100059156073257e-05
    2. '(lambda' → logprob: -10.250070571899414
    3. ' lambda' → logprob: -10.250070571899414
    4. '=lambda' → logprob: -16.250070571899414
    5. 'lam' → logprob: -17.750070571899414
    6. 'sys' → logprob: -18.500070571899414
    7. 'list' → logprob: -18.750070571899414
    8. 'l' → logprob: -19.000070571899414
    9. 'la' → logprob: -20.000070571899414
    10. '_lambda' → logprob: -20.250070571899414

Token 162: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00828063115477562
    2. ' :' → logprob: -4.8832807540893555
    3. ':list' → logprob: -7.7582807540893555
    4. '():' → logprob: -9.133280754089355
    5. ' sys' → logprob: -9.758280754089355
    6. ' list' → logprob: -10.883280754089355
    7. 'sys' → logprob: -11.008280754089355
    8. ' ' → logprob: -11.133280754089355
    9. 'list' → logprob: -12.133280754089355
    10. ' map' → logprob: -12.758280754089355

Token 163: ' list' (ID: 1562)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.20148661732673645
    2. 'list' → logprob: -1.701486587524414
    3. ' map' → logprob: -10.076486587524414
    4. ' list' → logprob: -10.451486587524414
    5. 'm' → logprob: -14.076486587524414
    6. 'tuple' → logprob: -14.076486587524414
    7. '[' → logprob: -14.326486587524414
    8. 'sys' → logprob: -17.076486587524414
    9. '	map' → logprob: -17.201486587524414
    10. 'li' → logprob: -18.451486587524414

Token 164: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00026205103495158255
    2. '(' → logprob: -8.250262260437012
    3. 'map' → logprob: -15.000262260437012
    4. '(
' → logprob: -15.500262260437012
    5. '(

' → logprob: -16.375261306762695
    6. '(sys' → logprob: -16.875261306762695
    7. '()' → logprob: -17.125261306762695
    8. '(m' → logprob: -17.875261306762695
    9. '	map' → logprob: -18.125261306762695
    10. '(int' → logprob: -18.125261306762695

Token 165: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0003305784775875509
    2. 'int' → logprob: -8.500330924987793
    3. '(' → logprob: -9.000330924987793
    4. '<int' → logprob: -13.375330924987793
    5. ',int' → logprob: -14.000330924987793
    6. '[int' → logprob: -14.250330924987793
    7. ']int' → logprob: -15.500330924987793
    8. '(
' → logprob: -15.625330924987793
    9. '=int' → logprob: -15.875330924987793
    10. '```' → logprob: -16.375329971313477

Token 166: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.576396644115448
    2. ',input' → logprob: -0.826396644115448
    3. 'sys' → logprob: -8.201396942138672
    4. '(sys' → logprob: -9.326396942138672
    5. 'input' → logprob: -9.451396942138672
    6. ' ,' → logprob: -12.701396942138672
    7. ' sys' → logprob: -13.076396942138672
    8. '(input' → logprob: -13.326396942138672
    9. ',
' → logprob: -13.951396942138672
    10. '(' → logprob: -13.951396942138672

Token 167: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.5795757174491882
    2. 'input' → logprob: -0.8295757174491882
    3. ' input' → logprob: -6.329575538635254
    4. ' sys' → logprob: -6.329575538635254
    5. 'stdin' → logprob: -9.829575538635254
    6. '=sys' → logprob: -12.829575538635254
    7. '(sys' → logprob: -12.954575538635254
    8. 'read' → logprob: -13.954575538635254
    9. '	sys' → logprob: -14.079575538635254
    10. 'inp' → logprob: -14.329575538635254

Token 168: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -1.8550976164988242e-05
    2. '.' → logprob: -11.125018119812012
    3. '.readline' → logprob: -13.375018119812012
    4. '.argv' → logprob: -14.000018119812012
    5. '.std' → logprob: -14.125018119812012
    6. '.stdout' → logprob: -14.500018119812012
    7. 'stdin' → logprob: -15.750018119812012
    8. '.st' → logprob: -17.750019073486328
    9. ' stdin' → logprob: -18.375019073486328
    10. '.stderr' → logprob: -18.750019073486328

Token 169: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -7.839121826691553e-05
    2. '.read' → logprob: -10.000078201293945
    3. '.' → logprob: -10.375078201293945
    4. '.buffer' → logprob: -14.125078201293945
    5. '.stdin' → logprob: -14.250078201293945
    6. '.readlines' → logprob: -15.125078201293945
    7. ' .' → logprob: -17.000078201293945
    8. ').' → logprob: -17.125078201293945
    9. ' readline' → logprob: -18.250078201293945
    10. 'read' → logprob: -19.375078201293945

Token 170: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.822646693966817e-06
    2. '()' → logprob: -12.250007629394531
    3. '()))' → logprob: -12.875007629394531
    4. '))' → logprob: -15.125007629394531
    5. ' ().' → logprob: -17.12500762939453
    6. '.' → logprob: -18.50000762939453
    7. '.readline' → logprob: -18.87500762939453
    8. 'line' → logprob: -19.25000762939453
    9. '().__' → logprob: -19.37500762939453
    10. '(' → logprob: -19.37500762939453

Token 171: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.1696806102991104
    2. 'rstrip' → logprob: -1.9196805953979492
    3. 'split' → logprob: -4.669680595397949
    4. 'read' → logprob: -10.79468059539795
    5. ' strip' → logprob: -11.16968059539795
    6. 'rs' → logprob: -13.91968059539795
    7. 'decode' → logprob: -14.16968059539795
    8. ')' → logprob: -16.169681549072266
    9. ' split' → logprob: -16.794681549072266
    10. '.rstrip' → logprob: -17.294681549072266

Token 172: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.17138519883155823
    2. '))' → logprob: -1.9213851690292358
    3. '()' → logprob: -4.546385288238525
    4. '()))
' → logprob: -7.796385288238525
    5. '())' → logprob: -9.921384811401367
    6. '(' → logprob: -10.796384811401367
    7. '))
' → logprob: -12.546384811401367
    8. ')' → logprob: -12.671384811401367
    9. '()))

' → logprob: -13.421384811401367
    10. '()));' → logprob: -13.796384811401367

Token 173: 'read' (ID: 1293)
  Prédit: 'read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.17387855052947998
    2. 'def' → logprob: -1.92387855052948
    3. 'n' → logprob: -5.0488786697387695
    4. '
' → logprob: -5.5488786697387695
    5. 'write' → logprob: -6.7988786697387695
    6. 'print' → logprob: -7.2988786697387695
    7. 'class' → logprob: -8.79887866973877
    8. 'reads' → logprob: -8.92387866973877
    9. 's' → logprob: -9.04887866973877
    10. 'ndef' → logprob: -9.42387866973877

Token 174: 'lines' (ID: 10105)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.002230428857728839
    2. 'str' → logprob: -6.877230644226074
    3. 'lines' → logprob: -7.002230644226074
    4. 'lin' → logprob: -8.752230644226074
    5. 'int' → logprob: -9.627230644226074
    6. 'list' → logprob: -10.752230644226074
    7. 'ints' → logprob: -11.127230644226074
    8. 'ln' → logprob: -11.752230644226074
    9. 'string' → logprob: -12.377230644226074
    10. ' =' → logprob: -12.752230644226074

Token 175: '_int' (ID: 12285)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07155457139015198
    2. ' =' → logprob: -2.696554660797119
    3. 's' → logprob: -6.446554660797119
    4. '=lambda' → logprob: -11.196554183959961
    5. '()' → logprob: -11.821554183959961
    6. 't' → logprob: -12.946554183959961
    7. ')' → logprob: -13.321554183959961
    8. 'ints' → logprob: -13.571554183959961
    9. 'int' → logprob: -14.321554183959961
    10. '[]' → logprob: -14.321554183959961

Token 176: 'list' (ID: 2641)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -3.6789137084269896e-05
    2. ' =' → logprob: -10.50003719329834
    3. '=' → logprob: -12.50003719329834
    4. 't' → logprob: -13.37503719329834
    5. 'ts' → logprob: -13.37503719329834
    6. ' s' → logprob: -13.50003719329834
    7. '()' → logprob: -14.37503719329834
    8. 'S' → logprob: -15.75003719329834
    9. '=s' → logprob: -16.250036239624023
    10. 'a' → logprob: -17.625036239624023

Token 177: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1685478687286377
    2. ' =' → logprob: -1.9185478687286377
    3. 's' → logprob: -4.793547630310059
    4. '=lambda' → logprob: -12.168547630310059
    5. ' ' → logprob: -15.168547630310059
    6. ':' → logprob: -16.168548583984375
    7. '=

' → logprob: -16.668548583984375
    8. '=[]' → logprob: -16.668548583984375
    9. ')' → logprob: -16.918548583984375
    10. 'a' → logprob: -17.043548583984375

Token 178: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.02437846176326275
    2. '(lambda' → logprob: -3.899378538131714
    3. ' lambda' → logprob: -5.649378299713135
    4. '=lambda' → logprob: -8.149378776550293
    5. 'sys' → logprob: -11.024378776550293
    6. 'list' → logprob: -13.774378776550293
    7. '[' → logprob: -14.399378776550293
    8. '   ' → logprob: -14.774378776550293
    9. '    ' → logprob: -14.774378776550293
    10. '_lambda' → logprob: -14.899378776550293

Token 179: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00529933487996459
    2. ' :' → logprob: -5.6302995681762695
    3. ':list' → logprob: -7.1302995681762695
    4. 'lambda' → logprob: -7.7552995681762695
    5. '():' → logprob: -8.25529956817627
    6. ' lambda' → logprob: -9.13029956817627
    7. '()' → logprob: -11.00529956817627
    8. '(lambda' → logprob: -11.25529956817627
    9. 'sys' → logprob: -11.25529956817627
    10. 'list' → logprob: -11.38029956817627

Token 180: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.1713000237941742
    2. '[' → logprob: -1.9213000535964966
    3. 'list' → logprob: -4.796299934387207
    4. '[int' → logprob: -7.046299934387207
    5. ' [' → logprob: -7.171299934387207
    6. 'sys' → logprob: -7.546299934387207
    7. '[line' → logprob: -7.921299934387207
    8. '[List' → logprob: -9.796299934387207
    9. ' list' → logprob: -10.046299934387207
    10. '[[' → logprob: -10.671299934387207

Token 181: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.003184363478794694
    2. 'read' → logprob: -5.7531843185424805
    3. ' list' → logprob: -12.62818431854248
    4. 'map' → logprob: -13.75318431854248
    5. '
' → logprob: -14.00318431854248
    6. 'tuple' → logprob: -15.00318431854248
    7. '[' → logprob: -15.12818431854248
    8. ']' → logprob: -15.62818431854248
    9. '(list' → logprob: -15.75318431854248
    10. '

' → logprob: -15.87818431854248

Token 182: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00012237003829795867
    2. 'map' → logprob: -9.5001220703125
    3. '(' → logprob: -10.0001220703125
    4. ']' → logprob: -14.0001220703125
    5. '(
' → logprob: -14.7501220703125
    6. ' map' → logprob: -15.2501220703125
    7. '	map' → logprob: -16.0001220703125
    8. ',map' → logprob: -16.5001220703125
    9. '(int' → logprob: -16.6251220703125
    10. '](' → logprob: -17.1251220703125

Token 183: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0003975416184403002
    2. 'int' → logprob: -7.875397682189941
    3. ']int' → logprob: -12.375397682189941
    4. '=int' → logprob: -12.750397682189941
    5. ',int' → logprob: -12.875397682189941
    6. '(str' → logprob: -13.000397682189941
    7. '[int' → logprob: -13.000397682189941
    8. '<int' → logprob: -13.375397682189941
    9. '(' → logprob: -14.000397682189941
    10. ' int' → logprob: -15.250397682189941

Token 184: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007453641388565302
    2. '(sys' → logprob: -5.882453441619873
    3. ',line' → logprob: -5.882453441619873
    4. ',input' → logprob: -7.632453441619873
    5. 'sys' → logprob: -8.132453918457031
    6. ',int' → logprob: -8.382453918457031
    7. ',x' → logprob: -8.507453918457031
    8. ',s' → logprob: -8.757453918457031
    9. ' ,' → logprob: -8.882453918457031
    10. ',str' → logprob: -9.007453918457031

Token 185: ' l' (ID: 305)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.2130238562822342
    2. 'line' → logprob: -1.7130239009857178
    3. ' sys' → logprob: -5.213023662567139
    4. 'x' → logprob: -6.088023662567139
    5. ' line' → logprob: -6.713023662567139
    6. 's' → logprob: -7.213023662567139
    7. 'l' → logprob: -7.338023662567139
    8. 'input' → logprob: -7.713023662567139
    9. 'lambda' → logprob: -7.713023662567139
    10. '(sys' → logprob: -9.713024139404297

Token 186: '.split' (ID: 10347)
  Prédit: 'ine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.013346095569431782
    2. 'strip' → logprob: -4.888346195220947
    3. '.strip' → logprob: -5.513346195220947
    4. '.split' → logprob: -7.638346195220947
    5. 'trip' → logprob: -8.138345718383789
    6. 'in' → logprob: -8.263345718383789
    7. 'rip' → logprob: -8.513345718383789
    8. 'split' → logprob: -8.763345718383789
    9. 'ne' → logprob: -9.388345718383789
    10. '.rstrip' → logprob: -10.138345718383789

Token 187: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.47533079981803894
    2. '())' → logprob: -0.9753308296203613
    3. '()' → logprob: -6.850330829620361
    4. '))' → logprob: -9.225330352783203
    5. '()]' → logprob: -10.475330352783203
    6. '()))
' → logprob: -10.725330352783203
    7. '())
' → logprob: -11.100330352783203
    8. '('' → logprob: -11.725330352783203
    9. '())))' → logprob: -12.225330352783203
    10. '(','' → logprob: -12.475330352783203

Token 188: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.34320786595344543
    2. '()' → logprob: -1.343207836151123
    3. '(sys' → logprob: -3.593207836151123
    4. ' for' → logprob: -6.468207836151123
    5. 'sys' → logprob: -8.093208312988281
    6. '()]' → logprob: -9.593208312988281
    7. '(' → logprob: -9.968208312988281
    8. '())' → logprob: -12.718208312988281
    9. ' sys' → logprob: -12.718208312988281
    10. ')' → logprob: -12.843208312988281

Token 189: ' l' (ID: 305)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.00862036645412445
    2. ' sys' → logprob: -4.758620262145996
    3. 'open' → logprob: -13.008620262145996
    4. '	sys' → logprob: -13.008620262145996
    5. '(sys' → logprob: -14.008620262145996
    6. '=sys' → logprob: -15.758620262145996
    7. ' open' → logprob: -15.883620262145996
    8. ' ' → logprob: -16.633621215820312
    9. 'line' → logprob: -17.008621215820312
    10. '
' → logprob: -17.258621215820312

Token 190: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2610591650009155
    2. ' in' → logprob: -1.5110591650009155
    3. 'n' → logprob: -4.886059284210205
    4. 'ine' → logprob: -7.011059284210205
    5. 'ines' → logprob: -8.636058807373047
    6. '	in' → logprob: -8.886058807373047
    7. 's' → logprob: -9.511058807373047
    8. 'l' → logprob: -10.011058807373047
    9. 'i' → logprob: -10.761058807373047
    10. 'sys' → logprob: -10.886058807373047

Token 191: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.000494533043820411
    2. ' sys' → logprob: -7.625494480133057
    3. '(sys' → logprob: -13.375494956970215
    4. 'open' → logprob: -13.500494956970215
    5. '	sys' → logprob: -13.875494956970215
    6. '=sys' → logprob: -14.125494956970215
    7. 'read' → logprob: -14.250494956970215
    8. '```' → logprob: -15.250494956970215
    9. '
' → logprob: -15.375494956970215
    10. ' ' → logprob: -15.500494956970215

Token 192: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00862213596701622
    2. 'stdin' → logprob: -4.758622169494629
    3. '.stdout' → logprob: -12.383622169494629
    4. 'in' → logprob: -13.508622169494629
    5. ' stdin' → logprob: -14.383622169494629
    6. '.' → logprob: -14.508622169494629
    7. '(stdin' → logprob: -15.133622169494629
    8. 'import' → logprob: -15.633622169494629
    9. 'std' → logprob: -15.633622169494629
    10. '.std' → logprob: -15.633622169494629

Token 193: '.readlines' (ID: 92237)
  Prédit: '.readlines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readlines' → logprob: -0.5349600911140442
    2. '.readline' → logprob: -0.9099600911140442
    3. 'read' → logprob: -4.7849602699279785
    4. '.stdin' → logprob: -6.6599602699279785
    5. 'stdin' → logprob: -7.0349602699279785
    6. '.' → logprob: -7.2849602699279785
    7. 'lines' → logprob: -8.03495979309082
    8. '.read' → logprob: -9.40995979309082
    9. 'buffer' → logprob: -9.65995979309082
    10. 'reader' → logprob: -10.78495979309082

Token 194: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0001249925117008388
    2. '()' → logprob: -9.00012493133545
    3. '()]
' → logprob: -14.87512493133545
    4. '())' → logprob: -15.00012493133545
    5. ']' → logprob: -15.12512493133545
    6. '()][' → logprob: -15.87512493133545
    7. '()}' → logprob: -16.375125885009766
    8. '(' → logprob: -16.500125885009766
    9. ']()' → logprob: -16.625125885009766
    10. '()],' → logprob: -16.750125885009766

Token 195: 'read' (ID: 1293)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03239557892084122
    2. 'read' → logprob: -3.532395601272583
    3. 'class' → logprob: -6.907395362854004
    4. 'n' → logprob: -7.782395362854004
    5. 'print' → logprob: -8.282395362854004
    6. '
' → logprob: -8.407395362854004
    7. 'write' → logprob: -8.657395362854004
    8. 'from' → logprob: -8.782395362854004
    9. '#' → logprob: -9.532395362854004
    10. 'deque' → logprob: -10.407395362854004

Token 196: 'ints' (ID: 20448)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0205006655305624
    2. 'int' → logprob: -4.270500659942627
    3. ' =' → logprob: -5.395500659942627
    4. 'ints' → logprob: -6.770500659942627
    5. 'lines' → logprob: -8.395501136779785
    6. 'str' → logprob: -8.520501136779785
    7. '=' → logprob: -9.145501136779785
    8. 'string' → logprob: -10.395501136779785
    9. 'lin' → logprob: -10.895501136779785
    10. 'list' → logprob: -11.270501136779785

Token 197: '_' (ID: 62)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -5.967624019831419e-05
    2. ' ()' → logprob: -11.000060081481934
    3. '()
' → logprob: -11.750060081481934
    4. '=' → logprob: -12.000060081481934
    5. '()]' → logprob: -12.250060081481934
    6. '()

' → logprob: -12.625060081481934
    7. '().' → logprob: -12.750060081481934
    8. '_' → logprob: -13.000060081481934
    9. '(' → logprob: -13.375060081481934
    10. '()<<' → logprob: -13.750060081481934

Token 198: '0' (ID: 15)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25460362434387207
    2. ' =' → logprob: -3.004603624343872
    3. 'from' → logprob: -3.004603624343872
    4. 's' → logprob: -3.504603624343872
    5. '()' → logprob: -3.754603624343872
    6. '1' → logprob: -5.129603385925293
    7. '2' → logprob: -5.254603385925293
    8. '_' → logprob: -5.254603385925293
    9. 'split' → logprob: -5.254603385925293
    10. 'list' → logprob: -5.754603385925293

Token 199: ' =' (ID: 314)
  Prédit: 'based'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'based' → logprob: -0.24462725222110748
    2. 'index' → logprob: -1.9946272373199463
    3. 'indexed' → logprob: -2.7446272373199463
    4. 'to' → logprob: -5.494627475738525
    5. 'idx' → logprob: -5.994627475738525
    6. ' =' → logprob: -6.619627475738525
    7. '_index' → logprob: -6.744627475738525
    8. '

' → logprob: -6.869627475738525
    9. '=' → logprob: -6.994627475738525
    10. '_based' → logprob: -6.994627475738525

Token 200: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.1118537113070488
    2. ' lambda' → logprob: -2.36185359954834
    3. 'ambda' → logprob: -4.61185359954834
    4. '(lambda' → logprob: -6.48685359954834
    5. '=lambda' → logprob: -9.11185359954834
    6. '()' → logprob: -12.48685359954834
    7. '_lambda' → logprob: -12.48685359954834
    8. 'lam' → logprob: -12.98685359954834
    9. ' ()' → logprob: -14.86185359954834
    10. 'amb' → logprob: -14.98685359954834

Token 201: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2686227560043335
    2. '():' → logprob: -1.5186227560043335
    3. ' :' → logprob: -4.393622875213623
    4. ':list' → logprob: -5.893622875213623
    5. '()' → logprob: -7.268622875213623
    6. ' ():' → logprob: -7.393622875213623
    7. ' ()' → logprob: -9.268622398376465
    8. ':int' → logprob: -11.018622398376465
    9. '=' → logprob: -12.393622398376465
    10. ':l' → logprob: -12.768622398376465

Token 202: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.2801586985588074
    2. ' list' → logprob: -1.5301587581634521
    3. '[list' → logprob: -4.280158519744873
    4. ' [' → logprob: -4.530158519744873
    5. '[' → logprob: -5.905158519744873
    6. '[int' → logprob: -8.780158996582031
    7. '[x' → logprob: -9.030158996582031
    8. '[m' → logprob: -9.905158996582031
    9. '[l' → logprob: -10.530158996582031
    10. '[i' → logprob: -11.030158996582031

Token 203: 'int' (ID: 491)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4850454032421112
    2. 'int' → logprob: -0.9850454330444336
    3. 'i' → logprob: -4.610045433044434
    4. 'a' → logprob: -7.235045433044434
    5. 'v' → logprob: -9.735045433044434
    6. ' x' → logprob: -9.860045433044434
    7. 'b' → logprob: -10.610045433044434
    8. 'e' → logprob: -10.860045433044434
    9. 'n' → logprob: -11.110045433044434
    10. 'k' → logprob: -11.485045433044434

Token 204: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0029987392481416464
    2. '(i' → logprob: -6.1279988288879395
    3. '(s' → logprob: -7.7529988288879395
    4. '(c' → logprob: -8.627998352050781
    5. '(a' → logprob: -9.877998352050781
    6. '(_)' → logprob: -10.002998352050781
    7. '(sys' → logprob: -10.252998352050781
    8. '(n' → logprob: -10.752998352050781
    9. '(' → logprob: -11.127998352050781
    10. '(e' → logprob: -11.502998352050781

Token 205: ')-' (ID: 14080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4557777941226959
    2. ')-' → logprob: -1.2057777643203735
    3. '()' → logprob: -3.705777883529663
    4. '(x' → logprob: -4.080777645111084
    5. '(sys' → logprob: -4.705777645111084
    6. '-' → logprob: -5.455777645111084
    7. '()-' → logprob: -5.580777645111084
    8. 'sys' → logprob: -5.705777645111084
    9. ' for' → logprob: -6.955777645111084
    10. 'for' → logprob: -7.080777645111084

Token 206: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003802680876106024
    2. ' ' → logprob: -7.875380039215088
    3. '  ' → logprob: -17.25037956237793
    4. '   ' → logprob: -18.00037956237793
    5. '0' → logprob: -19.12537956237793
    6. ' for' → logprob: -19.50037956237793
    7. 'int' → logprob: -19.75037956237793
    8. ' sys' → logprob: -19.87537956237793
    9. '
' → logprob: -20.00037956237793
    10. 'sys' → logprob: -20.18787956237793

Token 207: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.33032259345054626
    2. ' for' → logprob: -1.3303226232528687
    3. '()' → logprob: -4.080322742462158
    4. ')' → logprob: -11.705322265625
    5. ' ()' → logprob: -13.205322265625
    6. ' ' → logprob: -13.205322265625
    7. '	for' → logprob: -13.580322265625
    8. '(x' → logprob: -14.705322265625
    9. 'x' → logprob: -15.955322265625
    10. '(' → logprob: -16.330322265625

Token 208: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.38687264919281006
    2. 'x' → logprob: -1.13687264919281
    3. ' ' → logprob: -14.386872291564941
    4. ' ' → logprob: -14.886872291564941
    5. '	x' → logprob: -15.261872291564941
    6. '
' → logprob: -15.761872291564941
    7. ' in' → logprob: -16.136873245239258
    8. '(x' → logprob: -16.511873245239258
    9. '  ' → logprob: -16.511873245239258
    10. ' sys' → logprob: -17.136873245239258

Token 209: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1799008846282959
    2. 'in' → logprob: -1.804900884628296
    3. 'x' → logprob: -8.804901123046875
    4. ' ' → logprob: -13.179901123046875
    5. 's' → logprob: -14.304901123046875
    6. 'inx' → logprob: -14.429901123046875
    7. '	in' → logprob: -14.929901123046875
    8. ' x' → logprob: -14.929901123046875
    9. 'inp' → logprob: -14.929901123046875
    10. '
' → logprob: -15.179901123046875

Token 210: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.003603036515414715
    2. ' sys' → logprob: -5.628602981567383
    3. 'read' → logprob: -13.753602981567383
    4. 'input' → logprob: -14.253602981567383
    5. '(sys' → logprob: -14.503602981567383
    6. '	sys' → logprob: -15.128602981567383
    7. '=sys' → logprob: -15.378602981567383
    8. 'range' → logprob: -16.378602981567383
    9. ' ' → logprob: -16.753602981567383
    10. 's' → logprob: -17.003602981567383

Token 211: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00036834771162830293
    2. 'stdin' → logprob: -8.000368118286133
    3. 'in' → logprob: -10.750368118286133
    4. '.stdout' → logprob: -12.000368118286133
    5. '(stdin' → logprob: -12.625368118286133
    6. 'd' → logprob: -14.000368118286133
    7. '.argv' → logprob: -14.875368118286133
    8. 'input' → logprob: -15.500368118286133
    9. '.readline' → logprob: -16.000368118286133
    10. 's' → logprob: -16.000368118286133

Token 212: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00017600801947992295
    2. 'read' → logprob: -9.500176429748535
    3. 'stdin' → logprob: -10.500176429748535
    4. '.' → logprob: -10.750176429748535
    5. '.stdin' → logprob: -10.875176429748535
    6. '.read' → logprob: -11.000176429748535
    7. '().' → logprob: -11.875176429748535
    8. '.readlines' → logprob: -12.375176429748535
    9. '()' → logprob: -13.125176429748535
    10. '()]' → logprob: -13.875176429748535

Token 213: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.176947600673884e-05
    2. '()' → logprob: -10.750021934509277
    3. '()]' → logprob: -16.00002098083496
    4. ' ().' → logprob: -17.37502098083496
    5. '(' → logprob: -17.62502098083496
    6. '()].' → logprob: -18.25002098083496
    7. '())' → logprob: -19.00002098083496
    8. '().__' → logprob: -19.25002098083496
    9. '()[' → logprob: -19.87502098083496
    10. '.readline' → logprob: -20.37502098083496

Token 214: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00852604117244482
    2. 'strip' → logprob: -5.258525848388672
    3. 'read' → logprob: -5.758525848388672
    4. 'rstrip' → logprob: -9.008525848388672
    5. ' split' → logprob: -11.758525848388672
    6. 'decode' → logprob: -14.508525848388672
    7. ' strip' → logprob: -15.508525848388672
    8. 'spl' → logprob: -15.883525848388672
    9. '.readline' → logprob: -18.133525848388672
    10. '.split' → logprob: -18.133525848388672

Token 215: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0002043748099822551
    2. '()' → logprob: -8.500204086303711
    3. '())' → logprob: -15.375204086303711
    4. '(' → logprob: -15.500204086303711
    5. ']' → logprob: -16.00020408630371
    6. '()]
' → logprob: -16.25020408630371
    7. ' ()' → logprob: -16.87520408630371
    8. '()][' → logprob: -17.37520408630371
    9. ']()' → logprob: -17.62520408630371
    10. '(),' → logprob: -17.75020408630371

Token 216: 'read' (ID: 1293)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.668916642665863
    2. 'read' → logprob: -0.793916642665863
    3. ')' → logprob: -3.668916702270508
    4. 'newline' → logprob: -6.293916702270508
    5. ']' → logprob: -7.043916702270508
    6. 'n' → logprob: -7.168916702270508
    7. '#' → logprob: -7.168916702270508
    8. 'range' → logprob: -7.543916702270508
    9. 'print' → logprob: -7.668916702270508
    10. 'deque' → logprob: -8.168916702270508

Token 217: 'flo' (ID: 174761)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.7916422486305237
    2. 'ints' → logprob: -1.166642189025879
    3. 'int' → logprob: -1.666642189025879
    4. 'lines' → logprob: -4.166642189025879
    5. ' =' → logprob: -4.291642189025879
    6. 'str' → logprob: -4.541642189025879
    7. 's' → logprob: -6.541642189025879
    8. 'string' → logprob: -6.916642189025879
    9. '()' → logprob: -7.041642189025879
    10. '_' → logprob: -7.291642189025879

Token 218: 'ats' (ID: 1838)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.4740859866142273
    2. 'ats' → logprob: -0.9740859866142273
    3. 'a' → logprob: -12.724085807800293
    4. 'atso' → logprob: -12.849085807800293
    5. 'ат' → logprob: -14.099085807800293
    6. '```' → logprob: -14.724085807800293
    7. ' at' → logprob: -14.974085807800293
    8. '	at' → logprob: -15.224085807800293
    9. '[' → logprob: -15.599085807800293
    10. '
' → logprob: -15.974085807800293

Token 219: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932094097137451
    2. ' =' → logprob: -0.6932094097137451
    3. '=lambda' → logprob: -9.693209648132324
    4. ':' → logprob: -15.568209648132324
    5. ' ' → logprob: -16.068208694458008
    6. '＝' → logprob: -16.318208694458008
    7. '=[]' → logprob: -16.693208694458008
    8. ')' → logprob: -16.818208694458008
    9. ' =)' → logprob: -18.318208694458008
    10. ' =
' → logprob: -18.318208694458008

Token 220: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.20142902433872223
    2. ' lambda' → logprob: -1.701429009437561
    3. '(lambda' → logprob: -11.45142936706543
    4. '=lambda' → logprob: -12.20142936706543
    5. ' lamb' → logprob: -18.07642936706543
    6. '_lambda' → logprob: -18.57642936706543
    7. 'list' → logprob: -18.57642936706543
    8. 'lam' → logprob: -19.32642936706543
    9. 'float' → logprob: -19.45142936706543
    10. '   ' → logprob: -19.57642936706543

Token 221: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006195080350153148
    2. ' :' → logprob: -7.500619411468506
    3. '():' → logprob: -10.125619888305664
    4. 'lambda' → logprob: -11.000619888305664
    5. ' lambda' → logprob: -12.000619888305664
    6. ':list' → logprob: -13.375619888305664
    7. '()' → logprob: -14.625619888305664
    8. '=lambda' → logprob: -14.625619888305664
    9. ' ():' → logprob: -14.875619888305664
    10. '(lambda' → logprob: -15.000619888305664

Token 222: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0004408015520311892
    2. ' list' → logprob: -7.75044059753418
    3. 'map' → logprob: -11.50044059753418
    4. '[' → logprob: -18.12544059753418
    5. ' map' → logprob: -19.37544059753418
    6. 'List' → logprob: -19.50044059753418
    7. '[list' → logprob: -20.75044059753418
    8. ' ' → logprob: -21.12544059753418
    9. '	list' → logprob: -21.37544059753418
    10. 'float' → logprob: -22.37544059753418

Token 223: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -1.3544423381972592e-05
    2. ' float' → logprob: -11.25001335144043
    3. '
' → logprob: -15.62501335144043
    4. '	float' → logprob: -16.12501335144043
    5. 'flo' → logprob: -16.12501335144043
    6. '(float' → logprob: -17.87501335144043
    7. '

' → logprob: -18.75001335144043
    8. '   ' → logprob: -19.00001335144043
    9. 'map' → logprob: -19.25001335144043
    10. 'f' → logprob: -19.25001335144043

Token 224: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -5.200166469876422e-06
    2. '(' → logprob: -12.750004768371582
    3. '(s' → logprob: -14.000004768371582
    4. '(sys' → logprob: -14.125004768371582
    5. ']' → logprob: -15.125004768371582
    6. '](' → logprob: -16.1250057220459
    7. '()]' → logprob: -16.1250057220459
    8. ' (' → logprob: -16.5000057220459
    9. '(i' → logprob: -18.0000057220459
    10. '()' → logprob: -18.1250057220459

Token 225: ')' (ID: 8)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.197101429104805
    2. ')' → logprob: -2.072101354598999
    3. 'for' → logprob: -3.072101354598999
    4. ' for' → logprob: -5.197101593017578
    5. '(x' → logprob: -6.947101593017578
    6. ' ()' → logprob: -9.572101593017578
    7. '(' → logprob: -10.697101593017578
    8. 'sys' → logprob: -10.822101593017578
    9. 's' → logprob: -11.697101593017578
    10. '	for' → logprob: -12.072101593017578

Token 226: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4764130115509033
    2. ' for' → logprob: -0.9764130115509033
    3. '()' → logprob: -6.101412773132324
    4. ')' → logprob: -9.476412773132324
    5. '	for' → logprob: -11.851412773132324
    6. 'sys' → logprob: -13.101412773132324
    7. ' sys' → logprob: -13.476412773132324
    8. ']' → logprob: -13.476412773132324
    9. '=sys' → logprob: -13.726412773132324
    10. ' ' → logprob: -13.851412773132324

Token 227: ' x' (ID: 1215)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.5759587287902832
    2. ' sys' → logprob: -0.8259587287902832
    3. '(sys' → logprob: -11.075958251953125
    4. '	sys' → logprob: -12.825958251953125
    5. '=sys' → logprob: -13.950958251953125
    6. ' ' → logprob: -15.950958251953125
    7. '_sys' → logprob: -17.450958251953125
    8. 'map' → logprob: -17.700958251953125
    9. '_' → logprob: -17.825958251953125
    10. '.sys' → logprob: -17.950958251953125

Token 228: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06995855271816254
    2. 'in' → logprob: -2.694958448410034
    3. 'sys' → logprob: -11.944958686828613
    4. ' ' → logprob: -12.319958686828613
    5. 's' → logprob: -12.819958686828613
    6. ' sys' → logprob: -12.944958686828613
    7. '=sys' → logprob: -12.944958686828613
    8. 'import' → logprob: -13.819958686828613
    9. '_' → logprob: -15.194958686828613
    10. ',' → logprob: -15.194958686828613

Token 229: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.01416738796979189
    2. ' sys' → logprob: -4.264167308807373
    3. '(sys' → logprob: -12.764167785644531
    4. '	sys' → logprob: -14.639167785644531
    5. '=sys' → logprob: -15.514167785644531
    6. ' ' → logprob: -15.889167785644531
    7. 'input' → logprob: -15.889167785644531
    8. '
' → logprob: -16.38916778564453
    9. 's' → logprob: -17.51416778564453
    10. '.sys' → logprob: -18.13916778564453

Token 230: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -2.8921695047756657e-05
    2. 'stdin' → logprob: -11.500028610229492
    3. '.' → logprob: -11.625028610229492
    4. '.stdout' → logprob: -11.750028610229492
    5. '.readline' → logprob: -13.500028610229492
    6. '.argv' → logprob: -15.375028610229492
    7. '(stdin' → logprob: -16.375028610229492
    8. '.std' → logprob: -16.625028610229492
    9. '.stderr' → logprob: -17.125028610229492
    10. 'import' → logprob: -18.250028610229492

Token 231: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.31971266865730286
    2. '().' → logprob: -1.3197126388549805
    3. '.stdin' → logprob: -5.0697126388549805
    4. 'stdin' → logprob: -9.44471263885498
    5. '()' → logprob: -10.81971263885498
    6. '(stdin' → logprob: -10.94471263885498
    7. '.' → logprob: -11.06971263885498
    8. 'sys' → logprob: -12.19471263885498
    9. '.stdout' → logprob: -12.94471263885498
    10. '=sys' → logprob: -13.69471263885498

Token 232: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.2664456789934775e-06
    2. '()' → logprob: -13.625000953674316
    3. '.readline' → logprob: -17.000001907348633
    4. ' ().' → logprob: -17.250001907348633
    5. '.split' → logprob: -18.875001907348633
    6. '(' → logprob: -19.500001907348633
    7. '().__' → logprob: -20.250001907348633
    8. '.' → logprob: -20.375001907348633
    9. ' .' → logprob: -20.500001907348633
    10. '.line' → logprob: -20.875001907348633

Token 233: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0009273029863834381
    2. 'read' → logprob: -7.250927448272705
    3. 'strip' → logprob: -8.500926971435547
    4. 'rstrip' → logprob: -11.250926971435547
    5. '.readline' → logprob: -14.750926971435547
    6. ' split' → logprob: -15.125926971435547
    7. 'spl' → logprob: -15.250926971435547
    8. '.split' → logprob: -16.250926971435547
    9. '(split' → logprob: -17.250926971435547
    10. 'decode' → logprob: -17.750926971435547

Token 234: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -1.4021237802808173e-05
    2. '()' → logprob: -11.250014305114746
    3. ']' → logprob: -14.625014305114746
    4. '()]
' → logprob: -15.375014305114746
    5. '())' → logprob: -15.750014305114746
    6. '(' → logprob: -16.50001335144043
    7. ']()' → logprob: -17.75001335144043
    8. ')]' → logprob: -18.62501335144043
    9. '()][' → logprob: -18.62501335144043
    10. '()],' → logprob: -18.62501335144043

Token 235: 'read' (ID: 1293)
  Prédit: 'read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.5247732996940613
    2. 'def' → logprob: -0.8997732996940613
    3. 'reads' → logprob: -8.024773597717285
    4. 'range' → logprob: -8.149773597717285
    5. 'print' → logprob: -8.524773597717285
    6. 'write' → logprob: -9.024773597717285
    7. 'newline' → logprob: -9.399773597717285
    8. 'from' → logprob: -9.399773597717285
    9. 'deque' → logprob: -9.524773597717285
    10. '#' → logprob: -9.899773597717285

Token 236: 'str' (ID: 689)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.03793429583311081
    2. 'lines' → logprob: -3.7879343032836914
    3. 'str' → logprob: -4.662934303283691
    4. 's' → logprob: -6.662934303283691
    5. '()' → logprob: -6.662934303283691
    6. 'ln' → logprob: -7.162934303283691
    7. ' =' → logprob: -7.537934303283691
    8. 'string' → logprob: -7.912934303283691
    9. 'int' → logprob: -8.037934303283691
    10. 'ints' → logprob: -8.662934303283691

Token 237: 's' (ID: 82)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38303112983703613
    2. '=' → logprob: -1.8830311298370361
    3. 'ing' → logprob: -2.008031129837036
    4. 'ings' → logprob: -3.633031129837036
    5. 's' → logprob: -5.258030891418457
    6. 'ng' → logprob: -9.383030891418457
    7. 'line' → logprob: -10.633030891418457
    8. ' ' → logprob: -11.008030891418457
    9. '=lambda' → logprob: -11.508030891418457
    10. '   ' → logprob: -11.883030891418457

Token 238: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31339356303215027
    2. '=' → logprob: -1.3133935928344727
    3. '=lambda' → logprob: -8.938393592834473
    4. ' ' → logprob: -15.563393592834473
    5. '＝' → logprob: -15.688393592834473
    6. '=[]' → logprob: -16.313392639160156
    7. 's' → logprob: -16.813392639160156
    8. ',' → logprob: -17.438392639160156
    9. ':' → logprob: -17.563392639160156
    10. ' =)' → logprob: -17.563392639160156

Token 239: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.015840323641896248
    2. ' lambda' → logprob: -4.515840530395508
    3. 'sys' → logprob: -5.390840530395508
    4. '=lambda' → logprob: -9.015840530395508
    5. '(lambda' → logprob: -10.015840530395508
    6. '=sys' → logprob: -10.640840530395508
    7. ' sys' → logprob: -11.140840530395508
    8. 'list' → logprob: -11.640840530395508
    9. ' =' → logprob: -12.265840530395508
    10. '=' → logprob: -13.890840530395508

Token 240: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008628644980490208
    2. '():' → logprob: -5.508628845214844
    3. ' :' → logprob: -5.633628845214844
    4. '=' → logprob: -7.258628845214844
    5. ' =' → logprob: -8.883628845214844
    6. '()' → logprob: -9.383628845214844
    7. '=lambda' → logprob: -10.508628845214844
    8. ' ()' → logprob: -12.883628845214844
    9. ':=' → logprob: -12.883628845214844
    10. ' ():' → logprob: -12.883628845214844

Token 241: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.008616935461759567
    2. ' sys' → logprob: -4.758616924285889
    3. '[' → logprob: -13.633617401123047
    4. 'list' → logprob: -14.633617401123047
    5. '(sys' → logprob: -14.758617401123047
    6. '=sys' → logprob: -16.633617401123047
    7. '	sys' → logprob: -16.633617401123047
    8. 'str' → logprob: -17.133617401123047
    9. ' [' → logprob: -17.258617401123047
    10. 'input' → logprob: -17.383617401123047

Token 242: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -2.8325677703833207e-05
    2. '.stdout' → logprob: -10.500028610229492
    3. 'stdin' → logprob: -14.125028610229492
    4. '.std' → logprob: -17.250028610229492
    5. '.' → logprob: -17.625028610229492
    6. '.argv' → logprob: -17.750028610229492
    7. ' stdin' → logprob: -19.750028610229492
    8. '.stderr' → logprob: -20.375028610229492
    9. '.readline' → logprob: -21.375028610229492
    10. ' .' → logprob: -21.375028610229492

Token 243: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -2.5776860184123507e-06
    2. '.' → logprob: -13.00000286102295
    3. '.stdin' → logprob: -16.000001907348633
    4. '.read' → logprob: -16.250001907348633
    5. '.readlines' → logprob: -17.000001907348633
    6. ' readline' → logprob: -17.375001907348633
    7. '().' → logprob: -17.500001907348633
    8. 'read' → logprob: -18.750001907348633
    9. ' .' → logprob: -19.125001907348633
    10. '.stdout' → logprob: -19.750001907348633

Token 244: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0009115827269852161
    2. '()' → logprob: -7.000911712646484
    3. ' ().' → logprob: -16.875911712646484
    4. '(' → logprob: -18.625911712646484
    5. '().__' → logprob: -19.125911712646484
    6. '()[' → logprob: -19.250911712646484
    7. '.strip' → logprob: -19.750911712646484
    8. '()?.' → logprob: -20.250911712646484
    9. '())' → logprob: -20.375911712646484
    10. '()

' → logprob: -20.375911712646484

Token 245: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.00704865250736475
    2. 'rstrip' → logprob: -5.007048606872559
    3. 'split' → logprob: -8.007048606872559
    4. ' strip' → logprob: -16.507049560546875
    5. 'read' → logprob: -17.132049560546875
    6. 'decode' → logprob: -18.132049560546875
    7. 'str' → logprob: -18.382049560546875
    8. 'rs' → logprob: -19.632049560546875
    9. '_strip' → logprob: -20.507049560546875
    10. 'rst' → logprob: -21.007049560546875

Token 246: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0001342903997283429
    2. '()]' → logprob: -9.125134468078613
    3. '()
' → logprob: -11.250134468078613
    4. '()\' → logprob: -11.750134468078613
    5. '(' → logprob: -13.375134468078613
    6. '()

' → logprob: -14.375134468078613
    7. '(),' → logprob: -14.375134468078613
    8. '()[' → logprob: -14.625134468078613
    9. '()`' → logprob: -15.250134468078613
    10. ' ()' → logprob: -15.250134468078613

Token 247: 'read' (ID: 1293)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10254073143005371
    2. 'read' → logprob: -2.3525407314300537
    3. '
' → logprob: -7.727540969848633
    4. '

' → logprob: -8.227540969848633
    5. 'print' → logprob: -8.352540969848633
    6. 'write' → logprob: -8.477540969848633
    7. 'class' → logprob: -8.477540969848633
    8. 'import' → logprob: -8.852540969848633
    9. 'from' → logprob: -9.227540969848633
    10. '#' → logprob: -9.352540969848633

Token 248: 'i' (ID: 72)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.00023631771910004318
    2. 'str' → logprob: -9.250236511230469
    3. 'int' → logprob: -9.875236511230469
    4. 'lines' → logprob: -10.250236511230469
    5. '_line' → logprob: -11.250236511230469
    6. 'ln' → logprob: -11.750236511230469
    7. '()' → logprob: -12.125236511230469
    8. ' =' → logprob: -12.125236511230469
    9. 's' → logprob: -12.125236511230469
    10. 'l' → logprob: -13.000236511230469

Token 249: ' =' (ID: 314)
  Prédit: 'nt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nt' → logprob: -0.07896149903535843
    2. 'n' → logprob: -2.5789616107940674
    3. 'nts' → logprob: -10.703961372375488
    4. 't' → logprob: -11.078961372375488
    5. 'ntl' → logprob: -11.578961372375488
    6. 'np' → logprob: -12.453961372375488
    7. 'ntil' → logprob: -12.578961372375488
    8. 'nte' → logprob: -12.703961372375488
    9. 'nta' → logprob: -12.953961372375488
    10. 'ne' → logprob: -13.078961372375488

Token 250: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.3513481616973877
    2. ' lambda' → logprob: -1.2263481616973877
    3. 'int' → logprob: -6.976347923278809
    4. 'ambda' → logprob: -7.226347923278809
    5. '(lambda' → logprob: -7.351347923278809
    6. 'nt' → logprob: -8.226347923278809
    7. '=lambda' → logprob: -8.976347923278809
    8. ' lamb' → logprob: -9.226347923278809
    9. 'n' → logprob: -9.851347923278809
    10. ' int' → logprob: -11.726347923278809

Token 251: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020130950957536697
    2. ' :' → logprob: -4.0201311111450195
    3. '():' → logprob: -6.6451311111450195
    4. ':int' → logprob: -7.3951311111450195
    5. '()' → logprob: -10.27013111114502
    6. 'int' → logprob: -12.02013111114502
    7. '=' → logprob: -12.14513111114502
    8. ' ()' → logprob: -12.27013111114502
    9. ' ():' → logprob: -12.39513111114502
    10. ' ' → logprob: -13.14513111114502

Token 252: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0002615742268972099
    2. ' int' → logprob: -8.250261306762695
    3. 'in' → logprob: -16.125261306762695
    4. '	int' → logprob: -16.375261306762695
    5. '(int' → logprob: -17.250261306762695
    6. '   ' → logprob: -17.375261306762695
    7. ' ' → logprob: -17.500261306762695
    8. '  ' → logprob: -18.375261306762695
    9. '
' → logprob: -19.375261306762695
    10. 'ints' → logprob: -19.375261306762695

Token 253: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.004137410782277584
    2. '(' → logprob: -5.5041375160217285
    3. '()' → logprob: -9.87913703918457
    4. 'sys' → logprob: -12.00413703918457
    5. ' sys' → logprob: -14.37913703918457
    6. '(Sys' → logprob: -14.62913703918457
    7. '=sys' → logprob: -14.87913703918457
    8. '(
' → logprob: -15.62913703918457
    9. '	sys' → logprob: -16.25413703918457
    10. '(system' → logprob: -17.50413703918457

Token 254: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -4.246537173457909e-06
    2. 'stdin' → logprob: -12.625003814697266
    3. '.stdout' → logprob: -14.125003814697266
    4. '.readline' → logprob: -16.625003814697266
    5. '.' → logprob: -16.875003814697266
    6. ' stdin' → logprob: -17.125003814697266
    7. '.argv' → logprob: -17.125003814697266
    8. '(stdin' → logprob: -17.250003814697266
    9. '.std' → logprob: -18.500003814697266
    10. ' .' → logprob: -18.750003814697266

Token 255: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0023982475977391005
    2. '())' → logprob: -6.7523980140686035
    3. '().' → logprob: -7.5023980140686035
    4. '()' → logprob: -7.7523980140686035
    5. ')' → logprob: -9.127398490905762
    6. 'stdin' → logprob: -9.752398490905762
    7. 'read' → logprob: -10.002398490905762
    8. 'line' → logprob: -11.877398490905762
    9. '.stdin' → logprob: -11.877398490905762
    10. '(stdin' → logprob: -12.377398490905762

Token 256: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.005988997407257557
    2. '().' → logprob: -5.755989074707031
    3. '()' → logprob: -5.880989074707031
    4. ')' → logprob: -11.505989074707031
    5. ' ())' → logprob: -12.755989074707031
    6. '();)' → logprob: -14.130989074707031
    7. '(' → logprob: -14.255989074707031
    8. '())
' → logprob: -15.380989074707031
    9. '()]' → logprob: -15.880989074707031
    10. '()
' → logprob: -16.00598907470703

Token 257: 'read' (ID: 1293)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011415722779929638
    2. 'read' → logprob: -4.636415958404541
    3. '#' → logprob: -8.136415481567383
    4. 'write' → logprob: -8.136415481567383
    5. 'from' → logprob: -9.261415481567383
    6. '@' → logprob: -9.261415481567383
    7. 'print' → logprob: -9.261415481567383
    8. 'ndef' → logprob: -9.261415481567383
    9. '

' → logprob: -9.386415481567383
    10. 'n' → logprob: -9.636415481567383

Token 258: 'f' (ID: 69)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.046057023108005524
    2. 'str' → logprob: -3.9210569858551025
    3. 's' → logprob: -4.046057224273682
    4. ' =' → logprob: -5.671057224273682
    5. 'l' → logprob: -6.171057224273682
    6. 'i' → logprob: -7.671057224273682
    7. 'lines' → logprob: -7.796057224273682
    8. '=' → logprob: -8.296056747436523
    9. 'ln' → logprob: -8.296056747436523
    10. 'a' → logprob: -9.171056747436523

Token 259: ' =' (ID: 314)
  Prédit: 'loat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loat' → logprob: -0.37138158082962036
    2. '()' → logprob: -1.3713815212249756
    3. '=' → logprob: -3.8713815212249756
    4. ')' → logprob: -4.246381759643555
    5. ':' → logprob: -4.496381759643555
    6. ' =' → logprob: -5.746381759643555
    7. 'LOAT' → logprob: -6.371381759643555
    8. '(' → logprob: -6.996381759643555
    9. '=lambda' → logprob: -7.371381759643555
    10. 't' → logprob: -7.371381759643555

Token 260: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.49855703115463257
    2. 'float' → logprob: -0.9985570311546326
    3. 'loat' → logprob: -3.8735570907592773
    4. ' lambda' → logprob: -5.873557090759277
    5. ' float' → logprob: -7.873557090759277
    6. '(lambda' → logprob: -8.748557090759277
    7. '=lambda' → logprob: -10.998557090759277
    8. 'ambda' → logprob: -11.248557090759277
    9. '(float' → logprob: -11.998557090759277
    10. '=float' → logprob: -12.123557090759277

Token 261: ':' (ID: 25)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.04976991191506386
    2. 'loat' → logprob: -3.674769878387451
    3. 'lambda' → logprob: -3.924769878387451
    4. ':' → logprob: -6.549769878387451
    5. '(lambda' → logprob: -7.424769878387451
    6. '(float' → logprob: -7.549769878387451
    7. '=float' → logprob: -7.924769878387451
    8. ' float' → logprob: -8.54977035522461
    9. '=lambda' → logprob: -9.54977035522461
    10. ')' → logprob: -9.54977035522461

Token 262: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -1.0206720617134124e-05
    2. ' float' → logprob: -11.50001049041748
    3. 'loat' → logprob: -18.250009536743164
    4. 'fl' → logprob: -18.500009536743164
    5. '	float' → logprob: -18.750009536743164
    6. '(float' → logprob: -19.250009536743164
    7. 'f' → logprob: -19.500009536743164
    8. '=float' → logprob: -20.000009536743164
    9. 'int' → logprob: -20.250009536743164
    10. 'flo' → logprob: -20.375009536743164

Token 263: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.13017670810222626
    2. '(' → logprob: -2.1301767826080322
    3. '()' → logprob: -5.755176544189453
    4. ' (' → logprob: -11.005176544189453
    5. '(s' → logprob: -11.380176544189453
    6. '(Sys' → logprob: -11.630176544189453
    7. '(System' → logprob: -11.755176544189453
    8. 'sys' → logprob: -12.005176544189453
    9. '(x' → logprob: -12.130176544189453
    10. '('' → logprob: -12.255176544189453

Token 264: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -7.505351095460355e-05
    2. 'stdin' → logprob: -9.750075340270996
    3. '.readline' → logprob: -11.625075340270996
    4. '.' → logprob: -12.375075340270996
    5. '.stdout' → logprob: -12.625075340270996
    6. '(stdin' → logprob: -15.375075340270996
    7. '.std' → logprob: -17.25007438659668
    8. ' .' → logprob: -17.37507438659668
    9. '.stderr' → logprob: -17.75007438659668
    10. '```' → logprob: -18.25007438659668

Token 265: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0004642736748792231
    2. '.stdin' → logprob: -8.00046443939209
    3. 'stdin' → logprob: -9.50046443939209
    4. '().' → logprob: -10.50046443939209
    5. '()' → logprob: -11.87546443939209
    6. '(stdin' → logprob: -11.87546443939209
    7. '.' → logprob: -12.25046443939209
    8. 'line' → logprob: -12.75046443939209
    9. '())' → logprob: -13.37546443939209
    10. '```' → logprob: -14.00046443939209

Token 266: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0004885728703811765
    2. ')' → logprob: -8.12548828125
    3. '()' → logprob: -8.62548828125
    4. ' ())' → logprob: -12.37548828125
    5. '())
' → logprob: -12.50048828125
    6. '().' → logprob: -12.87548828125
    7. '(' → logprob: -14.37548828125
    8. '();)' → logprob: -14.62548828125
    9. '()]' → logprob: -14.75048828125
    10. '());' → logprob: -15.00048828125

Token 267: 'reads' (ID: 51226)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003640811424702406
    2. 'class' → logprob: -6.503640651702881
    3. '
' → logprob: -7.878640651702881
    4. 'read' → logprob: -8.128641128540039
    5. '

' → logprob: -8.503641128540039
    6. '#' → logprob: -8.503641128540039
    7. '\' → logprob: -8.753641128540039
    8. '@' → logprob: -9.128641128540039
    9. 'dp' → logprob: -9.128641128540039
    10. 'from' → logprob: -9.378641128540039

Token 268: ' =' (ID: 314)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.20904086530208588
    2. 'line' → logprob: -1.834040880203247
    3. 'tring' → logprob: -4.584040641784668
    4. ' =' → logprob: -4.584040641784668
    5. 't' → logprob: -5.959040641784668
    6. '=' → logprob: -6.209040641784668
    7. 'trs' → logprob: -6.334040641784668
    8. 'tri' → logprob: -7.209040641784668
    9. 'lines' → logprob: -8.084040641784668
    10. 'trin' → logprob: -8.334040641784668

Token 269: ' input' (ID: 3422)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.060591407120227814
    2. 'sys' → logprob: -3.310591459274292
    3. ' lambda' → logprob: -3.810591459274292
    4. ' sys' → logprob: -9.185591697692871
    5. '(lambda' → logprob: -9.935591697692871
    6. 'ambda' → logprob: -12.310591697692871
    7. '=lambda' → logprob: -13.060591697692871
    8. '(sys' → logprob: -13.185591697692871
    9. '=sys' → logprob: -13.310591697692871
    10. 'lam' → logprob: -14.685591697692871

Token 270: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004531349986791611
    2. '<|end|>' → logprob: -6.504531383514404
    3. '=' → logprob: -6.754531383514404
    4. '(' → logprob: -6.879531383514404
    5. 's' → logprob: -8.504530906677246
    6. ')' → logprob: -9.629530906677246
    7. '()
' → logprob: -9.629530906677246
    8. ' =' → logprob: -9.754530906677246
    9. '<|end|>' → logprob: -9.879530906677246
    10. '().' → logprob: -9.879530906677246

Token 271: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0008525127195753157
    2. 'class' → logprob: -7.500852584838867
    3. '#' → logprob: -9.250852584838867
    4. 'n' → logprob: -9.250852584838867
    5. 'd' → logprob: -10.875852584838867
    6. 'for' → logprob: -11.375852584838867
    7. '@' → logprob: -11.375852584838867
    8. 'from' → logprob: -11.750852584838867
    9. 'ndef' → logprob: -11.875852584838867
    10. '\' → logprob: -12.000852584838867

Token 272: ' echo' (ID: 3713)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.05765313282608986
    2. ' solve' → logprob: -3.1826531887054443
    3. ' dfs' → logprob: -5.807652950286865
    4. 'main' → logprob: -6.057652950286865
    5. ' gcd' → logprob: -6.432652950286865
    6. ' factorial' → logprob: -6.432652950286865
    7. 'solve' → logprob: -6.557652950286865
    8. 's' → logprob: -7.432652950286865
    9. ' ' → logprob: -7.682652950286865
    10. '_' → logprob: -7.807652950286865

Token 273: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04550909996032715
    2. ' (' → logprob: -3.670509099960327
    3. '():' → logprob: -4.295509338378906
    4. '(s' → logprob: -6.670509338378906
    5. ' ():' → logprob: -6.670509338378906
    6. '('' → logprob: -7.045509338378906
    7. ':' → logprob: -7.795509338378906
    8. '(text' → logprob: -8.545509338378906
    9. ' :' → logprob: -8.670509338378906
    10. '(message' → logprob: -8.920509338378906

Token 274: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005408896133303642
    2. '):
' → logprob: -5.505408763885498
    3. ')' → logprob: -6.880408763885498
    4. ' ):' → logprob: -8.130409240722656
    5. ':' → logprob: -12.505409240722656
    6. ' )' → logprob: -13.630409240722656
    7. ' ):
' → logprob: -14.005409240722656
    8. '):
' → logprob: -14.255409240722656
    9. ' ' → logprob: -15.130409240722656
    10. '):

' → logprob: -15.505409240722656

Token 275: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09822449833154678
    2. ' print' → logprob: -2.473224401473999
    3. ' return' → logprob: -5.348224639892578
    4. 'print' → logprob: -5.473224639892578
    5. 'return' → logprob: -8.348224639892578
    6. '	print' → logprob: -10.598224639892578
    7. '    ' → logprob: -11.348224639892578
    8. ' ' → logprob: -12.848224639892578
    9. '    
' → logprob: -12.848224639892578
    10. '	return' → logprob: -12.973224639892578

Token 276: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.01106373593211174
    2. '(' → logprob: -4.511063575744629
    3. '((' → logprob: -11.511063575744629
    4. ' (' → logprob: -13.136063575744629
    5. '(f' → logprob: -14.011063575744629
    6. '()' → logprob: -14.136063575744629
    7. '(
' → logprob: -14.261063575744629
    8. '(*' → logprob: -14.261063575744629
    9. 'x' → logprob: -15.386063575744629
    10. '('' → logprob: -15.386063575744629

Token 277: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7954958821064793e-05
    2. ',' → logprob: -11.500018119812012
    3. ' )' → logprob: -12.125018119812012
    4. ',)' → logprob: -14.000018119812012
    5. ',end' → logprob: -14.250018119812012
    6. '))' → logprob: -15.125018119812012
    7. ');' → logprob: -15.250018119812012
    8. ')`' → logprob: -15.500018119812012
    9. ')
' → logprob: -17.250017166137695
    10. ')#' → logprob: -17.250017166137695

Token 278: ' flush' (ID: 37790)
  Prédit: 'flush'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flush' → logprob: -0.4754161536693573
    2. 'end' → logprob: -0.9754161834716797
    3. ' flush' → logprob: -6.97541618347168
    4. ' end' → logprob: -7.97541618347168
    5. ')' → logprob: -10.10041618347168
    6. 'file' → logprob: -10.97541618347168
    7. 'fl' → logprob: -14.35041618347168
    8. ' ' → logprob: -15.35041618347168
    9. '.flush' → logprob: -15.47541618347168
    10. 'sep' → logprob: -15.72541618347168

Token 279: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.38687145709991455
    2. '=' → logprob: -1.1368714570999146
    3. '=False' → logprob: -15.011871337890625
    4. '=
' → logprob: -17.011871337890625
    5. '=

' → logprob: -18.011871337890625
    6. ')=' → logprob: -18.636871337890625
    7. ' =' → logprob: -18.886871337890625
    8. ')' → logprob: -19.136871337890625
    9. '=T' → logprob: -19.136871337890625
    10. '=}' → logprob: -20.386871337890625

Token 280: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -15.250000953674316
    3. '))' → logprob: -15.625000953674316
    4. ')`' → logprob: -16.375
    5. ')
' → logprob: -17.75
    6. ');' → logprob: -18.375
    7. '),' → logprob: -18.75
    8. '')' → logprob: -19.375
    9. '()' → logprob: -19.5
    10. '`)' → logprob: -19.75

Token 281: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07198761403560638
    2. 'def' → logprob: -2.6969876289367676
    3. '<|end|>' → logprob: -6.696987628936768
    4. '\n' → logprob: -8.57198715209961
    5. '

' → logprob: -8.69698715209961
    6. ' 
' → logprob: -9.32198715209961
    7. '<|end|>' → logprob: -9.69698715209961
    8. ')' → logprob: -9.82198715209961
    9. '#' → logprob: -9.94698715209961
    10. 'newline' → logprob: -9.94698715209961

Token 282: ' error' (ID: 2915)
  Prédit: ' flush'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' flush' → logprob: -1.4111673831939697
    2. ' debug' → logprob: -2.5361673831939697
    3. ' dbg' → logprob: -2.5361673831939697
    4. 'dbg' → logprob: -3.0361673831939697
    5. ' main' → logprob: -3.1611673831939697
    6. 'flush' → logprob: -3.4111673831939697
    7. 'debug' → logprob: -3.5361673831939697
    8. 'e' → logprob: -3.5361673831939697
    9. ' e' → logprob: -3.5361673831939697
    10. ' yes' → logprob: -3.5361673831939697

Token 283: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.47120630741119385
    2. '(s' → logprob: -1.9712063074111938
    3. '(msg' → logprob: -2.0962061882019043
    4. '(*' → logprob: -2.2212061882019043
    5. '(' → logprob: -6.096206188201904
    6. '(message' → logprob: -6.221206188201904
    7. '(text' → logprob: -8.346206665039062
    8. '():' → logprob: -8.596206665039062
    9. '_(' → logprob: -10.096206665039062
    10. 'f' → logprob: -10.221206665039062

Token 284: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -8.244413766078651e-05
    2. '):
' → logprob: -10.125082015991211
    3. ' ):' → logprob: -10.875082015991211
    4. ',' → logprob: -11.875082015991211
    5. '(x' → logprob: -12.375082015991211
    6. ')' → logprob: -12.375082015991211
    7. ':' → logprob: -13.125082015991211
    8. ',x' → logprob: -13.375082015991211
    9. '=' → logprob: -13.625082015991211
    10. 'print' → logprob: -13.875082015991211

Token 285: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.4029945433139801
    2. 'print' → logprob: -1.1529945135116577
    3. ' raise' → logprob: -4.402994632720947
    4. 'raise' → logprob: -5.777994632720947
    5. 'import' → logprob: -8.277994155883789
    6. ' sys' → logprob: -8.902994155883789
    7. '   ' → logprob: -9.902994155883789
    8. ' import' → logprob: -10.027994155883789
    9. 'exit' → logprob: -10.027994155883789
    10. 'sys' → logprob: -10.152994155883789

Token 286: '(str' (ID: 7946)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.004380874801427126
    2. '(' → logprob: -5.504380702972412
    3. '(f' → logprob: -8.12938117980957
    4. '(*' → logprob: -12.12938117980957
    5. '(
' → logprob: -14.87938117980957
    6. '('' → logprob: -15.00438117980957
    7. '()' → logprob: -15.12938117980957
    8. '(file' → logprob: -15.25438117980957
    9. '((' → logprob: -15.50438117980957
    10. '(stderr' → logprob: -15.75438117980957

Token 287: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0008106979075819254
    2. '(' → logprob: -7.125810623168945
    3. '('' → logprob: -13.000810623168945
    4. '(
' → logprob: -13.625810623168945
    5. '("' → logprob: -14.250810623168945
    6. 'x' → logprob: -14.250810623168945
    7. ')' → logprob: -15.250810623168945
    8. '(e' → logprob: -15.500810623168945
    9. '('[' → logprob: -15.875810623168945
    10. '('\' → logprob: -16.125810623168945

Token 288: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004129691980779171
    2. '),' → logprob: -5.629129886627197
    3. ',file' → logprob: -8.129129409790039
    4. ' ,' → logprob: -8.879129409790039
    5. '(),' → logprob: -9.629129409790039
    6. '))' → logprob: -11.754129409790039
    7. ')' → logprob: -12.129129409790039
    8. ',f' → logprob: -12.254129409790039
    9. ',end' → logprob: -12.629129409790039
    10. ',error' → logprob: -13.129129409790039

Token 289: ' file' (ID: 1974)
  Prédit: 'flush'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flush' → logprob: -0.24483631551265717
    2. 'file' → logprob: -2.2448363304138184
    3. ' flush' → logprob: -2.2448363304138184
    4. ' file' → logprob: -5.244836330413818
    5. ' ' → logprob: -13.99483585357666
    6. 'fl' → logprob: -14.36983585357666
    7. '.flush' → logprob: -14.74483585357666
    8. 'end' → logprob: -14.99483585357666
    9. '_flush' → logprob: -15.99483585357666
    10. '0' → logprob: -16.119836807250977

Token 290: '=sys' (ID: 149200)
  Prédit: '=sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=sys' → logprob: -6.630610641877865e-06
    2. '(sys' → logprob: -12.000006675720215
    3. 'sys' → logprob: -15.375006675720215
    4. '=' → logprob: -15.625006675720215
    5. ' =' → logprob: -17.1250057220459
    6. '=file' → logprob: -17.2500057220459
    7. ' sys' → logprob: -17.5000057220459
    8. '	sys' → logprob: -18.2500057220459
    9. 's' → logprob: -18.7500057220459
    10. '=subprocess' → logprob: -19.0000057220459

Token 291: '.stderr' (ID: 87058)
  Prédit: '.stderr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stderr' → logprob: -8.895480277715251e-06
    2. '.stdout' → logprob: -12.250008583068848
    3. 'stderr' → logprob: -12.875008583068848
    4. '.' → logprob: -14.125008583068848
    5. '(stderr' → logprob: -15.250008583068848
    6. '.stdin' → logprob: -15.625008583068848
    7. '=sys' → logprob: -15.625008583068848
    8. '.st' → logprob: -16.250009536743164
    9. ' stderr' → logprob: -17.000009536743164
    10. '.std' → logprob: -17.375009536743164

Token 292: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018193373456597328
    2. ',' → logprob: -4.018193244934082
    3. ',end' → logprob: -10.893193244934082
    4. ')
' → logprob: -12.018193244934082
    5. ' )' → logprob: -12.268193244934082
    6. '))' → logprob: -12.268193244934082
    7. ',)' → logprob: -12.643193244934082
    8. ' ,' → logprob: -13.518193244934082
    9. '),' → logprob: -13.643193244934082
    10. '())' → logprob: -14.143193244934082

Token 293: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009453481063246727
    2. '
' → logprob: -4.759453296661377
    3. '<|end|>' → logprob: -7.884453296661377
    4. 'class' → logprob: -8.384453773498535
    5. '

' → logprob: -9.759453773498535
    6. '#' → logprob: -9.884453773498535
    7. ' 
' → logprob: -10.634453773498535
    8. '\' → logprob: -10.759453773498535
    9. '<|end|>' → logprob: -11.134453773498535
    10. '  
' → logprob: -11.259453773498535

Token 294: ' join' (ID: 5863)
  Prédit: ' exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' exit' → logprob: -1.0533634424209595
    2. 'exit' → logprob: -1.8033634424209595
    3. 'debug' → logprob: -2.05336332321167
    4. ' debug' → logprob: -2.17836332321167
    5. 'dbg' → logprob: -3.17836332321167
    6. ' dbg' → logprob: -3.42836332321167
    7. 'warn' → logprob: -3.92836332321167
    8. ' e' → logprob: -4.05336332321167
    9. ' die' → logprob: -4.05336332321167
    10. ' flush' → logprob: -4.80336332321167

Token 295: 'A' (ID: 32)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0258928537368774
    2. '<|end|>' → logprob: -1.0258928537368774
    3. '('' → logprob: -1.6508928537368774
    4. '('_' → logprob: -3.775892734527588
    5. '_' → logprob: -4.900892734527588
    6. '=lambda' → logprob: -5.400892734527588
    7. '('',' → logprob: -5.525892734527588
    8. '<|end|>' → logprob: -5.650892734527588
    9. '("")' → logprob: -5.775892734527588
    10. '(separator' → logprob: -5.775892734527588

Token 296: '(arr' (ID: 19646)
  Prédit: 'rray'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rray' → logprob: -0.4274645149707794
    2. 'rr' → logprob: -2.177464485168457
    3. '('' → logprob: -2.302464485168457
    4. '(' → logprob: -3.677464485168457
    5. '(lambda' → logprob: -3.677464485168457
    6. 'r' → logprob: -3.927464485168457
    7. '(list' → logprob: -4.302464485168457
    8. '(arr' → logprob: -4.427464485168457
    9. 'ray' → logprob: -5.302464485168457
    10. '(rr' → logprob: -5.552464485168457

Token 297: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07671485096216202
    2. 'rray' → logprob: -3.4517147541046143
    3. 'ay' → logprob: -3.9517147541046143
    4. '):' → logprob: -4.451714992523193
    5. 'ray' → logprob: -5.326714992523193
    6. 'y' → logprob: -6.076714992523193
    7. ',y' → logprob: -6.701714992523193
    8. ')' → logprob: -7.076714992523193
    9. 'rr' → logprob: -7.201714992523193
    10. ' ,' → logprob: -7.701714992523193

Token 298: ' sep' (ID: 31529)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sep' → logprob: -0.08272230625152588
    2. ' sep' → logprob: -2.5827221870422363
    3. ''' → logprob: -5.832722187042236
    4. 'separator' → logprob: -7.957722187042236
    5. 'delimiter' → logprob: -8.082722663879395
    6. 'del' → logprob: -9.832722663879395
    7. 's' → logprob: -10.082722663879395
    8. ' separator' → logprob: -10.457722663879395
    9. 'se' → logprob: -10.832722663879395
    10. ' delim' → logprob: -11.082722663879395

Token 299: '):' (ID: 3127)
  Prédit: '=''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '='' → logprob: -0.44287464022636414
    2. '=' → logprob: -1.1928746700286865
    3. '=',' → logprob: -2.9428746700286865
    4. '=None' → logprob: -7.067874431610107
    5. '=",' → logprob: -8.317874908447266
    6. '=''' → logprob: -8.817874908447266
    7. '="' → logprob: -8.942874908447266
    8. '='\' → logprob: -9.317874908447266
    9. '='.' → logprob: -10.067874908447266
    10. '='',' → logprob: -10.067874908447266

Token 300: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.003119252622127533
    2. 'return' → logprob: -5.878119468688965
    3. ' sep' → logprob: -8.128119468688965
    4. ' 
' → logprob: -12.003119468688965
    5. '	return' → logprob: -12.378119468688965
    6. 'sep' → logprob: -12.878119468688965
    7. ''' → logprob: -13.503119468688965
    8. ' separator' → logprob: -13.628119468688965
    9. ' ' → logprob: -13.753119468688965
    10. '"' → logprob: -13.878119468688965

Token 301: ' sep' (ID: 31529)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sep' → logprob: -0.00023500648967456073
    2. ' sep' → logprob: -8.500234603881836
    3. 'str' → logprob: -10.375234603881836
    4. '(se' → logprob: -16.750234603881836
    5. '.sep' → logprob: -17.375234603881836
    6. 'se' → logprob: -17.625234603881836
    7. 'separator' → logprob: -17.750234603881836
    8. 'f' → logprob: -17.875234603881836
    9. '_sep' → logprob: -18.125234603881836
    10. '
' → logprob: -18.250234603881836

Token 302: '.join' (ID: 11004)
  Prédit: '.join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.join' → logprob: -0.16031327843666077
    2. '.' → logprob: -1.9103132486343384
    3. ' .' → logprob: -9.910313606262207
    4. '.j' → logprob: -11.035313606262207
    5. 'join' → logprob: -11.160313606262207
    6. '<|end|>' → logprob: -12.035313606262207
    7. '.Join' → logprob: -13.660313606262207
    8. ').' → logprob: -14.910313606262207
    9. '<|end|>' → logprob: -15.535313606262207
    10. '.expand' → logprob: -15.660313606262207

Token 303: '([' (ID: 5194)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.6555546522140503
    2. 'map' → logprob: -0.9055546522140503
    3. '(str' → logprob: -3.15555477142334
    4. 'arr' → logprob: -3.65555477142334
    5. 'str' → logprob: -5.15555477142334
    6. '(arr' → logprob: -6.15555477142334
    7. '[str' → logprob: -8.90555477142334
    8. ' map' → logprob: -11.03055477142334
    9. 'list' → logprob: -11.65555477142334
    10. '([' → logprob: -12.28055477142334

Token 304: 'str' (ID: 689)
  Prédit: 'str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -9.13388703338569e-06
    2. ' str' → logprob: -11.750009536743164
    3. '(str' → logprob: -13.875009536743164
    4. '	str' → logprob: -17.000009536743164
    5. '   ' → logprob: -17.500009536743164
    6. 'f' → logprob: -17.500009536743164
    7. 'repr' → logprob: -17.625009536743164
    8. '""' → logprob: -17.875009536743164
    9. 'map' → logprob: -17.875009536743164
    10. '
' → logprob: -18.250009536743164

Token 305: '(u' (ID: 17057)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.056552208960056305
    2. '(a' → logprob: -3.0565521717071533
    3. '(e' → logprob: -5.181552410125732
    4. '(i' → logprob: -6.306552410125732
    5. '(el' → logprob: -8.306551933288574
    6. '(elem' → logprob: -9.681551933288574
    7. '(v' → logprob: -9.806551933288574
    8. '(ele' → logprob: -10.181551933288574
    9. '(' → logprob: -10.556551933288574
    10. '(_)' → logprob: -11.181551933288574

Token 306: ')' (ID: 8)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.6276647448539734
    2. '(x' → logprob: -0.8776647448539734
    3. '(i' → logprob: -3.752664804458618
    4. '(u' → logprob: -4.627664566040039
    5. ')' → logprob: -4.752664566040039
    6. 'a' → logprob: -5.502664566040039
    7. '(v' → logprob: -6.002664566040039
    8. '(e' → logprob: -6.877664566040039
    9. '(el' → logprob: -8.127664566040039
    10. '(arr' → logprob: -8.752664566040039

Token 307: ' for' (ID: 395)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.392400324344635
    2. 'for' → logprob: -2.1424002647399902
    3. '(x' → logprob: -2.1424002647399902
    4. '(u' → logprob: -2.7674002647399902
    5. ' for' → logprob: -4.01740026473999
    6. '(v' → logprob: -5.64240026473999
    7. '(e' → logprob: -6.51740026473999
    8. 'a' → logprob: -6.64240026473999
    9. '(i' → logprob: -6.76740026473999
    10. '(arr' → logprob: -7.76740026473999

Token 308: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.038048841059207916
    2. ' u' → logprob: -3.28804874420166
    3. '	u' → logprob: -12.53804874420166
    4. 'arr' → logprob: -12.53804874420166
    5. '(u' → logprob: -16.413049697875977
    6. ' arr' → logprob: -16.663049697875977
    7. '_u' → logprob: -17.788049697875977
    8. ' ' → logprob: -17.788049697875977
    9. '  ' → logprob: -18.788049697875977
    10. 'x' → logprob: -19.413049697875977

Token 309: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4744943082332611
    2. 'in' → logprob: -0.9744943380355835
    3. 'n' → logprob: -7.849494457244873
    4. ' ' → logprob: -12.224493980407715
    5. '<|end|>' → logprob: -12.474493980407715
    6. 'In' → logprob: -13.224493980407715
    7. 'u' → logprob: -13.224493980407715
    8. '
' → logprob: -13.599493980407715
    9. 'import' → logprob: -13.599493980407715
    10. 's' → logprob: -13.724493980407715

Token 310: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.004078758880496025
    2. ' arr' → logprob: -5.5040788650512695
    3. '	arr' → logprob: -15.62907886505127
    4. '
' → logprob: -16.504077911376953
    5. '(arr' → logprob: -16.504077911376953
    6. '_arr' → logprob: -17.504077911376953
    7. ' ' → logprob: -18.504077911376953
    8. '[arr' → logprob: -19.004077911376953
    9. '$arr' → logprob: -19.004077911376953
    10. '<arr' → logprob: -19.379077911376953

Token 311: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -1.8908587662735954e-05
    2. ' ])' → logprob: -11.000019073486328
    3. ')' → logprob: -14.250019073486328
    4. ')])' → logprob: -14.750019073486328
    5. '])]' → logprob: -14.875019073486328
    6. ']' → logprob: -15.500019073486328
    7. '])
' → logprob: -15.750019073486328
    8. ']])' → logprob: -15.875019073486328
    9. ' if' → logprob: -16.500019073486328
    10. ']))' → logprob: -16.500019073486328

Token 312: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.044732216745615005
    2. '
' → logprob: -3.2947323322296143
    3. ')' → logprob: -5.794732093811035
    4. '<|end|>' → logprob: -6.294732093811035
    5. 'newline' → logprob: -7.544732093811035
    6. '\n' → logprob: -7.669732093811035
    7. ' def' → logprob: -8.294732093811035
    8. '#' → logprob: -8.919732093811035
    9. '\' → logprob: -9.419732093811035
    10. '

' → logprob: -9.544732093811035

Token 313: ' join' (ID: 5863)
  Prédit: 'join'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.2774256467819214
    2. ' join' → logprob: -2.652425765991211
    3. 'split' → logprob: -3.902425765991211
    4. 'rev' → logprob: -5.089925765991211
    5. 'reverse' → logprob: -5.152425765991211
    6. 'int' → logprob: -5.214925765991211
    7. 'print' → logprob: -5.777425765991211
    8. 'ints' → logprob: -5.777425765991211
    9. 'read' → logprob: -5.777425765991211
    10. 'main' → logprob: -5.902425765991211

Token 314: 'Row' (ID: 5513)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.04465515911579132
    2. '(arr' → logprob: -4.2946553230285645
    3. 'S' → logprob: -4.4196553230285645
    4. 'arr' → logprob: -4.7946553230285645
    5. 'str' → logprob: -6.0446553230285645
    6. 'map' → logprob: -7.0446553230285645
    7. 'B' → logprob: -7.1696553230285645
    8. '(str' → logprob: -7.4196553230285645
    9. '(' → logprob: -7.5446553230285645
    10. 'L' → logprob: -7.5446553230285645

Token 315: '(grid' (ID: 51818)
  Prédit: '(arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.003618958406150341
    2. '(row' → logprob: -6.128619194030762
    3. '(rows' → logprob: -7.878619194030762
    4. '(a' → logprob: -8.003619194030762
    5. '(A' → logprob: -8.253619194030762
    6. '(' → logprob: -9.128619194030762
    7. '(s' → logprob: -9.128619194030762
    8. '(matrix' → logprob: -9.503619194030762
    9. 's' → logprob: -9.753619194030762
    10. '(lst' → logprob: -10.753619194030762

Token 316: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004120192490518093
    2. ' ,' → logprob: -6.254120349884033
    3. '):' → logprob: -6.754120349884033
    4. ',row' → logprob: -7.629120349884033
    5. '(grid' → logprob: -7.754120349884033
    6. ',g' → logprob: -10.004119873046875
    7. ' ):' → logprob: -11.004119873046875
    8. '):
' → logprob: -11.254119873046875
    9. ',
' → logprob: -12.254119873046875
    10. ',line' → logprob: -13.129119873046875

Token 317: ' s' (ID: 265)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sep' → logprob: -0.079111747443676
    2. ' sep' → logprob: -2.5791118144989014
    3. ' lambda' → logprob: -8.95411205291748
    4. 'lambda' → logprob: -9.45411205291748
    5. ''\' → logprob: -12.07911205291748
    6. ' ' → logprob: -13.07911205291748
    7. 'separator' → logprob: -13.70411205291748
    8. '_sep' → logprob: -13.95411205291748
    9. 'def' → logprob: -14.57911205291748
    10. 'func' → logprob: -14.70411205291748

Token 318: ',' (ID: 11)
  Prédit: 'ep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ep' → logprob: -0.0037316649686545134
    2. '):' → logprob: -5.753731727600098
    3. 'e' → logprob: -7.628731727600098
    4. '=' → logprob: -10.253731727600098
    5. '):
' → logprob: -10.628731727600098
    6. 'eper' → logprob: -13.378731727600098
    7. '=None' → logprob: -13.378731727600098
    8. 'eps' → logprob: -14.003731727600098
    9. '='' → logprob: -14.253731727600098
    10. 'tr' → logprob: -14.378731727600098

Token 319: ' t' (ID: 260)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sep' → logprob: -0.2652554512023926
    2. ' sep' → logprob: -2.5152554512023926
    3. 'i' → logprob: -3.1402554512023926
    4. 'row' → logprob: -4.265255451202393
    5. 'n' → logprob: -4.390255451202393
    6. 'end' → logprob: -4.515255451202393
    7. 'idx' → logprob: -5.015255451202393
    8. ' i' → logprob: -5.140255451202393
    9. ')' → logprob: -5.390255451202393
    10. 'start' → logprob: -5.390255451202393

Token 320: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005369529593735933
    2. '):
' → logprob: -5.255369663238525
    3. ' ):' → logprob: -10.380369186401367
    4. ')' → logprob: -10.505369186401367
    5. '):
' → logprob: -10.755369186401367
    6. '):

' → logprob: -10.880369186401367
    7. ',' → logprob: -11.005369186401367
    8. '=None' → logprob: -12.130369186401367
    9. '=' → logprob: -12.255369186401367
    10. ']):' → logprob: -13.130369186401367

Token 321: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.009848874062299728
    2. 'return' → logprob: -4.6348490715026855
    3. '   ' → logprob: -10.134848594665527
    4. 'eturn' → logprob: -10.759848594665527
    5. 'def' → logprob: -11.509848594665527
    6. '	return' → logprob: -11.884848594665527
    7. ' s' → logprob: -12.634848594665527
    8. ' =' → logprob: -12.759848594665527
    9. '
' → logprob: -13.384848594665527
    10. ' for' → logprob: -13.509848594665527

Token 322: ' s' (ID: 265)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sep' → logprob: -0.7179210782051086
    2. ''\' → logprob: -1.0929210186004639
    3. 's' → logprob: -2.467921018600464
    4. 'join' → logprob: -3.342921018600464
    5. '"\' → logprob: -3.592921018600464
    6. '[s' → logprob: -3.842921018600464
    7. '''.' → logprob: -6.092921257019043
    8. '[' → logprob: -6.842921257019043
    9. '('\' → logprob: -6.967921257019043
    10. ' sep' → logprob: -7.217921257019043

Token 323: '.join' (ID: 11004)
  Prédit: '.join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.join' → logprob: -0.014755213633179665
    2. '.' → logprob: -4.2647552490234375
    3. '+' → logprob: -7.8897552490234375
    4. ' +' → logprob: -8.889755249023438
    5. 'join' → logprob: -10.139755249023438
    6. '(join' → logprob: -11.389755249023438
    7. ' .' → logprob: -11.514755249023438
    8. '().' → logprob: -12.389755249023438
    9. 'sep' → logprob: -12.889755249023438
    10. '.sep' → logprob: -13.264755249023438

Token 324: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.00346049084328115
    2. '(['' → logprob: -6.62846040725708
    3. '[t' → logprob: -7.00346040725708
    4. '(t' → logprob: -7.50346040725708
    5. '[' → logprob: -8.503460884094238
    6. '(str' → logprob: -8.628460884094238
    7. '[str' → logprob: -9.003460884094238
    8. '(row' → logprob: -9.878460884094238
    9. '(grid' → logprob: -10.003460884094238
    10. '(' → logprob: -11.003460884094238

Token 325: 't' (ID: 83)
  Prédit: 'join'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.050077132880687714
    2. '[t' → logprob: -3.300077199935913
    3. '[j' → logprob: -4.675076961517334
    4. 't' → logprob: -6.300076961517334
    5. '(join' → logprob: -8.050077438354492
    6. 'str' → logprob: -8.800077438354492
    7. ' join' → logprob: -9.050077438354492
    8. '(t' → logprob: -9.675077438354492
    9. '[' → logprob: -10.050077438354492
    10. 'j' → logprob: -10.175077438354492

Token 326: '.join' (ID: 11004)
  Prédit: '(row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.2652529776096344
    2. 'row' → logprob: -1.890252947807312
    3. '(r' → logprob: -3.1402530670166016
    4. ' for' → logprob: -3.7652530670166016
    5. 'for' → logprob: -5.265253067016602
    6. 'r' → logprob: -6.015253067016602
    7. '[row' → logprob: -6.515253067016602
    8. '(u' → logprob: -6.640253067016602
    9. ')' → logprob: -7.015253067016602
    10. ' row' → logprob: -7.140253067016602

Token 327: '(str' (ID: 7946)
  Prédit: '(row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.08638743311166763
    2. '([' → logprob: -2.9613873958587646
    3. '(map' → logprob: -4.586387634277344
    4. '(str' → logprob: -4.836387634277344
    5. '(u' → logprob: -5.336387634277344
    6. '(list' → logprob: -5.336387634277344
    7. '(r' → logprob: -6.461387634277344
    8. 'row' → logprob: -7.211387634277344
    9. '(arr' → logprob: -7.586387634277344
    10. '(x' → logprob: -8.836387634277344

Token 328: '(e' (ID: 3454)
  Prédit: '(row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.4007202982902527
    2. '(r' → logprob: -2.0257203578948975
    3. '(x' → logprob: -2.2757203578948975
    4. '(u' → logprob: -2.9007203578948975
    5. '(cell' → logprob: -3.7757203578948975
    6. '(c' → logprob: -5.775720119476318
    7. '(arr' → logprob: -6.025720119476318
    8. '(a' → logprob: -6.400720119476318
    9. '(y' → logprob: -6.650720119476318
    10. '(w' → logprob: -6.650720119476318

Token 329: ')' (ID: 8)
  Prédit: '(row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.36658594012260437
    2. '(r' → logprob: -1.2415859699249268
    3. '(x' → logprob: -5.241585731506348
    4. '(cell' → logprob: -5.241585731506348
    5. '(w' → logprob: -5.491585731506348
    6. '(grid' → logprob: -7.491585731506348
    7. '(u' → logprob: -7.741585731506348
    8. '(' → logprob: -7.866585731506348
    9. 'row' → logprob: -7.866585731506348
    10. '(e' → logprob: -8.241585731506348

Token 330: ' for' (ID: 395)
  Prédit: '(row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.010417209938168526
    2. '(r' → logprob: -4.8854169845581055
    3. '(grid' → logprob: -6.3854169845581055
    4. 'row' → logprob: -7.7604169845581055
    5. '(cell' → logprob: -8.135416984558105
    6. 'for' → logprob: -9.260416984558105
    7. '(x' → logprob: -9.635416984558105
    8. ')' → logprob: -9.760416984558105
    9. '(col' → logprob: -10.260416984558105
    10. 'r' → logprob: -10.385416984558105

Token 331: ' e' (ID: 319)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.7920256853103638
    2. ' row' → logprob: -1.0420256853103638
    3. 'r' → logprob: -1.9170256853103638
    4. ' r' → logprob: -3.292025566101074
    5. 'u' → logprob: -6.167025566101074
    6. ' u' → logprob: -6.542025566101074
    7. 'arr' → logprob: -6.542025566101074
    8. 'x' → logprob: -7.167025566101074
    9. 'y' → logprob: -7.292025566101074
    10. ' arr' → logprob: -7.542025566101074

Token 332: ' in' (ID: 306)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.7689008116722107
    2. ' row' → logprob: -1.1439008712768555
    3. ' in' → logprob: -1.6439008712768555
    4. 'in' → logprob: -3.8939008712768555
    5. '(row' → logprob: -6.2689008712768555
    6. ',row' → logprob: -6.5189008712768555
    7. ')' → logprob: -8.018900871276855
    8. 'r' → logprob: -9.018900871276855
    9. '	row' → logprob: -9.768900871276855
    10. 'e' → logprob: -9.768900871276855

Token 333: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.019671453163027763
    2. 'r' → logprob: -4.019671440124512
    3. ' row' → logprob: -6.519671440124512
    4. 'range' → logprob: -11.519671440124512
    5. 'u' → logprob: -11.644671440124512
    6. ' r' → logprob: -12.019671440124512
    7. 'line' → logprob: -12.144671440124512
    8. 'arr' → logprob: -12.394671440124512
    9. 'x' → logprob: -12.894671440124512
    10. 'rows' → logprob: -13.269671440124512

Token 334: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003297251183539629
    2. '])' → logprob: -6.378297328948975
    3. 'grid' → logprob: -7.253297328948975
    4. ')])' → logprob: -7.628297328948975
    5. '(grid' → logprob: -8.378296852111816
    6. ' )' → logprob: -9.753296852111816
    7. ')]' → logprob: -10.503296852111816
    8. '))' → logprob: -10.878296852111816
    9. ')])
' → logprob: -11.003296852111816
    10. '(row' → logprob: -11.253296852111816

Token 335: ' for' (ID: 395)
  Prédit: '(grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(grid' → logprob: -0.4712395668029785
    2. ')' → logprob: -1.3462395668029785
    3. '])' → logprob: -2.7212395668029785
    4. ' for' → logprob: -3.7212395668029785
    5. 'grid' → logprob: -4.3462395668029785
    6. 'for' → logprob: -4.7212395668029785
    7. '(row' → logprob: -7.0962395668029785
    8. ')])' → logprob: -7.2212395668029785
    9. ']' → logprob: -7.5962395668029785
    10. '   ' → logprob: -7.7212395668029785

Token 336: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.16025570034980774
    2. ' row' → logprob: -1.9102556705474854
    3. 'arr' → logprob: -11.160255432128906
    4. ' ' → logprob: -12.035255432128906
    5. 'r' → logprob: -12.785255432128906
    6. '	row' → logprob: -12.785255432128906
    7. '(row' → logprob: -13.160255432128906
    8. 'grid' → logprob: -13.910255432128906
    9. ' arr' → logprob: -14.285255432128906
    10. ',row' → logprob: -14.410255432128906

Token 337: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020637184381484985
    2. 'in' → logprob: -3.895637273788452
    3. ' ' → logprob: -9.895637512207031
    4. ')' → logprob: -10.895637512207031
    5. '])' → logprob: -11.770637512207031
    6. ' ])' → logprob: -12.395637512207031
    7. '(grid' → logprob: -12.520637512207031
    8. ' )' → logprob: -12.645637512207031
    9. ']' → logprob: -12.770637512207031
    10. ' ]' → logprob: -14.145637512207031

Token 338: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.007953676395118237
    2. ' grid' → logprob: -5.007953643798828
    3. 'range' → logprob: -6.757953643798828
    4. 'arr' → logprob: -10.257953643798828
    5. ' range' → logprob: -11.507953643798828
    6. ')' → logprob: -11.507953643798828
    7. '(grid' → logprob: -11.757953643798828
    8. ' ' → logprob: -12.257953643798828
    9. '
' → logprob: -12.757953643798828
    10. 'g' → logprob: -13.632953643798828

Token 339: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0017563373548910022
    2. ')])' → logprob: -6.501756191253662
    3. ' ])' → logprob: -8.75175666809082
    4. ')' → logprob: -10.75175666809082
    5. ')]' → logprob: -11.00175666809082
    6. '])]' → logprob: -11.00175666809082
    7. '])
' → logprob: -11.00175666809082
    8. ']))' → logprob: -11.50175666809082
    9. ']' → logprob: -12.87675666809082
    10. '])+' → logprob: -13.00175666809082

Token 340: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007377912290394306
    2. '
' → logprob: -5.132378101348877
    3. 'class' → logprob: -6.757378101348877
    4. '<|end|>' → logprob: -8.382377624511719
    5. '#' → logprob: -11.257377624511719
    6. '

' → logprob: -11.507377624511719
    7. 'from' → logprob: -12.132377624511719
    8. '  
' → logprob: -12.632377624511719
    9. ' 
' → logprob: -12.757377624511719
    10. '\' → logprob: -12.882377624511719

Token 341: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.9629946351051331
    2. ' gcd' → logprob: -1.3379945755004883
    3. 'main' → logprob: -2.3379945755004883
    4. ' solve' → logprob: -3.3379945755004883
    5. ' is' → logprob: -3.5879945755004883
    6. ' binary' → logprob: -3.9629945755004883
    7. 'pow' → logprob: -4.087994575500488
    8. 'binary' → logprob: -4.462994575500488
    9. 'g' → logprob: -4.587994575500488
    10. ' pow' → logprob: -4.587994575500488

Token 342: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -5.5577775128767826e-06
    2. ' ():' → logprob: -12.250005722045898
    3. '():
' → logprob: -14.750005722045898
    4. '()' → logprob: -15.000005722045898
    5. '(' → logprob: -16.7500057220459
    6. '(:' → logprob: -19.0000057220459
    7. '(":' → logprob: -19.1250057220459
    8. '():
' → logprob: -21.5000057220459
    9. '().' → logprob: -21.8750057220459
    10. '(':' → logprob: -22.1250057220459

Token 343: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05190214142203331
    2. '    ' → logprob: -3.5519020557403564
    3. '(' → logprob: -5.4269022941589355
    4. '    
' → logprob: -5.4269022941589355
    5. '
' → logprob: -6.3019022941589355
    6. ' readline' → logprob: -6.3019022941589355
    7. 'r' → logprob: -6.6769022941589355
    8. ':' → logprob: -7.0519022941589355
    9. '<|end|>' → logprob: -7.1769022941589355
    10. 'n' → logprob: -7.1769022941589355

Token 344: ' aa' (ID: 40260)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.23823459446430206
    2. ' n' → logprob: -1.7382346391677856
    3. 'pass' → logprob: -4.238234519958496
    4. ' ' → logprob: -4.488234519958496
    5. 'n' → logprob: -5.488234519958496
    6. ' #' → logprob: -6.113234519958496
    7. '    ' → logprob: -6.113234519958496
    8. '   ' → logprob: -6.988234519958496
    9. '#' → logprob: -8.488234519958496
    10. ' x' → logprob: -8.988234519958496

Token 345: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0656479001045227
    2. '=' → logprob: -2.815647840499878
    3. ',' → logprob: -6.315648078918457
    4. ' ' → logprob: -7.440648078918457
    5. 'a' → logprob: -8.315648078918457
    6. 'r' → logprob: -8.440648078918457
    7. '   ' → logprob: -8.565648078918457
    8. '=[]' → logprob: -8.690648078918457
    9. '=[]
' → logprob: -9.440648078918457
    10. ',b' → logprob: -10.065648078918457

Token 346: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.01350935734808445
    2. ' read' → logprob: -5.513509273529053
    3. '[' → logprob: -5.638509273529053
    4. 'list' → logprob: -6.513509273529053
    5. '[]' → logprob: -6.638509273529053
    6. 'int' → logprob: -6.763509273529053
    7. '0' → logprob: -8.013509750366211
    8. 'input' → logprob: -8.388509750366211
    9. 'reads' → logprob: -8.388509750366211
    10. '1' → logprob: -8.513509750366211

Token 347: 'ints' (ID: 20448)
  Prédit: 'ints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ints' → logprob: -0.001205350155942142
    2. 'i' → logprob: -7.0012054443359375
    3. 'int' → logprob: -8.251205444335938
    4. '()' → logprob: -11.251205444335938
    5. 'str' → logprob: -11.751205444335938
    6. ')' → logprob: -12.251205444335938
    7. 'nts' → logprob: -12.501205444335938
    8. 's' → logprob: -13.251205444335938
    9. '())' → logprob: -14.376205444335938
    10. '()
' → logprob: -14.876205444335938

Token 348: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.246537173457909e-06
    2. '()
' → logprob: -12.875003814697266
    3. ' ()' → logprob: -14.375003814697266
    4. '[]' → logprob: -14.625003814697266
    5. '(' → logprob: -15.625003814697266
    6. '();' → logprob: -15.875003814697266
    7. '())' → logprob: -16.375003814697266
    8. '()]' → logprob: -16.500003814697266
    9. '()[' → logprob: -16.750003814697266
    10. ')' → logprob: -17.000003814697266

Token 349: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018252605572342873
    2. '    
' → logprob: -4.768252372741699
    3. '
' → logprob: -5.393252372741699
    4. '<|end|>' → logprob: -6.143252372741699
    5. ')' → logprob: -7.518252372741699
    6. '    ' → logprob: -7.643252372741699
    7. ' ' → logprob: -8.0182523727417
    8. '[' → logprob: -8.1432523727417
    9. 'a' → logprob: -8.3932523727417
    10. ' if' → logprob: -8.7682523727417

Token 350: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3179624676704407
    2. ' n' → logprob: -2.192962408065796
    3. ' for' → logprob: -3.317962408065796
    4. ' if' → logprob: -3.442962408065796
    5. 'n' → logprob: -3.942962408065796
    6. ' sum' → logprob: -4.817962646484375
    7. ' print' → logprob: -4.817962646484375
    8. ' bb' → logprob: -4.817962646484375
    9. 'for' → logprob: -4.942962646484375
    10. ' res' → logprob: -5.317962646484375

Token 351: ' hasattr' (ID: 75562)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.3051622211933136
    2. ' aa' → logprob: -1.5551621913909912
    3. 'len' → logprob: -3.555162191390991
    4. ' not' → logprob: -3.930162191390991
    5. 'aa' → logprob: -5.93016242980957
    6. ' ' → logprob: -7.80516242980957
    7. 'not' → logprob: -9.05516242980957
    8. ' sum' → logprob: -9.43016242980957
    9. ' aaa' → logprob: -9.55516242980957
    10. ' all' → logprob: -9.55516242980957

Token 352: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.8624639324116288e-06
    2. '(ai' → logprob: -14.375001907348633
    3. '(sys' → logprob: -14.625001907348633
    4. '(a' → logprob: -15.000001907348633
    5. '((' → logprob: -16.750001907348633
    6. '(
' → logprob: -16.875001907348633
    7. '   ' → logprob: -17.125001907348633
    8. '(math' → logprob: -17.250001907348633
    9. '(type' → logprob: -17.375001907348633
    10. '(ii' → logprob: -17.500001907348633

Token 353: 'aa' (ID: 3545)
  Prédit: 'aa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aa' → logprob: -0.00275792577303946
    2. '(' → logprob: -6.252758026123047
    3. 'sys' → logprob: -7.627758026123047
    4. 'math' → logprob: -9.252758026123047
    5. 'aaa' → logprob: -9.627758026123047
    6. '__' → logprob: -9.877758026123047
    7. ' aa' → logprob: -10.252758026123047
    8. 'main' → logprob: -10.377758026123047
    9. 'a' → logprob: -11.627758026123047
    10. '#aa' → logprob: -11.877758026123047

Token 354: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005697138840332627
    2. ','' → logprob: -7.750569820404053
    3. '(' → logprob: -9.625569343566895
    4. ' ,' → logprob: -10.000569343566895
    5. ',"' → logprob: -11.250569343566895
    6. ',(' → logprob: -12.500569343566895
    7. '   ' → logprob: -12.500569343566895
    8. '('' → logprob: -14.125569343566895
    9. ',
' → logprob: -14.125569343566895
    10. ' ,'' → logprob: -14.375569343566895

Token 355: ' '__' (ID: 28278)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0278250090777874
    2. '"' → logprob: -3.652825117111206
    3. ' '__' → logprob: -6.777824878692627
    4. ''int' → logprob: -9.152825355529785
    5. '('__' → logprob: -9.777825355529785
    6. ''s' → logprob: -10.277825355529785
    7. ' "__' → logprob: -10.277825355529785
    8. ' ' → logprob: -11.277825355529785
    9. ''b' → logprob: -11.402825355529785
    10. ''value' → logprob: -11.402825355529785

Token 356: 'getitem' (ID: 147767)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.6945278644561768
    2. 'len' → logprob: -0.6945278644561768
    3. 'next' → logprob: -6.694527626037598
    4. 'getitem' → logprob: -8.944527626037598
    5. 'contains' → logprob: -11.444527626037598
    6. 'call' → logprob: -15.194527626037598
    7. 'bool' → logprob: -16.069528579711914
    8. 'name' → logprob: -16.444528579711914
    9. 'sizeof' → logprob: -16.569528579711914
    10. 'index' → logprob: -16.569528579711914

Token 357: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.009926904924213886
    2. ''):' → logprob: -5.634926795959473
    3. '')' → logprob: -6.009926795959473
    4. '__('' → logprob: -6.259926795959473
    5. '__(' → logprob: -6.884926795959473
    6. ''):
' → logprob: -7.509926795959473
    7. '__)' → logprob: -9.009926795959473
    8. '_' → logprob: -9.259926795959473
    9. '('' → logprob: -9.759926795959473
    10. '__
' → logprob: -11.134926795959473

Token 358: ''):
' (ID: 26539)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19284433126449585
    2. '):' → logprob: -1.8178443908691406
    3. '')' → logprob: -4.942844390869141
    4. ''):' → logprob: -5.817844390869141
    5. '):
' → logprob: -6.067844390869141
    6. ' )' → logprob: -8.56784439086914
    7. ' ):' → logprob: -9.19284439086914
    8. '(' → logprob: -9.44284439086914
    9. ''):
' → logprob: -9.56784439086914
    10. '('' → logprob: -10.06784439086914

Token 359: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18412330746650696
    2. ':' → logprob: -2.0591232776641846
    3. ' and' → logprob: -3.5591232776641846
    4. ':
' → logprob: -4.809123516082764
    5. '[' → logprob: -7.059123516082764
    6. ' :' → logprob: -7.184123516082764
    7. '        
' → logprob: -7.309123516082764
    8. ',' → logprob: -7.559123516082764
    9. '   ' → logprob: -8.434123039245605
    10. ' if' → logprob: -8.934123039245605

Token 360: ' n' (ID: 297)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28974467515945435
    2. ' for' → logprob: -2.1647446155548096
    3. ' if' → logprob: -2.7897446155548096
    4. ' print' → logprob: -4.164744853973389
    5. ' pass' → logprob: -4.289744853973389
    6. ' n' → logprob: -4.789744853973389
    7. 'for' → logprob: -5.039744853973389
    8. 'print' → logprob: -5.164744853973389
    9. ' a' → logprob: -5.414744853973389
    10. 'a' → logprob: -5.414744853973389

Token 361: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006826905999332666
    2. '=' → logprob: -5.006826877593994
    3. '=len' → logprob: -9.131827354431152
    4. ' ' → logprob: -14.131827354431152
    5. '   ' → logprob: -14.256827354431152
    6. '    ' → logprob: -14.631827354431152
    7. ' =
' → logprob: -14.881827354431152
    8. '=int' → logprob: -15.131827354431152
    9. 'len' → logprob: -15.381827354431152
    10. ' >' → logprob: -15.881827354431152

Token 362: ' s' (ID: 265)
  Prédit: ' aa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' aa' → logprob: -0.1553923338651657
    2. 'aa' → logprob: -2.7803924083709717
    3. '*' → logprob: -3.5303924083709717
    4. 'm' → logprob: -3.9053924083709717
    5. ' *' → logprob: -4.030392169952393
    6. ' m' → logprob: -4.405392169952393
    7. ' ' → logprob: -6.530392169952393
    8. '*m' → logprob: -7.905392169952393
    9. ' =' → logprob: -8.90539264678955
    10. '*a' → logprob: -9.15539264678955

Token 363: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04862596467137337
    2. ' =' → logprob: -3.048625946044922
    3. ',' → logprob: -10.173625946044922
    4. ')' → logprob: -15.173625946044922
    5. ')=' → logprob: -16.798625946044922
    6. ' ' → logprob: -16.798625946044922
    7. '=}' → logprob: -17.298625946044922
    8. '=
' → logprob: -17.548625946044922
    9. '=

' → logprob: -18.298625946044922
    10. ' =)' → logprob: -18.673625946044922

Token 364: ' aa' (ID: 40260)
  Prédit: 'aa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aa' → logprob: -0.0021859495900571346
    2. ' aa' → logprob: -6.127185821533203
    3. '   ' → logprob: -14.502185821533203
    4. ' ' → logprob: -16.127185821533203
    5. 'aaa' → logprob: -16.252185821533203
    6. '  ' → logprob: -16.502185821533203
    7. 'a' → logprob: -17.252185821533203
    8. '
' → logprob: -17.877185821533203
    9. '    ' → logprob: -18.502185821533203
    10. 'int' → logprob: -18.877185821533203

Token 365: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0009091986576095223
    2. '[:' → logprob: -7.750909328460693
    3. ',' → logprob: -8.250908851623535
    4. '0' → logprob: -9.375908851623535
    5. '[:]' → logprob: -9.750908851623535
    6. '[]' → logprob: -10.500908851623535
    7. '    ' → logprob: -11.500908851623535
    8. '
' → logprob: -12.375908851623535
    9. ' ' → logprob: -12.625908851623535
    10. ' =' → logprob: -12.625908851623535

Token 366: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005071613122709095
    2. ' ' → logprob: -7.625507354736328
    3. ':' → logprob: -11.125507354736328
    4. ' :' → logprob: -12.875507354736328
    5. ',' → logprob: -14.000507354736328
    6. '
' → logprob: -14.250507354736328
    7. ' 
' → logprob: -16.125507354736328
    8. '  ' → logprob: -16.125507354736328
    9. '   ' → logprob: -17.000507354736328
    10. ']' → logprob: -17.250507354736328

Token 367: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.014516273513436317
    2. ',' → logprob: -4.264516353607178
    3. ']' → logprob: -8.26451587677002
    4. ' ],' → logprob: -9.51451587677002
    5. ' ,' → logprob: -11.01451587677002
    6. ':],' → logprob: -13.63951587677002
    7. '),' → logprob: -13.76451587677002
    8. ':' → logprob: -13.88951587677002
    9. ' ' → logprob: -14.26451587677002
    10. '2' → logprob: -15.51451587677002

Token 368: ' aa' (ID: 40260)
  Prédit: ' aa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' aa' → logprob: -0.5242284536361694
    2. 'aa' → logprob: -0.8992284536361694
    3. ''' → logprob: -7.399228572845459
    4. 'str' → logprob: -9.2742280960083
    5. '"' → logprob: -9.3992280960083
    6. '''.' → logprob: -9.5242280960083
    7. ' '' → logprob: -9.6492280960083
    8. ' str' → logprob: -10.1492280960083
    9. ' ''.' → logprob: -10.1492280960083
    10. ' ' → logprob: -10.7742280960083

Token 369: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00021366903092712164
    2. '1' → logprob: -8.500213623046875
    3. ' [' → logprob: -12.250213623046875
    4. '[
' → logprob: -12.875213623046875
    5. ' ' → logprob: -13.750213623046875
    6. '
' → logprob: -14.125213623046875
    7. '[-' → logprob: -14.250213623046875
    8. '-' → logprob: -17.125213623046875
    9. '```' → logprob: -17.125213623046875
    10. '

' → logprob: -17.312713623046875

Token 370: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.125001907348633
    3. '
' → logprob: -16.000001907348633
    4. ']' → logprob: -17.375001907348633
    5. '   ' → logprob: -17.625001907348633
    6. '-' → logprob: -17.875001907348633
    7. '```' → logprob: -18.687501907348633
    8. '2' → logprob: -19.125001907348633
    9. '

' → logprob: -19.250001907348633
    10. '１' → logprob: -19.375001907348633

Token 371: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001805377542041242
    2. ' ]' → logprob: -9.1251802444458
    3. ']
' → logprob: -9.8751802444458
    4. '<|end|>' → logprob: -12.1251802444458
    5. ')' → logprob: -12.7501802444458
    6. '()]' → logprob: -13.1251802444458
    7. 's' → logprob: -13.2501802444458
    8. ')]' → logprob: -13.2501802444458
    9. ':]' → logprob: -13.7501802444458
    10. '])' → logprob: -14.0001802444458

Token 372: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 373: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09881378710269928
    2. ' else' → logprob: -2.848813772201538
    3. 'else' (adapté à ' else') → logprob: -3.723813772201538
    4. '
' → logprob: -5.848814010620117
    5. '    
' → logprob: -6.348814010620117
    6. ':' → logprob: -6.598814010620117
    7. '    ' → logprob: -6.848814010620117
    8. 'elif' → logprob: -6.848814010620117
    9. ' elif' → logprob: -7.473814010620117
    10. ' ' → logprob: -7.473814010620117

Token 374: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.019395554438233376
    2. ':
' → logprob: -4.019395351409912
    3. '       ' → logprob: -6.769395351409912
    4. ' :' → logprob: -9.76939582824707
    5. '   ' → logprob: -10.89439582824707
    6. ' :
' → logprob: -11.51939582824707
    7. ',' → logprob: -12.14439582824707
    8. ' =' → logprob: -13.89439582824707
    9. '    ' → logprob: -14.14439582824707
    10. '():' → logprob: -14.51939582824707

Token 375: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7222805619239807
    2. ' n' → logprob: -1.222280502319336
    3. ' return' → logprob: -1.972280502319336
    4. 'n' → logprob: -2.847280502319336
    5. 'return' → logprob: -4.472280502319336
    6. '    ' → logprob: -5.347280502319336
    7. ' None' → logprob: -6.097280502319336
    8. ' raise' → logprob: -7.097280502319336
    9. '   ' → logprob: -7.347280502319336
    10. '        ' → logprob: -7.722280502319336

Token 376: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.638340413570404
    2. ' n' → logprob: -0.763340413570404
    3. ' s' → logprob: -6.263340473175049
    4. 's' → logprob: -6.263340473175049
    5. 'a' → logprob: -7.263340473175049
    6. 'return' → logprob: -7.763340473175049
    7. ' return' → logprob: -7.888340473175049
    8. ' a' → logprob: -9.13833999633789
    9. '   ' → logprob: -9.76333999633789
    10. '    ' → logprob: -10.13833999633789

Token 377: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005076381494291127
    2. '=' → logprob: -8.375507354736328
    3. ',s' → logprob: -8.375507354736328
    4. ' =' → logprob: -10.625507354736328
    5. ' ,' → logprob: -11.125507354736328
    6. ',
' → logprob: -12.375507354736328
    7. '=s' → logprob: -13.250507354736328
    8. ' s' → logprob: -14.250507354736328
    9. 's' → logprob: -14.500507354736328
    10. ',\
' → logprob: -16.000507354736328

Token 378: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.28127631545066833
    2. 's' → logprob: -1.4062763452529907
    3. ' aa' → logprob: -9.15627670288086
    4. ' ' → logprob: -11.53127670288086
    5. 'aa' → logprob: -11.90627670288086
    6. ' ' → logprob: -13.53127670288086
    7. 'ss' → logprob: -14.40627670288086
    8. 'a' → logprob: -14.65627670288086
    9. '	s' → logprob: -15.28127670288086
    10. '_s' → logprob: -15.65627670288086

Token 379: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931670308113098
    2. ' =' → logprob: -0.6931670308113098
    3. ',' → logprob: -11.193166732788086
    4. ' ' → logprob: -12.193166732788086
    5. ' =
' → logprob: -15.193166732788086
    6. '=int' → logprob: -15.818166732788086
    7. '=s' → logprob: -16.193166732788086
    8. '=

' → logprob: -16.318166732788086
    9. ')' → logprob: -16.443166732788086
    10. ' ,' → logprob: -16.693166732788086

Token 380: ' ' (ID: 220)
  Prédit: 'aa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aa' → logprob: -0.026885008439421654
    2. ' aa' → logprob: -3.6518850326538086
    3. '0' → logprob: -8.026885032653809
    4. 'n' → logprob: -9.526885032653809
    5. 'read' → logprob: -9.901885032653809
    6. 'None' → logprob: -10.401885032653809
    7. 'a' → logprob: -10.651885032653809
    8. 'int' → logprob: -10.651885032653809
    9. 'map' → logprob: -11.651885032653809
    10. ' ' → logprob: -11.651885032653809

Token 381: '0' (ID: 15)
  Prédit: 'aa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aa' → logprob: -0.0006252297898754478
    2. '0' → logprob: -8.125625610351562
    3. ' aa' → logprob: -8.750625610351562
    4. 'int' → logprob: -9.875625610351562
    5. 'None' → logprob: -10.375625610351562
    6. 'read' → logprob: -10.375625610351562
    7. 'n' → logprob: -10.875625610351562
    8. 'map' → logprob: -11.250625610351562
    9. 'a' → logprob: -11.875625610351562
    10. 'list' → logprob: -12.500625610351562

Token 382: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.297462171758525e-05
    2. '0' → logprob: -11.125033378601074
    3. ',
' → logprob: -11.375033378601074
    4. ',None' → logprob: -12.750033378601074
    5. ' ,' → logprob: -12.875033378601074
    6. ',n' → logprob: -15.375033378601074
    7. ' ' → logprob: -15.875033378601074
    8. '<|end|>' → logprob: -16.000032424926758
    9. ',

' → logprob: -16.250032424926758
    10. ',\
' → logprob: -16.875032424926758

Token 383: ' ' (ID: 220)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.16681800782680511
    2. '""' → logprob: -2.2918179035186768
    3. '0' → logprob: -3.1668179035186768
    4. ' ''' → logprob: -4.791818141937256
    5. ' ' → logprob: -6.791818141937256
    6. ' ""' → logprob: -7.541818141937256
    7. '"' → logprob: -8.416817665100098
    8. ''' → logprob: -8.541817665100098
    9. ''''' → logprob: -11.541817665100098
    10. 'None' → logprob: -11.791817665100098

Token 384: '0' (ID: 15)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.1629900336265564
    2. '""' → logprob: -1.9129900932312012
    3. '0' → logprob: -6.037990093231201
    4. '"' → logprob: -8.287989616394043
    5. ''' → logprob: -9.162989616394043
    6. ' ''' → logprob: -12.162989616394043
    7. ''',' → logprob: -12.787989616394043
    8. ''''' → logprob: -13.287989616394043
    9. '''''' → logprob: -13.412989616394043
    10. 'None' → logprob: -13.662989616394043

Token 385: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 386: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15049616992473602
    2. '   ' → logprob: -2.025496244430542
    3. '    
' → logprob: -5.275496006011963
    4. '<|end|>' → logprob: -6.150496006011963
    5. 'if' → logprob: -8.650496482849121
    6. ' if' → logprob: -10.150496482849121
    7. '#' → logprob: -10.150496482849121
    8. '  
' → logprob: -10.400496482849121
    9. ' 
' → logprob: -10.525496482849121
    10. '
' → logprob: -10.650496482849121

Token 387: ' fallback' (ID: 66264)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20247569680213928
    2. ' return' → logprob: -2.5774757862091064
    3. 'return' → logprob: -3.2024757862091064
    4. '       ' → logprob: -3.7024757862091064
    5. '
' → logprob: -3.8274757862091064
    6. '<|end|>' → logprob: -4.702475547790527
    7. '#' → logprob: -5.202475547790527
    8. ' ' → logprob: -6.577475547790527
    9. '    
' → logprob: -7.327475547790527
    10. '...' → logprob: -7.702475547790527

Token 388: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 389: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.47805967926979065
    2. '   ' → logprob: -1.1030596494674683
    3. '<|end|>' → logprob: -3.478059768676758
    4. '    
' → logprob: -4.103059768676758
    5. '<|end|>' → logprob: -8.728059768676758
    6. '```' → logprob: -8.978059768676758
    7. '  
' → logprob: -8.978059768676758
    8. ' 
' → logprob: -9.728059768676758
    9. ',' → logprob: -10.228059768676758
    10. '	
' → logprob: -10.353059768676758

Token 390: ' a' (ID: 261)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.209539532661438
    2. '   ' → logprob: -1.709539532661438
    3. '<|end|>' → logprob: -5.459539413452148
    4. '    
' → logprob: -5.834539413452148
    5. 'if' → logprob: -8.459539413452148
    6. ' 
' → logprob: -8.709539413452148
    7. 'n' → logprob: -9.334539413452148
    8. '  
' → logprob: -9.459539413452148
    9. ' if' → logprob: -9.834539413452148
    10. '<|end|>' → logprob: -9.959539413452148

Token 391: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1442563235759735
    2. '=' → logprob: -2.019256353378296
    3. 'a' → logprob: -6.519256114959717
    4. ',' → logprob: -10.769256591796875
    5. '=[]' → logprob: -10.769256591796875
    6. '=[' → logprob: -11.019256591796875
    7. ' ' → logprob: -11.394256591796875
    8. 'rray' → logprob: -11.519256591796875
    9. 'rr' → logprob: -11.769256591796875
    10. ' =[' → logprob: -12.269256591796875

Token 392: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06777185946702957
    2. '=' → logprob: -3.3177719116210938
    3. 'a' → logprob: -3.8177719116210938
    4. ',' → logprob: -4.942771911621094
    5. ',a' → logprob: -9.692771911621094
    6. 'rray' → logprob: -9.942771911621094
    7. 'rr' → logprob: -10.817771911621094
    8. '=[' → logprob: -11.317771911621094
    9. '=a' → logprob: -11.942771911621094
    10. '   ' → logprob: -12.067771911621094

Token 393: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.482362300157547
    2. '[' → logprob: -1.6073622703552246
    3. '[]' → logprob: -2.1073622703552246
    4. ' [' → logprob: -3.8573622703552246
    5. ' read' → logprob: -4.482362270355225
    6. '[a' → logprob: -4.732362270355225
    7. '[s' → logprob: -4.982362270355225
    8. 'list' → logprob: -5.732362270355225
    9. ' []' → logprob: -5.982362270355225
    10. '[n' → logprob: -6.107362270355225

Token 394: 'ints' (ID: 20448)
  Prédit: 'ints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ints' → logprob: -0.0013160702073946595
    2. 'int' → logprob: -7.126316070556641
    3. 'nts' → logprob: -8.87631607055664
    4. 'str' → logprob: -8.87631607055664
    5. '()' → logprob: -9.12631607055664
    6. 'i' → logprob: -9.87631607055664
    7. 's' → logprob: -11.25131607055664
    8. '()
' → logprob: -11.50131607055664
    9. 'line' → logprob: -11.62631607055664
    10. 'flo' → logprob: -11.62631607055664

Token 395: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0003825293097179383
    2. '()
' → logprob: -7.875382423400879
    3. ' ()' → logprob: -13.750382423400879
    4. '()

' → logprob: -15.125382423400879
    5. '()\' → logprob: -15.375382423400879
    6. '()]' → logprob: -15.750382423400879
    7. '(' → logprob: -16.000383377075195
    8. '0' → logprob: -16.125383377075195
    9. '()
' → logprob: -16.125383377075195
    10. '()`' → logprob: -16.375383377075195

Token 396: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011050907196477056
    2. '<|end|>' → logprob: -7.501105308532715
    3. '    
' → logprob: -8.251105308532715
    4. 'a' → logprob: -9.126105308532715
    5. '    ' → logprob: -9.626105308532715
    6. 'n' → logprob: -9.876105308532715
    7. '
' → logprob: -10.751105308532715
    8. '<|end|>' → logprob: -11.626105308532715
    9. 'b' → logprob: -12.501105308532715
    10. '#' → logprob: -12.501105308532715

Token 397: ' result' (ID: 1534)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.29591450095176697
    2. ' dp' → logprob: -2.2959144115448
    3. '   ' → logprob: -2.4209144115448
    4. 'a' → logprob: -3.4209144115448
    5. 'n' → logprob: -5.670914649963379
    6. 's' → logprob: -6.045914649963379
    7. 'd' → logprob: -6.170914649963379
    8. 'if' → logprob: -6.170914649963379
    9. 'ans' → logprob: -6.170914649963379
    10. 'for' → logprob: -6.170914649963379

Token 398: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07003758102655411
    2. '=' → logprob: -2.695037603378296
    3. '_' → logprob: -9.570037841796875
    4. ',' → logprob: -11.570037841796875
    5. 's' → logprob: -11.570037841796875
    6. ' ' → logprob: -12.570037841796875
    7. ':' → logprob: -12.945037841796875
    8. '=[]' → logprob: -13.320037841796875
    9. ' =
' → logprob: -14.070037841796875
    10. '[:]' → logprob: -14.695037841796875

Token 399: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5011584162712097
    2. ' ' → logprob: -1.1261584758758545
    3. '[]' → logprob: -3.8761584758758545
    4. ' []' → logprob: -3.8761584758758545
    5. ' s' → logprob: -4.751158237457275
    6. ' [' → logprob: -5.001158237457275
    7. ' a' → logprob: -5.626158237457275
    8. 's' → logprob: -6.001158237457275
    9. 'a' → logprob: -6.251158237457275
    10. '[' → logprob: -6.751158237457275

Token 400: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0649792030453682
    2. '[]' → logprob: -3.939979314804077
    3. 'sum' → logprob: -3.939979314804077
    4. 's' → logprob: -4.564979076385498
    5. 'a' → logprob: -5.314979076385498
    6. '[' → logprob: -6.189979076385498
    7. '[s' → logprob: -6.689979076385498
    8. '-' → logprob: -6.814979076385498
    9. 'False' → logprob: -7.314979076385498
    10. '[a' → logprob: -7.439979076385498

Token 401: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.41869616508483887
    2. '   ' → logprob: -1.7936961650848389
    3. '<|end|>' → logprob: -2.918696165084839
    4. ' 
' → logprob: -3.543696165084839
    5. ' for' → logprob: -3.918696165084839
    6. ' ' → logprob: -3.918696165084839
    7. 'for' → logprob: -4.293696403503418
    8. '    
' → logprob: -4.543696403503418
    9. ',' → logprob: -4.668696403503418
    10. ')' → logprob: -5.543696403503418

Token 402: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2474692165851593
    2. '
' → logprob: -1.622469186782837
    3. ' for' → logprob: -4.622469425201416
    4. '<|end|>' → logprob: -5.497469425201416
    5. '    
' → logprob: -5.622469425201416
    6. 'for' → logprob: -6.997469425201416
    7. ' 
' → logprob: -7.247469425201416
    8. '    ' → logprob: -7.997469425201416
    9. ',' → logprob: -8.247468948364258
    10. '   
' → logprob: -8.372468948364258

Token 403: ' DP' (ID: 51992)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4912370443344116
    2. 'dp' → logprob: -2.366237163543701
    3. '   ' → logprob: -2.866237163543701
    4. 'cur' → logprob: -3.741237163543701
    5. 'i' → logprob: -3.991237163543701
    6. 'cnt' → logprob: -3.991237163543701
    7. 'curr' → logprob: -4.116237163543701
    8. 'current' → logprob: -4.241237163543701
    9. 'l' → logprob: -4.241237163543701
    10. 'count' → logprob: -4.241237163543701

Token 404: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.055097561329603195
    2. '=' → logprob: -2.9300975799560547
    3. '[' → logprob: -8.680097579956055
    4. ' ' → logprob: -11.305097579956055
    5. '=[' → logprob: -11.805097579956055
    6. ',' → logprob: -11.930097579956055
    7. ' =[' → logprob: -12.305097579956055
    8. '_' → logprob: -12.555097579956055
    9. ']' → logprob: -13.055097579956055
    10. '0' → logprob: -13.555097579956055

Token 405: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04026937112212181
    2. '[[' → logprob: -3.290269374847412
    3. '[-' → logprob: -6.915269374847412
    4. ' [' → logprob: -7.915269374847412
    5. '{}' → logprob: -8.040268898010254
    6. '[a' → logprob: -8.415268898010254
    7. '{' → logprob: -8.790268898010254
    8. 'cl' → logprob: -10.290268898010254
    9. ' [[' → logprob: -10.790268898010254
    10. '[{' → logprob: -10.915268898010254

Token 406: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.24617540836334229
    2. '[' → logprob: -1.6211754083633423
    3. 'INF' → logprob: -4.871175289154053
    4. '-' → logprob: -5.371175289154053
    5. 'False' → logprob: -5.496175289154053
    6. '[-' → logprob: -6.246175289154053
    7. '(' → logprob: -7.496175289154053
    8. 'float' → logprob: -7.996175289154053
    9. '[s' → logprob: -7.996175289154053
    10. ' [' → logprob: -8.871175765991211

Token 407: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008780848234891891
    2. ']*(' → logprob: -4.7587809562683105
    3. ']*' → logprob: -8.883780479431152
    4. ' for' → logprob: -11.133780479431152
    5. 'for' → logprob: -11.883780479431152
    6. ']+' → logprob: -12.758780479431152
    7. ' ]' → logprob: -13.133780479431152
    8. '][' → logprob: -14.508780479431152
    9. ',' → logprob: -14.883780479431152
    10. '()]' → logprob: -16.25878143310547

Token 408: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0009190816199406981
    2. ' _' → logprob: -7.500918865203857
    3. '_range' → logprob: -9.000919342041016
    4. ' range' → logprob: -9.125919342041016
    5. ' i' → logprob: -10.000919342041016
    6. '_i' → logprob: -10.250919342041016
    7. 'i' → logprob: -10.875919342041016
    8. ' in' → logprob: -11.000919342041016
    9. 'range' → logprob: -11.750919342041016
    10. '_in' → logprob: -12.125919342041016

Token 409: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0355999581515789
    2. 'in' → logprob: -3.785599946975708
    3. ' range' → logprob: -5.035600185394287
    4. ' in' → logprob: -5.160600185394287
    5. ' ' → logprob: -10.535599708557129
    6. '_' → logprob: -12.535599708557129
    7. '  ' → logprob: -13.160599708557129
    8. 'i' → logprob: -13.910599708557129
    9. ']' → logprob: -14.160599708557129
    10. ')' → logprob: -14.410599708557129

Token 410: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019287518225610256
    2. ' range' → logprob: -6.251928806304932
    3. 'a' → logprob: -17.376928329467773
    4. 'r' → logprob: -17.626928329467773
    5. '	range' → logprob: -17.751928329467773
    6. '   ' → logprob: -18.001928329467773
    7. ' ' → logprob: -18.126928329467773
    8. 'rang' → logprob: -19.126928329467773
    9. '_' → logprob: -19.376928329467773
    10. '(range' → logprob: -19.376928329467773

Token 411: '(s' (ID: 1858)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.03005835972726345
    2. '(s' → logprob: -3.7800583839416504
    3. 'n' → logprob: -5.53005838394165
    4. ' (' → logprob: -6.40505838394165
    5. '(' → logprob: -7.03005838394165
    6. ' n' → logprob: -8.905057907104492
    7. 's' → logprob: -9.155057907104492
    8. '((' → logprob: -11.030057907104492
    9. '   ' → logprob: -12.280057907104492
    10. ' s' → logprob: -12.405057907104492

Token 412: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0059324707835912704
    2. ' +' → logprob: -5.130932331085205
    3. ')]' → logprob: -12.755932807922363
    4. '+n' → logprob: -14.505932807922363
    5. ')])' → logprob: -16.005931854248047
    6. '+
' → logprob: -16.005931854248047
    7. ')' → logprob: -16.880931854248047
    8. '+s' → logprob: -17.880931854248047
    9. '+i' → logprob: -18.380931854248047
    10. '＋' → logprob: -18.505931854248047

Token 413: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001552665780764073
    2. '2' → logprob: -9.250155448913574
    3. ' ' → logprob: -9.750155448913574
    4. '10' → logprob: -15.625155448913574
    5. '
' → logprob: -15.750155448913574
    6. '5' → logprob: -16.125154495239258
    7. '   ' → logprob: -16.250154495239258
    8. '100' → logprob: -16.375154495239258
    9. '3' → logprob: -16.875154495239258
    10. '+' → logprob: -16.875154495239258

Token 414: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3870721161365509
    2. ')]' → logprob: -1.1370720863342285
    3. ' ]' → logprob: -8.887072563171387
    4. ')' → logprob: -10.262072563171387
    5. '])' → logprob: -11.137072563171387
    6. ']
' → logprob: -12.012072563171387
    7. '])]' → logprob: -13.387072563171387
    8. '}]' → logprob: -13.762072563171387
    9. '()]' → logprob: -13.887072563171387
    10. ')]
' → logprob: -14.012072563171387

Token 415: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0819922387599945
    2. 'DP' → logprob: -3.3319921493530273
    3. '<|end|>' → logprob: -3.9569921493530273
    4. ' for' → logprob: -5.081992149353027
    5. '
' → logprob: -5.081992149353027
    6. ' DP' → logprob: -5.831992149353027
    7. '	for' → logprob: -6.331992149353027
    8. '    
' → logprob: -6.581992149353027
    9. '	dp' → logprob: -6.956992149353027
    10. '<|end|>' → logprob: -6.956992149353027

Token 416: ' DP' (ID: 51992)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' (adapté à ' DP') → logprob: -0.5807705521583557
    2. 'for' → logprob: -0.8307705521583557
    3. ' for' → logprob: -5.455770492553711
    4. '   ' → logprob: -7.955770492553711
    5. ' DP' → logprob: -9.330770492553711
    6. 'dp' → logprob: -9.455770492553711
    7. '_DP' → logprob: -11.580770492553711
    8. 'Dp' → logprob: -12.955770492553711
    9. '	for' → logprob: -12.955770492553711
    10. ')' → logprob: -13.455770492553711

Token 417: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4855663721391466e-05
    2. '[s' → logprob: -11.250015258789062
    3. '[-' → logprob: -14.625015258789062
    4. ' =' → logprob: -14.625015258789062
    5. '0' → logprob: -15.250015258789062
    6. '=' → logprob: -15.625015258789062
    7. '[S' → logprob: -16.000015258789062
    8. ' [' → logprob: -16.750015258789062
    9. 's' → logprob: -16.875015258789062
    10. '[
' → logprob: -17.000015258789062

Token 418: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.319370302458992e-06
    2. ' ' → logprob: -12.250005722045898
    3. 'a' → logprob: -15.250005722045898
    4. 's' → logprob: -17.1250057220459
    5. '1' → logprob: -17.2500057220459
    6. '[' → logprob: -17.3750057220459
    7. '00' → logprob: -18.0000057220459
    8. ']' → logprob: -18.3125057220459
    9. 'n' → logprob: -18.8125057220459
    10. '۰' → logprob: -18.8125057220459

Token 419: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001937558175995946
    2. ']=' → logprob: -6.251937389373779
    3. ' ]' → logprob: -11.751937866210938
    4. '=' → logprob: -13.876937866210938
    5. ']+=' → logprob: -15.876937866210938
    6. ' =' → logprob: -17.501937866210938
    7. ']
' → logprob: -18.126937866210938
    8. ']=-' → logprob: -18.626937866210938
    9. '']=' → logprob: -18.876937866210938
    10. ')' → logprob: -19.126937866210938

Token 420: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25192990899086
    2. ' =' → logprob: -1.5019298791885376
    3. '=True' → logprob: -14.626930236816406
    4. '+=' → logprob: -16.126930236816406
    5. ' ' → logprob: -16.501930236816406
    6. ',' → logprob: -17.001930236816406
    7. '.=' → logprob: -17.626930236816406
    8. '=int' → logprob: -17.751930236816406
    9. ' +=' → logprob: -17.876930236816406
    10. '.' → logprob: -18.376930236816406

Token 421: ' True' (ID: 6432)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3425219549390022e-05
    2. '0' → logprob: -12.00001335144043
    3. 'True' → logprob: -12.25001335144043
    4. ' ' → logprob: -13.12501335144043
    5. '-' → logprob: -16.25001335144043
    6. 'true' → logprob: -16.37501335144043
    7. '   ' → logprob: -17.37501335144043
    8. 'a' → logprob: -17.50001335144043
    9. '(' → logprob: -17.62501335144043
    10. '

' → logprob: -18.00001335144043

Token 422: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19934909045696259
    2. '   ' → logprob: -2.5743491649627686
    3. '    
' → logprob: -3.1993491649627686
    4. ' 
' → logprob: -3.8243491649627686
    5. '  
' → logprob: -4.0743489265441895
    6. '<|end|>' → logprob: -4.4493489265441895
    7. '   
' → logprob: -4.8243489265441895
    8. '	
' → logprob: -6.8243489265441895
    9. ' ' → logprob: -6.8243489265441895
    10. '  ' → logprob: -6.8243489265441895

Token 423: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12719351053237915
    2. ' for' → logprob: -3.0021934509277344
    3. '
' → logprob: -3.5021934509277344
    4. '	for' → logprob: -4.002193450927734
    5. '<|end|>' → logprob: -4.627193450927734
    6. '    
' → logprob: -5.252193450927734
    7. 'for' → logprob: -6.252193450927734
    8. '	
' → logprob: -6.627193450927734
    9. ' 
' → logprob: -6.752193450927734
    10. '  
' → logprob: -7.127193450927734

Token 424: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3872327208518982
    2. ' for' → logprob: -1.137232780456543
    3. '	for' → logprob: -8.137232780456543
    4. '   ' → logprob: -9.887232780456543
    5. '0' → logprob: -11.887232780456543
    6. ' ' → logprob: -12.887232780456543
    7. '    ' → logprob: -13.512232780456543
    8. 'or' → logprob: -13.637232780456543
    9. 'True' → logprob: -13.762232780456543
    10. '1' → logprob: -14.012232780456543

Token 425: ' idx' (ID: 14016)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6805703043937683
    2. 'x' → logprob: -1.555570363998413
    3. 'ai' → logprob: -2.555570363998413
    4. 'a' → logprob: -2.680570363998413
    5. ' i' → logprob: -3.055570363998413
    6. 'v' → logprob: -3.555570363998413
    7. ' ai' → logprob: -4.055570125579834
    8. ' x' → logprob: -4.180570125579834
    9. 'num' → logprob: -4.430570125579834
    10. ' num' → logprob: -5.305570125579834

Token 426: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0994626060128212
    2. 'in' → logprob: -2.4744625091552734
    3. ',' → logprob: -4.849462509155273
    4. ' ' → logprob: -6.099462509155273
    5. ' ,' → logprob: -7.974462509155273
    6. '	in' → logprob: -11.349462509155273
    7. ' i' → logprob: -11.474462509155273
    8. ',in' → logprob: -12.599462509155273
    9. '_' → logprob: -12.849462509155273
    10. 's' → logprob: -12.974462509155273

Token 427: ' x' (ID: 1215)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.29096519947052
    2. 'val' → logprob: -1.41596519947052
    3. 'v' → logprob: -1.66596519947052
    4. 'x' → logprob: -1.91596519947052
    5. 'num' → logprob: -2.9159650802612305
    6. 'ai' → logprob: -3.2909650802612305
    7. ' val' → logprob: -3.6659650802612305
    8. 'value' → logprob: -4.5409650802612305
    9. ' v' → logprob: -5.7909650802612305
    10. ' num' → logprob: -6.0409650802612305

Token 428: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08936929702758789
    2. 'in' → logprob: -2.464369297027588
    3. ',' → logprob: -7.839369297027588
    4. ' ' → logprob: -10.58936882019043
    5. ' ,' → logprob: -12.33936882019043
    6. '	in' → logprob: -12.58936882019043
    7. ',in' → logprob: -14.58936882019043
    8. '   ' → logprob: -14.71436882019043
    9. '  ' → logprob: -14.83936882019043
    10. 'n' → logprob: -14.96436882019043

Token 429: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.00015943869948387146
    2. ' enumerate' → logprob: -8.75015926361084
    3. 'a' → logprob: -14.50015926361084
    4. 'enum' → logprob: -15.37515926361084
    5. 'en' → logprob: -17.000160217285156
    6. '
' → logprob: -17.375160217285156
    7. '   ' → logprob: -17.625160217285156
    8. ' ' → logprob: -18.000160217285156
    9. '```' → logprob: -18.125160217285156
    10. 'range' → logprob: -18.250160217285156

Token 430: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.5852550268173218
    2. 'a' → logprob: -0.8352550268173218
    3. ' a' → logprob: -4.710255146026611
    4. '(' → logprob: -8.960254669189453
    5. ' (' → logprob: -9.460254669189453
    6. '   ' → logprob: -10.210254669189453
    7. ',a' → logprob: -11.710254669189453
    8. ',' → logprob: -11.835254669189453
    9. '	a' → logprob: -12.585254669189453
    10. ')a' → logprob: -13.335254669189453

Token 431: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. 'a' → logprob: -14.12500286102295
    3. ')' → logprob: -14.37500286102295
    4. '
' → logprob: -14.75000286102295
    5. 's' → logprob: -15.25000286102295
    6. '_' → logprob: -16.125001907348633
    7. '

' → logprob: -16.375001907348633
    8. '])' → logprob: -17.125001907348633
    9. '   ' → logprob: -17.375001907348633
    10. '```' → logprob: -17.375001907348633

Token 432: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00020234835392329842
    2. ':' → logprob: -8.625202178955078
    3. ' ):' → logprob: -10.875202178955078
    4. '):
' → logprob: -13.000202178955078
    5. ')' → logprob: -14.375202178955078
    6. ']:' → logprob: -15.125202178955078
    7. '}:' → logprob: -15.500202178955078
    8. '():' → logprob: -15.750202178955078
    9. ',' → logprob: -16.375202178955078
    10. ' :' → logprob: -16.750202178955078

Token 433: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013097751885652542
    2. ',' → logprob: -5.388097763061523
    3. '   ' → logprob: -5.513097763061523
    4. '	   ' → logprob: -6.513097763061523
    5. '    ' → logprob: -6.888097763061523
    6. '        
' → logprob: -7.138097763061523
    7. '    
' → logprob: -8.388097763061523
    8. ' for' → logprob: -8.638097763061523
    9. '<|end|>' → logprob: -9.013097763061523
    10. ' ' → logprob: -9.263097763061523

Token 434: ' v' (ID: 323)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06808272004127502
    2. '   ' → logprob: -2.943082809448242
    3. 'for' → logprob: -4.568082809448242
    4. ' new' → logprob: -6.318082809448242
    5. '       ' → logprob: -7.318082809448242
    6. ' next' → logprob: -8.818082809448242
    7. '    ' → logprob: -9.818082809448242
    8. '	for' → logprob: -10.318082809448242
    9. ' if' → logprob: -11.818082809448242
    10. ' ' → logprob: -12.443082809448242

Token 435: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.084785595536232
    2. '=' → logprob: -2.7097856998443604
    3. 'al' → logprob: -4.584785461425781
    4. 'v' → logprob: -6.459785461425781
    5. 'a' → logprob: -7.084785461425781
    6. 'alue' → logprob: -8.084785461425781
    7. '   ' → logprob: -8.209785461425781
    8. ',' → logprob: -8.209785461425781
    9. 'l' → logprob: -8.959785461425781
    10. 'for' → logprob: -9.084785461425781

Token 436: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.08778820931911469
    2. '[' → logprob: -3.4627881050109863
    3. '[x' → logprob: -3.9627881050109863
    4. 'DP' → logprob: -4.587788105010986
    5. '[]' → logprob: -4.587788105010986
    6. 'copy' → logprob: -5.087788105010986
    7. '[]
' → logprob: -5.837788105010986
    8. 's' → logprob: -6.712788105010986
    9. '[s' → logprob: -7.587788105010986
    10. '1' → logprob: -7.837788105010986

Token 437: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5867881774902344
    2. 'for' → logprob: -1.9617881774902344
    3. '=' → logprob: -2.2117881774902344
    4. '+' → logprob: -2.4617881774902344
    5. '*' → logprob: -3.4617881774902344
    6. 'if' → logprob: -3.7117881774902344
    7. ' =' → logprob: -4.086788177490234
    8. ' for' → logprob: -4.836788177490234
    9. '   ' → logprob: -5.586788177490234
    10. ' if' → logprob: -5.711788177490234

Token 438: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6188304424285889
    2. '       ' → logprob: -0.9938304424285889
    3. '        
' → logprob: -3.118830442428589
    4. ' 
' → logprob: -3.868830442428589
    5. '  
' → logprob: -4.993830680847168
    6. '    
' → logprob: -5.368830680847168
    7. '   ' → logprob: -5.368830680847168
    8. ' for' → logprob: -5.493830680847168
    9. ',' → logprob: -6.618830680847168
    10. '	' → logprob: -7.118830680847168

Token 439: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00037597675691358745
    2. ' for' → logprob: -8.375375747680664
    3. '   ' → logprob: -9.250375747680664
    4. '       ' → logprob: -10.625375747680664
    5. 'new' → logprob: -11.250375747680664
    6. 'dp' → logprob: -12.625375747680664
    7. 'if' (adapté à ' if') → logprob: -13.125375747680664
    8. 'v' → logprob: -13.750375747680664
    9. 'DP' → logprob: -13.750375747680664
    10. 'nd' → logprob: -14.000375747680664

Token 440: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.33301472663879395
    2. ' v' → logprob: -1.458014726638794
    3. 'DP' → logprob: -3.833014726638794
    4. ' DP' → logprob: -4.083014488220215
    5. ' not' → logprob: -5.458014488220215
    6. ' isinstance' → logprob: -5.458014488220215
    7. 'x' → logprob: -6.708014488220215
    8. 'not' → logprob: -7.333014488220215
    9. ' x' → logprob: -8.145514488220215
    10. 's' → logprob: -8.208014488220215

Token 441: ' >' (ID: 1424)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.2812522053718567
    2. ' <=' → logprob: -1.406252145767212
    3. '>' → logprob: -9.531251907348633
    4. ' >' → logprob: -10.781251907348633
    5. '!=' → logprob: -12.781251907348633
    6. '>=' → logprob: -13.531251907348633
    7. '<' → logprob: -14.156251907348633
    8. ':' → logprob: -14.281251907348633
    9. '==' → logprob: -14.281251907348633
    10. '*' → logprob: -14.531251907348633

Token 442: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0007358930306509137
    2. ' s' → logprob: -7.250735759735107
    3. '0' → logprob: -10.625736236572266
    4. '=' → logprob: -14.000736236572266
    5. '=s' → logprob: -14.375736236572266
    6. ' ' → logprob: -16.375736236572266
    7. '100' → logprob: -16.750736236572266
    8. 'n' → logprob: -17.375736236572266
    9. 'v' → logprob: -17.375736236572266
    10. '>s' → logprob: -17.500736236572266

Token 443: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05585147812962532
    2. ':
' → logprob: -2.930851459503174
    3. '       ' → logprob: -7.680851459503174
    4. '           ' → logprob: -7.930851459503174
    5. ' :' → logprob: -9.930851936340332
    6. 'continue' → logprob: -10.430851936340332
    7. ' or' → logprob: -11.180851936340332
    8. ':
' → logprob: -11.305851936340332
    9. ':return' → logprob: -11.305851936340332
    10. ' continue' → logprob: -11.430851936340332

Token 444: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004271307960152626
    2. ' continue' → logprob: -5.754271507263184
    3. 'continue' → logprob: -6.879271507263184
    4. '       ' → logprob: -10.254271507263184
    5. '	continue' → logprob: -12.254271507263184
    6. '	       ' → logprob: -12.254271507263184
    7. '
' → logprob: -12.254271507263184
    8. ':' → logprob: -12.629271507263184
    9. '		' → logprob: -12.629271507263184
    10. '   ' → logprob: -12.879271507263184

Token 445: ' DP' (ID: 51992)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.12353211641311646
    2. ' continue' → logprob: -2.7485320568084717
    3. '           ' → logprob: -2.9985320568084717
    4. '               ' → logprob: -6.373532295227051
    5. '       ' → logprob: -7.998532295227051
    6. '	continue' → logprob: -8.49853229522705
    7. '_continue' → logprob: -10.12353229522705
    8. '	       ' → logprob: -10.87353229522705
    9. '   ' → logprob: -11.87353229522705
    10. '```' → logprob: -12.49853229522705

Token 446: '[' (ID: 58)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.06408880650997162
    2. ' continue' → logprob: -3.564088821411133
    3. ' =' → logprob: -3.939088821411133
    4. '=' → logprob: -4.689088821411133
    5. '[' → logprob: -6.689088821411133
    6. '           ' → logprob: -7.064088821411133
    7. 'contin' → logprob: -7.689088821411133
    8. '[:]' → logprob: -7.689088821411133
    9. '_continue' → logprob: -7.814088821411133
    10. '[v' → logprob: -8.064088821411133

Token 447: '0' (ID: 15)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.21382871270179749
    2. 's' → logprob: -2.9638288021087646
    3. ':' → logprob: -3.7138288021087646
    4. '[:]' → logprob: -3.7138288021087646
    5. '   ' → logprob: -3.8388288021087646
    6. '           ' → logprob: -4.2138285636901855
    7. ':]' → logprob: -4.4638285636901855
    8. '       ' → logprob: -4.7138285636901855
    9. ' continue' → logprob: -4.8388285636901855
    10. 'v' → logprob: -4.9638285636901855

Token 448: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.24502740800380707
    2. 'continue' → logprob: -2.6200273036956787
    3. ']=' → logprob: -2.7450273036956787
    4. ' =' → logprob: -3.7450273036956787
    5. '=' → logprob: -3.8700273036956787
    6. ' continue' → logprob: -4.370027542114258
    7. '           ' → logprob: -4.995027542114258
    8. '
' → logprob: -5.370027542114258
    9. '       ' → logprob: -5.995027542114258
    10. '=True' → logprob: -6.245027542114258

Token 449: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.017318330705165863
    2. ' =' → logprob: -4.267318248748779
    3. 'continue' → logprob: -5.892318248748779
    4. '=True' → logprob: -8.392318725585938
    5. '+=' → logprob: -9.392318725585938
    6. ' continue' → logprob: -10.642318725585938
    7. '=False' → logprob: -11.767318725585938
    8. '       ' → logprob: -12.267318725585938
    9. '*=' → logprob: -12.267318725585938
    10. '           ' → logprob: -12.392318725585938

Token 450: ' DP' (ID: 51992)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.697163462638855
    2. 'False' → logprob: -0.697163462638855
    3. 'DP' → logprob: -5.8221635818481445
    4. '0' → logprob: -7.4471635818481445
    5. '1' → logprob: -8.447163581848145
    6. ' True' → logprob: -9.072163581848145
    7. ' False' → logprob: -9.572163581848145
    8. 'dp' → logprob: -10.822163581848145
    9. 'v' → logprob: -11.947163581848145
    10. '
' → logprob: -12.322163581848145

Token 451: '[' (ID: 58)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016330650076270103
    2. '[' → logprob: -4.141330718994141
    3. 'False' → logprob: -8.89133071899414
    4. 'True' → logprob: -9.64133071899414
    5. ' ' → logprob: -10.01633071899414
    6. '[idx' → logprob: -10.89133071899414
    7. 'v' → logprob: -11.51633071899414
    8. '[v' → logprob: -12.26633071899414
    9. '1' → logprob: -12.76633071899414
    10. '
' → logprob: -13.26633071899414

Token 452: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010986098641296849
    2. ' ' → logprob: -10.000109672546387
    3. 's' → logprob: -10.750109672546387
    4. '1' → logprob: -10.750109672546387
    5. 'v' → logprob: -11.375109672546387
    6. 'False' → logprob: -12.875109672546387
    7. ']' → logprob: -13.625109672546387
    8. '   ' → logprob: -13.625109672546387
    9. '[' → logprob: -14.312609672546387
    10. 'True' → logprob: -14.750109672546387

Token 453: ']' (ID: 60)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2734432518482208
    2. 'and' → logprob: -1.5234432220458984
    3. ' or' → logprob: -4.773443222045898
    4. ']' → logprob: -5.273443222045898
    5. '
' → logprob: -5.398443222045898
    6. 'False' → logprob: -7.273443222045898
    7. 'or' → logprob: -7.648443222045898
    8. '<|end|>' → logprob: -8.023443222045898
    9. ' ' → logprob: -8.148443222045898
    10. 'True' → logprob: -8.273443222045898

Token 454: ' +' (ID: 659)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5747728943824768
    2. 'and' → logprob: -1.324772834777832
    3. ' or' → logprob: -2.324772834777832
    4. 'continue' → logprob: -3.699772834777832
    5. 'or' → logprob: -4.074772834777832
    6. '
' → logprob: -4.449772834777832
    7. '           ' → logprob: -5.074772834777832
    8. ' continue' → logprob: -6.324772834777832
    9. 'True' → logprob: -6.574772834777832
    10. '       ' → logprob: -6.699772834777832

Token 455: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2033904641866684
    2. 'False' → logprob: -1.7033904790878296
    3. ' False' → logprob: -7.453390598297119
    4. ' ' → logprob: -7.828390598297119
    5. 'v' → logprob: -8.078390121459961
    6. '1' → logprob: -8.203390121459961
    7. 'True' → logprob: -8.328390121459961
    8. 'DP' → logprob: -9.828390121459961
    9. 'continue' → logprob: -10.203390121459961
    10. '(False' → logprob: -11.203390121459961

Token 456: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.15425297617912292
    2. 'False' → logprob: -2.2792530059814453
    3. '1' → logprob: -3.5292530059814453
    4. 'v' → logprob: -4.654253005981445
    5. 'True' → logprob: -6.654253005981445
    6. 'DP' → logprob: -9.279253005981445
    7. 'x' → logprob: -9.904253005981445
    8. ' ' → logprob: -10.029253005981445
    9. '(' → logprob: -10.279253005981445
    10. ' False' → logprob: -10.404253005981445

Token 457: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.47622042894363403
    2. '       ' → logprob: -0.976220428943634
    3. '<|end|>' → logprob: -6.726220607757568
    4. ' continue' → logprob: -7.976220607757568
    5. 'continue' → logprob: -8.47622013092041
    6. '
' → logprob: -9.72622013092041
    7. '.' → logprob: -9.85122013092041
    8. '   ' → logprob: -10.10122013092041
    9. ',' → logprob: -10.10122013092041
    10. '		' → logprob: -10.22622013092041

Token 458: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06782177090644836
    2. '           ' → logprob: -3.192821741104126
    3. '<|end|>' → logprob: -3.817821741104126
    4. '[' → logprob: -7.692821979522705
    5. '   ' → logprob: -7.692821979522705
    6. ' ' → logprob: -7.942821979522705
    7. '<|end|>' → logprob: -8.692821502685547
    8. '	' → logprob: -8.817821502685547
    9. '.' → logprob: -9.067821502685547
    10. '
' → logprob: -9.442821502685547

Token 459: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17478761076927185
    2. ' continue' → logprob: -2.6747875213623047
    3. '       ' → logprob: -2.9247875213623047
    4. 'continue' (adapté à ' continue') → logprob: -3.2997875213623047
    5. '	continue' → logprob: -7.674787521362305
    6. '	       ' → logprob: -9.549787521362305
    7. '		' → logprob: -9.674787521362305
    8. '.' → logprob: -10.174787521362305
    9. '   ' → logprob: -10.299787521362305
    10. 'contin' → logprob: -10.549787521362305

Token 460: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010691315401345491
    2. '<|end|>' → logprob: -7.626069068908691
    3. '	' → logprob: -7.751069068908691
    4. ',' → logprob: -10.751069068908691
    5. '        
' → logprob: -10.751069068908691
    6. '.' → logprob: -11.376069068908691
    7. '   ' → logprob: -11.626069068908691
    8. ')' → logprob: -11.876069068908691
    9. '[' → logprob: -12.001069068908691
    10. 'v' → logprob: -12.126069068908691

Token 461: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005759088089689612
    2. '<|end|>' → logprob: -7.625576019287109
    3. '	' → logprob: -11.25057601928711
    4. ' for' → logprob: -11.50057601928711
    5. '[' → logprob: -11.75057601928711
    6. ',' → logprob: -11.87557601928711
    7. '.' → logprob: -12.12557601928711
    8. '   ' → logprob: -12.12557601928711
    9. ')' → logprob: -12.50057601928711
    10. 'for' → logprob: -12.62557601928711

Token 462: ' DP' (ID: 51992)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009873307310044765
    2. ' for' → logprob: -4.884873390197754
    3. '       ' → logprob: -6.384873390197754
    4. '   ' → logprob: -8.009873390197754
    5. 'new' → logprob: -9.134873390197754
    6. 'dp' → logprob: -9.259873390197754
    7. 'if' → logprob: -10.634873390197754
    8. 'DP' (adapté à ' DP') → logprob: -12.259873390197754
    9. ' new' → logprob: -12.634873390197754
    10. 'else' → logprob: -13.259873390197754

Token 463: '[s' (ID: 24177)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6636707782745361
    2. ' =' → logprob: -0.9136707782745361
    3. '_new' → logprob: -3.538670778274536
    4. '[v' → logprob: -3.663670778274536
    5. '=v' → logprob: -5.413670539855957
    6. '_temp' → logprob: -5.538670539855957
    7. 'new' → logprob: -5.788670539855957
    8. '=[' → logprob: -6.038670539855957
    9. '_prev' → logprob: -6.038670539855957
    10. '2' → logprob: -6.038670539855957

Token 464: ']' (ID: 60)
  Prédit: '-v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-v' → logprob: -0.404217928647995
    2. ' -' → logprob: -1.5292179584503174
    3. '-' → logprob: -2.5292179584503174
    4. ']' → logprob: -3.4042179584503174
    5. '-x' → logprob: -6.779217720031738
    6. ']=' → logprob: -7.279217720031738
    7. 'v' → logprob: -7.404217720031738
    8. '[v' → logprob: -9.529217720031738
    9. '
' → logprob: -10.029217720031738
    10. '-=' → logprob: -10.279217720031738

Token 465: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1555127650499344
    2. '|' → logprob: -2.655512809753418
    3. ' =' → logprob: -2.780512809753418
    4. ' |=' → logprob: -4.530512809753418
    5. ']' → logprob: -8.155512809753418
    6. ']=' → logprob: -8.780512809753418
    7. '-=' → logprob: -9.155512809753418
    8. 'or' → logprob: -9.530512809753418
    9. ' or' → logprob: -9.655512809753418
    10. '[' → logprob: -9.780512809753418

Token 466: ' (' (ID: 350)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.12320724874734879
    2. 'False' → logprob: -2.3732073307037354
    3. 'any' → logprob: -4.748207092285156
    4. 'True' → logprob: -4.998207092285156
    5. ' DP' → logprob: -5.998207092285156
    6. 'max' → logprob: -6.248207092285156
    7. '0' → logprob: -6.498207092285156
    8. 'all' → logprob: -8.498207092285156
    9. ' False' → logprob: -8.498207092285156
    10. '   ' → logprob: -8.623207092285156

Token 467: 'DP' (ID: 16851)
  Prédit: 'DP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.0026924132835119963
    2. 'False' → logprob: -6.752692222595215
    3. ' DP' → logprob: -6.877692222595215
    4. 'True' → logprob: -8.252692222595215
    5. '   ' → logprob: -9.127692222595215
    6. 's' → logprob: -10.377692222595215
    7. '_DP' → logprob: -10.752692222595215
    8. 'v' → logprob: -10.877692222595215
    9. 'dp' → logprob: -11.502692222595215
    10. 'not' → logprob: -12.627692222595215

Token 468: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.0029699765145778656
    2. '[v' → logprob: -6.377969741821289
    3. '[' → logprob: -7.502969741821289
    4. 's' → logprob: -8.127969741821289
    5. ')' → logprob: -9.127969741821289
    6. 'v' → logprob: -9.377969741821289
    7. '[x' → logprob: -10.127969741821289
    8. '   ' → logprob: -10.502969741821289
    9. '(s' → logprob: -10.877969741821289
    10. ')[' → logprob: -11.127969741821289

Token 469: ']' (ID: 60)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.05961347371339798
    2. 'or' → logprob: -3.5596134662628174
    3. ']' → logprob: -4.1846137046813965
    4. '-' → logprob: -5.0596137046813965
    5. 'and' → logprob: -5.8096137046813965
    6. ' and' → logprob: -6.0596137046813965
    7. ' -' → logprob: -6.9346137046813965
    8. ')' → logprob: -7.5596137046813965
    9. 'if' → logprob: -8.184613227844238
    10. '|' → logprob: -8.684613227844238

Token 470: ' +' (ID: 659)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.1270459145307541
    2. 'or' → logprob: -2.1270458698272705
    3. '|' → logprob: -10.127045631408691
    4. ')' → logprob: -10.502045631408691
    5. '
' → logprob: -11.627045631408691
    6. 'and' → logprob: -11.877045631408691
    7. '	or' → logprob: -12.127045631408691
    8. '   ' → logprob: -12.252045631408691
    9. ']' → logprob: -12.627045631408691
    10. '        ' → logprob: -12.877045631408691

Token 471: ' DP' (ID: 51992)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.2253739833831787
    2. '0' → logprob: -2.6003739833831787
    3. 'False' → logprob: -2.8503739833831787
    4. '1' → logprob: -2.9753739833831787
    5. 'True' → logprob: -5.100374221801758
    6. ' DP' → logprob: -5.225374221801758
    7. 'v' → logprob: -6.350374221801758
    8. '(' → logprob: -6.975374221801758
    9. 'dp' → logprob: -7.350374221801758
    10. ' ' → logprob: -7.475374221801758

Token 472: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.0017721657641232014
    2. 's' → logprob: -6.376772403717041
    3. '[' → logprob: -10.251771926879883
    4. '
' → logprob: -11.626771926879883
    5. '(s' → logprob: -11.751771926879883
    6. '   ' → logprob: -12.251771926879883
    7. ' [' → logprob: -13.001771926879883
    8. '[v' → logprob: -13.001771926879883
    9. ')' → logprob: -13.376771926879883
    10. 'v' → logprob: -13.376771926879883

Token 473: '-v' (ID: 9827)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -1.2442665100097656
    2. '-v' → logprob: -1.2442665100097656
    3. '-' → logprob: -1.6192665100097656
    4. '[s' → logprob: -1.6192665100097656
    5. '-s' → logprob: -3.8692665100097656
    6. '[v' → logprob: -5.619266510009766
    7. '-x' → logprob: -6.494266510009766
    8. 's' → logprob: -7.869266510009766
    9. '[' → logprob: -8.244266510009766
    10. '[x' → logprob: -8.619266510009766

Token 474: ']*(' (ID: 92627)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.012015541084110737
    2. '[s' → logprob: -5.137015342712402
    3. ']' → logprob: -5.387015342712402
    4. ')' → logprob: -7.012015342712402
    5. ' ])' → logprob: -8.137015342712402
    6. '])
' → logprob: -9.887015342712402
    7. '-' → logprob: -10.137015342712402
    8. 's' → logprob: -10.387015342712402
    9. ' )' → logprob: -10.762015342712402
    10. '(s' → logprob: -10.887015342712402

Token 475: 'n' (ID: 77)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07125487923622131
    2. 'True' → logprob: -3.3212549686431885
    3. 's' → logprob: -4.696254730224609
    4. ')' → logprob: -5.821254730224609
    5. '0' → logprob: -5.821254730224609
    6. 'idx' → logprob: -5.946254730224609
    7. 'v' → logprob: -6.196254730224609
    8. '[' → logprob: -6.321254730224609
    9. 'not' → logprob: -6.446254730224609
    10. 'DP' → logprob: -6.571254730224609

Token 476: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1222238838672638
    2. ' -' → logprob: -2.9972238540649414
    3. ')' → logprob: -4.747223854064941
    4. '1' → logprob: -4.997223854064941
    5. 'x' → logprob: -4.997223854064941
    6. 's' → logprob: -5.372223854064941
    7. 'idx' → logprob: -5.372223854064941
    8. 'dx' → logprob: -5.622223854064941
    9. '<|end|>' → logprob: -5.622223854064941
    10. 'v' → logprob: -6.122223854064941

Token 477: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.1922297477722168
    2. '1' → logprob: -1.9422297477722168
    3. 'DP' → logprob: -4.567229747772217
    4. ' idx' → logprob: -5.067229747772217
    5. 'dx' → logprob: -6.067229747772217
    6. 'd' → logprob: -6.442229747772217
    7. ')' → logprob: -6.692229747772217
    8. 'dp' → logprob: -6.817229747772217
    9. '(idx' → logprob: -6.817229747772217
    10. 'n' → logprob: -6.942229747772217

Token 478: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.10084143280982971
    2. ')' → logprob: -2.475841522216797
    3. '-' → logprob: -4.850841522216797
    4. ' ))' → logprob: -6.975841522216797
    5. '   ' → logprob: -7.350841522216797
    6. ')
' → logprob: -7.725841522216797
    7. '       ' → logprob: -7.850841522216797
    8. ')))' → logprob: -8.350841522216797
    9. '));' → logprob: -8.850841522216797
    10. ' )' → logprob: -8.850841522216797

Token 479: ' %' (ID: 1851)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 480: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6330420970916748
    2. 'MOD' → logprob: -0.7580420970916748
    3. ' MOD' → logprob: -9.383042335510254
    4. '2' → logprob: -9.633042335510254
    5. 'M' → logprob: -9.883042335510254
    6. ' m' → logprob: -10.008042335510254
    7. '(' → logprob: -10.133042335510254
    8. '100' → logprob: -10.383042335510254
    9. '(m' → logprob: -10.633042335510254
    10. 's' → logprob: -10.883042335510254

Token 481: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0280383548888494e-06
    2. 'od' → logprob: -14.125000953674316
    3. '
' → logprob: -17.750001907348633
    4. '1' → logprob: -17.812501907348633
    5. '```' → logprob: -17.812501907348633
    6. ' ' → logprob: -18.187501907348633
    7. 's' → logprob: -18.250001907348633
    8. 'm' → logprob: -18.500001907348633
    9. 'v' → logprob: -18.562501907348633
    10. 'o' → logprob: -18.687501907348633

Token 482: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.40370380878448486
    2. '<|end|>' → logprob: -1.4037038087844849
    3. ']' → logprob: -3.7787036895751953
    4. '[s' → logprob: -3.9037036895751953
    5. 's' → logprob: -4.653703689575195
    6. ')' → logprob: -4.903703689575195
    7. ' ' → logprob: -5.278703689575195
    8. 'v' → logprob: -5.528703689575195
    9. '[
' → logprob: -5.653703689575195
    10. '[:]' → logprob: -6.028703689575195

Token 483: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 484: ' j' (ID: 441)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.44674959778785706
    2. '[' → logprob: -1.5717495679855347
    3. '<|end|>' → logprob: -2.821749687194824
    4. 'v' → logprob: -3.821749687194824
    5. '_' → logprob: -3.946749687194824
    6. '
' → logprob: -4.571749687194824
    7. ']' → logprob: -5.071749687194824
    8. 's' → logprob: -5.071749687194824
    9. '[:]' → logprob: -5.071749687194824
    10. ')' → logprob: -5.696749687194824

Token 485: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20292676985263824
    2. '=' → logprob: -1.827926754951477
    3. ' in' → logprob: -5.0779266357421875
    4. ' ' → logprob: -5.3279266357421875
    5. 'n' → logprob: -5.4529266357421875
    6. 's' → logprob: -6.7029266357421875
    7. 'in' → logprob: -6.8279266357421875
    8. '=s' → logprob: -6.8279266357421875
    9. '=int' → logprob: -6.8279266357421875
    10. ' s' → logprob: -7.5779266357421875

Token 486: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.001597579917870462
    2. ' s' → logprob: -7.0015974044799805
    3. 'v' → logprob: -7.5015974044799805
    4. '0' → logprob: -9.75159740447998
    5. '1' → logprob: -9.75159740447998
    6. 'x' → logprob: -12.62659740447998
    7. '(s' → logprob: -12.75159740447998
    8. ' v' → logprob: -14.00159740447998
    9. '2' → logprob: -14.25159740447998
    10. 'j' → logprob: -14.50159740447998

Token 487: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.006966728251427412
    2. ' -' → logprob: -5.006966590881348
    3. '-=' → logprob: -8.881966590881348
    4. '<|end|>' → logprob: -9.756966590881348
    5. '
' → logprob: -10.506966590881348
    6. ' -=' → logprob: -11.756966590881348
    7. '=' → logprob: -12.006966590881348
    8. '-step' → logprob: -12.756966590881348
    9. '-j' → logprob: -13.256966590881348
    10. '-s' → logprob: -13.631966590881348

Token 488: '1' (ID: 16)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.576048731803894
    2. '1' → logprob: -0.826048731803894
    3. ' v' → logprob: -9.826048851013184
    4. 'x' → logprob: -10.201048851013184
    5. '0' → logprob: -11.701048851013184
    6. ' ' → logprob: -12.076048851013184
    7. 's' → logprob: -14.451048851013184
    8. '-v' → logprob: -14.513548851013184
    9. '-' → logprob: -14.888548851013184
    10. '2' → logprob: -15.013548851013184

Token 489: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 490: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 491: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.2529832124710083
    2. ' while' → logprob: -1.5029832124710083
    3. '	while' → logprob: -7.877983093261719
    4. 'for' → logprob: -8.377983093261719
    5. ' for' → logprob: -8.752983093261719
    6. '
' → logprob: -9.377983093261719
    7. 'j' → logprob: -9.627983093261719
    8. ' j' → logprob: -9.877983093261719
    9. '<|end|>' → logprob: -10.752983093261719
    10. '0' → logprob: -11.627983093261719

Token 492: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00218583014793694
    2. ' j' → logprob: -6.127185821533203
    3. '	j' → logprob: -14.752185821533203
    4. '   ' → logprob: -15.377185821533203
    5. ' ' → logprob: -16.502185821533203
    6. '(j' → logprob: -17.252185821533203
    7. '0' → logprob: -17.252185821533203
    8. '
' → logprob: -18.002185821533203
    9. ' ' → logprob: -18.002185821533203
    10. '  ' → logprob: -18.127185821533203

Token 493: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.024297839030623436
    2. ' >=' → logprob: -3.7742979526519775
    3. '>' → logprob: -6.899297714233398
    4. ')>=' → logprob: -11.149297714233398
    5. ']>=' → logprob: -11.524297714233398
    6. ' >' → logprob: -11.774297714233398
    7. '
' → logprob: -12.649297714233398
    8. '=' → logprob: -13.024297714233398
    9. '≥' → logprob: -13.399297714233398
    10. ' ' → logprob: -13.774297714233398

Token 494: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.007640224881470203
    2. '0' → logprob: -4.882640361785889
    3. ' v' → logprob: -10.38263988494873
    4. '1' → logprob: -14.25763988494873
    5. '   ' → logprob: -14.25763988494873
    6. '	v' → logprob: -14.38263988494873
    7. ' ' → logprob: -15.25763988494873
    8. 'x' → logprob: -16.132640838623047
    9. 's' → logprob: -16.257640838623047
    10. '=v' → logprob: -16.257640838623047

Token 495: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7284913063049316
    2. ':' → logprob: -0.9784913063049316
    3. ' and' → logprob: -1.9784913063049316
    4. 'and' → logprob: -5.853491306304932
    5. '       ' → logprob: -9.228490829467773
    6. '):
' → logprob: -9.603490829467773
    7. ' :
' → logprob: -10.478490829467773
    8. ':
' → logprob: -10.728490829467773
    9. ':

' → logprob: -10.728490829467773
    10. ' :' → logprob: -10.853490829467773

Token 496: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017515801591798663
    2. ':' → logprob: -7.62675142288208
    3. '<|end|>' → logprob: -7.75175142288208
    4. '           ' → logprob: -7.87675142288208
    5. ',' → logprob: -9.251751899719238
    6. '        
' → logprob: -9.501751899719238
    7. '   ' → logprob: -9.626751899719238
    8. ':
' → logprob: -9.751751899719238
    9. '<|end|>' → logprob: -10.626751899719238
    10. '	       ' → logprob: -11.001751899719238

Token 497: ' DP' (ID: 51992)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' (adapté à ' DP') → logprob: -0.337257444858551
    2. '       ' → logprob: -1.7122573852539062
    3. ' DP' → logprob: -2.3372573852539062
    4. '   ' → logprob: -4.837257385253906
    5. '           ' → logprob: -7.337257385253906
    6. '_DP' → logprob: -8.462257385253906
    7. ' j' → logprob: -9.212257385253906
    8. 'j' → logprob: -9.587257385253906
    9. '    ' → logprob: -9.837257385253906
    10. '	' → logprob: -10.087257385253906

Token 498: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -2.2246291337069124e-05
    2. '[' → logprob: -11.625021934509277
    3. 'j' → logprob: -11.750021934509277
    4. '[s' → logprob: -13.500021934509277
    5. '[
' → logprob: -13.625021934509277
    6. '
' → logprob: -13.750021934509277
    7. '=' → logprob: -15.000021934509277
    8. '=j' → logprob: -15.625021934509277
    9. '[i' → logprob: -15.875021934509277
    10. ' =' → logprob: -16.000022888183594

Token 499: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20729701220989227
    2. ']=' → logprob: -2.3322970867156982
    3. '=' → logprob: -2.4572970867156982
    4. ']=(' → logprob: -5.832296848297119
    5. ']+=' → logprob: -6.707296848297119
    6. ' =' → logprob: -9.332297325134277
    7. ')' → logprob: -9.457297325134277
    8. ')=' → logprob: -10.207297325134277
    9. '=(' → logprob: -10.207297325134277
    10. '|' → logprob: -11.332297325134277

Token 500: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0005506486631929874
    2. ' =' → logprob: -8.000550270080566
    3. '+=' → logprob: -9.000550270080566
    4. '=(' → logprob: -9.375550270080566
    5. '|' → logprob: -12.500550270080566
    6. '%=' → logprob: -14.000550270080566
    7. '=
' → logprob: -14.875550270080566
    8. ',' → logprob: -14.875550270080566
    9. ' +=' → logprob: -15.875550270080566
    10. '.=' → logprob: -15.875550270080566

Token 501: ' (' (ID: 350)
  Prédit: '(D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.005455143749713898
    2. ' (' → logprob: -5.880455017089844
    3. '(' → logprob: -6.005455017089844
    4. '(int' → logprob: -10.130455017089844
    5. '   ' → logprob: -11.005455017089844
    6. 'DP' → logprob: -11.005455017089844
    7. ' ' → logprob: -11.255455017089844
    8. '(dp' → logprob: -11.630455017089844
    9. '(P' → logprob: -11.755455017089844
    10. '(
' → logprob: -12.005455017089844

Token 502: 'DP' (ID: 16851)
  Prédit: 'DP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.016328193247318268
    2. '(D' → logprob: -4.14132833480835
    3. ' DP' → logprob: -8.516327857971191
    4. '   ' → logprob: -10.516327857971191
    5. 'D' → logprob: -11.016327857971191
    6. '(' → logprob: -11.266327857971191
    7. ' (' → logprob: -11.516327857971191
    8. 'Dp' → logprob: -11.891327857971191
    9. '_DP' → logprob: -12.016327857971191
    10. 'DM' → logprob: -13.516327857971191

Token 503: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0009646998951211572
    2. 'j' → logprob: -7.000964641571045
    3. '[' → logprob: -10.625965118408203
    4. '[
' → logprob: -11.125965118408203
    5. '
' → logprob: -12.500965118408203
    6. '```' → logprob: -13.250965118408203
    7. ' [' → logprob: -13.750965118408203
    8. '	j' → logprob: -14.000965118408203
    9. '[(' → logprob: -14.250965118408203
    10. '   ' → logprob: -14.250965118408203

Token 504: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6723776459693909
    2. ' -' → logprob: -1.797377586364746
    3. '-v' → logprob: -1.922377586364746
    4. '-' → logprob: -2.047377586364746
    5. '-j' → logprob: -3.047377586364746
    6. 'j' → logprob: -8.172377586364746
    7. ']-' → logprob: -8.547377586364746
    8. ']+' → logprob: -8.672377586364746
    9. '[j' → logprob: -9.297377586364746
    10. ' ]' → logprob: -9.797377586364746

Token 505: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1269504725933075
    2. ' +' → logprob: -2.12695050239563
    3. ' -' → logprob: -11.62695026397705
    4. '-' → logprob: -11.62695026397705
    5. '[' → logprob: -13.75195026397705
    6. '+
' → logprob: -14.00195026397705
    7. '
' → logprob: -14.62695026397705
    8. '+j' → logprob: -14.87695026397705
    9. '+[' → logprob: -14.87695026397705
    10. '+p' → logprob: -15.25195026397705

Token 506: ' DP' (ID: 51992)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.0007106438861228526
    2. ' DP' → logprob: -7.250710487365723
    3. '_DP' → logprob: -14.750710487365723
    4. '           ' → logprob: -16.50071144104004
    5. 'dp' → logprob: -16.87571144104004
    6. 'Dp' → logprob: -17.25071144104004
    7. '   ' → logprob: -17.62571144104004
    8. ' ' → logprob: -17.87571144104004
    9. ')' → logprob: -18.50071144104004
    10. '[' → logprob: -19.25071144104004

Token 507: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0017134972149506211
    2. 'j' → logprob: -6.376713275909424
    3. '[' → logprob: -11.751713752746582
    4. '[
' → logprob: -13.376713752746582
    5. ' j' → logprob: -14.001713752746582
    6. '   ' → logprob: -15.001713752746582
    7. '	j' → logprob: -15.751713752746582
    8. '```' → logprob: -15.751713752746582
    9. '
' → logprob: -16.251712799072266
    10. ' [' → logprob: -16.376712799072266

Token 508: '-v' (ID: 9827)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5021141171455383
    2. '-j' → logprob: -1.1271140575408936
    3. ' -' → logprob: -3.0021140575408936
    4. '-v' → logprob: -4.252114295959473
    5. 'j' → logprob: -5.252114295959473
    6. '[j' → logprob: -6.627114295959473
    7. '[' → logprob: -8.752114295959473
    8. ' j' → logprob: -10.377114295959473
    9. '-
' → logprob: -10.502114295959473
    10. '[-' → logprob: -10.877114295959473

Token 509: '])' (ID: 4636)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4813922345638275
    2. '])' → logprob: -1.60639226436615
    3. '*j' → logprob: -2.1063921451568604
    4. '*' → logprob: -3.8563921451568604
    5. ')' → logprob: -4.1063923835754395
    6. ' *' → logprob: -4.2313923835754395
    7. ']*' → logprob: -5.7313923835754395
    8. '*(' → logprob: -6.2313923835754395
    9. '[j' → logprob: -7.1063923835754395
    10. ']*(' → logprob: -8.106391906738281

Token 510: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.13220557570457458
    2. ' %' → logprob: -2.1322054862976074
    3. '           ' → logprob: -6.757205486297607
    4. ')' → logprob: -6.757205486297607
    5. '%
' → logprob: -6.757205486297607
    6. '
' → logprob: -7.007205486297607
    7. ')%' → logprob: -7.382205486297607
    8. ' %
' → logprob: -10.007205963134766
    9. '%n' → logprob: -10.132205963134766
    10. '[j' → logprob: -10.757205963134766

Token 511: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0002545448951423168
    2. 'MOD' → logprob: -8.87525463104248
    3. ' m' → logprob: -9.12525463104248
    4. '   ' → logprob: -13.25025463104248
    5. 'mod' → logprob: -13.87525463104248
    6. ' MOD' → logprob: -14.50025463104248
    7. '	m' → logprob: -14.87525463104248
    8. ' ' → logprob: -15.12525463104248
    9. 's' → logprob: -15.12525463104248
    10. '998' → logprob: -15.25025463104248

Token 512: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.778209353797138e-05
    2. '244' → logprob: -9.625067710876465
    3. '24' → logprob: -14.875067710876465
    4. ' ' → logprob: -14.875067710876465
    5. '344' → logprob: -15.500067710876465
    6. '224' → logprob: -15.625067710876465
    7. '242' → logprob: -16.12506866455078
    8. '234' → logprob: -16.12506866455078
    9. '243' → logprob: -16.12506866455078
    10. 'm' → logprob: -17.00006866455078

Token 513: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08157140016555786
    2. '           ' → logprob: -2.706571340560913
    3. ' j' → logprob: -6.081571578979492
    4. '
' → logprob: -6.206571578979492
    5. ' 
' → logprob: -6.206571578979492
    6. 'j' → logprob: -6.331571578979492
    7. '	j' → logprob: -6.456571578979492
    8. '<|end|>' → logprob: -8.081571578979492
    9. '		' → logprob: -8.206571578979492
    10. '    
' → logprob: -8.581571578979492

Token 514: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.26094263792037964
    2. '	j' → logprob: -1.7609426975250244
    3. 'j' → logprob: -3.6359426975250244
    4. '		' → logprob: -4.260942459106445
    5. ' j' → logprob: -5.135942459106445
    6. '   ' → logprob: -5.135942459106445
    7. '	   ' → logprob: -6.385942459106445
    8. '	       ' → logprob: -6.635942459106445
    9. '[j' → logprob: -8.010942459106445
    10. '	' → logprob: -8.135942459106445

Token 515: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.18059870600700378
    2. '           ' → logprob: -1.9305987358093262
    3. ' j' → logprob: -3.930598735809326
    4. '	j' → logprob: -7.680598735809326
    5. '   ' → logprob: -10.430598258972168
    6. '		' → logprob: -10.680598258972168
    7. '       ' → logprob: -12.180598258972168
    8. '	       ' → logprob: -12.430598258972168
    9. '               ' → logprob: -13.305598258972168
    10. '	   ' → logprob: -13.430598258972168

Token 516: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.01350970659404993
    2. '-' → logprob: -4.513509750366211
    3. ' -=' → logprob: -6.013509750366211
    4. '=' → logprob: -11.263509750366211
    5. ' -' → logprob: -15.138509750366211
    6. '+=' → logprob: -15.263509750366211
    7. ')' → logprob: -17.88850975036621
    8. '   ' → logprob: -18.13850975036621
    9. '```' → logprob: -18.26350975036621
    10. ')-' → logprob: -18.51350975036621

Token 517: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '<|end|>' → logprob: -17.62500762939453
    4. '   ' → logprob: -17.75000762939453
    5. '```' → logprob: -18.87500762939453
    6. '...' → logprob: -19.81250762939453
    7. '  ' → logprob: -19.87500762939453
    8. '۱' → logprob: -20.25000762939453
    9. ' ' → logprob: -20.25000762939453
    10. 'v' → logprob: -20.31250762939453

Token 518: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '<|end|>' → logprob: -18.12500762939453
    4. '```' → logprob: -19.31250762939453
    5. '   ' → logprob: -19.37500762939453
    6. '  ' → logprob: -20.18750762939453
    7. '
' → logprob: -20.81250762939453
    8. '۱' → logprob: -20.81250762939453
    9. 'v' → logprob: -20.81250762939453
    10. ')' → logprob: -21.31250762939453

Token 519: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 520: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 521: ' DP' (ID: 51992)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 522: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4366534352302551
    2. ' =' → logprob: -2.5616533756256104
    3. '[j' → logprob: -2.5616533756256104
    4. '[s' → logprob: -2.5616533756256104
    5. '=' → logprob: -3.0616533756256104
    6. '0' → logprob: -3.4366533756256104
    7. '[:]' → logprob: -4.4366536140441895
    8. '.append' → logprob: -4.8116536140441895
    9. 's' → logprob: -5.6866536140441895
    10. ',' → logprob: -5.8116536140441895

Token 523: '0' (ID: 15)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.11196456104516983
    2. 's' → logprob: -2.361964464187622
    3. '0' → logprob: -4.611964702606201
    4. 'x' → logprob: -6.986964702606201
    5. 'j' → logprob: -8.111964225769043
    6. ' v' → logprob: -8.611964225769043
    7. '1' → logprob: -8.986964225769043
    8. 'n' → logprob: -10.111964225769043
    9. ' s' → logprob: -10.236964225769043
    10. '-v' → logprob: -10.236964225769043

Token 524: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0024239332415163517
    2. ' ]' → logprob: -6.5024237632751465
    3. ']+=' → logprob: -7.5024237632751465
    4. ']=' → logprob: -8.752424240112305
    5. '=' → logprob: -8.752424240112305
    6. ' -=' → logprob: -11.002424240112305
    7. ')' → logprob: -11.377424240112305
    8. '-=' → logprob: -12.127424240112305
    9. ' +=' → logprob: -12.252424240112305
    10. '+=' → logprob: -12.377424240112305

Token 525: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.071817547082901
    2. ' =' → logprob: -2.821817636489868
    3. '+=' → logprob: -5.321817398071289
    4. ' +=' → logprob: -6.071817398071289
    5. ' -=' → logprob: -6.446817398071289
    6. '-=' → logprob: -7.071817398071289
    7. '*=' → logprob: -9.946817398071289
    8. ' *=' → logprob: -10.571817398071289
    9. ' %=' → logprob: -10.571817398071289
    10. ',' → logprob: -10.696817398071289

Token 526: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008277330780401826
    2. '0' → logprob: -7.875827789306641
    3. ' ' → logprob: -8.37582778930664
    4. 'v' → logprob: -8.62582778930664
    5. 'n' → logprob: -11.62582778930664
    6. 'x' → logprob: -11.87582778930664
    7. 'a' → logprob: -12.25082778930664
    8. '(' → logprob: -12.25082778930664
    9. 'int' → logprob: -13.12582778930664
    10. 'DP' → logprob: -13.25082778930664

Token 527: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00046975704026408494
    2. '0' → logprob: -8.375470161437988
    3. 'v' → logprob: -8.500470161437988
    4. 'x' → logprob: -11.750470161437988
    5. ' ' → logprob: -11.875470161437988
    6. 'n' → logprob: -12.000470161437988
    7. '(' → logprob: -12.125470161437988
    8. 'a' → logprob: -12.875470161437988
    9. 'DP' → logprob: -13.000470161437988
    10. 'int' → logprob: -14.000470161437988

Token 528: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 529: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 530: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 531: ' DP' (ID: 51992)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.13254892826080322
    2. 'result' → logprob: -2.3825488090515137
    3. ' DP' → logprob: -3.6325488090515137
    4. ' result' → logprob: -5.882548809051514
    5. 'None' → logprob: -6.632548809051514
    6. '0' → logprob: -8.007549285888672
    7. '<|end|>' → logprob: -8.132549285888672
    8. ' None' → logprob: -8.882549285888672
    9. 'dp' → logprob: -9.132549285888672
    10. '_DP' → logprob: -9.257549285888672

Token 532: '[-' (ID: 17503)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 533: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.625001907348633
    3. ']' → logprob: -15.000001907348633
    4. '0' → logprob: -16.375001907348633
    5. '```' → logprob: -16.750001907348633
    6. '2' → logprob: -17.062501907348633
    7. '
' → logprob: -17.750001907348633
    8. '１' → logprob: -18.250001907348633
    9. ')' → logprob: -18.312501907348633
    10. '   ' → logprob: -18.312501907348633

Token 534: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.531315314830863e-06
    2. ')
' → logprob: -13.125003814697266
    3. '+' → logprob: -15.000003814697266
    4. ' )' → logprob: -15.000003814697266
    5. '}' → logprob: -15.125003814697266
    6. ']' → logprob: -15.375003814697266
    7. '）' → logprob: -16.625003814697266
    8. '))' → logprob: -17.000003814697266
    9. '```' → logprob: -17.000003814697266
    10. ')return' → logprob: -17.375003814697266

Token 535: ' %' (ID: 1851)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 536: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0002624086628202349
    2. ' m' → logprob: -8.250262260437012
    3. 'mod' → logprob: -14.750262260437012
    4. 's' → logprob: -15.250262260437012
    5. '(m' → logprob: -15.500262260437012
    6. 'MOD' → logprob: -16.125263214111328
    7. '998' → logprob: -16.250263214111328
    8. ' ' → logprob: -16.750263214111328
    9. '	m' → logprob: -17.375263214111328
    10. '100' → logprob: -18.000263214111328

Token 537: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.3438327843905427e-05
    2. 'od' → logprob: -10.75002384185791
    3. 'OD' → logprob: -14.12502384185791
    4. 'o' → logprob: -14.62502384185791
    5. ' ' → logprob: -16.625022888183594
    6. '
' → logprob: -16.625022888183594
    7. 'ods' → logprob: -16.625022888183594
    8. '22' → logprob: -16.875022888183594
    9. 'odb' → logprob: -17.000022888183594
    10. 'odu' → logprob: -17.125022888183594

Token 538: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 539: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.13625682890415192
    2. '
' → logprob: -2.6362569332122803
    3. '<|end|>' → logprob: -3.1362569332122803
    4. '#' → logprob: -4.886256694793701
    5. ')' → logprob: -6.511256694793701
    6. '```' → logprob: -7.011256694793701
    7. ' if' → logprob: -7.136256694793701
    8. 'print' → logprob: -7.261256694793701
    9. '\n' → logprob: -8.38625717163086
    10. '%' → logprob: -9.01125717163086

Token 540: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.1602538824081421
    2. '__' → logprob: -1.910253882408142
    3. '_' → logprob: -11.410253524780273
    4. ' ' → logprob: -11.535253524780273
    5. 'name' → logprob: -12.535253524780273
    6. '___' → logprob: -13.785253524780273
    7. ' ' → logprob: -14.035253524780273
    8. '_name' → logprob: -14.160253524780273
    9. '/__' → logprob: -14.160253524780273
    10. ' ' → logprob: -14.410253524780273

Token 541: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.17908596992492676
    2. ' __' → logprob: -1.9290859699249268
    3. ' ==' → logprob: -4.054085731506348
    4. '==' → logprob: -7.679085731506348
    5. '.__' → logprob: -7.679085731506348
    6. '_name' → logprob: -9.179085731506348
    7. '__.' → logprob: -9.429085731506348
    8. '__.__' → logprob: -9.804085731506348
    9. '_main' → logprob: -10.429085731506348
    10. '.py' → logprob: -10.804085731506348

Token 542: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -3.054500666621607e-06
    2. '==' → logprob: -13.00000286102295
    3. '_' → logprob: -14.87500286102295
    4. '__.__' → logprob: -16.125003814697266
    5. 'name' → logprob: -16.625003814697266
    6. '___' → logprob: -16.875003814697266
    7. '____' → logprob: -17.125003814697266
    8. '__
' → logprob: -17.500003814697266
    9. '=="' → logprob: -17.500003814697266
    10. ' ==' → logprob: -18.250003814697266

Token 543: '=='' (ID: 20651)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.17942656576633453
    2. '==' → logprob: -2.179426670074463
    3. '__' → logprob: -3.554426670074463
    4. '=="' → logprob: -3.804426670074463
    5. '=='' → logprob: -8.429426193237305
    6. '=' → logprob: -11.054426193237305
    7. '==
' → logprob: -11.304426193237305
    8. '_' → logprob: -11.554426193237305
    9. ' =="' → logprob: -11.554426193237305
    10. ' =' → logprob: -12.679426193237305

Token 544: '__' (ID: 771)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3151656687259674
    2. '"' → logprob: -1.315165638923645
    3. '__' → logprob: -6.3151655197143555
    4. ' "__' → logprob: -9.440165519714355
    5. ' '__' → logprob: -11.315165519714355
    6. '"_' → logprob: -14.815165519714355
    7. 'main' → logprob: -15.315165519714355
    8. ''_' → logprob: -15.315165519714355
    9. '"name' → logprob: -15.565165519714355
    10. '("__' → logprob: -15.940165519714355

Token 545: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0001427538663847372
    2. 'name' → logprob: -9.000143051147461
    3. '__' → logprob: -11.625143051147461
    4. ''' → logprob: -12.125143051147461
    5. '"' → logprob: -12.500143051147461
    6. ' main' → logprob: -14.375143051147461
    7. '_main' → logprob: -14.750143051147461
    8. 'm' → logprob: -16.62514305114746
    9. ''name' → logprob: -16.87514305114746
    10. 'ma' → logprob: -17.00014305114746

Token 546: '__':
' (ID: 39314)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.19717347621917725
    2. '__':
' → logprob: -2.447173595428467
    3. '__:' → logprob: -2.947173595428467
    4. ':' → logprob: -3.322173595428467
    5. '_' → logprob: -6.072173595428467
    6. '__":
' → logprob: -6.697173595428467
    7. ':
' → logprob: -8.822173118591309
    8. '__
' → logprob: -9.947173118591309
    9. '__.' → logprob: -10.197173118591309
    10. '__.__' → logprob: -11.822173118591309

Token 547: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0028448181692510843
    2. '	main' → logprob: -6.00284481048584
    3. 'main' → logprob: -8.12784481048584
    4. '   ' → logprob: -10.25284481048584
    5. ' main' → logprob: -10.37784481048584
    6. '	Main' → logprob: -13.37784481048584
    7. '_main' → logprob: -13.37784481048584
    8. '```' → logprob: -14.00284481048584
    9. '    
' → logprob: -14.12784481048584
    10. '\t' → logprob: -14.62784481048584

Token 548: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.1617782860994339
    2. 'echo' → logprob: -1.9117783308029175
    3. 'result' → logprob: -6.536778450012207
    4. 'res' → logprob: -9.661778450012207
    5. '   ' → logprob: -10.661778450012207
    6. 'answer' → logprob: -12.911778450012207
    7. 'exit' → logprob: -12.911778450012207
    8. 'ans' → logprob: -13.036778450012207
    9. ' print' → logprob: -13.161778450012207
    10. 'ech' → logprob: -13.661778450012207

Token 549: '(main' (ID: 48921)
  Prédit: '(main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(main' → logprob: -0.004079589620232582
    2. '(' → logprob: -5.504079818725586
    3. '(Main' → logprob: -14.004079818725586
    4. '(
' → logprob: -15.379079818725586
    5. '(

' → logprob: -16.629079818725586
    6. '((' → logprob: -17.754079818725586
    7. ' (' → logprob: -18.004079818725586
    8. '()' → logprob: -18.129079818725586
    9. '(max' → logprob: -18.504079818725586
    10. '(m' → logprob: -18.629079818725586

Token 550: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0003362966235727072
    2. '()' → logprob: -8.000336647033691
    3. '())
' → logprob: -14.250336647033691
    4. ' ())' → logprob: -16.750335693359375
    5. ')' → logprob: -17.000335693359375
    6. '();)' → logprob: -17.375335693359375
    7. '()]' → logprob: -17.875335693359375
    8. '(' → logprob: -18.125335693359375
    9. '()))' → logprob: -18.125335693359375
    10. '()
' → logprob: -18.250335693359375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 548
Tokens correctement prédits (1ère position, stricte): 217
Tokens correctement prédits (1ère position, avec adaptation): 224
Tokens correctement prédits (top 10): 435
Précision stricte (1ère position): 39.60%
Précision adaptée (1ère position): 40.88%
Précision (top 10): 79.38%
================================================================================
