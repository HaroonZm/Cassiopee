================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:28:40
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())

n = 0
x = N
while x > 1:
    x = x // 2
    n = n + 1

ans = 1
i = 0
while i < n:
    ans = ans + (2 ** (i + 1))
    i = i + 1

print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00027933192905038595
    2. '('' → logprob: -8.625279426574707
    3. '(N' → logprob: -10.000279426574707
    4. '(
' → logprob: -10.875279426574707
    5. '(input' → logprob: -11.250279426574707
    6. ''' → logprob: -12.125279426574707
    7. '```' → logprob: -12.375279426574707
    8. '("("' → logprob: -12.500279426574707
    9. '`' → logprob: -12.750279426574707
    10. '(`' → logprob: -13.125279426574707

Token 4: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2372170090675354
    2. ')' → logprob: -1.7372169494628906
    3. '()' → logprob: -3.4872169494628906
    4. '())' → logprob: -5.737216949462891
    5. '```' → logprob: -7.987216949462891
    6. '(
' → logprob: -8.23721694946289
    7. '`' → logprob: -9.61221694946289
    8. '(()' → logprob: -9.61221694946289
    9. '("("' → logprob: -9.61221694946289
    10. '")' → logprob: -9.73721694946289

Token 5: 'n' (ID: 77)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19927331805229187
    2. 'if' → logprob: -1.9492733478546143
    3. 'result' → logprob: -4.074273109436035
    4. 's' → logprob: -5.199273109436035
    5. 'total' → logprob: -5.324273109436035
    6. 'sum' → logprob: -6.449273109436035
    7. 'count' → logprob: -6.699273109436035
    8. 'factor' → logprob: -6.699273109436035
    9. 'x' → logprob: -6.949273109436035
    10. 'print' → logprob: -6.949273109436035

Token 6: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6068580746650696
    2. '+' → logprob: -1.9818580150604248
    3. '*' → logprob: -2.356858015060425
    4. '.' → logprob: -3.106858015060425
    5. 't' → logprob: -3.231858015060425
    6. '**' → logprob: -3.356858015060425
    7. '[' → logprob: -3.606858015060425
    8. '-' → logprob: -3.856858015060425
    9. 'e' → logprob: -4.106858253479004
    10. 'ext' → logprob: -4.981858253479004

Token 7: ' ' (ID: 220)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.22320948541164398
    2. 'N' → logprob: -1.8482095003128052
    3. ' ' → logprob: -3.4732093811035156
    4. '0' → logprob: -4.973209381103516
    5. ' int' → logprob: -6.348209381103516
    6. 'int' → logprob: -6.348209381103516
    7. '1' → logprob: -8.098209381103516
    8. 'input' → logprob: -8.348209381103516
    9. ' input' → logprob: -8.473209381103516
    10. ' n' → logprob: -8.973209381103516

Token 8: '0' (ID: 15)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.011202964931726456
    2. 'int' → logprob: -5.011202812194824
    3. '0' → logprob: -5.761202812194824
    4. 'input' → logprob: -6.886202812194824
    5. '[]' → logprob: -8.886202812194824
    6. '1' → logprob: -9.386202812194824
    7. ' N' → logprob: -11.011202812194824
    8. 'n' → logprob: -11.011202812194824
    9. '"' → logprob: -11.636202812194824
    10. 'list' → logprob: -11.886202812194824

Token 9: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.7828102111816406
    2. ' while' → logprob: -1.4078102111816406
    3. '+' → logprob: -2.2828102111816406
    4. '\' → logprob: -3.2828102111816406
    5. '\n' → logprob: -3.2828102111816406
    6. '
' → logprob: -3.5328102111816406
    7. '<|end|>' → logprob: -3.9078102111816406
    8. ' ' → logprob: -4.407810211181641
    9. '#' → logprob: -4.407810211181641
    10. '```' → logprob: -5.157810211181641

Token 10: 'x' (ID: 87)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.09210129827260971
    2. ' while' → logprob: -2.9671013355255127
    3. 'w' → logprob: -3.8421013355255127
    4. '```' → logprob: -5.842101097106934
    5. '<|end|>' → logprob: -5.967101097106934
    6. ' ' → logprob: -6.717101097106934
    7. '>' → logprob: -6.717101097106934
    8. '
' → logprob: -6.842101097106934
    9. '+' → logprob: -7.092101097106934
    10. '' → logprob: -7.217101097106934

Token 11: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7442345023155212
    2. ' +=' → logprob: -0.8692345023155212
    3. '+=' → logprob: -2.869234561920166
    4. ' =' → logprob: -3.619234561920166
    5. '=' → logprob: -3.994234561920166
    6. ' +' → logprob: -6.369234561920166
    7. ' ' → logprob: -6.994234561920166
    8. ' ==' → logprob: -8.744234085083008
    9. '[' → logprob: -8.994234085083008
    10. '++' → logprob: -9.369234085083008

Token 12: ' N' (ID: 478)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1212453842163086
    2. ' ' → logprob: -2.7462453842163086
    3. 'N' → logprob: -3.3712453842163086
    4. ' N' → logprob: -4.996245384216309
    5. 'n' → logprob: -5.496245384216309
    6. ' n' → logprob: -6.121245384216309
    7. '1' → logprob: -6.246245384216309
    8. 'int' → logprob: -7.996245384216309
    9. ' int' → logprob: -9.121245384216309
    10. '10' → logprob: -9.996245384216309

Token 13: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10683994740247726
    2. '
' → logprob: -3.606839895248413
    3. '<|end|>' → logprob: -3.606839895248413
    4. ')' → logprob: -4.231840133666992
    5. 'while' → logprob: -5.106840133666992
    6. '%' → logprob: -5.356840133666992
    7. '>' → logprob: -5.481840133666992
    8. ' ' → logprob: -5.981840133666992
    9. '-' → logprob: -6.106840133666992
    10. '```' → logprob: -6.356840133666992

Token 14: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.3754940629005432
    2. ' while' → logprob: -1.6254940032958984
    3. '+' → logprob: -3.3754940032958984
    4. ' ' → logprob: -3.7504940032958984
    5. '-' → logprob: -4.250494003295898
    6. '>' → logprob: -4.375494003295898
    7. '
' → logprob: -5.375494003295898
    8. '```' → logprob: -5.500494003295898
    9. '\n' → logprob: -5.750494003295898
    10. '%' → logprob: -6.000494003295898

Token 15: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.11256009340286255
    2. ' n' → logprob: -2.8625600337982178
    3. ' ' → logprob: -3.1125600337982178
    4. 'x' → logprob: -5.612560272216797
    5. 'n' → logprob: -6.862560272216797
    6. ' N' → logprob: -9.612560272216797
    7. ' not' → logprob: -11.112560272216797
    8. '  ' → logprob: -11.112560272216797
    9. ' ' → logprob: -11.237560272216797
    10. ' (' → logprob: -11.612560272216797

Token 16: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.029788563027977943
    2. '>' → logprob: -3.5297884941101074
    3. ' !=' → logprob: -10.779788970947266
    4. ' ' → logprob: -12.154788970947266
    5. ' >=' → logprob: -12.529788970947266
    6. ' <' → logprob: -12.529788970947266
    7. ' ' → logprob: -13.779788970947266
    8. '!=' → logprob: -14.404788970947266
    9. '```' → logprob: -14.654788970947266
    10. ')' → logprob: -15.279788970947266

Token 17: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4288508892059326
    2. '0' → logprob: -1.0538508892059326
    3. 'n' → logprob: -9.428851127624512
    4. ' n' → logprob: -10.303851127624512
    5. '1' → logprob: -11.053851127624512
    6. '=' → logprob: -11.303851127624512
    7. '>' → logprob: -13.053851127624512
    8. ' ' → logprob: -13.553851127624512
    9. '  ' → logprob: -13.866351127624512
    10. '2' → logprob: -14.678851127624512

Token 18: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016299575567245483
    2. ' ' → logprob: -4.141299724578857
    3. '1' → logprob: -9.0162992477417
    4. 'n' → logprob: -9.1412992477417
    5. '9' → logprob: -11.1412992477417
    6. ' n' → logprob: -11.6412992477417
    7. '=' → logprob: -11.7662992477417
    8. '10' → logprob: -13.3912992477417
    9. '2' → logprob: -14.0162992477417
    10. '5' → logprob: -14.5162992477417

Token 19: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011631029658019543
    2. ' :' → logprob: -4.761631011962891
    3. ':
' → logprob: -6.886631011962891
    4. ' and' → logprob: -7.011631011962891
    5. '   ' → logprob: -7.761631011962891
    6. '    ' → logprob: -8.13663101196289
    7. ' ' → logprob: -9.26163101196289
    8. ' :
' → logprob: -9.26163101196289
    9. 'and' → logprob: -10.51163101196289
    10. '/' → logprob: -10.88663101196289

Token 20: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3898659646511078
    2. '   ' → logprob: -2.1398658752441406
    3. ' x' → logprob: -2.5148658752441406
    4. ' 
' → logprob: -3.5148658752441406
    5. '    ' → logprob: -3.6398658752441406
    6. 'n' → logprob: -4.264865875244141
    7. ' n' → logprob: -4.389865875244141
    8. 'x' → logprob: -4.639865875244141
    9. '    
' → logprob: -4.889865875244141
    10. '     
' → logprob: -5.514865875244141

Token 21: ' x' (ID: 1215)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8722883462905884
    2. ' x' → logprob: -1.1222883462905884
    3. '    ' → logprob: -2.247288227081299
    4. 'x' (adapté à ' x') → logprob: -2.872288227081299
    5. ' n' → logprob: -3.122288227081299
    6. 'n' → logprob: -3.997288227081299
    7. '```' → logprob: -4.872288227081299
    8. '   ' → logprob: -4.997288227081299
    9. '     
' → logprob: -5.497288227081299
    10. ' =' → logprob: -5.622288227081299

Token 22: ' =' (ID: 314)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.6992648839950562
    2. '//=' → logprob: -0.8242648839950562
    3. '=' → logprob: -3.0742650032043457
    4. ' =' → logprob: -4.324265003204346
    5. '//' → logprob: -5.574265003204346
    6. ' /=' → logprob: -8.074264526367188
    7. ' >>=' → logprob: -8.324264526367188
    8. '```' → logprob: -8.574264526367188
    9. ' ' → logprob: -9.449264526367188
    10. ' *=' → logprob: -9.574264526367188

Token 23: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.25205591320991516
    2. ' x' → logprob: -1.5020558834075928
    3. 'int' → logprob: -9.627056121826172
    4. ' ' → logprob: -10.752056121826172
    5. ' (' → logprob: -11.502056121826172
    6. 'n' → logprob: -11.627056121826172
    7. '(' → logprob: -12.627056121826172
    8. ' int' → logprob: -12.752056121826172
    9. '(x' → logprob: -12.877056121826172
    10. '2' → logprob: -12.877056121826172

Token 24: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.48092272877693176
    2. '//' → logprob: -0.9809226989746094
    3. '/' → logprob: -5.230922698974609
    4. '**' → logprob: -7.355922698974609
    5. '-' → logprob: -8.10592269897461
    6. ' /' → logprob: -8.73092269897461
    7. '*' → logprob: -9.10592269897461
    8. '%' → logprob: -9.35592269897461
    9. 'x' → logprob: -10.35592269897461
    10. '```' → logprob: -10.35592269897461

Token 25: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0010935462778434157
    2. '3' → logprob: -7.25109338760376
    3. '10' → logprob: -8.751093864440918
    4. '5' → logprob: -9.501093864440918
    5. ' ' → logprob: -9.626093864440918
    6. '6' → logprob: -9.876093864440918
    7. '7' → logprob: -11.001093864440918
    8. '4' → logprob: -11.626093864440918
    9. 'n' → logprob: -13.501093864440918
    10. '   ' → logprob: -13.626093864440918

Token 26: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0013953534653410316
    2. '3' → logprob: -7.001395225524902
    3. '10' → logprob: -8.126395225524902
    4. '6' → logprob: -9.626395225524902
    5. '5' → logprob: -9.751395225524902
    6. '7' → logprob: -10.876395225524902
    7. ' ' → logprob: -10.876395225524902
    8. '4' → logprob: -11.001395225524902
    9. 'n' → logprob: -12.876395225524902
    10. '   ' → logprob: -13.626395225524902

Token 27: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.029475212097168
    2. '   ' → logprob: -1.904475212097168
    3. ' 
' → logprob: -2.029475212097168
    4. '    
' → logprob: -2.654475212097168
    5. '
' → logprob: -2.779475212097168
    6. ' +' → logprob: -2.779475212097168
    7. '\n' → logprob: -3.029475212097168
    8. 'n' → logprob: -3.029475212097168
    9. '   
' → logprob: -4.279475212097168
    10. ' n' → logprob: -4.529475212097168

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10616329312324524
    2. 'n' → logprob: -2.731163263320923
    3. '+' → logprob: -4.606163501739502
    4. ' n' → logprob: -4.856163501739502
    5. ' ' → logprob: -5.481163501739502
    6. '    
' → logprob: -5.606163501739502
    7. ' 
' → logprob: -6.106163501739502
    8. '    ' → logprob: -6.481163501739502
    9. '```' → logprob: -6.481163501739502
    10. ' +' → logprob: -7.106163501739502

Token 29: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.3581537902355194
    2. ' n' → logprob: -1.2331538200378418
    3. '   ' → logprob: -4.733153820037842
    4. '```' → logprob: -7.608153820037842
    5. '    ' → logprob: -8.608153343200684
    6. ' ' → logprob: -9.233153343200684
    7. '``' → logprob: -10.483153343200684
    8. '	n' → logprob: -10.983153343200684
    9. '_n' → logprob: -12.108153343200684
    10. ' 
' → logprob: -12.233153343200684

Token 30: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3878125250339508
    2. '+=' → logprob: -1.1378124952316284
    3. '=' → logprob: -7.387812614440918
    4. '+' → logprob: -8.637812614440918
    5. ' =' → logprob: -8.887812614440918
    6. ']+=' → logprob: -13.637812614440918
    7. ' +' → logprob: -13.637812614440918
    8. ' ' → logprob: -13.762812614440918
    9. '+='' → logprob: -14.137812614440918
    10. '++' → logprob: -14.262812614440918

Token 31: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.061972394585609436
    2. 'n' → logprob: -2.8119723796844482
    3. '+' → logprob: -12.811972618103027
    4. ' ' → logprob: -13.686972618103027
    5. '	n' → logprob: -15.561972618103027
    6. '0' → logprob: -15.561972618103027
    7. '1' → logprob: -15.936972618103027
    8. '+n' → logprob: -16.31197166442871
    9. '2' → logprob: -16.43697166442871
    10. 'x' → logprob: -16.43697166442871

Token 32: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.018151231110095978
    2. ' +' → logprob: -4.01815128326416
    3. '+n' → logprob: -14.39315128326416
    4. ' plus' → logprob: -14.64315128326416
    5. ' ' → logprob: -16.393150329589844
    6. '+
' → logprob: -16.643150329589844
    7. '2' → logprob: -17.268150329589844
    8. '++' → logprob: -17.518150329589844
    9. '＋' → logprob: -17.518150329589844
    10. 'plus' → logprob: -18.018150329589844

Token 33: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0889447033405304
    2. ' ' → logprob: -2.463944673538208
    3. '2' → logprob: -13.088944435119629
    4. 'n' → logprob: -13.838944435119629
    5. ' n' → logprob: -13.838944435119629
    6. 'x' → logprob: -15.213944435119629
    7. '   ' → logprob: -15.338944435119629
    8. ' x' → logprob: -15.401444435119629
    9. '  ' → logprob: -16.088945388793945
    10. '0' → logprob: -16.526445388793945

Token 34: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002619318547658622
    2. ' ' → logprob: -8.250262260437012
    3. '2' → logprob: -14.750262260437012
    4. '   ' → logprob: -16.500261306762695
    5. 'x' → logprob: -16.625261306762695
    6. 'n' → logprob: -17.250261306762695
    7. '  ' → logprob: -17.375261306762695
    8. '0' → logprob: -18.375261306762695
    9. '+' → logprob: -18.625261306762695
    10. '```' → logprob: -18.625261306762695

Token 35: '

' (ID: 279)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.357221007347107
    2. 'n' → logprob: -1.357221007347107
    3. 'print' → logprob: -2.7322211265563965
    4. 'i' → logprob: -2.8572211265563965
    5. ' ' → logprob: -3.1072211265563965
    6. '#' → logprob: -3.2322211265563965
    7. 'p' → logprob: -3.4822211265563965
    8. '(' → logprob: -3.8572211265563965
    9. '**' → logprob: -4.1072211265563965
    10. 's' → logprob: -4.2322211265563965

Token 36: 'ans' (ID: 616)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.24840055406093597
    2. 'n' → logprob: -2.6234004497528076
    3. 'p' → logprob: -3.4984004497528076
    4. '2' → logprob: -4.123400688171387
    5. 'i' → logprob: -4.248400688171387
    6. 'b' → logprob: -4.748400688171387
    7. 'if' → logprob: -4.748400688171387
    8. '#' → logprob: -4.873400688171387
    9. '*' → logprob: -4.873400688171387
    10. 'result' → logprob: -4.873400688171387

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16324026882648468
    2. '=' → logprob: -1.9132403135299683
    3. '_' → logprob: -6.038240432739258
    4. ' ' → logprob: -8.663240432739258
    5. 's' → logprob: -9.038240432739258
    6. '*' → logprob: -9.788240432739258
    7. '[' → logprob: -10.163240432739258
    8. ' +=' → logprob: -10.163240432739258
    9. '**' → logprob: -10.413240432739258
    10. '(' → logprob: -10.663240432739258

Token 38: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.09668468683958054
    2. ' ' → logprob: -2.471684694290161
    3. '1' → logprob: -5.596684455871582
    4. 'pow' → logprob: -6.846684455871582
    5. 'n' → logprob: -7.096684455871582
    6. 'N' → logprob: -7.221684455871582
    7. ' n' → logprob: -8.221684455871582
    8. ' N' → logprob: -8.221684455871582
    9. '(' → logprob: -8.346684455871582
    10. ' (' → logprob: -8.596684455871582

Token 39: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.021043013781309128
    2. 'N' → logprob: -5.021042823791504
    3. 'n' → logprob: -5.271042823791504
    4. '1' → logprob: -5.396042823791504
    5. '(' → logprob: -6.271042823791504
    6. 'pow' → logprob: -6.396042823791504
    7. 'x' → logprob: -8.396042823791504
    8. '(n' → logprob: -8.396042823791504
    9. 'str' → logprob: -9.396042823791504
    10. 'max' → logprob: -9.646042823791504

Token 40: '
' (ID: 198)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22151528298854828
    2. '2' → logprob: -2.34651517868042
    3. '<<' → logprob: -2.84651517868042
    4. ' ' → logprob: -4.59651517868042
    5. ' <<' → logprob: -4.72151517868042
    6. ' <<=' → logprob: -4.72151517868042
    7. 'for' → logprob: -5.59651517868042
    8. ',' → logprob: -5.97151517868042
    9. '<' → logprob: -6.09651517868042
    10. 'while' → logprob: -6.22151517868042

Token 41: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12213177978992462
    2. 'while' → logprob: -2.372131824493408
    3. '+' → logprob: -4.747131824493408
    4. ' for' → logprob: -5.122131824493408
    5. '0' → logprob: -6.122131824493408
    6. ' while' → logprob: -6.622131824493408
    7. '*' → logprob: -6.622131824493408
    8. '```' → logprob: -6.872131824493408
    9. 'i' → logprob: -8.49713134765625
    10. '<<' → logprob: -8.74713134765625

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5097078084945679
    2. '=' → logprob: -1.3847078084945679
    3. ' ' → logprob: -2.1347079277038574
    4. '<' → logprob: -5.134707927703857
    5. ' +=' → logprob: -5.134707927703857
    6. ' <' → logprob: -5.384707927703857
    7. 'n' → logprob: -5.759707927703857
    8. ' n' → logprob: -5.884707927703857
    9. ' *=' → logprob: -6.009707927703857
    10. ' in' → logprob: -6.509707927703857

Token 43: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02113056182861328
    2. '1' → logprob: -4.396130561828613
    3. ' ' → logprob: -4.771130561828613
    4. 'n' → logprob: -9.646130561828613
    5. '2' → logprob: -10.146130561828613
    6. ' n' → logprob: -11.771130561828613
    7. '<|end|>' → logprob: -14.021130561828613
    8. ' ans' → logprob: -15.271130561828613
    9. 'i' → logprob: -16.021129608154297
    10. 'ans' → logprob: -16.396129608154297

Token 44: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007988212630152702
    2. '1' → logprob: -4.882987976074219
    3. '2' → logprob: -8.757987976074219
    4. 'n' → logprob: -8.757987976074219
    5. ' ' → logprob: -9.632987976074219
    6. 'ans' → logprob: -14.757987976074219
    7. ' n' → logprob: -15.382987976074219
    8. 'i' → logprob: -15.882987976074219
    9. '<n' → logprob: -15.945487976074219
    10. '   ' → logprob: -16.19548797607422

Token 45: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.310186505317688
    2. ' while' → logprob: -1.435186505317688
    3. '<|end|>' → logprob: -4.060186386108398
    4. ' ' → logprob: -5.310186386108398
    5. '
' → logprob: -5.935186386108398
    6. '```' → logprob: -7.060186386108398
    7. 'i' → logprob: -7.560186386108398
    8. '	while' → logprob: -7.685186386108398
    9. '<|end|>' → logprob: -7.935186386108398
    10. 'While' → logprob: -8.560186386108398

Token 46: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.8341297507286072
    2. ' while' → logprob: -0.9591297507286072
    3. '<|end|>' → logprob: -1.709129810333252
    4. '<|end|>' → logprob: -7.334129810333252
    5. ' ' → logprob: -7.959129810333252
    6. '```' → logprob: -9.084129333496094
    7. '	while' → logprob: -9.209129333496094
    8. 'i' → logprob: -9.959129333496094
    9. ',' → logprob: -9.959129333496094
    10. '
' → logprob: -10.334129333496094

Token 47: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.12693829834461212
    2. 'i' → logprob: -2.1269383430480957
    3. '(i' → logprob: -13.001937866210938
    4. ' ans' → logprob: -13.126937866210938
    5. ' ' → logprob: -13.251937866210938
    6. '	i' → logprob: -13.251937866210938
    7. ' ' → logprob: -13.751937866210938
    8. '   ' → logprob: -15.376937866210938
    9. '<' → logprob: -15.626937866210938
    10. 'n' → logprob: -16.126937866210938

Token 48: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.09249196946620941
    2. '<' → logprob: -2.467491865158081
    3. ' <=' → logprob: -5.71749210357666
    4. '<=' → logprob: -8.59249210357666
    5. ' ' → logprob: -9.59249210357666
    6. '<n' → logprob: -13.59249210357666
    7. '<|end|>' → logprob: -13.96749210357666
    8. '<len' → logprob: -14.34249210357666
    9. ' ≤' → logprob: -14.46749210357666
    10. ' less' → logprob: -16.092491149902344

Token 49: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.38688740134239197
    2. ' n' → logprob: -1.1368874311447144
    3. ' ' → logprob: -11.261887550354004
    4. '_n' → logprob: -14.011887550354004
    5. 'N' → logprob: -14.386887550354004
    6. '	n' → logprob: -14.636887550354004
    7. '(n' → logprob: -15.386887550354004
    8. ' N' → logprob: -15.511887550354004
    9. ' ans' → logprob: -15.511887550354004
    10. '6' → logprob: -15.699387550354004

Token 50: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.034999266266822815
    2. ':
' → logprob: -3.409999370574951
    3. ' :' → logprob: -6.909999370574951
    4. ' :
' → logprob: -8.534998893737793
    5. '   ' → logprob: -8.909998893737793
    6. ':
' → logprob: -12.159998893737793
    7. ' ' → logprob: -12.784998893737793
    8. ' and' → logprob: -13.159998893737793
    9. '```' → logprob: -13.159998893737793
    10. ':

' → logprob: -13.659998893737793

Token 51: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6146906614303589
    2. ' ans' → logprob: -0.8646906614303589
    3. 'ans' → logprob: -3.3646907806396484
    4. ' ' → logprob: -6.989690780639648
    5. '    
' → logprob: -7.114690780639648
    6. '	ans' → logprob: -7.239690780639648
    7. '```' → logprob: -7.864690780639648
    8. '``' → logprob: -9.239690780639648
    9. ' 
' → logprob: -9.364690780639648
    10. '  ' → logprob: -9.614690780639648

Token 52: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.25790858268737793
    2. 'ans' (adapté à ' ans') → logprob: -1.507908582687378
    3. '   ' → logprob: -5.257908821105957
    4. '	ans' → logprob: -8.132908821105957
    5. ' ' → logprob: -8.507908821105957
    6. '```' → logprob: -9.257908821105957
    7. '(ans' → logprob: -9.882908821105957
    8. '    
' → logprob: -11.007908821105957
    9. '    ' → logprob: -11.007908821105957
    10. ' i' → logprob: -11.132908821105957

Token 53: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.23217159509658813
    2. ' =' → logprob: -2.4821715354919434
    3. '*=' → logprob: -2.4821715354919434
    4. ' *=' → logprob: -3.2321715354919434
    5. '*' → logprob: -8.107172012329102
    6. ' <<=' → logprob: -8.357172012329102
    7. '   ' → logprob: -10.607172012329102
    8. ' ' → logprob: -10.982172012329102
    9. ' ' → logprob: -12.107172012329102
    10. '```' → logprob: -12.232172012329102

Token 54: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.34884920716285706
    2. ' ans' → logprob: -1.2238491773605347
    3. '(ans' → logprob: -8.473849296569824
    4. '2' → logprob: -9.098849296569824
    5. '	ans' → logprob: -9.723849296569824
    6. ' ' → logprob: -11.098849296569824
    7. '   ' → logprob: -12.723849296569824
    8. '_ans' → logprob: -13.473849296569824
    9. '*' → logprob: -13.848849296569824
    10. ' ' → logprob: -14.598849296569824

Token 55: ' +' (ID: 659)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.04860009253025055
    2. ' *' → logprob: -3.048600196838379
    3. ' ' → logprob: -12.298600196838379
    4. '   ' → logprob: -12.673600196838379
    5. '2' → logprob: -13.298600196838379
    6. '**' → logprob: -13.798600196838379
    7. ' ' → logprob: -13.923600196838379
    8. '	' → logprob: -15.298600196838379
    9. '    ' → logprob: -15.423600196838379
    10. '"' → logprob: -15.673600196838379

Token 56: ' (' (ID: 350)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.18021580576896667
    2. ' ans' → logprob: -1.805215835571289
    3. '(ans' → logprob: -8.430215835571289
    4. '	ans' → logprob: -8.555215835571289
    5. ' ' → logprob: -9.930215835571289
    6. '1' → logprob: -13.430215835571289
    7. '2' → logprob: -13.430215835571289
    8. 'a' → logprob: -13.555215835571289
    9. '  ' → logprob: -13.555215835571289
    10. ' a' → logprob: -13.805215835571289

Token 57: '2' (ID: 17)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5769978165626526
    2. ' ans' → logprob: -0.8269978165626526
    3. '(ans' → logprob: -7.826997756958008
    4. '	ans' → logprob: -8.201997756958008
    5. ' ' → logprob: -8.326997756958008
    6. '2' → logprob: -10.201997756958008
    7. '   ' → logprob: -10.451997756958008
    8. '  ' → logprob: -10.951997756958008
    9. ' (' → logprob: -11.451997756958008
    10. ' i' → logprob: -11.826997756958008

Token 58: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.45339256525039673
    2. ' **' → logprob: -1.078392505645752
    3. '*' → logprob: -4.328392505645752
    4. ' *' → logprob: -4.828392505645752
    5. '*i' → logprob: -6.578392505645752
    6. ')' → logprob: -7.078392505645752
    7. ')**' → logprob: -7.828392505645752
    8. ' ' → logprob: -8.32839298248291
    9. '**)' → logprob: -9.20339298248291
    10. ' **)' → logprob: -9.20339298248291

Token 59: ' (' (ID: 350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0017497921362519264
    2. ' i' → logprob: -6.5017499923706055
    3. '(i' → logprob: -8.751749992370605
    4. 'n' → logprob: -10.001749992370605
    5. '(' → logprob: -10.876749992370605
    6. '(n' → logprob: -11.376749992370605
    7. ' (' → logprob: -12.001749992370605
    8. ' ' → logprob: -13.251749992370605
    9. '1' → logprob: -13.626749992370605
    10. ')' → logprob: -14.626749992370605

Token 60: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0004218554822728038
    2. 'n' → logprob: -8.000421524047852
    3. ' i' → logprob: -10.250421524047852
    4. ')' → logprob: -10.750421524047852
    5. '(i' → logprob: -11.375421524047852
    6. '(n' → logprob: -12.625421524047852
    7. '(' → logprob: -12.625421524047852
    8. ')i' → logprob: -13.000421524047852
    9. ' ' → logprob: -13.375421524047852
    10. 'ans' → logprob: -14.000421524047852

Token 61: ' +' (ID: 659)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.05642187222838402
    2. '+' → logprob: -3.5564217567443848
    3. ')' → logprob: -4.056421756744385
    4. ' +' → logprob: -5.431421756744385
    5. ' ))' → logprob: -5.931421756744385
    6. ' ' → logprob: -7.681421756744385
    7. '1' → logprob: -7.931421756744385
    8. '   ' → logprob: -7.931421756744385
    9. ' )' → logprob: -8.431422233581543
    10. ' -' → logprob: -9.181422233581543

Token 62: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001060675480403006
    2. ' ' → logprob: -7.376060485839844
    3. ')' → logprob: -8.626060485839844
    4. '0' → logprob: -8.876060485839844
    5. '2' → logprob: -9.501060485839844
    6. '))' → logprob: -11.376060485839844
    7. '   ' → logprob: -11.626060485839844
    8. '3' → logprob: -12.251060485839844
    9. '+' → logprob: -12.751060485839844
    10. '  ' → logprob: -13.126060485839844

Token 63: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010182792320847511
    2. '0' → logprob: -7.251018047332764
    3. '2' → logprob: -8.751018524169922
    4. ')' → logprob: -9.251018524169922
    5. ' ' → logprob: -10.376018524169922
    6. '))' → logprob: -12.126018524169922
    7. '3' → logprob: -12.376018524169922
    8. '   ' → logprob: -12.501018524169922
    9. '6' → logprob: -13.376018524169922
    10. '  ' → logprob: -13.626018524169922

Token 64: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.43296149373054504
    2. ')' → logprob: -1.0579614639282227
    3. ' )' → logprob: -6.682961463928223
    4. ' ))' → logprob: -6.807961463928223
    5. ' -' → logprob: -6.932961463928223
    6. '-' → logprob: -7.682961463928223
    7. '   ' → logprob: -8.557961463928223
    8. ')))' → logprob: -9.182961463928223
    9. '+' → logprob: -9.432961463928223
    10. ' ' → logprob: -10.557961463928223

Token 65: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0775146335363388
    2. 'i' → logprob: -3.5775146484375
    3. ' i' → logprob: -3.9525146484375
    4. '
' → logprob: -3.9525146484375
    5. '	i' → logprob: -5.3275146484375
    6. '    
' → logprob: -6.3275146484375
    7. ' 
' → logprob: -7.9525146484375
    8. '```' → logprob: -7.9525146484375
    9. '\n' → logprob: -8.5775146484375
    10. '[i' → logprob: -8.5775146484375

Token 66: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29277101159095764
    2. 'i' (adapté à ' i') → logprob: -1.7927709817886353
    3. ' i' → logprob: -2.542771100997925
    4. '	i' → logprob: -5.167770862579346
    5. '    
' → logprob: -6.917770862579346
    6. '
' → logprob: -7.042770862579346
    7. '```' → logprob: -7.667770862579346
    8. ' 
' → logprob: -8.292771339416504
    9. '\n' → logprob: -8.917771339416504
    10. '\' → logprob: -9.292771339416504

Token 67: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.007036932278424501
    2. '+=' → logprob: -5.507037162780762
    3. '=' → logprob: -6.257037162780762
    4. ' =' → logprob: -7.507037162780762
    5. '+' → logprob: -8.007037162780762
    6. ' +' → logprob: -9.007037162780762
    7. ' ' → logprob: -10.382037162780762
    8. ' ' → logprob: -15.257037162780762
    9. '++' → logprob: -15.507037162780762
    10. '  ' → logprob: -16.132036209106445

Token 68: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.008615042082965374
    2. 'i' → logprob: -4.758615016937256
    3. ' ' → logprob: -15.508615493774414
    4. '	i' → logprob: -15.508615493774414
    5. '1' → logprob: -17.133615493774414
    6. '0' → logprob: -17.508615493774414
    7. '<|end|>' → logprob: -18.008615493774414
    8. '+' → logprob: -19.008615493774414
    9. '_i' → logprob: -19.383615493774414
    10. '=i' → logprob: -19.633615493774414

Token 69: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2521236538887024
    2. ' +' → logprob: -1.5021235942840576
    3. ' ' → logprob: -8.627123832702637
    4. ' plus' → logprob: -11.877123832702637
    5. '1' → logprob: -12.002123832702637
    6. '0' → logprob: -14.502123832702637
    7. ' +
' → logprob: -14.752123832702637
    8. '++' → logprob: -15.002123832702637
    9. '+i' → logprob: -15.127123832702637
    10. '2' → logprob: -16.12712287902832

Token 70: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.125040054321289
    3. '```' → logprob: -19.87504005432129
    4. '   ' → logprob: -20.00004005432129
    5. '１' → logprob: -21.00004005432129
    6. '۱' → logprob: -21.68754005432129
    7. '  ' → logprob: -21.87504005432129
    8. ' ' → logprob: -22.00004005432129
    9. '१' → logprob: -22.68754005432129
    10. '2' → logprob: -22.81254005432129

Token 71: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '```' → logprob: -17.625001907348633
    4. '   ' → logprob: -18.500001907348633
    5. '۱' → logprob: -19.812501907348633
    6. '１' → logprob: -19.937501907348633
    7. '2' → logprob: -20.250001907348633
    8. '  ' → logprob: -20.250001907348633
    9. '`' → logprob: -20.750001907348633
    10. '१' → logprob: -21.312501907348633

Token 72: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5818524360656738
    2. '
' → logprob: -0.8318524360656738
    3. '\n' → logprob: -5.581852436065674
    4. '```' → logprob: -7.331852436065674
    5. '<|end|>' → logprob: -7.706852436065674
    6. '#' → logprob: -8.581851959228516
    7. '
' → logprob: -8.581851959228516
    8. ' 
' → logprob: -8.956851959228516
    9. '  
' → logprob: -9.081851959228516
    10. ' print' → logprob: -9.206851959228516

Token 73: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.816093228830141e-06
    2. '
' → logprob: -13.00000286102295
    3. ' print' → logprob: -15.62500286102295
    4. '```' → logprob: -15.87500286102295
    5. '#print' → logprob: -16.875001907348633
    6. 'pr' → logprob: -17.000001907348633
    7. 'p' → logprob: -18.500001907348633
    8. '#' → logprob: -18.625001907348633
    9. 'prin' → logprob: -19.250001907348633
    10. '  
' → logprob: -20.000001907348633

Token 74: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04859134554862976
    2. '(ans' → logprob: -3.048591375350952
    3. '('' → logprob: -13.673591613769531
    4. '()' → logprob: -14.423591613769531
    5. ' (' → logprob: -14.923591613769531
    6. '("("' → logprob: -14.923591613769531
    7. '(`' → logprob: -15.173591613769531
    8. '(
' → logprob: -15.173591613769531
    9. '(answer' → logprob: -15.173591613769531
    10. '(an' → logprob: -15.923591613769531

Token 75: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -15.25
    3. '))' → logprob: -17.125
    4. ')`' → logprob: -17.375
    5. ')
' → logprob: -18.375
    6. '')' → logprob: -20.25
    7. '`)' → logprob: -20.25
    8. ')}' → logprob: -20.625
    9. '）' → logprob: -20.75
    10. ')**' → logprob: -20.75


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 73
Tokens correctement prédits (1ère position, stricte): 24
Tokens correctement prédits (1ère position, avec adaptation): 25
Tokens correctement prédits (top 10): 62
Précision stricte (1ère position): 32.88%
Précision adaptée (1ère position): 34.25%
Précision (top 10): 84.93%
================================================================================
