================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:21:04
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
A = [int(x) for x in input().split()]
counter = dict()
for item in A:
    counter[item] = counter.get(item,0) + 1
from functools import reduce
def comb(k): return k*(k-1)//2 if k>1 else 0
all_vals = list(counter.values())
combo = sum([comb(k) for k in all_vals])
for idx in range(N):
    cur = A[idx]
    print(combo - (counter[cur]-1))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003675133048091084
    2. ''' → logprob: -9.000367164611816
    3. '(N' → logprob: -9.000367164611816
    4. '`' → logprob: -10.375367164611816
    5. '```' → logprob: -10.375367164611816
    6. '(
' → logprob: -10.875367164611816
    7. '('' → logprob: -11.500367164611816
    8. '("("' → logprob: -12.000367164611816
    9. '\(' → logprob: -12.375367164611816
    10. ')' → logprob: -12.750367164611816

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3527933657169342
    2. ')' → logprob: -1.2277933359146118
    3. '()' → logprob: -5.727793216705322
    4. '())' → logprob: -7.477793216705322
    5. '(
' → logprob: -8.85279369354248
    6. '```' → logprob: -9.60279369354248
    7. '(

' → logprob: -10.22779369354248
    8. '))' → logprob: -10.22779369354248
    9. '`)' → logprob: -10.85279369354248
    10. '")' → logprob: -10.97779369354248

Token 5: 'A' (ID: 32)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4936116933822632
    2. 'if' → logprob: -1.1186116933822632
    3. 'x' → logprob: -4.368611812591553
    4. 's' → logprob: -4.493611812591553
    5. 'i' → logprob: -4.618611812591553
    6. 'a' → logprob: -5.618611812591553
    7. '`' → logprob: -6.118611812591553
    8. 'f' → logprob: -6.243611812591553
    9. 'print' → logprob: -6.243611812591553
    10. 'sum' → logprob: -6.243611812591553

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0006254645413719118
    2. '\[' → logprob: -8.250625610351562
    3. '[]' → logprob: -9.125625610351562
    4. '[A' → logprob: -9.375625610351562
    5. '.' → logprob: -10.000625610351562
    6. '[:]' → logprob: -10.375625610351562
    7. '[i' → logprob: -10.500625610351562
    8. '+' → logprob: -11.750625610351562
    9. '[...]' → logprob: -11.750625610351562
    10. '[a' → logprob: -12.000625610351562

Token 7: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.4568527638912201
    2. ' list' → logprob: -1.4568527936935425
    3. '[]' → logprob: -2.706852674484253
    4. ' []' → logprob: -3.206852674484253
    5. ' [' → logprob: -4.706852912902832
    6. '[' → logprob: -4.956852912902832
    7. '[int' → logprob: -5.206852912902832
    8. '[input' → logprob: -5.956852912902832
    9. '[list' → logprob: -6.581852912902832
    10. 'input' → logprob: -7.456852912902832

Token 8: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.011699944734573364
    2. '0' → logprob: -4.76170015335083
    3. ')' → logprob: -6.76170015335083
    4. ']' → logprob: -7.13670015335083
    5. ']int' → logprob: -7.26170015335083
    6. 'i' → logprob: -8.386699676513672
    7. ' int' → logprob: -9.136699676513672
    8. '(int' → logprob: -10.261699676513672
    9. '[int' → logprob: -11.386699676513672
    10. 'input' → logprob: -11.386699676513672

Token 9: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07957269996404648
    2. '(input' → logprob: -2.5795726776123047
    3. '()' → logprob: -7.954572677612305
    4. '(x' → logprob: -8.329572677612305
    5. '(a' → logprob: -10.829572677612305
    6. '(i' → logprob: -10.829572677612305
    7. '()]' → logprob: -10.829572677612305
    8. 'input' → logprob: -12.579572677612305
    9. '(

' → logprob: -12.704572677612305
    10. '(A' → logprob: -12.704572677612305

Token 10: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007744893664494157
    2. ')]' → logprob: -7.750774383544922
    3. ' )' → logprob: -8.750774383544922
    4. '())' → logprob: -9.000774383544922
    5. '(input' → logprob: -11.125774383544922
    6. ')])' → logprob: -11.125774383544922
    7. '),' → logprob: -12.000774383544922
    8. 'input' → logprob: -12.125774383544922
    9. '(' → logprob: -12.250774383544922
    10. '(x' → logprob: -13.375774383544922

Token 11: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.27130767703056335
    2. ' for' → logprob: -1.7713077068328857
    3. ')' → logprob: -2.7713077068328857
    4. '(input' → logprob: -6.021307468414307
    5. 'input' → logprob: -6.771307468414307
    6. ')]' → logprob: -7.771307468414307
    7. '(' → logprob: -8.146307945251465
    8. ' input' → logprob: -8.396307945251465
    9. ']' → logprob: -8.646307945251465
    10. ' )' → logprob: -9.646307945251465

Token 12: ' x' (ID: 1215)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.12757018208503723
    2. 'input' → logprob: -2.127570152282715
    3. ' ' → logprob: -8.502570152282715
    4. '=input' → logprob: -8.627570152282715
    5. '(input' → logprob: -8.877570152282715
    6. '<|end|>' → logprob: -9.752570152282715
    7. '_input' → logprob: -11.252570152282715
    8. ' range' → logprob: -11.502570152282715
    9. '<|end|>' → logprob: -11.752570152282715
    10. '	input' → logprob: -11.877570152282715

Token 13: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12742242217063904
    2. 'in' → logprob: -2.127422332763672
    3. '(' → logprob: -8.377422332763672
    4. 'input' → logprob: -8.752422332763672
    5. '(input' → logprob: -10.502422332763672
    6. ' ' → logprob: -11.252422332763672
    7. '_' → logprob: -11.502422332763672
    8. ')' → logprob: -11.877422332763672
    9. 'x' → logprob: -12.002422332763672
    10. ' input' → logprob: -12.252422332763672

Token 14: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.251953661441803
    2. ' input' → logprob: -1.5019536018371582
    3. '(input' → logprob: -10.876954078674316
    4. 'range' → logprob: -12.251954078674316
    5. ' range' → logprob: -14.251954078674316
    6. '=input' → logprob: -16.251953125
    7. ',input' → logprob: -17.376953125
    8. '<input' → logprob: -17.626953125
    9. '[input' → logprob: -18.001953125
    10. '	input' → logprob: -18.251953125

Token 15: '().' (ID: 1454)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.06006169691681862
    2. '()' → logprob: -3.0600616931915283
    3. '().' → logprob: -4.685061931610107
    4. '())' → logprob: -6.185061931610107
    5. '()].' → logprob: -9.81006145477295
    6. ')]' → logprob: -11.06006145477295
    7. '(' → logprob: -11.18506145477295
    8. ']' → logprob: -11.43506145477295
    9. '()][' → logprob: -11.68506145477295
    10. ']()' → logprob: -12.18506145477295

Token 16: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.5861724831629544e-05
    2. 'strip' → logprob: -10.000056266784668
    3. 'rstrip' → logprob: -11.500056266784668
    4. ' split' → logprob: -15.250056266784668
    5. '(split' → logprob: -17.50005531311035
    6. 'spl' → logprob: -17.62505531311035
    7. 's' → logprob: -20.37505531311035
    8. 'sp' → logprob: -20.62505531311035
    9. 'replace' → logprob: -21.25005531311035
    10. '.split' → logprob: -21.25005531311035

Token 17: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.030842842534184456
    2. '())' → logprob: -4.0308427810668945
    3. '()' → logprob: -5.4058427810668945
    4. '(' → logprob: -5.4058427810668945
    5. ')]' → logprob: -6.0308427810668945
    6. '('' → logprob: -7.2808427810668945
    7. ']' → logprob: -7.7808427810668945
    8. ')' → logprob: -9.905842781066895
    9. '')]' → logprob: -10.530842781066895
    10. '()][' → logprob: -12.030842781066895

Token 18: 'counter' (ID: 32128)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7809578776359558
    2. 'S' → logprob: -2.4059579372406006
    3. 'A' → logprob: -2.6559579372406006
    4. 'B' → logprob: -3.0309579372406006
    5. 'for' → logprob: -3.1559579372406006
    6. 'M' → logprob: -3.2809579372406006
    7. 'c' → logprob: -3.4059579372406006
    8. 'count' → logprob: -3.4059579372406006
    9. 'sum' → logprob: -3.4059579372406006
    10. 'C' → logprob: -3.5309579372406006

Token 19: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09052927792072296
    2. '(' → logprob: -2.840529203414917
    3. 's' → logprob: -4.090529441833496
    4. '_' → logprob: -5.090529441833496
    5. '.' → logprob: -5.465529441833496
    6. '=' → logprob: -8.090529441833496
    7. '\[' → logprob: -8.840529441833496
    8. '```' → logprob: -8.965529441833496
    9. '_counter' → logprob: -9.965529441833496
    10. '['' → logprob: -10.090529441833496

Token 20: ' dict' (ID: 11878)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.004456585738807917
    2. ' {}' → logprob: -5.754456520080566
    3. '{' → logprob: -7.129456520080566
    4. '0' → logprob: -7.879456520080566
    5. '[' → logprob: -9.629456520080566
    6. ' ' → logprob: -11.504456520080566
    7. 'default' → logprob: -12.129456520080566
    8. 'dict' → logprob: -12.379456520080566
    9. ' defaultdict' → logprob: -12.879456520080566
    10. '{}
' → logprob: -13.004456520080566

Token 21: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.013409740291535854
    2. '(' → logprob: -4.388409614562988
    3. '()]' → logprob: -8.638409614562988
    4. ']()' → logprob: -8.888409614562988
    5. '().' → logprob: -9.513409614562988
    6. '.setdefault' → logprob: -9.763409614562988
    7. '|()
' → logprob: -9.763409614562988
    8. '()
' → logprob: -9.763409614562988
    9. '>()' → logprob: -10.513409614562988
    10. '`()' → logprob: -10.513409614562988

Token 22: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.7120533811976202e-05
    2. '```' → logprob: -12.000017166137695
    3. 'f' → logprob: -12.125017166137695
    4. ' for' → logprob: -12.250017166137695
    5. '
' → logprob: -15.000017166137695
    6. '`' → logprob: -16.250017166137695
    7. '' → logprob: -16.500017166137695
    8. 'F' → logprob: -16.875017166137695
    9. 'For' → logprob: -17.625017166137695
    10. 'fo' → logprob: -17.875017166137695

Token 23: ' item' (ID: 2169)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.6763242483139038
    2. ' a' → logprob: -1.4263242483139038
    3. ' ' → logprob: -1.9263242483139038
    4. ' A' → logprob: -3.3013243675231934
    5. ' i' → logprob: -3.3013243675231934
    6. 'x' → logprob: -4.551324367523193
    7. 'a' → logprob: -4.676324367523193
    8. ' num' → logprob: -5.551324367523193
    9. 'A' → logprob: -5.676324367523193
    10. '_' → logprob: -6.301324367523193

Token 24: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011187640018761158
    2. 'in' → logprob: -4.511187553405762
    3. ' ' → logprob: -9.386187553405762
    4. '  ' → logprob: -11.261187553405762
    5. '	in' → logprob: -11.261187553405762
    6. 's' → logprob: -11.636187553405762
    7. '   ' → logprob: -12.261187553405762
    8. ' :' → logprob: -13.136187553405762
    9. '```' → logprob: -13.136187553405762
    10. ':' → logprob: -13.386187553405762

Token 25: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.2254142314195633
    2. ' A' → logprob: -1.6004142761230469
    3. ' ' → logprob: -14.100414276123047
    4. '	A' → logprob: -15.350414276123047
    5. '(A' → logprob: -15.975414276123047
    6. ' ' → logprob: -16.475414276123047
    7. '_A' → logprob: -16.850414276123047
    8. '`' → logprob: -16.850414276123047
    9. ' А' → logprob: -17.225414276123047
    10. '  ' → logprob: -17.350414276123047

Token 26: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00118677644059062
    2. ' :' → logprob: -6.751186847686768
    3. ':
' → logprob: -11.50118637084961
    4. '):' → logprob: -12.62618637084961
    5. ':**' → logprob: -13.75118637084961
    6. '   ' → logprob: -14.62618637084961
    7. '：' → logprob: -15.50118637084961
    8. '+:' → logprob: -15.50118637084961
    9. ' :
' → logprob: -15.62618637084961
    10. '=' → logprob: -16.00118637084961

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10043235123157501
    2. ' counter' → logprob: -2.4754323959350586
    3. ' if' → logprob: -4.975432395935059
    4. '    ' → logprob: -6.475432395935059
    5. 'counter' → logprob: -6.600432395935059
    6. '```' → logprob: -7.475432395935059
    7. '	counter' → logprob: -8.225432395935059
    8. '[counter' → logprob: -8.350432395935059
    9. ' ```' → logprob: -8.850432395935059
    10. '_counter' → logprob: -9.225432395935059

Token 28: ' counter' (ID: 9446)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counter' (adapté à ' counter') → logprob: -0.19878797233104706
    2. 'if' → logprob: -2.4487879276275635
    3. ' counter' → logprob: -2.8237879276275635
    4. ' if' → logprob: -3.4487879276275635
    5. '   ' → logprob: -5.948788166046143
    6. '```' → logprob: -9.698787689208984
    7. '_counter' → logprob: -11.198787689208984
    8. '	counter' → logprob: -11.823787689208984
    9. ' ' → logprob: -12.198787689208984
    10. '    ' → logprob: -13.073787689208984

Token 29: '[item' (ID: 62534)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4549945890903473
    2. '[item' → logprob: -1.079994559288025
    3. '.setdefault' → logprob: -3.8299946784973145
    4. '.get' → logprob: -5.8299946784973145
    5. '```' → logprob: -7.8299946784973145
    6. '[counter' → logprob: -8.079994201660156
    7. '[...]' → logprob: -8.704994201660156
    8. '[get' → logprob: -9.329994201660156
    9. '   ' → logprob: -9.579994201660156
    10. '[]' → logprob: -10.079994201660156

Token 30: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004448512569069862
    2. ' ]' → logprob: -6.129448413848877
    3. ']=' → logprob: -6.254448413848877
    4. ']+=' → logprob: -8.504448890686035
    5. '=' → logprob: -9.004448890686035
    6. ' =' → logprob: -11.504448890686035
    7. ')]' → logprob: -14.254448890686035
    8. '"]' → logprob: -14.379448890686035
    9. ')' → logprob: -14.504448890686035
    10. '']' → logprob: -14.754448890686035

Token 31: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.036180634051561356
    2. ' =' → logprob: -3.4111807346343994
    3. '+=' → logprob: -6.16118049621582
    4. ' +=' → logprob: -7.78618049621582
    5. ' ' → logprob: -13.53618049621582
    6. '[' → logprob: -13.53618049621582
    7. ']+=' → logprob: -13.78618049621582
    8. '```' → logprob: -14.91118049621582
    9. '=

' → logprob: -15.03618049621582
    10. '=
' → logprob: -15.41118049621582

Token 32: ' counter' (ID: 9446)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counter' → logprob: -0.5232774019241333
    2. ' counter' → logprob: -0.8982774019241333
    3. '0' → logprob: -9.773277282714844
    4. '1' → logprob: -9.898277282714844
    5. '	counter' → logprob: -11.148277282714844
    6. '   ' → logprob: -11.398277282714844
    7. ' ' → logprob: -12.398277282714844
    8. '(counter' → logprob: -12.398277282714844
    9. '```' → logprob: -13.210777282714844
    10. '_counter' → logprob: -13.273277282714844

Token 33: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.00011725161311915144
    2. 'get' → logprob: -9.625117301940918
    3. '.' → logprob: -10.250117301940918
    4. '[item' → logprob: -12.125117301940918
    5. 'counter' → logprob: -12.250117301940918
    6. '.setdefault' → logprob: -12.750117301940918
    7. ' .' → logprob: -13.250117301940918
    8. 'item' → logprob: -15.625117301940918
    9. 'getitem' → logprob: -15.875117301940918
    10. '0' → logprob: -16.1251163482666

Token 34: '(item' (ID: 10016)
  Prédit: '(item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(item' → logprob: -9.805981972021982e-05
    2. '(' → logprob: -9.25009822845459
    3. ' (' → logprob: -14.62509822845459
    4. 'item' → logprob: -14.87509822845459
    5. '(token' → logprob: -15.12509822845459
    6. '(object' → logprob: -15.50009822845459
    7. '(counter' → logprob: -16.250097274780273
    8. '(Item' → logprob: -16.625097274780273
    9. ')item' → logprob: -16.625097274780273
    10. ',item' → logprob: -16.875097274780273

Token 35: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06694448739290237
    2. ',item' → logprob: -2.8169445991516113
    3. '(item' → logprob: -5.316944599151611
    4. ' ,' → logprob: -10.691944122314453
    5. 'item' → logprob: -10.691944122314453
    6. '```' → logprob: -13.066944122314453
    7. ')' → logprob: -13.316944122314453
    8. '1' → logprob: -13.566944122314453
    9. ')item' → logprob: -13.691944122314453
    10. '=item' → logprob: -13.691944122314453

Token 36: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007108822464942932
    2. ' ' → logprob: -7.250710964202881
    3. ')' → logprob: -14.375710487365723
    4. '1' → logprob: -16.37571144104004
    5. '    ' → logprob: -16.62571144104004
    6. '```' → logprob: -16.75071144104004
    7. '  ' → logprob: -17.06321144104004
    8. '   ' → logprob: -17.18821144104004
    9. '۰' → logprob: -17.56321144104004
    10. ' ' → logprob: -17.75071144104004

Token 37: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00554998591542244
    2. ')+' → logprob: -5.380549907684326
    3. ' )' → logprob: -7.130549907684326
    4. '+' → logprob: -9.005550384521484
    5. ' +' → logprob: -12.255550384521484
    6. '1' → logprob: -14.255550384521484
    7. '+)' → logprob: -14.880550384521484
    8. ')+(' → logprob: -16.130550384521484
    9. ']+' → logprob: -16.380550384521484
    10. '```' → logprob: -17.005550384521484

Token 38: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16023631393909454
    2. ' +' → logprob: -1.9102363586425781
    3. '1' → logprob: -11.910236358642578
    4. ' plus' → logprob: -13.035236358642578
    5. ' ' → logprob: -13.285236358642578
    6. '0' → logprob: -14.910236358642578
    7. '()+' → logprob: -14.910236358642578
    8. ' +
' → logprob: -15.785236358642578
    9. ')+' → logprob: -15.910236358642578
    10. '+
' → logprob: -16.035236358642578

Token 39: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004879915213678032
    2. ' ' → logprob: -7.625487804412842
    3. '   ' → logprob: -18.62548828125
    4. '```' → logprob: -19.00048828125
    5. '<|end|>' → logprob: -19.37548828125
    6. '  ' → logprob: -20.75048828125
    7. '0' → logprob: -21.62548828125
    8. ' ' → logprob: -22.12548828125
    9. '۱' → logprob: -22.50048828125
    10. '１' → logprob: -22.87548828125

Token 40: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -19.000001907348633
    4. '```' → logprob: -19.875001907348633
    5. '  ' → logprob: -21.500001907348633
    6. '<|end|>' → logprob: -22.625001907348633
    7. '１' → logprob: -23.250001907348633
    8. '۱' → logprob: -23.375001907348633
    9. '`' → logprob: -23.750001907348633
    10. '    ' → logprob: -23.875001907348633

Token 41: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.68305903673172
    2. '
' → logprob: -1.8080589771270752
    3. 'n' → logprob: -2.558058977127075
    4. 'i' → logprob: -2.808058977127075
    5. 'if' → logprob: -3.058058977127075
    6. ' 
' → logprob: -3.558058977127075
    7. ' ' → logprob: -3.558058977127075
    8. ')' → logprob: -4.433059215545654
    9. '  
' → logprob: -4.683059215545654
    10. '#' → logprob: -4.808059215545654

Token 42: 'from' (ID: 2845)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04313861206173897
    2. 'max' → logprob: -3.7931385040283203
    3. 'result' → logprob: -4.79313850402832
    4. 'most' → logprob: -5.66813850402832
    5. 'print' → logprob: -6.16813850402832
    6. 'if' → logprob: -6.91813850402832
    7. ' for' → logprob: -7.41813850402832
    8. 'm' → logprob: -7.66813850402832
    9. 'count' → logprob: -7.91813850402832
    10. 'answer' → logprob: -7.91813850402832

Token 43: ' functools' (ID: 142636)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -9.9728669738397e-05
    2. 'collections' → logprob: -9.625100135803223
    3. ' collection' → logprob: -11.000100135803223
    4. ' itertools' → logprob: -11.625100135803223
    5. ' ' → logprob: -12.750100135803223
    6. ' kole' → logprob: -13.750100135803223
    7. ' colle' → logprob: -13.750100135803223
    8. ' math' → logprob: -14.000100135803223
    9. ' space' → logprob: -14.875100135803223
    10. '_' → logprob: -14.875100135803223

Token 44: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.8958277106285095
    2. '.' → logprob: -1.2708277702331543
    3. 'import' → logprob: -1.2708277702331543
    4. '_' → logprob: -4.020827770233154
    5. '_import' → logprob: -4.645827770233154
    6. ' .' → logprob: -6.520827770233154
    7. '.import' → logprob: -7.145827770233154
    8. '	import' → logprob: -8.270827293395996
    9. ' ' → logprob: -9.270827293395996
    10. '._' → logprob: -9.395827293395996

Token 45: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.05402791500091553
    2. 'cmp' → logprob: -3.429028034210205
    3. ' reduce' → logprob: -4.054028034210205
    4. 'l' → logprob: -6.679028034210205
    5. ' cmp' → logprob: -7.304028034210205
    6. ' l' → logprob: -7.429028034210205
    7. 'cache' → logprob: -9.429027557373047
    8. 'partial' → logprob: -9.429027557373047
    9. 'wrap' → logprob: -9.554027557373047
    10. 'redu' → logprob: -10.054027557373047

Token 46: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.3936105966567993
    2. 'result' → logprob: -1.6436105966567993
    3. ')' → logprob: -2.0186104774475098
    4. ',' → logprob: -2.3936104774475098
    5. ' 
' → logprob: -2.7686104774475098
    6. ' ' → logprob: -3.0186104774475098
    7. '_' → logprob: -3.1436104774475098
    8. '' → logprob: -3.7686104774475098
    9. '<|end|>' → logprob: -3.7686104774475098
    10. 'reduce' → logprob: -4.14361047744751

Token 47: 'def' (ID: 1314)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.444377064704895
    2. 'res' → logprob: -2.0693769454956055
    3. ' result' → logprob: -3.4443769454956055
    4. 'f' → logprob: -3.4443769454956055
    5. 'unique' → logprob: -3.9443769454956055
    6. 'max' → logprob: -4.4443769454956055
    7. 'ans' → logprob: -4.5693769454956055
    8. ' ans' → logprob: -4.6943769454956055
    9. 'reduce' → logprob: -4.8193769454956055
    10. 'most' → logprob: -4.9443769454956055

Token 48: ' comb' (ID: 4134)
  Prédit: ' gcd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' gcd' → logprob: -0.49201908707618713
    2. ' multiply' → logprob: -1.9920190572738647
    3. ' factorial' → logprob: -2.1170191764831543
    4. ' l' → logprob: -3.3670191764831543
    5. ' add' → logprob: -3.6170191764831543
    6. ' union' → logprob: -4.742019176483154
    7. ' counter' → logprob: -4.992019176483154
    8. ' combine' → logprob: -5.117019176483154
    9. ' product' → logprob: -5.117019176483154
    10. ' max' → logprob: -5.492019176483154

Token 49: '(k' (ID: 12125)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.004638861399143934
    2. 'ination' → logprob: -6.504638671875
    3. '(' → logprob: -6.629638671875
    4. 'ine' → logprob: -6.754638671875
    5. '(num' → logprob: -9.379638671875
    6. '(i' → logprob: -9.379638671875
    7. 'in' → logprob: -9.629638671875
    8. '```' → logprob: -9.754638671875
    9. '(count' → logprob: -9.754638671875
    10. '(N' → logprob: -9.879638671875

Token 50: '):' (ID: 3127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17769388854503632
    2. ',k' → logprob: -1.9276938438415527
    3. ',n' → logprob: -4.427693843841553
    4. ',r' → logprob: -6.302693843841553
    5. ' ,' → logprob: -6.927693843841553
    6. ',a' → logprob: -7.177693843841553
    7. ')' → logprob: -7.302693843841553
    8. '):' → logprob: -8.802694320678711
    9. ',num' → logprob: -8.927694320678711
    10. ',j' → logprob: -9.052694320678711

Token 51: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8517745733261108
    2. ' ' → logprob: -1.3517745733261108
    3. '(k' → logprob: -2.8517746925354004
    4. '    ' → logprob: -3.1017746925354004
    5. '<|end|>' → logprob: -3.1017746925354004
    6. '(' → logprob: -3.2267746925354004
    7. '
' → logprob: -3.6017746925354004
    8. ' 
' → logprob: -3.6017746925354004
    9. ':' → logprob: -4.1017746925354
    10. '(n' → logprob: -4.8517746925354

Token 52: ' k' (ID: 372)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.1760243922472
    2. '1' → logprob: -2.3010244369506836
    3. 'factor' → logprob: -3.4260244369506836
    4. 'k' → logprob: -4.051024436950684
    5. ' reduce' → logprob: -5.676024436950684
    6. '(k' → logprob: -5.801024436950684
    7. '(' → logprob: -6.051024436950684
    8. ' ' → logprob: -7.176024436950684
    9. ' k' → logprob: -7.426024436950684
    10. ' factorial' → logprob: -8.176024436950684

Token 53: '*(' (ID: 14793)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5308825373649597
    2. '*(' → logprob: -0.9058825373649597
    3. ' *' → logprob: -5.655882358551025
    4. '*k' → logprob: -5.905882358551025
    5. '-' → logprob: -8.280882835388184
    6. '**' → logprob: -8.405882835388184
    7. '//' → logprob: -8.780882835388184
    8. '!' → logprob: -8.780882835388184
    9. '```' → logprob: -8.905882835388184
    10. '+' → logprob: -9.155882835388184

Token 54: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -7.107425062713446e-06
    2. '(k' → logprob: -12.250006675720215
    3. '-' → logprob: -14.000006675720215
    4. ' k' → logprob: -14.125006675720215
    5. '1' → logprob: -14.250006675720215
    6. '{k' → logprob: -17.50000762939453
    7. '	k' → logprob: -18.37500762939453
    8. '   ' → logprob: -18.50000762939453
    9. '```' → logprob: -18.62500762939453
    10. ' ' → logprob: -19.12500762939453

Token 55: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.005243002902716398
    2. ' -' → logprob: -5.255242824554443
    3. '1' → logprob: -12.130243301391602
    4. ')' → logprob: -13.755243301391602
    5. '-)' → logprob: -13.880243301391602
    6. ' ' → logprob: -14.255243301391602
    7. '```' → logprob: -15.255243301391602
    8. '-k' → logprob: -15.755243301391602
    9. '<|end|>' → logprob: -15.755243301391602
    10. 'k' → logprob: -16.0052433013916

Token 56: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4140441635390744e-05
    2. ' ' → logprob: -11.250014305114746
    3. '   ' → logprob: -15.500014305114746
    4. '```' → logprob: -16.25001335144043
    5. '2' → logprob: -16.37501335144043
    6. ')' → logprob: -16.50001335144043
    7. '...' → logprob: -16.87501335144043
    8. '139' → logprob: -16.93751335144043
    9. '<|end|>' → logprob: -16.93751335144043
    10. '１' → logprob: -17.06251335144043

Token 57: ')//' (ID: 60375)
  Prédit: ')//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.2997899353504181
    2. ')' → logprob: -1.5497899055480957
    3. '//' → logprob: -3.1747899055480957
    4. ' //' → logprob: -5.799789905548096
    5. ' )' → logprob: -6.424789905548096
    6. ')/' → logprob: -8.924790382385254
    7. '   ' → logprob: -10.424790382385254
    8. '```' → logprob: -10.674790382385254
    9. ' ' → logprob: -10.799790382385254
    10. ')>>' → logprob: -11.549790382385254

Token 58: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.319370302458992e-06
    2. ' ' → logprob: -12.375005722045898
    3. '1' → logprob: -13.750005722045898
    4. '```' → logprob: -18.2500057220459
    5. '<|end|>' → logprob: -18.7500057220459
    6. '۲' → logprob: -19.3750057220459
    7. '   ' → logprob: -19.7500057220459
    8. '{' → logprob: -20.5000057220459
    9. '
' → logprob: -20.5625057220459
    10. '.' → logprob: -20.9375057220459

Token 59: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7270168662071228
    2. '
' → logprob: -1.2270169258117676
    3. 'result' → logprob: -1.6020169258117676
    4. ' for' → logprob: -5.102016925811768
    5. 'res' → logprob: -5.227016925811768
    6. 'print' → logprob: -6.352016925811768
    7. 'count' → logprob: -6.477016925811768
    8. 'answer' → logprob: -6.477016925811768
    9. 'total' → logprob: -7.227016925811768
    10. ' 
' → logprob: -7.227016925811768

Token 60: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.08894012868404388
    2. ' k' → logprob: -2.463940143585205
    3. '	k' → logprob: -15.588939666748047
    4. ' ' → logprob: -15.838939666748047
    5. '0' → logprob: -16.213939666748047
    6. '   ' → logprob: -16.713939666748047
    7. ' ' → logprob: -17.338939666748047
    8. '1' → logprob: -17.838939666748047
    9. '(k' → logprob: -18.276439666748047
    10. ' к' → logprob: -18.526439666748047

Token 61: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.09360693395137787
    2. ' >' → logprob: -2.593606948852539
    3. '>=' → logprob: -4.468606948852539
    4. ' >=' → logprob: -5.843606948852539
    5. ' ' → logprob: -8.593606948852539
    6. '   ' → logprob: -11.718606948852539
    7. '">' → logprob: -11.718606948852539
    8. '  ' → logprob: -11.843606948852539
    9. '≥' → logprob: -12.218606948852539
    10. '```' → logprob: -12.593606948852539

Token 62: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00024822709383443
    2. ' ' → logprob: -8.375247955322266
    3. '0' → logprob: -11.125247955322266
    4. '>' → logprob: -13.500247955322266
    5. '2' → logprob: -14.125247955322266
    6. '=' → logprob: -14.500247955322266
    7. '１' → logprob: -17.062747955322266
    8. '<|end|>' → logprob: -17.125247955322266
    9. '۱' → logprob: -17.562747955322266
    10. '```' → logprob: -17.562747955322266

Token 63: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.007606627885252237
    2. 'else' → logprob: -4.882606506347656
    3. '	else' → logprob: -15.132606506347656
    4. ' ' → logprob: -16.007606506347656
    5. '_else' → logprob: -17.507606506347656
    6. ' ' → logprob: -17.757606506347656
    7. '<|end|>' → logprob: -18.382606506347656
    8. ' elif' → logprob: -18.757606506347656
    9. ' in' → logprob: -19.257606506347656
    10. ' return' → logprob: -19.507606506347656

Token 64: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00033546582562848926
    2. ' ' → logprob: -8.000335693359375
    3. '   ' → logprob: -17.375335693359375
    4. '  ' → logprob: -18.312835693359375
    5. '1' → logprob: -18.375335693359375
    6. '00' → logprob: -18.500335693359375
    7. '۰' → logprob: -18.562835693359375
    8. 'k' → logprob: -18.687835693359375
    9. ' ' → logprob: -19.250335693359375
    10. '０' → logprob: -19.750335693359375

Token 65: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7729658540920354e-05
    2. ' ' → logprob: -10.500027656555176
    3. '1' → logprob: -17.125028610229492
    4. '۰' → logprob: -17.312528610229492
    5. '00' → logprob: -17.375028610229492
    6. 'k' → logprob: -17.812528610229492
    7. '012' → logprob: -17.937528610229492
    8. '０' → logprob: -18.375028610229492
    9. '000' → logprob: -18.500028610229492
    10. '`' → logprob: -18.812528610229492

Token 66: '
' (ID: 198)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8504611253738403
    2. 'total' → logprob: -1.2254611253738403
    3. '
' → logprob: -1.8504611253738403
    4. '

' → logprob: -2.850461006164551
    5. 'res' → logprob: -4.725461006164551
    6. '
' → logprob: -4.975461006164551
    7. 'results' → logprob: -5.225461006164551
    8. 'N' → logprob: -5.475461006164551
    9. 'print' → logprob: -5.475461006164551
    10. ' 
' → logprob: -5.850461006164551

Token 67: 'all' (ID: 586)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.23330830037593842
    2. 'result' → logprob: -2.4833083152770996
    3. 'res' → logprob: -2.8583083152770996
    4. 'ans' → logprob: -3.3583083152770996
    5. 'answer' → logprob: -4.9833083152771
    6. 'all' → logprob: -5.2333083152771
    7. 'sum' → logprob: -5.9833083152771
    8. '
' → logprob: -6.1083083152771
    9. 'print' → logprob: -6.1083083152771
    10. 's' → logprob: -6.2333083152771

Token 68: '_vals' (ID: 71688)
  Prédit: '_pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -0.38750553131103516
    2. '_' → logprob: -2.512505531311035
    3. '_count' → logprob: -2.512505531311035
    4. ' =' → logprob: -2.637505531311035
    5. '_com' → logprob: -3.387505531311035
    6. '=' → logprob: -3.762505531311035
    7. '_comb' → logprob: -5.012505531311035
    8. '_sum' → logprob: -5.387505531311035
    9. '_=' → logprob: -5.387505531311035
    10. '_counts' → logprob: -5.762505531311035

Token 69: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4805605113506317
    2. '=' → logprob: -0.9805605411529541
    3. '(' → logprob: -6.105560302734375
    4. 'sum' → logprob: -6.230560302734375
    5. '_sum' → logprob: -7.230560302734375
    6. ')' → logprob: -7.480560302734375
    7. '=sum' → logprob: -7.480560302734375
    8. '_' → logprob: -9.355560302734375
    9. '(sum' → logprob: -9.480560302734375
    10. '_count' → logprob: -9.980560302734375

Token 70: ' list' (ID: 1562)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.4165187180042267
    2. ' reduce' → logprob: -1.2915186882019043
    3. 'sum' → logprob: -3.5415186882019043
    4. 'reduce' → logprob: -3.5415186882019043
    5. ' list' → logprob: -5.041518688201904
    6. '[' → logprob: -7.791518688201904
    7. ' counter' → logprob: -7.916518688201904
    8. ' [' → logprob: -8.041519165039062
    9. 'list' → logprob: -8.916519165039062
    10. 'counter' → logprob: -10.416519165039062

Token 71: '(counter' (ID: 85625)
  Prédit: '(counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(counter' → logprob: -6.861651490908116e-05
    2. '(' → logprob: -9.625068664550781
    3. '(count' → logprob: -14.000068664550781
    4. 'counter' → logprob: -14.125068664550781
    5. '()' → logprob: -14.500068664550781
    6. '(
' → logprob: -16.75006866455078
    7. '	counter' → logprob: -16.75006866455078
    8. '(filter' → logprob: -16.87506866455078
    9. ' (' → logprob: -17.12506866455078
    10. ' counter' → logprob: -17.62506866455078

Token 72: '.values' (ID: 20422)
  Prédit: '.values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.values' → logprob: -5.145118848304264e-05
    2. '.' → logprob: -10.375051498413086
    3. 'values' → logprob: -12.375051498413086
    4. ').' → logprob: -12.375051498413086
    5. ' .' → logprob: -12.500051498413086
    6. '.keys' → logprob: -12.625051498413086
    7. '.value' → logprob: -13.000051498413086
    8. ')' → logprob: -14.000051498413086
    9. '.val' → logprob: -14.000051498413086
    10. '().' → logprob: -15.125051498413086

Token 73: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0033865992445498705
    2. '()' → logprob: -5.753386497497559
    3. ')' → logprob: -8.503386497497559
    4. ' ())' → logprob: -12.378386497497559
    5. '())
' → logprob: -14.378386497497559
    6. '()))' → logprob: -14.753386497497559
    7. '();)' → logprob: -15.003386497497559
    8. '()]' → logprob: -15.753386497497559
    9. '(' → logprob: -16.003387451171875
    10. '())

' → logprob: -16.378387451171875

Token 74: 'combo' (ID: 78456)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.2401810884475708
    2. '
' → logprob: -2.8651809692382812
    3. 'res' → logprob: -3.4901809692382812
    4. 'all' → logprob: -3.4901809692382812
    5. 'result' → logprob: -3.7401809692382812
    6. 'ans' → logprob: -3.8651809692382812
    7. 'print' → logprob: -4.240180969238281
    8. 'sum' → logprob: -4.490180969238281
    9. 's' → logprob: -5.115180969238281
    10. 'answer' → logprob: -5.865180969238281

Token 75: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08173367381095886
    2. '=' → logprob: -3.3317337036132812
    3. ' =' → logprob: -3.5817337036132812
    4. 'n' → logprob: -5.706733703613281
    5. 'nt' → logprob: -6.081733703613281
    6. '_val' → logprob: -6.206733703613281
    7. 'val' → logprob: -6.331733703613281
    8. 'sum' → logprob: -7.706733703613281
    9. '_s' → logprob: -7.706733703613281
    10. 'ns' → logprob: -7.706733703613281

Token 76: ' sum' (ID: 4215)
  Prédit: ' reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reduce' → logprob: -0.03737989813089371
    2. 'reduce' → logprob: -3.5373799800872803
    3. ' sum' → logprob: -4.912379741668701
    4. 'sum' → logprob: -8.53738021850586
    5. ' combine' → logprob: -11.28738021850586
    6. ' comb' → logprob: -11.53738021850586
    7. ' redu' → logprob: -12.66238021850586
    8. 're' → logprob: -13.03738021850586
    9. ' lambda' → logprob: -13.16238021850586
    10. '[' → logprob: -13.16238021850586

Token 77: '([' (ID: 5194)
  Prédit: '(com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.0062631662003695965
    2. '(' → logprob: -5.881263256072998
    3. '([' → logprob: -6.756263256072998
    4. '(map' → logprob: -7.006263256072998
    5. '(all' → logprob: -7.256263256072998
    6. '(combo' → logprob: -7.381263256072998
    7. '(list' → logprob: -10.25626277923584
    8. '((' → logprob: -11.88126277923584
    9. '(counter' → logprob: -12.25626277923584
    10. 'all' → logprob: -13.38126277923584

Token 78: 'comb' (ID: 43606)
  Prédit: 'comb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.0007229181355796754
    2. ' comb' → logprob: -7.250722885131836
    3. 'com' → logprob: -12.000722885131836
    4. '   ' → logprob: -13.000722885131836
    5. 'combo' → logprob: -13.250722885131836
    6. 'combine' → logprob: -14.375722885131836
    7. 'comm' → logprob: -14.625722885131836
    8. '(com' → logprob: -15.125722885131836
    9. ' ' → logprob: -15.625722885131836
    10. 'Comb' → logprob: -15.750722885131836

Token 79: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.32307830452919006
    2. '(v' → logprob: -1.8230782747268677
    3. '(val' → logprob: -2.3230783939361572
    4. '(x' → logprob: -4.448078155517578
    5. '(' → logprob: -5.448078155517578
    6. '(i' → logprob: -8.823078155517578
    7. '(c' → logprob: -9.073078155517578
    8. '(value' → logprob: -9.198078155517578
    9. '(counter' → logprob: -9.698078155517578
    10. '(count' → logprob: -10.198078155517578

Token 80: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00046546570956707
    2. '(' → logprob: -8.875465393066406
    3. ' )' → logprob: -9.000465393066406
    4. '(val' → logprob: -9.875465393066406
    5. '(k' → logprob: -10.000465393066406
    6. '())' → logprob: -10.625465393066406
    7. '))' → logprob: -11.625465393066406
    8. '(v' → logprob: -11.625465393066406
    9. '(x' → logprob: -11.750465393066406
    10. ')])' → logprob: -12.375465393066406

Token 81: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1097582578659058
    2. ')' → logprob: -1.6097582578659058
    3. 'for' → logprob: -1.6097582578659058
    4. '(' → logprob: -1.8597582578659058
    5. '(k' → logprob: -2.6097583770751953
    6. '(val' → logprob: -3.8597583770751953
    7. '(v' → logprob: -4.609758377075195
    8. '()' → logprob: -5.359758377075195
    9. '(x' → logprob: -6.859758377075195
    10. ' ' → logprob: -7.109758377075195

Token 82: ' k' (ID: 372)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.20143906772136688
    2. 'all' → logprob: -1.7014390230178833
    3. '(all' → logprob: -11.451438903808594
    4. '	all' → logprob: -11.826438903808594
    5. ' counter' → logprob: -12.576438903808594
    6. 'counter' → logprob: -13.201438903808594
    7. ' ' → logprob: -14.076438903808594
    8. '_all' → logprob: -14.701438903808594
    9. ''all' → logprob: -15.326438903808594
    10. 'All' → logprob: -15.701438903808594

Token 83: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1452445387840271
    2. ' all' → logprob: -2.645244598388672
    3. 'all' → logprob: -3.145244598388672
    4. 'in' → logprob: -3.895244598388672
    5. ' ' → logprob: -7.645244598388672
    6. '_all' → logprob: -8.520244598388672
    7. '(all' → logprob: -9.520244598388672
    8. '_vals' → logprob: -11.395244598388672
    9. 'All' → logprob: -11.895244598388672
    10. ']' → logprob: -12.020244598388672

Token 84: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.10021831095218658
    2. ' all' → logprob: -2.3502182960510254
    3. ' ' → logprob: -12.100218772888184
    4. 'counter' → logprob: -12.600218772888184
    5. ' counter' → logprob: -13.725218772888184
    6. '(all' → logprob: -14.475218772888184
    7. '	all' → logprob: -14.725218772888184
    8. '_all' → logprob: -16.350217819213867
    9. 'All' → logprob: -16.350217819213867
    10. ''all' → logprob: -16.350217819213867

Token 85: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -8.537868779967539e-06
    2. 'vals' → logprob: -11.875008583068848
    3. '_val' → logprob: -13.875008583068848
    4. '_vars' → logprob: -15.625008583068848
    5. '_' → logprob: -16.37500762939453
    6. '_v' → logprob: -16.75000762939453
    7. '(vals' → logprob: -16.87500762939453
    8. 'Vals' → logprob: -17.00000762939453
    9. '_va' → logprob: -17.25000762939453
    10. 'val' → logprob: -17.87500762939453

Token 86: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0019888286478817463
    2. '])
' → logprob: -6.251988887786865
    3. ' ])' → logprob: -10.251988410949707
    4. ')' → logprob: -11.126988410949707
    5. ']' → logprob: -12.626988410949707
    6. '])
' → logprob: -12.876988410949707
    7. '])

' → logprob: -13.251988410949707
    8. ')])' → logprob: -14.001988410949707
    9. ']))' → logprob: -14.751988410949707
    10. ')
' → logprob: -14.876988410949707

Token 87: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0014470219612121582
    2. 'print' → logprob: -6.6264472007751465
    3. 'result' → logprob: -9.626446723937988
    4. '
' → logprob: -11.001446723937988
    5. ' for' → logprob: -11.376446723937988
    6. 'results' → logprob: -11.501446723937988
    7. '```' → logprob: -11.626446723937988
    8. 'output' → logprob: -12.501446723937988
    9. 'res' → logprob: -13.501446723937988
    10. 'answer' → logprob: -14.251446723937988

Token 88: ' idx' (ID: 14016)
  Prédit: ' item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' item' → logprob: -0.1773945391178131
    2. ' i' → logprob: -2.0523946285247803
    3. 'item' → logprob: -4.677394390106201
    4. ' ' → logprob: -4.677394390106201
    5. ' _' → logprob: -5.177394390106201
    6. '_' → logprob: -5.677394390106201
    7. ' A' → logprob: -6.677394390106201
    8. ' x' → logprob: -6.802394390106201
    9. ' val' → logprob: -7.177394390106201
    10. 'i' → logprob: -7.427394390106201

Token 89: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5342661738395691
    2. ',' → logprob: -1.0342662334442139
    3. 'in' → logprob: -3.159266233444214
    4. ' ,' → logprob: -4.784265995025635
    5. ' ' → logprob: -4.909265995025635
    6. ',in' → logprob: -9.284266471862793
    7. '  ' → logprob: -10.909266471862793
    8. ',item' → logprob: -11.034266471862793
    9. 's' → logprob: -11.659266471862793
    10. 'In' → logprob: -11.909266471862793

Token 90: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023250136524438858
    2. ' range' → logprob: -3.773250102996826
    3. 'A' → logprob: -13.523250579833984
    4. '(range' → logprob: -13.523250579833984
    5. '	range' → logprob: -13.773250579833984
    6. ' ' → logprob: -14.773250579833984
    7. ' A' → logprob: -15.648250579833984
    8. 'r' → logprob: -16.273250579833984
    9. '   ' → logprob: -16.648250579833984
    10. 'rang' → logprob: -16.898250579833984

Token 91: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.7126991748809814
    2. '(len' → logprob: -0.7126991748809814
    3. '(' → logprob: -3.9626991748809814
    4. '(n' → logprob: -8.337698936462402
    5. ' (' → logprob: -9.712698936462402
    6. 'len' → logprob: -10.587698936462402
    7. ' len' → logprob: -11.462698936462402
    8. ' N' → logprob: -12.087698936462402
    9. 'N' → logprob: -12.462698936462402
    10. '(
' → logprob: -13.087698936462402

Token 92: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0019814528059214354
    2. ' ):' → logprob: -6.501981258392334
    3. ')' → logprob: -8.251981735229492
    4. '):
' → logprob: -8.626981735229492
    5. ':' → logprob: -10.501981735229492
    6. ' )' → logprob: -13.001981735229492
    7. '+' → logprob: -13.126981735229492
    8. '-' → logprob: -13.501981735229492
    9. ',' → logprob: -13.626981735229492
    10. ']:' → logprob: -14.126981735229492

Token 93: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5815240144729614
    2. ' 
' → logprob: -1.8315240144729614
    3. '   ' → logprob: -1.9565240144729614
    4. '<|end|>' → logprob: -2.956523895263672
    5. '    
' → logprob: -3.331523895263672
    6. ',' → logprob: -4.206523895263672
    7. ' ,' → logprob: -5.206523895263672
    8. '   
' → logprob: -5.581523895263672
    9. '    ' → logprob: -5.706523895263672
    10. ' counter' → logprob: -5.831523895263672

Token 94: ' cur' (ID: 4396)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.9627593159675598
    2. '   ' → logprob: -1.712759256362915
    3. ' x' → logprob: -1.712759256362915
    4. ' item' → logprob: -2.087759256362915
    5. ' v' → logprob: -3.337759256362915
    6. 'item' → logprob: -3.837759256362915
    7. ' k' → logprob: -3.962759256362915
    8. 'val' → logprob: -4.337759494781494
    9. ' print' → logprob: -4.837759494781494
    10. ' key' → logprob: -5.087759494781494

Token 95: ' =' (ID: 314)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.35975882411003113
    2. 'ent' → logprob: -1.6097588539123535
    3. '_item' → logprob: -2.9847588539123535
    4. 'val' → logprob: -3.1097588539123535
    5. '_value' → logprob: -6.2347588539123535
    6. ' =' → logprob: -6.9847588539123535
    7. '_' → logprob: -7.2347588539123535
    8. 'item' → logprob: -7.3597588539123535
    9. 'Val' → logprob: -7.4847588539123535
    10. '=' → logprob: -7.6097588539123535

Token 96: ' A' (ID: 355)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counter' → logprob: -0.11375771462917328
    2. 'A' → logprob: -2.363757610321045
    3. 'combo' → logprob: -5.238757610321045
    4. ' counter' → logprob: -5.363757610321045
    5. 'comb' → logprob: -6.113757610321045
    6. ' A' → logprob: -6.988757610321045
    7. 'com' → logprob: -9.863758087158203
    8. ' combo' → logprob: -10.363758087158203
    9. '   ' → logprob: -10.488758087158203
    10. 'count' → logprob: -10.551258087158203

Token 97: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0013557136990129948
    2. '[' → logprob: -7.1263556480407715
    3. 'idx' → logprob: -8.12635612487793
    4. '[i' → logprob: -9.62635612487793
    5. 's' → logprob: -10.12635612487793
    6. '[counter' → logprob: -10.62635612487793
    7. '```' → logprob: -11.12635612487793
    8. ')' → logprob: -11.12635612487793
    9. '[index' → logprob: -11.25135612487793
    10. 'counter' → logprob: -11.75135612487793

Token 98: ']
' (ID: 1592)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0920211672782898
    2. '])
' → logprob: -2.9670212268829346
    3. ']' → logprob: -3.7170212268829346
    4. ')' → logprob: -4.8420209884643555
    5. ')]' → logprob: -6.3420209884643555
    6. ')
' → logprob: -6.9670209884643555
    7. ']
' → logprob: -7.5920209884643555
    8. ' ])' → logprob: -7.7170209884643555
    9. ' ])
' → logprob: -8.092020988464355
    10. ')])' → logprob: -9.092020988464355

Token 99: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033457230776548386
    2. '    
' → logprob: -4.283457279205322
    3. '
' → logprob: -4.783457279205322
    4. ' print' → logprob: -6.033457279205322
    5. ' count' → logprob: -6.783457279205322
    6. 'count' → logprob: -7.033457279205322
    7. 'print' → logprob: -7.158457279205322
    8. ' val' → logprob: -7.408457279205322
    9. ' counter' → logprob: -7.408457279205322
    10. '    ' → logprob: -7.533457279205322

Token 100: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.3274531364440918
    2. 'cnt' → logprob: -2.077453136444092
    3. 'k' → logprob: -3.327453136444092
    4. 'count' → logprob: -3.577453136444092
    5. 'res' → logprob: -3.827453136444092
    6. 'val' → logprob: -4.077453136444092
    7. 'c' → logprob: -4.702453136444092
    8. 'ans' → logprob: -5.327453136444092
    9. 'freq' → logprob: -5.327453136444092
    10. 'before' → logprob: -5.327453136444092

Token 101: '(combo' (ID: 190470)
  Prédit: '(combo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(combo' → logprob: -0.13138841092586517
    2. '(' → logprob: -2.1313884258270264
    3. 'combo' → logprob: -6.006388187408447
    4. '(com' → logprob: -6.881388187408447
    5. '(all' → logprob: -7.631388187408447
    6. '('' → logprob: -8.631388664245605
    7. '(f' → logprob: -9.131388664245605
    8. ' combo' → logprob: -9.881388664245605
    9. '("' → logprob: -9.881388664245605
    10. '((' → logprob: -10.881388664245605

Token 102: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.12873999774456024
    2. '-' → logprob: -2.128740072250366
    3. '-counter' → logprob: -7.128739833831787
    4. '-end' → logprob: -7.503739833831787
    5. '    ' → logprob: -8.503740310668945
    6. '   ' → logprob: -9.003740310668945
    7. ' ' → logprob: -10.378740310668945
    8. ')' → logprob: -10.378740310668945
    9. '-c' → logprob: -11.378740310668945
    10. '"' → logprob: -11.503740310668945

Token 103: ' (' (ID: 350)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.0035084879491478205
    2. '(com' → logprob: -5.878508567810059
    3. ' comb' → logprob: -7.878508567810059
    4. 'com' → logprob: -8.878508567810059
    5. 'counter' → logprob: -8.878508567810059
    6. '(' → logprob: -10.878508567810059
    7. '   ' → logprob: -11.878508567810059
    8. ' (' → logprob: -12.503508567810059
    9. '(counter' → logprob: -12.628508567810059
    10. 'combo' → logprob: -12.753508567810059

Token 104: 'counter' (ID: 32128)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.0028801187872886658
    2. 'counter' → logprob: -5.877880096435547
    3. ' comb' → logprob: -10.877880096435547
    4. 'com' → logprob: -11.002880096435547
    5. 'combo' → logprob: -11.502880096435547
    6. '   ' → logprob: -11.627880096435547
    7. '               ' → logprob: -11.877880096435547
    8. '
' → logprob: -12.627880096435547
    9. '    ' → logprob: -13.627880096435547
    10. '           ' → logprob: -14.002880096435547

Token 105: '[cur' (ID: 81868)
  Prédit: '[cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cur' → logprob: -3.225939872208983e-05
    2. '[A' → logprob: -10.500032424926758
    3. '[' → logprob: -13.125032424926758
    4. 'cur' → logprob: -14.125032424926758
    5. 'A' → logprob: -14.125032424926758
    6. '[current' → logprob: -15.125032424926758
    7. '[c' → logprob: -15.375032424926758
    8. ')' → logprob: -15.875032424926758
    9. '[
' → logprob: -16.125032424926758
    10. '(cur' → logprob: -16.375032424926758

Token 106: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.40906229615211487
    2. ' -' → logprob: -1.4090622663497925
    3. '*(' → logprob: -3.159062385559082
    4. '[cur' → logprob: -4.284062385559082
    5. ' *' → logprob: -4.909062385559082
    6. '   ' → logprob: -5.034062385559082
    7. '*' → logprob: -5.159062385559082
    8. ' ' → logprob: -5.284062385559082
    9. 'cur' → logprob: -5.909062385559082
    10. '  ' → logprob: -6.159062385559082

Token 107: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1756367712223437e-05
    2. ' ' → logprob: -11.375011444091797
    3. 'comb' → logprob: -16.625011444091797
    4. '   ' → logprob: -17.125011444091797
    5. '```' → logprob: -17.125011444091797
    6. ')' → logprob: -17.125011444091797
    7. '2' → logprob: -18.000011444091797
    8. '１' → logprob: -18.000011444091797
    9. '  ' → logprob: -18.125011444091797
    10. '
' → logprob: -18.625011444091797

Token 108: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5023891925811768
    2. ')' → logprob: -1.0023891925811768
    3. '),' → logprob: -4.127388954162598
    4. ' ))' → logprob: -5.252388954162598
    5. ' )' → logprob: -5.377388954162598
    6. ')))' → logprob: -7.627388954162598
    7. ' ),' → logprob: -8.002388954162598
    8. '   ' → logprob: -8.502388954162598
    9. ')*' → logprob: -8.627388954162598
    10. ',' → logprob: -9.002388954162598


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 106
Tokens correctement prédits (1ère position, stricte): 44
Tokens correctement prédits (1ère position, avec adaptation): 46
Tokens correctement prédits (top 10): 83
Précision stricte (1ère position): 41.51%
Précision adaptée (1ère position): 43.40%
Précision (top 10): 78.30%
================================================================================
