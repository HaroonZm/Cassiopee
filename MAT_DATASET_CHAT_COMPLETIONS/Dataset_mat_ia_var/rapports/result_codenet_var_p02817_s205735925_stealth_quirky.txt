================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:32:44
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def _(*__, **_a):
    return __

x=lambda: input().split()
A, B = _(*x())
print(B+A)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' _' (ID: 1175)
  → Token d'amorce (pas de prédiction)

Token 2: '(*' (ID: 9000)
  → Token d'amorce (pas de prédiction)

Token 3: '__,' (ID: 23783)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04124734178185463
    2. ')' → logprob: -3.6662473678588867
    3. 'args' → logprob: -5.041247367858887
    4. '*' → logprob: -5.541247367858887
    5. 'a' → logprob: -6.041247367858887
    6. '):' → logprob: -6.791247367858887
    7. '_)' → logprob: -7.666247367858887
    8. 's' → logprob: -8.916247367858887
    9. 'x' → logprob: -9.416247367858887
    10. '(' → logprob: -9.916247367858887

Token 4: ' **' (ID: 6240)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4402795433998108
    2. '*' → logprob: -1.815279483795166
    3. ')' → logprob: -2.565279483795166
    4. '_' → logprob: -2.815279483795166
    5. '**' → logprob: -4.190279483795166
    6. '___' → logprob: -4.315279483795166
    7. '***' → logprob: -4.690279483795166
    8. '/' → logprob: -5.315279483795166
    9. ',' → logprob: -5.440279483795166
    10. 'def' → logprob: -6.815279483795166

Token 5: '_' (ID: 62)
  Prédit: 'kwargs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kwargs' → logprob: -0.7060016989707947
    2. '_' → logprob: -1.2060017585754395
    3. '__' → logprob: -1.9560017585754395
    4. '___' → logprob: -3.4560017585754395
    5. '__)' → logprob: -3.8310017585754395
    6. '_)' → logprob: -5.4560017585754395
    7. '_kwargs' → logprob: -5.5810017585754395
    8. '**' → logprob: -6.2060017585754395
    9. 'args' → logprob: -7.9560017585754395
    10. '*' → logprob: -7.9560017585754395

Token 6: 'a' (ID: 64)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03655525669455528
    2. '__' → logprob: -3.786555290222168
    3. '___' → logprob: -5.036555290222168
    4. '_)' → logprob: -5.786555290222168
    5. 'kwargs' → logprob: -6.036555290222168
    6. '__)' → logprob: -7.911555290222168
    7. '*' → logprob: -8.411555290222168
    8. '_kwargs' → logprob: -8.911555290222168
    9. ')' → logprob: -9.036555290222168
    10. '_:' → logprob: -9.411555290222168

Token 7: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012963742017745972
    2. ')' → logprob: -4.887963771820068
    3. '_' → logprob: -5.262963771820068
    4. ':' → logprob: -10.13796329498291
    5. '):
' → logprob: -10.63796329498291
    6. '_:' → logprob: -10.76296329498291
    7. 'kwargs' → logprob: -11.63796329498291
    8. '__' → logprob: -11.76296329498291
    9. ',' → logprob: -11.88796329498291
    10. ')_' → logprob: -11.88796329498291

Token 8: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10161805897951126
    2. 'r' → logprob: -3.7266180515289307
    3. ' return' → logprob: -3.7266180515289307
    4. ' ' → logprob: -3.7266180515289307
    5. '_' → logprob: -4.35161828994751
    6. 'return' → logprob: -5.97661828994751
    7. ' pass' → logprob: -6.10161828994751
    8. ':' → logprob: -6.10161828994751
    9. '  ' → logprob: -7.22661828994751
    10. ' try' → logprob: -7.85161828994751

Token 9: ' return' (ID: 622)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0191437005996704
    2. 'r' → logprob: -1.3941437005996704
    3. '   ' → logprob: -1.7691437005996704
    4. 'return' (adapté à ' return') → logprob: -2.769143581390381
    5. ' ' → logprob: -3.144143581390381
    6. 'pass' → logprob: -3.894143581390381
    7. '(' → logprob: -4.144143581390381
    8. 'p' → logprob: -4.644143581390381
    9. ' pass' → logprob: -4.644143581390381
    10. ')' → logprob: -4.894143581390381

Token 10: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.80852872133255
    2. ' None' → logprob: -1.1835286617279053
    3. '_' → logprob: -1.5585286617279053
    4. 'None' → logprob: -4.183528900146484
    5. ' _' → logprob: -4.308528900146484
    6. '__' → logprob: -5.308528900146484
    7. ' True' → logprob: -6.558528900146484
    8. ' __' → logprob: -6.683528900146484
    9. ' lambda' → logprob: -8.433528900146484
    10. '<|end|>' → logprob: -8.683528900146484

Token 11: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0449783019721508
    2. '[' → logprob: -3.169978380203247
    3. '.__' → logprob: -7.169978141784668
    4. ')' → logprob: -8.544978141784668
    5. '_' → logprob: -8.544978141784668
    6. '*' → logprob: -8.669978141784668
    7. '(' → logprob: -9.669978141784668
    8. ' .' → logprob: -9.669978141784668
    9. '.)' → logprob: -9.669978141784668
    10. '```' → logprob: -9.919978141784668

Token 12: 'x' (ID: 87)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3736002445220947
    2. '[' → logprob: -1.4986002445220947
    3. '*' → logprob: -2.9986002445220947
    4. '(' → logprob: -4.498600006103516
    5. '.__' → logprob: -4.623600006103516
    6. '_' → logprob: -4.998600006103516
    7. '+' → logprob: -6.373600006103516
    8. '#' → logprob: -6.748600006103516
    9. '```' → logprob: -6.873600006103516
    10. 'def' → logprob: -7.123600006103516

Token 13: '=lambda' (ID: 64865)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2407727986574173
    2. '.' → logprob: -1.8657728433609009
    3. '_' → logprob: -3.2407727241516113
    4. '[' → logprob: -4.865772724151611
    5. ')' → logprob: -5.740772724151611
    6. '(x' → logprob: -6.490772724151611
    7. 's' → logprob: -6.865772724151611
    8. 'x' → logprob: -7.240772724151611
    9. '*' → logprob: -7.740772724151611
    10. ',' → logprob: -7.740772724151611

Token 14: ':' (ID: 25)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7218952775001526
    2. 'x' → logprob: -1.3468952178955078
    3. ' x' → logprob: -2.096895217895508
    4. ' ' → logprob: -3.221895217895508
    5. ' _' → logprob: -3.346895217895508
    6. ' :' → logprob: -4.221895217895508
    7. ' a' → logprob: -4.721895217895508
    8. ' _:' → logprob: -5.596895217895508
    9. 'a' → logprob: -5.721895217895508
    10. ' __' → logprob: -5.721895217895508

Token 15: ' input' (ID: 3422)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5512532591819763
    2. '[]' → logprob: -2.426253318786621
    3. '__' → logprob: -2.426253318786621
    4. 'None' → logprob: -2.551253318786621
    5. '0' → logprob: -2.926253318786621
    6. '42' → logprob: -3.176253318786621
    7. '1' → logprob: -4.051253318786621
    8. '()' → logprob: -4.176253318786621
    9. '___' → logprob: -5.551253318786621
    10. '_*' → logprob: -5.551253318786621

Token 16: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03099217265844345
    2. '.' → logprob: -3.530992269515991
    3. ' (' → logprob: -7.905992031097412
    4. ')' → logprob: -8.53099250793457
    5. '(
' → logprob: -8.90599250793457
    6. '[' → logprob: -8.90599250793457
    7. ' ' → logprob: -9.15599250793457
    8. '<|end|>' → logprob: -9.53099250793457
    9. ',' → logprob: -10.15599250793457
    10. '('' → logprob: -10.65599250793457

Token 17: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.031028568744659424
    2. 'split' → logprob: -3.7810285091400146
    3. 'rstrip' → logprob: -4.906028747558594
    4. 'lower' → logprob: -8.281028747558594
    5. 'replace' → logprob: -9.781028747558594
    6. 'startswith' → logprob: -10.781028747558594
    7. 'read' → logprob: -11.156028747558594
    8. 'isdigit' → logprob: -13.031028747558594
    9. 'r' → logprob: -13.906028747558594
    10. 'rs' → logprob: -14.281028747558594

Token 18: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22580094635486603
    2. '()' → logprob: -1.6008009910583496
    3. '('' → logprob: -9.225800514221191
    4. '(
' → logprob: -9.350800514221191
    5. '()[' → logprob: -10.350800514221191
    6. '(

' → logprob: -10.475800514221191
    7. ')' → logprob: -11.100800514221191
    8. '[' → logprob: -11.100800514221191
    9. ' (' → logprob: -11.100800514221191
    10. '```' → logprob: -11.100800514221191

Token 19: 'A' (ID: 32)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7693250775337219
    2. '[' → logprob: -0.8943250775337219
    3. '()' → logprob: -2.269325017929077
    4. '()[' → logprob: -4.019325256347656
    5. '.' → logprob: -6.519325256347656
    6. '(
' → logprob: -7.144325256347656
    7. '*' → logprob: -7.269325256347656
    8. '<|end|>' → logprob: -7.894325256347656
    9. '('' → logprob: -8.019325256347656
    10. '(*)' → logprob: -8.394325256347656

Token 20: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.38660383224487305
    2. ',' → logprob: -2.136603832244873
    3. '=' → logprob: -2.136603832244873
    4. ' =' → logprob: -3.636603832244873
    5. '.' → logprob: -3.886603832244873
    6. '(' → logprob: -4.011603832244873
    7. '_' → logprob: -4.761603832244873
    8. 'A' → logprob: -6.011603832244873
    9. '[:]' → logprob: -6.386603832244873
    10. ')' → logprob: -7.136603832244873

Token 21: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.32072901725769043
    2. ' B' → logprob: -1.4457290172576904
    3. '_' → logprob: -3.6957290172576904
    4. '*' → logprob: -5.8207292556762695
    5. ' ' → logprob: -5.8207292556762695
    6. 'x' → logprob: -6.0707292556762695
    7. '_=' → logprob: -6.5707292556762695
    8. '=' → logprob: -7.0707292556762695
    9. ' =' → logprob: -7.4457292556762695
    10. '_B' → logprob: -7.8207292556762695

Token 22: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12704958021640778
    2. ' =' → logprob: -2.127049684524536
    3. ',' → logprob: -9.252049446105957
    4. '=input' → logprob: -11.627049446105957
    5. ')' → logprob: -13.002049446105957
    6. '[' → logprob: -13.502049446105957
    7. '<|end|>' → logprob: -13.502049446105957
    8. '=lambda' → logprob: -13.877049446105957
    9. '=[]' → logprob: -13.877049446105957
    10. '=

' → logprob: -13.877049446105957

Token 23: ' _' (ID: 1175)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.27416613698005676
    2. 'map' → logprob: -1.5241661071777344
    3. ' map' → logprob: -4.274166107177734
    4. ' x' → logprob: -4.899166107177734
    5. '*' → logprob: -8.024166107177734
    6. 'list' → logprob: -9.524166107177734
    7. 'int' → logprob: -9.649166107177734
    8. 'input' → logprob: -10.524166107177734
    9. ' ' → logprob: -10.899166107177734
    10. '_' → logprob: -11.024166107177734

Token 24: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.2561683654785156
    2. '(x' → logprob: -1.6311683654785156
    3. '(' → logprob: -4.256168365478516
    4. 'x' → logprob: -4.381168365478516
    5. '(*)' → logprob: -6.131168365478516
    6. '()' → logprob: -7.006168365478516
    7. '(*(' → logprob: -8.506168365478516
    8. '((*' → logprob: -9.381168365478516
    9. '(input' → logprob: -9.881168365478516
    10. '()*' → logprob: -10.131168365478516

Token 25: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00012415809032972902
    2. '(x' → logprob: -9.750123977661133
    3. ' x' → logprob: -10.250123977661133
    4. ')' → logprob: -11.875123977661133
    5. '[x' → logprob: -12.250123977661133
    6. '*' → logprob: -12.750123977661133
    7. '*x' → logprob: -13.125123977661133
    8. '[' → logprob: -13.250123977661133
    9. '(*' → logprob: -13.375123977661133
    10. '[]' → logprob: -13.750123977661133

Token 26: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.019052810966968536
    2. '(),' → logprob: -4.519052982330322
    3. ')' → logprob: -5.144052982330322
    4. '()' → logprob: -6.269052982330322
    5. '())
' → logprob: -9.144052505493164
    6. '()),' → logprob: -9.394052505493164
    7. ' ())' → logprob: -11.269052505493164
    8. '())

' → logprob: -11.894052505493164
    9. '();)' → logprob: -11.894052505493164
    10. '()))' → logprob: -11.894052505493164

Token 27: 'print' (ID: 1598)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.363983154296875
    2. ')' → logprob: -2.363983154296875
    3. ',' → logprob: -2.488983154296875
    4. '(' → logprob: -3.238983154296875
    5. 'A' → logprob: -3.363983154296875
    6. '0' → logprob: -4.238983154296875
    7. '=' → logprob: -4.613983154296875
    8. ',*' → logprob: -4.988983154296875
    9. '()' → logprob: -5.738983154296875
    10. '(*' → logprob: -5.863983154296875

Token 28: '(B' (ID: 8409)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.05676937848329544
    2. '(' → logprob: -2.931769371032715
    3. '(B' → logprob: -7.806769371032715
    4. '((' → logprob: -7.806769371032715
    5. '()' → logprob: -8.056769371032715
    6. '(*' → logprob: -8.431769371032715
    7. '('' → logprob: -8.431769371032715
    8. '(a' → logprob: -9.056769371032715
    9. '(x' → logprob: -9.681769371032715
    10. '(len' → logprob: -9.931769371032715

Token 29: '+A' (ID: 195068)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.000763510703109e-05
    2. ' )' → logprob: -11.750040054321289
    3. '`)' → logprob: -11.875040054321289
    4. '[' → logprob: -11.875040054321289
    5. '))' → logprob: -12.375040054321289
    6. ')`' → logprob: -12.750040054321289
    7. '')' → logprob: -12.875040054321289
    8. ')
' → logprob: -13.250040054321289
    9. '")' → logprob: -13.625040054321289
    10. ',)' → logprob: -13.875040054321289

Token 30: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.023293538717553e-05
    2. '))' → logprob: -11.250030517578125
    3. '[' → logprob: -12.125030517578125
    4. '`)' → logprob: -12.375030517578125
    5. ')`' → logprob: -13.250030517578125
    6. ')
' → logprob: -13.750030517578125
    7. '()' → logprob: -14.125030517578125
    8. ' )' → logprob: -14.250030517578125
    9. '')' → logprob: -14.375030517578125
    10. '())' → logprob: -14.375030517578125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 28
Tokens correctement prédits (1ère position, stricte): 4
Tokens correctement prédits (1ère position, avec adaptation): 4
Tokens correctement prédits (top 10): 14
Précision stricte (1ère position): 14.29%
Précision adaptée (1ère position): 14.29%
Précision (top 10): 50.00%
================================================================================
