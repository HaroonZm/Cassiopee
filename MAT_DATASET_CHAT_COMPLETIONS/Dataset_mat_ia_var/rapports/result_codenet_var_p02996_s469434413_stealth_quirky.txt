================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:54:59
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
try:
    N = int(eval("__import__('builtins').input")())
    todo_list = []
    for _ in range(N):
        stuff = list(map(int, eval("__import__('builtins').input")().split()))
        todo_list.append(stuff)
    from operator import itemgetter
    todo_list = sorted(todo_list, key=itemgetter(1) if N%2==0 else lambda x: x[1])
    T = 0
    for job in todo_list[::-1][::-1]:  # no-op slice
        T -= -job[0]
        if not (T <= job[1]):
            print('No'); import sys; sys.exit(0)
    (lambda x:print(x))('Yes')
except SystemExit:
    pass
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'try' (ID: 1806)
  → Token d'amorce (pas de prédiction)

Token 1: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 2: '   ' (ID: 271)
  → Token d'amorce (pas de prédiction)

Token 3: ' N' (ID: 478)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.3482172191143036
    2. ' ' → logprob: -2.723217248916626
    3. '[' → logprob: -2.848217248916626
    4. '   ' → logprob: -2.973217248916626
    5. ':' → logprob: -3.973217248916626
    6. '       ' → logprob: -4.223217010498047
    7. ''' → logprob: -4.348217010498047
    8. 'space' → logprob: -4.348217010498047
    9. ' (' → logprob: -4.723217010498047
    10. '(space' → logprob: -4.973217010498047

Token 4: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.37437257170677185
    2. '.' → logprob: -2.6243724822998047
    3. ' =' → logprob: -2.9993724822998047
    4. 'e' → logprob: -3.4993724822998047
    5. '_' → logprob: -3.4993724822998047
    6. 'u' → logprob: -3.4993724822998047
    7. 'a' → logprob: -3.6243724822998047
    8. '-' → logprob: -4.624372482299805
    9. 'o' → logprob: -4.749372482299805
    10. 'umber' → logprob: -4.874372482299805

Token 5: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.1298748403787613
    2. 'int' → logprob: -2.1298749446868896
    3. '10' → logprob: -6.6298747062683105
    4. ' ' → logprob: -7.5048747062683105
    5. ' input' → logprob: -8.629875183105469
    6. '1' → logprob: -8.754875183105469
    7. '100' → logprob: -9.129875183105469
    8. '20' → logprob: -9.254875183105469
    9. 'input' → logprob: -9.379875183105469
    10. ' eval' → logprob: -9.379875183105469

Token 6: '(eval' (ID: 126973)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00018887832993641496
    2. ''' → logprob: -10.125188827514648
    3. '('' → logprob: -10.125188827514648
    4. '```' → logprob: -10.750188827514648
    5. ' (' → logprob: -11.125188827514648
    6. '(input' → logprob: -11.125188827514648
    7. '("("' → logprob: -11.500188827514648
    8. '[' → logprob: -12.000188827514648
    9. ' ' → logprob: -12.375188827514648
    10. '(N' → logprob: -12.625188827514648

Token 7: '("__' (ID: 143983)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07106459140777588
    2. '('' → logprob: -2.8210644721984863
    3. '(input' → logprob: -5.446064472198486
    4. '("("' → logprob: -5.696064472198486
    5. '(
' → logprob: -7.821064472198486
    6. '()' → logprob: -7.946064472198486
    7. '(user' → logprob: -8.571064949035645
    8. '(eval' → logprob: -8.821064949035645
    9. ''' → logprob: -10.071064949035645
    10. '(token' → logprob: -10.321064949035645

Token 8: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.0528656430542469
    2. 'file' → logprob: -3.552865743637085
    3. 'name' → logprob: -4.052865505218506
    4. 'built' → logprob: -5.302865505218506
    5. 'builtin' → logprob: -8.802865982055664
    6. 'input' → logprob: -9.302865982055664
    7. 'code' → logprob: -9.427865982055664
    8. 'N' → logprob: -9.927865982055664
    9. 'doc' → logprob: -11.177865982055664
    10. 'build' → logprob: -11.177865982055664

Token 9: '__('' (ID: 54460)
  Prédit: '__("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__("' → logprob: -0.3472338020801544
    2. '("' → logprob: -1.472233772277832
    3. '__('' → logprob: -2.847233772277832
    4. '(' → logprob: -6.097233772277832
    5. '("__' → logprob: -6.722233772277832
    6. '('' → logprob: -6.847233772277832
    7. '("("' → logprob: -7.847233772277832
    8. '__' → logprob: -7.972233772277832
    9. '__(' → logprob: -8.222233772277832
    10. '_("' → logprob: -8.597233772277832

Token 10: 'built' (ID: 81936)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.13508066534996033
    2. 'os' → logprob: -3.010080575942993
    3. 'built' → logprob: -3.010080575942993
    4. 'sys' → logprob: -4.510080814361572
    5. '__' → logprob: -4.510080814361572
    6. 'ast' → logprob: -5.510080814361572
    7. 'cmath' → logprob: -6.885080814361572
    8. 'code' → logprob: -8.260080337524414
    9. 're' → logprob: -9.760080337524414
    10. '_math' → logprob: -9.885080337524414

Token 11: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -5.5577775128767826e-06
    2. '-ins' → logprob: -13.000005722045898
    3. '```' → logprob: -13.125005722045898
    4. '__' → logprob: -15.125005722045898
    5. '-' → logprob: -15.500005722045898
    6. 'i' → logprob: -16.0000057220459
    7. 'in' → logprob: -16.5000057220459
    8. '_ins' → logprob: -16.6250057220459
    9. 'sins' → logprob: -16.7500057220459
    10. 'eins' → logprob: -16.7500057220459

Token 12: '').' (ID: 3426)
  Prédit: '').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '').' → logprob: -0.003659929847344756
    2. '.' → logprob: -6.378659725189209
    3. '')' → logprob: -7.003659725189209
    4. '')['' → logprob: -8.253660202026367
    5. ').' → logprob: -8.628660202026367
    6. ''' → logprob: -9.003660202026367
    7. '.__' → logprob: -9.128660202026367
    8. ').__' → logprob: -9.378660202026367
    9. ' ').' → logprob: -9.503660202026367
    10. ')').' → logprob: -9.628660202026367

Token 13: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00016742534353397787
    2. 'get' → logprob: -9.875167846679688
    3. '__' → logprob: -10.125167846679688
    4. 'open' → logprob: -10.375167846679688
    5. ' input' → logprob: -11.250167846679688
    6. 'print' → logprob: -11.625167846679688
    7. 'exit' → logprob: -12.375167846679688
    8. 'abs' → logprob: -12.500167846679688
    9. 'eval' → logprob: -12.625167846679688
    10. 'raw' → logprob: -12.875167846679688

Token 14: '")' (ID: 1405)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.39692577719688416
    2. '(' → logprob: -1.5219258069992065
    3. '("' → logprob: -3.021925687789917
    4. '()))' → logprob: -3.521925687789917
    5. '())' → logprob: -4.271925926208496
    6. '('' → logprob: -5.646925926208496
    7. ')' → logprob: -5.771925926208496
    8. '("("' → logprob: -5.771925926208496
    9. '(""))' → logprob: -6.146925926208496
    10. '(
' → logprob: -6.396925926208496

Token 15: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3612626791000366
    2. '())' → logprob: -2.236262798309326
    3. '()' → logprob: -2.486262798309326
    4. '('' → logprob: -2.861262798309326
    5. '("("' → logprob: -3.361262798309326
    6. ')' → logprob: -4.486262798309326
    7. '("' → logprob: -5.361262798309326
    8. '(""))' → logprob: -6.486262798309326
    9. '(
' → logprob: -6.736262798309326
    10. ' ' → logprob: -7.611262798309326

Token 16: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011376124806702137
    2. '(' → logprob: -5.636375904083252
    3. '[' → logprob: -5.636375904083252
    4. '\' → logprob: -7.386375904083252
    5. '*' → logprob: -7.761375904083252
    6. '#' → logprob: -7.886375904083252
    7. '```' → logprob: -8.01137638092041
    8. '()' → logprob: -8.26137638092041
    9. ':' → logprob: -8.38637638092041
    10. '<|end|>' → logprob: -8.76137638092041

Token 17: ' todo' (ID: 6520)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08053487539291382
    2. '<|end|>' → logprob: -3.8305349349975586
    3. 'except' → logprob: -4.330534934997559
    4. ':' → logprob: -4.330534934997559
    5. '\n' → logprob: -5.080534934997559
    6. ' except' → logprob: -5.455534934997559
    7. '[' → logprob: -5.955534934997559
    8. '   ' → logprob: -6.330534934997559
    9. '#' → logprob: -6.330534934997559
    10. '\' → logprob: -6.830534934997559

Token 18: '_list' (ID: 4162)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3206980526447296
    2. ':' → logprob: -2.0706980228424072
    3. '(' → logprob: -2.8206980228424072
    4. '[:]' → logprob: -3.1956980228424072
    5. ')' → logprob: -4.070698261260986
    6. '[]' → logprob: -4.195698261260986
    7. '()' → logprob: -5.695698261260986
    8. '   ' → logprob: -5.820698261260986
    9. '.' → logprob: -6.445698261260986
    10. '[
' → logprob: -6.820698261260986

Token 19: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.24355296790599823
    2. '.' → logprob: -1.6185529232025146
    3. '.append' → logprob: -4.618553161621094
    4. '[:]' → logprob: -5.993553161621094
    5. '=' → logprob: -6.493553161621094
    6. '.setdefault' → logprob: -7.243553161621094
    7. '[]' → logprob: -7.368553161621094
    8. ')' → logprob: -7.493553161621094
    9. '```' → logprob: -7.743553161621094
    10. ' =' → logprob: -8.243553161621094

Token 20: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.024634724482893944
    2. ' []' → logprob: -3.774634838104248
    3. '{}' → logprob: -6.649634838104248
    4. '[' → logprob: -9.77463436126709
    5. '[]}' → logprob: -11.27463436126709
    6. ' {}' → logprob: -11.77463436126709
    7. 'list' → logprob: -12.27463436126709
    8. '[]
' → logprob: -12.77463436126709
    9. '[])' → logprob: -13.52463436126709
    10. '[],' → logprob: -13.89963436126709

Token 21: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5271875858306885
    2. '   ' → logprob: -1.1521875858306885
    3. ' for' → logprob: -3.2771875858306885
    4. '\' → logprob: -4.277187347412109
    5. '```' → logprob: -4.527187347412109
    6. '    
' → logprob: -4.902187347412109
    7. '\n' → logprob: -4.902187347412109
    8. '
' → logprob: -6.027187347412109
    9. 'except' → logprob: -6.277187347412109
    10. ')' → logprob: -6.277187347412109

Token 22: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1129133552312851
    2. '\n' → logprob: -3.2379133701324463
    3. ' for' → logprob: -3.6129133701324463
    4. '   ' → logprob: -3.9879133701324463
    5. '\' → logprob: -4.862913131713867
    6. '[' → logprob: -6.487913131713867
    7. ' ' → logprob: -6.487913131713867
    8. '    
' → logprob: -6.487913131713867
    9. 'while' → logprob: -6.487913131713867
    10. '```' → logprob: -6.612913131713867

Token 23: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.3053745627403259
    2. ' i' → logprob: -1.8053746223449707
    3. ' ' → logprob: -2.4303746223449707
    4. '_' → logprob: -4.555374622344971
    5. ' range' → logprob: -9.055374145507812
    6. 'i' → logprob: -10.430374145507812
    7. '  ' → logprob: -10.555374145507812
    8. ' in' → logprob: -10.930374145507812
    9. ' I' → logprob: -11.180374145507812
    10. ' ' → logprob: -12.055374145507812

Token 24: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004101077560335398
    2. 'in' → logprob: -5.629101276397705
    3. ' ' → logprob: -7.629101276397705
    4. '  ' → logprob: -12.629100799560547
    5. 'n' → logprob: -13.129100799560547
    6. 'range' → logprob: -13.254100799560547
    7. '_' → logprob: -13.629100799560547
    8. '```' → logprob: -14.129100799560547
    9. '    ' → logprob: -14.254100799560547
    10. ' ,' → logprob: -14.504100799560547

Token 25: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3132680654525757
    2. 'range' → logprob: -1.3132680654525757
    3. 'rang' → logprob: -13.313267707824707
    4. 'ran' → logprob: -13.563267707824707
    5. '	range' → logprob: -13.688267707824707
    6. 'Range' → logprob: -14.938267707824707
    7. '(range' → logprob: -15.063267707824707
    8. ' ran' → logprob: -15.188267707824707
    9. ' xrange' → logprob: -15.438267707824707
    10. 'r' → logprob: -15.438267707824707

Token 26: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.06249247118830681
    2. '(' → logprob: -2.8124923706054688
    3. ' (' → logprob: -7.687492370605469
    4. ' N' → logprob: -10.062492370605469
    5. '(n' → logprob: -11.312492370605469
    6. '(
' → logprob: -12.312492370605469
    7. ' ' → logprob: -12.812492370605469
    8. 'N' → logprob: -13.312492370605469
    9. '()' → logprob: -14.937492370605469
    10. '(

' → logprob: -15.062492370605469

Token 27: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00585934380069375
    2. ')' → logprob: -5.255859375
    3. ':' → logprob: -7.505859375
    4. ' ):' → logprob: -10.255859375
    5. '):
' → logprob: -10.755859375
    6. '   ' → logprob: -11.880859375
    7. '<|end|>' → logprob: -13.255859375
    8. ',' → logprob: -13.880859375
    9. ' )' → logprob: -13.880859375
    10. '():' → logprob: -14.130859375

Token 28: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5348222851753235
    2. '    ' → logprob: -1.1598222255706787
    3. ' ' → logprob: -2.7848222255706787
    4. '       ' → logprob: -4.034822463989258
    5. '<|end|>' → logprob: -4.784822463989258
    6. '    
' → logprob: -5.409822463989258
    7. '     
' → logprob: -5.909822463989258
    8. ' 
' → logprob: -6.284822463989258
    9. '     ' → logprob: -7.034822463989258
    10. '  ' → logprob: -7.659822463989258

Token 29: ' stuff' (ID: 9350)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.5897267460823059
    2. '   ' → logprob: -2.089726686477661
    3. ' task' → logprob: -2.089726686477661
    4. ' command' → logprob: -2.839726686477661
    5. 'line' → logprob: -2.964726686477661
    6. 'task' → logprob: -3.214726686477661
    7. 'command' → logprob: -4.33972692489624
    8. ' cmd' → logprob: -4.96472692489624
    9. 'cmd' → logprob: -5.46472692489624
    10. ' action' → logprob: -5.71472692489624

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012589470483362675
    2. '=' → logprob: -4.512589454650879
    3. '.append' → logprob: -7.262589454650879
    4. 's' → logprob: -8.137589454650879
    5. '.' → logprob: -9.012589454650879
    6. '   ' → logprob: -9.012589454650879
    7. '[' → logprob: -9.637589454650879
    8. ')' → logprob: -10.012589454650879
    9. '  ' → logprob: -10.137589454650879
    10. ' ' → logprob: -10.512589454650879

Token 31: ' list' (ID: 1562)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6895195245742798
    2. ' eval' → logprob: -1.5645195245742798
    3. 'input' → logprob: -1.9395195245742798
    4. 'eval' → logprob: -2.0645194053649902
    5. ' __' → logprob: -4.56451940536499
    6. '(eval' → logprob: -6.06451940536499
    7. '__' → logprob: -6.06451940536499
    8. ' list' → logprob: -7.06451940536499
    9. ' int' → logprob: -7.81451940536499
    10. 'list' → logprob: -8.064519882202148

Token 32: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.043091222643852234
    2. '(eval' → logprob: -3.793091297149658
    3. '(' → logprob: -4.293091297149658
    4. '(input' → logprob: -5.168091297149658
    5. '()' → logprob: -8.5430908203125
    6. '(int' → logprob: -10.6680908203125
    7. '(filter' → logprob: -10.9180908203125
    8. '(__' → logprob: -10.9180908203125
    9. '(range' → logprob: -11.9180908203125
    10. '(
' → logprob: -11.9180908203125

Token 33: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.030425673350691795
    2. '(eval' → logprob: -3.905425786972046
    3. '(' → logprob: -5.280425548553467
    4. '(str' → logprob: -6.155425548553467
    5. '(lambda' → logprob: -6.530425548553467
    6. '(input' → logprob: -7.655425548553467
    7. ')' → logprob: -8.280426025390625
    8. '<|end|>' → logprob: -8.780426025390625
    9. 'int' → logprob: -9.530426025390625
    10. '(
' → logprob: -10.155426025390625

Token 34: ',' (ID: 11)
  Prédit: '(eval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(eval' → logprob: -0.02985670231282711
    2. '(' → logprob: -4.1548566818237305
    3. '(input' → logprob: -5.1548566818237305
    4. ',' → logprob: -5.6548566818237305
    5. '(__' → logprob: -6.1548566818237305
    6. ')(__' → logprob: -7.9048566818237305
    7. ')' → logprob: -7.9048566818237305
    8. 'eval' → logprob: -8.15485668182373
    9. '($__' → logprob: -8.65485668182373
    10. '(
' → logprob: -9.02985668182373

Token 35: ' eval' (ID: 29383)
  Prédit: 'eval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eval' → logprob: -0.028140196576714516
    2. ' eval' → logprob: -4.528140068054199
    3. '(eval' → logprob: -4.778140068054199
    4. '__' → logprob: -5.278140068054199
    5. 'input' → logprob: -6.028140068054199
    6. ' __' → logprob: -8.6531400680542
    7. '_eval' → logprob: -8.7781400680542
    8. ')__' → logprob: -9.0281400680542
    9. '___' → logprob: -9.1531400680542
    10. '.eval' → logprob: -9.5281400680542

Token 36: '("__' (ID: 143983)
  Prédit: '("__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("__' → logprob: -0.02079154923558235
    2. '("("' → logprob: -4.145791530609131
    3. '("' → logprob: -6.270791530609131
    4. '(' → logprob: -6.395791530609131
    5. '__("' → logprob: -7.395791530609131
    6. '('__' → logprob: -7.770791530609131
    7. '"' → logprob: -9.895792007446289
    8. '("(' → logprob: -10.895792007446289
    9. '('' → logprob: -11.270792007446289
    10. ' ("' → logprob: -11.520792007446289

Token 37: 'import' (ID: 561)
  Prédit: ''import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''import' → logprob: -0.47469305992126465
    2. 'import' → logprob: -0.9746930599212646
    3. '_import' → logprob: -8.474693298339844
    4. ''s' → logprob: -8.599693298339844
    5. '#import' → logprob: -9.724693298339844
    6. '(import' → logprob: -10.349693298339844
    7. '"' → logprob: -10.724693298339844
    8. '__' → logprob: -10.849693298339844
    9. '-import' → logprob: -10.849693298339844
    10. ''' → logprob: -11.349693298339844

Token 38: '__('' (ID: 54460)
  Prédit: '__(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__('' → logprob: -0.0016494720475748181
    2. '__("' → logprob: -6.501649379730225
    3. '('__' → logprob: -9.626649856567383
    4. '('' → logprob: -9.751649856567383
    5. '__' → logprob: -11.251649856567383
    6. '("' → logprob: -12.126649856567383
    7. '__(
' → logprob: -13.626649856567383
    8. '(__('' → logprob: -14.126649856567383
    9. '("__' → logprob: -14.501649856567383
    10. '__(/*!' → logprob: -15.001649856567383

Token 39: 'built' (ID: 81936)
  Prédit: ''b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''b' → logprob: -0.009301485493779182
    2. 'built' → logprob: -5.509301662445068
    3. '"' → logprob: -6.134301662445068
    4. ''' → logprob: -6.634301662445068
    5. '__('' → logprob: -7.134301662445068
    6. ''s' → logprob: -7.884301662445068
    7. '__' → logprob: -8.88430118560791
    8. 'b' → logprob: -9.63430118560791
    9. '   ' → logprob: -10.13430118560791
    10. '('__' → logprob: -10.25930118560791

Token 40: 'ins' (ID: 1564)
  Prédit: '__(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__('' → logprob: -0.7974095940589905
    2. '__' → logprob: -1.5474095344543457
    3. 'ins' → logprob: -2.1724095344543457
    4. 'als' → logprob: -2.6724095344543457
    5. '['' → logprob: -2.7974095344543457
    6. '('' → logprob: -3.7974095344543457
    7. '('__' → logprob: -3.7974095344543457
    8. 's' → logprob: -4.672409534454346
    9. ''s' → logprob: -4.922409534454346
    10. '___' → logprob: -5.172409534454346

Token 41: '').' (ID: 3426)
  Prédit: '').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '').' → logprob: -0.3179260492324829
    2. '.' → logprob: -2.1929259300231934
    3. '.input' → logprob: -3.1929259300231934
    4. '").' → logprob: -3.6929259300231934
    5. ').' → logprob: -3.8179259300231934
    6. '')' → logprob: -4.317925930023193
    7. ''.' → logprob: -4.317925930023193
    8. '')['' → logprob: -4.567925930023193
    9. '.')' → logprob: -4.692925930023193
    10. '('' → logprob: -5.567925930023193

Token 42: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -8.816591434879228e-05
    2. ' input' → logprob: -10.50008773803711
    3. 'eval' → logprob: -11.12508773803711
    4. '(input' → logprob: -11.50008773803711
    5. ')' → logprob: -11.62508773803711
    6. '__' → logprob: -12.00008773803711
    7. 'import' → logprob: -12.25008773803711
    8. '
' → logprob: -12.87508773803711
    9. '')' → logprob: -13.12508773803711
    10. '

' → logprob: -13.75008773803711

Token 43: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.013872926123440266
    2. '')' → logprob: -5.013873100280762
    3. ')' → logprob: -5.763873100280762
    4. '()' → logprob: -6.013873100280762
    5. ')("' → logprob: -6.888873100280762
    6. '())' → logprob: -9.013873100280762
    7. ')")' → logprob: -9.263873100280762
    8. '")))' → logprob: -9.388873100280762
    9. '   ' → logprob: -9.638873100280762
    10. '"' → logprob: -11.013873100280762

Token 44: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6965916752815247
    2. '())' → logprob: -0.9465916752815247
    3. '()))' → logprob: -2.44659161567688
    4. '())))' → logprob: -3.69659161567688
    5. ')' → logprob: -6.571591854095459
    6. '()));' → logprob: -8.5715913772583
    7. '().' → logprob: -8.8215913772583
    8. '()),' → logprob: -9.6965913772583
    9. '());' → logprob: -9.9465913772583
    10. '()>' → logprob: -10.0715913772583

Token 45: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.001957298256456852
    2. 'strip' → logprob: -6.251957416534424
    3. ' split' → logprob: -10.751956939697266
    4. 'rstrip' → logprob: -12.251956939697266
    5. '(split' → logprob: -13.626956939697266
    6. ')' → logprob: -14.126956939697266
    7. ' strip' → logprob: -15.751956939697266
    8. '   ' → logprob: -15.751956939697266
    9. ' ' → logprob: -16.001956939697266
    10. '.split' → logprob: -16.501956939697266

Token 46: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.4383170008659363
    2. '()' → logprob: -1.313317060470581
    3. '())' → logprob: -3.188317060470581
    4. '(' → logprob: -3.813317060470581
    5. '('' → logprob: -4.188316822052002
    6. '())))' → logprob: -5.063316822052002
    7. '))' → logprob: -7.938316822052002
    8. ')' → logprob: -8.68831729888916
    9. '()));' → logprob: -8.81331729888916
    10. '(','' → logprob: -9.43831729888916

Token 47: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5356203317642212
    2. '   ' → logprob: -1.0356203317642212
    3. '[' → logprob: -3.2856202125549316
    4. ' ' → logprob: -5.035620212554932
    5. ')' → logprob: -5.660620212554932
    6. '<|end|>' → logprob: -5.660620212554932
    7. '    ' → logprob: -6.035620212554932
    8. '    
' → logprob: -7.285620212554932
    9. '  ' → logprob: -7.410620212554932
    10. '      ' → logprob: -7.535620212554932

Token 48: ' todo' (ID: 6520)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0996689796447754
    2. '       ' → logprob: -1.4746689796447754
    3. '   ' → logprob: -1.4746689796447754
    4. ')' → logprob: -2.9746689796447754
    5. ' ' → logprob: -3.2246689796447754
    6. ' if' → logprob: -3.3496689796447754
    7. 'if' → logprob: -3.3496689796447754
    8. ':' → logprob: -4.474668979644775
    9. '<|end|>' → logprob: -4.474668979644775
    10. ']' → logprob: -4.974668979644775

Token 49: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -9.877503907773644e-05
    2. '_' → logprob: -9.875099182128906
    3. '_s' → logprob: -10.875099182128906
    4. '[' → logprob: -12.250099182128906
    5. '_lists' → logprob: -12.250099182128906
    6. '_lst' → logprob: -12.500099182128906
    7. '[_' → logprob: -12.625099182128906
    8. ' _' → logprob: -13.125099182128906
    9. '_items' → logprob: -13.250099182128906
    10. 's' → logprob: -13.375099182128906

Token 50: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.5766007304191589
    2. '.' → logprob: -0.8266007304191589
    3. '.extend' → logprob: -7.826600551605225
    4. '.setdefault' → logprob: -9.076601028442383
    5. '<|end|>' → logprob: -9.576601028442383
    6. '.app' → logprob: -10.576601028442383
    7. '.ap' → logprob: -11.201601028442383
    8. ' .' → logprob: -11.826601028442383
    9. '.add' → logprob: -12.076601028442383
    10. '.Append' → logprob: -12.451601028442383

Token 51: '(st' (ID: 4065)
  Prédit: '(st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -0.5762532353401184
    2. '(' → logprob: -0.8262532353401184
    3. '((' → logprob: -8.201252937316895
    4. '(
' → logprob: -11.326252937316895
    5. '(`' → logprob: -12.076252937316895
    6. '(

' → logprob: -12.326252937316895
    7. '(s' → logprob: -12.951252937316895
    8. '("("' → logprob: -13.076252937316895
    9. '(stor' → logprob: -13.201252937316895
    10. '(tuple' → logprob: -13.326252937316895

Token 52: 'uff' (ID: 1972)
  Prédit: 'uff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uff' → logprob: -0.0007698441040702164
    2. 'uf' → logprob: -7.87576961517334
    3. 'aff' → logprob: -8.25076961517334
    4. 'a' → logprob: -10.37576961517334
    5. '[' → logprob: -10.50076961517334
    6. 'u' → logprob: -10.62576961517334
    7. '(' → logprob: -11.37576961517334
    8. '```' → logprob: -11.87576961517334
    9. 'uffs' → logprob: -12.75076961517334
    10. '_' → logprob: -12.87576961517334

Token 53: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.7729658540920354e-05
    2. ')
' → logprob: -11.125027656555176
    3. '))' → logprob: -11.500027656555176
    4. '`)' → logprob: -13.750027656555176
    5. '   ' → logprob: -13.875027656555176
    6. '       ' → logprob: -15.125027656555176
    7. ' )' → logprob: -15.375027656555176
    8. ')))' → logprob: -15.750027656555176
    9. ')`' → logprob: -16.500028610229492
    10. '[' → logprob: -17.375028610229492

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5061237812042236
    2. '\' → logprob: -1.6311237812042236
    3. '<|end|>' → logprob: -2.1311237812042236
    4. '\n' → logprob: -2.2561237812042236
    5. ')' → logprob: -2.5061237812042236
    6. ':' → logprob: -2.8811237812042236
    7. '#' → logprob: -3.0061237812042236
    8. '[' → logprob: -3.1311237812042236
    9. '
' → logprob: -3.7561237812042236
    10. ' ' → logprob: -4.0061235427856445

Token 55: ' from' (ID: 591)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2082877159118652
    2. '   ' → logprob: -1.7082877159118652
    3. '\n' → logprob: -1.9582877159118652
    4. '\' → logprob: -2.5832877159118652
    5. 't' → logprob: -3.0832877159118652
    6. '[' → logprob: -3.0832877159118652
    7. ':' → logprob: -3.4582877159118652
    8. ' ' → logprob: -3.5832877159118652
    9. ' for' → logprob: -3.7082877159118652
    10. 'n' → logprob: -3.9582877159118652

Token 56: ' operator' (ID: 11019)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.03483637049794197
    2. ' itertools' → logprob: -4.284836292266846
    3. 'collections' → logprob: -4.659836292266846
    4. ' operator' → logprob: -5.659836292266846
    5. ' math' → logprob: -5.909836292266846
    6. ' sys' → logprob: -6.159836292266846
    7. '_' → logprob: -6.909836292266846
    8. ' functools' → logprob: -7.909836292266846
    9. ' copy' → logprob: -8.534836769104004
    10. ' datetime' → logprob: -8.659836769104004

Token 57: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0024744702968746424
    2. 'import' → logprob: -6.127474308013916
    3. '.' → logprob: -8.877474784851074
    4. '	import' → logprob: -9.752474784851074
    5. ' ' → logprob: -10.252474784851074
    6. '<|end|>' → logprob: -10.252474784851074
    7. ' .' → logprob: -12.502474784851074
    8. ' im' → logprob: -12.627474784851074
    9. '.import' → logprob: -12.627474784851074
    10. ' impor' → logprob: -12.877474784851074

Token 58: ' item' (ID: 2169)
  Prédit: ' item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' item' → logprob: -0.06285009533166885
    2. 'item' → logprob: -2.812849998474121
    3. ' attr' → logprob: -7.812849998474121
    4. '	item' → logprob: -8.687849998474121
    5. 'attr' → logprob: -8.687849998474121
    6. '=item' → logprob: -10.562849998474121
    7. 'getitem' → logprob: -10.687849998474121
    8. ' ' → logprob: -10.687849998474121
    9. ' method' → logprob: -10.812849998474121
    10. ' add' → logprob: -11.062849998474121

Token 59: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -0.0024737550411373377
    2. 'get' → logprob: -6.127473831176758
    3. 'getitem' → logprob: -8.627473831176758
    4. 'gett' → logprob: -9.752473831176758
    5. 'attr' → logprob: -11.002473831176758
    6. 'g' → logprob: -11.127473831176758
    7. 'item' → logprob: -11.377473831176758
    8. 'ge' → logprob: -12.752473831176758
    9. 'gte' → logprob: -13.627473831176758
    10. '=item' → logprob: -14.502473831176758

Token 60: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5245567560195923
    2. '.' → logprob: -1.7745567560195923
    3. '(' → logprob: -2.0245566368103027
    4. '\n' → logprob: -2.0245566368103027
    5. '\' → logprob: -2.5245566368103027
    6. '    
' → logprob: -2.7745566368103027
    7. 'newline' → logprob: -3.2745566368103027
    8. ' ' → logprob: -3.3995566368103027
    9. '[' → logprob: -3.6495566368103027
    10. '()' → logprob: -4.024556636810303

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9893131852149963
    2. '.' → logprob: -1.8643131256103516
    3. '(' → logprob: -2.1143131256103516
    4. '[' → logprob: -2.6143131256103516
    5. ' ' → logprob: -2.9893131256103516
    6. '    
' → logprob: -3.3643131256103516
    7. '_' → logprob: -3.3643131256103516
    8. ')' → logprob: -3.4893131256103516
    9. '
' → logprob: -4.114313125610352
    10. '<|end|>' → logprob: -4.114313125610352

Token 62: ' todo' (ID: 6520)
  Prédit: 'todo'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'todo' (adapté à ' todo') → logprob: -0.5928953289985657
    2. '
' → logprob: -0.9678953289985657
    3. '    
' → logprob: -3.967895269393921
    4. 'sorted' → logprob: -4.2178955078125
    5. ' todo' → logprob: -4.3428955078125
    6. '   ' → logprob: -5.4678955078125
    7. 'sort' → logprob: -5.7178955078125
    8. ' 
' → logprob: -6.7178955078125
    9. '\n' → logprob: -6.7178955078125
    10. ',
' → logprob: -7.0928955078125

Token 63: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.9981420336989686e-05
    2. '_' → logprob: -11.125020027160645
    3. '_lists' → logprob: -12.875020027160645
    4. 's' → logprob: -13.750020027160645
    5. 'list' → logprob: -14.625020027160645
    6. ' _' → logprob: -15.375020027160645
    7. '_sort' → logprob: -15.875020027160645
    8. '_lst' → logprob: -15.875020027160645
    9. 'List' → logprob: -16.000019073486328
    10. '_sorted' → logprob: -16.125019073486328

Token 64: ' =' (ID: 314)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.001320000272244215
    2. '.' → logprob: -7.001319885253906
    3. 'sort' → logprob: -8.751319885253906
    4. '[' → logprob: -9.126319885253906
    5. '<|end|>' → logprob: -9.751319885253906
    6. ',' → logprob: -10.001319885253906
    7. '_sorted' → logprob: -11.376319885253906
    8. '=' → logprob: -12.126319885253906
    9. ')' → logprob: -12.626319885253906
    10. ' sort' → logprob: -12.876319885253906

Token 65: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.6326178908348083
    2. ' sorted' → logprob: -0.7576178908348083
    3. '(sorted' → logprob: -11.507617950439453
    4. '   ' → logprob: -12.382617950439453
    5. ' list' → logprob: -13.132617950439453
    6. 'list' → logprob: -13.757617950439453
    7. '[' → logprob: -15.007617950439453
    8. 'sort' → logprob: -15.132617950439453
    9. '.sorted' → logprob: -15.382617950439453
    10. ' ' → logprob: -15.757617950439453

Token 66: '(todo' (ID: 105468)
  Prédit: '(todo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(todo' → logprob: -0.06201361492276192
    2. '(' → logprob: -2.812013626098633
    3. '(t' → logprob: -11.312013626098633
    4. '(to' → logprob: -11.687013626098633
    5. '(
' → logprob: -12.062013626098633
    6. '(st' → logprob: -12.437013626098633
    7. '(ticket' → logprob: -12.812013626098633
    8. '(

' → logprob: -12.937013626098633
    9. '((' → logprob: -13.187013626098633
    10. '(`' → logprob: -13.937013626098633

Token 67: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.0087516784551553e-05
    2. '_' → logprob: -11.75001049041748
    3. '_l' → logprob: -13.87501049041748
    4. 'list' → logprob: -14.87501049041748
    5. ')' → logprob: -15.00001049041748
    6. ' _' → logprob: -15.37501049041748
    7. ')_' → logprob: -16.125009536743164
    8. 'List' → logprob: -16.125009536743164
    9. '_li' → logprob: -16.875009536743164
    10. '_lists' → logprob: -17.500009536743164

Token 68: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07006725668907166
    2. ',key' → logprob: -2.6950671672821045
    3. ' ,' → logprob: -9.070067405700684
    4. 'key' → logprob: -11.445067405700684
    5. ',item' → logprob: -13.195067405700684
    6. '),' → logprob: -14.195067405700684
    7. ',k' → logprob: -14.695067405700684
    8. ')' → logprob: -14.820067405700684
    9. '(),' → logprob: -15.195067405700684
    10. ' key' → logprob: -15.695067405700684

Token 69: ' key' (ID: 2140)
  Prédit: ' key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.2603069841861725
    2. 'key' → logprob: -1.51030695438385
    3. 'item' → logprob: -5.1353068351745605
    4. ' item' → logprob: -6.6353068351745605
    5. '1' → logprob: -7.0103068351745605
    6. ' ' → logprob: -9.385307312011719
    7. '2' → logprob: -9.760307312011719
    8. '0' → logprob: -10.260307312011719
    9. '   ' → logprob: -10.885307312011719
    10. 'lambda' → logprob: -11.260307312011719

Token 70: '=item' (ID: 76091)
  Prédit: '=item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=item' → logprob: -0.011068690568208694
    2. '=' → logprob: -4.511068820953369
    3. '=lambda' → logprob: -11.011068344116211
    4. 'item' → logprob: -12.386068344116211
    5. ' =' → logprob: -15.636068344116211
    6. ')item' → logprob: -17.51106834411621
    7. '=

' → logprob: -17.51106834411621
    8. '=
' → logprob: -17.88606834411621
    9. ' item' → logprob: -18.63606834411621
    10. ':item' → logprob: -18.76106834411621

Token 71: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -0.0002933942887466401
    2. '_get' → logprob: -8.625293731689453
    3. 'get' → logprob: -9.125293731689453
    4. 'er' → logprob: -13.625293731689453
    5. 'Getter' → logprob: -14.125293731689453
    6. '_' → logprob: -14.625293731689453
    7. '=get' → logprob: -14.875293731689453
    8. 'getitem' → logprob: -15.125293731689453
    9. ' getter' → logprob: -15.250293731689453
    10. '.get' → logprob: -15.250293731689453

Token 72: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.016325846314430237
    2. '1' → logprob: -4.641325950622559
    3. '(-' → logprob: -5.391325950622559
    4. '2' → logprob: -6.516325950622559
    5. '0' → logprob: -8.391325950622559
    6. '3' → logprob: -8.766325950622559
    7. ' (' → logprob: -10.266325950622559
    8. '4' → logprob: -11.141325950622559
    9. '(
' → logprob: -11.266325950622559
    10. '-' → logprob: -11.391325950622559

Token 73: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.22337567806243896
    2. '2' → logprob: -2.2233757972717285
    3. '0' → logprob: -2.4733757972717285
    4. '-' → logprob: -5.4733757972717285
    5. '3' → logprob: -6.0983757972717285
    6. ' ' → logprob: -6.9733757972717285
    7. ' -' → logprob: -9.34837532043457
    8. '4' → logprob: -9.97337532043457
    9. '(' → logprob: -10.53587532043457
    10. '[' → logprob: -10.59837532043457

Token 74: ')' (ID: 8)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.010727076791226864
    2. ')' → logprob: -5.1357269287109375
    3. '),' → logprob: -5.8857269287109375
    4. ',' → logprob: -6.2607269287109375
    5. ' ))' → logprob: -10.010726928710938
    6. ')))' → logprob: -10.135726928710938
    7. '+' → logprob: -12.510726928710938
    8. '));' → logprob: -13.385726928710938
    9. ' )' → logprob: -13.510726928710938
    10. '))
' → logprob: -13.760726928710938

Token 75: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009788555093109608
    2. ',' → logprob: -4.759788513183594
    3. '))' → logprob: -7.009788513183594
    4. ' )' → logprob: -9.009788513183594
    5. '+' → logprob: -9.759788513183594
    6. ',)' → logprob: -10.134788513183594
    7. ')+' → logprob: -11.009788513183594
    8. '),' → logprob: -11.009788513183594
    9. ')))' → logprob: -12.634788513183594
    10. ')}' → logprob: -13.259788513183594

Token 76: ' N' (ID: 478)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08914622664451599
    2. ' lambda' → logprob: -3.589146137237549
    3. ' len' → logprob: -3.714146137237549
    4. '1' → logprob: -3.839146137237549
    5. 'len' → logprob: -6.089146137237549
    6. ')' → logprob: -6.089146137237549
    7. 'lambda' → logprob: -6.589146137237549
    8. '  ' → logprob: -6.589146137237549
    9. ' )' → logprob: -7.089146137237549
    10. '(len' → logprob: -7.339146137237549

Token 77: '%' (ID: 4)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5396618843078613
    2. '>' → logprob: -1.6646618843078613
    3. ' else' → logprob: -2.0396618843078613
    4. 'else' → logprob: -3.4146618843078613
    5. ')' → logprob: -3.7896618843078613
    6. '==' → logprob: -4.164661884307861
    7. ' ==' → logprob: -4.414661884307861
    8. ' )' → logprob: -5.539661884307861
    9. ' ' → logprob: -5.789661884307861
    10. ')>' → logprob: -5.914661884307861

Token 78: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.021694384515285492
    2. ' ' → logprob: -3.8966944217681885
    3. '3' → logprob: -7.146694183349609
    4. '4' → logprob: -9.02169418334961
    5. '1' → logprob: -9.64669418334961
    6. '==' → logprob: -9.77169418334961
    7. '>' → logprob: -10.39669418334961
    8. '10' → logprob: -11.02169418334961
    9. '!=' → logprob: -11.27169418334961
    10. '0' → logprob: -11.52169418334961

Token 79: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.31322988867759705
    2. ' ==' → logprob: -1.8132299184799194
    3. ' else' → logprob: -2.43822979927063
    4. 'else' → logprob: -4.063230037689209
    5. ' ' → logprob: -7.313230037689209
    6. ')' → logprob: -8.56322956085205
    7. '!=' → logprob: -8.81322956085205
    8. ' !=' → logprob: -9.18822956085205
    9. '=' → logprob: -9.43822956085205
    10. ' )' → logprob: -10.18822956085205

Token 80: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026615742594003677
    2. '1' → logprob: -4.026615619659424
    3. ' ' → logprob: -4.776615619659424
    4. '```' → logprob: -13.714116096496582
    5. ')' → logprob: -14.401616096496582
    6. '==' → logprob: -15.026616096496582
    7. '(' → logprob: -15.151616096496582
    8. '2' → logprob: -15.339116096496582
    9. '

' → logprob: -15.464116096496582
    10. '  ' → logprob: -15.589116096496582

Token 81: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.836812436580658
    2. ')' → logprob: -1.4618124961853027
    3. ',' → logprob: -1.5868124961853027
    4. 'else' → logprob: -2.0868124961853027
    5. ' )' → logprob: -5.836812496185303
    6. '))' → logprob: -6.586812496185303
    7. ',)' → logprob: -6.586812496185303
    8. ' ,' → logprob: -7.586812496185303
    9. '),' → logprob: -9.961812019348145
    10. '	else' → logprob: -10.211812019348145

Token 82: ' lambda' (ID: 27871)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.031648267060518265
    2. ' ' → logprob: -3.5316481590270996
    3. '1' → logprob: -7.4066481590271
    4. '(' → logprob: -7.4066481590271
    5. '2' → logprob: -7.6566481590271
    6. 'lambda' → logprob: -9.406648635864258
    7. ' lambda' → logprob: -9.906648635864258
    8. 'item' → logprob: -11.031648635864258
    9. '  ' → logprob: -11.156648635864258
    10. ' (' → logprob: -11.469148635864258

Token 83: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.07021073997020721
    2. 'x' → logprob: -2.6952106952667236
    3. ' a' → logprob: -9.695210456848145
    4. ' i' → logprob: -9.945210456848145
    5. ' item' → logprob: -9.945210456848145
    6. 'a' → logprob: -11.070210456848145
    7. ' row' → logprob: -11.570210456848145
    8. 'item' → logprob: -11.570210456848145
    9. ' s' → logprob: -11.695210456848145
    10. 'i' → logprob: -11.820210456848145

Token 84: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08447089046239853
    2. ' :' → logprob: -2.5844709873199463
    3. ':x' → logprob: -5.584470748901367
    4. ' x' → logprob: -6.459470748901367
    5. 'x' → logprob: -8.584470748901367
    6. '[' → logprob: -11.084470748901367
    7. ':return' → logprob: -11.209470748901367
    8. ' ' → logprob: -11.834470748901367
    9. ':int' → logprob: -12.209470748901367
    10. ',' → logprob: -13.209470748901367

Token 85: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3548717796802521
    2. 'x' → logprob: -1.2298717498779297
    3. ' -' → logprob: -5.60487174987793
    4. '-' → logprob: -6.85487174987793
    5. ' ' → logprob: -6.85487174987793
    6. '1' → logprob: -8.72987174987793
    7. '-x' → logprob: -8.72987174987793
    8. '0' → logprob: -8.85487174987793
    9. ' len' → logprob: -9.97987174987793
    10. 'len' → logprob: -10.47987174987793

Token 86: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00043913270928896964
    2. '[-' → logprob: -8.625438690185547
    3. ')' → logprob: -8.875438690185547
    4. ' [' → logprob: -9.500438690185547
    5. '[
' → logprob: -11.375438690185547
    6. '0' → logprob: -12.250438690185547
    7. ' )' → logprob: -12.250438690185547
    8. '))' → logprob: -12.500438690185547
    9. ':' → logprob: -12.750438690185547
    10. ',' → logprob: -12.750438690185547

Token 87: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16669058799743652
    2. '1' → logprob: -2.0416905879974365
    3. '2' → logprob: -4.041690826416016
    4. ' ' → logprob: -5.541690826416016
    5. '-' → logprob: -6.166690826416016
    6. ':' → logprob: -10.166690826416016
    7. '   ' → logprob: -10.854190826416016
    8. '[' → logprob: -10.916690826416016
    9. ' -' → logprob: -11.166690826416016
    10. '  ' → logprob: -11.166690826416016

Token 88: '])
' (ID: 5169)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.05089873820543289
    2. ')' → logprob: -3.300898790359497
    3. ' ))' → logprob: -5.175898551940918
    4. '+' → logprob: -5.925898551940918
    5. '),' → logprob: -6.300898551940918
    6. ')))' → logprob: -7.050898551940918
    7. ' )' → logprob: -7.175898551940918
    8. '[' → logprob: -8.050898551940918
    9. ' +' → logprob: -8.050898551940918
    10. ',' → logprob: -8.925898551940918

Token 89: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9004620909690857
    2. '[' → logprob: -1.2754621505737305
    3. '
' → logprob: -2.2754621505737305
    4. '<|end|>' → logprob: -2.4004621505737305
    5. '\n' → logprob: -3.0254621505737305
    6. '#' → logprob: -3.9004621505737305
    7. '.' → logprob: -4.5254621505737305
    8. '(' → logprob: -5.0254621505737305
    9. '```' → logprob: -5.0254621505737305
    10. 'newline' → logprob: -5.1504621505737305

Token 90: ' T' (ID: 353)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5209212303161621
    2. '[' → logprob: -2.270921230316162
    3. '
' → logprob: -2.395921230316162
    4. '<|end|>' → logprob: -2.520921230316162
    5. '\n' → logprob: -3.770921230316162
    6. '#' → logprob: -3.895921230316162
    7. ':' → logprob: -4.145921230316162
    8. '.' → logprob: -4.270921230316162
    9. 'newline' → logprob: -4.270921230316162
    10. '```' → logprob: -4.270921230316162

Token 91: ' =' (ID: 314)
  Prédit: 'O'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'O' → logprob: -1.1577273607254028
    2. '=' → logprob: -1.6577273607254028
    3. 'o' → logprob: -1.6577273607254028
    4. ' =' → logprob: -2.0327272415161133
    5. '_' → logprob: -3.0327272415161133
    6. 'ODO' → logprob: -3.6577272415161133
    7. 'odo' → logprob: -3.6577272415161133
    8. 'ime' → logprob: -3.7827272415161133
    9. 'otal' → logprob: -5.282727241516113
    10. '=[]' → logprob: -5.407727241516113

Token 92: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5138148069381714
    2. 'todo' → logprob: -1.6388148069381714
    3. ' ' → logprob: -2.513814926147461
    4. ' todo' → logprob: -2.638814926147461
    5. '100' → logprob: -4.513814926147461
    6. 'int' → logprob: -4.763814926147461
    7. 'max' → logprob: -4.888814926147461
    8. 'sum' → logprob: -5.388814926147461
    9. '10' → logprob: -5.513814926147461
    10. ' int' → logprob: -5.513814926147461

Token 93: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10038383305072784
    2. 'todo' → logprob: -2.850383758544922
    3. 'sum' → logprob: -4.850383758544922
    4. 'max' → logprob: -4.850383758544922
    5. 'int' → logprob: -4.975383758544922
    6. 'len' → logprob: -5.350383758544922
    7. '100' → logprob: -5.850383758544922
    8. ' ' → logprob: -6.600383758544922
    9. '[]' → logprob: -6.850383758544922
    10. '-' → logprob: -6.975383758544922

Token 94: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 95: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 96: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.035387683659791946
    2. 'total' → logprob: -4.6603875160217285
    3. 'result' → logprob: -5.0353875160217285
    4. ' for' → logprob: -5.0353875160217285
    5. 'answer' → logprob: -5.7853875160217285
    6. '<|end|>' → logprob: -6.1603875160217285
    7. 'time' → logprob: -6.5353875160217285
    8. 'max' → logprob: -6.6603875160217285
    9. 'i' → logprob: -6.7853875160217285
    10. 'res' → logprob: -8.160387992858887

Token 97: ' job' (ID: 3349)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.825404167175293
    2. ' task' → logprob: -0.950404167175293
    3. ' stuff' → logprob: -2.825404167175293
    4. 'task' → logprob: -3.575404167175293
    5. 'stuff' → logprob: -4.075404167175293
    6. ' item' → logprob: -4.075404167175293
    7. 'i' → logprob: -4.200404167175293
    8. ' t' → logprob: -4.825404167175293
    9. ' job' → logprob: -5.575404167175293
    10. '_' → logprob: -5.700404167175293

Token 98: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003984012175351381
    2. 'in' → logprob: -5.628983974456787
    3. ' ' → logprob: -8.878984451293945
    4. ',' → logprob: -9.003984451293945
    5. '<|end|>' → logprob: -9.753984451293945
    6. '<|end|>' → logprob: -10.878984451293945
    7. ' ,' → logprob: -11.503984451293945
    8. '[' → logprob: -11.753984451293945
    9. '_' → logprob: -12.128984451293945
    10. '   ' → logprob: -12.253984451293945

Token 99: ' todo' (ID: 6520)
  Prédit: ' todo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' todo' → logprob: -0.1271124631166458
    2. 'todo' → logprob: -2.12711238861084
    3. ' range' → logprob: -8.87711238861084
    4. '(todo' → logprob: -10.62711238861084
    5. 'range' → logprob: -11.25211238861084
    6. '   ' → logprob: -13.12711238861084
    7. 'to' → logprob: -13.87711238861084
    8. '.todo' → logprob: -14.00211238861084
    9. ' tod' → logprob: -14.12711238861084
    10. ' to' → logprob: -14.50211238861084

Token 100: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -5.319370302458992e-06
    2. '_' → logprob: -12.500005722045898
    3. 'list' → logprob: -14.000005722045898
    4. 'List' → logprob: -14.750005722045898
    5. '_l' → logprob: -16.6250057220459
    6. 's' → logprob: -17.0000057220459
    7. ':' → logprob: -17.0000057220459
    8. '   ' → logprob: -17.1250057220459
    9. ' _' → logprob: -17.1250057220459
    10. '```' → logprob: -17.7500057220459

Token 101: '[::-' (ID: 159890)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007639636285603046
    2. ':
' → logprob: -4.882639408111572
    3. '[' → logprob: -11.50763988494873
    4. ':

' → logprob: -12.00763988494873
    5. '<|end|>' → logprob: -12.13263988494873
    6. ',' → logprob: -12.38263988494873
    7. '   ' → logprob: -12.63263988494873
    8. '<|end|>' → logprob: -13.88263988494873
    9. '):' → logprob: -14.63263988494873
    10. ' :' → logprob: -14.63263988494873

Token 102: '1' (ID: 16)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.63808673620224
    2. 'ate' → logprob: -1.3880867958068848
    3. 'ated' → logprob: -2.0130867958068848
    4. '       ' → logprob: -4.388086795806885
    5. 'ted' → logprob: -4.388086795806885
    6. 'uted' → logprob: -4.388086795806885
    7. 'se' → logprob: -4.513086795806885
    8. '   ' → logprob: -5.138086795806885
    9. 'versed' → logprob: -5.138086795806885
    10. 'ange' → logprob: -5.138086795806885

Token 103: '][' (ID: 2696)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4895764887332916
    2. '):' → logprob: -1.1145764589309692
    3. ']:' → logprob: -2.864576578140259
    4. ']' → logprob: -7.61457633972168
    5. ')' → logprob: -7.86457633972168
    6. ' :' → logprob: -8.11457633972168
    7. ',' → logprob: -8.61457633972168
    8. '):
' → logprob: -8.73957633972168
    9. '[' → logprob: -9.36457633972168
    10. ' ):' → logprob: -9.36457633972168

Token 104: '::-' (ID: 96612)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008062002249062061
    2. ']:' → logprob: -5.25806188583374
    3. ' :' → logprob: -6.50806188583374
    4. ':
' → logprob: -7.50806188583374
    5. '1' → logprob: -8.758062362670898
    6. ':]' → logprob: -9.008062362670898
    7. '   ' → logprob: -9.133062362670898
    8. '0' → logprob: -9.258062362670898
    9. ' ' → logprob: -9.633062362670898
    10. '  ' → logprob: -9.883062362670898

Token 105: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03469095006585121
    2. '2' → logprob: -3.4096908569335938
    3. '3' → logprob: -7.784690856933594
    4. '10' → logprob: -8.784690856933594
    5. '4' → logprob: -9.034690856933594
    6. '6' → logprob: -9.534690856933594
    7. '5' → logprob: -9.784690856933594
    8. '8' → logprob: -10.034690856933594
    9. '12' → logprob: -10.972190856933594
    10. ' ' → logprob: -11.034690856933594

Token 106: ']:' (ID: 12433)
  Prédit: ']:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.5912497639656067
    2. ':' → logprob: -0.8412497639656067
    3. '):' → logprob: -4.841249942779541
    4. ']' → logprob: -5.341249942779541
    5. '   ' → logprob: -6.966249942779541
    6. '[' → logprob: -7.716249942779541
    7. '       ' → logprob: -8.341249465942383
    8. ']):' → logprob: -9.216249465942383
    9. ':]' → logprob: -9.341249465942383
    10. ']:
' → logprob: -9.466249465942383

Token 107: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33099910616874695
    2. '<|end|>' → logprob: -1.7059991359710693
    3. ':' → logprob: -3.2059991359710693
    4. ' ' → logprob: -3.9559991359710693
    5. '
' → logprob: -4.33099889755249
    6. '   ' → logprob: -5.08099889755249
    7. '        
' → logprob: -5.45599889755249
    8. '    ' → logprob: -5.83099889755249
    9. '[' → logprob: -5.95599889755249
    10. '<|end|>' → logprob: -6.45599889755249

Token 108: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7301318645477295
    2. '<|end|>' → logprob: -0.7301318645477295
    3. '
' → logprob: -3.9801318645477295
    4. '   ' → logprob: -5.355132102966309
    5. ' ' → logprob: -5.605132102966309
    6. '<|end|>' → logprob: -6.230132102966309
    7. ':' → logprob: -6.730132102966309
    8. '        
' → logprob: -6.730132102966309
    9. '    
' → logprob: -6.855132102966309
    10. '    ' → logprob: -7.480132102966309

Token 109: ' no' (ID: 860)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06910963356494904
    2. ' pass' → logprob: -3.4441096782684326
    3. '    ' → logprob: -4.0691094398498535
    4. ' continue' → logprob: -5.0691094398498535
    5. '   ' → logprob: -6.3191094398498535
    6. '  ' → logprob: -6.3191094398498535
    7. 'pass' → logprob: -6.3191094398498535
    8. '<|end|>' → logprob: -7.4441094398498535
    9. ' T' → logprob: -7.5691094398498535
    10. ' job' → logprob: -7.5691094398498535

Token 110: '-op' (ID: 37674)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 111: ' slice' (ID: 30288)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8782577514648438
    2. '       ' → logprob: -0.8782577514648438
    3. '   ' → logprob: -3.1282577514648438
    4. '.' → logprob: -3.3782577514648438
    5. ':
' → logprob: -3.3782577514648438
    6. '<|end|>' → logprob: -4.503257751464844
    7. '
' → logprob: -4.878257751464844
    8. '\n' → logprob: -5.128257751464844
    9. '\' → logprob: -5.253257751464844
    10. '    
' → logprob: -5.503257751464844

Token 112: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38568341732025146
    2. ':' → logprob: -1.5106834173202515
    3. ':
' → logprob: -2.510683536529541
    4. '   ' → logprob: -4.885683536529541
    5. '<|end|>' → logprob: -5.635683536529541
    6. '
' → logprob: -6.260683536529541
    7. ',' → logprob: -6.885683536529541
    8. ' :
' → logprob: -7.260683536529541
    9. '        
' → logprob: -7.635683536529541
    10. ' :' → logprob: -8.010683059692383

Token 113: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21697551012039185
    2. ':' → logprob: -1.841975450515747
    3. '<|end|>' → logprob: -4.341975688934326
    4. '   ' → logprob: -4.841975688934326
    5. ':
' → logprob: -5.091975688934326
    6. '        
' → logprob: -6.216975688934326
    7. '
' → logprob: -6.716975688934326
    8. ',' → logprob: -6.966975688934326
    9. '    ' → logprob: -7.216975688934326
    10. '<|end|>' → logprob: -7.341975688934326

Token 114: ' T' (ID: 353)
  Prédit: ' T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' T' → logprob: -0.5999574661254883
    2. 'T' (adapté à ' T') → logprob: -1.0999574661254883
    3. ' if' → logprob: -2.8499574661254883
    4. ' pass' → logprob: -3.8499574661254883
    5. '    ' → logprob: -4.224957466125488
    6. '   ' → logprob: -4.724957466125488
    7. 'if' → logprob: -5.474957466125488
    8. 'print' → logprob: -5.974957466125488
    9. 'pass' → logprob: -5.974957466125488
    10. ' ' → logprob: -6.099957466125488

Token 115: ' -=' (ID: 12583)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.05213651433587074
    2. '+=' → logprob: -3.0521364212036133
    3. ' =' → logprob: -6.177136421203613
    4. '=' → logprob: -7.177136421203613
    5. '+' → logprob: -7.427136421203613
    6. ' +' → logprob: -9.552136421203613
    7. '<|end|>' → logprob: -10.927136421203613
    8. ' ' → logprob: -12.802136421203613
    9. ',' → logprob: -13.052136421203613
    10. ' -=' → logprob: -13.302136421203613

Token 116: ' -' (ID: 533)
  Prédit: ' job'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' job' → logprob: -0.20603246986865997
    2. 'job' → logprob: -1.7060325145721436
    3. '1' → logprob: -5.7060322761535645
    4. ' ' → logprob: -6.8310322761535645
    5. '(job' → logprob: -9.581032752990723
    6. '	job' → logprob: -9.706032752990723
    7. '0' → logprob: -11.456032752990723
    8. ' (' → logprob: -11.581032752990723
    9. '10' → logprob: -11.706032752990723
    10. '2' → logprob: -12.581032752990723

Token 117: 'job' (ID: 16991)
  Prédit: 'job'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'job' → logprob: -0.06481742113828659
    2. ' job' → logprob: -2.814817428588867
    3. '1' → logprob: -6.064817428588867
    4. '(job' → logprob: -7.939817428588867
    5. ' ' → logprob: -10.314817428588867
    6. '	job' → logprob: -10.439817428588867
    7. 'len' → logprob: -10.939817428588867
    8. '0' → logprob: -11.064817428588867
    9. '(' → logprob: -11.314817428588867
    10. '10' → logprob: -11.689817428588867

Token 118: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.554343366995454e-05
    2. '0' → logprob: -10.125085830688477
    3. '[
' → logprob: -11.250085830688477
    4. ' [' → logprob: -11.625085830688477
    5. '[-' → logprob: -12.375085830688477
    6. '\[' → logprob: -12.750085830688477
    7. '][' → logprob: -12.875085830688477
    8. '1' → logprob: -13.000085830688477
    9. '()[' → logprob: -13.812585830688477
    10. '```' → logprob: -13.937585830688477

Token 119: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08150482177734375
    2. '1' → logprob: -2.5815048217773438
    3. '2' → logprob: -6.206504821777344
    4. ' ' → logprob: -7.456504821777344
    5. '3' → logprob: -12.394004821777344
    6. '-' → logprob: -12.769004821777344
    7. ']' → logprob: -13.081504821777344
    8. '   ' → logprob: -13.519004821777344
    9. '  ' → logprob: -13.894004821777344
    10. '[' → logprob: -14.081504821777344

Token 120: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008370127528905869
    2. '])' → logprob: -5.3833699226379395
    3. ')' → logprob: -5.8833699226379395
    4. ' ]' → logprob: -7.2583699226379395
    5. ')]' → logprob: -9.633370399475098
    6. '<|end|>' → logprob: -10.258370399475098
    7. ']
' → logprob: -10.508370399475098
    8. '-' → logprob: -10.883370399475098
    9. '[' → logprob: -11.133370399475098
    10. ' ' → logprob: -11.258370399475098

Token 121: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8090693950653076
    2. ' ' → logprob: -1.6840693950653076
    3. '<|end|>' → logprob: -1.9340693950653076
    4. '   ' → logprob: -2.6840693950653076
    5. '\n' → logprob: -3.4340693950653076
    6. '    
' → logprob: -4.059069633483887
    7. ' 
' → logprob: -4.184069633483887
    8. '#' → logprob: -4.434069633483887
    9. ')' → logprob: -4.559069633483887
    10. '       ' → logprob: -4.809069633483887

Token 122: ' if' (ID: 538)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.37693172693252563
    2. 'print' → logprob: -2.251931667327881
    3. ' T' → logprob: -2.501931667327881
    4. 'if' (adapté à ' if') → logprob: -2.751931667327881
    5. ' if' → logprob: -3.001931667327881
    6. ' print' → logprob: -5.126931667327881
    7. 'job' → logprob: -6.251931667327881
    8. ' job' → logprob: -6.376931667327881
    9. '   ' → logprob: -6.501931667327881
    10. ' ' → logprob: -8.376932144165039

Token 123: ' not' (ID: 625)
  Prédit: ' T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' T' → logprob: -0.15499241650104523
    2. 'T' → logprob: -2.4049923419952393
    3. ' job' → logprob: -3.0299923419952393
    4. 'job' → logprob: -5.404992580413818
    5. ' ' → logprob: -8.65499210357666
    6. ' not' → logprob: -9.52999210357666
    7. '(job' → logprob: -9.90499210357666
    8. ' (' → logprob: -10.27999210357666
    9. ' len' → logprob: -10.40499210357666
    10. ' ' → logprob: -10.52999210357666

Token 124: ' (' (ID: 350)
  Prédit: ' T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' T' → logprob: -0.7431213855743408
    2. ' job' → logprob: -0.9931213855743408
    3. ' (' → logprob: -3.368121385574341
    4. 'T' → logprob: -3.368121385574341
    5. 'job' → logprob: -3.368121385574341
    6. '(job' → logprob: -3.368121385574341
    7. '(' → logprob: -4.993121147155762
    8. '(T' → logprob: -5.118121147155762
    9. ' todo' → logprob: -7.243121147155762
    10. ' ' → logprob: -7.368121147155762

Token 125: 'T' (ID: 51)
  Prédit: ' T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' T' → logprob: -0.662347137928009
    2. 'T' → logprob: -0.787347137928009
    3. ' job' → logprob: -4.162347316741943
    4. 'job' → logprob: -4.787347316741943
    5. ' (' → logprob: -6.287347316741943
    6. ')' → logprob: -7.287347316741943
    7. '(job' → logprob: -7.287347316741943
    8. ' ' → logprob: -7.412347316741943
    9. '(T' → logprob: -7.537347316741943
    10. '(' → logprob: -7.787347316741943

Token 126: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.07389017939567566
    2. '<=' → logprob: -3.698890209197998
    3. ' <' → logprob: -4.073890209197998
    4. ' >=' → logprob: -4.573890209197998
    5. ' >' → logprob: -4.698890209197998
    6. '%' → logprob: -5.573890209197998
    7. ' %' → logprob: -6.198890209197998
    8. ' ' → logprob: -6.573890209197998
    9. '<' → logprob: -6.573890209197998
    10. '>' → logprob: -7.448890209197998

Token 127: ' job' (ID: 3349)
  Prédit: 'job'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'job' → logprob: -0.2524758279323578
    2. ' job' → logprob: -1.5024758577346802
    3. ' ' → logprob: -9.12747573852539
    4. '10' → logprob: -9.12747573852539
    5. '0' → logprob: -9.87747573852539
    6. '	job' → logprob: -10.00247573852539
    7. '(job' → logprob: -10.25247573852539
    8. '1' → logprob: -10.25247573852539
    9. '100' → logprob: -10.50247573852539
    10. '5' → logprob: -11.25247573852539

Token 128: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9027791495318525e-05
    2. ' [' → logprob: -11.125019073486328
    3. '   ' → logprob: -13.875019073486328
    4. '[
' → logprob: -14.062519073486328
    5. '[-' → logprob: -14.500019073486328
    6. 's' → logprob: -15.187519073486328
    7. ')' → logprob: -15.437519073486328
    8. '       ' → logprob: -15.875019073486328
    9. '
' → logprob: -16.000019073486328
    10. ' ' → logprob: -16.250019073486328

Token 129: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.22621053457260132
    2. '[' → logprob: -1.601210594177246
    3. ' ' → logprob: -7.726210594177246
    4. '2' → logprob: -8.476210594177246
    5. ' [' → logprob: -10.226210594177246
    6. '(' → logprob: -10.351210594177246
    7. '   ' → logprob: -11.163710594177246
    8. '3' → logprob: -11.913710594177246
    9. ']' → logprob: -12.038710594177246
    10. '0' → logprob: -12.163710594177246

Token 130: ']):
' (ID: 51989)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.021578775718808174
    2. '):
' → logprob: -4.771578788757324
    3. ' and' → logprob: -4.896578788757324
    4. ')' → logprob: -5.771578788757324
    5. ' ):' → logprob: -6.271578788757324
    6. ':' → logprob: -8.521578788757324
    7. ' ):
' → logprob: -10.021578788757324
    8. '):

' → logprob: -10.396578788757324
    9. 'and' → logprob: -10.646578788757324
    10. ' )' → logprob: -10.771578788757324

Token 131: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19748838245868683
    2. ':' → logprob: -2.072488307952881
    3. ':
' → logprob: -3.447488307952881
    4. '       ' → logprob: -4.322488307952881
    5. ' :' → logprob: -6.322488307952881
    6. ' print' → logprob: -6.572488307952881
    7. '
' → logprob: -7.197488307952881
    8. '            
' → logprob: -7.197488307952881
    9. ' :
' → logprob: -7.322488307952881
    10. 'print' → logprob: -7.572488307952881

Token 132: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1319202184677124
    2. 'print' (adapté à ' print') → logprob: -1.1319202184677124
    3. ' break' → logprob: -1.8819202184677124
    4. 'break' → logprob: -2.256920337677002
    5. ' print' → logprob: -3.131920337677002
    6. '           ' → logprob: -3.131920337677002
    7. '
' → logprob: -5.006920337677002
    8. '   ' → logprob: -5.881920337677002
    9. '        
' → logprob: -7.756920337677002
    10. '```' → logprob: -8.131919860839844

Token 133: '('' (ID: 706)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.10326356440782547
    2. '(' → logprob: -3.1032636165618896
    3. '(-' → logprob: -3.7282636165618896
    4. '('' → logprob: -3.9782636165618896
    5. '(job' → logprob: -4.8532633781433105
    6. '(False' → logprob: -6.4782633781433105
    7. '(
' → logprob: -8.478263854980469
    8. '(T' → logprob: -8.728263854980469
    9. '("-' → logprob: -8.853263854980469
    10. '"' → logprob: -9.228263854980469

Token 134: 'No' (ID: 3160)
  Prédit: 'NO'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NO' → logprob: -1.2393423318862915
    2. '"No' → logprob: -1.4893423318862915
    3. '"' → logprob: -1.8643423318862915
    4. 'No' → logprob: -2.239342212677002
    5. ''' → logprob: -2.364342212677002
    6. '-' → logprob: -3.114342212677002
    7. 'no' → logprob: -4.489342212677002
    8. 'False' → logprob: -4.614342212677002
    9. ''N' → logprob: -4.614342212677002
    10. '('' → logprob: -4.989342212677002

Token 135: '');' (ID: 10477)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.054706115275621414
    2. '')
' → logprob: -3.30470609664917
    3. ')' → logprob: -4.42970609664917
    4. 't' → logprob: -6.17970609664917
    5. '")' → logprob: -7.55470609664917
    6. '\n' → logprob: -7.92970609664917
    7. ''' → logprob: -7.92970609664917
    8. '
' → logprob: -7.92970609664917
    9. ')
' → logprob: -8.179706573486328
    10. 'pe' → logprob: -8.929706573486328

Token 136: ' import' (ID: 1588)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.13547518849372864
    2. '           ' → logprob: -2.8854751586914062
    3. 'break' → logprob: -3.0104751586914062
    4. '	break' → logprob: -5.385475158691406
    5. '       ' → logprob: -5.385475158691406
    6. '
' → logprob: -5.635475158691406
    7. ' 
' → logprob: -6.010475158691406
    8. '   ' → logprob: -6.385475158691406
    9. '    ' → logprob: -6.510475158691406
    10. '    
' → logprob: -6.885475158691406

Token 137: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.0014421383384615183
    2. 'sys' → logprob: -6.626441955566406
    3. '	sys' → logprob: -9.876441955566406
    4. '=sys' → logprob: -10.251441955566406
    5. ' ' → logprob: -11.251441955566406
    6. ' system' → logprob: -11.501441955566406
    7. ' ' → logprob: -13.501441955566406
    8. '_sys' → logprob: -13.626441955566406
    9. ' System' → logprob: -14.001441955566406
    10. ' space' → logprob: -14.876441955566406

Token 138: ';' (ID: 26)
  Prédit: '.exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -0.6716614961624146
    2. '
' → logprob: -2.046661376953125
    3. '           ' → logprob: -2.171661376953125
    4. ' sys' → logprob: -2.921661376953125
    5. ' exit' → logprob: -3.046661376953125
    6. ';' → logprob: -3.671661376953125
    7. ' 
' → logprob: -4.421661376953125
    8. ' break' → logprob: -4.546661376953125
    9. '<|end|>' → logprob: -4.671661376953125
    10. '().' → logprob: -4.796661376953125

Token 139: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.6334384083747864
    2. ' sys' → logprob: -0.7584384083747864
    3. ' exit' → logprob: -8.008438110351562
    4. 'exit' → logprob: -8.133438110351562
    5. ' break' → logprob: -9.008438110351562
    6. 'break' → logprob: -10.008438110351562
    7. '	sys' → logprob: -10.508438110351562
    8. '    ' → logprob: -12.258438110351562
    9. '=sys' → logprob: -12.508438110351562
    10. '   ' → logprob: -13.508438110351562

Token 140: '.exit' (ID: 27076)
  Prédit: '.exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -0.00018220659694634378
    2. '.stdout' → logprob: -9.375182151794434
    3. '.' → logprob: -9.750182151794434
    4. 'exit' → logprob: -10.875182151794434
    5. '_exit' → logprob: -12.250182151794434
    6. '.stderr' → logprob: -12.375182151794434
    7. ' exit' → logprob: -12.625182151794434
    8. '.setdefault' → logprob: -12.875182151794434
    9. '	exit' → logprob: -13.500182151794434
    10. '.Exit' → logprob: -13.875182151794434

Token 141: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.051064711064100266
    2. '()' → logprob: -3.0510647296905518
    3. '()(' → logprob: -6.051064491271973
    4. '()
' → logprob: -10.801064491271973
    5. '(()' → logprob: -10.801064491271973
    6. '0' → logprob: -11.301064491271973
    7. '(
' → logprob: -11.426064491271973
    8. ' (' → logprob: -11.676064491271973
    9. '((' → logprob: -11.801064491271973
    10. '("("' → logprob: -12.176064491271973

Token 142: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.3464544432936236e-05
    2. ')' → logprob: -10.875043869018555
    3. ' ' → logprob: -11.125043869018555
    4. '1' → logprob: -11.625043869018555
    5. '(' → logprob: -15.250043869018555
    6. '   ' → logprob: -16.375043869018555
    7. '۰' → logprob: -16.625043869018555
    8. '()' → logprob: -17.000043869018555
    9. '())' → logprob: -17.187543869018555
    10. '  ' → logprob: -17.250043869018555

Token 143: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0029428747948259115
    2. ')
' → logprob: -5.87794303894043
    3. '')' → logprob: -9.50294303894043
    4. '()' → logprob: -10.87794303894043
    5. '())' → logprob: -11.00294303894043
    6. '))' → logprob: -11.00294303894043
    7. ' )' → logprob: -12.62794303894043
    8. '`)' → logprob: -13.25294303894043
    9. ')

' → logprob: -13.75294303894043
    10. ');' → logprob: -13.87794303894043

Token 144: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0010852093109861016
    2. 'else' → logprob: -7.25108528137207
    3. ')' → logprob: -8.87608528137207
    4. '   ' → logprob: -8.87608528137207
    5. ' print' → logprob: -10.75108528137207
    6. '
' → logprob: -11.12608528137207
    7. '<|end|>' → logprob: -11.62608528137207
    8. '```' → logprob: -11.75108528137207
    9. '    
' → logprob: -12.00108528137207
    10. 'p' → logprob: -12.00108528137207

Token 145: ' (' (ID: 350)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00018863992590922862
    2. 'else' → logprob: -8.875188827514648
    3. '   ' → logprob: -11.250188827514648
    4. 'No' → logprob: -11.750188827514648
    5. 'Yes' → logprob: -12.000188827514648
    6. '    
' → logprob: -12.125188827514648
    7. ' print' → logprob: -12.500188827514648
    8. ')' → logprob: -13.000188827514648
    9. 'Print' → logprob: -13.500188827514648
    10. '  
' → logprob: -13.750188827514648

Token 146: 'lambda' (ID: 35280)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01434425637125969
    2. ''' → logprob: -4.764344215393066
    3. ')' → logprob: -5.389344215393066
    4. ' print' → logprob: -7.264344215393066
    5. '   ' → logprob: -9.764344215393066
    6. ''s' → logprob: -9.764344215393066
    7. '1' → logprob: -9.764344215393066
    8. ' ' → logprob: -10.139344215393066
    9. '')' → logprob: -10.264344215393066
    10. '"' → logprob: -10.389344215393066

Token 147: ' x' (ID: 1215)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.9501871466636658
    2. ' x' → logprob: -1.4501872062683105
    3. ' T' → logprob: -2.0751872062683105
    4. ':' → logprob: -2.4501872062683105
    5. ' )' → logprob: -3.3251872062683105
    6. ' ' → logprob: -3.4501872062683105
    7. ' n' → logprob: -4.3251872062683105
    8. ' N' → logprob: -4.4501872062683105
    9. 'T' → logprob: -4.5751872062683105
    10. ' ):' → logprob: -4.7001872062683105

Token 148: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011568804271519184
    2. ' :' → logprob: -5.386569023132324
    3. ',' → logprob: -6.011569023132324
    4. ':x' → logprob: -6.136569023132324
    5. ' x' → logprob: -6.636569023132324
    6. 'x' → logprob: -7.261569023132324
    7. '=' → logprob: -10.136569023132324
    8. ':
' → logprob: -10.136569023132324
    9. ',x' → logprob: -10.386569023132324
    10. ':T' → logprob: -10.511569023132324

Token 149: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5269224643707275
    2. 'x' → logprob: -1.6519224643707275
    3. ' x' → logprob: -1.9019224643707275
    4. ' print' → logprob: -3.2769224643707275
    5. ''' → logprob: -5.276922225952148
    6. ' True' → logprob: -6.026922225952148
    7. 'True' → logprob: -6.026922225952148
    8. 'None' → logprob: -6.401922225952148
    9. ' '' → logprob: -6.651922225952148
    10. ' all' → logprob: -6.776922225952148

Token 150: '(x' (ID: 4061)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.17241914570331573
    2. '(x' → logprob: -2.2974190711975098
    3. '("' → logprob: -3.6724190711975098
    4. '(' → logprob: -3.9224190711975098
    5. '(len' → logprob: -5.29741907119751
    6. ')' → logprob: -6.54741907119751
    7. '((' → logprob: -6.79741907119751
    8. '(('' → logprob: -6.79741907119751
    9. '(f' → logprob: -7.04741907119751
    10. '(True' → logprob: -7.42241907119751

Token 151: '))' (ID: 915)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.30596983432769775
    2. '("' → logprob: -2.055969715118408
    3. '(' → logprob: -3.180969715118408
    4. ')("' → logprob: -3.430969715118408
    5. '(True' → logprob: -3.930969715118408
    6. ')(' → logprob: -4.180969715118408
    7. ')' → logprob: -4.305969715118408
    8. '(len' → logprob: -5.680969715118408
    9. '((' → logprob: -6.180969715118408
    10. '(todo' → logprob: -6.680969715118408

Token 152: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.11230376362800598
    2. '("' → logprob: -2.3623037338256836
    3. '(' → logprob: -4.612303733825684
    4. '(True' → logprob: -7.112303733825684
    5. '(
' → logprob: -7.737303733825684
    6. '(('' → logprob: -8.487303733825684
    7. '((' → logprob: -8.737303733825684
    8. ''' → logprob: -8.737303733825684
    9. '(['' → logprob: -9.862303733825684
    10. '(T' → logprob: -9.987303733825684

Token 153: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.0005358747439458966
    2. ''' → logprob: -8.50053596496582
    3. 'YES' → logprob: -8.87553596496582
    4. 'Y' → logprob: -10.12553596496582
    5. 'Ye' → logprob: -10.12553596496582
    6. ' Yes' → logprob: -10.87553596496582
    7. 'No' → logprob: -11.12553596496582
    8. '"' → logprob: -11.25053596496582
    9. '   ' → logprob: -12.00053596496582
    10. 'Yeah' → logprob: -12.25053596496582

Token 154: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0789107233285904
    2. ')' → logprob: -2.5789108276367188
    3. '')
' → logprob: -11.578910827636719
    4. ')'' → logprob: -13.078910827636719
    5. ''))' → logprob: -13.203910827636719
    6. ')")' → logprob: -13.828910827636719
    7. ''' → logprob: -13.953910827636719
    8. '")' → logprob: -13.953910827636719
    9. '('' → logprob: -14.078910827636719
    10. '))' → logprob: -14.328910827636719

Token 155: 'except' (ID: 25035)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 156: ' System' (ID: 1219)
  Prédit: ' Exception'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Exception' → logprob: -0.016820043325424194
    2. ' ' → logprob: -4.641819953918457
    3. '(Exception' → logprob: -5.266819953918457
    4. '<|end|>' → logprob: -7.016819953918457
    5. ' (' → logprob: -8.266819953918457
    6. ':' → logprob: -8.266819953918457
    7. '  ' → logprob: -9.016819953918457
    8. 'Exception' → logprob: -9.141819953918457
    9. ' EOF' → logprob: -9.766819953918457
    10. ' Keyboard' → logprob: -9.891819953918457

Token 157: 'Exit' (ID: 23779)
  Prédit: 'Exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Exit' → logprob: -3.128163257315464e-07
    2. 'Error' → logprob: -15.75
    3. 'exit' → logprob: -16.125
    4. ' exit' → logprob: -19.125
    5. '.exit' → logprob: -19.875
    6. '_exit' → logprob: -20.125
    7. ' Exit' → logprob: -20.5
    8. 'E' → logprob: -20.5
    9. '.Exit' → logprob: -20.625
    10. 'Ex' → logprob: -21.125

Token 158: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00650385906919837
    2. ' as' → logprob: -5.756504058837891
    3. ':
' → logprob: -5.756504058837891
    4. '():' → logprob: -10.13150405883789
    5. 'except' → logprob: -10.63150405883789
    6. '   ' → logprob: -10.88150405883789
    7. 'as' → logprob: -10.88150405883789
    8. '()' → logprob: -11.13150405883789
    9. '):' → logprob: -11.25650405883789
    10. ' or' → logprob: -12.13150405883789

Token 159: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05704506114125252
    2. ' pass' → logprob: -2.9320449829101562
    3. 'pass' → logprob: -6.307044982910156
    4. '    ' → logprob: -8.682044982910156
    5. '...' → logprob: -10.432044982910156
    6. ' None' → logprob: -10.432044982910156
    7. '	pass' → logprob: -10.557044982910156
    8. '0' → logprob: -10.807044982910156
    9. '    
' → logprob: -11.057044982910156
    10. '  ' → logprob: -11.682044982910156

Token 160: ' pass' (ID: 1853)
  Prédit: ' pass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.7005046010017395
    2. 'pass' (adapté à ' pass') → logprob: -0.7005046010017395
    3. '   ' → logprob: -5.325504779815674
    4. '...' → logprob: -6.200504779815674
    5. '0' → logprob: -8.825504302978516
    6. ' None' → logprob: -9.075504302978516
    7. '	pass' → logprob: -9.825504302978516
    8. '    ' → logprob: -10.200504302978516
    9. ' ...' → logprob: -10.575504302978516
    10. 'None' → logprob: -11.075504302978516


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 158
Tokens correctement prédits (1ère position, stricte): 71
Tokens correctement prédits (1ère position, avec adaptation): 74
Tokens correctement prédits (top 10): 118
Précision stricte (1ère position): 44.94%
Précision adaptée (1ère position): 46.84%
Précision (top 10): 74.68%
================================================================================
