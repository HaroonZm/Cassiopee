================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:56:08
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
a = []
for i in range(n):
    x, y = map(int, input().split())
    a.append((x, y))
t = set(a)
assert len(t) == len(a)
minans = 1000000000000
i = 0
while i < n:
    j = i + 1
    while j < n:
        r = set(t)
        p = a[i][0] - a[j][0]
        q = a[i][1] - a[j][1]
        curans = 0
        while r:
            curans += 1
            m = r.pop()
            z0, z1 = m[0], m[1]
            m0, m1 = z0, z1
            while (m0 + p, m1 + q) in r:
                m0 += p
                m1 += q
                r.remove((m0, m1))
            m0, m1 = z0, z1
            while (m0 - p, m1 - q) in r:
                m0 -= p
                m1 -= q
                r.remove((m0, m1))
        if curans < minans:
            minans = curans
        j += 1
    i += 1
if minans == 1000000000000:
    print(1)
else:
    print(minans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006348780007101595
    2. '('' → logprob: -7.875634670257568
    3. ''' → logprob: -9.125635147094727
    4. '```' → logprob: -10.375635147094727
    5. '(n' → logprob: -10.500635147094727
    6. '()' → logprob: -10.875635147094727
    7. '("("' → logprob: -10.875635147094727
    8. '`' → logprob: -11.000635147094727
    9. '(
' → logprob: -11.875635147094727
    10. '(input' → logprob: -12.625635147094727

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2923867702484131
    2. ')' → logprob: -1.417386770248413
    3. '()' → logprob: -4.667387008666992
    4. '())' → logprob: -6.917387008666992
    5. '(
' → logprob: -9.042387008666992
    6. '')' → logprob: -9.167387008666992
    7. '('' → logprob: -9.292387008666992
    8. '```' → logprob: -9.542387008666992
    9. ''' → logprob: -9.917387008666992
    10. '")' → logprob: -10.042387008666992

Token 5: 'a' (ID: 64)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9081412553787231
    2. 'if' → logprob: -1.1581412553787231
    3. 's' → logprob: -2.4081411361694336
    4. 'for' → logprob: -2.4081411361694336
    5. ' ' → logprob: -3.7831411361694336
    6. ''' → logprob: -4.408141136169434
    7. 'x' → logprob: -4.658141136169434
    8. ')' → logprob: -4.908141136169434
    9. 'a' → logprob: -5.033141136169434
    10. '`' → logprob: -5.283141136169434

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13954703509807587
    2. ' =' → logprob: -3.014547109603882
    3. 'r' → logprob: -3.139547109603882
    4. 'rray' → logprob: -4.764546871185303
    5. '=' → logprob: -4.889546871185303
    6. 'rr' → logprob: -5.139546871185303
    7. '.' → logprob: -5.264546871185303
    8. '[i' → logprob: -6.014546871185303
    9. 'a' → logprob: -6.764546871185303
    10. ' ' → logprob: -6.889546871185303

Token 7: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.7189328074455261
    2. ' []' → logprob: -0.8439328074455261
    3. 'list' → logprob: -3.718932867050171
    4. ' [' → logprob: -3.718932867050171
    5. '[' → logprob: -4.593932628631592
    6. '[int' → logprob: -4.718932628631592
    7. ' list' → logprob: -4.843932628631592
    8. '[input' → logprob: -6.093932628631592
    9. 'a' → logprob: -6.843932628631592
    10. 'n' → logprob: -6.843932628631592

Token 8: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011948877945542336
    2. ' for' → logprob: -4.511949062347412
    3. '[' → logprob: -7.761949062347412
    4. '\n' → logprob: -9.136948585510254
    5. '\' → logprob: -9.511948585510254
    6. 'i' → logprob: -9.636948585510254
    7. '```' → logprob: -10.011948585510254
    8. '
' → logprob: -10.261948585510254
    9. ' 
' → logprob: -10.511948585510254
    10. 'n' → logprob: -10.636948585510254

Token 9: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03186848387122154
    2. ' i' → logprob: -3.7818684577941895
    3. '  ' → logprob: -4.7818684577941895
    4. 'i' → logprob: -8.906868934631348
    5. ' ‌' → logprob: -10.906868934631348
    6. ' n' → logprob: -10.906868934631348
    7. ' a' → logprob: -11.656868934631348
    8. ' )' → logprob: -13.031868934631348
    9. ' ▁' → logprob: -13.281868934631348
    10. ' I' → logprob: -13.281868934631348

Token 10: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03351636603474617
    2. 'in' → logprob: -3.9085164070129395
    3. ' ' → logprob: -4.5335164070129395
    4. 'n' → logprob: -6.6585164070129395
    5. ' n' → logprob: -7.6585164070129395
    6. '  ' → logprob: -8.283515930175781
    7. '_' → logprob: -10.408515930175781
    8. ' i' → logprob: -10.408515930175781
    9. '<|end|>' → logprob: -11.658515930175781
    10. '<n' → logprob: -12.033515930175781

Token 11: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.07896149903535843
    2. 'range' → logprob: -2.5789616107940674
    3. ' ' → logprob: -9.703961372375488
    4. '	range' → logprob: -11.953961372375488
    5. '_range' → logprob: -13.703961372375488
    6. ' in' → logprob: -14.578961372375488
    7. 'n' → logprob: -14.703961372375488
    8. ' xrange' → logprob: -14.953961372375488
    9. '(range' → logprob: -14.953961372375488
    10. ' n' → logprob: -15.078961372375488

Token 12: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018453679978847504
    2. '(n' → logprob: -4.018453598022461
    3. ' (' → logprob: -8.143453598022461
    4. '(range' → logprob: -12.143453598022461
    5. '(space' → logprob: -13.268453598022461
    6. ' ' → logprob: -13.643453598022461
    7. '(len' → logprob: -13.893453598022461
    8. '(
' → logprob: -13.893453598022461
    9. '(a' → logprob: -14.893453598022461
    10. ')' → logprob: -14.893453598022461

Token 13: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.055154647678136826
    2. ')' → logprob: -2.93015456199646
    3. '+' → logprob: -8.555154800415039
    4. '):
' → logprob: -10.555154800415039
    5. ':' → logprob: -10.680154800415039
    6. ' ):' → logprob: -10.805154800415039
    7. ' )' → logprob: -12.805154800415039
    8. ')):' → logprob: -14.430154800415039
    9. ''):' → logprob: -14.430154800415039
    10. ' ' → logprob: -14.680154800415039

Token 14: '   ' (ID: 271)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.4699341058731079
    2. '   ' → logprob: -1.594934105873108
    3. ' ' → logprob: -2.0949339866638184
    4. 'a' → logprob: -3.5949339866638184
    5. '    ' → logprob: -4.219933986663818
    6. ' ```' → logprob: -6.469933986663818
    7. '    
' → logprob: -7.219933986663818
    8. '     
' → logprob: -7.469933986663818
    9. '```' → logprob: -7.469933986663818
    10. ' ‌' → logprob: -7.844933986663818

Token 15: ' x' (ID: 1215)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.013117283582687378
    2. 'a' → logprob: -4.38811731338501
    3. '    ' → logprob: -8.263116836547852
    4. '   ' → logprob: -9.138116836547852
    5. ' ' → logprob: -9.263116836547852
    6. ' ```' → logprob: -10.138116836547852
    7. '```' → logprob: -10.263116836547852
    8. ' input' → logprob: -11.263116836547852
    9. ' line' → logprob: -11.888116836547852
    10. ' ' → logprob: -12.263116836547852

Token 16: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08946380019187927
    2. '=' → logprob: -2.464463710784912
    3. ' ' → logprob: -8.21446418762207
    4. ',' → logprob: -8.83946418762207
    5. ')' → logprob: -9.83946418762207
    6. '.append' → logprob: -11.58946418762207
    7. '.' → logprob: -11.71446418762207
    8. '_' → logprob: -12.33946418762207
    9. '=int' → logprob: -12.33946418762207
    10. '=input' → logprob: -12.33946418762207

Token 17: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.14293506741523743
    2. ' y' → logprob: -2.017935037612915
    3. 'space' → logprob: -9.392934799194336
    4. ' ' → logprob: -9.517934799194336
    5. '=' → logprob: -10.142934799194336
    6. ' =' → logprob: -11.017934799194336
    7. '	y' → logprob: -11.642934799194336
    8. '<|end|>' → logprob: -11.892934799194336
    9. '  ' → logprob: -12.392934799194336
    10. '"' → logprob: -12.642934799194336

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5234577655792236
    2. '=' → logprob: -0.8984577655792236
    3. ',' → logprob: -8.148457527160645
    4. ')' → logprob: -10.398457527160645
    5. '=input' → logprob: -12.648457527160645
    6. ' ' → logprob: -13.023457527160645
    7. '<|end|>' → logprob: -13.023457527160645
    8. '   ' → logprob: -13.648457527160645
    9. '=int' → logprob: -14.148457527160645
    10. '    ' → logprob: -14.148457527160645

Token 19: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.011348191648721695
    2. 'map' → logprob: -4.511348247528076
    3. ' input' → logprob: -8.261347770690918
    4. 'input' → logprob: -10.261347770690918
    5. ' list' → logprob: -12.886347770690918
    6. ' ' → logprob: -13.136347770690918
    7. '	map' → logprob: -14.011347770690918
    8. '   ' → logprob: -15.011347770690918
    9. ' ' → logprob: -15.011347770690918
    10. 'int' → logprob: -15.136347770690918

Token 20: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00198787497356534
    2. '(' → logprob: -6.251987934112549
    3. '(str' → logprob: -10.62698745727539
    4. '(input' → logprob: -10.75198745727539
    5. '(lambda' → logprob: -12.25198745727539
    6. 'int' → logprob: -12.75198745727539
    7. '<int' → logprob: -13.00198745727539
    8. '(list' → logprob: -13.50198745727539
    9. '[int' → logprob: -13.75198745727539
    10. '(
' → logprob: -15.12698745727539

Token 21: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.1803579479455948
    2. ',' → logprob: -2.5553579330444336
    3. ',input' → logprob: -2.5553579330444336
    4. ')' → logprob: -5.430357933044434
    5. 'input' → logprob: -5.555357933044434
    6. '(' → logprob: -6.680357933044434
    7. ' input' → logprob: -9.055357933044434
    8. '=input' → logprob: -10.305357933044434
    9. '[input' → logprob: -11.555357933044434
    10. ' ,' → logprob: -11.805357933044434

Token 22: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1602395623922348
    2. ' input' → logprob: -1.910239577293396
    3. ')' → logprob: -11.410239219665527
    4. '(input' → logprob: -13.410239219665527
    5. ',input' → logprob: -14.035239219665527
    6. '=input' → logprob: -14.535239219665527
    7. ' ' → logprob: -14.785239219665527
    8. ' )' → logprob: -15.160239219665527
    9. '	input' → logprob: -15.285239219665527
    10. '<input' → logprob: -16.035240173339844

Token 23: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.0683535037969705e-05
    2. '()' → logprob: -11.62501049041748
    3. ' ().' → logprob: -14.12501049041748
    4. ')' → logprob: -14.50001049041748
    5. '())' → logprob: -14.75001049041748
    6. '.split' → logprob: -17.125011444091797
    7. '(' → logprob: -17.375011444091797
    8. '()
' → logprob: -17.875011444091797
    9. 'split' → logprob: -18.125011444091797
    10. '()))' → logprob: -18.125011444091797

Token 24: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0006054567056708038
    2. 'strip' → logprob: -7.500605583190918
    3. 'rstrip' → logprob: -10.000605583190918
    4. ')' → logprob: -12.000605583190918
    5. '(split' → logprob: -15.375605583190918
    6. ' split' → logprob: -15.750605583190918
    7. 's' → logprob: -15.750605583190918
    8. 'read' → logprob: -16.2506046295166
    9. ')s' → logprob: -16.8756046295166
    10. '.split' → logprob: -16.8756046295166

Token 25: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.021507250145077705
    2. ')' → logprob: -4.271507263183594
    3. '()' → logprob: -5.396507263183594
    4. '()))' → logprob: -6.146507263183594
    5. '))' → logprob: -7.646507263183594
    6. '())
' → logprob: -9.521507263183594
    7. '('' → logprob: -9.771507263183594
    8. '(' → logprob: -11.146507263183594
    9. '`)' → logprob: -12.271507263183594
    10. '')' → logprob: -12.521507263183594

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05846425145864487
    2. 'a' → logprob: -2.933464288711548
    3. '```' → logprob: -6.933464050292969
    4. '    
' → logprob: -7.183464050292969
    5. ')' → logprob: -7.933464050292969
    6. '<|end|>' → logprob: -8.183464050292969
    7. ' a' → logprob: -8.308464050292969
    8. '       ' → logprob: -8.808464050292969
    9. '    ' → logprob: -8.808464050292969
    10. ',' → logprob: -9.058464050292969

Token 27: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.08711997419595718
    2. '   ' → logprob: -2.5871200561523438
    3. ' a' → logprob: -4.837120056152344
    4. '```' → logprob: -9.712120056152344
    5. '    
' → logprob: -10.212120056152344
    6. '    ' → logprob: -10.337120056152344
    7. '	a' → logprob: -10.462120056152344
    8. ')' → logprob: -10.837120056152344
    9. '       ' → logprob: -11.087120056152344
    10. ' ' → logprob: -11.087120056152344

Token 28: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.004147257190197706
    2. '.' → logprob: -5.504147052764893
    3. '.app' → logprob: -10.25414752960205
    4. '.ap' → logprob: -10.87914752960205
    5. ' .' → logprob: -12.37914752960205
    6. '.p' → logprob: -13.00414752960205
    7. '​.' → logprob: -13.37914752960205
    8. '.Append' → logprob: -13.62914752960205
    9. '.push' → logprob: -13.87914752960205
    10. '.setdefault' → logprob: -14.25414752960205

Token 29: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.002522149821743369
    2. '(' → logprob: -6.002521991729736
    3. '(x' → logprob: -10.002522468566895
    4. '([' → logprob: -14.877522468566895
    5. '(
' → logprob: -15.127522468566895
    6. '(a' → logprob: -16.002521514892578
    7. '(((' → logprob: -16.627521514892578
    8. '```' → logprob: -16.627521514892578
    9. '()' → logprob: -17.127521514892578
    10. '(([' → logprob: -17.252521514892578

Token 30: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -9.088346359931165e-07
    2. ' x' → logprob: -14.125000953674316
    3. '(x' → logprob: -16.875
    4. ')x' → logprob: -17.875
    5. '   ' → logprob: -18.25
    6. 'i' → logprob: -18.375
    7. '"x' → logprob: -18.875
    8. ')' → logprob: -19.25
    9. ''x' → logprob: -20.25
    10. '	x' → logprob: -20.375

Token 31: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.992775888647884e-05
    2. ',y' → logprob: -9.750069618225098
    3. ' ,' → logprob: -11.625069618225098
    4. ',
' → logprob: -13.625069618225098
    5. '‌,' → logprob: -15.125069618225098
    6. ',

' → logprob: -15.375069618225098
    7. ',)' → logprob: -15.750069618225098
    8. ')' → logprob: -16.000070571899414
    9. '',' → logprob: -16.125070571899414
    10. '`,' → logprob: -16.125070571899414

Token 32: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3132634460926056
    2. ' y' → logprob: -1.3132634162902832
    3. ' ' → logprob: -13.813263893127441
    4. ')y' → logprob: -15.813263893127441
    5. '	y' → logprob: -15.938263893127441
    6. ')' → logprob: -16.563262939453125
    7. ' ' → logprob: -16.563262939453125
    8. ',' → logprob: -17.188262939453125
    9. '   ' → logprob: -17.563262939453125
    10. ',y' → logprob: -17.688262939453125

Token 33: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0619967095553875
    2. ')' → logprob: -2.8119966983795166
    3. '))
' → logprob: -10.811996459960938
    4. ')))' → logprob: -12.061996459960938
    5. ')
' → logprob: -13.561996459960938
    6. '),' → logprob: -13.936996459960938
    7. ' ))' → logprob: -14.936996459960938
    8. ''))' → logprob: -15.311996459960938
    9. '))

' → logprob: -16.686996459960938
    10. '   ' → logprob: -16.811996459960938

Token 34: 't' (ID: 83)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1397174745798111
    2. '```' → logprob: -3.1397175788879395
    3. 'for' → logprob: -3.7647175788879395
    4. '
' → logprob: -4.1397175788879395
    5. 'sorted' → logprob: -4.7647175788879395
    6. 's' → logprob: -4.7647175788879395
    7. '\n' → logprob: -4.8897175788879395
    8. 'n' → logprob: -5.2647175788879395
    9. '\' → logprob: -5.6397175788879395
    10. 'result' → logprob: -5.7647175788879395

Token 35: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1552854776382446
    2. ' =' → logprob: -1.1552854776382446
    3. '.' → logprob: -2.030285358428955
    4. 'arget' → logprob: -3.030285358428955
    5. '.sort' → logprob: -3.155285358428955
    6. 'h' → logprob: -3.530285358428955
    7. 'o' → logprob: -3.655285358428955
    8. 'a' → logprob: -4.155285358428955
    9. '.a' → logprob: -4.530285358428955
    10. 'he' → logprob: -4.780285358428955

Token 36: ' set' (ID: 920)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.246256709098816
    2. ' int' → logprob: -1.371256709098816
    3. ' []' → logprob: -2.1212568283081055
    4. '[]' → logprob: -2.3712568283081055
    5. 'a' → logprob: -2.7462568283081055
    6. ' a' → logprob: -3.2462568283081055
    7. 'sorted' → logprob: -3.6212568283081055
    8. 'n' → logprob: -3.9962568283081055
    9. '[int' → logprob: -3.9962568283081055
    10. ' sorted' → logprob: -4.3712568283081055

Token 37: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.26461437344551086
    2. '(a' → logprob: -1.8896143436431885
    3. '()' → logprob: -2.5146143436431885
    4. '((' → logprob: -8.01461410522461
    5. 'a' → logprob: -10.63961410522461
    6. ' (' → logprob: -11.01461410522461
    7. '())' → logprob: -11.13961410522461
    8. '([' → logprob: -11.13961410522461
    9. '(
' → logprob: -11.76461410522461
    10. ' ()' → logprob: -11.76461410522461

Token 38: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003183182328939438
    2. '))' → logprob: -5.753183364868164
    3. ')))' → logprob: -13.003183364868164
    4. ' )' → logprob: -14.003183364868164
    5. '])' → logprob: -14.878183364868164
    6. ')
' → logprob: -15.003183364868164
    7. '())' → logprob: -15.253183364868164
    8. '`)' → logprob: -15.503183364868164
    9. ')a' → logprob: -15.628183364868164
    10. ')`' → logprob: -16.003183364868164

Token 39: 'assert' (ID: 3940)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7484368085861206
    2. 'print' → logprob: -1.1234368085861206
    3. 'if' → logprob: -2.49843692779541
    4. 'for' → logprob: -3.12343692779541
    5. '.' → logprob: -3.87343692779541
    6. 's' → logprob: -4.49843692779541
    7. '<|end|>' → logprob: -4.49843692779541
    8. 'a' → logprob: -5.37343692779541
    9. 't' → logprob: -5.74843692779541
    10. ',' → logprob: -5.87343692779541

Token 40: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.004030195530503988
    2. 'len' → logprob: -6.004030227661133
    3. '(len' → logprob: -6.504030227661133
    4. ' (' → logprob: -11.129030227661133
    5. '(' → logprob: -11.254030227661133
    6. ' ' → logprob: -11.629030227661133
    7. ' n' → logprob: -12.129030227661133
    8. ' t' → logprob: -12.254030227661133
    9. ' a' → logprob: -12.504030227661133
    10. ' l' → logprob: -13.254030227661133

Token 41: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.062076136469841
    2. '(' → logprob: -2.8120760917663574
    3. '(a' → logprob: -9.312076568603516
    4. '(s' → logprob: -12.187076568603516
    5. ' (' → logprob: -12.187076568603516
    6. '(n' → logprob: -12.187076568603516
    7. '(
' → logprob: -14.187076568603516
    8. '(

' → logprob: -14.937076568603516
    9. '(tt' → logprob: -15.062076568603516
    10. '(x' → logprob: -15.062076568603516

Token 42: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0018712825840339065
    2. ')==' → logprob: -6.876871109008789
    3. '==' → logprob: -7.751871109008789
    4. ' )' → logprob: -8.251871109008789
    5. ' ==' → logprob: -8.876871109008789
    6. ')=' → logprob: -13.251871109008789
    7. '=' → logprob: -13.376871109008789
    8. '()' → logprob: -14.501871109008789
    9. ')<=' → logprob: -14.501871109008789
    10. ')!=' → logprob: -14.626871109008789

Token 43: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.42642730474472046
    2. '==' → logprob: -1.4264273643493652
    3. '>' → logprob: -2.5514273643493652
    4. ' >' → logprob: -3.9264273643493652
    5. ')' → logprob: -5.801427364349365
    6. '<|end|>' → logprob: -6.676427364349365
    7. '>=' → logprob: -6.926427364349365
    8. ' >=' → logprob: -7.176427364349365
    9. ' <=' → logprob: -7.176427364349365
    10. '=' → logprob: -7.801427364349365

Token 44: ' len' (ID: 4631)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.09784254431724548
    2. 'len' → logprob: -2.9728424549102783
    3. ' n' → logprob: -3.3478424549102783
    4. ' len' → logprob: -5.472842693328857
    5. '2' → logprob: -7.097842693328857
    6. '4' → logprob: -7.347842693328857
    7. ' ' → logprob: -7.472842693328857
    8. '1' → logprob: -8.2228422164917
    9. '3' → logprob: -8.4728422164917
    10. '6' → logprob: -9.9728422164917

Token 45: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.001119499676860869
    2. '(n' → logprob: -7.376119613647461
    3. '(' → logprob: -8.251119613647461
    4. '(t' → logprob: -8.376119613647461
    5. '(s' → logprob: -14.001119613647461
    6. ' (' → logprob: -15.376119613647461
    7. 'a' → logprob: -15.751119613647461
    8. '(
' → logprob: -15.876119613647461
    9. '(x' → logprob: -16.12611961364746
    10. '(i' → logprob: -18.37611961364746

Token 46: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.117345684382599e-05
    2. '))' → logprob: -10.875020980834961
    3. '),' → logprob: -14.375020980834961
    4. ')
' → logprob: -14.750020980834961
    5. ' )' → logprob: -15.375020980834961
    6. ')#' → logprob: -15.750020980834961
    7. ')")' → logprob: -15.750020980834961
    8. ')a' → logprob: -16.00002098083496
    9. ')`' → logprob: -16.25002098083496
    10. ')t' → logprob: -16.37502098083496

Token 47: 'min' (ID: 1493)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 48: 'ans' (ID: 616)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.05190157890319824
    2. '_' → logprob: -3.5519015789031982
    3. 'x' → logprob: -4.551901817321777
    4. '(' → logprob: -5.301901817321777
    5. '_val' → logprob: -5.426901817321777
    6. '_dist' → logprob: -8.051901817321777
    7. '_a' → logprob: -8.551901817321777
    8. '_point' → logprob: -8.801901817321777
    9. 's' → logprob: -8.801901817321777
    10. '(x' → logprob: -8.926901817321777

Token 49: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4883064925670624
    2. '=' → logprob: -1.2383065223693848
    3. '_' → logprob: -2.3633065223693848
    4. 's' → logprob: -6.863306522369385
    5. ',' → logprob: -7.863306522369385
    6. '_x' → logprob: -8.238306045532227
    7. '_=' → logprob: -8.238306045532227
    8. '_val' → logprob: -9.613306045532227
    9. 'x' → logprob: -9.613306045532227
    10. '1' → logprob: -9.988306045532227

Token 50: ' ' (ID: 220)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.5819629430770874
    2. '10' → logprob: -1.0819629430770874
    3. ' float' → logprob: -2.831963062286377
    4. '100' → logprob: -3.831963062286377
    5. ' ' → logprob: -5.581963062286377
    6. '1' → logprob: -5.581963062286377
    7. 'min' → logprob: -5.706963062286377
    8. '0' → logprob: -5.956963062286377
    9. 'max' → logprob: -6.081963062286377
    10. 'int' → logprob: -6.581963062286377

Token 51: '100' (ID: 1353)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.3278786242008209
    2. '10' → logprob: -1.3278785943984985
    3. 'min' → logprob: -5.202878475189209
    4. '100' → logprob: -5.452878475189209
    5. 'max' → logprob: -6.827878475189209
    6. '1' → logprob: -6.827878475189209
    7. 'int' → logprob: -6.827878475189209
    8. ' float' → logprob: -8.327878952026367
    9. '0' → logprob: -8.452878952026367
    10. 'n' → logprob: -8.577878952026367

Token 52: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.45195478200912476
    2. '0' → logprob: -1.2019548416137695
    3. '00' → logprob: -3.4519548416137695
    4. 'min' → logprob: -3.9519548416137695
    5. 'int' → logprob: -6.0769548416137695
    6. '10' → logprob: -6.4519548416137695
    7. ' ' → logprob: -6.9519548416137695
    8. '1' → logprob: -7.2019548416137695
    9. '**' → logprob: -7.2019548416137695
    10. '001' → logprob: -7.3269548416137695

Token 53: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.5026333928108215
    2. '0' → logprob: -1.0026333332061768
    3. '00' → logprob: -3.6276333332061768
    4. ' ' → logprob: -7.002633571624756
    5. '_' → logprob: -8.877633094787598
    6. '+' → logprob: -9.627633094787598
    7. ')' → logprob: -9.752633094787598
    8. '[]' → logprob: -10.002633094787598
    9. '```' → logprob: -10.002633094787598
    10. '  ' → logprob: -10.127633094787598

Token 54: '000' (ID: 1302)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6387136578559875
    2. '0' → logprob: -2.0137135982513428
    3. 'for' → logprob: -2.0137135982513428
    4. '<|end|>' → logprob: -2.1387135982513428
    5. '\' → logprob: -3.8887135982513428
    6. ' 
' → logprob: -4.388713836669922
    7. '\n' → logprob: -4.638713836669922
    8. '000' → logprob: -4.638713836669922
    9. ' for' → logprob: -4.888713836669922
    10. '' → logprob: -5.388713836669922

Token 55: '0' (ID: 15)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.31297484040260315
    2. 'for' → logprob: -1.5629748106002808
    3. '0' → logprob: -4.06297492980957
    4. '\n' → logprob: -4.31297492980957
    5. '\' → logprob: -4.81297492980957
    6. '<|end|>' → logprob: -4.93797492980957
    7. ' for' → logprob: -5.43797492980957
    8. '' → logprob: -5.93797492980957
    9. ' 
' → logprob: -6.18797492980957
    10. '
' → logprob: -7.18797492980957

Token 56: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.58418208360672
    2. '<|end|>' → logprob: -0.95918208360672
    3. '\n' → logprob: -3.959182024002075
    4. ' 
' → logprob: -4.334182262420654
    5. 'for' → logprob: -4.834182262420654
    6. '\' → logprob: -5.084182262420654
    7. '' → logprob: -5.709182262420654
    8. ' for' → logprob: -5.834182262420654
    9. ' ' → logprob: -6.459182262420654
    10. '  
' → logprob: -6.584182262420654

Token 57: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013752772472798824
    2. ' for' → logprob: -4.6387529373168945
    3. ':' → logprob: -7.0137529373168945
    4. '
' → logprob: -7.2637529373168945
    5. '\' → logprob: -7.2637529373168945
    6. '\n' → logprob: -7.5137529373168945
    7. 'a' → logprob: -7.7637529373168945
    8. ',' → logprob: -8.513752937316895
    9. 'n' → logprob: -9.263752937316895
    10. '.' → logprob: -9.763752937316895

Token 58: ' =' (ID: 314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.012336932122707367
    2. '=' → logprob: -5.137336730957031
    3. ' =' → logprob: -5.762336730957031
    4. ',' → logprob: -6.637336730957031
    5. ' n' → logprob: -7.012336730957031
    6. ' ' → logprob: -8.012336730957031
    7. 'nt' → logprob: -8.012336730957031
    8. 'f' → logprob: -9.387336730957031
    9. 's' → logprob: -9.387336730957031
    10. 'nd' → logprob: -9.512336730957031

Token 59: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007910151034593582
    2. ' ' → logprob: -4.882910251617432
    3. '1' → logprob: -8.132909774780273
    4. '-' → logprob: -12.132909774780273
    5. ' -' → logprob: -13.382909774780273
    6. '2' → logprob: -13.757909774780273
    7. '  ' → logprob: -14.757909774780273
    8. '   ' → logprob: -15.007909774780273
    9. 'n' → logprob: -15.070409774780273
    10. '3' → logprob: -15.445409774780273

Token 60: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007232757634483278
    2. ' ' → logprob: -8.000722885131836
    3. '1' → logprob: -8.125722885131836
    4. '-' → logprob: -9.500722885131836
    5. '2' → logprob: -12.250722885131836
    6. 'len' → logprob: -12.875722885131836
    7. 'n' → logprob: -13.125722885131836
    8. 'min' → logprob: -13.500722885131836
    9. '(' → logprob: -13.750722885131836
    10. '100' → logprob: -13.875722885131836

Token 61: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.9385883808135986
    2. '<|end|>' → logprob: -1.3135883808135986
    3. ' while' → logprob: -1.4385883808135986
    4. '
' → logprob: -2.4385883808135986
    5. ' ' → logprob: -5.1885881423950195
    6. '<|end|>' → logprob: -6.0635881423950195
    7. ',' → logprob: -6.3135881423950195
    8. 'for' → logprob: -6.9385881423950195
    9. ' 
' → logprob: -7.4385881423950195
    10. 'i' → logprob: -7.5635881423950195

Token 62: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.8459623456001282
    2. '
' → logprob: -1.2209622859954834
    3. ' while' → logprob: -1.9709622859954834
    4. '<|end|>' → logprob: -2.0959622859954834
    5. 'for' → logprob: -5.3459625244140625
    6. ',' → logprob: -6.2209625244140625
    7. 'n' → logprob: -6.4709625244140625
    8. ' ' → logprob: -6.5959625244140625
    9. '<|end|>' → logprob: -7.0959625244140625
    10. ' for' → logprob: -7.3459625244140625

Token 63: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07017206400632858
    2. 'i' → logprob: -2.695172071456909
    3. ' True' → logprob: -8.820172309875488
    4. 'True' → logprob: -9.820172309875488
    5. '(i' → logprob: -11.070172309875488
    6. ' ' → logprob: -11.445172309875488
    7. '	i' → logprob: -13.195172309875488
    8. ' len' → logprob: -14.070172309875488
    9. '```' → logprob: -14.445172309875488
    10. 'n' → logprob: -14.695172309875488

Token 64: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6489992141723633
    2. ' <' → logprob: -0.7739992141723633
    3. '<len' → logprob: -4.148999214172363
    4. '<n' → logprob: -7.773999214172363
    5. ' ' → logprob: -9.898999214172363
    6. 'len' → logprob: -12.523999214172363
    7. ' len' → logprob: -12.648999214172363
    8. '<size' → logprob: -13.023999214172363
    9. '<=' → logprob: -13.398999214172363
    10. '<num' → logprob: -14.023999214172363

Token 65: ' n' (ID: 297)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.7972185611724854
    2. 'n' → logprob: -1.0472185611724854
    3. ' n' → logprob: -2.0472185611724854
    4. ' len' → logprob: -2.6722185611724854
    5. ' ' → logprob: -8.422218322753906
    6. '(len' → logprob: -10.922218322753906
    7. '(' → logprob: -11.547218322753906
    8. 'l' → logprob: -11.547218322753906
    9. '   ' → logprob: -11.922218322753906
    10. '  ' → logprob: -12.047218322753906

Token 66: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00037228144356049597
    2. ':
' → logprob: -8.500371932983398
    3. ' :' → logprob: -9.750371932983398
    4. '+' → logprob: -10.500371932983398
    5. ' and' → logprob: -10.500371932983398
    6. '-' → logprob: -10.750371932983398
    7. '+:' → logprob: -11.125371932983398
    8. 'and' → logprob: -11.625371932983398
    9. '):' → logprob: -13.250371932983398
    10. ' ' → logprob: -13.250371932983398

Token 67: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04669136926531792
    2. ':' → logprob: -3.796691417694092
    3. '    ' → logprob: -5.046691417694092
    4. ' ' → logprob: -5.171691417694092
    5. 'j' → logprob: -6.171691417694092
    6. ',' → logprob: -6.421691417694092
    7. '<|end|>' → logprob: -6.796691417694092
    8. '+' → logprob: -7.171691417694092
    9. '    
' → logprob: -7.546691417694092
    10. ' :' → logprob: -7.546691417694092

Token 68: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.7163528800010681
    2. 'j' (adapté à ' j') → logprob: -0.9663528800010681
    3. '   ' → logprob: -2.466352939605713
    4. '    ' → logprob: -4.466352939605713
    5. ' if' → logprob: -4.466352939605713
    6. ' for' → logprob: -4.716352939605713
    7. 'x' → logprob: -5.966352939605713
    8. ' x' → logprob: -5.966352939605713
    9. 'if' → logprob: -6.466352939605713
    10. ' ' → logprob: -6.841352939605713

Token 69: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008852696977555752
    2. '=' → logprob: -4.758852481842041
    3. '=i' → logprob: -8.3838529586792
    4. '   ' → logprob: -12.2588529586792
    5. ' ' → logprob: -13.1338529586792
    6. '=j' → logprob: -14.1338529586792
    7. ')' → logprob: -14.6338529586792
    8. ' +=' → logprob: -14.6338529586792
    9. '=int' → logprob: -15.8838529586792
    10. '<|end|>' → logprob: -15.8838529586792

Token 70: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2101871222257614
    2. ' i' → logprob: -1.7101870775222778
    3. '0' → logprob: -4.835186958312988
    4. ' ' → logprob: -7.835186958312988
    5. '1' → logprob: -8.335186958312988
    6. 'n' → logprob: -9.710186958312988
    7. ' n' → logprob: -10.210186958312988
    8. '   ' → logprob: -10.835186958312988
    9. '(i' → logprob: -12.210186958312988
    10. 'j' → logprob: -12.335186958312988

Token 71: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10024873167276382
    2. ' +' → logprob: -2.3502488136291504
    3. '+i' → logprob: -10.350248336791992
    4. '+
' → logprob: -12.725248336791992
    5. '+j' → logprob: -12.975248336791992
    6. '   ' → logprob: -13.350248336791992
    7. '1' → logprob: -14.100248336791992
    8. '+n' → logprob: -14.225248336791992
    9. ' +
' → logprob: -14.350248336791992
    10. ' ' → logprob: -15.850248336791992

Token 72: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00036502102739177644
    2. ' ' → logprob: -8.250365257263184
    3. '2' → logprob: -9.250365257263184
    4. '3' → logprob: -12.125365257263184
    5. '4' → logprob: -13.875365257263184
    6. '   ' → logprob: -14.812865257263184
    7. '100' → logprob: -16.125364303588867
    8. '<|end|>' → logprob: -16.375364303588867
    9. 'n' → logprob: -16.625364303588867
    10. '10' → logprob: -16.750364303588867

Token 73: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.004696090007201e-05
    2. '2' → logprob: -9.875069618225098
    3. ' ' → logprob: -11.250069618225098
    4. '3' → logprob: -12.875069618225098
    5. 'i' → logprob: -14.250069618225098
    6. '4' → logprob: -14.375069618225098
    7. 'n' → logprob: -14.812569618225098
    8. '<|end|>' → logprob: -15.187569618225098
    9. '100' → logprob: -15.812569618225098
    10. '   ' → logprob: -16.000070571899414

Token 74: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 75: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 76: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.16724450886249542
    2. ' while' → logprob: -2.4172444343566895
    3. '<|end|>' → logprob: -2.9172444343566895
    4. '
' → logprob: -6.0422444343566895
    5. 'and' → logprob: -6.0422444343566895
    6. '<' → logprob: -6.7922444343566895
    7. ' ' → logprob: -7.0422444343566895
    8. ' <' → logprob: -7.0422444343566895
    9. '   ' → logprob: -7.4172444343566895
    10. '<|end|>' → logprob: -7.9172444343566895

Token 77: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.08328733593225479
    2. 'j' → logprob: -2.583287239074707
    3. ' n' → logprob: -5.583287239074707
    4. 'n' → logprob: -7.458287239074707
    5. ' ' → logprob: -10.333287239074707
    6. '   ' → logprob: -12.083287239074707
    7. '<n' → logprob: -12.958287239074707
    8. '    ' → logprob: -13.083287239074707
    9. ' <' → logprob: -13.333287239074707
    10. '	j' → logprob: -13.458287239074707

Token 78: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3166659474372864
    2. '<' → logprob: -1.3166658878326416
    3. '<n' → logprob: -5.691666126251221
    4. '<len' → logprob: -11.566665649414062
    5. ' ' → logprob: -12.066665649414062
    6. ' <=' → logprob: -12.191665649414062
    7. '<=' → logprob: -12.941665649414062
    8. '<N' → logprob: -14.691665649414062
    9. '<num' → logprob: -15.191665649414062
    10. '<m' → logprob: -15.691665649414062

Token 79: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.009770727716386318
    2. ' n' → logprob: -4.63477087020874
    3. ' ' → logprob: -11.884770393371582
    4. '   ' → logprob: -12.134770393371582
    5. 'i' → logprob: -13.634770393371582
    6. '  ' → logprob: -14.259770393371582
    7. '	n' → logprob: -15.009770393371582
    8. '    ' → logprob: -16.7597713470459
    9. ' i' → logprob: -16.7597713470459
    10. '(n' → logprob: -17.0097713470459

Token 80: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.45736929774284363
    2. ' and' → logprob: -1.207369327545166
    3. ':
' → logprob: -3.082369327545166
    4. 'and' → logprob: -3.957369327545166
    5. '   ' → logprob: -5.832369327545166
    6. ')' → logprob: -10.207368850708008
    7. '):' → logprob: -10.332368850708008
    8. '):
' → logprob: -10.582368850708008
    9. ' ' → logprob: -10.832368850708008
    10. '       ' → logprob: -11.082368850708008

Token 81: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17757321894168854
    2. ':' → logprob: -2.8025732040405273
    3. ' and' → logprob: -2.8025732040405273
    4. '<|end|>' → logprob: -3.9275732040405273
    5. ' ' → logprob: -4.677573204040527
    6. '   ' → logprob: -5.427573204040527
    7. ',' → logprob: -5.927573204040527
    8. '    ' → logprob: -6.552573204040527
    9. ':
' → logprob: -6.677573204040527
    10. ' if' → logprob: -7.177573204040527

Token 82: ' r' (ID: 428)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7140949964523315
    2. ' if' → logprob: -0.8390949964523315
    3. ' ' → logprob: -2.964095115661621
    4. '       ' → logprob: -4.839095115661621
    5. 'if' → logprob: -5.214095115661621
    6. ' and' → logprob: -5.464095115661621
    7. ',' → logprob: -6.714095115661621
    8. '        ' → logprob: -6.839095115661621
    9. ' 
' → logprob: -6.839095115661621
    10. '   ' → logprob: -7.339095115661621

Token 83: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02525295875966549
    2. '=' → logprob: -3.9002530574798584
    3. ' ' → logprob: -6.775252819061279
    4. 'a' → logprob: -7.025252819061279
    5. '1' → logprob: -7.650252819061279
    6. '2' → logprob: -7.775252819061279
    7. 'e' → logprob: -8.025253295898438
    8. 'x' → logprob: -8.400253295898438
    9. 'ight' → logprob: -8.775253295898438
    10. '0' → logprob: -9.400253295898438

Token 84: ' set' (ID: 920)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.14924360811710358
    2. '(a' → logprob: -2.2742435932159424
    3. ' abs' → logprob: -4.5242438316345215
    4. '(abs' → logprob: -5.5242438316345215
    5. ' max' → logprob: -5.7742438316345215
    6. 'abs' → logprob: -5.8992438316345215
    7. '((' → logprob: -5.8992438316345215
    8. ' ((' → logprob: -6.0242438316345215
    9. 'a' → logprob: -6.3992438316345215
    10. ' ' → logprob: -6.5242438316345215

Token 85: '(t' (ID: 2025)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.20033110678195953
    2. '([(' → logprob: -2.575331211090088
    3. '(a' → logprob: -2.825331211090088
    4. '((' → logprob: -3.825331211090088
    5. '([' → logprob: -4.200331211090088
    6. '()
' → logprob: -5.825331211090088
    7. '(((' → logprob: -5.950331211090088
    8. '({' → logprob: -6.950331211090088
    9. '(range' → logprob: -7.325331211090088
    10. 'a' → logprob: -7.450331211090088

Token 86: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01877019926905632
    2. ')
' → logprob: -4.268770217895508
    3. '-' → logprob: -6.768770217895508
    4. ' -' → logprob: -7.143770217895508
    5. ' )' → logprob: -7.518770217895508
    6. ')-' → logprob: -7.643770217895508
    7. ' &' → logprob: -8.143770217895508
    8. '&' → logprob: -8.143770217895508
    9. ').' → logprob: -8.768770217895508
    10. '|' → logprob: -9.143770217895508

Token 87: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6104116439819336
    2. '-' → logprob: -1.4854116439819336
    3. ' -' → logprob: -2.3604116439819336
    4. '<|end|>' → logprob: -3.1104116439819336
    5. ')' → logprob: -3.4854116439819336
    6. '.copy' → logprob: -3.8604116439819336
    7. '        ' → logprob: -4.610411643981934
    8. '.remove' → logprob: -4.735411643981934
    9. '        
' → logprob: -5.235411643981934
    10. '()' → logprob: -6.235411643981934

Token 88: ' p' (ID: 275)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.26930496096611023
    2. '       ' → logprob: -2.0193049907684326
    3. ' -' → logprob: -3.2693049907684326
    4. 'r' → logprob: -4.5193047523498535
    5. '-
' → logprob: -4.5193047523498535
    6. ' &' → logprob: -5.0193047523498535
    7. ' r' → logprob: -5.1443047523498535
    8. '        
' → logprob: -5.2693047523498535
    9. ' -
' → logprob: -5.6443047523498535
    10. '.remove' → logprob: -5.8943047523498535

Token 89: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.18120962381362915
    2. ' =' → logprob: -2.6812095642089844
    3. '.' → logprob: -3.4312095642089844
    4. 'rocessing' → logprob: -4.931209564208984
    5. '=' → logprob: -5.181209564208984
    6. 'os' → logprob: -5.306209564208984
    7. 'ro' → logprob: -5.431209564208984
    8. 'ivot' → logprob: -5.556209564208984
    9. 'osition' → logprob: -5.806209564208984
    10. '.remove' → logprob: -5.806209564208984

Token 90: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9918684959411621
    2. '{' → logprob: -1.616868495941162
    3. '0' → logprob: -1.741868495941162
    4. '[]' → logprob: -2.616868495941162
    5. 'r' → logprob: -3.116868495941162
    6. '(a' → logprob: -3.616868495941162
    7. '(' → logprob: -3.991868495941162
    8. 'len' → logprob: -4.241868495941162
    9. 'abs' → logprob: -4.616868495941162
    10. ' ' → logprob: -4.991868495941162

Token 91: '[i' (ID: 1768)
  Prédit: '[:]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.17644326388835907
    2. '[i' → logprob: -2.301443338394165
    3. '[:' → logprob: -2.926443338394165
    4. '[j' → logprob: -5.426443099975586
    5. '[' → logprob: -5.676443099975586
    6. '.copy' → logprob: -8.801443099975586
    7. '[]' → logprob: -10.551443099975586
    8. '<|end|>' → logprob: -11.801443099975586
    9. '[
' → logprob: -12.301443099975586
    10. '[s' → logprob: -12.301443099975586

Token 92: '][' (ID: 2696)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.7007961273193359
    2. ']' → logprob: -0.9507961273193359
    3. '][' → logprob: -2.450796127319336
    4. ')' → logprob: -4.200796127319336
    5. '])
' → logprob: -5.200796127319336
    6. '[' → logprob: -5.450796127319336
    7. ']
' → logprob: -5.950796127319336
    8. '[j' → logprob: -7.825796127319336
    9. '])[' → logprob: -7.950796127319336
    10. '],' → logprob: -8.075796127319336

Token 93: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020639756694436073
    2. '1' → logprob: -3.895639657974243
    3. ']' → logprob: -10.645639419555664
    4. ' ' → logprob: -10.958139419555664
    5. ':]' → logprob: -10.958139419555664
    6. ':' → logprob: -11.895639419555664
    7. '::-' → logprob: -12.083139419555664
    8. '०' → logprob: -13.520639419555664
    9. '۰' → logprob: -13.770639419555664
    10. '   ' → logprob: -13.895639419555664

Token 94: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11065924167633057
    2. ']+' → logprob: -2.610659122467041
    3. ']-' → logprob: -3.610659122467041
    4. '])' → logprob: -6.485659122467041
    5. '],' → logprob: -6.485659122467041
    6. ']*' → logprob: -8.3606595993042
    7. ' ]' → logprob: -8.7356595993042
    8. ']^' → logprob: -8.7356595993042
    9. ']==' → logprob: -8.8606595993042
    10. '])-' → logprob: -9.3606595993042

Token 95: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6418837904930115
    2. '<|end|>' → logprob: -1.2668838500976562
    3. ' +' → logprob: -2.5168838500976562
    4. '-' → logprob: -2.5168838500976562
    5. ' -' → logprob: -4.016883850097656
    6. '+p' → logprob: -5.016883850097656
    7. ',' → logprob: -6.516883850097656
    8. '+r' → logprob: -6.641883850097656
    9. '+x' → logprob: -7.391883850097656
    10. ' ' → logprob: -7.766883850097656

Token 96: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0022772925440222025
    2. ' a' → logprob: -6.127277374267578
    3. 'x' → logprob: -10.002277374267578
    4. 't' → logprob: -11.252277374267578
    5. '(a' → logprob: -11.502277374267578
    6. '	a' → logprob: -12.877277374267578
    7. ')a' → logprob: -13.002277374267578
    8. 'r' → logprob: -13.127277374267578
    9. '<|end|>' → logprob: -13.127277374267578
    10. '1' → logprob: -13.127277374267578

Token 97: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.04882591962814331
    2. 'j' → logprob: -3.048825979232788
    3. '[i' → logprob: -9.048826217651367
    4. ' j' → logprob: -9.798826217651367
    5. '[' → logprob: -10.298826217651367
    6. 'i' → logprob: -11.298826217651367
    7. '	j' → logprob: -11.798826217651367
    8. 'p' → logprob: -13.298826217651367
    9. '```' → logprob: -13.548826217651367
    10. 'a' → logprob: -13.798826217651367

Token 98: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.01870807260274887
    2. '[' → logprob: -4.018708229064941
    3. '>[' → logprob: -8.643708229064941
    4. ']' → logprob: -9.268708229064941
    5. ''][' → logprob: -9.768708229064941
    6. '"][' → logprob: -10.018708229064941
    7. ')[' → logprob: -10.393708229064941
    8. '}[' → logprob: -10.581208229064941
    9. '0' → logprob: -10.831208229064941
    10. ''[' → logprob: -11.268708229064941

Token 99: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.5014188799541444e-05
    2. ' ' → logprob: -10.125044822692871
    3. '1' → logprob: -13.125044822692871
    4. '[' → logprob: -13.625044822692871
    5. '<|end|>' → logprob: -14.812544822692871
    6. '<|end|>' → logprob: -15.625044822692871
    7. ']' → logprob: -15.687544822692871
    8. '۰' → logprob: -16.000045776367188
    9. '```' → logprob: -16.000045776367188
    10. '][' → logprob: -16.125045776367188

Token 100: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.42122548818588257
    2. '<|end|>' → logprob: -1.4212255477905273
    3. ')**' → logprob: -2.6712255477905273
    4. ',' → logprob: -3.6712255477905273
    5. '),' → logprob: -6.421225547790527
    6. ' ,' → logprob: -6.796225547790527
    7. '<|end|>' → logprob: -6.796225547790527
    8. ' )' → logprob: -6.921225547790527
    9. ']' → logprob: -6.921225547790527
    10. '
' → logprob: -7.921225547790527

Token 101: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 102: ' q' (ID: 2335)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32962673902511597
    2. ')**' → logprob: -2.5796267986297607
    3. '**' → logprob: -2.8296267986297607
    4. 'p' → logprob: -2.8296267986297607
    5. '2' → logprob: -3.4546267986297607
    6. ')p' → logprob: -4.329626560211182
    7. '       ' → logprob: -4.829626560211182
    8. '<|end|>' → logprob: -4.954626560211182
    9. '*p' → logprob: -5.204626560211182
    10. ' ' → logprob: -5.454626560211182

Token 103: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193214416503906
    2. '=' → logprob: -1.501932144165039
    3. ' ' → logprob: -13.376932144165039
    4. ',' → logprob: -13.751932144165039
    5. ')' → logprob: -16.12693214416504
    6. '        ' → logprob: -16.75193214416504
    7. '=q' → logprob: -16.87693214416504
    8. '   ' → logprob: -17.12693214416504
    9. '=p' → logprob: -17.25193214416504
    10. 'p' → logprob: -17.37693214416504

Token 104: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.28116169571876526
    2. ' a' → logprob: -1.4061616659164429
    3. 't' → logprob: -12.781161308288574
    4. ' t' → logprob: -13.156161308288574
    5. 'p' → logprob: -13.281161308288574
    6. ' ' → logprob: -13.781161308288574
    7. '	a' → logprob: -13.906161308288574
    8. ' p' → logprob: -14.031161308288574
    9. '   ' → logprob: -14.781161308288574
    10. '(a' → logprob: -14.781161308288574

Token 105: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.018380779772996902
    2. '[j' → logprob: -4.018380641937256
    3. '[' → logprob: -8.643381118774414
    4. '[q' → logprob: -10.018381118774414
    5. 'i' → logprob: -12.268381118774414
    6. '][' → logprob: -13.268381118774414
    7. 'j' → logprob: -14.268381118774414
    8. '[p' → logprob: -14.893381118774414
    9. '[I' → logprob: -15.018381118774414
    10. '[a' → logprob: -15.393381118774414

Token 106: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.07061704248189926
    2. '[' → logprob: -2.6956169605255127
    3. ')[' → logprob: -8.445616722106934
    4. '"][' → logprob: -9.320616722106934
    5. ' ][' → logprob: -9.445616722106934
    6. ''][' → logprob: -9.695616722106934
    7. '>[' → logprob: -9.945616722106934
    8. '}[' → logprob: -9.945616722106934
    9. '   ' → logprob: -10.070616722106934
    10. ']' → logprob: -10.320616722106934

Token 107: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2014726996421814
    2. '0' → logprob: -1.7014727592468262
    3. '[' → logprob: -9.951472282409668
    4. ' ' → logprob: -12.326472282409668
    5. '][' → logprob: -12.576472282409668
    6. ']' → logprob: -14.076472282409668
    7. '```' → logprob: -14.701472282409668
    8. '
' → logprob: -14.701472282409668
    9. '   ' → logprob: -14.826472282409668
    10. '<|end|>' → logprob: -14.951472282409668

Token 108: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.26570960879325867
    2. '-' → logprob: -1.515709638595581
    3. ']' → logprob: -4.390709400177002
    4. ')' → logprob: -7.140709400177002
    5. ' ' → logprob: -8.39070987701416
    6. '<|end|>' → logprob: -8.89070987701416
    7. ']-' → logprob: -9.76570987701416
    8. '   ' → logprob: -11.39070987701416
    9. '        ' → logprob: -11.76570987701416
    10. '']' → logprob: -12.01570987701416

Token 109: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.31327712535858154
    2. ' -' → logprob: -1.3132771253585815
    3. ' ' → logprob: -11.813277244567871
    4. '-q' → logprob: -12.563277244567871
    5. '<|end|>' → logprob: -13.063277244567871
    6. '   ' → logprob: -14.938277244567871
    7. '        ' → logprob: -15.313277244567871
    8. '–' → logprob: -15.438277244567871
    9. '       ' → logprob: -15.563277244567871
    10. '−' → logprob: -15.563277244567871

Token 110: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.25192973017692566
    2. ' a' → logprob: -1.501929759979248
    3. '	a' → logprob: -14.87692928314209
    4. ' ' → logprob: -16.751930236816406
    5. '(a' → logprob: -17.376930236816406
    6. '   ' → logprob: -17.376930236816406
    7. ')a' → logprob: -17.501930236816406
    8. '       ' → logprob: -18.001930236816406
    9. '>a' → logprob: -18.001930236816406
    10. '           ' → logprob: -18.126930236816406

Token 111: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00029041420202702284
    2. 'j' → logprob: -8.250290870666504
    3. 'a' → logprob: -11.000290870666504
    4. '[' → logprob: -13.000290870666504
    5. '[a' → logprob: -13.000290870666504
    6. '[q' → logprob: -13.000290870666504
    7. '[i' → logprob: -13.750290870666504
    8. '```' → logprob: -13.875290870666504
    9. '][' → logprob: -14.125290870666504
    10. ' [' → logprob: -14.375290870666504

Token 112: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.013321638107299805
    2. '1' → logprob: -4.388321876525879
    3. ']' → logprob: -7.763321876525879
    4. '[' → logprob: -8.013321876525879
    5. ''][' → logprob: -11.263321876525879
    6. '"][' → logprob: -11.263321876525879
    7. ')[' → logprob: -11.388321876525879
    8. ' ][' → logprob: -12.513321876525879
    9. '])[' → logprob: -12.638321876525879
    10. ')][' → logprob: -13.013321876525879

Token 113: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.250001907348633
    3. ']' → logprob: -14.750001907348633
    4. '   ' → logprob: -17.125001907348633
    5. '])' → logprob: -17.750001907348633
    6. '<|end|>' → logprob: -18.125001907348633
    7. '0' → logprob: -18.500001907348633
    8. '  ' → logprob: -18.562501907348633
    9. '```' → logprob: -18.875001907348633
    10. ')' → logprob: -18.875001907348633

Token 114: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5656193494796753
    2. '       ' → logprob: -1.3156193494796753
    3. ')
' → logprob: -1.8156193494796753
    4. '
' → logprob: -7.940619468688965
    5. ']' → logprob: -8.565619468688965
    6. ' )' → logprob: -9.690619468688965
    7. ']
' → logprob: -10.065619468688965
    8. ')**' → logprob: -10.065619468688965
    9. '）' → logprob: -10.315619468688965
    10. '   ' → logprob: -10.440619468688965

Token 115: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5263190269470215
    2. '       ' → logprob: -0.9013190269470215
    3. '<|end|>' → logprob: -6.6513190269470215
    4. '
' → logprob: -7.1513190269470215
    5. '        
' → logprob: -7.5263190269470215
    6. '  
' → logprob: -8.90131950378418
    7. '<|end|>' → logprob: -9.15131950378418
    8. ',' → logprob: -9.65131950378418
    9. '\n' → logprob: -9.65131950378418
    10. ' 
' → logprob: -10.40131950378418

Token 116: ' cur' (ID: 4396)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9057883620262146
    2. 'j' → logprob: -1.5307884216308594
    3. 'if' → logprob: -1.5307884216308594
    4. 'k' → logprob: -2.4057884216308594
    5. ' if' → logprob: -3.7807884216308594
    6. 'while' → logprob: -4.030788421630859
    7. 'r' → logprob: -4.780788421630859
    8. '
' → logprob: -5.780788421630859
    9. 'for' → logprob: -6.030788421630859
    10. 'd' → logprob: -6.030788421630859

Token 117: 'ans' (ID: 616)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.030056510120630264
    2. '=' → logprob: -3.5300564765930176
    3. ' ' → logprob: -9.155056953430176
    4. ',' → logprob: -10.030056953430176
    5. 'min' → logprob: -10.530056953430176
    6. 'ans' → logprob: -10.780056953430176
    7. 'x' → logprob: -11.280056953430176
    8. ' +=' → logprob: -11.655056953430176
    9. ')' → logprob: -11.780056953430176
    10. '        ' → logprob: -11.905056953430176

Token 118: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038063179701566696
    2. '=' → logprob: -3.2880632877349854
    3. ' ' → logprob: -11.163063049316406
    4. ' +=' → logprob: -12.413063049316406
    5. '   ' → logprob: -13.663063049316406
    6. '    ' → logprob: -14.413063049316406
    7. ',' → logprob: -14.538063049316406
    8. ':' → logprob: -15.288063049316406
    9. '+=' → logprob: -15.413063049316406
    10. ')' → logprob: -15.538063049316406

Token 119: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09351605176925659
    2. ' ' → logprob: -2.4685161113739014
    3. 'abs' → logprob: -6.718515872955322
    4. 'p' → logprob: -7.093515872955322
    5. '100' → logprob: -7.218515872955322
    6. 'max' → logprob: -7.968515872955322
    7. ' p' → logprob: -8.09351634979248
    8. 'float' → logprob: -8.59351634979248
    9. ' abs' → logprob: -8.84351634979248
    10. '1' → logprob: -8.96851634979248

Token 120: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.024106310680508614
    2. 'len' → logprob: -4.774106502532959
    3. 'min' → logprob: -5.899106502532959
    4. 'p' → logprob: -5.899106502532959
    5. 'n' → logprob: -6.024106502532959
    6. 'abs' → logprob: -6.149106502532959
    7. '100' → logprob: -6.399106502532959
    8. 'float' → logprob: -6.524106502532959
    9. 'max' → logprob: -6.649106502532959
    10. 'q' → logprob: -8.3991060256958

Token 121: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10335687547922134
    2. '<|end|>' → logprob: -2.4783568382263184
    3. '       ' → logprob: -4.478356838226318
    4. '<|end|>' → logprob: -6.603356838226318
    5. '
' → logprob: -7.978356838226318
    6. '\n' → logprob: -7.978356838226318
    7. ' 
' → logprob: -8.103357315063477
    8. '        
' → logprob: -8.728357315063477
    9. ' ' → logprob: -9.353357315063477
    10. '  
' → logprob: -9.603357315063477

Token 122: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03668466955423355
    2. '<|end|>' → logprob: -3.66168475151062
    3. '       ' → logprob: -5.036684513092041
    4. ' 
' → logprob: -7.036684513092041
    5. '<|end|>' → logprob: -7.411684513092041
    6. ' if' → logprob: -7.911684513092041
    7. '
' → logprob: -8.0366849899292
    8. '\n' → logprob: -8.1616849899292
    9. ' while' → logprob: -8.1616849899292
    10. '        
' → logprob: -8.2866849899292

Token 123: ' while' (ID: 2049)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.7423038482666016
    2. 'while' (adapté à ' while') → logprob: -0.8673038482666016
    3. 'for' → logprob: -2.4923038482666016
    4. ' while' → logprob: -4.492303848266602
    5. '       ' → logprob: -5.117303848266602
    6. ' for' → logprob: -5.867303848266602
    7. 'j' → logprob: -8.117303848266602
    8. ' k' → logprob: -8.742303848266602
    9. '        ' → logprob: -8.742303848266602
    10. '   ' → logprob: -8.867303848266602

Token 124: ' r' (ID: 428)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.9976238012313843
    2. 'j' → logprob: -1.6226238012313843
    3. 'len' → logprob: -2.372623920440674
    4. 'p' → logprob: -2.372623920440674
    5. 'True' → logprob: -2.997623920440674
    6. 'r' → logprob: -3.247623920440674
    7. 'i' → logprob: -3.247623920440674
    8. 'q' → logprob: -3.497623920440674
    9. '(True' → logprob: -4.372623920440674
    10. '(cur' → logprob: -4.622623920440674

Token 125: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3982975482940674
    2. ' and' → logprob: -1.3982975482940674
    3. 'and' → logprob: -2.7732975482940674
    4. ':
' → logprob: -4.023297309875488
    5. '<|end|>' → logprob: -7.523297309875488
    6. '.' → logprob: -8.648297309875488
    7. '
' → logprob: -9.273297309875488
    8. '{' → logprob: -9.398297309875488
    9. '   ' → logprob: -9.523297309875488
    10. ':

' → logprob: -10.523297309875488

Token 126: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.050860218703746796
    2. '<|end|>' → logprob: -3.1758601665496826
    3. '<|end|>' → logprob: -5.675860404968262
    4. '       ' → logprob: -7.175860404968262
    5. ' ' → logprob: -7.425860404968262
    6. ' and' → logprob: -7.925860404968262
    7. '            ' → logprob: -8.050860404968262
    8. ':
' → logprob: -8.175860404968262
    9. '
' → logprob: -8.425860404968262
    10. '            
' → logprob: -8.550860404968262

Token 127: ' cur' (ID: 4396)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7944647073745728
    2. 'u' → logprob: -1.0444647073745728
    3. 'v' → logprob: -2.669464588165283
    4. 'p' → logprob: -3.544464588165283
    5. 'c' → logprob: -4.294464588165283
    6. 'k' → logprob: -4.419464588165283
    7. 'point' → logprob: -4.419464588165283
    8. 'pt' → logprob: -4.544464588165283
    9. 'cur' (adapté à ' cur') → logprob: -4.544464588165283
    10. '           ' → logprob: -4.919464588165283

Token 128: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -5.490809417096898e-05
    2. ' =' → logprob: -11.500055313110352
    3. 'x' → logprob: -11.625055313110352
    4. '_ans' → logprob: -11.750055313110352
    5. '=' → logprob: -11.875055313110352
    6. 'point' → logprob: -12.750055313110352
    7. 'token' → logprob: -12.750055313110352
    8. 'pos' → logprob: -12.750055313110352
    9. 'rans' → logprob: -13.750055313110352
    10. '   ' → logprob: -13.750055313110352

Token 129: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.35030996799468994
    2. '+=' → logprob: -1.22530996799469
    3. '=' → logprob: -6.7253098487854
    4. ' =' → logprob: -7.9753098487854
    5. '   ' → logprob: -8.475310325622559
    6. ' ' → logprob: -10.225310325622559
    7. '+' → logprob: -10.350310325622559
    8. '  ' → logprob: -11.600310325622559
    9. ',' → logprob: -11.975310325622559
    10. '+=(' → logprob: -12.600310325622559

Token 130: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0022620675154030323
    2. ' ' → logprob: -6.252262115478516
    3. 'len' → logprob: -8.252262115478516
    4. 'p' → logprob: -11.002262115478516
    5. '2' → logprob: -11.002262115478516
    6. 'max' → logprob: -11.627262115478516
    7. ' len' → logprob: -11.627262115478516
    8. 'min' → logprob: -12.127262115478516
    9. ' p' → logprob: -12.377262115478516
    10. '(' → logprob: -13.252262115478516

Token 131: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0012274926993995905
    2. 'len' → logprob: -6.876227378845215
    3. '2' → logprob: -9.626227378845215
    4. 'p' → logprob: -9.876227378845215
    5. ' ' → logprob: -10.001227378845215
    6. 'min' → logprob: -11.751227378845215
    7. 'max' → logprob: -12.126227378845215
    8. '(' → logprob: -12.876227378845215
    9. '(len' → logprob: -13.126227378845215
    10. 'n' → logprob: -13.376227378845215

Token 132: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03272858262062073
    2. '           ' → logprob: -3.532728672027588
    3. '
' → logprob: -6.157728672027588
    4. '            
' → logprob: -7.782728672027588
    5. '  
' → logprob: -8.28272819519043
    6. ' 
' → logprob: -9.40772819519043
    7. '\n' → logprob: -10.65772819519043
    8. '        
' → logprob: -10.78272819519043
    9. '    
' → logprob: -10.90772819519043
    10. '   
' → logprob: -11.28272819519043

Token 133: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002270635450258851
    2. '
' → logprob: -7.127270698547363
    3. '            
' → logprob: -8.002270698547363
    4. ',' → logprob: -8.002270698547363
    5. 'x' → logprob: -9.252270698547363
    6. 'k' → logprob: -9.252270698547363
    7. '               ' → logprob: -9.752270698547363
    8. '       ' → logprob: -9.877270698547363
    9. 'tokens' → logprob: -10.127270698547363
    10. '   ' → logprob: -10.252270698547363

Token 134: ' m' (ID: 284)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8269292712211609
    2. 'p' → logprob: -1.2019293308258057
    3. 'u' → logprob: -1.9519293308258057
    4. 'pt' → logprob: -3.3269293308258057
    5. 'point' → logprob: -3.9519293308258057
    6. 's' → logprob: -4.076929092407227
    7. 'c' → logprob: -4.201929092407227
    8. 'v' → logprob: -4.576929092407227
    9. 'base' → logprob: -5.826929092407227
    10. 'px' → logprob: -6.076929092407227

Token 135: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14722862839698792
    2. '=' → logprob: -2.522228717803955
    3. 'in' → logprob: -3.397228717803955
    4. 'p' → logprob: -4.522228717803955
    5. 'x' → logprob: -5.397228717803955
    6. 'elem' → logprob: -6.772228717803955
    7. 'ax' → logprob: -6.897228717803955
    8. 'point' → logprob: -7.022228717803955
    9. '   ' → logprob: -7.397228717803955
    10. 'val' → logprob: -7.522228717803955

Token 136: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.006236159708350897
    2. 'min' → logprob: -5.7562360763549805
    3. 'next' → logprob: -6.1312360763549805
    4. 'max' → logprob: -7.5062360763549805
    5. 'len' → logprob: -8.88123607635498
    6. ' r' → logprob: -9.13123607635498
    7. '{' → logprob: -10.50623607635498
    8. ' next' → logprob: -10.75623607635498
    9. ' min' → logprob: -11.75623607635498
    10. '0' → logprob: -12.00623607635498

Token 137: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -3.0590548703912646e-05
    2. '.' → logprob: -10.875030517578125
    3. 'pop' → logprob: -11.500030517578125
    4. ' .' → logprob: -13.500030517578125
    5. '   ' → logprob: -17.000030517578125
    6. '.remove' → logprob: -17.125030517578125
    7. '.copy' → logprob: -18.750030517578125
    8. '.inter' → logprob: -19.250030517578125
    9. '().' → logprob: -19.375030517578125
    10. '.clear' → logprob: -19.375030517578125

Token 138: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.012574284337460995
    2. '()
' → logprob: -4.387574195861816
    3. '()}' → logprob: -10.387574195861816
    4. '()

' → logprob: -11.137574195861816
    5. '())' → logprob: -11.762574195861816
    6. '()
' → logprob: -13.012574195861816
    7. '();' → logprob: -13.137574195861816
    8. '(' → logprob: -13.262574195861816
    9. '()]' → logprob: -14.137574195861816
    10. '()\' → logprob: -14.512574195861816

Token 139: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06675013899803162
    2. 'n' → logprob: -2.9417500495910645
    3. 'next' → logprob: -5.6917500495910645
    4. 'k' → logprob: -6.3167500495910645
    5. 'nx' → logprob: -6.5667500495910645
    6. 'new' → logprob: -6.6917500495910645
    7. 'm' → logprob: -7.3167500495910645
    8. 'd' → logprob: -7.5667500495910645
    9. 'r' → logprob: -7.6917500495910645
    10. 'x' → logprob: -7.9417500495910645

Token 140: ' z' (ID: 579)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.4020956754684448
    2. 'n' → logprob: -1.6520956754684448
    3. 'd' → logprob: -4.152095794677734
    4. 'shift' → logprob: -4.152095794677734
    5. 'diff' → logprob: -4.152095794677734
    6. 'x' → logprob: -4.277095794677734
    7. 'nr' → logprob: -4.527095794677734
    8. 'm' → logprob: -4.527095794677734
    9. 'new' → logprob: -4.902095794677734
    10. 'nx' → logprob: -5.027095794677734

Token 141: '0' (ID: 15)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0015402117278426886
    2. ' =' → logprob: -6.501540184020996
    3. '=(' → logprob: -11.126540184020996
    4. 'x' → logprob: -11.126540184020996
    5. '=set' → logprob: -12.751540184020996
    6. 'w' → logprob: -13.126540184020996
    7. '=
' → logprob: -14.001540184020996
    8. 'ew' → logprob: -14.501540184020996
    9. ',' → logprob: -15.251540184020996
    10. 'm' → logprob: -15.376540184020996

Token 142: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.46969377994537354
    2. ' =' → logprob: -1.2196937799453735
    3. '=' → logprob: -2.594693660736084
    4. 'x' → logprob: -5.469693660736084
    5. ',x' → logprob: -8.844694137573242
    6. 'p' → logprob: -9.344694137573242
    7. 'z' → logprob: -9.969694137573242
    8. ',m' → logprob: -9.969694137573242
    9. ',z' → logprob: -9.969694137573242
    10. ',p' → logprob: -10.094694137573242

Token 143: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.001014706795103848
    2. ' z' → logprob: -7.126014709472656
    3. 'm' → logprob: -8.751014709472656
    4. '=' → logprob: -11.001014709472656
    5. 'w' → logprob: -11.126014709472656
    6. 'x' → logprob: -11.751014709472656
    7. 'y' → logprob: -12.001014709472656
    8. ' =' → logprob: -12.376014709472656
    9. ' m' → logprob: -14.126014709472656
    10. '=z' → logprob: -15.001014709472656

Token 144: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5812633633613586
    2. '0' → logprob: -0.8312633633613586
    3. 'x' → logprob: -6.206263542175293
    4. '_' → logprob: -6.331263542175293
    5. ' =' → logprob: -6.956263542175293
    6. '_x' → logprob: -8.331263542175293
    7. '1' → logprob: -8.956263542175293
    8. ',' → logprob: -9.331263542175293
    9. 'z' → logprob: -9.581263542175293
    10. '[' → logprob: -11.581263542175293

Token 145: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38696834444999695
    2. ' =' → logprob: -1.1369683742523193
    3. '=m' → logprob: -9.886968612670898
    4. ',' → logprob: -10.136968612670898
    5. ' ' → logprob: -12.511968612670898
    6. ')' → logprob: -13.761968612670898
    7. 'm' → logprob: -14.261968612670898
    8. ',m' → logprob: -14.886968612670898
    9. '=z' → logprob: -15.136968612670898
    10. '   ' → logprob: -15.136968612670898

Token 146: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0013310716021806002
    2. ' m' → logprob: -6.626330852508545
    3. '(m' → logprob: -12.376331329345703
    4. ' ' → logprob: -14.876331329345703
    5. '   ' → logprob: -15.251331329345703
    6. 'z' → logprob: -16.001331329345703
    7. '(' → logprob: -17.001331329345703
    8. '    ' → logprob: -17.126331329345703
    9. '  ' → logprob: -17.251331329345703
    10. ' (' → logprob: -17.376331329345703

Token 147: '[' (ID: 58)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.450534462928772
    2. '           ' → logprob: -1.075534462928772
    3. '               ' → logprob: -5.075534343719482
    4. ' =' → logprob: -5.075534343719482
    5. '[' → logprob: -6.450534343719482
    6. '<|end|>' → logprob: -6.450534343719482
    7. ',' → logprob: -6.950534343719482
    8. ')' → logprob: -7.075534343719482
    9. '=' → logprob: -7.200534343719482
    10. '       ' → logprob: -7.325534343719482

Token 148: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.630610641877865e-06
    2. ']' → logprob: -12.875006675720215
    3. ' ' → logprob: -13.375006675720215
    4. '
' → logprob: -13.750006675720215
    5. '[' → logprob: -14.375006675720215
    6. '-' → logprob: -15.125006675720215
    7. '][' → logprob: -16.2500057220459
    8. '<|end|>' → logprob: -16.4375057220459
    9. '(' → logprob: -16.8750057220459
    10. '۰' → logprob: -16.8750057220459

Token 149: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4212946593761444
    2. '+' → logprob: -1.2962946891784668
    3. '-' → logprob: -3.046294689178467
    4. ' -' → logprob: -4.546294689178467
    5. ' +' → logprob: -5.171294689178467
    6. ' ,' → logprob: -6.171294689178467
    7. '+p' → logprob: -6.796294689178467
    8. ',q' → logprob: -6.921294689178467
    9. ',p' → logprob: -7.671294689178467
    10. '],' → logprob: -7.921294689178467

Token 150: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0031777136027812958
    2. ' m' → logprob: -5.753177642822266
    3. ' ' → logprob: -18.878177642822266
    4. '	m' → logprob: -19.878177642822266
    5. '   ' → logprob: -19.878177642822266
    6. '    ' → logprob: -20.003177642822266
    7. '  ' → logprob: -20.378177642822266
    8. '+m' → logprob: -21.003177642822266
    9. ')m' → logprob: -21.253177642822266
    10. '
' → logprob: -21.378177642822266

Token 151: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005244191270321608
    2. '[' → logprob: -5.255244255065918
    3. '<|end|>' → logprob: -11.755244255065918
    4. '```' → logprob: -14.380244255065918
    5. '-' → logprob: -14.880244255065918
    6. '#' → logprob: -14.880244255065918
    7. ']' → logprob: -15.005244255065918
    8. ',' → logprob: -15.630244255065918
    9. ' ' → logprob: -15.880244255065918
    10. '[
' → logprob: -16.0052433013916

Token 152: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '
' → logprob: -15.875
    3. '```' → logprob: -16.5
    4. '0' → logprob: -17.375
    5. ']' → logprob: -17.625
    6. ' ' → logprob: -17.75
    7. '   ' → logprob: -17.875
    8. '-' → logprob: -19.0625
    9. '۱' → logprob: -19.1875
    10. '...' → logprob: -19.1875

Token 153: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.17983874678611755
    2. ']' → logprob: -1.80483877658844
    3. ']
' → logprob: -9.929839134216309
    4. ']

' → logprob: -10.429839134216309
    5. '           ' → logprob: -12.179839134216309
    6. ']+' → logprob: -12.804839134216309
    7. ')
' → logprob: -13.304839134216309
    8. '       ' → logprob: -13.929839134216309
    9. ' ]
' → logprob: -13.929839134216309
    10. '
' → logprob: -14.554839134216309

Token 154: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015460068359971046
    2. 'z' → logprob: -4.390460014343262
    3. '
' → logprob: -6.890460014343262
    4. 'r' → logprob: -7.265460014343262
    5. ' z' → logprob: -7.390460014343262
    6. 'x' → logprob: -9.140460014343262
    7. '            
' → logprob: -9.265460014343262
    8. '       ' → logprob: -9.640460014343262
    9. ',' → logprob: -10.015460014343262
    10. 'n' → logprob: -10.140460014343262

Token 155: ' m' (ID: 284)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7277340292930603
    2. 'z' → logprob: -0.9777340292930603
    3. 'shift' → logprob: -3.102734088897705
    4. 'v' → logprob: -3.727734088897705
    5. 'n' → logprob: -4.227734088897705
    6. 'to' → logprob: -4.727734088897705
    7. 'new' → logprob: -4.727734088897705
    8. 'nz' → logprob: -4.977734088897705
    9. 'for' → logprob: -5.102734088897705
    10. 'diff' → logprob: -5.102734088897705

Token 156: '0' (ID: 15)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10348919779062271
    2. ' =' → logprob: -2.3534891605377197
    3. 'x' → logprob: -6.353489398956299
    4. 'new' → logprob: -7.228489398956299
    5. '=(' → logprob: -7.853489398956299
    6. '_new' → logprob: -8.10348892211914
    7. '0' → logprob: -9.85348892211914
    8. 'n' → logprob: -10.60348892211914
    9. '_' → logprob: -11.60348892211914
    10. '2' → logprob: -11.85348892211914

Token 157: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.576175332069397
    2. ',' → logprob: -1.076175332069397
    3. ' =' → logprob: -2.8261752128601074
    4. '+=' → logprob: -4.076175212860107
    5. ' +=' → logprob: -4.201175212860107
    6. '+' → logprob: -5.326175212860107
    7. ' ,' → logprob: -7.576175212860107
    8. ' +' → logprob: -8.576175689697266
    9. ',m' → logprob: -9.701175689697266
    10. 'z' → logprob: -9.826175689697266

Token 158: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0008052219054661691
    2. ' m' → logprob: -7.125805377960205
    3. 'z' → logprob: -14.375804901123047
    4. '   ' → logprob: -16.750804901123047
    5. ' ' → logprob: -16.875804901123047
    6. '    ' → logprob: -17.125804901123047
    7. '  ' → logprob: -18.000804901123047
    8. ' z' → logprob: -18.750804901123047
    9. '     ' → logprob: -19.625804901123047
    10. 'mz' → logprob: -19.750804901123047

Token 159: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02335868403315544
    2. '0' → logprob: -4.6483588218688965
    3. '=' → logprob: -4.8983588218688965
    4. ' =' → logprob: -5.3983588218688965
    5. '[' → logprob: -6.6483588218688965
    6. ',' → logprob: -9.023358345031738
    7. ']' → logprob: -10.648358345031738
    8. 'm' → logprob: -10.898358345031738
    9. ' ' → logprob: -11.023358345031738
    10. '_' → logprob: -11.148358345031738

Token 160: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03364846482872963
    2. ' =' → logprob: -3.4086484909057617
    3. ',' → logprob: -13.158648490905762
    4. ')' → logprob: -15.283648490905762
    5. '+=' → logprob: -15.533648490905762
    6. ' ' → logprob: -16.158647537231445
    7. '=
' → logprob: -17.033647537231445
    8. ' +=' → logprob: -17.283647537231445
    9. '=m' → logprob: -17.283647537231445
    10. '=

' → logprob: -17.408647537231445

Token 161: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.00041327282087877393
    2. ' z' → logprob: -8.250412940979004
    3. '(z' → logprob: -9.000412940979004
    4. 'm' → logprob: -10.625412940979004
    5. '   ' → logprob: -13.625412940979004
    6. 'p' → logprob: -13.750412940979004
    7. ' ' → logprob: -14.125412940979004
    8. '(m' → logprob: -14.875412940979004
    9. '  ' → logprob: -15.375412940979004
    10. '(' → logprob: -15.500412940979004

Token 162: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.513339445111342e-05
    2. '[' → logprob: -10.875044822692871
    3. '-' → logprob: -11.125044822692871
    4. '1' → logprob: -13.125044822692871
    5. 'p' → logprob: -13.125044822692871
    6. '
' → logprob: -13.375044822692871
    7. 'm' → logprob: -13.375044822692871
    8. 'o' → logprob: -13.875044822692871
    9. ' ' → logprob: -14.250044822692871
    10. '+' → logprob: -14.812544822692871

Token 163: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11835197359323502
    2. '-' → logprob: -2.618351936340332
    3. '+p' → logprob: -3.368351936340332
    4. ' +' → logprob: -6.368351936340332
    5. '-p' → logprob: -6.618351936340332
    6. ' -' → logprob: -7.243351936340332
    7. '+m' → logprob: -8.118351936340332
    8. '-q' → logprob: -9.243351936340332
    9. ',' → logprob: -10.118351936340332
    10. '-m' → logprob: -11.743351936340332

Token 164: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.0006277294596657157
    2. ' z' → logprob: -7.375627517700195
    3. 'm' → logprob: -15.500627517700195
    4. '(z' → logprob: -15.625627517700195
    5. '	z' → logprob: -16.125627517700195
    6. ' ' → logprob: -16.125627517700195
    7. '   ' → logprob: -16.250627517700195
    8. 'q' → logprob: -16.375627517700195
    9. '          ' → logprob: -16.375627517700195
    10. '+' → logprob: -16.750627517700195

Token 165: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. '+' → logprob: -12.875004768371582
    3. '-' → logprob: -13.750004768371582
    4. '0' → logprob: -14.500004768371582
    5. '```' → logprob: -14.625004768371582
    6. 'm' → logprob: -16.7500057220459
    7. 'z' → logprob: -17.3750057220459
    8. '[' → logprob: -17.5000057220459
    9. '۱' → logprob: -18.1250057220459
    10. ' ' → logprob: -18.2500057220459

Token 166: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0728769600391388
    2. '
' → logprob: -2.9478769302368164
    3. '+' → logprob: -4.447876930236816
    4. 'm' → logprob: -6.322876930236816
    5. 'if' → logprob: -7.197876930236816
    6. '-' → logprob: -7.322876930236816
    7. ' +' → logprob: -7.947876930236816
    8. 'for' → logprob: -8.072876930236816
    9. ' =' → logprob: -8.072876930236816
    10. '=' → logprob: -8.197876930236816

Token 167: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.020651085302233696
    2. '
' → logprob: -4.645650863647461
    3. 'while' → logprob: -4.895650863647461
    4. '+' → logprob: -7.020650863647461
    5. 'm' → logprob: -7.270650863647461
    6. '-' → logprob: -7.770650863647461
    7. 'r' → logprob: -7.895650863647461
    8. '            
' → logprob: -8.145650863647461
    9. 'z' → logprob: -9.020650863647461
    10. 'if' → logprob: -9.145650863647461

Token 168: ' while' (ID: 2049)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.1004079580307007
    2. 'z' → logprob: -1.4754079580307007
    3. 'while' (adapté à ' while') → logprob: -1.6004079580307007
    4. '           ' → logprob: -1.9754079580307007
    5. 'r' → logprob: -2.8504080772399902
    6. 'x' → logprob: -4.60040807723999
    7. 'if' → logprob: -4.60040807723999
    8. 'for' → logprob: -4.97540807723999
    9. 'new' → logprob: -5.85040807723999
    10. 'n' → logprob: -5.97540807723999

Token 169: ' (' (ID: 350)
  Prédit: '(True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(True' → logprob: -0.7584025859832764
    2. '(m' → logprob: -1.0084025859832764
    3. ' (' → logprob: -2.8834025859832764
    4. ' True' → logprob: -3.1334025859832764
    5. '(z' → logprob: -3.2584025859832764
    6. 'True' → logprob: -3.6334025859832764
    7. 'm' → logprob: -7.1334028244018555
    8. '(' → logprob: -7.2584028244018555
    9. ' ' → logprob: -8.133402824401855
    10. ' m' → logprob: -8.258402824401855

Token 170: 'm' (ID: 76)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.21456857025623322
    2. '(z' → logprob: -1.7145686149597168
    3. 'm' → logprob: -4.464568614959717
    4. 'z' → logprob: -6.964568614959717
    5. '(True' → logprob: -7.964568614959717
    6. 'True' → logprob: -9.339568138122559
    7. ' (' → logprob: -9.714568138122559
    8. '(' → logprob: -9.714568138122559
    9. '((' → logprob: -11.339568138122559
    10. '(x' → logprob: -11.839568138122559

Token 171: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00024299313372466713
    2. '[' → logprob: -9.000243186950684
    3. ',' → logprob: -9.875243186950684
    4. 'm' → logprob: -10.375243186950684
    5. ')' → logprob: -11.500243186950684
    6. '
' → logprob: -12.625243186950684
    7. ',m' → logprob: -12.625243186950684
    8. '_' → logprob: -12.875243186950684
    9. 'not' → logprob: -13.000243186950684
    10. ':=' → logprob: -13.125243186950684

Token 172: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.40362024307250977
    2. '+' → logprob: -1.7786202430725098
    3. '+p' → logprob: -2.1536202430725098
    4. ' +' → logprob: -3.2786202430725098
    5. ',p' → logprob: -5.77862024307251
    6. '-' → logprob: -6.27862024307251
    7. ' -' → logprob: -6.52862024307251
    8. ',q' → logprob: -6.65362024307251
    9. '+m' → logprob: -7.27862024307251
    10. ' ,' → logprob: -7.77862024307251

Token 173: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.011072111316025257
    2. ' p' → logprob: -4.511072158813477
    3. 'q' → logprob: -11.511072158813477
    4. '   ' → logprob: -12.136072158813477
    5. ' ' → logprob: -12.386072158813477
    6. '-p' → logprob: -13.386072158813477
    7. ' -' → logprob: -13.886072158813477
    8. '  ' → logprob: -14.261072158813477
    9. '-' → logprob: -14.761072158813477
    10. ' q' → logprob: -15.011072158813477

Token 174: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011486753646750003
    2. ',m' → logprob: -9.500114440917969
    3. ' ,' → logprob: -10.250114440917969
    4. ')' → logprob: -13.000114440917969
    5. ',
' → logprob: -13.875114440917969
    6. '   ' → logprob: -15.375114440917969
    7. ',p' → logprob: -15.500114440917969
    8. 'm' → logprob: -15.625114440917969
    9. '<=' → logprob: -15.750114440917969
    10. '```' → logprob: -16.25011444091797

Token 175: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.1602262556552887
    2. ' m' → logprob: -1.9102262258529663
    3. '    ' → logprob: -13.535225868225098
    4. '   ' → logprob: -15.160225868225098
    5. ' ' → logprob: -15.535225868225098
    6. '  ' → logprob: -15.910225868225098
    7. '     ' → logprob: -16.910226821899414
    8. '       ' → logprob: -17.285226821899414
    9. '	m' → logprob: -17.285226821899414
    10. '        ' → logprob: -17.410226821899414

Token 176: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '0' → logprob: -18.25
    3. '```' → logprob: -19.375
    4. '
' → logprob: -19.5
    5. ' ' → logprob: -20.0
    6. '   ' → logprob: -20.625
    7. '_' → logprob: -21.125
    8. '

' → logprob: -21.25
    9. '[' → logprob: -21.375
    10. '
' → logprob: -21.5

Token 177: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017270058393478394
    2. '+' → logprob: -4.517270088195801
    3. ' +' → logprob: -5.267270088195801
    4. ' )' → logprob: -6.892270088195801
    5. '+)' → logprob: -12.0172700881958
    6. ')+' → logprob: -12.2672700881958
    7. ')!=' → logprob: -13.1422700881958
    8. ' not' → logprob: -13.1422700881958
    9. '),' → logprob: -13.3922700881958
    10. ')
' → logprob: -13.5172700881958

Token 178: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0031796174589544535
    2. ' q' → logprob: -5.753179550170898
    3. ' ' → logprob: -14.003179550170898
    4. '   ' → logprob: -14.378179550170898
    5. '    ' → logprob: -15.003179550170898
    6. '	q' → logprob: -16.2531795501709
    7. '  ' → logprob: -16.6281795501709
    8. ')' → logprob: -16.7531795501709
    9. '     ' → logprob: -17.1281795501709
    10. '       ' → logprob: -17.1281795501709

Token 179: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.4153549020411447e-05
    2. ' )' → logprob: -11.12502384185791
    3. 'in' → logprob: -11.62502384185791
    4. ')
' → logprob: -16.250024795532227
    5. 'not' → logprob: -16.625024795532227
    6. '   ' → logprob: -16.750024795532227
    7. '）' → logprob: -16.875024795532227
    8. ' in' → logprob: -17.000024795532227
    9. '`)' → logprob: -17.125024795532227
    10. ',)' → logprob: -17.125024795532227

Token 180: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3133930265903473
    2. 'in' → logprob: -1.313392996788025
    3. ' not' → logprob: -9.438392639160156
    4. ' ' → logprob: -11.063392639160156
    5. ')' → logprob: -11.438392639160156
    6. 'not' → logprob: -11.563392639160156
    7. '   ' → logprob: -12.563392639160156
    8. '
' → logprob: -12.938392639160156
    9. '    ' → logprob: -13.188392639160156
    10. '           ' → logprob: -13.813392639160156

Token 181: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0001584850688232109
    2. ' r' → logprob: -8.750158309936523
    3. ' ' → logprob: -18.000158309936523
    4. 't' → logprob: -18.375158309936523
    5. '	r' → logprob: -19.875158309936523
    6. '   ' → logprob: -20.125158309936523
    7. '
' → logprob: -20.500158309936523
    8. '_r' → logprob: -20.750158309936523
    9. '  ' → logprob: -21.125158309936523
    10. ' ' → logprob: -21.625158309936523

Token 182: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.11274434626102448
    2. ':' → logprob: -2.3627443313598633
    3. ' and' → logprob: -4.737744331359863
    4. '):
' → logprob: -5.862744331359863
    5. '               ' → logprob: -7.987744331359863
    6. '           ' → logprob: -8.487744331359863
    7. ')' → logprob: -9.737744331359863
    8. ':

' → logprob: -9.862744331359863
    9. 'and' → logprob: -9.987744331359863
    10. ',' → logprob: -10.237744331359863

Token 183: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007459024200215936
    2. ' r' → logprob: -8.00074577331543
    3. '           ' → logprob: -8.62574577331543
    4. '
' → logprob: -9.62574577331543
    5. '              ' → logprob: -10.25074577331543
    6. '                
' → logprob: -10.62574577331543
    7. 'r' → logprob: -10.87574577331543
    8. ' m' → logprob: -11.12574577331543
    9. ' ' → logprob: -11.50074577331543
    10. '                   ' → logprob: -11.62574577331543

Token 184: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.17734231054782867
    2. ' r' → logprob: -1.9273422956466675
    3. 'm' (adapté à ' m') → logprob: -4.302342414855957
    4. 'r' → logprob: -6.177342414855957
    5. '                   ' → logprob: -7.677342414855957
    6. '           ' → logprob: -7.677342414855957
    7. '               ' → logprob: -7.927342414855957
    8. '
' → logprob: -10.052342414855957
    9. ' k' → logprob: -11.927342414855957
    10. '   ' → logprob: -12.552342414855957

Token 185: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. '=' → logprob: -15.25
    3. ' =' → logprob: -16.75
    4. '
' → logprob: -18.0
    5. 'm' → logprob: -18.125
    6. ' ' → logprob: -18.125
    7. 'r' → logprob: -18.375
    8. '_' → logprob: -18.375
    9. ',' → logprob: -18.375
    10. '۰' → logprob: -18.75

Token 186: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6831647753715515
    2. '+=' → logprob: -1.0581648349761963
    3. ',' → logprob: -1.9331648349761963
    4. '=' → logprob: -5.808164596557617
    5. ' =' → logprob: -9.433164596557617
    6. ' ,' → logprob: -9.433164596557617
    7. '+' → logprob: -10.433164596557617
    8. '+,' → logprob: -12.558164596557617
    9. ']+=' → logprob: -13.058164596557617
    10. ' +' → logprob: -13.558164596557617

Token 187: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.01416350994259119
    2. ' p' → logprob: -4.264163494110107
    3. ' ' → logprob: -17.389163970947266
    4. '   ' → logprob: -19.639163970947266
    5. '	p' → logprob: -19.764163970947266
    6. '
' → logprob: -19.889163970947266
    7. '-' → logprob: -20.764163970947266
    8. '  ' → logprob: -21.014163970947266
    9. ' ' → logprob: -21.014163970947266
    10. '           ' → logprob: -21.139163970947266

Token 188: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02309184893965721
    2. ' ,' → logprob: -4.398091793060303
    3. '               ' → logprob: -4.773091793060303
    4. ',m' → logprob: -7.273091793060303
    5. ' m' → logprob: -7.523091793060303
    6. ',q' → logprob: -8.398092269897461
    7. ',
' → logprob: -8.523092269897461
    8. 'm' → logprob: -8.898092269897461
    9. '           ' → logprob: -9.148092269897461
    10. '                   ' → logprob: -9.648092269897461

Token 189: '               ' (ID: 506)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.8369376063346863
    2. '               ' → logprob: -1.211937665939331
    3. ',' → logprob: -1.336937665939331
    4. ' ,' → logprob: -5.961937427520752
    5. ',m' → logprob: -6.461937427520752
    6. 'm' → logprob: -6.961937427520752
    7. '           ' → logprob: -7.586937427520752
    8. '                   ' → logprob: -8.08693790435791
    9. '
' → logprob: -8.58693790435791
    10. '                ' → logprob: -8.71193790435791

Token 190: ' m' (ID: 284)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.006715370807796717
    2. ' q' → logprob: -5.006715297698975
    3. '               ' → logprob: -17.131715774536133
    4. '           ' → logprob: -19.381715774536133
    5. '	q' → logprob: -19.756715774536133
    6. ' ' → logprob: -19.881715774536133
    7. '    ' → logprob: -20.131715774536133
    8. '       ' → logprob: -20.256715774536133
    9. '                ' → logprob: -20.506715774536133
    10. '                   ' → logprob: -20.631715774536133

Token 191: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -15.375000953674316
    3. ',' → logprob: -15.750000953674316
    4. ' ' → logprob: -16.0
    5. '```' → logprob: -19.25
    6. '   ' → logprob: -20.5
    7. 'q' → logprob: -20.75
    8. '
' → logprob: -21.0
    9. '_,' → logprob: -21.0
    10. '+' → logprob: -21.125

Token 192: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6961798667907715
    2. '+=' → logprob: -0.6961798667907715
    3. '+' → logprob: -5.8211798667907715
    4. ' +' → logprob: -9.82118034362793
    5. ']+=' → logprob: -12.69618034362793
    6. '```' → logprob: -13.07118034362793
    7. '               ' → logprob: -14.19618034362793
    8. '           ' → logprob: -14.19618034362793
    9. ' ' → logprob: -14.32118034362793
    10. '+="' → logprob: -14.94618034362793

Token 193: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.006715728435665369
    2. ' q' → logprob: -5.006715774536133
    3. '	q' → logprob: -16.006715774536133
    4. ' ' → logprob: -16.381715774536133
    5. '   ' → logprob: -17.756715774536133
    6. '(q' → logprob: -18.381715774536133
    7. '    ' → logprob: -18.506715774536133
    8. '[q' → logprob: -18.756715774536133
    9. ' ' → logprob: -19.319215774536133
    10. '+' → logprob: -19.444215774536133

Token 194: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002458430244587362
    2. '           ' → logprob: -8.500246047973633
    3. ' r' → logprob: -11.250246047973633
    4. '
' → logprob: -12.000246047973633
    5. '                   ' → logprob: -12.000246047973633
    6. ',' → logprob: -12.125246047973633
    7. 'r' → logprob: -12.375246047973633
    8. '              ' → logprob: -12.625246047973633
    9. '                       ' → logprob: -13.875246047973633
    10. '                ' → logprob: -14.500246047973633

Token 195: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08082707226276398
    2. ' r' → logprob: -2.705826997756958
    3. '           ' → logprob: -5.080827236175537
    4. '
' → logprob: -5.705827236175537
    5. 'r' → logprob: -7.705827236175537
    6. '                   ' → logprob: -7.830827236175537
    7. ',' → logprob: -9.205826759338379
    8. ' 
' → logprob: -9.580826759338379
    9. ',
' → logprob: -10.330826759338379
    10. '              ' → logprob: -10.330826759338379

Token 196: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.0005530327325686812
    2. ' r' → logprob: -7.500553131103516
    3. '           ' → logprob: -18.875553131103516
    4. '
' → logprob: -20.000553131103516
    5. '       ' → logprob: -20.125553131103516
    6. '   ' → logprob: -20.750553131103516
    7. '               ' → logprob: -21.000553131103516
    8. '                   ' → logprob: -22.250553131103516
    9. '	r' → logprob: -22.500553131103516
    10. ' ' → logprob: -22.750553131103516

Token 197: '.remove' (ID: 7986)
  Prédit: '.remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.remove' → logprob: -1.759734732331708e-05
    2. '.' → logprob: -11.500017166137695
    3. '.dis' → logprob: -12.000017166137695
    4. 'remove' → logprob: -13.625017166137695
    5. '.Remove' → logprob: -19.000017166137695
    6. ' remove' → logprob: -20.375017166137695
    7. '	remove' → logprob: -20.500017166137695
    8. '.pop' → logprob: -21.625017166137695
    9. 'Remove' → logprob: -21.875017166137695
    10. '(remove' → logprob: -22.000017166137695

Token 198: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.011069518513977528
    2. '(m' → logprob: -4.511069297790527
    3. '(' → logprob: -10.761069297790527
    4. ' (' → logprob: -15.636069297790527
    5. '(
' → logprob: -16.136070251464844
    6. ' ((' → logprob: -16.261070251464844
    7. '   ' → logprob: -16.886070251464844
    8. '(z' → logprob: -16.886070251464844
    9. '  ' → logprob: -17.386070251464844
    10. ' ' → logprob: -17.511070251464844

Token 199: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -3.128163257315464e-07
    2. ' m' → logprob: -15.125
    3. '(m' → logprob: -18.0
    4. '   ' → logprob: -18.75
    5. '           ' → logprob: -19.375
    6. '                   ' → logprob: -19.875
    7. '               ' → logprob: -20.75
    8. '                       ' → logprob: -21.625
    9. '    ' → logprob: -22.0
    10. '	m' → logprob: -22.0

Token 200: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '۰' → logprob: -19.5
    3. ' ' → logprob: -20.125
    4. '1' → logprob: -20.125
    5. 'o' → logprob: -20.375
    6. ')' → logprob: -20.5
    7. '_' → logprob: -20.875
    8. ',' → logprob: -21.5
    9. '[' → logprob: -21.5625
    10. 'm' → logprob: -21.6875

Token 201: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019684815779328346
    2. ',m' → logprob: -6.3769683837890625
    3. ',p' → logprob: -9.126968383789062
    4. ' ,' → logprob: -9.376968383789062
    5. '+' → logprob: -9.751968383789062
    6. ' +' → logprob: -12.251968383789062
    7. '+m' → logprob: -12.251968383789062
    8. '+p' → logprob: -12.626968383789062
    9. '```' → logprob: -14.501968383789062
    10. 'm' → logprob: -15.251968383789062

Token 202: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0002613358374219388
    2. ' m' → logprob: -8.250261306762695
    3. ' ' → logprob: -20.125261306762695
    4. '   ' → logprob: -20.250261306762695
    5. '    ' → logprob: -20.500261306762695
    6. '           ' → logprob: -21.000261306762695
    7. '       ' → logprob: -21.000261306762695
    8. '     ' → logprob: -21.375261306762695
    9. '         ' → logprob: -21.875261306762695
    10. '	m' → logprob: -22.000261306762695

Token 203: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.25
    3. '```' → logprob: -16.375
    4. '
' → logprob: -17.625
    5. '   ' → logprob: -17.875
    6. ')' → logprob: -18.875
    7. '[' → logprob: -20.125
    8. '১' → logprob: -20.1875
    9. '``' → logprob: -20.1875
    10. '_' → logprob: -20.1875

Token 204: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0645734891295433
    2. '))
' → logprob: -2.8145735263824463
    3. ')' → logprob: -6.064573287963867
    4. ')
' → logprob: -8.314573287963867
    5. '           ' → logprob: -11.314573287963867
    6. '))
' → logprob: -11.564573287963867
    7. '))

' → logprob: -11.689573287963867
    8. '               ' → logprob: -13.564573287963867
    9. '       ' → logprob: -13.814573287963867
    10. ')))' → logprob: -14.064573287963867

Token 205: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.730040967464447
    2. '       ' → logprob: -0.855040967464447
    3. '
' → logprob: -2.480041027069092
    4. '        
' → logprob: -5.730041027069092
    5. '<|end|>' → logprob: -6.730041027069092
    6. '
' → logprob: -6.855041027069092
    7. '            
' → logprob: -7.480041027069092
    8. '               ' → logprob: -7.480041027069092
    9. '\n' → logprob: -7.605041027069092
    10. ' 
' → logprob: -7.980041027069092

Token 206: ' m' (ID: 284)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013514261227101088
    2. '           ' → logprob: -7.126351356506348
    3. 'j' → logprob: -8.001351356506348
    4. '```' → logprob: -9.126351356506348
    5. ' j' → logprob: -10.876351356506348
    6. '   ' → logprob: -11.251351356506348
    7. '               ' → logprob: -11.501351356506348
    8. 'return' → logprob: -11.626351356506348
    9. '<|end|>' → logprob: -12.126351356506348
    10. '<|end|>' → logprob: -12.126351356506348

Token 207: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0023090504109859467
    2. '=' → logprob: -6.8773088455200195
    3. ' =' → logprob: -6.8773088455200195
    4. '1' → logprob: -9.00230884552002
    5. ',' → logprob: -10.12730884552002
    6. '[' → logprob: -10.37730884552002
    7. ' +=' → logprob: -11.25230884552002
    8. '+=' → logprob: -11.62730884552002
    9. '   ' → logprob: -12.50230884552002
    10. ' ' → logprob: -12.75230884552002

Token 208: ',' (ID: 11)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5990902185440063
    2. ',' → logprob: -1.4740902185440063
    3. ' +=' → logprob: -1.5990902185440063
    4. '+' → logprob: -4.349090099334717
    5. '=' → logprob: -5.224090099334717
    6. ' ,' → logprob: -7.099090099334717
    7. '+,' → logprob: -8.724090576171875
    8. ' +' → logprob: -8.849090576171875
    9. ' =' → logprob: -9.599090576171875
    10. ' -=' → logprob: -10.724090576171875

Token 209: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.011049704626202583
    2. ' m' → logprob: -4.511049747467041
    3. ' ' → logprob: -13.636049270629883
    4. '<|end|>' → logprob: -14.261049270629883
    5. '...' → logprob: -17.261049270629883
    6. '=' → logprob: -18.636049270629883
    7. '  ' → logprob: -18.761049270629883
    8. '0' → logprob: -18.761049270629883
    9. '
' → logprob: -18.886049270629883
    10. '    ' → logprob: -19.011049270629883

Token 210: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. 'm' → logprob: -12.625003814697266
    3. '=' → logprob: -14.875003814697266
    4. '+=' → logprob: -15.750003814697266
    5. '```' → logprob: -16.375003814697266
    6. ' +=' → logprob: -17.125003814697266
    7. ' ' → logprob: -17.125003814697266
    8. '
' → logprob: -17.875003814697266
    9. '0' → logprob: -17.937503814697266
    10. '+' → logprob: -17.937503814697266

Token 211: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.918127715587616
    2. ' +=' → logprob: -1.1681277751922607
    3. '+=' → logprob: -1.6681277751922607
    4. ',' → logprob: -3.0431277751922607
    5. ' =' → logprob: -3.0431277751922607
    6. '+' → logprob: -5.293127536773682
    7. ' +' → logprob: -7.668127536773682
    8. ' ,' → logprob: -8.41812801361084
    9. ' -=' → logprob: -10.16812801361084
    10. '+,' → logprob: -10.66812801361084

Token 212: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.2527410387992859
    2. ' z' → logprob: -1.5027410984039307
    3. '    ' → logprob: -7.752740859985352
    4. ' ' → logprob: -9.127740859985352
    5. 'm' → logprob: -9.502740859985352
    6. '  ' → logprob: -10.002740859985352
    7. 'a' → logprob: -10.377740859985352
    8. '   ' → logprob: -10.627740859985352
    9. ' m' → logprob: -10.877740859985352
    10. ' a' → logprob: -11.002740859985352

Token 213: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1279553291387856e-05
    2. '1' → logprob: -12.375011444091797
    3. '[' → logprob: -12.625011444091797
    4. ',' → logprob: -13.750011444091797
    5. '
' → logprob: -14.125011444091797
    6. '+' → logprob: -14.250011444091797
    7. ' ' → logprob: -14.937511444091797
    8. '```' → logprob: -15.187511444091797
    9. '   ' → logprob: -16.250011444091797
    10. '۰' → logprob: -16.312511444091797

Token 214: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.40673479437828064
    2. ',' → logprob: -1.156734824180603
    3. ' -' → logprob: -4.031734943389893
    4. '+' → logprob: -6.406734943389893
    5. '
' → logprob: -9.781734466552734
    6. '```' → logprob: -9.781734466552734
    7. ' +' → logprob: -10.531734466552734
    8. '   ' → logprob: -10.656734466552734
    9. ' ,' → logprob: -10.906734466552734
    10. '       ' → logprob: -11.156734466552734

Token 215: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.0004306692280806601
    2. ' z' → logprob: -7.750430583953857
    3. 'm' → logprob: -17.125431060791016
    4. ' ' → logprob: -19.125431060791016
    5. '<|end|>' → logprob: -19.375431060791016
    6. '	z' → logprob: -19.500431060791016
    7. 'y' → logprob: -20.375431060791016
    8. '    ' → logprob: -20.500431060791016
    9. '  ' → logprob: -21.375431060791016
    10. '   ' → logprob: -21.500431060791016

Token 216: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.153795766294934e-06
    2. 'z' → logprob: -12.500005722045898
    3. '```' → logprob: -14.000005722045898
    4. 'm' → logprob: -14.250005722045898
    5. ' ' → logprob: -15.062505722045898
    6. '0' → logprob: -16.1250057220459
    7. '+' → logprob: -16.7500057220459
    8. '۱' → logprob: -17.3750057220459
    9. '১' → logprob: -17.5625057220459
    10. '' → logprob: -17.6250057220459

Token 217: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010034779086709023
    2. 'while' → logprob: -5.260034561157227
    3. '
' → logprob: -6.510034561157227
    4. '+' → logprob: -7.135034561157227
    5. ' while' → logprob: -7.260034561157227
    6. '       ' → logprob: -7.635034561157227
    7. '            
' → logprob: -8.010034561157227
    8. '   ' → logprob: -8.760034561157227
    9. '+=' → logprob: -9.010034561157227
    10. 'j' → logprob: -9.135034561157227

Token 218: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0700182393193245
    2. 'while' → logprob: -2.6950182914733887
    3. ' while' → logprob: -10.07001781463623
    4. '       ' → logprob: -10.32001781463623
    5. '```' → logprob: -12.57001781463623
    6. '            
' → logprob: -14.32001781463623
    7. '	while' → logprob: -14.44501781463623
    8. '   ' → logprob: -14.57001781463623
    9. '               ' → logprob: -14.94501781463623
    10. 'While' → logprob: -14.94501781463623

Token 219: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.004093358293175697
    2. '           ' → logprob: -5.504093170166016
    3. ' while' → logprob: -11.379093170166016
    4. '       ' → logprob: -13.379093170166016
    5. 'm' → logprob: -14.254093170166016
    6. 'While' → logprob: -14.754093170166016
    7. '
' → logprob: -15.129093170166016
    8. '   ' → logprob: -15.254093170166016
    9. '```' → logprob: -15.629093170166016
    10. '-' → logprob: -15.629093170166016

Token 220: ' (' (ID: 350)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.06994020938873291
    2. ' (' → logprob: -2.6949400901794434
    3. '(' → logprob: -13.194940567016602
    4. '(z' → logprob: -14.569940567016602
    5. '(
' → logprob: -14.944940567016602
    6. ' ' → logprob: -15.319940567016602
    7. '((' → logprob: -15.444940567016602
    8. '(True' → logprob: -15.569940567016602
    9. '   ' → logprob: -15.819940567016602
    10. 'm' → logprob: -15.944940567016602

Token 221: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.011125401593744755
    2. '(m' → logprob: -4.511125564575195
    3. ' m' → logprob: -9.511125564575195
    4. ' (' → logprob: -12.636125564575195
    5. '(' → logprob: -16.136125564575195
    6. '   ' → logprob: -17.011125564575195
    7. '	m' → logprob: -17.011125564575195
    8. 'z' → logprob: -17.136125564575195
    9. '           ' → logprob: -17.136125564575195
    10. ')m' → logprob: -17.886125564575195

Token 222: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.750000953674316
    3. '-' → logprob: -16.75
    4. '1' → logprob: -16.8125
    5. '```' → logprob: -16.8125
    6. '[' → logprob: -16.875
    7. '
' → logprob: -16.9375
    8. ',' → logprob: -17.0625
    9. '_' → logprob: -17.25
    10. '   ' → logprob: -17.4375

Token 223: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3486437499523163
    2. '-' → logprob: -1.2236437797546387
    3. ',' → logprob: -9.09864330291748
    4. '+' → logprob: -10.09864330291748
    5. '-p' → logprob: -10.97364330291748
    6. ' ' → logprob: -11.59864330291748
    7. ' +' → logprob: -12.09864330291748
    8. ')' → logprob: -12.97364330291748
    9. '```' → logprob: -12.97364330291748
    10. '>' → logprob: -13.47364330291748

Token 224: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.07888978719711304
    2. ' p' → logprob: -2.578889846801758
    3. ' ' → logprob: -18.703889846801758
    4. '1' → logprob: -19.703889846801758
    5. '(p' → logprob: -20.203889846801758
    6. ',' → logprob: -20.203889846801758
    7. 'q' → logprob: -20.453889846801758
    8. '   ' → logprob: -20.453889846801758
    9. '```' → logprob: -20.453889846801758
    10. ')p' → logprob: -20.578889846801758

Token 225: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8193366486229934e-05
    2. ',m' → logprob: -11.625018119812012
    3. ' ,' → logprob: -11.875018119812012
    4. ',p' → logprob: -13.750018119812012
    5. ',
' → logprob: -14.250018119812012
    6. '           ' → logprob: -14.875018119812012
    7. '               ' → logprob: -16.875019073486328
    8. '```' → logprob: -16.875019073486328
    9. ',q' → logprob: -17.625019073486328
    10. 'm' → logprob: -17.625019073486328

Token 226: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.2014133334159851
    2. 'm' → logprob: -1.7014133930206299
    3. '(m' → logprob: -18.576414108276367
    4. '	m' → logprob: -18.576414108276367
    5. ' ' → logprob: -19.576414108276367
    6. '<|end|>' → logprob: -19.951414108276367
    7. '```' → logprob: -20.076414108276367
    8. ')m' → logprob: -20.451414108276367
    9. ' ' → logprob: -20.576414108276367
    10. '    ' → logprob: -20.826414108276367

Token 227: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002978048287332058
    2. '-' → logprob: -8.750297546386719
    3. ',' → logprob: -9.750297546386719
    4. ' ' → logprob: -10.375297546386719
    5. ' -' → logprob: -10.625297546386719
    6. 'm' → logprob: -11.750297546386719
    7. '   ' → logprob: -12.500297546386719
    8. '+' → logprob: -12.750297546386719
    9. '           ' → logprob: -13.250297546386719
    10. '               ' → logprob: -13.250297546386719

Token 228: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.47414112091064453
    2. '-' → logprob: -0.9741411209106445
    3. ',' → logprob: -9.724141120910645
    4. ' ' → logprob: -13.349141120910645
    5. '```' → logprob: -13.349141120910645
    6. ')' → logprob: -15.349141120910645
    7. '   ' → logprob: -15.974141120910645
    8. '-,' → logprob: -16.099140167236328
    9. ' ,' → logprob: -16.599140167236328
    10. '       ' → logprob: -16.599140167236328

Token 229: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.003601021133363247
    2. ' q' → logprob: -5.62860107421875
    3. ' ' → logprob: -14.87860107421875
    4. '   ' → logprob: -15.87860107421875
    5. '	q' → logprob: -16.37860107421875
    6. '1' → logprob: -16.62860107421875
    7. '    ' → logprob: -16.87860107421875
    8. '           ' → logprob: -17.12860107421875
    9. '       ' → logprob: -17.25360107421875
    10. '     ' → logprob: -17.94110107421875

Token 230: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.3458322731312364e-06
    2. ' )' → logprob: -12.250007629394531
    3. ']' → logprob: -14.375007629394531
    4. 'in' → logprob: -14.500007629394531
    5. '           ' → logprob: -14.750007629394531
    6. '       ' → logprob: -15.375007629394531
    7. ',' → logprob: -15.500007629394531
    8. '   ' → logprob: -16.12500762939453
    9. '[' → logprob: -16.25000762939453
    10. ' in' → logprob: -16.25000762939453

Token 231: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11305230110883713
    2. 'in' → logprob: -2.2380523681640625
    3. ')' → logprob: -8.488052368164062
    4. ' ' → logprob: -12.113052368164062
    5. ' not' → logprob: -12.238052368164062
    6. '	in' → logprob: -12.488052368164062
    7. ' ' → logprob: -13.363052368164062
    8. '           ' → logprob: -13.488052368164062
    9. ' )' → logprob: -13.738052368164062
    10. '   ' → logprob: -13.863052368164062

Token 232: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.006715370807796717
    2. ' r' → logprob: -5.006715297698975
    3. '	r' → logprob: -19.881715774536133
    4. ' ' → logprob: -21.131715774536133
    5. '   ' → logprob: -21.256715774536133
    6. 's' → logprob: -21.506715774536133
    7. '_r' → logprob: -21.881715774536133
    8. ')' → logprob: -22.506715774536133
    9. '(r' → logprob: -22.631715774536133
    10. '       ' → logprob: -22.756715774536133

Token 233: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6510117053985596
    2. '               ' → logprob: -1.4010117053985596
    3. ':' → logprob: -2.2760117053985596
    4. 'm' → logprob: -2.4010117053985596
    5. '           ' → logprob: -3.2760117053985596
    6. '```' → logprob: -8.40101146697998
    7. '):
' → logprob: -8.65101146697998
    8. ':m' → logprob: -8.77601146697998
    9. 'and' → logprob: -10.02601146697998
    10. '-' → logprob: -10.15101146697998

Token 234: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12372606992721558
    2. 'm' → logprob: -2.9987261295318604
    3. '           ' → logprob: -3.4987261295318604
    4. '```' → logprob: -3.6237261295318604
    5. ' m' → logprob: -4.748725891113281
    6. '``' → logprob: -7.623725891113281
    7. '-' → logprob: -8.873725891113281
    8. '   ' → logprob: -9.748725891113281
    9. ' ' → logprob: -10.123725891113281
    10. '                   ' → logprob: -10.123725891113281

Token 235: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' (adapté à ' m') → logprob: -0.1603795886039734
    2. ' m' → logprob: -1.9103796482086182
    3. '               ' → logprob: -9.035379409790039
    4. '           ' → logprob: -10.285379409790039
    5. '```' → logprob: -13.910379409790039
    6. '                   ' → logprob: -14.285379409790039
    7. '             ' → logprob: -15.535379409790039
    8. '            ' → logprob: -15.910379409790039
    9. '       ' → logprob: -16.41037940979004
    10. '              ' → logprob: -16.66037940979004

Token 236: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6047699318733066e-05
    2. '-=' → logprob: -11.875016212463379
    3. ' -=' → logprob: -12.500016212463379
    4. '-' → logprob: -12.750016212463379
    5. '
' → logprob: -14.500016212463379
    6. '   ' → logprob: -14.875016212463379
    7. ' ' → logprob: -15.000016212463379
    8. '_' → logprob: -15.250016212463379
    9. '>' → logprob: -15.625016212463379
    10. '```' → logprob: -15.750016212463379

Token 237: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.2586829960346222
    2. ' -=' → logprob: -1.5086829662322998
    3. '-' → logprob: -5.133683204650879
    4. '=' → logprob: -7.258683204650879
    5. '+=' → logprob: -9.383683204650879
    6. '           ' → logprob: -11.508683204650879
    7. ' +=' → logprob: -11.883683204650879
    8. '>' → logprob: -12.008683204650879
    9. '   ' → logprob: -12.008683204650879
    10. ' ' → logprob: -12.508683204650879

Token 238: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.5759394764900208
    2. 'p' → logprob: -0.8259394764900208
    3. ' ' → logprob: -17.825939178466797
    4. '	p' → logprob: -18.950939178466797
    5. '(p' → logprob: -18.950939178466797
    6. ' ' → logprob: -19.575939178466797
    7. '1' → logprob: -19.700939178466797
    8. '```' → logprob: -19.700939178466797
    9. '<|end|>' → logprob: -19.950939178466797
    10. ''p' → logprob: -20.450939178466797

Token 239: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.0454821586608887
    2. ' q' → logprob: -1.1704821586608887
    3. ',' → logprob: -1.5454821586608887
    4. 'q' → logprob: -2.4204821586608887
    5. ',q' → logprob: -4.295482158660889
    6. '
' → logprob: -4.670482158660889
    7. '           ' → logprob: -5.420482158660889
    8. '                   ' → logprob: -6.045482158660889
    9. ' p' → logprob: -6.420482158660889
    10. ' ,' → logprob: -7.045482158660889

Token 240: '               ' (ID: 506)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.297837495803833
    2. ' q' → logprob: -1.422837495803833
    3. '               ' → logprob: -4.297837257385254
    4. '1' → logprob: -6.297837257385254
    5. 'p' → logprob: -7.422837257385254
    6. '           ' → logprob: -8.922837257385254
    7. ' p' → logprob: -8.922837257385254
    8. ' ' → logprob: -9.547837257385254
    9. '                   ' → logprob: -10.047837257385254
    10. '       ' → logprob: -10.422837257385254

Token 241: ' m' (ID: 284)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0012791648041456938
    2. ' q' → logprob: -6.751279354095459
    3. '1' → logprob: -9.1262788772583
    4. ' ' → logprob: -16.251279830932617
    5. '	q' → logprob: -18.501279830932617
    6. '-q' → logprob: -19.126279830932617
    7. '-' → logprob: -19.626279830932617
    8. ',q' → logprob: -20.001279830932617
    9. '```' → logprob: -20.376279830932617
    10. '   ' → logprob: -20.751279830932617

Token 242: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.375004768371582
    3. 'q' → logprob: -15.875004768371582
    4. '[' → logprob: -18.125003814697266
    5. '   ' → logprob: -18.500003814697266
    6. '```' → logprob: -18.750003814697266
    7. '0' → logprob: -19.250003814697266
    8. '_' → logprob: -19.625003814697266
    9. '<|end|>' → logprob: -19.875003814697266
    10. '-' → logprob: -19.875003814697266

Token 243: ' -=' (ID: 12583)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.39032161235809326
    2. ' -' → logprob: -2.015321731567383
    3. ' -=' → logprob: -2.140321731567383
    4. '-=' → logprob: -2.640321731567383
    5. '               ' → logprob: -7.515321731567383
    6. '```' → logprob: -9.390321731567383
    7. '           ' → logprob: -9.890321731567383
    8. '                   ' → logprob: -10.140321731567383
    9. '                ' → logprob: -10.640321731567383
    10. ' ' → logprob: -10.765321731567383

Token 244: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0011740362970158458
    2. ' q' → logprob: -6.751173973083496
    3. '1' → logprob: -12.501173973083496
    4. '   ' → logprob: -17.126174926757812
    5. ' ' → logprob: -17.626174926757812
    6. '	q' → logprob: -18.376174926757812
    7. '    ' → logprob: -18.376174926757812
    8. '```' → logprob: -18.376174926757812
    9. '       ' → logprob: -18.501174926757812
    10. '           ' → logprob: -19.001174926757812

Token 245: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.17413410544395447
    2. '<|end|>' → logprob: -2.0491340160369873
    3. '           ' → logprob: -4.049134254455566
    4. ')' → logprob: -4.549134254455566
    5. '       ' → logprob: -6.674134254455566
    6. '                   ' → logprob: -7.674134254455566
    7. ',' → logprob: -8.299134254455566
    8. ' (' → logprob: -8.424134254455566
    9. '```' → logprob: -8.799134254455566
    10. '<|end|>' → logprob: -8.799134254455566

Token 246: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00044223200529813766
    2. '           ' → logprob: -8.875442504882812
    3. 'r' → logprob: -9.250442504882812
    4. ' r' → logprob: -9.375442504882812
    5. '                   ' → logprob: -9.500442504882812
    6. '       ' → logprob: -11.125442504882812
    7. '```' → logprob: -11.125442504882812
    8. '              ' → logprob: -11.750442504882812
    9. '                       ' → logprob: -12.500442504882812
    10. '                ' → logprob: -13.125442504882812

Token 247: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.10020828247070312
    2. ' r' → logprob: -2.350208282470703
    3. '               ' → logprob: -14.100208282470703
    4. '       ' → logprob: -14.725208282470703
    5. '           ' → logprob: -14.850208282470703
    6. '                   ' → logprob: -16.975208282470703
    7. ' ' → logprob: -17.850208282470703
    8. '```' → logprob: -17.850208282470703
    9. '   ' → logprob: -17.975208282470703
    10. '
' → logprob: -18.225208282470703

Token 248: '.remove' (ID: 7986)
  Prédit: '.remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.remove' → logprob: -0.000320330640533939
    2. '.' → logprob: -8.250320434570312
    3. 'remove' → logprob: -9.750320434570312
    4. '.dis' → logprob: -14.375320434570312
    5. ' .' → logprob: -16.125320434570312
    6. '.add' → logprob: -17.000320434570312
    7. ' remove' → logprob: -18.250320434570312
    8. '.Remove' → logprob: -19.875320434570312
    9. '	remove' → logprob: -20.125320434570312
    10. '   ' → logprob: -20.875320434570312

Token 249: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -2.816093228830141e-06
    2. '(m' → logprob: -12.87500286102295
    3. '[(' → logprob: -16.250001907348633
    4. ' ((' → logprob: -16.250001907348633
    5. '(' → logprob: -17.375001907348633
    6. '   ' → logprob: -18.625001907348633
    7. '```' → logprob: -18.625001907348633
    8. ' ' → logprob: -18.875001907348633
    9. '(
' → logprob: -20.250001907348633
    10. ')((' → logprob: -20.625001907348633

Token 250: 'm' (ID: 76)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.16025835275650024
    2. 'm' → logprob: -1.9102582931518555
    3. ' (' → logprob: -10.785258293151855
    4. ' m' → logprob: -11.910258293151855
    5. '   ' → logprob: -12.535258293151855
    6. '	m' → logprob: -14.160258293151855
    7. '[m' → logprob: -15.160258293151855
    8. '           ' → logprob: -15.410258293151855
    9. '    ' → logprob: -15.535258293151855
    10. ')m' → logprob: -15.660258293151855

Token 251: '0' (ID: 15)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.1971551775932312
    2. '(m' → logprob: -1.947155237197876
    3. '0' → logprob: -3.322155237197876
    4. ' m' → logprob: -9.072154998779297
    5. ' (' → logprob: -10.697154998779297
    6. '(' → logprob: -10.822154998779297
    7. ')' → logprob: -11.822154998779297
    8. '[m' → logprob: -12.447154998779297
    9. ',' → logprob: -12.697154998779297
    10. '```' → logprob: -13.572154998779297

Token 252: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1529359519481659
    2. '(m' → logprob: -2.0279359817504883
    3. '               ' → logprob: -5.652935981750488
    4. 'm' → logprob: -5.652935981750488
    5. ',m' → logprob: -6.027935981750488
    6. ' (' → logprob: -8.027935981750488
    7. ' ,' → logprob: -8.527935981750488
    8. '           ' → logprob: -9.527935981750488
    9. ')' → logprob: -9.527935981750488
    10. '                   ' → logprob: -10.027935981750488

Token 253: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0003802680876106024
    2. ' m' → logprob: -7.875380039215088
    3. '   ' → logprob: -16.37537956237793
    4. '    ' → logprob: -17.62537956237793
    5. '```' → logprob: -18.50037956237793
    6. ')' → logprob: -18.62537956237793
    7. '       ' → logprob: -18.75037956237793
    8. '	m' → logprob: -18.75037956237793
    9. '           ' → logprob: -18.75037956237793
    10. '  ' → logprob: -18.75037956237793

Token 254: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00024287392443511635
    2. 'm' → logprob: -8.375243186950684
    3. ' ' → logprob: -11.875243186950684
    4. ' m' → logprob: -13.000243186950684
    5. '   ' → logprob: -14.000243186950684
    6. ')' → logprob: -14.125243186950684
    7. '-' → logprob: -15.000243186950684
    8. '0' → logprob: -15.125243186950684
    9. '```' → logprob: -15.500243186950684
    10. '     ' → logprob: -15.750243186950684

Token 255: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013852359261363745
    2. ')
' → logprob: -6.87638521194458
    3. '))' → logprob: -8.001385688781738
    4. '           ' → logprob: -11.376385688781738
    5. '               ' → logprob: -13.251385688781738
    6. '))
' → logprob: -13.876385688781738
    7. ')

' → logprob: -14.376385688781738
    8. ')`' → logprob: -14.376385688781738
    9. '       ' → logprob: -14.626385688781738
    10. ' )' → logprob: -14.876385688781738

Token 256: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015861510764807463
    2. '           ' → logprob: -6.751585960388184
    3. '```' → logprob: -8.501585960388184
    4. '               ' → logprob: -9.376585960388184
    5. '
' → logprob: -10.001585960388184
    6. '<|end|>' → logprob: -10.251585960388184
    7. ',' → logprob: -11.501585960388184
    8. '        
' → logprob: -12.001585960388184
    9. 'j' → logprob: -12.126585960388184
    10. '``' → logprob: -12.126585960388184

Token 257: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015006985049694777
    2. '           ' → logprob: -7.001500606536865
    3. '<|end|>' → logprob: -8.251501083374023
    4. ' j' → logprob: -9.376501083374023
    5. '               ' → logprob: -9.501501083374023
    6. 'j' → logprob: -9.876501083374023
    7. '<|end|>' → logprob: -10.501501083374023
    8. ',' → logprob: -10.626501083374023
    9. ')' → logprob: -11.126501083374023
    10. ',j' → logprob: -11.501501083374023

Token 258: ' cur' (ID: 4396)
  Prédit: ' cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cur' → logprob: -0.11284902691841125
    2. 'cur' → logprob: -2.237848997116089
    3. '       ' → logprob: -11.862849235534668
    4. '   ' → logprob: -12.112849235534668
    5. '	cur' → logprob: -12.487849235534668
    6. '(cur' → logprob: -12.987849235534668
    7. '           ' → logprob: -13.237849235534668
    8. ' ' → logprob: -13.737849235534668
    9. '[cur' → logprob: -13.862849235534668
    10. ' ' → logprob: -14.112849235534668

Token 259: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.8624639324116288e-06
    2. 'a' → logprob: -14.750001907348633
    3. ' ans' → logprob: -14.875001907348633
    4. '_ans' → logprob: -15.500001907348633
    5. '<' → logprob: -15.750001907348633
    6. 'an' → logprob: -16.125001907348633
    7. '(ans' → logprob: -16.125001907348633
    8. '   ' → logprob: -16.250001907348633
    9. '>' → logprob: -16.500001907348633
    10. '	ans' → logprob: -17.250001907348633

Token 260: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.01692834682762623
    2. '<' → logprob: -4.141928195953369
    3. ' <=' → logprob: -7.891928195953369
    4. ' ' → logprob: -8.891928672790527
    5. ' >' → logprob: -8.891928672790527
    6. ' ==' → logprob: -9.141928672790527
    7. '   ' → logprob: -10.016928672790527
    8. ' >=' → logprob: -10.641928672790527
    9. ' +' → logprob: -11.141928672790527
    10. '+' → logprob: -11.141928672790527

Token 261: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.004080420359969139
    2. ' min' → logprob: -5.504080295562744
    3. '   ' → logprob: -13.504080772399902
    4. '	min' → logprob: -14.754080772399902
    5. '       ' → logprob: -16.879079818725586
    6. '0' → logprob: -17.004079818725586
    7. ' ' → logprob: -17.004079818725586
    8. '(min' → logprob: -17.254079818725586
    9. 'm' → logprob: -17.754079818725586
    10. '```' → logprob: -17.879079818725586

Token 262: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.1472419600977446e-06
    2. '(ans' → logprob: -15.000000953674316
    3. '   ' → logprob: -15.250000953674316
    4. ')' → logprob: -16.875001907348633
    5. ' ans' → logprob: -16.875001907348633
    6. '
' → logprob: -17.250001907348633
    7. '

' → logprob: -17.375001907348633
    8. 'i' → logprob: -17.500001907348633
    9. '```' → logprob: -17.625001907348633
    10. 'min' → logprob: -17.625001907348633

Token 263: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18052436411380768
    2. ':
' → logprob: -1.8055243492126465
    3. '           ' → logprob: -7.3055243492126465
    4. '       ' → logprob: -10.180524826049805
    5. '):
' → logprob: -11.055524826049805
    6. ':
' → logprob: -11.555524826049805
    7. '):' → logprob: -12.055524826049805
    8. '=' → logprob: -12.555524826049805
    9. ' and' → logprob: -12.680524826049805
    10. '<|end|>' → logprob: -12.680524826049805

Token 264: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01804024539887905
    2. ':
' → logprob: -5.018040180206299
    3. ':' → logprob: -5.268040180206299
    4. ' min' → logprob: -5.768040180206299
    5. 'min' → logprob: -6.518040180206299
    6. '(min' → logprob: -7.018040180206299
    7. '               ' → logprob: -9.018040657043457
    8. '[min' → logprob: -9.268040657043457
    9. '       ' → logprob: -9.518040657043457
    10. ':min' → logprob: -9.893040657043457

Token 265: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.040722139179706573
    2. '           ' → logprob: -3.790722131729126
    3. '               ' → logprob: -4.415722370147705
    4. 'min' (adapté à ' min') → logprob: -5.290722370147705
    5. '	min' → logprob: -9.415721893310547
    6. '            ' → logprob: -10.790721893310547
    7. '[min' → logprob: -10.790721893310547
    8. '(min' → logprob: -10.915721893310547
    9. '   ' → logprob: -10.915721893310547
    10. '                   ' → logprob: -11.665721893310547

Token 266: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -6.704273118884885e-07
    2. ' ans' → logprob: -15.375000953674316
    3. '_ans' → logprob: -16.125
    4. 'a' → logprob: -16.375
    5. '(ans' → logprob: -16.625
    6. 'an' → logprob: -16.875
    7. '	ans' → logprob: -17.5
    8. 'ens' → logprob: -18.125
    9. '_' → logprob: -19.0
    10. '   ' → logprob: -19.0

Token 267: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141403377056122
    2. '=' → logprob: -1.7014139890670776
    3. ' ' → logprob: -15.576414108276367
    4. ',' → logprob: -15.576414108276367
    5. ' =
' → logprob: -16.326414108276367
    6. '   ' → logprob: -16.326414108276367
    7. '    ' → logprob: -16.826414108276367
    8. '＝' → logprob: -16.951414108276367
    9. '            ' → logprob: -17.451414108276367
    10. '        ' → logprob: -17.951414108276367

Token 268: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.011048054322600365
    2. ' cur' → logprob: -4.511047840118408
    3. '	cur' → logprob: -16.13604736328125
    4. '   ' → logprob: -16.63604736328125
    5. '       ' → logprob: -16.76104736328125
    6. '           ' → logprob: -17.51104736328125
    7. '[cur' → logprob: -18.26104736328125
    8. '(cur' → logprob: -18.76104736328125
    9. ' ' → logprob: -19.38604736328125
    10. ' ' → logprob: -19.76104736328125

Token 269: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -2.339278580620885e-06
    2. ' ans' → logprob: -13.750001907348633
    3. 'an' → logprob: -15.750001907348633
    4. 'cur' → logprob: -16.125001907348633
    5. '   ' → logprob: -16.250001907348633
    6. 'a' → logprob: -16.375001907348633
    7. '	ans' → logprob: -16.500001907348633
    8. 'ens' → logprob: -16.625001907348633
    9. ' ' → logprob: -16.625001907348633
    10. '_ans' → logprob: -16.750001907348633

Token 270: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006800868082791567
    2. '
' → logprob: -5.256800651550293
    3. '        
' → logprob: -7.506800651550293
    4. '<|end|>' → logprob: -7.756800651550293
    5. 'j' → logprob: -8.381800651550293
    6. '```' → logprob: -9.631800651550293
    7. '           ' → logprob: -10.006800651550293
    8. '   ' → logprob: -10.131800651550293
    9. ',' → logprob: -10.131800651550293
    10. ' j' → logprob: -10.256800651550293

Token 271: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017334384843707085
    2. '        
' → logprob: -5.142334461212158
    3. '
' → logprob: -5.267334461212158
    4. '<|end|>' → logprob: -6.392334461212158
    5. '           ' → logprob: -6.517334461212158
    6. '   ' → logprob: -7.142334461212158
    7. '```' → logprob: -8.142333984375
    8. 'j' → logprob: -8.642333984375
    9. ' 
' → logprob: -8.642333984375
    10. '    
' → logprob: -8.642333984375

Token 272: ' j' (ID: 441)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001647326396778226
    2. 'j' (adapté à ' j') → logprob: -6.751647472381592
    3. '
' → logprob: -8.251646995544434
    4. ' j' → logprob: -8.876646995544434
    5. '   ' → logprob: -11.001646995544434
    6. '```' → logprob: -11.001646995544434
    7. '	j' → logprob: -11.376646995544434
    8. ',j' → logprob: -11.876646995544434
    9. '        
' → logprob: -12.251646995544434
    10. '           ' → logprob: -12.251646995544434

Token 273: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.06251979619264603
    2. ' +=' → logprob: -2.8125197887420654
    3. '+' → logprob: -7.5625200271606445
    4. '=' → logprob: -10.437520027160645
    5. ']+=' → logprob: -14.062520027160645
    6. '++' → logprob: -14.062520027160645
    7. '+="' → logprob: -14.437520027160645
    8. '+='' → logprob: -14.937520027160645
    9. '```' → logprob: -15.187520027160645
    10. ')' → logprob: -15.187520027160645

Token 274: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023083435371518135
    2. ' ' → logprob: -8.37523078918457
    3. '   ' → logprob: -16.12523078918457
    4. '```' → logprob: -16.12523078918457
    5. '       ' → logprob: -19.87523078918457
    6. '
' → logprob: -20.25023078918457
    7. '2' → logprob: -20.37523078918457
    8. '``' → logprob: -20.62523078918457
    9. '+' → logprob: -20.75023078918457
    10. '           ' → logprob: -20.75023078918457

Token 275: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '```' → logprob: -19.125
    4. '   ' → logprob: -19.375
    5. '2' → logprob: -21.0
    6. '
' → logprob: -21.0
    7. '+' → logprob: -21.875
    8. '       ' → logprob: -22.125
    9. '  ' → logprob: -22.5
    10. '１' → logprob: -23.3125

Token 276: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011697117239236832
    2. '
' → logprob: -4.636697292327881
    3. '```' → logprob: -7.261697292327881
    4. 'i' → logprob: -7.386697292327881
    5. '<|end|>' → logprob: -8.136696815490723
    6. '    
' → logprob: -9.761696815490723
    7. '\n' → logprob: -9.886696815490723
    8. ',' → logprob: -9.886696815490723
    9. '<|end|>' → logprob: -10.011696815490723
    10. '       ' → logprob: -10.761696815490723

Token 277: '   ' (ID: 271)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16207505762577057
    2. '   ' → logprob: -1.9120750427246094
    3. ' i' → logprob: -6.412075042724609
    4. '```' → logprob: -8.91207504272461
    5. '	i' → logprob: -10.03707504272461
    6. '
' → logprob: -10.66207504272461
    7. '``' → logprob: -13.41207504272461
    8. '       ' → logprob: -13.41207504272461
    9. '    
' → logprob: -14.66207504272461
    10. '  ' → logprob: -14.78707504272461

Token 278: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.7013082504272461
    2. '   ' → logprob: -0.7013082504272461
    3. ' i' → logprob: -4.826308250427246
    4. '	i' → logprob: -9.326308250427246
    5. '  ' → logprob: -12.201308250427246
    6. '
' → logprob: -12.201308250427246
    7. ' ' → logprob: -12.701308250427246
    8. '       ' → logprob: -12.701308250427246
    9. '    
' → logprob: -13.076308250427246
    10. '    ' → logprob: -13.701308250427246

Token 279: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.005285934545099735
    2. ' +=' → logprob: -5.255285739898682
    3. '=' → logprob: -10.50528621673584
    4. '+' → logprob: -10.63028621673584
    5. ']+=' → logprob: -15.00528621673584
    6. '+='' → logprob: -16.255285263061523
    7. '+="' → logprob: -16.380285263061523
    8. '   ' → logprob: -17.630285263061523
    9. '++' → logprob: -18.505285263061523
    10. '+=(' → logprob: -18.505285263061523

Token 280: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -20.000003814697266
    4. '```' → logprob: -20.125003814697266
    5. '2' → logprob: -21.125003814697266
    6. '
' → logprob: -22.250003814697266
    7. '+' → logprob: -22.625003814697266
    8. '  ' → logprob: -23.250003814697266
    9. '１' → logprob: -23.750003814697266
    10. '۱' → logprob: -24.125003814697266

Token 281: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '
' → logprob: -19.625
    4. '```' → logprob: -20.125
    5. '   ' → logprob: -20.375
    6. '+' → logprob: -20.875
    7. '2' → logprob: -21.375
    8. '１' → logprob: -22.25
    9. '  ' → logprob: -22.5
    10. '۱' → logprob: -23.75

Token 282: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003044802288059145
    2. '
' → logprob: -8.125304222106934
    3. '```' → logprob: -12.000304222106934
    4. ' print' → logprob: -13.875304222106934
    5. 'if' → logprob: -14.250304222106934
    6. '``' → logprob: -16.25030517578125
    7. 'n' → logprob: -16.37530517578125
    8. '#' → logprob: -16.62530517578125
    9. 'pr' → logprob: -16.75030517578125
    10. 'for' → logprob: -16.87530517578125

Token 283: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.8789383830153383e-05
    2. 'if' → logprob: -11.500019073486328
    3. '
' → logprob: -12.125019073486328
    4. ' print' → logprob: -13.375019073486328
    5. '```' → logprob: -13.375019073486328
    6. 'pr' → logprob: -17.875019073486328
    7. '#print' → logprob: -17.875019073486328
    8. '``' → logprob: -18.000019073486328
    9. '#' → logprob: -18.500019073486328
    10. 'for' → logprob: -18.875019073486328

Token 284: ' min' (ID: 1349)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.22687973082065582
    2. ' min' → logprob: -2.101879835128784
    3. 'n' → logprob: -2.726879835128784
    4. 'min' → logprob: -4.226879596710205
    5. ' len' → logprob: -8.101880073547363
    6. ' not' → logprob: -8.601880073547363
    7. ' ' → logprob: -8.601880073547363
    8. 'len' → logprob: -10.601880073547363
    9. 'not' → logprob: -11.226880073547363
    10. '  ' → logprob: -11.976880073547363

Token 285: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -6.392202976712724e-06
    2. '_ans' → logprob: -13.125006675720215
    3. '(ans' → logprob: -13.250006675720215
    4. '==' → logprob: -13.875006675720215
    5. ' ans' → logprob: -14.375006675720215
    6. ' ==' → logprob: -15.250006675720215
    7. 'min' → logprob: -16.0000057220459
    8. '	ans' → logprob: -16.1250057220459
    9. 'rans' → logprob: -16.6250057220459
    10. '```' → logprob: -16.8750057220459

Token 286: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.11453810334205627
    2. '==' → logprob: -2.2395381927490234
    3. '>' → logprob: -6.989538192749023
    4. ' >' → logprob: -7.239538192749023
    5. ' <' → logprob: -10.989538192749023
    6. ' !=' → logprob: -11.239538192749023
    7. '   ' → logprob: -11.739538192749023
    8. '```' → logprob: -11.739538192749023
    9. ' <=' → logprob: -11.989538192749023
    10. '<' → logprob: -12.114538192749023

Token 287: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0007889019907452166
    2. ' ' → logprob: -7.375788688659668
    3. 'n' → logprob: -9.000788688659668
    4. '0' → logprob: -10.500788688659668
    5. ' n' → logprob: -12.750788688659668
    6. '10' → logprob: -13.000788688659668
    7. '1' → logprob: -13.000788688659668
    8. '   ' → logprob: -13.375788688659668
    9. '999' → logprob: -14.250788688659668
    10. 'float' → logprob: -14.750788688659668

Token 288: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0005530327325686812
    2. 'n' → logprob: -7.750553131103516
    3. '0' → logprob: -9.500553131103516
    4. '1' → logprob: -10.250553131103516
    5. 'float' → logprob: -12.375553131103516
    6. '10' → logprob: -12.625553131103516
    7. ' ' → logprob: -13.125553131103516
    8. '999' → logprob: -13.750553131103516
    9. 'int' → logprob: -15.250553131103516
    10. '```' → logprob: -15.250553131103516

Token 289: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.0006413076189346611
    2. 'min' → logprob: -7.500641345977783
    3. '```' → logprob: -10.625640869140625
    4. ' ' → logprob: -11.000640869140625
    5. '0' → logprob: -11.125640869140625
    6. '7' → logprob: -11.750640869140625
    7. '6' → logprob: -12.000640869140625
    8. '``' → logprob: -12.000640869140625
    9. '   ' → logprob: -12.875640869140625
    10. '9' → logprob: -13.125640869140625

Token 290: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.0009943449404090643
    2. '```' → logprob: -7.1259942054748535
    3. '0' → logprob: -9.375994682312012
    4. ' ' → logprob: -10.750994682312012
    5. '``' → logprob: -10.875994682312012
    6. '
' → logprob: -10.875994682312012
    7. '   ' → logprob: -11.500994682312012
    8. 'ans' → logprob: -12.000994682312012
    9. '6' → logprob: -12.125994682312012
    10. '100' → logprob: -12.375994682312012

Token 291: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.007675960194319487
    2. '0' → logprob: -5.257676124572754
    3. '```' → logprob: -6.632676124572754
    4. '7' → logprob: -7.007676124572754
    5. '6' → logprob: -9.507676124572754
    6. '3' → logprob: -10.007676124572754
    7. '   ' → logprob: -10.257676124572754
    8. '``' → logprob: -10.382676124572754
    9. '00' → logprob: -12.007676124572754
    10. '
' → logprob: -12.257676124572754

Token 292: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00402793800458312
    2. '000' → logprob: -5.629027843475342
    3. '```' → logprob: -8.1290283203125
    4. '00' → logprob: -9.1290283203125
    5. '``' → logprob: -11.8790283203125
    6. '   ' → logprob: -12.0040283203125
    7. '6' → logprob: -12.3790283203125
    8. '       ' → logprob: -13.3790283203125
    9. '1' → logprob: -13.5040283203125
    10. '100' → logprob: -14.2540283203125

Token 293: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3875535726547241
    2. ':' → logprob: -1.1375535726547241
    3. '==' → logprob: -8.137553215026855
    4. ' ==' → logprob: -8.262553215026855
    5. '   ' → logprob: -9.387553215026855
    6. ':return' → logprob: -11.012553215026855
    7. ':

' → logprob: -12.137553215026855
    8. 'print' → logprob: -12.137553215026855
    9. '():
' → logprob: -12.512553215026855
    10. '=' → logprob: -13.012553215026855

Token 294: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3630731403827667
    2. '   ' → logprob: -1.4880731105804443
    3. ' print' → logprob: -2.9880731105804443
    4. 'min' → logprob: -3.7380731105804443
    5. ' min' → logprob: -5.488073348999023
    6. 'n' → logprob: -8.863073348999023
    7. ' n' → logprob: -10.363073348999023
    8. ':' → logprob: -10.613073348999023
    9. ':
' → logprob: -10.613073348999023
    10. '[min' → logprob: -10.863073348999023

Token 295: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.16022910177707672
    2. 'min' → logprob: -1.9102290868759155
    3. '   ' → logprob: -13.285228729248047
    4. ' print' → logprob: -13.785228729248047
    5. '1' → logprob: -13.910228729248047
    6. ' min' → logprob: -14.660228729248047
    7. '```' → logprob: -15.035228729248047
    8. '0' → logprob: -16.160228729248047
    9. 'n' → logprob: -16.410228729248047
    10. '
' → logprob: -16.660228729248047

Token 296: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5328341126441956
    2. '(n' → logprob: -0.9078341126441956
    3. '(-' → logprob: -5.907834053039551
    4. '0' → logprob: -6.157834053039551
    5. '1' → logprob: -6.157834053039551
    6. '(len' → logprob: -6.282834053039551
    7. 'n' → logprob: -7.282834053039551
    8. '()' → logprob: -10.03283405303955
    9. '("' → logprob: -10.28283405303955
    10. '('' → logprob: -10.53283405303955

Token 297: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.35549381375312805
    2. 'n' → logprob: -1.2304937839508057
    3. '0' → logprob: -5.105494022369385
    4. '-' → logprob: -7.355494022369385
    5. 'len' → logprob: -8.230493545532227
    6. ' n' → logprob: -11.355493545532227
    7. '"' → logprob: -12.105493545532227
    8. '
' → logprob: -12.542993545532227
    9. '2' → logprob: -12.605493545532227
    10. '(n' → logprob: -12.667993545532227

Token 298: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009158630855381489
    2. ')
' → logprob: -7.000916004180908
    3. 'else' → logprob: -13.12591552734375
    4. '())' → logprob: -14.12591552734375
    5. '()' → logprob: -14.25091552734375
    6. ' )' → logprob: -14.37591552734375
    7. '   ' → logprob: -16.00091552734375
    8. '))' → logprob: -16.50091552734375
    9. ')#' → logprob: -16.87591552734375
    10. '")' → logprob: -17.37591552734375

Token 299: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -3.583550642360933e-05
    2. ' else' → logprob: -10.250036239624023
    3. 'print' → logprob: -15.500036239624023
    4. '```' → logprob: -16.625036239624023
    5. 'elif' → logprob: -17.625036239624023
    6. '#else' → logprob: -19.250036239624023
    7. '	else' → logprob: -19.500036239624023
    8. '_else' → logprob: -19.625036239624023
    9. '
' → logprob: -19.875036239624023
    10. '   ' → logprob: -19.875036239624023

Token 300: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15203197300434113
    2. ':
' → logprob: -2.152031898498535
    3. '   ' → logprob: -4.027031898498535
    4. ' print' → logprob: -5.527031898498535
    5. 'print' → logprob: -5.902031898498535
    6. '(print' → logprob: -8.777031898498535
    7. '       ' → logprob: -10.902031898498535
    8. ' :
' → logprob: -11.152031898498535
    9. '.print' → logprob: -11.527031898498535
    10. ' :' → logprob: -11.527031898498535

Token 301: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.39143720269203186
    2. '   ' → logprob: -1.1414371728897095
    3. ' print' → logprob: -5.39143705368042
    4. '	print' → logprob: -15.516437530517578
    5. '```' → logprob: -15.641437530517578
    6. '       ' → logprob: -16.891437530517578
    7. '   ' → logprob: -19.766437530517578
    8. '.print' → logprob: -20.016437530517578
    9. ' ' → logprob: -20.266437530517578
    10. '(print' → logprob: -20.766437530517578

Token 302: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -8.061054359131958e-06
    2. ' print' → logprob: -11.750007629394531
    3. '   ' → logprob: -16.25000762939453
    4. '	print' → logprob: -21.75000762939453
    5. '```' → logprob: -22.25000762939453
    6. '.print' → logprob: -25.75000762939453
    7. '       ' → logprob: -25.87500762939453
    8. ' ' → logprob: -26.12500762939453
    9. 'Print' → logprob: -26.12500762939453
    10. 'printf' → logprob: -26.25000762939453

Token 303: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.0024756586644798517
    2. 'min' → logprob: -6.002475738525391
    3. ' min' → logprob: -18.00247573852539
    4. '(' → logprob: -20.62747573852539
    5. '[min' → logprob: -21.62747573852539
    6. '(m' → logprob: -21.62747573852539
    7. '	min' → logprob: -21.75247573852539
    8. ',min' → logprob: -22.00247573852539
    9. '(max' → logprob: -22.75247573852539
    10. '_min' → logprob: -23.50247573852539

Token 304: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: 0.0
    2. ' ans' → logprob: -20.625
    3. '(ans' → logprob: -21.0
    4. '_ans' → logprob: -21.25
    5. 'Ans' → logprob: -21.5
    6. 'a' → logprob: -21.625
    7. 'ens' → logprob: -22.0
    8. '	ans' → logprob: -22.625
    9. 'an' → logprob: -22.875
    10. 'abs' → logprob: -23.25

Token 305: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ')
' → logprob: -16.0
    3. ' )' → logprob: -17.125
    4. '))' → logprob: -17.75
    5. '())' → logprob: -18.75
    6. ')`' → logprob: -19.0
    7. ')}' → logprob: -19.125
    8. '`)' → logprob: -19.25
    9. '}' → logprob: -19.5
    10. '')' → logprob: -19.625


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 303
Tokens correctement prédits (1ère position, stricte): 138
Tokens correctement prédits (1ère position, avec adaptation): 147
Tokens correctement prédits (top 10): 272
Précision stricte (1ère position): 45.54%
Précision adaptée (1ère position): 48.51%
Précision (top 10): 89.77%
================================================================================
