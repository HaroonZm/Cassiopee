================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:11:09
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from operator import mul
from functools import reduce
N = int(input())
weird_answer = 0
n_values = list(range(1, N+1))[::2]
for num in n_values:
    factors = list(filter(lambda d: num % d == 0, range(1, num+1)))
    weird_counter = reduce(lambda x, _: x+1, factors, 0)
    if weird_counter == 8:
        weird_answer += 1
else:
    print(weird_answer)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' operator' (ID: 11019)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' mul' (ID: 9975)
  Prédit: ' item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' item' → logprob: -0.5674374103546143
    2. ' import' → logprob: -1.1924374103546143
    3. 'item' → logprob: -2.6924374103546143
    4. ' add' → logprob: -3.1924374103546143
    5. 'add' → logprob: -4.692437171936035
    6. 'import' → logprob: -4.817437171936035
    7. ' attr' → logprob: -6.817437171936035
    8. ' ' → logprob: -7.317437171936035
    9. 'attr' → logprob: -7.442437171936035
    10. 'getitem' → logprob: -7.942437171936035

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012280172668397427
    2. '*' → logprob: -4.637279987335205
    3. ',' → logprob: -6.512279987335205
    4. '(
' → logprob: -8.262280464172363
    5. '*(' → logprob: -8.762280464172363
    6. ' (' → logprob: -8.887280464172363
    7. '\(' → logprob: -9.012280464172363
    8. '```' → logprob: -9.887280464172363
    9. 'import' → logprob: -10.137280464172363
    10. '(a' → logprob: -10.137280464172363

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.060761138796806335
    2. '*' → logprob: -3.4357612133026123
    3. ',' → logprob: -3.9357612133026123
    4. '\(' → logprob: -6.310760974884033
    5. '(
' → logprob: -6.560760974884033
    6. '.' → logprob: -7.060760974884033
    7. '\' → logprob: -7.435760974884033
    8. ' (' → logprob: -7.810760974884033
    9. 'a' → logprob: -8.060761451721191
    10. '#' → logprob: -8.185761451721191

Token 6: ' functools' (ID: 142636)
  Prédit: ' functools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' functools' → logprob: -0.1159970685839653
    2. 'fun' → logprob: -2.615997076034546
    3. ' itertools' → logprob: -3.490997076034546
    4. ' math' → logprob: -5.615996837615967
    5. 'math' → logprob: -6.365996837615967
    6. 'operator' → logprob: -8.115997314453125
    7. ' operator' → logprob: -8.865997314453125
    8. ' fun' → logprob: -9.615997314453125
    9. '_' → logprob: -10.490997314453125
    10. '_fun' → logprob: -10.990997314453125

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.48855942487716675
    2. 'import' → logprob: -0.9885594248771667
    3. '.' → logprob: -4.488559246063232
    4. '.import' → logprob: -6.488559246063232
    5. '_import' → logprob: -7.488559246063232
    6. ' ' → logprob: -8.36355972290039
    7. '	import' → logprob: -8.61355972290039
    8. '<|end|>' → logprob: -8.61355972290039
    9. ' .' → logprob: -8.73855972290039
    10. '_' → logprob: -8.98855972290039

Token 8: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.015375682152807713
    2. ' reduce' → logprob: -4.39037561416626
    3. 'partial' → logprob: -5.89037561416626
    4. ' partial' → logprob: -9.890376091003418
    5. 'redu' → logprob: -10.640376091003418
    6. 'import' → logprob: -11.640376091003418
    7. '_reduce' → logprob: -12.390376091003418
    8. '.reduce' → logprob: -12.515376091003418
    9. 'wrap' → logprob: -13.515376091003418
    10. 'l' → logprob: -14.015376091003418

Token 9: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014106967486441135
    2. '(
' → logprob: -4.389106750488281
    3. 'def' → logprob: -7.639106750488281
    4. '\' → logprob: -8.264106750488281
    5. '\n' → logprob: -8.389106750488281
    6. '(

' → logprob: -8.889106750488281
    7. '(lambda' → logprob: -9.139106750488281
    8. '`' → logprob: -9.764106750488281
    9. '```' → logprob: -9.764106750488281
    10. ',' → logprob: -9.764106750488281

Token 10: 'N' (ID: 45)
  Prédit: '(
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(
' → logprob: -0.7301336526870728
    2. '(' → logprob: -0.8551336526870728
    3. 'def' → logprob: -3.605133533477783
    4. '\' → logprob: -3.730133533477783
    5. '\n' → logprob: -3.855133533477783
    6. '(

' → logprob: -4.355133533477783
    7. '\(' → logprob: -6.730133533477783
    8. '```' → logprob: -6.730133533477783
    9. 'print' → logprob: -7.230133533477783
    10. '
' → logprob: -7.230133533477783

Token 11: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6333219408988953
    2. ' =' → logprob: -1.25832200050354
    3. ',' → logprob: -2.38332200050354
    4. '_' → logprob: -2.88332200050354
    5. ' ' → logprob: -4.258321762084961
    6. '[' → logprob: -5.133321762084961
    7. '.' → logprob: -5.258321762084961
    8. 'u' → logprob: -5.758321762084961
    9. ')' → logprob: -6.008321762084961
    10. '  ' → logprob: -7.258321762084961

Token 12: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0195088442414999
    2. '10' → logprob: -4.5195088386535645
    3. '100' → logprob: -5.7695088386535645
    4. ' int' → logprob: -7.0195088386535645
    5. '5' → logprob: -7.1445088386535645
    6. '0' → logprob: -7.2695088386535645
    7. '1' → logprob: -7.2695088386535645
    8. 'int' → logprob: -7.2695088386535645
    9. '20' → logprob: -7.6445088386535645
    10. '32' → logprob: -7.7695088386535645

Token 13: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00027694785967469215
    2. '('' → logprob: -8.875276565551758
    3. '(`' → logprob: -10.375276565551758
    4. '(input' → logprob: -10.625276565551758
    5. '()' → logprob: -10.875276565551758
    6. '(N' → logprob: -11.000276565551758
    7. ' (' → logprob: -11.125276565551758
    8. '(
' → logprob: -12.375276565551758
    9. '`' → logprob: -12.625276565551758
    10. '```' → logprob: -12.750276565551758

Token 14: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.20573750138282776
    2. '(' → logprob: -2.080737590789795
    3. '())' → logprob: -3.080737590789795
    4. ')' → logprob: -4.330737590789795
    5. '('' → logprob: -6.455737590789795
    6. '(
' → logprob: -8.580737113952637
    7. '))' → logprob: -9.955737113952637
    8. '()))' → logprob: -10.455737113952637
    9. '')' → logprob: -10.455737113952637
    10. '(()' → logprob: -10.705737113952637

Token 15: 'we' (ID: 854)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9532328844070435
    2. 'result' → logprob: -1.5782328844070435
    3. 'data' → logprob: -1.7032328844070435
    4. 'arr' → logprob: -3.203232765197754
    5. 'numbers' → logprob: -3.203232765197754
    6. 'lst' → logprob: -3.578232765197754
    7. 'array' → logprob: -4.078232765197754
    8. 's' → logprob: -4.328232765197754
    9. 'values' → logprob: -4.578232765197754
    10. 'print' → logprob: -4.578232765197754

Token 16: 'ird' (ID: 2716)
  Prédit: 'ights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ights' → logprob: -0.06324116885662079
    2. 'ight' → logprob: -3.1882412433624268
    3. 'ighted' → logprob: -4.438241004943848
    4. 'igh' → logprob: -5.563241004943848
    5. 'ighting' → logprob: -6.188241004943848
    6. 'ighters' → logprob: -8.188241004943848
    7. 'ak' → logprob: -8.438241004943848
    8. 'i' → logprob: -8.688241004943848
    9. 'ighter' → logprob: -8.688241004943848
    10. 'apons' → logprob: -8.688241004943848

Token 17: '_answer' (ID: 65702)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.25144416093826294
    2. '_list' → logprob: -2.126444101333618
    3. '_numbers' → logprob: -4.376444339752197
    4. '_m' → logprob: -4.501444339752197
    5. ' =' → logprob: -4.751444339752197
    6. '_sum' → logprob: -4.876444339752197
    7. '_sequence' → logprob: -5.001444339752197
    8. ' ' → logprob: -5.126444339752197
    9. '_array' → logprob: -5.126444339752197
    10. '_mul' → logprob: -5.626444339752197

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.147426038980484
    2. '=' → logprob: -2.022426128387451
    3. '_' → logprob: -5.647426128387451
    4. ' ' → logprob: -7.522426128387451
    5. '(' → logprob: -8.022425651550293
    6. 's' → logprob: -8.147425651550293
    7. ')' → logprob: -11.397425651550293
    8. '  ' → logprob: -12.397425651550293
    9. '_space' → logprob: -12.397425651550293
    10. '[' → logprob: -12.647425651550293

Token 19: ' ' (ID: 220)
  Prédit: ' reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reduce' → logprob: -0.35394343733787537
    2. 'reduce' → logprob: -1.2289434671401978
    3. ' ' → logprob: -5.853943347930908
    4. ' list' → logprob: -7.353943347930908
    5. '1' → logprob: -7.603943347930908
    6. ''' → logprob: -7.603943347930908
    7. '"' → logprob: -8.228943824768066
    8. '0' → logprob: -8.728943824768066
    9. ' '' → logprob: -9.103943824768066
    10. ' N' → logprob: -9.353943824768066

Token 20: '0' (ID: 15)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.0033741232473403215
    2. '[' → logprob: -6.753374099731445
    3. '1' → logprob: -7.253374099731445
    4. 'list' → logprob: -8.253374099731445
    5. '[int' → logprob: -8.253374099731445
    6. ' reduce' → logprob: -9.003374099731445
    7. 'int' → logprob: -9.128374099731445
    8. '[]' → logprob: -9.378374099731445
    9. 'pow' → logprob: -9.628374099731445
    10. 'input' → logprob: -9.753374099731445

Token 21: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0016455493168905377
    2. '
' → logprob: -7.251645565032959
    3. ' for' → logprob: -7.251645565032959
    4. '\n' → logprob: -9.0016450881958
    5. '\' → logprob: -10.2516450881958
    6. '' → logprob: -10.8766450881958
    7. '*' → logprob: -11.1266450881958
    8. '```' → logprob: -11.7516450881958
    9. 'f' → logprob: -12.2516450881958
    10. '+' → logprob: -12.6266450881958

Token 22: 'n' (ID: 77)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0018379644025117159
    2. ' for' → logprob: -7.001837730407715
    3. '
' → logprob: -7.251837730407715
    4. '\n' → logprob: -9.376837730407715
    5. '```' → logprob: -10.126837730407715
    6. '*' → logprob: -10.751837730407715
    7. ')' → logprob: -11.376837730407715
    8. '[' → logprob: -11.751837730407715
    9. '' → logprob: -11.876837730407715
    10. '<|end|>' → logprob: -12.126837730407715

Token 23: '_values' (ID: 20393)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6787269115447998
    2. 'u' → logprob: -1.5537269115447998
    3. 'um' → logprob: -2.6787269115448
    4. '%' → logprob: -3.1787269115448
    5. 'e' → logprob: -3.1787269115448
    6. 'umbers' → logprob: -4.053727149963379
    7. 'o' → logprob: -4.178727149963379
    8. 'umber' → logprob: -4.428727149963379
    9. '**' → logprob: -4.803727149963379
    10. '-' → logprob: -5.053727149963379

Token 24: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.012015659362077713
    2. ' =' → logprob: -5.2620158195495605
    3. '=' → logprob: -7.0120158195495605
    4. '[n' → logprob: -7.0120158195495605
    5. '[:]' → logprob: -7.2620158195495605
    6. 's' → logprob: -7.3870158195495605
    7. '_' → logprob: -7.3870158195495605
    8. '.' → logprob: -7.6370158195495605
    9. '[]' → logprob: -7.7620158195495605
    10. '[i' → logprob: -7.8870158195495605

Token 25: ' list' (ID: 1562)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -1.4725836515426636
    2. ' [' → logprob: -1.7225836515426636
    3. ' list' → logprob: -1.7225836515426636
    4. 'list' → logprob: -1.8475836515426636
    5. '[]' → logprob: -1.9725836515426636
    6. '[' → logprob: -2.347583770751953
    7. '[int' → logprob: -4.972583770751953
    8. '[input' → logprob: -5.222583770751953
    9. '[list' → logprob: -5.222583770751953
    10. 'input' → logprob: -7.347583770751953

Token 26: '(range' (ID: 50017)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014695419929921627
    2. '(range' → logprob: -4.514695644378662
    3. '(input' → logprob: -6.264695644378662
    4. '(map' → logprob: -6.889695644378662
    5. '(int' → logprob: -8.514695167541504
    6. '(user' → logprob: -9.014695167541504
    7. '(filter' → logprob: -9.764695167541504
    8. '(n' → logprob: -9.889695167541504
    9. '(values' → logprob: -10.014695167541504
    10. '()' → logprob: -10.139695167541504

Token 27: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001895935565698892
    2. '(N' → logprob: -8.625189781188965
    3. '(n' → logprob: -12.500189781188965
    4. '1' → logprob: -12.500189781188965
    5. ' (' → logprob: -14.250189781188965
    6. '(
' → logprob: -14.250189781188965
    7. ')(' → logprob: -14.625189781188965
    8. ')' → logprob: -14.625189781188965
    9. '```' → logprob: -16.37518882751465
    10. '((' → logprob: -16.75018882751465

Token 28: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.013297046534717083
    2. '(' → logprob: -5.138297080993652
    3. '2' → logprob: -5.763297080993652
    4. 'N' → logprob: -6.013297080993652
    5. ' ' → logprob: -6.513297080993652
    6. ' N' → logprob: -9.263297080993652
    7. '(N' → logprob: -10.013297080993652
    8. '0' → logprob: -10.138297080993652
    9. ',' → logprob: -11.138297080993652
    10. ')' → logprob: -11.263297080993652

Token 29: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004833425919059664
    2. ',N' → logprob: -8.250483512878418
    3. ' ,' → logprob: -8.625483512878418
    4. ',n' → logprob: -10.250483512878418
    5. '1' → logprob: -12.250483512878418
    6. ' ' → logprob: -13.625483512878418
    7. '，' → logprob: -15.625483512878418
    8. ',num' → logprob: -16.1254825592041
    9. ',int' → logprob: -16.2504825592041
    10. '(' → logprob: -16.3754825592041

Token 30: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0031781906727701426
    2. ' N' → logprob: -5.753178119659424
    3. 'n' → logprob: -15.628178596496582
    4. '10' → logprob: -16.003177642822266
    5. ' ' → logprob: -16.378177642822266
    6. '	N' → logprob: -17.128177642822266
    7. '(N' → logprob: -17.628177642822266
    8. '100' → logprob: -18.128177642822266
    9. '1' → logprob: -18.378177642822266
    10. '11' → logprob: -18.503177642822266

Token 31: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3868883550167084
    2. ' +' → logprob: -1.1368883848190308
    3. ' ' → logprob: -11.51188850402832
    4. '))' → logprob: -12.51188850402832
    5. '1' → logprob: -13.51188850402832
    6. '2' → logprob: -14.51188850402832
    7. ' +
' → logprob: -15.01188850402832
    8. ')' → logprob: -15.26188850402832
    9. '```' → logprob: -15.51188850402832
    10. ' ))' → logprob: -15.76188850402832

Token 32: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004929834394715726
    2. ' ' → logprob: -7.625493049621582
    3. '2' → logprob: -12.625493049621582
    4. '```' → logprob: -14.750493049621582
    5. ')' → logprob: -14.812993049621582
    6. '))' → logprob: -15.062993049621582
    7. '   ' → logprob: -16.062992095947266
    8. '  ' → logprob: -16.625492095947266
    9. '۱' → logprob: -17.062992095947266
    10. ' )' → logprob: -17.375492095947266

Token 33: '))[' (ID: 101036)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5760962963104248
    2. ')' → logprob: -0.8260962963104248
    3. ')))' → logprob: -8.826096534729004
    4. '),' → logprob: -12.826096534729004
    5. ')
' → logprob: -13.201096534729004
    6. '))
' → logprob: -13.326096534729004
    7. '+' → logprob: -14.076096534729004
    8. ' ))' → logprob: -14.576096534729004
    9. ' )' → logprob: -14.951096534729004
    10. '])' → logprob: -15.326096534729004

Token 34: '::' (ID: 742)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2932811379432678
    2. '1' → logprob: -2.918281078338623
    3. ' :' → logprob: -2.918281078338623
    4. '::' → logprob: -3.043281078338623
    5. '::-' → logprob: -3.168281078338623
    6. ':]' → logprob: -3.543281078338623
    7. ' :]' → logprob: -4.543281078338623
    8. '-' → logprob: -5.168281078338623
    9. ' ' → logprob: -6.168281078338623
    10. ']' → logprob: -6.168281078338623

Token 35: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02513229474425316
    2. '-' → logprob: -3.900132179260254
    3. '3' → logprob: -6.025132179260254
    4. ' ' → logprob: -6.775132179260254
    5. ' -' → logprob: -8.150132179260254
    6. '4' → logprob: -8.525132179260254
    7. '5' → logprob: -8.775132179260254
    8. '7' → logprob: -9.025132179260254
    9. '1' → logprob: -9.650132179260254
    10. '10' → logprob: -10.400132179260254

Token 36: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009467111667618155
    2. ')' → logprob: -7.625946521759033
    3. '])' → logprob: -7.875946521759033
    4. ' ]' → logprob: -9.875946998596191
    5. ')]' → logprob: -10.875946998596191
    6. ']
' → logprob: -12.500946998596191
    7. ']

' → logprob: -13.625946998596191
    8. '+' → logprob: -14.125946998596191
    9. '1' → logprob: -14.250946998596191
    10. ' )' → logprob: -15.375946998596191

Token 37: 'for' (ID: 1938)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6346079111099243
    2. '*' → logprob: -2.0096077919006348
    3. ':' → logprob: -2.1346077919006348
    4. '
' → logprob: -3.1346077919006348
    5. ' ' → logprob: -3.2596077919006348
    6. 'for' → logprob: -3.6346077919006348
    7. '+
' → logprob: -3.7596077919006348
    8. ' 
' → logprob: -4.259607791900635
    9. '<|end|>' → logprob: -4.259607791900635
    10. '#' → logprob: -4.384607791900635

Token 38: ' num' (ID: 2269)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7650453448295593
    2. ' ' → logprob: -1.015045404434204
    3. ' _' → logprob: -2.515045404434204
    4. ' n' → logprob: -2.640045404434204
    5. ' x' → logprob: -5.015045166015625
    6. '_' → logprob: -5.015045166015625
    7. '  ' → logprob: -5.515045166015625
    8. ' val' → logprob: -7.515045166015625
    9. ' num' → logprob: -7.640045166015625
    10. ' value' → logprob: -7.640045166015625

Token 39: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02675478532910347
    2. 'in' → logprob: -3.651754856109619
    3. ' ' → logprob: -8.276754379272461
    4. ',' → logprob: -9.401754379272461
    5. 's' → logprob: -10.526754379272461
    6. '  ' → logprob: -11.026754379272461
    7. '	in' → logprob: -11.526754379272461
    8. ':' → logprob: -11.776754379272461
    9. '_in' → logprob: -11.776754379272461
    10. '+' → logprob: -11.776754379272461

Token 40: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.20820890367031097
    2. 'n' → logprob: -1.7082089185714722
    3. ' range' → logprob: -5.208209037780762
    4. 'range' → logprob: -6.708209037780762
    5. '(n' → logprob: -10.833209037780762
    6. ' ' → logprob: -10.833209037780762
    7. ' ' → logprob: -11.458209037780762
    8. '	n' → logprob: -11.583209037780762
    9. '[n' → logprob: -12.458209037780762
    10. '_n' → logprob: -12.833209037780762

Token 41: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.0013319060672074556
    2. '_' → logprob: -6.751331806182861
    3. 'um' → logprob: -9.50133228302002
    4. '_um' → logprob: -10.12633228302002
    5. '_vals' → logprob: -10.87633228302002
    6. 'umbers' → logprob: -11.50133228302002
    7. '_val' → logprob: -13.00133228302002
    8. ' um' → logprob: -13.25133228302002
    9. '_VALUES' → logprob: -13.25133228302002
    10. 's' → logprob: -13.37633228302002

Token 42: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.3213025744771585e-05
    2. ':
' → logprob: -11.125033378601074
    3. ' :' → logprob: -11.250033378601074
    4. ':**' → logprob: -13.000033378601074
    5. '   ' → logprob: -13.750033378601074
    6. '):' → logprob: -14.750033378601074
    7. '+:' → logprob: -15.125033378601074
    8. '=' → logprob: -15.750033378601074
    9. ',' → logprob: -15.750033378601074
    10. '():' → logprob: -16.125032424926758

Token 43: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06814774870872498
    2. '    ' → logprob: -3.068147659301758
    3. '   ' → logprob: -5.068147659301758
    4. ' 
' → logprob: -5.318147659301758
    5. '<|end|>' → logprob: -5.943147659301758
    6. '     
' → logprob: -6.068147659301758
    7. '\' → logprob: -6.943147659301758
    8. '    
' → logprob: -7.318147659301758
    9. ' mul' → logprob: -8.568147659301758
    10. '  ' → logprob: -8.818147659301758

Token 44: ' factors' (ID: 11652)
  Prédit: ' weird'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' weird' → logprob: -0.10223126411437988
    2. ' ' → logprob: -2.72723126411438
    3. 'we' → logprob: -4.352231025695801
    4. '    ' → logprob: -4.602231025695801
    5. ' for' → logprob: -6.352231025695801
    6. '   ' → logprob: -6.852231025695801
    7. ' strange' → logprob: -7.102231025695801
    8. ' factorial' → logprob: -7.227231025695801
    9. 'factor' → logprob: -7.352231025695801
    10. ' if' → logprob: -7.352231025695801

Token 45: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1065533235669136
    2. '=' → logprob: -2.356553316116333
    3. '   ' → logprob: -6.106553554534912
    4. '.' → logprob: -6.106553554534912
    5. '_' → logprob: -7.606553554534912
    6. ',' → logprob: -8.106553077697754
    7. ' ' → logprob: -8.481553077697754
    8. '(' → logprob: -8.856553077697754
    9. '  ' → logprob: -9.106553077697754
    10. '[' → logprob: -9.231553077697754

Token 46: ' list' (ID: 1562)
  Prédit: '[num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[num' → logprob: -0.365225613117218
    2. ' [' → logprob: -1.8652255535125732
    3. '[' → logprob: -2.8652255535125732
    4. ' num' → logprob: -3.7402255535125732
    5. 'num' → logprob: -3.8652255535125732
    6. ' list' → logprob: -4.115225791931152
    7. 'list' → logprob: -4.365225791931152
    8. 'range' → logprob: -4.740225791931152
    9. ' range' → logprob: -5.865225791931152
    10. '[i' → logprob: -6.240225791931152

Token 47: '(filter' (ID: 36366)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.5614519119262695
    2. '(filter' → logprob: -0.9364519119262695
    3. '(' → logprob: -3.6864519119262695
    4. '(str' → logprob: -5.3114519119262695
    5. '(map' → logprob: -5.6864519119262695
    6. '(re' → logprob: -6.5614519119262695
    7. '(div' → logprob: -6.6864519119262695
    8. '(f' → logprob: -7.1864519119262695
    9. '(num' → logprob: -8.68645191192627
    10. '()' → logprob: -8.81145191192627

Token 48: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.0384843647480011
    2. '(' → logprob: -3.2884843349456787
    3. ' (' → logprob: -8.538484573364258
    4. '(
' → logprob: -9.288484573364258
    5. '(None' → logprob: -9.288484573364258
    6. '(f' → logprob: -10.663484573364258
    7. '(m' → logprob: -11.413484573364258
    8. '(mu' → logprob: -11.663484573364258
    9. 'lambda' → logprob: -12.038484573364258
    10. '(mult' → logprob: -12.913484573364258

Token 49: ' d' (ID: 272)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5211467146873474
    2. 'x' → logprob: -1.2711467742919922
    3. ' lambda' → logprob: -2.771146774291992
    4. '(lambda' → logprob: -3.396146774291992
    5. 'lambda' → logprob: -3.771146774291992
    6. ' ' → logprob: -6.521146774291992
    7. '=lambda' → logprob: -6.646146774291992
    8. ':' → logprob: -7.146146774291992
    9. 'div' → logprob: -7.146146774291992
    10. '<|end|>' → logprob: -7.521146774291992

Token 50: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09010539948940277
    2. 'd' → logprob: -2.7151052951812744
    3. ' d' → logprob: -4.2151055335998535
    4. ' :' → logprob: -6.0901055335998535
    5. ':num' → logprob: -6.5901055335998535
    6. '=lambda' → logprob: -8.090105056762695
    7. '=' → logprob: -8.590105056762695
    8. 's' → logprob: -8.715105056762695
    9. '=num' → logprob: -9.215105056762695
    10. ' x' → logprob: -9.340105056762695

Token 51: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.20307253301143646
    2. ' num' → logprob: -1.7030725479125977
    3. '(num' → logprob: -6.703072547912598
    4. 'd' → logprob: -8.953072547912598
    5. ' ' → logprob: -9.578072547912598
    6. 'n' → logprob: -9.828072547912598
    7. 'mul' → logprob: -10.703072547912598
    8. '=num' → logprob: -10.828072547912598
    9. '[num' → logprob: -10.828072547912598
    10. ' d' → logprob: -11.078072547912598

Token 52: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.03055262751877308
    2. '%' → logprob: -3.530552625656128
    3. '%d' → logprob: -7.780552864074707
    4. ' ' → logprob: -8.030552864074707
    5. '%i' → logprob: -10.030552864074707
    6. '%e' → logprob: -11.905552864074707
    7. ' ' → logprob: -12.280552864074707
    8. '%x' → logprob: -14.155552864074707
    9. '%c' → logprob: -14.655552864074707
    10. ' d' → logprob: -15.030552864074707

Token 53: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6328625679016113
    2. ' d' → logprob: -0.7578625679016113
    3. ' ' → logprob: -8.382862091064453
    4. '2' → logprob: -11.382862091064453
    5. '	d' → logprob: -12.257862091064453
    6. ' ' → logprob: -12.382862091064453
    7. '  ' → logprob: -12.757862091064453
    8. '0' → logprob: -12.882862091064453
    9. '(d' → logprob: -13.132862091064453
    10. ')d' → logprob: -13.757862091064453

Token 54: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3147425651550293
    2. '==' → logprob: -1.3147425651550293
    3. ' ' → logprob: -6.814742565155029
    4. '=' → logprob: -8.064743041992188
    5. '0' → logprob: -10.564743041992188
    6. ' =' → logprob: -11.314743041992188
    7. ' ' → logprob: -11.814743041992188
    8. '===' → logprob: -12.314743041992188
    9. 'd' → logprob: -12.689743041992188
    10. ' !=' → logprob: -13.064743041992188

Token 55: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12692947685718536
    2. ' ' → logprob: -2.126929521560669
    3. ' ' → logprob: -14.75192928314209
    4. '  ' → logprob: -15.00192928314209
    5. '   ' → logprob: -15.50192928314209
    6. '1' → logprob: -16.001930236816406
    7. '=' → logprob: -16.564430236816406
    8. '00' → logprob: -16.876930236816406
    9. '```' → logprob: -17.126930236816406
    10. ')' → logprob: -17.189430236816406

Token 56: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002476135268807411
    2. ' ' → logprob: -6.002476215362549
    3. '  ' → logprob: -16.50247573852539
    4. '۰' → logprob: -16.50247573852539
    5. '00' → logprob: -16.93997573852539
    6. '1' → logprob: -17.31497573852539
    7. '```' → logprob: -17.31497573852539
    8. ')' → logprob: -17.43997573852539
    9. '   ' → logprob: -17.56497573852539
    10. ' ' → logprob: -17.75247573852539

Token 57: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014147401787340641
    2. '   ' → logprob: -5.1391472816467285
    3. ' ,' → logprob: -5.1391472816467285
    4. ',num' → logprob: -6.6391472816467285
    5. ' and' → logprob: -7.7641472816467285
    6. ',n' → logprob: -9.139147758483887
    7. ' ' → logprob: -9.264147758483887
    8. 'and' → logprob: -10.139147758483887
    9. '       ' → logprob: -10.264147758483887
    10. ',
' → logprob: -10.264147758483887

Token 58: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.07872727513313293
    2. 'range' → logprob: -2.7037272453308105
    3. ' list' → logprob: -4.9537272453308105
    4. ' num' → logprob: -7.8287272453308105
    5. ' [' → logprob: -7.9537272453308105
    6. ' n' → logprob: -8.078727722167969
    7. 'list' → logprob: -8.578727722167969
    8. '   ' → logprob: -9.203727722167969
    9. '[' → logprob: -9.578727722167969
    10. 'num' → logprob: -9.703727722167969

Token 59: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009562437771819532
    2. '1' → logprob: -7.000956058502197
    3. '   ' → logprob: -10.750956535339355
    4. ' (' → logprob: -11.250956535339355
    5. ' ' → logprob: -12.250956535339355
    6. '2' → logprob: -13.250956535339355
    7. ')' → logprob: -13.625956535339355
    8. '(
' → logprob: -13.750956535339355
    9. '  ' → logprob: -15.375956535339355
    10. '[' → logprob: -15.563456535339355

Token 60: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004531707614660263
    2. '2' → logprob: -5.5045318603515625
    3. ' ' → logprob: -8.254531860351562
    4. 'num' → logprob: -9.129531860351562
    5. '   ' → logprob: -10.004531860351562
    6. '(' → logprob: -11.254531860351562
    7. 'n' → logprob: -12.692031860351562
    8. '3' → logprob: -12.754531860351562
    9. ',' → logprob: -13.129531860351562
    10. ')' → logprob: -13.504531860351562

Token 61: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18219368159770966
    2. ',num' → logprob: -1.807193636894226
    3. ' ,' → logprob: -6.057193756103516
    4. '1' → logprob: -9.807193756103516
    5. 'num' → logprob: -11.057193756103516
    6. ',int' → logprob: -11.182193756103516
    7. '   ' → logprob: -12.057193756103516
    8. ',n' → logprob: -12.557193756103516
    9. '2' → logprob: -13.307193756103516
    10. '```' → logprob: -14.057193756103516

Token 62: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.062203843146562576
    2. ' num' → logprob: -2.812203884124756
    3. ' ' → logprob: -9.812203407287598
    4. '(num' → logprob: -9.812203407287598
    5. '   ' → logprob: -9.937203407287598
    6. '	num' → logprob: -10.562203407287598
    7. ',num' → logprob: -11.187203407287598
    8. 'int' → logprob: -11.562203407287598
    9. '<num' → logprob: -12.437203407287598
    10. '  ' → logprob: -12.437203407287598

Token 63: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.021055500954389572
    2. ' +' → logprob: -3.8960554599761963
    3. '))' → logprob: -8.396055221557617
    4. '//' → logprob: -8.396055221557617
    5. ' //' → logprob: -11.021055221557617
    6. ' ))' → logprob: -11.771055221557617
    7. '1' → logprob: -11.896055221557617
    8. ' ' → logprob: -12.021055221557617
    9. '   ' → logprob: -12.146055221557617
    10. ')))' → logprob: -12.146055221557617

Token 64: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005660186288878322
    2. ' ' → logprob: -7.625566005706787
    3. '2' → logprob: -9.500566482543945
    4. '```' → logprob: -13.250566482543945
    5. '   ' → logprob: -14.750566482543945
    6. '  ' → logprob: -15.500566482543945
    7. '+' → logprob: -16.563066482543945
    8. '``' → logprob: -16.938066482543945
    9. '11' → logprob: -17.000566482543945
    10. '0' → logprob: -17.000566482543945

Token 65: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.01952906884253025
    2. ')' → logprob: -4.144528865814209
    3. '))' → logprob: -5.894528865814209
    4. ')))
' → logprob: -7.644528865814209
    5. '):' → logprob: -9.019529342651367
    6. '))))' → logprob: -10.519529342651367
    7. ')));' → logprob: -10.519529342651367
    8. ' ' → logprob: -10.644529342651367
    9. ')))

' → logprob: -11.519529342651367
    10. ')
' → logprob: -11.894529342651367

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04518294706940651
    2. ':' → logprob: -4.545183181762695
    3. '[' → logprob: -4.545183181762695
    4. ')' → logprob: -5.170183181762695
    5. '    
' → logprob: -5.170183181762695
    6. ' if' → logprob: -6.295183181762695
    7. ' ' → logprob: -6.295183181762695
    8. '
' → logprob: -6.420183181762695
    9. '<|end|>' → logprob: -6.545183181762695
    10. ':
' → logprob: -7.045183181762695

Token 67: ' weird' (ID: 28783)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2641606628894806
    2. ' if' → logprob: -2.014160633087158
    3. 'we' → logprob: -3.264160633087158
    4. '    
' → logprob: -4.389160633087158
    5. ' ' → logprob: -4.639160633087158
    6. 'if' → logprob: -4.764160633087158
    7. ' weird' → logprob: -4.764160633087158
    8. '    ' → logprob: -5.264160633087158
    9. ' 
' → logprob: -5.389160633087158
    10. ')' → logprob: -5.639160633087158

Token 68: '_counter' (ID: 35419)
  Prédit: '_answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_answer' → logprob: -0.00032640635618008673
    2. '_' → logprob: -8.250326156616211
    3. '_answers' → logprob: -10.500326156616211
    4. '_ans' → logprob: -11.750326156616211
    5. '_factor' → logprob: -12.500326156616211
    6. ' _' → logprob: -13.000326156616211
    7. '_output' → logprob: -13.000326156616211
    8. '_analysis' → logprob: -13.375326156616211
    9. '_response' → logprob: -13.500326156616211
    10. '_value' → logprob: -13.750326156616211

Token 69: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.08242452889680862
    2. ' =' → logprob: -2.5824246406555176
    3. '+=' → logprob: -5.832424640655518
    4. '=' → logprob: -7.582424640655518
    5. ' ' → logprob: -10.33242416381836
    6. ' +' → logprob: -10.45742416381836
    7. '+' → logprob: -11.45742416381836
    8. ' -=' → logprob: -11.70742416381836
    9. '  ' → logprob: -13.33242416381836
    10. '   ' → logprob: -13.95742416381836

Token 70: ' reduce' (ID: 10389)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.8913211822509766
    2. ' len' → logprob: -1.5163211822509766
    3. '0' → logprob: -2.3913211822509766
    4. ' ' → logprob: -2.5163211822509766
    5. ' reduce' → logprob: -2.8913211822509766
    6. 'len' → logprob: -3.0163211822509766
    7. 'sum' → logprob: -3.1413211822509766
    8. ' factors' → logprob: -3.3913211822509766
    9. 'reduce' → logprob: -4.516321182250977
    10. '1' → logprob: -6.016321182250977

Token 71: '(lambda' (ID: 43341)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6951258182525635
    2. '(m' → logprob: -0.6951258182525635
    3. '(lambda' → logprob: -6.320125579833984
    4. '(
' → logprob: -9.445125579833984
    5. '(operator' → logprob: -9.695125579833984
    6. '(*' → logprob: -11.695125579833984
    7. '(

' → logprob: -12.070125579833984
    8. ' (' → logprob: -12.195125579833984
    9. 'mul' → logprob: -12.445125579833984
    10. '(mu' → logprob: -12.695125579833984

Token 72: ' x' (ID: 1215)
  Prédit: ' mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mul' → logprob: -0.25397035479545593
    2. 'mul' → logprob: -1.5039703845977783
    3. ' ' → logprob: -6.878970146179199
    4. ' lambda' → logprob: -7.753970146179199
    5. ' x' → logprob: -8.7539701461792
    6. ' mu' → logprob: -9.0039701461792
    7. 'lambda' → logprob: -9.7539701461792
    8. ',' → logprob: -9.8789701461792
    9. '  ' → logprob: -10.7539701461792
    10. 'x' → logprob: -10.8789701461792

Token 73: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007709908299148083
    2. ',m' → logprob: -5.132709980010986
    3. ' ,' → logprob: -6.757709980010986
    4. 'mul' → logprob: -7.632709980010986
    5. '*,' → logprob: -10.507709503173828
    6. '_mul' → logprob: -10.757709503173828
    7. '+' → logprob: -11.132709503173828
    8. '*' → logprob: -11.257709503173828
    9. ' mul' → logprob: -11.507709503173828
    10. ' ' → logprob: -11.757709503173828

Token 74: ' _:' (ID: 133568)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.07087615132331848
    2. ' y' → logprob: -2.695876121520996
    3. 'mul' → logprob: -7.195876121520996
    4. ' mul' → logprob: -9.070876121520996
    5. ' ' → logprob: -10.570876121520996
    6. 'x' → logprob: -11.320876121520996
    7. ',y' → logprob: -11.820876121520996
    8. '	y' → logprob: -12.195876121520996
    9. '<|end|>' → logprob: -12.320876121520996
    10. ',' → logprob: -12.695876121520996

Token 75: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.23232005536556244
    2. ' x' → logprob: -2.1073200702667236
    3. 'mul' → logprob: -2.4823200702667236
    4. ' mul' → logprob: -6.2323198318481445
    5. ' ' → logprob: -8.732319831848145
    6. '  ' → logprob: -11.357319831848145
    7. '(x' → logprob: -11.732319831848145
    8. '	x' → logprob: -11.857319831848145
    9. '    ' → logprob: -12.107319831848145
    10. '   ' → logprob: -12.544819831848145

Token 76: '+' (ID: 10)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.7487748861312866
    2. ' *' → logprob: -1.3737748861312866
    3. '+' → logprob: -1.4987748861312866
    4. ' +' → logprob: -3.373775005340576
    5. '*m' → logprob: -4.623775005340576
    6. 'mul' → logprob: -5.748775005340576
    7. ' mul' → logprob: -6.623775005340576
    8. '+m' → logprob: -7.123775005340576
    9. ' ' → logprob: -8.498774528503418
    10. '-' → logprob: -9.061274528503418

Token 77: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05142269656062126
    2. ' ' → logprob: -3.551422595977783
    3. 'mul' → logprob: -4.801422595977783
    4. 'num' → logprob: -5.301422595977783
    5. 'f' → logprob: -5.551422595977783
    6. ' factors' → logprob: -6.426422595977783
    7. 'len' → logprob: -7.051422595977783
    8. '2' → logprob: -7.301422595977783
    9. ' mul' → logprob: -8.051423072814941
    10. ' num' → logprob: -8.426423072814941

Token 78: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00276410230435431
    2. ' ,' → logprob: -6.0027642250061035
    3. '1' → logprob: -9.252763748168945
    4. ' +' → logprob: -9.877763748168945
    5. '   ' → logprob: -10.502763748168945
    6. '+' → logprob: -10.752763748168945
    7. ')' → logprob: -10.877763748168945
    8. '0' → logprob: -11.002763748168945
    9. '),' → logprob: -11.877763748168945
    10. ' ' → logprob: -12.252763748168945

Token 79: ' factors' (ID: 11652)
  Prédit: ' factors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factors' → logprob: -0.6327239871025085
    2. 'f' → logprob: -0.7577239871025085
    3. 'factor' → logprob: -10.632723808288574
    4. ' f' → logprob: -11.132723808288574
    5. '[' → logprob: -11.382723808288574
    6. ' factores' → logprob: -11.382723808288574
    7. ' ' → logprob: -11.382723808288574
    8. ')' → logprob: -11.382723808288574
    9. 'Factors' → logprob: -11.882723808288574
    10. '	f' → logprob: -12.132723808288574

Token 80: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016551809676457196
    2. '0' → logprob: -9.375165939331055
    3. ' ,' → logprob: -9.750165939331055
    4. '1' → logprob: -11.125165939331055
    5. ')' → logprob: -12.500165939331055
    6. '   ' → logprob: -13.125165939331055
    7. ' ' → logprob: -14.500165939331055
    8. ',
' → logprob: -15.125165939331055
    9. '<|end|>' → logprob: -15.250165939331055
    10. '2' → logprob: -15.500165939331055

Token 81: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02066614478826523
    2. ' ' → logprob: -3.8956661224365234
    3. '1' → logprob: -9.520666122436523
    4. '   ' → logprob: -10.395666122436523
    5. '  ' → logprob: -11.645666122436523
    6. '    ' → logprob: -12.395666122436523
    7. '-' → logprob: -13.083166122436523
    8. ')' → logprob: -13.770666122436523
    9. '<|end|>' → logprob: -13.770666122436523
    10. ' -' → logprob: -14.270666122436523

Token 82: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.2576454335358e-05
    2. ' ' → logprob: -9.750092506408691
    3. '1' → logprob: -10.375092506408691
    4. '-' → logprob: -13.750092506408691
    5. '2' → logprob: -14.750092506408691
    6. '   ' → logprob: -15.062592506408691
    7. '  ' → logprob: -15.250092506408691
    8. '۰' → logprob: -15.375092506408691
    9. ')' → logprob: -15.687592506408691
    10. '<|end|>' → logprob: -15.750092506408691

Token 83: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005381268449127674
    2. ')
' → logprob: -5.255381107330322
    3. '   ' → logprob: -9.25538158416748
    4. ' )' → logprob: -10.63038158416748
    5. ')

' → logprob: -11.13038158416748
    6. ')
' → logprob: -12.13038158416748
    7. ' ' → logprob: -13.63038158416748
    8. ')`' → logprob: -13.75538158416748
    9. ' )
' → logprob: -14.00538158416748
    10. '+' → logprob: -14.00538158416748

Token 84: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9287465214729309
    2. '   ' → logprob: -1.1787464618682861
    3. '
' → logprob: -2.553746461868286
    4. ' 
' → logprob: -2.678746461868286
    5. ' ' → logprob: -2.803746461868286
    6. '<|end|>' → logprob: -3.053746461868286
    7. '    
' → logprob: -4.303746700286865
    8. '+' → logprob: -4.553746700286865
    9. ')' → logprob: -5.803746700286865
    10. '    ' → logprob: -6.053746700286865

Token 85: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.624448299407959
    2. ' if' → logprob: -0.874448299407959
    3. ' ' → logprob: -3.874448299407959
    4. 'if' (adapté à ' if') → logprob: -4.624448299407959
    5. ' 
' → logprob: -4.999448299407959
    6. '+' → logprob: -5.999448299407959
    7. '    
' → logprob: -6.374448299407959
    8. '  ' → logprob: -6.499448299407959
    9. '    ' → logprob: -6.749448299407959
    10. '
' → logprob: -6.999448299407959

Token 86: ' weird' (ID: 28783)
  Prédit: ' weird'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' weird' → logprob: -0.01760966144502163
    2. 'we' → logprob: -4.267609596252441
    3. ' we' → logprob: -6.017609596252441
    4. ' (' → logprob: -8.017609596252441
    5. ' len' → logprob: -8.392609596252441
    6. '(' → logprob: -9.142609596252441
    7. ' ' → logprob: -9.142609596252441
    8. ' factors' → logprob: -9.392609596252441
    9. ' num' → logprob: -11.017609596252441
    10. ' odd' → logprob: -11.017609596252441

Token 87: '_counter' (ID: 35419)
  Prédit: '_counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counter' → logprob: -9.758300438988954e-05
    2. '_answer' → logprob: -9.500097274780273
    3. '_count' → logprob: -11.875097274780273
    4. '_' → logprob: -12.125097274780273
    5. ' _' → logprob: -12.375097274780273
    6. '_c' → logprob: -12.375097274780273
    7. 'counter' → logprob: -15.500097274780273
    8. '_factor' → logprob: -16.000097274780273
    9. '__' → logprob: -16.125097274780273
    10. '```' → logprob: -16.250097274780273

Token 88: ' ==' (ID: 951)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.09343506395816803
    2. '%' → logprob: -2.468435049057007
    3. ' ' → logprob: -5.593435287475586
    4. ' ==' → logprob: -7.843435287475586
    5. '==' → logprob: -8.968435287475586
    6. ' >' → logprob: -9.093435287475586
    7. '>' → logprob: -10.093435287475586
    8. ' &' → logprob: -10.718435287475586
    9. '   ' → logprob: -10.968435287475586
    10. '  ' → logprob: -11.218435287475586

Token 89: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.8548385500907898
    2. ' ' → logprob: -0.9798385500907898
    3. '2' → logprob: -2.1048386096954346
    4. '4' → logprob: -2.9798386096954346
    5. '1' → logprob: -4.1048383712768555
    6. '5' → logprob: -5.8548383712768555
    7. 'num' → logprob: -6.3548383712768555
    8. '6' → logprob: -7.1048383712768555
    9. '<|end|>' → logprob: -7.2298383712768555
    10. '  ' → logprob: -7.2298383712768555

Token 90: '8' (ID: 23)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.2913854122161865
    2. '2' → logprob: -1.5413854122161865
    3. ' ' → logprob: -3.9163854122161865
    4. '1' → logprob: -4.791385650634766
    5. '4' → logprob: -5.041385650634766
    6. '5' → logprob: -6.041385650634766
    7. 'num' → logprob: -7.416385650634766
    8. '9' → logprob: -8.728885650634766
    9. '7' → logprob: -9.103885650634766
    10. '8' → logprob: -9.166385650634766

Token 91: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005006087594665587
    2. ':
' → logprob: -8.000500679016113
    3. '<|end|>' → logprob: -9.750500679016113
    4. ' :' → logprob: -10.375500679016113
    5. '   ' → logprob: -10.750500679016113
    6. '       ' → logprob: -10.875500679016113
    7. ',' → logprob: -11.750500679016113
    8. ' and' → logprob: -11.875500679016113
    9. '):' → logprob: -12.875500679016113
    10. ':return' → logprob: -13.000500679016113

Token 92: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029677122831344604
    2. ' ' → logprob: -5.029676914215088
    3. '    ' → logprob: -5.154676914215088
    4. 'we' → logprob: -5.529676914215088
    5. '   ' → logprob: -5.529676914215088
    6. ':' → logprob: -6.404676914215088
    7. '        ' → logprob: -7.029676914215088
    8. '<|end|>' → logprob: -7.154676914215088
    9. '      ' → logprob: -7.279676914215088
    10. ',' → logprob: -7.279676914215088

Token 93: ' weird' (ID: 28783)
  Prédit: 'we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'we' → logprob: -0.36069074273109436
    2. ' weird' → logprob: -1.235690712928772
    3. '   ' → logprob: -4.485690593719482
    4. ' we' → logprob: -8.11069107055664
    5. '       ' → logprob: -8.73569107055664
    6. '    ' → logprob: -8.98569107055664
    7. '  ' → logprob: -9.11069107055664
    8. ' ' → logprob: -9.61069107055664
    9. '```' → logprob: -10.61069107055664
    10. '    
' → logprob: -11.23569107055664

Token 94: '_answer' (ID: 65702)
  Prédit: '_answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_answer' → logprob: -2.816093228830141e-06
    2. '_' → logprob: -13.00000286102295
    3. '_ans' → logprob: -15.25000286102295
    4. '_an' → logprob: -16.625001907348633
    5. ' _' → logprob: -16.625001907348633
    6. '_counter' → logprob: -17.250001907348633
    7. '_answers' → logprob: -17.875001907348633
    8. 'answer' → logprob: -18.125001907348633
    9. 'Answer' → logprob: -19.375001907348633
    10. '_response' → logprob: -20.000001907348633

Token 95: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.16077493131160736
    2. '+=' → logprob: -1.9107749462127686
    3. '+' → logprob: -8.160775184631348
    4. '=' → logprob: -8.410775184631348
    5. ' =' → logprob: -10.785775184631348
    6. ' ' → logprob: -11.785775184631348
    7. ' +' → logprob: -11.910775184631348
    8. '+='' → logprob: -12.910775184631348
    9. '<|end|>' → logprob: -13.785775184631348
    10. ']+=' → logprob: -14.035775184631348

Token 96: ' ' (ID: 220)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.03505060076713562
    2. '1' → logprob: -3.535050630569458
    3. ' num' → logprob: -5.285050392150879
    4. ' ' → logprob: -9.035050392150879
    5. 'mul' → logprob: -9.535050392150879
    6. '   ' → logprob: -11.160050392150879
    7. '2' → logprob: -13.285050392150879
    8. '	num' → logprob: -13.285050392150879
    9. '  ' → logprob: -13.347550392150879
    10. '(num' → logprob: -13.785050392150879

Token 97: '1' (ID: 16)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.0487254373729229
    2. '1' → logprob: -3.0487253665924072
    3. 'mul' → logprob: -9.298725128173828
    4. ' num' → logprob: -10.298725128173828
    5. ' ' → logprob: -12.423725128173828
    6. '   ' → logprob: -12.923725128173828
    7. '2' → logprob: -13.298725128173828
    8. 'multip' → logprob: -14.423725128173828
    9. '(num' → logprob: -14.861225128173828
    10. '10' → logprob: -14.861225128173828

Token 98: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 99: 'else' (ID: 2807)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.088318109512329
    2. '<|end|>' → logprob: -1.088318109512329
    3. 'print' → logprob: -1.463318109512329
    4. '
' → logprob: -3.588318109512329
    5. 'n' → logprob: -4.58831787109375
    6. ' ' → logprob: -4.71331787109375
    7. '\n' → logprob: -4.71331787109375
    8. '#' → logprob: -4.71331787109375
    9. '```' → logprob: -5.08831787109375
    10. '+' → logprob: -5.83831787109375

Token 100: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0449800081551075
    2. ' :' → logprob: -3.169980049133301
    3. ':
' → logprob: -6.419980049133301
    4. ' :
' → logprob: -8.0449800491333
    5. '   ' → logprob: -11.0449800491333
    6. ' ' → logprob: -12.0449800491333
    7. '    ' → logprob: -13.1699800491333
    8. '  ' → logprob: -14.2949800491333
    9. ':

' → logprob: -14.2949800491333
    10. ':return' → logprob: -14.2949800491333

Token 101: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007255192380398512
    2. ' weird' → logprob: -5.2572550773620605
    3. ' print' → logprob: -7.3822550773620605
    4. '    
' → logprob: -7.5072550773620605
    5. '    ' → logprob: -8.257255554199219
    6. ':
' → logprob: -9.382255554199219
    7. ' ' → logprob: -9.507255554199219
    8. ' we' → logprob: -9.882255554199219
    9. ' 
' → logprob: -9.882255554199219
    10. '\n' → logprob: -10.007255554199219

Token 102: ' print' (ID: 2123)
  Prédit: ' weird'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' weird' → logprob: -0.0073233554139733315
    2. ' print' → logprob: -5.132323265075684
    3. '   ' → logprob: -7.132323265075684
    4. ' strange' → logprob: -8.507323265075684
    5. 'print' (adapté à ' print') → logprob: -9.132323265075684
    6. '    ' → logprob: -9.757323265075684
    7. ' break' → logprob: -9.882323265075684
    8. '    
' → logprob: -10.382323265075684
    9. ' pass' → logprob: -10.382323265075684
    10. ' 
' → logprob: -10.757323265075684

Token 103: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011421496979892254
    2. '("' → logprob: -5.1364216804504395
    3. '('' → logprob: -5.3864216804504395
    4. '(f' → logprob: -8.261421203613281
    5. '()' → logprob: -8.386421203613281
    6. '("("' → logprob: -8.511421203613281
    7. 'we' → logprob: -9.386421203613281
    8. ' (' → logprob: -10.136421203613281
    9. '(`' → logprob: -11.011421203613281
    10. '("(' → logprob: -11.011421203613281

Token 104: 'we' (ID: 854)
  Prédit: 'we'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'we' → logprob: -0.011751671321690083
    2. '"' → logprob: -4.886751651763916
    3. ' weird' → logprob: -5.636751651763916
    4. ''' → logprob: -8.261752128601074
    5. '   ' → logprob: -9.511752128601074
    6. 'N' → logprob: -9.636752128601074
    7. '"We' → logprob: -10.386752128601074
    8. ' ' → logprob: -10.761752128601074
    9. ' "' → logprob: -10.761752128601074
    10. ' we' → logprob: -11.136752128601074

Token 105: 'ird' (ID: 2716)
  Prédit: 'ird'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ird' → logprob: -4.5014188799541444e-05
    2. 'ierd' → logprob: -10.750044822692871
    3. 'rd' → logprob: -11.625044822692871
    4. 'ir' → logprob: -11.875044822692871
    5. '_' → logprob: -12.875044822692871
    6. 'irds' → logprob: -13.125044822692871
    7. ' ' → logprob: -14.625044822692871
    8. 'ard' → logprob: -15.250044822692871
    9. 'ryd' → logprob: -15.375044822692871
    10. '```' → logprob: -15.750044822692871

Token 106: '_answer' (ID: 65702)
  Prédit: '_answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_answer' → logprob: -2.0339031834737398e-05
    2. '_' → logprob: -10.875020027160645
    3. '_ans' → logprob: -14.625020027160645
    4. ')_' → logprob: -15.125020027160645
    5. '_answers' → logprob: -15.250020027160645
    6. '_counter' → logprob: -16.12502098083496
    7. '_value' → logprob: -16.50002098083496
    8. ' _' → logprob: -16.87502098083496
    9. 'Answer' → logprob: -17.50002098083496
    10. '_output' → logprob: -17.50002098083496

Token 107: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ' )' → logprob: -14.625000953674316
    3. ')
' → logprob: -16.75
    4. '))' → logprob: -16.75
    5. ')`' → logprob: -17.75
    6. '(' → logprob: -18.0
    7. '')' → logprob: -18.125
    8. ')}' → logprob: -18.75
    9. '`)' → logprob: -19.25
    10. '()' → logprob: -19.375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 105
Tokens correctement prédits (1ère position, stricte): 43
Tokens correctement prédits (1ère position, avec adaptation): 43
Tokens correctement prédits (top 10): 86
Précision stricte (1ère position): 40.95%
Précision adaptée (1ère position): 40.95%
Précision (top 10): 81.90%
================================================================================
