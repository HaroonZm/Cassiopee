================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:30
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N,K = (int(x) for x in input().split())
A = str(input())
def calc(n, k):
    return -~((n-1)//(k-1)) if (n-1)%(k-1) else (n-1)//(k-1)
class Solver:
    def __init__(self, n, k):
        self.n = n
        self.k = k
    def solve(self):
        n,k = self.n, self.k
        return calc(n, k)
res = Solver(N, K).solve()
print(res)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ',K' (ID: 107147)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' (' (ID: 350)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.2432507574558258
    2. 'map' → logprob: -1.6182507276535034
    3. ' input' → logprob: -4.618250846862793
    4. 'input' → logprob: -5.243250846862793
    5. '10' → logprob: -7.243250846862793
    6. ' list' → logprob: -7.243250846862793
    7. ' ' → logprob: -7.368250846862793
    8. 'list' → logprob: -8.743250846862793
    9. ' int' → logprob: -8.868250846862793
    10. 'int' → logprob: -9.243250846862793

Token 4: 'int' (ID: 491)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.9345630407333374
    2. '5' → logprob: -1.1845630407333374
    3. 'int' → logprob: -1.9345630407333374
    4. '10' → logprob: -2.559563159942627
    5. ')' → logprob: -3.434563159942627
    6. '3' → logprob: -4.184563159942627
    7. 'input' → logprob: -4.309563159942627
    8. '1' → logprob: -4.809563159942627
    9. ' map' → logprob: -6.059563159942627
    10. '100' → logprob: -6.184563159942627

Token 5: '(x' (ID: 4061)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011952406726777554
    2. '(' → logprob: -4.5119524002075195
    3. ',' → logprob: -7.7619524002075195
    4. ' ' → logprob: -9.26195240020752
    5. ' )' → logprob: -9.38695240020752
    6. '(input' → logprob: -9.51195240020752
    7. '[' → logprob: -9.63695240020752
    8. ')(' → logprob: -10.76195240020752
    9. ',)' → logprob: -10.88695240020752
    10. '()' → logprob: -11.01195240020752

Token 6: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003240697318688035
    2. '(x' → logprob: -6.753240585327148
    3. '(input' → logprob: -7.128240585327148
    4. ')x' → logprob: -7.503240585327148
    5. '),' → logprob: -8.128240585327148
    6. 'input' → logprob: -9.003240585327148
    7. '<|end|>' → logprob: -9.503240585327148
    8. '(token' → logprob: -10.128240585327148
    9. 'for' → logprob: -10.878240585327148
    10. ')arg' → logprob: -11.253240585327148

Token 7: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7636415958404541
    2. 'for' → logprob: -1.013641595840454
    3. ' for' → logprob: -2.763641595840454
    4. '(x' → logprob: -3.013641595840454
    5. 'x' → logprob: -4.138641357421875
    6. ',' → logprob: -4.263641357421875
    7. '(input' → logprob: -4.763641357421875
    8. '<|end|>' → logprob: -4.888641357421875
    9. 'input' → logprob: -5.388641357421875
    10. ')x' → logprob: -6.513641357421875

Token 8: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.1470242589712143
    2. ' input' → logprob: -2.397024154663086
    3. '_' → logprob: -4.147024154663086
    4. ' ' → logprob: -4.522024154663086
    5. 'input' → logprob: -5.772024154663086
    6. ' user' → logprob: -6.147024154663086
    7. 'x' → logprob: -6.272024154663086
    8. ' in' → logprob: -6.272024154663086
    9. '<|end|>' → logprob: -6.272024154663086
    10. ' s' → logprob: -6.272024154663086

Token 9: ' in' (ID: 306)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.19228503108024597
    2. 'input' → logprob: -1.8172850608825684
    3. ' in' → logprob: -4.442285060882568
    4. '=input' → logprob: -7.817285060882568
    5. '(input' → logprob: -9.06728458404541
    6. 'in' → logprob: -9.19228458404541
    7. ' user' → logprob: -10.94228458404541
    8. '_input' → logprob: -11.69228458404541
    9. ',input' → logprob: -11.69228458404541
    10. ')' → logprob: -11.81728458404541

Token 10: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.12693072855472565
    2. ' input' → logprob: -2.1269307136535645
    3. '(input' → logprob: -13.876931190490723
    4. ')' → logprob: -14.751931190490723
    5. '=input' → logprob: -15.001931190490723
    6. ' ' → logprob: -15.126931190490723
    7. '```' → logprob: -15.376931190490723
    8. '<input' → logprob: -15.626931190490723
    9. '	input' → logprob: -16.126930236816406
    10. ',input' → logprob: -16.251930236816406

Token 11: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2548202872276306
    2. '())' → logprob: -1.8798203468322754
    3. '().' → logprob: -2.6298203468322754
    4. ')' → logprob: -9.129819869995117
    5. '();)' → logprob: -10.129819869995117
    6. '(' → logprob: -11.129819869995117
    7. '()]' → logprob: -11.129819869995117
    8. '.readline' → logprob: -11.629819869995117
    9. ' ())' → logprob: -11.879819869995117
    10. '());' → logprob: -12.004819869995117

Token 12: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0009315869538113475
    2. 'strip' → logprob: -7.000931739807129
    3. 'rstrip' → logprob: -11.250931739807129
    4. ' split' → logprob: -12.125931739807129
    5. ')' → logprob: -14.000931739807129
    6. '(split' → logprob: -14.750931739807129
    7. 'read' → logprob: -15.375931739807129
    8. 'spl' → logprob: -16.500930786132812
    9. '()' → logprob: -16.625930786132812
    10. '())' → logprob: -16.875930786132812

Token 13: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.04052812606096268
    2. ')' → logprob: -3.5405280590057373
    3. '()' → logprob: -4.540528297424316
    4. '(' → logprob: -11.165528297424316
    5. ' ())' → logprob: -11.415528297424316
    6. '))' → logprob: -12.165528297424316
    7. '()))' → logprob: -12.415528297424316
    8. '();)' → logprob: -12.790528297424316
    9. '`)' → logprob: -12.915528297424316
    10. '()]' → logprob: -13.165528297424316

Token 14: 'A' (ID: 32)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2015490531921387
    2. 'a' → logprob: -1.5765490531921387
    3. 'for' → logprob: -1.5765490531921387
    4. ',' → logprob: -2.7015490531921387
    5. 'n' → logprob: -2.9515490531921387
    6. 's' → logprob: -3.9515490531921387
    7. '.' → logprob: -4.326549053192139
    8. 'if' → logprob: -4.576549053192139
    9. ' ' → logprob: -4.576549053192139
    10. '`' → logprob: -4.701549053192139

Token 15: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.19960543513298035
    2. '.' → logprob: -2.1996054649353027
    3. ' =' → logprob: -2.9496054649353027
    4. '=' → logprob: -4.324605464935303
    5. '_' → logprob: -6.449605464935303
    6. '[i' → logprob: -7.074605464935303
    7. '[:]' → logprob: -7.449605464935303
    8. '[]' → logprob: -8.324604988098145
    9. '[int' → logprob: -8.324604988098145
    10. ',' → logprob: -8.699604988098145

Token 16: ' str' (ID: 989)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.19611233472824097
    2. ' [' → logprob: -2.3211123943328857
    3. 'list' → logprob: -2.9461123943328857
    4. ' list' → logprob: -4.446112155914307
    5. ' (' → logprob: -4.946112155914307
    6. '(int' → logprob: -5.321112155914307
    7. '(list' → logprob: -6.946112155914307
    8. '[]' → logprob: -7.071112155914307
    9. '[list' → logprob: -7.071112155914307
    10. ' []' → logprob: -7.446112155914307

Token 17: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.07951005548238754
    2. '(' → logprob: -2.579509973526001
    3. 'input' → logprob: -8.079509735107422
    4. '()' → logprob: -9.454509735107422
    5. '('' → logprob: -9.704509735107422
    6. ' (' → logprob: -10.329509735107422
    7. '[input' → logprob: -10.329509735107422
    8. '(i' → logprob: -10.954509735107422
    9. '("")' → logprob: -11.329509735107422
    10. '(int' → logprob: -11.329509735107422

Token 18: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.042023077607154846
    2. ')' → logprob: -3.417023181915283
    3. '()' → logprob: -4.792023181915283
    4. '().' → logprob: -11.292022705078125
    5. ' ())' → logprob: -11.542022705078125
    6. '(' → logprob: -11.667022705078125
    7. ' )' → logprob: -12.292022705078125
    8. '()))' → logprob: -12.417022705078125
    9. '();)' → logprob: -13.167022705078125
    10. '`)' → logprob: -13.792022705078125

Token 19: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.4031275510787964
    2. '[' → logprob: -1.5281275510787964
    3. 'if' → logprob: -1.9031275510787964
    4. 'for' → logprob: -2.528127670288086
    5. 'a' → logprob: -2.778127670288086
    6. 's' → logprob: -3.403127670288086
    7. 'B' → logprob: -3.528127670288086
    8. 'i' → logprob: -3.653127670288086
    9. 'C' → logprob: -4.278127670288086
    10. 'M' → logprob: -4.403127670288086

Token 20: ' calc' (ID: 25691)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.014665704220533371
    2. '_' → logprob: -4.514665603637695
    3. ' main' → logprob: -7.264665603637695
    4. ' f' → logprob: -7.764665603637695
    5. ' a' → logprob: -8.139665603637695
    6. ' solve' → logprob: -8.264665603637695
    7. ' ' → logprob: -8.639665603637695
    8. ' find' → logprob: -8.764665603637695
    9. ' factorial' → logprob: -8.764665603637695
    10. ' max' → logprob: -8.889665603637695

Token 21: '(n' (ID: 2406)
  Prédit: 'ulate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ulate' → logprob: -0.922835111618042
    2. '_sum' → logprob: -1.297835111618042
    3. '_' → logprob: -1.672835111618042
    4. '(' → logprob: -2.422835111618042
    5. '()' → logprob: -5.047835350036621
    6. '_factor' → logprob: -5.047835350036621
    7. 'ul' → logprob: -5.297835350036621
    8. '_area' → logprob: -5.672835350036621
    9. '_val' → logprob: -5.922835350036621
    10. 'culate' → logprob: -6.297835350036621

Token 22: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05041860044002533
    2. ',' → logprob: -3.8004186153411865
    3. '):' → logprob: -3.8004186153411865
    4. '_' → logprob: -6.675418376922607
    5. 'u' → logprob: -7.050418376922607
    6. 'a' → logprob: -7.675418376922607
    7. 's' → logprob: -8.050418853759766
    8. ')_' → logprob: -8.300418853759766
    9. 'e' → logprob: -8.550418853759766
    10. '_)' → logprob: -9.425418853759766

Token 23: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.18656456470489502
    2. ' k' → logprob: -2.0615644454956055
    3. 'a' → logprob: -3.8115644454956055
    4. 'm' → logprob: -5.0615644454956055
    5. ' a' → logprob: -5.4365644454956055
    6. 's' → logprob: -6.3115644454956055
    7. ' m' → logprob: -6.9365644454956055
    8. 'x' → logprob: -6.9990644454956055
    9. 'K' → logprob: -7.1240644454956055
    10. ' s' → logprob: -7.6865644454956055

Token 24: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08334175497293472
    2. ')' → logprob: -2.9583418369293213
    3. ',' → logprob: -3.5833418369293213
    4. ''):' → logprob: -10.333341598510742
    5. '*' → logprob: -10.583341598510742
    6. '_' → logprob: -10.708341598510742
    7. ':' → logprob: -10.833341598510742
    8. 's' → logprob: -10.833341598510742
    9. ' ):' → logprob: -11.083341598510742
    10. '**' → logprob: -11.458341598510742

Token 25: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04650295153260231
    2. '   ' → logprob: -3.6715030670166016
    3. '(' → logprob: -4.546503067016602
    4. ' ' → logprob: -5.546503067016602
    5. '):' → logprob: -6.421503067016602
    6. ')' → logprob: -6.796503067016602
    7. ':
' → logprob: -7.796503067016602
    8. '\' → logprob: -7.921503067016602
    9. '(n' → logprob: -8.046503067016602
    10. '    ' → logprob: -8.046503067016602

Token 26: ' return' (ID: 622)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.446608304977417
    2. ' result' → logprob: -1.571608304977417
    3. ' ' → logprob: -1.946608304977417
    4. '   ' → logprob: -2.321608304977417
    5. 'result' → logprob: -2.571608304977417
    6. ' r' → logprob: -2.696608304977417
    7. 'c' → logprob: -3.196608304977417
    8. '    ' → logprob: -4.071608543395996
    9. ' i' → logprob: -4.196608543395996
    10. 'i' → logprob: -4.571608543395996

Token 27: ' -' (ID: 533)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.27284470200538635
    2. ' n' → logprob: -2.2728447914123535
    3. ' A' → logprob: -2.8978447914123535
    4. ' (' → logprob: -3.6478447914123535
    5. 'n' → logprob: -4.0228447914123535
    6. 'A' → logprob: -4.6478447914123535
    7. ' '' → logprob: -4.7728447914123535
    8. ' "' → logprob: -5.0228447914123535
    9. '"' → logprob: -6.1478447914123535
    10. '(' → logprob: -6.2728447914123535

Token 28: '~' (ID: 93)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9228301644325256
    2. 'k' → logprob: -1.9228301048278809
    3. '1' → logprob: -2.297830104827881
    4. ' (' → logprob: -2.422830104827881
    5. 'n' → logprob: -2.672830104827881
    6. '((' → logprob: -2.672830104827881
    7. '(n' → logprob: -3.422830104827881
    8. '(k' → logprob: -4.047830104827881
    9. 'abs' → logprob: -4.297830104827881
    10. '(-' → logprob: -4.297830104827881

Token 29: '((' (ID: 2054)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.4866009056568146
    2. 'n' → logprob: -0.9866008758544922
    3. '(n' → logprob: -4.861600875854492
    4. '(k' → logprob: -6.111600875854492
    5. '(' → logprob: -6.236600875854492
    6. '((' → logprob: -9.111600875854492
    7. ' n' → logprob: -9.611600875854492
    8. 'N' → logprob: -9.736600875854492
    9. 'A' → logprob: -9.861600875854492
    10. ' k' → logprob: -9.986600875854492

Token 30: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.004343006294220686
    2. 'k' → logprob: -5.504343032836914
    3. ' n' → logprob: -9.129343032836914
    4. '(n' → logprob: -9.879343032836914
    5. 'len' → logprob: -10.504343032836914
    6. 'N' → logprob: -10.879343032836914
    7. ')n' → logprob: -11.379343032836914
    8. 'int' → logprob: -11.879343032836914
    9. '   ' → logprob: -12.004343032836914
    10. 'A' → logprob: -12.129343032836914

Token 31: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3600078821182251
    2. ' -' → logprob: -1.860007882118225
    3. '-k' → logprob: -2.6100077629089355
    4. '+' → logprob: -4.3600077629089355
    5. '/k' → logprob: -4.4850077629089355
    6. '*' → logprob: -4.6100077629089355
    7. ' //' → logprob: -4.6100077629089355
    8. '/' → logprob: -4.7350077629089355
    9. ' +' → logprob: -5.4850077629089355
    10. ' /' → logprob: -5.7350077629089355

Token 32: '1' (ID: 16)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.020521102473139763
    2. ' k' → logprob: -4.27052116394043
    3. '1' → logprob: -5.14552116394043
    4. '(k' → logprob: -8.52052116394043
    5. ' ' → logprob: -8.77052116394043
    6. ' (' → logprob: -9.52052116394043
    7. '   ' → logprob: -10.64552116394043
    8. '(' → logprob: -11.14552116394043
    9. ')' → logprob: -11.39552116394043
    10. '2' → logprob: -11.52052116394043

Token 33: ')//' (ID: 60375)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22058333456516266
    2. ')//' → logprob: -1.7205833196640015
    3. ' )' → logprob: -4.095583438873291
    4. '-' → logprob: -6.970583438873291
    5. '-k' → logprob: -7.220583438873291
    6. ' -' → logprob: -8.095582962036133
    7. ')/' → logprob: -8.470582962036133
    8. '//' → logprob: -9.845582962036133
    9. '+' → logprob: -10.595582962036133
    10. ' //' → logprob: -10.845582962036133

Token 34: '(' (ID: 7)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00033677343162707984
    2. ' k' → logprob: -8.000336647033691
    3. '2' → logprob: -14.500336647033691
    4. '(k' → logprob: -15.500336647033691
    5. ' ' → logprob: -16.000337600708008
    6. '	k' → logprob: -16.375337600708008
    7. 'K' → logprob: -16.625337600708008
    8. '1' → logprob: -16.625337600708008
    9. '   ' → logprob: -17.000337600708008
    10. '  ' → logprob: -17.250337600708008

Token 35: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0009240844519808888
    2. ' k' → logprob: -7.000924110412598
    3. ')' → logprob: -11.750924110412598
    4. '(k' → logprob: -13.875924110412598
    5. 'K' → logprob: -14.250924110412598
    6. '   ' → logprob: -14.500924110412598
    7. ' (' → logprob: -14.625924110412598
    8. ' ' → logprob: -14.625924110412598
    9. '2' → logprob: -15.000924110412598
    10. '(' → logprob: -15.250924110412598

Token 36: '-' (ID: 12)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.29082146286964417
    2. '+' → logprob: -1.4158214330673218
    3. ')' → logprob: -4.790821552276611
    4. ')+' → logprob: -7.540821552276611
    5. ' +' → logprob: -8.540821075439453
    6. '))+' → logprob: -8.665821075439453
    7. ' ))' → logprob: -8.790821075439453
    8. ')))' → logprob: -9.165821075439453
    9. '))-' → logprob: -10.290821075439453
    10. '))
' → logprob: -10.415821075439453

Token 37: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0026339227333664894
    2. ' ' → logprob: -6.127634048461914
    3. '2' → logprob: -8.502634048461914
    4. 'A' → logprob: -9.002634048461914
    5. ')' → logprob: -9.752634048461914
    6. 'n' → logprob: -10.627634048461914
    7. ' A' → logprob: -12.315134048461914
    8. '))' → logprob: -12.315134048461914
    9. '+' → logprob: -12.815134048461914
    10. '   ' → logprob: -13.002634048461914

Token 38: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.2521432936191559
    2. ')' → logprob: -1.5021432638168335
    3. ')))' → logprob: -8.502142906188965
    4. '))
' → logprob: -12.877142906188965
    5. ' ))' → logprob: -13.127142906188965
    6. ' )' → logprob: -13.627142906188965
    7. ')
' → logprob: -13.752142906188965
    8. '),' → logprob: -14.627142906188965
    9. ')+' → logprob: -14.627142906188965
    10. ' ' → logprob: -14.752142906188965

Token 39: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.180716872215271
    2. '*' → logprob: -1.430716872215271
    3. ')' → logprob: -1.930716872215271
    4. '<|end|>' → logprob: -2.0557169914245605
    5. '\n' → logprob: -2.3057169914245605
    6. '+' → logprob: -3.9307169914245605
    7. '*
' → logprob: -4.6807169914245605
    8. ')
' → logprob: -4.9307169914245605
    9. '\' → logprob: -5.0557169914245605
    10. '```' → logprob: -5.4307169914245605

Token 40: ' (' (ID: 350)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.20497386157512665
    2. ' k' → logprob: -2.2049739360809326
    3. 'n' → logprob: -2.8299739360809326
    4. 'k' → logprob: -4.2049736976623535
    5. '(n' → logprob: -8.079974174499512
    6. ' A' → logprob: -8.329974174499512
    7. ' not' → logprob: -8.579974174499512
    8. ' ' → logprob: -9.204974174499512
    9. ' (' → logprob: -9.204974174499512
    10. '(k' → logprob: -9.829974174499512

Token 41: 'n' (ID: 77)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.7901958227157593
    2. 'n' → logprob: -1.2901958227157593
    3. ' n' → logprob: -1.7901958227157593
    4. ' k' → logprob: -2.290195941925049
    5. 'A' → logprob: -6.665195941925049
    6. ' A' → logprob: -7.665195941925049
    7. '(n' → logprob: -8.29019546508789
    8. ' not' → logprob: -8.66519546508789
    9. ')' → logprob: -8.91519546508789
    10. '(k' → logprob: -9.04019546508789

Token 42: '-' (ID: 12)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.6146447658538818
    2. '>' → logprob: -1.1146447658538818
    3. ' >=' → logprob: -3.114644765853882
    4. ' <=' → logprob: -4.114645004272461
    5. '>=' → logprob: -4.239645004272461
    6. ' <' → logprob: -4.364645004272461
    7. ')' → logprob: -4.739645004272461
    8. '<=' → logprob: -4.864645004272461
    9. ' ' → logprob: -5.114645004272461
    10. '-' → logprob: -5.239645004272461

Token 43: '1' (ID: 16)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5044561624526978
    2. '1' → logprob: -1.2544561624526978
    3. ' ' → logprob: -3.379456043243408
    4. ' k' → logprob: -4.004456043243408
    5. ')' → logprob: -4.129456043243408
    6. '0' → logprob: -4.254456043243408
    7. '2' → logprob: -4.254456043243408
    8. '>' → logprob: -5.129456043243408
    9. ')>' → logprob: -5.754456043243408
    10. '-' → logprob: -6.504456043243408

Token 44: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16917775571346283
    2. ' )' → logprob: -2.669177770614624
    3. ')>=' → logprob: -2.794177770614624
    4. ')%' → logprob: -4.794177532196045
    5. ')>' → logprob: -4.794177532196045
    6. ' >=' → logprob: -6.044177532196045
    7. '>=' → logprob: -6.169177532196045
    8. '%' → logprob: -6.669177532196045
    9. ')<' → logprob: -7.044177532196045
    10. '>' → logprob: -7.919177532196045

Token 45: '%(' (ID: 47570)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6581737399101257
    2. ' %' → logprob: -0.9081737399101257
    3. ' else' → logprob: -4.283173561096191
    4. '>' → logprob: -4.283173561096191
    5. ' >' → logprob: -4.658173561096191
    6. ' ==' → logprob: -4.908173561096191
    7. '==' → logprob: -5.033173561096191
    8. ' <' → logprob: -5.283173561096191
    9. ' ' → logprob: -5.283173561096191
    10. ' !=' → logprob: -5.283173561096191

Token 46: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0255734920501709
    2. '(k' → logprob: -4.40057373046875
    3. ' k' → logprob: -4.40057373046875
    4. ' (' → logprob: -7.27557373046875
    5. '(' → logprob: -12.65057373046875
    6. ' ' → logprob: -12.90057373046875
    7. '{k' → logprob: -12.90057373046875
    8. 'K' → logprob: -13.15057373046875
    9. '   ' → logprob: -13.40057373046875
    10. ')' → logprob: -13.90057373046875

Token 47: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00010866894444916397
    2. ' -' → logprob: -9.25010871887207
    3. '1' → logprob: -11.87510871887207
    4. ')' → logprob: -13.00010871887207
    5. '-)' → logprob: -13.37510871887207
    6. '!=' → logprob: -14.50010871887207
    7. '==' → logprob: -14.87510871887207
    8. ' ' → logprob: -15.50010871887207
    9. '-
' → logprob: -15.62510871887207
    10. ')-' → logprob: -16.12510871887207

Token 48: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.125210297293961e-05
    2. '-' → logprob: -9.875081062316895
    3. ' ' → logprob: -10.500081062316895
    4. '```' → logprob: -13.875081062316895
    5. ')' → logprob: -14.250081062316895
    6. ' -' → logprob: -15.625081062316895
    7. '0' → logprob: -16.12508201599121
    8. '(' → logprob: -16.62508201599121
    9. '`' → logprob: -16.81258201599121
    10. '   ' → logprob: -16.93758201599121

Token 49: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33540594577789307
    2. '==' → logprob: -1.710405945777893
    3. '!=' → logprob: -2.9604058265686035
    4. ' else' → logprob: -4.3354058265686035
    5. ' !=' → logprob: -4.5854058265686035
    6. ' ==' → logprob: -4.5854058265686035
    7. ')==' → logprob: -4.9604058265686035
    8. 'else' → logprob: -5.3354058265686035
    9. ')!=' → logprob: -5.7104058265686035
    10. ' )' → logprob: -6.0854058265686035

Token 50: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.5743048787117004
    2. '==' → logprob: -1.0743048191070557
    3. 'else' → logprob: -2.4493048191070557
    4. ' ==' → logprob: -5.074305057525635
    5. '!=' → logprob: -6.074305057525635
    6. '>' → logprob: -8.824304580688477
    7. ' !=' → logprob: -8.949304580688477
    8. '```' → logprob: -10.074304580688477
    9. ' ' → logprob: -10.199304580688477
    10. '=' → logprob: -10.824304580688477

Token 51: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.20527750253677368
    2. '(n' → logprob: -1.705277442932129
    3. '(' → logprob: -5.830277442932129
    4. '((' → logprob: -7.830277442932129
    5. ' ' → logprob: -8.205277442932129
    6. ' ((' → logprob: -9.205277442932129
    7. ' n' → logprob: -9.830277442932129
    8. '-' → logprob: -10.580277442932129
    9. 'n' → logprob: -10.830277442932129
    10. '  ' → logprob: -11.455277442932129

Token 52: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.48863309621810913
    2. 'n' → logprob: -0.9886330962181091
    3. ' (' → logprob: -4.488633155822754
    4. ' n' → logprob: -6.363633155822754
    5. '-' → logprob: -7.363633155822754
    6. '(' → logprob: -7.988633155822754
    7. '((' → logprob: -8.363633155822754
    8. '   ' → logprob: -9.363633155822754
    9. ' ' → logprob: -9.738633155822754
    10. 'N' → logprob: -10.613633155822754

Token 53: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.000365855434210971
    2. ' -' → logprob: -8.1253662109375
    3. ')' → logprob: -10.1253662109375
    4. ')//' → logprob: -11.1253662109375
    5. '//' → logprob: -12.1253662109375
    6. '   ' → logprob: -12.2503662109375
    7. ' ' → logprob: -13.7503662109375
    8. '-)' → logprob: -14.3753662109375
    9. '	' → logprob: -14.8753662109375
    10. ' )' → logprob: -14.8753662109375

Token 54: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00037347347824834287
    2. '-' → logprob: -8.375373840332031
    3. 'n' → logprob: -9.125373840332031
    4. '(' → logprob: -11.375373840332031
    5. ' ' → logprob: -11.375373840332031
    6. '(n' → logprob: -12.500373840332031
    7. '   ' → logprob: -13.125373840332031
    8. '```' → logprob: -13.750373840332031
    9. '//' → logprob: -14.250373840332031
    10. '0' → logprob: -14.375373840332031

Token 55: ')//' (ID: 60375)
  Prédit: ')//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.08115687966346741
    2. ')' → logprob: -2.5811569690704346
    3. ')/(' → logprob: -6.5811567306518555
    4. '//' → logprob: -7.3311567306518555
    5. ' )' → logprob: -8.581156730651855
    6. ' //' → logprob: -11.706156730651855
    7. ')#' → logprob: -11.706156730651855
    8. ' //(' → logprob: -12.331156730651855
    9. '   ' → logprob: -12.581156730651855
    10. ')/' → logprob: -13.081156730651855

Token 56: '(' (ID: 7)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -2.534558552724775e-05
    2. 'k' → logprob: -10.875025749206543
    3. ' (' → logprob: -12.625025749206543
    4. '(' → logprob: -13.375025749206543
    5. '(K' → logprob: -13.750025749206543
    6. '{k' → logprob: -15.875025749206543
    7. '[k' → logprob: -16.500024795532227
    8. ' k' → logprob: -16.750024795532227
    9. 'K' → logprob: -17.250024795532227
    10. '```' → logprob: -17.625024795532227

Token 57: 'k' (ID: 74)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.160866379737854
    2. 'k' → logprob: -1.910866379737854
    3. ' (' → logprob: -7.7858662605285645
    4. ' k' → logprob: -8.910866737365723
    5. '(' → logprob: -10.535866737365723
    6. ')' → logprob: -11.035866737365723
    7. 'K' → logprob: -11.160866737365723
    8. '{k' → logprob: -11.785866737365723
    9. '[k' → logprob: -12.285866737365723
    10. ',k' → logprob: -12.535866737365723

Token 58: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.652451464906335e-05
    2. '1' → logprob: -11.500016212463379
    3. ')' → logprob: -12.625016212463379
    4. ' -' → logprob: -12.875016212463379
    5. '   ' → logprob: -16.000017166137695
    6. '-)' → logprob: -16.250017166137695
    7. '```' → logprob: -16.625017166137695
    8. ' ' → logprob: -16.750017166137695
    9. ')-' → logprob: -17.000017166137695
    10. '[' → logprob: -17.375017166137695

Token 59: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. ')' → logprob: -17.875
    4. '-' → logprob: -18.0
    5. '```' → logprob: -19.5
    6. '<|end|>' → logprob: -19.625
    7. '   ' → logprob: -20.75
    8. '[' → logprob: -21.375
    9. '<|end|>' → logprob: -21.75
    10. '2' → logprob: -21.875

Token 60: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.392202976712724e-06
    2. '))' → logprob: -12.875006675720215
    3. ' )' → logprob: -13.625006675720215
    4. '')' → logprob: -14.000006675720215
    5. ')return' → logprob: -14.625006675720215
    6. '`)' → logprob: -15.000006675720215
    7. ')))' → logprob: -15.500006675720215
    8. '）' → logprob: -16.3750057220459
    9. ')
' → logprob: -16.5000057220459
    10. '   ' → logprob: -16.5000057220459

Token 61: 'class' (ID: 1444)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.35089772939682007
    2. ')' → logprob: -2.350897789001465
    3. '\n' → logprob: -2.975897789001465
    4. '*' → logprob: -3.350897789001465
    5. '+' → logprob: -3.475897789001465
    6. '(n' → logprob: -3.975897789001465
    7. '(
' → logprob: -4.350897789001465
    8. '[' → logprob: -4.850897789001465
    9. '
' → logprob: -4.850897789001465
    10. ':' → logprob: -5.100897789001465

Token 62: ' Solver' (ID: 141655)
  Prédit: ' Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Solution' → logprob: -0.24454472959041595
    2. ' ' → logprob: -1.8695447444915771
    3. ' Solver' → logprob: -4.119544506072998
    4. ' My' → logprob: -4.494544506072998
    5. ' Calculator' → logprob: -4.619544506072998
    6. ' Node' → logprob: -4.744544506072998
    7. ' Trie' → logprob: -5.744544506072998
    8. ' A' → logprob: -5.744544506072998
    9. ' Counter' → logprob: -5.994544506072998
    10. ' S' → logprob: -6.494544506072998

Token 63: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00046844579628668725
    2. '():' → logprob: -7.7504682540893555
    3. ':
' → logprob: -11.000468254089355
    4. '):' → logprob: -11.875468254089355
    5. ' :' → logprob: -12.375468254089355
    6. '(' → logprob: -12.625468254089355
    7. '<|end|>' → logprob: -13.375468254089355
    8. ':def' → logprob: -13.625468254089355
    9. '(object' → logprob: -13.750468254089355
    10. '>:' → logprob: -14.000468254089355

Token 64: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39774277806282043
    2. '    ' → logprob: -2.397742748260498
    3. ' ' → logprob: -2.522742748260498
    4. ' def' → logprob: -3.022742748260498
    5. '<|end|>' → logprob: -3.022742748260498
    6. '_' → logprob: -3.522742748260498
    7. ':' → logprob: -4.522742748260498
    8. 'def' → logprob: -4.772742748260498
    9. '	def' → logprob: -6.897742748260498
    10. '  ' → logprob: -6.897742748260498

Token 65: ' def' (ID: 1056)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.19476507604122162
    2. ' def' → logprob: -1.8197650909423828
    3. '    ' → logprob: -5.319765090942383
    4. '   ' → logprob: -5.819765090942383
    5. '_' → logprob: -6.069765090942383
    6. 'def' (adapté à ' def') → logprob: -6.444765090942383
    7. ' d' → logprob: -7.444765090942383
    8. ' 
' → logprob: -7.819765090942383
    9. ' (' → logprob: -7.944765090942383
    10. 'd' → logprob: -8.319765090942383

Token 66: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.006527668796479702
    2. ' ' → logprob: -5.631527900695801
    3. ' solve' → logprob: -6.381527900695801
    4. ' _' → logprob: -7.006527900695801
    5. '__' → logprob: -8.6315279006958
    6. ' ' → logprob: -9.3815279006958
    7. '_' → logprob: -10.6315279006958
    8. '  ' → logprob: -11.3815279006958
    9. 'solve' → logprob: -12.5065279006958
    10. ' ___' → logprob: -12.6315279006958

Token 67: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.440506407059729e-05
    2. 'i' → logprob: -10.75003433227539
    3. 'ini' → logprob: -11.62503433227539
    4. 'in' → logprob: -12.75003433227539
    5. ' init' → logprob: -14.62503433227539
    6. 'int' → logprob: -15.25003433227539
    7. 'inite' → logprob: -16.87503433227539
    8. 'new' → logprob: -17.00003433227539
    9. '```' → logprob: -17.00003433227539
    10. 'call' → logprob: -17.12503433227539

Token 68: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.12734875082969666
    2. '__' → logprob: -2.1273486614227295
    3. '__(
' → logprob: -8.627348899841309
    4. '(' → logprob: -9.377348899841309
    5. '__((' → logprob: -9.502348899841309
    6. '(self' → logprob: -10.377348899841309
    7. '__('' → logprob: -11.002348899841309
    8. '___' → logprob: -11.127348899841309
    9. '__(*' → logprob: -11.877348899841309
    10. '_(' → logprob: -12.627348899841309

Token 69: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0015380734112113714
    2. ' self' → logprob: -6.501538276672363
    3. ')' → logprob: -11.626538276672363
    4. ',' → logprob: -12.001538276672363
    5. ' ' → logprob: -12.001538276672363
    6. ',self' → logprob: -12.126538276672363
    7. 'A' → logprob: -13.126538276672363
    8. '   ' → logprob: -13.126538276672363
    9. 's' → logprob: -13.626538276672363
    10. '(self' → logprob: -14.001538276672363

Token 70: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01182424183934927
    2. ' ,' → logprob: -4.761824131011963
    3. ',n' → logprob: -5.761824131011963
    4. ',N' → logprob: -10.261824607849121
    5. ',self' → logprob: -11.886824607849121
    6. '):' → logprob: -13.011824607849121
    7. 'self' → logprob: -13.136824607849121
    8. ')' → logprob: -13.261824607849121
    9. ',a' → logprob: -13.511824607849121
    10. ' ' → logprob: -13.636824607849121

Token 71: ' n' (ID: 297)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4862801432609558
    2. 'n' → logprob: -1.4862802028656006
    3. 'N' → logprob: -1.9862802028656006
    4. ' self' → logprob: -4.6112799644470215
    5. 'A' → logprob: -5.2362799644470215
    6. ' n' → logprob: -5.7362799644470215
    7. ' N' → logprob: -6.3612799644470215
    8. ')' → logprob: -7.3612799644470215
    9. 's' → logprob: -8.11128044128418
    10. '   ' → logprob: -8.61128044128418

Token 72: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001923352392623201
    2. ',k' → logprob: -9.375192642211914
    3. ' ,' → logprob: -9.500192642211914
    4. ',K' → logprob: -10.500192642211914
    5. ',n' → logprob: -12.625192642211914
    6. ')' → logprob: -14.875192642211914
    7. '):' → logprob: -15.125192642211914
    8. '‌,' → logprob: -15.125192642211914
    9. ',N' → logprob: -15.375192642211914
    10. ':' → logprob: -16.625192642211914

Token 73: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.4287126064300537
    2. ' k' → logprob: -1.0537126064300537
    3. 'K' → logprob: -12.678712844848633
    4. ' ' → logprob: -12.928712844848633
    5. ')' → logprob: -13.428712844848633
    6. ' K' → logprob: -13.553712844848633
    7. '    ' → logprob: -14.428712844848633
    8. '	k' → logprob: -14.428712844848633
    9. '   ' → logprob: -14.928712844848633
    10. ' ' → logprob: -15.241212844848633

Token 74: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08515776693820953
    2. ',' → logprob: -2.585157871246338
    3. ')' → logprob: -5.085157871246338
    4. ':' → logprob: -10.58515739440918
    5. ' ):' → logprob: -10.83515739440918
    6. '),' → logprob: -12.46015739440918
    7. '   ' → logprob: -12.71015739440918
    8. '):
' → logprob: -13.58515739440918
    9. ',A' → logprob: -13.58515739440918
    10. ',n' → logprob: -13.83515739440918

Token 75: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9594902396202087
    2. '       ' → logprob: -1.2094902992248535
    3. ')' → logprob: -1.4594902992248535
    4. ':' → logprob: -3.5844902992248535
    5. '):' → logprob: -3.8344902992248535
    6. '   ' → logprob: -4.5844902992248535
    7. ',n' → logprob: -4.5844902992248535
    8. '<|end|>' → logprob: -5.0844902992248535
    9. '):
' → logprob: -5.8344902992248535
    10. '(n' → logprob: -6.8344902992248535

Token 76: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6530919671058655
    2. 'self' (adapté à ' self') → logprob: -1.0280919075012207
    3. '       ' → logprob: -2.6530919075012207
    4. 'n' → logprob: -3.2780919075012207
    5. ' ' → logprob: -5.153091907501221
    6. ' n' → logprob: -5.778091907501221
    7. ' ' → logprob: -6.153091907501221
    8. '   ' → logprob: -6.528091907501221
    9. '	self' → logprob: -7.278091907501221
    10. '	n' → logprob: -8.903092384338379

Token 77: '.n' (ID: 1835)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.20234133303165436
    2. '.n' → logprob: -1.7023413181304932
    3. '.N' → logprob: -7.827341556549072
    4. ' .' → logprob: -8.202341079711914
    5. ',' → logprob: -9.202341079711914
    6. ' ' → logprob: -9.452341079711914
    7. ',n' → logprob: -10.827341079711914
    8. '.A' → logprob: -11.202341079711914
    9. '.a' → logprob: -11.327341079711914
    10. '.k' → logprob: -11.452341079711914

Token 78: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3875381052494049
    2. '=' → logprob: -1.1375380754470825
    3. ',' → logprob: -7.387537956237793
    4. ' ,' → logprob: -10.762537956237793
    5. ' ' → logprob: -11.137537956237793
    6. '<|end|>' → logprob: -12.762537956237793
    7. ' =
' → logprob: -13.262537956237793
    8. ')' → logprob: -13.387537956237793
    9. '=n' → logprob: -13.387537956237793
    10. ',n' → logprob: -14.512537956237793

Token 79: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.2014177292585373
    2. 'n' → logprob: -1.7014176845550537
    3. '	n' → logprob: -13.076417922973633
    4. ' ' → logprob: -13.576417922973633
    5. '<|end|>' → logprob: -14.951417922973633
    6. ')n' → logprob: -15.576417922973633
    7. '_n' → logprob: -15.701417922973633
    8. ' ' → logprob: -16.701417922973633
    9. '=n' → logprob: -16.701417922973633
    10. ',n' → logprob: -17.076417922973633

Token 80: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 81: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1552923172712326
    2. '<|end|>' → logprob: -2.030292272567749
    3. '
' → logprob: -4.655292510986328
    4. ',' → logprob: -6.780292510986328
    5. '<|end|>' → logprob: -7.905292510986328
    6. ' ' → logprob: -7.905292510986328
    7. '        
' → logprob: -8.280292510986328
    8. 'self' → logprob: -8.655292510986328
    9. '   ' → logprob: -8.780292510986328
    10. '	' → logprob: -9.155292510986328

Token 82: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.1725800484418869
    2. ' self' → logprob: -1.9225800037384033
    3. 'k' → logprob: -5.047580242156982
    4. '       ' → logprob: -5.297580242156982
    5. ' k' → logprob: -7.422580242156982
    6. ' ' → logprob: -9.172579765319824
    7. '   ' → logprob: -9.797579765319824
    8. 'K' → logprob: -10.797579765319824
    9. ' K' → logprob: -11.047579765319824
    10. ',' → logprob: -11.797579765319824

Token 83: '.k' (ID: 9040)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7533614039421082
    2. '-' → logprob: -1.128361463546753
    3. ',k' → logprob: -2.878361463546753
    4. '.' → logprob: -3.003361463546753
    5. '-k' → logprob: -3.628361463546753
    6. ' -' → logprob: -3.753361463546753
    7. '.K' → logprob: -4.378361225128174
    8. ',K' → logprob: -5.128361225128174
    9. '-K' → logprob: -5.253361225128174
    10. '.k' → logprob: -5.378361225128174

Token 84: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.020581480115652084
    2. ' =' → logprob: -3.8955814838409424
    3. '<|end|>' → logprob: -10.645581245422363
    4. ')' → logprob: -11.645581245422363
    5. ' ' → logprob: -12.395581245422363
    6. ',' → logprob: -13.895581245422363
    7. '=
' → logprob: -15.020581245422363
    8. '=k' → logprob: -15.645581245422363
    9. ' =
' → logprob: -15.770581245422363
    10. '    ' → logprob: -16.02058219909668

Token 85: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.12692831456661224
    2. ' k' → logprob: -2.1269283294677734
    3. ' ' → logprob: -15.751928329467773
    4. '	k' → logprob: -16.251928329467773
    5. ' ' → logprob: -18.376928329467773
    6. '    ' → logprob: -18.501928329467773
    7. '   ' → logprob: -18.626928329467773
    8. '  ' → logprob: -19.126928329467773
    9. 'K' → logprob: -19.376928329467773
    10. '=k' → logprob: -19.626928329467773

Token 86: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 87: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 88: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.281623125076294
    2. 'def' (adapté à ' def') → logprob: -1.406623125076294
    3. '   ' → logprob: -1.781623125076294
    4. '<|end|>' → logprob: -2.031623125076294
    5. ' def' → logprob: -2.156623125076294
    6. '    
' → logprob: -4.406622886657715
    7. '	def' → logprob: -4.406622886657715
    8. ' 
' → logprob: -4.531622886657715
    9. ' ' → logprob: -4.781622886657715
    10. '  
' → logprob: -5.406622886657715

Token 89: ' solve' (ID: 17722)
  Prédit: ' calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calc' → logprob: -0.48599228262901306
    2. ' solve' → logprob: -1.1109923124313354
    3. ' ' → logprob: -4.110992431640625
    4. '_' → logprob: -4.235992431640625
    5. ' calculate' → logprob: -4.985992431640625
    6. 'calc' → logprob: -5.235992431640625
    7. ' c' → logprob: -5.860992431640625
    8. ' def' → logprob: -5.860992431640625
    9. ' _' → logprob: -6.485992431640625
    10. 'c' → logprob: -6.610992431640625

Token 90: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6939777731895447
    2. '(self' → logprob: -0.6939777731895447
    3. '(s' → logprob: -7.8189778327941895
    4. ' (' → logprob: -8.068977355957031
    5. '()' → logprob: -9.943977355957031
    6. '(
' → logprob: -10.568977355957031
    7. '_' → logprob: -11.693977355957031
    8. '   ' → logprob: -12.193977355957031
    9. ' ' → logprob: -12.568977355957031
    10. 'self' → logprob: -12.568977355957031

Token 91: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2269292175769806
    2. '):' → logprob: -1.6019291877746582
    3. ')' → logprob: -6.726929187774658
    4. ' ,' → logprob: -9.351929664611816
    5. ' ):' → logprob: -9.601929664611816
    6. ',n' → logprob: -9.851929664611816
    7. '):
' → logprob: -11.226929664611816
    8. '(' → logprob: -11.601929664611816
    9. 'self' → logprob: -11.726929664611816
    10. ',s' → logprob: -11.851929664611816

Token 92: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007632062304764986
    2. ' ' → logprob: -6.007632255554199
    3. '<|end|>' → logprob: -6.632632255554199
    4. '        
' → logprob: -7.257632255554199
    5. '[' → logprob: -7.632632255554199
    6. '\' → logprob: -7.757632255554199
    7. ' 
' → logprob: -8.0076322555542
    8. '   ' → logprob: -8.1326322555542
    9. '(' → logprob: -8.1326322555542
    10. 'n' → logprob: -8.8826322555542

Token 93: ' n' (ID: 297)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.4324135780334473
    2. 'res' → logprob: -1.8074135780334473
    3. 'r' → logprob: -1.9324135780334473
    4. 'c' → logprob: -2.3074135780334473
    5. 'l' → logprob: -3.0574135780334473
    6. 'return' → logprob: -3.1824135780334473
    7. ' res' → logprob: -3.4324135780334473
    8. '       ' → logprob: -3.5574135780334473
    9. 'ans' → logprob: -3.8074135780334473
    10. 's' → logprob: -4.057413578033447

Token 94: ',k' (ID: 35155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10573804378509521
    2. ' ,' → logprob: -3.7307381629943848
    3. '<|end|>' → logprob: -3.7307381629943848
    4. '-' → logprob: -4.855738162994385
    5. ' ' → logprob: -4.855738162994385
    6. ' =' → logprob: -4.980738162994385
    7. ')' → logprob: -4.980738162994385
    8. ' *' → logprob: -4.980738162994385
    9. '=' → logprob: -5.105738162994385
    10. ' -' → logprob: -5.480738162994385

Token 95: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.45616230368614197
    2. ' =' → logprob: -1.7061623334884644
    3. '=' → logprob: -1.9561623334884644
    4. '<|end|>' → logprob: -3.456162214279175
    5. ')' → logprob: -4.706162452697754
    6. '<|end|>' → logprob: -7.331162452697754
    7. ',
' → logprob: -7.956162452697754
    8. ':' → logprob: -8.581162452697754
    9. ' ' → logprob: -8.581162452697754
    10. ' ,' → logprob: -8.706162452697754

Token 96: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6931688189506531
    2. 'self' → logprob: -0.6931688189506531
    3. '    ' → logprob: -11.693168640136719
    4. '   ' → logprob: -12.068168640136719
    5. '       ' → logprob: -12.693168640136719
    6. '(self' → logprob: -13.568168640136719
    7. '	self' → logprob: -13.693168640136719
    8. '  ' → logprob: -14.443168640136719
    9. ' ' → logprob: -14.568168640136719
    10. '        ' → logprob: -15.193168640136719

Token 97: '.n' (ID: 1835)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.012888774275779724
    2. '.n' → logprob: -4.3878889083862305
    3. '.
' → logprob: -8.01288890838623
    4. '.

' → logprob: -11.26288890838623
    5. '.k' → logprob: -11.88788890838623
    6. '.`' → logprob: -12.01288890838623
    7. '.\' → logprob: -12.51288890838623
    8. ' .' → logprob: -12.51288890838623
    9. '.

' → logprob: -12.63788890838623
    10. 'n' → logprob: -13.13788890838623

Token 98: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15878115594387054
    2. ',k' → logprob: -2.033781051635742
    3. '<|end|>' → logprob: -4.783781051635742
    4. ' ,' → logprob: -6.033781051635742
    5. ',n' → logprob: -6.158781051635742
    6. ',K' → logprob: -6.408781051635742
    7. ',
' → logprob: -8.158781051635742
    8. ',self' → logprob: -8.533781051635742
    9. '
' → logprob: -8.533781051635742
    10. '<|end|>' → logprob: -9.283781051635742

Token 99: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.12693524360656738
    2. 'self' → logprob: -2.1269352436065674
    3. ' ' → logprob: -12.751935005187988
    4. ' ' → logprob: -13.001935005187988
    5. ' 
' → logprob: -14.376935005187988
    6. 's' → logprob: -14.376935005187988
    7. '	self' → logprob: -15.251935005187988
    8. ' k' → logprob: -15.501935005187988
    9. '    ' → logprob: -15.626935005187988
    10. ' s' → logprob: -15.751935005187988

Token 100: '.k' (ID: 9040)
  Prédit: '.k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.k' → logprob: -0.002189756603911519
    2. '.' → logprob: -6.127189636230469
    3. '.K' → logprob: -12.877189636230469
    4. ' .' → logprob: -14.252189636230469
    5. '.n' → logprob: -14.502189636230469
    6. 'k' → logprob: -14.877189636230469
    7. '.к' → logprob: -15.252189636230469
    8. '.
' → logprob: -15.752189636230469
    9. 'K' → logprob: -17.00218963623047
    10. '	k' → logprob: -17.25218963623047

Token 101: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.030793137848377228
    2. '       ' → logprob: -3.9057931900024414
    3. '<|end|>' → logprob: -4.780793190002441
    4. '        
' → logprob: -7.530793190002441
    5. '
' → logprob: -8.655793190002441
    6. '\n' → logprob: -8.780793190002441
    7. '' → logprob: -8.905793190002441
    8. ' 
' → logprob: -9.155793190002441
    9. '  
' → logprob: -9.155793190002441
    10. ' ' → logprob: -9.530793190002441

Token 102: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30527636408805847
    2. '
' → logprob: -1.4302763938903809
    3. '<|end|>' → logprob: -3.930276393890381
    4. '        
' → logprob: -5.930276393890381
    5. ' ' → logprob: -8.680275917053223
    6. '#' → logprob: -8.805275917053223
    7. '
' → logprob: -8.805275917053223
    8. '<|end|>' → logprob: -9.055275917053223
    9. ' 
' → logprob: -9.305275917053223
    10. '  
' → logprob: -9.305275917053223

Token 103: ' return' (ID: 622)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7684677839279175
    2. 'i' → logprob: -2.143467903137207
    3. 'res' → logprob: -2.268467903137207
    4. 'c' → logprob: -2.768467903137207
    5. 'a' → logprob: -3.018467903137207
    6. 'l' → logprob: -3.143467903137207
    7. 'A' → logprob: -3.268467903137207
    8. 'dp' → logprob: -3.893467903137207
    9. 's' → logprob: -4.018467903137207
    10. 'if' → logprob: -4.393467903137207

Token 104: ' calc' (ID: 25691)
  Prédit: ' calc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calc' → logprob: -0.2079986333847046
    2. 'calc' → logprob: -1.7079986333847046
    3. ' ' → logprob: -6.332998752593994
    4. '(calc' → logprob: -6.582998752593994
    5. ' N' → logprob: -6.832998752593994
    6. ' (' → logprob: -7.832998752593994
    7. ' '' → logprob: -7.832998752593994
    8. ' self' → logprob: -7.957998752593994
    9. ''' → logprob: -8.082998275756836
    10. ' -' → logprob: -8.832998275756836

Token 105: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6932892799377441
    2. '(n' → logprob: -0.6932892799377441
    3. '(N' → logprob: -9.693288803100586
    4. '<|end|>' → logprob: -10.568288803100586
    5. '(
' → logprob: -10.818288803100586
    6. '((' → logprob: -11.193288803100586
    7. '(k' → logprob: -11.318288803100586
    8. '(len' → logprob: -13.318288803100586
    9. '(

' → logprob: -13.318288803100586
    10. ' (' → logprob: -13.943288803100586

Token 106: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11288588494062424
    2. ',k' → logprob: -2.2378859519958496
    3. ' ,' → logprob: -10.112885475158691
    4. ',n' → logprob: -11.237885475158691
    5. ',
' → logprob: -12.862885475158691
    6. ' ' → logprob: -13.237885475158691
    7. 'k' → logprob: -13.487885475158691
    8. ',K' → logprob: -14.237885475158691
    9. ')' → logprob: -14.737885475158691
    10. '       ' → logprob: -14.987885475158691

Token 107: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3871197998523712
    2. ' k' → logprob: -1.1371197700500488
    3. ')' → logprob: -8.387120246887207
    4. ' )' → logprob: -11.637120246887207
    5. ' ' → logprob: -11.762120246887207
    6. ' 
' → logprob: -13.762120246887207
    7. '	k' → logprob: -13.762120246887207
    8. 'K' → logprob: -15.137120246887207
    9. '    ' → logprob: -15.387120246887207
    10. '(k' → logprob: -15.824620246887207

Token 108: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.7697225252486533e-06
    2. ' )' → logprob: -13.625003814697266
    3. ')
' → logprob: -13.750003814697266
    4. '))' → logprob: -14.625003814697266
    5. ')return' → logprob: -15.000003814697266
    6. '   ' → logprob: -16.250003814697266
    7. '+' → logprob: -16.375003814697266
    8. ' ' → logprob: -16.625003814697266
    9. ')#' → logprob: -16.875003814697266
    10. '<|end|>' → logprob: -16.875003814697266

Token 109: 'res' (ID: 430)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 110: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5141756534576416
    2. 'ult' → logprob: -1.8891756534576416
    3. 'olve' → logprob: -2.2641756534576416
    4. 'ults' → logprob: -3.2641756534576416
    5. ' =' → logprob: -3.3891756534576416
    6. '=' → logprob: -3.6391756534576416
    7. 'olver' → logprob: -4.2641754150390625
    8. '<|end|>' → logprob: -4.5141754150390625
    9. 'u' → logprob: -4.8891754150390625
    10. 'ponse' → logprob: -6.0141754150390625

Token 111: ' Solver' (ID: 141655)
  Prédit: ' Solver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Solver' → logprob: -0.28130143880844116
    2. 'Solver' → logprob: -1.406301498413086
    3. ' Sol' → logprob: -9.531301498413086
    4. 'Sol' → logprob: -9.781301498413086
    5. 'Solution' → logprob: -12.406301498413086
    6. '	S' → logprob: -12.781301498413086
    7. 'S' → logprob: -13.031301498413086
    8. '(S' → logprob: -13.656301498413086
    9. ' Solution' → logprob: -13.781301498413086
    10. ' solver' → logprob: -13.781301498413086

Token 112: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.39238259196281433
    2. '(N' → logprob: -1.1423826217651367
    3. '(n' → logprob: -5.267382621765137
    4. '(
' → logprob: -8.767382621765137
    5. '(K' → logprob: -9.142382621765137
    6. '((' → logprob: -10.017382621765137
    7. ' (' → logprob: -12.142382621765137
    8. '(`' → logprob: -12.642382621765137
    9. '(A' → logprob: -12.642382621765137
    10. ')(' → logprob: -12.642382621765137

Token 113: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006849284749478102
    2. ',K' → logprob: -5.00684928894043
    3. ',N' → logprob: -9.00684928894043
    4. ',k' → logprob: -12.38184928894043
    5. ' ,' → logprob: -12.38184928894043
    6. ')' → logprob: -13.25684928894043
    7. ',
' → logprob: -15.50684928894043
    8. ',)' → logprob: -16.00684928894043
    9. ',None' → logprob: -16.13184928894043
    10. '‌,' → logprob: -16.38184928894043

Token 114: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.632892370223999
    2. 'K' → logprob: -0.757892370223999
    3. ')' → logprob: -8.507892608642578
    4. ' ' → logprob: -9.757892608642578
    5. ' )' → logprob: -11.507892608642578
    6. ' 
' → logprob: -11.882892608642578
    7. ''' → logprob: -12.007892608642578
    8. '<|end|>' → logprob: -12.382892608642578
    9. '	K' → logprob: -13.632892608642578
    10. ' ' → logprob: -13.882892608642578

Token 115: ').' (ID: 741)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01251847855746746
    2. ').' → logprob: -4.387518405914307
    3. ')
' → logprob: -11.887518882751465
    4. '))' → logprob: -14.512518882751465
    5. ' )' → logprob: -14.762518882751465
    6. ').__' → logprob: -15.637518882751465
    7. '()' → logprob: -15.762518882751465
    8. '),' → logprob: -16.26251792907715
    9. ')

' → logprob: -16.38751792907715
    10. ');' → logprob: -16.51251792907715

Token 116: 'solve' (ID: 117273)
  Prédit: 'solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: 0.0
    2. ' solve' → logprob: -17.125
    3. 'sol' → logprob: -19.5
    4. '.solve' → logprob: -20.75
    5. 'save' → logprob: -21.25
    6. 's' → logprob: -21.5
    7. 'resolve' → logprob: -21.5
    8. 'olve' → logprob: -23.75
    9. 'solver' → logprob: -24.0
    10. 'Solve' → logprob: -24.5

Token 117: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0028274620417505503
    2. '(' → logprob: -5.8778276443481445
    3. '()
' → logprob: -11.502827644348145
    4. '()(' → logprob: -12.252827644348145
    5. '()`' → logprob: -13.877827644348145
    6. ' ()' → logprob: -13.877827644348145
    7. '()

' → logprob: -14.127827644348145
    8. '().' → logprob: -14.252827644348145
    9. '()<' → logprob: -14.252827644348145
    10. '();' → logprob: -14.502827644348145

Token 118: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00039588010986335576
    2. '
' → logprob: -8.750395774841309
    3. 'res' → logprob: -9.750395774841309
    4. ')' → logprob: -10.125395774841309
    5. '\n' → logprob: -10.250395774841309
    6. '<|end|>' → logprob: -10.375395774841309
    7. ' print' → logprob: -10.625395774841309
    8. '  
' → logprob: -11.375395774841309
    9. ' 
' → logprob: -11.500395774841309
    10. 'pr' → logprob: -12.125395774841309

Token 119: '(res' (ID: 8331)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25198784470558167
    2. '(res' → logprob: -1.5019878149032593
    3. '(f' → logprob: -10.75198745727539
    4. '("("' → logprob: -10.75198745727539
    5. '('' → logprob: -11.62698745727539
    6. ' (' → logprob: -13.12698745727539
    7. '()' → logprob: -13.75198745727539
    8. '(`' → logprob: -14.00198745727539
    9. '(
' → logprob: -14.00198745727539
    10. '((' → logprob: -14.50198745727539

Token 120: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ' )' → logprob: -14.750000953674316
    3. '))' → logprob: -16.375
    4. ')`' → logprob: -16.375
    5. ')
' → logprob: -17.75
    6. ')}' → logprob: -18.875
    7. '(' → logprob: -18.875
    8. '')' → logprob: -19.0
    9. ')**' → logprob: -19.625
    10. '),' → logprob: -19.75


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 118
Tokens correctement prédits (1ère position, stricte): 47
Tokens correctement prédits (1ère position, avec adaptation): 48
Tokens correctement prédits (top 10): 93
Précision stricte (1ère position): 39.83%
Précision adaptée (1ère position): 40.68%
Précision (top 10): 78.81%
================================================================================
