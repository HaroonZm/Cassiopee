================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:43:50
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math

A, B = map(int, sys.stdin.readline().split())
gcd = math.gcd(A, B)
if gcd == 1:
    print(1)
else:
    n = gcd
    cnt = 0
    m = 2
    while m * m <= n:
        if n % m == 0:
            cnt += 1
            while n % m == 0:
                n //= m
        m = m + 1 if m == 2 else m + 2
    if n > 1:
        cnt += 1
    print(cnt + 1)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5435490608215332
    2. '.' → logprob: -1.0435490608215332
    3. '<|end|>' → logprob: -3.918549060821533
    4. '\' → logprob: -4.043549060821533
    5. 'import' → logprob: -4.418549060821533
    6. 'newline' → logprob: -5.293549060821533
    7. '' → logprob: -6.043549060821533
    8. '\r' → logprob: -6.168549060821533
    9. '
' → logprob: -6.293549060821533
    10. '<|end|>' → logprob: -6.418549060821533

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00020771251001860946
    2. 'os' → logprob: -8.500207901000977
    3. ' math' → logprob: -13.375207901000977
    4. ' re' → logprob: -13.750207901000977
    5. '"os' → logprob: -14.250207901000977
    6. ' json' → logprob: -14.750207901000977
    7. '_os' → logprob: -16.375207901000977
    8. ' ' → logprob: -16.500207901000977
    9. ' io' → logprob: -16.625207901000977
    10. '	os' → logprob: -16.875207901000977

Token 5: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.04749391973018646
    2. '\n' → logprob: -4.172493934631348
    3. '\' → logprob: -4.547493934631348
    4. 'import' → logprob: -4.672493934631348
    5. '
' → logprob: -5.672493934631348
    6. '```' → logprob: -6.297493934631348
    7. '

' → logprob: -6.672493934631348
    8. ',' → logprob: -6.922493934631348
    9. '<|end|>' → logprob: -6.922493934631348
    10. '.
' → logprob: -7.547493934631348

Token 6: 'A' (ID: 32)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8861402273178101
    2. '\' → logprob: -1.38614022731781
    3. 'import' → logprob: -2.1361403465270996
    4. '\n' → logprob: -2.2611403465270996
    5. 'def' → logprob: -3.5111403465270996
    6. '```' → logprob: -3.6361403465270996
    7. ',' → logprob: -4.3861403465271
    8. '#' → logprob: -4.6361403465271
    9. '
' → logprob: -4.6361403465271
    10. '' → logprob: -5.3861403465271

Token 7: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7272396683692932
    2. '=' → logprob: -1.3522396087646484
    3. '.' → logprob: -1.7272396087646484
    4. ' =' → logprob: -2.8522396087646484
    5. ' ' → logprob: -5.102239608764648
    6. 'I' → logprob: -5.227239608764648
    7. 'd' → logprob: -6.102239608764648
    8. 'p' → logprob: -6.352239608764648
    9. 'P' → logprob: -6.727239608764648
    10. 'r' → logprob: -6.977239608764648

Token 8: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.35032179951667786
    2. ' B' → logprob: -1.2253217697143555
    3. 'b' → logprob: -7.2253217697143555
    4. ' ' → logprob: -7.7253217697143555
    5. '=' → logprob: -7.8503217697143555
    6. ' =' → logprob: -8.475321769714355
    7. ' b' → logprob: -9.850321769714355
    8. 'I' → logprob: -11.850321769714355
    9. 'r' → logprob: -11.975321769714355
    10. 'a' → logprob: -12.350321769714355

Token 9: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.281771183013916
    2. '=' → logprob: -1.406771183013916
    3. ',' → logprob: -7.531771183013916
    4. ' ' → logprob: -9.781770706176758
    5. ')' → logprob: -11.156770706176758
    6. '<|end|>' → logprob: -12.031770706176758
    7. ' ,' → logprob: -12.656770706176758
    8. '.' → logprob: -14.031770706176758
    9. ' =
' → logprob: -14.156770706176758
    10. ' =)' → logprob: -14.281770706176758

Token 10: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.06683444231748581
    2. 'map' → logprob: -2.8168344497680664
    3. ' ' → logprob: -5.566834449768066
    4. '0' → logprob: -8.316834449768066
    5. ' input' → logprob: -8.316834449768066
    6. ' list' → logprob: -8.566834449768066
    7. '1' → logprob: -9.566834449768066
    8. '10' → logprob: -9.691834449768066
    9. 'input' → logprob: -10.191834449768066
    10. '5' → logprob: -10.191834449768066

Token 11: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6031845808029175
    2. '(int' → logprob: -0.9781845808029175
    3. '(str' → logprob: -2.853184700012207
    4. '(lambda' → logprob: -3.978184700012207
    5. '(input' → logprob: -8.103184700012207
    6. '(list' → logprob: -9.478184700012207
    7. '(eval' → logprob: -10.603184700012207
    8. '(
' → logprob: -10.603184700012207
    9. '(len' → logprob: -10.728184700012207
    10. '(sys' → logprob: -11.103184700012207

Token 12: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.21892453730106354
    2. ')' → logprob: -2.0939245223999023
    3. '(' → logprob: -2.9689245223999023
    4. '(input' → logprob: -4.218924522399902
    5. ',' → logprob: -5.343924522399902
    6. 'sys' → logprob: -7.218924522399902
    7. 'input' → logprob: -7.343924522399902
    8. '=sys' → logprob: -8.468924522399902
    9. ' (' → logprob: -8.593924522399902
    10. ' sys' → logprob: -8.843924522399902

Token 13: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.8488369584083557
    2. ' input' → logprob: -1.223836898803711
    3. ' sys' → logprob: -1.973836898803711
    4. 'sys' → logprob: -1.973836898803711
    5. ')' → logprob: -9.223836898803711
    6. ' ' → logprob: -10.723836898803711
    7. '(sys' → logprob: -11.598836898803711
    8. '=sys' → logprob: -12.473836898803711
    9. ' )' → logprob: -12.598836898803711
    10. '	sys' → logprob: -14.098836898803711

Token 14: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.07758468389511108
    2. '.' → logprob: -2.827584743499756
    3. '.argv' → logprob: -4.202584743499756
    4. '.readline' → logprob: -7.702584743499756
    5. '.stdout' → logprob: -10.577584266662598
    6. '.std' → logprob: -10.827584266662598
    7. '.input' → logprob: -11.202584266662598
    8. ' .' → logprob: -11.202584266662598
    9. '.standard' → logprob: -12.452584266662598
    10. '.import' → logprob: -12.827584266662598

Token 15: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.002650093985721469
    2. '.' → logprob: -6.377650260925293
    3. '.read' → logprob: -7.002650260925293
    4. '.readlines' → logprob: -10.377650260925293
    5. ').' → logprob: -12.877650260925293
    6. '.)' → logprob: -13.252650260925293
    7. '.stdin' → logprob: -14.002650260925293
    8. '.write' → logprob: -15.127650260925293
    9. ' .' → logprob: -15.377650260925293
    10. ')' → logprob: -15.502650260925293

Token 16: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.004715041723102331
    2. '()' → logprob: -6.0047149658203125
    3. '().' → logprob: -6.3797149658203125
    4. '()))' → logprob: -8.004714965820312
    5. ')' → logprob: -9.254714965820312
    6. ' ())' → logprob: -9.629714965820312
    7. '());' → logprob: -11.379714965820312
    8. '(),' → logprob: -11.754714965820312
    9. '(' → logprob: -11.879714965820312
    10. '();)' → logprob: -12.504714965820312

Token 17: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.11302950978279114
    2. 'split' → logprob: -2.3630294799804688
    3. 'rstrip' → logprob: -4.363029479980469
    4. ' strip' → logprob: -13.988029479980469
    5. ' split' → logprob: -15.363029479980469
    6. 'read' → logprob: -15.613029479980469
    7. 'rs' → logprob: -16.98802947998047
    8. 'rst' → logprob: -17.36302947998047
    9. 'replace' → logprob: -17.86302947998047
    10. ')' → logprob: -17.98802947998047

Token 18: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19942957162857056
    2. '))' → logprob: -2.199429512023926
    3. '())' → logprob: -2.699429512023926
    4. '()))' → logprob: -6.449429512023926
    5. '()' → logprob: -6.824429512023926
    6. '(' → logprob: -12.324429512023926
    7. ')))' → logprob: -12.574429512023926
    8. '),' → logprob: -12.949429512023926
    9. '`)' → logprob: -13.324429512023926
    10. ')`' → logprob: -13.574429512023926

Token 19: 'g' (ID: 70)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.7646319270133972
    2. 'result' → logprob: -1.139631986618042
    3. 'print' → logprob: -2.514631986618042
    4. 'if' → logprob: -2.514631986618042
    5. 'c' → logprob: -4.014631748199463
    6. 'area' → logprob: -5.014631748199463
    7. 'x' → logprob: -5.139631748199463
    8. 'X' → logprob: -5.889631748199463
    9. 'sum' → logprob: -5.889631748199463
    10. 's' → logprob: -6.264631748199463

Token 20: 'cd' (ID: 8301)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16366322338581085
    2. ' =' → logprob: -3.038663148880005
    3. '=g' → logprob: -3.163663148880005
    4. 'cd' → logprob: -3.288663148880005
    5. '=A' → logprob: -5.038663387298584
    6. 'g' → logprob: -5.538663387298584
    7. 'c' → logprob: -5.663663387298584
    8. 'math' → logprob: -6.038663387298584
    9. '=int' → logprob: -6.538663387298584
    10. '=a' → logprob: -6.538663387298584

Token 21: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007859412580728531
    2. '(A' → logprob: -5.132859230041504
    3. '(a' → logprob: -6.757859230041504
    4. '_' → logprob: -7.882859230041504
    5. ')' → logprob: -9.632859230041504
    6. '_g' → logprob: -9.757859230041504
    7. '(g' → logprob: -10.007859230041504
    8. ' (' → logprob: -10.257859230041504
    9. 'g' → logprob: -10.507859230041504
    10. '(
' → logprob: -10.507859230041504

Token 22: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.31326571106910706
    2. ' math' → logprob: -1.3132656812667847
    3. ' ' → logprob: -12.688265800476074
    4. '(math' → logprob: -14.688265800476074
    5. '1' → logprob: -15.938265800476074
    6. 'lambda' → logprob: -16.438264846801758
    7. 'Math' → logprob: -17.063264846801758
    8. '  ' → logprob: -17.188264846801758
    9. '/math' → logprob: -17.313264846801758
    10. '.math' → logprob: -17.313264846801758

Token 23: '.g' (ID: 1940)
  Prédit: '.g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.g' → logprob: -0.4386312961578369
    2. '.' → logprob: -1.063631296157837
    3. '.sqrt' → logprob: -4.688631057739258
    4. ' .' → logprob: -8.188631057739258
    5. '.f' → logprob: -9.438631057739258
    6. '.ceil' → logprob: -9.563631057739258
    7. '.s' → logprob: -9.813631057739258
    8. '.factor' → logprob: -10.188631057739258
    9. '.atan' → logprob: -10.563631057739258
    10. '.floor' → logprob: -10.688631057739258

Token 24: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.0022601638920605183
    2. 'c' → logprob: -6.877260208129883
    3. 'cdf' → logprob: -7.002260208129883
    4. 'cdn' → logprob: -8.877260208129883
    5. 'cf' → logprob: -9.377260208129883
    6. 'cmath' → logprob: -10.752260208129883
    7. '```' → logprob: -11.252260208129883
    8. 'CD' → logprob: -11.502260208129883
    9. 'cdr' → logprob: -12.002260208129883
    10. 'd' → logprob: -12.127260208129883

Token 25: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.00195444468408823
    2. '(' → logprob: -6.251954555511475
    3. '(
' → logprob: -11.751954078674316
    4. 'A' → logprob: -12.001954078674316
    5. '(a' → logprob: -12.001954078674316
    6. ' (' → logprob: -13.501954078674316
    7. '(B' → logprob: -13.626954078674316
    8. '((' → logprob: -14.001954078674316
    9. ')' → logprob: -14.126954078674316
    10. '(G' → logprob: -14.876954078674316

Token 26: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006434533279389143
    2. ' ,' → logprob: -7.750643253326416
    3. ',B' → logprob: -8.500643730163574
    4. 'B' → logprob: -12.625643730163574
    5. ',
' → logprob: -12.875643730163574
    6. ',b' → logprob: -13.500643730163574
    7. ',g' → logprob: -14.375643730163574
    8. ' ' → logprob: -15.125643730163574
    9. ',

' → logprob: -15.125643730163574
    10. ')' → logprob: -15.250643730163574

Token 27: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.048587825149297714
    2. ' B' → logprob: -3.0485877990722656
    3. ' ' → logprob: -15.298587799072266
    4. 'b' → logprob: -16.673587799072266
    5. ')' → logprob: -16.798587799072266
    6. '	B' → logprob: -17.798587799072266
    7. ' ' → logprob: -18.298587799072266
    8. '   ' → logprob: -19.048587799072266
    9. '  ' → logprob: -19.173587799072266
    10. '>B' → logprob: -19.236087799072266

Token 28: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.370294846012257e-05
    2. '))' → logprob: -10.250043869018555
    3. ')
' → logprob: -12.000043869018555
    4. ' )' → logprob: -14.625043869018555
    5. '),' → logprob: -15.125043869018555
    6. '()' → logprob: -15.375043869018555
    7. ')**' → logprob: -15.375043869018555
    8. ')))' → logprob: -15.500043869018555
    9. ')

' → logprob: -15.625043869018555
    10. '`)' → logprob: -16.500043869018555

Token 29: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03308616951107979
    2. '\n' → logprob: -3.908086061477661
    3. '\' → logprob: -5.53308629989624
    4. 'l' → logprob: -6.53308629989624
    5. '```' → logprob: -6.53308629989624
    6. '*' → logprob: -6.78308629989624
    7. '
' → logprob: -7.40808629989624
    8. 'n' → logprob: -7.65808629989624
    9. 'for' → logprob: -7.65808629989624
    10. 'g' → logprob: -8.158085823059082

Token 30: ' gcd' (ID: 106918)
  Prédit: ' gcd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gcd' → logprob: -0.09978880733251572
    2. ' A' → logprob: -3.0997889041900635
    3. 'g' → logprob: -3.3497889041900635
    4. ' ' → logprob: -4.849788665771484
    5. ' g' → logprob: -5.599788665771484
    6. 'A' → logprob: -5.849788665771484
    7. ' B' → logprob: -8.349788665771484
    8. ' (' → logprob: -9.974788665771484
    9. ' not' → logprob: -10.224788665771484
    10. ' ' → logprob: -10.849788665771484

Token 31: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.0058720111846924
    2. '>' → logprob: -1.5058720111846924
    3. ' >' → logprob: -1.6308720111846924
    4. ' !=' → logprob: -2.2558720111846924
    5. '==' → logprob: -2.3808720111846924
    6. '!=' → logprob: -4.505871772766113
    7. ' ' → logprob: -5.630871772766113
    8. '=' → logprob: -5.755871772766113
    9. ':' → logprob: -7.130871772766113
    10. ' <' → logprob: -8.505871772766113

Token 32: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5183594822883606
    2. '1' → logprob: -1.2683594226837158
    3. '0' → logprob: -2.143359422683716
    4. 'A' → logprob: -5.518359661102295
    5. ' A' → logprob: -6.268359661102295
    6. 'B' → logprob: -11.143359184265137
    7. ' B' → logprob: -11.768359184265137
    8. 'min' → logprob: -11.893359184265137
    9. ' min' → logprob: -12.768359184265137
    10. '2' → logprob: -13.143359184265137

Token 33: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10707689076662064
    2. '0' → logprob: -2.35707688331604
    3. 'A' → logprob: -5.357077121734619
    4. ' ' → logprob: -6.232077121734619
    5. 'min' → logprob: -9.482076644897461
    6. 'B' → logprob: -10.232076644897461
    7. 'max' → logprob: -10.357076644897461
    8. ' A' → logprob: -11.482076644897461
    9. '2' → logprob: -12.607076644897461
    10. 'a' → logprob: -13.732076644897461

Token 34: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.9266199160483666e-05
    2. ':
' → logprob: -11.000019073486328
    3. ' :' → logprob: -13.125019073486328
    4. ',' → logprob: -15.875019073486328
    5. ':return' → logprob: -16.250019073486328
    6. ':def' → logprob: -16.500019073486328
    7. ':**' → logprob: -16.625019073486328
    8. ':

' → logprob: -17.500019073486328
    9. '.' → logprob: -17.625019073486328
    10. '):' → logprob: -17.750019073486328

Token 35: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.603564441204071
    2. ' print' → logprob: -1.3535645008087158
    3. 'print' → logprob: -2.228564500808716
    4. '\n' → logprob: -2.478564500808716
    5. ' 
' → logprob: -6.978564262390137
    6. '    ' → logprob: -7.478564262390137
    7. ' \' → logprob: -7.978564262390137
    8. '\' → logprob: -8.478564262390137
    9. '    
' → logprob: -8.478564262390137
    10. '```' → logprob: -8.728564262390137

Token 36: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.05573050305247307
    2. ' print' → logprob: -2.9307305812835693
    3. '   ' → logprob: -7.68073034286499
    4. '\n' → logprob: -8.305730819702148
    5. '\' → logprob: -10.180730819702148
    6. '
' → logprob: -11.055730819702148
    7. '```' → logprob: -11.055730819702148
    8. ' \' → logprob: -11.305730819702148
    9. ' 
' → logprob: -11.430730819702148
    10. '`' → logprob: -12.055730819702148

Token 37: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5813496708869934
    2. '("' → logprob: -0.8313496708869934
    3. '(A' → logprob: -5.956349849700928
    4. '('' → logprob: -6.206349849700928
    5. '(-' → logprob: -8.20634937286377
    6. '()' → logprob: -8.33134937286377
    7. '(True' → logprob: -9.70634937286377
    8. '"' → logprob: -10.08134937286377
    9. '(B' → logprob: -10.20634937286377
    10. '("")' → logprob: -10.45634937286377

Token 38: '1' (ID: 16)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.366833359003067
    2. '"A' → logprob: -1.6168333292007446
    3. '-' → logprob: -2.866833448410034
    4. ''A' → logprob: -4.116833209991455
    5. 'A' → logprob: -4.241833209991455
    6. '1' → logprob: -4.366833209991455
    7. '"No' → logprob: -6.366833209991455
    8. ''' → logprob: -6.616833209991455
    9. '0' → logprob: -6.741833209991455
    10. '-A' → logprob: -6.991833209991455

Token 39: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.8828707804204896e-05
    2. ')
' → logprob: -10.125048637390137
    3. ' )' → logprob: -12.125048637390137
    4. '*' → logprob: -14.125048637390137
    5. '0' → logprob: -14.125048637390137
    6. '```' → logprob: -14.625048637390137
    7. '**' → logprob: -15.625048637390137
    8. '
' → logprob: -15.750048637390137
    9. '}' → logprob: -15.875048637390137
    10. '))' → logprob: -16.125049591064453

Token 40: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0001450187264708802
    2. 'elif' → logprob: -9.250144958496094
    3. ' else' → logprob: -10.125144958496094
    4. '```' → logprob: -12.875144958496094
    5. '   ' → logprob: -13.125144958496094
    6. ')' → logprob: -13.625144958496094
    7. '_else' → logprob: -14.750144958496094
    8. '.' → logprob: -15.000144958496094
    9. '*' → logprob: -15.000144958496094
    10. ',' → logprob: -15.625144958496094

Token 41: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005095454398542643
    2. ':
' → logprob: -7.625509738922119
    3. '   ' → logprob: -10.875509262084961
    4. ',' → logprob: -14.000509262084961
    5. ' :' → logprob: -14.500509262084961
    6. '```' → logprob: -15.125509262084961
    7. '.' → logprob: -15.500509262084961
    8. 'print' → logprob: -15.750509262084961
    9. ':

' → logprob: -16.12550926208496
    10. ':
' → logprob: -16.25050926208496

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009549325914122164
    2. 'print' → logprob: -8.625954627990723
    3. '    ' → logprob: -8.625954627990723
    4. '```' → logprob: -9.000954627990723
    5. '\n' → logprob: -9.250954627990723
    6. '    
' → logprob: -9.375954627990723
    7. ' ' → logprob: -9.875954627990723
    8. '\' → logprob: -10.250954627990723
    9. '1' → logprob: -10.500954627990723
    10. '0' → logprob: -10.875954627990723

Token 43: ' n' (ID: 297)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4583033323287964
    2. '   ' → logprob: -1.0833033323287964
    3. ' print' → logprob: -4.208303451538086
    4. 'for' → logprob: -5.083303451538086
    5. '0' → logprob: -5.833303451538086
    6. ' for' → logprob: -6.833303451538086
    7. '1' → logprob: -6.958303451538086
    8. 'sum' → logprob: -7.458303451538086
    9. '    ' → logprob: -7.583303451538086
    10. '2' → logprob: -8.208303451538086

Token 44: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.40723717212677
    2. '=' → logprob: -2.1572370529174805
    3. 'um' → logprob: -2.2822370529174805
    4. ' ' → logprob: -2.4072370529174805
    5. '   ' → logprob: -4.7822370529174805
    6. '/' → logprob: -6.1572370529174805
    7. ' /' → logprob: -6.2822370529174805
    8. ' //' → logprob: -6.2822370529174805
    9. '_' → logprob: -6.7822370529174805
    10. ',' → logprob: -6.7822370529174805

Token 45: ' gcd' (ID: 106918)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.10430141538381577
    2. ' gcd' → logprob: -3.1043014526367188
    3. 'int' → logprob: -4.104301452636719
    4. 'math' → logprob: -4.979301452636719
    5. ' int' → logprob: -5.354301452636719
    6. ' math' → logprob: -5.479301452636719
    7. ' ' → logprob: -5.729301452636719
    8. '2' → logprob: -5.729301452636719
    9. ' g' → logprob: -5.854301452636719
    10. 'min' → logprob: -5.854301452636719

Token 46: '
' (ID: 198)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.33032524585723877
    2. ' //' → logprob: -2.330325126647949
    3. '
' → logprob: -2.705325126647949
    4. ' **' → logprob: -3.205325126647949
    5. '//' → logprob: -4.080325126647949
    6. ' ' → logprob: -4.580325126647949
    7. '+' → logprob: -4.705325126647949
    8. '\n' → logprob: -4.830325126647949
    9. '.' → logprob: -5.080325126647949
    10. '```' → logprob: -5.830325126647949

Token 47: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.085907220840454
    2. '**' → logprob: -1.085907220840454
    3. '   ' → logprob: -1.960907220840454
    4. '-' → logprob: -3.710907220840454
    5. 'for' → logprob: -3.835907220840454
    6. 'while' → logprob: -3.835907220840454
    7. '```' → logprob: -4.210906982421875
    8. ''s' → logprob: -4.585906982421875
    9. '\n' → logprob: -4.585906982421875
    10. ' **' → logprob: -4.835906982421875

Token 48: ' cnt' (ID: 27340)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9101970195770264
    2. 'count' → logprob: -1.0351970195770264
    3. ' for' → logprob: -2.5351970195770264
    4. 'i' → logprob: -3.5351970195770264
    5. 'print' → logprob: -3.9101970195770264
    6. 'factor' → logprob: -4.0351972579956055
    7. 'cnt' (adapté à ' cnt') → logprob: -4.1601972579956055
    8. 'result' → logprob: -4.2851972579956055
    9. 'while' → logprob: -4.2851972579956055
    10. ' count' → logprob: -4.6601972579956055

Token 49: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08895080536603928
    2. '=' → logprob: -2.4639508724212646
    3. ' +=' → logprob: -12.713951110839844
    4. '   ' → logprob: -13.338951110839844
    5. ',' → logprob: -13.588951110839844
    6. '_' → logprob: -13.838951110839844
    7. ' ' → logprob: -13.838951110839844
    8. '  ' → logprob: -13.838951110839844
    9. 's' → logprob: -14.463951110839844
    10. ')' → logprob: -14.963951110839844

Token 50: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11393153667449951
    2. ' ' → logprob: -2.488931655883789
    3. '1' → logprob: -3.738931655883789
    4. '2' → logprob: -7.238931655883789
    5. ' n' → logprob: -9.113931655883789
    6. 'n' → logprob: -10.363931655883789
    7. ' sum' → logprob: -11.363931655883789
    8. 'sum' → logprob: -11.363931655883789
    9. ' math' → logprob: -12.738931655883789
    10. ' len' → logprob: -13.113931655883789

Token 51: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09939730167388916
    2. '1' → logprob: -2.4743971824645996
    3. '2' → logprob: -4.7243971824646
    4. ' ' → logprob: -6.7243971824646
    5. 'sum' → logprob: -9.099397659301758
    6. 'n' → logprob: -9.474397659301758
    7. '3' → logprob: -10.224397659301758
    8. 'len' → logprob: -10.224397659301758
    9. 'int' → logprob: -10.474397659301758
    10. 'math' → logprob: -11.974397659301758

Token 52: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09198137372732162
    2. 'while' → logprob: -3.4669814109802246
    3. '\n' → logprob: -4.466981410980225
    4. '<|end|>' → logprob: -4.591981410980225
    5. '   ' → logprob: -4.841981410980225
    6. ' 
' → logprob: -4.966981410980225
    7. 'for' → logprob: -5.466981410980225
    8. ' while' → logprob: -5.591981410980225
    9. '    
' → logprob: -5.716981410980225
    10. ':' → logprob: -6.341981410980225

Token 53: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.46280205249786377
    2. 'for' → logprob: -1.0878020524978638
    3. '   ' → logprob: -4.712801933288574
    4. 'while' → logprob: -4.712801933288574
    5. '    
' → logprob: -4.962801933288574
    6. ' for' → logprob: -5.837801933288574
    7. '\n' → logprob: -5.962801933288574
    8. ' 
' → logprob: -7.337801933288574
    9. '  
' → logprob: -7.587801933288574
    10. '' → logprob: -8.462801933288574

Token 54: ' m' (ID: 284)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008078558370471
    2. 'while' → logprob: -5.508078575134277
    3. '   ' → logprob: -6.133078575134277
    4. ' for' → logprob: -6.508078575134277
    5. 'i' → logprob: -8.133078575134277
    6. ' while' → logprob: -10.758078575134277
    7. ' i' → logprob: -12.383078575134277
    8. ' ' → logprob: -12.633078575134277
    9. 'import' → logprob: -13.008078575134277
    10. '2' → logprob: -13.383078575134277

Token 55: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2566644549369812
    2. '=' → logprob: -1.506664514541626
    3. ' ' → logprob: -5.631664276123047
    4. 'ath' → logprob: -7.006664276123047
    5. 'a' → logprob: -9.131664276123047
    6. '   ' → logprob: -10.756664276123047
    7. ' +=' → logprob: -10.756664276123047
    8. 'i' → logprob: -11.131664276123047
    9. '/' → logprob: -11.631664276123047
    10. '  ' → logprob: -12.006664276123047

Token 56: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.09209803491830826
    2. 'n' → logprob: -2.5920979976654053
    3. 'int' → logprob: -5.092098236083984
    4. ' ' → logprob: -5.467098236083984
    5. ' n' → logprob: -6.342098236083984
    6. '1' → logprob: -7.717098236083984
    7. '0' → logprob: -8.217098236083984
    8. ' int' → logprob: -8.467098236083984
    9. 'math' → logprob: -11.092098236083984
    10. '   ' → logprob: -11.467098236083984

Token 57: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04117903858423233
    2. 'n' → logprob: -3.4161789417266846
    3. 'int' → logprob: -4.916179180145264
    4. '1' → logprob: -9.791178703308105
    5. 'math' → logprob: -10.041178703308105
    6. ' ' → logprob: -10.916178703308105
    7. 'i' → logprob: -11.041178703308105
    8. '```' → logprob: -11.666178703308105
    9. '0' → logprob: -12.166178703308105
    10. '10' → logprob: -12.541178703308105

Token 58: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4919906556606293
    2. 'while' → logprob: -1.7419906854629517
    3. '<|end|>' → logprob: -1.8669906854629517
    4. ':' → logprob: -3.741990566253662
    5. ' while' → logprob: -4.116990566253662
    6. '<|end|>' → logprob: -5.116990566253662
    7. '```' → logprob: -6.616990566253662
    8. ' 
' → logprob: -6.616990566253662
    9. ':
' → logprob: -6.741990566253662
    10. '  
' → logprob: -6.866990566253662

Token 59: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7588571906089783
    2. ':' → logprob: -1.258857250213623
    3. 'while' → logprob: -2.008857250213623
    4. ':
' → logprob: -2.383857250213623
    5. ' while' → logprob: -4.633857250213623
    6. '```' → logprob: -5.758857250213623
    7. '  
' → logprob: -6.383857250213623
    8. '\n' → logprob: -6.758857250213623
    9. '<|end|>' → logprob: -6.758857250213623
    10. '   ' → logprob: -6.758857250213623

Token 60: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.2649393081665039
    2. ' while' → logprob: -1.639939308166504
    3. '
' → logprob: -3.764939308166504
    4. ':' → logprob: -4.639939308166504
    5. ' 
' → logprob: -6.389939308166504
    6. '   ' → logprob: -6.764939308166504
    7. '\n' → logprob: -7.139939308166504
    8. ':
' → logprob: -7.139939308166504
    9. '<|end|>' → logprob: -8.014939308166504
    10. '	while' → logprob: -8.514939308166504

Token 61: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.039115872234106064
    2. ' n' → logprob: -3.5391159057617188
    3. 'm' → logprob: -4.789115905761719
    4. 'n' → logprob: -6.914115905761719
    5. ' ' → logprob: -12.914115905761719
    6. ' (' → logprob: -13.039115905761719
    7. ' ' → logprob: -13.539115905761719
    8. '    ' → logprob: -14.289115905761719
    9. '(m' → logprob: -14.414115905761719
    10. '(n' → logprob: -14.539115905761719

Token 62: ' *' (ID: 425)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.3124738335609436
    2. ' *' → logprob: -1.4374737739562988
    3. '*' → logprob: -4.312473773956299
    4. '*m' → logprob: -4.687473773956299
    5. '<=' → logprob: -4.812473773956299
    6. '**' → logprob: -9.687474250793457
    7. ' ' → logprob: -10.812474250793457
    8. 'm' → logprob: -11.812474250793457
    9. ' **' → logprob: -12.687474250793457
    10. ' m' → logprob: -13.187474250793457

Token 63: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0001817297888919711
    2. '<=' → logprob: -9.125182151794434
    3. ' m' → logprob: -10.250182151794434
    4. '*m' → logprob: -10.375182151794434
    5. ' <=' → logprob: -12.500182151794434
    6. '*' → logprob: -13.250182151794434
    7. '2' → logprob: -15.125182151794434
    8. 'n' → logprob: -15.875182151794434
    9. '	m' → logprob: -16.000181198120117
    10. ' *' → logprob: -16.250181198120117

Token 64: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.20143458247184753
    2. '<=' → logprob: -1.70143461227417
    3. ' ' → logprob: -11.701434135437012
    4. ')<=' → logprob: -12.451434135437012
    5. '<' → logprob: -12.576434135437012
    6. '<|end|>' → logprob: -13.201434135437012
    7. ']<=' → logprob: -13.701434135437012
    8. ' <=",' → logprob: -14.701434135437012
    9. ' <' → logprob: -14.826434135437012
    10. '=' → logprob: -14.951434135437012

Token 65: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.002806656062602997
    2. ' n' → logprob: -5.877806663513184
    3. '	n' → logprob: -14.002806663513184
    4. '   ' → logprob: -14.502806663513184
    5. '```' → logprob: -16.127805709838867
    6. ' ' → logprob: -16.252805709838867
    7. '[n' → logprob: -16.627805709838867
    8. '(n' → logprob: -16.752805709838867
    9. ' ' → logprob: -17.252805709838867
    10. '    ' → logprob: -17.502805709838867

Token 66: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010861404240131378
    2. ':
' → logprob: -4.760861396789551
    3. ' and' → logprob: -6.135861396789551
    4. 'and' → logprob: -10.01086139678955
    5. ' :' → logprob: -10.51086139678955
    6. ':
' → logprob: -12.76086139678955
    7. ' :
' → logprob: -13.26086139678955
    8. ':

' → logprob: -13.51086139678955
    9. '   ' → logprob: -14.38586139678955
    10. ':n' → logprob: -14.76086139678955

Token 67: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.049356523901224136
    2. ':
' → logprob: -3.799356460571289
    3. '       ' → logprob: -4.049356460571289
    4. '<|end|>' → logprob: -5.049356460571289
    5. '   ' → logprob: -6.924356460571289
    6. '<|end|>' → logprob: -8.549356460571289
    7. '    ' → logprob: -8.924356460571289
    8. ' :' → logprob: -8.924356460571289
    9. '
' → logprob: -9.549356460571289
    10. ' ' → logprob: -9.674356460571289

Token 68: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8028868436813354
    2. ' ' → logprob: -1.6778868436813354
    3. 'if' (adapté à ' if') → logprob: -1.6778868436813354
    4. '<|end|>' → logprob: -2.302886962890625
    5. '       ' → logprob: -3.427886962890625
    6. ' 
' → logprob: -3.802886962890625
    7. '    ' → logprob: -4.677886962890625
    8. '   ' → logprob: -5.552886962890625
    9. '
' → logprob: -5.677886962890625
    10. '        ' → logprob: -6.177886962890625

Token 69: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.023245712742209435
    2. ' n' → logprob: -3.7732458114624023
    3. '	n' → logprob: -15.773245811462402
    4. ' ' → logprob: -17.523244857788086
    5. '(n' → logprob: -17.898244857788086
    6. '   ' → logprob: -18.148244857788086
    7. '%n' → logprob: -18.898244857788086
    8. '```' → logprob: -19.023244857788086
    9. ' н' → logprob: -19.398244857788086
    10. ')n' → logprob: -20.023244857788086

Token 70: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.3868933916091919
    2. '%' → logprob: -1.136893391609192
    3. '%m' → logprob: -11.386893272399902
    4. '%i' → logprob: -12.761893272399902
    5. ' ' → logprob: -12.886893272399902
    6. ' ' → logprob: -13.386893272399902
    7. '%e' → logprob: -14.011893272399902
    8. '%n' → logprob: -14.011893272399902
    9. '％' → logprob: -14.636893272399902
    10. '%d' → logprob: -14.636893272399902

Token 71: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.07889430224895477
    2. ' m' → logprob: -2.5788943767547607
    3. '	m' → logprob: -13.45389461517334
    4. '<|end|>' → logprob: -13.45389461517334
    5. ' ' → logprob: -13.57889461517334
    6. '   ' → logprob: -16.328893661499023
    7. '<|end|>' → logprob: -16.453893661499023
    8. '  ' → logprob: -16.828893661499023
    9. ' м' → logprob: -17.078893661499023
    10. '2' → logprob: -17.078893661499023

Token 72: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.16028128564357758
    2. '==' → logprob: -1.9102813005447388
    3. '=' → logprob: -10.28528118133545
    4. ' ' → logprob: -11.78528118133545
    5. ')==' → logprob: -12.16028118133545
    6. '===' → logprob: -12.78528118133545
    7. ' =' → logprob: -13.41028118133545
    8. '0' → logprob: -13.78528118133545
    9. ']==' → logprob: -14.03528118133545
    10. ':' → logprob: -14.03528118133545

Token 73: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.061967797577381134
    2. ' ' → logprob: -2.8119678497314453
    3. '<|end|>' → logprob: -16.936967849731445
    4. '  ' → logprob: -17.186967849731445
    5. '   ' → logprob: -17.436967849731445
    6. '```' → logprob: -17.686967849731445
    7. ' ' → logprob: -18.061967849731445
    8. '۰' → logprob: -18.311967849731445
    9. '    ' → logprob: -19.374467849731445
    10. ')' → logprob: -19.374467849731445

Token 74: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '۰' → logprob: -18.500036239624023
    4. '   ' → logprob: -19.375036239624023
    5. '٠' → logprob: -20.375036239624023
    6. '  ' → logprob: -20.500036239624023
    7. '<|end|>' → logprob: -20.500036239624023
    8. '00' → logprob: -20.875036239624023
    9. '०' → logprob: -21.000036239624023
    10. '০' → logprob: -21.125036239624023

Token 75: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006741777528077364
    2. ':
' → logprob: -5.006742000579834
    3. '       ' → logprob: -11.506741523742676
    4. '           ' → logprob: -12.256741523742676
    5. '):' → logprob: -12.756741523742676
    6. ' :' → logprob: -13.131741523742676
    7. ':

' → logprob: -13.256741523742676
    8. ' and' → logprob: -13.381741523742676
    9. ':
' → logprob: -14.381741523742676
    10. '<|end|>' → logprob: -14.381741523742676

Token 76: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10286011546850204
    2. 'cnt' → logprob: -2.85286021232605
    3. '       ' → logprob: -3.60286021232605
    4. ' cnt' → logprob: -5.352859973907471
    5. '
' → logprob: -5.852859973907471
    6. 'count' → logprob: -5.977859973907471
    7. '```' → logprob: -6.977859973907471
    8. '        
' → logprob: -7.977859973907471
    9. '	cnt' → logprob: -8.852860450744629
    10. '	       ' → logprob: -8.977860450744629

Token 77: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.00030817187507636845
    2. ' cnt' → logprob: -8.1253080368042
    3. '	cnt' → logprob: -12.0003080368042
    4. 'n' → logprob: -12.8753080368042
    5. '
' → logprob: -13.2503080368042
    6. 'count' → logprob: -14.2503080368042
    7. '   ' → logprob: -15.0003080368042
    8. '1' → logprob: -15.3753080368042
    9. '_cnt' → logprob: -15.7503080368042
    10. '[cnt' → logprob: -16.000308990478516

Token 78: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.25198179483413696
    2. '+=' → logprob: -1.5019817352294922
    3. '+' → logprob: -10.251981735229492
    4. ' ' → logprob: -11.876981735229492
    5. '=' → logprob: -12.126981735229492
    6. ' =' → logprob: -13.501981735229492
    7. ']+=' → logprob: -13.501981735229492
    8. '1' → logprob: -14.626981735229492
    9. '+=(' → logprob: -14.626981735229492
    10. '   ' → logprob: -15.251981735229492

Token 79: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020354038861114532
    2. ' ' → logprob: -8.500203132629395
    3. '<|end|>' → logprob: -18.75020408630371
    4. '   ' → logprob: -19.12520408630371
    5. '2' → logprob: -19.31270408630371
    6. '１' → logprob: -19.43770408630371
    7. '```' → logprob: -20.18770408630371
    8. '0' → logprob: -20.25020408630371
    9. '+' → logprob: -20.31270408630371
    10. '  ' → logprob: -20.43770408630371

Token 80: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. '+' → logprob: -18.3750057220459
    4. '   ' → logprob: -18.4375057220459
    5. '```' → logprob: -18.5000057220459
    6. '１' → logprob: -18.5625057220459
    7. '<|end|>' → logprob: -18.5625057220459
    8. '۱' → logprob: -19.5000057220459
    9. '2' → logprob: -19.5000057220459
    10. '!' → logprob: -19.6875057220459

Token 81: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04620739072561264
    2. ' 
' → logprob: -3.9212074279785156
    3. ' ' → logprob: -4.921207427978516
    4. '<|end|>' → logprob: -4.921207427978516
    5. '\n' → logprob: -6.171207427978516
    6. ' while' → logprob: -6.796207427978516
    7. '1' → logprob: -6.921207427978516
    8. '  
' → logprob: -7.046207427978516
    9. 'while' → logprob: -7.046207427978516
    10. '```' → logprob: -7.171207427978516

Token 82: '           ' (ID: 352)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.7197008728981018
    2. '       ' → logprob: -1.219700813293457
    3. '           ' → logprob: -2.219700813293457
    4. ' while' → logprob: -2.594700813293457
    5. 'n' → logprob: -3.469700813293457
    6. '```' → logprob: -6.469700813293457
    7. '   ' → logprob: -7.219700813293457
    8. '
' → logprob: -8.219700813293457
    9. '        
' → logprob: -8.844700813293457
    10. ' ' → logprob: -8.969700813293457

Token 83: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.10097506642341614
    2. 'n' → logprob: -2.3509750366210938
    3. ' while' → logprob: -7.225975036621094
    4. 'm' → logprob: -10.350975036621094
    5. '	while' → logprob: -12.975975036621094
    6. '       ' → logprob: -13.350975036621094
    7. 'While' → logprob: -13.600975036621094
    8. '   ' → logprob: -13.725975036621094
    9. ' n' → logprob: -13.850975036621094
    10. '```' → logprob: -14.600975036621094

Token 84: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.006715728435665369
    2. 'n' → logprob: -5.006715774536133
    3. '(n' → logprob: -16.131715774536133
    4. '	n' → logprob: -16.381715774536133
    5. ' ' → logprob: -16.756715774536133
    6. ' ' → logprob: -16.881715774536133
    7. ' (' → logprob: -18.506715774536133
    8. ' н' → logprob: -18.881715774536133
    9. ')n' → logprob: -19.256715774536133
    10. '   ' → logprob: -20.006715774536133

Token 85: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.07901382446289062
    2. '%' → logprob: -2.5790138244628906
    3. '%m' → logprob: -9.07901382446289
    4. '%d' → logprob: -12.45401382446289
    5. '%n' → logprob: -12.82901382446289
    6. '%s' → logprob: -13.70401382446289
    7. '%x' → logprob: -14.45401382446289
    8. '%e' → logprob: -14.57901382446289
    9. '%i' → logprob: -14.82901382446289
    10. ' ' → logprob: -15.20401382446289

Token 86: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.20141568779945374
    2. ' m' → logprob: -1.7014156579971313
    3. ' ' → logprob: -13.826416015625
    4. '	m' → logprob: -13.826416015625
    5. ' м' → logprob: -15.576416015625
    6. '<|end|>' → logprob: -16.326416015625
    7. '   ' → logprob: -17.076416015625
    8. '    ' → logprob: -17.576416015625
    9. 'м' → logprob: -17.576416015625
    10. '2' → logprob: -17.951416015625

Token 87: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.16026870906352997
    2. ' ==' → logprob: -1.9102686643600464
    3. '0' → logprob: -10.410268783569336
    4. '=' → logprob: -12.660268783569336
    5. ')==' → logprob: -12.660268783569336
    6. ' ' → logprob: -12.910268783569336
    7. '===' → logprob: -13.035268783569336
    8. '```' → logprob: -13.785268783569336
    9. '==
' → logprob: -13.910268783569336
    10. ']==' → logprob: -14.410268783569336

Token 88: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001234428636962548
    2. ' ' → logprob: -9.000123023986816
    3. '   ' → logprob: -17.875123977661133
    4. '```' → logprob: -18.750123977661133
    5. '00' → logprob: -20.375123977661133
    6. ' ' → logprob: -20.500123977661133
    7. '  ' → logprob: -20.750123977661133
    8. '       ' → logprob: -21.125123977661133
    9. '=' → logprob: -21.125123977661133
    10. '۰' → logprob: -21.375123977661133

Token 89: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -19.125019073486328
    4. '```' → logprob: -19.375019073486328
    5. '۰' → logprob: -19.750019073486328
    6. '  ' → logprob: -20.750019073486328
    7. 'm' → logprob: -21.125019073486328
    8. '00' → logprob: -21.437519073486328
    9. '000' → logprob: -21.562519073486328
    10. '       ' → logprob: -21.875019073486328

Token 90: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6420483589172363
    2. ':' → logprob: -0.7670483589172363
    3. '               ' → logprob: -4.767048358917236
    4. ':n' → logprob: -7.767048358917236
    5. 'n' → logprob: -8.642047882080078
    6. ':

' → logprob: -9.392047882080078
    7. ',' → logprob: -9.892047882080078
    8. '           ' → logprob: -10.267047882080078
    9. ':
' → logprob: -10.392047882080078
    10. '       ' → logprob: -10.642047882080078

Token 91: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004914466291666031
    2. '           ' → logprob: -5.754914283752441
    3. 'n' → logprob: -6.504914283752441
    4. ' n' → logprob: -8.879914283752441
    5. '	           ' → logprob: -10.879914283752441
    6. '		       ' → logprob: -11.004914283752441
    7. '       ' → logprob: -11.129914283752441
    8. '	       ' → logprob: -11.504914283752441
    9. '```' → logprob: -11.504914283752441
    10. '                   ' → logprob: -12.004914283752441

Token 92: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.09114378690719604
    2. ' n' → logprob: -2.466143846511841
    3. '               ' → logprob: -6.341143608093262
    4. '           ' → logprob: -8.466143608093262
    5. '                   ' → logprob: -8.591143608093262
    6. '   ' → logprob: -10.591143608093262
    7. '	n' → logprob: -11.966143608093262
    8. ' ' → logprob: -12.591143608093262
    9. '```' → logprob: -12.591143608093262
    10. '       ' → logprob: -12.966143608093262

Token 93: ' //' (ID: 602)
  Prédit: '//='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//=' → logprob: -0.023803573101758957
    2. ' //' → logprob: -3.773803472518921
    3. '=' → logprob: -8.3988037109375
    4. '/=' → logprob: -8.6488037109375
    5. '//' → logprob: -9.0238037109375
    6. ' /=' → logprob: -10.2738037109375
    7. ' =' → logprob: -13.7738037109375
    8. '/' → logprob: -14.2738037109375
    9. ' ' → logprob: -15.1488037109375
    10. ' ' → logprob: -16.1488037109375

Token 94: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.5690089639974758e-05
    2. '=m' → logprob: -11.125015258789062
    3. '=n' → logprob: -14.250015258789062
    4. '=}' → logprob: -16.875015258789062
    5. 'm' → logprob: -17.125015258789062
    6. '=

' → logprob: -17.875015258789062
    7. '=_' → logprob: -18.125015258789062
    8. '=.' → logprob: -18.250015258789062
    9. '=int' → logprob: -18.375015258789062
    10. '=
' → logprob: -18.625015258789062

Token 95: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0005530327325686812
    2. ' m' → logprob: -7.500553131103516
    3. '	m' → logprob: -18.125553131103516
    4. ' ' → logprob: -19.500553131103516
    5. '   ' → logprob: -20.125553131103516
    6. '2' → logprob: -21.000553131103516
    7. 'м' → logprob: -21.125553131103516
    8. ' м' → logprob: -21.750553131103516
    9. '  ' → logprob: -22.750553131103516
    10. 'ｍ' → logprob: -23.250553131103516

Token 96: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17318445444107056
    2. '           ' → logprob: -2.798184394836426
    3. 'm' → logprob: -3.048184394836426
    4. '   ' → logprob: -3.423184394836426
    5. '               ' → logprob: -5.423184394836426
    6. '*' → logprob: -5.673184394836426
    7. '+' → logprob: -6.173184394836426
    8. ' m' → logprob: -6.548184394836426
    9. '```' → logprob: -6.798184394836426
    10. ' ' → logprob: -7.048184394836426

Token 97: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014711800031363964
    2. '           ' → logprob: -6.626471042633057
    3. '   ' → logprob: -9.751471519470215
    4. '```' → logprob: -9.876471519470215
    5. '	' → logprob: -10.751471519470215
    6. 'else' → logprob: -12.626471519470215
    7. '               ' → logprob: -13.001471519470215
    8. 'm' → logprob: -13.376471519470215
    9. '	   ' → logprob: -13.501471519470215
    10. '``' → logprob: -13.876471519470215

Token 98: ' m' (ID: 284)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11790253967046738
    2. '   ' → logprob: -2.3679025173187256
    3. 'm' (adapté à ' m') → logprob: -4.242902755737305
    4. 'else' → logprob: -6.242902755737305
    5. ' else' → logprob: -7.867902755737305
    6. ' m' → logprob: -8.242902755737305
    7. '```' → logprob: -8.367902755737305
    8. '           ' → logprob: -8.367902755737305
    9. 's' → logprob: -10.992902755737305
    10. ' ' → logprob: -10.992902755737305

Token 99: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.06361574679613113
    2. ' +=' → logprob: -2.8136157989501953
    3. '+' → logprob: -6.438615798950195
    4. '=' → logprob: -10.063615798950195
    5. '++' → logprob: -13.813615798950195
    6. ' +' → logprob: -13.938615798950195
    7. ']+=' → logprob: -14.063615798950195
    8. '+='' → logprob: -14.188615798950195
    9. '```' → logprob: -14.438615798950195
    10. ' ' → logprob: -14.688615798950195

Token 100: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.47407999634742737
    2. ' m' → logprob: -0.974079966545105
    3. '	m' → logprob: -13.599080085754395
    4. '+' → logprob: -13.974080085754395
    5. '3' → logprob: -15.474080085754395
    6. ' ' → logprob: -15.724080085754395
    7. 'int' → logprob: -16.099079132080078
    8. '(m' → logprob: -16.349079132080078
    9. '+m' → logprob: -16.474079132080078
    10. ' м' → logprob: -16.474079132080078

Token 101: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.007623899728059769
    2. ' +' → logprob: -4.882623672485352
    3. ' ' → logprob: -11.507623672485352
    4. '1' → logprob: -12.132623672485352
    5. '+=' → logprob: -14.382623672485352
    6. '+
' → logprob: -14.882623672485352
    7. '2' → logprob: -15.132623672485352
    8. '++' → logprob: -15.257623672485352
    9. '+m' → logprob: -15.257623672485352
    10. ' plus' → logprob: -15.507623672485352

Token 102: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '   ' → logprob: -19.500085830688477
    4. '2' → logprob: -21.000085830688477
    5. '  ' → logprob: -21.125085830688477
    6. '```' → logprob: -21.125085830688477
    7. ' ' → logprob: -21.750085830688477
    8. '１' → logprob: -22.312585830688477
    9. '(' → logprob: -22.500085830688477
    10. '۱' → logprob: -22.875085830688477

Token 103: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '```' → logprob: -20.125001907348633
    4. '   ' → logprob: -20.687501907348633
    5. '１' → logprob: -20.750001907348633
    6. '2' → logprob: -20.750001907348633
    7. '  ' → logprob: -20.937501907348633
    8. '۱' → logprob: -21.375001907348633
    9. '+' → logprob: -21.500001907348633
    10. '<|end|>' → logprob: -21.812501907348633

Token 104: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.30010363459587097
    2. 'print' → logprob: -1.5501036643981934
    3. '
' → logprob: -3.6751036643981934
    4. '```' → logprob: -4.425103664398193
    5. '   ' → logprob: -5.050103664398193
    6. 'cnt' → logprob: -6.050103664398193
    7. '``' → logprob: -7.300103664398193
    8. ' if' → logprob: -8.800103187561035
    9. '    
' → logprob: -9.800103187561035
    10. '
' → logprob: -11.300103187561035

Token 105: ' m' (ID: 284)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.0550135113298893
    2. 'm' → logprob: -3.180013418197632
    3. ' cnt' → logprob: -5.055013656616211
    4. 'n' → logprob: -5.430013656616211
    5. ' m' → logprob: -7.055013656616211
    6. '(cnt' → logprob: -9.180013656616211
    7. 'not' → logprob: -9.555013656616211
    8. ' n' → logprob: -9.805013656616211
    9. '1' → logprob: -10.430013656616211
    10. ' not' → logprob: -11.555013656616211

Token 106: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.00024215869780164212
    2. ' ==' → logprob: -8.375242233276367
    3. '===' → logprob: -12.125242233276367
    4. '=' → logprob: -12.750242233276367
    5. '!=' → logprob: -14.000242233276367
    6. '==
' → logprob: -14.000242233276367
    7. '>' → logprob: -15.000242233276367
    8. '%' → logprob: -15.500242233276367
    9. '<=' → logprob: -15.500242233276367
    10. '2' → logprob: -15.625242233276367

Token 107: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '1' → logprob: -18.6250057220459
    4. '  ' → logprob: -20.3750057220459
    5. '3' → logprob: -20.6250057220459
    6. '   ' → logprob: -20.8750057220459
    7. '۲' → logprob: -22.1250057220459
    8. '２' → logprob: -22.5000057220459
    9. '    ' → logprob: -23.1250057220459
    10. '२' → logprob: -23.3750057220459

Token 108: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '3' → logprob: -19.5
    4. '  ' → logprob: -21.25
    5. '1' → logprob: -21.375
    6. '7' → logprob: -22.625
    7. '２' → logprob: -22.625
    8. '   ' → logprob: -22.75
    9. '۲' → logprob: -23.0
    10. '```' → logprob: -24.125

Token 109: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.5759528875350952
    2. 'else' → logprob: -0.8259528875350952
    3. '2' → logprob: -11.575952529907227
    4. '3' → logprob: -13.325952529907227
    5. '	else' → logprob: -14.450952529907227
    6. '6' → logprob: -14.575952529907227
    7. '1' → logprob: -14.950952529907227
    8. ' ' → logprob: -15.325952529907227
    9. '```' → logprob: -15.450952529907227
    10. '5' → logprob: -15.575952529907227

Token 110: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.020562907680869102
    2. ' m' → logprob: -3.8955628871917725
    3. '2' → logprob: -12.020563125610352
    4. '3' → logprob: -12.145563125610352
    5. '	m' → logprob: -12.395563125610352
    6. '+' → logprob: -12.645563125610352
    7. '+m' → logprob: -14.020563125610352
    8. '4' → logprob: -14.520563125610352
    9. '   ' → logprob: -15.520563125610352
    10. ' ' → logprob: -15.520563125610352

Token 111: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03805319964885712
    2. ' +' → logprob: -3.288053274154663
    3. '2' → logprob: -11.413053512573242
    4. '+=' → logprob: -15.413053512573242
    5. '+m' → logprob: -15.913053512573242
    6. '3' → logprob: -16.663053512573242
    7. ' ' → logprob: -16.913053512573242
    8. '```' → logprob: -17.288053512573242
    9. 'm' → logprob: -17.413053512573242
    10. '()+' → logprob: -17.538053512573242

Token 112: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.375001907348633
    3. '1' → logprob: -14.500001907348633
    4. '```' → logprob: -16.250001907348633
    5. '<|end|>' → logprob: -17.375001907348633
    6. '6' → logprob: -18.250001907348633
    7. '0' → logprob: -18.812501907348633
    8. '{' → logprob: -18.937501907348633
    9. '   ' → logprob: -19.312501907348633
    10. '+' → logprob: -19.562501907348633

Token 113: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0280383548888494e-06
    2. '1' → logprob: -14.375000953674316
    3. ' ' → logprob: -15.125000953674316
    4. '```' → logprob: -15.875000953674316
    5. '{' → logprob: -17.875001907348633
    6. '<|end|>' → logprob: -18.000001907348633
    7. '6' → logprob: -18.375001907348633
    8. '२' → logprob: -19.000001907348633
    9. '۲' → logprob: -19.062501907348633
    10. '>' → logprob: -19.125001907348633

Token 114: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0325244776904583
    2. 'print' → logprob: -3.657524585723877
    3. '   ' → logprob: -5.407524585723877
    4. '```' → logprob: -7.407524585723877
    5. '
' → logprob: -7.532524585723877
    6. 'cnt' → logprob: -8.032524108886719
    7. ' if' → logprob: -9.157524108886719
    8. '    
' → logprob: -9.907524108886719
    9. '+
' → logprob: -10.157524108886719
    10. '``' → logprob: -10.282524108886719

Token 115: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04886610433459282
    2. '   ' → logprob: -3.673866033554077
    3. '
' → logprob: -4.173866271972656
    4. 'print' → logprob: -5.548866271972656
    5. '```' → logprob: -5.923866271972656
    6. ' if' → logprob: -8.923866271972656
    7. '    
' → logprob: -9.048866271972656
    8. '``' → logprob: -9.798866271972656
    9. '  
' → logprob: -11.673866271972656
    10. 'cnt' → logprob: -11.673866271972656

Token 116: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.01380956545472145
    2. 'cnt' → logprob: -4.513809680938721
    3. 'print' → logprob: -6.013809680938721
    4. '
' → logprob: -9.138809204101562
    5. '   ' → logprob: -9.263809204101562
    6. ' if' → logprob: -9.763809204101562
    7. '```' → logprob: -10.013809204101562
    8. '``' → logprob: -12.138809204101562
    9. '    
' → logprob: -13.888809204101562
    10. ' cnt' → logprob: -14.763809204101562

Token 117: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5231338739395142
    2. 'n' → logprob: -0.8981338739395142
    3. '(n' → logprob: -12.523134231567383
    4. '	n' → logprob: -13.148134231567383
    5. ' ' → logprob: -13.273134231567383
    6. ' ' → logprob: -14.273134231567383
    7. '   ' → logprob: -14.648134231567383
    8. 'g' → logprob: -15.273134231567383
    9. '```' → logprob: -15.335634231567383
    10. 'cnt' → logprob: -15.398134231567383

Token 118: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0024862384889274836
    2. ' >' → logprob: -6.002486228942871
    3. '!=' → logprob: -11.877486228942871
    4. '&gt' → logprob: -14.002486228942871
    5. '">' → logprob: -14.377486228942871
    6. ' ' → logprob: -14.752486228942871
    7. '1' → logprob: -15.002486228942871
    8. '   ' → logprob: -15.002486228942871
    9. ' !=' → logprob: -15.002486228942871
    10. '...' → logprob: -15.502486228942871

Token 119: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006265374249778688
    2. ' ' → logprob: -7.375626564025879
    3. '   ' → logprob: -18.625625610351562
    4. '>' → logprob: -19.000625610351562
    5. '```' → logprob: -19.625625610351562
    6. '１' → logprob: -20.000625610351562
    7. '  ' → logprob: -20.125625610351562
    8. '2' → logprob: -20.250625610351562
    9. 'import' → logprob: -20.625625610351562
    10. ' ' → logprob: -20.688125610351562

Token 120: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -16.5000057220459
    4. '```' → logprob: -17.5000057220459
    5. '<|end|>' → logprob: -18.7500057220459
    6. '  ' → logprob: -18.7500057220459
    7. '۱' → logprob: -19.0000057220459
    8. '１' → logprob: -19.3750057220459
    9. '
' → logprob: -19.6250057220459
    10. '>' → logprob: -19.6250057220459

Token 121: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6937151551246643
    2. ':
' → logprob: -0.6937151551246643
    3. '       ' → logprob: -7.5687150955200195
    4. '   ' → logprob: -9.94371509552002
    5. ':
' → logprob: -12.94371509552002
    6. ':

' → logprob: -14.56871509552002
    7. '):
' → logprob: -15.19371509552002
    8. ' :
' → logprob: -16.818716049194336
    9. ':\' → logprob: -16.943716049194336
    10. 'cnt' → logprob: -16.943716049194336

Token 122: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11582562327384949
    2. '   ' → logprob: -2.365825653076172
    3. ' cnt' → logprob: -4.615825653076172
    4. 'cnt' → logprob: -5.240825653076172
    5. '	cnt' → logprob: -8.365825653076172
    6. '
' → logprob: -10.990825653076172
    7. '[cnt' → logprob: -11.365825653076172
    8. '```' → logprob: -11.490825653076172
    9. '    ' → logprob: -11.990825653076172
    10. ' ' → logprob: -12.115825653076172

Token 123: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.03972316160798073
    2. ' cnt' → logprob: -3.2897231578826904
    3. '       ' → logprob: -6.6647233963012695
    4. '	cnt' → logprob: -8.28972339630127
    5. '   ' → logprob: -9.41472339630127
    6. '
' → logprob: -10.03972339630127
    7. 'count' → logprob: -11.28972339630127
    8. '[cnt' → logprob: -11.91472339630127
    9. '_cnt' → logprob: -12.16472339630127
    10. '(cnt' → logprob: -13.28972339630127

Token 124: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.01419888436794281
    2. ' +=' → logprob: -4.2641987800598145
    3. '=' → logprob: -10.264199256896973
    4. ']+=' → logprob: -15.264199256896973
    5. '+' → logprob: -16.139198303222656
    6. '   ' → logprob: -16.639198303222656
    7. '```' → logprob: -17.139198303222656
    8. ' =' → logprob: -17.139198303222656
    9. '+="' → logprob: -19.139198303222656
    10. '+='' → logprob: -19.264198303222656

Token 125: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -21.125001907348633
    4. '```' → logprob: -22.000001907348633
    5. '１' → logprob: -22.875001907348633
    6. '+' → logprob: -23.500001907348633
    7. '۱' → logprob: -23.750001907348633
    8. '0' → logprob: -24.062501907348633
    9. ' ' → logprob: -24.125001907348633
    10. '  ' → logprob: -24.187501907348633

Token 126: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '```' → logprob: -21.625
    4. '   ' → logprob: -21.875
    5. '１' → logprob: -22.75
    6. '0' → logprob: -23.375
    7. '۱' → logprob: -23.5
    8. '১' → logprob: -24.375
    9. '+' → logprob: -24.4375
    10. '  ' → logprob: -24.4375

Token 127: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24714508652687073
    2. 'print' → logprob: -1.9971450567245483
    3. '   ' → logprob: -2.497145175933838
    4. '```' → logprob: -7.372145175933838
    5. ' print' → logprob: -8.62214469909668
    6. '    
' → logprob: -9.49714469909668
    7. '
' → logprob: -10.87214469909668
    8. '``' → logprob: -11.87214469909668
    9. '

' → logprob: -12.24714469909668
    10. '\n' → logprob: -12.24714469909668

Token 128: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0012844024458900094
    2. '   ' → logprob: -6.751284599304199
    3. '```' → logprob: -9.2512845993042
    4. ' print' → logprob: -11.0012845993042
    5. '``' → logprob: -14.1262845993042
    6. '
' → logprob: -14.6262845993042
    7. '    
' → logprob: -15.6262845993042
    8. '	print' → logprob: -16.376283645629883
    9. '  
' → logprob: -17.751283645629883
    10. '.print' → logprob: -18.501283645629883

Token 129: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: 0.0
    2. ' print' → logprob: -17.25
    3. '```' → logprob: -18.875
    4. '   ' → logprob: -19.0
    5. '``' → logprob: -23.25
    6. '
' → logprob: -23.375
    7. '	print' → logprob: -23.75
    8. '    
' → logprob: -24.25
    9. 'printf' → logprob: -25.125
    10. '  
' → logprob: -25.375

Token 130: '(cnt' (ID: 102125)
  Prédit: '(cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.0002128382766386494
    2. '(' → logprob: -8.500212669372559
    3. 'cnt' → logprob: -11.625212669372559
    4. '[cnt' → logprob: -15.750212669372559
    5. '(
' → logprob: -16.250213623046875
    6. '(count' → logprob: -16.375213623046875
    7. ' (' → logprob: -17.875213623046875
    8. '((' → logprob: -17.875213623046875
    9. ' cnt' → logprob: -18.000213623046875
    10. '(len' → logprob: -18.000213623046875

Token 131: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ' )' → logprob: -14.750000953674316
    3. ')
' → logprob: -15.125000953674316
    4. ')`' → logprob: -16.125
    5. '')' → logprob: -18.25
    6. '))' → logprob: -18.375
    7. ')#' → logprob: -18.625
    8. '`)' → logprob: -19.25
    9. ')}' → logprob: -19.25
    10. '```' → logprob: -19.375

Token 132: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00320123927667737
    2. ' ' → logprob: -5.753201007843018
    3. '0' → logprob: -10.753201484680176
    4. '2' → logprob: -13.253201484680176
    5. ')' → logprob: -16.25320053100586
    6. '   ' → logprob: -16.75320053100586
    7. '(' → logprob: -17.00320053100586
    8. '
' → logprob: -17.44070053100586
    9. ' (' → logprob: -17.75320053100586
    10. ' ' → logprob: -18.06570053100586

Token 133: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.9795445849886164e-05
    2. ' ' → logprob: -9.750060081481934
    3. '2' → logprob: -13.875060081481934
    4. '   ' → logprob: -15.000060081481934
    5. '0' → logprob: -16.375059127807617
    6. '  ' → logprob: -17.125059127807617
    7. '
' → logprob: -17.250059127807617
    8. '+' → logprob: -17.875059127807617
    9. '	' → logprob: -18.812559127807617
    10. '!' → logprob: -18.937559127807617

Token 134: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -15.875
    3. ')
' → logprob: -16.375
    4. ')`' → logprob: -17.75
    5. '))' → logprob: -19.75
    6. '')' → logprob: -20.375
    7. ')#' → logprob: -20.625
    8. '`)' → logprob: -20.75
    9. '）' → logprob: -21.25
    10. '```' → logprob: -21.375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 132
Tokens correctement prédits (1ère position, stricte): 52
Tokens correctement prédits (1ère position, avec adaptation): 60
Tokens correctement prédits (top 10): 121
Précision stricte (1ère position): 39.39%
Précision adaptée (1ère position): 45.45%
Précision (top 10): 91.67%
================================================================================
