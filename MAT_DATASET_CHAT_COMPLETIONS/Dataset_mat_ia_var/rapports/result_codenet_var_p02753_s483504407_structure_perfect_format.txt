================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:23:22
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
S = input()
L = [0, 0]
for i in range(3):
    if S[i] == "A":
        L[0] += 1
    else:
        L[1] += 1
if max(L) == 3:
    print("No")
else:
    print("Yes")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'S' (ID: 50)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' input' (ID: 3422)
  → Token d'amorce (pas de prédiction)

Token 3: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010343709029257298
    2. '('' → logprob: -5.760343551635742
    3. ''' → logprob: -5.885343551635742
    4. '()' → logprob: -6.010343551635742
    5. '"' → logprob: -6.885343551635742
    6. '(
' → logprob: -8.385343551635742
    7. '`' → logprob: -8.385343551635742
    8. '("("' → logprob: -9.010343551635742
    9. '```' → logprob: -9.635343551635742
    10. '[' → logprob: -10.260343551635742

Token 4: 'L' (ID: 43)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.02454993687570095
    2. '[' → logprob: -4.024549961090088
    3. '[::-' → logprob: -6.149549961090088
    4. '+' → logprob: -6.524549961090088
    5. '.strip' → logprob: -7.649549961090088
    6. '.lower' → logprob: -7.899549961090088
    7. '#' → logprob: -8.02454948425293
    8. '.count' → logprob: -8.14954948425293
    9. '.upper' → logprob: -8.52454948425293
    10. '_' → logprob: -8.64954948425293

Token 5: ' =' (ID: 314)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.475107342004776
    2. ' =' → logprob: -1.7251073122024536
    3. 'EN' → logprob: -2.850107431411743
    4. '=' → logprob: -3.225107431411743
    5. '(' → logprob: -3.475107431411743
    6. 'e' → logprob: -3.600107431411743
    7. 'E' → logprob: -4.475107192993164
    8. '()' → logprob: -4.475107192993164
    9. '(en' → logprob: -4.475107192993164
    10. '.' → logprob: -6.225107192993164

Token 6: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.8445225358009338
    2. 'len' → logprob: -0.9695225358009338
    3. '[]' → logprob: -1.844522476196289
    4. '[len' → logprob: -3.719522476196289
    5. ' list' → logprob: -5.719522476196289
    6. ' len' → logprob: -6.469522476196289
    7. ' []' → logprob: -6.719522476196289
    8. '[' → logprob: -7.094522476196289
    9. 'int' → logprob: -7.594522476196289
    10. 'S' → logprob: -7.844522476196289

Token 7: '0' (ID: 15)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7042139172554016
    2. 'c' → logprob: -1.4542138576507568
    3. 'S' → logprob: -2.454213857650757
    4. 'input' → logprob: -2.454213857650757
    5. ']' → logprob: -3.704213857650757
    6. 'int' → logprob: -4.079214096069336
    7. 'i' → logprob: -4.204214096069336
    8. 'ord' → logprob: -4.454214096069336
    9. 'ch' → logprob: -4.829214096069336
    10. '0' → logprob: -4.954214096069336

Token 8: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0019032935379073024
    2. ',' → logprob: -6.376903057098389
    3. ' ]' → logprob: -8.751903533935547
    4. ')' → logprob: -10.626903533935547
    5. ' for' → logprob: -12.001903533935547
    6. ']*' → logprob: -12.376903533935547
    7. '']' → logprob: -13.876903533935547
    8. ')]' → logprob: -14.001903533935547
    9. ']+' → logprob: -14.126903533935547
    10. 'for' → logprob: -14.251903533935547

Token 9: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.23944517970085144
    2. ' ' → logprob: -1.6144452095031738
    3. '1' → logprob: -4.489445209503174
    4. 'S' → logprob: -6.864445209503174
    5. ']' → logprob: -7.114445209503174
    6. ' S' → logprob: -7.489445209503174
    7. 'int' → logprob: -9.614444732666016
    8. ' int' → logprob: -9.989444732666016
    9. 'len' → logprob: -10.239444732666016
    10. ' ]' → logprob: -10.239444732666016

Token 10: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007482041604816914
    2. '1' → logprob: -5.007482051849365
    3. ' ' → logprob: -7.882482051849365
    4. 'S' → logprob: -8.507481575012207
    5. 'len' → logprob: -9.507481575012207
    6. ']' → logprob: -10.007481575012207
    7. 'int' → logprob: -10.132481575012207
    8. '2' → logprob: -12.632481575012207
    9. '-' → logprob: -12.757481575012207
    10. '9' → logprob: -13.132481575012207

Token 11: ']
' (ID: 1592)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00785586517304182
    2. ']' → logprob: -4.8828558921813965
    3. ' ,' → logprob: -8.507855415344238
    4. ' ]' → logprob: -10.632855415344238
    5. ')' → logprob: -11.382855415344238
    6. '0' → logprob: -12.382855415344238
    7. '1' → logprob: -13.257855415344238
    8. ')]' → logprob: -13.507855415344238
    9. ' ' → logprob: -14.007855415344238
    10. '```' → logprob: -14.132855415344238

Token 12: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0013766606571152806
    2. ' for' → logprob: -6.876376628875732
    3. 'f' → logprob: -8.50137710571289
    4. 'i' → logprob: -9.37637710571289
    5. 'if' → logprob: -11.00137710571289
    6. 'd' → logprob: -11.37637710571289
    7. 'F' → logprob: -12.62637710571289
    8. 'a' → logprob: -12.75137710571289
    9. 's' → logprob: -12.75137710571289
    10. '=' → logprob: -13.25137710571289

Token 13: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.12559255957603455
    2. ' c' → logprob: -3.0005924701690674
    3. 'i' → logprob: -3.2505924701690674
    4. ' ' → logprob: -3.7505924701690674
    5. 'c' → logprob: -5.5005927085876465
    6. '_' → logprob: -7.0005927085876465
    7. ' s' → logprob: -7.7505927085876465
    8. 's' → logprob: -8.250592231750488
    9. ' _' → logprob: -8.500592231750488
    10. ' x' → logprob: -10.375592231750488

Token 14: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2144239991903305
    2. 'in' → logprob: -2.339423894882202
    3. ' ' → logprob: -2.464423894882202
    4. 'n' → logprob: -4.714424133300781
    5. ' n' → logprob: -6.214424133300781
    6. '  ' → logprob: -7.589424133300781
    7. ' i' → logprob: -11.214424133300781
    8. ',' → logprob: -11.839424133300781
    9. '_' → logprob: -11.964424133300781
    10. 's' → logprob: -11.964424133300781

Token 15: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.06285233795642853
    2. 'range' → logprob: -2.812852382659912
    3. ' S' → logprob: -7.062852382659912
    4. 'S' → logprob: -10.937851905822754
    5. ' ' → logprob: -12.312851905822754
    6. 's' → logprob: -13.937851905822754
    7. '(range' → logprob: -14.187851905822754
    8. '	range' → logprob: -14.312851905822754
    9. ' s' → logprob: -14.437851905822754
    10. ' xrange' → logprob: -14.687851905822754

Token 16: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23441192507743835
    2. '(len' → logprob: -1.6094119548797607
    3. ' (' → logprob: -4.734411716461182
    4. '(i' → logprob: -9.60941219329834
    5. '(length' → logprob: -10.60941219329834
    6. ' ' → logprob: -11.10941219329834
    7. '(range' → logprob: -11.10941219329834
    8. ' len' → logprob: -11.35941219329834
    9. '(S' → logprob: -11.85941219329834
    10. '(
' → logprob: -11.85941219329834

Token 17: '3' (ID: 18)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.14923211932182312
    2. '2' → logprob: -2.0242321491241455
    3. ' len' → logprob: -6.149231910705566
    4. '3' → logprob: -6.524231910705566
    5. '1' → logprob: -6.524231910705566
    6. '(len' → logprob: -7.024231910705566
    7. '10' → logprob: -8.774231910705566
    8. '4' → logprob: -9.024231910705566
    9. ')' → logprob: -9.399231910705566
    10. '5' → logprob: -10.024231910705566

Token 18: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006062225438654423
    2. ')' → logprob: -5.131062030792236
    3. ' ):' → logprob: -9.131062507629395
    4. ':' → logprob: -11.256062507629395
    5. '):
' → logprob: -11.881062507629395
    6. ',' → logprob: -13.256062507629395
    7. '```' → logprob: -13.631062507629395
    8. ']:' → logprob: -14.881062507629395
    9. ' )' → logprob: -14.881062507629395
    10. ''):' → logprob: -15.381062507629395

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.51311194896698
    2. ' ' → logprob: -1.63811194896698
    3. '    ' → logprob: -1.88811194896698
    4. ' if' → logprob: -3.8881120681762695
    5. '```' → logprob: -4.1381120681762695
    6. ' L' → logprob: -5.1381120681762695
    7. '  ' → logprob: -6.2631120681762695
    8. ':' → logprob: -6.6381120681762695
    9. ' ```' → logprob: -6.6381120681762695
    10. '[' → logprob: -6.8881120681762695

Token 20: ' if' (ID: 538)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.7685319781303406
    2. ' if' → logprob: -1.0185320377349854
    3. 'L' → logprob: -2.3935320377349854
    4. '   ' → logprob: -3.3935320377349854
    5. 'if' (adapté à ' if') → logprob: -3.6435320377349854
    6. ' for' → logprob: -4.768531799316406
    7. ' S' → logprob: -5.768531799316406
    8. 'for' → logprob: -6.143531799316406
    9. ' ' → logprob: -6.268531799316406
    10. ' range' → logprob: -6.643531799316406

Token 21: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.31448712944984436
    2. 'S' → logprob: -1.314487099647522
    3. ' i' → logprob: -7.314486980438232
    4. 'i' → logprob: -8.06448745727539
    5. ' ' → logprob: -9.06448745727539
    6. 's' → logprob: -10.18948745727539
    7. ' L' → logprob: -11.06448745727539
    8. ' len' → logprob: -11.31448745727539
    9. 'int' → logprob: -11.56448745727539
    10. 'L' → logprob: -11.68948745727539

Token 22: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3132758140563965
    2. '[' → logprob: -1.3132758140563965
    3. '==' → logprob: -12.813276290893555
    4. '[I' → logprob: -12.938276290893555
    5. ' [' → logprob: -13.063276290893555
    6. '[int' → logprob: -13.688276290893555
    7. ' ==' → logprob: -13.813276290893555
    8. '[a' → logprob: -14.188276290893555
    9. '[j' → logprob: -14.563276290893555
    10. '[]' → logprob: -15.063276290893555

Token 23: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.020555665716528893
    2. ']==' → logprob: -4.14555549621582
    3. ' ]' → logprob: -5.89555549621582
    4. '==' → logprob: -7.02055549621582
    5. '[' → logprob: -7.89555549621582
    6. ' ==' → logprob: -8.77055549621582
    7. ']=='' → logprob: -8.89555549621582
    8. ' ' → logprob: -10.14555549621582
    9. '[i' → logprob: -10.27055549621582
    10. '=' → logprob: -10.52055549621582

Token 24: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3569723069667816
    2. ' ==' → logprob: -1.231972336769104
    3. '[' → logprob: -5.4819722175598145
    4. '=' → logprob: -7.1069722175598145
    5. ' ' → logprob: -7.2319722175598145
    6. '!=' → logprob: -7.2319722175598145
    7. ' in' → logprob: -7.8569722175598145
    8. ')' → logprob: -7.9819722175598145
    9. ']' → logprob: -8.231972694396973
    10. ']==' → logprob: -8.606972694396973

Token 25: ' "' (ID: 392)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.10596709698438644
    2. ''O' → logprob: -3.6059670448303223
    3. ''S' → logprob: -3.7309670448303223
    4. ' '' → logprob: -4.480967044830322
    5. '"' → logprob: -4.855967044830322
    6. ''A' → logprob: -5.355967044830322
    7. ''L' → logprob: -5.480967044830322
    8. ''I' → logprob: -5.855967044830322
    9. 'S' → logprob: -5.980967044830322
    10. 'O' → logprob: -5.980967044830322

Token 26: 'A' (ID: 32)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.7075285315513611
    2. ''' → logprob: -0.9575285315513611
    3. 'O' → logprob: -3.832528591156006
    4. 'A' → logprob: -3.832528591156006
    5. '"' → logprob: -4.582528591156006
    6. 'o' → logprob: -4.707528591156006
    7. '0' → logprob: -4.707528591156006
    8. 'L' → logprob: -5.082528591156006
    9. 'I' → logprob: -5.207528591156006
    10. ''A' → logprob: -5.332528591156006

Token 27: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '":' → logprob: -0.5776586532592773
    2. '"' → logprob: -0.8276586532592773
    3. ' "' → logprob: -7.452658653259277
    4. '"):' → logprob: -7.702658653259277
    5. ' ":' → logprob: -7.952658653259277
    6. ':' → logprob: -9.202658653259277
    7. '")' → logprob: -9.702658653259277
    8. '">' → logprob: -10.077658653259277
    9. '"]:' → logprob: -10.702658653259277
    10. ')":' → logprob: -10.702658653259277

Token 28: '       ' (ID: 309)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.10456375777721405
    2. '       ' → logprob: -2.6045637130737305
    3. 'L' → logprob: -4.1045637130737305
    4. '   ' → logprob: -4.9795637130737305
    5. '    ' → logprob: -7.3545637130737305
    6. ' ' → logprob: -7.4795637130737305
    7. '	L' → logprob: -8.72956371307373
    8. '```' → logprob: -8.97956371307373
    9. '[' → logprob: -9.10456371307373
    10. '     ' → logprob: -9.72956371307373

Token 29: ' L' (ID: 451)
  Prédit: ' L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.34855917096138
    2. 'L' (adapté à ' L') → logprob: -1.2235591411590576
    3. ' ' → logprob: -9.473559379577637
    4. '   ' → logprob: -11.098559379577637
    5. '1' → logprob: -11.598559379577637
    6. '    ' → logprob: -12.473559379577637
    7. '+' → logprob: -13.348559379577637
    8. '	L' → logprob: -13.723559379577637
    9. '       ' → logprob: -13.973559379577637
    10. ' +' → logprob: -14.223559379577637

Token 30: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00016086915275081992
    2. '[i' → logprob: -8.750161170959473
    3. ' [' → logprob: -13.250161170959473
    4. '[++' → logprob: -16.250160217285156
    5. '```' → logprob: -16.375160217285156
    6. '[L' → logprob: -16.625160217285156
    7. '[
' → logprob: -16.750160217285156
    8. '\[' → logprob: -17.250160217285156
    9. '[-' → logprob: -17.500160217285156
    10. '[I' → logprob: -17.625160217285156

Token 31: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017028623551595956
    2. ' ' → logprob: -8.750170707702637
    3. '1' → logprob: -11.375170707702637
    4. 'i' → logprob: -16.68766975402832
    5. ' i' → logprob: -16.81266975402832
    6. '[' → logprob: -17.06266975402832
    7. '   ' → logprob: -17.37516975402832
    8. '۰' → logprob: -17.56266975402832
    9. '０' → logprob: -18.31266975402832
    10. '  ' → logprob: -18.43766975402832

Token 32: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1290590912103653
    2. ']+=' → logprob: -2.129059076309204
    3. '+' → logprob: -6.879059314727783
    4. '+=' → logprob: -7.379059314727783
    5. '+]' → logprob: -8.254058837890625
    6. ' ]' → logprob: -8.879058837890625
    7. ']+' → logprob: -9.754058837890625
    8. ' +=' → logprob: -11.754058837890625
    9. '']' → logprob: -12.504058837890625
    10. '"]' → logprob: -13.254058837890625

Token 33: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.000775442982558161
    2. ' +=' → logprob: -7.750775337219238
    3. '+' → logprob: -8.125775337219238
    4. '=' → logprob: -10.000775337219238
    5. ']+=' → logprob: -12.875775337219238
    6. '+='' → logprob: -14.625775337219238
    7. '+=(' → logprob: -15.250775337219238
    8. '++' → logprob: -15.750775337219238
    9. '+="' → logprob: -16.250776290893555
    10. '-=' → logprob: -19.125776290893555

Token 34: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002818312495946884
    2. ' ' → logprob: -5.8778181076049805
    3. '2' → logprob: -12.12781810760498
    4. '3' → logprob: -12.50281810760498
    5. '10' → logprob: -13.12781810760498
    6. '4' → logprob: -14.75281810760498
    7. '100' → logprob: -14.75281810760498
    8. '5' → logprob: -14.87781810760498
    9. '0' → logprob: -16.190319061279297
    10. '   ' → logprob: -16.252819061279297

Token 35: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00040362097206525505
    2. ' ' → logprob: -7.87540340423584
    3. '2' → logprob: -11.75040340423584
    4. '3' → logprob: -12.12540340423584
    5. '10' → logprob: -12.25040340423584
    6. '100' → logprob: -13.62540340423584
    7. '5' → logprob: -14.37540340423584
    8. 'i' → logprob: -14.62540340423584
    9. '4' → logprob: -14.75040340423584
    10. '   ' → logprob: -15.12540340423584

Token 36: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0017669200897217
    2. ' else' → logprob: -1.5017669200897217
    3. 'elif' → logprob: -1.7517669200897217
    4. ' elif' → logprob: -2.0017669200897217
    5. 'else' → logprob: -2.3767669200897217
    6. '	elif' → logprob: -5.876767158508301
    7. ' ' → logprob: -6.251767158508301
    8. '<|end|>' → logprob: -6.376767158508301
    9. '    ' → logprob: -7.251767158508301
    10. '```' → logprob: -8.0017671585083

Token 37: '   ' (ID: 271)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.37567469477653503
    2. 'else' → logprob: -2.2506747245788574
    3. ' elif' → logprob: -2.3756747245788574
    4. ' else' → logprob: -2.5006747245788574
    5. '   ' → logprob: -3.8756747245788574
    6. '<|end|>' → logprob: -4.625674724578857
    7. ' ' → logprob: -6.750674724578857
    8. '	elif' → logprob: -8.0006742477417
    9. '    ' → logprob: -8.2506742477417
    10. '```' → logprob: -8.7506742477417

Token 38: ' else' (ID: 1203)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -1.110055923461914
    2. ' else' → logprob: -1.235055923461914
    3. 'else' (adapté à ' else') → logprob: -1.360055923461914
    4. ' elif' → logprob: -2.110055923461914
    5. ' ' → logprob: -7.235055923461914
    6. '   ' → logprob: -7.360055923461914
    7. '```' → logprob: -8.735055923461914
    8. '	elif' → logprob: -8.985055923461914
    9. '    ' → logprob: -10.485055923461914
    10. '	else' → logprob: -11.110055923461914

Token 39: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006095284596085548
    2. ':
' → logprob: -5.1310954093933105
    3. '[' → logprob: -9.506094932556152
    4. '{' → logprob: -10.756094932556152
    5. '```' → logprob: -11.131094932556152
    6. '   ' → logprob: -11.381094932556152
    7. ' :' → logprob: -11.631094932556152
    8. 'L' → logprob: -11.881094932556152
    9. ' L' → logprob: -12.256094932556152
    10. '    ' → logprob: -12.506094932556152

Token 40: '       ' (ID: 309)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.5693228840827942
    2. '       ' → logprob: -1.1943228244781494
    3. 'L' → logprob: -2.8193228244781494
    4. '        ' → logprob: -3.5693228244781494
    5. '    ' → logprob: -3.8193228244781494
    6. '   ' → logprob: -4.8193230628967285
    7. ' ' → logprob: -5.5693230628967285
    8. '           ' → logprob: -5.6943230628967285
    9. '```' → logprob: -5.6943230628967285
    10. '1' → logprob: -7.3193230628967285

Token 41: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' (adapté à ' L') → logprob: -0.16023346781730652
    2. ' L' → logprob: -1.910233497619629
    3. '1' → logprob: -12.660233497619629
    4. ' ' → logprob: -13.160233497619629
    5. '    ' → logprob: -13.910233497619629
    6. '```' → logprob: -14.035233497619629
    7. '           ' → logprob: -14.160233497619629
    8. '        ' → logprob: -14.535233497619629
    9. '       ' → logprob: -15.160233497619629
    10. '   ' → logprob: -15.660233497619629

Token 42: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.5776860184123507e-06
    2. '1' → logprob: -13.87500286102295
    3. ' [' → logprob: -14.37500286102295
    4. '```' → logprob: -14.75000286102295
    5. '\[' → logprob: -14.87500286102295
    6. ''[' → logprob: -17.000001907348633
    7. '[
' → logprob: -17.062501907348633
    8. '][' → logprob: -17.500001907348633
    9. '=' → logprob: -17.500001907348633
    10. '.' → logprob: -17.812501907348633

Token 43: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.134509021649137e-05
    2. ' ' → logprob: -9.75006103515625
    3. '0' → logprob: -13.50006103515625
    4. ']' → logprob: -13.75006103515625
    5. '   ' → logprob: -15.56256103515625
    6. '[' → logprob: -15.93756103515625
    7. '```' → logprob: -16.12506103515625
    8. '  ' → logprob: -16.93756103515625
    9. '<|end|>' → logprob: -17.31256103515625
    10. '' → logprob: -17.50006103515625

Token 44: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00011844364780699834
    2. ']+=' → logprob: -9.125118255615234
    3. ' ]' → logprob: -11.875118255615234
    4. ']+' → logprob: -13.250118255615234
    5. '']' → logprob: -15.000118255615234
    6. ')' → logprob: -16.375118255615234
    7. '"]' → logprob: -16.500118255615234
    8. '+' → logprob: -16.750118255615234
    9. '[' → logprob: -17.125118255615234
    10. '+]' → logprob: -17.375118255615234

Token 45: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.20163698494434357
    2. ' +=' → logprob: -1.7016370296478271
    3. '+' → logprob: -8.451637268066406
    4. ']+=' → logprob: -12.451637268066406
    5. '+='' → logprob: -13.326637268066406
    6. '=' → logprob: -13.451637268066406
    7. ' ' → logprob: -13.826637268066406
    8. '+="' → logprob: -13.826637268066406
    9. '+=(' → logprob: -14.826637268066406
    10. '```' → logprob: -15.201637268066406

Token 46: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0036006635054945946
    2. ' ' → logprob: -5.628600597381592
    3. '<|end|>' → logprob: -15.62860107421875
    4. '0' → logprob: -16.12860107421875
    5. '```' → logprob: -16.50360107421875
    6. '   ' → logprob: -16.50360107421875
    7. '  ' → logprob: -16.87860107421875
    8. '１' → logprob: -17.12860107421875
    9. '2' → logprob: -17.62860107421875
    10. '۱' → logprob: -18.31610107421875

Token 47: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00033558503491804004
    2. ' ' → logprob: -8.000335693359375
    3. '   ' → logprob: -17.125335693359375
    4. '  ' → logprob: -17.625335693359375
    5. '```' → logprob: -17.875335693359375
    6. '１' → logprob: -18.437835693359375
    7. '-' → logprob: -19.562835693359375
    8. '0' → logprob: -19.625335693359375
    9. '2' → logprob: -19.687835693359375
    10. '`' → logprob: -19.812835693359375

Token 48: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.2575587034225464
    2. '<|end|>' → logprob: -2.382558822631836
    3. '#' → logprob: -3.382558822631836
    4. '
' → logprob: -3.632558822631836
    5. ' ' → logprob: -4.007558822631836
    6. '```' → logprob: -4.132558822631836
    7. '\' → logprob: -4.257558822631836
    8. ' 
' → logprob: -5.257558822631836
    9. '[' → logprob: -5.257558822631836
    10. ')' → logprob: -5.507558822631836

Token 49: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 50: ' max' (ID: 2999)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.018326574936509132
    2. 'L' → logprob: -4.018326759338379
    3. ' ' → logprob: -8.893326759338379
    4. ' S' → logprob: -10.893326759338379
    5. ' abs' → logprob: -11.643326759338379
    6. 'S' → logprob: -13.018326759338379
    7. ' ' → logprob: -13.018326759338379
    8. ' max' → logprob: -13.393326759338379
    9. ' len' → logprob: -13.893326759338379
    10. 'abs' → logprob: -14.018326759338379

Token 51: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.04859600216150284
    2. '(' → logprob: -3.048595905303955
    3. '(S' → logprob: -11.798596382141113
    4. '()' → logprob: -15.423596382141113
    5. '(
' → logprob: -15.673596382141113
    6. '((' → logprob: -15.798596382141113
    7. '(max' → logprob: -15.798596382141113
    8. '(l' → logprob: -16.173595428466797
    9. '(

' → logprob: -16.673595428466797
    10. '(len' → logprob: -16.923595428466797

Token 52: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007108421064913273
    2. ' )' → logprob: -5.132108211517334
    3. ')>' → logprob: -7.757108211517334
    4. '[' → logprob: -8.132108688354492
    5. '()' → logprob: -8.507108688354492
    6. '())' → logprob: -9.132108688354492
    7. ' >' → logprob: -10.007108688354492
    8. '>' → logprob: -10.257108688354492
    9. ' ==' → logprob: -11.007108688354492
    10. ')==' → logprob: -11.257108688354492

Token 53: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.15635515749454498
    2. ' ==' → logprob: -2.281355142593384
    3. ' <=' → logprob: -4.031355381011963
    4. ' >=' → logprob: -4.656355381011963
    5. '>' → logprob: -4.781355381011963
    6. ' <' → logprob: -5.531355381011963
    7. '==' → logprob: -6.656355381011963
    8. ' !=' → logprob: -7.031355381011963
    9. ' ' → logprob: -7.531355381011963
    10. '<=' → logprob: -10.031354904174805

Token 54: ' ' (ID: 220)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.6818606853485107
    2. 'L' → logprob: -0.8068606853485107
    3. '0' → logprob: -3.8068606853485107
    4. ' ' → logprob: -4.05686092376709
    5. ' min' → logprob: -5.43186092376709
    6. 'min' → logprob: -6.30686092376709
    7. '1' → logprob: -6.80686092376709
    8. '3' → logprob: -7.93186092376709
    9. '2' → logprob: -8.05686092376709
    10. ' max' → logprob: -8.68186092376709

Token 55: '3' (ID: 18)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0611049085855484
    2. '0' → logprob: -3.1861050128936768
    3. '1' → logprob: -4.311104774475098
    4. '3' → logprob: -6.436104774475098
    5. '2' → logprob: -6.686104774475098
    6. 'min' → logprob: -6.686104774475098
    7. ' L' → logprob: -8.186104774475098
    8. ' ' → logprob: -9.436104774475098
    9. 'max' → logprob: -11.061104774475098
    10. 'S' → logprob: -11.311104774475098

Token 56: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001129602751461789
    2. ':
' → logprob: -9.125112533569336
    3. '.' → logprob: -13.750112533569336
    4. ' :' → logprob: -13.875112533569336
    5. '>' → logprob: -14.875112533569336
    6. '):' → logprob: -15.000112533569336
    7. ':

' → logprob: -15.000112533569336
    8. 'print' → logprob: -15.625112533569336
    9. ':return' → logprob: -15.625112533569336
    10. ',' → logprob: -15.750112533569336

Token 57: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.014473622664809227
    2. '   ' → logprob: -4.6394734382629395
    3. ' print' → logprob: -5.5144734382629395
    4. ':
' → logprob: -8.389473915100098
    5. ' ' → logprob: -9.014473915100098
    6. '\n' → logprob: -9.639473915100098
    7. 'A' → logprob: -9.889473915100098
    8. ':' → logprob: -10.139473915100098
    9. '
' → logprob: -10.389473915100098
    10. '    ' → logprob: -11.139473915100098

Token 58: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00017064384883269668
    2. ' print' → logprob: -9.500170707702637
    3. 'A' → logprob: -9.625170707702637
    4. '   ' → logprob: -11.750170707702637
    5. 'pr' → logprob: -11.750170707702637
    6. 'pri' → logprob: -13.250170707702637
    7. '
' → logprob: -13.375170707702637
    8. '0' → logprob: -13.750170707702637
    9. '	print' → logprob: -14.000170707702637
    10. ' ' → logprob: -14.375170707702637

Token 59: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.11651283502578735
    2. '(' → logprob: -2.3665127754211426
    3. '(S' → logprob: -4.241512775421143
    4. '('' → logprob: -6.741512775421143
    5. '("("' → logprob: -7.741512775421143
    6. '(L' → logprob: -9.8665132522583
    7. '(A' → logprob: -10.8665132522583
    8. '("(' → logprob: -10.8665132522583
    9. '"' → logprob: -11.2415132522583
    10. '()' → logprob: -11.2415132522583

Token 60: 'No' (ID: 3160)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.01702374406158924
    2. 'AAA' → logprob: -4.26702356338501
    3. 'Won' → logprob: -6.89202356338501
    4. 'Yes' → logprob: -7.51702356338501
    5. '3' → logprob: -8.392024040222168
    6. '"A' → logprob: -8.642024040222168
    7. 'AA' → logprob: -8.892024040222168
    8. '```' → logprob: -9.142024040222168
    9. 'Win' → logprob: -9.392024040222168
    10. 'AC' → logprob: -9.892024040222168

Token 61: '")
' (ID: 1896)
  Prédit: ' problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' problem' → logprob: -1.189039945602417
    2. '")' → logprob: -1.439039945602417
    3. ' ")' → logprob: -1.564039945602417
    4. 't' → logprob: -2.689039945602417
    5. ')' → logprob: -4.064040184020996
    6. ' one' → logprob: -4.189040184020996
    7. ' Problem' → logprob: -4.189040184020996
    8. 'Problem' → logprob: -4.314040184020996
    9. ' )' → logprob: -4.689040184020996
    10. ' solution' → logprob: -4.939040184020996

Token 62: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.26095375418663025
    2. 'elif' → logprob: -2.135953664779663
    3. ' else' → logprob: -2.260953664779663
    4. ' elif' → logprob: -5.135953903198242
    5. ')' → logprob: -7.760953903198242
    6. 'e' → logprob: -7.760953903198242
    7. '
' → logprob: -9.385953903198242
    8. '```' → logprob: -9.385953903198242
    9. '    
' → logprob: -10.010953903198242
    10. '<|end|>' → logprob: -10.385953903198242

Token 63: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003389190824236721
    2. ':
' → logprob: -8.125338554382324
    3. '   ' → logprob: -10.250338554382324
    4. ' :' → logprob: -12.250338554382324
    5. ',' → logprob: -14.375338554382324
    6. ':

' → logprob: -14.625338554382324
    7. '<|end|>' → logprob: -15.250338554382324
    8. '):' → logprob: -15.500338554382324
    9. '    ' → logprob: -16.00033950805664
    10. ' :
' → logprob: -16.12533950805664

Token 64: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.457010418176651
    2. '   ' → logprob: -1.0820103883743286
    3. ' print' → logprob: -3.582010507583618
    4. ' ' → logprob: -10.457010269165039
    5. '	print' → logprob: -10.707010269165039
    6. '```' → logprob: -11.207010269165039
    7. 'Print' → logprob: -11.832010269165039
    8. '    
' → logprob: -12.582010269165039
    9. '       ' → logprob: -12.582010269165039
    10. 'Yes' → logprob: -12.707010269165039

Token 65: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -5.1928003813372925e-05
    2. ' print' → logprob: -10.125051498413086
    3. '   ' → logprob: -11.500051498413086
    4. 'for' → logprob: -14.500051498413086
    5. 'Yes' → logprob: -15.250051498413086
    6. 'pr' → logprob: -15.625051498413086
    7. 'prin' → logprob: -15.875051498413086
    8. ' ' → logprob: -16.375051498413086
    9. 'Print' → logprob: -16.625051498413086
    10. '"' → logprob: -16.750051498413086

Token 66: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.25654518604278564
    2. '(' → logprob: -1.5065451860427856
    3. '("("' → logprob: -5.506545066833496
    4. '("")' → logprob: -8.131545066833496
    5. '()' → logprob: -8.506545066833496
    6. '('' → logprob: -10.756545066833496
    7. '("(' → logprob: -11.756545066833496
    8. '"' → logprob: -12.631545066833496
    9. '(""' → logprob: -12.631545066833496
    10. '("="' → logprob: -13.381545066833496

Token 67: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.001033999491482973
    2. 'Y' → logprob: -7.126033782958984
    3. 'Ye' → logprob: -8.626033782958984
    4. '"' → logprob: -10.876033782958984
    5. ' Yes' → logprob: -11.126033782958984
    6. 'Ya' → logprob: -11.501033782958984
    7. 'YES' → logprob: -13.126033782958984
    8. 'yes' → logprob: -13.376033782958984
    9. '""' → logprob: -14.626033782958984
    10. ')' → logprob: -15.001033782958984

Token 68: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0005747167742811143
    2. ')' → logprob: -7.500574588775635
    3. ')")' → logprob: -10.750575065612793
    4. '")
' → logprob: -15.375575065612793
    5. '"' → logprob: -18.125574111938477
    6. '')' → logprob: -18.250574111938477
    7. '!")' → logprob: -18.250574111938477
    8. '`)' → logprob: -18.875574111938477
    9. '”)' → logprob: -19.125574111938477
    10. ' ")' → logprob: -19.500574111938477


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 66
Tokens correctement prédits (1ère position, stricte): 26
Tokens correctement prédits (1ère position, avec adaptation): 29
Tokens correctement prédits (top 10): 56
Précision stricte (1ère position): 39.39%
Précision adaptée (1ère position): 43.94%
Précision (top 10): 84.85%
================================================================================
