================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:54:46
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from operator import itemgetter

def main():
    N, L = map(int, input().split())
    total_sum = N * (2 * L + N - 1) // 2

    first = L
    last = L + N - 1

    if first > 0:
        result = total_sum - first
    elif last < 0:
        result = total_sum - last
    else:
        result = total_sum

    print(result)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' operator' (ID: 11019)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' item' (ID: 2169)
  Prédit: ' item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' item' → logprob: -0.14237836003303528
    2. 'item' → logprob: -2.142378330230713
    3. ' import' → logprob: -4.767378330230713
    4. ' attr' → logprob: -5.892378330230713
    5. ' add' → logprob: -7.017378330230713
    6. 'attr' → logprob: -7.392378330230713
    7. 'getitem' → logprob: -7.392378330230713
    8. 'import' → logprob: -7.892378330230713
    9. '```' → logprob: -8.017378807067871
    10. 'add' → logprob: -8.017378807067871

Token 4: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -0.00033879990223795176
    2. 'get' → logprob: -8.000338554382324
    3. 'getitem' → logprob: -13.000338554382324
    4. 'g' → logprob: -14.875338554382324
    5. 'gett' → logprob: -15.625338554382324
    6. 'setter' → logprob: -16.00033950805664
    7. 'ge' → logprob: -16.12533950805664
    8. 'gte' → logprob: -16.75033950805664
    9. 's' → logprob: -17.12533950805664
    10. 'geta' → logprob: -17.25033950805664

Token 5: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006113297306001186
    2. '\(' → logprob: -5.631113529205322
    3. '.' → logprob: -6.256113529205322
    4. ',' → logprob: -8.381113052368164
    5. '(
' → logprob: -9.881113052368164
    6. '\' → logprob: -10.131113052368164
    7. ' (' → logprob: -10.256113052368164
    8. 'newline' → logprob: -10.256113052368164
    9. '```' → logprob: -10.256113052368164
    10. '`' → logprob: -10.506113052368164

Token 6: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0015289057046175003
    2. '.' → logprob: -7.501528739929199
    3. ',' → logprob: -7.751528739929199
    4. '\(' → logprob: -7.876528739929199
    5. '```' → logprob: -10.1265287399292
    6. '(
' → logprob: -10.2515287399292
    7. ':' → logprob: -11.2515287399292
    8. '[' → logprob: -11.2515287399292
    9. ' (' → logprob: -11.8765287399292
    10. '()' → logprob: -12.0015287399292

Token 7: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04593440517783165
    2. ' calculate' → logprob: -5.170934200286865
    3. ' process' → logprob: -5.295934200286865
    4. ' space' → logprob: -5.295934200286865
    5. ' sorted' → logprob: -5.295934200286865
    6. ' get' → logprob: -5.545934200286865
    7. ' ' → logprob: -6.045934200286865
    8. ' find' → logprob: -6.170934200286865
    9. ' my' → logprob: -6.295934200286865
    10. ' add' → logprob: -6.420934200286865

Token 8: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003414751496165991
    2. ':' → logprob: -6.503414630889893
    3. '():' → logprob: -6.628414630889893
    4. '(:' → logprob: -7.628414630889893
    5. ' (' → logprob: -10.75341510772705
    6. '(
' → logprob: -10.87841510772705
    7. '```' → logprob: -11.37841510772705
    8. '):' → logprob: -12.00341510772705
    9. '(`' → logprob: -12.25341510772705
    10. '('' → logprob: -12.25341510772705

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19841833412647247
    2. '(' → logprob: -2.698418378829956
    3. '    ' → logprob: -3.073418378829956
    4. '[' → logprob: -3.448418378829956
    5. ' ' → logprob: -3.823418378829956
    6. ' (' → logprob: -5.698418140411377
    7. '    
' → logprob: -6.198418140411377
    8. ' )' → logprob: -6.323418140411377
    9. ')' → logprob: -7.198418140411377
    10. 'a' → logprob: -7.573418140411377

Token 10: ' N' (ID: 478)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.8615433573722839
    2. ' items' → logprob: -1.2365434169769287
    3. ' data' → logprob: -1.6115434169769287
    4. 'items' → logprob: -2.4865434169769287
    5. ' ' → logprob: -6.98654317855835
    6. '   ' → logprob: -6.98654317855835
    7. 'result' → logprob: -8.361543655395508
    8. ' fruits' → logprob: -8.486543655395508
    9. ' sorted' → logprob: -8.611543655395508
    10. ' item' → logprob: -8.986543655395508

Token 11: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03190578147768974
    2. '=' → logprob: -3.6569058895111084
    3. ',' → logprob: -5.531905651092529
    4. ' ' → logprob: -6.781905651092529
    5. ' ,' → logprob: -8.781906127929688
    6. '   ' → logprob: -9.281906127929688
    7. '  ' → logprob: -9.656906127929688
    8. '.' → logprob: -10.281906127929688
    9. '_' → logprob: -10.406906127929688
    10. ')' → logprob: -10.406906127929688

Token 12: ' L' (ID: 451)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.3710172772407532
    2. 'K' → logprob: -1.9960172176361084
    3. ' M' → logprob: -1.9960172176361084
    4. 'M' → logprob: -3.3710172176361084
    5. ' Q' → logprob: -7.4960174560546875
    6. ' ' → logprob: -7.7460174560546875
    7. 'Q' → logprob: -7.8710174560546875
    8. ' W' → logprob: -8.246017456054688
    9. 'x' → logprob: -8.496017456054688
    10. 'X' → logprob: -8.996017456054688

Token 13: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008615872822701931
    2. '=' → logprob: -4.758615970611572
    3. ',' → logprob: -14.508615493774414
    4. ' ' → logprob: -14.883615493774414
    5. '=int' → logprob: -16.508615493774414
    6. '```' → logprob: -16.508615493774414
    7. ' =
' → logprob: -16.758615493774414
    8. '=input' → logprob: -16.883615493774414
    9. '  ' → logprob: -17.133615493774414
    10. ')' → logprob: -17.258615493774414

Token 14: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.11312661319971085
    2. 'map' → logprob: -2.238126516342163
    3. ' input' → logprob: -8.613126754760742
    4. 'input' → logprob: -9.738126754760742
    5. ' ' → logprob: -10.238126754760742
    6. ' list' → logprob: -11.488126754760742
    7. ' [' → logprob: -12.113126754760742
    8. '0' → logprob: -12.988126754760742
    9. '	map' → logprob: -13.488126754760742
    10. 'int' → logprob: -13.738126754760742

Token 15: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.10274329781532288
    2. '(' → logprob: -2.35274338722229
    3. '(str' → logprob: -6.477743148803711
    4. '(lambda' → logprob: -7.227743148803711
    5. '(input' → logprob: -8.477743148803711
    6. 'int' → logprob: -11.227743148803711
    7. '(list' → logprob: -11.352743148803711
    8. '(
' → logprob: -11.477743148803711
    9. '[int' → logprob: -11.977743148803711
    10. '(eval' → logprob: -12.352743148803711

Token 16: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8426992893218994
    2. '(input' → logprob: -0.9676992893218994
    3. ',input' → logprob: -2.2176992893218994
    4. ')' → logprob: -3.0926992893218994
    5. 'input' → logprob: -3.4676992893218994
    6. '(' → logprob: -5.84269905090332
    7. ' input' → logprob: -7.84269905090332
    8. '),' → logprob: -8.46769905090332
    9. '=input' → logprob: -8.59269905090332
    10. ' ,' → logprob: -9.46769905090332

Token 17: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.20144297182559967
    2. ' input' → logprob: -1.7014429569244385
    3. ')' → logprob: -10.57644271850586
    4. ' )' → logprob: -12.95144271850586
    5. '=input' → logprob: -14.70144271850586
    6. ',input' → logprob: -14.82644271850586
    7. '(input' → logprob: -15.07644271850586
    8. '	input' → logprob: -15.20144271850586
    9. ' ' → logprob: -15.32644271850586
    10. '<input' → logprob: -17.45144271850586

Token 18: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0015699759824201465
    2. '())' → logprob: -6.626569747924805
    3. '()' → logprob: -9.001569747924805
    4. ')' → logprob: -9.126569747924805
    5. '(' → logprob: -12.501569747924805
    6. '());' → logprob: -12.876569747924805
    7. '()))' → logprob: -13.501569747924805
    8. '()
' → logprob: -14.376569747924805
    9. '('' → logprob: -14.376569747924805
    10. '()),' → logprob: -14.751569747924805

Token 19: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -8.792751032160595e-05
    2. 'strip' → logprob: -9.50008773803711
    3. 'rstrip' → logprob: -11.87508773803711
    4. ' split' → logprob: -12.25008773803711
    5. '(split' → logprob: -13.75008773803711
    6. 'spl' → logprob: -16.00008773803711
    7. ')' → logprob: -17.62508773803711
    8. '```' → logprob: -18.25008773803711
    9. 's' → logprob: -18.87508773803711
    10. 'startswith' → logprob: -18.87508773803711

Token 20: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01276026014238596
    2. '))' → logprob: -4.387760162353516
    3. '())' → logprob: -8.762760162353516
    4. '()' → logprob: -9.387760162353516
    5. ')))' → logprob: -12.762760162353516
    6. '),' → logprob: -12.762760162353516
    7. ')
' → logprob: -13.762760162353516
    8. '(' → logprob: -14.137760162353516
    9. '()))' → logprob: -14.137760162353516
    10. ' )' → logprob: -14.887760162353516

Token 21: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9130018353462219
    2. 'items' → logprob: -1.1630017757415771
    3. 'data' → logprob: -2.788001775741577
    4. '    
' → logprob: -3.413001775741577
    5. '
' → logprob: -3.538001775741577
    6. ' items' → logprob: -3.538001775741577
    7. '```' → logprob: -4.038002014160156
    8. '\n' → logprob: -4.288002014160156
    9. 'words' → logprob: -4.663002014160156
    10. ')' → logprob: -4.788002014160156

Token 22: ' total' (ID: 3609)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -2.27759051322937
    2. 's' → logprob: -2.65259051322937
    3. ' data' → logprob: -2.65259051322937
    4. ' strings' → logprob: -2.65259051322937
    5. ' items' → logprob: -2.77759051322937
    6. ' s' → logprob: -3.15259051322937
    7. ' a' → logprob: -3.27759051322937
    8. ' points' → logprob: -3.27759051322937
    9. ' words' → logprob: -3.27759051322937
    10. 'lst' → logprob: -3.27759051322937

Token 23: '_sum' (ID: 29859)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.4332047998905182
    2. '_' → logprob: -1.3082047700881958
    3. '_time' → logprob: -3.6832048892974854
    4. '_sum' → logprob: -4.058204650878906
    5. ' =' → logprob: -4.183204650878906
    6. '=' → logprob: -5.183204650878906
    7. '_distance' → logprob: -5.808204650878906
    8. '_cost' → logprob: -6.308204650878906
    9. ' +=' → logprob: -6.433204650878906
    10. '_size' → logprob: -6.433204650878906

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0330432653427124
    2. '=' → logprob: -3.658043384552002
    3. ' +=' → logprob: -5.033043384552002
    4. ' ' → logprob: -9.033042907714844
    5. '+=' → logprob: -9.908042907714844
    6. '_' → logprob: -11.158042907714844
    7. ')' → logprob: -12.533042907714844
    8. '  ' → logprob: -13.283042907714844
    9. '    ' → logprob: -13.283042907714844
    10. ',' → logprob: -13.408042907714844

Token 25: ' N' (ID: 478)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.19703751802444458
    2. ' ' → logprob: -2.0720374584198
    3. ' L' → logprob: -3.3220374584198
    4. 'L' → logprob: -5.197037696838379
    5. ' sum' → logprob: -5.197037696838379
    6. 'sum' → logprob: -5.447037696838379
    7. 'abs' → logprob: -7.447037696838379
    8. ' -' → logprob: -8.697037696838379
    9. ' abs' → logprob: -9.322037696838379
    10. '1' → logprob: -9.447037696838379

Token 26: ' *' (ID: 425)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9713945388793945
    2. ' +' → logprob: -1.5963945388793945
    3. ' *' → logprob: -1.5963945388793945
    4. '*' → logprob: -2.0963945388793945
    5. ' ' → logprob: -2.5963945388793945
    6. '-' → logprob: -4.8463945388793945
    7. '<|end|>' → logprob: -4.9713945388793945
    8. ' -' → logprob: -6.5963945388793945
    9. ')' → logprob: -7.3463945388793945
    10. '0' → logprob: -8.096394538879395

Token 27: ' (' (ID: 350)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.2533543109893799
    2. ' L' → logprob: -2.25335431098938
    3. ' (' → logprob: -2.87835431098938
    4. '(L' → logprob: -3.00335431098938
    5. '(' → logprob: -5.128354072570801
    6. '2' → logprob: -6.253354072570801
    7. ' ' → logprob: -6.628354072570801
    8. '(N' → logprob: -7.253354072570801
    9. 'N' → logprob: -7.628354072570801
    10. '100' → logprob: -7.753354072570801

Token 28: '2' (ID: 17)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.17471234500408173
    2. '2' → logprob: -1.9247123003005981
    3. ' L' → logprob: -4.799712181091309
    4. 'N' → logprob: -5.799712181091309
    5. ' ' → logprob: -6.549712181091309
    6. '(L' → logprob: -7.549712181091309
    7. ' (' → logprob: -7.674712181091309
    8. '(' → logprob: -8.174712181091309
    9. '1' → logprob: -8.549712181091309
    10. '(N' → logprob: -9.674712181091309

Token 29: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.18399986624717712
    2. ' *' → logprob: -1.8089998960494995
    3. 'L' → logprob: -5.684000015258789
    4. '+' → logprob: -7.934000015258789
    5. ' +' → logprob: -8.184000015258789
    6. ' L' → logprob: -8.934000015258789
    7. ' ' → logprob: -10.434000015258789
    8. '**' → logprob: -10.684000015258789
    9. '```' → logprob: -12.746500015258789
    10. '*l' → logprob: -12.809000015258789

Token 30: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.008708410896360874
    2. ' L' → logprob: -4.758708477020264
    3. '(L' → logprob: -9.758708000183105
    4. ' (' → logprob: -10.758708000183105
    5. '(' → logprob: -12.258708000183105
    6. '1' → logprob: -13.383708000183105
    7. 'N' → logprob: -13.508708000183105
    8. ' ' → logprob: -13.508708000183105
    9. '	L' → logprob: -13.946208000183105
    10. '10' → logprob: -14.383708000183105

Token 31: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.31367748975753784
    2. '+' → logprob: -1.3136775493621826
    3. ')' → logprob: -7.9386773109436035
    4. ' )' → logprob: -10.813677787780762
    5. '+)' → logprob: -11.563677787780762
    6. ' ' → logprob: -12.313677787780762
    7. '```' → logprob: -12.313677787780762
    8. ' plus' → logprob: -12.438677787780762
    9. '+i' → logprob: -13.313677787780762
    10. ' ' → logprob: -13.438677787780762

Token 32: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.04941156134009361
    2. '1' → logprob: -4.049411773681641
    3. ' N' → logprob: -4.049411773681641
    4. '(N' → logprob: -4.799411773681641
    5. ' (' → logprob: -5.799411773681641
    6. '(' → logprob: -6.299411773681641
    7. ' ' → logprob: -8.79941177368164
    8. ')' → logprob: -10.04941177368164
    9. '   ' → logprob: -11.17441177368164
    10. '2' → logprob: -11.92441177368164

Token 33: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.31420665979385376
    2. '-' → logprob: -1.314206600189209
    3. ' +' → logprob: -7.939206600189209
    4. '+' → logprob: -7.939206600189209
    5. ')' → logprob: -9.064207077026367
    6. ' ' → logprob: -9.564207077026367
    7. '1' → logprob: -10.314207077026367
    8. ' )' → logprob: -12.689207077026367
    9. '   ' → logprob: -12.814207077026367
    10. '```' → logprob: -13.189207077026367

Token 34: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07345984876155853
    2. '-' → logprob: -2.6984598636627197
    3. ' ' → logprob: -6.323459625244141
    4. ' -' → logprob: -6.448459625244141
    5. ')' → logprob: -9.07345962524414
    6. '   ' → logprob: -11.07345962524414
    7. '  ' → logprob: -13.19845962524414
    8. ' )' → logprob: -13.51095962524414
    9. '<|end|>' → logprob: -13.94845962524414
    10. '−' → logprob: -14.07345962524414

Token 35: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4060561776859686e-05
    2. '-' → logprob: -10.625043869018555
    3. ' ' → logprob: -11.250043869018555
    4. ' -' → logprob: -12.375043869018555
    5. ')' → logprob: -13.125043869018555
    6. '   ' → logprob: -15.250043869018555
    7. '```' → logprob: -17.250043869018555
    8. '  ' → logprob: -17.625043869018555
    9. '<|end|>' → logprob: -17.875043869018555
    10. '2' → logprob: -18.500043869018555

Token 36: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0029769872780889273
    2. ' )' → logprob: -6.252976894378662
    3. ')//' → logprob: -6.877976894378662
    4. '//' → logprob: -11.75297737121582
    5. '))' → logprob: -12.62797737121582
    6. ' //' → logprob: -13.50297737121582
    7. ')`' → logprob: -13.75297737121582
    8. ')
' → logprob: -14.37797737121582
    9. '）' → logprob: -14.62797737121582
    10. '   ' → logprob: -14.62797737121582

Token 37: ' //' (ID: 602)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8562197089195251
    2. '
' → logprob: -0.9812197089195251
    3. ')' → logprob: -2.35621976852417
    4. '    
' → logprob: -2.85621976852417
    5. '-' → logprob: -4.85621976852417
    6. '<|end|>' → logprob: -5.23121976852417
    7. ' //' → logprob: -5.35621976852417
    8. ' ' → logprob: -5.35621976852417
    9. ' 
' → logprob: -5.35621976852417
    10. '+' → logprob: -5.60621976852417

Token 38: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.127333340875339e-06
    2. ' ' → logprob: -12.500003814697266
    3. '1' → logprob: -14.875003814697266
    4. '   ' → logprob: -18.250003814697266
    5. '```' → logprob: -18.250003814697266
    6. '202' → logprob: -20.750003814697266
    7. '
' → logprob: -20.875003814697266
    8. '  ' → logprob: -20.875003814697266
    9. '    ' → logprob: -20.875003814697266
    10. '6' → logprob: -21.125003814697266

Token 39: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.375000953674316
    3. '1' → logprob: -14.625000953674316
    4. '```' → logprob: -18.125001907348633
    5. '   ' → logprob: -19.000001907348633
    6. '3' → logprob: -19.625001907348633
    7. '  ' → logprob: -20.625001907348633
    8. '202' → logprob: -20.812501907348633
    9. '{' → logprob: -20.875001907348633
    10. '۲' → logprob: -20.937501907348633

Token 40: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5230732560157776
    2. '   ' → logprob: -1.2730731964111328
    3. '    
' → logprob: -2.648073196411133
    4. '<|end|>' → logprob: -4.148073196411133
    5. '+' → logprob: -4.398073196411133
    6. '#' → logprob: -5.148073196411133
    7. ' 
' → logprob: -5.398073196411133
    8. '    ' → logprob: -5.523073196411133
    9. '\n' → logprob: -6.023073196411133
    10. ' ' → logprob: -6.398073196411133

Token 41: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03167633339762688
    2. '   ' → logprob: -4.781676292419434
    3. 'if' → logprob: -4.906676292419434
    4. ' if' → logprob: -5.156676292419434
    5. '    
' → logprob: -5.531676292419434
    6. '<|end|>' → logprob: -6.906676292419434
    7. '  
' → logprob: -7.031676292419434
    8. '
' → logprob: -7.406676292419434
    9. ' 
' → logprob: -7.406676292419434
    10. 'print' → logprob: -7.656676292419434

Token 42: ' first' (ID: 1577)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3936043977737427
    2. 'min' → logprob: -1.7686043977737427
    3. 'print' → logprob: -3.018604278564453
    4. '   ' → logprob: -3.018604278564453
    5. 'for' → logprob: -3.143604278564453
    6. ' if' → logprob: -5.643604278564453
    7. 'excluded' → logprob: -6.393604278564453
    8. 'exclude' → logprob: -6.643604278564453
    9. 'max' → logprob: -7.018604278564453
    10. 'minimum' → logprob: -7.143604278564453

Token 43: ' =' (ID: 314)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.6994981169700623
    2. '_' → logprob: -1.449498176574707
    3. '_number' → logprob: -2.074498176574707
    4. '_term' → logprob: -2.824498176574707
    5. '_part' → logprob: -3.074498176574707
    6. '_value' → logprob: -5.074498176574707
    7. '_element' → logprob: -5.324498176574707
    8. '_s' → logprob: -6.074498176574707
    9. '_n' → logprob: -6.074498176574707
    10. '_missing' → logprob: -6.074498176574707

Token 44: ' L' (ID: 451)
  Prédit: ' L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.44997385144233704
    2. 'L' → logprob: -1.3249738216400146
    3. ' max' → logprob: -2.9499738216400146
    4. 'max' → logprob: -3.8249738216400146
    5. ' total' → logprob: -4.824974060058594
    6. 'total' → logprob: -4.824974060058594
    7. ' ' → logprob: -6.324974060058594
    8. ' min' → logprob: -6.699974060058594
    9. '0' → logprob: -7.449974060058594
    10. 'min' → logprob: -7.699974060058594

Token 45: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3815682530403137
    2. '<|end|>' → logprob: -1.256568193435669
    3. ' +' → logprob: -4.131568431854248
    4. ' if' → logprob: -4.756568431854248
    5. '<|end|>' → logprob: -5.631568431854248
    6. 'if' → logprob: -5.881568431854248
    7. ' ' → logprob: -7.756568431854248
    8. '-' → logprob: -7.756568431854248
    9. ' -' → logprob: -9.00656795501709
    10. '>' → logprob: -9.25656795501709

Token 46: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.315566748380661
    2. 'if' → logprob: -1.6905667781829834
    3. ' if' → logprob: -2.9405667781829834
    4. ' +' → logprob: -4.440566539764404
    5. '<|end|>' → logprob: -4.940566539764404
    6. '-' → logprob: -5.190566539764404
    7. '
' → logprob: -5.940566539764404
    8. '   ' → logprob: -6.565566539764404
    9. 'for' → logprob: -7.315566539764404
    10. 'first' → logprob: -7.440566539764404

Token 47: ' last' (ID: 2174)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3294905722141266
    2. '+' → logprob: -1.5794905424118042
    3. ' if' → logprob: -3.0794906616210938
    4. '   ' → logprob: -4.579490661621094
    5. 'for' → logprob: -4.579490661621094
    6. 'print' → logprob: -5.704490661621094
    7. ' +' → logprob: -6.579490661621094
    8. ' for' → logprob: -7.579490661621094
    9. 'while' → logprob: -7.829490661621094
    10. '-' → logprob: -8.079490661621094

Token 48: ' =' (ID: 314)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.06648960709571838
    2. '+' → logprob: -2.9414896965026855
    3. ' =' → logprob: -4.5664896965026855
    4. ' ' → logprob: -7.6914896965026855
    5. '=' → logprob: -7.6914896965026855
    6. '<|end|>' → logprob: -9.441489219665527
    7. ' +=' → logprob: -9.816489219665527
    8. ' +
' → logprob: -10.816489219665527
    9. '    ' → logprob: -11.066489219665527
    10. '_' → logprob: -11.566489219665527

Token 49: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.11926146596670151
    2. ' L' → logprob: -2.2442615032196045
    3. '   ' → logprob: -5.119261264801025
    4. 'first' → logprob: -8.619261741638184
    5. ' first' → logprob: -8.619261741638184
    6. '+' → logprob: -11.119261741638184
    7. ' ' → logprob: -11.369261741638184
    8. '    ' → logprob: -11.369261741638184
    9. '	L' → logprob: -11.494261741638184
    10. ' +' → logprob: -12.244261741638184

Token 50: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.25196540355682373
    2. '+' → logprob: -1.5019654035568237
    3. '   ' → logprob: -11.376965522766113
    4. ' ' → logprob: -12.126965522766113
    5. '<|end|>' → logprob: -12.251965522766113
    6. '```' → logprob: -12.626965522766113
    7. '+n' → logprob: -12.876965522766113
    8. ' +
' → logprob: -13.126965522766113
    9. '+
' → logprob: -13.751965522766113
    10. ' plus' → logprob: -13.876965522766113

Token 51: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.22553087770938873
    2. 'N' → logprob: -1.6005308628082275
    3. ' (' → logprob: -9.725530624389648
    4. ' ' → logprob: -10.225530624389648
    5. '(' → logprob: -11.475530624389648
    6. '   ' → logprob: -12.475530624389648
    7. '(N' → logprob: -12.850530624389648
    8. '1' → logprob: -13.350530624389648
    9. '<|end|>' → logprob: -13.725530624389648
    10. '	N' → logprob: -14.100530624389648

Token 52: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.012666327878832817
    2. ' -' → logprob: -4.63766622543335
    3. '<|end|>' → logprob: -6.01266622543335
    4. '```' → logprob: -8.387666702270508
    5. '<|end|>' → logprob: -9.262666702270508
    6. '
' → logprob: -9.387666702270508
    7. ' ' → logprob: -10.762666702270508
    8. '   ' → logprob: -11.387666702270508
    9. 'def' → logprob: -12.887666702270508
    10. '  ' → logprob: -13.262666702270508

Token 53: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009190816199406981
    2. ' ' → logprob: -7.000918865203857
    3. '   ' → logprob: -12.125919342041016
    4. '<|end|>' → logprob: -14.000919342041016
    5. '```' → logprob: -15.500919342041016
    6. '2' → logprob: -15.500919342041016
    7. '  ' → logprob: -15.750919342041016
    8. '<|end|>' → logprob: -15.750919342041016
    9. '    ' → logprob: -16.375919342041016
    10. '0' → logprob: -16.500919342041016

Token 54: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.802049756515771e-05
    2. ' ' → logprob: -9.625067710876465
    3. '<|end|>' → logprob: -14.250067710876465
    4. '2' → logprob: -14.750067710876465
    5. '   ' → logprob: -15.000067710876465
    6. '```' → logprob: -15.125067710876465
    7. '0' → logprob: -16.50006866455078
    8. '-' → logprob: -17.18756866455078
    9. '  ' → logprob: -17.56256866455078
    10. '<|end|>' → logprob: -17.87506866455078

Token 55: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2290262132883072
    2. '   ' → logprob: -1.854026198387146
    3. '    
' → logprob: -3.8540263175964355
    4. '<|end|>' → logprob: -3.8540263175964355
    5. ')' → logprob: -6.1040263175964355
    6. '  
' → logprob: -7.2290263175964355
    7. '<|end|>' → logprob: -7.7290263175964355
    8. '   
' → logprob: -7.8540263175964355
    9. '

' → logprob: -8.104025840759277
    10. '```' → logprob: -8.354025840759277

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13770464062690735
    2. '
' → logprob: -2.262704610824585
    3. '    
' → logprob: -4.012704849243164
    4. '<|end|>' → logprob: -5.512704849243164
    5. 'if' → logprob: -6.887704849243164
    6. ' if' → logprob: -7.012704849243164
    7. '    ' → logprob: -9.137704849243164
    8. '```' → logprob: -9.637704849243164
    9. ' 
' → logprob: -9.762704849243164
    10. '<|end|>' → logprob: -9.887704849243164

Token 57: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6811977624893188
    2. 'if' (adapté à ' if') → logprob: -1.0561977624893188
    3. '   ' → logprob: -2.3061976432800293
    4. 'for' → logprob: -4.181197643280029
    5. ' for' → logprob: -4.181197643280029
    6. 'i' → logprob: -4.931197643280029
    7. 'print' → logprob: -6.431197643280029
    8. ' i' → logprob: -6.806197643280029
    9. ' print' → logprob: -6.931197643280029
    10. 'm' → logprob: -7.056197643280029

Token 58: ' first' (ID: 1577)
  Prédit: ' first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' first' → logprob: -0.18081164360046387
    2. ' total' → logprob: -3.180811643600464
    3. 'first' → logprob: -3.180811643600464
    4. ' L' → logprob: -3.305811643600464
    5. ' N' → logprob: -3.805811643600464
    6. ' abs' → logprob: -4.555811882019043
    7. ' last' → logprob: -5.805811882019043
    8. 'total' → logprob: -5.805811882019043
    9. 'L' → logprob: -6.180811882019043
    10. ' ' → logprob: -6.430811882019043

Token 59: ' >' (ID: 1424)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -1.1279000043869019
    2. ' ==' → logprob: -1.6279000043869019
    3. '>' → logprob: -2.0029001235961914
    4. ' >' → logprob: -2.3779001235961914
    5. '<' → logprob: -2.5029001235961914
    6. ' <' → logprob: -2.7529001235961914
    7. '<=' → logprob: -3.1279001235961914
    8. ' <=' → logprob: -3.5029001235961914
    9. '>=' → logprob: -4.002900123596191
    10. ' >=' → logprob: -4.502900123596191

Token 60: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20299935340881348
    2. ' ' → logprob: -1.7029993534088135
    3. 'last' → logprob: -7.077999114990234
    4. '-' → logprob: -8.202999114990234
    5. '1' → logprob: -8.327999114990234
    6. '=' → logprob: -9.077999114990234
    7. ' last' → logprob: -10.202999114990234
    8. ' -' → logprob: -11.077999114990234
    9. '```' → logprob: -11.702999114990234
    10. '2' → logprob: -11.702999114990234

Token 61: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.019492246210575104
    2. ' ' → logprob: -4.019492149353027
    3. '-' → logprob: -7.519492149353027
    4. 'last' → logprob: -7.519492149353027
    5. '1' → logprob: -8.894492149353027
    6. '=' → logprob: -9.644492149353027
    7. '```' → logprob: -11.394492149353027
    8. ' -' → logprob: -11.769492149353027
    9. ' last' → logprob: -12.019492149353027
    10. '   ' → logprob: -12.581992149353027

Token 62: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006815764936618507
    2. ' or' → logprob: -8.00068187713623
    3. ' :' → logprob: -8.62568187713623
    4. ':
' → logprob: -8.87568187713623
    5. ' and' → logprob: -10.87568187713623
    6. ':return' → logprob: -12.87568187713623
    7. 'or' → logprob: -13.25068187713623
    8. '):' → logprob: -14.25068187713623
    9. '.' → logprob: -14.62568187713623
    10. ',' → logprob: -14.62568187713623

Token 63: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07435484975576401
    2. '   ' → logprob: -3.199354887008667
    3. ':
' → logprob: -4.449354648590088
    4. 'print' → logprob: -4.699354648590088
    5. '       ' → logprob: -5.824354648590088
    6. ' print' → logprob: -5.824354648590088
    7. '
' → logprob: -5.949354648590088
    8. '.' → logprob: -7.824354648590088
    9. '):
' → logprob: -8.699355125427246
    10. '):' → logprob: -8.949355125427246

Token 64: ' result' (ID: 1534)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.35826539993286133
    2. '   ' → logprob: -1.7332653999328613
    3. ' print' → logprob: -2.1082653999328613
    4. '       ' → logprob: -6.983265399932861
    5. ' total' → logprob: -7.608265399932861
    6. 'total' → logprob: -7.733265399932861
    7. '```' → logprob: -8.358264923095703
    8. 'result' (adapté à ' result') → logprob: -8.358264923095703
    9. '
' → logprob: -8.733264923095703
    10. ' result' → logprob: -9.108264923095703

Token 65: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014187720604240894
    2. '=' → logprob: -4.264187812805176
    3. ' ' → logprob: -11.139187812805176
    4. ' -=' → logprob: -12.139187812805176
    5. ' +=' → logprob: -13.264187812805176
    6. '＝' → logprob: -14.639187812805176
    7. ',' → logprob: -15.389187812805176
    8. '_' → logprob: -15.514187812805176
    9. '"' → logprob: -15.764187812805176
    10. ' ' → logprob: -15.826687812805176

Token 66: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.3485652506351471
    2. 'total' → logprob: -1.2235652208328247
    3. ' ' → logprob: -10.598565101623535
    4. '   ' → logprob: -10.598565101623535
    5. ' first' → logprob: -10.973565101623535
    6. '(total' → logprob: -11.223565101623535
    7. 'first' → logprob: -11.848565101623535
    8. ' min' → logprob: -12.723565101623535
    9. 'str' → logprob: -12.848565101623535
    10. ' tot' → logprob: -12.973565101623535

Token 67: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.1160349458805285e-05
    2. '_' → logprob: -12.125011444091797
    3. 'sum' → logprob: -12.500011444091797
    4. '_s' → logprob: -14.375011444091797
    5. '-' → logprob: -15.125011444091797
    6. '_-' → logprob: -15.250011444091797
    7. '-_' → logprob: -15.375011444091797
    8. ' _' → logprob: -15.750011444091797
    9. '-s' → logprob: -15.750011444091797
    10. ' -' → logprob: -17.125011444091797

Token 68: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4292448163032532
    2. '-' → logprob: -1.0542447566986084
    3. ' ' → logprob: -8.804244995117188
    4. '-ex' → logprob: -9.054244995117188
    5. '-end' → logprob: -9.304244995117188
    6. '-first' → logprob: -10.304244995117188
    7. ')' → logprob: -10.429244995117188
    8. '<|end|>' → logprob: -10.679244995117188
    9. ' else' → logprob: -11.304244995117188
    10. '   ' → logprob: -11.804244995117188

Token 69: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.10059309750795364
    2. ' first' → logprob: -2.350593090057373
    3. 'last' → logprob: -8.225593566894531
    4. ' last' → logprob: -9.475593566894531
    5. '	first' → logprob: -10.975593566894531
    6. ' ' → logprob: -11.850593566894531
    7. '   ' → logprob: -13.100593566894531
    8. '```' → logprob: -13.225593566894531
    9. 'f' → logprob: -13.350593566894531
    10. '<|end|>' → logprob: -13.600593566894531

Token 70: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 71: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.1115554571151733
    2. 'else' → logprob: -1.1115554571151733
    3. ' else' → logprob: -2.236555576324463
    4. '+' → logprob: -2.361555576324463
    5. '
' → logprob: -2.986555576324463
    6. '<|end|>' → logprob: -3.361555576324463
    7. '```' → logprob: -4.111555576324463
    8. ')' → logprob: -4.986555576324463
    9. '0' → logprob: -5.486555576324463
    10. '1' → logprob: -5.736555576324463

Token 72: ' elif' (ID: 9497)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.6536601781845093
    2. ' else' → logprob: -0.7786601781845093
    3. 'elif' (adapté à ' elif') → logprob: -4.403660297393799
    4. ' elif' → logprob: -4.778660297393799
    5. ':' → logprob: -9.65365982055664
    6. '*' → logprob: -10.65365982055664
    7. ' ' → logprob: -10.65365982055664
    8. '_else' → logprob: -11.15365982055664
    9. 'lse' → logprob: -11.40365982055664
    10. 'print' → logprob: -11.77865982055664

Token 73: ' last' (ID: 2174)
  Prédit: ' last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' last' → logprob: -0.0015689032152295113
    2. ' first' → logprob: -6.876568794250488
    3. 'last' → logprob: -7.876568794250488
    4. ' ' → logprob: -8.876568794250488
    5. 'first' → logprob: -12.501568794250488
    6. ' L' → logprob: -13.126568794250488
    7. '0' → logprob: -13.501568794250488
    8. ' second' → logprob: -13.626568794250488
    9. ':last' → logprob: -13.626568794250488
    10. '_last' → logprob: -14.001568794250488

Token 74: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.010400339961051941
    2. '<' → logprob: -4.760400295257568
    3. ' >' → logprob: -6.510400295257568
    4. ' <=' → logprob: -8.635400772094727
    5. '>' → logprob: -9.760400772094727
    6. ' ' → logprob: -10.385400772094727
    7. ' >=' → logprob: -12.197900772094727
    8. '<=' → logprob: -12.322900772094727
    9. '<|end|>' → logprob: -13.260400772094727
    10. '<int' → logprob: -13.447900772094727

Token 75: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16028505563735962
    2. ' ' → logprob: -1.9102849960327148
    3. '=' → logprob: -10.535284996032715
    4. '1' → logprob: -11.410284996032715
    5. '   ' → logprob: -12.035284996032715
    6. '<|end|>' → logprob: -12.285284996032715
    7. '  ' → logprob: -13.285284996032715
    8. '-' → logprob: -13.660284996032715
    9. 's' → logprob: -13.972784996032715
    10. ' zero' → logprob: -14.035284996032715

Token 76: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004086828324943781
    2. ' ' → logprob: -5.504086971282959
    3. '1' → logprob: -12.7540864944458
    4. '   ' → logprob: -13.1290864944458
    5. '=' → logprob: -13.3790864944458
    6. '<|end|>' → logprob: -14.7540864944458
    7. '  ' → logprob: -15.3790864944458
    8. '```' → logprob: -15.5040864944458
    9. 's' → logprob: -15.8790864944458
    10. ' zero' → logprob: -16.129087448120117

Token 77: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11321985721588135
    2. ':
' → logprob: -2.238219738006592
    3. '       ' → logprob: -8.11322021484375
    4. '   ' → logprob: -10.61322021484375
    5. '<|end|>' → logprob: -10.61322021484375
    6. ':

' → logprob: -10.98822021484375
    7. '):
' → logprob: -11.48822021484375
    8. ' :
' → logprob: -11.86322021484375
    9. ' :' → logprob: -12.36322021484375
    10. ',' → logprob: -13.61322021484375

Token 78: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09069065004587173
    2. ':' → logprob: -3.0906906127929688
    3. ':
' → logprob: -3.4656906127929688
    4. '   ' → logprob: -4.840690612792969
    5. '
' → logprob: -7.465690612792969
    6. '<|end|>' → logprob: -7.465690612792969
    7. '):
' → logprob: -8.840690612792969
    8. '        
' → logprob: -8.965690612792969
    9. '```' → logprob: -9.090690612792969
    10. '        ' → logprob: -9.215690612792969

Token 79: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.38743114471435547
    2. 'result' (adapté à ' result') → logprob: -1.1374311447143555
    3. '       ' → logprob: -7.7624311447143555
    4. '	result' → logprob: -10.137431144714355
    5. '   ' → logprob: -10.762431144714355
    6. '
' → logprob: -11.262431144714355
    7. ' ' → logprob: -11.262431144714355
    8. ',' → logprob: -11.387431144714355
    9. '    ' → logprob: -11.887431144714355
    10. '_result' → logprob: -12.262431144714355

Token 80: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003600544296205044
    2. '=' → logprob: -5.628600597381592
    3. ' ' → logprob: -14.753600120544434
    4. ' +=' → logprob: -17.00360107421875
    5. '_' → logprob: -18.25360107421875
    6. ' ' → logprob: -19.37860107421875
    7. ' =
' → logprob: -19.50360107421875
    8. '   ' → logprob: -19.87860107421875
    9. '＝' → logprob: -19.87860107421875
    10. ' ==' → logprob: -20.00360107421875

Token 81: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.01113353855907917
    2. 'total' → logprob: -4.511133670806885
    3. ' last' → logprob: -9.886133193969727
    4. ' tota' → logprob: -11.261133193969727
    5. ' ' → logprob: -11.386133193969727
    6. '	total' → logprob: -12.636133193969727
    7. '(total' → logprob: -12.886133193969727
    8. ' tot' → logprob: -13.011133193969727
    9. 'last' → logprob: -14.636133193969727
    10. ' ' → logprob: -15.136133193969727

Token 82: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.7432603272027336e-06
    2. 'sum' → logprob: -13.750001907348633
    3. '_' → logprob: -14.500001907348633
    4. '_s' → logprob: -16.000001907348633
    5. 'Sum' → logprob: -17.500001907348633
    6. '-' → logprob: -18.125001907348633
    7. '_-' → logprob: -18.500001907348633
    8. ' _' → logprob: -18.875001907348633
    9. '_last' → logprob: -19.125001907348633
    10. '__' → logprob: -19.125001907348633

Token 83: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.05129677429795265
    2. '-' → logprob: -3.0512967109680176
    3. '+' → logprob: -6.551296710968018
    4. ' +' → logprob: -7.301296710968018
    5. ' else' → logprob: -7.676296710968018
    6. 'else' → logprob: -9.176297187805176
    7. ' elif' → logprob: -11.301297187805176
    8. '   ' → logprob: -11.426297187805176
    9. ' ' → logprob: -12.551297187805176
    10. 'elif' → logprob: -12.801297187805176

Token 84: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.3132671117782593
    2. ' last' → logprob: -1.3132671117782593
    3. '(last' → logprob: -13.43826675415039
    4. ':last' → logprob: -13.43826675415039
    5. '[last' → logprob: -13.81326675415039
    6. '	last' → logprob: -13.81326675415039
    7. ' ' → logprob: -15.68826675415039
    8. '   ' → logprob: -15.81326675415039
    9. '_last' → logprob: -17.06326675415039
    10. 'lasti' → logprob: -17.93826675415039

Token 85: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5936238765716553
    2. 'else' → logprob: -0.9686238765716553
    3. ' else' → logprob: -2.7186238765716553
    4. '	else' → logprob: -6.218624114990234
    5. '_else' → logprob: -10.343624114990234
    6. '<|end|>' → logprob: -10.843624114990234
    7. '```' → logprob: -11.343624114990234
    8. ')' → logprob: -11.593624114990234
    9. 'elif' → logprob: -11.843624114990234
    10. '+' → logprob: -11.843624114990234

Token 86: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.057158783078193665
    2. 'else' → logprob: -3.0571587085723877
    3. ' else' → logprob: -4.807158946990967
    4. '	else' → logprob: -8.182158470153809
    5. '<|end|>' → logprob: -10.432158470153809
    6. '    
' → logprob: -10.682158470153809
    7. '```' → logprob: -10.932158470153809
    8. '_else' → logprob: -12.307158470153809
    9. '<|end|>' → logprob: -13.182158470153809
    10. 'elif' → logprob: -13.182158470153809

Token 87: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.10045919567346573
    2. '   ' → logprob: -2.600459098815918
    3. ' else' → logprob: -3.850459098815918
    4. '	else' → logprob: -9.725459098815918
    5. '_else' → logprob: -12.850459098815918
    6. '```' → logprob: -13.100459098815918
    7. 'e' → logprob: -13.725459098815918
    8. '    
' → logprob: -14.350459098815918
    9. 'elif' → logprob: -14.475459098815918
    10. ')' → logprob: -14.475459098815918

Token 88: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012541553005576134
    2. ':
' → logprob: -4.387541770935059
    3. '       ' → logprob: -10.887541770935059
    4. ':
' → logprob: -11.887541770935059
    5. '   ' → logprob: -12.762541770935059
    6. ':return' → logprob: -13.262541770935059
    7. ':

' → logprob: -14.137541770935059
    8. ' :' → logprob: -15.387541770935059
    9. ',' → logprob: -15.887541770935059
    10. ':\' → logprob: -16.012540817260742

Token 89: '       ' (ID: 309)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.12120798975229263
    2. '   ' → logprob: -2.6212079524993896
    3. '       ' → logprob: -3.9962079524993896
    4. '0' → logprob: -4.246208190917969
    5. '
' → logprob: -5.371208190917969
    6. ' result' → logprob: -6.496208190917969
    7. '    
' → logprob: -7.496208190917969
    8. 'print' → logprob: -7.621208190917969
    9. ':
' → logprob: -7.996208190917969
    10. '        
' → logprob: -8.121208190917969

Token 90: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.10911130905151367
    2. ' result' → logprob: -2.3591113090515137
    3. '   ' → logprob: -5.609111309051514
    4. 'print' → logprob: -5.609111309051514
    5. '0' → logprob: -6.984111309051514
    6. ' print' → logprob: -7.734111309051514
    7. ' ' → logprob: -9.859111785888672
    8. '```' → logprob: -9.859111785888672
    9. '1' → logprob: -10.984111785888672
    10. '    
' → logprob: -11.109111785888672

Token 91: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020947456359863
    2. '=' → logprob: -2.3502094745635986
    3. ' =
' → logprob: -13.60020923614502
    4. ' ' → logprob: -13.85020923614502
    5. ')' → logprob: -16.100210189819336
    6. '=
' → logprob: -16.725210189819336
    7. ' +=' → logprob: -16.725210189819336
    8. '=

' → logprob: -16.725210189819336
    9. '<|end|>' → logprob: -16.850210189819336
    10. '   ' → logprob: -16.975210189819336

Token 92: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.053102392703294754
    2. 'max' → logprob: -3.303102493286133
    3. '0' → logprob: -4.428102493286133
    4. ' total' → logprob: -6.178102493286133
    5. ' max' → logprob: -7.928102493286133
    6. 'tot' → logprob: -8.803102493286133
    7. ' ' → logprob: -9.553102493286133
    8. 'to' → logprob: -9.678102493286133
    9. 't' → logprob: -10.053102493286133
    10. 'L' → logprob: -10.303102493286133

Token 93: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.00021402664424385875
    2. 'sum' → logprob: -8.500213623046875
    3. '_' → logprob: -11.750213623046875
    4. '_s' → logprob: -14.375213623046875
    5. 'result' → logprob: -15.000213623046875
    6. ' sum' → logprob: -15.250213623046875
    7. 'Sum' → logprob: -15.250213623046875
    8. '_result' → logprob: -15.375213623046875
    9. ')' → logprob: -15.500213623046875
    10. 'a' → logprob: -16.250213623046875

Token 94: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018259541830047965
    2. '
' → logprob: -7.12682580947876
    3. '    
' → logprob: -7.37682580947876
    4. '<|end|>' → logprob: -8.501826286315918
    5. 'print' → logprob: -9.001826286315918
    6. '```' → logprob: -10.626826286315918
    7. '        
' → logprob: -11.876826286315918
    8. '<|end|>' → logprob: -11.876826286315918
    9. 'return' → logprob: -12.626826286315918
    10. ' print' → logprob: -12.626826286315918

Token 95: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000891928793862462
    2. '<|end|>' → logprob: -7.625892162322998
    3. 'print' → logprob: -8.12589168548584
    4. 'return' → logprob: -9.75089168548584
    5. '    
' → logprob: -11.37589168548584
    6. '```' → logprob: -11.50089168548584
    7. ' return' → logprob: -11.87589168548584
    8. ')' → logprob: -12.50089168548584
    9. 'if' → logprob: -13.00089168548584
    10. '<|end|>' → logprob: -13.12589168548584

Token 96: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.008672245778143406
    2. '   ' → logprob: -4.75867223739624
    3. ' print' → logprob: -10.008672714233398
    4. 'return' → logprob: -11.883672714233398
    5. '```' → logprob: -12.133672714233398
    6. 'if' → logprob: -15.758672714233398
    7. '    
' → logprob: -15.883672714233398
    8. '  ' → logprob: -17.0086727142334
    9. ' ' → logprob: -17.1336727142334
    10. '``' → logprob: -17.2586727142334

Token 97: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.029912592843174934
    2. '(result' → logprob: -3.5299127101898193
    3. '()' → logprob: -10.029912948608398
    4. '(total' → logprob: -10.029912948608398
    5. '('' → logprob: -10.279912948608398
    6. '("("' → logprob: -10.779912948608398
    7. '(
' → logprob: -11.529912948608398
    8. '(`' → logprob: -13.154912948608398
    9. '((' → logprob: -13.404912948608398
    10. '(

' → logprob: -13.654912948608398

Token 98: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -16.25
    3. '))' → logprob: -17.375
    4. ')
' → logprob: -17.5
    5. ')`' → logprob: -18.625
    6. '()' → logprob: -19.625
    7. ')}' → logprob: -20.625
    8. '')' → logprob: -20.75
    9. '())' → logprob: -20.875
    10. '）' → logprob: -20.875

Token 99: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 100: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.000656081538181752
    2. '__' → logprob: -7.5006561279296875
    3. ' ' → logprob: -9.250656127929688
    4. ' ' → logprob: -12.500656127929688
    5. '_' → logprob: -13.375656127929688
    6. ' _' → logprob: -13.625656127929688
    7. ' ' → logprob: -16.000656127929688
    8. '  ' → logprob: -16.250656127929688
    9. '_name' → logprob: -16.500656127929688
    10. ' ___' → logprob: -16.625656127929688

Token 101: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.02715245820581913
    2. '__.__' → logprob: -4.2771525382995605
    3. '.__' → logprob: -5.0271525382995605
    4. '==' → logprob: -5.7771525382995605
    5. '__.' → logprob: -6.6521525382995605
    6. '.' → logprob: -7.0271525382995605
    7. ' ==' → logprob: -7.4021525382995605
    8. '```' → logprob: -9.277152061462402
    9. ' __' → logprob: -9.527152061462402
    10. '_' → logprob: -10.152152061462402

Token 102: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0011851112358272076
    2. '__.__' → logprob: -6.751184940338135
    3. '__.' → logprob: -11.501185417175293
    4. '_' → logprob: -13.376185417175293
    5. '==' → logprob: -13.501185417175293
    6. '__
' → logprob: -14.626185417175293
    7. '__["' → logprob: -14.751185417175293
    8. '__("' → logprob: -15.376185417175293
    9. '___' → logprob: -15.501185417175293
    10. '__('' → logprob: -15.876185417175293

Token 103: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5462740659713745
    2. ' ==' → logprob: -0.9212740659713745
    3. '==' → logprob: -4.046274185180664
    4. '=="' → logprob: -6.171274185180664
    5. '_' → logprob: -6.546274185180664
    6. '__.__' → logprob: -7.046274185180664
    7. '=='' → logprob: -7.921274185180664
    8. '.__' → logprob: -8.046274185180664
    9. ' =="' → logprob: -9.671274185180664
    10. '___' → logprob: -10.046274185180664

Token 104: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.10038501769304276
    2. ''' → logprob: -2.3503849506378174
    3. ' "__' → logprob: -8.725384712219238
    4. '__' → logprob: -11.725384712219238
    5. ' '__' → logprob: -11.850384712219238
    6. ' "' → logprob: -15.600384712219238
    7. '"user' → logprob: -15.600384712219238
    8. '"name' → logprob: -15.975384712219238
    9. '"class' → logprob: -17.100385665893555
    10. ''"' → logprob: -17.225385665893555

Token 105: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -3.082895273109898e-05
    2. 'name' → logprob: -11.000030517578125
    3. '__' → logprob: -11.375030517578125
    4. ' main' → logprob: -14.250030517578125
    5. '"' → logprob: -14.375030517578125
    6. 'py' → logprob: -15.625030517578125
    7. 'ma' → logprob: -15.625030517578125
    8. 'm' → logprob: -16.000030517578125
    9. 'python' → logprob: -16.000030517578125
    10. '	main' → logprob: -16.125030517578125

Token 106: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.5762474536895752
    2. '__' → logprob: -0.8262474536895752
    3. '__:' → logprob: -8.951247215270996
    4. '__':
' → logprob: -9.576247215270996
    5. '_' → logprob: -9.826247215270996
    6. '__["' → logprob: -10.701247215270996
    7. '__.' → logprob: -10.951247215270996
    8. '__.__' → logprob: -12.076247215270996
    9. '__("' → logprob: -12.576247215270996
    10. '__",' → logprob: -13.451247215270996

Token 107: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.028567546978592873
    2. 'main' → logprob: -4.028567314147949
    3. '   ' → logprob: -4.778567314147949
    4. '	main' → logprob: -6.278567314147949
    5. '    
' → logprob: -10.65356731414795
    6. '_main' → logprob: -10.90356731414795
    7. ' ' → logprob: -11.52856731414795
    8. '__' → logprob: -12.15356731414795
    9. '```' → logprob: -12.40356731414795
    10. '(main' → logprob: -12.52856731414795

Token 108: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.00020389800192788243
    2. ' main' → logprob: -8.500204086303711
    3. '	main' → logprob: -15.000204086303711
    4. '   ' → logprob: -16.25020408630371
    5. '_main' → logprob: -20.50020408630371
    6. '.main' → logprob: -20.62520408630371
    7. ' ' → logprob: -21.25020408630371
    8. '  ' → logprob: -21.50020408630371
    9. '(main' → logprob: -22.00020408630371
    10. 'ma' → logprob: -22.50020408630371

Token 109: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 107
Tokens correctement prédits (1ère position, stricte): 45
Tokens correctement prédits (1ère position, avec adaptation): 49
Tokens correctement prédits (top 10): 85
Précision stricte (1ère position): 42.06%
Précision adaptée (1ère position): 45.79%
Précision (top 10): 79.44%
================================================================================
