================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:06:19
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from bisect import bisect_left

def solve():
    n = int(input())
    # Generate triangular numbers up to just past 'n'
    tri_nums = [0]
    s = 0
    for i in range(1, int((2*n)**0.5)+3):
        s += i
        tri_nums.append(s)
        if s >= n:
            break

    idx = bisect_left(tri_nums, n)
    if idx >= len(tri_nums) or tri_nums[idx] != n:
        print('No')
        return

    k = idx
    from itertools import combinations

    ans = [[] for _ in range(k)]
    for cnt, (i, j) in enumerate(combinations(range(k), 2), 1):
        ans[i].append(cnt)
        ans[j].append(cnt)
    print('Yes')
    print(k)
    print('\n'.join(f"{k-1} {' '.join(map(str, row))}" for row in ans))

solve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' bis' (ID: 7204)
  → Token d'amorce (pas de prédiction)

Token 2: 'ect' (ID: 534)
  → Token d'amorce (pas de prédiction)

Token 3: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.055610984563827515
    2. 'import' → logprob: -2.9306108951568604
    3. '.' → logprob: -7.4306111335754395
    4. ' ' → logprob: -9.555610656738281
    5. '_import' → logprob: -10.805610656738281
    6. '.import' → logprob: -11.055610656738281
    7. '_' → logprob: -11.680610656738281
    8. ' .' → logprob: -11.805610656738281
    9. '```' → logprob: -12.430610656738281
    10. '	import' → logprob: -13.305610656738281

Token 4: ' bis' (ID: 7204)
  Prédit: 'ins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.580363929271698
    2. 'bis' → logprob: -0.830363929271698
    3. ' bis' → logprob: -5.455363750457764
    4. ' ins' → logprob: -9.705364227294922
    5. '```' → logprob: -9.705364227294922
    6. '_ins' → logprob: -11.205364227294922
    7. 'b' → logprob: -13.955364227294922
    8. 'import' → logprob: -14.080364227294922
    9. '.ins' → logprob: -14.080364227294922
    10. 'in' → logprob: -14.205364227294922

Token 5: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.0019508942496031523
    2. 'e' → logprob: -6.251950740814209
    3. 'ec' → logprob: -11.126951217651367
    4. 'ct' → logprob: -12.626951217651367
    5. 'ectl' → logprob: -13.626951217651367
    6. 'ext' → logprob: -14.251951217651367
    7. 't' → logprob: -14.626951217651367
    8. 'sect' → logprob: -14.626951217651367
    9. 'ected' → logprob: -14.876951217651367
    10. 'n' → logprob: -15.376951217651367

Token 6: '_left' (ID: 22189)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.045463647693395615
    2. '.' → logprob: -3.1704635620117188
    3. '_' → logprob: -6.295463562011719
    4. '\(' → logprob: -9.045463562011719
    5. ',' → logprob: -9.420463562011719
    6. '`' → logprob: -9.920463562011719
    7. '```' → logprob: -9.920463562011719
    8. '.b' → logprob: -10.045463562011719
    9. '(
' → logprob: -10.295463562011719
    10. ' (' → logprob: -10.545463562011719

Token 7: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00033784625702537596
    2. '(
' → logprob: -8.500337600708008
    3. '\(' → logprob: -9.250337600708008
    4. '(

' → logprob: -11.125337600708008
    5. '\n' → logprob: -11.875337600708008
    6. '\' → logprob: -12.750337600708008
    7. ' (' → logprob: -13.000337600708008
    8. ',' → logprob: -13.125337600708008
    9. '`' → logprob: -13.250337600708008
    10. '()' → logprob: -13.750337600708008

Token 8: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0018115561688318849
    2. '(
' → logprob: -6.626811504364014
    3. '\n' → logprob: -8.376811981201172
    4. '\(' → logprob: -9.376811981201172
    5. '\' → logprob: -10.626811981201172
    6. '
' → logprob: -10.751811981201172
    7. ',' → logprob: -10.876811981201172
    8. '(

' → logprob: -11.001811981201172
    9. 'def' → logprob: -11.626811981201172
    10. '.' → logprob: -11.626811981201172

Token 9: ' solve' (ID: 17722)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2010408490896225
    2. '_' → logprob: -2.451040744781494
    3. ' _' → logprob: -3.451040744781494
    4. ' ' → logprob: -3.701040744781494
    5. ' find' → logprob: -4.451040744781494
    6. '_insert' → logprob: -5.076040744781494
    7. '_find' → logprob: -5.201040744781494
    8. ' insert' → logprob: -5.576040744781494
    9. ' bis' → logprob: -6.576040744781494
    10. ' add' → logprob: -6.951040744781494

Token 10: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06743815541267395
    2. '_' → logprob: -3.0674381256103516
    3. '```' → logprob: -4.567438125610352
    4. '():' → logprob: -5.817438125610352
    5. ':' → logprob: -6.567438125610352
    6. '(_:' → logprob: -7.067438125610352
    7. '(:' → logprob: -7.317438125610352
    8. '_:' → logprob: -7.692438125610352
    9. '(_' → logprob: -8.317438125610352
    10. '(
' → logprob: -8.942438125610352

Token 11: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08357938379049301
    2. '    
' → logprob: -3.2085793018341064
    3. '    ' → logprob: -4.8335795402526855
    4. '\' → logprob: -4.9585795402526855
    5. '(' → logprob: -5.0835795402526855
    6. ' ' → logprob: -5.4585795402526855
    7. ' 
' → logprob: -5.5835795402526855
    8. '[' → logprob: -5.9585795402526855
    9. '```' → logprob: -6.2085795402526855
    10. '<|end|>' → logprob: -6.5835795402526855

Token 12: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.9495570063591003
    2. ' n' → logprob: -1.0745570659637451
    3. '   ' → logprob: -1.9495570659637451
    4. 'data' → logprob: -3.449557065963745
    5. ' array' → logprob: -4.199556827545166
    6. ' data' → logprob: -4.324556827545166
    7. 'array' → logprob: -4.449556827545166
    8. 'target' → logprob: -4.449556827545166
    9. 'input' → logprob: -4.574556827545166
    10. ' target' → logprob: -4.824556827545166

Token 13: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25024324655532837
    2. ' ' → logprob: -1.8752431869506836
    3. '=' → logprob: -3.7502431869506836
    4. ' ,' → logprob: -4.000243186950684
    5. '  ' → logprob: -4.500243186950684
    6. ',' → logprob: -4.625243186950684
    7. '   ' → logprob: -6.500243186950684
    8. '_' → logprob: -7.000243186950684
    9. ' )' → logprob: -7.375243186950684
    10. '    ' → logprob: -7.500243186950684

Token 14: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.00875838939100504
    2. 'int' → logprob: -4.758758544921875
    3. ' list' → logprob: -10.008758544921875
    4. ' ' → logprob: -10.258758544921875
    5. ' len' → logprob: -10.383758544921875
    6. ' map' → logprob: -11.508758544921875
    7. '[int' → logprob: -12.008758544921875
    8. '=int' → logprob: -12.508758544921875
    9. '   ' → logprob: -13.008758544921875
    10. '10' → logprob: -13.258758544921875

Token 15: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.10052258521318436
    2. '(' → logprob: -2.350522518157959
    3. 'input' → logprob: -8.100522994995117
    4. '()' → logprob: -12.350522994995117
    5. '('' → logprob: -12.475522994995117
    6. ' input' → logprob: -13.600522994995117
    7. '("' → logprob: -13.850522994995117
    8. ''' → logprob: -14.850522994995117
    9. '(in' → logprob: -14.850522994995117
    10. '(
' → logprob: -15.225522994995117

Token 16: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.40026089549064636
    2. ')' → logprob: -1.4002609252929688
    3. '()' → logprob: -2.5252609252929688
    4. '(' → logprob: -5.900260925292969
    5. '('' → logprob: -8.775260925292969
    6. '))' → logprob: -8.775260925292969
    7. '')' → logprob: -9.650260925292969
    8. '()))' → logprob: -10.150260925292969
    9. '")' → logprob: -10.650260925292969
    10. '())
' → logprob: -11.150260925292969

Token 17: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19317996501922607
    2. 'arr' → logprob: -3.1931800842285156
    3. '    
' → logprob: -3.8181800842285156
    4. 'data' → logprob: -3.8181800842285156
    5. '```' → logprob: -4.068180084228516
    6. ' arr' → logprob: -4.193180084228516
    7. 'a' → logprob: -4.443180084228516
    8. 'array' → logprob: -5.193180084228516
    9. ' data' → logprob: -5.193180084228516
    10. ' array' → logprob: -5.318180084228516

Token 18: ' #' (ID: 1069)
  Prédit: ' arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.2645643353462219
    2. ' data' → logprob: -2.639564275741577
    3. 'arr' → logprob: -3.139564275741577
    4. 'a' → logprob: -3.264564275741577
    5. ' a' → logprob: -3.264564275741577
    6. 'data' → logprob: -4.014564514160156
    7. ' lst' → logprob: -5.264564514160156
    8. ' numbers' → logprob: -5.764564514160156
    9. ' array' → logprob: -5.764564514160156
    10. 's' → logprob: -5.764564514160156

Token 19: ' Generate' (ID: 33886)
  Prédit: ' arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.4813319444656372
    2. 'arr' → logprob: -1.6063319444656372
    3. ' data' → logprob: -2.3563318252563477
    4. ' numbers' → logprob: -3.3563318252563477
    5. 'data' → logprob: -3.9813318252563477
    6. ' nums' → logprob: -4.231331825256348
    7. ' array' → logprob: -5.731331825256348
    8. ' lst' → logprob: -5.856331825256348
    9. 'numbers' → logprob: -6.481331825256348
    10. 'nums' → logprob: -6.731331825256348

Token 20: ' triangular' (ID: 124454)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.766520619392395
    2. ' array' → logprob: -2.0165205001831055
    3. 'arr' → logprob: -2.0165205001831055
    4. ' _' → logprob: -2.5165205001831055
    5. ' a' → logprob: -3.3915205001831055
    6. ' arr' → logprob: -3.7665205001831055
    7. '_arr' → logprob: -4.2665205001831055
    8. 'array' → logprob: -4.5165205001831055
    9. '()' → logprob: -4.7665205001831055
    10. ' numbers' → logprob: -4.7665205001831055

Token 21: ' numbers' (ID: 8663)
  Prédit: ' numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -0.10587241500616074
    2. '_numbers' → logprob: -2.355872392654419
    3. ' number' → logprob: -6.605872631072998
    4. '_number' → logprob: -6.730872631072998
    5. 'numbers' → logprob: -6.730872631072998
    6. ' ' → logprob: -7.105872631072998
    7. 's' → logprob: -8.23087215423584
    8. '_' → logprob: -8.73087215423584
    9. ' _' → logprob: -8.73087215423584
    10. ' array' → logprob: -9.35587215423584

Token 22: ' up' (ID: 869)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.9931730628013611
    2. ' ' → logprob: -1.3681731224060059
    3. '   ' → logprob: -2.618173122406006
    4. ' for' → logprob: -3.118173122406006
    5. 't' → logprob: -3.243173122406006
    6. 's' → logprob: -3.493173122406006
    7. '  ' → logprob: -3.618173122406006
    8. ',' → logprob: -3.618173122406006
    9. '_' → logprob: -3.743173122406006
    10. '[' → logprob: -3.993173122406006

Token 23: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.2783392667770386
    2. 'to' → logprob: -1.9033392667770386
    3. '_to' → logprob: -2.653339385986328
    4. '(' → logprob: -4.903339385986328
    5. 'pto' → logprob: -5.528339385986328
    6. '_' → logprob: -5.528339385986328
    7. '  ' → logprob: -5.903339385986328
    8. 'To' → logprob: -6.403339385986328
    9. '   ' → logprob: -7.028339385986328
    10. ' ' → logprob: -7.028339385986328

Token 24: ' just' (ID: 1327)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.024080008268356323
    2. ' ' → logprob: -4.2740797996521
    3. 'n' → logprob: -4.7740797996521
    4. ' the' → logprob: -7.3990797996521
    5. ' a' → logprob: -7.6490797996521
    6. '100' → logprob: -9.274080276489258
    7. '    ' → logprob: -9.899080276489258
    8. 'the' → logprob: -9.899080276489258
    9. '10' → logprob: -10.149080276489258
    10. ' `' → logprob: -10.774080276489258

Token 25: ' past' (ID: 4241)
  Prédit: ' before'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' before' → logprob: -0.5494436025619507
    2. ' below' → logprob: -1.9244436025619507
    3. ' beyond' → logprob: -2.7994437217712402
    4. ' over' → logprob: -3.2994437217712402
    5. ' above' → logprob: -3.2994437217712402
    6. ' after' → logprob: -3.4244437217712402
    7. 'before' → logprob: -4.04944372177124
    8. ' ' → logprob: -4.17444372177124
    9. ' larger' → logprob: -4.29944372177124
    10. ' under' → logprob: -4.29944372177124

Token 26: ' '' (ID: 461)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.05430050939321518
    2. 'n' → logprob: -3.429300546646118
    3. ' ' → logprob: -4.054300308227539
    4. '10' → logprob: -6.429300308227539
    5. '100' → logprob: -6.929300308227539
    6. ' the' → logprob: -8.429300308227539
    7. '2' → logprob: -8.554300308227539
    8. '1' → logprob: -10.929300308227539
    9. '   ' → logprob: -11.304300308227539
    10. ' a' → logprob: -11.429300308227539

Token 27: 'n' (ID: 77)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.12763461470603943
    2. 'n' → logprob: -2.1276345252990723
    3. ' ' → logprob: -7.377634525299072
    4. '100' → logprob: -10.50263500213623
    5. '10' → logprob: -11.00263500213623
    6. '   ' → logprob: -11.62763500213623
    7. ' the' → logprob: -12.25263500213623
    8. '2' → logprob: -12.50263500213623
    9. ' a' → logprob: -12.87763500213623
    10. '    ' → logprob: -13.25263500213623

Token 28: ''
' (ID: 2207)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47436895966529846
    2. '')' → logprob: -1.349368929862976
    3. ' ')' → logprob: -2.4743690490722656
    4. ' )' → logprob: -4.349369049072266
    5. 'n' → logprob: -5.599369049072266
    6. '   ' → logprob: -5.724369049072266
    7. 'def' → logprob: -6.099369049072266
    8. '+' → logprob: -6.099369049072266
    9. ''' → logprob: -6.349369049072266
    10. ':' → logprob: -6.349369049072266

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3240642249584198
    2. 'tri' → logprob: -1.6990642547607422
    3. 't' → logprob: -3.574064254760742
    4. '
' → logprob: -3.574064254760742
    5. 'triangle' → logprob: -4.324064254760742
    6. '    
' → logprob: -4.824064254760742
    7. '```' → logprob: -5.824064254760742
    8. '  ' → logprob: -6.574064254760742
    9. '_tri' → logprob: -6.699064254760742
    10. ' t' → logprob: -6.824064254760742

Token 30: ' tri' (ID: 12665)
  Prédit: 'tri'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tri' (adapté à ' tri') → logprob: -0.7532484531402588
    2. 't' → logprob: -1.0032484531402588
    3. '   ' → logprob: -2.628248453140259
    4. ' t' → logprob: -2.753248453140259
    5. 'triangle' → logprob: -5.12824821472168
    6. ' tri' → logprob: -5.87824821472168
    7. ' triangular' → logprob: -5.87824821472168
    8. '    
' → logprob: -6.12824821472168
    9. ' i' → logprob: -6.12824821472168
    10. 'i' → logprob: -6.25324821472168

Token 31: '_nums' (ID: 128266)
  Prédit: 'angular'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angular' → logprob: -0.11018025875091553
    2. 'angles' → logprob: -3.110180377960205
    3. 's' → logprob: -4.110180377960205
    4. '_numbers' → logprob: -4.235180377960205
    5. '_nums' → logprob: -4.235180377960205
    6. ' =' → logprob: -4.485180377960205
    7. 'ang' → logprob: -6.485180377960205
    8. '_angles' → logprob: -7.610180377960205
    9. 'nums' → logprob: -7.985180377960205
    10. '_num' → logprob: -8.610179901123047

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029761366546154022
    2. '=' → logprob: -3.52976131439209
    3. '=[]' → logprob: -11.65476131439209
    4. ' ' → logprob: -14.77976131439209
    5. ' =[' → logprob: -15.02976131439209
    6. '[]' → logprob: -15.02976131439209
    7. '_' → logprob: -15.27976131439209
    8. '=[' → logprob: -15.27976131439209
    9. '[:]' → logprob: -15.77976131439209
    10. '=[]
' → logprob: -16.154762268066406

Token 33: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06477385014295578
    2. ' [' → logprob: -2.8147737979888916
    3. '[]' → logprob: -5.939774036407471
    4. ' []' → logprob: -8.814773559570312
    5. '[n' → logprob: -11.939773559570312
    6. '[]
' → logprob: -12.314773559570312
    7. ' ' → logprob: -12.564773559570312
    8. '[i' → logprob: -12.689773559570312
    9. '[j' → logprob: -14.439773559570312
    10. ' []
' → logprob: -14.689773559570312

Token 34: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000837384897749871
    2. '1' → logprob: -7.500837326049805
    3. 'i' → logprob: -9.125837326049805
    4. ' ' → logprob: -9.125837326049805
    5. '(i' → logprob: -10.000837326049805
    6. ']' → logprob: -12.125837326049805
    7. ' i' → logprob: -12.375837326049805
    8. '(' → logprob: -12.750837326049805
    9. ' (' → logprob: -12.750837326049805
    10. ')' → logprob: -13.375837326049805

Token 35: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04985123872756958
    2. ',' → logprob: -3.049851179122925
    3. ' ]' → logprob: -6.924851417541504
    4. ']
' → logprob: -8.799851417541504
    5. '1' → logprob: -9.799851417541504
    6. '0' → logprob: -10.299851417541504
    7. '2' → logprob: -11.799851417541504
    8. ',
' → logprob: -12.549851417541504
    9. ')' → logprob: -12.674851417541504
    10. ' ' → logprob: -12.924851417541504

Token 36: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9012875556945801
    2. '1' → logprob: -1.40128755569458
    3. ' for' → logprob: -1.65128755569458
    4. ' while' → logprob: -3.15128755569458
    5. ' ' → logprob: -3.65128755569458
    6. '0' → logprob: -3.77628755569458
    7. 'for' → logprob: -3.77628755569458
    8. ',' → logprob: -4.90128755569458
    9. 'while' → logprob: -5.15128755569458
    10. '    ' → logprob: -5.15128755569458

Token 37: ' s' (ID: 265)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20567519962787628
    2. 'for' → logprob: -1.7056752443313599
    3. 'while' → logprob: -6.33067512512207
    4. ' for' → logprob: -6.58067512512207
    5. ' i' → logprob: -7.70567512512207
    6. '   ' → logprob: -7.95567512512207
    7. 'current' → logprob: -8.95567512512207
    8. 'k' → logprob: -10.08067512512207
    9. ' while' → logprob: -10.33067512512207
    10. 'next' → logprob: -10.95567512512207

Token 38: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5160616040229797
    2. ' =' → logprob: -1.141061544418335
    3. 'um' → logprob: -2.516061544418335
    4. '+=' → logprob: -7.016061782836914
    5. ' ' → logprob: -7.391061782836914
    6. '=i' → logprob: -7.516061782836914
    7. ' +=' → logprob: -8.641061782836914
    8. 'u' → logprob: -8.891061782836914
    9. ' i' → logprob: -9.641061782836914
    10. 't' → logprob: -9.641061782836914

Token 39: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12380716949701309
    2. ' ' → logprob: -2.498807191848755
    3. '0' → logprob: -3.373807191848755
    4. '  ' → logprob: -12.248806953430176
    5. '   ' → logprob: -13.373806953430176
    6. '2' → logprob: -14.936306953430176
    7. 'i' → logprob: -15.436306953430176
    8. '```' → logprob: -15.686306953430176
    9. ' i' → logprob: -15.936306953430176
    10. '+' → logprob: -16.123807907104492

Token 40: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02630564197897911
    2. '0' → logprob: -3.651305675506592
    3. 'i' → logprob: -12.526305198669434
    4. ' ' → logprob: -13.526305198669434
    5. '=' → logprob: -16.27630615234375
    6. '2' → logprob: -16.52630615234375
    7. '```' → logprob: -16.65130615234375
    8. 'n' → logprob: -17.58880615234375
    9. 'int' → logprob: -17.77630615234375
    10. '   ' → logprob: -18.02630615234375

Token 41: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5319936871528625
    2. ' for' → logprob: -1.1569936275482178
    3. '<|end|>' → logprob: -3.0319936275482178
    4. 'for' → logprob: -3.1569936275482178
    5. ' ' → logprob: -5.531993865966797
    6. '<|end|>' → logprob: -6.781993865966797
    7. '+' → logprob: -7.406993865966797
    8. '    ' → logprob: -7.781993865966797
    9. '  ' → logprob: -8.031993865966797
    10. '	for' → logprob: -8.031993865966797

Token 42: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7090337872505188
    2. '<|end|>' → logprob: -1.334033727645874
    3. 'for' → logprob: -2.334033727645874
    4. '   ' → logprob: -2.709033727645874
    5. ' ' → logprob: -2.959033727645874
    6. '<|end|>' → logprob: -4.084033966064453
    7. '    ' → logprob: -5.459033966064453
    8. ' 
' → logprob: -6.584033966064453
    9. '+' → logprob: -6.709033966064453
    10. '	for' → logprob: -6.959033966064453

Token 43: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07309824973344803
    2. ' for' → logprob: -2.8230981826782227
    3. '   ' → logprob: -4.573098182678223
    4. 'i' → logprob: -7.823098182678223
    5. '1' → logprob: -8.573098182678223
    6. ' i' → logprob: -9.323098182678223
    7. ' ' → logprob: -11.323098182678223
    8. '```' → logprob: -11.323098182678223
    9. 'n' → logprob: -11.698098182678223
    10. 'f' → logprob: -11.948098182678223

Token 44: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.011080240830779076
    2. 'i' → logprob: -4.511080265045166
    3. ' ' → logprob: -10.636079788208008
    4. '	i' → logprob: -12.636079788208008
    5. '   ' → logprob: -13.886079788208008
    6. ' ' → logprob: -14.261079788208008
    7. ' range' → logprob: -14.386079788208008
    8. '  ' → logprob: -14.761079788208008
    9. ' in' → logprob: -15.011079788208008
    10. 'I' → logprob: -15.011079788208008

Token 45: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004187379498034716
    2. 'in' → logprob: -5.50418758392334
    3. ' ' → logprob: -9.25418758392334
    4. '1' → logprob: -12.00418758392334
    5. '	in' → logprob: -12.75418758392334
    6. '  ' → logprob: -13.12918758392334
    7. '   ' → logprob: -14.25418758392334
    8. ',' → logprob: -14.50418758392334
    9. ' i' → logprob: -15.12918758392334
    10. '```' → logprob: -15.62918758392334

Token 46: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0788949653506279
    2. 'range' → logprob: -2.578894853591919
    3. ' ' → logprob: -12.70389461517334
    4. '	range' → logprob: -13.95389461517334
    5. '(range' → logprob: -14.82889461517334
    6. '  ' → logprob: -14.82889461517334
    7. '   ' → logprob: -15.70389461517334
    8. '1' → logprob: -15.82889461517334
    9. ' xrange' → logprob: -16.578895568847656
    10. '_range' → logprob: -17.328895568847656

Token 47: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.8444881536415778e-05
    2. '1' → logprob: -10.500028610229492
    3. ' (' → logprob: -14.250028610229492
    4. ' ' → logprob: -15.625028610229492
    5. '(n' → logprob: -16.125028610229492
    6. '   ' → logprob: -17.625028610229492
    7. '(
' → logprob: -19.625028610229492
    8. ',' → logprob: -19.625028610229492
    9. 'n' → logprob: -19.750028610229492
    10. '	' → logprob: -20.625028610229492

Token 48: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2127087504486553e-05
    2. ' ' → logprob: -10.875021934509277
    3. 'n' → logprob: -13.375021934509277
    4. '2' → logprob: -13.875021934509277
    5. '   ' → logprob: -14.500021934509277
    6. '  ' → logprob: -16.375022888183594
    7. '0' → logprob: -17.875022888183594
    8. '(' → logprob: -18.125022888183594
    9. '100' → logprob: -18.750022888183594
    10. ' n' → logprob: -19.187522888183594

Token 49: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02222524583339691
    2. ' ,' → logprob: -3.8972251415252686
    3. ',n' → logprob: -6.397225379943848
    4. ' ' → logprob: -11.397225379943848
    5. ',
' → logprob: -14.272225379943848
    6. ' n' → logprob: -14.397225379943848
    7. ',len' → logprob: -14.397225379943848
    8. ' ,
' → logprob: -14.522225379943848
    9. '   ' → logprob: -14.522225379943848
    10. 'n' → logprob: -14.897225379943848

Token 50: ' int' (ID: 677)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.022803260013461113
    2. '100' → logprob: -4.64780330657959
    3. ' n' → logprob: -4.77280330657959
    4. ' ' → logprob: -5.64780330657959
    5. '500' → logprob: -7.89780330657959
    6. '10' → logprob: -8.77280330657959
    7. '150' → logprob: -9.39780330657959
    8. '200' → logprob: -9.64780330657959
    9. 'int' → logprob: -9.77280330657959
    10. '501' → logprob: -9.89780330657959

Token 51: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.1512475162744522
    2. '(n' → logprob: -2.151247501373291
    3. '(' → logprob: -3.776247501373291
    4. ' (' → logprob: -7.151247501373291
    5. ' ((' → logprob: -8.52624797821045
    6. '(s' → logprob: -9.77624797821045
    7. '(((' → logprob: -9.90124797821045
    8. 'n' → logprob: -11.52624797821045
    9. '(pow' → logprob: -12.52624797821045
    10. ' ' → logprob: -12.65124797821045

Token 52: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.007077998481690884
    2. '(' → logprob: -5.257078170776367
    3. ' ' → logprob: -6.507078170776367
    4. ' (' → logprob: -8.007078170776367
    5. 'n' → logprob: -11.382078170776367
    6. '1' → logprob: -13.257078170776367
    7. '(n' → logprob: -13.757078170776367
    8. ' n' → logprob: -13.882078170776367
    9. '  ' → logprob: -15.257078170776367
    10. '((' → logprob: -15.257078170776367

Token 53: '*n' (ID: 58470)
  Prédit: '*n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*n' → logprob: -0.018854081630706787
    2. ' *' → logprob: -4.018854141235352
    3. '*' → logprob: -7.518854141235352
    4. 'n' → logprob: -8.768854141235352
    5. ' n' → logprob: -13.143854141235352
    6. '   ' → logprob: -13.768854141235352
    7. '*s' → logprob: -14.268854141235352
    8. '*(' → logprob: -14.518854141235352
    9. '*i' → logprob: -14.643854141235352
    10. '    ' → logprob: -15.018854141235352

Token 54: ')**' (ID: 80066)
  Prédit: ')**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.0016501873033121228
    2. ')' → logprob: -6.876650333404541
    3. ' )' → logprob: -7.501650333404541
    4. '**' → logprob: -10.001649856567383
    5. '0' → logprob: -11.376649856567383
    6. '(' → logprob: -12.876649856567383
    7. ')^' → logprob: -13.001649856567383
    8. ' ' → logprob: -14.251649856567383
    9. '1' → logprob: -14.376649856567383
    10. '   ' → logprob: -14.626649856567383

Token 55: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017031522002071142
    2. '.' → logprob: -6.376703262329102
    3. ' ' → logprob: -14.001703262329102
    4. '**' → logprob: -16.5017032623291
    5. '```' → logprob: -17.7517032623291
    6. '   ' → logprob: -18.1267032623291
    7. ' .' → logprob: -18.2517032623291
    8. '5' → logprob: -18.5017032623291
    9. '(' → logprob: -18.7517032623291
    10. ' ' → logprob: -18.8767032623291

Token 56: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00010163593105971813
    2. '0' → logprob: -9.375102043151855
    3. '5' → logprob: -11.250102043151855
    4. '```' → logprob: -13.625102043151855
    5. '   ' → logprob: -14.125102043151855
    6. ' .' → logprob: -14.625102043151855
    7. '1' → logprob: -14.750102043151855
    8. ' ' → logprob: -15.500102043151855
    9. '**' → logprob: -16.00010108947754
    10. '(' → logprob: -16.43760108947754

Token 57: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.8074162653647363e-05
    2. '.' → logprob: -11.250018119812012
    3. '```' → logprob: -13.500018119812012
    4. '   ' → logprob: -13.750018119812012
    5. ' ' → logprob: -14.750018119812012
    6. '``' → logprob: -15.500018119812012
    7. '0' → logprob: -15.812518119812012
    8. 'five' → logprob: -15.937518119812012
    9. '**' → logprob: -16.000017166137695
    10. 'value' → logprob: -16.375017166137695

Token 58: ')+' (ID: 16161)
  Prédit: ')+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.47625836730003357
    2. ')' → logprob: -0.976258397102356
    3. ' )' → logprob: -6.226258277893066
    4. '+' → logprob: -9.101258277893066
    5. ' +' → logprob: -9.976258277893066
    6. '   ' → logprob: -11.476258277893066
    7. ')+(' → logprob: -12.351258277893066
    8. ' ' → logprob: -12.476258277893066
    9. '')' → logprob: -12.726258277893066
    10. '()' → logprob: -12.726258277893066

Token 59: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03842391446232796
    2. '1' → logprob: -3.288424015045166
    3. ' ' → logprob: -7.913424015045166
    4. '3' → logprob: -11.288423538208008
    5. '  ' → logprob: -13.788423538208008
    6. '   ' → logprob: -13.913423538208008
    7. '10' → logprob: -14.163423538208008
    8. '5' → logprob: -14.413423538208008
    9. '```' → logprob: -15.413423538208008
    10. '    ' → logprob: -15.663423538208008

Token 60: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.027888547629117966
    2. '):
' → logprob: -4.027888774871826
    3. ' ):' → logprob: -5.152888774871826
    4. ':' → logprob: -5.652888774871826
    5. ' ):
' → logprob: -8.277888298034668
    6. ')' → logprob: -9.652888298034668
    7. '):
' → logprob: -10.527888298034668
    8. '+' → logprob: -11.152888298034668
    9. '   ' → logprob: -11.152888298034668
    10. ' :' → logprob: -11.527888298034668

Token 61: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07458334416151047
    2. '    ' → logprob: -3.8245832920074463
    3. '   ' → logprob: -3.8245832920074463
    4. ':' → logprob: -4.324583530426025
    5. '    
' → logprob: -5.699583530426025
    6. ' ' → logprob: -5.824583530426025
    7. '<|end|>' → logprob: -6.074583530426025
    8. '        
' → logprob: -6.574583530426025
    9. ' 
' → logprob: -6.699583530426025
    10. ' s' → logprob: -6.824583530426025

Token 62: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5915786623954773
    2. '   ' → logprob: -0.9665786623954773
    3. 's' (adapté à ' s') → logprob: -3.716578722000122
    4. '    ' → logprob: -3.841578722000122
    5. '       ' → logprob: -4.841578483581543
    6. ' 
' → logprob: -5.466578483581543
    7. '    
' → logprob: -5.716578483581543
    8. ' ' → logprob: -6.466578483581543
    9. '
' → logprob: -6.966578483581543
    10. '	s' → logprob: -7.716578483581543

Token 63: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.12737688422203064
    2. '+=' → logprob: -2.1273767948150635
    3. '+' → logprob: -8.002376556396484
    4. ' =' → logprob: -9.877376556396484
    5. '=' → logprob: -10.252376556396484
    6. '   ' → logprob: -11.627376556396484
    7. '+=(' → logprob: -12.502376556396484
    8. ' +' → logprob: -12.627376556396484
    9. '    ' → logprob: -12.627376556396484
    10. '+='' → logprob: -12.877376556396484

Token 64: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0001234428636962548
    2. ' i' → logprob: -9.000123023986816
    3. '   ' → logprob: -18.500123977661133
    4. '	i' → logprob: -20.625123977661133
    5. ' ' → logprob: -22.000123977661133
    6. '*i' → logprob: -22.250123977661133
    7. '
' → logprob: -23.000123977661133
    8. '```' → logprob: -23.000123977661133
    9. '  ' → logprob: -23.125123977661133
    10. '(i' → logprob: -23.750123977661133

Token 65: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5917478203773499
    2. '   ' → logprob: -1.091747760772705
    3. '    
' → logprob: -2.591747760772705
    4. ' tri' → logprob: -4.841747760772705
    5. '<|end|>' → logprob: -5.091747760772705
    6. '  
' → logprob: -5.466747760772705
    7. '
' → logprob: -5.591747760772705
    8. 'tri' → logprob: -5.841747760772705
    9. '\n' → logprob: -6.091747760772705
    10. '       ' → logprob: -6.341747760772705

Token 66: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4551330804824829
    2. '   ' → logprob: -1.080133080482483
    3. '    
' → logprob: -4.705132961273193
    4. '
' → logprob: -4.830132961273193
    5. ' tri' → logprob: -5.455132961273193
    6. '        
' → logprob: -6.330132961273193
    7. '  
' → logprob: -7.455132961273193
    8. '<|end|>' → logprob: -7.830132961273193
    9. 'tri' → logprob: -7.955132961273193
    10. '```' → logprob: -8.455133438110352

Token 67: ' tri' (ID: 12665)
  Prédit: 'tri'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tri' (adapté à ' tri') → logprob: -0.14357221126556396
    2. ' tri' → logprob: -2.1435723304748535
    3. '       ' → logprob: -4.7685723304748535
    4. ' if' → logprob: -5.3935723304748535
    5. 'if' → logprob: -6.1435723304748535
    6. '   ' → logprob: -6.7685723304748535
    7. 'tr' → logprob: -9.643571853637695
    8. ' ' → logprob: -9.893571853637695
    9. '           ' → logprob: -11.018571853637695
    10. 'trip' → logprob: -11.393571853637695

Token 68: '_nums' (ID: 128266)
  Prédit: '_nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nums' → logprob: -0.00012964145571459085
    2. '_num' → logprob: -9.125129699707031
    3. '_' → logprob: -11.500129699707031
    4. ' _' → logprob: -12.250129699707031
    5. '_vals' → logprob: -13.375129699707031
    6. '_numbers' → logprob: -13.750129699707031
    7. '_n' → logprob: -13.875129699707031
    8. '._' → logprob: -14.250129699707031
    9. '-_' → logprob: -15.625129699707031
    10. '_i' → logprob: -16.00012969970703

Token 69: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0006463141762651503
    2. '.' → logprob: -7.375646114349365
    3. '.app' → logprob: -11.125646591186523
    4. '.ap' → logprob: -12.500646591186523
    5. '.extend' → logprob: -14.875646591186523
    6. '.setdefault' → logprob: -15.125646591186523
    7. '.Append' → logprob: -15.375646591186523
    8. ' .' → logprob: -15.875646591186523
    9. '_append' → logprob: -16.500646591186523
    10. 'append' → logprob: -16.875646591186523

Token 70: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -3.547789674485102e-05
    2. '(' → logprob: -10.250035285949707
    3. 's' → logprob: -16.125036239624023
    4. '((' → logprob: -20.375036239624023
    5. ' (' → logprob: -20.625036239624023
    6. '(i' → logprob: -20.625036239624023
    7. '(t' → logprob: -21.500036239624023
    8. '(
' → logprob: -21.625036239624023
    9. '(x' → logprob: -21.875036239624023
    10. '(a' → logprob: -22.125036239624023

Token 71: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.9153885558771435e-06
    2. ')
' → logprob: -12.250005722045898
    3. ' )' → logprob: -14.000005722045898
    4. '   ' → logprob: -16.2500057220459
    5. '))' → logprob: -17.0000057220459
    6. ')return' → logprob: -18.0000057220459
    7. ')`' → logprob: -18.1250057220459
    8. ')n' → logprob: -18.2500057220459
    9. '`)' → logprob: -18.6250057220459
    10. ')
' → logprob: -18.6250057220459

Token 72: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11158303171396255
    2. '
' → logprob: -2.9865829944610596
    3. '    
' → logprob: -3.6115829944610596
    4. ' for' → logprob: -4.986583232879639
    5. '  
' → logprob: -5.486583232879639
    6. '```' → logprob: -5.486583232879639
    7. '<|end|>' → logprob: -5.861583232879639
    8. '   
' → logprob: -6.361583232879639
    9. ' ' → logprob: -6.486583232879639
    10. ' 
' → logprob: -6.486583232879639

Token 73: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8782366514205933
    2. ' if' → logprob: -1.0032366514205933
    3. 'if' (adapté à ' if') → logprob: -2.878236770629883
    4. 'idx' → logprob: -3.503236770629883
    5. '       ' → logprob: -3.753236770629883
    6. '    ' → logprob: -4.003236770629883
    7. ' while' → logprob: -4.253236770629883
    8. ' ' → logprob: -4.253236770629883
    9. '    
' → logprob: -4.628236770629883
    10. '#' → logprob: -4.753236770629883

Token 74: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.01842418499290943
    2. 's' → logprob: -4.018424034118652
    3. ' tri' → logprob: -8.268424034118652
    4. 'tri' → logprob: -11.268424034118652
    5. ' ' → logprob: -13.143424034118652
    6. '	s' → logprob: -13.393424034118652
    7. '   ' → logprob: -13.893424034118652
    8. ' ' → logprob: -15.893424034118652
    9. '>' → logprob: -16.01842498779297
    10. '  ' → logprob: -16.33092498779297

Token 75: ' >=' (ID: 5064)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.007617983501404524
    2. ' >' → logprob: -4.882617950439453
    3. '>=' → logprob: -12.007617950439453
    4. '>end' → logprob: -12.882617950439453
    5. '()>' → logprob: -14.382617950439453
    6. '>s' → logprob: -14.632617950439453
    7. ' ' → logprob: -14.882617950439453
    8. '>b' → logprob: -15.007617950439453
    9. '>

' → logprob: -15.382617950439453
    10. '>a' → logprob: -15.632617950439453

Token 76: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3132646679878235
    2. 'n' → logprob: -1.3132646083831787
    3. '	n' → logprob: -13.313264846801758
    4. ' ' → logprob: -14.188264846801758
    5. '   ' → logprob: -15.563264846801758
    6. '2' → logprob: -15.813264846801758
    7. '=n' → logprob: -16.188264846801758
    8. '  ' → logprob: -17.063264846801758
    9. ')n' → logprob: -17.188264846801758
    10. '_n' → logprob: -17.563264846801758

Token 77: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002063307212665677
    2. ':
' → logprob: -6.377063274383545
    3. '       ' → logprob: -8.002063751220703
    4. '           ' → logprob: -11.252063751220703
    5. '):' → logprob: -12.252063751220703
    6. '   ' → logprob: -12.377063751220703
    7. ':
' → logprob: -13.377063751220703
    8. ' :' → logprob: -13.877063751220703
    9. ',' → logprob: -14.877063751220703
    10. '):
' → logprob: -15.127063751220703

Token 78: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002775393659248948
    2. '       ' → logprob: -6.002775192260742
    3. 'break' → logprob: -8.627775192260742
    4. ' break' → logprob: -9.127775192260742
    5. '   ' → logprob: -11.752775192260742
    6. '               ' → logprob: -13.752775192260742
    7. '	break' → logprob: -14.377775192260742
    8. '          ' → logprob: -14.377775192260742
    9. '		' → logprob: -15.127775192260742
    10. '	       ' → logprob: -15.252775192260742

Token 79: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.27995842695236206
    2. '       ' → logprob: -2.279958486557007
    3. 'break' (adapté à ' break') → logprob: -2.529958486557007
    4. ' break' → logprob: -2.779958486557007
    5. '   ' → logprob: -8.779958724975586
    6. '	break' → logprob: -10.404958724975586
    7. '               ' → logprob: -13.279958724975586
    8. '     ' → logprob: -13.529958724975586
    9. '      ' → logprob: -13.654958724975586
    10. '```' → logprob: -13.779958724975586

Token 80: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08603059500455856
    2. '<|end|>' → logprob: -3.3360304832458496
    3. '    
' → logprob: -3.4610304832458496
    4. '
' → logprob: -4.46103048324585
    5. 'n' → logprob: -6.83603048324585
    6. ' for' → logprob: -7.33603048324585
    7. '<|end|>' → logprob: -7.33603048324585
    8. '```' → logprob: -7.83603048324585
    9. '  
' → logprob: -8.836030960083008
    10. '\n' → logprob: -9.086030960083008

Token 81: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06317143887281418
    2. ' for' → logprob: -3.43817138671875
    3. 'for' → logprob: -3.93817138671875
    4. '    
' → logprob: -5.43817138671875
    5. '
' → logprob: -5.81317138671875
    6. '  
' → logprob: -7.68817138671875
    7. ' ' → logprob: -8.18817138671875
    8. 'i' → logprob: -8.18817138671875
    9. ' 
' → logprob: -8.68817138671875
    10. '  ' → logprob: -8.81317138671875

Token 82: ' idx' (ID: 14016)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.022054310888051987
    2. 'dp' → logprob: -5.022054195404053
    3. 'result' → logprob: -5.397054195404053
    4. 'res' → logprob: -5.397054195404053
    5. 'results' → logprob: -6.522054195404053
    6. ' for' → logprob: -7.022054195404053
    7. 'ans' → logprob: -7.147054195404053
    8. '   ' → logprob: -7.147054195404053
    9. 'answer' → logprob: -7.397054195404053
    10. 'answers' → logprob: -7.647054195404053

Token 83: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014703992754220963
    2. '=' → logprob: -4.51470422744751
    3. '_' → logprob: -5.63970422744751
    4. 's' → logprob: -10.139703750610352
    5. ' ' → logprob: -10.514703750610352
    6. '_x' → logprob: -12.264703750610352
    7. 'x' → logprob: -12.514703750610352
    8. 'ex' → logprob: -12.764703750610352
    9. ')' → logprob: -12.889703750610352
    10. '_to' → logprob: -13.139703750610352

Token 84: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.5759589076042175
    2. ' bis' → logprob: -0.8259589076042175
    3. 'len' → logprob: -11.450959205627441
    4. '0' → logprob: -12.200959205627441
    5. '   ' → logprob: -13.825959205627441
    6. ' ' → logprob: -13.950959205627441
    7. 'b' → logprob: -14.075959205627441
    8. ' len' → logprob: -14.825959205627441
    9. '1' → logprob: -15.450959205627441
    10. 'n' → logprob: -15.825959205627441

Token 85: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -1.9361264946837764e-07
    2. 'ected' → logprob: -16.5
    3. 'ec' → logprob: -17.0
    4. 'ectl' → logprob: -18.0
    5. 'e' → logprob: -18.625
    6. ' ect' → logprob: -18.75
    7. 'ects' → logprob: -18.875
    8. 'ector' → logprob: -19.25
    9. '```' → logprob: -19.375
    10. 'ection' → logprob: -19.375

Token 86: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -1.3782830137643032e-05
    2. '_' → logprob: -11.62501335144043
    3. '_le' → logprob: -12.62501335144043
    4. '_right' → logprob: -14.12501335144043
    5. ' _' → logprob: -15.75001335144043
    6. '_LEFT' → logprob: -16.37501335144043
    7. '_l' → logprob: -16.37501335144043
    8. '_low' → logprob: -16.50001335144043
    9. '_Left' → logprob: -16.62501335144043
    10. '_lower' → logprob: -16.75001335144043

Token 87: '(tr' (ID: 14363)
  Prédit: '(tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tr' → logprob: -1.1279553291387856e-05
    2. '(' → logprob: -11.500011444091797
    3. ' (' → logprob: -14.250011444091797
    4. '(trim' → logprob: -15.000011444091797
    5. '(n' → logprob: -17.625011444091797
    6. '(t' → logprob: -17.875011444091797
    7. '(trg' → logprob: -18.125011444091797
    8. ' tri' → logprob: -18.125011444091797
    9. '(
' → logprob: -18.250011444091797
    10. '(s' → logprob: -18.500011444091797

Token 88: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -8.65707261255011e-06
    2. '_i' → logprob: -12.625008583068848
    3. 'iangle' → logprob: -13.375008583068848
    4. '(i' → logprob: -13.875008583068848
    5. 'и' → logprob: -14.250008583068848
    6. '_nums' → logprob: -14.500008583068848
    7. 'e' → logprob: -14.625008583068848
    8. '[i' → logprob: -15.250008583068848
    9. 'I' → logprob: -16.500009536743164
    10. '(' → logprob: -16.500009536743164

Token 89: '_nums' (ID: 128266)
  Prédit: '_nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nums' → logprob: -0.0007058793562464416
    2. '_num' → logprob: -7.500705718994141
    3. 'nums' → logprob: -9.87570571899414
    4. '_left' → logprob: -10.50070571899414
    5. 'm' → logprob: -11.37570571899414
    6. '(nums' → logprob: -11.75070571899414
    7. '_vals' → logprob: -11.87570571899414
    8. '_' → logprob: -12.00070571899414
    9. ')_' → logprob: -12.75070571899414
    10. 'ums' → logprob: -13.00070571899414

Token 90: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.40930068492889404
    2. '(n' → logprob: -1.284300684928894
    3. ',n' → logprob: -3.2843008041381836
    4. ',(' → logprob: -4.409300804138184
    5. '(' → logprob: -4.784300804138184
    6. ' (' → logprob: -7.659300804138184
    7. ' ,' → logprob: -7.909300804138184
    8. ',[' → logprob: -9.534300804138184
    9. ',s' → logprob: -10.409300804138184
    10. '(s' → logprob: -10.784300804138184

Token 91: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.31331104040145874
    2. ' n' → logprob: -1.3133111000061035
    3. ')n' → logprob: -10.563310623168945
    4. ')' → logprob: -11.313310623168945
    5. '   ' → logprob: -11.563310623168945
    6. '	n' → logprob: -14.063310623168945
    7. '(n' → logprob: -14.688310623168945
    8. ',n' → logprob: -15.188310623168945
    9. ' ' → logprob: -16.313310623168945
    10. '_n' → logprob: -17.563310623168945

Token 92: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.511406809295295e-06
    2. ' )' → logprob: -12.875006675720215
    3. ')
' → logprob: -13.500006675720215
    4. '))' → logprob: -14.250006675720215
    5. '+' → logprob: -14.375006675720215
    6. ')+' → logprob: -14.750006675720215
    7. ')`' → logprob: -15.625006675720215
    8. ',' → logprob: -15.750006675720215
    9. ')

' → logprob: -15.750006675720215
    10. '   ' → logprob: -15.875006675720215

Token 93: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5058796405792236
    2. ' if' → logprob: -1.1308796405792236
    3. 'if' → logprob: -2.7558796405792236
    4. '
' → logprob: -6.0058794021606445
    5. '    
' → logprob: -6.0058794021606445
    6. 'print' → logprob: -7.1308794021606445
    7. '<|end|>' → logprob: -7.2558794021606445
    8. '+' → logprob: -7.5058794021606445
    9. '```' → logprob: -7.5058794021606445
    10. ')' → logprob: -8.005879402160645

Token 94: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6597882509231567
    2. 'if' (adapté à ' if') → logprob: -0.7847882509231567
    3. 'i' → logprob: -4.659788131713867
    4. ' i' → logprob: -5.159788131713867
    5. 'print' → logprob: -5.409788131713867
    6. '   ' → logprob: -5.909788131713867
    7. ' print' → logprob: -7.284788131713867
    8. '#' → logprob: -8.409788131713867
    9. '```' → logprob: -8.409788131713867
    10. 'r' → logprob: -8.534788131713867

Token 95: ' idx' (ID: 14016)
  Prédit: ' tri'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tri' → logprob: -0.15992924571037292
    2. ' idx' → logprob: -2.0349292755126953
    3. 'tri' → logprob: -4.409929275512695
    4. 'idx' → logprob: -5.909929275512695
    5. ' n' → logprob: -6.284929275512695
    6. 'n' → logprob: -8.534929275512695
    7. ' ' → logprob: -8.909929275512695
    8. '   ' → logprob: -10.909929275512695
    9. '  ' → logprob: -12.409929275512695
    10. ' ' → logprob: -12.409929275512695

Token 96: ' >=' (ID: 5064)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.021282510831952095
    2. '==' → logprob: -3.896282434463501
    3. ' <=' → logprob: -8.146282196044922
    4. ' >=' → logprob: -8.396282196044922
    5. ' >' → logprob: -8.896282196044922
    6. '>' → logprob: -10.896282196044922
    7. ' <' → logprob: -11.271282196044922
    8. ' !=' → logprob: -11.396282196044922
    9. '<=' → logprob: -11.396282196044922
    10. '>=' → logprob: -11.646282196044922

Token 97: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.008913774974644184
    2. ' len' → logprob: -4.883913993835449
    3. '1' → logprob: -7.133913993835449
    4. '2' → logprob: -8.38391399383545
    5. ' ' → logprob: -8.38391399383545
    6. '3' → logprob: -11.13391399383545
    7. '0' → logprob: -11.13391399383545
    8. '4' → logprob: -11.88391399383545
    9. '(len' → logprob: -12.25891399383545
    10. '=len' → logprob: -12.50891399383545

Token 98: '(tr' (ID: 14363)
  Prédit: '(tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tr' → logprob: -0.12700779736042023
    2. '(' → logprob: -2.1270077228546143
    3. '(t' → logprob: -10.377007484436035
    4. 'tri' → logprob: -10.752007484436035
    5. ' tri' → logprob: -11.627007484436035
    6. ' (' → logprob: -12.002007484436035
    7. '(trim' → logprob: -12.627007484436035
    8. '(s' → logprob: -13.002007484436035
    9. '(
' → logprob: -13.127007484436035
    10. '(

' → logprob: -13.752007484436035

Token 99: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.8325677703833207e-05
    2. '_nums' → logprob: -10.625028610229492
    3. '_i' → logprob: -13.250028610229492
    4. 'и' → logprob: -13.875028610229492
    5. 'e' → logprob: -15.125028610229492
    6. 'nums' → logprob: -15.375028610229492
    7. 'I' → logprob: -16.000028610229492
    8. '```' → logprob: -16.250028610229492
    9. 'iangle' → logprob: -16.375028610229492
    10. 'in' → logprob: -16.500028610229492

Token 100: '_nums' (ID: 128266)
  Prédit: '_nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nums' → logprob: -4.632542913896032e-05
    2. 'nums' → logprob: -10.250046730041504
    3. 's' → logprob: -12.250046730041504
    4. '_num' → logprob: -13.000046730041504
    5. ')' → logprob: -13.875046730041504
    6. 'Nums' → logprob: -14.125046730041504
    7. '_' → logprob: -14.250046730041504
    8. 'ums' → logprob: -14.875046730041504
    9. '(nums' → logprob: -16.000045776367188
    10. '```' → logprob: -16.125045776367188

Token 101: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7821319103240967
    2. '):' → logprob: -0.9071319103240967
    3. ' or' → logprob: -2.0321319103240967
    4. 'or' → logprob: -5.282132148742676
    5. ' ):' → logprob: -6.532132148742676
    6. ':' → logprob: -7.032132148742676
    7. ' )' → logprob: -8.282132148742676
    8. ' and' → logprob: -10.032132148742676
    9. ' ' → logprob: -10.157132148742676
    10. 'and' → logprob: -10.657132148742676

Token 102: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.5341289043426514
    2. ':' → logprob: -0.9091289043426514
    3. 'or' → logprob: -5.1591291427612305
    4. ' and' → logprob: -5.9091291427612305
    5. ':
' → logprob: -6.9091291427612305
    6. 'and' → logprob: -7.1591291427612305
    7. ':return' → logprob: -8.15912914276123
    8. '   ' → logprob: -8.28412914276123
    9. ' :' → logprob: -9.65912914276123
    10. '       ' → logprob: -10.65912914276123

Token 103: ' tri' (ID: 12665)
  Prédit: 'tri'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tri' → logprob: -0.25195688009262085
    2. ' tri' → logprob: -1.5019569396972656
    3. 'n' → logprob: -11.251956939697266
    4. 'idx' → logprob: -12.126956939697266
    5. 'tr' → logprob: -12.876956939697266
    6. '   ' → logprob: -13.376956939697266
    7. ' ' → logprob: -13.876956939697266
    8. '(' → logprob: -14.126956939697266
    9. 'not' → logprob: -14.376956939697266
    10. 's' → logprob: -14.626956939697266

Token 104: '_nums' (ID: 128266)
  Prédit: '_nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nums' → logprob: -0.00039504567394033074
    2. 'nums' → logprob: -8.125394821166992
    3. '_' → logprob: -10.125394821166992
    4. '_num' → logprob: -10.250394821166992
    5. 's' → logprob: -11.375394821166992
    6. '_n' → logprob: -12.750394821166992
    7. 'Nums' → logprob: -13.375394821166992
    8. 'i' → logprob: -14.250394821166992
    9. '_i' → logprob: -14.500394821166992
    10. '_vals' → logprob: -14.625394821166992

Token 105: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.005938516929745674
    2. '[' → logprob: -5.130938529968262
    3. '[
' → logprob: -13.005938529968262
    4. '[id' → logprob: -13.130938529968262
    5. ' [' → logprob: -13.505938529968262
    6. '[index' → logprob: -13.505938529968262
    7. '[int' → logprob: -14.005938529968262
    8. '[i' → logprob: -14.005938529968262
    9. '```' → logprob: -15.380938529968262
    10. 'idx' → logprob: -15.630938529968262

Token 106: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.8964458107948303
    2. ' !=' → logprob: -1.1464457511901855
    3. '!=' → logprob: -1.6464457511901855
    4. ']' → logprob: -2.7714457511901855
    5. ' >' → logprob: -4.5214457511901855
    6. ']!=' → logprob: -5.0214457511901855
    7. ']>' → logprob: -7.0214457511901855
    8. '[' → logprob: -9.521446228027344
    9. '==' → logprob: -9.521446228027344
    10. ')!=' → logprob: -9.521446228027344

Token 107: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.1617479771375656
    2. '>' → logprob: -2.536747932434082
    3. ' !=' → logprob: -2.661747932434082
    4. ' >' → logprob: -8.036747932434082
    5. '==' → logprob: -10.036747932434082
    6. ']!=' → logprob: -12.161747932434082
    7. '()!=' → logprob: -12.411747932434082
    8. '!==' → logprob: -12.786747932434082
    9. ')!=' → logprob: -12.911747932434082
    10. '[' → logprob: -13.286747932434082

Token 108: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4740821421146393
    2. 'n' → logprob: -0.9740821123123169
    3. '	n' → logprob: -12.974081993103027
    4. ' ' → logprob: -13.974081993103027
    5. '(n' → logprob: -14.974081993103027
    6. ')n' → logprob: -15.099081993103027
    7. '_n' → logprob: -15.349081993103027
    8. ' ' → logprob: -15.349081993103027
    9. '   ' → logprob: -15.599081993103027
    10. '`' → logprob: -16.349082946777344

Token 109: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006806228775531054
    2. ':
' → logprob: -7.375680446624756
    3. ':return' → logprob: -10.375680923461914
    4. '):' → logprob: -10.875680923461914
    5. '   ' → logprob: -13.375680923461914
    6. ',' → logprob: -14.375680923461914
    7. ')' → logprob: -14.750680923461914
    8. '):
' → logprob: -15.000680923461914
    9. ':def' → logprob: -15.375680923461914
    10. '       ' → logprob: -15.625680923461914

Token 110: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09775358438491821
    2. ':' → logprob: -2.4727535247802734
    3. '   ' → logprob: -4.972753524780273
    4. ':
' → logprob: -6.597753524780273
    5. ':return' → logprob: -9.347753524780273
    6. ',' → logprob: -9.472753524780273
    7. '):' → logprob: -10.097753524780273
    8. ' return' → logprob: -10.097753524780273
    9. 'print' → logprob: -10.222753524780273
    10. '        
' → logprob: -10.597753524780273

Token 111: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.34389162063598633
    2. '   ' → logprob: -1.5938916206359863
    3. 'print' (adapté à ' print') → logprob: -3.0938916206359863
    4. ' return' → logprob: -3.8438916206359863
    5. ' idx' → logprob: -4.968891620635986
    6. '       ' → logprob: -5.593891620635986
    7. 'return' → logprob: -6.093891620635986
    8. ' for' → logprob: -6.343891620635986
    9. 'idx' → logprob: -6.343891620635986
    10. ' n' → logprob: -6.593891620635986

Token 112: '('' (ID: 706)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.6191027164459229
    2. '(-' → logprob: -1.3691027164459229
    3. '(' → logprob: -1.6191027164459229
    4. '-' → logprob: -5.619102478027344
    5. '('' → logprob: -6.244102478027344
    6. '("-' → logprob: -6.619102478027344
    7. '0' → logprob: -7.119102478027344
    8. '(n' → logprob: -8.119102478027344
    9. '(False' → logprob: -8.119102478027344
    10. '()' → logprob: -8.369102478027344

Token 113: 'No' (ID: 3160)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6420742273330688
    2. 'NO' → logprob: -1.3920742273330688
    3. 'No' → logprob: -1.7670742273330688
    4. '0' → logprob: -4.017074108123779
    5. '"' → logprob: -4.892074108123779
    6. 'Impossible' → logprob: -4.892074108123779
    7. '"No' → logprob: -5.017074108123779
    8. 'im' → logprob: -5.267074108123779
    9. 'IMP' → logprob: -5.642074108123779
    10. 'no' → logprob: -6.267074108123779

Token 114: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.04344512149691582
    2. ')' → logprob: -3.793445110321045
    3. 't' → logprob: -4.793445110321045
    4. '!' → logprob: -5.043445110321045
    5. ' ')' → logprob: -6.418445110321045
    6. 'pe' → logprob: -7.293445110321045
    7. '")' → logprob: -7.668445110321045
    8. ' triangle' → logprob: -8.043445587158203
    9. 'e' → logprob: -8.168445587158203
    10. ''' → logprob: -8.293445587158203

Token 115: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033655378967523575
    2. '       ' → logprob: -3.7836554050445557
    3. 'else' → logprob: -4.658655166625977
    4. ' else' → logprob: -7.158655166625977
    5. '```' → logprob: -9.283655166625977
    6. '	else' → logprob: -12.908655166625977
    7. '<|end|>' → logprob: -13.533655166625977
    8. '    
' → logprob: -14.783655166625977
    9. ' ' → logprob: -15.158655166625977
    10. '``' → logprob: -15.533655166625977

Token 116: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26034677028656006
    2. '   ' → logprob: -1.51034677028656
    3. 'else' → logprob: -5.01034688949585
    4. 'return' (adapté à ' return') → logprob: -6.76034688949585
    5. ' else' → logprob: -7.63534688949585
    6. ' return' → logprob: -10.260346412658691
    7. ' ' → logprob: -11.510346412658691
    8. '           ' → logprob: -11.885346412658691
    9. '  ' → logprob: -12.635346412658691
    10. 'elif' → logprob: -12.760346412658691

Token 117: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2272219955921173
    2. 'print' → logprob: -2.227221965789795
    3. '    
' → logprob: -2.602221965789795
    4. '
' → logprob: -4.227221965789795
    5. '  
' → logprob: -5.852221965789795
    6. '        
' → logprob: -6.977221965789795
    7. '```' → logprob: -6.977221965789795
    8. ' print' → logprob: -7.602221965789795
    9. '<|end|>' → logprob: -7.852221965789795
    10. ' 
' → logprob: -8.102222442626953

Token 118: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06745342910289764
    2. 'print' → logprob: -2.817453384399414
    3. '    
' → logprob: -5.317453384399414
    4. 'for' → logprob: -8.192453384399414
    5. ' print' → logprob: -9.317453384399414
    6. '        
' → logprob: -10.567453384399414
    7. '  
' → logprob: -10.942453384399414
    8. '
' → logprob: -10.942453384399414
    9. '```' → logprob: -11.067453384399414
    10. 'if' → logprob: -11.192453384399414

Token 119: ' k' (ID: 372)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.35023581981658936
    2. 'for' → logprob: -1.3502358198165894
    3. '#' → logprob: -4.725235939025879
    4. 'dp' → logprob: -5.600235939025879
    5. 'if' → logprob: -5.850235939025879
    6. 'count' → logprob: -5.975235939025879
    7. 'rem' → logprob: -6.225235939025879
    8. 'remaining' → logprob: -6.225235939025879
    9. 'j' → logprob: -6.350235939025879
    10. 'res' → logprob: -6.600235939025879

Token 120: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0004387750814203173
    2. '=' → logprob: -7.750438690185547
    3. ' ' → logprob: -12.250438690185547
    4. ' -=' → logprob: -14.250438690185547
    5. '=k' → logprob: -14.500438690185547
    6. '    ' → logprob: -14.625438690185547
    7. ' =
' → logprob: -15.000438690185547
    8. ' +=' → logprob: -15.000438690185547
    9. '   ' → logprob: -15.250438690185547
    10. '=int' → logprob: -15.625438690185547

Token 121: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.001349518890492618
    2. ' idx' → logprob: -6.626349449157715
    3. '   ' → logprob: -11.626349449157715
    4. 'len' → logprob: -11.876349449157715
    5. 'index' → logprob: -13.001349449157715
    6. 'k' → logprob: -13.376349449157715
    7. '	idx' → logprob: -13.626349449157715
    8. '(idx' → logprob: -14.126349449157715
    9. 'tri' → logprob: -14.251349449157715
    10. 'int' → logprob: -14.501349449157715

Token 122: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02934611402451992
    2. '<|end|>' → logprob: -4.154345989227295
    3. '    
' → logprob: -5.279345989227295
    4. '
' → logprob: -5.404345989227295
    5. ',' → logprob: -7.404345989227295
    6. ' while' → logprob: -7.529345989227295
    7. '<|end|>' → logprob: -7.654345989227295
    8. 'print' → logprob: -7.779345989227295
    9. 'while' → logprob: -8.279346466064453
    10. ' if' → logprob: -8.654346466064453

Token 123: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0684136301279068
    2. 'print' → logprob: -3.068413734436035
    3. 'for' → logprob: -4.818413734436035
    4. 'if' → logprob: -5.318413734436035
    5. 'while' → logprob: -6.318413734436035
    6. '    
' → logprob: -7.318413734436035
    7. 'sum' → logprob: -7.443413734436035
    8. ' for' → logprob: -7.818413734436035
    9. 'total' → logprob: -8.068413734436035
    10. ' if' → logprob: -8.193413734436035

Token 124: ' from' (ID: 591)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5083844661712646
    2. 'print' → logprob: -1.3833844661712646
    3. 'if' → logprob: -2.2583844661712646
    4. 'res' → logprob: -5.008384704589844
    5. 'while' → logprob: -5.508384704589844
    6. 'left' → logprob: -5.758384704589844
    7. 'dp' → logprob: -5.758384704589844
    8. 'j' → logprob: -5.883384704589844
    9. 'a' → logprob: -6.258384704589844
    10. '#' → logprob: -6.383384704589844

Token 125: ' itertools' (ID: 103178)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -1.315833330154419
    2. 'math' → logprob: -1.440833330154419
    3. 'collections' → logprob: -1.690833330154419
    4. ' itertools' → logprob: -2.065833330154419
    5. ' collections' → logprob: -2.690833330154419
    6. 'sys' → logprob: -2.815833330154419
    7. ' sys' → logprob: -3.815833330154419
    8. 'bis' → logprob: -4.19083309173584
    9. '_' → logprob: -5.06583309173584
    10. 'operator' → logprob: -5.56583309173584

Token 126: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5346899628639221
    2. ' import' → logprob: -0.9096899628639221
    3. 'ertools' → logprob: -4.534689903259277
    4. '	import' → logprob: -8.159689903259277
    5. '<|end|>' → logprob: -9.034689903259277
    6. '_import' → logprob: -9.159689903259277
    7. '.com' → logprob: -9.284689903259277
    8. ' itertools' → logprob: -10.034689903259277
    9. '.import' → logprob: -10.409689903259277
    10. '.' → logprob: -11.659689903259277

Token 127: ' combinations' (ID: 43835)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.048867467790842056
    2. 'acc' → logprob: -3.1738674640655518
    3. 'product' → logprob: -5.923867702484131
    4. 'per' → logprob: -6.548867702484131
    5. ' combinations' → logprob: -6.923867702484131
    6. ' accumulate' → logprob: -7.798867702484131
    7. ' permutations' → logprob: -8.548867225646973
    8. 'comb' → logprob: -9.798867225646973
    9. 'compress' → logprob: -10.548867225646973
    10. '	com' → logprob: -10.798867225646973

Token 128: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36172646284103394
    2. '<|end|>' → logprob: -1.6117265224456787
    3. ' for' → logprob: -2.8617265224456787
    4. '    
' → logprob: -4.1117262840271
    5. '
' → logprob: -4.2367262840271
    6. '<|end|>' → logprob: -4.8617262840271
    7. 'for' → logprob: -5.3617262840271
    8. ',' → logprob: -6.3617262840271
    9. '  
' → logprob: -7.6117262840271
    10. ' 
' → logprob: -7.9867262840271

Token 129: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2305402159690857
    2. ' for' → logprob: -1.8555402755737305
    3. 'for' → logprob: -3.4805402755737305
    4. '<|end|>' → logprob: -4.6055402755737305
    5. '    
' → logprob: -5.1055402755737305
    6. '
' → logprob: -6.7305402755737305
    7. ',' → logprob: -7.4805402755737305
    8. '<|end|>' → logprob: -7.7305402755737305
    9. ')' → logprob: -9.73054027557373
    10. ' 
' → logprob: -9.98054027557373

Token 130: ' ans' (ID: 3345)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.38955220580101013
    2. ' for' → logprob: -1.1395522356033325
    3. 'nums' → logprob: -6.639552116394043
    4. 'numbers' → logprob: -8.514552116394043
    5. 'elements' → logprob: -8.514552116394043
    6. 'found' → logprob: -8.639552116394043
    7. ' numbers' → logprob: -8.889552116394043
    8. 'arr' → logprob: -9.014552116394043
    9. ' found' → logprob: -9.389552116394043
    10. ' elements' → logprob: -9.389552116394043

Token 131: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03183996304869652
    2. '=' → logprob: -3.5318398475646973
    3. 's' → logprob: -7.031839847564697
    4. ':' → logprob: -7.031839847564697
    5. 'for' → logprob: -9.531840324401855
    6. '_found' → logprob: -9.906840324401855
    7. '_' → logprob: -10.031840324401855
    8. ' ' → logprob: -10.531840324401855
    9. '_count' → logprob: -10.656840324401855
    10. '   ' → logprob: -11.156840324401855

Token 132: ' [[]' (ID: 182908)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.1862524300813675
    2. 'None' → logprob: -3.0612523555755615
    3. 'False' → logprob: -3.0612523555755615
    4. '0' → logprob: -3.5612523555755615
    5. ' []' → logprob: -3.5612523555755615
    6. 'set' → logprob: -4.436252593994141
    7. ' None' → logprob: -5.811252593994141
    8. 'k' → logprob: -6.686252593994141
    9. ' False' → logprob: -6.686252593994141
    10. 'n' → logprob: -8.06125259399414

Token 133: ' for' (ID: 395)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09114976972341537
    2. ']' → logprob: -2.4661498069763184
    3. 'for' → logprob: -6.966149806976318
    4. ',k' → logprob: -7.591149806976318
    5. ')' → logprob: -7.966149806976318
    6. ',
' → logprob: -9.21614933013916
    7. ' for' → logprob: -9.46614933013916
    8. ')]' → logprob: -9.71614933013916
    9. 'import' → logprob: -9.96614933013916
    10. ' ]' → logprob: -10.09114933013916

Token 134: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0002943479048553854
    2. ' _' → logprob: -9.00029468536377
    3. ' range' → logprob: -9.50029468536377
    4. '_range' → logprob: -9.50029468536377
    5. 'range' → logprob: -11.50029468536377
    6. ' in' → logprob: -12.50029468536377
    7. '_i' → logprob: -12.87529468536377
    8. ' i' → logprob: -13.25029468536377
    9. '_k' → logprob: -13.75029468536377
    10. 'i' → logprob: -14.25029468536377

Token 135: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005028736195527017
    2. ' range' → logprob: -8.000502586364746
    3. 'in' → logprob: -8.750502586364746
    4. ' in' → logprob: -11.750502586364746
    5. '(range' → logprob: -14.375502586364746
    6. 'k' → logprob: -15.625502586364746
    7. ' ' → logprob: -16.250503540039062
    8. 'rang' → logprob: -17.375503540039062
    9. '	range' → logprob: -17.625503540039062
    10. 'r' → logprob: -17.750503540039062

Token 136: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.000555416801944375
    2. ' range' → logprob: -7.500555515289307
    3. '(range' → logprob: -13.500555038452148
    4. 'ran' → logprob: -15.000555038452148
    5. 'rang' → logprob: -15.500555038452148
    6. 'r' → logprob: -15.875555038452148
    7. '   ' → logprob: -16.00055503845215
    8. '[' → logprob: -16.75055503845215
    9. ' ' → logprob: -17.00055503845215
    10. '(' → logprob: -17.25055503845215

Token 137: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.0003633521846495569
    2. '(' → logprob: -8.25036334991455
    3. 'k' → logprob: -9.37536334991455
    4. '(n' → logprob: -11.25036334991455
    5. ' (' → logprob: -12.87536334991455
    6. ' k' → logprob: -14.50036334991455
    7. '((' → logprob: -14.87536334991455
    8. '](' → logprob: -14.87536334991455
    9. '(s' → logprob: -16.250364303588867
    10. ']' → logprob: -16.625364303588867

Token 138: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00021843716967850924
    2. '+' → logprob: -8.625218391418457
    3. ' )' → logprob: -11.125218391418457
    4. ')]
' → logprob: -11.625218391418457
    5. ')' → logprob: -11.750218391418457
    6. ']' → logprob: -12.875218391418457
    7. ')]

' → logprob: -13.125218391418457
    8. ')][' → logprob: -14.375218391418457
    9. ' +' → logprob: -14.500218391418457
    10. ' ]' → logprob: -15.250218391418457

Token 139: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.042578309774398804
    2. ' for' → logprob: -3.7925782203674316
    3. '   ' → logprob: -4.542578220367432
    4. 'indices' → logprob: -5.417578220367432
    5. 'print' → logprob: -8.04257869720459
    6. 'rest' → logprob: -8.16757869720459
    7. '<|end|>' → logprob: -8.16757869720459
    8. 'idx' → logprob: -8.29257869720459
    9. 'count' → logprob: -8.29257869720459
    10. 'nums' → logprob: -8.41757869720459

Token 140: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.550402820110321
    2. 'used' → logprob: -2.175402879714966
    3. 'remaining' → logprob: -2.550402879714966
    4. 'rem' → logprob: -3.050402879714966
    5. 'remain' → logprob: -3.175402879714966
    6. 'cur' → logprob: -3.800402879714966
    7. 'current' → logprob: -4.050402641296387
    8. 'pos' → logprob: -4.425402641296387
    9. 'cnt' → logprob: -4.675402641296387
    10. 'curr' → logprob: -4.675402641296387

Token 141: ' cnt' (ID: 27340)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.17781944572925568
    2. 'comb' → logprob: -3.6778194904327393
    3. 'length' → logprob: -3.9278194904327393
    4. 'x' → logprob: -4.17781925201416
    5. 'r' → logprob: -4.17781925201416
    6. ' comb' → logprob: -4.17781925201416
    7. 'j' → logprob: -4.55281925201416
    8. ' i' → logprob: -4.67781925201416
    9. 'combo' → logprob: -4.67781925201416
    10. 'c' → logprob: -4.80281925201416

Token 142: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01127723790705204
    2. 'in' → logprob: -4.511277198791504
    3. ',' → logprob: -9.011277198791504
    4. '(' → logprob: -10.261277198791504
    5. ' ' → logprob: -10.511277198791504
    6. ' ,' → logprob: -11.136277198791504
    7. ')' → logprob: -12.386277198791504
    8. 'range' → logprob: -12.886277198791504
    9. 'k' → logprob: -13.011277198791504
    10. '1' → logprob: -13.136277198791504

Token 143: ' (' (ID: 350)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comb' → logprob: -1.3195548057556152
    2. 'combo' → logprob: -1.6945548057556152
    3. 'subset' → logprob: -2.0695548057556152
    4. 'nums' → logprob: -2.1945548057556152
    5. 'i' → logprob: -3.0695548057556152
    6. 'indices' → logprob: -3.3195548057556152
    7. 'chosen' → logprob: -3.6945548057556152
    8. 'arr' → logprob: -3.9445548057556152
    9. 'num' → logprob: -4.194554805755615
    10. 'lst' → logprob: -4.569554805755615

Token 144: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4020746350288391
    2. 'x' → logprob: -2.0270745754241943
    3. 'a' → logprob: -2.2770745754241943
    4. 'idx' → logprob: -4.402074813842773
    5. 'subset' → logprob: -5.027074813842773
    6. 'comb' → logprob: -5.152074813842773
    7. 'r' → logprob: -5.152074813842773
    8. 'indices' → logprob: -5.277074813842773
    9. 'num' → logprob: -5.277074813842773
    10. 'c' → logprob: -5.402074813842773

Token 145: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16668221354484558
    2. ',)' → logprob: -1.916682243347168
    3. ')' → logprob: -6.041682243347168
    4. 's' → logprob: -6.541682243347168
    5. ',i' → logprob: -6.791682243347168
    6. '1' → logprob: -7.541682243347168
    7. ' ,' → logprob: -8.041682243347168
    8. ',j' → logprob: -9.041682243347168
    9. 'indices' → logprob: -9.166682243347168
    10. 'in' → logprob: -9.166682243347168

Token 146: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.03310485556721687
    2. ' j' → logprob: -4.53310489654541
    3. 'x' → logprob: -5.28310489654541
    4. 'v' → logprob: -5.90810489654541
    5. 'num' → logprob: -6.03310489654541
    6. ')' → logprob: -6.53310489654541
    7. 'a' → logprob: -6.78310489654541
    8. 'val' → logprob: -6.90810489654541
    9. 'pos' → logprob: -7.03310489654541
    10. 'mask' → logprob: -7.15810489654541

Token 147: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005012048059143126
    2. 'in' → logprob: -7.8755011558532715
    3. ' )' → logprob: -9.50050163269043
    4. ' in' → logprob: -10.25050163269043
    5. '),' → logprob: -12.62550163269043
    6. ',' → logprob: -12.62550163269043
    7. '）' → logprob: -14.37550163269043
    8. '))' → logprob: -14.62550163269043
    9. ',)' → logprob: -14.75050163269043
    10. ')
' → logprob: -14.87550163269043

Token 148: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.38734132051467896
    2. 'in' → logprob: -1.1373412609100342
    3. ')' → logprob: -7.887341499328613
    4. ',' → logprob: -10.637341499328613
    5. ' ' → logprob: -11.262341499328613
    6. '	in' → logprob: -12.074841499328613
    7. '_in' → logprob: -12.199841499328613
    8. 's' → logprob: -12.199841499328613
    9. 'import' → logprob: -12.324841499328613
    10. ' ' → logprob: -12.574841499328613

Token 149: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.6381831169128418
    2. ' combinations' → logprob: -0.7631831169128418
    3. 'enumer' → logprob: -5.263183116912842
    4. 'com' → logprob: -8.26318359375
    5. ' itertools' → logprob: -10.01318359375
    6. ' combos' → logprob: -10.76318359375
    7. ' comb' → logprob: -11.13818359375
    8. '(com' → logprob: -11.26318359375
    9. ' in' → logprob: -11.88818359375
    10. ' zip' → logprob: -12.13818359375

Token 150: '(com' (ID: 27868)
  Prédit: '(com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.001589131192304194
    2. 'com' → logprob: -6.501589298248291
    3. ' combinations' → logprob: -10.001588821411133
    4. '(range' → logprob: -10.626588821411133
    5. '(zip' → logprob: -12.376588821411133
    6. ' (' → logprob: -12.376588821411133
    7. '(' → logprob: -12.626588821411133
    8. '(en' → logprob: -12.876588821411133
    9. '<com' → logprob: -14.126588821411133
    10. 'enumer' → logprob: -14.251588821411133

Token 151: 'binations' (ID: 113572)
  Prédit: 'binations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binations' → logprob: -0.00011284107313258573
    2. 'b' → logprob: -9.375112533569336
    3. 'inations' → logprob: -10.875112533569336
    4. 'bin' → logprob: -12.000112533569336
    5. 'positions' → logprob: -14.500112533569336
    6. '(' → logprob: -14.875112533569336
    7. 'bination' → logprob: -15.125112533569336
    8. 'bat' → logprob: -15.250112533569336
    9. '```' → logprob: -15.250112533569336
    10. 'bine' → logprob: -15.500112533569336

Token 152: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -15.0
    3. ' (' → logprob: -17.125
    4. '((' → logprob: -17.875
    5. '(list' → logprob: -17.875
    6. '(r' → logprob: -18.25
    7. '(en' → logprob: -18.75
    8. ')' → logprob: -18.75
    9. 'range' → logprob: -18.75
    10. '(tr' → logprob: -19.0

Token 153: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -2.176947600673884e-05
    2. '(' → logprob: -10.875021934509277
    3. '(n' → logprob: -13.125021934509277
    4. 'k' → logprob: -15.125021934509277
    5. ',k' → logprob: -15.500021934509277
    6. '(s' → logprob: -16.00002098083496
    7. '(len' → logprob: -16.50002098083496
    8. '{k' → logprob: -17.75002098083496
    9. ' (' → logprob: -18.25002098083496
    10. ' k' → logprob: -18.50002098083496

Token 154: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3496488034725189
    2. '(),' → logprob: -1.2246488332748413
    3. ' ,' → logprob: -7.849648952484131
    4. ',k' → logprob: -7.974648952484131
    5. '),' → logprob: -8.099648475646973
    6. '(' → logprob: -9.224648475646973
    7. ' (),' → logprob: -10.974648475646973
    8. '(k' → logprob: -11.224648475646973
    9. '2' → logprob: -11.349648475646973
    10. '1' → logprob: -12.849648475646973

Token 155: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.026305289939045906
    2. ' ' → logprob: -3.6513051986694336
    3. '   ' → logprob: -13.276305198669434
    4. '  ' → logprob: -13.651305198669434
    5. ' k' → logprob: -14.526305198669434
    6. 'k' → logprob: -14.776305198669434
    7. ')' → logprob: -15.526305198669434
    8. '    ' → logprob: -15.651305198669434
    9. ' ' → logprob: -16.08880615234375
    10. '1' → logprob: -16.21380615234375

Token 156: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007167232106439769
    2. ' ' → logprob: -7.250716686248779
    3. 'k' → logprob: -13.000717163085938
    4. '3' → logprob: -13.750717163085938
    5. '   ' → logprob: -13.750717163085938
    6. '1' → logprob: -14.125717163085938
    7. '  ' → logprob: -15.000717163085938
    8. ')' → logprob: -15.500717163085938
    9. '    ' → logprob: -16.063217163085938
    10. ' k' → logprob: -16.063217163085938

Token 157: '),' (ID: 936)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0001375089050270617
    2. '):
' → logprob: -9.000137329101562
    3. ':' → logprob: -11.500137329101562
    4. '():' → logprob: -13.875137329101562
    5. ' ):' → logprob: -14.125137329101562
    6. '):
' → logprob: -14.250137329101562
    7. ')' → logprob: -14.250137329101562
    8. ',' → logprob: -14.625137329101562
    9. ')):' → logprob: -15.625137329101562
    10. '):

' → logprob: -16.125137329101562

Token 158: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3369070291519165
    2. 'start' → logprob: -2.086906909942627
    3. ' start' → logprob: -2.461906909942627
    4. '):' → logprob: -3.336906909942627
    5. ' ' → logprob: -3.711906909942627
    6. '2' → logprob: -5.211906909942627
    7. '0' → logprob: -5.586906909942627
    8. ' key' → logprob: -6.461906909942627
    9. ')' → logprob: -6.961906909942627
    10. ' ):' → logprob: -7.086906909942627

Token 159: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05428086966276169
    2. 'start' → logprob: -3.8042807579040527
    3. ' start' → logprob: -4.304280757904053
    4. ' ' → logprob: -4.679280757904053
    5. '0' → logprob: -5.304280757904053
    6. '):' → logprob: -6.929280757904053
    7. '2' → logprob: -6.929280757904053
    8. '   ' → logprob: -8.179281234741211
    9. '):
' → logprob: -9.054281234741211
    10. '  ' → logprob: -9.554281234741211

Token 160: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11630136519670486
    2. '):' → logprob: -2.3663012981414795
    3. '):
' → logprob: -4.366301536560059
    4. ':
' → logprob: -5.741301536560059
    5. '   ' → logprob: -10.366301536560059
    6. ',' → logprob: -11.741301536560059
    7. '**' → logprob: -12.741301536560059
    8. ')' → logprob: -12.991301536560059
    9. '):
' → logprob: -12.991301536560059
    10. '():' → logprob: -13.116301536560059

Token 161: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01281687617301941
    2. ':' → logprob: -4.762816905975342
    3. '<|end|>' → logprob: -5.637816905975342
    4. '        
' → logprob: -8.762816429138184
    5. '<|end|>' → logprob: -9.012816429138184
    6. '):' → logprob: -9.512816429138184
    7. ':
' → logprob: -9.637816429138184
    8. ',' → logprob: -9.762816429138184
    9. '   ' → logprob: -9.887816429138184
    10. '):
' → logprob: -10.137816429138184

Token 162: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.1861993819475174
    2. 'ans' (adapté à ' ans') → logprob: -2.561199426651001
    3. ' if' → logprob: -2.936199426651001
    4. '   ' → logprob: -4.561199188232422
    5. '       ' → logprob: -4.686199188232422
    6. 'if' → logprob: -4.811199188232422
    7. 'print' → logprob: -5.561199188232422
    8. ' print' → logprob: -5.686199188232422
    9. ' for' → logprob: -6.436199188232422
    10. '           ' → logprob: -6.561199188232422

Token 163: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0011824887478724122
    2. '[j' → logprob: -7.001182556152344
    3. '[' → logprob: -8.376182556152344
    4. '[cnt' → logprob: -10.501182556152344
    5. '[min' → logprob: -13.126182556152344
    6. '[k' → logprob: -13.251182556152344
    7. '[count' → logprob: -13.501182556152344
    8. '][' → logprob: -13.751182556152344
    9. '[ind' → logprob: -13.751182556152344
    10. '[idx' → logprob: -14.001182556152344

Token 164: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.04949267581105232
    2. '.append' → logprob: -3.049492597579956
    3. '[' → logprob: -8.049492835998535
    4. ']' → logprob: -8.049492835998535
    5. '][' → logprob: -9.799492835998535
    6. ' ].' → logprob: -9.924492835998535
    7. '   ' → logprob: -10.174492835998535
    8. '.' → logprob: -10.174492835998535
    9. 'append' → logprob: -10.549492835998535
    10. '[j' → logprob: -11.299492835998535

Token 165: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.1472419600977446e-06
    2. ' append' → logprob: -14.125000953674316
    3. '.append' → logprob: -15.375000953674316
    4. 'extend' → logprob: -15.875000953674316
    5. 'appen' → logprob: -17.375001907348633
    6. 'app' → logprob: -18.375001907348633
    7. 'appe' → logprob: -19.750001907348633
    8. '	append' → logprob: -19.875001907348633
    9. '_append' → logprob: -20.000001907348633
    10. 'Append' → logprob: -20.875001907348633

Token 166: '(cnt' (ID: 102125)
  Prédit: '(cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.48484423756599426
    2. 'cnt' → logprob: -0.9848442077636719
    3. 'j' → logprob: -5.734844207763672
    4. '(' → logprob: -6.234844207763672
    5. '(j' → logprob: -6.609844207763672
    6. 'str' → logprob: -6.734844207763672
    7. '('' → logprob: -6.984844207763672
    8. '((' → logprob: -7.859844207763672
    9. '(i' → logprob: -7.984844207763672
    10. ''' → logprob: -7.984844207763672

Token 167: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010241165291517973
    2. ')
' → logprob: -7.25102424621582
    3. ' )' → logprob: -8.12602424621582
    4. '       ' → logprob: -11.75102424621582
    5. ',' → logprob: -12.75102424621582
    6. ' )
' → logprob: -13.37602424621582
    7. '   ' → logprob: -13.75102424621582
    8. '),' → logprob: -13.75102424621582
    9. ')
' → logprob: -14.25102424621582
    10. '))' → logprob: -14.37602424621582

Token 168: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00029923528200015426
    2. '   ' → logprob: -8.125299453735352
    3. '           ' → logprob: -13.750299453735352
    4. '<|end|>' → logprob: -14.875299453735352
    5. '      ' → logprob: -15.125299453735352
    6. ' ' → logprob: -15.125299453735352
    7. 'ans' → logprob: -15.375299453735352
    8. 'if' → logprob: -15.625299453735352
    9. '        
' → logprob: -15.875299453735352
    10. '	ans' → logprob: -16.25029945373535

Token 169: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.00020509003661572933
    2. ' ans' → logprob: -8.750205039978027
    3. '       ' → logprob: -10.375205039978027
    4. '	ans' → logprob: -11.625205039978027
    5. '   ' → logprob: -12.625205039978027
    6. '           ' → logprob: -13.625205039978027
    7. 'answer' → logprob: -13.875205039978027
    8. '(ans' → logprob: -14.625205039978027
    9. 'if' → logprob: -15.250205039978027
    10. '_ans' → logprob: -16.625205993652344

Token 170: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -2.45848218582978e-06
    2. '[' → logprob: -13.12500286102295
    3. '[i' → logprob: -16.250001907348633
    4. 'j' → logprob: -16.250001907348633
    5. '[js' → logprob: -16.500001907348633
    6. '```' → logprob: -16.750001907348633
    7. '<|end|>' → logprob: -17.625001907348633
    8. '][' → logprob: -17.750001907348633
    9. ' [' → logprob: -18.000001907348633
    10. ',j' → logprob: -19.125001907348633

Token 171: '].' (ID: 1651)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.29250484704971313
    2. ').' → logprob: -1.6675047874450684
    3. '.append' → logprob: -2.7925047874450684
    4. '.' → logprob: -5.792504787445068
    5. '].' → logprob: -8.292505264282227
    6. '.)' → logprob: -9.417505264282227
    7. '])' → logprob: -10.042505264282227
    8. '<|end|>' → logprob: -10.167505264282227
    9. '[' → logprob: -10.792505264282227
    10. '.add' → logprob: -11.042505264282227

Token 172: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.6240566083070007e-06
    2. '.append' → logprob: -14.000001907348633
    3. ' append' → logprob: -14.375001907348633
    4. '	append' → logprob: -15.750001907348633
    5. 'appen' → logprob: -17.250001907348633
    6. '<|end|>' → logprob: -17.750001907348633
    7. '_append' → logprob: -18.000001907348633
    8. 'prepend' → logprob: -18.375001907348633
    9. 'Append' → logprob: -18.625001907348633
    10. 'add' → logprob: -18.750001907348633

Token 173: '(cnt' (ID: 102125)
  Prédit: '(cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.00021867557370569557
    2. 'cnt' → logprob: -8.500218391418457
    3. '[cnt' → logprob: -11.625218391418457
    4. '(' → logprob: -12.125218391418457
    5. '(count' → logprob: -14.500218391418457
    6. ' cnt' → logprob: -15.125218391418457
    7. ' (' → logprob: -16.375219345092773
    8. '	cnt' → logprob: -16.750219345092773
    9. '(
' → logprob: -18.875219345092773
    10. '(ctrl' → logprob: -19.000219345092773

Token 174: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.3915141355246305e-05
    2. ')
' → logprob: -10.75002384185791
    3. ' )' → logprob: -13.37502384185791
    4. ')return' → logprob: -15.37502384185791
    5. ')}' → logprob: -16.000024795532227
    6. '<|end|>' → logprob: -16.125024795532227
    7. ')#' → logprob: -16.250024795532227
    8. '),' → logprob: -16.375024795532227
    9. ')

' → logprob: -16.500024795532227
    10. '       ' → logprob: -16.500024795532227

Token 175: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 176: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2324172854423523
    2. 'print' (adapté à ' print') → logprob: -1.982417345046997
    3. ' for' → logprob: -3.357417345046997
    4. 'for' → logprob: -3.857417345046997
    5. '<|end|>' → logprob: -5.232417106628418
    6. ' print' → logprob: -5.857417106628418
    7. '    
' → logprob: -6.482417106628418
    8. '```' → logprob: -6.732417106628418
    9. '#' → logprob: -7.982417106628418
    10. ')' → logprob: -8.107417106628418

Token 177: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20549893379211426
    2. '('' → logprob: -2.3304989337921143
    3. '(k' → logprob: -3.0804989337921143
    4. '(len' → logprob: -3.4554989337921143
    5. '()' → logprob: -5.455498695373535
    6. '(*' → logprob: -5.455498695373535
    7. '("' → logprob: -6.830498695373535
    8. '("("' → logprob: -7.455498695373535
    9. '((' → logprob: -7.580498695373535
    10. '(n' → logprob: -9.455498695373535

Token 178: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.0007250601192936301
    2. 'YES' → logprob: -7.875725269317627
    3. ''' → logprob: -8.125724792480469
    4. '('' → logprob: -10.875724792480469
    5. 'Possible' → logprob: -11.625724792480469
    6. '"' → logprob: -12.125724792480469
    7. 'Y' → logprob: -12.250724792480469
    8. 'k' → logprob: -12.750724792480469
    9. ' Yes' → logprob: -14.000724792480469
    10. '3' → logprob: -14.500724792480469

Token 179: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00664834538474679
    2. ')
' → logprob: -5.756648540496826
    3. '')' → logprob: -6.381648540496826
    4. ',' → logprob: -6.631648540496826
    5. '<|end|>' → logprob: -8.131648063659668
    6. '")' → logprob: -9.881648063659668
    7. ' )' → logprob: -9.881648063659668
    8. '')
' → logprob: -11.256648063659668
    9. ',)' → logprob: -11.631648063659668
    10. '   ' → logprob: -12.256648063659668

Token 180: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14368155598640442
    2. ' for' → logprob: -2.393681526184082
    3. '<|end|>' → logprob: -3.393681526184082
    4. 'for' → logprob: -5.393681526184082
    5. '\n' → logprob: -5.643681526184082
    6. '    
' → logprob: -8.518681526184082
    7. '\' → logprob: -8.643681526184082
    8. '<|end|>' → logprob: -8.768681526184082
    9. '	for' → logprob: -9.518681526184082
    10. '```' → logprob: -10.393681526184082

Token 181: ' print' (ID: 2123)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005379722453653812
    2. 'print' (adapté à ' print') → logprob: -5.255379676818848
    3. ' for' → logprob: -8.880379676818848
    4. '   ' → logprob: -12.005379676818848
    5. 'if' → logprob: -15.505379676818848
    6. ' print' → logprob: -16.005380630493164
    7. 'length' → logprob: -16.005380630493164
    8. 'k' → logprob: -16.630380630493164
    9. '```' → logprob: -17.005380630493164
    10. ' ' → logprob: -17.380380630493164

Token 182: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.014636451378464699
    2. '(len' → logprob: -4.264636516571045
    3. '(' → logprob: -8.014636039733887
    4. '(*' → logprob: -9.639636039733887
    5. 'k' → logprob: -10.139636039733887
    6. '('' → logprob: -11.389636039733887
    7. '((' → logprob: -11.639636039733887
    8. 'len' → logprob: -12.139636039733887
    9. '(n' → logprob: -12.514636039733887
    10. '()' → logprob: -12.514636039733887

Token 183: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.048602137714624405
    2. ')
' → logprob: -3.0486021041870117
    3. ' )' → logprob: -12.798602104187012
    4. ',' → logprob: -13.048602104187012
    5. '*' → logprob: -13.048602104187012
    6. ')

' → logprob: -13.173602104187012
    7. ')
' → logprob: -13.548602104187012
    8. '')' → logprob: -13.673602104187012
    9. '+' → logprob: -14.173602104187012
    10. ',)' → logprob: -14.673602104187012

Token 184: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3193393051624298
    2. 'for' → logprob: -1.4443392753601074
    3. ' for' → logprob: -3.8193392753601074
    4. '<|end|>' → logprob: -4.194339275360107
    5. '<|end|>' → logprob: -8.944339752197266
    6. '    
' → logprob: -9.069339752197266
    7. '	for' → logprob: -9.319339752197266
    8. '\' → logprob: -10.694339752197266
    9. '```' → logprob: -10.944339752197266
    10. '\n' → logprob: -11.194339752197266

Token 185: ' print' (ID: 2123)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.739826181321405e-05
    2. 'print' (adapté à ' print') → logprob: -10.00004768371582
    3. ' for' → logprob: -13.62504768371582
    4. '   ' → logprob: -14.25004768371582
    5. '[' → logprob: -18.87504768371582
    6. '    ' → logprob: -19.00004768371582
    7. '  ' → logprob: -19.37504768371582
    8. ' ' → logprob: -19.75004768371582
    9. '0' → logprob: -19.75004768371582
    10. 'from' → logprob: -20.25004768371582

Token 186: '('\' (ID: 24345)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.4147440195083618
    2. '('\' → logprob: -1.2897440195083618
    3. '('' → logprob: -2.7897439002990723
    4. '(' → logprob: -6.539743900299072
    5. '(*(' → logprob: -7.039743900299072
    6. '("\' → logprob: -8.53974437713623
    7. '("' → logprob: -9.16474437713623
    8. '()' → logprob: -9.91474437713623
    9. '*' → logprob: -11.03974437713623
    10. '(\' → logprob: -12.41474437713623

Token 187: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00033320096554234624
    2. ''' → logprob: -8.125332832336426
    3. '
' → logprob: -10.750332832336426
    4. ''\' → logprob: -12.500332832336426
    5. ' ' → logprob: -12.625332832336426
    6. '\n' → logprob: -13.000332832336426
    7. ')' → logprob: -13.250332832336426
    8. 'join' → logprob: -13.875332832336426
    9. ' 
' → logprob: -14.750332832336426
    10. ''.' → logprob: -15.250332832336426

Token 188: ''.' (ID: 6120)
  Prédit: ''.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.0004701146390289068
    2. '.join' → logprob: -8.125470161437988
    3. ''' → logprob: -9.625470161437988
    4. '''.' → logprob: -10.000470161437988
    5. 'join' → logprob: -10.125470161437988
    6. '.' → logprob: -11.500470161437988
    7. '".' → logprob: -11.625470161437988
    8. ''\' → logprob: -13.125470161437988
    9. '')' → logprob: -14.000470161437988
    10. ' '.' → logprob: -15.375470161437988

Token 189: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -3.292907877039397e-06
    2. 'print' → logprob: -12.75000286102295
    3. ' join' → logprob: -15.50000286102295
    4. 'jo' → logprob: -16.625003814697266
    5. 'j' → logprob: -17.000003814697266
    6. '.join' → logprob: -17.625003814697266
    7. 'sep' → logprob: -17.750003814697266
    8. ''.' → logprob: -17.875003814697266
    9. 'strip' → logprob: -19.250003814697266
    10. '```' → logprob: -19.250003814697266

Token 190: '(f' (ID: 1526)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.00014025058771949261
    2. ''' → logprob: -9.375140190124512
    3. '(map' → logprob: -10.500140190124512
    4. '(' → logprob: -10.875140190124512
    5. 'map' → logprob: -12.500140190124512
    6. '['' → logprob: -13.250140190124512
    7. '(('' → logprob: -13.875140190124512
    8. ''m' → logprob: -14.000140190124512
    9. '(['' → logprob: -14.500140190124512
    10. '("' → logprob: -14.875140190124512

Token 191: '"{' (ID: 27510)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0003166353271808475
    2. '('' → logprob: -8.500316619873047
    3. '"' → logprob: -9.375316619873047
    4. ''m' → logprob: -11.500316619873047
    5. ''s' → logprob: -12.375316619873047
    6. ''a' → logprob: -12.875316619873047
    7. ')' → logprob: -13.375316619873047
    8. ''ap' → logprob: -13.375316619873047
    9. '(' → logprob: -13.875316619873047
    10. ''int' → logprob: -14.375316619873047

Token 192: 'k' (ID: 74)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00011248346709180623
    2. ''' → logprob: -9.375112533569336
    3. ' len' → logprob: -10.750112533569336
    4. '(len' → logprob: -12.750112533569336
    5. 'str' → logprob: -13.500112533569336
    6. 'k' → logprob: -14.625112533569336
    7. 'x' → logprob: -14.875112533569336
    8. '"' → logprob: -15.125112533569336
    9. 'cnt' → logprob: -15.375112533569336
    10. '[len' → logprob: -15.625112533569336

Token 193: '-' (ID: 12)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.09098684042692184
    2. '[i' → logprob: -2.465986728668213
    3. '-' → logprob: -6.840986728668213
    4. 'len' → logprob: -8.215987205505371
    5. '[len' → logprob: -8.340987205505371
    6. '(i' → logprob: -9.090987205505371
    7. '(len' → logprob: -9.215987205505371
    8. '[' → logprob: -9.340987205505371
    9. '[idx' → logprob: -10.215987205505371
    10. 'i' → logprob: -11.340987205505371

Token 194: '1' (ID: 16)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.05057443678379059
    2. '1' → logprob: -3.050574541091919
    3. ' len' → logprob: -6.30057430267334
    4. '(len' → logprob: -9.55057430267334
    5. ' ' → logprob: -10.42557430267334
    6. 'i' → logprob: -10.67557430267334
    7. '2' → logprob: -11.30057430267334
    8. '=len' → logprob: -12.55057430267334
    9. ''' → logprob: -12.92557430267334
    10. 'l' → logprob: -13.30057430267334

Token 195: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.004800107330083847
    2. ' }' → logprob: -5.379800319671631
    3. ''' → logprob: -9.254799842834473
    4. ' if' → logprob: -10.379799842834473
    5. ')' → logprob: -11.754799842834473
    6. '"' → logprob: -11.879799842834473
    7. '}"' → logprob: -12.004799842834473
    8. ',' → logprob: -12.129799842834473
    9. '}{' → logprob: -12.129799842834473
    10. '*' → logprob: -12.504799842834473

Token 196: ' {'' (ID: 11881)
  Prédit: ' {''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {'' → logprob: -0.7120169401168823
    2. ' '+'' → logprob: -1.7120169401168823
    3. ' {' → logprob: -3.087017059326172
    4. ' "' → logprob: -3.087017059326172
    5. ' }' → logprob: -3.212017059326172
    6. '}' → logprob: -3.212017059326172
    7. ' '' → logprob: -3.462017059326172
    8. ' {"' → logprob: -3.587017059326172
    9. ' +' → logprob: -3.837017059326172
    10. ' ans' → logprob: -3.962017059326172

Token 197: ' '.' (ID: 12662)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0896201878786087
    2. ''.' → logprob: -2.5896201133728027
    3. ' '.' → logprob: -4.839620113372803
    4. '".' → logprob: -6.214620113372803
    5. '''.' → logprob: -7.714620113372803
    6. '"' → logprob: -8.589620590209961
    7. '}' → logprob: -9.339620590209961
    8. ''t' → logprob: -11.339620590209961
    9. ' ".' → logprob: -11.714620590209961
    10. '{'' → logprob: -12.714620590209961

Token 198: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.19590860605239868
    2. ''' → logprob: -1.820908546447754
    3. ''.' → logprob: -4.570908546447754
    4. '.join' → logprob: -5.945908546447754
    5. '''.' → logprob: -6.320908546447754
    6. ' '.' → logprob: -7.820908546447754
    7. ' join' → logprob: -7.945908546447754
    8. ''s' → logprob: -9.195908546447754
    9. '"' → logprob: -9.320908546447754
    10. 'print' → logprob: -9.570908546447754

Token 199: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0020265427883714437
    2. 'map' → logprob: -6.252026557922363
    3. '(str' → logprob: -9.252026557922363
    4. 'str' → logprob: -13.252026557922363
    5. ' map' → logprob: -15.627026557922363
    6. '	map' → logprob: -17.377025604248047
    7. '(' → logprob: -18.502025604248047
    8. ',map' → logprob: -18.752025604248047
    9. '.map' → logprob: -18.877025604248047
    10. '```' → logprob: -20.502025604248047

Token 200: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.004078997299075127
    2. 'str' → logprob: -5.5040788650512695
    3. '[str' → logprob: -15.62907886505127
    4. '(map' → logprob: -15.62907886505127
    5. '=str' → logprob: -16.754079818725586
    6. ',str' → logprob: -16.754079818725586
    7. ':str' → logprob: -17.379079818725586
    8. ' str' → logprob: -18.129079818725586
    9. '```' → logprob: -18.629079818725586
    10. '	str' → logprob: -18.754079818725586

Token 201: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5821446776390076
    2. '(ans' → logprob: -0.8321446776390076
    3. ',a' → logprob: -5.832144737243652
    4. ',(' → logprob: -6.707144737243652
    5. ',x' → logprob: -6.832144737243652
    6. 'ans' → logprob: -8.457144737243652
    7. '(' → logprob: -8.582144737243652
    8. ' ,' → logprob: -9.082144737243652
    9. '(x' → logprob: -9.207144737243652
    10. ' ans' → logprob: -9.707144737243652

Token 202: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.012885010801255703
    2. 'line' → logprob: -4.887885093688965
    3. 'ans' → logprob: -6.012885093688965
    4. 'x' → logprob: -7.262885093688965
    5. 'lst' → logprob: -7.262885093688965
    6. 'arr' → logprob: -7.387885093688965
    7. 'group' → logprob: -8.262885093688965
    8. 'a' → logprob: -8.387885093688965
    9. 'r' → logprob: -9.012885093688965
    10. 'v' → logprob: -9.262885093688965

Token 203: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -1.4617256056226324e-05
    2. ')}' → logprob: -12.000014305114746
    3. ' ))' → logprob: -12.625014305114746
    4. '[' → logprob: -13.875014305114746
    5. ' ' → logprob: -14.375014305114746
    6. '   ' → logprob: -14.500014305114746
    7. '))}
' → logprob: -14.500014305114746
    8. ''))' → logprob: -14.625014305114746
    9. 'row' → logprob: -14.875014305114746
    10. '```' → logprob: -15.000014305114746

Token 204: '}"' (ID: 21503)
  Prédit: '}"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}"' → logprob: -0.014717272482812405
    2. ')"' → logprob: -4.764717102050781
    3. ')}' → logprob: -5.389717102050781
    4. '}")' → logprob: -6.889717102050781
    5. '})' → logprob: -8.514717102050781
    6. ')' → logprob: -9.264717102050781
    7. '}' → logprob: -9.389717102050781
    8. '"' → logprob: -9.764717102050781
    9. '}'' → logprob: -10.764717102050781
    10. '))' → logprob: -10.889717102050781

Token 205: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.693362295627594
    2. '))' → logprob: -0.693362295627594
    3. '   ' → logprob: -9.56836223602295
    4. ')))' → logprob: -9.81836223602295
    5. 'for' → logprob: -10.81836223602295
    6. '))
' → logprob: -10.81836223602295
    7. ')}' → logprob: -11.19336223602295
    8. ')
' → logprob: -11.69336223602295
    9. ' for' → logprob: -11.81836223602295
    10. '       ' → logprob: -12.19336223602295

Token 206: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.003179975086823106
    2. ' row' → logprob: -5.753180027008057
    3. 'ans' → logprob: -13.128179550170898
    4. ' ans' → logprob: -16.1281795501709
    5. '	row' → logprob: -16.8781795501709
    6. 'r' → logprob: -17.3781795501709
    7. 'rown' → logprob: -19.0031795501709
    8. '(row' → logprob: -19.3781795501709
    9. '[row' → logprob: -19.6281795501709
    10. ' ' → logprob: -20.0031795501709

Token 207: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018223460763692856
    2. 'in' → logprob: -4.018223285675049
    3. ')' → logprob: -10.143223762512207
    4. '<|end|>' → logprob: -10.393223762512207
    5. '(ans' → logprob: -13.768223762512207
    6. ' ' → logprob: -14.893223762512207
    7. '  ' → logprob: -15.018223762512207
    8. ' ans' → logprob: -15.143223762512207
    9. 'ans' → logprob: -15.393223762512207
    10. '<|end|>' → logprob: -15.643223762512207

Token 208: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -5.080963092041202e-06
    2. ' ans' → logprob: -12.500004768371582
    3. 'range' → logprob: -14.000004768371582
    4. '(ans' → logprob: -14.500004768371582
    5. 'answer' → logprob: -18.1250057220459
    6. '	ans' → logprob: -20.6250057220459
    7. '_ans' → logprob: -22.0000057220459
    8. '   ' → logprob: -23.0000057220459
    9. '
' → logprob: -24.0000057220459
    10. ' range' → logprob: -24.1250057220459

Token 209: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0486072339117527
    2. ')' → logprob: -3.048607349395752
    3. ')))' → logprob: -11.548606872558594
    4. '))
' → logprob: -11.798606872558594
    5. '   ' → logprob: -13.548606872558594
    6. ')}' → logprob: -14.673606872558594
    7. ')
' → logprob: -14.923606872558594
    8. ' ))' → logprob: -15.798606872558594
    9. '})' → logprob: -16.048606872558594
    10. '),' → logprob: -16.798606872558594

Token 210: 'solve' (ID: 117273)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 211: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0007569773588329554
    2. '(' → logprob: -7.250756740570068
    3. '();' → logprob: -11.250757217407227
    4. '()
' → logprob: -11.875757217407227
    5. '```' → logprob: -12.375757217407227
    6. '()">' → logprob: -12.500757217407227
    7. '()\' → logprob: -12.750757217407227
    8. '<|end|>' → logprob: -12.750757217407227
    9. '())' → logprob: -13.250757217407227
    10. '()<' → logprob: -13.500757217407227


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 209
Tokens correctement prédits (1ère position, stricte): 102
Tokens correctement prédits (1ère position, avec adaptation): 108
Tokens correctement prédits (top 10): 174
Précision stricte (1ère position): 48.80%
Précision adaptée (1ère position): 51.67%
Précision (top 10): 83.25%
================================================================================
