================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:49:11
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Plutôt que defaultdict, créeons notre propre compteur, et utilisons quelques noms bizarres
iNput = lambda: __import__("sys").stdin.readline().rstrip('\n')
Z = int(iNput())
SS = [iNput() for __ in range(Z)]
Bucketizer = {}
for idx in range(Z):
    keyform = ''.join(sorted(SS[idx]))
    if keyform not in Bucketizer:
        Bucketizer[keyform] = 1
    else:
        Bucketizer[keyform] += 1

_reZult = []
for ankey in Bucketizer:
    count = Bucketizer[ankey]
    _reZult.append(count*(count-1)//2)
print(sum(_reZult))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Pl' (ID: 2064)
  → Token d'amorce (pas de prédiction)

Token 2: 'ut' (ID: 339)
  → Token d'amorce (pas de prédiction)

Token 3: 'ôt' (ID: 11060)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.4012884497642517
    2. 'o' → logprob: -1.5262885093688965
    3. 'e' → logprob: -2.7762885093688965
    4. 'a' → logprob: -3.6512885093688965
    5. 'er' → logprob: -5.0262885093688965
    6. '#' → logprob: -5.5262885093688965
    7. 'on's' → logprob: -5.5262885093688965
    8. 'i' → logprob: -6.2762885093688965
    9. 'oon' → logprob: -6.9012885093688965
    10. ' on' → logprob: -7.0262885093688965

Token 4: ' que' (ID: 661)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9221232533454895
    2. ' ' → logprob: -1.5471231937408447
    3. ':' → logprob: -1.9221231937408447
    4. '#' → logprob: -2.4221231937408447
    5. '```' → logprob: -3.1721231937408447
    6. '_' → logprob: -3.4221231937408447
    7. '=' → logprob: -4.047123432159424
    8. '`' → logprob: -4.672123432159424
    9. ' #' → logprob: -4.797123432159424
    10. 'é' → logprob: -5.047123432159424

Token 5: ' defaultdict' (ID: 107098)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.859641432762146
    2. 'de' → logprob: -1.109641432762146
    3. ' d' → logprob: -1.859641432762146
    4. ' de' → logprob: -3.1096415519714355
    5. '```' → logprob: -3.8596415519714355
    6. '`' → logprob: -4.7346415519714355
    7. '#' → logprob: -4.9846415519714355
    8. ' ' → logprob: -5.4846415519714355
    9. ',' → logprob: -6.2346415519714355
    10. 'que' → logprob: -7.2346415519714355

Token 6: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1632230579853058
    2. '[' → logprob: -2.1632230281829834
    3. '(' → logprob: -3.5382230281829834
    4. '{' → logprob: -5.7882232666015625
    5. '.' → logprob: -7.1632232666015625
    6. ':' → logprob: -7.4132232666015625
    7. '```' → logprob: -7.7882232666015625
    8. '`' → logprob: -8.163223266601562
    9. 'from' → logprob: -8.413223266601562
    10. ' ' → logprob: -8.413223266601562

Token 7: ' crée' (ID: 102256)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7794061303138733
    2. 'collections' → logprob: -2.2794060707092285
    3. ' from' → logprob: -2.9044060707092285
    4. ',' → logprob: -3.1544060707092285
    5. ' dict' → logprob: -3.2794060707092285
    6. 'dict' → logprob: -3.4044060707092285
    7. 'import' → logprob: -3.4044060707092285
    8. 'from' → logprob: -3.5294060707092285
    9. ' ' → logprob: -3.5294060707092285
    10. '{' → logprob: -3.6544060707092285

Token 8: 'ons' (ID: 1808)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.06035689264535904
    2. ' ' → logprob: -3.935356855392456
    3. ' une' → logprob: -4.060357093811035
    4. 'un' → logprob: -5.310357093811035
    5. ' =' → logprob: -5.435357093811035
    6. '_' → logprob: -5.560357093811035
    7. ' a' → logprob: -6.185357093811035
    8. ' d' → logprob: -6.560357093811035
    9. ' dict' → logprob: -6.810357093811035
    10. '_un' → logprob: -6.935357093811035

Token 9: ' notre' (ID: 12092)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.1140747144818306
    2. ' ' → logprob: -3.11407470703125
    3. ' une' → logprob: -4.11407470703125
    4. ' d' → logprob: -4.36407470703125
    5. ' a' → logprob: -4.48907470703125
    6. ' =' → logprob: -5.11407470703125
    7. 'un' → logprob: -5.36407470703125
    8. ' dict' → logprob: -6.11407470703125
    9. ' {}' → logprob: -6.73907470703125
    10. '{}' → logprob: -6.98907470703125

Token 10: ' propre' (ID: 40682)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23411597311496735
    2. ' dict' → logprob: -2.6091160774230957
    3. ' class' → logprob: -3.6091160774230957
    4. ' diction' → logprob: -3.8591160774230957
    5. ' Counter' → logprob: -3.9841160774230957
    6. ' d' → logprob: -4.484116077423096
    7. ' ' → logprob: -4.734116077423096
    8. ' propre' → logprob: -5.359116077423096
    9. '_' → logprob: -5.609116077423096
    10. ' objet' → logprob: -5.734116077423096

Token 11: ' compteur' (ID: 163344)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0070604849606752396
    2. ' ```' → logprob: -6.882060527801514
    3. ' class' → logprob: -7.007060527801514
    4. '_' → logprob: -7.132060527801514
    5. 'class' → logprob: -7.132060527801514
    6. ' _' → logprob: -7.257060527801514
    7. ' 
' → logprob: -7.507060527801514
    8. 'dict' → logprob: -8.007060050964355
    9. ' dict' → logprob: -8.132060050964355
    10. '  ' → logprob: -8.257060050964355

Token 12: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.483918696641922
    2. '(' → logprob: -1.6089186668395996
    3. ' =' → logprob: -3.1089186668395996
    4. 'class' → logprob: -3.3589186668395996
    5. 'd' → logprob: -3.7339186668395996
    6. 'c' → logprob: -4.2339186668396
    7. ' ' → logprob: -4.6089186668396
    8. 's' → logprob: -4.9839186668396
    9. '```' → logprob: -5.1089186668396
    10. '=' → logprob: -5.2339186668396

Token 13: ' et' (ID: 859)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3295951187610626
    2. 'class' → logprob: -2.2045950889587402
    3. ' class' → logprob: -2.9545950889587402
    4. '_' → logprob: -3.2045950889587402
    5. ' =' → logprob: -3.8295950889587402
    6. ',' → logprob: -4.95459508895874
    7. '(' → logprob: -5.45459508895874
    8. ' :' → logprob: -5.82959508895874
    9. ' ,' → logprob: -5.82959508895874
    10. ':' → logprob: -5.82959508895874

Token 14: ' utilis' (ID: 18688)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.9909234046936035
    2. ' une' → logprob: -2.1159234046936035
    3. ' ' → logprob: -2.2409234046936035
    4. ' ' → logprob: -2.3659234046936035
    5. ' class' → logprob: -2.6159234046936035
    6. ' continu' → logprob: -3.9909234046936035
    7. ' d' → logprob: -3.9909234046936035
    8. ' a' → logprob: -4.4909234046936035
    9. 'class' → logprob: -4.4909234046936035
    10. ' iter' → logprob: -4.6159234046936035

Token 15: 'ons' (ID: 1808)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.3981725871562958
    2. 'a' → logprob: -1.5231726169586182
    3. 'e' → logprob: -2.898172616958618
    4. 'ons' → logprob: -4.023172378540039
    5. 't' → logprob: -4.273172378540039
    6. 'n' → logprob: -4.773172378540039
    7. 'on' → logprob: -5.523172378540039
    8. '#' → logprob: -6.148172378540039
    9. '```' → logprob: -6.273172378540039
    10. 's' → logprob: -6.398172378540039

Token 16: ' quelques' (ID: 17687)
  Prédit: ' Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Counter' → logprob: -0.5816472768783569
    2. ' ' → logprob: -1.831647276878357
    3. ' un' → logprob: -2.5816473960876465
    4. '_' → logprob: -2.7066473960876465
    5. ' ' → logprob: -3.7066473960876465
    6. '_counter' → logprob: -4.2066473960876465
    7. 'Counter' → logprob: -4.5816473960876465
    8. ' =' → logprob: -4.7066473960876465
    9. ' collections' → logprob: -4.7066473960876465
    10. ' defaultdict' → logprob: -4.7066473960876465

Token 17: ' noms' (ID: 97041)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8982222676277161
    2. ' ' → logprob: -1.0232222080230713
    3. ' ' → logprob: -3.2732222080230713
    4. ' espaces' → logprob: -3.2732222080230713
    5. ' lignes' → logprob: -3.3982222080230713
    6. '```' → logprob: -4.14822244644165
    7. ' _' → logprob: -4.39822244644165
    8. '\' → logprob: -4.64822244644165
    9. ' mots' → logprob: -4.89822244644165
    10. ' 
' → logprob: -4.89822244644165

Token 18: ' b' (ID: 287)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5003751516342163
    2. '```' → logprob: -2.125375270843506
    3. 'd' → logprob: -2.625375270843506
    4. ' ' → logprob: -3.125375270843506
    5. ' =' → logprob: -3.500375270843506
    6. 'n' → logprob: -3.750375270843506
    7. '`' → logprob: -4.000375270843506
    8. '=' → logprob: -5.000375270843506
    9. 'c' → logprob: -5.125375270843506
    10. ',' → logprob: -5.125375270843506

Token 19: 'izar' (ID: 6552)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.6335111856460571
    2. 'a' → logprob: -1.7585111856460571
    3. 'ien' → logprob: -2.2585110664367676
    4. '```' → logprob: -2.2585110664367676
    5. 'e' → logprob: -2.3835110664367676
    6. '_' → logprob: -2.8835110664367676
    7. 'ase' → logprob: -3.1335110664367676
    8. '_counter' → logprob: -3.2585110664367676
    9. 'r' → logprob: -3.5085110664367676
    10. '__' → logprob: -3.7585110664367676

Token 20: 'res' (ID: 430)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.14451415836811066
    2. ' ' → logprob: -2.3945140838623047
    3. ' _' → logprob: -4.644514083862305
    4. ' =' → logprob: -5.269514083862305
    5. 's' → logprob: -5.644514083862305
    6. 'm' → logprob: -5.894514083862305
    7. 'e' → logprob: -6.019514083862305
    8. 'n' → logprob: -6.394514083862305
    9. '(' → logprob: -6.394514083862305
    10. 'u' → logprob: -6.519514083862305

Token 21: '
' (ID: 198)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.17843244969844818
    2. 'd' → logprob: -2.8034324645996094
    3. 'c' → logprob: -3.9284324645996094
    4. ':' → logprob: -4.053432464599609
    5. ' ' → logprob: -4.428432464599609
    6. '```' → logprob: -4.678432464599609
    7. 'n' → logprob: -4.803432464599609
    8. 'class' → logprob: -4.928432464599609
    9. 'a' → logprob: -5.803432464599609
    10. '`' → logprob: -5.928432464599609

Token 22: 'i' (ID: 72)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6099773645401001
    2. 'd' → logprob: -1.7349773645401
    3. '```' → logprob: -2.3599772453308105
    4. 'c' → logprob: -3.1099772453308105
    5. 'n' → logprob: -3.4849772453308105
    6. '`' → logprob: -3.7349772453308105
    7. ' ' → logprob: -3.9849772453308105
    8. 'a' → logprob: -4.1099772453308105
    9. 'i' → logprob: -4.6099772453308105
    10. ':' → logprob: -5.1099772453308105

Token 23: 'N' (ID: 45)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.021288463845849037
    2. 'n' → logprob: -4.8962883949279785
    3. 'mp' → logprob: -5.1462883949279785
    4. 'f' → logprob: -5.5212883949279785
    5. 't' → logprob: -6.1462883949279785
    6. 'tem' → logprob: -8.146288871765137
    7. 's' → logprob: -8.521288871765137
    8. '_' → logprob: -8.521288871765137
    9. '=' → logprob: -8.646288871765137
    10. 'tems' → logprob: -9.021288871765137

Token 24: 'put' (ID: 772)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6446670889854431
    2. 't' → logprob: -1.519667148590088
    3. 'c' → logprob: -1.894667148590088
    4. 'd' → logprob: -3.644667148590088
    5. 'i' → logprob: -3.769667148590088
    6. 'it' → logprob: -4.269667148590088
    7. 'cr' → logprob: -4.644667148590088
    8. '_' → logprob: -5.019667148590088
    9. '_counter' → logprob: -5.019667148590088
    10. 'p' → logprob: -5.519667148590088

Token 25: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6783066391944885
    2. ' =' → logprob: -1.1783065795898438
    3. '[' → logprob: -2.4283065795898438
    4. '=' → logprob: -3.3033065795898438
    5. '(' → logprob: -4.178306579589844
    6. ' ' → logprob: -4.303306579589844
    7. ' _' → logprob: -4.553306579589844
    8. 's' → logprob: -5.053306579589844
    9. ',' → logprob: -5.928306579589844
    10. '.' → logprob: -6.053306579589844

Token 26: ' lambda' (ID: 27871)
  Prédit: ' {}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' {}' → logprob: -0.3532008230686188
    2. '{}' → logprob: -1.4782007932662964
    3. ' ' → logprob: -3.103200912475586
    4. ' []' → logprob: -4.228200912475586
    5. ' defaultdict' → logprob: -6.228200912475586
    6. '0' → logprob: -6.228200912475586
    7. ' {' → logprob: -6.603200912475586
    8. '  ' → logprob: -7.228200912475586
    9. ' "' → logprob: -7.603200912475586
    10. '[]' → logprob: -7.603200912475586

Token 27: ':' (ID: 25)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.1846277117729187
    2. ' s' → logprob: -2.4346277713775635
    3. ' :' → logprob: -3.1846277713775635
    4. ' n' → logprob: -4.059627532958984
    5. ':' → logprob: -4.809627532958984
    6. ' a' → logprob: -5.934627532958984
    7. ' ' → logprob: -6.184627532958984
    8. ' l' → logprob: -6.309627532958984
    9. ' i' → logprob: -6.434627532958984
    10. ' lst' → logprob: -6.809627532958984

Token 28: ' __' (ID: 2516)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.070090152323246
    2. 'input' → logprob: -2.6950900554656982
    3. ' int' → logprob: -9.445090293884277
    4. 'int' → logprob: -10.320090293884277
    5. ' ' → logprob: -11.445090293884277
    6. ' in' → logprob: -11.695090293884277
    7. ' inp' → logprob: -12.070090293884277
    8. ' raw' → logprob: -12.570090293884277
    9. 'in' → logprob: -13.070090293884277
    10. 'raw' → logprob: -13.695090293884277

Token 29: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.14457976818084717
    2. 'built' → logprob: -2.0195798873901367
    3. 'input' → logprob: -6.644579887390137
    4. 'stdin' → logprob: -8.144579887390137
    5. 'name' → logprob: -9.269579887390137
    6. 'im' → logprob: -9.394579887390137
    7. 'builtin' → logprob: -9.644579887390137
    8. 'next' → logprob: -10.519579887390137
    9. 'i' → logprob: -11.144579887390137
    10. 'imp' → logprob: -11.769579887390137

Token 30: '__("' (ID: 128615)
  Prédit: '__(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__('' → logprob: -0.029049834236502647
    2. '__("' → logprob: -3.779049873352051
    3. '__' → logprob: -5.279049873352051
    4. '__(' → logprob: -8.15404987335205
    5. '__(
' → logprob: -8.40404987335205
    6. '('' → logprob: -9.02904987335205
    7. '(' → logprob: -10.77904987335205
    8. '_' → logprob: -11.27904987335205
    9. '('__' → logprob: -11.27904987335205
    10. '__((' → logprob: -12.52904987335205

Token 31: 'sys' (ID: 17324)
  Prédit: 'sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.011991401202976704
    2. 'built' → logprob: -4.636991500854492
    3. 'code' → logprob: -6.886991500854492
    4. '_sys' → logprob: -7.761991500854492
    5. 'random' → logprob: -9.011991500854492
    6. '__' → logprob: -9.136991500854492
    7. 'collections' → logprob: -9.136991500854492
    8. 'sy' → logprob: -9.261991500854492
    9. 'read' → logprob: -10.011991500854492
    10. 're' → logprob: -10.011991500854492

Token 32: '").' (ID: 3172)
  Prédit: '").'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '").' → logprob: -0.2551654279232025
    2. '.stdin' → logprob: -1.755165457725525
    3. '.' → logprob: -3.7551653385162354
    4. '")' → logprob: -4.1301655769348145
    5. '.stdout' → logprob: -5.6301655769348145
    6. ').' → logprob: -6.0051655769348145
    7. ' ' → logprob: -6.8801655769348145
    8. '.argv' → logprob: -7.3801655769348145
    9. '<|end|>' → logprob: -7.3801655769348145
    10. '  ' → logprob: -7.5051655769348145

Token 33: 'stdin' (ID: 132953)
  Prédit: 'stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -5.9153885558771435e-06
    2. 'stdout' → logprob: -12.375005722045898
    3. 'stderr' → logprob: -14.375005722045898
    4. 'std' → logprob: -14.500005722045898
    5. ' stdin' → logprob: -15.250005722045898
    6. '.stdin' → logprob: -15.750005722045898
    7. 'argv' → logprob: -17.0000057220459
    8. '(stdin' → logprob: -17.2500057220459
    9. 'st' → logprob: -17.3750057220459
    10. 'stdlib' → logprob: -18.3750057220459

Token 34: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.015456204302608967
    2. '.' → logprob: -4.765456199645996
    3. '.read' → logprob: -5.015456199645996
    4. '.readlines' → logprob: -9.390456199645996
    5. 'read' → logprob: -9.640456199645996
    6. '.buffer' → logprob: -12.015456199645996
    7. ' readline' → logprob: -12.140456199645996
    8. '.re' → logprob: -12.265456199645996
    9. '.r' → logprob: -12.765456199645996
    10. '.Read' → logprob: -12.765456199645996

Token 35: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.39669346809387207
    2. '().' → logprob: -1.146693468093872
    3. '(' → logprob: -4.771693229675293
    4. ')' → logprob: -7.771693229675293
    5. '()
' → logprob: -8.146693229675293
    6. '```' → logprob: -8.771693229675293
    7. ' ()' → logprob: -9.646693229675293
    8. '()(' → logprob: -9.771693229675293
    9. '()

' → logprob: -10.146693229675293
    10. '.strip' → logprob: -10.146693229675293

Token 36: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.20143906772136688
    2. 'rstrip' → logprob: -1.7014390230178833
    3. ' strip' → logprob: -10.701438903808594
    4. 'r' → logprob: -13.076438903808594
    5. 'rst' → logprob: -14.576438903808594
    6. '_strip' → logprob: -15.576438903808594
    7. '-strip' → logprob: -16.326438903808594
    8. '.rstrip' → logprob: -16.451438903808594
    9. '(strip' → logprob: -16.451438903808594
    10. 'str' → logprob: -16.951438903808594

Token 37: '('\' (ID: 24345)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03234490752220154
    2. '(
' → logprob: -3.7823448181152344
    3. '()' → logprob: -4.907344818115234
    4. '(

' → logprob: -7.032344818115234
    5. ',' → logprob: -8.282344818115234
    6. '
' → logprob: -9.032344818115234
    7. ' (' → logprob: -9.407344818115234
    8. ')' → logprob: -9.657344818115234
    9. '()
' → logprob: -9.907344818115234
    10. '_' → logprob: -10.532344818115234

Token 38: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.696889623621246e-06
    2. '\n' → logprob: -12.87500286102295
    3. 'r' → logprob: -17.250001907348633
    4. ' n' → logprob: -17.875001907348633
    5. ')' → logprob: -18.500001907348633
    6. 'u' → logprob: -18.750001907348633
    7. 'newline' → logprob: -19.500001907348633
    8. '	n' → logprob: -19.750001907348633
    9. '012' → logprob: -19.875001907348633
    10. '
' → logprob: -19.875001907348633

Token 39: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.035316918045282364
    2. '")' → logprob: -3.4103169441223145
    3. ')' → logprob: -6.5353169441223145
    4. ''' → logprob: -9.285316467285156
    5. '"' → logprob: -9.410316467285156
    6. '')"' → logprob: -10.910316467285156
    7. '')
' → logprob: -11.160316467285156
    8. ''))' → logprob: -12.285316467285156
    9. '')

' → logprob: -13.910316467285156
    10. ''),' → logprob: -14.035316467285156

Token 40: 'Z' (ID: 57)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6591876149177551
    2. '
' → logprob: -1.9091875553131104
    3. 'd' → logprob: -2.0341875553131104
    4. 'def' → logprob: -2.4091875553131104
    5. '_' → logprob: -3.7841875553131104
    6. 'n' → logprob: -4.0341877937316895
    7. 'class' → logprob: -4.0341877937316895
    8. 'from' → logprob: -4.7841877937316895
    9. 'a' → logprob: -5.1591877937316895
    10. '#' → logprob: -5.4091877937316895

Token 41: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8430452346801758
    2. '=' → logprob: -0.9680452346801758
    3. ' =' → logprob: -2.218045234680176
    4. 'a' → logprob: -4.093045234680176
    5. 'from' → logprob: -4.468045234680176
    6. '0' → logprob: -4.593045234680176
    7. '_counter' → logprob: -5.593045234680176
    8. '={}' → logprob: -5.718045234680176
    9. '{' → logprob: -5.968045234680176
    10. ' ' → logprob: -5.968045234680176

Token 42: ' int' (ID: 677)
  Prédit: ' {}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' {}' → logprob: -0.18836863338947296
    2. '{}' → logprob: -1.8133686780929565
    3. ' ' → logprob: -6.313368797302246
    4. ' defaultdict' → logprob: -6.313368797302246
    5. ' dict' → logprob: -6.563368797302246
    6. 'dict' → logprob: -6.938368797302246
    7. ' []' → logprob: -6.938368797302246
    8. '0' → logprob: -7.438368797302246
    9. ' {' → logprob: -7.938368797302246
    10. ' lambda' → logprob: -8.813368797302246

Token 43: '(i' (ID: 3649)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18179531395435333
    2. '(i' → logprob: -1.806795358657837
    3. '(input' → logprob: -7.056795120239258
    4. '('' → logprob: -7.056795120239258
    5. '()' → logprob: -9.056795120239258
    6. '(
' → logprob: -9.306795120239258
    7. '("' → logprob: -10.931795120239258
    8. 'i' → logprob: -11.056795120239258
    9. '(Z' → logprob: -11.056795120239258
    10. '<|end|>' → logprob: -11.056795120239258

Token 44: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0029599887784570456
    2. 'n' → logprob: -6.002960205078125
    3. 'put' → logprob: -7.877960205078125
    4. 'ut' → logprob: -9.502960205078125
    5. '(' → logprob: -11.377960205078125
    6. '(input' → logprob: -11.627960205078125
    7. 'input' → logprob: -13.377960205078125
    8. '```' → logprob: -13.502960205078125
    9. '(n' → logprob: -13.877960205078125
    10. ' N' → logprob: -13.877960205078125

Token 45: 'put' (ID: 772)
  Prédit: 'put'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'put' → logprob: -0.00030304977553896606
    2. 'ut' → logprob: -8.125303268432617
    3. 'n' → logprob: -13.625303268432617
    4. 'Put' → logprob: -14.000303268432617
    5. 'pot' → logprob: -14.125303268432617
    6. 'but' → logprob: -14.250303268432617
    7. 'PUT' → logprob: -14.750303268432617
    8. '_put' → logprob: -14.875303268432617
    9. '(input' → logprob: -15.000303268432617
    10. 'pu' → logprob: -15.000303268432617

Token 46: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.038117457181215286
    2. '()' → logprob: -3.2881174087524414
    3. ')' → logprob: -10.163117408752441
    4. '())
' → logprob: -11.288117408752441
    5. '(' → logprob: -11.913117408752441
    6. ' ())' → logprob: -11.913117408752441
    7. '()
' → logprob: -12.288117408752441
    8. '();)' → logprob: -13.288117408752441
    9. '()))' → logprob: -13.413117408752441
    10. '()`' → logprob: -14.288117408752441

Token 47: 'SS' (ID: 3642)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.182335376739502
    2. ' 
' → logprob: -2.057335376739502
    3. 'd' → logprob: -2.182335376739502
    4. 'a' → logprob: -2.307335376739502
    5. 's' → logprob: -2.432335376739502
    6. ' ' → logprob: -2.932335376739502
    7. 'n' → logprob: -3.057335376739502
    8. '
' → logprob: -3.307335376739502
    9. '_' → logprob: -3.307335376739502
    10. 'm' → logprob: -4.307335376739502

Token 48: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7017582654953003
    2. ' =' → logprob: -0.7017582654953003
    3. '=[]' → logprob: -5.45175838470459
    4. '=input' → logprob: -6.20175838470459
    5. 'S' → logprob: -7.45175838470459
    6. 'um' → logprob: -7.95175838470459
    7. 's' → logprob: -8.70175838470459
    8. '=[]
' → logprob: -8.70175838470459
    9. ' ' → logprob: -8.82675838470459
    10. 'Z' → logprob: -9.20175838470459

Token 49: ' [' (ID: 723)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.4150637984275818
    2. '[]' → logprob: -1.4150638580322266
    3. '[' → logprob: -2.9150638580322266
    4. '[input' → logprob: -3.5400638580322266
    5. 'list' → logprob: -5.415063858032227
    6. '{}' → logprob: -6.290063858032227
    7. 'input' → logprob: -6.665063858032227
    8. ' []' → logprob: -6.915063858032227
    9. ' [' → logprob: -7.040063858032227
    10. 'i' → logprob: -7.165063858032227

Token 50: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0013326213229447603
    2. ' i' → logprob: -7.251332759857178
    3. 'input' → logprob: -7.501332759857178
    4. 'str' → logprob: -10.50133228302002
    5. ']' → logprob: -11.87633228302002
    6. ' input' → logprob: -12.37633228302002
    7. 'int' → logprob: -12.43883228302002
    8. ')' → logprob: -12.50133228302002
    9. '   ' → logprob: -13.00133228302002
    10. 'list' → logprob: -13.18883228302002

Token 51: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0010471008718013763
    2. 'n' → logprob: -6.876047134399414
    3. 'input' → logprob: -11.751047134399414
    4. '_n' → logprob: -13.501047134399414
    5. 'put' → logprob: -13.626047134399414
    6. '```' → logprob: -14.251047134399414
    7. 'i' → logprob: -14.751047134399414
    8. '(input' → logprob: -15.126047134399414
    9. 's' → logprob: -15.251047134399414
    10. 'nt' → logprob: -15.626047134399414

Token 52: 'put' (ID: 772)
  Prédit: 'put'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'put' → logprob: -0.04301426559686661
    2. 'ut' → logprob: -3.1680142879486084
    3. 'Put' → logprob: -12.918014526367188
    4. '[' → logprob: -13.418014526367188
    5. '```' → logprob: -13.418014526367188
    6. 't' → logprob: -13.418014526367188
    7. '_put' → logprob: -13.793014526367188
    8. 'pt' → logprob: -14.293014526367188
    9. ' put' → logprob: -14.543014526367188
    10. 'pot' → logprob: -14.543014526367188

Token 53: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.009414391592144966
    2. '())' → logprob: -5.009414196014404
    3. '()]' → logprob: -6.634414196014404
    4. ')' → logprob: -6.759414196014404
    5. ']()' → logprob: -8.634414672851562
    6. '`()' → logprob: -11.259414672851562
    7. ' ()' → logprob: -11.759414672851562
    8. ' ' → logprob: -12.134414672851562
    9. '()"' → logprob: -12.759414672851562
    10. '>()' → logprob: -12.884414672851562

Token 54: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0795949399471283
    2. '()' → logprob: -2.579594850540161
    3. '())' → logprob: -7.95459508895874
    4. ')]' → logprob: -8.829594612121582
    5. ' )' → logprob: -9.704594612121582
    6. ']' → logprob: -9.954594612121582
    7. '()]' → logprob: -10.454594612121582
    8. 'for' → logprob: -10.954594612121582
    9. ' ' → logprob: -10.954594612121582
    10. ' for' → logprob: -11.079594612121582

Token 55: ' __' (ID: 2516)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6253929138183594
    2. '_' → logprob: -1.2503929138183594
    3. ' _' → logprob: -2.1253929138183594
    4. 'range' → logprob: -2.8753929138183594
    5. ' ' → logprob: -6.000392913818359
    6. '_range' → logprob: -8.50039291381836
    7. ' in' → logprob: -10.50039291381836
    8. ' xrange' → logprob: -10.50039291381836
    9. '	range' → logprob: -11.00039291381836
    10. ' i' → logprob: -12.12539291381836

Token 56: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4807701110839844
    2. ' in' → logprob: -0.9807701110839844
    3. '_' → logprob: -5.230770111083984
    4. 'range' → logprob: -7.355770111083984
    5. ' ' → logprob: -8.230770111083984
    6. 'i' → logprob: -8.605770111083984
    7. ' i' → logprob: -9.230770111083984
    8. ' range' → logprob: -9.355770111083984
    9. ' _' → logprob: -10.230770111083984
    10. '_in' → logprob: -12.980770111083984

Token 57: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06997200846672058
    2. ' range' → logprob: -2.694972038269043
    3. 'rang' → logprob: -11.319972038269043
    4. 'ran' → logprob: -11.694972038269043
    5. 'r' → logprob: -12.444972038269043
    6. 'ra' → logprob: -12.569972038269043
    7. '	range' → logprob: -12.819972038269043
    8. ' ran' → logprob: -13.069972038269043
    9. ' ' → logprob: -13.819972038269043
    10. '_' → logprob: -14.069972038269043

Token 58: '(Z' (ID: 55117)
  Prédit: '(Z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Z' → logprob: -0.0001855406299000606
    2. '(' → logprob: -8.6251859664917
    3. 'Z' → logprob: -12.3751859664917
    4. '(
' → logprob: -14.6251859664917
    5. ' (' → logprob: -14.7501859664917
    6. '(Q' → logprob: -16.000185012817383
    7. ' Z' → logprob: -16.250185012817383
    8. '(z' → logprob: -16.625185012817383
    9. '	Z' → logprob: -16.625185012817383
    10. '((' → logprob: -16.750185012817383

Token 59: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.000206401280593127
    2. ')' → logprob: -9.125205993652344
    3. ']' → logprob: -9.250205993652344
    4. ' )' → logprob: -14.500205993652344
    5. ')]
' → logprob: -14.500205993652344
    6. ')]

' → logprob: -16.500205993652344
    7. ' ]' → logprob: -16.875205993652344
    8. ')])' → logprob: -17.250205993652344
    9. ')],' → logprob: -17.375205993652344
    10. ' ' → logprob: -17.500205993652344

Token 60: 'Bucket' (ID: 39736)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.055671315640211105
    2. 'C' → logprob: -3.805671215057373
    3. 'count' → logprob: -5.180671215057373
    4. 'counts' → logprob: -5.180671215057373
    5. 'counter' → logprob: -5.555671215057373
    6. 's' → logprob: -5.930671215057373
    7. '_' → logprob: -6.305671215057373
    8. 'comp' → logprob: -6.430671215057373
    9. 'd' → logprob: -6.805671215057373
    10. 'S' → logprob: -6.930671215057373

Token 61: 'izer' (ID: 4492)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.15930825471878052
    2. ' =' → logprob: -2.0343081951141357
    3. '=' → logprob: -4.284308433532715
    4. 'Counter' → logprob: -7.534308433532715
    5. 'ed' → logprob: -8.034308433532715
    6. 'Count' → logprob: -8.159308433532715
    7. '_' → logprob: -8.284308433532715
    8. '={}' → logprob: -8.534308433532715
    9. 'S' → logprob: -8.659308433532715
    10. '=[]' → logprob: -9.034308433532715

Token 62: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.26282015442848206
    2. ' =' → logprob: -2.012820243835449
    3. '=' → logprob: -3.262820243835449
    4. '.' → logprob: -3.512820243835449
    5. 's' → logprob: -4.762820243835449
    6. '()' → logprob: -5.012820243835449
    7. '(lambda' → logprob: -5.262820243835449
    8. ':' → logprob: -6.262820243835449
    9. '_' → logprob: -6.637820243835449
    10. ',' → logprob: -7.012820243835449

Token 63: ' {}
' (ID: 11421)
  Prédit: 'dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dict' → logprob: -0.8464276194572449
    2. '{}' → logprob: -1.2214276790618896
    3. 'lambda' → logprob: -1.3464276790618896
    4. '(lambda' → logprob: -4.8464274406433105
    5. '{' → logprob: -5.8464274406433105
    6. ' lambda' → logprob: -6.0964274406433105
    7. ' dict' → logprob: -6.3464274406433105
    8. 'set' → logprob: -8.221427917480469
    9. 'class' → logprob: -8.346427917480469
    10. 'list' → logprob: -8.471427917480469

Token 64: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002151807537302375
    2. ' for' → logprob: -6.252151966094971
    3. 'f' → logprob: -9.002151489257812
    4. 'from' → logprob: -10.502151489257812
    5. ' ' → logprob: -11.127151489257812
    6. 's' → logprob: -11.627151489257812
    7. 'i' → logprob: -11.752151489257812
    8. 'def' → logprob: -12.377151489257812
    9. 'fo' → logprob: -12.502151489257812
    10. 'F' → logprob: -12.502151489257812

Token 65: ' idx' (ID: 14016)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5816200375556946
    2. ' S' → logprob: -1.3316199779510498
    3. ' ' → logprob: -2.33161997795105
    4. ' _' → logprob: -4.206620216369629
    5. ' SS' → logprob: -4.644120216369629
    6. 's' → logprob: -4.831620216369629
    7. ' i' → logprob: -4.831620216369629
    8. 'S' → logprob: -4.956620216369629
    9. ' ss' → logprob: -5.456620216369629
    10. ' x' → logprob: -5.581620216369629

Token 66: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.23065674304962158
    2. ',' → logprob: -2.105656623840332
    3. 'in' → logprob: -2.855656623840332
    4. ' ' → logprob: -3.730656623840332
    5. ' ,' → logprob: -5.980656623840332
    6. ',in' → logprob: -9.230656623840332
    7. '  ' → logprob: -11.105656623840332
    8. 's' → logprob: -11.355656623840332
    9. '```' → logprob: -11.355656623840332
    10. ',n' → logprob: -11.605656623840332

Token 67: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.31529873609542847
    2. 'range' → logprob: -1.3152987957000732
    3. 'SS' → logprob: -6.440298557281494
    4. ' SS' → logprob: -7.940298557281494
    5. ' ' → logprob: -11.002799034118652
    6. '(range' → logprob: -11.002799034118652
    7. '	range' → logprob: -12.002799034118652
    8. 'Range' → logprob: -12.127799034118652
    9. 'enumer' → logprob: -12.440299034118652
    10. ' rang' → logprob: -12.877799034118652

Token 68: '(Z' (ID: 55117)
  Prédit: '(Z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Z' → logprob: -0.035774115473032
    2. '(' → logprob: -3.5357742309570312
    3. '(len' → logprob: -5.160774230957031
    4. ' (' → logprob: -9.410774230957031
    5. 'Z' → logprob: -9.410774230957031
    6. ' Z' → logprob: -9.785774230957031
    7. '(i' → logprob: -11.660774230957031
    8. '(
' → logprob: -12.160774230957031
    9. '(z' → logprob: -12.160774230957031
    10. 'len' → logprob: -12.535774230957031

Token 69: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005301589146256447
    2. ' ):' → logprob: -5.630301475524902
    3. ':' → logprob: -7.630301475524902
    4. '):
' → logprob: -7.755301475524902
    5. ')' → logprob: -7.755301475524902
    6. '+' → logprob: -8.255301475524902
    7. ' :' → logprob: -10.380301475524902
    8. ' ' → logprob: -11.005301475524902
    9. '   ' → logprob: -11.630301475524902
    10. ' +' → logprob: -11.630301475524902

Token 70: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11194910854101181
    2. '   ' → logprob: -2.6119492053985596
    3. '    ' → logprob: -4.6119489669799805
    4. ' s' → logprob: -4.7369489669799805
    5. ' 
' → logprob: -5.3619489669799805
    6. ' ‌' → logprob: -6.2369489669799805
    7. '     
' → logprob: -6.8619489669799805
    8. ' ▁' → logprob: -7.1119489669799805
    9. ' ​' → logprob: -7.2369489669799805
    10. '    
' → logprob: -7.3619489669799805

Token 71: ' key' (ID: 2140)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.1934306621551514
    2. '   ' → logprob: -1.5684306621551514
    3. ' word' → logprob: -1.9434306621551514
    4. ' key' → logprob: -2.1934306621551514
    5. 's' → logprob: -3.0684306621551514
    6. 'key' (adapté à ' key') → logprob: -3.4434306621551514
    7. ' line' → logprob: -3.9434306621551514
    8. ' c' → logprob: -4.0684309005737305
    9. ' token' → logprob: -4.3184309005737305
    10. ' val' → logprob: -4.4434309005737305

Token 72: 'form' (ID: 700)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10029292851686478
    2. '=' → logprob: -2.350292921066284
    3. ' ' → logprob: -9.600293159484863
    4. 's' → logprob: -11.475293159484863
    5. ',' → logprob: -12.225293159484863
    6. ']' → logprob: -14.600293159484863
    7. '   ' → logprob: -14.975293159484863
    8. ' =
' → logprob: -14.975293159484863
    9. '  ' → logprob: -15.100293159484863
    10. ')' → logprob: -15.475293159484863

Token 73: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0341513529419899
    2. '=' → logprob: -3.409151315689087
    3. ' ' → logprob: -7.909151554107666
    4. 's' → logprob: -9.659151077270508
    5. 'ed' → logprob: -10.909151077270508
    6. ',' → logprob: -11.034151077270508
    7. '  ' → logprob: -11.659151077270508
    8. 'a' → logprob: -12.034151077270508
    9. 'e' → logprob: -12.659151077270508
    10. '   ' → logprob: -12.784151077270508

Token 74: ' ''.' (ID: 105941)
  Prédit: ' SS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' SS' → logprob: -0.23909534513950348
    2. 'SS' → logprob: -1.6140953302383423
    3. ' tuple' → logprob: -5.239095211029053
    4. ' len' → logprob: -5.989095211029053
    5. 'tuple' → logprob: -6.364095211029053
    6. 'len' → logprob: -6.739095211029053
    7. ' ' → logprob: -6.989095211029053
    8. ' ''.' → logprob: -7.614095211029053
    9. ' hash' → logprob: -8.489095687866211
    10. '''.' → logprob: -8.739095687866211

Token 75: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.6286106983898208e-05
    2. ' join' → logprob: -11.750016212463379
    3. 'sorted' → logprob: -12.375016212463379
    4. '''.' → logprob: -13.750016212463379
    5. '(join' → logprob: -14.375016212463379
    6. 'joined' → logprob: -14.375016212463379
    7. '.join' → logprob: -14.625016212463379
    8. 'joins' → logprob: -14.750016212463379
    9. 'jo' → logprob: -15.375016212463379
    10. 'Join' → logprob: -15.500016212463379

Token 76: '(sorted' (ID: 92488)
  Prédit: '(sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -0.0013867855304852128
    2. '(' → logprob: -6.751386642456055
    3. 'sorted' → logprob: -9.126386642456055
    4. '(re' → logprob: -10.251386642456055
    5. '([' → logprob: -10.626386642456055
    6. '(chr' → logprob: -11.751386642456055
    7. '(s' → logprob: -12.251386642456055
    8. '(sort' → logprob: -12.501386642456055
    9. '(['' → logprob: -12.626386642456055
    10. '(i' → logprob: -12.626386642456055

Token 77: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004908377304673195
    2. 'SS' → logprob: -8.00049114227295
    3. '(S' → logprob: -9.25049114227295
    4. '(ss' → logprob: -11.00049114227295
    5. '(list' → logprob: -11.50049114227295
    6. '(B' → logprob: -11.87549114227295
    7. ' (' → logprob: -12.12549114227295
    8. '((' → logprob: -12.37549114227295
    9. ')' → logprob: -12.50049114227295
    10. 'S' → logprob: -13.25049114227295

Token 78: 'SS' (ID: 3642)
  Prédit: 'SS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SS' → logprob: -0.10287431627511978
    2. '(' → logprob: -2.352874279022217
    3. ' SS' → logprob: -6.102874279022217
    4. ')' → logprob: -9.352874755859375
    5. 'S' → logprob: -9.352874755859375
    6. '(S' → logprob: -9.352874755859375
    7. '   ' → logprob: -10.352874755859375
    8. ' ' → logprob: -10.352874755859375
    9. '[' → logprob: -10.602874755859375
    10. ' (' → logprob: -11.227874755859375

Token 79: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -2.129266067640856e-05
    2. '[' → logprob: -10.875020980834961
    3. '[key' → logprob: -13.375020980834961
    4. 'idx' → logprob: -15.500020980834961
    5. '[id' → logprob: -16.00002098083496
    6. '[index' → logprob: -16.25002098083496
    7. ' [' → logprob: -16.37502098083496
    8. '[Index' → logprob: -16.62502098083496
    9. '[[' → logprob: -16.75002098083496
    10. '[i' → logprob: -16.87502098083496

Token 80: ']))
' (ID: 24801)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.002057596342638135
    2. ']' → logprob: -6.6270575523376465
    3. '])))' → logprob: -8.502058029174805
    4. '']))' → logprob: -9.127058029174805
    5. '[idx' → logprob: -9.252058029174805
    6. '[' → logprob: -9.377058029174805
    7. ')))' → logprob: -9.502058029174805
    8. '])' → logprob: -10.002058029174805
    9. '))' → logprob: -10.502058029174805
    10. ']))
' → logprob: -10.877058029174805

Token 81: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07503850758075714
    2. ']' → logprob: -3.575038433074951
    3. ' ' → logprob: -4.075038433074951
    4. '   ' → logprob: -4.325038433074951
    5. ':' → logprob: -6.200038433074951
    6. ')
' → logprob: -6.325038433074951
    7. ' )' → logprob: -6.450038433074951
    8. '  ' → logprob: -6.575038433074951
    9. '<|end|>' → logprob: -6.575038433074951
    10. 'if' → logprob: -6.825038433074951

Token 82: ' if' (ID: 538)
  Prédit: 'Bucket'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Bucket' → logprob: -0.33601897954940796
    2. ' if' → logprob: -2.4610190391540527
    3. ' Bucket' → logprob: -2.5860190391540527
    4. 'if' (adapté à ' if') → logprob: -2.7110190391540527
    5. '   ' → logprob: -3.2110190391540527
    6. ')' → logprob: -4.586019039154053
    7. ' =' → logprob: -6.586019039154053
    8. ' ' → logprob: -6.586019039154053
    9. ']' → logprob: -6.961019039154053
    10. '    
' → logprob: -7.586019039154053

Token 83: ' key' (ID: 2140)
  Prédit: ' key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.0005862758844159544
    2. 'key' → logprob: -7.75058650970459
    3. ' not' → logprob: -9.25058650970459
    4. ' ' → logprob: -10.25058650970459
    5. ' ' → logprob: -10.87558650970459
    6. '	key' → logprob: -13.37558650970459
    7. '(key' → logprob: -13.75058650970459
    8. '_key' → logprob: -14.37558650970459
    9. 'Key' → logprob: -15.00058650970459
    10. 'not' → logprob: -15.18808650970459

Token 84: 'form' (ID: 700)
  Prédit: 'form'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'form' → logprob: -2.339278580620885e-06
    2. 'for' → logprob: -13.750001907348633
    3. 'f' → logprob: -14.875001907348633
    4. '<form' → logprob: -15.625001907348633
    5. '_form' → logprob: -15.875001907348633
    6. 'in' → logprob: -16.250001907348633
    7. 'orm' → logprob: -16.750001907348633
    8. 'formin' → logprob: -16.750001907348633
    9. 'from' → logprob: -16.875001907348633
    10. 'formed' → logprob: -17.000001907348633

Token 85: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.30270057916641235
    2. ' in' → logprob: -1.4277005195617676
    3. 'in' → logprob: -4.552700519561768
    4. 'not' → logprob: -4.552700519561768
    5. ' no' → logprob: -9.177700996398926
    6. ' ' → logprob: -9.302700996398926
    7. '	not' → logprob: -11.427700996398926
    8. ')' → logprob: -11.552700996398926
    9. ' n' → logprob: -11.677700996398926
    10. ']' → logprob: -12.802700996398926

Token 86: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0073155430145561695
    2. 'in' → logprob: -5.507315635681152
    3. '<|end|>' → logprob: -5.882315635681152
    4. '<|end|>' → logprob: -8.382315635681152
    5. ' to' → logprob: -10.132315635681152
    6. ' Bucket' → logprob: -10.507315635681152
    7. ')' → logprob: -10.632315635681152
    8. ' ' → logprob: -10.757315635681152
    9. ' B' → logprob: -11.132315635681152
    10. '  ' → logprob: -11.694815635681152

Token 87: ' Bucket' (ID: 84259)
  Prédit: ' Bucket'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Bucket' → logprob: -0.038054004311561584
    2. 'Bucket' → logprob: -3.2880539894104004
    3. ' Buck' → logprob: -12.413054466247559
    4. ' ' → logprob: -12.913054466247559
    5. ' Basket' → logprob: -14.038054466247559
    6. 'B' → logprob: -14.038054466247559
    7. ' bucket' → logprob: -14.163054466247559
    8. '_bucket' → logprob: -14.163054466247559
    9. ' B' → logprob: -14.663054466247559
    10. '_BUCKET' → logprob: -14.788054466247559

Token 88: 'izer' (ID: 4492)
  Prédit: 'izer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izer' → logprob: -6.704273118884885e-07
    2. 'ize' → logprob: -15.375000953674316
    3. 'IZER' → logprob: -15.625000953674316
    4. 'iz' → logprob: -15.875000953674316
    5. 'er' → logprob: -16.5
    6. '```' → logprob: -17.5
    7. 'izar' → logprob: -18.25
    8. 'ized' → logprob: -18.25
    9. ' ' → logprob: -18.375
    10. 'izers' → logprob: -18.375

Token 89: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001562596415169537
    2. ' :' → logprob: -6.501562595367432
    3. ']' → logprob: -11.12656307220459
    4. '):' → logprob: -11.62656307220459
    5. ':
' → logprob: -11.75156307220459
    6. ']:' → logprob: -11.87656307220459
    7. '   ' → logprob: -12.37656307220459
    8. '=' → logprob: -12.50156307220459
    9. ')' → logprob: -12.75156307220459
    10. ' ' → logprob: -13.62656307220459

Token 90: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2524694204330444
    2. '    ' → logprob: -1.8774694204330444
    3. ' :' → logprob: -2.002469539642334
    4. '       ' → logprob: -2.127469539642334
    5. ':' → logprob: -2.252469539642334
    6. ' ' → logprob: -2.377469539642334
    7. ' =' → logprob: -2.627469539642334
    8. '=' → logprob: -4.502469539642334
    9. '  ' → logprob: -5.127469539642334
    10. ' Bucket' → logprob: -5.627469539642334

Token 91: ' Bucket' (ID: 84259)
  Prédit: ' Bucket'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Bucket' → logprob: -0.08923323452472687
    2. '   ' → logprob: -2.964233160018921
    3. 'Bucket' (adapté à ' Bucket') → logprob: -3.464233160018921
    4. '	B' → logprob: -6.4642333984375
    5. '       ' → logprob: -8.2142333984375
    6. ' ' → logprob: -8.4642333984375
    7. '    ' → logprob: -9.0892333984375
    8. '_BUCKET' → logprob: -9.5892333984375
    9. '	   ' → logprob: -9.7142333984375
    10. ' ' → logprob: -10.3392333984375

Token 92: 'izer' (ID: 4492)
  Prédit: 'izer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izer' → logprob: -5.5577775128767826e-06
    2. 'iz' → logprob: -13.125005722045898
    3. 'ize' → logprob: -13.250005722045898
    4. 'IZER' → logprob: -14.625005722045898
    5. 'i' → logprob: -15.625005722045898
    6. ' ' → logprob: -16.0000057220459
    7. 'izr' → logprob: -16.1250057220459
    8. 'er' → logprob: -16.2500057220459
    9. '```' → logprob: -16.2500057220459
    10. '   ' → logprob: -16.5000057220459

Token 93: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -0.00020413640595506877
    2. '[' → logprob: -8.500204086303711
    3. '=' → logprob: -15.750204086303711
    4. '[k' → logprob: -16.00020408630371
    5. '[...]' → logprob: -16.12520408630371
    6. ' [' → logprob: -16.25020408630371
    7. ' =' → logprob: -16.87520408630371
    8. '[i' → logprob: -17.12520408630371
    9. '.setdefault' → logprob: -17.75020408630371
    10. '[token' → logprob: -18.00020408630371

Token 94: 'form' (ID: 700)
  Prédit: 'form'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'form' → logprob: -3.650518920039758e-06
    2. 'orm' → logprob: -12.750003814697266
    3. ']' → logprob: -15.375003814697266
    4. '   ' → logprob: -16.375003814697266
    5. ')' → logprob: -16.500003814697266
    6. '_form' → logprob: -16.750003814697266
    7. ' form' → logprob: -16.875003814697266
    8. '<form' → logprob: -17.250003814697266
    9. 'formed' → logprob: -17.500003814697266
    10. 'Form' → logprob: -17.500003814697266

Token 95: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009835420176386833
    2. ']=' → logprob: -4.759835243225098
    3. '=' → logprob: -7.009835243225098
    4. ' =' → logprob: -8.134835243225098
    5. ' ]' → logprob: -10.759835243225098
    6. '=[]' → logprob: -14.259835243225098
    7. '']' → logprob: -14.759835243225098
    8. ']={' → logprob: -14.759835243225098
    9. '']=' → logprob: -15.009835243225098
    10. '"]' → logprob: -15.509835243225098

Token 96: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08918765932321548
    2. ' =' → logprob: -2.4641876220703125
    3. '=[]' → logprob: -8.714187622070312
    4. '=[' → logprob: -9.464187622070312
    5. '=

' → logprob: -13.339187622070312
    6. '=[]
' → logprob: -13.714187622070312
    7. ' =[' → logprob: -13.714187622070312
    8. '=set' → logprob: -14.339187622070312
    9. ']' → logprob: -14.839187622070312
    10. ']=' → logprob: -15.214187622070312

Token 97: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14963875710964203
    2. '0' → logprob: -2.6496386528015137
    3. '[' → logprob: -3.1496386528015137
    4. ' ' → logprob: -4.274638652801514
    5. '[]' → logprob: -4.649638652801514
    6. ' [' → logprob: -6.649638652801514
    7. ' []' → logprob: -7.649638652801514
    8. '[int' → logprob: -10.024639129638672
    9. '[]
' → logprob: -10.649639129638672
    10. '['' → logprob: -10.774639129638672

Token 98: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.522895336151123
    2. '0' → logprob: -1.522895336151123
    3. '[' → logprob: -2.022895336151123
    4. '[]' → logprob: -2.897895336151123
    5. ' ' → logprob: -7.397895336151123
    6. '[int' → logprob: -8.397895812988281
    7. ' []' → logprob: -8.772895812988281
    8. '{}' → logprob: -8.897895812988281
    9. '[idx' → logprob: -9.022895812988281
    10. ' [' → logprob: -9.147895812988281

Token 99: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.6617679595947266
    2. ' else' → logprob: -1.2867679595947266
    3. '   ' → logprob: -1.6617679595947266
    4. '<|end|>' → logprob: -4.036767959594727
    5. '	else' → logprob: -8.286767959594727
    6. '<|end|>' → logprob: -9.661767959594727
    7. '  ' → logprob: -10.536767959594727
    8. '    
' → logprob: -10.786767959594727
    9. '_else' → logprob: -11.036767959594727
    10. ' ' → logprob: -11.161767959594727

Token 100: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5047138333320618
    2. '   ' → logprob: -1.504713773727417
    3. ' else' → logprob: -1.754713773727417
    4. '	else' → logprob: -7.504714012145996
    5. '<|end|>' → logprob: -7.504714012145996
    6. '  ' → logprob: -9.379714012145996
    7. ' ' → logprob: -9.879714012145996
    8. '_else' → logprob: -11.629714012145996
    9. '    
' → logprob: -11.754714012145996
    10. '       ' → logprob: -11.879714012145996

Token 101: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.028136486187577248
    2. '   ' → logprob: -4.278136253356934
    3. ' else' → logprob: -4.278136253356934
    4. '	else' → logprob: -11.903136253356934
    5. '_else' → logprob: -15.653136253356934
    6. '```' → logprob: -16.52813720703125
    7. ' ' → logprob: -16.77813720703125
    8. '  ' → logprob: -16.90313720703125
    9. '<|end|>' → logprob: -17.15313720703125
    10. 'elif' → logprob: -17.77813720703125

Token 102: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010581888258457184
    2. ' +=' → logprob: -5.510581970214844
    3. ':' → logprob: -5.635581970214844
    4. '        ' → logprob: -7.635581970214844
    5. '   ' → logprob: -7.760581970214844
    6. '+' → logprob: -7.760581970214844
    7. '+=' → logprob: -7.760581970214844
    8. '    ' → logprob: -8.385581970214844
    9. '      ' → logprob: -8.385581970214844
    10. ' Bucket' → logprob: -8.760581970214844

Token 103: '       ' (ID: 309)
  Prédit: ' Bucket'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Bucket' → logprob: -0.5579192638397217
    2. '       ' → logprob: -0.9329192638397217
    3. 'Bucket' → logprob: -3.4329192638397217
    4. '   ' → logprob: -6.932919502258301
    5. '    ' → logprob: -7.182919502258301
    6. '        ' → logprob: -9.1829195022583
    7. '_bucket' → logprob: -11.4329195022583
    8. '     ' → logprob: -11.5579195022583
    9. '      ' → logprob: -11.5579195022583
    10. '_BUCKET' → logprob: -11.9329195022583

Token 104: ' Bucket' (ID: 84259)
  Prédit: ' Bucket'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Bucket' → logprob: -0.495644211769104
    2. 'Bucket' (adapté à ' Bucket') → logprob: -0.995644211769104
    3. '       ' → logprob: -3.8706440925598145
    4. '           ' → logprob: -7.8706440925598145
    5. '   ' → logprob: -9.370644569396973
    6. '        ' → logprob: -11.495644569396973
    7. '_bucket' → logprob: -12.370644569396973
    8. ' ' → logprob: -13.495644569396973
    9. '_BUCKET' → logprob: -13.745644569396973
    10. '    ' → logprob: -13.995644569396973

Token 105: 'izer' (ID: 4492)
  Prédit: 'izer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izer' → logprob: -6.704273118884885e-07
    2. 'IZER' → logprob: -15.375000953674316
    3. '   ' → logprob: -16.0
    4. 'er' → logprob: -16.5
    5. 'ize' → logprob: -17.25
    6. 'zier' → logprob: -17.375
    7. 'iz' → logprob: -17.75
    8. '       ' → logprob: -18.0
    9. 'r' → logprob: -18.375
    10. 'iker' → logprob: -18.625

Token 106: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -2.5776860184123507e-06
    2. '[' → logprob: -12.87500286102295
    3. '[k' → logprob: -18.750001907348633
    4. '[B' → logprob: -19.500001907348633
    5. '[token' → logprob: -19.500001907348633
    6. '[user' → logprob: -19.875001907348633
    7. 'key' → logprob: -20.125001907348633
    8. ' [' → logprob: -20.250001907348633
    9. '[b' → logprob: -21.000001907348633
    10. '[input' → logprob: -21.500001907348633

Token 107: 'form' (ID: 700)
  Prédit: 'form'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'form' → logprob: -1.7432603272027336e-06
    2. 'orm' → logprob: -14.000001907348633
    3. '_form' → logprob: -15.750001907348633
    4. 'forms' → logprob: -16.000001907348633
    5. '   ' → logprob: -16.250001907348633
    6. '<form' → logprob: -16.750001907348633
    7. 'from' → logprob: -16.750001907348633
    8. 'f' → logprob: -17.000001907348633
    9. '	form' → logprob: -17.125001907348633
    10. 'for' → logprob: -17.250001907348633

Token 108: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.315005362033844
    2. ' +=' → logprob: -1.3150053024291992
    3. ']+=' → logprob: -6.440005302429199
    4. '+' → logprob: -9.5650053024292
    5. ']' → logprob: -9.9400053024292
    6. '=' → logprob: -11.8150053024292
    7. '[' → logprob: -11.9400053024292
    8. '   ' → logprob: -12.0650053024292
    9. ')' → logprob: -12.1900053024292
    10. '    ' → logprob: -14.3150053024292

Token 109: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.023249205201864243
    2. ' +=' → logprob: -3.7732491493225098
    3. '   ' → logprob: -13.773249626159668
    4. ']+=' → logprob: -13.898249626159668
    5. '=' → logprob: -14.398249626159668
    6. '+='' → logprob: -14.648249626159668
    7. '+' → logprob: -14.898249626159668
    8. '    ' → logprob: -15.523249626159668
    9. '[' → logprob: -16.39824867248535
    10. '+="' → logprob: -16.64824867248535

Token 110: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02975083328783512
    2. ' ' → logprob: -3.5297508239746094
    3. '   ' → logprob: -15.15475082397461
    4. '  ' → logprob: -17.27975082397461
    5. ' ' → logprob: -18.21725082397461
    6. '１' → logprob: -20.09225082397461
    7. '```' → logprob: -20.15475082397461
    8. '0' → logprob: -20.15475082397461
    9. '	' → logprob: -20.52975082397461
    10. '    ' → logprob: -20.59225082397461

Token 111: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.848420551046729e-05
    2. ' ' → logprob: -9.7500581741333
    3. '   ' → logprob: -16.625059127807617
    4. '  ' → logprob: -18.562559127807617
    5. '2' → logprob: -19.500059127807617
    6. '0' → logprob: -19.750059127807617
    7. '-' → logprob: -19.750059127807617
    8. '```' → logprob: -19.750059127807617
    9. 'Bucket' → logprob: -20.062559127807617
    10. '１' → logprob: -20.437559127807617

Token 112: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 113: '_re' (ID: 3067)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 114: 'Z' (ID: 57)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.017876913771033287
    2. ' =' → logprob: -4.517877101898193
    3. 'v' → logprob: -6.392877101898193
    4. '=' → logprob: -6.642877101898193
    5. 'turn' → logprob: -7.017877101898193
    6. 'f' → logprob: -7.892877101898193
    7. 'z' → logprob: -8.642876625061035
    8. 'ss' → logprob: -8.767876625061035
    9. 'd' → logprob: -8.892876625061035
    10. 'w' → logprob: -8.892876625061035

Token 115: 'ult' (ID: 576)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.676723301410675
    2. 's' → logprob: -0.926723301410675
    3. '=' → logprob: -2.6767232418060303
    4. 'ult' → logprob: -4.426723480224609
    5. 'ults' → logprob: -4.551723480224609
    6. 'ault' → logprob: -7.051723480224609
    7. ' ' → logprob: -7.426723480224609
    8. 'z' → logprob: -7.426723480224609
    9. '[' → logprob: -8.05172348022461
    10. '_' → logprob: -8.05172348022461

Token 116: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31335076689720154
    2. '=' → logprob: -1.313350796699524
    3. 's' → logprob: -10.063350677490234
    4. ' ' → logprob: -10.563350677490234
    5. '=[]' → logprob: -11.438350677490234
    6. '={}' → logprob: -13.563350677490234
    7. ' =[' → logprob: -13.563350677490234
    8. ',' → logprob: -13.813350677490234
    9. '[' → logprob: -14.188350677490234
    10. '.' → logprob: -14.313350677490234

Token 117: ' []
' (ID: 8911)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.14334087073802948
    2. '[max' → logprob: -3.018340826034546
    3. ' max' → logprob: -3.143340826034546
    4. '[]' → logprob: -4.268341064453125
    5. 'sum' → logprob: -4.768341064453125
    6. '0' → logprob: -4.768341064453125
    7. 'sorted' → logprob: -5.518341064453125
    8. '[' → logprob: -6.143341064453125
    9. '{}' → logprob: -6.393341064453125
    10. '{' → logprob: -7.518341064453125

Token 118: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.512236498361744e-07
    2. ' for' → logprob: -14.625000953674316
    3. '<|end|>' → logprob: -17.0
    4. '```' → logprob: -17.125
    5. 'For' → logprob: -19.375
    6. '	for' → logprob: -19.5
    7. '[' → logprob: -19.875
    8. '.for' → logprob: -21.25
    9. '
' → logprob: -21.375
    10. 'idx' → logprob: -21.5

Token 119: ' an' (ID: 448)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.4717462956905365
    2. ' key' → logprob: -1.3467463254928589
    3. 'idx' → logprob: -3.0967462062835693
    4. ' idx' → logprob: -3.4717462062835693
    5. 'k' → logprob: -4.096746444702148
    6. ' k' → logprob: -5.846746444702148
    7. 'val' → logprob: -5.846746444702148
    8. 'v' → logprob: -6.346746444702148
    9. 'i' → logprob: -6.721746444702148
    10. 'x' → logprob: -6.971746444702148

Token 120: 'key' (ID: 1898)
  Prédit: 'swer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'swer' → logprob: -0.8941918015480042
    2. 's' → logprob: -1.0191917419433594
    3. '_idx' → logprob: -2.7691917419433594
    4. '_s' → logprob: -2.8941917419433594
    5. '_' → logprob: -3.5191917419433594
    6. 'idx' → logprob: -3.8941917419433594
    7. '_key' → logprob: -4.269191741943359
    8. '_ss' → logprob: -4.769191741943359
    9. 'd' → logprob: -5.644191741943359
    10. 'a' → logprob: -5.769191741943359

Token 121: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4344562590122223
    2. 'in' → logprob: -1.0594562292099
    3. ',' → logprob: -5.1844563484191895
    4. ' ' → logprob: -10.309455871582031
    5. ',in' → logprob: -10.434455871582031
    6. '	in' → logprob: -11.434455871582031
    7. 'ey' → logprob: -12.309455871582031
    8. 'i' → logprob: -12.309455871582031
    9. ' ,' → logprob: -12.309455871582031
    10. 's' → logprob: -12.309455871582031

Token 122: ' Bucket' (ID: 84259)
  Prédit: 'Bucket'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Bucket' → logprob: -0.2519495487213135
    2. ' Bucket' → logprob: -1.5019495487213135
    3. ' sorted' → logprob: -11.501949310302734
    4. 'Buck' → logprob: -13.126949310302734
    5. 'sorted' → logprob: -13.501949310302734
    6. ' Buck' → logprob: -13.626949310302734
    7. ' ' → logprob: -13.626949310302734
    8. ' bucket' → logprob: -13.751949310302734
    9. '   ' → logprob: -14.126949310302734
    10. '_bucket' → logprob: -14.626949310302734

Token 123: 'izer' (ID: 4492)
  Prédit: 'izer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izer' → logprob: -2.2200749754119897e-06
    2. 'iker' → logprob: -14.375001907348633
    3. 'iz' → logprob: -14.625001907348633
    4. 'er' → logprob: -15.125001907348633
    5. 'r' → logprob: -15.500001907348633
    6. 'ize' → logprob: -15.875001907348633
    7. 'Bucket' → logprob: -16.375001907348633
    8. 'ucket' → logprob: -16.500001907348633
    9. 'IZER' → logprob: -16.500001907348633
    10. 'ixer' → logprob: -16.625001907348633

Token 124: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017584793968126178
    2. '.keys' → logprob: -6.376758575439453
    3. ':
' → logprob: -10.501758575439453
    4. '.values' → logprob: -10.751758575439453
    5. ' :' → logprob: -13.501758575439453
    6. '.items' → logprob: -14.376758575439453
    7. '<|end|>' → logprob: -14.376758575439453
    8. '_keys' → logprob: -14.501758575439453
    9. '):' → logprob: -14.626758575439453
    10. ' keys' → logprob: -14.876758575439453

Token 125: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007266097818501294
    2. '_re' → logprob: -7.250726699829102
    3. '   ' → logprob: -12.125726699829102
    4. '    
' → logprob: -13.000726699829102
    5. ' if' → logprob: -13.000726699829102
    6. '<|end|>' → logprob: -13.500726699829102
    7. '	' → logprob: -14.250726699829102
    8. '       ' → logprob: -14.375726699829102
    9. ' _' → logprob: -14.375726699829102
    10. '_RE' → logprob: -14.500726699829102

Token 126: ' count' (ID: 3605)
  Prédit: '_re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.029369022697210312
    2. '   ' → logprob: -3.7793691158294678
    3. 'if' → logprob: -5.154368877410889
    4. ' if' → logprob: -9.029369354248047
    5. '_result' → logprob: -9.279369354248047
    6. '_' → logprob: -10.029369354248047
    7. '_if' → logprob: -10.904369354248047
    8. ' ' → logprob: -11.904369354248047
    9. '_count' → logprob: -12.279369354248047
    10. '	if' → logprob: -12.529369354248047

Token 127: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1603061705827713
    2. '=' → logprob: -1.9103062152862549
    3. 's' → logprob: -10.160305976867676
    4. ' ' → logprob: -10.410305976867676
    5. '   ' → logprob: -11.910305976867676
    6. '  ' → logprob: -12.660305976867676
    7. '_' → logprob: -13.535305976867676
    8. '    ' → logprob: -14.910305976867676
    9. ')' → logprob: -15.160305976867676
    10. 'er' → logprob: -15.160305976867676

Token 128: ' Bucket' (ID: 84259)
  Prédit: ' Bucket'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Bucket' → logprob: -0.5759587287902832
    2. 'Bucket' → logprob: -0.8259587287902832
    3. '   ' → logprob: -11.200958251953125
    4. ' bucket' → logprob: -13.075958251953125
    5. '_bucket' → logprob: -13.825958251953125
    6. ' ' → logprob: -14.200958251953125
    7. '_BUCKET' → logprob: -14.575958251953125
    8. ' Buck' → logprob: -14.700958251953125
    9. 'bucket' → logprob: -15.325958251953125
    10. 'Basket' → logprob: -15.700958251953125

Token 129: 'izer' (ID: 4492)
  Prédit: 'izer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izer' → logprob: -9.088346359931165e-07
    2. 'iker' → logprob: -15.125000953674316
    3. 'IZER' → logprob: -16.125
    4. 'er' → logprob: -16.375
    5. 'ixer' → logprob: -16.75
    6. 'Bucket' → logprob: -17.0
    7. 'iz' → logprob: -17.0
    8. 'ize' → logprob: -17.0
    9. 'zer' → logprob: -17.125
    10. 'aker' → logprob: -17.375

Token 130: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31434500217437744
    2. 'ank' → logprob: -1.3143450021743774
    3. '[key' → logprob: -6.939344882965088
    4. 'anky' → logprob: -10.314345359802246
    5. 'anked' → logprob: -10.439345359802246
    6. 'anki' → logprob: -11.314345359802246
    7. 'ANK' → logprob: -12.314345359802246
    8. '```' → logprob: -12.689345359802246
    9. 'anke' → logprob: -12.814345359802246
    10. 'anking' → logprob: -12.939345359802246

Token 131: 'ank' (ID: 1104)
  Prédit: 'ank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ank' → logprob: -1.7432603272027336e-06
    2. 'anky' → logprob: -13.375001907348633
    3. 'anks' → logprob: -17.250001907348633
    4. 'an' → logprob: -17.375001907348633
    5. 'ankii' → logprob: -18.000001907348633
    6. 'anke' → logprob: -18.625001907348633
    7. ' an' → logprob: -19.250001907348633
    8. ' ank' → logprob: -19.375001907348633
    9. 'anker' → logprob: -19.375001907348633
    10. 'анк' → logprob: -19.375001907348633

Token 132: 'ey' (ID: 806)
  Prédit: 'ey'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ey' → logprob: -0.0005660186288878322
    2. 'y' → logprob: -7.500566005706787
    3. 'key' → logprob: -11.625566482543945
    4. 'ay' → logprob: -12.500566482543945
    5. 'er' → logprob: -15.125566482543945
    6. 'Key' → logprob: -17.250566482543945
    7. '_key' → logprob: -18.250566482543945
    8. '```' → logprob: -18.250566482543945
    9. 'EY' → logprob: -18.500566482543945
    10. ' key' → logprob: -18.625566482543945

Token 133: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.1430559605360031
    2. ']' → logprob: -2.0180559158325195
    3. '   ' → logprob: -8.14305591583252
    4. ']

' → logprob: -10.51805591583252
    5. ')
' → logprob: -10.89305591583252
    6. '
' → logprob: -11.01805591583252
    7. ' ]
' → logprob: -11.51805591583252
    8. ')' → logprob: -12.14305591583252
    9. ']
' → logprob: -12.76805591583252
    10. ']+' → logprob: -13.14305591583252

Token 134: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00034476007567718625
    2. '    
' → logprob: -8.625345230102539
    3. '<|end|>' → logprob: -10.125345230102539
    4. '
' → logprob: -10.375345230102539
    5. '_re' → logprob: -10.750345230102539
    6. ' 
' → logprob: -11.000345230102539
    7. ' if' → logprob: -11.000345230102539
    8. ' _' → logprob: -11.125345230102539
    9. '_' → logprob: -12.375345230102539
    10. '\n' → logprob: -12.750345230102539

Token 135: ' _' (ID: 1175)
  Prédit: '_re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.006297757849097252
    2. 'if' → logprob: -5.256297588348389
    3. '   ' → logprob: -7.006297588348389
    4. ' if' → logprob: -9.256298065185547
    5. '_result' → logprob: -10.631298065185547
    6. '_' (adapté à ' _') → logprob: -11.256298065185547
    7. '_res' → logprob: -12.006298065185547
    8. '_if' → logprob: -12.131298065185547
    9. ' _' → logprob: -13.256298065185547
    10. '    
' → logprob: -13.381298065185547

Token 136: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.024524692445993423
    2. '_re' → logprob: -3.774524688720703
    3. 'if' → logprob: -7.899524688720703
    4. 'rez' → logprob: -7.899524688720703
    5. 'r' → logprob: -9.024524688720703
    6. 'Re' → logprob: -9.149524688720703
    7. 'Z' → logprob: -9.649524688720703
    8. 'e' → logprob: -9.774524688720703
    9. 'rezz' → logprob: -10.024524688720703
    10. 'result' → logprob: -10.149524688720703

Token 137: 'Z' (ID: 57)
  Prédit: 'Z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Z' → logprob: -9.758300438988954e-05
    2. '_Z' → logprob: -10.125097274780273
    3. '_z' → logprob: -10.625097274780273
    4. 'z' → logprob: -10.875097274780273
    5. 's' → logprob: -11.875097274780273
    6. '_' → logprob: -12.125097274780273
    7. 'З' → logprob: -14.500097274780273
    8. 'ult' → logprob: -15.625097274780273
    9. '	Z' → logprob: -15.750097274780273
    10. 'Zulu' → logprob: -15.750097274780273

Token 138: 'ult' (ID: 576)
  Prédit: 'ult'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ult' → logprob: -1.9361264946837764e-07
    2. ' ult' → logprob: -15.75
    3. '_' → logprob: -17.625
    4. 'ul' → logprob: -17.75
    5. 'Ult' → logprob: -18.75
    6. 'ульт' → logprob: -19.125
    7. 'ultat' → logprob: -19.625
    8. 'u' → logprob: -19.875
    9. 'ultip' → logprob: -20.0
    10. 'ulpt' → logprob: -20.125

Token 139: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.005313685163855553
    2. '.' → logprob: -5.255313873291016
    3. '.extend' → logprob: -9.630313873291016
    4. '.app' → logprob: -12.255313873291016
    5. 'append' → logprob: -12.380313873291016
    6. ' .' → logprob: -13.005313873291016
    7. '.ap' → logprob: -13.130313873291016
    8. '+=' → logprob: -14.755313873291016
    9. '.Append' → logprob: -16.380313873291016
    10. ' +=' → logprob: -16.505313873291016

Token 140: '(count' (ID: 25892)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.5046425461769104
    2. '(count' → logprob: -1.0046424865722656
    3. '(' → logprob: -3.5046424865722656
    4. '(f' → logprob: -11.004642486572266
    5. '(str' → logprob: -11.379642486572266
    6. '(
' → logprob: -11.879642486572266
    7. '([' → logprob: -12.629642486572266
    8. 'count' → logprob: -13.379642486572266
    9. '(tuple' → logprob: -13.504642486572266
    10. '(c' → logprob: -14.004642486572266

Token 141: '*(' (ID: 14793)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009725636919029057
    2. '*' → logprob: -7.500972747802734
    3. ' )' → logprob: -8.750972747802734
    4. '**' → logprob: -9.250972747802734
    5. '>' → logprob: -9.875972747802734
    6. ' *' → logprob: -10.000972747802734
    7. ' if' → logprob: -10.750972747802734
    8. '==' → logprob: -11.625972747802734
    9. '-' → logprob: -11.750972747802734
    10. ')
' → logprob: -11.750972747802734

Token 142: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -7.93448489275761e-05
    2. '(count' → logprob: -9.875079154968262
    3. ' count' → logprob: -10.625079154968262
    4. 'c' → logprob: -14.125079154968262
    5. '[count' → logprob: -14.250079154968262
    6. ' ' → logprob: -14.375079154968262
    7. '<count' → logprob: -15.000079154968262
    8. '-' → logprob: -15.125079154968262
    9. '	count' → logprob: -15.750079154968262
    10. '   ' → logprob: -16.000080108642578

Token 143: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0067156096920371056
    2. ' -' → logprob: -5.006715774536133
    3. ' ' → logprob: -16.381715774536133
    4. '   ' → logprob: -17.381715774536133
    5. '1' → logprob: -17.631715774536133
    6. ')' → logprob: -17.631715774536133
    7. '```' → logprob: -17.631715774536133
    8. '−' → logprob: -18.006715774536133
    9. '()-' → logprob: -18.256715774536133
    10. '-)' → logprob: -18.756715774536133

Token 144: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010402000043541193
    2. ' ' → logprob: -9.250103950500488
    3. '   ' → logprob: -12.750103950500488
    4. ')' → logprob: -13.375103950500488
    5. '```' → logprob: -13.375103950500488
    6. '
' → logprob: -14.687603950500488
    7. '2' → logprob: -15.500103950500488
    8. '=' → logprob: -15.875103950500488
    9. '  ' → logprob: -16.562604904174805
    10. '#' → logprob: -16.750104904174805

Token 145: ')//' (ID: 60375)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.16800978779792786
    2. ')//' → logprob: -2.0430097579956055
    3. ' //' → logprob: -4.0430097579956055
    4. ')' → logprob: -4.9180097579956055
    5. ' )' → logprob: -8.918009757995605
    6. '>//' → logprob: -12.168009757995605
    7. '/' → logprob: -12.418009757995605
    8. '```' → logprob: -12.668009757995605
    9. '']//' → logprob: -13.168009757995605
    10. ' ' → logprob: -13.793009757995605

Token 146: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.625001907348633
    3. '1' → logprob: -14.375001907348633
    4. '   ' → logprob: -19.000001907348633
    5. '
' → logprob: -19.500001907348633
    6. '```' → logprob: -20.000001907348633
    7. '۲' → logprob: -22.000001907348633
    8. '  ' → logprob: -22.000001907348633
    9. '202' → logprob: -22.500001907348633
    10. '２' → logprob: -22.750001907348633

Token 147: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001035191467963159
    2. ')
' → logprob: -6.876035213470459
    3. ' )' → logprob: -13.2510347366333
    4. ')

' → logprob: -15.2510347366333
    5. '   ' → logprob: -15.7510347366333
    6. ')return' → logprob: -16.501035690307617
    7. ')`' → logprob: -16.751035690307617
    8. '))' → logprob: -17.001035690307617
    9. ')
' → logprob: -17.251035690307617
    10. '')' → logprob: -17.251035690307617

Token 148: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0011998742120340466
    2. 'for' → logprob: -6.751199722290039
    3. '
' → logprob: -12.126199722290039
    4. 'total' → logprob: -12.376199722290039
    5. 'result' → logprob: -12.376199722290039
    6. '_print' → logprob: -13.251199722290039
    7. 'answer' → logprob: -13.376199722290039
    8. '  
' → logprob: -13.501199722290039
    9. '    
' → logprob: -13.751199722290039
    10. 'pr' → logprob: -13.751199722290039

Token 149: '(sum' (ID: 45528)
  Prédit: '(sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sum' → logprob: -0.006726144813001156
    2. '(' → logprob: -5.006726264953613
    3. '(_' → logprob: -12.006726264953613
    4. 'sum' → logprob: -13.006726264953613
    5. '(max' → logprob: -13.631726264953613
    6. '(
' → logprob: -14.381726264953613
    7. '('' → logprob: -15.006726264953613
    8. '((' → logprob: -16.631725311279297
    9. '(

' → logprob: -16.631725311279297
    10. ' (' → logprob: -16.756725311279297

Token 150: '(_' (ID: 4963)
  Prédit: '(_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(_' → logprob: -0.0006974232383072376
    2. '(' → logprob: -7.500697612762451
    3. '_re' → logprob: -8.875697135925293
    4. ' (_' → logprob: -12.625697135925293
    5. ')(_' → logprob: -15.000697135925293
    6. '(re' → logprob: -15.250697135925293
    7. '([' → logprob: -15.625697135925293
    8. ' _' → logprob: -15.750697135925293
    9. '(Re' → logprob: -15.750697135925293
    10. '_' → logprob: -16.62569808959961

Token 151: 're' (ID: 264)
  Prédit: '_re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -2.618001053633634e-05
    2. 're' → logprob: -10.625025749206543
    3. '_r' → logprob: -13.375025749206543
    4. 'Re' → logprob: -17.37502670288086
    5. ' _' → logprob: -17.62502670288086
    6. '_res' → logprob: -17.62502670288086
    7. '_' → logprob: -17.75002670288086
    8. 'result' → logprob: -17.87502670288086
    9. 'r' → logprob: -17.87502670288086
    10. '_result' → logprob: -18.00002670288086

Token 152: 'Z' (ID: 57)
  Prédit: 'Z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Z' → logprob: -0.0005043004639446735
    2. 'z' → logprob: -8.250504493713379
    3. 'ult' → logprob: -8.750504493713379
    4. '_Z' → logprob: -10.250504493713379
    5. '_z' → logprob: -10.875504493713379
    6. '_' → logprob: -11.000504493713379
    7. 'З' → logprob: -12.625504493713379
    8. 's' → logprob: -12.875504493713379
    9. 'ut' → logprob: -13.375504493713379
    10. 'ul' → logprob: -14.125504493713379

Token 153: 'ult' (ID: 576)
  Prédit: 'ult'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ult' → logprob: -4.723352049040841e-06
    2. 'lt' → logprob: -12.750004768371582
    3. ' ult' → logprob: -13.625004768371582
    4. 'ul' → logprob: -14.875004768371582
    5. 'ut' → logprob: -15.875004768371582
    6. 'Ult' → logprob: -17.250003814697266
    7. 's' → logprob: -17.375003814697266
    8. '_' → logprob: -17.625003814697266
    9. 'alt' → logprob: -18.500003814697266
    10. 'ульт' → logprob: -18.625003814697266

Token 154: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.8087270038668066e-05
    2. '))' → logprob: -10.500027656555176
    3. ' )' → logprob: -14.875027656555176
    4. ')`' → logprob: -16.625028610229492
    5. '())' → logprob: -17.750028610229492
    6. ')
' → logprob: -18.500028610229492
    7. ')}' → logprob: -19.375028610229492
    8. ')))' → logprob: -19.500028610229492
    9. '()' → logprob: -20.250028610229492
    10. '})' → logprob: -20.500028610229492


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 152
Tokens correctement prédits (1ère position, stricte): 67
Tokens correctement prédits (1ère position, avec adaptation): 68
Tokens correctement prédits (top 10): 112
Précision stricte (1ère position): 44.08%
Précision adaptée (1ère position): 44.74%
Précision (top 10): 73.68%
================================================================================
